================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:19:49
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class Score:
    def __init__(self, math: int, english: int, japanese: int):
        self.math = math
        self.english = english
        self.japanese = japanese

    def has_perfect_score(self) -> bool:
        return 100 in (self.math, self.english, self.japanese)

    def average(self) -> float:
        return (self.math + self.english + self.japanese) / 3

    def math_english_average(self) -> float:
        return (self.math + self.english) / 2


class ClassificationRule:
    def __init__(self, check_fn, level: int, class_name: str):
        self.check_fn = check_fn
        self.level = level
        self.class_name = class_name

    def matches(self, score: Score) -> bool:
        return self.check_fn(score)


class Classifier:
    def __init__(self):
        # Defined from highest level (1) to lowest
        self.rules = [
            ClassificationRule(lambda s: s.has_perfect_score(), 1, "A"),
            ClassificationRule(lambda s: s.math_english_average() >= 90, 1, "A"),
            ClassificationRule(lambda s: s.average() >= 80, 1, "A"),
            ClassificationRule(lambda s: s.average() >= 70, 2, "B"),
            ClassificationRule(lambda s: s.average() >= 50 and (s.math >= 80 or s.english >= 80), 2, "B"),
            ClassificationRule(lambda s: True, 3, "C"),
        ]

    def classify(self, score: Score) -> str:
        matched_rules = [rule for rule in self.rules if rule.matches(score)]
        best_rule = min(matched_rules, key=lambda r: r.level)
        return best_rule.class_name


class Dataset:
    def __init__(self, scores: list[Score]):
        self.scores = scores
        self.classifier = Classifier()

    def classify_all(self) -> list[str]:
        return [self.classifier.classify(score) for score in self.scores]


class InputReader:
    def __init__(self):
        pass

    def read_datasets(self) -> list[Dataset]:
        datasets = []
        while True:
            try:
                n = int(input())
            except EOFError:
                break
            if n == 0:
                break
            scores = []
            for _ in range(n):
                pm, pe, pj = map(int, input().split())
                scores.append(Score(pm, pe, pj))
            datasets.append(Dataset(scores))
        return datasets


class SolutionRunner:
    def __init__(self):
        self.reader = InputReader()

    def run(self):
        datasets = self.reader.read_datasets()
        for dataset in datasets:
            results = dataset.classify_all()
            for r in results:
                print(r)


if __name__ == "__main__":
    SolutionRunner().run()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Score' (ID: 30731)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.37756139039993286
    2. '(' → logprob: -1.252561330795288
    3. '   ' → logprob: -4.252561569213867
    4. '```' → logprob: -4.877561569213867
    5. '():' → logprob: -5.877561569213867
    6. '.' → logprob: -7.002561569213867
    7. '\' → logprob: -7.002561569213867
    8. ' ' → logprob: -7.877561569213867
    9. ':
' → logprob: -8.377561569213867
    10. ''' → logprob: -8.627561569213867

Token 4: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7162910103797913
    2. '(' → logprob: -1.2162909507751465
    3. '```' → logprob: -2.5912909507751465
    4. '_' → logprob: -2.9662909507751465
    5. 'def' (adapté à ' def') → logprob: -3.4662909507751465
    6. ':' → logprob: -3.7162909507751465
    7. ' def' → logprob: -4.5912909507751465
    8. '\' → logprob: -4.8412909507751465
    9. ''' → logprob: -5.9662909507751465
    10. ' ' → logprob: -6.0912909507751465

Token 5: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3695595860481262
    2. ' __' → logprob: -1.8695595264434814
    3. ' ' → logprob: -2.8695595264434814
    4. '__' → logprob: -2.9945595264434814
    5. ' calculate' → logprob: -3.3695595264434814
    6. ' init' → logprob: -5.7445597648620605
    7. ' ​' → logprob: -6.8695597648620605
    8. '_' → logprob: -6.9945597648620605
    9. ' add' → logprob: -7.1195597648620605
    10. ' )' → logprob: -7.3695597648620605

Token 6: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.688212614681106e-05
    2. ' init' → logprob: -11.500017166137695
    3. '_init' → logprob: -12.000017166137695
    4. 'ini' → logprob: -15.375017166137695
    5. 'i' → logprob: -16.625017166137695
    6. '_' → logprob: -16.750017166137695
    7. '	init' → logprob: -17.000017166137695
    8. '__' → logprob: -17.375017166137695
    9. '_i' → logprob: -17.375017166137695
    10. 'in' → logprob: -18.125017166137695

Token 7: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.08952462673187256
    2. '__' → logprob: -2.839524745941162
    3. '(' → logprob: -3.714524745941162
    4. '__(
' → logprob: -6.339524745941162
    5. '_' → logprob: -7.714524745941162
    6. '(self' → logprob: -8.339524269104004
    7. '__((' → logprob: -8.714524269104004
    8. '_(' → logprob: -9.589524269104004
    9. '__('' → logprob: -10.339524269104004
    10. '```' → logprob: -10.339524269104004

Token 8: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0029174534138292074
    2. ' self' → logprob: -5.877917289733887
    3. '(self' → logprob: -9.877917289733887
    4. ')' → logprob: -10.002917289733887
    5. ' )' → logprob: -12.252917289733887
    6. ' ' → logprob: -13.002917289733887
    7. '_self' → logprob: -13.502917289733887
    8. 's' → logprob: -13.877917289733887
    9. ',self' → logprob: -14.127917289733887
    10. ''s' → logprob: -14.377917289733887

Token 9: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7467290759086609
    2. ')' → logprob: -0.8717290759086609
    3. '_' → logprob: -2.8717291355133057
    4. '.' → logprob: -3.8717291355133057
    5. '(' → logprob: -4.746728897094727
    6. ' )' → logprob: -4.996728897094727
    7. ' ,' → logprob: -5.871728897094727
    8. 'self' → logprob: -5.871728897094727
    9. ' ' → logprob: -5.996728897094727
    10. '<|end|>' → logprob: -6.371728897094727

Token 10: ' math' (ID: 13324)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.08977734297513962
    2. ' self' → logprob: -2.5897772312164307
    3. ' )' → logprob: -5.33977746963501
    4. 'score' → logprob: -5.58977746963501
    5. ')' → logprob: -6.33977746963501
    6. 's' → logprob: -8.214776992797852
    7. ' score' → logprob: -9.089776992797852
    8. 'player' → logprob: -10.089776992797852
    9. 'sc' → logprob: -11.464776992797852
    10. ' player' → logprob: -11.464776992797852

Token 11: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8566070795059204
    2. '):' → logprob: -0.9816070795059204
    3. ')' → logprob: -2.231606960296631
    4. '_score' → logprob: -2.856606960296631
    5. '_' → logprob: -3.856606960296631
    6. '_scores' → logprob: -4.606606960296631
    7. ' ,' → logprob: -6.856606960296631
    8. ':' → logprob: -7.231606960296631
    9. ' )' → logprob: -7.606606960296631
    10. ' ):' → logprob: -8.106607437133789

Token 12: ' int' (ID: 677)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9943035244941711
    2. ',' → logprob: -1.1193034648895264
    3. ' )' → logprob: -2.1193034648895264
    4. '_score' → logprob: -3.3693034648895264
    5. 'int' → logprob: -3.6193034648895264
    6. ':' → logprob: -3.8693034648895264
    7. '):' → logprob: -4.1193037033081055
    8. ' ,' → logprob: -4.3693037033081055
    9. 'score' → logprob: -4.4943037033081055
    10. '_scores' → logprob: -4.4943037033081055

Token 13: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03580229729413986
    2. '):' → logprob: -3.5358023643493652
    3. ')' → logprob: -5.160802364349365
    4. ' ,' → logprob: -8.660801887512207
    5. ',int' → logprob: -10.285801887512207
    6. ':' → logprob: -11.160801887512207
    7. '   ' → logprob: -11.160801887512207
    8. '=' → logprob: -11.285801887512207
    9. '<|end|>' → logprob: -11.285801887512207
    10. ',
' → logprob: -11.660801887512207

Token 14: ' english' (ID: 37785)
  Prédit: ' physics'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' physics' → logprob: -0.19823767244815826
    2. ' english' → logprob: -1.823237657546997
    3. ' science' → logprob: -4.948237895965576
    4. ' language' → logprob: -5.073237895965576
    5. 'physics' → logprob: -6.448237895965576
    6. 'english' → logprob: -7.323237895965576
    7. ' English' → logprob: -7.573237895965576
    8. ' ' → logprob: -7.573237895965576
    9. ' history' → logprob: -7.698237895965576
    10. 'science' → logprob: -8.448237419128418

Token 15: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2802412807941437
    2. ':' → logprob: -2.1552412509918213
    3. ',' → logprob: -2.2802412509918213
    4. ')' → logprob: -3.6552412509918213
    5. '   ' → logprob: -9.155241012573242
    6. '):
' → logprob: -9.655241012573242
    7. '=' → logprob: -9.905241012573242
    8. '```' → logprob: -9.905241012573242
    9. ' ):' → logprob: -10.655241012573242
    10. ' ,' → logprob: -11.155241012573242

Token 16: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.2811923623085022
    2. 'int' → logprob: -1.4061923027038574
    3. ' ' → logprob: -11.406192779541016
    4. ')' → logprob: -11.906192779541016
    5. ':int' → logprob: -11.906192779541016
    6. '[int' → logprob: -12.156192779541016
    7. '=int' → logprob: -12.781192779541016
    8. '(int' → logprob: -13.156192779541016
    9. '	int' → logprob: -13.281192779541016
    10. ' ' → logprob: -13.406192779541016

Token 17: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11032760143280029
    2. ',' → logprob: -2.36032772064209
    3. ')' → logprob: -4.61032772064209
    4. ':' → logprob: -10.11032772064209
    5. '):
' → logprob: -10.36032772064209
    6. '   ' → logprob: -10.98532772064209
    7. ' ):' → logprob: -11.73532772064209
    8. ' ,' → logprob: -12.23532772064209
    9. '),' → logprob: -12.36032772064209
    10. ' ' → logprob: -12.73532772064209

Token 18: ' japanese' (ID: 101297)
  Prédit: ' science'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' science' → logprob: -0.716335117816925
    2. ' history' → logprob: -0.841335117816925
    3. ' physics' → logprob: -3.2163350582122803
    4. 'science' → logprob: -4.466335296630859
    5. ')' → logprob: -4.591335296630859
    6. 'history' → logprob: -4.716335296630859
    7. ' computer' → logprob: -5.591335296630859
    8. ' )' → logprob: -5.966335296630859
    9. ' ' → logprob: -6.216335296630859
    10. ' python' → logprob: -8.46633529663086

Token 19: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.26712340116500854
    2. ':' → logprob: -1.7671234607696533
    3. ')' → logprob: -2.8921234607696533
    4. ',' → logprob: -4.892123222351074
    5. '):
' → logprob: -8.767123222351074
    6. '   ' → logprob: -9.017123222351074
    7. ' ):' → logprob: -9.267123222351074
    8. '```' → logprob: -9.517123222351074
    9. ''):' → logprob: -9.892123222351074
    10. ' ' → logprob: -10.642123222351074

Token 20: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3486280143260956
    2. ' int' → logprob: -1.223628044128418
    3. ')' → logprob: -8.848628044128418
    4. ':int' → logprob: -10.973628044128418
    5. '(int' → logprob: -12.348628044128418
    6. ' ' → logprob: -12.348628044128418
    7. ' )' → logprob: -12.473628044128418
    8. '	int' → logprob: -13.223628044128418
    9. '[int' → logprob: -13.598628044128418
    10. '):' → logprob: -13.598628044128418

Token 21: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006460758158937097
    2. ')' → logprob: -7.500646114349365
    3. '):
' → logprob: -10.375645637512207
    4. ':' → logprob: -10.375645637512207
    5. ',' → logprob: -11.375645637512207
    6. '   ' → logprob: -11.500645637512207
    7. '```' → logprob: -12.375645637512207
    8. ''):' → logprob: -12.875645637512207
    9. ' ):' → logprob: -14.375645637512207
    10. '"):' → logprob: -15.250645637512207

Token 22: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0057036192156374454
    2. '   ' → logprob: -5.505703449249268
    3. 'self' → logprob: -7.505703449249268
    4. '\n' → logprob: -8.255703926086426
    5. '    ' → logprob: -8.755703926086426
    6. '<|end|>' → logprob: -8.755703926086426
    7. '        
' → logprob: -8.880703926086426
    8. '```' → logprob: -9.505703926086426
    9. '\' → logprob: -9.630703926086426
    10. 'newline' → logprob: -10.255703926086426

Token 23: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.32915636897087097
    2. '       ' → logprob: -1.5791563987731934
    3. '        ' → logprob: -3.3291563987731934
    4. ' self' → logprob: -3.7041563987731934
    5. '           ' → logprob: -5.079156398773193
    6. '```' → logprob: -5.954156398773193
    7. '   ' → logprob: -6.829156398773193
    8. '        
' → logprob: -7.454156398773193
    9. '         ' → logprob: -7.579156398773193
    10. '\' → logprob: -7.579156398773193

Token 24: '.math' (ID: 35319)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03812984377145767
    2. '.math' → logprob: -3.2881298065185547
    3. '.score' → logprob: -10.413129806518555
    4. ' .' → logprob: -10.788129806518555
    5. ' math' → logprob: -11.663129806518555
    6. '_math' → logprob: -11.788129806518555
    7. 'math' → logprob: -12.538129806518555
    8. '.school' → logprob: -12.788129806518555
    9. '.s' → logprob: -13.288129806518555
    10. '.Math' → logprob: -13.663129806518555

Token 25: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.030546849593520164
    2. ' =' → logprob: -3.5305469036102295
    3. ',' → logprob: -7.90554666519165
    4. '<|end|>' → logprob: -8.530547142028809
    5. '_' → logprob: -9.530547142028809
    6. ')' → logprob: -9.780547142028809
    7. '.' → logprob: -11.030547142028809
    8. ' ' → logprob: -11.280547142028809
    9. ' ,' → logprob: -11.780547142028809
    10. '   ' → logprob: -11.905547142028809

Token 26: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.313262403011322
    2. 'math' → logprob: -1.3132624626159668
    3. '.math' → logprob: -15.438261985778809
    4. '(math' → logprob: -15.563261985778809
    5. '_math' → logprob: -16.188262939453125
    6. ' ' → logprob: -16.563262939453125
    7. ' maths' → logprob: -17.188262939453125
    8. ' ' → logprob: -17.313262939453125
    9. 'Math' → logprob: -17.813262939453125
    10. '0' → logprob: -18.063262939453125

Token 27: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 28: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6514858603477478
    2. ',' → logprob: -1.5264859199523926
    3. '<|end|>' → logprob: -1.5264859199523926
    4. ')' → logprob: -4.901485919952393
    5. '        ' → logprob: -5.276485919952393
    6. '_' → logprob: -5.276485919952393
    7. ' ' → logprob: -5.651485919952393
    8. '    ' → logprob: -5.651485919952393
    9. '```' → logprob: -5.776485919952393
    10. '        
' → logprob: -5.901485919952393

Token 29: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.9478510618209839
    2. '       ' → logprob: -1.1978510618209839
    3. 'self' (adapté à ' self') → logprob: -1.1978510618209839
    4. '        ' → logprob: -5.822851181030273
    5. ',' → logprob: -6.072851181030273
    6. ' ' → logprob: -6.947851181030273
    7. ' ' → logprob: -7.197851181030273
    8. '        
' → logprob: -7.697851181030273
    9. '    ' → logprob: -8.322851181030273
    10. '```' → logprob: -8.697851181030273

Token 30: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00017481597024016082
    2. ' .' → logprob: -8.750174522399902
    3. 'english' → logprob: -12.000174522399902
    4. '.eng' → logprob: -12.000174522399902
    5. '.math' → logprob: -13.125174522399902
    6. ' english' → logprob: -14.750174522399902
    7. '​.' → logprob: -14.875174522399902
    8. '.j' → logprob: -15.125174522399902
    9. '.en' → logprob: -15.625174522399902
    10. '```' → logprob: -15.875174522399902

Token 31: 'english' (ID: 64215)
  Prédit: 'english'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'english' → logprob: -1.9146995327901095e-05
    2. 'eng' → logprob: -11.625019073486328
    3. 'math' → logprob: -11.625019073486328
    4. 'engl' → logprob: -14.625019073486328
    5. ' english' → logprob: -14.875019073486328
    6. 'English' → logprob: -14.875019073486328
    7. 'en' → logprob: -17.500019073486328
    8. 'python' → logprob: -18.000019073486328
    9. 'e' → logprob: -18.375019073486328
    10. 'j' → logprob: -18.750019073486328

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023259803652763367
    2. '=' → logprob: -3.7732598781585693
    3. ' ' → logprob: -12.148260116577148
    4. '<|end|>' → logprob: -13.023260116577148
    5. ')' → logprob: -13.148260116577148
    6. '_' → logprob: -13.648260116577148
    7. ' =
' → logprob: -13.898260116577148
    8. '.' → logprob: -14.648260116577148
    9. ' =)' → logprob: -15.023260116577148
    10. ' ,' → logprob: -15.148260116577148

Token 33: ' english' (ID: 37785)
  Prédit: ' english'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' english' → logprob: -0.10024667531251907
    2. 'english' → logprob: -2.3502466678619385
    3. ' English' → logprob: -10.22524642944336
    4. ' ' → logprob: -12.97524642944336
    5. ' ' → logprob: -14.47524642944336
    6. ' engl' → logprob: -14.97524642944336
    7. 'English' → logprob: -15.60024642944336
    8. ' eng' → logprob: -16.72524642944336
    9. 'eng' → logprob: -16.85024642944336
    10. ' англий' → logprob: -17.22524642944336

Token 34: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004444481804966927
    2. 'self' → logprob: -5.629444599151611
    3. '```' → logprob: -8.004444122314453
    4. '\' → logprob: -9.254444122314453
    5. '<|end|>' → logprob: -9.379444122314453
    6. '\n' → logprob: -9.629444122314453
    7. '`' → logprob: -9.754444122314453
    8. ' self' → logprob: -9.754444122314453
    9. '        
' → logprob: -9.879444122314453
    10. 'newline' → logprob: -10.129444122314453

Token 35: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22783632576465607
    2. 'self' → logprob: -1.6028363704681396
    3. ' self' → logprob: -6.2278361320495605
    4. '        
' → logprob: -9.352836608886719
    5. '<|end|>' → logprob: -9.352836608886719
    6. '```' → logprob: -9.477836608886719
    7. '   ' → logprob: -9.977836608886719
    8. ' ' → logprob: -10.727836608886719
    9. ' ' → logprob: -10.852836608886719
    10. '        ' → logprob: -10.977836608886719

Token 36: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25242388248443604
    2. 'self' (adapté à ' self') → logprob: -1.502423882484436
    3. ' self' → logprob: -7.6274237632751465
    4. '   ' → logprob: -13.002424240112305
    5. '	self' → logprob: -13.627424240112305
    6. '```' → logprob: -13.627424240112305
    7. '      ' → logprob: -14.002424240112305
    8. '\' → logprob: -14.752424240112305
    9. ' ' → logprob: -15.127424240112305
    10. '     ' → logprob: -15.252424240112305

Token 37: '.j' (ID: 1760)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.000496436667162925
    2. '.j' → logprob: -8.000496864318848
    3. ' .' → logprob: -9.125496864318848
    4. '.math' → logprob: -10.500496864318848
    5. '=' → logprob: -11.625496864318848
    6. ' =' → logprob: -12.375496864318848
    7. '.=' → logprob: -12.875496864318848
    8. '.n' → logprob: -13.750496864318848
    9. '.python' → logprob: -13.750496864318848
    10. '.jp' → logprob: -13.750496864318848

Token 38: 'apanese' (ID: 53412)
  Prédit: 'apanese'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apanese' → logprob: -0.32139113545417786
    2. 'a' → logprob: -1.3213911056518555
    3. 'apan' → logprob: -5.0713911056518555
    4. 'ap' → logprob: -6.5713911056518555
    5. 'apa' → logprob: -7.8213911056518555
    6. 'apen' → logprob: -11.571391105651855
    7. '```' → logprob: -12.321391105651855
    8. 'apo' → logprob: -13.571391105651855
    9. 'apon' → logprob: -13.696391105651855
    10. 'apas' → logprob: -14.071391105651855

Token 39: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10026156902313232
    2. ' =' → logprob: -2.350261688232422
    3. ')' → logprob: -10.600261688232422
    4. '.' → logprob: -10.850261688232422
    5. '<|end|>' → logprob: -12.600261688232422
    6. '_' → logprob: -13.100261688232422
    7. '.=' → logprob: -13.975261688232422
    8. ' =
' → logprob: -14.225261688232422
    9. '=
' → logprob: -14.475261688232422
    10. ',' → logprob: -14.475261688232422

Token 40: ' japanese' (ID: 101297)
  Prédit: ' japanese'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' japanese' → logprob: -0.07899785041809082
    2. 'j' → logprob: -2.578997850418091
    3. ' japan' → logprob: -9.953997611999512
    4. ' ' → logprob: -10.328997611999512
    5. ' j' → logprob: -11.953997611999512
    6. ' Japanese' → logprob: -11.953997611999512
    7. '	j' → logprob: -12.453997611999512
    8. ' jap' → logprob: -12.703997611999512
    9. ' japon' → logprob: -13.078997611999512
    10. '  ' → logprob: -13.953997611999512

Token 41: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09101710468530655
    2. '   ' → logprob: -2.591017007827759
    3. '\n' → logprob: -5.341017246246338
    4. '    
' → logprob: -6.091017246246338
    5. ' 
' → logprob: -6.966017246246338
    6. ' ' → logprob: -7.091017246246338
    7. '<|end|>' → logprob: -7.091017246246338
    8. '\' → logprob: -7.216017246246338
    9. '  
' → logprob: -7.966017246246338
    10. 'n' → logprob: -8.59101676940918

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.057478923350572586
    2. '
' → logprob: -3.807478904724121
    3. '    
' → logprob: -4.057478904724121
    4. ' 
' → logprob: -4.557478904724121
    5. ' ' → logprob: -5.932478904724121
    6. '  
' → logprob: -7.557478904724121
    7. '\n' → logprob: -7.807478904724121
    8. '   
' → logprob: -8.057478904724121
    9. '```' → logprob: -8.182478904724121
    10. 'def' → logprob: -8.182478904724121

Token 43: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.10758988559246063
    2. '   ' → logprob: -2.7325899600982666
    3. ' def' → logprob: -3.9825899600982666
    4. 'd' → logprob: -4.1075897216796875
    5. ' ' → logprob: -6.6075897216796875
    6. '    
' → logprob: -8.607589721679688
    7. ' 
' → logprob: -9.357589721679688
    8. '    ' → logprob: -9.857589721679688
    9. '
' → logprob: -9.982589721679688
    10. ' d' → logprob: -10.482589721679688

Token 44: ' has' (ID: 853)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.41323214769363403
    2. ' calculate' → logprob: -2.0382320880889893
    3. ' total' → logprob: -2.1632320880889893
    4. ' space' → logprob: -2.6632320880889893
    5. ' get' → logprob: -4.163232326507568
    6. '_' → logprob: -6.163232326507568
    7. ' average' → logprob: -6.288232326507568
    8. ' compute' → logprob: -7.163232326507568
    9. ' ```' → logprob: -7.413232326507568
    10. 'space' → logprob: -7.913232326507568

Token 45: '_per' (ID: 10938)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.005498291924595833
    2. '_pass' → logprob: -6.00549840927124
    3. '_space' → logprob: -6.63049840927124
    4. '_a' → logprob: -7.50549840927124
    5. '_score' → logprob: -7.75549840927124
    6. '_p' → logprob: -8.880497932434082
    7. 'attr' → logprob: -9.255497932434082
    8. '_attr' → logprob: -9.255497932434082
    9. '_key' → logprob: -9.630497932434082
    10. ' _' → logprob: -10.130497932434082

Token 46: 'fect' (ID: 3267)
  Prédit: 'fect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fect' → logprob: -0.0604671910405159
    2. 'f' → logprob: -3.43546724319458
    3. 'centage' → logprob: -4.18546724319458
    4. 'formance' → logprob: -6.06046724319458
    5. 'fec' → logprob: -6.18546724319458
    6. 'fection' → logprob: -6.31046724319458
    7. 'fe' → logprob: -6.81046724319458
    8. 's' → logprob: -6.93546724319458
    9. 'haps' → logprob: -7.18546724319458
    10. 'fected' → logprob: -7.31046724319458

Token 47: '_score' (ID: 22555)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.004427389707416296
    2. '_score' → logprob: -5.504427433013916
    3. '_s' → logprob: -8.254426956176758
    4. 's' → logprob: -10.129426956176758
    5. '_scores' → logprob: -10.754426956176758
    6. '__' → logprob: -11.504426956176758
    7. 'score' → logprob: -12.754426956176758
    8. '_sc' → logprob: -12.879426956176758
    9. '()' → logprob: -13.129426956176758
    10. '(self' → logprob: -13.379426956176758

Token 48: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1010243147611618
    2. '(self' → logprob: -2.3510243892669678
    3. '_' → logprob: -8.226024627685547
    4. 's' → logprob: -8.476024627685547
    5. '(s' → logprob: -8.851024627685547
    6. '_(' → logprob: -9.726024627685547
    7. 'self' → logprob: -9.976024627685547
    8. '(
' → logprob: -10.351024627685547
    9. '(

' → logprob: -11.351024627685547
    10. ' (' → logprob: -11.851024627685547

Token 49: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.034497376531362534
    2. ')' → logprob: -3.9094972610473633
    3. 'self' → logprob: -4.784497261047363
    4. ',' → logprob: -5.284497261047363
    5. '(self' → logprob: -8.909497261047363
    6. ' ):' → logprob: -9.034497261047363
    7. '   ' → logprob: -10.284497261047363
    8. '):
' → logprob: -10.409497261047363
    9. ':' → logprob: -10.659497261047363
    10. ' self' → logprob: -10.784497261047363

Token 50: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.42676180601119995
    2. '(self' → logprob: -1.5517618656158447
    3. '(' → logprob: -2.0517618656158447
    4. '():' → logprob: -5.926761627197266
    5. '):' → logprob: -6.301761627197266
    6. ')' → logprob: -7.301761627197266
    7. ' :' → logprob: -7.426761627197266
    8. '   ' → logprob: -8.176761627197266
    9. '(
' → logprob: -8.551761627197266
    10. ' ->' → logprob: -8.676761627197266

Token 51: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.02296113222837448
    2. 'bool' → logprob: -4.022961139678955
    3. ' ' → logprob: -5.397961139678955
    4. ' True' → logprob: -9.272960662841797
    5. ' None' → logprob: -9.522960662841797
    6. '  ' → logprob: -10.897960662841797
    7. ' str' → logprob: -11.397960662841797
    8. ' int' → logprob: -11.522960662841797
    9. ' ' → logprob: -11.772960662841797
    10. ' "' → logprob: -12.022960662841797

Token 52: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007385154603980482
    2. '):' → logprob: -7.500738620758057
    3. '():' → logprob: -9.500738143920898
    4. ':
' → logprob: -9.500738143920898
    5. ':return' → logprob: -11.375738143920898
    6. ':**' → logprob: -12.000738143920898
    7. '(' → logprob: -12.250738143920898
    8. '(self' → logprob: -12.625738143920898
    9. ' :' → logprob: -12.750738143920898
    10. '   ' → logprob: -13.625738143920898

Token 53: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002730336505919695
    2. '   ' → logprob: -7.002730369567871
    3. '    ' → logprob: -7.377730369567871
    4. ' ' → logprob: -8.127730369567871
    5. '
' → logprob: -9.127730369567871
    6. ' 
' → logprob: -9.377730369567871
    7. ':' → logprob: -9.502730369567871
    8. ' return' → logprob: -9.627730369567871
    9. '\n' → logprob: -9.752730369567871
    10. '        ' → logprob: -9.877730369567871

Token 54: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03871719539165497
    2. '       ' → logprob: -3.538717269897461
    3. ' return' → logprob: -4.788717269897461
    4. 'if' → logprob: -8.038717269897461
    5. 'for' → logprob: -8.413717269897461
    6. '   ' → logprob: -10.538717269897461
    7. ' for' → logprob: -11.538717269897461
    8. ' if' → logprob: -11.788717269897461
    9. '```' → logprob: -12.538717269897461
    10. ' ' → logprob: -12.538717269897461

Token 55: ' ' (ID: 220)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.00696104671806097
    2. 'self' → logprob: -5.006960868835449
    3. ' all' → logprob: -8.88196086883545
    4. ' any' → logprob: -9.63196086883545
    5. '(self' → logprob: -11.00696086883545
    6. ' (' → logprob: -11.63196086883545
    7. ' ' → logprob: -12.00696086883545
    8. ' sel' → logprob: -12.63196086883545
    9. ' ' → logprob: -13.13196086883545
    10. '   ' → logprob: -13.88196086883545

Token 56: '100' (ID: 1353)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03624800220131874
    2. ' self' → logprob: -3.536247968673706
    3. '(self' → logprob: -5.286248207092285
    4. '100' → logprob: -7.161248207092285
    5. 'any' → logprob: -8.411248207092285
    6. 'all' → logprob: -8.661248207092285
    7. ' any' → logprob: -10.411248207092285
    8. '90' → logprob: -10.411248207092285
    9. ' (' → logprob: -10.661248207092285
    10. '   ' → logprob: -10.661248207092285

Token 57: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0837692841887474
    2. ' ' → logprob: -2.8337693214416504
    3. ' ==' → logprob: -4.33376932144165
    4. 'in' → logprob: -5.95876932144165
    5. ' if' → logprob: -6.70876932144165
    6. '   ' → logprob: -6.95876932144165
    7. '    ' → logprob: -7.20876932144165
    8. '  ' → logprob: -7.20876932144165
    9. ' and' → logprob: -7.83376932144165
    10. '=' → logprob: -8.208768844604492

Token 58: ' (' (ID: 350)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.7818981409072876
    2. '[self' → logprob: -1.0318981409072876
    3. '[' → logprob: -1.7818981409072876
    4. '(self' → logprob: -4.781898021697998
    5. ' (' → logprob: -5.281898021697998
    6. '{' → logprob: -5.781898021697998
    7. ' ' → logprob: -7.781898021697998
    8. '[
' → logprob: -8.031898498535156
    9. ' self' → logprob: -8.781898498535156
    10. ' {' → logprob: -8.906898498535156

Token 59: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0022261450067162514
    2. '[self' → logprob: -6.37722635269165
    3. ' self' → logprob: -8.002225875854492
    4. '(self' → logprob: -9.502225875854492
    5. '[' → logprob: -9.752225875854492
    6. '           ' → logprob: -10.002225875854492
    7. ' [' → logprob: -13.127225875854492
    8. 'sel' → logprob: -13.252225875854492
    9. '[
' → logprob: -13.252225875854492
    10. '	self' → logprob: -13.877225875854492

Token 60: '.math' (ID: 35319)
  Prédit: '.math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.math' → logprob: -0.0003392767102923244
    2. '.' → logprob: -8.00033950805664
    3. '.mat' → logprob: -13.00033950805664
    4. '.Math' → logprob: -14.37533950805664
    5. ' .' → logprob: -14.62533950805664
    6. '.python' → logprob: -16.00033950805664
    7. '.
' → logprob: -16.62533950805664
    8. 'math' → logprob: -16.75033950805664
    9. ').' → logprob: -16.87533950805664
    10. '.numpy' → logprob: -17.25033950805664

Token 61: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005600620643235743
    2. ' ,' → logprob: -7.500560283660889
    3. ',
' → logprob: -12.00055980682373
    4. ',self' → logprob: -14.62555980682373
    5. ',

' → logprob: -15.62555980682373
    6. '       ' → logprob: -15.75055980682373
    7. '   ' → logprob: -16.125560760498047
    8. ' ,
' → logprob: -18.375560760498047
    9. '),' → logprob: -18.500560760498047
    10. ',",' → logprob: -18.750560760498047

Token 62: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.08145680278539658
    2. 'self' → logprob: -2.5814568996429443
    3. ' ' → logprob: -6.456456661224365
    4. '        ' → logprob: -7.456456661224365
    5. ' ' → logprob: -7.956456661224365
    6. '         ' → logprob: -10.206457138061523
    7. '       ' → logprob: -12.331457138061523
    8. ')' → logprob: -12.456457138061523
    9. '```' → logprob: -12.706457138061523
    10. ' 
' → logprob: -12.706457138061523

Token 63: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -5.438573680294212e-06
    2. ' .' → logprob: -12.250005722045898
    3. '.j' → logprob: -15.625005722045898
    4. ',' → logprob: -16.0000057220459
    5. 'english' → logprob: -16.1250057220459
    6. '.math' → logprob: -16.2500057220459
    7. '.eng' → logprob: -16.6250057220459
    8. '._' → logprob: -18.5000057220459
    9. '.python' → logprob: -18.6250057220459
    10. ')' → logprob: -18.7500057220459

Token 64: 'english' (ID: 64215)
  Prédit: 'english'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'english' → logprob: -2.999452772201039e-05
    2. 'eng' → logprob: -11.125029563903809
    3. 'math' → logprob: -12.375029563903809
    4. 'ng' → logprob: -12.375029563903809
    5. 'engl' → logprob: -12.375029563903809
    6. 'English' → logprob: -14.125029563903809
    7. ' english' → logprob: -14.500029563903809
    8. 'j' → logprob: -14.875029563903809
    9. 'python' → logprob: -15.250029563903809
    10. 'anglais' → logprob: -15.750029563903809

Token 65: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019579214858822525
    2. ' ,' → logprob: -8.875195503234863
    3. ',self' → logprob: -10.125195503234863
    4. ')' → logprob: -11.625195503234863
    5. ',
' → logprob: -12.375195503234863
    6. 'self' → logprob: -14.375195503234863
    7. '       ' → logprob: -14.750195503234863
    8. '   ' → logprob: -15.125195503234863
    9. ',

' → logprob: -15.500195503234863
    10. ',s' → logprob: -16.12519645690918

Token 66: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.38700631260871887
    2. 'self' → logprob: -1.1370062828063965
    3. ' ' → logprob: -10.262006759643555
    4. '        ' → logprob: -10.637006759643555
    5. ' ' → logprob: -11.137006759643555
    6. ')' → logprob: -11.512006759643555
    7. '       ' → logprob: -11.637006759643555
    8. '               ' → logprob: -11.762006759643555
    9. '```' → logprob: -11.762006759643555
    10. '	self' → logprob: -12.137006759643555

Token 67: '.j' (ID: 1760)
  Prédit: '.j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.j' → logprob: -0.013704207725822926
    2. '.' → logprob: -4.388704299926758
    3. ',j' → logprob: -7.888704299926758
    4. ',' → logprob: -7.888704299926758
    5. 'j' → logprob: -9.013704299926758
    6. ')' → logprob: -9.138704299926758
    7. 'Japanese' → logprob: -9.513704299926758
    8. '.)' → logprob: -10.013704299926758
    9. ').' → logprob: -11.013704299926758
    10. '.jp' → logprob: -11.388704299926758

Token 68: 'apanese' (ID: 53412)
  Prédit: 'apanese'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apanese' → logprob: -0.00016325322212651372
    2. 'ap' → logprob: -9.000163078308105
    3. 'apan' → logprob: -10.625163078308105
    4. 'pan' → logprob: -11.875163078308105
    5. 'anese' → logprob: -11.875163078308105
    6. '```' → logprob: -13.875163078308105
    7. 'apen' → logprob: -15.625163078308105
    8. ')' → logprob: -16.375164031982422
    9. 'a' → logprob: -16.625164031982422
    10. 'app' → logprob: -16.750164031982422

Token 69: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8624639324116288e-06
    2. ')
' → logprob: -13.625001907348633
    3. ' )' → logprob: -14.625001907348633
    4. '       ' → logprob: -17.250001907348633
    5. ')return' → logprob: -17.500001907348633
    6. '   ' → logprob: -17.750001907348633
    7. '))' → logprob: -18.125001907348633
    8. ')`' → logprob: -18.500001907348633
    9. '}' → logprob: -18.750001907348633
    10. '）' → logprob: -18.875001907348633

Token 70: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14204062521457672
    2. '   ' → logprob: -3.267040729522705
    3. '#' → logprob: -3.392040729522705
    4. '<|end|>' → logprob: -3.517040729522705
    5. ' ' → logprob: -5.392040729522705
    6. '.' → logprob: -5.392040729522705
    7. 'n' → logprob: -5.767040729522705
    8. 'a' → logprob: -5.892040729522705
    9. '    
' → logprob: -6.017040729522705
    10. ' 
' → logprob: -6.142040729522705

Token 71: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.055898379534482956
    2. 'def' (adapté à ' def') → logprob: -3.180898427963257
    3. '    
' → logprob: -5.430898189544678
    4. '
' → logprob: -5.555898189544678
    5. ' ' → logprob: -7.055898189544678
    6. '#' → logprob: -7.430898189544678
    7. '  ' → logprob: -7.930898189544678
    8. 's' → logprob: -8.180898666381836
    9. 'class' → logprob: -8.305898666381836
    10. '       ' → logprob: -8.305898666381836

Token 72: ' average' (ID: 7848)
  Prédit: ' average'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' average' → logprob: -0.41691893339157104
    2. ' total' → logprob: -1.1669189929962158
    3. ' get' → logprob: -4.291918754577637
    4. 'average' → logprob: -4.916918754577637
    5. 'total' → logprob: -5.291918754577637
    6. ' calculate' → logprob: -6.291918754577637
    7. ' ' → logprob: -7.166918754577637
    8. ' is' → logprob: -8.416918754577637
    9. 'get' → logprob: -8.541918754577637
    10. ' def' → logprob: -9.166918754577637

Token 73: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2551376223564148
    2. '(self' → logprob: -1.5051376819610596
    3. '()' → logprob: -6.8801374435424805
    4. '_' → logprob: -7.1301374435424805
    5. '(
' → logprob: -7.8801374435424805
    6. '_score' → logprob: -8.13013744354248
    7. ' (' → logprob: -8.50513744354248
    8. 'self' → logprob: -8.63013744354248
    9. 's' → logprob: -9.75513744354248
    10. '_self' → logprob: -10.13013744354248

Token 74: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08001021295785904
    2. '):' → logprob: -3.080010175704956
    3. ' )' → logprob: -4.580010414123535
    4. '()' → logprob: -4.580010414123535
    5. ' ' → logprob: -5.455010414123535
    6. '(' → logprob: -6.580010414123535
    7. '   ' → logprob: -6.705010414123535
    8. ' ):' → logprob: -6.955010414123535
    9. '():' → logprob: -7.205010414123535
    10. '())' → logprob: -7.580010414123535

Token 75: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.039492394775152206
    2. '(' → logprob: -3.28949236869812
    3. ':' → logprob: -7.289492607116699
    4. ' ->' → logprob: -7.789492607116699
    5. '(
' → logprob: -8.7894926071167
    6. '():' → logprob: -9.7894926071167
    7. '   ' → logprob: -10.0394926071167
    8. '->' → logprob: -10.0394926071167
    9. ' (' → logprob: -10.6644926071167
    10. 'self' → logprob: -11.1644926071167

Token 76: ' float' (ID: 4428)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.012645965442061424
    2. ' float' → logprob: -5.512646198272705
    3. '(' → logprob: -5.762646198272705
    4. ' ' → logprob: -5.887646198272705
    5. '(float' → logprob: -7.512646198272705
    6. '(self' → logprob: -7.637646198272705
    7. 'float' → logprob: -7.762646198272705
    8. ' return' → logprob: -7.887646198272705
    9. '   ' → logprob: -8.887645721435547
    10. ' (
' → logprob: -9.012645721435547

Token 77: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002611094154417515
    2. '):' → logprob: -6.75261116027832
    3. '(self' → logprob: -7.62761116027832
    4. '(' → logprob: -8.12761116027832
    5. '       ' → logprob: -8.50261116027832
    6. ' :' → logprob: -8.62761116027832
    7. ':
' → logprob: -9.00261116027832
    8. '   ' → logprob: -9.62761116027832
    9. '():' → logprob: -10.25261116027832
    10. ')' → logprob: -11.12761116027832

Token 78: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00033558503491804004
    2. ' return' → logprob: -8.750335693359375
    3. '        ' → logprob: -9.500335693359375
    4. '      ' → logprob: -10.375335693359375
    5. '    ' → logprob: -10.750335693359375
    6. '   ' → logprob: -11.375335693359375
    7. 'return' → logprob: -11.750335693359375
    8. ' ' → logprob: -11.750335693359375
    9. '     ' → logprob: -12.125335693359375
    10. ' 
' → logprob: -12.750335693359375

Token 79: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.45673617720603943
    2. '       ' → logprob: -1.2067362070083618
    3. ' return' → logprob: -2.7067360877990723
    4. 'total' → logprob: -8.08173656463623
    5. '   ' → logprob: -8.83173656463623
    6. ' total' → logprob: -9.33173656463623
    7. '```' → logprob: -10.20673656463623
    8. ' ' → logprob: -10.33173656463623
    9. 'sum' → logprob: -10.33173656463623
    10. 'r' → logprob: -10.83173656463623

Token 80: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.01418572012335062
    2. '(self' → logprob: -4.264185905456543
    3. '(s' → logprob: -11.889185905456543
    4. '(sum' → logprob: -11.889185905456543
    5. ' ' → logprob: -12.389185905456543
    6. '(' → logprob: -13.764185905456543
    7. '(super' → logprob: -14.139185905456543
    8. ' (
' → logprob: -14.389185905456543
    9. ' self' → logprob: -14.639185905456543
    10. '   ' → logprob: -14.764185905456543

Token 81: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00011641718447208405
    2. ' self' → logprob: -9.125116348266602
    3. '(self' → logprob: -11.875116348266602
    4. '       ' → logprob: -15.375116348266602
    5. '   ' → logprob: -16.2501163482666
    6. 'sel' → logprob: -17.2501163482666
    7. '
' → logprob: -17.7501163482666
    8. '```' → logprob: -17.7501163482666
    9. 'se' → logprob: -18.0001163482666
    10. '	self' → logprob: -18.2501163482666

Token 82: '.math' (ID: 35319)
  Prédit: '.math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.math' → logprob: -0.386883020401001
    2. '.' → logprob: -1.136883020401001
    3. ' .' → logprob: -11.511882781982422
    4. '.
' → logprob: -14.136882781982422
    5. '.Math' → logprob: -14.386882781982422
    6. '.mat' → logprob: -14.511882781982422
    7. 'math' → logprob: -16.761882781982422
    8. ' math' → logprob: -17.011882781982422
    9. '.self' → logprob: -17.136882781982422
    10. '.m' → logprob: -18.261882781982422

Token 83: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.007237075362354517
    2. '+' → logprob: -5.007236957550049
    3. ' ' → logprob: -7.632236957550049
    4. ' +
' → logprob: -10.507237434387207
    5. ')' → logprob: -12.507237434387207
    6. ' )' → logprob: -13.382237434387207
    7. ' ' → logprob: -13.882237434387207
    8. '    ' → logprob: -14.257237434387207
    9. ' ,' → logprob: -14.507237434387207
    10. '        ' → logprob: -14.632237434387207

Token 84: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.03368339315056801
    2. 'self' → logprob: -3.4086833000183105
    3. '<|end|>' → logprob: -11.283683776855469
    4. ' ' → logprob: -11.408683776855469
    5. '	self' → logprob: -12.158683776855469
    6. ' ' → logprob: -12.408683776855469
    7. '    ' → logprob: -13.033683776855469
    8. '```' → logprob: -14.033683776855469
    9. '_self' → logprob: -14.533683776855469
    10. '(self' → logprob: -15.658683776855469

Token 85: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00013536323967855424
    2. '+' → logprob: -10.37513542175293
    3. ')' → logprob: -10.62513542175293
    4. ' +' → logprob: -10.62513542175293
    5. ' ' → logprob: -10.87513542175293
    6. '_' → logprob: -12.00013542175293
    7. '<|end|>' → logprob: -12.25013542175293
    8. ' .' → logprob: -12.75013542175293
    9. '.python' → logprob: -12.87513542175293
    10. '.math' → logprob: -13.00013542175293

Token 86: 'english' (ID: 64215)
  Prédit: 'english'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'english' → logprob: -2.45848218582978e-06
    2. 'eng' → logprob: -13.62500286102295
    3. ' english' → logprob: -14.25000286102295
    4. 'English' → logprob: -14.75000286102295
    5. 'engl' → logprob: -15.87500286102295
    6. 'math' → logprob: -16.500001907348633
    7. '```' → logprob: -19.500001907348633
    8. ' ' → logprob: -19.875001907348633
    9. ' English' → logprob: -20.250001907348633
    10. 'anglais' → logprob: -20.500001907348633

Token 87: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.04860950633883476
    2. '+' → logprob: -3.048609495162964
    3. ' +
' → logprob: -11.298609733581543
    4. ' ' → logprob: -12.798609733581543
    5. '+
' → logprob: -13.048609733581543
    6. '```' → logprob: -13.548609733581543
    7. '+self' → logprob: -13.673609733581543
    8. '       ' → logprob: -14.423609733581543
    9. '        ' → logprob: -14.923609733581543
    10. ' ' → logprob: -14.923609733581543

Token 88: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.31328731775283813
    2. 'self' → logprob: -1.3132872581481934
    3. ' ' → logprob: -11.688287734985352
    4. '	self' → logprob: -11.688287734985352
    5. ' ' → logprob: -12.938287734985352
    6. '```' → logprob: -12.938287734985352
    7. '<|end|>' → logprob: -13.563287734985352
    8. '_self' → logprob: -14.188287734985352
    9. '       ' → logprob: -14.313287734985352
    10. '    ' → logprob: -15.313287734985352

Token 89: '.j' (ID: 1760)
  Prédit: '.j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.j' → logprob: -0.16028240323066711
    2. '.' → logprob: -1.9102823734283447
    3. '.jupiter' → logprob: -10.785282135009766
    4. '.
' → logprob: -11.535282135009766
    5. '.jp' → logprob: -11.535282135009766
    6. ' .' → logprob: -11.910282135009766
    7. '.javascript' → logprob: -13.410282135009766
    8. '‌.' → logprob: -13.660282135009766
    9. '.​' → logprob: -13.785282135009766
    10. '​.' → logprob: -13.910282135009766

Token 90: 'apanese' (ID: 53412)
  Prédit: 'apanese'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apanese' → logprob: -0.017602989450097084
    2. 'a' → logprob: -4.767602920532227
    3. 'apan' → logprob: -4.892602920532227
    4. 'ap' → logprob: -6.642602920532227
    5. 'apa' → logprob: -9.642602920532227
    6. '```' → logprob: -10.392602920532227
    7. 'apen' → logprob: -10.642602920532227
    8. 'pan' → logprob: -12.392602920532227
    9. 'apon' → logprob: -12.767602920532227
    10. 'ап' → logprob: -13.017602920532227

Token 91: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011734402505680919
    2. ' )' → logprob: -6.751173496246338
    3. ')/' → logprob: -12.75117301940918
    4. '）' → logprob: -15.75117301940918
    5. ' ' → logprob: -16.37617301940918
    6. '`)' → logprob: -17.12617301940918
    7. '   ' → logprob: -17.37617301940918
    8. '```' → logprob: -17.50117301940918
    9. '       ' → logprob: -18.75117301940918
    10. ')
' → logprob: -18.87617301940918

Token 92: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.02088775672018528
    2. '/' → logprob: -3.895887851715088
    3. ' ' → logprob: -8.14588737487793
    4. ' /
' → logprob: -10.39588737487793
    5. '3' → logprob: -11.27088737487793
    6. ' ' → logprob: -12.14588737487793
    7. ')' → logprob: -13.39588737487793
    8. '```' → logprob: -13.89588737487793
    9. '   ' → logprob: -14.52088737487793
    10. '/
' → logprob: -14.64588737487793

Token 93: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.014164921827614307
    2. ' ' → logprob: -4.264164924621582
    3. '   ' → logprob: -13.764164924621582
    4. '```' → logprob: -16.264163970947266
    5. ' ' → logprob: -16.514163970947266
    6. '  ' → logprob: -16.514163970947266
    7. '۳' → logprob: -17.764163970947266
    8. '
' → logprob: -18.139163970947266
    9. '    ' → logprob: -18.264163970947266
    10. '３' → logprob: -18.264163970947266

Token 94: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -3.1424973713001236e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -15.875031471252441
    4. '```' → logprob: -18.500030517578125
    5. '۳' → logprob: -19.375030517578125
    6. '  ' → logprob: -19.625030517578125
    7. '３' → logprob: -20.125030517578125
    8. '       ' → logprob: -20.875030517578125
    9. '    ' → logprob: -21.625030517578125
    10. '
' → logprob: -21.625030517578125

Token 95: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0043960558250546455
    2. '<|end|>' → logprob: -5.754395961761475
    3. '```' → logprob: -8.129396438598633
    4. '

' → logprob: -8.504396438598633
    5. '\n' → logprob: -8.754396438598633
    6. 'class' → logprob: -9.629396438598633
    7. ' 
' → logprob: -9.754396438598633
    8. '#' → logprob: -9.754396438598633
    9. '  
' → logprob: -9.879396438598633
    10. '    
' → logprob: -9.879396438598633

Token 96: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03154604882001877
    2. 'd' → logprob: -4.656546115875244
    3. 'class' → logprob: -5.281546115875244
    4. '#' → logprob: -5.406546115875244
    5. 'c' → logprob: -6.281546115875244
    6. '\n' → logprob: -6.531546115875244
    7. ' 
' → logprob: -6.781546115875244
    8. '' → logprob: -6.781546115875244
    9. 'n' → logprob: -7.031546115875244
    10. '```' → logprob: -7.031546115875244

Token 97: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5539426803588867
    2. 'def' (adapté à ' def') → logprob: -1.0539426803588867
    3. '
' → logprob: -3.5539426803588867
    4. 'class' → logprob: -3.8039426803588867
    5. 'd' → logprob: -3.9289426803588867
    6. '    
' → logprob: -5.803942680358887
    7. ' ' → logprob: -7.553942680358887
    8. ' 
' → logprob: -7.553942680358887
    9. ' def' → logprob: -7.803942680358887
    10. '    ' → logprob: -8.428942680358887

Token 98: ' math' (ID: 13324)
  Prédit: ' __'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.6257044076919556
    2. '_' → logprob: -1.5007044076919556
    3. ' ' → logprob: -1.8757044076919556
    4. ' is' → logprob: -3.125704288482666
    5. ' ' → logprob: -4.875704288482666
    6. ' _' → logprob: -5.125704288482666
    7. ' get' → logprob: -5.500704288482666
    8. ' space' → logprob: -5.625704288482666
    9. ' add' → logprob: -5.750704288482666
    10. ' ​' → logprob: -6.000704288482666

Token 99: '_' (ID: 62)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 100: 'english' (ID: 64215)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.05288193002343178
    2. 'is' → logprob: -3.552881956100464
    3. 'perfect' → logprob: -4.927881717681885
    4. 'average' → logprob: -5.427881717681885
    5. '_score' → logprob: -5.677881717681885
    6. 'grade' → logprob: -6.677881717681885
    7. '>' → logprob: -6.927881717681885
    8. 'square' → logprob: -7.177881717681885
    9. 'pass' → logprob: -7.427881717681885
    10. 's' → logprob: -8.052882194519043

Token 101: '_average' (ID: 89222)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.23185086250305176
    2. '_score' → logprob: -1.8568508625030518
    3. '_average' → logprob: -3.8568508625030518
    4. '_equal' → logprob: -4.731850624084473
    5. '_scores' → logprob: -6.231850624084473
    6. '()' → logprob: -6.231850624084473
    7. '_equals' → logprob: -6.481850624084473
    8. '_sum' → logprob: -6.481850624084473
    9. '(self' → logprob: -6.606850624084473
    10. '_s' → logprob: -6.606850624084473

Token 102: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.04941360652446747
    2. '(' → logprob: -3.0494136810302734
    3. '()' → logprob: -7.924413681030273
    4. ' (' → logprob: -7.924413681030273
    5. '(
' → logprob: -9.549413681030273
    6. '(s' → logprob: -11.299413681030273
    7. 'self' → logprob: -11.549413681030273
    8. '(

' → logprob: -12.299413681030273
    9. ' ' → logprob: -13.799413681030273
    10. 's' → logprob: -14.424413681030273

Token 103: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7426544427871704
    2. '()' → logprob: -0.7426544427871704
    3. '())' → logprob: -3.367654323577881
    4. '():' → logprob: -4.992654323577881
    5. ' )' → logprob: -5.867654323577881
    6. '(' → logprob: -6.367654323577881
    7. ' ()' → logprob: -6.867654323577881
    8. '(self' → logprob: -7.867654323577881
    9. ' ())' → logprob: -7.992654323577881
    10. '):' → logprob: -8.117654800415039

Token 104: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10006560385227203
    2. ' :' → logprob: -2.4750657081604004
    3. '():' → logprob: -4.8500657081604
    4. '(' → logprob: -6.3500657081604
    5. '):' → logprob: -7.7250657081604
    6. ' ->' → logprob: -8.475065231323242
    7. '   ' → logprob: -8.600065231323242
    8. '(self' → logprob: -8.725065231323242
    9. ' ():' → logprob: -9.100065231323242
    10. ':
' → logprob: -9.475065231323242

Token 105: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.05194888263940811
    2. 'float' → logprob: -3.6769487857818604
    3. ' ' → logprob: -4.6769490242004395
    4. ' self' → logprob: -5.0519490242004395
    5. ' (' → logprob: -5.5519490242004395
    6. ' ()' → logprob: -5.6769490242004395
    7. ' int' → logprob: -6.9269490242004395
    8. '()' → logprob: -8.176948547363281
    9. ' return' → logprob: -8.301948547363281
    10. '0' → logprob: -9.176948547363281

Token 106: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0014382082736119628
    2. ':
' → logprob: -6.876438140869141
    3. '(self' → logprob: -8.75143814086914
    4. '):' → logprob: -9.37643814086914
    5. ' :' → logprob: -9.50143814086914
    6. '(' → logprob: -9.75143814086914
    7. '       ' → logprob: -11.50143814086914
    8. '():' → logprob: -12.00143814086914
    9. ':self' → logprob: -12.62643814086914
    10. '   ' → logprob: -12.87643814086914

Token 107: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014992679934948683
    2. ' return' → logprob: -7.126499176025391
    3. '
' → logprob: -8.00149917602539
    4. 'return' → logprob: -8.50149917602539
    5. '   ' → logprob: -9.12649917602539
    6. '      ' → logprob: -11.25149917602539
    7. '    ' → logprob: -11.75149917602539
    8. ' 
' → logprob: -12.00149917602539
    9. ' ' → logprob: -12.37649917602539
    10. '     ' → logprob: -12.37649917602539

Token 108: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.004175510257482529
    2. ' return' → logprob: -6.004175662994385
    3. '       ' → logprob: -6.379175662994385
    4. '   ' → logprob: -14.504175186157227
    5. '	return' → logprob: -14.754175186157227
    6. '```' → logprob: -15.254175186157227
    7. '
' → logprob: -15.379175186157227
    8. 'ret' → logprob: -16.004175186157227
    9. '(return' → logprob: -16.379175186157227
    10. ' ' → logprob: -16.379175186157227

Token 109: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.20142211019992828
    2. '(self' → logprob: -1.701422095298767
    3. '(s' → logprob: -12.826421737670898
    4. ' ' → logprob: -13.076421737670898
    5. '   ' → logprob: -13.326421737670898
    6. ' self' → logprob: -14.701421737670898
    7. '(sum' → logprob: -14.951421737670898
    8. '(' → logprob: -15.201421737670898
    9. '(super' → logprob: -15.201421737670898
    10. '(this' → logprob: -15.576421737670898

Token 110: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0004320996522437781
    2. ' self' → logprob: -7.750432014465332
    3. '       ' → logprob: -13.750432014465332
    4. '   ' → logprob: -16.62543296813965
    5. '(self' → logprob: -16.62543296813965
    6. 'sel' → logprob: -16.75043296813965
    7. ' ' → logprob: -17.25043296813965
    8. '	self' → logprob: -17.25043296813965
    9. '
' → logprob: -17.75043296813965
    10. 's' → logprob: -18.00043296813965

Token 111: '.math' (ID: 35319)
  Prédit: '.math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.math' → logprob: -0.0024895723909139633
    2. '.' → logprob: -6.0024895668029785
    3. ' .' → logprob: -11.502490043640137
    4. '.mat' → logprob: -12.627490043640137
    5. 'math' → logprob: -16.12748908996582
    6. '.Math' → logprob: -16.12748908996582
    7. '.m' → logprob: -16.50248908996582
    8. '​.' → logprob: -16.50248908996582
    9. '.
' → logprob: -18.00248908996582
    10. '.python' → logprob: -18.12748908996582

Token 112: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.026305407285690308
    2. '+' → logprob: -3.6513054370880127
    3. ' ' → logprob: -12.526305198669434
    4. ' ' → logprob: -14.026305198669434
    5. ' +
' → logprob: -14.526305198669434
    6. '+self' → logprob: -16.27630615234375
    7. ',' → logprob: -17.65130615234375
    8. '+
' → logprob: -17.77630615234375
    9. '```' → logprob: -18.02630615234375
    10. ' ,' → logprob: -18.02630615234375

Token 113: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.0019343505846336484
    2. 'self' → logprob: -6.25193452835083
    3. ' ' → logprob: -12.626934051513672
    4. ' ' → logprob: -13.251934051513672
    5. '	self' → logprob: -15.001934051513672
    6. '    ' → logprob: -15.751934051513672
    7. ' 
' → logprob: -16.876934051513672
    8. '```' → logprob: -17.751934051513672
    9. '_self' → logprob: -17.876934051513672
    10. '        ' → logprob: -18.251934051513672

Token 114: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00023774817236699164
    2. ' .' → logprob: -8.375237464904785
    3. 'english' → logprob: -13.250237464904785
    4. '.
' → logprob: -13.375237464904785
    5. '._' → logprob: -14.375237464904785
    6. ' ' → logprob: -14.625237464904785
    7. '​.' → logprob: -14.750237464904785
    8. '```' → logprob: -14.875237464904785
    9. '.math' → logprob: -15.125237464904785
    10. 'self' → logprob: -15.375237464904785

Token 115: 'english' (ID: 64215)
  Prédit: 'english'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'english' → logprob: -0.00762082589790225
    2. ' english' → logprob: -4.882620811462402
    3. 'eng' → logprob: -12.132620811462402
    4. ' English' → logprob: -12.507620811462402
    5. 'math' → logprob: -13.757620811462402
    6. 'English' → logprob: -13.757620811462402
    7. ' ' → logprob: -13.757620811462402
    8. 'engl' → logprob: -13.757620811462402
    9. ' ' → logprob: -15.507620811462402
    10. ' engl' → logprob: -15.632620811462402

Token 116: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00038407891406677663
    2. ' )' → logprob: -7.8753838539123535
    3. ')/' → logprob: -12.500384330749512
    4. '）' → logprob: -16.625383377075195
    5. '```' → logprob: -16.750383377075195
    6. '       ' → logprob: -16.750383377075195
    7. '   ' → logprob: -17.250383377075195
    8. ')
' → logprob: -17.750383377075195
    9. ' ' → logprob: -17.750383377075195
    10. ' ' → logprob: -18.125383377075195

Token 117: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.016673624515533447
    2. ' ' → logprob: -4.266673564910889
    3. '/' → logprob: -6.141673564910889
    4. ')' → logprob: -8.891674041748047
    5. '        ' → logprob: -9.641674041748047
    6. ' )' → logprob: -10.266674041748047
    7. ' ' → logprob: -10.641674041748047
    8. '       ' → logprob: -10.891674041748047
    9. '2' → logprob: -11.266674041748047
    10. '    ' → logprob: -11.266674041748047

Token 118: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4740777611732483
    2. '2' → logprob: -0.9740777611732483
    3. '```' → logprob: -15.349078178405762
    4. '   ' → logprob: -15.974078178405762
    5. '
' → logprob: -16.224077224731445
    6. '    ' → logprob: -16.349077224731445
    7. ' 
' → logprob: -16.974077224731445
    8. '  ' → logprob: -17.099077224731445
    9. ' ' → logprob: -17.099077224731445
    10. '２' → logprob: -17.474077224731445

Token 119: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00023059594968799502
    2. ' ' → logprob: -8.37523078918457
    3. '   ' → logprob: -17.62523078918457
    4. '```' → logprob: -17.75023078918457
    5. '
' → logprob: -19.50023078918457
    6. '２' → logprob: -19.62523078918457
    7. '  ' → logprob: -19.75023078918457
    8. '۲' → logprob: -20.12523078918457
    9. '3' → logprob: -20.50023078918457
    10. '    ' → logprob: -21.12523078918457

Token 120: '


' (ID: 2499)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02834230102598667
    2. '<|end|>' → logprob: -3.6533422470092773
    3. '   ' → logprob: -6.653342247009277
    4. '```' → logprob: -8.653342247009277
    5. '

' → logprob: -8.778342247009277
    6. '  
' → logprob: -9.528342247009277
    7. '<|end|>' → logprob: -9.528342247009277
    8. ' ' → logprob: -9.528342247009277
    9. '    
' → logprob: -9.653342247009277
    10. ' 
' → logprob: -9.903342247009277

Token 121: 'class' (ID: 1444)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.577386736869812
    2. '
' → logprob: -0.952386736869812
    3. 'class' → logprob: -3.5773868560791016
    4. '    
' → logprob: -4.702386856079102
    5. 'def' → logprob: -4.827386856079102
    6. ' ' → logprob: -6.702386856079102
    7. 'd' → logprob: -6.827386856079102
    8. ' 
' → logprob: -6.952386856079102
    9. '  
' → logprob: -7.077386856079102
    10. '```' → logprob: -7.077386856079102

Token 122: ' Classification' (ID: 98892)
  Prédit: ' Student'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Student' → logprob: -0.10145415365695953
    2. ' Score' → logprob: -2.351454257965088
    3. ' User' → logprob: -8.22645378112793
    4. ' ' → logprob: -8.35145378112793
    5. 'Student' → logprob: -8.35145378112793
    6. ' ' → logprob: -8.72645378112793
    7. ' Report' → logprob: -9.47645378112793
    8. ' Subject' → logprob: -9.72645378112793
    9. ' Attendance' → logprob: -9.97645378112793
    10. ' Exam' → logprob: -10.10145378112793

Token 123: 'Rule' (ID: 11845)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015029559144750237
    2. ':
' → logprob: -7.001502990722656
    3. '(' → logprob: -7.751502990722656
    4. '<|end|>' → logprob: -9.501502990722656
    5. ' :' → logprob: -10.376502990722656
    6. '):' → logprob: -12.001502990722656
    7. 's' → logprob: -12.126502990722656
    8. '(S' → logprob: -12.376502990722656
    9. 'S' → logprob: -12.501502990722656
    10. 'Score' → logprob: -12.626502990722656

Token 124: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0034830626100301743
    2. '(' → logprob: -6.253483295440674
    3. ':
' → logprob: -7.003483295440674
    4. '<|end|>' → logprob: -7.628483295440674
    5. ' :' → logprob: -9.503482818603516
    6. '):' → logprob: -11.003482818603516
    7. '():' → logprob: -11.753482818603516
    8. '(object' → logprob: -12.128482818603516
    9. '>:' → logprob: -12.128482818603516
    10. 's' → logprob: -12.378482818603516

Token 125: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16109715402126312
    2. ' def' → logprob: -1.9110971689224243
    3. 'def' → logprob: -7.536097049713135
    4. '    
' → logprob: -8.911097526550293
    5. '<|end|>' → logprob: -9.536097526550293
    6. '    ' → logprob: -10.411097526550293
    7. ' 
' → logprob: -10.536097526550293
    8. '	def' → logprob: -11.661097526550293
    9. '
' → logprob: -11.911097526550293
    10. '  ' → logprob: -12.036097526550293

Token 126: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.577570378780365
    2. 'def' (adapté à ' def') → logprob: -0.827570378780365
    3. '   ' → logprob: -6.45257043838501
    4. 'de' → logprob: -10.952569961547852
    5. 'class' → logprob: -11.452569961547852
    6. '    ' → logprob: -11.827569961547852
    7. ' ' → logprob: -11.952569961547852
    8. '	def' → logprob: -12.452569961547852
    9. 'd' → logprob: -13.452569961547852
    10. '  ' → logprob: -13.827569961547852

Token 127: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.689417839050293
    2. ' ' → logprob: -0.814417839050293
    3. '_' → logprob: -3.439417839050293
    4. ' ' → logprob: -4.939417839050293
    5. ' _' → logprob: -5.189417839050293
    6. '  ' → logprob: -5.564417839050293
    7. ' ‌' → logprob: -6.314417839050293
    8. 'itialize' → logprob: -6.689417839050293
    9. ' def' → logprob: -7.064417839050293
    10. ' t' → logprob: -7.439417839050293

Token 128: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.4617256056226324e-05
    2. ' init' → logprob: -12.375014305114746
    3. 'def' → logprob: -13.000014305114746
    4. 'new' → logprob: -13.250014305114746
    5. 'call' → logprob: -13.750014305114746
    6. 'ini' → logprob: -13.875014305114746
    7. 'i' → logprob: -14.125014305114746
    8. '
' → logprob: -14.125014305114746
    9. '```' → logprob: -14.125014305114746
    10. '	init' → logprob: -14.875014305114746

Token 129: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0169515460729599
    2. '__' → logprob: -4.141951560974121
    3. '__(
' → logprob: -7.141951560974121
    4. '_' → logprob: -9.516951560974121
    5. '_(' → logprob: -11.266951560974121
    6. '__((' → logprob: -11.391951560974121
    7. '(self' → logprob: -11.516951560974121
    8. '(' → logprob: -12.016951560974121
    9. '__('' → logprob: -12.516951560974121
    10. '___' → logprob: -12.891951560974121

Token 130: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.003626558231189847
    2. ' self' → logprob: -5.628626346588135
    3. '
' → logprob: -11.378626823425293
    4. ')' → logprob: -12.128626823425293
    5. ',' → logprob: -12.128626823425293
    6. '   ' → logprob: -13.878626823425293
    7. ' ' → logprob: -14.378626823425293
    8. '0' → logprob: -14.628626823425293
    9. '	self' → logprob: -15.003626823425293
    10. 's' → logprob: -15.128626823425293

Token 131: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00988263264298439
    2. ' ,' → logprob: -4.63488245010376
    3. 'self' → logprob: -9.384882926940918
    4. ',self' → logprob: -10.884882926940918
    5. ')' → logprob: -12.259882926940918
    6. ' ' → logprob: -12.384882926940918
    7. '_,' → logprob: -12.634882926940918
    8. ' self' → logprob: -13.009882926940918
    9. ',s' → logprob: -13.259882926940918
    10. ',class' → logprob: -13.384882926940918

Token 132: ' check' (ID: 2371)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.9111425280570984
    2. ' min' → logprob: -1.6611425876617432
    3. ' threshold' → logprob: -2.161142587661743
    4. 'self' → logprob: -2.536142587661743
    5. 'threshold' → logprob: -2.786142587661743
    6. ' name' → logprob: -2.911142587661743
    7. 'min' → logprob: -3.411142587661743
    8. ' minimum' → logprob: -3.911142587661743
    9. ' score' → logprob: -4.161142349243164
    10. 'name' → logprob: -4.911142349243164

Token 133: '_fn' (ID: 34804)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7353667616844177
    2. '_func' → logprob: -1.1103668212890625
    3. ',' → logprob: -2.8603668212890625
    4. '_function' → logprob: -2.9853668212890625
    5. '):' → logprob: -3.1103668212890625
    6. 'er' → logprob: -4.4853668212890625
    7. ')' → logprob: -4.7353668212890625
    8. '_fn' → logprob: -5.6103668212890625
    9. '_score' → logprob: -5.7353668212890625
    10. '_method' → logprob: -5.8603668212890625

Token 134: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0582306906580925
    2. ',' → logprob: -3.6832306385040283
    3. ':' → logprob: -3.8082306385040283
    4. ' ):' → logprob: -5.558230876922607
    5. ')' → logprob: -5.683230876922607
    6. '):
' → logprob: -6.808230876922607
    7. '=None' → logprob: -8.05823040008545
    8. '=' → logprob: -8.05823040008545
    9. ' ,' → logprob: -9.18323040008545
    10. ' )' → logprob: -9.93323040008545

Token 135: ' level' (ID: 3211)
  Prédit: ' description'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' description' → logprob: -0.45551156997680664
    2. ' name' → logprob: -1.4555115699768066
    3. ' threshold' → logprob: -3.7055115699768066
    4. ' classify' → logprob: -3.9555115699768066
    5. ' score' → logprob: -4.580511569976807
    6. ' label' → logprob: -4.830511569976807
    7. 'name' → logprob: -4.830511569976807
    8. ' ):
' → logprob: -4.955511569976807
    9. ' message' → logprob: -5.080511569976807
    10. 'description' → logprob: -5.205511569976807

Token 136: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6509096622467041
    2. '):' → logprob: -1.150909662246704
    3. ',' → logprob: -2.275909662246704
    4. '_name' → logprob: -2.900909662246704
    5. '):
' → logprob: -6.025909423828125
    6. ')' → logprob: -7.900909423828125
    7. '_' → logprob: -7.900909423828125
    8. ' ,' → logprob: -8.650909423828125
    9. '_:' → logprob: -8.650909423828125
    10. ':int' → logprob: -8.900909423828125

Token 137: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.8517878651618958
    2. ' str' → logprob: -0.9767878651618958
    3. 'int' → logprob: -1.726787805557251
    4. 'str' → logprob: -4.22678804397583
    5. ')' → logprob: -6.22678804397583
    6. ' ' → logprob: -7.72678804397583
    7. ':int' → logprob: -7.85178804397583
    8. ' )' → logprob: -8.351787567138672
    9. '):
' → logprob: -8.476787567138672
    10. '   ' → logprob: -8.476787567138672

Token 138: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03956308960914612
    2. ',' → logprob: -3.4145631790161133
    3. ')' → logprob: -5.414563179016113
    4. '):
' → logprob: -6.914563179016113
    5. ':' → logprob: -8.289563179016113
    6. '=' → logprob: -8.789563179016113
    7. '=None' → logprob: -10.789563179016113
    8. ' ):' → logprob: -11.039563179016113
    9. ' ' → logprob: -12.539563179016113
    10. '   ' → logprob: -13.039563179016113

Token 139: ' class' (ID: 744)
  Prédit: ' name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' name' → logprob: -0.761324942111969
    2. 'name' → logprob: -1.2613248825073242
    3. ' description' → logprob: -2.136324882507324
    4. ' message' → logprob: -3.261324882507324
    5. '):
' → logprob: -4.386324882507324
    6. ')' → logprob: -4.386324882507324
    7. 'description' → logprob: -4.386324882507324
    8. 'message' → logprob: -4.761324882507324
    9. ' label' → logprob: -4.886324882507324
    10. '   ' → logprob: -5.136324882507324

Token 140: '_name' (ID: 2483)
  Prédit: '_name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_name' → logprob: -0.046775322407484055
    2. '_' → logprob: -3.4217753410339355
    3. 'ification' → logprob: -4.6717753410339355
    4. 'name' → logprob: -5.6717753410339355
    5. 'ify' → logprob: -9.921774864196777
    6. '_n' → logprob: -9.921774864196777
    7. '_label' → logprob: -10.421774864196777
    8. 'ifier' → logprob: -11.171774864196777
    9. '_level' → logprob: -11.671774864196777
    10. '_title' → logprob: -11.671774864196777

Token 141: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4801018536090851
    2. ':' → logprob: -0.9801018238067627
    3. ')' → logprob: -5.605102062225342
    4. ',' → logprob: -6.605102062225342
    5. '):
' → logprob: -7.730102062225342
    6. '=None' → logprob: -8.105101585388184
    7. '=' → logprob: -8.730101585388184
    8. ' ):' → logprob: -10.355101585388184
    9. ' :' → logprob: -10.980101585388184
    10. ' ' → logprob: -12.855101585388184

Token 142: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.15280376374721527
    2. ')' → logprob: -2.527803659439087
    3. 'str' → logprob: -3.402803659439087
    4. '):
' → logprob: -4.527803897857666
    5. '):' → logprob: -5.027803897857666
    6. ' )' → logprob: -5.902803897857666
    7. ':str' → logprob: -6.277803897857666
    8. ':' → logprob: -6.777803897857666
    9. ' '' → logprob: -6.902803897857666
    10. ' ):' → logprob: -7.027803897857666

Token 143: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010684874840080738
    2. ',' → logprob: -4.885684967041016
    3. '):
' → logprob: -6.385684967041016
    4. ')' → logprob: -6.885684967041016
    5. ':' → logprob: -8.010684967041016
    6. ' ):' → logprob: -11.010684967041016
    7. '=None' → logprob: -12.135684967041016
    8. '=' → logprob: -12.260684967041016
    9. '   ' → logprob: -13.385684967041016
    10. ' ' → logprob: -13.385684967041016

Token 144: '       ' (ID: 309)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.047039441764354706
    2. '       ' → logprob: -3.92203950881958
    3. ':' → logprob: -4.79703950881958
    4. ')' → logprob: -4.92203950881958
    5. '   ' → logprob: -5.17203950881958
    6. ' ):' → logprob: -5.67203950881958
    7. '):
' → logprob: -7.29703950881958
    8. ',' → logprob: -8.297039031982422
    9. ' ' → logprob: -8.297039031982422
    10. ' )' → logprob: -9.297039031982422

Token 145: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.6811106204986572
    2. ' self' → logprob: -1.0561106204986572
    3. '       ' → logprob: -1.9311106204986572
    4. '	self' → logprob: -7.806110382080078
    5. '	' → logprob: -8.056110382080078
    6. ' ' → logprob: -8.556110382080078
    7. '   ' → logprob: -9.306110382080078
    8. ' ' → logprob: -9.681110382080078
    9. '	   ' → logprob: -11.431110382080078
    10. '     ' → logprob: -11.556110382080078

Token 146: '.check' (ID: 12631)
  Prédit: '.check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.check' → logprob: -0.2255673110485077
    2. '.' → logprob: -1.60056734085083
    3. ' .' → logprob: -9.850566864013672
    4. '._' → logprob: -10.225566864013672
    5. 'check' → logprob: -10.850566864013672
    6. ' check' → logprob: -11.100566864013672
    7. '_check' → logprob: -12.350566864013672
    8. ' ' → logprob: -12.475566864013672
    9. '	check' → logprob: -12.600566864013672
    10. '.
' → logprob: -12.725566864013672

Token 147: '_fn' (ID: 34804)
  Prédit: '_fn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fn' → logprob: -0.0015278366627171636
    2. '_' → logprob: -6.501527786254883
    3. '_f' → logprob: -10.876527786254883
    4. '_function' → logprob: -13.001527786254883
    5. ' _' → logprob: -13.626527786254883
    6. '_func' → logprob: -14.376527786254883
    7. '__' → logprob: -14.501527786254883
    8. '_fun' → logprob: -15.376527786254883
    9. '_sn' → logprob: -15.376527786254883
    10. '_FN' → logprob: -15.376527786254883

Token 148: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6944804787635803
    2. ' =' → logprob: -0.6944804787635803
    3. ' ' → logprob: -7.0694804191589355
    4. ',' → logprob: -7.9444804191589355
    5. '<|end|>' → logprob: -9.819480895996094
    6. ')' → logprob: -10.319480895996094
    7. ' =
' → logprob: -11.944480895996094
    8. ')=' → logprob: -11.944480895996094
    9. ' ,' → logprob: -12.569480895996094
    10. '=lambda' → logprob: -12.819480895996094

Token 149: ' check' (ID: 2371)
  Prédit: ' check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.10021109133958817
    2. 'check' → logprob: -2.3502111434936523
    3. '	check' → logprob: -12.600211143493652
    4. '(check' → logprob: -14.350211143493652
    5. ' ' → logprob: -15.350211143493652
    6. ' ' → logprob: -15.850211143493652
    7. 'chec' → logprob: -16.600210189819336
    8. '_check' → logprob: -16.850210189819336
    9. '
' → logprob: -17.100210189819336
    10. '.check' → logprob: -17.975210189819336

Token 150: '_fn' (ID: 34804)
  Prédit: '_fn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fn' → logprob: -0.018263496458530426
    2. '_' → logprob: -4.018263339996338
    3. '_f' → logprob: -9.143263816833496
    4. ' _' → logprob: -13.018263816833496
    5. '_func' → logprob: -13.518263816833496
    6. '_
' → logprob: -14.018263816833496
    7. '_function' → logprob: -14.393263816833496
    8. '__' → logprob: -15.018263816833496
    9. ')' → logprob: -15.018263816833496
    10. '_)' → logprob: -15.143263816833496

Token 151: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20476941764354706
    2. '<|end|>' → logprob: -1.8297693729400635
    3. '
' → logprob: -4.079769611358643
    4. ',' → logprob: -5.579769611358643
    5. '        
' → logprob: -6.829769611358643
    6. '        ' → logprob: -7.329769611358643
    7. ' ' → logprob: -7.829769611358643
    8. ' 
' → logprob: -7.829769611358643
    9. '   ' → logprob: -7.954769611358643
    10. '    
' → logprob: -8.204769134521484

Token 152: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04848676174879074
    2. '<|end|>' → logprob: -3.5484867095947266
    3. '
' → logprob: -4.048486709594727
    4. '        
' → logprob: -8.048486709594727
    5. ',' → logprob: -8.673486709594727
    6. ' ' → logprob: -9.048486709594727
    7. ' 
' → logprob: -9.048486709594727
    8. '  
' → logprob: -9.548486709594727
    9. '    
' → logprob: -9.798486709594727
    10. '   ' → logprob: -9.923486709594727

Token 153: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.07969313114881516
    2. 'self' (adapté à ' self') → logprob: -2.579693078994751
    3. '       ' → logprob: -7.70469331741333
    4. ' level' → logprob: -8.079692840576172
    5. 'level' → logprob: -10.329692840576172
    6. '   ' → logprob: -11.829692840576172
    7. '    ' → logprob: -14.454692840576172
    8. '        ' → logprob: -14.579692840576172
    9. '	self' → logprob: -14.579692840576172
    10. ' ' → logprob: -14.704692840576172

Token 154: '.level' (ID: 36989)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.001648876117542386
    2. '.level' → logprob: -6.501648902893066
    3. '.class' → logprob: -9.001648902893066
    4. ' .' → logprob: -11.876648902893066
    5. ' ' → logprob: -12.126648902893066
    6. '.
' → logprob: -12.126648902893066
    7. '.check' → logprob: -12.376648902893066
    8. '.Level' → logprob: -15.126648902893066
    9. ',' → logprob: -15.876648902893066
    10. 'level' → logprob: -15.876648902893066

Token 155: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47513508796691895
    2. '=' → logprob: -1.350135087966919
    3. '<|end|>' → logprob: -2.225135087966919
    4. ' ' → logprob: -5.35013484954834
    5. ',' → logprob: -5.85013484954834
    6. '<|end|>' → logprob: -6.60013484954834
    7. ':' → logprob: -6.97513484954834
    8. ')' → logprob: -7.60013484954834
    9. ' ,' → logprob: -9.10013484954834
    10. '   ' → logprob: -9.22513484954834

Token 156: ' level' (ID: 3211)
  Prédit: ' level'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' level' → logprob: -0.03804619982838631
    2. 'level' → logprob: -3.28804612159729
    3. '	level' → logprob: -13.163045883178711
    4. '(level' → logprob: -13.288045883178711
    5. '[level' → logprob: -14.163045883178711
    6. '-level' → logprob: -16.16304588317871
    7. ' nivel' → logprob: -16.66304588317871
    8. ' ' → logprob: -16.78804588317871
    9. '_level' → logprob: -17.03804588317871
    10. '<|end|>' → logprob: -17.03804588317871

Token 157: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00034750174381770194
    2. '<|end|>' → logprob: -8.375347137451172
    3. ',' → logprob: -9.625347137451172
    4. '
' → logprob: -10.625347137451172
    5. '	' → logprob: -11.125347137451172
    6. '   ' → logprob: -12.375347137451172
    7. '      ' → logprob: -13.125347137451172
    8. ' ' → logprob: -13.375347137451172
    9. '<|end|>' → logprob: -14.000347137451172
    10. ',
' → logprob: -14.375347137451172

Token 158: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00013917774776928127
    2. ',' → logprob: -9.750139236450195
    3. ' self' → logprob: -10.125139236450195
    4. 'self' → logprob: -10.875139236450195
    5. '   ' → logprob: -12.000139236450195
    6. '
' → logprob: -12.500139236450195
    7. '<|end|>' → logprob: -12.500139236450195
    8. '	' → logprob: -12.875139236450195
    9. ' ' → logprob: -13.375139236450195
    10. '      ' → logprob: -13.750139236450195

Token 159: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.019224487245082855
    2. ' self' → logprob: -4.394224643707275
    3. '       ' → logprob: -5.019224643707275
    4. 'class' → logprob: -9.644224166870117
    5. '   ' → logprob: -11.394224166870117
    6. '	self' → logprob: -12.644224166870117
    7. ' ' → logprob: -13.644224166870117
    8. ' class' → logprob: -13.644224166870117
    9. '     ' → logprob: -16.144224166870117
    10. '
' → logprob: -16.144224166870117

Token 160: '.class' (ID: 4351)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0024120386224240065
    2. '.class' → logprob: -6.252411842346191
    3. ' .' → logprob: -8.502411842346191
    4. ' ' → logprob: -8.752411842346191
    5. ' class' → logprob: -9.502411842346191
    6. '_' → logprob: -10.377411842346191
    7. 'class' → logprob: -11.627411842346191
    8. '_class' → logprob: -13.252411842346191
    9. ',' → logprob: -14.252411842346191
    10. '=' → logprob: -14.502411842346191

Token 161: '_name' (ID: 2483)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.029862957075238228
    2. '_name' → logprob: -3.529862880706787
    3. ' _' → logprob: -9.404863357543945
    4. '_
' → logprob: -11.154863357543945
    5. '_n' → logprob: -12.029863357543945
    6. 'ification' → logprob: -12.279863357543945
    7. '_

' → logprob: -13.779863357543945
    8. '_names' → logprob: -14.279863357543945
    9. '_i' → logprob: -14.529863357543945
    10. '__' → logprob: -14.654863357543945

Token 162: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.021940259262919426
    2. ' =' → logprob: -3.896940231323242
    3. '<|end|>' → logprob: -6.646940231323242
    4. ' ' → logprob: -9.896940231323242
    5. ')' → logprob: -10.396940231323242
    6. ':' → logprob: -12.646940231323242
    7. '=
' → logprob: -12.771940231323242
    8. ',' → logprob: -12.896940231323242
    9. '_' → logprob: -13.271940231323242
    10. '<|end|>' → logprob: -13.396940231323242

Token 163: ' class' (ID: 744)
  Prédit: ' class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' class' → logprob: -0.003627269994467497
    2. 'class' → logprob: -5.628627300262451
    3. '"class' → logprob: -11.628626823425293
    4. ' ' → logprob: -11.878626823425293
    5. ' ' → logprob: -12.253626823425293
    6. ''' → logprob: -13.003626823425293
    7. '"' → logprob: -13.128626823425293
    8. ''class' → logprob: -14.003626823425293
    9. ' '' → logprob: -15.003626823425293
    10. '	class' → logprob: -15.253626823425293

Token 164: '_name' (ID: 2483)
  Prédit: '_name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_name' → logprob: -0.023345408961176872
    2. '_' → logprob: -3.773345470428467
    3. '_n' → logprob: -9.523344993591309
    4. '_na' → logprob: -11.523344993591309
    5. 'Name' → logprob: -12.023344993591309
    6. '_
' → logprob: -12.648344993591309
    7. ' _' → logprob: -13.023344993591309
    8. '_names' → logprob: -13.398344993591309
    9. '_

' → logprob: -14.023344993591309
    10. 'name' → logprob: -14.023344993591309

Token 165: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.005637235473841429
    2. '<|end|>' → logprob: -5.630637168884277
    3. '   ' → logprob: -6.630637168884277
    4. '

' → logprob: -8.380637168884277
    5. 'def' → logprob: -8.380637168884277
    6. '<|end|>' → logprob: -8.880637168884277
    7. '    
' → logprob: -9.630637168884277
    8. '
' → logprob: -11.130637168884277
    9. ' def' → logprob: -11.505637168884277
    10. ' 
' → logprob: -11.880637168884277

Token 166: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13746216893196106
    2. '
' → logprob: -2.3874621391296387
    3. 'def' → logprob: -4.012462139129639
    4. 'class' → logprob: -4.387462139129639
    5. '    
' → logprob: -5.387462139129639
    6. ' def' → logprob: -7.637462139129639
    7. ' 
' → logprob: -8.512462615966797
    8. '```' → logprob: -8.512462615966797
    9. '<|end|>' → logprob: -8.637462615966797
    10. 'import' → logprob: -10.262462615966797

Token 167: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00012558852904476225
    2. ' def' → logprob: -9.000125885009766
    3. '   ' → logprob: -13.875125885009766
    4. '@' → logprob: -14.875125885009766
    5. '```' → logprob: -15.000125885009766
    6. '@property' → logprob: -15.625125885009766
    7. 'class' → logprob: -16.125125885009766
    8. 'd' → logprob: -16.250125885009766
    9. 'de' → logprob: -16.625125885009766
    10. 'from' → logprob: -17.500125885009766

Token 168: ' matches' (ID: 15248)
  Prédit: ' check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.05554085224866867
    2. ' def' → logprob: -3.4305408000946045
    3. ' apply' → logprob: -4.805541038513184
    4. ' evaluate' → logprob: -4.805541038513184
    5. 'check' → logprob: -6.680541038513184
    6. ' validate' → logprob: -7.055541038513184
    7. 'def' → logprob: -7.305541038513184
    8. ' test' → logprob: -7.555541038513184
    9. '_check' → logprob: -7.930541038513184
    10. ' applies' → logprob: -8.055541038513184

Token 169: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004100246820598841
    2. '(' → logprob: -5.504100322723389
    3. 'self' → logprob: -11.12909984588623
    4. '(
' → logprob: -12.00409984588623
    5. ' (' → logprob: -14.12909984588623
    6. ' self' → logprob: -15.87909984588623
    7. '(sel' → logprob: -16.129100799560547
    8. '(s' → logprob: -17.254100799560547
    9. '(

' → logprob: -17.504100799560547
    10. '	self' → logprob: -17.754100799560547

Token 170: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006455989787355065
    2. ' ,' → logprob: -7.375645637512207
    3. 'self' → logprob: -12.000645637512207
    4. ',
' → logprob: -12.625645637512207
    5. ',s' → logprob: -12.750645637512207
    6. ',self' → logprob: -12.750645637512207
    7. ')' → logprob: -13.250645637512207
    8. '):' → logprob: -14.125645637512207
    9. '(self' → logprob: -15.125645637512207
    10. '_score' → logprob: -15.875645637512207

Token 171: ' score' (ID: 8429)
  Prédit: ' score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' score' → logprob: -0.012592414394021034
    2. 'score' → logprob: -4.762592315673828
    3. ' self' → logprob: -5.637592315673828
    4. 'self' → logprob: -8.012592315673828
    5. ' ' → logprob: -11.012592315673828
    6. ' scores' → logprob: -11.012592315673828
    7. ')' → logprob: -11.387592315673828
    8. '	score' → logprob: -11.887592315673828
    9. '```' → logprob: -12.387592315673828
    10. ' s' → logprob: -12.762592315673828

Token 172: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.22749938070774078
    2. ':' → logprob: -1.6024993658065796
    3. ')' → logprob: -6.602499485015869
    4. '):
' → logprob: -7.977499485015869
    5. ' ):' → logprob: -8.102499008178711
    6. ' :' → logprob: -10.227499008178711
    7. '_score' → logprob: -11.102499008178711
    8. '_scores' → logprob: -11.727499008178711
    9. 'score' → logprob: -12.102499008178711
    10. '  ' → logprob: -12.977499008178711

Token 173: ' Score' (ID: 30731)
  Prédit: ' Score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Score' → logprob: -0.4038790166378021
    2. ' score' → logprob: -1.1538790464401245
    3. ' )' → logprob: -4.528879165649414
    4. 'Score' → logprob: -6.028879165649414
    5. ')' → logprob: -6.528879165649414
    6. 'score' → logprob: -6.528879165649414
    7. ' ' → logprob: -8.278879165649414
    8. ' ):' → logprob: -8.653879165649414
    9. '_score' → logprob: -9.028879165649414
    10. ' ):
' → logprob: -9.153879165649414

Token 174: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38692158460617065
    2. '):' → logprob: -1.1369216442108154
    3. '):
' → logprob: -10.511921882629395
    4. ')->' → logprob: -11.511921882629395
    5. ' ):' → logprob: -11.886921882629395
    6. ' )' → logprob: -12.386921882629395
    7. ':' → logprob: -13.511921882629395
    8. '   ' → logprob: -15.261921882629395
    9. ' ' → logprob: -15.886921882629395
    10. ')：' → logprob: -16.511920928955078

Token 175: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25349265336990356
    2. '):' → logprob: -1.5034925937652588
    3. ' :' → logprob: -7.628492832183838
    4. '():' → logprob: -7.753492832183838
    5. ')' → logprob: -8.12849235534668
    6. ' ->' → logprob: -9.00349235534668
    7. ':return' → logprob: -9.37849235534668
    8. ')->' → logprob: -10.00349235534668
    9. '->' → logprob: -10.25349235534668
    10. '):
' → logprob: -11.25349235534668

Token 176: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.014165272004902363
    2. 'bool' → logprob: -4.26416540145874
    3. ' ' → logprob: -14.014164924621582
    4. '	bool' → logprob: -14.264164924621582
    5. '<bool' → logprob: -16.5141658782959
    6. ' ' → logprob: -16.7641658782959
    7. ' self' → logprob: -16.8891658782959
    8. ' 
' → logprob: -17.5141658782959
    9. '_bool' → logprob: -17.5141658782959
    10. '.bool' → logprob: -18.1391658782959

Token 177: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008958588587120175
    2. '):' → logprob: -7.375895977020264
    3. '():' → logprob: -9.125895500183105
    4. ':
' → logprob: -9.125895500183105
    5. ':return' → logprob: -10.375895500183105
    6. '<|end|>' → logprob: -11.875895500183105
    7. ':**' → logprob: -12.250895500183105
    8. ' :' → logprob: -12.375895500183105
    9. '):
' → logprob: -14.375895500183105
    10. ')' → logprob: -14.500895500183105

Token 178: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00287358439527452
    2. ' return' → logprob: -6.252873420715332
    3. '	' → logprob: -7.502873420715332
    4. 'return' → logprob: -8.502873420715332
    5. '	return' → logprob: -9.002873420715332
    6. '
' → logprob: -10.252873420715332
    7. '   ' → logprob: -11.127873420715332
    8. '	   ' → logprob: -11.627873420715332
    9. '<|end|>' → logprob: -13.627873420715332
    10. ' 
' → logprob: -14.002873420715332

Token 179: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.002481246367096901
    2. ' return' → logprob: -6.252481460571289
    3. '       ' → logprob: -7.502481460571289
    4. '	return' → logprob: -14.627481460571289
    5. '
' → logprob: -16.37748146057129
    6. '   ' → logprob: -16.37748146057129
    7. '```' → logprob: -17.37748146057129
    8. '{return' → logprob: -17.75248146057129
    9. ':return' → logprob: -18.75248146057129
    10. '`' → logprob: -19.50248146057129

Token 180: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.02324652671813965
    2. 'self' → logprob: -3.7732465267181396
    3. ' ' → logprob: -14.648246765136719
    4. '	self' → logprob: -15.398246765136719
    5. '       ' → logprob: -16.52324676513672
    6. '(self' → logprob: -16.89824676513672
    7. ' bool' → logprob: -17.02324676513672
    8. '   ' → logprob: -17.14824676513672
    9. ' ' → logprob: -17.27324676513672
    10. ' not' → logprob: -18.02324676513672

Token 181: '.check' (ID: 12631)
  Prédit: '.check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.check' → logprob: -0.029787063598632812
    2. '.' → logprob: -3.529787063598633
    3. ' .' → logprob: -10.404787063598633
    4. '​.' → logprob: -13.279787063598633
    5. '.user' → logprob: -14.279787063598633
    6. '.s' → logprob: -14.654787063598633
    7. '.score' → logprob: -14.654787063598633
    8. '.space' → logprob: -14.779787063598633
    9. '`.' → logprob: -15.029787063598633
    10. '.Check' → logprob: -15.279787063598633

Token 182: '_fn' (ID: 34804)
  Prédit: '_fn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fn' → logprob: -4.320199877838604e-07
    2. '_' → logprob: -15.5
    3. 'fn' → logprob: -15.875
    4. '_fp' → logprob: -17.875
    5. '_sn' → logprob: -18.5
    6. '_fs' → logprob: -18.75
    7. '```' → logprob: -18.75
    8. '_FN' → logprob: -18.875
    9. '(_' → logprob: -19.0
    10. '_f' → logprob: -19.0

Token 183: '(score' (ID: 70244)
  Prédit: '(score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(score' → logprob: -0.0003386806638445705
    2. '(' → logprob: -8.000338554382324
    3. ' (' → logprob: -13.250338554382324
    4. '(scores' → logprob: -13.875338554382324
    5. '(
' → logprob: -15.250338554382324
    6. '(s' → logprob: -16.00033950805664
    7. '(schedule' → logprob: -17.25033950805664
    8. '(status' → logprob: -17.62533950805664
    9. '(price' → logprob: -17.75033950805664
    10. '(space' → logprob: -18.12533950805664

Token 184: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.080963092041202e-06
    2. ' )' → logprob: -12.500004768371582
    3. '<|end|>' → logprob: -14.000004768371582
    4. ')
' → logprob: -14.750004768371582
    5. ')

' → logprob: -17.7500057220459
    6. ')return' → logprob: -17.8750057220459
    7. ' ' → logprob: -18.1250057220459
    8. '<|end|>' → logprob: -18.8750057220459
    9. ')is' → logprob: -19.0000057220459
    10. '),' → logprob: -19.2500057220459

Token 185: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0014931997284293175
    2. 'c' → logprob: -6.751492977142334
    3. '
' → logprob: -8.501493453979492
    4. 'def' → logprob: -10.251493453979492
    5. '```' → logprob: -11.251493453979492
    6. 'clas' → logprob: -11.626493453979492
    7. ' class' → logprob: -11.751493453979492
    8. '    
' → logprob: -11.876493453979492
    9. '  
' → logprob: -12.001493453979492
    10. 'from' → logprob: -12.251493453979492

Token 186: ' Class' (ID: 5646)
  Prédit: ' Score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Score' → logprob: -0.5659744143486023
    2. ' Classification' → logprob: -1.065974473953247
    3. ' Class' → logprob: -3.190974473953247
    4. ' Student' → logprob: -4.315974235534668
    5. 'Score' → logprob: -4.315974235534668
    6. 'Classification' → logprob: -5.190974235534668
    7. 'Classifier' → logprob: -5.315974235534668
    8. ' School' → logprob: -6.440974235534668
    9. ' Sc' → logprob: -6.690974235534668
    10. ' Gr' → logprob: -6.940974235534668

Token 187: 'ifier' (ID: 4550)
  Prédit: 'ifier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifier' → logprob: -0.3563557267189026
    2. 'ification' → logprob: -1.2313556671142578
    3. 'Classifier' → logprob: -5.231355667114258
    4. 'Classification' → logprob: -7.231355667114258
    5. 'ify' → logprob: -7.606355667114258
    6. 'ific' → logprob: -7.981355667114258
    7. 'ifi' → logprob: -7.981355667114258
    8. 'if' → logprob: -8.981355667114258
    9. 'fic' → logprob: -9.731355667114258
    10. 'Manager' → logprob: -9.731355667114258

Token 188: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -9.424530435353518e-05
    2. ':
' → logprob: -9.625094413757324
    3. '():' → logprob: -11.250094413757324
    4. '(' → logprob: -11.750094413757324
    5. ':def' → logprob: -12.875094413757324
    6. '<|end|>' → logprob: -13.625094413757324
    7. '):' → logprob: -14.500094413757324
    8. ':

' → logprob: -14.625094413757324
    9. '(Class' → logprob: -14.625094413757324
    10. ' :' → logprob: -15.000094413757324

Token 189: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09806812554597855
    2. ':' → logprob: -2.9730682373046875
    3. ':
' → logprob: -3.2230682373046875
    4. ' def' → logprob: -6.8480682373046875
    5. 'def' → logprob: -6.9730682373046875
    6. '    
' → logprob: -9.598068237304688
    7. ' :
' → logprob: -9.973068237304688
    8. '(object' → logprob: -10.098068237304688
    9. '):
' → logprob: -10.098068237304688
    10. '  ' → logprob: -10.223068237304688

Token 190: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.06819039583206177
    2. 'def' (adapté à ' def') → logprob: -3.068190336227417
    3. '   ' → logprob: -3.943190336227417
    4. '    ' → logprob: -12.068190574645996
    5. ':' → logprob: -12.318190574645996
    6. 'class' → logprob: -12.318190574645996
    7. ':def' → logprob: -12.443190574645996
    8. '	def' → logprob: -13.193190574645996
    9. ' ' → logprob: -13.318190574645996
    10. ' __' → logprob: -13.568190574645996

Token 191: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.050918687134981155
    2. ' ' → logprob: -3.5509185791015625
    3. '_' → logprob: -4.9259185791015625
    4. ' _' → logprob: -5.0509185791015625
    5. '_init' → logprob: -5.8009185791015625
    6. '  ' → logprob: -6.1759185791015625
    7. ' def' → logprob: -7.1759185791015625
    8. ' init' → logprob: -7.9259185791015625
    9. ' ‌' → logprob: -8.050918579101562
    10. ' ___' → logprob: -8.550918579101562

Token 192: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.6240566083070007e-06
    2. 'i' → logprob: -14.625001907348633
    3. 'ini' → logprob: -14.750001907348633
    4. ' init' → logprob: -15.875001907348633
    5. 'nit' → logprob: -16.000001907348633
    6. '_init' → logprob: -16.375001907348633
    7. 'def' → logprob: -16.625001907348633
    8. '   ' → logprob: -16.625001907348633
    9. '```' → logprob: -16.625001907348633
    10. 'in' → logprob: -16.875001907348633

Token 193: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0006332091288641095
    2. '__' → logprob: -7.375633239746094
    3. '__(
' → logprob: -12.375633239746094
    4. '(self' → logprob: -13.250633239746094
    5. '_(' → logprob: -14.875633239746094
    6. '__((' → logprob: -16.500633239746094
    7. '(' → logprob: -16.750633239746094
    8. '__('' → logprob: -16.750633239746094
    9. '___' → logprob: -16.750633239746094
    10. ' (' → logprob: -17.500633239746094

Token 194: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.8312570318812504e-05
    2. ' self' → logprob: -11.625018119812012
    3. '       ' → logprob: -12.250018119812012
    4. '   ' → logprob: -13.375018119812012
    5. '
' → logprob: -13.625018119812012
    6. '):
' → logprob: -14.000018119812012
    7. ')' → logprob: -14.375018119812012
    8. '	self' → logprob: -16.500019073486328
    9. '0' → logprob: -17.250019073486328
    10. ' ' → logprob: -17.375019073486328

Token 195: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010603001341223717
    2. '):' → logprob: -5.260602951049805
    3. 'self' → logprob: -5.385602951049805
    4. '):
' → logprob: -7.760602951049805
    5. ')' → logprob: -9.260602951049805
    6. '   ' → logprob: -9.760602951049805
    7. ' ,' → logprob: -10.135602951049805
    8. ',self' → logprob: -10.135602951049805
    9. '__' → logprob: -11.010602951049805
    10. ':' → logprob: -11.010602951049805

Token 196: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10488045960664749
    2. ' self' → logprob: -2.3548805713653564
    3. '       ' → logprob: -5.479880332946777
    4. '   ' → logprob: -8.229880332946777
    5. '	self' → logprob: -8.979880332946777
    6. '[]' → logprob: -9.854880332946777
    7. '[' → logprob: -10.479880332946777
    8. ' []' → logprob: -12.479880332946777
    9. '[self' → logprob: -12.604880332946777
    10. '0' → logprob: -12.854880332946777

Token 197: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.6312321753939614e-05
    2. ' self' → logprob: -10.750036239624023
    3. '       ' → logprob: -11.125036239624023
    4. '   ' → logprob: -16.625036239624023
    5. '#' (adapté à ' #') → logprob: -17.375036239624023
    6. '
' → logprob: -18.000036239624023
    7. 'def' → logprob: -18.625036239624023
    8. 'class' → logprob: -18.625036239624023
    9. '	self' → logprob: -20.000036239624023
    10. 'super' → logprob: -20.125036239624023

Token 198: ' Defined' (ID: 146549)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.38881829380989075
    2. 'self' → logprob: -1.1388182640075684
    3. '       ' → logprob: -6.263818264007568
    4. '        ' → logprob: -11.013818740844727
    5. '    ' → logprob: -11.888818740844727
    6. '   ' → logprob: -12.263818740844727
    7. ' ' → logprob: -12.888818740844727
    8. ' pass' → logprob: -13.638818740844727
    9. '	self' → logprob: -13.638818740844727
    10. 'from' → logprob: -14.138818740844727

Token 199: ' from' (ID: 591)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.13352560997009277
    2. 'self' → logprob: -2.2585256099700928
    3. '       ' → logprob: -4.508525848388672
    4. '    ' → logprob: -5.758525848388672
    5. '[]' → logprob: -7.008525848388672
    6. '	self' → logprob: -7.133525848388672
    7. '   ' → logprob: -7.133525848388672
    8. ' ' → logprob: -7.383525848388672
    9. ' rules' → logprob: -7.508525848388672
    10. '        ' → logprob: -7.633525848388672

Token 200: ' highest' (ID: 11639)
  Prédit: 'highest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'highest' → logprob: -0.849307656288147
    2. 'self' → logprob: -1.349307656288147
    3. '[' → logprob: -2.0993075370788574
    4. 'high' → logprob: -2.3493075370788574
    5. 'top' → logprob: -3.3493075370788574
    6. '[
' → logprob: -3.5993075370788574
    7. ' highest' → logprob: -4.474307537078857
    8. 'most' → logprob: -5.224307537078857
    9. 'higher' → logprob: -5.849307537078857
    10. '       ' → logprob: -5.974307537078857

Token 201: ' level' (ID: 3211)
  Prédit: ' level'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' level' → logprob: -0.5857328772544861
    2. 'level' → logprob: -2.085732936859131
    3. ' to' → logprob: -2.460732936859131
    4. '    ' → logprob: -2.710732936859131
    5. '_level' → logprob: -3.085732936859131
    6. '       ' → logprob: -3.335732936859131
    7. '   ' → logprob: -3.335732936859131
    8. ' ' → logprob: -3.960732936859131
    9. '        ' → logprob: -5.335732936859131
    10. '-level' → logprob: -5.335732936859131

Token 202: ' (' (ID: 350)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.018428867682814598
    2. '       ' → logprob: -4.518428802490234
    3. 'to' → logprob: -5.768428802490234
    4. '<|end|>' → logprob: -6.518428802490234
    5. ' down' → logprob: -8.018428802490234
    6. ' level' → logprob: -8.268428802490234
    7. ' self' → logprob: -8.268428802490234
    8. ' rules' → logprob: -8.518428802490234
    9. '<|end|>' → logprob: -8.643428802490234
    10. ',' → logprob: -8.893428802490234

Token 203: '1' (ID: 16)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.3699927031993866
    2. '5' → logprob: -1.869992733001709
    3. '10' → logprob: -2.744992733001709
    4. ' ' → logprob: -3.244992733001709
    5. '100' → logprob: -4.119992733001709
    6. '9' → logprob: -4.369992733001709
    7. ')' → logprob: -4.494992733001709
    8. '4' → logprob: -5.494992733001709
    9. '       ' → logprob: -5.744992733001709
    10. '1' → logprob: -6.869992733001709

Token 204: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003992561716586351
    2. ' )' → logprob: -5.628992557525635
    3. ' to' → logprob: -8.878993034362793
    4. ',' → logprob: -9.253993034362793
    5. '       ' → logprob: -9.878993034362793
    6. '   ' → logprob: -10.003993034362793
    7. '    ' → logprob: -10.878993034362793
    8. ')
' → logprob: -12.128993034362793
    9. 'class' → logprob: -12.253993034362793
    10. ' ' → logprob: -12.253993034362793

Token 205: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.26589030027389526
    2. '       ' → logprob: -1.51589035987854
    3. '<|end|>' → logprob: -5.140890121459961
    4. 'to' → logprob: -5.640890121459961
    5. '   ' → logprob: -6.640890121459961
    6. ',' → logprob: -7.640890121459961
    7. '    ' → logprob: -7.640890121459961
    8. 'class' → logprob: -8.015890121459961
    9. 'self' → logprob: -8.015890121459961
    10. ' self' → logprob: -8.015890121459961

Token 206: ' lowest' (ID: 23120)
  Prédit: 'lowest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lowest' → logprob: -0.2625654935836792
    2. ' lowest' → logprob: -1.5125654935836792
    3. 'lower' → logprob: -5.387565612792969
    4. '#' → logprob: -5.887565612792969
    5. ' lower' → logprob: -6.137565612792969
    6. '       ' → logprob: -7.137565612792969
    7. ' the' → logprob: -9.262565612792969
    8. ' #' → logprob: -10.012565612792969
    9. '   ' → logprob: -10.012565612792969
    10. '1' → logprob: -10.887565612792969

Token 207: '
' (ID: 198)
  Prédit: ' level'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' level' → logprob: -0.2527514100074768
    2. 'level' → logprob: -1.752751350402832
    3. '       ' → logprob: -3.752751350402832
    4. ' to' → logprob: -4.127751350402832
    5. '   ' → logprob: -5.877751350402832
    6. 'class' → logprob: -6.752751350402832
    7. '<|end|>' → logprob: -6.877751350402832
    8. '<|end|>' → logprob: -7.127751350402832
    9. '    ' → logprob: -7.252751350402832
    10. ' levels' → logprob: -7.502751350402832

Token 208: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016253103967756033
    2. ',' → logprob: -7.6266255378723145
    3. 'self' → logprob: -8.501625061035156
    4. 'class' → logprob: -8.501625061035156
    5. ' self' → logprob: -8.501625061035156
    6. ' levels' → logprob: -8.751625061035156
    7. ' level' → logprob: -9.251625061035156
    8. 'levels' → logprob: -10.001625061035156
    9. '<|end|>' → logprob: -10.126625061035156
    10. 'level' → logprob: -10.376625061035156

Token 209: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.007087349891662598
    2. '       ' → logprob: -5.382087230682373
    3. ' self' → logprob: -6.007087230682373
    4. '   ' → logprob: -13.257087707519531
    5. '[self' → logprob: -14.882087707519531
    6. '	self' → logprob: -15.257087707519531
    7. ' ' → logprob: -16.25708770751953
    8. '[' → logprob: -16.63208770751953
    9. '[
' → logprob: -16.75708770751953
    10. 'class' → logprob: -16.88208770751953

Token 210: '.rules' (ID: 85922)
  Prédit: '_rules'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rules' → logprob: -0.29263758659362793
    2. '.rules' → logprob: -1.667637586593628
    3. '._' → logprob: -3.667637586593628
    4. 'rules' → logprob: -4.417637825012207
    5. '.class' → logprob: -4.917637825012207
    6. '_class' → logprob: -4.917637825012207
    7. 'class' → logprob: -6.042637825012207
    8. 'classification' → logprob: -6.042637825012207
    9. '.' → logprob: -6.292637825012207
    10. '_classes' → logprob: -6.792637825012207

Token 211: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0006585848750546575
    2. '=' → logprob: -7.3756585121154785
    3. ':' → logprob: -10.500658988952637
    4. ' =[' → logprob: -13.500658988952637
    5. '=[]' → logprob: -14.000658988952637
    6. ' ' → logprob: -14.000658988952637
    7. ' :' → logprob: -14.375658988952637
    8. 's' → logprob: -15.125658988952637
    9. '[' → logprob: -15.250658988952637
    10. '=[
' → logprob: -16.37565803527832

Token 212: ' [
' (ID: 4240)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6765135526657104
    2. ' [' → logprob: -1.1765135526657104
    3. ' [
' → logprob: -2.676513671875
    4. '[
' → logprob: -2.801513671875
    5. '[]' → logprob: -3.176513671875
    6. ' []' → logprob: -4.426513671875
    7. ' [

' → logprob: -10.301513671875
    8. '[]}' → logprob: -12.176513671875
    9. ' [
' → logprob: -12.676513671875
    10. '[]
' → logprob: -13.051513671875

Token 213: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6803277134895325
    2. ' Classification' → logprob: -1.1803276538848877
    3. 'Classification' → logprob: -1.6803276538848877
    4. '       ' → logprob: -9.930327415466309
    5. 'Class' → logprob: -12.305327415466309
    6. '   ' → logprob: -13.680327415466309
    7. ' Class' → logprob: -13.805327415466309
    8. 'Classifier' → logprob: -13.930327415466309
    9. ' classification' → logprob: -13.930327415466309
    10. 'classification' → logprob: -15.430327415466309

Token 214: ' Classification' (ID: 98892)
  Prédit: 'Classification'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Classification' (adapté à ' Classification') → logprob: -0.018711229786276817
    2. ' Classification' → logprob: -4.018711090087891
    3. '           ' → logprob: -7.518711090087891
    4. 'Class' → logprob: -11.51871109008789
    5. '               ' → logprob: -12.14371109008789
    6. '   ' → logprob: -13.26871109008789
    7. '       ' → logprob: -14.51871109008789
    8. 'Classifier' → logprob: -14.76871109008789
    9. 'classification' → logprob: -15.64371109008789
    10. ' ' → logprob: -15.89371109008789

Token 215: 'Rule' (ID: 11845)
  Prédit: 'Rule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rule' → logprob: -7.896309739408025e-07
    2. 'R' → logprob: -15.125000953674316
    3. ' Rule' → logprob: -15.750000953674316
    4. 'Rules' → logprob: -16.5
    5. '_rule' → logprob: -16.625
    6. '(R' → logprob: -17.125
    7. '   ' → logprob: -17.5
    8. 'rule' → logprob: -17.5
    9. '.Rule' → logprob: -17.75
    10. '[' → logprob: -18.25

Token 216: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.012146511115133762
    2. '(' → logprob: -4.637146472930908
    3. ' (' → logprob: -6.137146472930908
    4. '(
' → logprob: -8.887146949768066
    5. '(self' → logprob: -10.512146949768066
    6. '           ' → logprob: -10.637146949768066
    7. '               ' → logprob: -10.637146949768066
    8. ' lambda' → logprob: -12.262146949768066
    9. 'lambda' → logprob: -12.762146949768066
    10. '            ' → logprob: -13.262146949768066

Token 217: ' s' (ID: 265)
  Prédit: ' score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' score' → logprob: -0.1929614096879959
    2. ' s' → logprob: -1.8179614543914795
    3. 'score' → logprob: -4.4429612159729
    4. 's' → logprob: -6.6929612159729
    5. ' x' → logprob: -9.567961692810059
    6. ' sc' → logprob: -10.692961692810059
    7. ' self' → logprob: -11.192961692810059
    8. ' ' → logprob: -12.442961692810059
    9. '	score' → logprob: -12.442961692810059
    10. '(score' → logprob: -12.692961692810059

Token 218: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0019511326681822538
    2. ' :' → logprob: -6.251951217651367
    3. 's' → logprob: -11.751951217651367
    4. ':s' → logprob: -11.876951217651367
    5. ':
' → logprob: -13.126951217651367
    6. '_:' → logprob: -13.376951217651367
    7. '   ' → logprob: -14.001951217651367
    8. 'has' → logprob: -14.501951217651367
    9. ' ' → logprob: -14.501951217651367
    10. ':is' → logprob: -15.126951217651367

Token 219: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4743409752845764
    2. ' s' → logprob: -0.9743409752845764
    3. ' ' → logprob: -10.34934139251709
    4. '(s' → logprob: -10.34934139251709
    5. ' (' → logprob: -10.47434139251709
    6. '100' → logprob: -10.72434139251709
    7. '   ' → logprob: -10.72434139251709
    8. 'has' → logprob: -10.84934139251709
    9. ')' → logprob: -11.09934139251709
    10. ' has' → logprob: -11.66184139251709

Token 220: '.has' (ID: 10752)
  Prédit: '.has'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.has' → logprob: -0.07326489686965942
    2. '.average' → logprob: -3.3232648372650146
    3. '.' → logprob: -3.4482648372650146
    4. '.math' → logprob: -6.073265075683594
    5. '.score' → logprob: -9.073265075683594
    6. ' .' → logprob: -9.448265075683594
    7. '.avg' → logprob: -9.823265075683594
    8. '.have' → logprob: -9.823265075683594
    9. '.mean' → logprob: -10.198265075683594
    10. '.is' → logprob: -10.948265075683594

Token 221: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -6.704273118884885e-07
    2. '_' → logprob: -14.375000953674316
    3. '_p' → logprob: -17.125
    4. '_pe' → logprob: -17.875
    5. '
' → logprob: -19.875
    6. '__' → logprob: -20.125
    7. 'per' → logprob: -20.375
    8. ' _' → logprob: -20.625
    9. '_complete' → logprob: -21.125
    10. '_perf' → logprob: -21.125

Token 222: 'fect' (ID: 3267)
  Prédit: 'fect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fect' → logprob: -0.0019750266801565886
    2. 'ffect' → logprob: -6.376975059509277
    3. 'ct' → logprob: -8.501975059509277
    4. '```' → logprob: -11.001975059509277
    5. 'rect' → logprob: -11.126975059509277
    6. 'f' → logprob: -11.251975059509277
    7. '#' → logprob: -12.501975059509277
    8. '
' → logprob: -13.001975059509277
    9. 'sect' → logprob: -13.251975059509277
    10. 'lect' → logprob: -13.251975059509277

Token 223: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -2.2200749754119897e-06
    2. '_' → logprob: -13.625001907348633
    3. '_s' → logprob: -14.375001907348633
    4. 'score' → logprob: -15.625001907348633
    5. ' _' → logprob: -16.375001907348633
    6. '_scores' → logprob: -16.750001907348633
    7. '
' → logprob: -17.875001907348633
    8. '_sc' → logprob: -18.250001907348633
    9. '```' → logprob: -18.875001907348633
    10. 's' → logprob: -19.000001907348633

Token 224: '(),' (ID: 2547)
  Prédit: '(),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -0.02079341933131218
    2. '()' → logprob: -3.8957934379577637
    3. ' (),' → logprob: -8.645792961120605
    4. ',' → logprob: -10.020792961120605
    5. '()
' → logprob: -11.395792961120605
    6. ' ()' → logprob: -11.645792961120605
    7. '(),
' → logprob: -12.520792961120605
    8. '()),' → logprob: -13.395792961120605
    9. '(),"' → logprob: -13.770792961120605
    10. '()==' → logprob: -13.895792961120605

Token 225: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0632324367761612
    2. ' ' → logprob: -2.813232421875
    3. 'level' → logprob: -7.688232421875
    4. '   ' → logprob: -7.938232421875
    5. '           ' → logprob: -9.313232421875
    6. '       ' → logprob: -9.438232421875
    7. '  ' → logprob: -9.563232421875
    8. '    ' → logprob: -9.813232421875
    9. '     ' → logprob: -10.563232421875
    10. ' level' → logprob: -10.563232421875

Token 226: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003107943630311638
    2. ' ' → logprob: -8.250310897827148
    3. '   ' → logprob: -10.000310897827148
    4. '  ' → logprob: -13.750310897827148
    5. '       ' → logprob: -13.750310897827148
    6. '     ' → logprob: -14.750310897827148
    7. '    ' → logprob: -14.750310897827148
    8. '           ' → logprob: -14.875310897827148
    9. '
' → logprob: -15.250310897827148
    10. '```' → logprob: -16.50031089782715

Token 227: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.513339445111342e-05
    2. '),' → logprob: -10.750044822692871
    3. ' ,' → logprob: -11.000044822692871
    4. ',
' → logprob: -12.375044822692871
    5. '),
' → logprob: -14.000044822692871
    6. '       ' → logprob: -14.625044822692871
    7. '   ' → logprob: -14.750044822692871
    8. ',

' → logprob: -15.500044822692871
    9. '           ' → logprob: -15.750044822692871
    10. ')' → logprob: -15.750044822692871

Token 228: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.7213109731674194
    2. ''' → logprob: -0.7213109731674194
    3. ' "' → logprob: -4.596311092376709
    4. '"A' → logprob: -4.846311092376709
    5. ' '' → logprob: -5.346311092376709
    6. ''A' → logprob: -6.096311092376709
    7. ''S' → logprob: -6.346311092376709
    8. '"S' → logprob: -7.971311092376709
    9. '"H' → logprob: -8.84631061553955
    10. '   ' → logprob: -9.09631061553955

Token 229: 'A' (ID: 32)
  Prédit: 'Perfect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Perfect' → logprob: -0.29578733444213867
    2. 'perfect' → logprob: -2.6707873344421387
    3. 'S' → logprob: -2.7957873344421387
    4. 'Excellent' → logprob: -2.9207873344421387
    5. 'Top' → logprob: -4.045787334442139
    6. 'A' → logprob: -5.045787334442139
    7. 'Outstanding' → logprob: -5.420787334442139
    8. 'top' → logprob: -5.545787334442139
    9. 'Honor' → logprob: -5.670787334442139
    10. 'Master' → logprob: -5.795787334442139

Token 230: '"),
' (ID: 8132)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.600915789604187
    2. '"),
' → logprob: -1.350915789604187
    3. '"),' → logprob: -2.1009159088134766
    4. '++' → logprob: -2.9759159088134766
    5. '1' → logprob: -5.850915908813477
    6. '"' → logprob: -6.100915908813477
    7. '+")' → logprob: -6.100915908813477
    8. '*' → logprob: -6.350915908813477
    9. 'plus' → logprob: -6.350915908813477
    10. '+"' → logprob: -6.725915908813477

Token 231: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004015476442873478
    2. 'Classification' → logprob: -5.6290154457092285
    3. ' Classification' → logprob: -7.8790154457092285
    4. '       ' → logprob: -10.254015922546387
    5. '   ' → logprob: -14.504015922546387
    6. '		' → logprob: -14.754015922546387
    7. 'classification' → logprob: -15.379015922546387
    8. '               ' → logprob: -15.504015922546387
    9. ' classification' → logprob: -17.00401496887207
    10. '          ' → logprob: -17.25401496887207

Token 232: ' Classification' (ID: 98892)
  Prédit: 'Classification'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Classification' (adapté à ' Classification') → logprob: -0.3196234703063965
    2. '           ' → logprob: -1.3196234703063965
    3. ' Classification' → logprob: -5.0696234703063965
    4. '   ' → logprob: -10.819623947143555
    5. '       ' → logprob: -11.069623947143555
    6. '               ' → logprob: -11.819623947143555
    7. 'classification' → logprob: -12.069623947143555
    8. ' classification' → logprob: -12.569623947143555
    9. ' ' → logprob: -13.819623947143555
    10. '          ' → logprob: -14.444623947143555

Token 233: 'Rule' (ID: 11845)
  Prédit: 'Rule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rule' → logprob: -1.5048530030981055e-06
    2. 'Rules' → logprob: -13.625001907348633
    3. 'rule' → logprob: -16.375001907348633
    4. ' Rule' → logprob: -17.375001907348633
    5. '   ' → logprob: -17.625001907348633
    6. 'RULE' → logprob: -17.750001907348633
    7. '       ' → logprob: -18.750001907348633
    8. '
' → logprob: -19.000001907348633
    9. '.Rule' → logprob: -19.000001907348633
    10. 'Route' → logprob: -19.000001907348633

Token 234: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -5.6696149840718135e-05
    2. '(' → logprob: -10.125056266784668
    3. ' (' → logprob: -11.125056266784668
    4. '(
' → logprob: -13.375056266784668
    5. 'lambda' → logprob: -16.250057220458984
    6. ' lambda' → logprob: -16.500057220458984
    7. '(l' → logprob: -17.000057220458984
    8. '=lambda' → logprob: -17.125057220458984
    9. '(

' → logprob: -18.125057220458984
    10. '(class' → logprob: -19.250057220458984

Token 235: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.0076099359430372715
    2. 's' → logprob: -4.882609844207764
    3. ' ' → logprob: -14.132610321044922
    4. ' ' → logprob: -14.257610321044922
    5. '(s' → logprob: -14.507610321044922
    6. '   ' → logprob: -14.632610321044922
    7. '    ' → logprob: -15.007610321044922
    8. '        ' → logprob: -15.882610321044922
    9. '	s' → logprob: -16.257610321044922
    10. ' lambda' → logprob: -16.257610321044922

Token 236: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017314640572294593
    2. ' :' → logprob: -6.3767313957214355
    3. ':s' → logprob: -11.626731872558594
    4. 'average' → logprob: -11.626731872558594
    5. '.average' → logprob: -12.376731872558594
    6. ':
' → logprob: -13.501731872558594
    7. '   ' → logprob: -13.751731872558594
    8. '.' → logprob: -13.751731872558594
    9. '.s' → logprob: -13.876731872558594
    10. 's' → logprob: -14.001731872558594

Token 237: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.25201645493507385
    2. 's' → logprob: -1.5020164251327515
    3. ' ' → logprob: -10.252016067504883
    4. '   ' → logprob: -11.127016067504883
    5. '100' → logprob: -12.002016067504883
    6. '90' → logprob: -12.127016067504883
    7. '10' → logprob: -12.752016067504883
    8. '
' → logprob: -12.877016067504883
    9. '(s' → logprob: -13.252016067504883
    10. '    ' → logprob: -13.502016067504883

Token 238: '.math' (ID: 35319)
  Prédit: '.average'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.average' → logprob: -0.0026586547028273344
    2. '.' → logprob: -6.002658843994141
    3. '.math' → logprob: -9.12765884399414
    4. 'average' → logprob: -9.87765884399414
    5. '.avg' → logprob: -11.62765884399414
    6. ' .' → logprob: -12.25265884399414
    7. '.mean' → logprob: -12.50265884399414
    8. '.has' → logprob: -13.87765884399414
    9. 'Average' → logprob: -14.12765884399414
    10. ' average' → logprob: -14.37765884399414

Token 239: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16746434569358826
    2. ' >=' → logprob: -2.292464256286621
    3. ' +' → logprob: -3.667464256286621
    4. '>=' → logprob: -4.042464256286621
    5. '+' → logprob: -5.792464256286621
    6. ' ' → logprob: -6.167464256286621
    7. ' >' → logprob: -6.542464256286621
    8. '_average' → logprob: -6.792464256286621
    9. '>' → logprob: -7.417464256286621
    10. '  ' → logprob: -8.042464256286621

Token 240: 'english' (ID: 64215)
  Prédit: 'english'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'english' → logprob: -0.00010580805974313989
    2. 'average' → logprob: -9.250105857849121
    3. '
' → logprob: -12.750105857849121
    4. ' english' → logprob: -12.875105857849121
    5. 'English' → logprob: -13.875105857849121
    6. ' ' → logprob: -14.000105857849121
    7. 'eng' → logprob: -14.000105857849121
    8. '   ' → logprob: -15.625105857849121
    9. '

' → logprob: -15.750105857849121
    10. '```' → logprob: -15.750105857849121

Token 241: '_average' (ID: 89222)
  Prédit: '_average'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_average' → logprob: -1.3425219549390022e-05
    2. '_' → logprob: -11.50001335144043
    3. 'average' → logprob: -13.12501335144043
    4. '_score' → logprob: -14.00001335144043
    5. '_avg' → logprob: -15.25001335144043
    6. '```' → logprob: -16.50001335144043
    7. ')_' → logprob: -16.62501335144043
    8. 'Average' → logprob: -17.75001335144043
    9. '>' → logprob: -17.75001335144043
    10. '
' → logprob: -17.87501335144043

Token 242: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0017904938431456685
    2. '()>' → logprob: -6.501790523529053
    3. ' ()' → logprob: -8.376790046691895
    4. ' >=' → logprob: -10.876790046691895
    5. '>=' → logprob: -11.251790046691895
    6. ')' → logprob: -11.626790046691895
    7. '>' → logprob: -11.876790046691895
    8. ' >' → logprob: -13.251790046691895
    9. '()
' → logprob: -13.376790046691895
    10. '()==' → logprob: -13.376790046691895

Token 243: ' >=' (ID: 5064)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1727370321750641
    2. ' >=' → logprob: -2.1727371215820312
    3. '>=' → logprob: -3.6727371215820312
    4. '()>' → logprob: -5.172737121582031
    5. ' ()' → logprob: -5.547737121582031
    6. ')' → logprob: -5.547737121582031
    7. '>' → logprob: -5.672737121582031
    8. ' >' → logprob: -6.297737121582031
    9. ' ' → logprob: -8.672737121582031
    10. ')>=' → logprob: -8.672737121582031

Token 244: ' ' (ID: 220)
  Prédit: '90'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '90' → logprob: -0.05539141595363617
    2. '80' → logprob: -3.430391311645508
    3. '85' → logprob: -4.805391311645508
    4. '70' → logprob: -5.180391311645508
    5. '9' → logprob: -5.680391311645508
    6. '95' → logprob: -6.305391311645508
    7. '75' → logprob: -6.805391311645508
    8. '8' → logprob: -7.680391311645508
    9. '7' → logprob: -8.055391311645508
    10. '60' → logprob: -8.055391311645508

Token 245: '90' (ID: 2744)
  Prédit: '90'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '90' → logprob: -0.04279259964823723
    2. '80' → logprob: -3.542792558670044
    3. '85' → logprob: -5.167792797088623
    4. '70' → logprob: -5.417792797088623
    5. '75' → logprob: -6.917792797088623
    6. '60' → logprob: -7.292792797088623
    7. '95' → logprob: -7.292792797088623
    8. '9' → logprob: -8.292792320251465
    9. ' ' → logprob: -9.292792320251465
    10. '8' → logprob: -9.792792320251465

Token 246: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008542590774595737
    2. ' ,' → logprob: -4.883542537689209
    3. '       ' → logprob: -8.133543014526367
    4. ' and' → logprob: -8.633543014526367
    5. '),' → logprob: -8.758543014526367
    6. '   ' → logprob: -8.883543014526367
    7. 'and' → logprob: -9.508543014526367
    8. '           ' → logprob: -9.633543014526367
    9. '0' → logprob: -11.383543014526367
    10. ' ),' → logprob: -13.008543014526367

Token 247: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5822563171386719
    2. '2' → logprob: -0.8322563171386719
    3. '1' → logprob: -5.082256317138672
    4. '   ' → logprob: -10.207256317138672
    5. '    ' → logprob: -10.957256317138672
    6. '  ' → logprob: -11.082256317138672
    7. '           ' → logprob: -11.832256317138672
    8. '       ' → logprob: -12.207256317138672
    9. '     ' → logprob: -13.207256317138672
    10. '        ' → logprob: -13.832256317138672

Token 248: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.014724548906087875
    2. ' ' → logprob: -4.2647247314453125
    3. '1' → logprob: -7.6397247314453125
    4. '   ' → logprob: -9.764724731445312
    5. '           ' → logprob: -12.014724731445312
    6. '       ' → logprob: -12.389724731445312
    7. '  ' → logprob: -12.514724731445312
    8. '    ' → logprob: -12.764724731445312
    9. '     ' → logprob: -13.764724731445312
    10. '
' → logprob: -14.077224731445312

Token 249: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001782402629032731
    2. ' ,' → logprob: -6.626782417297363
    3. '),' → logprob: -7.876782417297363
    4. '),
' → logprob: -10.376782417297363
    5. ',
' → logprob: -11.501782417297363
    6. '       ' → logprob: -11.751782417297363
    7. ')' → logprob: -12.001782417297363
    8. '   ' → logprob: -12.376782417297363
    9. ',),
' → logprob: -12.376782417297363
    10. ' ),' → logprob: -12.501782417297363

Token 250: ' "' (ID: 392)
  Prédit: '"B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"B' → logprob: -0.06371843069791794
    2. ' "' → logprob: -3.188718318939209
    3. '"A' → logprob: -4.063718318939209
    4. '"' → logprob: -5.813718318939209
    5. ' ' → logprob: -8.938718795776367
    6. '"S' → logprob: -9.063718795776367
    7. ')' → logprob: -11.063718795776367
    8. ''' → logprob: -11.188718795776367
    9. '")' → logprob: -11.688718795776367
    10. '   ' → logprob: -11.688718795776367

Token 251: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.06450800597667694
    2. 'S' → logprob: -3.5645079612731934
    3. 'B' → logprob: -3.6895079612731934
    4. '"A' → logprob: -5.439507961273193
    5. ' A' → logprob: -6.439507961273193
    6. 'AA' → logprob: -6.564507961273193
    7. '"' → logprob: -7.814507961273193
    8. '"S' → logprob: -8.189508438110352
    9. 'Ａ' → logprob: -8.814508438110352
    10. '"B' → logprob: -8.939508438110352

Token 252: '"),
' (ID: 8132)
  Prédit: '"),
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"),
' → logprob: -0.6353951096534729
    2. '"),' → logprob: -0.7603951096534729
    3. '),' → logprob: -6.510395050048828
    4. '")' → logprob: -7.385395050048828
    5. ')' → logprob: -8.135395050048828
    6. '),
' → logprob: -8.885395050048828
    7. '"' → logprob: -9.135395050048828
    8. '"),

' → logprob: -10.760395050048828
    9. '"),
' → logprob: -10.760395050048828
    10. ' "),' → logprob: -10.760395050048828

Token 253: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20318248867988586
    2. '       ' → logprob: -1.7031824588775635
    3. 'Classification' → logprob: -6.453182697296143
    4. ' Classification' → logprob: -8.953182220458984
    5. '   ' → logprob: -9.953182220458984
    6. '	       ' → logprob: -12.078182220458984
    7. '	   ' → logprob: -12.953182220458984
    8. '		' → logprob: -12.953182220458984
    9. '	' → logprob: -13.203182220458984
    10. ']' → logprob: -13.828182220458984

Token 254: ' Classification' (ID: 98892)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02687084674835205
    2. 'Classification' (adapté à ' Classification') → logprob: -3.6518707275390625
    3. '       ' → logprob: -7.7768707275390625
    4. ' Classification' → logprob: -8.901870727539062
    5. '   ' → logprob: -11.401870727539062
    6. 'classification' → logprob: -13.526870727539062
    7. '          ' → logprob: -13.901870727539062
    8. '         ' → logprob: -14.651870727539062
    9. '               ' → logprob: -15.151870727539062
    10. '		' → logprob: -15.651870727539062

Token 255: 'Rule' (ID: 11845)
  Prédit: 'Rule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rule' → logprob: -5.512236498361744e-07
    2. 'Rules' → logprob: -14.750000953674316
    3. '_rule' → logprob: -16.375
    4. ' Rule' → logprob: -17.375
    5. 'rule' → logprob: -17.875
    6. '_RULE' → logprob: -18.375
    7. 'RULE' → logprob: -19.125
    8. '
' → logprob: -20.375
    9. '   ' → logprob: -20.375
    10. 'class' → logprob: -20.375

Token 256: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -6.623244553338736e-05
    2. ' (' → logprob: -10.250065803527832
    3. '(' → logprob: -10.500065803527832
    4. '(
' → logprob: -12.875065803527832
    5. 'lambda' → logprob: -15.000065803527832
    6. '=lambda' → logprob: -15.750065803527832
    7. ' lambda' → logprob: -15.750065803527832
    8. '(l' → logprob: -16.75006675720215
    9. '           ' → logprob: -17.75006675720215
    10. '   ' → logprob: -19.00006675720215

Token 257: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.06197608634829521
    2. 's' → logprob: -2.811976194381714
    3. '(s' → logprob: -12.811976432800293
    4. '   ' → logprob: -13.186976432800293
    5. 'self' → logprob: -14.186976432800293
    6. '       ' → logprob: -14.436976432800293
    7. '    ' → logprob: -14.561976432800293
    8. '	s' → logprob: -14.686976432800293
    9. '           ' → logprob: -14.811976432800293
    10. ' self' → logprob: -14.936976432800293

Token 258: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00022272850037552416
    2. ' :' → logprob: -8.625223159790039
    3. ' s' → logprob: -11.500223159790039
    4. 's' → logprob: -11.625223159790039
    5. '.' → logprob: -11.625223159790039
    6. ':s' → logprob: -12.625223159790039
    7. '   ' → logprob: -13.250223159790039
    8. ':
' → logprob: -13.375223159790039
    9. '       ' → logprob: -13.375223159790039
    10. '.math' → logprob: -13.625223159790039

Token 259: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.16078507900238037
    2. ' s' → logprob: -1.9107850790023804
    3. 'score' → logprob: -8.160784721374512
    4. '   ' → logprob: -9.410784721374512
    5. '90' → logprob: -9.910784721374512
    6. ' ' → logprob: -10.535784721374512
    7. '       ' → logprob: -10.660784721374512
    8. '           ' → logprob: -11.160784721374512
    9. ' score' → logprob: -11.160784721374512
    10. '
' → logprob: -11.910784721374512

Token 260: '.average' (ID: 130570)
  Prédit: '.average'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.average' → logprob: -0.005306335166096687
    2. '.' → logprob: -5.380306243896484
    3. '.math' → logprob: -7.380306243896484
    4. '.j' → logprob: -10.130306243896484
    5. 'average' → logprob: -11.005306243896484
    6. ' .' → logprob: -13.380306243896484
    7. '.has' → logprob: -13.880306243896484
    8. '.avg' → logprob: -14.380306243896484
    9. '.mean' → logprob: -14.505306243896484
    10. ' average' → logprob: -15.005306243896484

Token 261: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0007127894787117839
    2. ')' → logprob: -7.375712871551514
    3. ' ()' → logprob: -10.250712394714355
    4. '>=' → logprob: -10.625712394714355
    5. '()>' → logprob: -11.625712394714355
    6. ' >=' → logprob: -11.750712394714355
    7. '(' → logprob: -13.125712394714355
    8. '())' → logprob: -13.625712394714355
    9. ')>=' → logprob: -13.625712394714355
    10. '   ' → logprob: -14.250712394714355

Token 262: ' >=' (ID: 5064)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5015815496444702
    2. '>=' → logprob: -1.6265815496444702
    3. ' >=' → logprob: -1.8765815496444702
    4. ')' → logprob: -3.2515816688537598
    5. '   ' → logprob: -5.62658166885376
    6. ')>=' → logprob: -6.50158166885376
    7. ' ' → logprob: -8.501581192016602
    8. '>' → logprob: -8.751581192016602
    9. ']>=' → logprob: -8.751581192016602
    10. ' ()' → logprob: -9.001581192016602

Token 263: ' ' (ID: 220)
  Prédit: '80'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '80' → logprob: -0.31733524799346924
    2. '85' → logprob: -1.6923352479934692
    3. ' ' → logprob: -2.6923351287841797
    4. '70' → logprob: -5.06733512878418
    5. '75' → logprob: -5.06733512878418
    6. '90' → logprob: -5.06733512878418
    7. '8' → logprob: -7.81733512878418
    8. '
' → logprob: -8.06733512878418
    9. '60' → logprob: -8.44233512878418
    10. '7' → logprob: -9.69233512878418

Token 264: '80' (ID: 2241)
  Prédit: '80'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '80' → logprob: -0.15117147564888
    2. '85' → logprob: -2.6511714458465576
    3. '70' → logprob: -3.2761714458465576
    4. '90' → logprob: -3.9011714458465576
    5. '75' → logprob: -4.901171684265137
    6. '60' → logprob: -5.651171684265137
    7. ' ' → logprob: -7.901171684265137
    8. '
' → logprob: -9.151171684265137
    9. '8' → logprob: -9.463671684265137
    10. '7' → logprob: -10.026171684265137

Token 265: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005048982799053192
    2. ' ,' → logprob: -5.380048751831055
    3. '   ' → logprob: -8.130048751831055
    4. '       ' → logprob: -9.380048751831055
    5. '1' → logprob: -11.380048751831055
    6. '),' → logprob: -11.880048751831055
    7. '(),' → logprob: -12.005048751831055
    8. '           ' → logprob: -12.380048751831055
    9. ' ' → logprob: -12.630048751831055
    10. '  ' → logprob: -12.630048751831055

Token 266: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6345623731613159
    2. '2' → logprob: -1.009562373161316
    3. '1' → logprob: -2.2595624923706055
    4. '   ' → logprob: -7.6345624923706055
    5. '3' → logprob: -8.509562492370605
    6. '    ' → logprob: -9.259562492370605
    7. '       ' → logprob: -9.634562492370605
    8. '  ' → logprob: -9.634562492370605
    9. '           ' → logprob: -10.384562492370605
    10. '0' → logprob: -10.572062492370605

Token 267: '1' (ID: 16)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5612097978591919
    2. '2' → logprob: -0.9362097978591919
    3. '1' → logprob: -3.3112096786499023
    4. '   ' → logprob: -8.311209678649902
    5. '3' → logprob: -8.686209678649902
    6. '       ' → logprob: -9.311209678649902
    7. '0' → logprob: -9.436209678649902
    8. '    ' → logprob: -9.436209678649902
    9. '           ' → logprob: -9.436209678649902
    10. '        ' → logprob: -10.186209678649902

Token 268: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006858677952550352
    2. ' ,' → logprob: -7.625685691833496
    3. '),' → logprob: -9.000685691833496
    4. ')' → logprob: -10.125685691833496
    5. '           ' → logprob: -11.375685691833496
    6. ',
' → logprob: -11.625685691833496
    7. '       ' → logprob: -11.875685691833496
    8. '   ' → logprob: -12.750685691833496
    9. ',)' → logprob: -14.125685691833496
    10. '0' → logprob: -14.375685691833496

Token 269: ' "' (ID: 392)
  Prédit: '"B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"B' → logprob: -0.1760774701833725
    2. ' "' → logprob: -1.9260774850845337
    3. '"A' → logprob: -4.301077365875244
    4. '"' → logprob: -6.551077365875244
    5. '"C' → logprob: -7.676077365875244
    6. ' ' → logprob: -8.801077842712402
    7. 'True' → logprob: -9.801077842712402
    8. ' True' → logprob: -10.926077842712402
    9. ''' → logprob: -11.801077842712402
    10. '"I' → logprob: -12.176077842712402

Token 270: 'A' (ID: 32)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.008372019976377487
    2. 'A' → logprob: -5.383371829986572
    3. '"B' → logprob: -6.008371829986572
    4. '"' → logprob: -7.508371829986572
    5. ' B' → logprob: -8.00837230682373
    6. ''' → logprob: -9.50837230682373
    7. '"A' → logprob: -9.75837230682373
    8. '"""' → logprob: -9.88337230682373
    9. '   ' → logprob: -10.57087230682373
    10. 'Ｂ' → logprob: -10.82087230682373

Token 271: '"),
' (ID: 8132)
  Prédit: '"),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"),' → logprob: -0.25021031498908997
    2. '"),
' → logprob: -2.0002102851867676
    3. '),' → logprob: -2.7502102851867676
    4. ')' → logprob: -4.250210285186768
    5. '")' → logprob: -5.000210285186768
    6. '),
' → logprob: -7.750210285186768
    7. '       ' → logprob: -8.000210762023926
    8. '"),
' → logprob: -8.875210762023926
    9. ')")' → logprob: -9.250210762023926
    10. '   ' → logprob: -9.875210762023926

Token 272: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2582687437534332
    2. '           ' → logprob: -1.5082687139511108
    3. 'Classification' → logprob: -6.0082688331604
    4. '   ' → logprob: -6.2582688331604
    5. ']' → logprob: -6.5082688331604
    6. ' Classification' → logprob: -7.7582688331604
    7. '               ' → logprob: -12.133268356323242
    8. '	' → logprob: -12.508268356323242
    9. '	   ' → logprob: -12.758268356323242
    10. '```' → logprob: -13.383268356323242

Token 273: ' Classification' (ID: 98892)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23716266453266144
    2. 'Classification' (adapté à ' Classification') → logprob: -1.987162709236145
    3. '   ' → logprob: -3.4871625900268555
    4. ']' → logprob: -3.4871625900268555
    5. '           ' → logprob: -4.6121625900268555
    6. ' Classification' → logprob: -5.8621625900268555
    7. ']
' → logprob: -10.737162590026855
    8. 'Class' → logprob: -10.737162590026855
    9. '#' → logprob: -11.737162590026855
    10. 'classification' → logprob: -11.862162590026855

Token 274: 'Rule' (ID: 11845)
  Prédit: 'Rule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rule' → logprob: -2.1008713702030946e-06
    2. 'Rules' → logprob: -13.500001907348633
    3. '   ' → logprob: -15.875001907348633
    4. ' Rule' → logprob: -16.000001907348633
    5. '[' → logprob: -16.375001907348633
    6. '.Rule' → logprob: -16.500001907348633
    7. '_rule' → logprob: -16.500001907348633
    8. '[
' → logprob: -16.875001907348633
    9. '_RULE' → logprob: -17.375001907348633
    10. '       ' → logprob: -17.500001907348633

Token 275: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.0004670153430197388
    2. '(' → logprob: -7.875466823577881
    3. ' (' → logprob: -9.750467300415039
    4. '(
' → logprob: -10.500467300415039
    5. '           ' → logprob: -15.000467300415039
    6. '(

' → logprob: -15.875467300415039
    7. 'lambda' → logprob: -16.00046730041504
    8. ' lambda' → logprob: -16.00046730041504
    9. '(None' → logprob: -16.00046730041504
    10. '(l' → logprob: -16.25046730041504

Token 276: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.5761482119560242
    2. 's' → logprob: -0.8261482119560242
    3. 'self' → logprob: -8.95114803314209
    4. ' self' → logprob: -10.20114803314209
    5. '(s' → logprob: -11.20114803314209
    6. 'score' → logprob: -11.57614803314209
    7. '           ' → logprob: -11.95114803314209
    8. '   ' → logprob: -12.95114803314209
    9. '       ' → logprob: -13.07614803314209
    10. '	s' → logprob: -13.70114803314209

Token 277: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.44025278091430664
    2. '.math' → logprob: -1.0652527809143066
    3. '.average' → logprob: -4.940252780914307
    4. '.' → logprob: -5.565252780914307
    5. '   ' → logprob: -8.690252304077148
    6. '.has' → logprob: -9.065252304077148
    7. '.s' → logprob: -10.190252304077148
    8. '.python' → logprob: -10.315252304077148
    9. 'math' → logprob: -10.565252304077148
    10. ' .' → logprob: -10.815252304077148

Token 278: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02157142013311386
    2. ' s' → logprob: -3.896571397781372
    3. 'self' → logprob: -7.771571636199951
    4. 'score' → logprob: -7.771571636199951
    5. 'True' → logprob: -9.896571159362793
    6. ' self' → logprob: -11.271571159362793
    7. 'sum' → logprob: -11.396571159362793
    8. '
' → logprob: -11.396571159362793
    9. 'all' → logprob: -11.521571159362793
    10. 'False' → logprob: -11.646571159362793

Token 279: '.average' (ID: 130570)
  Prédit: '.average'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.average' → logprob: -0.08038584142923355
    2. '.math' → logprob: -2.58038592338562
    3. '.' → logprob: -6.955385684967041
    4. 'average' → logprob: -7.830385684967041
    5. '.has' → logprob: -10.2053861618042
    6. '.mean' → logprob: -10.3303861618042
    7. '.avg' → logprob: -10.8303861618042
    8. 'math' → logprob: -10.8303861618042
    9. ' average' → logprob: -12.0803861618042
    10. 'Average' → logprob: -12.5803861618042

Token 280: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00568121112883091
    2. ')' → logprob: -5.505681037902832
    3. ' >=' → logprob: -7.130681037902832
    4. ' ()' → logprob: -8.005681037902832
    5. '>=' → logprob: -8.130681037902832
    6. '   ' → logprob: -9.755681037902832
    7. ' ' → logprob: -10.630681037902832
    8. '()>' → logprob: -10.630681037902832
    9. '()<' → logprob: -10.880681037902832
    10. ')>=' → logprob: -10.880681037902832

Token 281: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.10700598359107971
    2. '>=' → logprob: -2.482006072998047
    3. '()' → logprob: -4.732006072998047
    4. ')' → logprob: -4.982006072998047
    5. ' ' → logprob: -7.232006072998047
    6. '   ' → logprob: -7.482006072998047
    7. ')>=' → logprob: -7.732006072998047
    8. ' <' → logprob: -8.607006072998047
    9. '>' → logprob: -8.982006072998047
    10. '<' → logprob: -10.107006072998047

Token 282: ' ' (ID: 220)
  Prédit: '70'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '70' → logprob: -0.044165074825286865
    2. '60' → logprob: -3.1691651344299316
    3. '75' → logprob: -7.669165134429932
    4. '50' → logprob: -8.294164657592773
    5. '65' → logprob: -8.294164657592773
    6. ' ' → logprob: -8.794164657592773
    7. '
' → logprob: -10.919164657592773
    8. '7' → logprob: -11.169164657592773
    9. '"' → logprob: -12.294164657592773
    10. '90' → logprob: -13.169164657592773

Token 283: '70' (ID: 2789)
  Prédit: '70'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '70' → logprob: -0.05582250654697418
    2. '60' → logprob: -2.9308226108551025
    3. '50' → logprob: -7.930822372436523
    4. '65' → logprob: -8.180822372436523
    5. '75' → logprob: -8.680822372436523
    6. '
' → logprob: -9.680822372436523
    7. '7' → logprob: -10.055822372436523
    8. ' ' → logprob: -11.930822372436523
    9. '"' → logprob: -12.618322372436523
    10. '90' → logprob: -13.055822372436523

Token 284: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008022417314350605
    2. ' ,' → logprob: -7.375802040100098
    3. '       ' → logprob: -9.000802040100098
    4. '           ' → logprob: -10.500802040100098
    5. '   ' → logprob: -11.375802040100098
    6. '),' → logprob: -12.375802040100098
    7. ',
' → logprob: -13.000802040100098
    8. ' and' → logprob: -13.250802040100098
    9. ')' → logprob: -13.875802040100098
    10. '```' → logprob: -14.250802040100098

Token 285: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.594508707523346
    2. ' ' → logprob: -0.844508707523346
    3. '1' → logprob: -4.094508647918701
    4. '           ' → logprob: -7.219508647918701
    5. '3' → logprob: -7.594508647918701
    6. '0' → logprob: -8.96950912475586
    7. '   ' → logprob: -9.34450912475586
    8. '    ' → logprob: -9.84450912475586
    9. '4' → logprob: -9.96950912475586
    10. '       ' → logprob: -10.71950912475586

Token 286: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006163293495774269
    2. '1' → logprob: -5.256163120269775
    3. ' ' → logprob: -7.131163120269775
    4. '3' → logprob: -9.506163597106934
    5. '4' → logprob: -10.631163597106934
    6. '0' → logprob: -11.006163597106934
    7. '5' → logprob: -12.756163597106934
    8. '   ' → logprob: -12.881163597106934
    9. '
' → logprob: -13.318663597106934
    10. '10' → logprob: -13.881163597106934

Token 287: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.7385154428193346e-05
    2. ' ,' → logprob: -10.87503719329834
    3. '           ' → logprob: -11.75003719329834
    4. ')' → logprob: -12.37503719329834
    5. '),' → logprob: -12.62503719329834
    6. '       ' → logprob: -13.37503719329834
    7. ',
' → logprob: -14.12503719329834
    8. '   ' → logprob: -15.25003719329834
    9. ',)' → logprob: -16.500038146972656
    10. '‌,' → logprob: -17.125038146972656

Token 288: ' "' (ID: 392)
  Prédit: '"B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"B' → logprob: -0.06368890404701233
    2. '"' → logprob: -3.3136889934539795
    3. ' "' → logprob: -3.6886889934539795
    4. ''' → logprob: -9.313689231872559
    5. ' ' → logprob: -9.563689231872559
    6. '"A' → logprob: -9.688689231872559
    7. '"C' → logprob: -10.938689231872559
    8. '"T' → logprob: -11.063689231872559
    9. '"class' → logprob: -12.188689231872559
    10. '   ' → logprob: -12.188689231872559

Token 289: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.002943709259852767
    2. '"B' → logprob: -6.002943515777588
    3. ' B' → logprob: -8.002943992614746
    4. ''' → logprob: -9.377943992614746
    5. '"' → logprob: -10.752943992614746
    6. 'C' → logprob: -11.752943992614746
    7. 'Ｂ' → logprob: -12.627943992614746
    8. ' "' → logprob: -12.877943992614746
    9. 'b' → logprob: -13.002943992614746
    10. '	B' → logprob: -13.440443992614746

Token 290: '"),
' (ID: 8132)
  Prédit: '"),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"),' → logprob: -0.3373619318008423
    2. '"),
' → logprob: -1.3373619318008423
    3. '")' → logprob: -3.9623618125915527
    4. '),' → logprob: -5.712361812591553
    5. ')' → logprob: -6.712361812591553
    6. '),
' → logprob: -9.337362289428711
    7. '"),
' → logprob: -9.462362289428711
    8. '   ' → logprob: -10.462362289428711
    9. '")
' → logprob: -11.087362289428711
    10. ' "),' → logprob: -11.087362289428711

Token 291: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004979863297194242
    2. 'Classification' → logprob: -8.250497817993164
    3. '       ' → logprob: -8.375497817993164
    4. ' Classification' → logprob: -12.375497817993164
    5. '   ' → logprob: -13.375497817993164
    6. ']' → logprob: -14.875497817993164
    7. '               ' → logprob: -16.375497817993164
    8. '```' → logprob: -16.875497817993164
    9. '		' → logprob: -17.000497817993164
    10. '          ' → logprob: -17.500497817993164

Token 292: ' Classification' (ID: 98892)
  Prédit: 'Classification'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Classification' (adapté à ' Classification') → logprob: -0.20372532308101654
    2. '           ' → logprob: -1.7037253379821777
    3. ' Classification' → logprob: -6.703725337982178
    4. '       ' → logprob: -6.953725337982178
    5. '   ' → logprob: -9.20372486114502
    6. ']' → logprob: -10.70372486114502
    7. 'classification' → logprob: -12.82872486114502
    8. '          ' → logprob: -14.95372486114502
    9. '               ' → logprob: -15.20372486114502
    10. '```' → logprob: -15.70372486114502

Token 293: 'Rule' (ID: 11845)
  Prédit: 'Rule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rule' → logprob: -7.896309739408025e-07
    2. 'Rules' → logprob: -14.500000953674316
    3. ' Rule' → logprob: -16.5
    4. '_rule' → logprob: -16.5
    5. '   ' → logprob: -17.375
    6. '_RULE' → logprob: -17.5
    7. '.Rule' → logprob: -17.625
    8. 'RULE' → logprob: -18.875
    9. '       ' → logprob: -19.75
    10. 'R' → logprob: -19.75

Token 294: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.0001347672223346308
    2. ' (' → logprob: -9.500134468078613
    3. '(' → logprob: -9.750134468078613
    4. ' lambda' → logprob: -14.125134468078613
    5. 'lambda' → logprob: -14.625134468078613
    6. '(
' → logprob: -15.000134468078613
    7. '=lambda' → logprob: -17.75013542175293
    8. '(None' → logprob: -18.62513542175293
    9. '(l' → logprob: -19.50013542175293
    10. '(

' → logprob: -19.75013542175293

Token 295: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.0700061246752739
    2. 's' → logprob: -2.6950061321258545
    3. '(s' → logprob: -10.695006370544434
    4. ' ' → logprob: -11.820006370544434
    5. '    ' → logprob: -12.195006370544434
    6. '  ' → logprob: -12.320006370544434
    7. '   ' → logprob: -12.320006370544434
    8. ' self' → logprob: -12.445006370544434
    9. '     ' → logprob: -12.695006370544434
    10. '        ' → logprob: -12.820006370544434

Token 296: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010943770175799727
    2. '.math' → logprob: -7.251094341278076
    3. '.' → logprob: -8.126094818115234
    4. '.average' → logprob: -10.501094818115234
    5. ' ' → logprob: -11.376094818115234
    6. '   ' → logprob: -11.876094818115234
    7. ' :' → logprob: -11.876094818115234
    8. '=' → logprob: -12.001094818115234
    9. ':def' → logprob: -12.751094818115234
    10. '_math' → logprob: -12.876094818115234

Token 297: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.009805197827517986
    2. ' s' → logprob: -4.634805202484131
    3. 'self' → logprob: -10.634804725646973
    4. '   ' → logprob: -11.759804725646973
    5. '
' → logprob: -12.009804725646973
    6. ' self' → logprob: -13.009804725646973
    7. ' ' → logprob: -13.134804725646973
    8. '       ' → logprob: -13.134804725646973
    9. 'True' → logprob: -14.259804725646973
    10. '     ' → logprob: -14.634804725646973

Token 298: '.average' (ID: 130570)
  Prédit: '.average'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.average' → logprob: -0.0003775264194700867
    2. 'average' → logprob: -8.500377655029297
    3. '.' → logprob: -8.750377655029297
    4. '.math' → logprob: -11.250377655029297
    5. ' average' → logprob: -13.625377655029297
    6. '.has' → logprob: -14.250377655029297
    7. 'Average' → logprob: -14.875377655029297
    8. '_average' → logprob: -15.625377655029297
    9. ' .' → logprob: -15.875377655029297
    10. '.avg' → logprob: -16.875377655029297

Token 299: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0001705246395431459
    2. ')' → logprob: -9.625170707702637
    3. ' ()' → logprob: -10.000170707702637
    4. '>=' → logprob: -10.375170707702637
    5. '()<' → logprob: -11.500170707702637
    6. ' >=' → logprob: -11.625170707702637
    7. '(' → logprob: -12.750170707702637
    8. '()>' → logprob: -12.750170707702637
    9. ')>=' → logprob: -14.250170707702637
    10. '   ' → logprob: -14.750170707702637

Token 300: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.048956576734781265
    2. '>=' → logprob: -3.0489566326141357
    3. ' <' → logprob: -8.673956871032715
    4. ' ' → logprob: -8.923956871032715
    5. '<' → logprob: -10.673956871032715
    6. ')' → logprob: -11.423956871032715
    7. ')>=' → logprob: -11.548956871032715
    8. '   ' → logprob: -11.798956871032715
    9. '()' → logprob: -11.798956871032715
    10. ']>=' → logprob: -13.423956871032715

Token 301: ' ' (ID: 220)
  Prédit: '60'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.006800629664212465
    2. ' ' → logprob: -5.006800651550293
    3. '50' → logprob: -9.756800651550293
    4. '   ' → logprob: -11.631800651550293
    5. '
' → logprob: -12.381800651550293
    6. '55' → logprob: -12.631800651550293
    7. '65' → logprob: -12.756800651550293
    8. '6' → logprob: -13.006800651550293
    9. '  ' → logprob: -13.631800651550293
    10. '40' → logprob: -14.131800651550293

Token 302: '50' (ID: 1434)
  Prédit: '60'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.00021390743495430797
    2. '50' → logprob: -8.875213623046875
    3. ' ' → logprob: -10.875213623046875
    4. '
' → logprob: -10.875213623046875
    5. '6' → logprob: -11.250213623046875
    6. '   ' → logprob: -11.875213623046875
    7. '55' → logprob: -12.750213623046875
    8. '"' → logprob: -12.750213623046875
    9. '65' → logprob: -12.750213623046875
    10. '40' → logprob: -13.250213623046875

Token 303: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003386806638445705
    2. ' ,' → logprob: -8.000338554382324
    3. '   ' → logprob: -14.000338554382324
    4. '       ' → logprob: -14.000338554382324
    5. ',
' → logprob: -14.375338554382324
    6. '0' → logprob: -15.000338554382324
    7. '           ' → logprob: -15.625338554382324
    8. '```' → logprob: -15.750338554382324
    9. '1' → logprob: -16.87533950805664
    10. '7' → logprob: -17.12533950805664

Token 304: ' (' (ID: 350)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.25308993458747864
    2. ' s' → logprob: -2.2530899047851562
    3. 'not' → logprob: -2.5030899047851562
    4. ' not' → logprob: -3.5030899047851562
    5. 'score' → logprob: -5.878089904785156
    6. '   ' → logprob: -7.378089904785156
    7. 'any' → logprob: -7.753089904785156
    8. 'all' → logprob: -8.253089904785156
    9. '(s' → logprob: -8.378089904785156
    10. '(' → logprob: -8.378089904785156

Token 305: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3216783404350281
    2. 'not' → logprob: -1.5716784000396729
    3. ' s' → logprob: -3.196678400039673
    4. ' not' → logprob: -4.071678161621094
    5. '   ' → logprob: -5.821678161621094
    6. '           ' → logprob: -6.196678161621094
    7. 'score' → logprob: -6.821678161621094
    8. '(s' → logprob: -6.946678161621094
    9. '       ' → logprob: -7.196678161621094
    10. '100' → logprob: -8.196678161621094

Token 306: '.math' (ID: 35319)
  Prédit: '.has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.has' → logprob: -0.7197008728981018
    2. '.' → logprob: -1.219700813293457
    3. '.math' → logprob: -1.594700813293457
    4. '.j' → logprob: -4.719700813293457
    5. '.average' → logprob: -6.344700813293457
    6. 'math' → logprob: -6.594700813293457
    7. ').' → logprob: -6.844700813293457
    8. ' .' → logprob: -7.969700813293457
    9. '.not' → logprob: -8.469700813293457
    10. 'has' → logprob: -8.469700813293457

Token 307: ' >=' (ID: 5064)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5800272226333618
    2. '_' → logprob: -1.8300272226333618
    3. ' >=' → logprob: -2.5800271034240723
    4. ' or' → logprob: -2.9550271034240723
    5. ' +' → logprob: -3.2050271034240723
    6. '>' → logprob: -3.2050271034240723
    7. ' <' → logprob: -3.9550271034240723
    8. '.' → logprob: -4.330027103424072
    9. ' !=' → logprob: -4.580027103424072
    10. '+' → logprob: -4.705027103424072

Token 308: ' ' (ID: 220)
  Prédit: '50'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '50' → logprob: -0.7367395758628845
    2. '80' → logprob: -1.7367396354675293
    3. '60' → logprob: -1.8617396354675293
    4. '70' → logprob: -2.2367396354675293
    5. ' ' → logprob: -3.2367396354675293
    6. '90' → logprob: -3.4867396354675293
    7. '40' → logprob: -5.486739635467529
    8. '65' → logprob: -5.736739635467529
    9. '85' → logprob: -5.861739635467529
    10. '75' → logprob: -6.486739635467529

Token 309: '80' (ID: 2241)
  Prédit: '50'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '50' → logprob: -0.04393956810235977
    2. '40' → logprob: -3.9189395904541016
    3. '60' → logprob: -4.418939590454102
    4. '30' → logprob: -5.668939590454102
    5. '80' → logprob: -6.168939590454102
    6. '70' → logprob: -6.418939590454102
    7. '90' → logprob: -6.418939590454102
    8. '45' → logprob: -7.418939590454102
    9. '65' → logprob: -7.418939590454102
    10. '35' → logprob: -7.668939590454102

Token 310: ' or' (ID: 503)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.7455020546913147
    2. ' or' → logprob: -1.24550199508667
    3. ' and' → logprob: -1.49550199508667
    4. ' ),' → logprob: -5.24550199508667
    5. 'and' → logprob: -5.49550199508667
    6. ',' → logprob: -6.49550199508667
    7. ')' → logprob: -6.74550199508667
    8. '       ' → logprob: -7.12050199508667
    9. 'or' → logprob: -7.87050199508667
    10. ' ' → logprob: -9.495502471923828

Token 311: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07010360062122345
    2. ' s' → logprob: -2.695103645324707
    3. '   ' → logprob: -9.445103645324707
    4. '           ' → logprob: -10.570103645324707
    5. '
' → logprob: -10.695103645324707
    6. '       ' → logprob: -10.820103645324707
    7. '    ' → logprob: -12.945103645324707
    8. ' ' → logprob: -12.945103645324707
    9. '               ' → logprob: -13.320103645324707
    10. '  ' → logprob: -13.320103645324707

Token 312: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0022633750922977924
    2. '.j' → logprob: -6.37726354598999
    3. 'english' → logprob: -7.87726354598999
    4. '.math' → logprob: -9.752263069152832
    5. '.eng' → logprob: -10.502263069152832
    6. '```' → logprob: -10.627263069152832
    7. 'j' → logprob: -10.752263069152832
    8. ' .' → logprob: -11.502263069152832
    9. 'math' → logprob: -11.627263069152832
    10. ' english' → logprob: -12.252263069152832

Token 313: 'english' (ID: 64215)
  Prédit: 'english'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'english' → logprob: -0.014303941279649734
    2. 'j' → logprob: -4.264304161071777
    3. 'math' → logprob: -9.389304161071777
    4. ' english' → logprob: -11.139304161071777
    5. '
' → logprob: -11.639304161071777
    6. 'eng' → logprob: -12.139304161071777
    7. 'has' → logprob: -12.514304161071777
    8. '```' → logprob: -12.639304161071777
    9. 'English' → logprob: -12.889304161071777
    10. '   ' → logprob: -13.014304161071777

Token 314: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.03383483737707138
    2. '>=' → logprob: -3.408834934234619
    3. ')>=' → logprob: -9.658834457397461
    4. ')' → logprob: -10.158834457397461
    5. ' ' → logprob: -10.533834457397461
    6. '   ' → logprob: -10.658834457397461
    7. '<|end|>' → logprob: -10.658834457397461
    8. ' )' → logprob: -13.033834457397461
    9. ']>=' → logprob: -13.033834457397461
    10. '  ' → logprob: -13.283834457397461

Token 315: ' ' (ID: 220)
  Prédit: '80'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '80' → logprob: -0.03550389036536217
    2. ' ' → logprob: -3.91050386428833
    3. '70' → logprob: -4.53550386428833
    4. '50' → logprob: -5.91050386428833
    5. '75' → logprob: -7.66050386428833
    6. '85' → logprob: -7.78550386428833
    7. '60' → logprob: -7.91050386428833
    8. '90' → logprob: -9.035504341125488
    9. '65' → logprob: -10.535504341125488
    10. '
' → logprob: -12.660504341125488

Token 316: '80' (ID: 2241)
  Prédit: '80'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '80' → logprob: -0.0279934573918581
    2. '70' → logprob: -3.9029934406280518
    3. '50' → logprob: -5.527993679046631
    4. '75' → logprob: -6.777993679046631
    5. '60' → logprob: -6.902993679046631
    6. ' ' → logprob: -7.652993679046631
    7. '90' → logprob: -8.152993202209473
    8. '85' → logprob: -8.277993202209473
    9. '65' → logprob: -8.652993202209473
    10. '
' → logprob: -9.777993202209473

Token 317: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.005978569854050875
    2. ' ),' → logprob: -5.380978584289551
    3. ' or' → logprob: -7.380978584289551
    4. '       ' → logprob: -7.505978584289551
    5. ',' → logprob: -9.88097858428955
    6. '           ' → logprob: -9.88097858428955
    7. ')' → logprob: -10.13097858428955
    8. '   ' → logprob: -11.13097858428955
    9. '```' → logprob: -12.38097858428955
    10. ')),' → logprob: -12.75597858428955

Token 318: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.47930338978767395
    2. '2' → logprob: -0.9793033599853516
    3. '3' → logprob: -5.354303359985352
    4. '1' → logprob: -7.729303359985352
    5. '           ' → logprob: -11.604303359985352
    6. ' True' → logprob: -11.729303359985352
    7. 'True' → logprob: -11.979303359985352
    8. '4' → logprob: -12.104303359985352
    9. '   ' → logprob: -12.229303359985352
    10. '5' → logprob: -13.104303359985352

Token 319: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6079171895980835
    2. '3' → logprob: -0.8579171895980835
    3. ' ' → logprob: -3.482917308807373
    4. '1' → logprob: -7.357917308807373
    5. '   ' → logprob: -9.857916831970215
    6. '           ' → logprob: -10.607916831970215
    7. '4' → logprob: -10.857916831970215
    8. '  ' → logprob: -12.357916831970215
    9. '       ' → logprob: -12.357916831970215
    10. '5' → logprob: -12.857916831970215

Token 320: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.762356209335849e-05
    2. ',
' → logprob: -11.00003719329834
    3. ' ,' → logprob: -11.37503719329834
    4. '),' → logprob: -12.75003719329834
    5. ')' → logprob: -12.87503719329834
    6. '           ' → logprob: -13.00003719329834
    7. '       ' → logprob: -14.50003719329834
    8. '<|end|>' → logprob: -14.87503719329834
    9. '   ' → logprob: -15.25003719329834
    10. ',)' → logprob: -16.875038146972656

Token 321: ' "' (ID: 392)
  Prédit: '"B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"B' → logprob: -0.0506877638399601
    2. ' "' → logprob: -3.050687789916992
    3. '"' → logprob: -6.300687789916992
    4. '"C' → logprob: -8.925687789916992
    5. '"A' → logprob: -9.550687789916992
    6. ' ' → logprob: -10.175687789916992
    7. 'B' → logprob: -12.675687789916992
    8. ''' → logprob: -12.925687789916992
    9. ' B' → logprob: -13.050687789916992
    10. '2' → logprob: -13.050687789916992

Token 322: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.03493250161409378
    2. 'C' → logprob: -3.5349326133728027
    3. ' B' → logprob: -5.909932613372803
    4. '"B' → logprob: -6.284932613372803
    5. '"' → logprob: -8.659932136535645
    6. '"C' → logprob: -8.909932136535645
    7. ' C' → logprob: -9.034932136535645
    8. 'A' → logprob: -9.409932136535645
    9. ''' → logprob: -10.409932136535645
    10. ''C' → logprob: -11.284932136535645

Token 323: '"),
' (ID: 8132)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.22997413575649261
    2. '),
' → logprob: -1.8549741506576538
    3. ')' → logprob: -3.7299740314483643
    4. '       ' → logprob: -3.8549740314483643
    5. '           ' → logprob: -6.229974269866943
    6. '"),' → logprob: -7.479974269866943
    7. '"),
' → logprob: -7.604974269866943
    8. '   ' → logprob: -8.104973793029785
    9. '],' → logprob: -8.979973793029785
    10. ')]' → logprob: -9.104973793029785

Token 324: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.38868382573127747
    2. '       ' → logprob: -1.138683795928955
    3. 'Classification' → logprob: -7.138683795928955
    4. ']' → logprob: -7.638683795928955
    5. ' Classification' → logprob: -8.013684272766113
    6. '   ' → logprob: -8.513684272766113
    7. 'classification' → logprob: -14.013684272766113
    8. ' ]' → logprob: -14.888684272766113
    9. '```' → logprob: -15.013684272766113
    10. '	       ' → logprob: -15.013684272766113

Token 325: ' Classification' (ID: 98892)
  Prédit: 'Classification'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Classification' (adapté à ' Classification') → logprob: -0.31856369972229004
    2. '           ' → logprob: -1.31856369972229
    3. '       ' → logprob: -6.068563461303711
    4. ' Classification' → logprob: -6.068563461303711
    5. '   ' → logprob: -7.818563461303711
    6. ']' → logprob: -8.318563461303711
    7. '               ' → logprob: -12.318563461303711
    8. 'Class' → logprob: -13.693563461303711
    9. ' ' → logprob: -13.818563461303711
    10. '
' → logprob: -14.193563461303711

Token 326: 'Rule' (ID: 11845)
  Prédit: 'Rule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rule' → logprob: -7.896309739408025e-07
    2. 'Rules' → logprob: -14.625000953674316
    3. '_rule' → logprob: -16.125
    4. ' Rule' → logprob: -16.5
    5. '_RULE' → logprob: -17.0
    6. '[
' → logprob: -17.375
    7. '[' → logprob: -17.625
    8. 'R' → logprob: -17.875
    9. 'rule' → logprob: -18.0
    10. '   ' → logprob: -18.25

Token 327: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.12947003543376923
    2. '(' → logprob: -2.129470109939575
    3. '(
' → logprob: -6.004469871520996
    4. ' (' → logprob: -10.129469871520996
    5. '(None' → logprob: -11.004469871520996
    6. 'lambda' → logprob: -12.254469871520996
    7. '(

' → logprob: -12.379469871520996
    8. '[' → logprob: -13.879469871520996
    9. '=lambda' → logprob: -13.879469871520996
    10. '(
' → logprob: -14.004469871520996

Token 328: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.08894547075033188
    2. 's' → logprob: -2.4639453887939453
    3. '(s' → logprob: -13.213945388793945
    4. '	s' → logprob: -13.838945388793945
    5. '           ' → logprob: -14.838945388793945
    6. 'self' → logprob: -14.838945388793945
    7. ' ' → logprob: -14.963945388793945
    8. '        ' → logprob: -15.213945388793945
    9. '   ' → logprob: -15.338945388793945
    10. '    ' → logprob: -15.588945388793945

Token 329: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.100059156073257e-05
    2. ':s' → logprob: -10.125070571899414
    3. ' :' → logprob: -10.500070571899414
    4. '   ' → logprob: -13.750070571899414
    5. ':
' → logprob: -14.625070571899414
    6. '       ' → logprob: -14.875070571899414
    7. ' s' → logprob: -15.000070571899414
    8. 's' → logprob: -15.000070571899414
    9. '=lambda' → logprob: -16.250070571899414
    10. '    ' → logprob: -16.375070571899414

Token 330: ' True' (ID: 6432)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07094966620206833
    2. ' s' → logprob: -2.6959495544433594
    3. '   ' → logprob: -7.820949554443359
    4. 'True' → logprob: -7.945949554443359
    5. '       ' → logprob: -9.69594955444336
    6. ' True' → logprob: -9.94594955444336
    7. ' ' → logprob: -10.94594955444336
    8. '(s' → logprob: -11.07094955444336
    9. '
' → logprob: -11.19594955444336
    10. '           ' → logprob: -11.19594955444336

Token 331: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022249009634833783
    2. ' ,' → logprob: -8.500222206115723
    3. '       ' → logprob: -12.000222206115723
    4. '),' → logprob: -12.250222206115723
    5. '   ' → logprob: -12.500222206115723
    6. '           ' → logprob: -12.750222206115723
    7. '          ' → logprob: -15.250222206115723
    8. '  ' → logprob: -15.625222206115723
    9. '(),' → logprob: -15.750222206115723
    10. '0' → logprob: -15.875222206115723

Token 332: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.018275313079357147
    2. ' ' → logprob: -4.018275260925293
    3. '999' → logprob: -10.143275260925293
    4. '   ' → logprob: -10.393275260925293
    5. '99' → logprob: -11.393275260925293
    6. '  ' → logprob: -11.643275260925293
    7. '100' → logprob: -11.768275260925293
    8. '10' → logprob: -12.018275260925293
    9. '4' → logprob: -12.643275260925293
    10. '               ' → logprob: -13.143275260925293

Token 333: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0012151175178587437
    2. ' ' → logprob: -7.376214981079102
    3. '99' → logprob: -8.001214981079102
    4. '999' → logprob: -8.626214981079102
    5. '100' → logprob: -10.126214981079102
    6. '   ' → logprob: -11.376214981079102
    7. '10' → logprob: -12.126214981079102
    8. '4' → logprob: -12.251214981079102
    9. '2' → logprob: -12.876214981079102
    10. '
' → logprob: -13.251214981079102

Token 334: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000433291686931625
    2. ' ,' → logprob: -7.750433444976807
    3. '<|end|>' → logprob: -13.625432968139648
    4. ',
' → logprob: -14.500432968139648
    5. '   ' → logprob: -15.375432968139648
    6. ')' → logprob: -15.750432968139648
    7. '       ' → logprob: -15.875432968139648
    8. '‌,' → logprob: -16.37543296813965
    9. '),' → logprob: -16.62543296813965
    10. ' ' → logprob: -17.25043296813965

Token 335: ' "' (ID: 392)
  Prédit: '"C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"C' → logprob: -0.30411356687545776
    2. ' "' → logprob: -1.4291136264801025
    3. '"' → logprob: -3.8041136264801025
    4. '"D' → logprob: -9.554113388061523
    5. '")' → logprob: -9.679113388061523
    6. '"N' → logprob: -9.679113388061523
    7. ' ' → logprob: -9.929113388061523
    8. ')' → logprob: -10.054113388061523
    9. '"No' → logprob: -10.429113388061523
    10. ''C' → logprob: -10.804113388061523

Token 336: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.00013560164370574057
    2. 'F' → logprob: -9.62513542175293
    3. ' C' → logprob: -10.12513542175293
    4. 'D' → logprob: -10.87513542175293
    5. '"C' → logprob: -13.75013542175293
    6. '``' → logprob: -14.00013542175293
    7. 'c' → logprob: -14.12513542175293
    8. '```' → logprob: -14.25013542175293
    9. ' ' → logprob: -14.50013542175293
    10. 'Ｃ' → logprob: -14.50013542175293

Token 337: '"),
' (ID: 8132)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4217756986618042
    2. '")' → logprob: -1.2967756986618042
    3. '),' → logprob: -3.6717758178710938
    4. '"),' → logprob: -4.046775817871094
    5. ')
' → logprob: -4.421775817871094
    6. '")
' → logprob: -5.171775817871094
    7. '"),
' → logprob: -5.421775817871094
    8. '),
' → logprob: -5.921775817871094
    9. '       ' → logprob: -6.796775817871094
    10. '   ' → logprob: -6.921775817871094

Token 338: '       ' (ID: 309)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.28209877014160156
    2. '       ' → logprob: -1.5320987701416016
    3. '   ' → logprob: -3.5320987701416016
    4. ' ]' → logprob: -7.657098770141602
    5. ']
' → logprob: -14.407098770141602
    6. '	' → logprob: -14.532098770141602
    7. '	   ' → logprob: -14.782098770141602
    8. ']}' → logprob: -15.157098770141602
    9. '}' → logprob: -15.282098770141602
    10. '      ' → logprob: -15.407098770141602

Token 339: ' ]

' (ID: 32229)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02639736235141754
    2. '   ' → logprob: -3.776397466659546
    3. '       ' → logprob: -5.776397228240967
    4. ' ]' → logprob: -10.026397705078125
    5. ']
' → logprob: -13.401397705078125
    6. '}' → logprob: -14.901397705078125
    7. ' ' → logprob: -15.526397705078125
    8. '  ' → logprob: -15.651397705078125
    9. ']

' (adapté à ' ]

') → logprob: -15.651397705078125
    10. '	' → logprob: -16.151397705078125

Token 340: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13447101414203644
    2. 'def' → logprob: -2.1344709396362305
    3. ' def' → logprob: -5.0094709396362305
    4. '
' → logprob: -7.2594709396362305
    5. '	def' → logprob: -9.75947093963623
    6. '    
' → logprob: -10.00947093963623
    7. '```' → logprob: -11.25947093963623
    8. '<|end|>' → logprob: -11.75947093963623
    9. '  ' → logprob: -12.63447093963623
    10. ' ' → logprob: -13.13447093963623

Token 341: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0040874239057302475
    2. '   ' → logprob: -5.754087448120117
    3. ' def' → logprob: -7.004087448120117
    4. '	def' → logprob: -14.629087448120117
    5. 'de' → logprob: -15.379087448120117
    6. ' ' → logprob: -15.379087448120117
    7. '
' → logprob: -15.629087448120117
    8. '  ' → logprob: -16.879087448120117
    9. '    
' → logprob: -17.004087448120117
    10. '```' → logprob: -17.504087448120117

Token 342: ' classify' (ID: 92913)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.31341317296028137
    2. ' classify' → logprob: -1.313413143157959
    3. ' class' → logprob: -9.438413619995117
    4. 'predict' → logprob: -10.313413619995117
    5. 'def' → logprob: -11.563413619995117
    6. ' predict' → logprob: -11.688413619995117
    7. 'get' → logprob: -11.938413619995117
    8. 'classification' → logprob: -12.688413619995117
    9. ' get' → logprob: -12.938413619995117
    10. 'score' → logprob: -13.188413619995117

Token 343: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00028946425300091505
    2. '(' → logprob: -8.250289916992188
    3. '(
' → logprob: -11.125289916992188
    4. 'self' → logprob: -11.375289916992188
    5. ' (' → logprob: -14.500289916992188
    6. '(s' → logprob: -14.500289916992188
    7. ' self' → logprob: -15.125289916992188
    8. '   ' → logprob: -15.500289916992188
    9. '	self' → logprob: -16.125289916992188
    10. 'def' → logprob: -16.375289916992188

Token 344: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007752045057713985
    2. 'self' → logprob: -7.500775337219238
    3. ' ,' → logprob: -8.500775337219238
    4. ' self' → logprob: -11.875775337219238
    5. '       ' → logprob: -12.500775337219238
    6. ',self' → logprob: -12.750775337219238
    7. ',
' → logprob: -13.000775337219238
    8. '   ' → logprob: -14.125775337219238
    9. ')' → logprob: -14.250775337219238
    10. ',s' → logprob: -14.500775337219238

Token 345: ' score' (ID: 8429)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.6588959097862244
    2. ' score' → logprob: -1.4088959693908691
    3. 'self' → logprob: -1.9088959693908691
    4. ' self' → logprob: -2.408895969390869
    5. '_score' → logprob: -12.908895492553711
    6. '       ' → logprob: -13.158895492553711
    7. '	score' → logprob: -14.408895492553711
    8. 'scores' → logprob: -14.908895492553711
    9. '   ' → logprob: -15.408895492553711
    10. ' scores' → logprob: -15.908895492553711

Token 346: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3187735974788666
    2. ':' → logprob: -1.318773627281189
    3. ')' → logprob: -5.5687737464904785
    4. '):
' → logprob: -6.5687737464904785
    5. ' ):' → logprob: -9.06877326965332
    6. ',' → logprob: -9.19377326965332
    7. ' :' → logprob: -11.06877326965332
    8. '   ' → logprob: -11.19377326965332
    9. '       ' → logprob: -11.56877326965332
    10. '):
' → logprob: -12.56877326965332

Token 347: ' Score' (ID: 30731)
  Prédit: ' Score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Score' → logprob: -0.00870167464017868
    2. 'Score' → logprob: -4.758701801300049
    3. ' score' → logprob: -10.00870132446289
    4. ')' → logprob: -10.25870132446289
    5. ' )' → logprob: -12.50870132446289
    6. ' self' → logprob: -14.25870132446289
    7. '_score' → logprob: -14.50870132446289
    8. 'score' → logprob: -14.63370132446289
    9. '.Score' → logprob: -14.63370132446289
    10. ' Scores' → logprob: -14.88370132446289

Token 348: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47434619069099426
    2. '):' → logprob: -0.9743461608886719
    3. '):
' → logprob: -8.474346160888672
    4. ')->' → logprob: -10.224346160888672
    5. ':' → logprob: -11.099346160888672
    6. '   ' → logprob: -11.974346160888672
    7. '       ' → logprob: -13.974346160888672
    8. ',' → logprob: -14.599346160888672
    9. ' ):' → logprob: -14.724346160888672
    10. ' )' → logprob: -14.849346160888672

Token 349: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00715103792026639
    2. '->' → logprob: -5.507151126861572
    3. ' ->' → logprob: -6.257151126861572
    4. '):' → logprob: -7.632151126861572
    5. ':
' → logprob: -8.007150650024414
    6. ')->' → logprob: -8.632150650024414
    7. '():' → logprob: -10.257150650024414
    8. '   ' → logprob: -10.382150650024414
    9. '       ' → logprob: -10.507150650024414
    10. ')' → logprob: -10.882150650024414

Token 350: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.3868808448314667
    2. 'str' → logprob: -1.136880874633789
    3. '[str' → logprob: -13.011880874633789
    4. ' tuple' → logprob: -13.261880874633789
    5. 'int' → logprob: -13.636880874633789
    6. 'tuple' → logprob: -13.761880874633789
    7. '(str' → logprob: -13.886880874633789
    8. '   ' → logprob: -14.511880874633789
    9. 'class' → logprob: -15.261880874633789
    10. '	str' → logprob: -15.386880874633789

Token 351: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.059294022619724274
    2. '       ' → logprob: -3.5592939853668213
    3. ':
' → logprob: -3.5592939853668213
    4. '(self' → logprob: -8.684293746948242
    5. '):' → logprob: -8.684293746948242
    6. '   ' → logprob: -8.809293746948242
    7. '):
' → logprob: -9.559293746948242
    8. ',' → logprob: -10.934293746948242
    9. ':return' → logprob: -11.184293746948242
    10. '(' → logprob: -11.559293746948242

Token 352: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0036498417612165213
    2. ' for' → logprob: -5.628649711608887
    3. 'for' → logprob: -10.253649711608887
    4. '
' → logprob: -12.378649711608887
    5. '   ' → logprob: -13.003649711608887
    6. '        
' → logprob: -13.253649711608887
    7. '      ' → logprob: -13.378649711608887
    8. '    ' → logprob: -13.878649711608887
    9. 'n' → logprob: -14.128649711608887
    10. '```' → logprob: -14.503649711608887

Token 353: ' matched' (ID: 31366)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.30635806918144226
    2. 'for' → logprob: -1.8063580989837646
    3. '       ' → logprob: -2.3063580989837646
    4. '   ' → logprob: -13.431358337402344
    5. '	for' → logprob: -14.681358337402344
    6. '```' → logprob: -15.681358337402344
    7. '
' → logprob: -16.681358337402344
    8. '        
' → logprob: -17.556358337402344
    9. '      ' → logprob: -17.556358337402344
    10. ' ' → logprob: -17.681358337402344

Token 354: '_rules' (ID: 53887)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.09086504578590393
    2. ' =' → logprob: -3.465865135192871
    3. ' ' → logprob: -3.590865135192871
    4. '_token' → logprob: -4.840865135192871
    5. '_rule' → logprob: -5.090865135192871
    6. '=' → logprob: -5.840865135192871
    7. '_score' → logprob: -6.340865135192871
    8. ',' → logprob: -6.840865135192871
    9. ' _' → logprob: -6.840865135192871
    10. '_scores' → logprob: -6.840865135192871

Token 355: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006306292489171028
    2. '=' → logprob: -5.131306171417236
    3. ':' → logprob: -8.006306648254395
    4. ' for' → logprob: -10.881306648254395
    5. ' :' → logprob: -12.131306648254395
    6. 'for' → logprob: -12.256306648254395
    7. ' ' → logprob: -12.506306648254395
    8. '       ' → logprob: -13.006306648254395
    9. '=[]' → logprob: -13.006306648254395
    10. '.' → logprob: -13.631306648254395

Token 356: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.45976588129997253
    2. ' [' → logprob: -1.209765911102295
    3. '[]
' → logprob: -3.459765911102295
    4. '[]' → logprob: -4.209765911102295
    5. '[token' → logprob: -4.959765911102295
    6. '[t' → logprob: -5.084765911102295
    7. '[i' → logprob: -5.834765911102295
    8. '[s' → logprob: -5.959765911102295
    9. '[
' → logprob: -6.709765911102295
    10. '[self' → logprob: -6.709765911102295

Token 357: 'rule' (ID: 32558)
  Prédit: 'rule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rule' → logprob: -0.0004158953088335693
    2. 'r' → logprob: -7.875415802001953
    3. ' rule' → logprob: -10.250415802001953
    4. '(rule' → logprob: -15.000415802001953
    5. '   ' → logprob: -16.625415802001953
    6. '
' → logprob: -16.875415802001953
    7. 'ru' → logprob: -17.250415802001953
    8. '    
' → logprob: -17.625415802001953
    9. '```' → logprob: -17.875415802001953
    10. ' ' → logprob: -18.375415802001953

Token 358: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0010384062770754099
    2. 'for' → logprob: -6.876038551330566
    3. ' ' → logprob: -13.001038551330566
    4. '    ' → logprob: -14.001038551330566
    5. '	for' → logprob: -14.376038551330566
    6. '        ' → logprob: -14.626038551330566
    7. '   ' → logprob: -14.876038551330566
    8. '           ' → logprob: -15.001038551330566
    9. '
' → logprob: -15.626038551330566
    10. ' 
' → logprob: -15.626038551330566

Token 359: ' rule' (ID: 10652)
  Prédit: 'rule'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rule' → logprob: -0.3133109211921692
    2. ' rule' → logprob: -1.3133108615875244
    3. 'self' → logprob: -10.688310623168945
    4. ' self' → logprob: -11.688310623168945
    5. '       ' → logprob: -12.188310623168945
    6. '(rule' → logprob: -12.313310623168945
    7. 'r' → logprob: -12.813310623168945
    8. '_rule' → logprob: -13.438310623168945
    9. '.rule' → logprob: -13.563310623168945
    10. '   ' → logprob: -13.938310623168945

Token 360: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.23048418760299683
    2. ' rule' → logprob: -2.1054842472076416
    3. 'rule' → logprob: -2.4804842472076416
    4. ' ' → logprob: -8.980484008789062
    5. 'in' → logprob: -9.230484008789062
    6. '.rule' → logprob: -9.980484008789062
    7. '_rule' → logprob: -10.355484008789062
    8. ' score' → logprob: -11.105484008789062
    9. 'score' → logprob: -11.605484008789062
    10. ' i' → logprob: -11.855484008789062

Token 361: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.018153922632336617
    2. ' self' → logprob: -4.018154144287109
    3. '   ' → logprob: -13.39315414428711
    4. '	self' → logprob: -13.89315414428711
    5. ' ' → logprob: -14.26815414428711
    6. '
' → logprob: -14.76815414428711
    7. '(self' → logprob: -16.14315414428711
    8. '       ' → logprob: -16.39315414428711
    9. '    ' → logprob: -16.39315414428711
    10. '  ' → logprob: -16.51815414428711

Token 362: '.rules' (ID: 85922)
  Prédit: '.rules'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rules' → logprob: -0.00022761584841646254
    2. ' .' → logprob: -9.125227928161621
    3. '.' → logprob: -9.625227928161621
    4. 'rules' → logprob: -10.000227928161621
    5. 'self' → logprob: -12.500227928161621
    6. ' rules' → logprob: -13.750227928161621
    7. 'ules' → logprob: -14.250227928161621
    8. '.rule' → logprob: -14.625227928161621
    9. '.s' → logprob: -14.875227928161621
    10. '.score' → logprob: -15.250227928161621

Token 363: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.00011331788846291602
    2. 'if' → logprob: -9.125113487243652
    3. ' in' → logprob: -12.500113487243652
    4. '       ' → logprob: -15.625113487243652
    5. '        ' → logprob: -15.875113487243652
    6. '           ' → logprob: -16.500112533569336
    7. '	if' → logprob: -16.625112533569336
    8. ' for' → logprob: -17.375112533569336
    9. '<|end|>' → logprob: -18.250112533569336
    10. '    ' → logprob: -18.375112533569336

Token 364: ' rule' (ID: 10652)
  Prédit: ' rule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rule' → logprob: -0.5759425759315491
    2. 'rule' → logprob: -0.8259425759315491
    3. '(rule' → logprob: -12.825942993164062
    4. '.rule' → logprob: -14.950942993164062
    5. '_rule' → logprob: -16.950942993164062
    6. ' ' → logprob: -17.325942993164062
    7. 'r' → logprob: -18.575942993164062
    8. 'ule' → logprob: -19.075942993164062
    9. '
' → logprob: -19.075942993164062
    10. ' ' → logprob: -19.950942993164062

Token 365: '.matches' (ID: 64560)
  Prédit: '.matches'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.matches' → logprob: -0.0002165299083571881
    2. ' .' → logprob: -8.875216484069824
    3. '.' → logprob: -10.000216484069824
    4. '.m' → logprob: -11.125216484069824
    5. '.match' → logprob: -11.125216484069824
    6. '.findall' → logprob: -14.875216484069824
    7. '   ' → logprob: -15.375216484069824
    8. 'matches' → logprob: -15.500216484069824
    9. '.matcher' → logprob: -15.625216484069824
    10. ').' → logprob: -15.750216484069824

Token 366: '(score' (ID: 70244)
  Prédit: '(score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(score' → logprob: -1.3856492842023727e-06
    2. '(' → logprob: -14.125000953674316
    3. 'score' → logprob: -14.500000953674316
    4. '(scores' → logprob: -17.000001907348633
    5. ' (' → logprob: -17.500001907348633
    6. ' score' → logprob: -18.250001907348633
    7. '	score' → logprob: -19.875001907348633
    8. '(
' → logprob: -20.125001907348633
    9. '(sc' → logprob: -20.625001907348633
    10. '(speed' → logprob: -21.125001907348633

Token 367: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0006435725372284651
    2. ']' → logprob: -7.375643730163574
    3. ')' → logprob: -11.500643730163574
    4. ' )' → logprob: -12.750643730163574
    5. ' ]' → logprob: -12.750643730163574
    6. ')]
' → logprob: -14.000643730163574
    7. ')]

' → logprob: -16.125642776489258
    8. ']
' → logprob: -17.125642776489258
    9. '}]' → logprob: -17.375642776489258
    10. '   ' → logprob: -17.625642776489258

Token 368: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04031413793563843
    2. 'sorted' → logprob: -4.040314197540283
    3. ' sorted' → logprob: -4.415314197540283
    4. ' matched' → logprob: -5.040314197540283
    5. 'matched' → logprob: -6.165314197540283
    6. '.sorted' → logprob: -7.790314197540283
    7. '_sorted' → logprob: -8.790313720703125
    8. '
' → logprob: -8.790313720703125
    9. '        
' → logprob: -9.165313720703125
    10. ' if' → logprob: -9.290313720703125

Token 369: ' best' (ID: 1636)
  Prédit: 'matched'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matched' → logprob: -0.1001368910074234
    2. 'if' → logprob: -3.1001369953155518
    3. ' matched' → logprob: -3.7251369953155518
    4. 'sorted' → logprob: -4.475136756896973
    5. '       ' → logprob: -4.850136756896973
    6. ' if' → logprob: -5.100136756896973
    7. 'best' (adapté à ' best') → logprob: -7.725136756896973
    8. 'return' → logprob: -8.850136756896973
    9. ' sorted' → logprob: -9.100136756896973
    10. ' best' → logprob: -10.350136756896973

Token 370: '_rule' (ID: 46482)
  Prédit: '_rule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rule' → logprob: -0.000712670327629894
    2. '_rules' → logprob: -7.750712871551514
    3. '_' → logprob: -8.750712394714355
    4. '_mat' → logprob: -9.625712394714355
    5. '_match' → logprob: -10.375712394714355
    6. 'rule' → logprob: -11.375712394714355
    7. ' _' → logprob: -11.875712394714355
    8. ' =' → logprob: -13.250712394714355
    9. ' rule' → logprob: -13.375712394714355
    10. '_r' → logprob: -13.625712394714355

Token 371: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0046210684813559055
    2. '=' → logprob: -5.3796210289001465
    3. ' ' → logprob: -14.754621505737305
    4. ' =
' → logprob: -15.754621505737305
    5. '.' → logprob: -15.879621505737305
    6. ')' → logprob: -17.129621505737305
    7. '_' → logprob: -17.379621505737305
    8. ',' → logprob: -17.879621505737305
    9. ' ' → logprob: -17.879621505737305
    10. 's' → logprob: -18.004621505737305

Token 372: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.3135211169719696
    2. ' min' → logprob: -1.313521146774292
    3. 'sorted' → logprob: -9.063521385192871
    4. 'matched' → logprob: -9.438521385192871
    5. ' sorted' → logprob: -10.313521385192871
    6. ' matched' → logprob: -10.688521385192871
    7. ' None' → logprob: -12.313521385192871
    8. 'None' → logprob: -13.438521385192871
    9. 'max' → logprob: -13.438521385192871
    10. ' max' → logprob: -15.563521385192871

Token 373: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.00020914296328555793
    2. '(' → logprob: -8.500208854675293
    3. '(
' → logprob: -13.000208854675293
    4. '(matches' → logprob: -13.500208854675293
    5. '(rule' → logprob: -13.875208854675293
    6. '(r' → logprob: -14.625208854675293
    7. '(match' → logprob: -15.250208854675293
    8. '(mat' → logprob: -15.625208854675293
    9. 'matched' → logprob: -17.00020980834961
    10. '(sorted' → logprob: -17.37520980834961

Token 374: 'atched' (ID: 44560)
  Prédit: 'atched'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atched' → logprob: -0.004084455315023661
    2. 'matched' → logprob: -5.504084587097168
    3. 'atch' → logprob: -12.629084587097168
    4. ' matched' → logprob: -13.379084587097168
    5. '[' → logprob: -14.379084587097168
    6. 'at' → logprob: -15.004084587097168
    7. 'Matched' → logprob: -17.00408363342285
    8. 'atching' → logprob: -17.00408363342285
    9. 'atches' → logprob: -17.37908363342285
    10. 't' → logprob: -17.75408363342285

Token 375: '_rules' (ID: 53887)
  Prédit: '_rules'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rules' → logprob: -4.008129963040119e-06
    2. '_rule' → logprob: -12.750003814697266
    3. 'rules' → logprob: -14.875003814697266
    4. '_' → logprob: -16.000003814697266
    5. '_mat' → logprob: -16.000003814697266
    6. '_matches' → logprob: -16.000003814697266
    7. 'Rules' → logprob: -16.750003814697266
    8. 'ed' → logprob: -16.750003814697266
    9. 'ules' → logprob: -17.250003814697266
    10. '_r' → logprob: -17.375003814697266

Token 376: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004511685692705214
    2. ',key' → logprob: -7.75045108795166
    3. 'key' → logprob: -11.75045108795166
    4. ' key' → logprob: -11.87545108795166
    5. ' ,' → logprob: -12.12545108795166
    6. '(key' → logprob: -16.000452041625977
    7. '   ' → logprob: -16.500452041625977
    8. '       ' → logprob: -17.375452041625977
    9. '(),' → logprob: -18.000452041625977
    10. '.key' → logprob: -18.375452041625977

Token 377: ' key' (ID: 2140)
  Prédit: ' key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.16022534668445587
    2. 'key' → logprob: -1.9102253913879395
    3. '   ' → logprob: -14.660224914550781
    4. 'lambda' → logprob: -15.285224914550781
    5. ',' → logprob: -15.660224914550781
    6. ',key' → logprob: -16.16022491455078
    7. '(key' → logprob: -16.41022491455078
    8. ' lambda' → logprob: -16.66022491455078
    9. '
' → logprob: -17.41022491455078
    10. ' ' → logprob: -17.66022491455078

Token 378: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.0002624086628202349
    2. '=' → logprob: -8.250262260437012
    3. 'lambda' → logprob: -13.875262260437012
    4. ' lambda' → logprob: -16.375263214111328
    5. '(lambda' → logprob: -16.625263214111328
    6. 'attr' → logprob: -17.875263214111328
    7. '=
' → logprob: -18.375263214111328
    8. ' =' → logprob: -19.500263214111328
    9. '_lambda' → logprob: -21.000263214111328
    10. '=\' → logprob: -21.125263214111328

Token 379: ' r' (ID: 428)
  Prédit: ' rule'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rule' → logprob: -0.04701828956604004
    2. ' r' → logprob: -3.29701828956604
    3. 'rule' → logprob: -4.797018051147461
    4. 'r' → logprob: -7.297018051147461
    5. '(rule' → logprob: -12.672018051147461
    6. '.rule' → logprob: -14.797018051147461
    7. ' ' → logprob: -15.047018051147461
    8. '	r' → logprob: -15.047018051147461
    9. ' x' → logprob: -15.172018051147461
    10. ' rul' → logprob: -16.17201805114746

Token 380: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002814775798469782
    2. ':r' → logprob: -8.37528133392334
    3. 'r' → logprob: -10.50028133392334
    4. ' :' → logprob: -10.87528133392334
    5. ' r' → logprob: -12.37528133392334
    6. ':
' → logprob: -16.000282287597656
    7. '	r' → logprob: -17.125282287597656
    8. '[r' → logprob: -19.000282287597656
    9. '(r' → logprob: -19.125282287597656
    10. '.r' → logprob: -19.375282287597656

Token 381: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.575939953327179
    2. 'r' → logprob: -0.825939953327179
    3. ' ' → logprob: -15.325940132141113
    4. '   ' → logprob: -15.700940132141113
    5. '	r' → logprob: -16.450939178466797
    6. ' ' → logprob: -16.700939178466797
    7. '    ' → logprob: -18.200939178466797
    8. '(r' → logprob: -18.200939178466797
    9. '  ' → logprob: -18.575939178466797
    10. ')' → logprob: -18.825939178466797

Token 382: '.level' (ID: 36989)
  Prédit: '.level'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.level' → logprob: -1.2113979209971149e-05
    2. '.' → logprob: -11.500012397766113
    3. ' .' → logprob: -13.375012397766113
    4. '.le' → logprob: -15.500012397766113
    5. '.Level' → logprob: -16.125011444091797
    6. 'level' → logprob: -17.000011444091797
    7. '.
' → logprob: -17.875011444091797
    8. '.score' → logprob: -18.000011444091797
    9. '
' → logprob: -18.250011444091797
    10. '.rank' → logprob: -18.250011444091797

Token 383: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029950879514217377
    2. ').' → logprob: -3.5299508571624756
    3. ')
' → logprob: -8.654951095581055
    4. ' )' → logprob: -10.904951095581055
    5. '       ' → logprob: -13.529951095581055
    6. ').__' → logprob: -13.654951095581055
    7. ')`' → logprob: -13.904951095581055
    8. ')#' → logprob: -14.279951095581055
    9. ')

' → logprob: -14.279951095581055
    10. '   ' → logprob: -14.654951095581055

Token 384: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00824741367250681
    2. '
' → logprob: -5.508247375488281
    3. 'return' → logprob: -6.008247375488281
    4. ' return' → logprob: -6.383247375488281
    5. '        
' → logprob: -12.883247375488281
    6. ')
' → logprob: -13.383247375488281
    7. '
' → logprob: -13.633247375488281
    8. ' 
' → logprob: -13.633247375488281
    9. '.return' → logprob: -14.133247375488281
    10. '	return' → logprob: -14.633247375488281

Token 385: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -7.171581091824919e-05
    2. '       ' → logprob: -9.75007152557373
    3. ' return' → logprob: -11.25007152557373
    4. '
' → logprob: -15.50007152557373
    5. '```' → logprob: -17.375072479248047
    6. '   ' → logprob: -17.875072479248047
    7. '        
' → logprob: -18.250072479248047
    8. '	return' → logprob: -18.750072479248047
    9. ':return' → logprob: -19.250072479248047
    10. 'eturn' → logprob: -20.000072479248047

Token 386: ' best' (ID: 1636)
  Prédit: ' best'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' best' → logprob: -0.023246178403496742
    2. 'best' → logprob: -3.7732462882995605
    3. '	best' → logprob: -14.898245811462402
    4. '(best' → logprob: -15.773245811462402
    5. ' f' → logprob: -16.77324676513672
    6. 'b' → logprob: -17.27324676513672
    7. '"' → logprob: -17.64824676513672
    8. ' ' → logprob: -18.14824676513672
    9. '.best' → logprob: -18.52324676513672
    10. '_best' → logprob: -19.02324676513672

Token 387: '_rule' (ID: 46482)
  Prédit: '_rule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rule' → logprob: -0.0001537169300718233
    2. 'rule' → logprob: -8.875153541564941
    3. '.' → logprob: -12.625153541564941
    4. '_' → logprob: -13.125153541564941
    5. '._' → logprob: -13.375153541564941
    6. '_code' → logprob: -13.625153541564941
    7. 'Rule' → logprob: -14.250153541564941
    8. '_class' → logprob: -14.375153541564941
    9. '_token' → logprob: -14.375153541564941
    10. 'r' → logprob: -14.625153541564941

Token 388: '.class' (ID: 4351)
  Prédit: '.class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.class' → logprob: -0.0011872532777488232
    2. '.' → logprob: -6.751187324523926
    3. ' .' → logprob: -11.626187324523926
    4. '.level' → logprob: -12.626187324523926
    5. '.code' → logprob: -13.001187324523926
    6. 'class' → logprob: -14.501187324523926
    7. '.Class' → logprob: -15.376187324523926
    8. '.status' → logprob: -15.501187324523926
    9. '.rule' → logprob: -15.751187324523926
    10. '.point' → logprob: -16.00118637084961

Token 389: '_name' (ID: 2483)
  Prédit: '_name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_name' → logprob: -2.2200749754119897e-06
    2. '_n' → logprob: -13.375001907348633
    3. '_' → logprob: -14.750001907348633
    4. '__' → logprob: -16.250001907348633
    5. '_na' → logprob: -16.500001907348633
    6. 'name' → logprob: -16.750001907348633
    7. '_names' → logprob: -17.250001907348633
    8. 'Name' → logprob: -18.375001907348633
    9. '_
' → logprob: -18.625001907348633
    10. '_class' → logprob: -18.625001907348633

Token 390: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 391: 'class' (ID: 1444)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6870756149291992
    2. 's' → logprob: -1.6870756149291992
    3. 'score' → logprob: -1.9370756149291992
    4. 'class' → logprob: -2.187075614929199
    5. 'def' → logprob: -4.062075614929199
    6. 'a' → logprob: -4.437075614929199
    7. 'n' → logprob: -4.812075614929199
    8. '```' → logprob: -4.812075614929199
    9. 'd' → logprob: -5.437075614929199
    10. 'c' → logprob: -7.062075614929199

Token 392: ' Dataset' (ID: 79063)
  Prédit: ' Student'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Student' → logprob: -0.02423279546201229
    2. ' Score' → logprob: -4.024232864379883
    3. ' School' → logprob: -6.399232864379883
    4. ' Teacher' → logprob: -6.774232864379883
    5. ' Result' → logprob: -7.024232864379883
    6. 'Student' → logprob: -7.274232864379883
    7. ' Person' → logprob: -7.899232864379883
    8. ' Exam' → logprob: -8.274232864379883
    9. ' Class' → logprob: -8.524232864379883
    10. ' Test' → logprob: -8.774232864379883

Token 393: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002233640057966113
    2. ':
' → logprob: -6.127233505249023
    3. ' :' → logprob: -10.627233505249023
    4. ':list' → logprob: -11.627233505249023
    5. '(list' → logprob: -13.002233505249023
    6. '(List' → logprob: -13.252233505249023
    7. '(' → logprob: -13.377233505249023
    8. '<|end|>' → logprob: -13.502233505249023
    9. ':

' → logprob: -13.627233505249023
    10. '[List' → logprob: -13.627233505249023

Token 394: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008344047237187624
    2. '<|end|>' → logprob: -7.6258344650268555
    3. 'class' → logprob: -9.000834465026855
    4. ' def' → logprob: -9.750834465026855
    5. '    
' → logprob: -10.375834465026855
    6. '```' → logprob: -10.500834465026855
    7. '(' → logprob: -10.750834465026855
    8. 'def' → logprob: -10.750834465026855
    9. '    ' → logprob: -11.500834465026855
    10. ':' → logprob: -11.625834465026855

Token 395: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.18395592272281647
    2. '   ' → logprob: -2.1839559078216553
    3. ' def' → logprob: -3.1839559078216553
    4. 'class' → logprob: -4.308956146240234
    5. ':' → logprob: -8.558956146240234
    6. ':
' → logprob: -8.683956146240234
    7. '```' → logprob: -8.933956146240234
    8. ':def' → logprob: -10.683956146240234
    9. '__' → logprob: -11.183956146240234
    10. '	def' → logprob: -12.058956146240234

Token 396: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.009383331052958965
    2. '__' → logprob: -4.884383201599121
    3. 'init' → logprob: -6.884383201599121
    4. '_init' → logprob: -7.259383201599121
    5. 'class' → logprob: -11.384383201599121
    6. '```' → logprob: -11.634383201599121
    7. ' init' → logprob: -11.759383201599121
    8. '_' → logprob: -12.259383201599121
    9. 'def' → logprob: -12.509383201599121
    10. ' def' → logprob: -12.884383201599121

Token 397: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0032860899809747934
    2. '   ' → logprob: -5.878285884857178
    3. ' init' → logprob: -8.253286361694336
    4. '```' → logprob: -9.753286361694336
    5. 'def' → logprob: -10.128286361694336
    6. '       ' → logprob: -10.253286361694336
    7. '_init' → logprob: -10.628286361694336
    8. '__' → logprob: -11.253286361694336
    9. 'f' → logprob: -11.878286361694336
    10. '    ' → logprob: -12.128286361694336

Token 398: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.42979195713996887
    2. '(self' → logprob: -1.0547919273376465
    3. ' (' → logprob: -8.054792404174805
    4. '(' → logprob: -8.179792404174805
    5. '__(
' → logprob: -8.304792404174805
    6. '
' → logprob: -9.304792404174805
    7. '   ' → logprob: -9.804792404174805
    8. 'self' → logprob: -10.304792404174805
    9. '__' → logprob: -10.554792404174805
    10. '_(' → logprob: -11.804792404174805

Token 399: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00013893934374209493
    2. ' self' → logprob: -9.250139236450195
    3. '
' → logprob: -10.750139236450195
    4. '):
' → logprob: -11.500139236450195
    5. ')' → logprob: -11.750139236450195
    6. '   ' → logprob: -13.125139236450195
    7. ')(' → logprob: -15.250139236450195
    8. '  ' → logprob: -15.375139236450195
    9. ' ' → logprob: -15.875139236450195
    10. '       ' → logprob: -16.000139236450195

Token 400: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.059357840567827225
    2. '):
' → logprob: -3.1843578815460205
    3. 'self' → logprob: -4.434357643127441
    4. '):' → logprob: -6.059357643127441
    5. ',self' → logprob: -7.059357643127441
    6. '(self' → logprob: -7.559357643127441
    7. '   ' → logprob: -8.184357643127441
    8. ' ,' → logprob: -8.684357643127441
    9. ' self' → logprob: -9.809357643127441
    10. ')' → logprob: -10.684357643127441

Token 401: ' scores' (ID: 18923)
  Prédit: 'scores'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'scores' → logprob: -0.9812390804290771
    2. 'data' → logprob: -1.6062390804290771
    3. ' data' → logprob: -2.106239080429077
    4. 'self' → logprob: -2.481239080429077
    5. ' scores' → logprob: -2.731239080429077
    6. 'samples' → logprob: -2.856239080429077
    7. ' samples' → logprob: -3.981239080429077
    8. 'items' → logprob: -4.356239318847656
    9. ' self' → logprob: -4.356239318847656
    10. ' entries' → logprob: -4.481239318847656

Token 402: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4906769096851349
    2. '):' → logprob: -1.4906768798828125
    3. '):
' → logprob: -1.9906768798828125
    4. '=None' → logprob: -4.3656768798828125
    5. '=[]' → logprob: -4.7406768798828125
    6. '=' → logprob: -5.6156768798828125
    7. ':list' → logprob: -8.115676879882812
    8. ')' → logprob: -8.115676879882812
    9. ' ):' → logprob: -8.990676879882812
    10. '):
' → logprob: -10.240676879882812

Token 403: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.7935754060745239
    2. 'List' → logprob: -1.168575406074524
    3. ' List' → logprob: -1.793575406074524
    4. 'list' → logprob: -3.7935752868652344
    5. '[List' → logprob: -4.043575286865234
    6. ' []' → logprob: -4.418575286865234
    7. ' [])' → logprob: -4.918575286865234
    8. '[]' → logprob: -5.668575286865234
    9. '[]):' → logprob: -6.668575286865234
    10. '[list' → logprob: -6.793575286865234

Token 404: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004249112214893103
    2. '):' → logprob: -5.629249095916748
    3. '):
' → logprob: -7.379249095916748
    4. ':' → logprob: -11.879249572753906
    5. ')' → logprob: -12.129249572753906
    6. ' [' → logprob: -12.254249572753906
    7. ' ):' → logprob: -12.879249572753906
    8. ' ' → logprob: -13.629249572753906
    9. '
' → logprob: -14.379249572753906
    10. '[int' → logprob: -14.379249572753906

Token 405: 'Score' (ID: 12357)
  Prédit: 'Score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Score' → logprob: -1.0325924449716695e-05
    2. ' Score' → logprob: -11.50001049041748
    3. '[' → logprob: -15.75001049041748
    4. '   ' → logprob: -17.000009536743164
    5. 'score' → logprob: -18.375009536743164
    6. 'Scores' → logprob: -18.625009536743164
    7. ')' → logprob: -19.250009536743164
    8. ']' → logprob: -19.375009536743164
    9. '_score' → logprob: -19.500009536743164
    10. '.Score' → logprob: -19.625009536743164

Token 406: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.372254341840744
    2. ']):
' → logprob: -1.3722543716430664
    3. ']' → logprob: -2.8722543716430664
    4. '])' → logprob: -7.372254371643066
    5. '],' → logprob: -10.372254371643066
    6. ']=' → logprob: -10.497254371643066
    7. ' ]' → logprob: -11.747254371643066
    8. ')' → logprob: -11.997254371643066
    9. '[' → logprob: -12.497254371643066
    10. ']:' → logprob: -12.747254371643066

Token 407: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006567967939190567
    2. 'self' → logprob: -7.375656604766846
    3. ' self' → logprob: -10.625657081604004
    4. '   ' → logprob: -12.750657081604004
    5. '<|end|>' → logprob: -13.500657081604004
    6. '	self' → logprob: -15.000657081604004
    7. '    ' → logprob: -15.250657081604004
    8. '	' → logprob: -15.375657081604004
    9. '(self' → logprob: -15.750657081604004
    10. '      ' → logprob: -15.875657081604004

Token 408: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0328562892973423
    2. ' self' → logprob: -3.5328562259674072
    3. '       ' → logprob: -5.782856464385986
    4. '   ' → logprob: -11.032855987548828
    5. '	self' → logprob: -12.657855987548828
    6. ' ' → logprob: -14.032855987548828
    7. '
' → logprob: -14.657855987548828
    8. '(self' → logprob: -16.157855987548828
    9. '     ' → logprob: -16.282855987548828
    10. '    ' → logprob: -16.657855987548828

Token 409: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.016204338520765305
    2. '.' → logprob: -4.766204357147217
    3. ' .' → logprob: -4.891204357147217
    4. 'scores' → logprob: -10.141203880310059
    5. 's' → logprob: -13.016203880310059
    6. ' scores' → logprob: -13.391203880310059
    7. '_scores' → logprob: -13.516203880310059
    8. '.score' → logprob: -13.891203880310059
    9. '.sc' → logprob: -14.391203880310059
    10. '​.' → logprob: -14.766203880310059

Token 410: 'cores' (ID: 12071)
  Prédit: 'cores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cores' → logprob: -7.493430894101039e-05
    2. 'scores' → logprob: -9.875075340270996
    3. 'core' → logprob: -11.000075340270996
    4. '_scores' → logprob: -13.125075340270996
    5. 'co' → logprob: -13.250075340270996
    6. '   ' → logprob: -14.125075340270996
    7. ' scores' → logprob: -14.250075340270996
    8. '```' → logprob: -14.875075340270996
    9. '(scores' → logprob: -15.000075340270996
    10. ' cores' → logprob: -15.250075340270996

Token 411: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02975141443312168
    2. ' =' → logprob: -3.5297513008117676
    3. '=self' → logprob: -15.529751777648926
    4. '   ' → logprob: -15.529751777648926
    5. '=s' → logprob: -15.779751777648926
    6. ' ' → logprob: -16.02975082397461
    7. 's' → logprob: -16.27975082397461
    8. '=
' → logprob: -16.27975082397461
    9. '=[]' → logprob: -17.02975082397461
    10. ' =
' → logprob: -17.52975082397461

Token 412: ' scores' (ID: 18923)
  Prédit: 'scores'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'scores' → logprob: -0.014166681095957756
    2. ' scores' → logprob: -4.264166831970215
    3. 'score' → logprob: -13.389166831970215
    4. '(scores' → logprob: -13.889166831970215
    5. 's' → logprob: -14.889166831970215
    6. '   ' → logprob: -16.5141658782959
    7. '_scores' → logprob: -16.5141658782959
    8. '[]' → logprob: -17.1391658782959
    9. ' ' → logprob: -17.5141658782959
    10. '[' → logprob: -17.8891658782959

Token 413: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.008589399047195911
    2. '   ' → logprob: -5.008589267730713
    3. '<|end|>' → logprob: -6.633589267730713
    4. '

' → logprob: -8.133589744567871
    5. '    
' → logprob: -8.758589744567871
    6. 'def' → logprob: -9.508589744567871
    7. '<|end|>' → logprob: -11.008589744567871
    8. ' def' → logprob: -12.383589744567871
    9. ' 
' → logprob: -12.883589744567871
    10. '  
' → logprob: -13.133589744567871

Token 414: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.571916937828064
    2. '   ' → logprob: -0.946916937828064
    3. '<|end|>' → logprob: -3.1969170570373535
    4. 'def' → logprob: -5.5719170570373535
    5. '    
' → logprob: -6.5719170570373535
    6. '<|end|>' → logprob: -6.8219170570373535
    7. '

' → logprob: -9.071916580200195
    8. ' def' → logprob: -9.071916580200195
    9. '  
' → logprob: -10.196916580200195
    10. ')' → logprob: -10.696916580200195

Token 415: ' self' (ID: 1051)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004435697570443153
    2. '
' → logprob: -5.7544355392456055
    3. 'self' (adapté à ' self') → logprob: -7.7544355392456055
    4. ' def' → logprob: -7.8794355392456055
    5. '   ' → logprob: -8.504435539245605
    6. '

' → logprob: -8.504435539245605
    7. '@property' → logprob: -11.879435539245605
    8. '
    
' → logprob: -12.129435539245605
    9. 'class' → logprob: -12.504435539245605
    10. 'pass' → logprob: -12.504435539245605

Token 416: '.class' (ID: 4351)
  Prédit: '.class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.class' → logprob: -0.5041666626930237
    2. '.' → logprob: -1.629166603088379
    3. '._' → logprob: -3.629166603088379
    4. '_class' → logprob: -3.879166603088379
    5. '.classes' → logprob: -4.254166603088379
    6. '_scores' → logprob: -4.254166603088379
    7. 'class' → logprob: -4.379166603088379
    8. '.sorted' → logprob: -4.629166603088379
    9. '.s' → logprob: -4.754166603088379
    10. 'classified' → logprob: -4.879166603088379

Token 417: 'ifier' (ID: 4550)
  Prédit: '_counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.8500705361366272
    2. 'ification' → logprob: -1.4750704765319824
    3. 'ifications' → logprob: -2.3500704765319824
    4. '_names' → logprob: -2.3500704765319824
    5. 'ifier' → logprob: -2.4750704765319824
    6. '_' → logprob: -3.3500704765319824
    7. '_labels' → logprob: -5.225070476531982
    8. '_assign' → logprob: -5.475070476531982
    9. '_scores' → logprob: -5.725070476531982
    10. '_name' → logprob: -5.975070476531982

Token 418: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16125988960266113
    2. ' =' → logprob: -1.9112598896026611
    3. '.' → logprob: -6.911259651184082
    4. '.=' → logprob: -10.536259651184082
    5. ' ' → logprob: -12.161259651184082
    6. '_' → logprob: -13.036259651184082
    7. '=create' → logprob: -13.536259651184082
    8. '<|end|>' → logprob: -14.786259651184082
    9. ' =
' → logprob: -15.411259651184082
    10. '	' → logprob: -15.411259651184082

Token 419: ' Class' (ID: 5646)
  Prédit: ' Class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Class' → logprob: -0.1004754900932312
    2. 'Classifier' → logprob: -2.350475549697876
    3. 'Class' → logprob: -8.225475311279297
    4. 'classifier' → logprob: -15.225475311279297
    5. '(Class' → logprob: -15.350475311279297
    6. '	Class' → logprob: -15.725475311279297
    7. ' classifier' → logprob: -15.850475311279297
    8. ' Classification' → logprob: -16.100475311279297
    9. ' Clas' → logprob: -16.100475311279297
    10. ' Classified' → logprob: -16.725475311279297

Token 420: 'ifier' (ID: 4550)
  Prédit: 'ifier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifier' → logprob: -0.00026729601086117327
    2. 'ifer' → logprob: -8.250267028808594
    3. 'if' → logprob: -12.875267028808594
    4. 'ifie' → logprob: -13.250267028808594
    5. 'IFIER' → logprob: -14.750267028808594
    6. 'er' → logprob: -14.875267028808594
    7. 'ier' → logprob: -14.875267028808594
    8. 'ifi' → logprob: -15.875267028808594
    9. 'iter' → logprob: -16.375267028808594
    10. 'f' → logprob: -17.125267028808594

Token 421: '()

' (ID: 5874)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8708036541938782
    2. '
' → logprob: -1.3708035945892334
    3. '<|end|>' → logprob: -1.7458035945892334
    4. 'def' → logprob: -2.3708035945892334
    5. '

' → logprob: -3.4958035945892334
    6. ' def' → logprob: -4.1208038330078125
    7. '<|end|>' → logprob: -4.8708038330078125
    8. '	def' → logprob: -6.2458038330078125
    9. '    
' → logprob: -6.2458038330078125
    10. '(' → logprob: -8.245803833007812

Token 422: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13613396883010864
    2. '
' → logprob: -2.386133909225464
    3. 'def' → logprob: -3.386133909225464
    4. ' def' → logprob: -6.886134147644043
    5. '    
' → logprob: -7.886134147644043
    6. '<|end|>' → logprob: -10.636134147644043
    7. '```' → logprob: -11.386134147644043
    8. '        
' → logprob: -12.636134147644043
    9. '	def' → logprob: -12.636134147644043
    10. ' 
' → logprob: -13.261134147644043

Token 423: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.306760805164231e-05
    2. ' def' → logprob: -11.50001335144043
    3. '   ' → logprob: -12.75001335144043
    4. 'de' → logprob: -19.12501335144043
    5. '
' → logprob: -19.50001335144043
    6. '	def' → logprob: -19.87501335144043
    7. '```' → logprob: -20.62501335144043
    8. 'class' → logprob: -21.12501335144043
    9. ' ' → logprob: -22.50001335144043
    10. 'd' → logprob: -22.62501335144043

Token 424: ' classify' (ID: 92913)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.14566074311733246
    2. ' classify' → logprob: -2.020660638809204
    3. 'get' → logprob: -6.520660877227783
    4. ' get' → logprob: -7.395660877227783
    5. ' class' → logprob: -7.895660877227783
    6. '__' → logprob: -9.145660400390625
    7. '_class' → logprob: -9.270660400390625
    8. 'add' → logprob: -9.770660400390625
    9. 'calculate' → logprob: -9.895660400390625
    10. 'predict' → logprob: -10.270660400390625

Token 425: '_all' (ID: 13305)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0940791517496109
    2. '_all' → logprob: -2.9690792560577393
    3. '(' → logprob: -3.7190792560577393
    4. '_scores' → logprob: -4.34407901763916
    5. '_' → logprob: -7.59407901763916
    6. '(s' → logprob: -8.84407901763916
    7. '_(' → logprob: -8.96907901763916
    8. 's' → logprob: -9.34407901763916
    9. '_score' → logprob: -9.59407901763916
    10. '_s' → logprob: -9.96907901763916

Token 426: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00011164903844473884
    2. '(' → logprob: -9.12511157989502
    3. '(s' → logprob: -13.87511157989502
    4. ' (' → logprob: -14.37511157989502
    5. '(sel' → logprob: -14.87511157989502
    6. '_scores' → logprob: -15.00011157989502
    7. '(scores' → logprob: -15.62511157989502
    8. '(
' → logprob: -16.250112533569336
    9. '(se' → logprob: -16.375112533569336
    10. '   ' → logprob: -16.500112533569336

Token 427: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.349120557308197
    2. ')' → logprob: -1.3491206169128418
    3. '):
' → logprob: -3.349120616912842
    4. '):
' → logprob: -9.849120140075684
    5. 'self' → logprob: -10.099120140075684
    6. '):

' → logprob: -12.349120140075684
    7. ')->' → logprob: -12.724120140075684
    8. '   ' → logprob: -13.099120140075684
    9. '(self' → logprob: -13.474120140075684
    10. '       ' → logprob: -13.849120140075684

Token 428: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.000983862322755158
    2. '(' → logprob: -7.000983715057373
    3. ':' → logprob: -10.875984191894531
    4. '       ' → logprob: -11.250984191894531
    5. '->' → logprob: -11.500984191894531
    6. 'self' → logprob: -11.750984191894531
    7. '   ' → logprob: -12.125984191894531
    8. ' ->' → logprob: -12.125984191894531
    9. '(
' → logprob: -12.250984191894531
    10. ' (' → logprob: -12.875984191894531

Token 429: ' list' (ID: 1562)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -1.121984601020813
    2. '[' → logprob: -1.371984601020813
    3. 'list' → logprob: -1.371984601020813
    4. '[str' → logprob: -2.6219844818115234
    5. '[List' → logprob: -2.8719844818115234
    6. ' [' → logprob: -3.9969844818115234
    7. ' list' → logprob: -4.621984481811523
    8. '[self' → logprob: -4.871984481811523
    9. 'List' → logprob: -6.996984481811523
    10. '   ' → logprob: -7.871984481811523

Token 430: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.75
    3. '[int' → logprob: -17.75
    4. '[
' → logprob: -18.25
    5. ' [' → logprob: -18.625
    6. '(str' → logprob: -19.375
    7. '   ' → logprob: -20.25
    8. 'str' → logprob: -21.125
    9. '[self' → logprob: -21.25
    10. '       ' → logprob: -22.25

Token 431: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.3892778754234314
    2. ']:' → logprob: -1.1392779350280762
    3. ']:
' → logprob: -6.264277935028076
    4. ']' → logprob: -7.639277935028076
    5. ']:

' → logprob: -11.764277458190918
    6. '   ' → logprob: -11.889277458190918
    7. '):
' → logprob: -13.264277458190918
    8. '       ' → logprob: -14.139277458190918
    9. '"]:
' → logprob: -14.639277458190918
    10. '']:
' → logprob: -15.014277458190918

Token 432: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.523948907968588e-05
    2. 'return' → logprob: -10.625035285949707
    3. ' return' → logprob: -12.125035285949707
    4. 'result' → logprob: -13.500035285949707
    5. '[' → logprob: -13.625035285949707
    6. '```' → logprob: -13.750035285949707
    7. '[]' → logprob: -14.250035285949707
    8. '   ' → logprob: -15.000035285949707
    9. '	' → logprob: -15.500035285949707
    10. ' result' → logprob: -16.00003433227539

Token 433: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6937000751495361
    2. 'return' (adapté à ' return') → logprob: -0.6937000751495361
    3. ' return' → logprob: -7.568699836730957
    4. 'result' → logprob: -10.568699836730957
    5. '[' → logprob: -11.943699836730957
    6. 'results' → logprob: -13.068699836730957
    7. '[]' → logprob: -14.068699836730957
    8. '```' → logprob: -14.818699836730957
    9. '	return' → logprob: -15.318699836730957
    10. '	' → logprob: -16.068700790405273

Token 434: ' [' (ID: 723)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.11435385793447495
    2. '[' → logprob: -2.364353895187378
    3. ' [' → logprob: -4.364353656768799
    4. '[class' → logprob: -7.114353656768799
    5. '[s' → logprob: -7.864353656768799
    6. '[result' → logprob: -10.114354133605957
    7. '[list' → logprob: -10.739354133605957
    8. '[str' → logprob: -11.239354133605957
    9. '[obj' → logprob: -11.364354133605957
    10. '[item' → logprob: -11.614354133605957

Token 435: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.3306015716807451e-05
    2. ' self' → logprob: -11.25001335144043
    3. '       ' → logprob: -16.12501335144043
    4. '           ' → logprob: -16.62501335144043
    5. '   ' → logprob: -17.25001335144043
    6. '(self' → logprob: -17.62501335144043
    7. 's' → logprob: -19.25001335144043
    8. '
' → logprob: -19.75001335144043
    9. '	self' → logprob: -19.87501335144043
    10. '[self' → logprob: -19.87501335144043

Token 436: '.class' (ID: 4351)
  Prédit: '.class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.class' → logprob: -4.60414821645827e-06
    2. '.s' → logprob: -13.250004768371582
    3. '.' → logprob: -13.375004768371582
    4. 'class' → logprob: -14.375004768371582
    5. ' .' → logprob: -15.250004768371582
    6. '.score' → logprob: -15.625004768371582
    7. '<class' → logprob: -16.625003814697266
    8. 's' → logprob: -16.625003814697266
    9. 'classifier' → logprob: -17.500003814697266
    10. ',class' → logprob: -17.875003814697266

Token 437: 'ifier' (ID: 4550)
  Prédit: 'ify'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ify' → logprob: -0.006004044320434332
    2. 'ifier' → logprob: -5.1310038566589355
    3. 'er' → logprob: -10.256004333496094
    4. 'fy' → logprob: -10.631004333496094
    5. 's' → logprob: -11.756004333496094
    6. 'class' → logprob: -12.756004333496094
    7. '   ' → logprob: -13.381004333496094
    8. 'if' → logprob: -13.756004333496094
    9. 'ass' → logprob: -14.881004333496094
    10. 'f' → logprob: -15.256004333496094

Token 438: '.class' (ID: 4351)
  Prédit: '.class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.class' → logprob: -3.292907877039397e-06
    2. '.' → logprob: -12.75000286102295
    3. ' .' → logprob: -15.75000286102295
    4. '.Class' → logprob: -16.000003814697266
    5. 'class' → logprob: -16.875003814697266
    6. '].' → logprob: -19.625003814697266
    7. '(class' → logprob: -19.875003814697266
    8. '<class' → logprob: -20.125003814697266
    9. '@class' → logprob: -20.500003814697266
    10. ').' → logprob: -20.625003814697266

Token 439: 'ify' (ID: 1985)
  Prédit: 'ify'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ify' → logprob: -7.896309739408025e-07
    2. 'fy' → logprob: -14.250000953674316
    3. '```' → logprob: -16.875
    4. 'if' → logprob: -17.875
    5. 'class' → logprob: -18.375
    6. 'y' → logprob: -20.875
    7. 'ize' → logprob: -21.0
    8. '   ' → logprob: -21.0
    9. 'IFY' → logprob: -21.25
    10. '_class' → logprob: -21.625

Token 440: '(score' (ID: 70244)
  Prédit: '(score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(score' → logprob: -0.005265425890684128
    2. '(s' → logprob: -5.255265235900879
    3. '(' → logprob: -10.755265235900879
    4. '(sc' → logprob: -12.255265235900879
    5. 'score' → logprob: -12.505265235900879
    6. 's' → logprob: -14.130265235900879
    7. '(scores' → logprob: -14.255265235900879
    8. ' score' → logprob: -15.755265235900879
    9. '(
' → logprob: -15.880265235900879
    10. '(scr' → logprob: -16.255266189575195

Token 441: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ' )' → logprob: -14.750000953674316
    3. ')
' → logprob: -16.375
    4. '))' → logprob: -18.625
    5. 'for' → logprob: -18.875
    6. ')]' → logprob: -18.875
    7. ' for' → logprob: -19.125
    8. ']' → logprob: -19.25
    9. '   ' → logprob: -19.5
    10. '       ' → logprob: -20.5

Token 442: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6199424862861633
    2. ' for' → logprob: -1.1199424266815186
    3. '(score' → logprob: -2.1199424266815186
    4. 'score' → logprob: -4.869942665100098
    5. 'for' → logprob: -5.244942665100098
    6. ' score' → logprob: -6.119942665100098
    7. ' )' → logprob: -8.869942665100098
    8. ' in' → logprob: -8.994942665100098
    9. ']' → logprob: -9.369942665100098
    10. '       ' → logprob: -10.369942665100098

Token 443: ' score' (ID: 8429)
  Prédit: ' score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' score' → logprob: -0.029772130772471428
    2. 'score' → logprob: -3.5297720432281494
    3. ' self' → logprob: -11.02977180480957
    4. '	score' → logprob: -12.77977180480957
    5. 'self' → logprob: -13.15477180480957
    6. ' s' → logprob: -14.40477180480957
    7. '(score' → logprob: -16.15477180480957
    8. 's' → logprob: -16.77977180480957
    9. ' ' → logprob: -17.27977180480957
    10. ' ' → logprob: -17.65477180480957

Token 444: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004636249504983425
    2. 'in' → logprob: -5.379636287689209
    3. 's' → logprob: -11.87963581085205
    4. ' ' → logprob: -12.62963581085205
    5. 'self' → logprob: -13.00463581085205
    6. 'score' → logprob: -14.12963581085205
    7. ' i' → logprob: -14.37963581085205
    8. '  ' → logprob: -14.75463581085205
    9. ' ' → logprob: -14.75463581085205
    10. '	in' → logprob: -14.87963581085205

Token 445: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16022706031799316
    2. ' self' → logprob: -1.9102270603179932
    3. '   ' → logprob: -14.160226821899414
    4. '(self' → logprob: -14.410226821899414
    5. ' ' → logprob: -14.535226821899414
    6. '	self' → logprob: -14.535226821899414
    7. '
' → logprob: -15.785226821899414
    8. '    ' → logprob: -16.285226821899414
    9. '       ' → logprob: -16.410226821899414
    10. 's' → logprob: -16.535226821899414

Token 446: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -4.9186317482963204e-05
    2. '.' → logprob: -10.125049591064453
    3. ' .' → logprob: -11.875049591064453
    4. 's' → logprob: -13.750049591064453
    5. 'scores' → logprob: -14.125049591064453
    6. '.
' → logprob: -16.375049591064453
    7. '.sc' → logprob: -16.625049591064453
    8. ').' → logprob: -17.375049591064453
    9. '.score' → logprob: -17.375049591064453
    10. '(scores' → logprob: -17.625049591064453

Token 447: 'cores' (ID: 12071)
  Prédit: 'cores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cores' → logprob: -0.013293175026774406
    2. 'elf' → logprob: -4.513293266296387
    3. '.s' → logprob: -7.013293266296387
    4. 'core' → logprob: -7.138293266296387
    5. 'scores' → logprob: -8.138293266296387
    6. 'self' → logprob: -8.388293266296387
    7. '.core' → logprob: -11.763293266296387
    8. '   ' → logprob: -12.013293266296387
    9. 'c' → logprob: -12.638293266296387
    10. '```' → logprob: -12.763293266296387

Token 448: ']


' (ID: 52447)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00016063073417171836
    2. ' ]' → logprob: -9.000160217285156
    3. ')]' → logprob: -10.375160217285156
    4. ']
' → logprob: -12.750160217285156
    5. '       ' → logprob: -13.500160217285156
    6. '()]' → logprob: -13.750160217285156
    7. '   ' → logprob: -14.750160217285156
    8. ')' → logprob: -16.500160217285156
    9. ']

' → logprob: -17.625160217285156
    10. '`]' → logprob: -18.000160217285156

Token 449: 'class' (ID: 1444)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5752753019332886
    2. 'def' → logprob: -1.3252753019332886
    3. 'scores' → logprob: -1.9502753019332886
    4. 'score' → logprob: -4.325275421142578
    5. 'class' → logprob: -5.700275421142578
    6. 'data' → logprob: -5.825275421142578
    7. '[' → logprob: -5.950275421142578
    8. 'import' → logprob: -6.200275421142578
    9. 'from' → logprob: -6.575275421142578
    10. 'dataset' → logprob: -6.950275421142578

Token 450: ' Input' (ID: 10090)
  Prédit: ' Student'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Student' → logprob: -0.04818768799304962
    2. ' Test' → logprob: -4.423187732696533
    3. 'Student' → logprob: -5.048187732696533
    4. ' Score' → logprob: -5.173187732696533
    5. ' Person' → logprob: -5.548187732696533
    6. ' Result' → logprob: -5.548187732696533
    7. ' Main' → logprob: -6.048187732696533
    8. ' Report' → logprob: -6.298187732696533
    9. ' Exam' → logprob: -6.298187732696533
    10. ' Teacher' → logprob: -6.423187732696533

Token 451: 'Reader' (ID: 7171)
  Prédit: 'Handler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: -0.7315337657928467
    2. 'Data' → logprob: -0.8565337657928467
    3. 'Reader' → logprob: -3.7315337657928467
    4. 'Processor' → logprob: -3.7315337657928467
    5. 'Parser' → logprob: -4.231534004211426
    6. 'Scores' → logprob: -4.731534004211426
    7. 'View' → logprob: -4.981534004211426
    8. 'Score' → logprob: -5.481534004211426
    9. 'Form' → logprob: -5.731534004211426
    10. 'Output' → logprob: -7.106534004211426

Token 452: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011079414747655392
    2. ':
' → logprob: -4.51107931137085
    3. ' :' → logprob: -10.761079788208008
    4. '():' → logprob: -12.636079788208008
    5. ':def' → logprob: -13.136079788208008
    6. '):' → logprob: -13.761079788208008
    7. ' :
' → logprob: -14.011079788208008
    8. '(object' → logprob: -14.261079788208008
    9. ':

' → logprob: -14.511079788208008
    10. '：' → logprob: -14.886079788208008

Token 453: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004715872462838888
    2. ' def' → logprob: -5.379715919494629
    3. 'def' → logprob: -9.629715919494629
    4. '<|end|>' → logprob: -11.504715919494629
    5. '	def' → logprob: -11.629715919494629
    6. '    
' → logprob: -13.129715919494629
    7. '    ' → logprob: -13.504715919494629
    8. '  ' → logprob: -13.504715919494629
    9. '```' → logprob: -14.254715919494629
    10. 'import' → logprob: -14.254715919494629

Token 454: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.2841988205909729
    2. 'def' (adapté à ' def') → logprob: -1.7841987609863281
    3. '   ' → logprob: -2.534198760986328
    4. '@' → logprob: -9.659198760986328
    5. ' @' → logprob: -9.784198760986328
    6. '	def' → logprob: -12.659198760986328
    7. 'class' → logprob: -13.659198760986328
    8. '```' → logprob: -14.784198760986328
    9. ':def' → logprob: -15.034198760986328
    10. 'import' → logprob: -15.034198760986328

Token 455: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.2658257484436035
    2. 'def' → logprob: -2.6408257484436035
    3. 'object' → logprob: -2.8908257484436035
    4. ' __' → logprob: -3.2658257484436035
    5. 'staticmethod' → logprob: -3.2658257484436035
    6. '__' → logprob: -4.0158257484436035
    7. ' object' → logprob: -4.5158257484436035
    8. 'classmethod' → logprob: -7.8908257484436035
    9. ' ' → logprob: -8.515825271606445
    10. 'init' → logprob: -8.640825271606445

Token 456: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0002851729223039001
    2. 'nit' → logprob: -8.625285148620605
    3. 'iter' → logprob: -10.125285148620605
    4. 'int' → logprob: -10.875285148620605
    5. '```' → logprob: -11.250285148620605
    6. 'class' → logprob: -12.500285148620605
    7. 'Init' → logprob: -12.500285148620605
    8. 'it' → logprob: -12.500285148620605
    9. '__' → logprob: -12.625285148620605
    10. 'new' → logprob: -12.750285148620605

Token 457: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.20194874703884125
    2. '__(' → logprob: -1.7019487619400024
    3. '(' → logprob: -8.576949119567871
    4. ' (' → logprob: -8.701949119567871
    5. '()' → logprob: -9.951949119567871
    6. '__(
' → logprob: -10.076949119567871
    7. '()(' → logprob: -10.451949119567871
    8. '_(' → logprob: -10.826949119567871
    9. 'self' → logprob: -10.951949119567871
    10. '<>(' → logprob: -11.451949119567871

Token 458: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0012338032247498631
    2. ')' → logprob: -6.7512335777282715
    3. '):
' → logprob: -10.12623405456543
    4. ' self' → logprob: -11.25123405456543
    5. '   ' → logprob: -12.37623405456543
    6. '
' → logprob: -12.37623405456543
    7. '):' → logprob: -14.87623405456543
    8. '       ' → logprob: -14.87623405456543
    9. '(self' → logprob: -15.00123405456543
    10. ')
' → logprob: -15.12623405456543

Token 459: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7744688987731934
    2. '):' → logprob: -0.8994688987731934
    3. '):
' → logprob: -2.1494688987731934
    4. 'self' → logprob: -4.399468898773193
    5. '   ' → logprob: -6.149468898773193
    6. ')' → logprob: -7.274468898773193
    7. '       ' → logprob: -8.399469375610352
    8. ',self' → logprob: -9.274469375610352
    9. '(self' → logprob: -9.399469375610352
    10. ' self' → logprob: -9.774469375610352

Token 460: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.08090963959693909
    2. '       ' → logprob: -2.8309097290039062
    3. '   ' → logprob: -4.080909729003906
    4. ' self' → logprob: -6.330909729003906
    5. '
' → logprob: -10.330909729003906
    6. '	self' → logprob: -10.705909729003906
    7. 'def' → logprob: -11.705909729003906
    8. 'n' → logprob: -12.330909729003906
    9. ' ' → logprob: -12.580909729003906
    10. '    ' → logprob: -12.705909729003906

Token 461: ' pass' (ID: 1853)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.34306490421295166
    2. 'pass' (adapté à ' pass') → logprob: -1.3430649042129517
    3. ' pass' → logprob: -4.218064785003662
    4. ' self' → logprob: -4.843064785003662
    5. '       ' → logprob: -5.218064785003662
    6. '   ' → logprob: -7.218064785003662
    7. 'def' → logprob: -7.718064785003662
    8. 'import' → logprob: -9.71806526184082
    9. '
' → logprob: -10.34306526184082
    10. '	pass' → logprob: -10.96806526184082

Token 462: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3917883634567261
    2. '   ' → logprob: -1.141788363456726
    3. '<|end|>' → logprob: -6.016788482666016
    4. ' def' → logprob: -7.016788482666016
    5. 'def' → logprob: -7.016788482666016
    6. '    
' → logprob: -8.016788482666016
    7. '	def' → logprob: -9.141788482666016
    8. '<|end|>' → logprob: -10.016788482666016
    9. ' 
' → logprob: -10.141788482666016
    10. ' ' → logprob: -10.766788482666016

Token 463: '   ' (ID: 271)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.2270250916481018
    2. 'def' → logprob: -2.227025032043457
    3. '   ' → logprob: -2.352025032043457
    4. '	def' → logprob: -9.977025032043457
    5. '
' → logprob: -10.727025032043457
    6. ' ' → logprob: -13.602025032043457
    7. '```' → logprob: -13.977025032043457
    8. '    
' → logprob: -14.102025032043457
    9. '<|end|>' → logprob: -14.602025032043457
    10. '  ' → logprob: -14.977025032043457

Token 464: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0004329341172706336
    2. ' def' → logprob: -7.750432968139648
    3. '   ' → logprob: -13.125432968139648
    4. '	def' → logprob: -16.50043296813965
    5. 'de' → logprob: -16.62543296813965
    6. 'd' → logprob: -17.25043296813965
    7. '
' → logprob: -17.75043296813965
    8. '@' → logprob: -18.62543296813965
    9. ' ' → logprob: -19.75043296813965
    10. '    
' → logprob: -20.75043296813965

Token 465: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.009767891839146614
    2. ' read' → logprob: -4.634768009185791
    3. ' readline' → logprob: -11.634767532348633
    4. 'input' → logprob: -14.259767532348633
    5. '.read' → logprob: -14.509767532348633
    6. 'reads' → logprob: -14.634767532348633
    7. '	read' → logprob: -14.884767532348633
    8. 'get' → logprob: -15.509767532348633
    9. 'rea' → logprob: -15.509767532348633
    10. 're' → logprob: -15.634767532348633

Token 466: '_d' (ID: 1565)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.3350335359573364
    2. '_scores' → logprob: -2.210033416748047
    3. '(self' → logprob: -2.710033416748047
    4. '_input' → logprob: -3.085033416748047
    5. '()' → logprob: -3.210033416748047
    6. '_score' → logprob: -4.835033416748047
    7. '_' → logprob: -5.460033416748047
    8. '_lines' → logprob: -5.585033416748047
    9. 'line' → logprob: -5.710033416748047
    10. 'self' → logprob: -7.085033416748047

Token 467: 'atasets' (ID: 105003)
  Prédit: 'ata'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ata' → logprob: -0.633755087852478
    2. 'ataset' → logprob: -0.758755087852478
    3. 'atasets' → logprob: -7.508755207061768
    4. 'atas' → logprob: -7.883755207061768
    5. ' ata' → logprob: -9.00875473022461
    6. 'ef' → logprob: -10.75875473022461
    7. 'at' → logprob: -10.88375473022461
    8. 'atalist' → logprob: -11.25875473022461
    9. '
' → logprob: -11.38375473022461
    10. 'atabase' → logprob: -12.25875473022461

Token 468: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.5716304410016164e-05
    2. '(' → logprob: -10.625035285949707
    3. 'self' → logprob: -11.750035285949707
    4. ' (' → logprob: -13.625035285949707
    5. '()' → logprob: -13.875035285949707
    6. '(se' → logprob: -14.750035285949707
    7. '(s' → logprob: -15.125035285949707
    8. '(sel' → logprob: -15.625035285949707
    9. '
' → logprob: -15.750035285949707
    10. '():
' → logprob: -16.250036239624023

Token 469: ')' (ID: 8)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.0476690530776978
    2. ',' → logprob: -1.1726690530776978
    3. '):
' → logprob: -1.9226690530776978
    4. '):' → logprob: -2.047668933868408
    5. ')' → logprob: -2.797668933868408
    6. '(self' → logprob: -6.172668933868408
    7. ' self' → logprob: -7.172668933868408
    8. '   ' → logprob: -8.297669410705566
    9. '
' → logprob: -9.297669410705566
    10. '       ' → logprob: -9.547669410705566

Token 470: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.9926610589027405
    2. ' ->' → logprob: -0.9926610589027405
    3. '(self' → logprob: -1.3676609992980957
    4. ':' → logprob: -5.867660999298096
    5. 'self' → logprob: -7.367660999298096
    6. '   ' → logprob: -8.242661476135254
    7. ')' → logprob: -8.867661476135254
    8. ' self' → logprob: -9.867661476135254
    9. ':
' → logprob: -9.992661476135254
    10. ':self' → logprob: -10.117661476135254

Token 471: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.04866810142993927
    2. ' list' → logprob: -3.048668146133423
    3. '[list' → logprob: -9.798667907714844
    4. 'int' → logprob: -10.673667907714844
    5. '[]' → logprob: -14.923667907714844
    6. 'tuple' → logprob: -15.048667907714844
    7. '[int' → logprob: -15.173667907714844
    8. 'List' → logprob: -15.423667907714844
    9. '(list' → logprob: -15.423667907714844
    10. '[' → logprob: -15.673667907714844

Token 472: '[' (ID: 58)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.01812758855521679
    2. '[' → logprob: -4.26812744140625
    3. '[List' → logprob: -5.64312744140625
    4. '[
' → logprob: -8.51812744140625
    5. '[[' → logprob: -8.51812744140625
    6. '[int' → logprob: -11.89312744140625
    7. ' [' → logprob: -12.26812744140625
    8. '
' → logprob: -14.14312744140625
    9. '[(' → logprob: -14.64312744140625
    10. '[str' → logprob: -14.64312744140625

Token 473: 'Dataset' (ID: 37685)
  Prédit: 'Dataset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dataset' → logprob: -0.0010530536528676748
    2. 'list' → logprob: -6.8760528564453125
    3. 'Score' → logprob: -11.001052856445312
    4. ' Dataset' → logprob: -13.126052856445312
    5. 'tuple' → logprob: -14.876052856445312
    6. 'List' → logprob: -15.126052856445312
    7. 'dataset' → logprob: -15.501052856445312
    8. 'str' → logprob: -15.626052856445312
    9. 'int' → logprob: -16.251052856445312
    10. '.Dataset' → logprob: -16.251052856445312

Token 474: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.00943257287144661
    2. ']:' → logprob: -5.009432792663574
    3. '):
' → logprob: -6.884432792663574
    4. '():
' → logprob: -7.634432792663574
    5. '(self' → logprob: -7.884432792663574
    6. ']:
' → logprob: -7.884432792663574
    7. '   ' → logprob: -8.884432792663574
    8. ']' → logprob: -8.884432792663574
    9. '       ' → logprob: -9.009432792663574
    10. 'self' → logprob: -11.509432792663574

Token 475: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002661039761733264
    2. 'data' → logprob: -9.750266075134277
    3. 'input' → logprob: -10.000266075134277
    4. 'import' → logprob: -10.625266075134277
    5. '```' → logprob: -10.625266075134277
    6. '   ' → logprob: -11.000266075134277
    7. '[]' → logprob: -11.375266075134277
    8. '      ' → logprob: -11.500266075134277
    9. 'result' → logprob: -11.875266075134277
    10. '    ' → logprob: -11.875266075134277

Token 476: ' datasets' (ID: 57711)
  Prédit: 'datasets'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'datasets' (adapté à ' datasets') → logprob: -0.42850610613822937
    2. 'n' → logprob: -1.3035061359405518
    3. ' datasets' → logprob: -3.0535061359405518
    4. 'num' → logprob: -4.428505897521973
    5. 'import' → logprob: -4.803505897521973
    6. ' n' → logprob: -4.928505897521973
    7. ' import' → logprob: -7.178505897521973
    8. ' num' → logprob: -7.553505897521973
    9. 't' → logprob: -8.303505897521973
    10. '   ' → logprob: -8.428505897521973

Token 477: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38698190450668335
    2. '=' → logprob: -1.1369819641113281
    3. '=[]' → logprob: -9.261981964111328
    4. '=[]
' → logprob: -11.511981964111328
    5. '   ' → logprob: -13.386981964111328
    6. 's' → logprob: -13.761981964111328
    7. '_list' → logprob: -13.761981964111328
    8. ' ' → logprob: -14.386981964111328
    9. '_' → logprob: -14.386981964111328
    10. ':' → logprob: -15.386981964111328

Token 478: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.12710313498973846
    2. '[]' → logprob: -2.127103090286255
    3. ' []
' → logprob: -9.127102851867676
    4. '[]

' → logprob: -9.877102851867676
    5. ' []' → logprob: -11.127102851867676
    6. '[' → logprob: -15.877102851867676
    7. ' []
' → logprob: -16.377103805541992
    8. '=[]
' → logprob: -17.752103805541992
    9. ' []

' → logprob: -17.877103805541992
    10. '[])
' → logprob: -18.002103805541992

Token 479: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00014096579980105162
    2. ' while' → logprob: -9.375141143798828
    3. 'while' → logprob: -10.750141143798828
    4. '
' → logprob: -11.125141143798828
    5. '	' → logprob: -12.000141143798828
    6. 'import' → logprob: -12.875141143798828
    7. '   ' → logprob: -12.875141143798828
    8. 'n' → logprob: -13.000141143798828
    9. '        
' → logprob: -13.000141143798828
    10. '      ' → logprob: -14.500141143798828

Token 480: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.21903294324874878
    2. 'n' → logprob: -1.7190330028533936
    3. ' while' → logprob: -4.9690327644348145
    4. 'for' → logprob: -5.9690327644348145
    5. 'import' → logprob: -6.3440327644348145
    6. 'T' → logprob: -6.4690327644348145
    7. 'try' → logprob: -6.7190327644348145
    8. ' n' → logprob: -6.8440327644348145
    9. 't' → logprob: -7.0940327644348145
    10. 'num' → logprob: -7.2190327644348145

Token 481: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.5975345373153687
    2. 'True' → logprob: -0.8475345373153687
    3. '(True' → logprob: -3.847534656524658
    4. ' (' → logprob: -10.9725341796875
    5. ' Tru' → logprob: -12.7225341796875
    6. '
' → logprob: -13.0975341796875
    7. ' ' → logprob: -13.4725341796875
    8. '(T' → logprob: -13.4725341796875
    9. 'true' → logprob: -13.8475341796875
    10. '1' → logprob: -13.8475341796875

Token 482: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0797232910990715
    2. ':
' → logprob: -2.579723358154297
    3. '       ' → logprob: -7.829723358154297
    4. '           ' → logprob: -8.704723358154297
    5. ',' → logprob: -8.954723358154297
    6. '():
' → logprob: -10.704723358154297
    7. ' :' → logprob: -10.704723358154297
    8. '   ' → logprob: -10.954723358154297
    9. '):
' → logprob: -11.079723358154297
    10. '():' → logprob: -11.454723358154297

Token 483: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0035051610320806503
    2. '       ' → logprob: -6.378505229949951
    3. ' try' → logprob: -7.378505229949951
    4. 'try' → logprob: -7.628505229949951
    5. ' line' → logprob: -8.003504753112793
    6. '   ' → logprob: -8.503504753112793
    7. 'line' → logprob: -9.628504753112793
    8. 'n' → logprob: -11.003504753112793
    9. 'input' → logprob: -11.003504753112793
    10. '    ' → logprob: -11.378504753112793

Token 484: ' try' (ID: 2075)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.15832287073135376
    2. ' n' → logprob: -2.158322811126709
    3. 'try' (adapté à ' try') → logprob: -4.533322811126709
    4. ' try' → logprob: -4.533322811126709
    5. ' line' → logprob: -5.658322811126709
    6. 'line' → logprob: -6.033322811126709
    7. 'N' → logprob: -6.658322811126709
    8. 'num' → logprob: -6.783322811126709
    9. '           ' → logprob: -7.533322811126709
    10. '   ' → logprob: -8.158323287963867

Token 485: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6362472772598267
    2. ':' → logprob: -0.7612472772598267
    3. '               ' → logprob: -5.636247158050537
    4. '           ' → logprob: -10.886247634887695
    5. ' :' → logprob: -11.136247634887695
    6. '):
' → logprob: -11.261247634887695
    7. ':
' → logprob: -11.511247634887695
    8. ' :
' → logprob: -12.136247634887695
    9. '   ' → logprob: -12.886247634887695
    10. ':

' → logprob: -13.636247634887695

Token 486: '               ' (ID: 506)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.6339626312255859
    2. '               ' → logprob: -1.008962631225586
    3. ' input' → logprob: -3.008962631225586
    4. 'line' → logprob: -3.883962631225586
    5. 'input' → logprob: -4.758962631225586
    6. '           ' → logprob: -4.883962631225586
    7. 'n' → logprob: -5.008962631225586
    8. '   ' → logprob: -5.383962631225586
    9. ' n' → logprob: -5.508962631225586
    10. 'num' → logprob: -6.633962631225586

Token 487: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.39087578654289246
    2. ' n' → logprob: -1.1408758163452148
    3. ' line' → logprob: -6.015875816345215
    4. 'num' → logprob: -7.265875816345215
    5. 'line' → logprob: -8.015875816345215
    6. 'N' → logprob: -8.390875816345215
    7. ' num' → logprob: -9.015875816345215
    8. ' N' → logprob: -9.890875816345215
    9. ' count' → logprob: -10.140875816345215
    10. 'count' → logprob: -10.390875816345215

Token 488: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03813398256897926
    2. '=' → logprob: -3.2881340980529785
    3. ' =
' → logprob: -9.78813362121582
    4. '=int' → logprob: -10.41313362121582
    5. '=
' → logprob: -12.78813362121582
    6. ' ' → logprob: -13.03813362121582
    7. ' =
' → logprob: -15.16313362121582
    8. '=input' → logprob: -15.41313362121582
    9. '=line' → logprob: -16.03813362121582
    10. 'space' → logprob: -16.16313362121582

Token 489: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5759396553039551
    2. ' int' → logprob: -0.8259396553039551
    3. '=int' → logprob: -16.325939178466797
    4. '(int' → logprob: -16.950939178466797
    5. '	int' → logprob: -17.200939178466797
    6. '[int' → logprob: -17.575939178466797
    7. '<int' → logprob: -18.700939178466797
    8. ':int' → logprob: -19.325939178466797
    9. '   ' → logprob: -19.450939178466797
    10. '                   ' → logprob: -19.700939178466797

Token 490: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.000718030845746398
    2. '(' → logprob: -7.500718116760254
    3. 'input' → logprob: -8.750718116760254
    4. '(
' → logprob: -12.375718116760254
    5. '()' → logprob: -13.500718116760254
    6. ' input' → logprob: -14.000718116760254
    7. '(

' → logprob: -15.500718116760254
    8. '=input' → logprob: -17.250717163085938
    9. '(in' → logprob: -17.750717163085938
    10. '	input' → logprob: -18.125717163085938

Token 491: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.006191253196448088
    2. '()' → logprob: -5.756191253662109
    3. '())
' → logprob: -6.506191253662109
    4. '().' → logprob: -6.506191253662109
    5. '()
' → logprob: -11.25619125366211
    6. ' ())' → logprob: -12.13119125366211
    7. '())

' → logprob: -13.50619125366211
    8. '())
' → logprob: -15.25619125366211
    9. '()))' → logprob: -15.38119125366211
    10. '()),' → logprob: -16.25619125366211

Token 492: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.029940009117126465
    2. '           ' → logprob: -3.529940128326416
    3. '                
' → logprob: -10.404939651489258
    4. '              ' → logprob: -10.904939651489258
    5. '	           ' → logprob: -10.904939651489258
    6. '            ' → logprob: -11.029939651489258
    7. '		' → logprob: -11.154939651489258
    8. '                   ' → logprob: -11.154939651489258
    9. 'except' → logprob: -11.279939651489258
    10. '                ' → logprob: -11.404939651489258

Token 493: ' except' (ID: 6384)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00351953343488276
    2. ' except' → logprob: -7.003519535064697
    3. 'except' (adapté à ' except') → logprob: -7.503519535064697
    4. '		' → logprob: -7.753519535064697
    5. '       ' → logprob: -7.878519535064697
    6. '               ' → logprob: -8.128519058227539
    7. '
' → logprob: -8.378519058227539
    8. '            
' → logprob: -8.503519058227539
    9. ' if' → logprob: -8.628519058227539
    10. '            ' → logprob: -9.378519058227539

Token 494: ' EOF' (ID: 72412)
  Prédit: ' EOF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' EOF' → logprob: -0.11414767801761627
    2. 'EOF' → logprob: -2.239147663116455
    3. 'Value' → logprob: -7.864147663116455
    4. ' Value' → logprob: -8.239148139953613
    5. '<|end|>' → logprob: -8.239148139953613
    6. '(Value' → logprob: -8.739148139953613
    7. 'Stop' → logprob: -9.364148139953613
    8. '(Exception' → logprob: -10.114148139953613
    9. ' (' → logprob: -10.114148139953613
    10. ' Exception' → logprob: -10.614148139953613

Token 495: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: 0.0
    2. 'rror' → logprob: -16.875
    3. 'error' → logprob: -19.0
    4. ' Error' → logprob: -19.0
    5. 'E' → logprob: -19.125
    6. '
' → logprob: -19.5
    7. 'Er' → logprob: -20.625
    8. 'LError' → logprob: -21.25
    9. 'EOF' → logprob: -21.25
    10. 'Erro' → logprob: -21.75

Token 496: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03361249715089798
    2. ':
' → logprob: -3.5336124897003174
    3. '               ' → logprob: -5.6586127281188965
    4. '           ' → logprob: -8.408612251281738
    5. '                   ' → logprob: -10.533612251281738
    6. ' :' → logprob: -10.783612251281738
    7. ' or' → logprob: -10.908612251281738
    8. '	           ' → logprob: -11.283612251281738
    9. ':return' → logprob: -11.908612251281738
    10. '            ' → logprob: -11.908612251281738

Token 497: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001756575657054782
    2. '           ' → logprob: -6.62675666809082
    3. ' break' → logprob: -8.12675666809082
    4. 'break' → logprob: -9.37675666809082
    5. '	break' → logprob: -10.50175666809082
    6. '	           ' → logprob: -11.87675666809082
    7. '   ' → logprob: -12.25175666809082
    8. '                   ' → logprob: -12.50175666809082
    9. '			' → logprob: -12.87675666809082
    10. '                
' → logprob: -14.00175666809082

Token 498: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.1482488512992859
    2. ' break' → logprob: -2.1482489109039307
    3. '               ' → logprob: -3.8982489109039307
    4. '	break' → logprob: -7.898248672485352
    5. '                   ' → logprob: -8.648248672485352
    6. 'return' → logprob: -8.898248672485352
    7. '
' → logprob: -9.398248672485352
    8. '           ' → logprob: -10.398248672485352
    9. '                
' → logprob: -11.773248672485352
    10. '_break' → logprob: -12.023248672485352

Token 499: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0019106694962829351
    2. '            
' → logprob: -6.50191068649292
    3. '		' → logprob: -8.751910209655762
    4. '
' → logprob: -9.501910209655762
    5. '               ' → logprob: -9.876910209655762
    6. ' if' → logprob: -10.626910209655762
    7. '            ' → logprob: -11.001910209655762
    8. '       ' → logprob: -11.251910209655762
    9. '<|end|>' → logprob: -11.501910209655762
    10. '          ' → logprob: -11.626910209655762

Token 500: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006298751104623079
    2. '		' → logprob: -8.250629425048828
    3. ' if' → logprob: -8.750629425048828
    4. '            
' → logprob: -9.750629425048828
    5. '       ' → logprob: -10.000629425048828
    6. '<|end|>' → logprob: -10.750629425048828
    7. 'if' → logprob: -11.000629425048828
    8. '            ' → logprob: -11.750629425048828
    9. '​' → logprob: -11.875629425048828
    10. '        ' → logprob: -11.875629425048828

Token 501: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.40781334042549133
    2. '           ' → logprob: -1.407813310623169
    3. ' if' → logprob: -2.407813310623169
    4. '	if' → logprob: -9.03281307220459
    5. '		' → logprob: -10.28281307220459
    6. '            
' → logprob: -10.78281307220459
    7. '       ' → logprob: -11.65781307220459
    8. '   ' → logprob: -11.65781307220459
    9. '	       ' → logprob: -12.03281307220459
    10. '	   ' → logprob: -13.15781307220459

Token 502: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.02329893410205841
    2. 'n' → logprob: -3.773298978805542
    3. ' not' → logprob: -9.898299217224121
    4. '	n' → logprob: -13.023299217224121
    5. 'not' → logprob: -14.898299217224121
    6. ' ' → logprob: -15.148299217224121
    7. ' ' → logprob: -15.523299217224121
    8. 'n't' → logprob: -15.898299217224121
    9. '_n' → logprob: -17.273298263549805
    10. '0' → logprob: -17.773298263549805

Token 503: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.16154929995536804
    2. '==' → logprob: -1.9115493297576904
    3. ' <=' → logprob: -6.786549091339111
    4. '<=' → logprob: -8.66154956817627
    5. '=' → logprob: -11.53654956817627
    6. ' ' → logprob: -12.03654956817627
    7. ' =' → logprob: -13.66154956817627
    8. '0' → logprob: -13.66154956817627
    9. ')' → logprob: -14.03654956817627
    10. ')==' → logprob: -14.28654956817627

Token 504: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017023178515955806
    2. ' ' → logprob: -6.376702308654785
    3. '  ' → logprob: -16.5017032623291
    4. '   ' → logprob: -17.7517032623291
    5. '    ' → logprob: -18.7517032623291
    6. '<|end|>' → logprob: -19.1267032623291
    7. '۰' → logprob: -19.8767032623291
    8. '```' → logprob: -20.1267032623291
    9. ' ' → logprob: -20.3767032623291
    10. '０' → logprob: -20.7517032623291

Token 505: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '-' → logprob: -17.250036239624023
    4. ' -' → logprob: -19.000036239624023
    5. '  ' → logprob: -19.375036239624023
    6. '０' → logprob: -19.625036239624023
    7. '   ' → logprob: -20.250036239624023
    8. '```' → logprob: -20.500036239624023
    9. ' ' → logprob: -20.750036239624023
    10. '۰' → logprob: -20.750036239624023

Token 506: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5759544372558594
    2. ':
' → logprob: -0.8259544372558594
    3. ':return' → logprob: -11.95095443725586
    4. ':
' → logprob: -12.20095443725586
    5. ' :
' → logprob: -13.57595443725586
    6. ' :' → logprob: -14.20095443725586
    7. '):
' → logprob: -15.07595443725586
    8. '   ' → logprob: -15.07595443725586
    9. '	break' → logprob: -15.57595443725586
    10. ':

' → logprob: -15.57595443725586

Token 507: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -8.363617962459102e-05
    2. '           ' → logprob: -9.500083923339844
    3. '	           ' → logprob: -12.625083923339844
    4. '                   ' → logprob: -13.375083923339844
    5. '			' → logprob: -13.875083923339844
    6. '              ' → logprob: -14.375083923339844
    7. ' break' → logprob: -14.875083923339844
    8. '
' → logprob: -14.875083923339844
    9. '                
' → logprob: -15.125083923339844
    10. '             ' → logprob: -15.125083923339844

Token 508: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.45651164650917053
    2. 'break' (adapté à ' break') → logprob: -1.2065116167068481
    3. '               ' → logprob: -2.7065117359161377
    4. '           ' → logprob: -8.331511497497559
    5. '	break' → logprob: -8.456511497497559
    6. '
' → logprob: -11.456511497497559
    7. '   ' → logprob: -11.456511497497559
    8. 'return' → logprob: -11.706511497497559
    9. '_break' → logprob: -12.206511497497559
    10. '                   ' → logprob: -12.331511497497559

Token 509: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4547305107116699
    2. '           ' → logprob: -1.45473051071167
    3. '       ' → logprob: -2.32973051071167
    4. '            
' → logprob: -4.07973051071167
    5. '    
' → logprob: -4.70473051071167
    6. '        
' → logprob: -5.20473051071167
    7. '\n' → logprob: -7.32973051071167
    8. '<|end|>' → logprob: -7.32973051071167
    9. '   ' → logprob: -7.82973051071167
    10. '  
' → logprob: -8.204730987548828

Token 510: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0028615815099328756
    2. '       ' → logprob: -6.002861499786377
    3. '
' → logprob: -8.752861976623535
    4. '        
' → logprob: -8.877861976623535
    5. '            
' → logprob: -9.502861976623535
    6. '               ' → logprob: -13.127861976623535
    7. '    
' → logprob: -13.252861976623535
    8. '          ' → logprob: -13.252861976623535
    9. '<|end|>' → logprob: -13.377861976623535
    10. '		' → logprob: -13.752861976623535

Token 511: ' scores' (ID: 18923)
  Prédit: 'scores'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'scores' (adapté à ' scores') → logprob: -0.38871002197265625
    2. ' scores' → logprob: -1.1387100219726562
    3. '           ' → logprob: -6.388710021972656
    4. '       ' → logprob: -10.013710021972656
    5. '(scores' → logprob: -10.388710021972656
    6. 's' → logprob: -10.388710021972656
    7. 'score' → logprob: -11.138710021972656
    8. '            
' → logprob: -11.763710021972656
    9. '   ' → logprob: -12.138710021972656
    10. '_scores' → logprob: -12.263710021972656

Token 512: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.061983708292245865
    2. '=' → logprob: -2.811983823776245
    3. '=[]' → logprob: -11.686984062194824
    4. '=[]
' → logprob: -12.686984062194824
    5. 's' → logprob: -13.061984062194824
    6. ' ' → logprob: -13.811984062194824
    7. ':' → logprob: -14.936984062194824
    8. '   ' → logprob: -15.061984062194824
    9. '  ' → logprob: -15.186984062194824
    10. '    ' → logprob: -15.561984062194824

Token 513: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4609822630882263
    2. '[]
' → logprob: -1.460982322692871
    3. ' [' → logprob: -2.210982322692871
    4. '[
' → logprob: -4.710982322692871
    5. '[]' → logprob: -4.960982322692871
    6. '[s' → logprob: -5.460982322692871
    7. ' []
' → logprob: -5.710982322692871
    8. '[n' → logprob: -6.960982322692871
    9. '[int' → logprob: -7.710982322692871
    10. '[new' → logprob: -8.085982322692871

Token 514: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005058500682935119
    2. ' for' → logprob: -8.250505447387695
    3. '       ' → logprob: -9.250505447387695
    4. '	       ' → logprob: -9.250505447387695
    5. '		' → logprob: -10.625505447387695
    6. 'for' → logprob: -11.000505447387695
    7. '	   ' → logprob: -12.375505447387695
    8. '   ' → logprob: -13.250505447387695
    9. '	for' → logprob: -13.625505447387695
    10. '    	   ' → logprob: -13.625505447387695

Token 515: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0920373722910881
    2. ' for' → logprob: -2.5920374393463135
    3. '           ' → logprob: -4.342037200927734
    4. '	for' → logprob: -10.967037200927734
    5. '       ' → logprob: -11.092037200927734
    6. '   ' → logprob: -11.092037200927734
    7. '
' → logprob: -13.342037200927734
    8. '		' → logprob: -13.467037200927734
    9. '	       ' → logprob: -15.092037200927734
    10. '	   ' → logprob: -15.967037200927734

Token 516: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.004099416080862284
    2. ' _' → logprob: -5.504099369049072
    3. '_i' → logprob: -10.87909984588623
    4. ' i' → logprob: -13.12909984588623
    5. '_
' → logprob: -16.629098892211914
    6. 'i' → logprob: -17.129098892211914
    7. ' ' → logprob: -18.004098892211914
    8. '_in' → logprob: -18.504098892211914
    9. '_range' → logprob: -19.379098892211914
    10. ' in' → logprob: -19.754098892211914

Token 517: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03952985256910324
    2. 'in' → logprob: -3.289529800415039
    3. 'range' → logprob: -6.539529800415039
    4. ' ' → logprob: -10.539529800415039
    5. ' range' → logprob: -11.539529800415039
    6. '  ' → logprob: -12.539529800415039
    7. ' _' → logprob: -13.789529800415039
    8. 'i' → logprob: -14.914529800415039
    9. '   ' → logprob: -15.539529800415039
    10. '
' → logprob: -15.789529800415039

Token 518: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0011706985533237457
    2. ' range' → logprob: -6.751170635223389
    3. '_range' → logprob: -15.751171112060547
    4. '_' → logprob: -16.376171112060547
    5. '	range' → logprob: -16.376171112060547
    6. 'rang' → logprob: -17.001171112060547
    7. 'r' → logprob: -17.251171112060547
    8. '(range' → logprob: -17.626171112060547
    9. ' ' → logprob: -17.876171112060547
    10. 'ran' → logprob: -17.876171112060547

Token 519: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6335910558700562
    2. ' n' → logprob: -0.8835910558700562
    3. '(n' → logprob: -2.8835911750793457
    4. '	n' → logprob: -9.633590698242188
    5. ' (' → logprob: -11.883590698242188
    6. '(' → logprob: -12.133590698242188
    7. '
' → logprob: -12.383590698242188
    8. '_n' → logprob: -12.758590698242188
    9. ' range' → logprob: -14.133590698242188
    10. '   ' → logprob: -14.258590698242188

Token 520: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.01654793508350849
    2. '):' → logprob: -4.141548156738281
    3. '):
' → logprob: -8.266548156738281
    4. ' ):
' → logprob: -8.891548156738281
    5. ':' → logprob: -10.016548156738281
    6. ':
' → logprob: -10.141548156738281
    7. '():
' → logprob: -11.641548156738281
    8. '   ' → logprob: -12.391548156738281
    9. ')' → logprob: -12.516548156738281
    10. '       ' → logprob: -12.516548156738281

Token 521: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005660186288878322
    2. '	           ' → logprob: -8.625566482543945
    3. '<|end|>' → logprob: -9.000566482543945
    4. ' input' → logprob: -9.875566482543945
    5. '   ' → logprob: -9.875566482543945
    6. '                
' → logprob: -10.750566482543945
    7. '              ' → logprob: -11.250566482543945
    8. ' tokens' → logprob: -11.250566482543945
    9. 'token' → logprob: -11.500566482543945
    10. 'tokens' → logprob: -11.500566482543945

Token 522: ' pm' (ID: 10074)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.258897066116333
    2. ' math' → logprob: -1.758897066116333
    3. 'm' → logprob: -3.008897066116333
    4. ' m' → logprob: -5.883896827697754
    5. 'line' → logprob: -6.508896827697754
    6. ' line' → logprob: -7.133896827697754
    7. '           ' → logprob: -7.633896827697754
    8. 'a' → logprob: -8.008896827697754
    9. ' parts' → logprob: -8.758896827697754
    10. 'parts' → logprob: -9.383896827697754

Token 523: ',' (ID: 11)
  Prédit: 'ath'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ath' → logprob: -0.16664890944957733
    2. ',' → logprob: -2.1666488647460938
    3. ' =' → logprob: -3.6666488647460938
    4. 's' → logprob: -5.916648864746094
    5. 'math' → logprob: -5.916648864746094
    6. '=' → logprob: -6.166648864746094
    7. ' math' → logprob: -6.416648864746094
    8. ' ' → logprob: -6.541648864746094
    9. '_line' → logprob: -7.916648864746094
    10. 'aths' → logprob: -7.916648864746094

Token 524: ' pe' (ID: 1045)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.7039201855659485
    2. ' pe' → logprob: -1.5789201259613037
    3. ' em' → logprob: -1.7039201259613037
    4. 'em' → logprob: -2.2039201259613037
    5. 'ep' → logprob: -6.453920364379883
    6. 'p' → logprob: -6.578920364379883
    7. ' p' → logprob: -7.453920364379883
    8. 'ps' → logprob: -7.953920364379883
    9. ' en' → logprob: -7.953920364379883
    10. ' ep' → logprob: -8.578920364379883

Token 525: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014159500133246183
    2. ',j' → logprob: -6.751415729522705
    3. ' ,' → logprob: -9.626416206359863
    4. ',p' → logprob: -9.876416206359863
    5. 'p' → logprob: -10.376416206359863
    6. 'ng' → logprob: -10.751416206359863
    7. 'm' → logprob: -10.876416206359863
    8. 'j' → logprob: -11.126416206359863
    9. 'n' → logprob: -11.876416206359863
    10. ',e' → logprob: -12.251416206359863

Token 526: ' pj' (ID: 110041)
  Prédit: 'pj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pj' → logprob: -0.04861847683787346
    2. ' pj' → logprob: -3.0486185550689697
    3. 'jj' → logprob: -11.42361831665039
    4. 'pp' → logprob: -11.67361831665039
    5. 'p' → logprob: -12.54861831665039
    6. ' ' → logprob: -13.29861831665039
    7. 'jp' → logprob: -14.04861831665039
    8. 'j' → logprob: -14.04861831665039
    9. '   ' → logprob: -14.17361831665039
    10. 'oj' → logprob: -14.67361831665039

Token 527: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10030113160610199
    2. ' =' → logprob: -2.3503010272979736
    3. ',' → logprob: -9.350300788879395
    4. ' ' → logprob: -12.600300788879395
    5. '=int' → logprob: -13.350300788879395
    6. ')' → logprob: -14.225300788879395
    7. '=input' → logprob: -14.475300788879395
    8. ')=' → logprob: -15.100300788879395
    9. '  ' → logprob: -15.600300788879395
    10. '＝' → logprob: -15.850300788879395

Token 528: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.4740796685218811
    2. ' map' → logprob: -0.9740796685218811
    3. '	map' → logprob: -13.849080085754395
    4. '(map' → logprob: -14.599080085754395
    5. 'input' → logprob: -14.849080085754395
    6. '[' → logprob: -15.099080085754395
    7. 'list' → logprob: -15.349080085754395
    8. ' ' → logprob: -15.849080085754395
    9. '   ' → logprob: -16.224079132080078
    10. '.map' → logprob: -16.849079132080078

Token 529: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0011703446507453918
    2. 'int' → logprob: -6.7511701583862305
    3. '(' → logprob: -16.751171112060547
    4. '=int' → logprob: -17.251171112060547
    5. ' int' → logprob: -17.501171112060547
    6. '	int' → logprob: -17.876171112060547
    7. '(
' → logprob: -18.251171112060547
    8. '
' → logprob: -18.501171112060547
    9. ',int' → logprob: -18.501171112060547
    10. '[int' → logprob: -18.501171112060547

Token 530: ',' (ID: 11)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.8676637411117554
    2. ',input' → logprob: -0.9926637411117554
    3. '(input' → logprob: -2.242663860321045
    4. ',' → logprob: -2.492663860321045
    5. ' input' → logprob: -3.992663860321045
    6. ')' → logprob: -6.367663860321045
    7. '(' → logprob: -8.742663383483887
    8. ' (' → logprob: -9.617663383483887
    9. '   ' → logprob: -9.742663383483887
    10. ' ,' → logprob: -9.742663383483887

Token 531: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0485873706638813
    2. ' input' → logprob: -3.0485873222351074
    3. '	input' → logprob: -18.548587799072266
    4. '(input' → logprob: -19.298587799072266
    5. '=input' → logprob: -19.798587799072266
    6. '_input' → logprob: -19.798587799072266
    7. '<input' → logprob: -19.923587799072266
    8. ',input' → logprob: -19.923587799072266
    9. 'Input' → logprob: -20.048587799072266
    10. '
' → logprob: -21.423587799072266

Token 532: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -7.896309739408025e-07
    2. '()' → logprob: -14.125000953674316
    3. ' ().' → logprob: -17.375
    4. '()
' → logprob: -18.25
    5. '(' → logprob: -19.125
    6. '   ' → logprob: -21.375
    7. '.' → logprob: -21.75
    8. '.split' → logprob: -21.875
    9. ' .' → logprob: -22.75
    10. '	' → logprob: -23.25

Token 533: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00020425561524461955
    2. 'strip' → logprob: -8.500204086303711
    3. ' split' → logprob: -14.500204086303711
    4. 'rstrip' → logprob: -15.250204086303711
    5. 'spl' → logprob: -17.75020408630371
    6. '(split' → logprob: -18.12520408630371
    7. '.split' → logprob: -19.12520408630371
    8. '().' → logprob: -21.00020408630371
    9. 's' → logprob: -22.00020408630371
    10. 'sp' → logprob: -22.25020408630371

Token 534: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.000954098126385361
    2. '())
' → logprob: -7.2509541511535645
    3. '()' → logprob: -8.375953674316406
    4. ')' → logprob: -11.875953674316406
    5. '(' → logprob: -12.750953674316406
    6. '()))' → logprob: -13.500953674316406
    7. ' ())' → logprob: -14.000953674316406
    8. '())
' → logprob: -14.125953674316406
    9. '('' → logprob: -14.500953674316406
    10. '()
' → logprob: -15.875953674316406

Token 535: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004880061838775873
    2. '                
' → logprob: -5.754879951477051
    3. '           ' → logprob: -7.754879951477051
    4. ')' → logprob: -8.12987995147705
    5. '<|end|>' → logprob: -8.12987995147705
    6. '
' → logprob: -8.50487995147705
    7. '              ' → logprob: -9.12987995147705
    8. '            
' → logprob: -9.37987995147705
    9. '                ' → logprob: -10.12987995147705
    10. ',' → logprob: -10.25487995147705

Token 536: ' scores' (ID: 18923)
  Prédit: 'scores'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'scores' (adapté à ' scores') → logprob: -0.6553502082824707
    2. ' scores' → logprob: -0.7803502082824707
    3. 'score' → logprob: -4.155350208282471
    4. ' score' → logprob: -5.655350208282471
    5. '               ' → logprob: -5.780350208282471
    6. 's' → logprob: -8.530349731445312
    7. ' s' → logprob: -11.405349731445312
    8. '           ' → logprob: -12.405349731445312
    9. '(scores' → logprob: -12.530349731445312
    10. '_scores' → logprob: -13.280349731445312

Token 537: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0001105762057704851
    2. '.' → logprob: -9.250110626220703
    3. '.ap' → logprob: -11.500110626220703
    4. '.app' → logprob: -12.625110626220703
    5. ' .' → logprob: -14.000110626220703
    6. '.extend' → logprob: -16.875110626220703
    7. '.a' → logprob: -17.375110626220703
    8. ').' → logprob: -17.625110626220703
    9. '.push' → logprob: -17.750110626220703
    10. '.p' → logprob: -18.375110626220703

Token 538: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.941850526549388e-06
    2. '(S' → logprob: -12.000007629394531
    3. '(
' → logprob: -13.500007629394531
    4. 'Score' → logprob: -15.250007629394531
    5. '(score' → logprob: -16.37500762939453
    6. ' (' → logprob: -17.75000762939453
    7. ' Score' → logprob: -17.87500762939453
    8. '(

' → logprob: -18.62500762939453
    9. '.Score' → logprob: -19.12500762939453
    10. '((' → logprob: -20.00000762939453

Token 539: 'Score' (ID: 12357)
  Prédit: 'Score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Score' → logprob: -4.320199877838604e-07
    2. ' Score' → logprob: -15.0
    3. 'score' → logprob: -22.375
    4. 'Scores' → logprob: -23.125
    5. '   ' → logprob: -23.375
    6. '_score' → logprob: -24.625
    7. '       ' → logprob: -25.5
    8. '.Score' → logprob: -25.75
    9. '           ' → logprob: -26.125
    10. 'Sc' → logprob: -26.875

Token 540: '(pm' (ID: 169691)
  Prédit: '(pm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pm' → logprob: -2.935296834039036e-06
    2. 'pm' → logprob: -13.25000286102295
    3. '(p' → logprob: -14.00000286102295
    4. '(' → logprob: -15.50000286102295
    5. '	pm' → logprob: -17.625003814697266
    6. ' pm' → logprob: -17.875003814697266
    7. '_pm' → logprob: -19.375003814697266
    8. '(
' → logprob: -20.000003814697266
    9. '(px' → logprob: -21.000003814697266
    10. 'PM' → logprob: -21.125003814697266

Token 541: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.85235276655294e-05
    2. ' ,' → logprob: -9.375088691711426
    3. ',
' → logprob: -12.750088691711426
    4. ',p' → logprob: -14.125088691711426
    5. ')' → logprob: -17.75008773803711
    6. '‌,' → logprob: -18.12508773803711
    7. ',

' → logprob: -18.37508773803711
    8. ',\
' → logprob: -19.00008773803711
    9. '<|end|>' → logprob: -19.12508773803711
    10. ',
' → logprob: -19.25008773803711

Token 542: ' pe' (ID: 1045)
  Prédit: ' pe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pe' → logprob: -0.31328731775283813
    2. 'pe' → logprob: -1.3132872581481934
    3. '(pe' → logprob: -11.313287734985352
    4. '_pe' → logprob: -12.188287734985352
    5. 'PE' → logprob: -13.313287734985352
    6. ' PE' → logprob: -13.313287734985352
    7. ' 
' → logprob: -13.313287734985352
    8. 'peat' → logprob: -13.813287734985352
    9. '<|end|>' → logprob: -14.813287734985352
    10. '.pe' → logprob: -15.188287734985352

Token 543: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.547789674485102e-05
    2. ',p' → logprob: -10.375035285949707
    3. ' ,' → logprob: -12.500035285949707
    4. ',
' → logprob: -15.000035285949707
    5. ',j' → logprob: -16.625036239624023
    6. ',P' → logprob: -17.125036239624023
    7. ',m' → logprob: -19.750036239624023
    8. ',q' → logprob: -19.875036239624023
    9. ',int' → logprob: -20.125036239624023
    10. ',\
' → logprob: -20.500036239624023

Token 544: ' pj' (ID: 110041)
  Prédit: 'pj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pj' → logprob: -0.01603800244629383
    2. ' pj' → logprob: -4.141037940979004
    3. '
' → logprob: -13.516037940979004
    4. ' ' → logprob: -14.766037940979004
    5. 'p' → logprob: -15.016037940979004
    6. '   ' → logprob: -15.141037940979004
    7. '           ' → logprob: -15.391037940979004
    8. '       ' → logprob: -15.766037940979004
    9. '    ' → logprob: -16.01603889465332
    10. ' 
' → logprob: -16.26603889465332

Token 545: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00043710620957426727
    2. '))
' → logprob: -7.750437259674072
    3. ')' → logprob: -12.000436782836914
    4. ' ))' → logprob: -15.375436782836914
    5. '))

' → logprob: -17.250436782836914
    6. ')
' → logprob: -17.625436782836914
    7. ')))' → logprob: -17.750436782836914
    8. '))
' → logprob: -18.500436782836914
    9. '           ' → logprob: -18.500436782836914
    10. '       ' → logprob: -18.625436782836914

Token 546: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003062676405534148
    2. '<|end|>' → logprob: -6.253062725067139
    3. 'datasets' → logprob: -7.628062725067139
    4. '       ' → logprob: -7.753062725067139
    5. ' datasets' → logprob: -9.25306224822998
    6. '          ' → logprob: -10.37806224822998
    7. 'dataset' → logprob: -10.50306224822998
    8. 'd' → logprob: -11.25306224822998
    9. '.datasets' → logprob: -11.50306224822998
    10. '<|end|>' → logprob: -11.62806224822998

Token 547: ' datasets' (ID: 57711)
  Prédit: 'datasets'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'datasets' (adapté à ' datasets') → logprob: -0.16102631390094757
    2. '           ' → logprob: -2.1610262393951416
    3. ' datasets' → logprob: -3.4110262393951416
    4. '       ' → logprob: -8.036026000976562
    5. 'dataset' → logprob: -9.286026000976562
    6. 'd' → logprob: -9.911026000976562
    7. '.datasets' → logprob: -10.661026000976562
    8. '   ' → logprob: -10.911026000976562
    9. '	d' → logprob: -13.036026000976562
    10. ' dataset' → logprob: -13.286026000976562

Token 548: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -3.47626737493556e-05
    2. '.' → logprob: -10.37503433227539
    3. ' .' → logprob: -13.25003433227539
    4. '.app' → logprob: -13.87503433227539
    5. '.ap' → logprob: -14.50003433227539
    6. '.
' → logprob: -16.87503433227539
    7. '.push' → logprob: -17.12503433227539
    8. '.add' → logprob: -17.75003433227539
    9. 'append' → logprob: -17.87503433227539
    10. ').' → logprob: -18.00003433227539

Token 549: '(D' (ID: 9908)
  Prédit: '(D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -6.511406809295295e-06
    2. 'Dataset' → logprob: -12.000006675720215
    3. ' Dataset' → logprob: -15.125006675720215
    4. '(' → logprob: -18.1250057220459
    5. '(Dense' → logprob: -18.1250057220459
    6. 'D' → logprob: -18.2500057220459
    7. '.Dataset' → logprob: -18.3750057220459
    8. '	D' → logprob: -18.3750057220459
    9. '(
' → logprob: -18.7500057220459
    10. '(Data' → logprob: -18.8750057220459

Token 550: 'ataset' (ID: 12310)
  Prédit: 'ataset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ataset' → logprob: -8.08944896562025e-05
    2. 'Dataset' → logprob: -10.000081062316895
    3. 'atasets' → logprob: -10.500081062316895
    4. 'ata' → logprob: -12.625081062316895
    5. 'atas' → logprob: -12.625081062316895
    6. 'aset' → logprob: -14.000081062316895
    7. 'dataset' → logprob: -15.500081062316895
    8. 'at' → logprob: -16.500080108642578
    9. 'tas' → logprob: -17.500080108642578
    10. ' Dataset' → logprob: -17.500080108642578

Token 551: '(scores' (ID: 154090)
  Prédit: '(scores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(scores' → logprob: -2.45848218582978e-06
    2. ' (' → logprob: -13.37500286102295
    3. '(' → logprob: -14.87500286102295
    4. 'scores' → logprob: -15.25000286102295
    5. '(samples' → logprob: -16.750001907348633
    6. '(
' → logprob: -17.000001907348633
    7. '(score' → logprob: -17.375001907348633
    8. '(s' → logprob: -17.875001907348633
    9. ' scores' → logprob: -18.000001907348633
    10. ')' → logprob: -18.375001907348633

Token 552: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.001216305885463953
    2. '))
' → logprob: -6.876216411590576
    3. ')' → logprob: -8.626215934753418
    4. '       ' → logprob: -13.501215934753418
    5. '))

' → logprob: -13.626215934753418
    6. ' ))' → logprob: -14.626215934753418
    7. '))
' → logprob: -14.876215934753418
    8. '));' → logprob: -15.001215934753418
    9. '   ' → logprob: -15.626215934753418
    10. ')
' → logprob: -16.001216888427734

Token 553: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005826997803524137
    2. 'return' → logprob: -7.625582695007324
    3. '<|end|>' → logprob: -10.500582695007324
    4. ' return' → logprob: -10.625582695007324
    5. '   ' → logprob: -10.875582695007324
    6. '	' → logprob: -11.250582695007324
    7. '	return' → logprob: -12.625582695007324
    8. '
' → logprob: -13.250582695007324
    9. '```' → logprob: -13.250582695007324
    10. '           ' → logprob: -13.500582695007324

Token 554: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03015667386353016
    2. 'return' (adapté à ' return') → logprob: -3.5301566123962402
    3. ' return' → logprob: -7.90515661239624
    4. '   ' → logprob: -10.905157089233398
    5. '	return' → logprob: -11.030157089233398
    6. '	' → logprob: -13.780157089233398
    7. '
' → logprob: -14.405157089233398
    8. '           ' → logprob: -14.530157089233398
    9. ' ' → logprob: -15.905157089233398
    10. '<|end|>' → logprob: -15.905157089233398

Token 555: ' datasets' (ID: 57711)
  Prédit: 'datasets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'datasets' → logprob: -0.004078758880496025
    2. ' datasets' → logprob: -5.5040788650512695
    3. 'dataset' → logprob: -15.37907886505127
    4. '.datasets' → logprob: -16.379077911376953
    5. 'dat' → logprob: -17.129077911376953
    6. 'd' → logprob: -17.504077911376953
    7. 'atasets' → logprob: -17.879077911376953
    8. 'datas' → logprob: -20.379077911376953
    9. '	d' → logprob: -20.504077911376953
    10. '   ' → logprob: -20.629077911376953

Token 556: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 557: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4763011336326599
    2. 'if' → logprob: -0.9763011336326599
    3. 'datasets' → logprob: -6.226301193237305
    4. 'class' → logprob: -8.601301193237305
    5. 'reader' → logprob: -10.101301193237305
    6. 'for' → logprob: -11.226301193237305
    7. 'dataset' → logprob: -13.101301193237305
    8. 'input' → logprob: -13.976301193237305
    9. 'from' → logprob: -14.101301193237305
    10. 'import' → logprob: -14.101301193237305

Token 558: ' Solution' (ID: 20858)
  Prédit: 'Output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Output' → logprob: -0.4777939021587372
    2. ' Output' → logprob: -1.1027939319610596
    3. 'Main' → logprob: -4.1027936935424805
    4. 'Runner' → logprob: -4.7277936935424805
    5. ' Runner' → logprob: -4.9777936935424805
    6. ' Main' → logprob: -5.1027936935424805
    7. 'Evaluator' → logprob: -6.3527936935424805
    8. 'Processor' → logprob: -6.6027936935424805
    9. ' Application' → logprob: -6.9777936935424805
    10. 'Program' → logprob: -6.9777936935424805

Token 559: 'Runner' (ID: 26032)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011051236651837826
    2. ':
' → logprob: -4.511051177978516
    3. ':def' → logprob: -13.636051177978516
    4. ' :' → logprob: -14.136051177978516
    5. '   ' → logprob: -14.636051177978516
    6. ':

' → logprob: -14.886051177978516
    7. '(object' → logprob: -15.886051177978516
    8. '():' → logprob: -16.011051177978516
    9. 'Solution' → logprob: -16.261051177978516
    10. ':
' → logprob: -16.636051177978516

Token 560: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026315970346331596
    2. ':
' → logprob: -3.651315927505493
    3. ' :' → logprob: -12.526315689086914
    4. '():
' → logprob: -13.151315689086914
    5. ':def' → logprob: -13.276315689086914
    6. '(object' → logprob: -13.651315689086914
    7. ':

' → logprob: -13.776315689086914
    8. '():' → logprob: -13.776315689086914
    9. '<|end|>' → logprob: -13.901315689086914
    10. ' :
' → logprob: -14.026315689086914

Token 561: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.7252845029579476e-05
    2. ' def' → logprob: -10.875027656555176
    3. 'def' → logprob: -12.375027656555176
    4. '
' → logprob: -13.625027656555176
    5. '<|end|>' → logprob: -14.125027656555176
    6. 'class' → logprob: -14.250027656555176
    7. '    
' → logprob: -14.250027656555176
    8. ':' → logprob: -15.375027656555176
    9. '	def' → logprob: -15.750027656555176
    10. '```' → logprob: -16.25002670288086

Token 562: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.06497015058994293
    2. ' def' → logprob: -2.8149702548980713
    3. '   ' → logprob: -5.814970016479492
    4. 'class' → logprob: -11.314970016479492
    5. '	def' → logprob: -12.939970016479492
    6. '```' → logprob: -15.064970016479492
    7. 'de' → logprob: -15.314970016479492
    8. 'import' → logprob: -15.439970016479492
    9. '
' → logprob: -17.064970016479492
    10. ' ' → logprob: -17.439970016479492

Token 563: ' __' (ID: 2516)
  Prédit: ' run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' run' → logprob: -0.3219803273677826
    2. ' __' → logprob: -1.321980357170105
    3. '__' → logprob: -5.0719804763793945
    4. 'run' → logprob: -6.9469804763793945
    5. ' def' → logprob: -7.1969804763793945
    6. '_run' → logprob: -7.5719804763793945
    7. '_' → logprob: -9.071980476379395
    8. ' _' → logprob: -10.196980476379395
    9. 'def' → logprob: -11.196980476379395
    10. ' ' → logprob: -11.821980476379395

Token 564: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. ' init' → logprob: -19.375
    3. 'def' → logprob: -19.5
    4. '
' → logprob: -20.5
    5. 'int' → logprob: -20.875
    6. '   ' → logprob: -21.0
    7. 'ini' → logprob: -21.5
    8. 'innit' → logprob: -21.625
    9. '	init' → logprob: -22.625
    10. 'in' → logprob: -22.75

Token 565: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.00046439285506494343
    2. '(self' → logprob: -7.87546443939209
    3. '__' → logprob: -9.62546443939209
    4. '__(
' → logprob: -11.37546443939209
    5. '_(' → logprob: -12.25046443939209
    6. '(' → logprob: -14.00046443939209
    7. '<>(' → logprob: -15.12546443939209
    8. ' (' → logprob: -15.87546443939209
    9. ')(' → logprob: -16.000463485717773
    10. '()' → logprob: -16.000463485717773

Token 566: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00012106612848583609
    2. '):
' → logprob: -9.875121116638184
    3. ')' → logprob: -10.000121116638184
    4. ' self' → logprob: -11.500121116638184
    5. '   ' → logprob: -11.750121116638184
    6. '       ' → logprob: -12.500121116638184
    7. '
' → logprob: -13.500121116638184
    8. '):

' → logprob: -15.125121116638184
    9. ' ' → logprob: -15.375121116638184
    10. ')
' → logprob: -15.500121116638184

Token 567: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.28904205560684204
    2. '):' → logprob: -1.4140419960021973
    3. 'self' → logprob: -5.039041996002197
    4. '       ' → logprob: -7.414041996002197
    5. '   ' → logprob: -7.539041996002197
    6. '(self' → logprob: -9.039042472839355
    7. '):
' → logprob: -10.539042472839355
    8. ')' → logprob: -10.914042472839355
    9. '
' → logprob: -10.914042472839355
    10. ',' → logprob: -10.914042472839355

Token 568: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.062088239938020706
    2. '       ' → logprob: -2.8120882511138916
    3. '   ' → logprob: -9.312088012695312
    4. '
' → logprob: -11.187088012695312
    5. ' self' → logprob: -11.937088012695312
    6. 'def' → logprob: -12.312088012695312
    7. '):
' → logprob: -12.687088012695312
    8. '(self' → logprob: -13.812088012695312
    9. ')' → logprob: -14.937088012695312
    10. ' ' → logprob: -15.437088012695312

Token 569: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0030062273144721985
    2. '       ' → logprob: -5.878006458282471
    3. ' self' → logprob: -8.753005981445312
    4. 'pass' → logprob: -10.503005981445312
    5. '   ' → logprob: -11.253005981445312
    6. 'def' → logprob: -13.628005981445312
    7. '	self' → logprob: -14.253005981445312
    8. '
' → logprob: -14.378005981445312
    9. 's' → logprob: -15.878005981445312
    10. '0' → logprob: -16.378005981445312

Token 570: '.reader' (ID: 75858)
  Prédit: '.input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.input' → logprob: -0.16444671154022217
    2. '.reader' → logprob: -1.9144467115402222
    3. '.datasets' → logprob: -6.789446830749512
    4. 'input' → logprob: -6.789446830749512
    5. ' .' → logprob: -7.039446830749512
    6. ' input' → logprob: -7.414446830749512
    7. 'reader' → logprob: -8.414446830749512
    8. ' reader' → logprob: -9.789446830749512
    9. '.inputs' → logprob: -9.914446830749512
    10. '.runner' → logprob: -10.414446830749512

Token 571: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014133334159851
    2. ' =' → logprob: -1.7014133930206299
    3. '＝' → logprob: -17.201414108276367
    4. ' ' → logprob: -17.701414108276367
    5. ' =
' → logprob: -17.951414108276367
    6. '=
' → logprob: -18.076414108276367
    7. '=input' → logprob: -18.951414108276367
    8. ':' → logprob: -19.451414108276367
    9. '=

' → logprob: -19.701414108276367
    10. '<|end|>' → logprob: -19.701414108276367

Token 572: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -0.0002613358374219388
    2. ' Input' → logprob: -8.250261306762695
    3. '	Input' → logprob: -18.500261306762695
    4. '<Input' → logprob: -19.875261306762695
    5. '_input' → logprob: -20.000261306762695
    6. 'input' → logprob: -20.000261306762695
    7. '_Input' → logprob: -21.000261306762695
    8. '\Input' → logprob: -21.250261306762695
    9. ' input' → logprob: -21.375261306762695
    10. 'INPUT' → logprob: -23.250261306762695

Token 573: 'Reader' (ID: 7171)
  Prédit: 'Reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Reader' → logprob: 0.0
    2. '_reader' → logprob: -18.125
    3. 'reader' → logprob: -18.125
    4. '.Reader' → logprob: -18.125
    5. 'Runner' → logprob: -20.0
    6. ' Reader' → logprob: -20.125
    7. 'Readers' → logprob: -20.625
    8. '-reader' → logprob: -20.75
    9. 'Writer' → logprob: -21.0
    10. 'Reading' → logprob: -22.0

Token 574: '()

' (ID: 5874)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.039225924760103226
    2. '   ' → logprob: -3.2892258167266846
    3. '<|end|>' → logprob: -7.789226055145264
    4. '

' → logprob: -8.039225578308105
    5. '    
' → logprob: -8.289225578308105
    6. 'def' → logprob: -9.164225578308105
    7. '<|end|>' → logprob: -9.789225578308105
    8. ' def' → logprob: -11.039225578308105
    9. '
' → logprob: -12.039225578308105
    10. '	def' → logprob: -12.414225578308105

Token 575: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2528543472290039
    2. '   ' → logprob: -1.502854347229004
    3. ' def' → logprob: -7.002854347229004
    4. '	def' → logprob: -11.627854347229004
    5. '
' → logprob: -12.627854347229004
    6. '<|end|>' → logprob: -13.002854347229004
    7. '    
' → logprob: -15.002854347229004
    8. '<|end|>' → logprob: -15.252854347229004
    9. ' ' → logprob: -15.377854347229004
    10. '```' → logprob: -15.752854347229004

Token 576: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -7.226628895296017e-06
    2. ' def' → logprob: -12.000007629394531
    3. '   ' → logprob: -13.875007629394531
    4. '	def' → logprob: -17.75000762939453
    5. '
' → logprob: -21.50000762939453
    6. 'de' → logprob: -22.37500762939453
    7. '```' → logprob: -22.87500762939453
    8. 'from' → logprob: -23.37500762939453
    9. 'class' → logprob: -24.25000762939453
    10. '    
' → logprob: -24.25000762939453

Token 577: ' run' (ID: 2461)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' → logprob: -0.049991294741630554
    2. ' run' → logprob: -3.0499913692474365
    3. 'def' → logprob: -6.674991130828857
    4. ' def' → logprob: -8.924991607666016
    5. 'main' → logprob: -12.674991607666016
    6. 'solve' → logprob: -12.924991607666016
    7. ' main' → logprob: -13.799991607666016
    8. 'execute' → logprob: -14.674991607666016
    9. '_run' → logprob: -15.799991607666016
    10. ' solve' → logprob: -15.924991607666016

Token 578: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00646844832226634
    2. '(' → logprob: -5.131468296051025
    3. '()' → logprob: -7.631468296051025
    4. '(
' → logprob: -10.256468772888184
    5. 'self' → logprob: -11.756468772888184
    6. '(s' → logprob: -12.131468772888184
    7. ' (' → logprob: -12.631468772888184
    8. '(sel' → logprob: -13.631468772888184
    9. '_' → logprob: -14.756468772888184
    10. '():' → logprob: -15.381468772888184

Token 579: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20278799533843994
    2. '):' → logprob: -1.70278799533844
    3. ')' → logprob: -7.20278787612915
    4. 'self' → logprob: -8.202788352966309
    5. '(self' → logprob: -8.702788352966309
    6. '):
' → logprob: -9.202788352966309
    7. '):

' → logprob: -9.827788352966309
    8. '       ' → logprob: -11.952788352966309
    9. '():
' → logprob: -11.952788352966309
    10. '   ' → logprob: -12.577788352966309

Token 580: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007457832107320428
    2. 'datasets' → logprob: -7.25074577331543
    3. ' datasets' → logprob: -10.50074577331543
    4. ' for' → logprob: -12.37574577331543
    5. '   ' → logprob: -13.37574577331543
    6. '```' → logprob: -14.00074577331543
    7. 'for' → logprob: -14.25074577331543
    8. 'd' → logprob: -14.37574577331543
    9. 'data' → logprob: -16.25074577331543
    10. '.datasets' → logprob: -16.62574577331543

Token 581: ' datasets' (ID: 57711)
  Prédit: 'datasets'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'datasets' (adapté à ' datasets') → logprob: -7.314625690924004e-05
    2. ' datasets' → logprob: -9.750073432922363
    3. '       ' → logprob: -11.625073432922363
    4. 'for' → logprob: -12.125073432922363
    5. '.datasets' → logprob: -16.000072479248047
    6. 'data' → logprob: -16.250072479248047
    7. 'dat' → logprob: -16.875072479248047
    8. 'dataset' → logprob: -17.250072479248047
    9. ' for' → logprob: -17.375072479248047
    10. 'datas' → logprob: -17.750072479248047

Token 582: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0009120595059357584
    2. '=' → logprob: -7.000912189483643
    3. 's' → logprob: -15.375911712646484
    4. ':' → logprob: -15.500911712646484
    5. ' ' → logprob: -15.875911712646484
    6. '   ' → logprob: -17.375911712646484
    7. ' =
' → logprob: -18.375911712646484
    8. '    ' → logprob: -19.125911712646484
    9. ' :' → logprob: -19.250911712646484
    10. '=[]' → logprob: -19.625911712646484

Token 583: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0019287518225610256
    2. ' self' → logprob: -6.251928806304932
    3. '       ' → logprob: -16.626928329467773
    4. '(self' → logprob: -19.126928329467773
    5. '[self' → logprob: -19.626928329467773
    6. '=self' → logprob: -20.001928329467773
    7. '	self' → logprob: -20.251928329467773
    8. 's' → logprob: -21.126928329467773
    9. 'Self' → logprob: -21.626928329467773
    10. '           ' → logprob: -21.626928329467773

Token 584: '.reader' (ID: 75858)
  Prédit: '.reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.reader' → logprob: -1.1756367712223437e-05
    2. 'reader' → logprob: -11.750011444091797
    3. '.' → logprob: -13.000011444091797
    4. ' .' → logprob: -14.125011444091797
    5. '	reader' → logprob: -14.875011444091797
    6. '.writer' → logprob: -15.750011444091797
    7. '.runner' → logprob: -15.875011444091797
    8. '   ' → logprob: -16.500011444091797
    9. '-reader' → logprob: -16.750011444091797
    10. 's' → logprob: -18.125011444091797

Token 585: '.read' (ID: 7211)
  Prédit: '.read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.read' → logprob: -3.128163257315464e-07
    2. '.' → logprob: -15.75
    3. 'read' → logprob: -16.5
    4. ' .' → logprob: -18.375
    5. '.readline' → logprob: -20.125
    6. '.readlines' → logprob: -21.0
    7. '.Read' → logprob: -22.625
    8. ' read' → logprob: -22.75
    9. '.run' → logprob: -23.5
    10. '_read' → logprob: -24.0

Token 586: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -5.512236498361744e-07
    2. 'datasets' → logprob: -14.625000953674316
    3. 'd' → logprob: -16.75
    4. 's' → logprob: -17.375
    5. 'atasets' → logprob: -18.0
    6. '_' → logprob: -19.0
    7. '
' → logprob: -20.375
    8. ' datasets' → logprob: -20.5
    9. '_data' → logprob: -20.625
    10. '_dataset' → logprob: -20.625

Token 587: 'atasets' (ID: 105003)
  Prédit: 'atasets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atasets' → logprob: -1.9981420336989686e-05
    2. 'ataset' → logprob: -10.875020027160645
    3. 'datasets' → logprob: -14.625020027160645
    4. 'ata' → logprob: -15.000020027160645
    5. ' datasets' → logprob: -16.375019073486328
    6. 'atas' → logprob: -17.375019073486328
    7. 'at' → logprob: -18.750019073486328
    8. '.datasets' → logprob: -19.750019073486328
    9. '
' → logprob: -21.000019073486328
    10. 'ats' → logprob: -21.375019073486328

Token 588: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013578521320596337
    2. '<|end|>' → logprob: -7.3763580322265625
    3. ' for' → logprob: -7.8763580322265625
    4. 'for' → logprob: -8.126358032226562
    5. '
' → logprob: -10.626358032226562
    6. '<|end|>' → logprob: -11.126358032226562
    7. '        
' → logprob: -12.376358032226562
    8. ',' → logprob: -12.501358032226562
    9. '   ' → logprob: -13.376358032226562
    10. '```' → logprob: -13.501358032226562

Token 589: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017678854055702686
    2. '
' → logprob: -6.876768112182617
    3. 'for' → logprob: -7.376768112182617
    4. ' for' → logprob: -9.876768112182617
    5. '        
' → logprob: -10.876768112182617
    6. '<|end|>' → logprob: -11.126768112182617
    7. '```' → logprob: -11.501768112182617
    8. '   ' → logprob: -11.876768112182617
    9. '	for' → logprob: -13.501768112182617
    10. '	' → logprob: -13.501768112182617

Token 590: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00012844942102674395
    2. '       ' → logprob: -9.000128746032715
    3. ' for' → logprob: -12.500128746032715
    4. '   ' → logprob: -14.000128746032715
    5. '	for' → logprob: -14.750128746032715
    6. '```' → logprob: -18.3751277923584
    7. '
' → logprob: -20.1251277923584
    8. '           ' → logprob: -21.5001277923584
    9. '``' → logprob: -22.0001277923584
    10. '        
' → logprob: -22.1251277923584

Token 591: ' dataset' (ID: 20830)
  Prédit: ' dataset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dataset' → logprob: -0.0019361276645213366
    2. 'dataset' → logprob: -6.251935958862305
    3. ' ds' → logprob: -12.251935958862305
    4. ' data' → logprob: -13.501935958862305
    5. 'ataset' → logprob: -14.501935958862305
    6. 'd' → logprob: -14.751935958862305
    7. ' d' → logprob: -15.876935958862305
    8. 'ds' → logprob: -16.001935958862305
    9. ' datasets' → logprob: -16.126935958862305
    10. ' ' → logprob: -17.626935958862305

Token 592: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -4.3822154111694545e-05
    2. 'in' → logprob: -11.250043869018555
    3. '   ' → logprob: -11.625043869018555
    4. '       ' → logprob: -11.875043869018555
    5. ':' → logprob: -12.125043869018555
    6. '<|end|>' → logprob: -13.375043869018555
    7. ' ' → logprob: -13.625043869018555
    8. '.' → logprob: -13.750043869018555
    9. '	in' → logprob: -13.875043869018555
    10. ':
' → logprob: -14.000043869018555

Token 593: ' datasets' (ID: 57711)
  Prédit: ' dataset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dataset' → logprob: -0.5760195255279541
    2. 'dataset' → logprob: -0.8260195255279541
    3. 'datasets' → logprob: -9.951019287109375
    4. ' datasets' → logprob: -10.826019287109375
    5. 'ataset' → logprob: -11.826019287109375
    6. '(dataset' → logprob: -12.701019287109375
    7. '.dataset' → logprob: -13.326019287109375
    8. '_dataset' → logprob: -14.826019287109375
    9. '
' → logprob: -16.451019287109375
    10. 'Dataset' → logprob: -17.701019287109375

Token 594: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.43548282980918884
    2. ':
' → logprob: -1.0604828596115112
    3. '           ' → logprob: -5.060482978820801
    4. '():
' → logprob: -8.4354829788208
    5. '):
' → logprob: -9.4354829788208
    6. ',' → logprob: -10.0604829788208
    7. ':
' → logprob: -11.4354829788208
    8. '<|end|>' → logprob: -11.4354829788208
    9. ':

' → logprob: -11.5604829788208
    10. '       ' → logprob: -11.5604829788208

Token 595: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.41129949549213e-05
    2. ' for' → logprob: -9.625083923339844
    3. 'for' → logprob: -11.500083923339844
    4. 'print' → logprob: -13.000083923339844
    5. 'result' → logprob: -13.750083923339844
    6. '
' → logprob: -14.125083923339844
    7. 'results' → logprob: -14.375083923339844
    8. '            
' → logprob: -14.500083923339844
    9. 'output' → logprob: -15.000083923339844
    10. ' print' → logprob: -15.125083923339844

Token 596: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.04653992876410484
    2. ' results' → logprob: -3.6715400218963623
    3. 'classes' → logprob: -4.671539783477783
    4. 'for' → logprob: -5.546539783477783
    5. 'result' → logprob: -5.921539783477783
    6. 'class' → logprob: -6.296539783477783
    7. '           ' → logprob: -6.546539783477783
    8. ' classifications' → logprob: -8.171540260314941
    9. 'classified' → logprob: -8.671540260314941
    10. ' for' → logprob: -8.671540260314941

Token 597: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0019289902411401272
    2. '=' → logprob: -6.251928806304932
    3. ' =
' → logprob: -15.75192928314209
    4. '    ' → logprob: -16.376928329467773
    5. ' ' → logprob: -16.626928329467773
    6. ':' → logprob: -17.001928329467773
    7. '   ' → logprob: -17.501928329467773
    8. ' =[' → logprob: -17.501928329467773
    9. '＝' → logprob: -17.876928329467773
    10. '<|end|>' → logprob: -18.501928329467773

Token 598: ' dataset' (ID: 20830)
  Prédit: ' dataset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dataset' → logprob: -0.16022473573684692
    2. 'dataset' → logprob: -1.9102246761322021
    3. '           ' → logprob: -15.535224914550781
    4. 'ataset' → logprob: -15.535224914550781
    5. '(dataset' → logprob: -15.910224914550781
    6. '.dataset' → logprob: -16.53522491455078
    7. '_dataset' → logprob: -19.66022491455078
    8. '   ' → logprob: -20.28522491455078
    9. 'Dataset' → logprob: -21.16022491455078
    10. '
' → logprob: -21.28522491455078

Token 599: '.class' (ID: 4351)
  Prédit: '.class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.class' → logprob: -9.849109119386412e-06
    2. 'class' → logprob: -12.000009536743164
    3. '.' → logprob: -13.250009536743164
    4. ' .' → logprob: -13.625009536743164
    5. '   ' → logprob: -15.000009536743164
    6. '.Class' → logprob: -16.125009536743164
    7. '           ' → logprob: -16.375009536743164
    8. '       ' → logprob: -17.625009536743164
    9. '<class' → logprob: -17.875009536743164
    10. '_class' → logprob: -17.875009536743164

Token 600: 'ify' (ID: 1985)
  Prédit: 'ify'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ify' → logprob: -1.9361264946837764e-07
    2. 'fy' → logprob: -16.375
    3. 'class' → logprob: -16.875
    4. '```' → logprob: -18.5
    5. 'ize' → logprob: -20.375
    6. 'if' → logprob: -20.875
    7. '_class' → logprob: -21.0
    8. 'ified' → logprob: -21.25
    9. 'IFY' → logprob: -21.375
    10. '   ' → logprob: -21.5

Token 601: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: 0.0
    2. 'all' → logprob: -17.75
    3. 'All' → logprob: -20.25
    4. '_each' → logprob: -20.5
    5. '_' → logprob: -20.875
    6. 's' → logprob: -21.375
    7. '_ALL' → logprob: -21.5
    8. '   ' → logprob: -21.625
    9. '_a' → logprob: -21.875
    10. '_All' → logprob: -22.75

Token 602: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.07893738150596619
    2. '()' → logprob: -2.578937292098999
    3. '()
' → logprob: -10.203937530517578
    4. '       ' → logprob: -12.953937530517578
    5. '()

' → logprob: -12.953937530517578
    6. 'for' → logprob: -13.328937530517578
    7. '():
' → logprob: -13.703937530517578
    8. 'print' → logprob: -13.953937530517578
    9. '           ' → logprob: -14.078937530517578
    10. '
' → logprob: -15.078937530517578

Token 603: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.392824874026701e-05
    2. 'for' → logprob: -10.50003433227539
    3. 'print' → logprob: -13.12503433227539
    4. '       ' → logprob: -13.12503433227539
    5. '            
' → logprob: -14.50003433227539
    6. ' for' → logprob: -14.62503433227539
    7. '```' → logprob: -14.75003433227539
    8. '		' → logprob: -14.87503433227539
    9. '
' → logprob: -15.37503433227539
    10. '   ' → logprob: -15.75003433227539

Token 604: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.024194860830903053
    2. 'print' → logprob: -3.7741949558258057
    3. '           ' → logprob: -7.274194717407227
    4. ' for' → logprob: -8.274194717407227
    5. ' print' → logprob: -14.274194717407227
    6. '               ' → logprob: -17.899194717407227
    7. '	for' → logprob: -18.524194717407227
    8. '       ' → logprob: -18.649194717407227
    9. '   ' → logprob: -19.024194717407227
    10. '
' → logprob: -19.524194717407227

Token 605: ' r' (ID: 428)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.02536640129983425
    2. 'res' → logprob: -4.275366306304932
    3. 'r' → logprob: -5.150366306304932
    4. ' result' → logprob: -5.275366306304932
    5. ' res' → logprob: -9.02536678314209
    6. ' r' → logprob: -9.90036678314209
    7. 'level' → logprob: -11.15036678314209
    8. 'class' → logprob: -11.15036678314209
    9. 'cls' → logprob: -11.52536678314209
    10. 'score' → logprob: -11.90036678314209

Token 606: ' in' (ID: 306)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.12847290933132172
    2. ' in' → logprob: -2.1284728050231934
    3. ' es' → logprob: -6.503472805023193
    4. 'esu' → logprob: -10.878473281860352
    5. 'e' → logprob: -11.128473281860352
    6. ' ' → logprob: -12.253473281860352
    7. 'ef' → logprob: -13.378473281860352
    8. 'in' → logprob: -13.503473281860352
    9. ' e' → logprob: -14.128473281860352
    10. 'eturn' → logprob: -14.628473281860352

Token 607: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.0040823169983923435
    2. ' results' → logprob: -5.504082202911377
    3. '
' → logprob: -12.504082679748535
    4. '(results' → logprob: -16.37908172607422
    5. '	results' → logprob: -16.75408172607422
    6. '.results' → logprob: -18.00408172607422
    7. '
' → logprob: -18.62908172607422
    8. 'result' → logprob: -19.37908172607422
    9. 'r' → logprob: -19.62908172607422
    10. '_results' → logprob: -19.75408172607422

Token 608: ':
' (ID: 734)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16392472386360168
    2. '               ' → logprob: -2.2889246940612793
    3. '           ' → logprob: -3.9139246940612793
    4. ':' → logprob: -3.9139246940612793
    5. ' print' → logprob: -5.038924694061279
    6. ':
' → logprob: -6.288924694061279
    7. ',' → logprob: -7.663924694061279
    8. '.' → logprob: -8.663925170898438
    9. '.print' → logprob: -8.663925170898438
    10. '   ' → logprob: -8.913925170898438

Token 609: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.018444662913680077
    2. 'print' → logprob: -4.018444538116455
    3. ' print' → logprob: -8.143445014953613
    4. '   ' → logprob: -13.643445014953613
    5. '```' → logprob: -14.018445014953613
    6. '                   ' → logprob: -14.518445014953613
    7. '           ' → logprob: -14.518445014953613
    8. '	           ' → logprob: -15.143445014953613
    9. '	print' → logprob: -15.518445014953613
    10. '              ' → logprob: -15.768445014953613

Token 610: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.306760805164231e-05
    2. ' print' → logprob: -11.25001335144043
    3. '               ' → logprob: -17.25001335144043
    4. '   ' → logprob: -20.87501335144043
    5. '           ' → logprob: -21.50001335144043
    6. '	print' → logprob: -22.25001335144043
    7. '                   ' → logprob: -23.00001335144043
    8. '```' → logprob: -23.50001335144043
    9. '       ' → logprob: -24.62501335144043
    10. 'println' → logprob: -26.00001335144043

Token 611: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -1.688212614681106e-05
    2. '(' → logprob: -11.000017166137695
    3. 'r' → logprob: -15.625017166137695
    4. '(f' → logprob: -18.500017166137695
    5. '(
' → logprob: -18.875017166137695
    6. '()' → logprob: -20.875017166137695
    7. ' r' → logprob: -20.875017166137695
    8. '((' → logprob: -21.375017166137695
    9. '	r' → logprob: -22.875017166137695
    10. ' (' → logprob: -23.375017166137695

Token 612: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ')
' → logprob: -15.375000953674316
    3. '())' → logprob: -15.875000953674316
    4. '()' → logprob: -16.75
    5. ' )' → logprob: -17.25
    6. ')`' → logprob: -18.0
    7. '`)' → logprob: -18.625
    8. '))' → logprob: -18.625
    9. '")' → logprob: -18.875
    10. '')' → logprob: -19.625

Token 613: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -8.061054359131958e-06
    2. 'Solution' → logprob: -11.875007629394531
    3. ' if' → logprob: -14.375007629394531
    4. '```' → logprob: -15.875007629394531
    5. 'runner' → logprob: -16.00000762939453
    6. 'solution' → logprob: -16.50000762939453
    7. 'def' → logprob: -16.62500762939453
    8. 'Runner' → logprob: -18.25000762939453
    9. '#' → logprob: -18.87500762939453
    10. 'If' → logprob: -20.12500762939453

Token 614: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.3133911192417145
    2. '__' → logprob: -1.313391089439392
    3. '_' → logprob: -9.438390731811523
    4. '_name' → logprob: -10.063390731811523
    5. 'name' → logprob: -12.438390731811523
    6. '___' → logprob: -13.563390731811523
    7. ' ' → logprob: -14.313390731811523
    8. ' ' → logprob: -14.938390731811523
    9. '/__' → logprob: -15.438390731811523
    10. 'Name' → logprob: -15.563390731811523

Token 615: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.034621287137269974
    2. ' __' → logprob: -3.409621238708496
    3. ' ==' → logprob: -8.034621238708496
    4. '_' → logprob: -8.034621238708496
    5. 'name' → logprob: -9.034621238708496
    6. 'if' → logprob: -9.534621238708496
    7. '_name' → logprob: -10.034621238708496
    8. '__
' → logprob: -10.909621238708496
    9. ' if' → logprob: -11.159621238708496
    10. '.__' → logprob: -11.534621238708496

Token 616: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -5.676981345459353e-06
    2. '__.__' → logprob: -12.375005722045898
    3. '__.' → logprob: -13.750005722045898
    4. '__
' → logprob: -15.375005722045898
    5. '____' → logprob: -16.8750057220459
    6. '___' → logprob: -17.5000057220459
    7. 'name' → logprob: -17.7500057220459
    8. '__["' → logprob: -18.5000057220459
    9. '__('' → logprob: -18.7500057220459
    10. '==' → logprob: -18.8750057220459

Token 617: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00042292833677493036
    2. ' ==' → logprob: -8.625422477722168
    3. '==' → logprob: -8.750422477722168
    4. '__.__' → logprob: -9.500422477722168
    5. '__.' → logprob: -12.750422477722168
    6. '=="' → logprob: -12.875422477722168
    7. '__
' → logprob: -13.500422477722168
    8. ' __' → logprob: -13.750422477722168
    9. '.__' → logprob: -14.625422477722168
    10. '_' → logprob: -14.625422477722168

Token 618: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.003238793695345521
    2. ''' → logprob: -5.753238677978516
    3. ' "__' → logprob: -9.753238677978516
    4. '__' → logprob: -13.003238677978516
    5. ' '__' → logprob: -15.128238677978516
    6. '"user' → logprob: -16.378238677978516
    7. '"name' → logprob: -16.628238677978516
    8. '"class' → logprob: -17.753238677978516
    9. '"_' → logprob: -18.003238677978516
    10. ' "' → logprob: -18.003238677978516

Token 619: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.003191970521584153
    2. '__' → logprob: -5.753191947937012
    3. 'name' → logprob: -11.378191947937012
    4. '"' → logprob: -13.628191947937012
    5. '_main' → logprob: -14.253191947937012
    6. ' main' → logprob: -14.878191947937012
    7. 'python' → logprob: -15.878191947937012
    8. '__":
' → logprob: -16.003192901611328
    9. 'MAIN' → logprob: -16.753192901611328
    10. 'Main' → logprob: -17.128192901611328

Token 620: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.006760602816939354
    2. '__' → logprob: -5.006760597229004
    3. '__':
' → logprob: -10.006760597229004
    4. '__.' → logprob: -16.38176155090332
    5. '__
' → logprob: -17.00676155090332
    6. '__:' → logprob: -17.50676155090332
    7. '__["' → logprob: -19.00676155090332
    8. '__.__' → logprob: -19.13176155090332
    9. '_' → logprob: -19.25676155090332
    10. '__
' → logprob: -19.88176155090332

Token 621: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5651390552520752
    2. ' Solution' → logprob: -1.1901390552520752
    3. 'Solution' → logprob: -2.065139055252075
    4. ' solution' → logprob: -7.440138816833496
    5. '_solution' → logprob: -9.940138816833496
    6. '   ' → logprob: -10.815138816833496
    7. '	S' → logprob: -10.940138816833496
    8. '    ' → logprob: -11.315138816833496
    9. ' runner' → logprob: -11.440138816833496
    10. '__' → logprob: -12.190138816833496

Token 622: ' Solution' (ID: 20858)
  Prédit: 'Solution'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solution' (adapté à ' Solution') → logprob: -0.07921990752220154
    2. 'runner' → logprob: -2.5792198181152344
    3. ' runner' → logprob: -8.579219818115234
    4. 'solution' → logprob: -9.829219818115234
    5. ' Solution' → logprob: -10.079219818115234
    6. 'solver' → logprob: -10.829219818115234
    7. 'import' → logprob: -11.454219818115234
    8. 'sr' → logprob: -11.954219818115234
    9. 'run' → logprob: -13.079219818115234
    10. 'sol' → logprob: -13.079219818115234

Token 623: 'Runner' (ID: 26032)
  Prédit: 'Runner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Runner' → logprob: -1.5048530030981055e-06
    2. '_runner' → logprob: -14.000001907348633
    3. 'Run' → logprob: -14.750001907348633
    4. ' Runner' → logprob: -16.375001907348633
    5. 'runner' → logprob: -16.375001907348633
    6. 'Runnable' → logprob: -18.125001907348633
    7. '   ' → logprob: -18.875001907348633
    8. 'R' → logprob: -18.875001907348633
    9. 'RUN' → logprob: -19.500001907348633
    10. ' runner' → logprob: -20.125001907348633

Token 624: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.25202617049217224
    2. '()' → logprob: -1.5020262002944946
    3. '().__' → logprob: -9.627026557922363
    4. '.run' → logprob: -11.252026557922363
    5. ' ()' → logprob: -12.252026557922363
    6. '.' → logprob: -13.002026557922363
    7. '();' → logprob: -13.627026557922363
    8. '(' → logprob: -13.877026557922363
    9. '()(' → logprob: -13.877026557922363
    10. '().'' → logprob: -13.877026557922363

Token 625: 'run' (ID: 12935)
  Prédit: 'run'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' → logprob: 0.0
    2. ' run' → logprob: -22.0
    3. '.run' → logprob: -25.875
    4. '	run' → logprob: -26.25
    5. 'r' → logprob: -27.25
    6. '(run' → logprob: -27.625
    7. 'ru' → logprob: -28.625
    8. '_run' → logprob: -28.75
    9. 'running' → logprob: -29.875
    10. 'runner' → logprob: -29.875

Token 626: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 624
Tokens correctement prédits (1ère position, stricte): 338
Tokens correctement prédits (1ère position, avec adaptation): 376
Tokens correctement prédits (top 10): 578
Précision stricte (1ère position): 54.17%
Précision adaptée (1ère position): 60.26%
Précision (top 10): 92.63%
================================================================================
