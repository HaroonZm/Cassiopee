================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:13:02
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from itertools import permutations

N = int(input())
a = list(map(int, input().split()))
w = list(map(int, input().split()))

min_frustration = float('inf')
for perm in permutations(range(N)):
    total = 0
    for i in range(N):
        current = perm[i]
        left = perm[i-1]
        right = perm[(i+1) % N]
        if a[current] == 0 and a[right] == 1:
            total += w[current]
        elif a[current] == 1 and a[left] == 0:
            total += w[current]
        if total >= min_frustration:
            break
    if total < min_frustration:
        min_frustration = total

print(min_frustration)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' itertools' (ID: 103178)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' permutations' (ID: 174595)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.2794735431671143
    2. 'product' → logprob: -1.5294735431671143
    3. 'per' → logprob: -1.6544735431671143
    4. 'com' → logprob: -1.9044735431671143
    5. ' permutations' → logprob: -2.7794735431671143
    6. ' product' → logprob: -3.5294735431671143
    7. 'cycle' → logprob: -3.6544735431671143
    8. 'chain' → logprob: -4.654473304748535
    9. 'group' → logprob: -4.654473304748535
    10. ' cycle' → logprob: -4.904473304748535

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00015824666479602456
    2. '\(' → logprob: -9.500158309936523
    3. '.' → logprob: -10.875158309936523
    4. '(
' → logprob: -11.000158309936523
    5. '```' → logprob: -11.625158309936523
    6. '`' → logprob: -11.750158309936523
    7. ''' → logprob: -12.000158309936523
    8. '\' → logprob: -12.750158309936523
    9. 'a' → logprob: -12.750158309936523
    10. ' (' → logprob: -12.875158309936523

Token 5: 'N' (ID: 45)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -6.837811088189483e-05
    2. '\(' → logprob: -10.125068664550781
    3. '.' → logprob: -11.125068664550781
    4. '(
' → logprob: -12.500068664550781
    5. '```' → logprob: -13.000068664550781
    6. 'a' → logprob: -13.250068664550781
    7. '`' → logprob: -13.875068664550781
    8. ''' → logprob: -14.250068664550781
    9. '\' → logprob: -14.750068664550781
    10. ')' → logprob: -14.750068664550781

Token 6: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6485971808433533
    2. '.' → logprob: -1.398597240447998
    3. ' =' → logprob: -1.898597240447998
    4. ' ' → logprob: -3.523597240447998
    5. ')' → logprob: -3.898597240447998
    6. ',' → logprob: -3.898597240447998
    7. '_' → logprob: -5.148597240447998
    8. 'u' → logprob: -6.398597240447998
    9. '  ' → logprob: -7.523597240447998
    10. '[' → logprob: -7.648597240447998

Token 7: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07029818743467331
    2. '3' → logprob: -2.820298194885254
    3. '4' → logprob: -5.320298194885254
    4. '5' → logprob: -5.695298194885254
    5. '6' → logprob: -11.195298194885254
    6. 'int' → logprob: -11.695298194885254
    7. ' int' → logprob: -11.695298194885254
    8. '7' → logprob: -12.570298194885254
    9. '_' → logprob: -13.820298194885254
    10. ''' → logprob: -14.195298194885254

Token 8: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00032068457221612334
    2. '('' → logprob: -8.500320434570312
    3. '()' → logprob: -9.750320434570312
    4. '(input' → logprob: -11.125320434570312
    5. ''' → logprob: -11.375320434570312
    6. ' (' → logprob: -11.875320434570312
    7. '(N' → logprob: -12.500320434570312
    8. '```' → logprob: -12.500320434570312
    9. '(`' → logprob: -12.750320434570312
    10. '("' → logprob: -13.000320434570312

Token 9: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016170909628272057
    2. '()' → logprob: -5.016170978546143
    3. '(' → logprob: -5.391170978546143
    4. '())' → logprob: -5.516170978546143
    5. '))' → logprob: -7.141170978546143
    6. '')' → logprob: -11.391170501708984
    7. '`)' → logprob: -11.891170501708984
    8. '('' → logprob: -12.391170501708984
    9. '(
' → logprob: -12.391170501708984
    10. '")' → logprob: -12.516170501708984

Token 10: 'a' (ID: 64)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.6297557353973389
    2. 'arr' → logprob: -1.3797557353973389
    3. 'nums' → logprob: -2.629755735397339
    4. 'data' → logprob: -3.254755735397339
    5. 'a' → logprob: -3.504755735397339
    6. 's' → logprob: -4.379755973815918
    7. ' numbers' → logprob: -4.379755973815918
    8. 'for' → logprob: -4.504755973815918
    9. 'items' → logprob: -5.254755973815918
    10. 'elements' → logprob: -5.254755973815918

Token 11: ' =' (ID: 314)
  Prédit: 'rray'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rray' → logprob: -0.8855714797973633
    2. '.' → logprob: -1.5105714797973633
    3. '[' → logprob: -1.5105714797973633
    4. ' =' → logprob: -2.8855714797973633
    5. '=' → logprob: -3.0105714797973633
    6. 'r' → logprob: -4.510571479797363
    7. 'rr' → logprob: -5.135571479797363
    8. 'p' → logprob: -5.510571479797363
    9. 's' → logprob: -5.760571479797363
    10. ' ' → logprob: -5.885571479797363

Token 12: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.26762229204177856
    2. 'list' → logprob: -1.5176222324371338
    3. ' [' → logprob: -4.517622470855713
    4. '[' → logprob: -6.892622470855713
    5. ' []' → logprob: -7.017622470855713
    6. '[]' → logprob: -7.517622470855713
    7. ' input' → logprob: -7.642622470855713
    8. '[list' → logprob: -7.642622470855713
    9. ' permutations' → logprob: -8.017621994018555
    10. '[input' → logprob: -8.142621994018555

Token 13: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009531766176223755
    2. '(per' → logprob: -4.7595319747924805
    3. '(a' → logprob: -7.5095319747924805
    4. '(range' → logprob: -8.00953197479248
    5. '()' → logprob: -12.88453197479248
    6. '((' → logprob: -12.88453197479248
    7. '(
' → logprob: -13.13453197479248
    8. '(data' → logprob: -13.13453197479248
    9. '(it' → logprob: -13.13453197479248
    10. '(p' → logprob: -13.25953197479248

Token 14: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.15262427926063538
    2. '(' → logprob: -2.1526243686676025
    3. '(str' → logprob: -3.9026243686676025
    4. '(input' → logprob: -5.777624130249023
    5. '(lambda' → logprob: -6.902624130249023
    6. 'int' → logprob: -8.402624130249023
    7. ')' → logprob: -9.027624130249023
    8. '```' → logprob: -9.027624130249023
    9. '=int' → logprob: -9.152624130249023
    10. '[int' → logprob: -9.527624130249023

Token 15: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.05046370252966881
    2. '(' → logprob: -3.9254636764526367
    3. ',input' → logprob: -4.175463676452637
    4. ',' → logprob: -4.675463676452637
    5. '=input' → logprob: -6.175463676452637
    6. 'input' → logprob: -6.550463676452637
    7. '(int' → logprob: -8.050463676452637
    8. ')' → logprob: -8.175463676452637
    9. '```' → logprob: -8.550463676452637
    10. '))' → logprob: -9.300463676452637

Token 16: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.006733249872922897
    2. ' input' → logprob: -5.006733417510986
    3. '(input' → logprob: -11.006732940673828
    4. ',input' → logprob: -14.381732940673828
    5. ')' → logprob: -14.506732940673828
    6. '=input' → logprob: -16.006732940673828
    7. '	input' → logprob: -16.381732940673828
    8. '))' → logprob: -17.756732940673828
    9. '<input' → logprob: -18.506732940673828
    10. ' ' → logprob: -18.631732940673828

Token 17: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.03017009235918522
    2. '()))' → logprob: -4.15516996383667
    3. '())' → logprob: -4.53016996383667
    4. '()' → logprob: -6.03016996383667
    5. '()));' → logprob: -7.40516996383667
    6. '())))' → logprob: -9.530170440673828
    7. '()).' → logprob: -10.155170440673828
    8. '(' → logprob: -10.405170440673828
    9. '());' → logprob: -10.405170440673828
    10. '()),' → logprob: -11.030170440673828

Token 18: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0002342912630410865
    2. 'strip' → logprob: -8.375234603881836
    3. 'rstrip' → logprob: -13.125234603881836
    4. ' split' → logprob: -13.875234603881836
    5. '(split' → logprob: -14.375234603881836
    6. 'spl' → logprob: -15.875234603881836
    7. ')' → logprob: -16.625234603881836
    8. 'read' → logprob: -16.875234603881836
    9. '.split' → logprob: -17.750234603881836
    10. 's' → logprob: -18.000234603881836

Token 19: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.2092553675174713
    2. ')' → logprob: -1.709255337715149
    3. '()))' → logprob: -5.084255218505859
    4. '())' → logprob: -7.209255218505859
    5. '(' → logprob: -7.584255218505859
    6. ')))' → logprob: -8.20925521850586
    7. '()' → logprob: -9.45925521850586
    8. ''))' → logprob: -11.95925521850586
    9. '),' → logprob: -12.83425521850586
    10. '"))' → logprob: -13.33425521850586

Token 20: 'w' (ID: 86)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20005592703819275
    2. 'per' → logprob: -1.8250559568405151
    3. 'p' → logprob: -5.325056076049805
    4. 'perm' → logprob: -5.825056076049805
    5. 'result' → logprob: -5.950056076049805
    6. 'count' → logprob: -5.950056076049805
    7. 'all' → logprob: -6.325056076049805
    8. 'possible' → logprob: -6.950056076049805
    9. 'best' → logprob: -7.450056076049805
    10. 'ans' → logprob: -7.700056076049805

Token 21: ' =' (ID: 314)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.1368953436613083
    2. '=' → logprob: -2.3868954181671143
    3. 'h' → logprob: -4.386895179748535
    4. 'a' → logprob: -5.136895179748535
    5. 'hile' → logprob: -5.511895179748535
    6. ')' → logprob: -5.761895179748535
    7. ' =' → logprob: -5.886895179748535
    8. 'eight' → logprob: -6.386895179748535
    9. '.' → logprob: -6.511895179748535
    10. 'ays' → logprob: -7.261895179748535

Token 22: ' list' (ID: 1562)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.608382225036621
    2. ' []' → logprob: -1.858382225036621
    3. '[]' → logprob: -1.858382225036621
    4. ' [' → logprob: -2.108382225036621
    5. '[' → logprob: -2.358382225036621
    6. 'list' → logprob: -3.233382225036621
    7. 'len' → logprob: -3.233382225036621
    8. 'sum' → logprob: -3.358382225036621
    9. ' ' → logprob: -3.608382225036621
    10. '[a' → logprob: -3.983382225036621

Token 23: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05282934755086899
    2. '(range' → logprob: -3.8028292655944824
    3. '(per' → logprob: -3.8028292655944824
    4. '((' → logprob: -5.552829265594482
    5. '(map' → logprob: -7.177829265594482
    6. '(a' → logprob: -7.677829265594482
    7. '(.' → logprob: -7.802829265594482
    8. '([' → logprob: -9.05282974243164
    9. '(w' → logprob: -9.17782974243164
    10. '(list' → logprob: -9.30282974243164

Token 24: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.004405551590025425
    2. '(' → logprob: -5.504405498504639
    3. 'int' → logprob: -9.754405975341797
    4. '=int' → logprob: -9.754405975341797
    5. '```' → logprob: -10.004405975341797
    6. ')' → logprob: -10.129405975341797
    7. ')(' → logprob: -10.129405975341797
    8. '<int' → logprob: -10.504405975341797
    9. '(lambda' → logprob: -10.754405975341797
    10. '[int' → logprob: -11.129405975341797

Token 25: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.012023674324154854
    2. '(' → logprob: -5.012023448944092
    3. 'int' → logprob: -6.387023448944092
    4. '(input' → logprob: -6.512023448944092
    5. ',int' → logprob: -6.637023448944092
    6. ',' → logprob: -7.887023448944092
    7. '```' → logprob: -8.88702392578125
    8. '=int' → logprob: -9.13702392578125
    9. '<int' → logprob: -9.51202392578125
    10. ')' → logprob: -10.38702392578125

Token 26: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.028364332392811775
    2. 'int' → logprob: -3.778364419937134
    3. ' input' → logprob: -5.278364181518555
    4. ' int' → logprob: -12.278364181518555
    5. '(input' → logprob: -15.528364181518555
    6. '(int' → logprob: -16.528364181518555
    7. 'map' → logprob: -17.528364181518555
    8. '<input' → logprob: -17.653364181518555
    9. ' ' → logprob: -17.903364181518555
    10. 'list' → logprob: -18.278364181518555

Token 27: '().' (ID: 1454)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.003710527205839753
    2. '(' → logprob: -5.628710746765137
    3. '=int' → logprob: -10.378710746765137
    4. '()' → logprob: -10.628710746765137
    5. '()))' → logprob: -11.128710746765137
    6. '())' → logprob: -12.003710746765137
    7. '```' → logprob: -12.003710746765137
    8. '))' → logprob: -12.128710746765137
    9. ')' → logprob: -12.253710746765137
    10. '(len' → logprob: -12.628710746765137

Token 28: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.512236498361744e-07
    2. ' split' → logprob: -15.375000953674316
    3. '))' → logprob: -16.625
    4. 'input' → logprob: -16.875
    5. 'read' → logprob: -17.25
    6. ')' → logprob: -17.625
    7. '(split' → logprob: -17.75
    8. 'spl' → logprob: -17.875
    9. 'strip' → logprob: -18.875
    10. 'plit' → logprob: -19.125

Token 29: '()))

' (ID: 125972)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.40618884563446045
    2. ')' → logprob: -1.5311888456344604
    3. '()))' → logprob: -2.40618896484375
    4. '())' → logprob: -4.03118896484375
    5. '()' → logprob: -4.65618896484375
    6. '(' → logprob: -9.78118896484375
    7. ')))' → logprob: -10.78118896484375
    8. '()))
' → logprob: -11.28118896484375
    9. ''))' → logprob: -12.15618896484375
    10. '))
' → logprob: -12.53118896484375

Token 30: 'min' (ID: 1493)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.9746364951133728
    2. 'answer' → logprob: -1.8496365547180176
    3. 'ans' → logprob: -1.9746365547180176
    4. 'best' → logprob: -2.4746365547180176
    5. 'for' → logprob: -2.8496365547180176
    6. 'per' → logprob: -3.0996365547180176
    7. 'result' → logprob: -3.2246365547180176
    8. 'res' → logprob: -3.5996365547180176
    9. 'p' → logprob: -3.9746365547180176
    10. 'm' → logprob: -4.599636554718018

Token 31: '_fr' (ID: 20643)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.12770521640777588
    2. '(' → logprob: -2.3777050971984863
    3. '_sum' → logprob: -4.252705097198486
    4. '_diff' → logprob: -4.627705097198486
    5. '_val' → logprob: -6.502705097198486
    6. '_score' → logprob: -8.377705574035645
    7. '_value' → logprob: -8.877705574035645
    8. '_result' → logprob: -9.002705574035645
    9. '_dist' → logprob: -9.002705574035645
    10. '_d' → logprob: -9.127705574035645

Token 32: 'ustr' (ID: 3073)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.07951005548238754
    2. 'e' → logprob: -2.829509973526001
    3. 'equ' → logprob: -5.07951021194458
    4. 'ac' → logprob: -5.32951021194458
    5. 'om' → logprob: -5.70451021194458
    6. 'action' → logprob: -6.95451021194458
    7. '```' → logprob: -7.20451021194458
    8. 'a' → logprob: -8.329509735107422
    9. 'each' → logprob: -8.579509735107422
    10. 'ame' → logprob: -9.204509735107422

Token 33: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.0005947356694377959
    2. '=' → logprob: -8.250595092773438
    3. 'a' → logprob: -9.250595092773438
    4. 'atio' → logprob: -9.625595092773438
    5. 'ate' → logprob: -9.875595092773438
    6. 'ations' → logprob: -10.750595092773438
    7. 'at' → logprob: -11.125595092773438
    8. 'ated' → logprob: -11.500595092773438
    9. 'ati' → logprob: -11.625595092773438
    10. ' =' → logprob: -11.750595092773438

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1275053322315216
    2. '=' → logprob: -2.127505302429199
    3. '_' → logprob: -8.0025053024292
    4. '(' → logprob: -8.7525053024292
    5. 's' → logprob: -9.8775053024292
    6. ',' → logprob: -12.0025053024292
    7. ' ' → logprob: -12.0025053024292
    8. ')' → logprob: -12.3775053024292
    9. '_=' → logprob: -12.3775053024292
    10. '_idx' → logprob: -13.5025053024292

Token 35: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.44200411438941956
    2. ' float' → logprob: -1.0670040845870972
    3. '10' → logprob: -4.442004203796387
    4. ' ' → logprob: -6.692004203796387
    5. 'sum' → logprob: -10.067004203796387
    6. '100' → logprob: -10.317004203796387
    7. ' sum' → logprob: -10.317004203796387
    8. '1' → logprob: -10.817004203796387
    9. 'int' → logprob: -11.192004203796387
    10. ' None' → logprob: -11.692004203796387

Token 36: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.037104375660419464
    2. ''' → logprob: -3.412104368209839
    3. '(' → logprob: -7.037104606628418
    4. ''s' → logprob: -7.037104606628418
    5. '('-' → logprob: -8.287104606628418
    6. ''in' → logprob: -8.537104606628418
    7. ''-' → logprob: -8.787104606628418
    8. '```' → logprob: -8.787104606628418
    9. ''n' → logprob: -9.037104606628418
    10. ''a' → logprob: -9.162104606628418

Token 37: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -1.3856492842023727e-06
    2. 'i' → logprob: -14.375000953674316
    3. 'info' → logprob: -14.500000953674316
    4. 'in' → logprob: -15.750000953674316
    5. '-inf' → logprob: -15.875000953674316
    6. 'pos' → logprob: -18.625001907348633
    7. '_inf' → logprob: -18.750001907348633
    8. 'x' → logprob: -19.000001907348633
    9. 'positive' → logprob: -19.250001907348633
    10. 'INF' → logprob: -19.250001907348633

Token 38: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012558852904476225
    2. '')' → logprob: -9.500125885009766
    3. '))' → logprob: -10.500125885009766
    4. ' )' → logprob: -10.875125885009766
    5. ')
' → logprob: -13.250125885009766
    6. '()' → logprob: -13.875125885009766
    7. ')))' → logprob: -14.750125885009766
    8. '())' → logprob: -14.875125885009766
    9. '`)' → logprob: -15.625125885009766
    10. ')

' → logprob: -16.000125885009766

Token 39: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.020081641152501106
    2. ' for' → logprob: -4.520081520080566
    3. '\n' → logprob: -4.770081520080566
    4. '\' → logprob: -8.645081520080566
    5. '
' → logprob: -8.895081520080566
    6. ' 
' → logprob: -9.395081520080566
    7. '' → logprob: -10.395081520080566
    8. '```' → logprob: -10.770081520080566
    9. '`' → logprob: -10.895081520080566
    10. '\
' → logprob: -11.645081520080566

Token 40: ' perm' (ID: 5961)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.42049330472946167
    2. 'p' → logprob: -1.5454933643341064
    3. 'perm' → logprob: -2.2954933643341064
    4. ' perm' → logprob: -3.9204933643341064
    5. 'per' → logprob: -5.045493125915527
    6. ' ' → logprob: -7.295493125915527
    7. '_' → logprob: -7.795493125915527
    8. '   ' → logprob: -8.170493125915527
    9. ' per' → logprob: -8.545493125915527
    10. ' _' → logprob: -8.545493125915527

Token 41: ' in' (ID: 306)
  Prédit: 'utations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utations' → logprob: -0.4441400468349457
    2. ' in' → logprob: -1.569140076637268
    3. 'utation' → logprob: -1.944140076637268
    4. 'in' → logprob: -5.4441399574279785
    5. 'u' → logprob: -7.1941399574279785
    6. 'ut' → logprob: -7.1941399574279785
    7. '(' → logprob: -7.6941399574279785
    8. 'uation' → logprob: -8.069140434265137
    9. 'ination' → logprob: -8.069140434265137
    10. 'uration' → logprob: -10.069140434265137

Token 42: ' permutations' (ID: 174595)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.0013382164761424065
    2. ' permutations' → logprob: -6.876338005065918
    3. '(per' → logprob: -8.126338005065918
    4. 'perm' → logprob: -12.001338005065918
    5. '	per' → logprob: -13.251338005065918
    6. '.per' → logprob: -14.001338005065918
    7. '_per' → logprob: -15.126338005065918
    8. 'list' → logprob: -15.501338005065918
    9. '-per' → logprob: -15.751338005065918
    10. '(' → logprob: -16.876338958740234

Token 43: '(range' (ID: 50017)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0001266613689949736
    2. '(range' → logprob: -9.125126838684082
    3. '(' → logprob: -11.125126838684082
    4. '((' → logprob: -13.875126838684082
    5. '(N' → logprob: -14.750126838684082
    6. 'a' → logprob: -15.125126838684082
    7. '(len' → logprob: -15.125126838684082
    8. ' (' → logprob: -15.375126838684082
    9. '(n' → logprob: -15.625126838684082
    10. '(A' → logprob: -15.875126838684082

Token 44: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0011972516076639295
    2. '(' → logprob: -7.376197338104248
    3. '(len' → logprob: -7.501197338104248
    4. '(n' → logprob: -11.12619686126709
    5. 'N' → logprob: -13.12619686126709
    6. 'len' → logprob: -14.37619686126709
    7. '```' → logprob: -15.12619686126709
    8. '(
' → logprob: -15.87619686126709
    9. ')' → logprob: -16.376197814941406
    10. ')(' → logprob: -16.376197814941406

Token 45: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6811533570289612
    2. ')):' → logprob: -0.8061533570289612
    3. ')' → logprob: -3.1811532974243164
    4. '))' → logprob: -5.556153297424316
    5. '),' → logprob: -6.431153297424316
    6. ')):
' → logprob: -8.556153297424316
    7. ')):
' → logprob: -9.806153297424316
    8. '>):' → logprob: -10.431153297424316
    9. '):
' → logprob: -10.556153297424316
    10. '```' → logprob: -10.931153297424316

Token 46: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46141937375068665
    2. ':' → logprob: -1.0864193439483643
    3. ':
' → logprob: -4.336419582366943
    4. '    
' → logprob: -4.836419582366943
    5. '```' → logprob: -5.961419582366943
    6. '):
' → logprob: -6.336419582366943
    7. '):' → logprob: -6.336419582366943
    8. ' :' → logprob: -6.836419582366943
    9. ' ' → logprob: -6.961419582366943
    10. ',' → logprob: -7.336419582366943

Token 47: ' total' (ID: 3609)
  Prédit: 'fr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fr' → logprob: -1.0811697244644165
    2. '   ' → logprob: -1.3311697244644165
    3. ' frustration' → logprob: -1.9561697244644165
    4. ' total' → logprob: -2.706169605255127
    5. 'total' (adapté à ' total') → logprob: -2.706169605255127
    6. 'sum' → logprob: -3.456169605255127
    7. 'current' → logprob: -3.831169605255127
    8. ' current' → logprob: -3.956169605255127
    9. ' sum' → logprob: -4.768669605255127
    10. 's' → logprob: -4.831169605255127

Token 48: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3669273257255554
    2. '_fr' → logprob: -1.4919273853302002
    3. '_weight' → logprob: -3.2419273853302
    4. '_w' → logprob: -4.491927146911621
    5. '_score' → logprob: -4.741927146911621
    6. '_sum' → logprob: -4.991927146911621
    7. '_cost' → logprob: -5.116927146911621
    8. '_frag' → logprob: -5.741927146911621
    9. '_value' → logprob: -6.866927146911621
    10. '_s' → logprob: -6.991927146911621

Token 49: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00661838473752141
    2. ' ' → logprob: -5.256618499755859
    3. 'sum' → logprob: -6.756618499755859
    4. ' sum' → logprob: -8.50661849975586
    5. '   ' → logprob: -11.38161849975586
    6. '  ' → logprob: -13.13161849975586
    7. '1' → logprob: -13.88161849975586
    8. ' ' → logprob: -14.00661849975586
    9. 'w' → logprob: -14.63161849975586
    10. 's' → logprob: -14.75661849975586

Token 50: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008471485925838351
    2. 'sum' → logprob: -7.125847339630127
    3. ' ' → logprob: -10.250846862792969
    4. 'w' → logprob: -12.375846862792969
    5. ' sum' → logprob: -13.750846862792969
    6. '   ' → logprob: -14.500846862792969
    7. 'a' → logprob: -15.000846862792969
    8. '1' → logprob: -15.250846862792969
    9. '```' → logprob: -15.813346862792969
    10. 's' → logprob: -16.06334686279297

Token 51: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0427144765853882
    2. '
' → logprob: -1.1677144765853882
    3. '<|end|>' → logprob: -1.2927144765853882
    4. ' for' → logprob: -4.292714595794678
    5. '	for' → logprob: -4.292714595794678
    6. '    
' → logprob: -4.667714595794678
    7. '<|end|>' → logprob: -5.292714595794678
    8. 'for' → logprob: -5.417714595794678
    9. ' ' → logprob: -5.792714595794678
    10. '\t' → logprob: -6.042714595794678

Token 52: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010215920396149158
    2. '
' → logprob: -4.885215759277344
    3. '    
' → logprob: -7.385215759277344
    4. '<|end|>' → logprob: -7.385215759277344
    5. ' ' → logprob: -8.135215759277344
    6. ' for' → logprob: -8.385215759277344
    7. '  ' → logprob: -8.510215759277344
    8. '\t' → logprob: -8.760215759277344
    9. '	for' → logprob: -9.010215759277344
    10. '    ' → logprob: -9.510215759277344

Token 53: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.23471137881278992
    2. ' for' → logprob: -1.6097114086151123
    3. '   ' → logprob: -4.734711170196533
    4. '	for' → logprob: -7.734711170196533
    5. ' ' → logprob: -11.234711647033691
    6. '       ' → logprob: -12.234711647033691
    7. '    
' → logprob: -12.484711647033691
    8. '
' → logprob: -12.859711647033691
    9. '```' → logprob: -13.234711647033691
    10. '  ' → logprob: -13.359711647033691

Token 54: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.03239361569285393
    2. ' range' → logprob: -3.78239369392395
    3. 'i' → logprob: -5.157393455505371
    4. 'range' → logprob: -6.407393455505371
    5. ' j' → logprob: -6.657393455505371
    6. 'j' → logprob: -8.532393455505371
    7. ' ' → logprob: -8.907393455505371
    8. ' idx' → logprob: -10.657393455505371
    9. '	i' → logprob: -11.782393455505371
    10. '(range' → logprob: -11.907393455505371

Token 55: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.015234212391078472
    2. 'in' → logprob: -4.390233993530273
    3. ',' → logprob: -6.015233993530273
    4. ' ' → logprob: -8.515233993530273
    5. '	in' → logprob: -10.890233993530273
    6. ' ,' → logprob: -11.015233993530273
    7. '   ' → logprob: -11.390233993530273
    8. '  ' → logprob: -11.765233993530273
    9. '+' → logprob: -12.640233993530273
    10. ')' → logprob: -13.015233993530273

Token 56: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0036378458607941866
    2. ' range' → logprob: -5.628637790679932
    3. 'perm' → logprob: -10.25363826751709
    4. 'per' → logprob: -13.75363826751709
    5. '	range' → logprob: -14.12863826751709
    6. '(range' → logprob: -15.00363826751709
    7. '   ' → logprob: -16.378637313842773
    8. '```' → logprob: -16.753637313842773
    9. ' ' → logprob: -16.878637313842773
    10. 'rang' → logprob: -16.878637313842773

Token 57: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0054079461842775345
    2. '(' → logprob: -5.255407810211182
    3. '(len' → logprob: -9.13040828704834
    4. 'N' → logprob: -9.88040828704834
    5. '(n' → logprob: -12.63040828704834
    6. '   ' → logprob: -12.75540828704834
    7. ' N' → logprob: -13.25540828704834
    8. ' (' → logprob: -13.38040828704834
    9. '(
' → logprob: -13.88040828704834
    10. '()' → logprob: -14.38040828704834

Token 58: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3164895474910736
    2. '):
' → logprob: -1.316489577293396
    3. '-' → logprob: -6.3164896965026855
    4. ')' → logprob: -7.4414896965026855
    5. '   ' → logprob: -7.8164896965026855
    6. ' -' → logprob: -8.691489219665527
    7. '):
' → logprob: -8.816489219665527
    8. '       ' → logprob: -10.316489219665527
    9. '+' → logprob: -10.941489219665527
    10. ' ):' → logprob: -11.191489219665527

Token 59: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0058368416503071785
    2. 'total' → logprob: -6.2558369636535645
    3. ' total' → logprob: -6.6308369636535645
    4. '   ' → logprob: -6.8808369636535645
    5. '```' → logprob: -7.1308369636535645
    6. '
' → logprob: -9.380836486816406
    7. '<|end|>' → logprob: -9.380836486816406
    8. ' for' → logprob: -9.630836486816406
    9. ' ' → logprob: -9.630836486816406
    10. '	total' → logprob: -9.630836486816406

Token 60: ' current' (ID: 2208)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.39156460762023926
    2. 'total' → logprob: -1.1415646076202393
    3. ' for' → logprob: -6.39156436920166
    4. '       ' → logprob: -6.64156436920166
    5. 'for' → logprob: -7.51656436920166
    6. ' ' → logprob: -8.01656436920166
    7. '           ' → logprob: -8.01656436920166
    8. '   ' → logprob: -8.01656436920166
    9. '	total' → logprob: -10.14156436920166
    10. '```' → logprob: -10.26656436920166

Token 61: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -1.4146642684936523
    2. 'total' → logprob: -1.4146642684936523
    3. '_total' → logprob: -1.5396642684936523
    4. '_value' → logprob: -2.0396642684936523
    5. '+=' → logprob: -2.9146642684936523
    6. ' =' → logprob: -3.7896642684936523
    7. '_score' → logprob: -4.289664268493652
    8. '=' → logprob: -4.539664268493652
    9. '_sum' → logprob: -4.789664268493652
    10. '_weight' → logprob: -4.914664268493652

Token 62: ' perm' (ID: 5961)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.39671480655670166
    2. ' a' → logprob: -1.2717148065567017
    3. ' abs' → logprob: -3.521714687347412
    4. 'abs' → logprob: -4.271714687347412
    5. 'w' → logprob: -6.521714687347412
    6. ' w' → logprob: -6.771714687347412
    7. ' ' → logprob: -8.14671516418457
    8. '   ' → logprob: -8.52171516418457
    9. ' (' → logprob: -8.89671516418457
    10. '(a' → logprob: -9.52171516418457

Token 63: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.3795937522663735e-05
    2. '[' → logprob: -11.50002384185791
    3. '[j' → logprob: -13.25002384185791
    4. '```' → logprob: -13.62502384185791
    5. '[N' → logprob: -13.75002384185791
    6. '(i' → logprob: -13.87502384185791
    7. '[w' → logprob: -13.87502384185791
    8. 'i' → logprob: -13.87502384185791
    9. '[a' → logprob: -14.00002384185791
    10. '[I' → logprob: -14.00002384185791

Token 64: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.015495999716222286
    2. '])' → logprob: -4.640495777130127
    3. ']*' → logprob: -5.390495777130127
    4. ')]' → logprob: -8.015496253967285
    5. ']-' → logprob: -8.515496253967285
    6. ']
' → logprob: -8.640496253967285
    7. ')' → logprob: -8.765496253967285
    8. '])
' → logprob: -10.015496253967285
    9. ' ]' → logprob: -10.015496253967285
    10. '])*' → logprob: -10.265496253967285

Token 65: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.339166522026062
    2. '
' → logprob: -1.964166522026062
    3. '   ' → logprob: -2.7141666412353516
    4. 'total' → logprob: -4.089166641235352
    5. ' total' → logprob: -4.339166641235352
    6. '        
' → logprob: -4.464166641235352
    7. '    
' → logprob: -4.464166641235352
    8. ' for' → logprob: -4.839166641235352
    9. 'for' → logprob: -5.839166641235352
    10. ' *' → logprob: -5.839166641235352

Token 66: ' left' (ID: 3561)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.8242310881614685
    2. '       ' → logprob: -1.1992311477661133
    3. ' total' → logprob: -1.5742311477661133
    4. ' for' → logprob: -3.4492311477661133
    5. 'for' → logprob: -4.449231147766113
    6. '
' → logprob: -5.574231147766113
    7. '   ' → logprob: -6.074231147766113
    8. '        
' → logprob: -7.199231147766113
    9. '           ' → logprob: -7.699231147766113
    10. 'current' → logprob: -8.324231147766113

Token 67: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39337122440338135
    2. '=' → logprob: -1.2683712244033813
    3. ',' → logprob: -3.643371105194092
    4. '_neighbor' → logprob: -5.143371105194092
    5. '_idx' → logprob: -5.768371105194092
    6. '_index' → logprob: -6.393371105194092
    7. '_neighbors' → logprob: -6.768371105194092
    8. '_sum' → logprob: -7.643371105194092
    9. '_count' → logprob: -7.643371105194092
    10. '_diff' → logprob: -7.893371105194092

Token 68: ' perm' (ID: 5961)
  Prédit: ' perm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' perm' → logprob: -0.3455660939216614
    2. 'perm' → logprob: -2.2205660343170166
    3. ' current' → logprob: -3.0955660343170166
    4. ' w' → logprob: -3.5955660343170166
    5. 'w' → logprob: -3.8455660343170166
    6. '0' → logprob: -3.9705660343170166
    7. ' max' → logprob: -4.470566272735596
    8. ' i' → logprob: -4.470566272735596
    9. ' ' → logprob: -4.595566272735596
    10. 'current' → logprob: -4.595566272735596

Token 69: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00018446780450176448
    2. 'i' → logprob: -9.375184059143066
    3. '.index' → logprob: -10.125184059143066
    4. '[' → logprob: -10.875184059143066
    5. '[max' → logprob: -11.000184059143066
    6. 'index' → logprob: -11.250184059143066
    7. '[
' → logprob: -12.625184059143066
    8. '   ' → logprob: -13.375184059143066
    9. ' [' → logprob: -13.750184059143066
    10. '[:' → logprob: -14.250184059143066

Token 70: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.16065768897533417
    2. ' -' → logprob: -1.9106576442718506
    3. ']' → logprob: -7.91065788269043
    4. ']-' → logprob: -10.41065788269043
    5. '1' → logprob: -10.91065788269043
    6. '   ' → logprob: -12.91065788269043
    7. ' ' → logprob: -13.16065788269043
    8. ' ' → logprob: -13.59815788269043
    9. '2' → logprob: -13.78565788269043
    10. 'i' → logprob: -14.03565788269043

Token 71: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011224505578866228
    2. ' ' → logprob: -9.125112533569336
    3. '2' → logprob: -13.250112533569336
    4. '   ' → logprob: -15.500112533569336
    5. '])' → logprob: -15.625112533569336
    6. ']' → logprob: -15.687612533569336
    7. '3' → logprob: -15.812612533569336
    8. '-' → logprob: -15.937612533569336
    9. '+' → logprob: -16.500112533569336
    10. 'i' → logprob: -16.625112533569336

Token 72: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004200674593448639
    2. ' if' → logprob: -8.125419616699219
    3. ' ]' → logprob: -10.000419616699219
    4. 'if' → logprob: -10.125419616699219
    5. ']
' → logprob: -11.000419616699219
    6. ']

' → logprob: -12.375419616699219
    7. '1' → logprob: -12.750419616699219
    8. '']' → logprob: -13.250419616699219
    9. '+' → logprob: -13.375419616699219
    10. ']+' → logprob: -13.750419616699219

Token 73: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5312233567237854
    2. ' if' → logprob: -1.1562232971191406
    3. 'if' → logprob: -2.4062232971191406
    4. '
' → logprob: -6.281223297119141
    5. 'current' → logprob: -6.906223297119141
    6. '+' → logprob: -6.906223297119141
    7. '        
' → logprob: -7.531223297119141
    8. '   ' → logprob: -7.781223297119141
    9. ',' → logprob: -7.906223297119141
    10. ' current' → logprob: -8.03122329711914

Token 74: ' right' (ID: 1849)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2719131410121918
    2. 'if' → logprob: -1.7719131708145142
    3. '       ' → logprob: -3.2719130516052246
    4. '+' → logprob: -4.521913051605225
    5. ' +' → logprob: -5.771913051605225
    6. ' ' → logprob: -5.896913051605225
    7. '   ' → logprob: -6.521913051605225
    8. 'right' (adapté à ' right') → logprob: -6.771913051605225
    9. 'current' → logprob: -6.896913051605225
    10. 'w' → logprob: -6.896913051605225

Token 75: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3484647870063782
    2. '=' → logprob: -1.2234647274017334
    3. ' ' → logprob: -11.723464965820312
    4. ' if' → logprob: -12.348464965820312
    5. 'if' → logprob: -12.473464965820312
    6. ')' → logprob: -13.348464965820312
    7. '<|end|>' → logprob: -14.223464965820312
    8. ']' → logprob: -14.598464965820312
    9. ',' → logprob: -15.723464965820312
    10. '>' → logprob: -16.223464965820312

Token 76: ' perm' (ID: 5961)
  Prédit: ' perm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' perm' → logprob: -0.06203748658299446
    2. 'perm' → logprob: -2.812037467956543
    3. 'per' → logprob: -10.937037467956543
    4. 'None' → logprob: -11.062037467956543
    5. '(' → logprob: -11.687037467956543
    6. ' None' → logprob: -11.812037467956543
    7. ' perms' → logprob: -12.312037467956543
    8. ' permutation' → logprob: -13.437037467956543
    9. '<|end|>' → logprob: -13.562037467956543
    10. ' ' → logprob: -13.687037467956543

Token 77: '[(' (ID: 20542)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.38704782724380493
    2. '[(' → logprob: -1.1370477676391602
    3. '(i' → logprob: -8.88704776763916
    4. '[' → logprob: -10.88704776763916
    5. 'i' → logprob: -11.13704776763916
    6. '+' → logprob: -13.38704776763916
    7. '[min' → logprob: -13.63704776763916
    8. '```' → logprob: -14.26204776763916
    9. '((' → logprob: -14.76204776763916
    10. '{i' → logprob: -15.26204776763916

Token 78: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.008339626714587212
    2. '(i' → logprob: -4.8833394050598145
    3. ' i' → logprob: -7.3833394050598145
    4. ' (' → logprob: -9.133339881896973
    5. '   ' → logprob: -14.008339881896973
    6. ' ' → logprob: -14.008339881896973
    7. ')' → logprob: -14.633339881896973
    8. ')i' → logprob: -14.883339881896973
    9. '(' → logprob: -15.383339881896973
    10. '0' → logprob: -15.508339881896973

Token 79: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0006195080350153148
    2. ' +' → logprob: -7.500619411468506
    3. '1' → logprob: -9.625619888305664
    4. '+
' → logprob: -15.750619888305664
    5. '+i' → logprob: -16.375619888305664
    6. '0' → logprob: -16.500619888305664
    7. '2' → logprob: -17.250619888305664
    8. '```' → logprob: -17.375619888305664
    9. '＋' → logprob: -17.750619888305664
    10. '()+' → logprob: -17.875619888305664

Token 80: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.76628842484206e-05
    2. ' ' → logprob: -9.625067710876465
    3. '```' → logprob: -14.000067710876465
    4. ')' → logprob: -14.625067710876465
    5. '+' → logprob: -16.12506675720215
    6. '<|end|>' → logprob: -16.93756675720215
    7. '2' → logprob: -17.56256675720215
    8. '``' → logprob: -17.81256675720215
    9. '   ' → logprob: -17.87506675720215
    10. '`' → logprob: -17.87506675720215

Token 81: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25208809971809387
    2. ')%' → logprob: -1.5020880699157715
    3. ')]' → logprob: -9.50208854675293
    4. '%' → logprob: -9.50208854675293
    5. ' )' → logprob: -12.62708854675293
    6. ']%' → logprob: -13.12708854675293
    7. ')`' → logprob: -13.62708854675293
    8. ')])' → logprob: -14.50208854675293
    9. ')
' → logprob: -14.62708854675293
    10. '）' → logprob: -14.75208854675293

Token 82: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.46421104669570923
    2. ')' → logprob: -1.9642109870910645
    3. ')]' → logprob: -2.5892109870910645
    4. ')%' → logprob: -2.5892109870910645
    5. ']' → logprob: -3.0892109870910645
    6. ']%' → logprob: -3.7142109870910645
    7. ' %' → logprob: -4.5892109870910645
    8. '])' → logprob: -7.4642109870910645
    9. ')])' → logprob: -9.464211463928223
    10. '%)' → logprob: -10.089211463928223

Token 83: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -6.2729995988775045e-06
    2. ' N' → logprob: -12.000006675720215
    3. '(N' → logprob: -20.3750057220459
    4. '	N' → logprob: -21.2500057220459
    5. '   ' → logprob: -21.8750057220459
    6. '>N' → logprob: -22.8750057220459
    7. ' ' → logprob: -24.0000057220459
    8. '```' → logprob: -24.2500057220459
    9. 'Ｎ' → logprob: -24.6250057220459
    10. '  ' → logprob: -24.6250057220459

Token 84: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01320011354982853
    2. ')]' → logprob: -5.138200283050537
    3. '])' → logprob: -5.138200283050537
    4. ']
' → logprob: -7.388200283050537
    5. ')' → logprob: -7.513200283050537
    6. ' ]' → logprob: -9.263199806213379
    7. ')])' → logprob: -9.763199806213379
    8. ']

' → logprob: -11.138199806213379
    9. ']
' → logprob: -11.513199806213379
    10. '])]' → logprob: -12.138199806213379

Token 85: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.056508731096982956
    2. '   ' → logprob: -4.056508541107178
    3. '<|end|>' → logprob: -4.306508541107178
    4. '        
' → logprob: -4.681508541107178
    5. '
' → logprob: -5.806508541107178
    6. '```' → logprob: -6.056508541107178
    7. ')' → logprob: -6.181508541107178
    8. '           ' → logprob: -6.556508541107178
    9. ' ' → logprob: -6.806508541107178
    10. '    
' → logprob: -7.306508541107178

Token 86: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5690266489982605
    2. 'total' → logprob: -1.4440267086029053
    3. 'if' (adapté à ' if') → logprob: -1.8190267086029053
    4. ' if' → logprob: -4.569026470184326
    5. '```' → logprob: -4.819026470184326
    6. ' total' → logprob: -5.319026470184326
    7. '           ' → logprob: -5.444026470184326
    8. '   ' → logprob: -6.569026470184326
    9. ')' → logprob: -6.569026470184326
    10. '+' → logprob: -6.569026470184326

Token 87: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5581387281417847
    2. 'a' → logprob: -1.8081387281417847
    3. ' current' → logprob: -1.9331387281417847
    4. ' w' → logprob: -2.933138847351074
    5. 'w' → logprob: -3.933138847351074
    6. 'current' → logprob: -4.183138847351074
    7. ' i' → logprob: -4.433138847351074
    8. ' left' → logprob: -4.933138847351074
    9. ' abs' → logprob: -5.933138847351074
    10. ' perm' → logprob: -6.183138847351074

Token 88: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.0006232033483684063
    2. '[' → logprob: -8.250622749328613
    3. 'current' → logprob: -8.875622749328613
    4. '[left' → logprob: -9.000622749328613
    5. '[i' → logprob: -9.625622749328613
    6. '[cur' → logprob: -11.875622749328613
    7. '[c' → logprob: -12.125622749328613
    8. '[curr' → logprob: -12.125622749328613
    9. '[a' → logprob: -12.250622749328613
    10. ' [' → logprob: -13.625622749328613

Token 89: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.25303661823272705
    2. '!=' → logprob: -2.8780364990234375
    3. ']!=' → logprob: -3.2530364990234375
    4. ']==' → logprob: -3.3780364990234375
    5. '==' → logprob: -3.3780364990234375
    6. '>' → logprob: -3.6280364990234375
    7. '<' → logprob: -3.7530364990234375
    8. '[' → logprob: -5.6280364990234375
    9. ']<' → logprob: -6.1280364990234375
    10. ']>' → logprob: -6.1280364990234375

Token 90: ' ==' (ID: 951)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.8451433777809143
    2. '==' → logprob: -1.2201433181762695
    3. '<' → logprob: -2.3451433181762695
    4. ' !=' → logprob: -2.5951433181762695
    5. ' ==' → logprob: -3.0951433181762695
    6. '>' → logprob: -3.2201433181762695
    7. ' <' → logprob: -4.5951433181762695
    8. ' >' → logprob: -5.2201433181762695
    9. ' in' → logprob: -6.7201433181762695
    10. '[' → logprob: -6.7201433181762695

Token 91: ' ' (ID: 220)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.011440584436058998
    2. ' a' → logprob: -4.886440753936768
    3. 'left' → logprob: -6.386440753936768
    4. '1' → logprob: -6.886440753936768
    5. 'w' → logprob: -7.886440753936768
    6. '0' → logprob: -8.01144027709961
    7. ' ' → logprob: -8.63644027709961
    8. ' left' → logprob: -9.01144027709961
    9. 'current' → logprob: -9.88644027709961
    10. 'right' → logprob: -11.13644027709961

Token 92: '0' (ID: 15)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.019057609140872955
    2. 'w' → logprob: -4.769057750701904
    3. '1' → logprob: -5.019057750701904
    4. 'left' → logprob: -6.269057750701904
    5. '0' → logprob: -6.519057750701904
    6. 'current' → logprob: -8.644057273864746
    7. '2' → logprob: -9.894057273864746
    8. ' a' → logprob: -10.269057273864746
    9. 'right' → logprob: -10.394057273864746
    10. '```' → logprob: -10.644057273864746

Token 93: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06641320139169693
    2. ' and' → logprob: -3.066413164138794
    3. ' :' → logprob: -4.691413402557373
    4. ' or' → logprob: -5.066413402557373
    5. 'and' → logprob: -6.691413402557373
    6. ' ' → logprob: -7.691413402557373
    7. ':
' → logprob: -7.941413402557373
    8. 'or' → logprob: -10.566412925720215
    9. '   ' → logprob: -10.816412925720215
    10. '       ' → logprob: -10.816412925720215

Token 94: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5961777567863464
    2. ' a' → logprob: -1.8461778163909912
    3. 'w' → logprob: -1.9711778163909912
    4. ' w' → logprob: -2.721177816390991
    5. ' (' → logprob: -3.471177816390991
    6. '(w' → logprob: -3.471177816390991
    7. '(a' → logprob: -4.346177577972412
    8. '(i' → logprob: -5.721177577972412
    9. '(' → logprob: -5.971177577972412
    10. ' ' → logprob: -6.721177577972412

Token 95: '[right' (ID: 112866)
  Prédit: '[left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[left' → logprob: -0.05073036998510361
    2. '[' → logprob: -3.6757304668426514
    3. '[right' → logprob: -4.050730228424072
    4. '[current' → logprob: -5.300730228424072
    5. 'left' → logprob: -7.050730228424072
    6. ' left' → logprob: -7.925730228424072
    7. ' [' → logprob: -8.80073070526123
    8. 'current' → logprob: -9.42573070526123
    9. ' current' → logprob: -9.55073070526123
    10. '[parent' → logprob: -9.92573070526123

Token 96: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.31840744614601135
    2. ']==' → logprob: -1.318407416343689
    3. ']!=' → logprob: -6.1934075355529785
    4. 'current' → logprob: -6.8184075355529785
    5. ' ]' → logprob: -7.4434075355529785
    6. '[current' → logprob: -7.6934075355529785
    7. ' current' → logprob: -8.31840705871582
    8. '==' → logprob: -8.31840705871582
    9. '[' → logprob: -9.31840705871582
    10. ' ' → logprob: -9.56840705871582

Token 97: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.292635977268219
    2. ' ==' → logprob: -1.4176359176635742
    3. '!=' → logprob: -5.292635917663574
    4. ' ' → logprob: -5.917635917663574
    5. ' !=' → logprob: -6.167635917663574
    6. '[' → logprob: -7.917635917663574
    7. '>' → logprob: -8.792635917663574
    8. ']==' → logprob: -8.792635917663574
    9. '()==' → logprob: -8.917635917663574
    10. '<|end|>' → logprob: -8.917635917663574

Token 98: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8329318761825562
    2. '0' → logprob: -0.9579318761825562
    3. ' ' → logprob: -1.7079318761825562
    4. 'a' → logprob: -9.207931518554688
    5. '  ' → logprob: -9.957931518554688
    6. 'current' → logprob: -9.957931518554688
    7. '   ' → logprob: -10.770431518554688
    8. '2' → logprob: -11.020431518554688
    9. ' current' → logprob: -11.145431518554688
    10. ' a' → logprob: -11.457931518554688

Token 99: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.35407111048698425
    2. '1' → logprob: -1.2290711402893066
    3. ' ' → logprob: -5.229071140289307
    4. 'a' → logprob: -9.354070663452148
    5. '2' → logprob: -9.854070663452148
    6. 'current' → logprob: -10.479070663452148
    7. '  ' → logprob: -11.229070663452148
    8. '3' → logprob: -11.291570663452148
    9. '4' → logprob: -11.479070663452148
    10. '   ' → logprob: -12.104070663452148

Token 100: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05886983871459961
    2. ':
' → logprob: -3.1838698387145996
    3. '           ' → logprob: -4.5588698387146
    4. ' and' → logprob: -5.4338698387146
    5. '       ' → logprob: -7.5588698387146
    6. ' or' → logprob: -8.933870315551758
    7. 'and' → logprob: -9.058870315551758
    8. ':
' → logprob: -10.433870315551758
    9. ' :' → logprob: -10.558870315551758
    10. '   ' → logprob: -10.933870315551758

Token 101: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011018933728337288
    2. '               ' → logprob: -4.761018753051758
    3. 'total' → logprob: -7.136018753051758
    4. '       ' → logprob: -7.261018753051758
    5. ' total' → logprob: -8.011018753051758
    6. '                   ' → logprob: -9.136018753051758
    7. '```' → logprob: -9.136018753051758
    8. ' ' → logprob: -9.636018753051758
    9. '   ' → logprob: -10.511018753051758
    10. '		' → logprob: -10.511018753051758

Token 102: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.11770093441009521
    2. '           ' → logprob: -2.4927010536193848
    3. ' total' → logprob: -3.7427010536193848
    4. '               ' → logprob: -5.992701053619385
    5. '       ' → logprob: -6.867701053619385
    6. '   ' → logprob: -7.617701053619385
    7. ' ' → logprob: -8.367700576782227
    8. '```' → logprob: -8.617700576782227
    9. 'current' → logprob: -9.742700576782227
    10. 'continue' → logprob: -10.367700576782227

Token 103: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5766924023628235
    2. '+=' → logprob: -0.8266924023628235
    3. '+' → logprob: -7.451692581176758
    4. ' -=' → logprob: -9.451692581176758
    5. '<|end|>' → logprob: -10.701692581176758
    6. ']+=' → logprob: -10.951692581176758
    7. '-=' → logprob: -11.326692581176758
    8. '+='' → logprob: -11.951692581176758
    9. '=' → logprob: -12.326692581176758
    10. '```' → logprob: -12.326692581176758

Token 104: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.00038264848990365863
    2. ' w' → logprob: -8.125382423400879
    3. '   ' → logprob: -10.625382423400879
    4. '           ' → logprob: -11.375382423400879
    5. '1' → logprob: -11.500382423400879
    6. '0' → logprob: -11.750382423400879
    7. '2' → logprob: -12.125382423400879
    8. '       ' → logprob: -12.250382423400879
    9. '10' → logprob: -12.625382423400879
    10. '-w' → logprob: -13.250382423400879

Token 105: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.6636838912963867
    2. '[left' → logprob: -1.0386838912963867
    3. 'current' → logprob: -2.4136838912963867
    4. '[right' → logprob: -3.4136838912963867
    5. 'left' → logprob: -4.913683891296387
    6. 'right' → logprob: -6.788683891296387
    7. '[' → logprob: -9.538683891296387
    8. ' current' → logprob: -9.788683891296387
    9. '[i' → logprob: -10.538683891296387
    10. '[cur' → logprob: -10.788683891296387

Token 106: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01500501949340105
    2. '[' → logprob: -4.515005111694336
    3. ']
' → logprob: -6.390005111694336
    4. ' ]' → logprob: -7.390005111694336
    5. '[current' → logprob: -7.515005111694336
    6. '[i' → logprob: -8.515005111694336
    7. '<|end|>' → logprob: -8.515005111694336
    8. ')' → logprob: -9.015005111694336
    9. '+' → logprob: -9.015005111694336
    10. '-' → logprob: -9.515005111694336

Token 107: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08359517902135849
    2. '       ' → logprob: -2.5835952758789062
    3. ' ' → logprob: -6.333595275878906
    4. '<|end|>' → logprob: -6.708595275878906
    5. '    ' → logprob: -7.708595275878906
    6. '           ' → logprob: -8.083595275878906
    7. ' if' → logprob: -8.458595275878906
    8. '  ' → logprob: -9.083595275878906
    9. '    
' → logprob: -9.583595275878906
    10. '     ' → logprob: -9.833595275878906

Token 108: ' elif' (ID: 9497)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43828994035720825
    2. '       ' → logprob: -2.0632898807525635
    3. 'elif' (adapté à ' elif') → logprob: -2.5632898807525635
    4. ' ' → logprob: -3.3132898807525635
    5. ' elif' → logprob: -3.5632898807525635
    6. 'else' → logprob: -3.9382898807525635
    7. ')' → logprob: -4.063290119171143
    8. ' else' → logprob: -4.313290119171143
    9. '    ' → logprob: -4.563290119171143
    10. 'if' → logprob: -5.813290119171143

Token 109: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.20147493481636047
    2. 'a' → logprob: -1.701474905014038
    3. ' ' → logprob: -10.701475143432617
    4. ' ' → logprob: -11.076475143432617
    5. '(a' → logprob: -12.451475143432617
    6. '   ' → logprob: -12.951475143432617
    7. '	a' → logprob: -12.951475143432617
    8. '    ' → logprob: -12.951475143432617
    9. 'w' → logprob: -13.076475143432617
    10. ' current' → logprob: -13.201475143432617

Token 110: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.004666507244110107
    2. '[right' → logprob: -5.504666328430176
    3. '[left' → logprob: -7.629666328430176
    4. '[' → logprob: -9.879666328430176
    5. 'current' → logprob: -10.129666328430176
    6. '[user' → logprob: -13.254666328430176
    7. '[cur' → logprob: -13.379666328430176
    8. '```' → logprob: -13.379666328430176
    9. '[next' → logprob: -13.504666328430176
    10. ' current' → logprob: -13.504666328430176

Token 111: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004728684201836586
    2. ']==' → logprob: -5.3797287940979
    3. '==' → logprob: -9.754728317260742
    4. ' ]' → logprob: -10.254728317260742
    5. '[' → logprob: -12.254728317260742
    6. ' ==' → logprob: -12.504728317260742
    7. '```' → logprob: -14.129728317260742
    8. '`]' → logprob: -14.254728317260742
    9. ')' → logprob: -14.379728317260742
    10. '[]' → logprob: -14.629728317260742

Token 112: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5233346223831177
    2. ' ==' → logprob: -0.8983346223831177
    3. ' ' → logprob: -9.148334503173828
    4. '[' → logprob: -10.023334503173828
    5. '=' → logprob: -11.023334503173828
    6. '==
' → logprob: -12.023334503173828
    7. ']==' → logprob: -12.148334503173828
    8. ' ' → logprob: -12.273334503173828
    9. ')' → logprob: -12.398334503173828
    10. '!=' → logprob: -12.523334503173828

Token 113: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3491457402706146
    2. '0' → logprob: -1.474145770072937
    3. ' ' → logprob: -2.7241456508636475
    4. '2' → logprob: -9.224145889282227
    5. '   ' → logprob: -11.474145889282227
    6. '  ' → logprob: -12.661645889282227
    7. 'w' → logprob: -12.724145889282227
    8. '(' → logprob: -13.099145889282227
    9. ' w' → logprob: -13.411645889282227
    10. '3' → logprob: -13.536645889282227

Token 114: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3151713013648987
    2. '0' → logprob: -1.315171241760254
    3. ' ' → logprob: -6.315171241760254
    4. '2' → logprob: -9.565171241760254
    5. '[' → logprob: -12.690171241760254
    6. '   ' → logprob: -12.940171241760254
    7. '```' → logprob: -12.940171241760254
    8. '3' → logprob: -13.002671241760254
    9. '-' → logprob: -13.065171241760254
    10. 'right' → logprob: -13.190171241760254

Token 115: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.12696589529514313
    2. 'and' → logprob: -2.1269659996032715
    3. ' ' → logprob: -10.501965522766113
    4. ' or' → logprob: -13.126965522766113
    5. '   ' → logprob: -13.251965522766113
    6. ' ' → logprob: -13.251965522766113
    7. ')' → logprob: -14.001965522766113
    8. ':' → logprob: -14.626965522766113
    9. '	and' → logprob: -14.876965522766113
    10. '    ' → logprob: -14.876965522766113

Token 116: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.6331219673156738
    2. 'a' → logprob: -0.7581219673156738
    3. ' not' → logprob: -8.258121490478516
    4. '   ' → logprob: -9.508121490478516
    5. ' ' → logprob: -10.133121490478516
    6. '           ' → logprob: -10.633121490478516
    7. 'not' → logprob: -11.008121490478516
    8. '       ' → logprob: -11.383121490478516
    9. '(a' → logprob: -11.445621490478516
    10. 'w' → logprob: -11.570621490478516

Token 117: '[left' (ID: 98859)
  Prédit: '[right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[right' → logprob: -0.2812223434448242
    2. '[left' → logprob: -1.4062223434448242
    3. '[' → logprob: -10.531222343444824
    4. '[current' → logprob: -11.156222343444824
    5. '```' → logprob: -11.156222343444824
    6. 'left' → logprob: -12.281222343444824
    7. ' [' → logprob: -12.281222343444824
    8. '[next' → logprob: -13.531222343444824
    9. '[root' → logprob: -13.531222343444824
    10. '[parent' → logprob: -14.156222343444824

Token 118: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01013875287026167
    2. ']==' → logprob: -4.635138988494873
    3. ' ]' → logprob: -8.385138511657715
    4. '==' → logprob: -9.260138511657715
    5. ' ==' → logprob: -10.885138511657715
    6. ']!=' → logprob: -11.385138511657715
    7. '']' → logprob: -12.135138511657715
    8. 'current' → logprob: -12.385138511657715
    9. '```' → logprob: -12.385138511657715
    10. '`]' → logprob: -13.135138511657715

Token 119: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.11313959956169128
    2. '==' → logprob: -2.2381396293640137
    3. ' !=' → logprob: -8.738139152526855
    4. ']==' → logprob: -10.238139152526855
    5. ' ' → logprob: -10.613139152526855
    6. '```' → logprob: -10.863139152526855
    7. ']' → logprob: -10.988139152526855
    8. '!=' → logprob: -11.113139152526855
    9. ')' → logprob: -11.238139152526855
    10. ' ' → logprob: -11.738139152526855

Token 120: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.28160056471824646
    2. ' ' → logprob: -1.4066005945205688
    3. '1' → logprob: -7.781600475311279
    4. '2' → logprob: -10.906600952148438
    5. ' ' → logprob: -12.344100952148438
    6. '   ' → logprob: -13.844100952148438
    7. '  ' → logprob: -13.969100952148438
    8. '[' → logprob: -14.656600952148438
    9. '```' → logprob: -14.844100952148438
    10. ')' → logprob: -14.844100952148438

Token 121: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0031652413308620453
    2. '1' → logprob: -5.878165245056152
    3. ' ' → logprob: -8.003165245056152
    4. '2' → logprob: -10.628165245056152
    5. '-' → logprob: -16.003164291381836
    6. '۰' → logprob: -16.190664291381836
    7. ' ' → logprob: -16.190664291381836
    8. '`' → logprob: -16.253164291381836
    9. '=' → logprob: -16.253164291381836
    10. '```' → logprob: -16.565664291381836

Token 122: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.35108333826065063
    2. ':' → logprob: -1.2260832786560059
    3. '           ' → logprob: -6.226083278656006
    4. '       ' → logprob: -7.726083278656006
    5. ' and' → logprob: -9.351083755493164
    6. '):
' → logprob: -10.226083755493164
    7. '   ' → logprob: -10.976083755493164
    8. 'and' → logprob: -11.351083755493164
    9. ':

' → logprob: -11.476083755493164
    10. ' :
' → logprob: -11.851083755493164

Token 123: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03459814190864563
    2. 'total' → logprob: -3.6595981121063232
    3. '       ' → logprob: -5.409598350524902
    4. ' total' → logprob: -5.659598350524902
    5. '               ' → logprob: -8.909598350524902
    6. '```' → logprob: -9.784598350524902
    7. '+' → logprob: -10.159598350524902
    8. '   ' → logprob: -10.534598350524902
    9. ' ' → logprob: -11.909598350524902
    10. '         ' → logprob: -12.034598350524902

Token 124: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.3133929371833801
    2. ' total' → logprob: -1.3133928775787354
    3. '           ' → logprob: -9.438392639160156
    4. '	total' → logprob: -10.938392639160156
    5. ' ' → logprob: -11.438392639160156
    6. '               ' → logprob: -11.688392639160156
    7. '       ' → logprob: -11.688392639160156
    8. '   ' → logprob: -13.063392639160156
    9. '```' → logprob: -14.063392639160156
    10. ',total' → logprob: -14.063392639160156

Token 125: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.4741113483905792
    2. ' +=' → logprob: -0.9741113185882568
    3. '+' → logprob: -11.349111557006836
    4. ']+=' → logprob: -11.724111557006836
    5. '          ' → logprob: -13.099111557006836
    6. ' -=' → logprob: -13.349111557006836
    7. '=' → logprob: -13.474111557006836
    8. '-=' → logprob: -13.599111557006836
    9. ' ' → logprob: -13.724111557006836
    10. '         ' → logprob: -13.724111557006836

Token 126: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.25193464756011963
    2. ' w' → logprob: -1.5019346475601196
    3. ' ' → logprob: -13.751935005187988
    4. '	w' → logprob: -13.876935005187988
    5. '1' → logprob: -14.376935005187988
    6. ' ' → logprob: -14.501935005187988
    7. '```' → logprob: -15.251935005187988
    8. '+w' → logprob: -15.376935005187988
    9. '           ' → logprob: -15.501935005187988
    10. '2' → logprob: -15.501935005187988

Token 127: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.0014180884463712573
    2. 'current' → logprob: -6.626418113708496
    3. '[left' → logprob: -9.376418113708496
    4. '[' → logprob: -12.751418113708496
    5. '[right' → logprob: -12.751418113708496
    6. '```' → logprob: -14.626418113708496
    7. ' current' → logprob: -14.876418113708496
    8. 'left' → logprob: -15.251418113708496
    9. '	current' → logprob: -16.25141716003418
    10. '[cur' → logprob: -16.25141716003418

Token 128: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003146700793877244
    2. ']' → logprob: -5.878146648406982
    3. '<|end|>' → logprob: -9.25314712524414
    4. '])' → logprob: -9.50314712524414
    5. ')
' → logprob: -9.62814712524414
    6. '}' → logprob: -10.37814712524414
    7. ')]' → logprob: -11.37814712524414
    8. ' )' → logprob: -11.37814712524414
    9. '+' → logprob: -11.37814712524414
    10. '```' → logprob: -11.50314712524414

Token 129: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7197940945625305
    2. '
' → logprob: -1.3447940349578857
    3. ' if' → logprob: -1.5947940349578857
    4. 'if' → logprob: -3.5947940349578857
    5. ')' → logprob: -4.094794273376465
    6. '    
' → logprob: -5.969794273376465
    7. '```' → logprob: -7.094794273376465
    8. '  
' → logprob: -7.844794273376465
    9. ')
' → logprob: -8.344794273376465
    10. ' ' → logprob: -8.469794273376465

Token 130: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1590876430273056
    2. ')' → logprob: -2.909087657928467
    3. ' if' → logprob: -2.909087657928467
    4. '   ' → logprob: -3.909087657928467
    5. 'else' → logprob: -4.909087657928467
    6. '
' → logprob: -6.034087657928467
    7. '       ' → logprob: -6.409087657928467
    8. '```' → logprob: -6.909087657928467
    9. 'print' → logprob: -7.034087657928467
    10. ' ' → logprob: -7.409087657928467

Token 131: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.00900309719145298
    2. 'total' → logprob: -4.884003162384033
    3. ' a' → logprob: -7.134003162384033
    4. ' current' → logprob: -8.509002685546875
    5. 'a' → logprob: -9.009002685546875
    6. ' not' → logprob: -9.384002685546875
    7. ' min' → logprob: -9.634002685546875
    8. ' ' → logprob: -10.509002685546875
    9. ' w' → logprob: -10.634002685546875
    10. ' ' → logprob: -11.009002685546875

Token 132: ' >=' (ID: 5064)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.9987916350364685
    2. '>' → logprob: -1.1237916946411133
    3. ' >=' → logprob: -1.4987916946411133
    4. '>=' → logprob: -2.4987916946411133
    5. ' <' → logprob: -7.623791694641113
    6. '<' → logprob: -7.748791694641113
    7. ' ' → logprob: -9.623791694641113
    8. ' ' → logprob: -10.248791694641113
    9. ')' → logprob: -12.498791694641113
    10. '≥' → logprob: -12.873791694641113

Token 133: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.306760805164231e-05
    2. ' min' → logprob: -11.25001335144043
    3. '	min' → logprob: -18.62501335144043
    4. 'minimum' → logprob: -20.50001335144043
    5. '_min' → logprob: -21.50001335144043
    6. '```' → logprob: -21.62501335144043
    7. '(min' → logprob: -22.62501335144043
    8. 'm' → logprob: -22.87501335144043
    9. '=min' → logprob: -23.12501335144043
    10. 'max' → logprob: -23.37501335144043

Token 134: '_fr' (ID: 20643)
  Prédit: '_fr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fr' → logprob: -3.7697225252486533e-06
    2. 'fr' → logprob: -13.250003814697266
    3. '_frag' → logprob: -14.000003814697266
    4. '_f' → logprob: -14.875003814697266
    5. '_' → logprob: -15.625003814697266
    6. '	fr' → logprob: -16.125003814697266
    7. '_Fr' → logprob: -16.500003814697266
    8. '```' → logprob: -16.625003814697266
    9. '_fl' → logprob: -16.875003814697266
    10. '_FR' → logprob: -17.000003814697266

Token 135: 'ustr' (ID: 3073)
  Prédit: 'ustr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ustr' → logprob: -0.0003827676991932094
    2. 'ust' → logprob: -8.250382423400879
    3. 'astr' → logprob: -9.500382423400879
    4. 'str' → logprob: -11.000382423400879
    5. 'estr' → logprob: -11.750382423400879
    6. 'us' → logprob: -12.375382423400879
    7. 'istration' → logprob: -13.000382423400879
    8. 'r' → logprob: -13.125382423400879
    9. 'ost' → logprob: -13.625382423400879
    10. 'u' → logprob: -13.750382423400879

Token 136: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -1.1472419600977446e-06
    2. 'ration' → logprob: -15.125000953674316
    3. 'tion' → logprob: -15.625000953674316
    4. 'asion' → logprob: -16.000001907348633
    5. 'lation' → logprob: -16.250001907348633
    6. 'ations' → logprob: -16.875001907348633
    7. 'a' → logprob: -16.875001907348633
    8. 'st' → logprob: -16.875001907348633
    9. 't' → logprob: -17.000001907348633
    10. 'min' → logprob: -17.250001907348633

Token 137: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12865479290485382
    2. ':
' → logprob: -2.128654718399048
    3. '           ' → logprob: -6.878654956817627
    4. '   ' → logprob: -7.878654956817627
    5. '       ' → logprob: -8.503654479980469
    6. '	break' → logprob: -10.378654479980469
    7. 'break' → logprob: -10.378654479980469
    8. ' break' → logprob: -11.503654479980469
    9. '_break' → logprob: -11.753654479980469
    10. ':
' → logprob: -11.878654479980469

Token 138: '           ' (ID: 352)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.5868194103240967
    2. '           ' → logprob: -1.0868194103240967
    3. '       ' → logprob: -2.3368194103240967
    4. ' break' → logprob: -4.711819648742676
    5. '	break' → logprob: -7.836819648742676
    6. '   ' → logprob: -7.836819648742676
    7. '```' → logprob: -9.086819648742676
    8. '               ' → logprob: -9.711819648742676
    9. '_break' → logprob: -10.836819648742676
    10. '	       ' → logprob: -12.711819648742676

Token 139: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.006798733025789261
    2. ' break' → logprob: -5.00679874420166
    3. '           ' → logprob: -9.50679874420166
    4. '	break' → logprob: -12.63179874420166
    5. '   ' → logprob: -12.88179874420166
    6. '               ' → logprob: -13.13179874420166
    7. '       ' → logprob: -14.13179874420166
    8. '```' → logprob: -15.13179874420166
    9. '_break' → logprob: -16.256797790527344
    10. 'Break' → logprob: -17.881797790527344

Token 140: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09074236452579498
    2. '
' → logprob: -2.590742349624634
    3. '    
' → logprob: -4.715742588043213
    4. '```' → logprob: -7.215742588043213
    5. ')' → logprob: -7.715742588043213
    6. '\n' → logprob: -7.965742588043213
    7. ' 
' → logprob: -8.090742111206055
    8. '  
' → logprob: -8.965742111206055
    9. '<|end|>' → logprob: -9.090742111206055
    10. '        
' → logprob: -9.090742111206055

Token 141: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008614103309810162
    2. '
' → logprob: -5.5086140632629395
    3. ')' → logprob: -5.7586140632629395
    4. '    
' → logprob: -7.0086140632629395
    5. '```' → logprob: -9.383614540100098
    6. 'else' → logprob: -9.508614540100098
    7. '<|end|>' → logprob: -10.008614540100098
    8. '  ' → logprob: -10.258614540100098
    9. '        
' → logprob: -10.508614540100098
    10. '       ' → logprob: -10.633614540100098

Token 142: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5870673060417175
    2. 'else' → logprob: -0.9620673060417175
    3. 'if' (adapté à ' if') → logprob: -3.0870673656463623
    4. ' else' → logprob: -4.712067127227783
    5. ' if' → logprob: -5.212067127227783
    6. ')' → logprob: -6.712067127227783
    7. ' ' → logprob: -8.212067604064941
    8. 'min' → logprob: -8.712067604064941
    9. '    
' → logprob: -9.712067604064941
    10. '  ' → logprob: -10.087067604064941

Token 143: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.033672671765089035
    2. 'total' → logprob: -3.408672571182251
    3. ' min' → logprob: -11.658672332763672
    4. '	total' → logprob: -11.783672332763672
    5. ' ' → logprob: -12.158672332763672
    6. '   ' → logprob: -12.533672332763672
    7. 'Total' → logprob: -14.408672332763672
    8. '(total' → logprob: -14.908672332763672
    9. 'min' → logprob: -14.908672332763672
    10. '```' → logprob: -15.908672332763672

Token 144: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.05489705875515938
    2. '<' → logprob: -2.9298970699310303
    3. '<|end|>' → logprob: -12.17989730834961
    4. ' ' → logprob: -12.55489730834961
    5. '[' → logprob: -13.55489730834961
    6. ' ' → logprob: -13.80489730834961
    7. 'min' → logprob: -13.92989730834961
    8. '<n' → logprob: -15.17989730834961
    9. '<num' → logprob: -15.30489730834961
    10. '<size' → logprob: -15.30489730834961

Token 145: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.011047935113310814
    2. ' min' → logprob: -4.511047840118408
    3. '	min' → logprob: -16.26104736328125
    4. '_min' → logprob: -17.63604736328125
    5. '=min' → logprob: -18.38604736328125
    6. '   ' → logprob: -18.51104736328125
    7. '```' → logprob: -19.13604736328125
    8. ' ' → logprob: -19.13604736328125
    9. '(min' → logprob: -19.38604736328125
    10. '[min' → logprob: -20.01104736328125

Token 146: '_fr' (ID: 20643)
  Prédit: '_fr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fr' → logprob: -2.935296834039036e-06
    2. '_frag' → logprob: -14.00000286102295
    3. 'fr' → logprob: -14.25000286102295
    4. '_f' → logprob: -14.62500286102295
    5. '_' → logprob: -14.75000286102295
    6. '_min' → logprob: -15.50000286102295
    7. '_fl' → logprob: -16.000003814697266
    8. 'min' → logprob: -17.375003814697266
    9. '_gr' → logprob: -17.500003814697266
    10. '_Fr' → logprob: -17.500003814697266

Token 147: 'ustr' (ID: 3073)
  Prédit: 'ustr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ustr' → logprob: -0.005757307168096304
    2. 'ust' → logprob: -5.3807573318481445
    3. 'str' → logprob: -7.2557573318481445
    4. 'astr' → logprob: -8.380757331848145
    5. 'us' → logprob: -10.380757331848145
    6. '_' → logprob: -10.630757331848145
    7. 'istration' → logprob: -10.630757331848145
    8. 'estr' → logprob: -10.755757331848145
    9. 'u' → logprob: -11.130757331848145
    10. '_str' → logprob: -11.755757331848145

Token 148: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -1.6166903151315637e-05
    2. 'st' → logprob: -12.500016212463379
    3. 'str' → logprob: -12.500016212463379
    4. 'ust' → logprob: -13.125016212463379
    5. 'ration' → logprob: -13.750016212463379
    6. 'a' → logprob: -14.500016212463379
    7. 'ustr' → logprob: -14.500016212463379
    8. 'action' → logprob: -14.750016212463379
    9. 'station' → logprob: -14.875016212463379
    10. 'tion' → logprob: -15.000016212463379

Token 149: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011073531582951546
    2. ':
' → logprob: -4.511073589324951
    3. '):' → logprob: -11.011073112487793
    4. '):
' → logprob: -13.136073112487793
    5. '       ' → logprob: -13.761073112487793
    6. ':
' → logprob: -13.761073112487793
    7. ':

' → logprob: -14.011073112487793
    8. '   ' → logprob: -14.011073112487793
    9. '<|end|>' → logprob: -14.011073112487793
    10. ':min' → logprob: -14.511073112487793

Token 150: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008681101026013494
    2. ' min' → logprob: -7.375868320465088
    3. 'min' → logprob: -9.12586784362793
    4. '
' → logprob: -9.37586784362793
    5. '	min' → logprob: -11.50086784362793
    6. '   ' → logprob: -11.62586784362793
    7. '```' → logprob: -11.62586784362793
    8. '(min' → logprob: -12.37586784362793
    9. '        
' → logprob: -12.62586784362793
    10. '           ' → logprob: -12.87586784362793

Token 151: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.06251834332942963
    2. 'min' (adapté à ' min') → logprob: -2.812518358230591
    3. '       ' → logprob: -8.312518119812012
    4. '   ' → logprob: -8.937518119812012
    5. '	min' → logprob: -9.187518119812012
    6. '           ' → logprob: -9.812518119812012
    7. '
' → logprob: -12.062518119812012
    8. '_min' → logprob: -12.312518119812012
    9. '```' → logprob: -13.312518119812012
    10. '[min' → logprob: -13.437518119812012

Token 152: '_fr' (ID: 20643)
  Prédit: '_fr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fr' → logprob: -7.107425062713446e-06
    2. '_frag' → logprob: -13.000006675720215
    3. '_' → logprob: -13.125006675720215
    4. '_f' → logprob: -13.750006675720215
    5. 'fr' → logprob: -14.500006675720215
    6. '_fragment' → logprob: -14.875006675720215
    7. '_Fr' → logprob: -15.750006675720215
    8. '_fl' → logprob: -15.875006675720215
    9. '_min' → logprob: -16.12500762939453
    10. '_gr' → logprob: -16.37500762939453

Token 153: 'ustr' (ID: 3073)
  Prédit: 'ustr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ustr' → logprob: -0.0021622790955007076
    2. 'ust' → logprob: -6.752162456512451
    3. 'astr' → logprob: -7.752162456512451
    4. 'str' → logprob: -7.877162456512451
    5. 'estr' → logprob: -10.002161979675293
    6. 'istration' → logprob: -10.502161979675293
    7. '_' → logprob: -10.877161979675293
    8. 'u' → logprob: -11.002161979675293
    9. 'us' → logprob: -12.252161979675293
    10. 'ues' → logprob: -12.252161979675293

Token 154: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.00041851779678836465
    2. 'str' → logprob: -8.750418663024902
    3. 'ustr' → logprob: -9.625418663024902
    4. 'ust' → logprob: -9.750418663024902
    5. 'st' → logprob: -10.000418663024902
    6. 'station' → logprob: -10.625418663024902
    7. 'ast' → logprob: -11.375418663024902
    8. 'tration' → logprob: -11.875418663024902
    9. 'asion' → logprob: -12.125418663024902
    10. 'tion' → logprob: -12.375418663024902

Token 155: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.061967797577381134
    2. ' =' → logprob: -2.8119678497314453
    3. '＝' → logprob: -16.311967849731445
    4. '=min' → logprob: -16.561967849731445
    5. '=

' → logprob: -17.936967849731445
    6. 'min' → logprob: -19.436967849731445
    7. '.=' → logprob: -19.436967849731445
    8. '=
' → logprob: -19.686967849731445
    9. ')' → logprob: -19.936967849731445
    10. ',' → logprob: -20.311967849731445

Token 156: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.3132619559764862
    2. ' total' → logprob: -1.3132619857788086
    3. '	total' → logprob: -16.313261032104492
    4. '(total' → logprob: -17.188261032104492
    5. 'tot' → logprob: -17.563261032104492
    6. 't' → logprob: -17.563261032104492
    7. 'to' → logprob: -17.938261032104492
    8. ' ' → logprob: -18.063261032104492
    9. '$total' → logprob: -18.188261032104492
    10. '   ' → logprob: -18.313261032104492

Token 157: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02981795184314251
    2. '
' → logprob: -3.529818058013916
    3. ' print' → logprob: -10.404817581176758
    4. ')' → logprob: -11.529817581176758
    5. '
' → logprob: -11.654817581176758
    6. '  
' → logprob: -11.779817581176758
    7. ' 
' → logprob: -12.404817581176758
    8. '

' → logprob: -13.404817581176758
    9. '```' → logprob: -13.529817581176758
    10. ')
' → logprob: -13.654817581176758

Token 158: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.60414821645827e-06
    2. '
' → logprob: -12.500004768371582
    3. '```' → logprob: -14.625004768371582
    4. ' print' → logprob: -15.250004768371582
    5. ')' → logprob: -17.125003814697266
    6. '  
' → logprob: -17.500003814697266
    7. '(print' → logprob: -18.875003814697266
    8. ')
' → logprob: -18.875003814697266
    9. '    
' → logprob: -19.500003814697266
    10. '#print' → logprob: -19.625003814697266

Token 159: '(min' (ID: 26035)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.69377201795578
    2. '(min' → logprob: -0.69377201795578
    3. '('' → logprob: -7.443771839141846
    4. '("("' → logprob: -11.193772315979004
    5. '(max' → logprob: -11.568772315979004
    6. '(`' → logprob: -12.318772315979004
    7. '(f' → logprob: -12.693772315979004
    8. ' (' → logprob: -12.818772315979004
    9. '(m' → logprob: -13.818772315979004
    10. '()' → logprob: -14.193772315979004

Token 160: '_fr' (ID: 20643)
  Prédit: '_fr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fr' → logprob: -1.3856492842023727e-06
    2. '(fr' → logprob: -14.875000953674316
    3. '(_' → logprob: -15.125000953674316
    4. 'fr' → logprob: -15.750000953674316
    5. '_frag' → logprob: -15.750000953674316
    6. '(min' → logprob: -16.375001907348633
    7. '_fl' → logprob: -16.500001907348633
    8. '_f' → logprob: -16.750001907348633
    9. '_min' → logprob: -17.125001907348633
    10. '_FR' → logprob: -17.375001907348633

Token 161: 'ustr' (ID: 3073)
  Prédit: 'ustr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ustr' → logprob: -0.044517215341329575
    2. 'str' → logprob: -3.1695172786712646
    3. 'istration' → logprob: -7.5445170402526855
    4. 'estr' → logprob: -8.169517517089844
    5. 'ust' → logprob: -8.294517517089844
    6. 'astr' → logprob: -8.419517517089844
    7. 'min' → logprob: -9.169517517089844
    8. 'tration' → logprob: -10.794517517089844
    9. '_str' → logprob: -11.169517517089844
    10. 'as' → logprob: -11.419517517089844

Token 162: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -6.392202976712724e-06
    2. 'tion' → logprob: -12.375006675720215
    3. 'ion' → logprob: -14.750006675720215
    4. 'lation' → logprob: -15.000006675720215
    5. 'ration' → logprob: -15.250006675720215
    6. 'str' → logprob: -15.500006675720215
    7. 'a' → logprob: -15.625006675720215
    8. 'action' → logprob: -15.625006675720215
    9. 'nation' → logprob: -15.875006675720215
    10. 't' → logprob: -16.3750057220459

Token 163: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. '')' → logprob: -15.000001907348633
    3. '))' → logprob: -15.000001907348633
    4. ' )' → logprob: -15.000001907348633
    5. ')
' → logprob: -15.125001907348633
    6. ')`' → logprob: -15.500001907348633
    7. '()' → logprob: -15.875001907348633
    8. '(' → logprob: -16.750001907348633
    9. '`)' → logprob: -17.375001907348633
    10. '())' → logprob: -17.875001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 161
Tokens correctement prédits (1ère position, stricte): 73
Tokens correctement prédits (1ère position, avec adaptation): 78
Tokens correctement prédits (top 10): 142
Précision stricte (1ère position): 45.34%
Précision adaptée (1ère position): 48.45%
Précision (top 10): 88.20%
================================================================================
