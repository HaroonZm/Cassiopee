================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:00:30
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def gcd(a, b):
    while b:
        a, b = b, a % b
    return a

for line in sys.stdin:
    if line.strip():
        a, b = map(int, line.split())
        print(gcd(a, b))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.18268179893493652
    2. '\n' → logprob: -2.1826817989349365
    3. 'import' → logprob: -3.5576817989349365
    4. '<|end|>' → logprob: -4.932682037353516
    5. '' → logprob: -5.807682037353516
    6. 'newline' → logprob: -5.932682037353516
    7. '\' → logprob: -6.057682037353516
    8. 'print' → logprob: -6.432682037353516
    9. '[' → logprob: -6.557682037353516
    10. '<|end|>' → logprob: -6.807682037353516

Token 4: ' gcd' (ID: 106918)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04091703146696091
    2. ' main' → logprob: -4.915916919708252
    3. ' space' → logprob: -5.165916919708252
    4. ' process' → logprob: -5.415916919708252
    5. ' ' → logprob: -6.040916919708252
    6. ' sys' → logprob: -6.165916919708252
    7. ' my' → logprob: -6.415916919708252
    8. ' function' → logprob: -6.790916919708252
    9. '_' → logprob: -6.915916919708252
    10. ' a' → logprob: -6.915916919708252

Token 5: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005156210972927511
    2. '_' → logprob: -8.500515937805176
    3. '<|end|>' → logprob: -9.250515937805176
    4. ' (' → logprob: -9.375515937805176
    5. '```' → logprob: -10.375515937805176
    6. '<|end|>' → logprob: -10.500515937805176
    7. '(x' → logprob: -12.250515937805176
    8. '_g' → logprob: -12.250515937805176
    9. '(a' → logprob: -12.375515937805176
    10. '(defun' → logprob: -12.375515937805176

Token 6: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00757775129750371
    2. ')' → logprob: -5.507577896118164
    3. ',)' → logprob: -6.632577896118164
    4. ',b' → logprob: -6.757577896118164
    5. ' ,' → logprob: -7.257577896118164
    6. ',a' → logprob: -9.007577896118164
    7. ',g' → logprob: -10.382577896118164
    8. ',n' → logprob: -10.507577896118164
    9. ',p' → logprob: -11.132577896118164
    10. ',
' → logprob: -11.382577896118164

Token 7: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.10036776959896088
    2. 'b' → logprob: -2.350367784500122
    3. ' ' → logprob: -8.850367546081543
    4. ' ' → logprob: -12.100367546081543
    5. ' ,' → logprob: -12.725367546081543
    6. ')' → logprob: -12.850367546081543
    7. ',b' → logprob: -12.975367546081543
    8. '<|end|>' → logprob: -13.850367546081543
    9. ')b' → logprob: -13.975367546081543
    10. ',' → logprob: -13.975367546081543

Token 8: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02096819132566452
    2. ')' → logprob: -3.895968198776245
    3. '):
' → logprob: -8.020968437194824
    4. ',' → logprob: -10.395968437194824
    5. ':' → logprob: -10.645968437194824
    6. '<|end|>' → logprob: -11.395968437194824
    7. ')>' → logprob: -12.520968437194824
    8. '   ' → logprob: -12.645968437194824
    9. ' ):' → logprob: -12.770968437194824
    10. '):
' → logprob: -12.895968437194824

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.638568639755249
    2. ':' → logprob: -0.763568639755249
    3. ' :' → logprob: -6.638568878173828
    4. '():' → logprob: -6.888568878173828
    5. ':
' → logprob: -7.138568878173828
    6. '```' → logprob: -7.388568878173828
    7. ':return' → logprob: -7.763568878173828
    8. '):' → logprob: -8.013568878173828
    9. ' ' → logprob: -8.013568878173828
    10. '    ' → logprob: -8.763568878173828

Token 10: ' while' (ID: 2049)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6150199770927429
    2. '   ' → logprob: -0.9900199770927429
    3. ' while' → logprob: -2.6150200366973877
    4. '    ' → logprob: -5.115019798278809
    5. '```' → logprob: -5.990019798278809
    6. ' return' → logprob: -6.365019798278809
    7. 'if' → logprob: -6.365019798278809
    8. ' ```' → logprob: -6.740019798278809
    9. ' i' → logprob: -7.490019798278809
    10. '    
' → logprob: -8.240019798278809

Token 11: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.1355505734682083
    2. ' a' → logprob: -2.1355504989624023
    3. ' ' → logprob: -5.260550498962402
    4. 'b' → logprob: -6.010550498962402
    5. 'a' → logprob: -7.010550498962402
    6. '  ' → logprob: -11.135550498962402
    7. ' not' → logprob: -11.635550498962402
    8. ' (' → logprob: -11.760550498962402
    9. '(a' → logprob: -13.635550498962402
    10. ' gcd' → logprob: -14.010550498962402

Token 12: ':
' (ID: 734)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.03435986116528511
    2. ':' → logprob: -4.159359931945801
    3. ' >' → logprob: -5.034359931945801
    4. '!=' → logprob: -5.409359931945801
    5. ' and' → logprob: -5.909359931945801
    6. '>' → logprob: -6.284359931945801
    7. '<|end|>' → logprob: -7.034359931945801
    8. ' ' → logprob: -7.534359931945801
    9. ' :' → logprob: -7.909359931945801
    10. ')' → logprob: -8.9093599319458

Token 13: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.042503029108047485
    2. '    ' → logprob: -3.9175031185150146
    3. 'a' → logprob: -4.6675028800964355
    4. ' a' → logprob: -5.0425028800964355
    5. '   ' → logprob: -6.6675028800964355
    6. '```' → logprob: -6.9175028800964355
    7. ' 
' → logprob: -7.5425028800964355
    8. '     ' → logprob: -7.7925028800964355
    9. ' ' → logprob: -7.7925028800964355
    10. ' =' → logprob: -8.042503356933594

Token 14: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5815427899360657
    2. 'a' (adapté à ' a') → logprob: -0.8315427899360657
    3. '       ' → logprob: -5.83154296875
    4. '```' → logprob: -6.70654296875
    5. '    ' → logprob: -7.58154296875
    6. '        ' → logprob: -8.83154296875
    7. '           ' → logprob: -9.20654296875
    8. '``' → logprob: -9.20654296875
    9. '   ' → logprob: -9.45654296875
    10. 'temp' → logprob: -9.58154296875

Token 15: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04998789355158806
    2. ' %=' → logprob: -3.29998779296875
    3. ' ,' → logprob: -4.92498779296875
    4. '%' → logprob: -6.17498779296875
    5. ' %' → logprob: -6.42498779296875
    6. '%=' → logprob: -7.79998779296875
    7. '%,' → logprob: -8.79998779296875
    8. '=' → logprob: -8.92498779296875
    9. ' %,' → logprob: -9.04998779296875
    10. ' =' → logprob: -10.04998779296875

Token 16: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.11293773353099823
    2. 'b' → logprob: -2.2379376888275146
    3. '<|end|>' → logprob: -9.612937927246094
    4. ' ' → logprob: -9.987937927246094
    5. '<|end|>' → logprob: -13.362937927246094
    6. '>b' → logprob: -15.612937927246094
    7. '	b' → logprob: -15.987937927246094
    8. 's' → logprob: -16.112937927246094
    9. ' ' → logprob: -16.237937927246094
    10. ' б' → logprob: -16.362937927246094

Token 17: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08896531164646149
    2. '=' → logprob: -2.46396541595459
    3. ',' → logprob: -10.83896541595459
    4. '<|end|>' → logprob: -12.46396541595459
    5. '<|end|>' → logprob: -14.46396541595459
    6. '   ' → logprob: -15.21396541595459
    7. ' ' → logprob: -15.33896541595459
    8. ')' → logprob: -15.46396541595459
    9. ' =
' → logprob: -15.46396541595459
    10. ' ,' → logprob: -15.58896541595459

Token 18: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.08894459158182144
    2. 'b' → logprob: -2.463944673538208
    3. ' ' → logprob: -12.838944435119629
    4. ' ' → logprob: -13.588944435119629
    5. '```' → logprob: -15.588944435119629
    6. '<|end|>' → logprob: -16.338945388793945
    7. ',' → logprob: -16.401445388793945
    8. '>b' → logprob: -16.463945388793945
    9. '0' → logprob: -16.463945388793945
    10. ' (' → logprob: -16.713945388793945

Token 19: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007614201866090298
    2. ' ,' → logprob: -4.8826141357421875
    3. '<|end|>' → logprob: -12.507614135742188
    4. ',
' → logprob: -13.382614135742188
    5. ' ' → logprob: -13.632614135742188
    6. ',a' → logprob: -14.882614135742188
    7. '`,' → logprob: -15.382614135742188
    8. '<|end|>' → logprob: -15.507614135742188
    9. 'a' → logprob: -15.757614135742188
    10. '‌,' → logprob: -15.882614135742188

Token 20: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5759404897689819
    2. 'a' → logprob: -0.8259404897689819
    3. '	a' → logprob: -14.450940132141113
    4. ' ' → logprob: -15.200940132141113
    5. ' ' → logprob: -16.57594108581543
    6. '>a' → logprob: -17.20094108581543
    7. '_a' → logprob: -17.82594108581543
    8. '<|end|>' → logprob: -17.95094108581543
    9. '```' → logprob: -18.20094108581543
    10. 'A' → logprob: -18.32594108581543

Token 21: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.08939436078071594
    2. '%' → logprob: -2.4643943309783936
    3. ' ' → logprob: -8.589394569396973
    4. '<|end|>' → logprob: -8.839394569396973
    5. 'a' → logprob: -9.589394569396973
    6. ' %=' → logprob: -11.214394569396973
    7. '%A' → logprob: -12.089394569396973
    8. ' ' → logprob: -12.089394569396973
    9. ' a' → logprob: -12.214394569396973
    10. '%b' → logprob: -12.589394569396973

Token 22: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.023245826363563538
    2. ' b' → logprob: -3.7732458114624023
    3. ' ' → logprob: -15.023245811462402
    4. '  ' → logprob: -18.89824676513672
    5. '	b' → logprob: -19.77324676513672
    6. '   ' → logprob: -20.39824676513672
    7. '>b' → logprob: -20.89824676513672
    8. '%b' → logprob: -20.89824676513672
    9. '_b' → logprob: -21.02324676513672
    10. ')b' → logprob: -21.14824676513672

Token 23: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.2247869074344635
    2. '<|end|>' → logprob: -1.7247868776321411
    3. '\' → logprob: -4.974786758422852
    4. '\r' → logprob: -5.224786758422852
    5. 'newline' → logprob: -5.974786758422852
    6. ' ' → logprob: -6.099786758422852
    7. ' 
' → logprob: -6.724786758422852
    8. ')' → logprob: -6.724786758422852
    9. '```' → logprob: -6.849786758422852
    10. '<|end|>' → logprob: -7.099786758422852

Token 24: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7246736884117126
    2. '<|end|>' → logprob: -0.8496736884117126
    3. ' 
' → logprob: -3.9746737480163574
    4. '   ' → logprob: -4.224673748016357
    5. ' ' → logprob: -4.349673748016357
    6. '\' → logprob: -4.599673748016357
    7. ' return' → logprob: -5.099673748016357
    8. '```' → logprob: -5.474673748016357
    9. 'return' → logprob: -5.474673748016357
    10. '<|end|>' → logprob: -5.599673748016357

Token 25: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6527671217918396
    2. 'return' (adapté à ' return') → logprob: -0.9027671217918396
    3. '   ' → logprob: -2.6527671813964844
    4. '\n' → logprob: -6.777767181396484
    5. ' 
' → logprob: -7.777767181396484
    6. ':return' → logprob: -7.777767181396484
    7. '```' → logprob: -7.902767181396484
    8. '    
' → logprob: -8.027767181396484
    9. ' ' → logprob: -8.152767181396484
    10. '    ' → logprob: -8.777767181396484

Token 26: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.126930832862854
    2. ' a' → logprob: -2.1269307136535645
    3. ' ' → logprob: -13.251931190490723
    4. 'space' → logprob: -15.001931190490723
    5. ' ' → logprob: -15.001931190490723
    6. '	a' → logprob: -15.376931190490723
    7. '_a' → logprob: -16.251930236816406
    8. 's' → logprob: -17.751930236816406
    9. ''a' → logprob: -18.001930236816406
    10. '  ' → logprob: -19.001930236816406

Token 27: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.2892488241195679
    2. '```' → logprob: -1.4142488241195679
    3. '
' → logprob: -1.6642488241195679
    4. '

' → logprob: -2.1642489433288574
    5. '<|end|>' → logprob: -2.5392489433288574
    6. 'def' → logprob: -2.6642489433288574
    7. '\' → logprob: -5.539248943328857
    8. '``' → logprob: -5.664248943328857
    9. '' → logprob: -5.789248943328857
    10. '#' → logprob: -6.039248943328857

Token 28: 'for' (ID: 1938)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4121600091457367
    2. '

' → logprob: -1.662160038948059
    3. '
' → logprob: -2.6621599197387695
    4. '\n' → logprob: -3.6621599197387695
    5. '```' → logprob: -3.7871599197387695
    6. 'print' → logprob: -4.0371599197387695
    7. 'n' → logprob: -5.5371599197387695
    8. 'result' → logprob: -6.0371599197387695
    9. 'a' → logprob: -6.7871599197387695
    10. '<|end|>' → logprob: -7.4121599197387695

Token 29: ' line' (ID: 2543)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.011319895274937153
    2. ' i' → logprob: -4.511320114135742
    3. ' item' → logprob: -9.636320114135742
    4. ' num' → logprob: -10.011320114135742
    5. ' n' → logprob: -10.136320114135742
    6. ' number' → logprob: -10.136320114135742
    7. ' x' → logprob: -10.261320114135742
    8. ' element' → logprob: -11.761320114135742
    9. ' a' → logprob: -11.886320114135742
    10. '  ' → logprob: -12.136320114135742

Token 30: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004107254091650248
    2. 'in' → logprob: -5.504107475280762
    3. ' ' → logprob: -10.754107475280762
    4. '```' → logprob: -13.754107475280762
    5. ' i' → logprob: -14.379107475280762
    6. '[' → logprob: -14.754107475280762
    7. '_in' → logprob: -14.879107475280762
    8. 's' → logprob: -14.879107475280762
    9. '<|end|>' → logprob: -14.879107475280762
    10. '[line' → logprob: -15.004107475280762

Token 31: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.6931533217430115
    2. 'sys' → logprob: -0.6931533217430115
    3. '=sys' → logprob: -12.818153381347656
    4. '	sys' → logprob: -13.193153381347656
    5. '(sys' → logprob: -14.318153381347656
    6. 'stdin' → logprob: -14.568153381347656
    7. ' ' → logprob: -16.068153381347656
    8. 's' → logprob: -16.693153381347656
    9. ' ' → logprob: -17.068153381347656
    10. 'open' → logprob: -17.193153381347656

Token 32: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0005216968129388988
    2. '.' → logprob: -8.125521659851074
    3. '.argv' → logprob: -8.625521659851074
    4. ' .' → logprob: -10.750521659851074
    5. '.stdout' → logprob: -11.500521659851074
    6. '.readline' → logprob: -11.750521659851074
    7. '.input' → logprob: -12.750521659851074
    8. 'stdin' → logprob: -13.250521659851074
    9. '.readlines' → logprob: -14.375521659851074
    10. '.std' → logprob: -14.500521659851074

Token 33: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012296424247324467
    2. '.readline' → logprob: -4.512296199798584
    3. '.strip' → logprob: -8.012296676635742
    4. '.readlines' → logprob: -8.262296676635742
    5. '<|end|>' → logprob: -8.262296676635742
    6. ' :' → logprob: -9.512296676635742
    7. '.rstrip' → logprob: -9.637296676635742
    8. ':
' → logprob: -9.762296676635742
    9. '.' → logprob: -10.012296676635742
    10. '<|end|>' → logprob: -10.762296676635742

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03783455491065979
    2. '    
' → logprob: -3.537834644317627
    3. '    ' → logprob: -5.912834644317627
    4. ' line' → logprob: -6.537834644317627
    5. ' readline' → logprob: -7.037834644317627
    6. ' if' → logprob: -7.412834644317627
    7. ' 
' → logprob: -7.912834644317627
    8. ' ' → logprob: -8.037834167480469
    9. '.strip' → logprob: -8.037834167480469
    10. '     
' → logprob: -8.662834167480469

Token 35: ' if' (ID: 538)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.7232905626296997
    2. ' numbers' → logprob: -1.2232905626296997
    3. ' n' → logprob: -2.59829044342041
    4. '   ' → logprob: -2.84829044342041
    5. ' nums' → logprob: -3.47329044342041
    6. 'n' → logprob: -3.97329044342041
    7. ' values' → logprob: -4.84829044342041
    8. ' a' → logprob: -5.09829044342041
    9. 'line' → logprob: -5.22329044342041
    10. ' data' → logprob: -5.47329044342041

Token 36: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.34325844049453735
    2. ' not' → logprob: -1.5932583808898926
    3. ' ' → logprob: -2.4682583808898926
    4. 'line' → logprob: -6.843258380889893
    5. ' len' → logprob: -7.343258380889893
    6. ''' → logprob: -7.593258380889893
    7. ' '' → logprob: -8.71825885772705
    8. 'not' → logprob: -9.34325885772705
    9. '"' → logprob: -10.46825885772705
    10. ' ' → logprob: -10.71825885772705

Token 37: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.2653830051422119
    2. '.' → logprob: -1.640383005142212
    3. '.startswith' → logprob: -3.265383005142212
    4. '.rstrip' → logprob: -7.140382766723633
    5. ' .' → logprob: -8.640382766723633
    6. '.endswith' → logprob: -11.265382766723633
    7. '.chomp' → logprob: -12.390382766723633
    8. 'startswith' → logprob: -12.390382766723633
    9. '.split' → logprob: -12.515382766723633
    10. '.trim' → logprob: -13.140382766723633

Token 38: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.11590408533811569
    2. '()' → logprob: -2.2409040927886963
    3. '()==' → logprob: -5.990903854370117
    4. ' ==' → logprob: -8.740903854370117
    5. ' ():' → logprob: -8.740903854370117
    6. ':' → logprob: -8.990903854370117
    7. ' ()' → logprob: -9.865903854370117
    8. '():
' → logprob: -9.990903854370117
    9. '==' → logprob: -11.365903854370117
    10. '().' → logprob: -12.115903854370117

Token 39: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006892854813486338
    2. ' a' → logprob: -5.756892681121826
    3. '    ' → logprob: -6.131892681121826
    4. '   ' → logprob: -7.631892681121826
    5. ' tokens' → logprob: -8.506893157958984
    6. ' n' → logprob: -8.756893157958984
    7. ' parts' → logprob: -8.756893157958984
    8. ' ' → logprob: -9.256893157958984
    9. 'a' → logprob: -9.381893157958984
    10. ' x' → logprob: -9.881893157958984

Token 40: ' a' (ID: 261)
  Prédit: ' numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' numbers' → logprob: -0.438888818025589
    2. ' a' → logprob: -2.1888887882232666
    3. ' nums' → logprob: -2.8138887882232666
    4. ' parts' → logprob: -2.8138887882232666
    5. 'a' (adapté à ' a') → logprob: -3.3138887882232666
    6. 'numbers' → logprob: -3.8138887882232666
    7. 'nums' → logprob: -4.063889026641846
    8. ' n' → logprob: -4.688889026641846
    9. 'n' → logprob: -4.688889026641846
    10. '       ' → logprob: -4.688889026641846

Token 41: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004820313479285687
    2. ' ,' → logprob: -8.250481605529785
    3. ',b' → logprob: -8.500481605529785
    4. ',a' → logprob: -11.750481605529785
    5. ',s' → logprob: -12.750481605529785
    6. ',int' → logprob: -13.875481605529785
    7. ',n' → logprob: -13.875481605529785
    8. ',v' → logprob: -14.625481605529785
    9. ',user' → logprob: -15.000481605529785
    10. ',p' → logprob: -15.250481605529785

Token 42: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.4287246763706207
    2. 'b' → logprob: -1.0537246465682983
    3. ' ' → logprob: -11.30372428894043
    4. '<|end|>' → logprob: -12.17872428894043
    5. 'space' → logprob: -13.55372428894043
    6. ' =' → logprob: -13.67872428894043
    7. '=' → logprob: -13.92872428894043
    8. ',b' → logprob: -14.17872428894043
    9. ',' → logprob: -15.05372428894043
    10. '<|end|>' → logprob: -15.30372428894043

Token 43: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012511532753705978
    2. '=' → logprob: -4.387511730194092
    3. ' ' → logprob: -13.887511253356934
    4. ',' → logprob: -15.012511253356934
    5. ')' → logprob: -15.637511253356934
    6. '<|end|>' → logprob: -16.01251220703125
    7. ' =
' → logprob: -16.13751220703125
    8. ' =",' → logprob: -16.76251220703125
    9. '=line' → logprob: -16.76251220703125
    10. ' =)' → logprob: -16.76251220703125

Token 44: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.020859384909272194
    2. 'map' → logprob: -4.520859241485596
    3. ' line' → logprob: -4.645859241485596
    4. 'line' → logprob: -9.520859718322754
    5. ' ' → logprob: -10.270859718322754
    6. ' ' → logprob: -10.395859718322754
    7. ' [' → logprob: -11.895859718322754
    8. ' list' → logprob: -12.270859718322754
    9. '	map' → logprob: -12.395859718322754
    10. '[' → logprob: -12.520859718322754

Token 45: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.002859797328710556
    2. '(' → logprob: -5.877859592437744
    3. 'int' → logprob: -10.002860069274902
    4. '(str' → logprob: -12.377860069274902
    5. '(lambda' → logprob: -12.502860069274902
    6. '[int' → logprob: -14.752860069274902
    7. '<int' → logprob: -14.752860069274902
    8. ' int' → logprob: -14.877860069274902
    9. ' (' → logprob: -15.627860069274902
    10. '(
' → logprob: -16.502859115600586

Token 46: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0030290482100099325
    2. ',line' → logprob: -6.503028869628906
    3. ',' → logprob: -7.503028869628906
    4. '(' → logprob: -7.753028869628906
    5. ')' → logprob: -8.003028869628906
    6. ' line' → logprob: -8.753028869628906
    7. 'line' → logprob: -10.503028869628906
    8. '=line' → logprob: -11.753028869628906
    9. '	line' → logprob: -12.003028869628906
    10. '[line' → logprob: -12.753028869628906

Token 47: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.03365607559680939
    2. 'line' → logprob: -3.408656120300293
    3. '(line' → logprob: -12.283656120300293
    4. '	line' → logprob: -13.033656120300293
    5. '[line' → logprob: -13.283656120300293
    6. ')' → logprob: -14.283656120300293
    7. '#line' → logprob: -14.658656120300293
    8. ' ' → logprob: -15.283656120300293
    9. '=line' → logprob: -15.283656120300293
    10. ',line' → logprob: -16.033655166625977

Token 48: '.split' (ID: 10347)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.002108863089233637
    2. '.split' → logprob: -6.252109050750732
    3. '.' → logprob: -8.752108573913574
    4. ' .' → logprob: -11.127108573913574
    5. '().' → logprob: -12.502108573913574
    6. '.rstrip' → logprob: -13.252108573913574
    7. 'strip' → logprob: -14.127108573913574
    8. '.readline' → logprob: -14.252108573913574
    9. ').' → logprob: -15.002108573913574
    10. '.strptime' → logprob: -16.12710952758789

Token 49: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.03811757266521454
    2. '('' → logprob: -3.4131176471710205
    3. '(','' → logprob: -6.163117408752441
    4. '()' → logprob: -6.288117408752441
    5. '()))' → logprob: -8.038117408752441
    6. '(' → logprob: -9.788117408752441
    7. '())
' → logprob: -10.163117408752441
    8. ')' → logprob: -10.413117408752441
    9. ' ())' → logprob: -10.788117408752441
    10. '("' → logprob: -11.413117408752441

Token 50: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05158235505223274
    2. 'print' → logprob: -3.5515823364257812
    3. '        
' → logprob: -4.676582336425781
    4. '
' → logprob: -5.301582336425781
    5. '   ' → logprob: -5.801582336425781
    6. ' print' → logprob: -6.676582336425781
    7. '<|end|>' → logprob: -7.176582336425781
    8. '    
' → logprob: -7.926582336425781
    9. '```' → logprob: -8.051582336425781
    10. '  
' → logprob: -8.426582336425781

Token 51: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.17398084700107574
    2. ' print' → logprob: -1.9239808320999146
    3. '       ' → logprob: -4.298980712890625
    4. '   ' → logprob: -10.673980712890625
    5. '```' → logprob: -10.923980712890625
    6. 'result' → logprob: -11.048980712890625
    7. ' result' → logprob: -11.798980712890625
    8. '	print' → logprob: -12.423980712890625
    9. '        ' → logprob: -12.923980712890625
    10. 'pr' → logprob: -13.173980712890625

Token 52: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -0.001038287067785859
    2. '(' → logprob: -6.876038074493408
    3. '(f' → logprob: -12.501038551330566
    4. ' (' → logprob: -14.126038551330566
    5. 'g' → logprob: -14.626038551330566
    6. '(a' → logprob: -15.751038551330566
    7. '((' → logprob: -16.62603759765625
    8. '(math' → logprob: -16.62603759765625
    9. '('' → logprob: -16.75103759765625
    10. '("' → logprob: -17.00103759765625

Token 53: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -1.9361264946837764e-07
    2. 'cdn' → logprob: -16.375
    3. 'c' → logprob: -16.75
    4. '	cd' → logprob: -18.75
    5. '_cd' → logprob: -19.125
    6. ' cd' → logprob: -20.125
    7. 'cdf' → logprob: -20.25
    8. 'CD' → logprob: -20.75
    9. 'cdr' → logprob: -21.25
    10. 'cdc' → logprob: -21.375

Token 54: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.47410789132118225
    2. '(' → logprob: -0.9741078615188599
    3. '(
' → logprob: -10.47410774230957
    4. ' (' → logprob: -13.72410774230957
    5. ')' → logprob: -14.72410774230957
    6. '(b' → logprob: -14.97410774230957
    7. '(

' → logprob: -15.22410774230957
    8. 'a' → logprob: -15.34910774230957
    9. '(i' → logprob: -17.22410774230957
    10. '((' → logprob: -17.59910774230957

Token 55: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015985334757715464
    2. ',b' → logprob: -6.626598358154297
    3. ' ,' → logprob: -8.251598358154297
    4. 'b' → logprob: -12.001598358154297
    5. ',
' → logprob: -12.876598358154297
    6. ' ' → logprob: -13.376598358154297
    7. '`,' → logprob: -14.501598358154297
    8. ' b' → logprob: -15.001598358154297
    9. '',' → logprob: -16.251598358154297
    10. '   ' → logprob: -16.251598358154297

Token 56: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5759403705596924
    2. ' b' → logprob: -0.8259403705596924
    3. ')b' → logprob: -14.450940132141113
    4. ' ' → logprob: -15.700940132141113
    5. ' ' → logprob: -16.20094108581543
    6. ')' → logprob: -16.32594108581543
    7. '    ' → logprob: -16.70094108581543
    8. '	b' → logprob: -17.20094108581543
    9. ' )' → logprob: -18.70094108581543
    10. '```' → logprob: -18.82594108581543

Token 57: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.02976241149008274
    2. ')' → logprob: -3.5297625064849854
    3. '))
' → logprob: -12.029762268066406
    4. ')))' → logprob: -12.404762268066406
    5. ' ))' → logprob: -13.529762268066406
    6. ')
' → logprob: -15.404762268066406
    7. ' )' → logprob: -15.904762268066406
    8. '),' → logprob: -16.779762268066406
    9. ' ' → logprob: -17.154762268066406
    10. '   ' → logprob: -17.404762268066406


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 55
Tokens correctement prédits (1ère position, stricte): 33
Tokens correctement prédits (1ère position, avec adaptation): 34
Tokens correctement prédits (top 10): 48
Précision stricte (1ère position): 60.00%
Précision adaptée (1ère position): 61.82%
Précision (top 10): 87.27%
================================================================================
