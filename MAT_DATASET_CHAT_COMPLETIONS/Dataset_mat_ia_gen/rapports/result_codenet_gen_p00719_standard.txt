================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:01:10
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math
from heapq import heappush, heappop

def solve():
    input = sys.stdin.readline
    while True:
        n,m,p,a,b = map(int,input().split())
        if n==0 and m==0 and p==0 and a==0 and b==0:
            break
        tickets = list(map(int,input().split()))
        adj = [[] for _ in range(m+1)]
        for _ in range(p):
            x,y,z = map(int,input().split())
            adj[x].append((y,z))
            adj[y].append((x,z))
        INF = float('inf')
        dist = [[INF]*(1<<n) for _ in range(m+1)]
        dist[a][(1<<n)-1] = 0.0
        heap = [(0.0,a,(1<<n)-1)]
        while heap:
            time,u,mask = heappop(heap)
            if dist[u][mask]<time - 1e-12:
                continue
            if u==b:
                print("{0:.3f}".format(time))
                break
            for v,d in adj[u]:
                for i in range(n):
                    if mask & (1<<i):
                        nt = time + d / tickets[i]
                        nmask = mask & ~(1<<i)
                        if dist[v][nmask] > nt:
                            dist[v][nmask] = nt
                            heappush(heap,(nt,v,nmask))
        else:
            print("Impossible")

if __name__=="__main__":
    solve()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.32124805450439453
    2. '.' → logprob: -1.4462480545043945
    3. 'import' → logprob: -4.5712480545043945
    4. '\' → logprob: -4.5712480545043945
    5. 'newline' → logprob: -5.1962480545043945
    6. '<|end|>' → logprob: -5.1962480545043945
    7. '
' → logprob: -6.5712480545043945
    8. '```' → logprob: -7.0712480545043945
    9. '<|end|>' → logprob: -7.1962480545043945
    10. '\r' → logprob: -7.1962480545043945

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00012535012501757592
    2. 'os' → logprob: -9.00012493133545
    3. ' math' → logprob: -13.87512493133545
    4. '"os' → logprob: -15.12512493133545
    5. ' re' → logprob: -15.50012493133545
    6. ' o' → logprob: -15.87512493133545
    7. ' ' → logprob: -16.125125885009766
    8. ' json' → logprob: -16.250125885009766
    9. '	os' → logprob: -16.375125885009766
    10. '_os' → logprob: -17.000125885009766

Token 5: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2897878587245941
    2. 'import' → logprob: -2.539787769317627
    3. '\n' → logprob: -2.664787769317627
    4. '\' → logprob: -3.164787769317627
    5. '```' → logprob: -3.914787769317627
    6. '
' → logprob: -4.039787769317627
    7. '<|end|>' → logprob: -4.664787769317627
    8. ',' → logprob: -5.289787769317627
    9. '

' → logprob: -5.664787769317627
    10. '<|end|>' → logprob: -6.914787769317627

Token 6: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4083114266395569
    2. '\n' → logprob: -2.408311367034912
    3. 'import' → logprob: -2.533311367034912
    4. '
' → logprob: -3.033311367034912
    5. '\' → logprob: -3.408311367034912
    6. '```' → logprob: -3.658311367034912
    7. '<|end|>' → logprob: -3.783311367034912
    8. '

' → logprob: -4.408311367034912
    9. ',' → logprob: -4.533311367034912
    10. '<|end|>' → logprob: -6.158311367034912

Token 7: ' heap' (ID: 37237)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.42875221371650696
    2. ' os' → logprob: -1.1787521839141846
    3. 'collections' → logprob: -3.8037521839141846
    4. 'os' → logprob: -4.928752422332764
    5. ' datetime' → logprob: -5.178752422332764
    6. ' itertools' → logprob: -6.428752422332764
    7. ' typing' → logprob: -7.178752422332764
    8. ' numpy' → logprob: -7.303752422332764
    9. ' statistics' → logprob: -7.303752422332764
    10. ' random' → logprob: -8.178751945495605

Token 8: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -8.41866585687967e-06
    2. ' import' → logprob: -12.000008583068848
    3. 'import' → logprob: -13.375008583068848
    4. ' queue' → logprob: -15.000008583068848
    5. 'queue' → logprob: -15.750008583068848
    6. '.' → logprob: -16.62500762939453
    7. 'space' → logprob: -17.00000762939453
    8. ' q' → logprob: -17.37500762939453
    9. ' ' → logprob: -17.37500762939453
    10. 's' → logprob: -17.75000762939453

Token 9: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.020612545311450958
    2. 'import' → logprob: -3.8956124782562256
    3. '.' → logprob: -10.395612716674805
    4. ' ' → logprob: -10.520612716674805
    5. '	import' → logprob: -12.395612716674805
    6. '<|end|>' → logprob: -12.895612716674805
    7. '_import' → logprob: -13.895612716674805
    8. 'space' → logprob: -14.020612716674805
    9. ' space' → logprob: -14.145612716674805
    10. '.import' → logprob: -14.270612716674805

Token 10: ' he' (ID: 501)
  Prédit: ' he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.09225186705589294
    2. 'he' → logprob: -2.467251777648926
    3. ' n' → logprob: -5.967251777648926
    4. 'heap' → logprob: -7.967251777648926
    5. ' ' → logprob: -8.842251777648926
    6. ' heap' → logprob: -8.967251777648926
    7. 'n' → logprob: -10.092251777648926
    8. 'nl' → logprob: -10.342251777648926
    9. ' merge' → logprob: -10.842251777648926
    10. 'merge' → logprob: -11.467251777648926

Token 11: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.008912359364330769
    2. 'ap' → logprob: -4.758912563323975
    3. 'a' → logprob: -8.133912086486816
    4. 'apl' → logprob: -13.633912086486816
    5. 'aq' → logprob: -13.758912086486816
    6. 'q' → logprob: -14.258912086486816
    7. 'appa' → logprob: -14.508912086486816
    8. 'appen' → logprob: -14.633912086486816
    9. 'ап' → logprob: -15.883912086486816
    10. 'appi' → logprob: -16.133913040161133

Token 12: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -3.5716304410016164e-05
    2. 'op' → logprob: -10.250035285949707
    3. 'us' → logprob: -15.250035285949707
    4. 'u' → logprob: -17.750036239624023
    5. '```' → logprob: -18.375036239624023
    6. '[' → logprob: -18.500036239624023
    7. '   ' → logprob: -20.000036239624023
    8. 'o' → logprob: -20.000036239624023
    9. 'ut' → logprob: -20.250036239624023
    10. '

' → logprob: -20.750036239624023

Token 13: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16408853232860565
    2. 'he' → logprob: -2.164088487625122
    3. ',' → logprob: -3.539088487625122
    4. 'import' → logprob: -5.414088726043701
    5. ' (' → logprob: -6.539088726043701
    6. ' ' → logprob: -7.664088726043701
    7. '(
' → logprob: -8.039088249206543
    8. ' he' → logprob: -8.664088249206543
    9. '(heap' → logprob: -9.164088249206543
    10. ')' → logprob: -9.664088249206543

Token 14: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.20145466923713684
    2. ' he' → logprob: -1.7014546394348145
    3. 'heap' → logprob: -10.326455116271973
    4. '.he' → logprob: -12.576455116271973
    5. ' heap' → logprob: -13.576455116271973
    6. ' ' → logprob: -13.826455116271973
    7. '_he' → logprob: -14.201455116271973
    8. '```' → logprob: -14.201455116271973
    9. 'hep' → logprob: -15.076455116271973
    10. '-he' → logprob: -15.826455116271973

Token 15: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -2.935296834039036e-06
    2. 'ap' → logprob: -12.75000286102295
    3. 'appen' → logprob: -18.750003814697266
    4. 'APP' → logprob: -19.500003814697266
    5. ' app' → logprob: -19.625003814697266
    6. '_app' → logprob: -20.125003814697266
    7. 'a' → logprob: -20.250003814697266
    8. 'App' → logprob: -20.500003814697266
    9. 'appt' → logprob: -21.500003814697266
    10. '	app' → logprob: -21.750003814697266

Token 16: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.00043162284418940544
    2. 'ush' → logprob: -7.750431537628174
    3. 'o' → logprob: -14.500432014465332
    4. 'opp' → logprob: -15.750432014465332
    5. 'opl' → logprob: -16.500431060791016
    6. 'opleft' → logprob: -16.750431060791016
    7. 'p' → logprob: -17.375431060791016
    8. ' op' → logprob: -17.500431060791016
    9. 'opf' → logprob: -18.250431060791016
    10. 'оп' → logprob: -18.375431060791016

Token 17: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9653887152671814
    2. '(' → logprob: -1.7153887748718262
    3. '

' → logprob: -2.215388774871826
    4. '\n' → logprob: -2.340388774871826
    5. '(
' → logprob: -2.715388774871826
    6. '\' → logprob: -2.840388774871826
    7. 'def' → logprob: -3.215388774871826
    8. '```' → logprob: -3.840388774871826
    9. '' → logprob: -4.965388774871826
    10. '`' → logprob: -5.215388774871826

Token 18: 'def' (ID: 1314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5495002865791321
    2. 'def' → logprob: -0.9245002865791321
    3. 'class' → logprob: -4.174500465393066
    4. '\' → logprob: -5.424500465393066
    5. 'de' → logprob: -5.674500465393066
    6. '```' → logprob: -7.174500465393066
    7. '#' → logprob: -7.674500465393066
    8. '' → logprob: -7.674500465393066
    9. '(' → logprob: -8.424500465393066
    10. '`' → logprob: -8.674500465393066

Token 19: ' solve' (ID: 17722)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09655903279781342
    2. ' find' → logprob: -3.2215590476989746
    3. ' d' → logprob: -3.7215590476989746
    4. ' a' → logprob: -4.346559047698975
    5. ' shortest' → logprob: -4.596559047698975
    6. ' calculate' → logprob: -6.346559047698975
    7. ' D' → logprob: -7.221559047698975
    8. ' space' → logprob: -7.471559047698975
    9. ' compute' → logprob: -8.096558570861816
    10. ' solve' → logprob: -8.221558570861816

Token 20: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0016925542149692774
    2. '_' → logprob: -6.501692771911621
    3. ' (' → logprob: -10.376692771911621
    4. '(:' → logprob: -10.501692771911621
    5. '():' → logprob: -10.626692771911621
    6. '(_' → logprob: -11.001692771911621
    7. '_(' → logprob: -11.376692771911621
    8. '("("' → logprob: -11.876692771911621
    9. '(_:' → logprob: -12.001692771911621
    10. '(
' → logprob: -12.251692771911621

Token 21: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06693512201309204
    2. '    ' → logprob: -4.066935062408447
    3. '\' → logprob: -4.191935062408447
    4. '(' → logprob: -4.941935062408447
    5. '    
' → logprob: -4.941935062408447
    6. ' ' → logprob: -5.066935062408447
    7. ' 
' → logprob: -5.691935062408447
    8. 'n' → logprob: -5.816935062408447
    9. '(n' → logprob: -6.941935062408447
    10. '\n' → logprob: -7.441935062408447

Token 22: ' input' (ID: 3422)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11764954030513763
    2. ' n' → logprob: -2.367649555206299
    3. '   ' → logprob: -4.492649555206299
    4. ' ' → logprob: -5.992649555206299
    5. '    ' → logprob: -6.867649555206299
    6. ' input' → logprob: -7.117649555206299
    7. 'input' (adapté à ' input') → logprob: -7.992649555206299
    8. 't' → logprob: -7.992649555206299
    9. 'r' → logprob: -8.86764907836914
    10. 'd' → logprob: -9.24264907836914

Token 23: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.48878014087677
    2. '(' → logprob: -0.98878014087677
    3. '_data' → logprob: -5.3637800216674805
    4. '_line' → logprob: -5.6137800216674805
    5. '().' → logprob: -6.3637800216674805
    6. '_' → logprob: -6.6137800216674805
    7. 's' → logprob: -7.3637800216674805
    8. '('' → logprob: -7.3637800216674805
    9. '=' → logprob: -8.48878002166748
    10. ' =' → logprob: -8.48878002166748

Token 24: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.038232773542404175
    2. 'sys' → logprob: -3.2882328033447266
    3. ' input' → logprob: -8.913232803344727
    4. 'input' → logprob: -10.038232803344727
    5. '	sys' → logprob: -11.788232803344727
    6. '=sys' → logprob: -12.913232803344727
    7. '(sys' → logprob: -13.788232803344727
    8. ' lambda' → logprob: -14.288232803344727
    9. ' raw' → logprob: -14.413232803344727
    10. 'raw' → logprob: -15.163232803344727

Token 25: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00017839208885561675
    2. '.stdout' → logprob: -9.375178337097168
    3. '.' → logprob: -9.750178337097168
    4. '.readline' → logprob: -11.000178337097168
    5. '.std' → logprob: -11.250178337097168
    6. '.argv' → logprob: -12.625178337097168
    7. '.input' → logprob: -14.500178337097168
    8. '.st' → logprob: -14.750178337097168
    9. ' .' → logprob: -15.125178337097168
    10. '.standard' → logprob: -15.625178337097168

Token 26: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0026481905952095985
    2. '.read' → logprob: -6.00264835357666
    3. 'read' → logprob: -9.25264835357666
    4. '.' → logprob: -9.62764835357666
    5. '_read' → logprob: -12.00264835357666
    6. '.readlines' → logprob: -13.12764835357666
    7. ' readline' → logprob: -13.25264835357666
    8. '.Read' → logprob: -14.62764835357666
    9. '.stdin' → logprob: -15.75264835357666
    10. '.buffer' → logprob: -16.877647399902344

Token 27: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.000923965300898999
    2. '(' → logprob: -7.500924110412598
    3. '()
' → logprob: -8.000924110412598
    4. '().' → logprob: -11.000924110412598
    5. '()\' → logprob: -11.750924110412598
    6. '(
' → logprob: -12.375924110412598
    7. '()

' → logprob: -12.875924110412598
    8. ' ()' → logprob: -13.750924110412598
    9. ')' → logprob: -13.875924110412598
    10. '())' → logprob: -14.375924110412598

Token 28: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02864539623260498
    2. '   ' → logprob: -3.6536455154418945
    3. '(' → logprob: -6.6536455154418945
    4. '()
' → logprob: -7.0286455154418945
    5. ' ()' → logprob: -10.528645515441895
    6. '()\' → logprob: -10.653645515441895
    7. '()

' → logprob: -10.903645515441895
    8. ' ' → logprob: -11.278645515441895
    9. 'def' → logprob: -11.403645515441895
    10. ')' → logprob: -11.653645515441895

Token 29: ' while' (ID: 2049)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.30184587836265564
    2. '()' → logprob: -2.3018457889556885
    3. 't' → logprob: -2.3018457889556885
    4. '   ' → logprob: -2.9268457889556885
    5. ' n' → logprob: -5.801846027374268
    6. ' t' → logprob: -6.551846027374268
    7. 'T' → logprob: -7.176846027374268
    8. 'N' → logprob: -8.05184555053711
    9. '(n' → logprob: -8.30184555053711
    10. '()\' → logprob: -8.30184555053711

Token 30: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.011596382595598698
    2. 'True' → logprob: -4.511596202850342
    3. '(True' → logprob: -7.511596202850342
    4. ' ' → logprob: -13.7615966796875
    5. '=True' → logprob: -15.5115966796875
    6. '1' → logprob: -15.6365966796875
    7. ' Tru' → logprob: -15.8865966796875
    8. '  ' → logprob: -17.1365966796875
    9. '(' → logprob: -17.2615966796875
    10. ' (' → logprob: -17.5115966796875

Token 31: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0710316151380539
    2. '():' → logprob: -2.6960315704345703
    3. '(' → logprob: -7.82103157043457
    4. ',' → logprob: -8.19603157043457
    5. '):' → logprob: -8.44603157043457
    6. ' :' → logprob: -9.69603157043457
    7. ':**' → logprob: -9.94603157043457
    8. ':
' → logprob: -10.44603157043457
    9. '   ' → logprob: -11.19603157043457
    10. ' ():' → logprob: -11.32103157043457

Token 32: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24804407358169556
    2. '    ' → logprob: -1.7480440139770508
    3. ' ' → logprob: -3.373044013977051
    4. '   ' → logprob: -5.748044013977051
    5. '        ' → logprob: -5.998044013977051
    6. '      ' → logprob: -6.873044013977051
    7. '     ' → logprob: -6.873044013977051
    8. '        
' → logprob: -6.873044013977051
    9. '  ' → logprob: -7.248044013977051
    10. '(' → logprob: -7.373044013977051

Token 33: ' n' (ID: 297)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.6689265966415405
    2. ' n' → logprob: -1.1689265966415405
    3. 'n' (adapté à ' n') → logprob: -2.41892671585083
    4. 'line' → logprob: -2.91892671585083
    5. '   ' → logprob: -4.66892671585083
    6. 'data' → logprob: -5.04392671585083
    7. '    ' → logprob: -5.16892671585083
    8. ' s' → logprob: -5.54392671585083
    9. ' data' → logprob: -5.91892671585083
    10. 's' → logprob: -6.29392671585083

Token 34: ',m' (ID: 26648)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048620183020830154
    2. '=' → logprob: -3.0486202239990234
    3. '=int' → logprob: -10.548620223999023
    4. ' ' → logprob: -12.298620223999023
    5. '=input' → logprob: -14.423620223999023
    6. ',' → logprob: -14.673620223999023
    7. ' ==' → logprob: -15.298620223999023
    8. ' =
' → logprob: -15.548620223999023
    9. ' =)' → logprob: -15.548620223999023
    10. ')' → logprob: -16.673620223999023

Token 35: ',p' (ID: 14835)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05491805449128151
    2. '=' → logprob: -2.929918050765991
    3. ',' → logprob: -11.30491828918457
    4. ' ' → logprob: -11.92991828918457
    5. '=int' → logprob: -11.92991828918457
    6. ' ,' → logprob: -12.80491828918457
    7. '=input' → logprob: -13.17991828918457
    8. ')' → logprob: -13.80491828918457
    9. '  ' → logprob: -14.30491828918457
    10. '    ' → logprob: -14.42991828918457

Token 36: ',a' (ID: 26776)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740840196609497
    2. ' =' → logprob: -0.9740840196609497
    3. '=line' → logprob: -12.59908390045166
    4. ' ' → logprob: -13.47408390045166
    5. '=input' → logprob: -13.59908390045166
    6. '=int' → logprob: -15.47408390045166
    7. ',' → logprob: -15.47408390045166
    8. '＝' → logprob: -16.099084854125977
    9. '=sys' → logprob: -16.849084854125977
    10. '=p' → logprob: -16.849084854125977

Token 37: ',b' (ID: 17568)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4817159175872803
    2. ' =' → logprob: -0.9817159175872803
    3. ',b' → logprob: -5.481716156005859
    4. ' ' → logprob: -6.731716156005859
    5. ',' → logprob: -7.356716156005859
    6. 'rr' → logprob: -8.10671615600586
    7. 'b' → logprob: -8.10671615600586
    8. 'r' → logprob: -8.48171615600586
    9. 'rray' → logprob: -9.23171615600586
    10. '=line' → logprob: -9.35671615600586

Token 38: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16024067997932434
    2. ' =' → logprob: -1.910240650177002
    3. ',' → logprob: -11.16024112701416
    4. ' ' → logprob: -14.16024112701416
    5. '=input' → logprob: -14.16024112701416
    6. '=line' → logprob: -15.03524112701416
    7. ')' → logprob: -15.91024112701416
    8. '=

' → logprob: -16.410240173339844
    9. '    ' → logprob: -16.785240173339844
    10. '   ' → logprob: -17.035240173339844

Token 39: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.22120030224323273
    2. 'map' → logprob: -1.7212003469467163
    3. ' input' → logprob: -4.221200466156006
    4. 'input' → logprob: -5.346200466156006
    5. ' ' → logprob: -9.721199989318848
    6. ' list' → logprob: -10.096199989318848
    7. 'list' → logprob: -11.096199989318848
    8. '[' → logprob: -11.596199989318848
    9. ' [' → logprob: -12.221199989318848
    10. '	map' → logprob: -12.596199989318848

Token 40: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01282934658229351
    2. '<|end|>' → logprob: -4.637829303741455
    3. '(int' → logprob: -6.262829303741455
    4. '(lambda' → logprob: -7.512829303741455
    5. '(input' → logprob: -8.387829780578613
    6. '(user' → logprob: -9.637829780578613
    7. '<|end|>' → logprob: -9.887829780578613
    8. '(str' → logprob: -10.262829780578613
    9. '(
' → logprob: -10.387829780578613
    10. '(n' → logprob: -11.137829780578613

Token 41: ',input' (ID: 123014)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4416768550872803
    2. ',input' → logprob: -1.8166768550872803
    3. '(input' → logprob: -1.9416768550872803
    4. '(' → logprob: -3.1916768550872803
    5. ')' → logprob: -5.066677093505859
    6. '(sys' → logprob: -5.816677093505859
    7. 'input' → logprob: -7.941677093505859
    8. '(stdin' → logprob: -9.69167709350586
    9. '(),' → logprob: -10.31667709350586
    10. '=input' → logprob: -10.81667709350586

Token 42: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.531315314830863e-06
    2. '()' → logprob: -12.625003814697266
    3. ' ().' → logprob: -16.625003814697266
    4. ')' → logprob: -18.375003814697266
    5. '.readline' → logprob: -19.250003814697266
    6. '())' → logprob: -19.250003814697266
    7. '()
' → logprob: -20.250003814697266
    8. '.' → logprob: -20.250003814697266
    9. '('').' → logprob: -20.250003814697266
    10. '(' → logprob: -20.375003814697266

Token 43: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.4829355776309967
    2. 'strip' → logprob: -0.9829355478286743
    3. 'rstrip' → logprob: -4.732935428619385
    4. 'read' → logprob: -11.982935905456543
    5. '(split' → logprob: -12.482935905456543
    6. ' split' → logprob: -12.732935905456543
    7. ' strip' → logprob: -13.107935905456543
    8. 'rs' → logprob: -13.482935905456543
    9. 'plit' → logprob: -13.732935905456543
    10. ')' → logprob: -14.232935905456543

Token 44: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.4050675630569458
    2. ')' → logprob: -1.1550675630569458
    3. '()' → logprob: -4.030067443847656
    4. '))' → logprob: -9.030067443847656
    5. '()))' → logprob: -10.155067443847656
    6. '())
' → logprob: -10.155067443847656
    7. '(' → logprob: -10.280067443847656
    8. '('' → logprob: -12.280067443847656
    9. '(),' → logprob: -12.405067443847656
    10. ' ())' → logprob: -13.030067443847656

Token 45: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 46: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07452049851417542
    2. ' if' → logprob: -3.4495205879211426
    3. '<|end|>' → logprob: -3.9495205879211426
    4. 'if' (adapté à ' if') → logprob: -5.199520587921143
    5. '
' → logprob: -5.574520587921143
    6. '\n' → logprob: -5.824520587921143
    7. ' ' → logprob: -5.949520587921143
    8. ' 
' → logprob: -6.199520587921143
    9. '        
' → logprob: -6.449520587921143
    10. '        ' → logprob: -7.199520587921143

Token 47: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.01270176563411951
    2. 'n' → logprob: -4.762701988220215
    3. ' not' → logprob: -5.512701988220215
    4. ' ' → logprob: -10.762701988220215
    5. 'not' → logprob: -10.887701988220215
    6. ' (' → logprob: -13.387701988220215
    7. '(n' → logprob: -13.637701988220215
    8. '	n' → logprob: -14.137701988220215
    9. ' ' → logprob: -15.137701988220215
    10. '(not' → logprob: -18.0127010345459

Token 48: '==' (ID: 560)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.22562392055988312
    2. '==' → logprob: -1.6006239652633667
    3. ' ' → logprob: -9.100624084472656
    4. '=' → logprob: -10.475624084472656
    5. ' <' → logprob: -10.975624084472656
    6. ')==' → logprob: -11.100624084472656
    7. '<' → logprob: -11.725624084472656
    8. ' =' → logprob: -11.975624084472656
    9. ')' → logprob: -12.225624084472656
    10. ' ' → logprob: -12.725624084472656

Token 49: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002613358374219388
    2. ' ' → logprob: -8.250261306762695
    3. '۰' → logprob: -17.125261306762695
    4. '```' → logprob: -17.750261306762695
    5. '-' → logprob: -17.875261306762695
    6. '  ' → logprob: -18.625261306762695
    7. '   ' → logprob: -18.875261306762695
    8. '    ' → logprob: -19.000261306762695
    9. '０' → logprob: -19.312761306762695
    10. '_' → logprob: -19.500261306762695

Token 50: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03754444792866707
    2. 'and' → logprob: -3.7875444889068604
    3. ':' → logprob: -4.287544250488281
    4. ' or' → logprob: -8.037544250488281
    5. ' ' → logprob: -9.037544250488281
    6. ' :' → logprob: -11.912544250488281
    7. '	and' → logprob: -12.162544250488281
    8. ' a' → logprob: -13.662544250488281
    9. ' ' → logprob: -14.162544250488281
    10. ':return' → logprob: -14.412544250488281

Token 51: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.5759406089782715
    2. ' m' → logprob: -0.8259406089782715
    3. '	m' → logprob: -14.07594108581543
    4. ' ' → logprob: -15.82594108581543
    5. '<|end|>' → logprob: -15.95094108581543
    6. ' ' → logprob: -16.45094108581543
    7. '   ' → logprob: -18.07594108581543
    8. ',m' → logprob: -18.20094108581543
    9. '<m' → logprob: -18.32594108581543
    10. ')m' → logprob: -18.45094108581543

Token 52: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -7.147740689106286e-05
    2. ' ==' → logprob: -9.62507152557373
    3. '===' → logprob: -13.50007152557373
    4. '<|end|>' → logprob: -13.50007152557373
    5. '=' → logprob: -13.87507152557373
    6. '==
' → logprob: -14.87507152557373
    7. ']==' → logprob: -15.00007152557373
    8. '()==' → logprob: -15.37507152557373
    9. '```' → logprob: -15.37507152557373
    10. ')==' → logprob: -15.75007152557373

Token 53: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.506661833962426e-05
    2. ' ' → logprob: -9.37508487701416
    3. '<|end|>' → logprob: -16.250085830688477
    4. 'and' → logprob: -18.000085830688477
    5. '  ' → logprob: -19.000085830688477
    6. '   ' → logprob: -19.250085830688477
    7. '۰' → logprob: -19.250085830688477
    8. ' and' → logprob: -19.375085830688477
    9. '```' → logprob: -19.500085830688477
    10. '<|end|>' → logprob: -19.750085830688477

Token 54: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.016315167769789696
    2. 'and' → logprob: -4.14131498336792
    3. '<|end|>' → logprob: -8.641315460205078
    4. '<|end|>' → logprob: -9.516315460205078
    5. '	and' → logprob: -10.766315460205078
    6. ' ' → logprob: -12.016315460205078
    7. '0' → logprob: -13.391315460205078
    8. ' и' → logprob: -15.016315460205078
    9. ':' → logprob: -15.141315460205078
    10. '   ' → logprob: -15.391315460205078

Token 55: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.12695498764514923
    2. ' p' → logprob: -2.126955032348633
    3. '0' → logprob: -10.751955032348633
    4. ' ' → logprob: -12.376955032348633
    5. '	p' → logprob: -14.501955032348633
    6. ' and' → logprob: -15.501955032348633
    7. '&p' → logprob: -16.376955032348633
    8. 'and' → logprob: -16.626955032348633
    9. '<p' → logprob: -16.626955032348633
    10. '<|end|>' → logprob: -16.751955032348633

Token 56: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0011821311200037599
    2. ' ==' → logprob: -6.7511820793151855
    3. '=' → logprob: -12.501182556152344
    4. ')==' → logprob: -12.751182556152344
    5. ' and' → logprob: -13.501182556152344
    6. '()==' → logprob: -13.751182556152344
    7. ']==' → logprob: -14.376182556152344
    8. '==-' → logprob: -14.626182556152344
    9. 'and' → logprob: -14.876182556152344
    10. '==(' → logprob: -15.001182556152344

Token 57: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00015872348740231246
    2. ' ' → logprob: -8.750158309936523
    3. '<|end|>' → logprob: -16.250158309936523
    4. 'and' → logprob: -16.375158309936523
    5. ' and' → logprob: -17.250158309936523
    6. '<|end|>' → logprob: -18.000158309936523
    7. '  ' → logprob: -18.125158309936523
    8. '۰' → logprob: -18.500158309936523
    9. '```' → logprob: -18.937658309936523
    10. '   ' → logprob: -19.062658309936523

Token 58: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04302122816443443
    2. 'and' → logprob: -3.1680212020874023
    3. '	and' → logprob: -11.168021202087402
    4. ' ' → logprob: -12.168021202087402
    5. '0' → logprob: -14.293021202087402
    6. ':' → logprob: -14.543021202087402
    7. '```' → logprob: -14.793021202087402
    8. ' и' → logprob: -14.793021202087402
    9. '   ' → logprob: -14.918021202087402
    10. '<|end|>' → logprob: -15.668021202087402

Token 59: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5240598917007446
    2. ' a' → logprob: -0.8990598917007446
    3. '0' → logprob: -7.524059772491455
    4. ' ' → logprob: -7.899059772491455
    5. '	a' → logprob: -10.899060249328613
    6. ' n' → logprob: -13.024060249328613
    7. '   ' → logprob: -13.524060249328613
    8. 'n' → logprob: -13.649060249328613
    9. '  ' → logprob: -14.149060249328613
    10. ' b' → logprob: -15.899060249328613

Token 60: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -2.3676733690081164e-05
    2. ' ==' → logprob: -10.75002384185791
    3. '0' → logprob: -14.12502384185791
    4. 'and' → logprob: -14.50002384185791
    5. '==
' → logprob: -14.75002384185791
    6. '```' → logprob: -15.75002384185791
    7. '()==' → logprob: -16.000022888183594
    8. '==-' → logprob: -16.375022888183594
    9. '=' → logprob: -16.500022888183594
    10. ')==' → logprob: -17.375022888183594

Token 61: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11696353554725647
    2. ' ' → logprob: -2.2419636249542236
    3. 'b' → logprob: -5.6169633865356445
    4. ' b' → logprob: -7.6169633865356445
    5. '  ' → logprob: -13.366963386535645
    6. '   ' → logprob: -13.616963386535645
    7. ' and' → logprob: -14.554463386535645
    8. 'and' → logprob: -14.929463386535645
    9. '1' → logprob: -15.116963386535645
    10. '```' → logprob: -15.554463386535645

Token 62: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.01618299074470997
    2. 'and' → logprob: -4.141182899475098
    3. ' ' → logprob: -8.891182899475098
    4. '0' → logprob: -11.891182899475098
    5. '```' → logprob: -13.891182899475098
    6. '	and' → logprob: -14.016182899475098
    7. 'a' → logprob: -14.641182899475098
    8. ' ' → logprob: -14.641182899475098
    9. '<|end|>' → logprob: -14.766182899475098
    10. ' a' → logprob: -15.516182899475098

Token 63: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3490874767303467
    2. ' b' → logprob: -1.3490874767303467
    3. '0' → logprob: -3.4740874767303467
    4. ' ' → logprob: -5.474087715148926
    5. '   ' → logprob: -12.599087715148926
    6. '  ' → logprob: -12.724087715148926
    7. '	b' → logprob: -14.474087715148926
    8. ' ' → logprob: -15.724087715148926
    9. ' and' → logprob: -15.849087715148926
    10. '<|end|>' → logprob: -16.72408676147461

Token 64: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.003234394360333681
    2. ' ==' → logprob: -5.753234386444092
    3. '()==' → logprob: -10.25323486328125
    4. ')==' → logprob: -11.62823486328125
    5. '0' → logprob: -11.75323486328125
    6. ']==' → logprob: -12.87823486328125
    7. '=' → logprob: -14.00323486328125
    8. '==(' → logprob: -14.87823486328125
    9. '==
' → logprob: -15.00323486328125
    10. '===' → logprob: -16.25323486328125

Token 65: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.5597102396423e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -17.000036239624023
    4. '<|end|>' → logprob: -17.500036239624023
    5. '۰' → logprob: -18.000036239624023
    6. '  ' → logprob: -18.187536239624023
    7. '<|end|>' → logprob: -18.375036239624023
    8. '```' → logprob: -18.687536239624023
    9. '1' → logprob: -19.375036239624023
    10. '০' → logprob: -19.687536239624023

Token 66: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003360582049936056
    2. ':
' → logprob: -8.125335693359375
    3. ':return' → logprob: -10.625335693359375
    4. ' :' → logprob: -12.125335693359375
    5. '       ' → logprob: -12.250335693359375
    6. '   ' → logprob: -12.500335693359375
    7. '):' → logprob: -13.625335693359375
    8. '           ' → logprob: -14.875335693359375
    9. ':
' → logprob: -17.125335693359375
    10. ' break' → logprob: -17.250335693359375

Token 67: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08916660398244858
    2. '       ' → logprob: -2.4641666412353516
    3. ':' → logprob: -9.589166641235352
    4. '\n' → logprob: -9.839166641235352
    5. ' break' → logprob: -10.339166641235352
    6. '   ' → logprob: -10.839166641235352
    7. '          ' → logprob: -11.714166641235352
    8. '               ' → logprob: -11.964166641235352
    9. '\' → logprob: -12.214166641235352
    10. '
' → logprob: -12.339166641235352

Token 68: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.7063467502593994
    2. ' break' → logprob: -0.9563467502593994
    3. '           ' → logprob: -2.4563467502593994
    4. 'return' → logprob: -3.4563467502593994
    5. ' return' → logprob: -5.70634651184082
    6. '       ' → logprob: -6.70634651184082
    7. '               ' → logprob: -8.33134651184082
    8. '	break' → logprob: -9.20634651184082
    9. '   ' → logprob: -10.08134651184082
    10. '```' → logprob: -11.08134651184082

Token 69: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.054031867533922195
    2. '<|end|>' → logprob: -3.0540318489074707
    3. '       ' → logprob: -5.679031848907471
    4. '        
' → logprob: -7.304031848907471
    5. '<|end|>' → logprob: -7.304031848907471
    6. '
' → logprob: -8.429032325744629
    7. ' 
' → logprob: -8.929032325744629
    8. '    
' → logprob: -9.429032325744629
    9. '  
' → logprob: -9.554032325744629
    10. '\n' → logprob: -9.679032325744629

Token 70: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36042582988739014
    2. '        
' → logprob: -1.7354258298873901
    3. '<|end|>' → logprob: -2.9854259490966797
    4. '
' → logprob: -3.1104259490966797
    5. ' 
' → logprob: -4.73542594909668
    6. '        ' → logprob: -4.86042594909668
    7. '\n' → logprob: -5.36042594909668
    8. '  
' → logprob: -6.73542594909668
    9. '    
' → logprob: -6.73542594909668
    10. '<|end|>' → logprob: -6.98542594909668

Token 71: ' tickets' (ID: 17323)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.61909419298172
    2. ' graph' → logprob: -1.2440941333770752
    3. '       ' → logprob: -2.244094133377075
    4. 'dist' → logprob: -3.369094133377075
    5. '        
' → logprob: -5.494094371795654
    6. ' dist' → logprob: -5.494094371795654
    7. ' edges' → logprob: -5.744094371795654
    8. '   ' → logprob: -5.869094371795654
    9. 'd' → logprob: -6.494094371795654
    10. 'distance' → logprob: -6.494094371795654

Token 72: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0036342807579785585
    2. '=' → logprob: -5.628634452819824
    3. '=[]' → logprob: -11.128634452819824
    4. ' ' → logprob: -12.128634452819824
    5. ',' → logprob: -12.378634452819824
    6. '_' → logprob: -13.003634452819824
    7. 's' → logprob: -13.503634452819824
    8. ' =[' → logprob: -13.753634452819824
    9. ' =
' → logprob: -14.003634452819824
    10. '[' → logprob: -14.128634452819824

Token 73: ' list' (ID: 1562)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.25419938564300537
    2. ' []' → logprob: -1.5041993856430054
    3. '[' → logprob: -6.254199504852295
    4. ' [' → logprob: -8.129199028015137
    5. '{}' → logprob: -11.379199028015137
    6. '[]
' → logprob: -11.504199028015137
    7. '[]}' → logprob: -11.879199028015137
    8. ' [[]' → logprob: -12.129199028015137
    9. '[][]' → logprob: -12.754199028015137
    10. '[list' → logprob: -13.004199028015137

Token 74: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002322364365682006
    2. '(range' → logprob: -6.627322196960449
    3. '(map' → logprob: -7.627322196960449
    4. '()' → logprob: -8.75232219696045
    5. '<|end|>' → logprob: -8.75232219696045
    6. '(int' → logprob: -9.87732219696045
    7. '<|end|>' → logprob: -10.50232219696045
    8. '(
' → logprob: -11.00232219696045
    9. '(lambda' → logprob: -11.87732219696045
    10. '(filter' → logprob: -12.00232219696045

Token 75: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.000853466335684061
    2. '(' → logprob: -7.375853538513184
    3. '[int' → logprob: -9.125853538513184
    4. '<int' → logprob: -10.125853538513184
    5. 'int' → logprob: -10.250853538513184
    6. '<|end|>' → logprob: -11.000853538513184
    7. ']int' → logprob: -11.875853538513184
    8. '=int' → logprob: -12.000853538513184
    9. ')' → logprob: -12.125853538513184
    10. ',int' → logprob: -12.375853538513184

Token 76: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.020916592329740524
    2. ',' → logprob: -4.14591646194458
    3. '(input' → logprob: -5.39591646194458
    4. '(' → logprob: -8.020916938781738
    5. 'input' → logprob: -13.145916938781738
    6. ')' → logprob: -13.520916938781738
    7. ',(' → logprob: -14.020916938781738
    8. ' ,' → logprob: -14.395916938781738
    9. ',int' → logprob: -15.020916938781738
    10. '),' → logprob: -15.645916938781738

Token 77: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00018232580623589456
    2. '()' → logprob: -8.625182151794434
    3. ' ().' → logprob: -13.250182151794434
    4. '(' → logprob: -14.875182151794434
    5. ')' → logprob: -15.250182151794434
    6. '.readline' → logprob: -16.75018310546875
    7. '()-' → logprob: -16.75018310546875
    8. '()))' → logprob: -17.00018310546875
    9. '())' → logprob: -17.12518310546875
    10. '.' → logprob: -17.25018310546875

Token 78: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.0564331205387134e-05
    2. 'strip' → logprob: -11.75001049041748
    3. 'rstrip' → logprob: -13.00001049041748
    4. ' split' → logprob: -15.62501049041748
    5. 'spl' → logprob: -16.000011444091797
    6. 'read' → logprob: -16.000011444091797
    7. '(split' → logprob: -17.500011444091797
    8. 's' → logprob: -18.250011444091797
    9. '_split' → logprob: -20.625011444091797
    10. 'plit' → logprob: -20.625011444091797

Token 79: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0570734366774559
    2. '()' → logprob: -3.6820733547210693
    3. '))' → logprob: -4.057073593139648
    4. '())' → logprob: -4.432073593139648
    5. ')' → logprob: -7.307073593139648
    6. '(' → logprob: -7.932073593139648
    7. '()))
' → logprob: -10.432073593139648
    8. '()));' → logprob: -10.807073593139648
    9. '(),' → logprob: -11.432073593139648
    10. '()))

' → logprob: -12.557073593139648

Token 80: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2785337269306183
    2. ')' → logprob: -2.528533697128296
    3. '        
' → logprob: -2.903533697128296
    4. '<|end|>' → logprob: -3.153533697128296
    5. '        ' → logprob: -3.528533697128296
    6. ' ' → logprob: -3.903533697128296
    7. '[' → logprob: -6.403533935546875
    8. '    ' → logprob: -6.403533935546875
    9. '#' → logprob: -6.403533935546875
    10. '  ' → logprob: -6.903533935546875

Token 81: ' adj' (ID: 20251)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.8542920351028442
    2. ' graph' → logprob: -1.2292920351028442
    3. 'dist' → logprob: -2.4792919158935547
    4. '       ' → logprob: -3.1042919158935547
    5. 'edges' → logprob: -3.9792919158935547
    6. ' edges' → logprob: -3.9792919158935547
    7. 'dp' → logprob: -3.9792919158935547
    8. 'd' → logprob: -4.604291915893555
    9. ' dist' → logprob: -4.604291915893555
    10. 'c' → logprob: -4.854291915893555

Token 82: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04395667091012001
    2. '=' → logprob: -3.293956756591797
    3. '[' → logprob: -5.293956756591797
    4. 'acency' → logprob: -7.918956756591797
    5. '=[]' → logprob: -8.418956756591797
    6. '   ' → logprob: -9.543956756591797
    7. ',' → logprob: -10.043956756591797
    8. '=[' → logprob: -10.043956756591797
    9. '[]' → logprob: -10.293956756591797
    10. ' =[' → logprob: -10.668956756591797

Token 83: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07917563617229462
    2. ' [[]' → logprob: -2.5791757106781006
    3. '{' → logprob: -8.82917594909668
    4. ' [' → logprob: -9.57917594909668
    5. '{}' → logprob: -10.32917594909668
    6. '[]' → logprob: -10.95417594909668
    7. ' [{}' → logprob: -11.32917594909668
    8. 'default' → logprob: -12.20417594909668
    9. '   ' → logprob: -14.32917594909668
    10. ' {' → logprob: -14.32917594909668

Token 84: ' for' (ID: 395)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.24032320082187653
    2. '(' → logprob: -2.365323305130005
    3. 'for' → logprob: -2.615323305130005
    4. ' for' → logprob: -3.115323305130005
    5. ')' → logprob: -7.240323066711426
    6. ' (' → logprob: -7.365323066711426
    7. ']' → logprob: -8.115323066711426
    8. '       ' → logprob: -8.990323066711426
    9. '(m' → logprob: -9.490323066711426
    10. '(range' → logprob: -9.490323066711426

Token 85: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0384935140609741
    2. ' range' → logprob: -1.1634935140609741
    3. 'range' → logprob: -1.4134935140609741
    4. ' in' → logprob: -3.0384936332702637
    5. ' _' → logprob: -3.6634936332702637
    6. '(range' → logprob: -4.163493633270264
    7. 'in' → logprob: -7.913493633270264
    8. '_range' → logprob: -7.913493633270264
    9. '(' → logprob: -8.038493156433105
    10. '(_' → logprob: -9.788493156433105

Token 86: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7150779962539673
    2. 'range' → logprob: -1.0900779962539673
    3. 'in' → logprob: -1.8400779962539673
    4. ' range' → logprob: -4.215077877044678
    5. '(range' → logprob: -6.965077877044678
    6. 'n' → logprob: -9.965078353881836
    7. '(n' → logprob: -10.090078353881836
    8. 'i' → logprob: -12.090078353881836
    9. ' ' → logprob: -12.215078353881836
    10. '(' → logprob: -12.340078353881836

Token 87: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07889121770858765
    2. ' range' → logprob: -2.5788912773132324
    3. '(range' → logprob: -14.453890800476074
    4. '	range' → logprob: -14.953890800476074
    5. ' ' → logprob: -15.203890800476074
    6. '   ' → logprob: -16.20389175415039
    7. 'r' → logprob: -16.45389175415039
    8. 'ran' → logprob: -17.20389175415039
    9. 'rang' → logprob: -17.32889175415039
    10. '  ' → logprob: -18.07889175415039

Token 88: '(m' (ID: 2145)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -4.024604277219623e-05
    2. '(' → logprob: -10.125040054321289
    3. '(m' → logprob: -16.50004005432129
    4. '(N' → logprob: -18.50004005432129
    5. '((' → logprob: -18.62504005432129
    6. ' (' → logprob: -19.37504005432129
    7. 'n' → logprob: -19.37504005432129
    8. '(
' → logprob: -19.87504005432129
    9. ')n' → logprob: -19.87504005432129
    10. '(a' → logprob: -20.00004005432129

Token 89: '+' (ID: 10)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00013333676906768233
    2. ' )' → logprob: -9.250133514404297
    3. '+' → logprob: -10.625133514404297
    4. ')' → logprob: -11.375133514404297
    5. ' ' → logprob: -15.125133514404297
    6. ')]
' → logprob: -15.125133514404297
    7. ']' → logprob: -15.250133514404297
    8. ')])' → logprob: -16.000133514404297
    9. ' +' → logprob: -16.375133514404297
    10. ' ]' → logprob: -16.500133514404297

Token 90: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00013512482109945267
    2. ' ' → logprob: -9.50013542175293
    3. '2' → logprob: -10.00013542175293
    4. 'n' → logprob: -11.25013542175293
    5. 'a' → logprob: -14.00013542175293
    6. 'm' → logprob: -14.87513542175293
    7. ' n' → logprob: -15.81263542175293
    8. '   ' → logprob: -16.75013542175293
    9. '0' → logprob: -16.75013542175293
    10. '3' → logprob: -17.31263542175293

Token 91: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00014585316239390522
    2. ')' → logprob: -9.00014591217041
    3. ']' → logprob: -11.00014591217041
    4. ' )' → logprob: -12.75014591217041
    5. ')]
' → logprob: -14.25014591217041
    6. ')])' → logprob: -14.50014591217041
    7. '])' → logprob: -15.00014591217041
    8. ' ' → logprob: -15.37514591217041
    9. ' ]' → logprob: -15.50014591217041
    10. ')],' → logprob: -15.62514591217041

Token 92: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 93: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4300306737422943
    2. '<|end|>' → logprob: -1.8050307035446167
    3. ' for' → logprob: -2.055030584335327
    4. ' ' → logprob: -3.180030584335327
    5. '       ' → logprob: -4.930030822753906
    6. '   ' → logprob: -5.555030822753906
    7. '	for' → logprob: -7.055030822753906
    8. '  ' → logprob: -7.180030822753906
    9. '    ' → logprob: -7.305030822753906
    10. '<|end|>' → logprob: -7.680030822753906

Token 94: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.0006750239408574998
    2. '_' → logprob: -7.375675201416016
    3. ' ' → logprob: -10.375675201416016
    4. ' i' → logprob: -11.000675201416016
    5. '_i' → logprob: -15.250675201416016
    6. ' __' → logprob: -15.750675201416016
    7. ' ' → logprob: -16.875675201416016
    8. ' ‌' → logprob: -17.250675201416016
    9. 'i' → logprob: -17.750675201416016
    10. ' _
' → logprob: -18.125675201416016

Token 95: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.18260860443115234
    2. ' in' → logprob: -1.8076086044311523
    3. ' ' → logprob: -5.932608604431152
    4. 'range' → logprob: -9.307608604431152
    5. 'import' → logprob: -10.807608604431152
    6. '  ' → logprob: -10.932608604431152
    7. '_' → logprob: -11.307608604431152
    8. 'i' → logprob: -11.682608604431152
    9. ' _' → logprob: -12.057608604431152
    10. ')' → logprob: -12.182608604431152

Token 96: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02054421976208687
    2. ' range' → logprob: -3.8955442905426025
    3. ' ' → logprob: -13.770544052124023
    4. 'r' → logprob: -15.020544052124023
    5. '	range' → logprob: -15.145544052124023
    6. '(range' → logprob: -15.270544052124023
    7. 'rang' → logprob: -15.645544052124023
    8. '  ' → logprob: -16.020544052124023
    9. 'ange' → logprob: -16.520544052124023
    10. 'ran' → logprob: -16.645544052124023

Token 97: '(p' (ID: 2407)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.00010914575977949426
    2. '(n' → logprob: -9.62510871887207
    3. '(' → logprob: -10.50010871887207
    4. ' (' → logprob: -11.87510871887207
    5. '(p' → logprob: -12.75010871887207
    6. 'm' → logprob: -12.87510871887207
    7. '(a' → logprob: -13.50010871887207
    8. ' m' → logprob: -14.25010871887207
    9. '(M' → logprob: -14.62510871887207
    10. '   ' → logprob: -16.00010871887207

Token 98: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0038677770644426346
    2. '):
' → logprob: -5.8788676261901855
    3. ' ):' → logprob: -6.8788676261901855
    4. ':' → logprob: -10.753868103027344
    5. ' ):
' → logprob: -12.878868103027344
    6. '):
' → logprob: -13.128868103027344
    7. ')' → logprob: -13.753868103027344
    8. ' ' → logprob: -13.878868103027344
    9. ']:' → logprob: -13.878868103027344
    10. '<|end|>' → logprob: -14.003868103027344

Token 99: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30711495876312256
    2. '           ' → logprob: -2.057115077972412
    3. '<|end|>' → logprob: -3.057115077972412
    4. ' ' → logprob: -3.432115077972412
    5. '        ' → logprob: -4.057115077972412
    6. '   ' → logprob: -4.432115077972412
    7. ',' → logprob: -4.682115077972412
    8. '    ' → logprob: -5.182115077972412
    9. '        
' → logprob: -5.807115077972412
    10. '<|end|>' → logprob: -6.432115077972412

Token 100: ' x' (ID: 1215)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.058542169630527496
    2. ' u' → logprob: -3.308542251586914
    3. 'x' (adapté à ' x') → logprob: -4.058542251586914
    4. 'c' → logprob: -6.808542251586914
    5. 's' → logprob: -7.308542251586914
    6. '   ' → logprob: -7.808542251586914
    7. ' x' → logprob: -7.933542251586914
    8. 'f' → logprob: -8.808542251586914
    9. 'U' → logprob: -9.308542251586914
    10. ' c' → logprob: -10.433542251586914

Token 101: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0037287031300365925
    2. ',y' → logprob: -6.003728866577148
    3. ' ,' → logprob: -6.878728866577148
    4. ',b' → logprob: -9.253728866577148
    5. ',x' → logprob: -10.378728866577148
    6. ',a' → logprob: -11.003728866577148
    7. ',n' → logprob: -11.128728866577148
    8. ',m' → logprob: -11.378728866577148
    9. ',v' → logprob: -11.628728866577148
    10. ',p' → logprob: -11.628728866577148

Token 102: ',z' (ID: 54920)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.024517251178622246
    2. ',w' → logprob: -4.649517059326172
    3. ' ,' → logprob: -5.024517059326172
    4. ',c' → logprob: -5.774517059326172
    5. ',z' → logprob: -6.524517059326172
    6. ',p' → logprob: -7.649517059326172
    7. ',d' → logprob: -7.899517059326172
    8. ',k' → logprob: -7.899517059326172
    9. ',x' → logprob: -7.899517059326172
    10. ',n' → logprob: -8.274517059326172

Token 103: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14313282072544098
    2. '=' → logprob: -2.0181329250335693
    3. ',' → logprob: -7.76813268661499
    4. ' ' → logprob: -10.893133163452148
    5. '=input' → logprob: -11.768133163452148
    6. ' ,' → logprob: -12.768133163452148
    7. '=int' → logprob: -13.143133163452148
    8. '  ' → logprob: -14.518133163452148
    9. '=sys' → logprob: -15.018133163452148
    10. ')' → logprob: -15.018133163452148

Token 104: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.008614926598966122
    2. 'map' → logprob: -4.758615016937256
    3. '	map' → logprob: -15.008614540100098
    4. ' ' → logprob: -16.258615493774414
    5. ' list' → logprob: -17.508615493774414
    6. '    ' → logprob: -17.508615493774414
    7. '   ' → logprob: -18.133615493774414
    8. '  ' → logprob: -18.508615493774414
    9. 'm' → logprob: -18.633615493774414
    10. ' ' → logprob: -18.758615493774414

Token 105: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00016861737822182477
    2. '(' → logprob: -8.750168800354004
    3. '<int' → logprob: -12.375168800354004
    4. '[int' → logprob: -13.375168800354004
    5. '=int' → logprob: -13.625168800354004
    6. 'int' → logprob: -13.875168800354004
    7. ' (' → logprob: -13.875168800354004
    8. ',int' → logprob: -15.000168800354004
    9. '<|end|>' → logprob: -15.000168800354004
    10. ']int' → logprob: -15.375168800354004

Token 106: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.00024370834580622613
    2. ',int' → logprob: -9.125244140625
    3. ',' → logprob: -9.250244140625
    4. '(input' → logprob: -10.250244140625
    5. ' ,' → logprob: -13.375244140625
    6. '(' → logprob: -13.625244140625
    7. 'input' → logprob: -15.250244140625
    8. '<input' → logprob: -16.625244140625
    9. '   ' → logprob: -16.625244140625
    10. ',(' → logprob: -17.000244140625

Token 107: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -9.13388703338569e-06
    2. '.' → logprob: -11.750009536743164
    3. '()' → logprob: -14.250009536743164
    4. ' ().' → logprob: -14.750009536743164
    5. ')' → logprob: -17.500009536743164
    6. '.split' → logprob: -17.625009536743164
    7. ' .' → logprob: -17.875009536743164
    8. '   ' → logprob: -18.125009536743164
    9. '>().' → logprob: -18.375009536743164
    10. '(' → logprob: -18.625009536743164

Token 108: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.320199877838604e-07
    2. 'spl' → logprob: -15.375
    3. ' split' → logprob: -16.125
    4. 'strip' → logprob: -16.875
    5. 'rstrip' → logprob: -17.5
    6. '(split' → logprob: -18.125
    7. 'read' → logprob: -19.0
    8. ')' → logprob: -19.5
    9. '.split' → logprob: -19.625
    10. '_split' → logprob: -19.875

Token 109: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06394177675247192
    2. '())' → logprob: -3.063941717147827
    3. '()' → logprob: -4.188941955566406
    4. ')
' → logprob: -10.688941955566406
    5. '())
' → logprob: -11.188941955566406
    6. ' )' → logprob: -11.188941955566406
    7. '))' → logprob: -11.438941955566406
    8. '(' → logprob: -12.063941955566406
    9. '()
' → logprob: -13.563941955566406
    10. ')`' → logprob: -14.063941955566406

Token 110: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10736098885536194
    2. '<|end|>' → logprob: -2.482361078262329
    3. '
' → logprob: -4.48236083984375
    4. '            
' → logprob: -6.35736083984375
    5. '<|end|>' → logprob: -6.48236083984375
    6. '       ' → logprob: -6.60736083984375
    7. ')' → logprob: -7.35736083984375
    8. ' 
' → logprob: -8.23236083984375
    9. ' ' → logprob: -8.35736083984375
    10. '               ' → logprob: -8.35736083984375

Token 111: ' adj' (ID: 20251)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3693515658378601
    2. ' adj' → logprob: -1.4943516254425049
    3. 'adj' (adapté à ' adj') → logprob: -2.619351625442505
    4. '
' → logprob: -4.744351387023926
    5. '   ' → logprob: -7.244351387023926
    6. ' if' → logprob: -7.369351387023926
    7. '       ' → logprob: -7.869351387023926
    8. '            
' → logprob: -8.119351387023926
    9. 'if' → logprob: -8.744351387023926
    10. ' 
' → logprob: -8.744351387023926

Token 112: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -1.0683535037969705e-05
    2. '[' → logprob: -11.62501049041748
    3. '[y' → logprob: -13.87501049041748
    4. ' [' → logprob: -14.62501049041748
    5. 'x' → logprob: -16.625011444091797
    6. '```' → logprob: -17.125011444091797
    7. '[s' → logprob: -17.250011444091797
    8. '[a' → logprob: -17.500011444091797
    9. '[int' → logprob: -18.375011444091797
    10. '[u' → logprob: -18.375011444091797

Token 113: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.027922984212636948
    2. ').' → logprob: -3.6529228687286377
    3. '[' → logprob: -7.652923107147217
    4. '.' → logprob: -7.777923107147217
    5. '.append' → logprob: -8.027922630310059
    6. ')' → logprob: -8.402922630310059
    7. ']' → logprob: -9.027922630310059
    8. '   ' → logprob: -10.652922630310059
    9. '       ' → logprob: -11.402922630310059
    10. ' ].' → logprob: -12.652922630310059

Token 114: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -4.246537173457909e-06
    2. '.append' → logprob: -13.250003814697266
    3. ' append' → logprob: -13.375003814697266
    4. ' ' → logprob: -15.000003814697266
    5. 'app' → logprob: -15.750003814697266
    6. 'push' → logprob: -15.750003814697266
    7. 'appen' → logprob: -15.875003814697266
    8. 'Append' → logprob: -17.250003814697266
    9. '_append' → logprob: -17.500003814697266
    10. '	append' → logprob: -17.875003814697266

Token 115: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00248909555375576
    2. '(' → logprob: -6.00248908996582
    3. '(y' → logprob: -11.25248908996582
    4. '([' → logprob: -15.75248908996582
    5. ' ((' → logprob: -15.87748908996582
    6. ' (' → logprob: -15.87748908996582
    7. '(x' → logprob: -16.37748908996582
    8. '(
' → logprob: -17.75248908996582
    9. ' ' → logprob: -17.87748908996582
    10. '(('' → logprob: -18.00248908996582

Token 116: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0019293478690087795
    2. ' y' → logprob: -6.25192928314209
    3. ',y' → logprob: -15.37692928314209
    4. '	y' → logprob: -15.50192928314209
    5. ')y' → logprob: -15.75192928314209
    6. ''y' → logprob: -16.126930236816406
    7. '(y' → logprob: -16.251930236816406
    8. ' ' → logprob: -17.001930236816406
    9. '   ' → logprob: -17.251930236816406
    10. ',' → logprob: -17.501930236816406

Token 117: ',z' (ID: 54920)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2040245682001114
    2. ',z' → logprob: -1.7040245532989502
    3. ' ,' → logprob: -5.954024791717529
    4. ',y' → logprob: -13.329024314880371
    5. ',n' → logprob: -13.329024314880371
    6. ',w' → logprob: -13.829024314880371
    7. ',x' → logprob: -13.954024314880371
    8. ',b' → logprob: -14.079024314880371
    9. ',int' → logprob: -14.579024314880371
    10. ',j' → logprob: -14.579024314880371

Token 118: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0020111948251724243
    2. ' ))' → logprob: -6.377011299133301
    3. ')' → logprob: -8.8770112991333
    4. ',' → logprob: -9.5020112991333
    5. '))
' → logprob: -9.5020112991333
    6. ')))' → logprob: -11.8770112991333
    7. ' )' → logprob: -12.6270112991333
    8. ' ' → logprob: -13.1270112991333
    9. '));' → logprob: -13.2520112991333
    10. '),' → logprob: -13.6270112991333

Token 119: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24365836381912231
    2. '<|end|>' → logprob: -1.8686583042144775
    3. '       ' → logprob: -3.4936583042144775
    4. '
' → logprob: -4.618658542633057
    5. '        
' → logprob: -5.368658542633057
    6. ',' → logprob: -5.368658542633057
    7. '<|end|>' → logprob: -5.868658542633057
    8. ' ' → logprob: -5.993658542633057
    9. '        ' → logprob: -7.118658542633057
    10. '   ' → logprob: -7.118658542633057

Token 120: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' (adapté à ' adj') → logprob: -0.15119248628616333
    2. ' adj' → logprob: -2.0261924266815186
    3. '           ' → logprob: -4.776192665100098
    4. '<|end|>' → logprob: -10.651192665100098
    5. '(adj' → logprob: -11.776192665100098
    6. 'ad' → logprob: -11.901192665100098
    7. '       ' → logprob: -12.401192665100098
    8. ' ' → logprob: -12.901192665100098
    9. '   ' → logprob: -13.276192665100098
    10. '          ' → logprob: -13.651192665100098

Token 121: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.00016623330884613097
    2. '[' → logprob: -8.750165939331055
    3. '[x' → logprob: -12.125165939331055
    4. '[b' → logprob: -14.125165939331055
    5. '[a' → logprob: -14.125165939331055
    6. '[z' → logprob: -15.875165939331055
    7. '[p' → logprob: -16.500165939331055
    8. ' [' → logprob: -16.625165939331055
    9. '```' → logprob: -16.750165939331055
    10. '[s' → logprob: -16.750165939331055

Token 122: '].' (ID: 1651)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.6734261512756348
    2. '].' → logprob: -1.0484261512756348
    3. '.append' → logprob: -2.5484261512756348
    4. '.' → logprob: -2.7984261512756348
    5. '[' → logprob: -9.048425674438477
    6. '}.' → logprob: -9.798425674438477
    7. ')' → logprob: -9.923425674438477
    8. '<|end|>' → logprob: -10.173425674438477
    9. '.app' → logprob: -10.423425674438477
    10. '.setdefault' → logprob: -10.548425674438477

Token 123: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -2.5776860184123507e-06
    2. '.append' → logprob: -13.62500286102295
    3. 'appen' → logprob: -14.12500286102295
    4. ' append' → logprob: -14.75000286102295
    5. '	append' → logprob: -16.750001907348633
    6. 'adj' → logprob: -16.875001907348633
    7. 'app' → logprob: -17.500001907348633
    8. 'Append' → logprob: -17.500001907348633
    9. 'add' → logprob: -18.375001907348633
    10. '_append' → logprob: -18.625001907348633

Token 124: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0005323022487573326
    2. ' ((' → logprob: -8.250532150268555
    3. ' (' → logprob: -8.375532150268555
    4. '(' → logprob: -10.250532150268555
    5. ' ' → logprob: -13.250532150268555
    6. '<|end|>' → logprob: -13.375532150268555
    7. '(x' → logprob: -13.750532150268555
    8. '(
' → logprob: -15.250532150268555
    9. '>((' → logprob: -15.250532150268555
    10. ')((' → logprob: -15.625532150268555

Token 125: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.001982044894248247
    2. ' x' → logprob: -6.25198221206665
    3. '(x' → logprob: -10.626981735229492
    4. ',x' → logprob: -10.751981735229492
    5. ',' → logprob: -12.126981735229492
    6. ' (' → logprob: -14.126981735229492
    7. '	x' → logprob: -14.876981735229492
    8. ' ' → logprob: -15.001981735229492
    9. '
' → logprob: -15.126981735229492
    10. ')x' → logprob: -15.751981735229492

Token 126: ',z' (ID: 54920)
  Prédit: ',z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',z' → logprob: -0.2520103454589844
    2. ',' → logprob: -1.5020103454589844
    3. ' ,' → logprob: -9.752010345458984
    4. ',y' → logprob: -11.377010345458984
    5. ',
' → logprob: -13.377010345458984
    6. ',x' → logprob: -13.752010345458984
    7. ',n' → logprob: -13.877010345458984
    8. ',j' → logprob: -14.002010345458984
    9. ',Z' → logprob: -14.002010345458984
    10. ',b' → logprob: -14.377010345458984

Token 127: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -7.147740689106286e-05
    2. '))
' → logprob: -9.75007152557373
    3. ')' → logprob: -11.62507152557373
    4. ' ))' → logprob: -12.50007152557373
    5. '))

' → logprob: -15.25007152557373
    6. ')))' → logprob: -15.75007152557373
    7. '));' → logprob: -16.250070571899414
    8. '))
' → logprob: -18.250070571899414
    9. '),' → logprob: -18.750070571899414
    10. ' ' → logprob: -18.750070571899414

Token 128: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0062304711900651455
    2. 'def' → logprob: -5.381230354309082
    3. '   ' → logprob: -6.881230354309082
    4. '    
' → logprob: -8.506230354309082
    5. '        
' → logprob: -9.006230354309082
    6. '

' → logprob: -9.256230354309082
    7. '
' → logprob: -9.756230354309082
    8. '```' → logprob: -9.881230354309082
    9. '       ' → logprob: -10.756230354309082
    10. '  
' → logprob: -11.256230354309082

Token 129: ' INF' (ID: 69196)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.05037076026201248
    2. 'def' → logprob: -3.425370693206787
    3. 'dp' → logprob: -5.550370693206787
    4. '
' → logprob: -6.050370693206787
    5. 'INF' (adapté à ' INF') → logprob: -6.300370693206787
    6. 'cost' → logprob: -6.425370693206787
    7. 'distance' → logprob: -6.550370693206787
    8. '        
' → logprob: -6.925370693206787
    9. '   ' → logprob: -7.050370693206787
    10. '       ' → logprob: -7.300370693206787

Token 130: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004622968845069408
    2. '=' → logprob: -5.379622936248779
    3. ' ' → logprob: -13.254623413085938
    4. ')' → logprob: -15.379623413085938
    5. ',' → logprob: -15.629623413085938
    6. ' ' → logprob: -15.754623413085938
    7. ' =
' → logprob: -15.879623413085938
    8. '=int' → logprob: -16.629623413085938
    9. '＝' → logprob: -16.754623413085938
    10. '  ' → logprob: -17.004623413085938

Token 131: ' float' (ID: 4428)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4744560420513153
    2. '10' → logprob: -1.3494560718536377
    3. ' float' → logprob: -2.3494560718536377
    4. 'float' → logprob: -3.8494560718536377
    5. ' math' → logprob: -6.974455833435059
    6. 'math' → logprob: -7.974455833435059
    7. ' int' → logprob: -8.599455833435059
    8. '1' → logprob: -9.099455833435059
    9. 'int' → logprob: -9.349455833435059
    10. '100' → logprob: -11.474455833435059

Token 132: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -1.1875571544806007e-05
    2. '(' → logprob: -11.625011444091797
    3. '("' → logprob: -13.875011444091797
    4. ''' → logprob: -14.000011444091797
    5. '64' → logprob: -15.125011444091797
    6. '('-' → logprob: -15.625011444091797
    7. ' ('' → logprob: -15.625011444091797
    8. '32' → logprob: -15.875011444091797
    9. '   ' → logprob: -16.125011444091797
    10. ''in' → logprob: -16.250011444091797

Token 133: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -1.7432603272027336e-06
    2. '')' → logprob: -14.250001907348633
    3. ''' → logprob: -14.500001907348633
    4. 'info' → logprob: -15.250001907348633
    5. 'in' → logprob: -15.750001907348633
    6. ' inf' → logprob: -16.250001907348633
    7. ''in' → logprob: -18.250001907348633
    8. 'INF' → logprob: -18.500001907348633
    9. 'Inf' → logprob: -19.250001907348633
    10. '('' → logprob: -19.375001907348633

Token 134: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03511195257306099
    2. ')
' → logprob: -3.410111904144287
    3. ' )' → logprob: -6.785111904144287
    4. ' )
' → logprob: -8.410112380981445
    5. ')
' → logprob: -9.785112380981445
    6. '')' → logprob: -10.035112380981445
    7. '')
' → logprob: -12.285112380981445
    8. ')

' → logprob: -12.410112380981445
    9. '
' → logprob: -14.285112380981445
    10. ' )
' → logprob: -14.285112380981445

Token 135: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7444345951080322
    2. 'dist' → logprob: -0.7444345951080322
    3. 'distance' → logprob: -3.6194345951080322
    4. ' dist' → logprob: -4.619434356689453
    5. '        
' → logprob: -5.119434356689453
    6. 'def' → logprob: -5.994434356689453
    7. '       ' → logprob: -7.119434356689453
    8. 'dp' → logprob: -7.119434356689453
    9. '<|end|>' → logprob: -7.369434356689453
    10. '	dist' → logprob: -7.869434356689453

Token 136: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.030787821859121323
    2. ' dist' → logprob: -4.280787944793701
    3. 'dp' → logprob: -4.530787944793701
    4. 'def' → logprob: -6.405787944793701
    5. 'distance' → logprob: -6.780787944793701
    6. 'cost' → logprob: -7.030787944793701
    7. '   ' → logprob: -7.780787944793701
    8. ' dp' → logprob: -8.405787467956543
    9. 'd' → logprob: -8.405787467956543
    10. 'dis' → logprob: -8.405787467956543

Token 137: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.010562312789261341
    2. '=' → logprob: -4.635562419891357
    3. '1' → logprob: -8.2605619430542
    4. '[' → logprob: -8.8855619430542
    5. ' =[' → logprob: -9.3855619430542
    6. 's' → logprob: -9.8855619430542
    7. '=[' → logprob: -10.0105619430542
    8. 'a' → logprob: -10.0105619430542
    9. ' ' → logprob: -10.1355619430542
    10. '```' → logprob: -10.2605619430542

Token 138: ' [[' (ID: 9237)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.20363779366016388
    2. ' [' → logprob: -1.7036378383636475
    3. '[[' → logprob: -6.578637599945068
    4. ' [[' → logprob: -7.703637599945068
    5. '[int' → logprob: -9.453638076782227
    6. '[n' → logprob: -10.328638076782227
    7. '[m' → logprob: -10.578638076782227
    8. '[a' → logprob: -10.703638076782227
    9. '[p' → logprob: -10.953638076782227
    10. '[node' → logprob: -10.953638076782227

Token 139: 'INF' (ID: 64358)
  Prédit: 'INF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -2.2246291337069124e-05
    2. ' INF' → logprob: -11.250021934509277
    3. 'inf' → logprob: -12.250021934509277
    4. '[' → logprob: -13.750021934509277
    5. '0' → logprob: -13.875021934509277
    6. '-INF' → logprob: -14.375021934509277
    7. 'math' → logprob: -15.125021934509277
    8. '   ' → logprob: -15.125021934509277
    9. '_INF' → logprob: -15.250021934509277
    10. 'float' → logprob: -15.250021934509277

Token 140: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.17537347972393036
    2. ']*(' → logprob: -2.3003735542297363
    3. ' for' → logprob: -3.6753735542297363
    4. ']*' → logprob: -3.9253735542297363
    5. 'for' → logprob: -4.175373554229736
    6. ' ]' → logprob: -9.300373077392578
    7. ']+' → logprob: -10.175373077392578
    8. ')' → logprob: -10.300373077392578
    9. '	for' → logprob: -11.675373077392578
    10. ',' → logprob: -11.800373077392578

Token 141: '1' (ID: 16)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.08766864240169525
    2. 'n' → logprob: -2.8376686573028564
    3. '(m' → logprob: -4.962668418884277
    4. '101' → logprob: -4.962668418884277
    5. '(n' → logprob: -6.212668418884277
    6. '11' → logprob: -6.462668418884277
    7. '100' → logprob: -7.337668418884277
    8. '51' → logprob: -7.462668418884277
    9. '21' → logprob: -7.712668418884277
    10. '102' → logprob: -7.837668418884277

Token 142: '<<' (ID: 5354)
  Prédit: '<<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.011178798973560333
    2. ' <<' → logprob: -5.011178970336914
    3. '<<(' → logprob: -6.136178970336914
    4. '0' → logprob: -7.011178970336914
    5. '1' → logprob: -7.136178970336914
    6. '6' → logprob: -8.386178970336914
    7. '2' → logprob: -9.136178970336914
    8. '01' → logprob: -9.261178970336914
    9. '00' → logprob: -9.761178970336914
    10. '<m' → logprob: -10.886178970336914

Token 143: 'n' (ID: 77)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.24333524703979492
    2. 'n' → logprob: -1.618335247039795
    3. 'len' → logprob: -4.618335247039795
    4. '5' → logprob: -6.118335247039795
    5. 'p' → logprob: -6.493335247039795
    6. 'k' → logprob: -6.743335247039795
    7. '10' → logprob: -7.618335247039795
    8. '7' → logprob: -7.618335247039795
    9. '15' → logprob: -8.118335723876953
    10. '8' → logprob: -8.243335723876953

Token 144: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006285679526627064
    2. ' )' → logprob: -5.256285667419434
    3. ')]' → logprob: -7.006285667419434
    4. '),' → logprob: -10.381285667419434
    5. ')
' → logprob: -10.756285667419434
    6. ')],' → logprob: -11.256285667419434
    7. ')n' → logprob: -11.381285667419434
    8. '))' → logprob: -11.631285667419434
    9. '       ' → logprob: -11.756285667419434
    10. '   ' → logprob: -12.006285667419434

Token 145: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.01183425635099411
    2. 'for' → logprob: -4.636834144592285
    3. ')' → logprob: -6.261834144592285
    4. ']' → logprob: -9.261834144592285
    5. '       ' → logprob: -10.511834144592285
    6. ' )' → logprob: -11.136834144592285
    7. ' ]' → logprob: -11.761834144592285
    8. '	for' → logprob: -11.886834144592285
    9. '   ' → logprob: -12.386834144592285
    10. '        ' → logprob: -12.761834144592285

Token 146: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.23566041886806488
    2. ' range' → logprob: -1.610660433769226
    3. '_' → logprob: -4.610660552978516
    4. ' i' → logprob: -9.610660552978516
    5. ' m' → logprob: -9.860660552978516
    6. '_range' → logprob: -9.860660552978516
    7. 'range' → logprob: -9.985660552978516
    8. ' in' → logprob: -11.485660552978516
    9. ' y' → logprob: -11.735660552978516
    10. ' (' → logprob: -12.610660552978516

Token 147: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.026993613690137863
    2. 'range' → logprob: -4.151993751525879
    3. ' in' → logprob: -4.651993751525879
    4. '(range' → logprob: -6.651993751525879
    5. '_range' → logprob: -10.401993751525879
    6. '	range' → logprob: -11.276993751525879
    7. ' _' → logprob: -12.276993751525879
    8. ' ' → logprob: -12.401993751525879
    9. ' xrange' → logprob: -12.901993751525879
    10. 'in' → logprob: -12.901993751525879

Token 148: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0890720784664154
    2. 'range' → logprob: -2.4640719890594482
    3. 'm' → logprob: -9.839072227478027
    4. '(range' → logprob: -9.839072227478027
    5. ' m' → logprob: -11.714072227478027
    6. '(m' → logprob: -12.089072227478027
    7. '   ' → logprob: -12.589072227478027
    8. '[m' → logprob: -12.714072227478027
    9. '	range' → logprob: -13.214072227478027
    10. ' ' → logprob: -13.589072227478027

Token 149: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.00236137886531651
    2. ' (' → logprob: -6.127361297607422
    3. 'm' → logprob: -9.127361297607422
    4. ' m' → logprob: -9.877361297607422
    5. '   ' → logprob: -11.752361297607422
    6. '(' → logprob: -13.502361297607422
    7. '(M' → logprob: -13.752361297607422
    8. ')(' → logprob: -13.752361297607422
    9. ')' → logprob: -14.127361297607422
    10. ' range' → logprob: -14.377361297607422

Token 150: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -7.64839569455944e-05
    2. ')]' → logprob: -10.375076293945312
    3. ' +' → logprob: -11.375076293945312
    4. ')' → logprob: -11.375076293945312
    5. '+
' → logprob: -11.375076293945312
    6. ')+' → logprob: -12.750076293945312
    7. ')])' → logprob: -13.000076293945312
    8. '1' → logprob: -13.125076293945312
    9. '+)' → logprob: -13.125076293945312
    10. ')][' → logprob: -15.375076293945312

Token 151: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8074162653647363e-05
    2. '0' → logprob: -11.250018119812012
    3. ' ' → logprob: -12.500018119812012
    4. 'm' → logprob: -14.750018119812012
    5. '```' → logprob: -14.750018119812012
    6. '   ' → logprob: -16.125017166137695
    7. '(' → logprob: -16.875017166137695
    8. '
' → logprob: -17.000017166137695
    9. 'b' → logprob: -17.062517166137695
    10. ')' → logprob: -17.187517166137695

Token 152: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0009325406281277537
    2. ')' → logprob: -7.000932693481445
    3. ']' → logprob: -11.375932693481445
    4. ' )' → logprob: -12.000932693481445
    5. '       ' → logprob: -13.000932693481445
    6. '))' → logprob: -15.000932693481445
    7. ')])' → logprob: -15.625932693481445
    8. ')]
' → logprob: -15.750932693481445
    9. '   ' → logprob: -15.875932693481445
    10. ')],' → logprob: -16.000932693481445

Token 153: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8520348072052002
    2. 'dist' → logprob: -1.3520348072052002
    3. '
' → logprob: -2.1020348072052
    4. '	dist' → logprob: -2.7270348072052
    5. ' dist' → logprob: -2.8520348072052
    6. '<|end|>' → logprob: -3.3520348072052
    7. '   ' → logprob: -3.9770348072052
    8. '    
' → logprob: -5.727034568786621
    9. ' 
' → logprob: -5.852034568786621
    10. '        
' → logprob: -6.102034568786621

Token 154: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.14315876364707947
    2. ' dist' → logprob: -2.1431586742401123
    3. '   ' → logprob: -4.143158912658691
    4. '       ' → logprob: -10.018158912658691
    5. '	dist' → logprob: -10.143158912658691
    6. ' he' → logprob: -10.268158912658691
    7. 'import' → logprob: -10.768158912658691
    8. 'he' → logprob: -10.893158912658691
    9. ' for' → logprob: -11.518158912658691
    10. 'queue' → logprob: -11.768158912658691

Token 155: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.24627026915550232
    2. '[' → logprob: -1.9962702989578247
    3. '[b' → logprob: -2.496270179748535
    4. '[m' → logprob: -10.496270179748535
    5. '[s' → logprob: -11.746270179748535
    6. '```' → logprob: -12.371270179748535
    7. '[p' → logprob: -12.746270179748535
    8. ' [' → logprob: -12.996270179748535
    9. '[start' → logprob: -13.121270179748535
    10. '\[' → logprob: -13.371270179748535

Token 156: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -3.6789137084269896e-05
    2. ']' → logprob: -11.37503719329834
    3. '[' → logprob: -11.50003719329834
    4. ' ][' → logprob: -11.62503719329834
    5. ')][' → logprob: -12.37503719329834
    6. ']][' → logprob: -13.75003719329834
    7. '[b' → logprob: -15.37503719329834
    8. '   ' → logprob: -15.62503719329834
    9. '()][' → logprob: -16.250036239624023
    10. '][_' → logprob: -16.375036239624023

Token 157: '(' (ID: 7)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02490965649485588
    2. '(' → logprob: -4.149909496307373
    3. '1' → logprob: -4.899909496307373
    4. 'tickets' → logprob: -6.899909496307373
    5. 'b' → logprob: -8.649909973144531
    6. 'p' → logprob: -10.149909973144531
    7. '((' → logprob: -10.149909973144531
    8. '(b' → logprob: -10.774909973144531
    9. '(t' → logprob: -10.899909973144531
    10. 't' → logprob: -10.899909973144531

Token 158: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05641341209411621
    2. 'tickets' → logprob: -3.681413412094116
    3. '1' → logprob: -3.931413412094116
    4. '(' → logprob: -4.681413650512695
    5. ')' → logprob: -8.306413650512695
    6. ' tickets' → logprob: -9.618913650512695
    7. ' ' → logprob: -9.993913650512695
    8. '(t' → logprob: -10.056413650512695
    9. 'tokens' → logprob: -10.306413650512695
    10. 't' → logprob: -10.306413650512695

Token 159: '<<' (ID: 5354)
  Prédit: '<<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.05736017972230911
    2. ' <<' → logprob: -2.9323601722717285
    3. ')' → logprob: -6.4323601722717285
    4. ')<<' → logprob: -7.6823601722717285
    5. '<<(' → logprob: -7.9323601722717285
    6. '<' → logprob: -10.557360649108887
    7. ']<<' → logprob: -12.057360649108887
    8. '()<<' → logprob: -12.807360649108887
    9. ' )' → logprob: -13.432360649108887
    10. ']' → logprob: -13.432360649108887

Token 160: 'n' (ID: 77)
  Prédit: 'tickets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tickets' → logprob: -0.1529470980167389
    2. '0' → logprob: -2.902947187423706
    3. 'a' → logprob: -3.152947187423706
    4. 'b' → logprob: -4.152946949005127
    5. 'n' → logprob: -4.402946949005127
    6. 'p' → logprob: -4.527946949005127
    7. ' tickets' → logprob: -6.402946949005127
    8. '(' → logprob: -6.902946949005127
    9. 'm' → logprob: -6.902946949005127
    10. 't' → logprob: -8.652947425842285

Token 161: ')-' (ID: 14080)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22641225159168243
    2. ')-' → logprob: -1.601412296295166
    3. ' )' → logprob: -7.601412296295166
    4. ')]' → logprob: -8.726411819458008
    5. '1' → logprob: -9.476411819458008
    6. ')>>' → logprob: -9.476411819458008
    7. '-' → logprob: -9.851411819458008
    8. ')-(' → logprob: -10.226411819458008
    9. ')
' → logprob: -11.226411819458008
    10. 'b' → logprob: -11.476411819458008

Token 162: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.62501049041748
    3. '```' → logprob: -15.87501049041748
    4. '2' → logprob: -16.125009536743164
    5. 'a' → logprob: -16.187509536743164
    6. '   ' → logprob: -16.687509536743164
    7. ')' → logprob: -16.687509536743164
    8. '
' → logprob: -16.687509536743164
    9. ']' → logprob: -16.812509536743164
    10. '(' → logprob: -16.937509536743164

Token 163: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0020317768212407827
    2. ' ]' → logprob: -6.2520318031311035
    3. ']=' → logprob: -9.502031326293945
    4. ')]' → logprob: -11.377031326293945
    5. ']]' → logprob: -12.752031326293945
    6. '-' → logprob: -12.752031326293945
    7. '()]' → logprob: -13.377031326293945
    8. ']+=' → logprob: -13.377031326293945
    9. ']>' → logprob: -13.502031326293945
    10. ']=-' → logprob: -13.877031326293945

Token 164: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22541984915733337
    2. '=' → logprob: -1.6004198789596558
    3. ']' → logprob: -13.100419998168945
    4. ']=' → logprob: -13.475419998168945
    5. ',' → logprob: -14.225419998168945
    6. ')' → logprob: -14.225419998168945
    7. ' =)' → logprob: -14.725419998168945
    8. ')=' → logprob: -14.975419998168945
    9. ' ' → logprob: -14.975419998168945
    10. '=end' → logprob: -15.725419998168945

Token 165: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -11.750007629394531
    3. 'z' → logprob: -16.87500762939453
    4. '   ' → logprob: -18.12500762939453
    5. 'p' → logprob: -18.37500762939453
    6. 'math' → logprob: -18.75000762939453
    7. 'b' → logprob: -19.62500762939453
    8. '1' → logprob: -19.75000762939453
    9. '```' → logprob: -20.12500762939453
    10. '  ' → logprob: -20.31250762939453

Token 166: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00022547018306795508
    2. 'tickets' → logprob: -8.750225067138672
    3. 'p' → logprob: -9.875225067138672
    4. 'b' → logprob: -12.500225067138672
    5. ' ' → logprob: -12.750225067138672
    6. '100' → logprob: -12.750225067138672
    7. '1' → logprob: -13.625225067138672
    8. 'm' → logprob: -13.875225067138672
    9. 'math' → logprob: -13.875225067138672
    10. ' tickets' → logprob: -14.375225067138672

Token 167: '.' (ID: 13)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.095209039747715
    2. '   ' → logprob: -2.9702091217041016
    3. '<|end|>' → logprob: -3.8452091217041016
    4. '       ' → logprob: -4.095209121704102
    5. '    
' → logprob: -7.470209121704102
    6. '  
' → logprob: -8.345209121704102
    7. '        
' → logprob: -8.970209121704102
    8. '
' → logprob: -9.095209121704102
    9. '<|end|>' → logprob: -9.470209121704102
    10. '' → logprob: -10.220209121704102

Token 168: '0' (ID: 15)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019113274291157722
    2. 'heap' → logprob: -4.644113063812256
    3. '       ' → logprob: -5.519113063812256
    4. ' heap' → logprob: -6.269113063812256
    5. 'he' → logprob: -6.769113063812256
    6. 'pq' → logprob: -6.894113063812256
    7. ' he' → logprob: -7.019113063812256
    8. '
' → logprob: -9.269113540649414
    9. 'queue' → logprob: -9.769113540649414
    10. '  ' → logprob: -10.019113540649414

Token 169: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 170: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022278642281889915
    2. '
' → logprob: -4.772278785705566
    3. 'he' → logprob: -5.272278785705566
    4. '<|end|>' → logprob: -5.522278785705566
    5. ' he' → logprob: -6.147278785705566
    6. '       ' → logprob: -7.522278785705566
    7. 'heap' → logprob: -7.522278785705566
    8. '    
' → logprob: -7.897278785705566
    9. '  ' → logprob: -8.522278785705566
    10. '' → logprob: -9.022278785705566

Token 171: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.04656439274549484
    2. 'pq' → logprob: -3.6715643405914307
    3. '   ' → logprob: -4.54656457901001
    4. 'queue' → logprob: -5.17156457901001
    5. ' heap' → logprob: -6.04656457901001
    6. 'hq' → logprob: -6.92156457901001
    7. '       ' → logprob: -8.296564102172852
    8. '
' → logprob: -10.171564102172852
    9. 'priority' → logprob: -10.421564102172852
    10. 'q' → logprob: -10.546564102172852

Token 172: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.672038197517395
    2. '=' → logprob: -1.297038197517395
    3. '=[]' → logprob: -2.4220380783081055
    4. 'push' → logprob: -2.5470380783081055
    5. '.push' → logprob: -3.9220380783081055
    6. '_push' → logprob: -4.6720380783081055
    7. ')' → logprob: -5.0470380783081055
    8. '[' → logprob: -5.5470380783081055
    9. '(' → logprob: -6.2970380783081055
    10. 'q' → logprob: -6.5470380783081055

Token 173: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.1226031705737114
    2. '[]' → logprob: -2.372603178024292
    3. ' [(' → logprob: -3.872603178024292
    4. ' []' → logprob: -6.622602939605713
    5. '[]
' → logprob: -11.372603416442871
    6. '[' → logprob: -13.872603416442871
    7. '[((' → logprob: -14.747603416442871
    8. ' []
' → logprob: -15.122603416442871
    9. '[]

' → logprob: -15.247603416442871
    10. '[],' → logprob: -16.747602462768555

Token 174: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.0259150157216936e-05
    2. ' ' → logprob: -10.12505054473877
    3. '(' → logprob: -12.12505054473877
    4. 'dist' → logprob: -13.25005054473877
    5. '   ' → logprob: -13.50005054473877
    6. 'a' → logprob: -14.75005054473877
    7. ')' → logprob: -15.56255054473877
    8. '  ' → logprob: -15.62505054473877
    9. 'b' → logprob: -16.000049591064453
    10. '    ' → logprob: -16.062549591064453

Token 175: '.' (ID: 13)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00040779312257654965
    2. ',a' → logprob: -8.375408172607422
    3. ',(' → logprob: -9.125408172607422
    4. ' ,' → logprob: -10.375408172607422
    5. ',b' → logprob: -11.625408172607422
    6. ')' → logprob: -11.875408172607422
    7. ',
' → logprob: -12.125408172607422
    8. ',[' → logprob: -12.625408172607422
    9. ',x' → logprob: -13.750408172607422
    10. 'a' → logprob: -13.875408172607422

Token 176: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00032068457221612334
    2. 'a' → logprob: -8.250320434570312
    3. ',' → logprob: -10.250320434570312
    4. 'b' → logprob: -11.750320434570312
    5. 'dist' → logprob: -12.125320434570312
    6. ')' → logprob: -13.125320434570312
    7. ',a' → logprob: -13.375320434570312
    8. ' ' → logprob: -13.375320434570312
    9. '```' → logprob: -13.500320434570312
    10. '00' → logprob: -14.000320434570312

Token 177: ',a' (ID: 26776)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005993501283228397
    2. ',a' → logprob: -5.130993366241455
    3. ' ,' → logprob: -10.255993843078613
    4. ',(' → logprob: -11.005993843078613
    5. ',b' → logprob: -11.630993843078613
    6. ',
' → logprob: -13.630993843078613
    7. ' ' → logprob: -15.255993843078613
    8. ')' → logprob: -15.255993843078613
    9. 'a' → logprob: -15.380993843078613
    10. ',int' → logprob: -15.505993843078613

Token 178: ',(' (ID: 27243)
  Prédit: ',('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',(' → logprob: -0.47485819458961487
    2. ',' → logprob: -0.9748581647872925
    3. ')]' → logprob: -8.349858283996582
    4. ' ,' → logprob: -8.599858283996582
    5. ',)' → logprob: -9.099858283996582
    6. ',[' → logprob: -9.224858283996582
    7. ',
' → logprob: -10.224858283996582
    8. ',None' → logprob: -10.474858283996582
    9. ')' → logprob: -11.474858283996582
    10. ')])' → logprob: -11.599858283996582

Token 179: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0076309931464493275
    2. '1' → logprob: -4.882630825042725
    3. ' (' → logprob: -11.007631301879883
    4. '((' → logprob: -12.007631301879883
    5. '0' → logprob: -13.632631301879883
    6. ')' → logprob: -14.882631301879883
    7. '[' → logprob: -16.257631301879883
    8. '(
' → logprob: -16.757631301879883
    9. '{' → logprob: -16.757631301879883
    10. '```' → logprob: -16.882631301879883

Token 180: '<<' (ID: 5354)
  Prédit: '<<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -7.290784560609609e-05
    2. ' <<' → logprob: -9.625072479248047
    3. ')<<' → logprob: -12.750072479248047
    4. '<<(' → logprob: -13.250072479248047
    5. ']<<' → logprob: -13.625072479248047
    6. '()<<' → logprob: -14.875072479248047
    7. '<<<' → logprob: -15.125072479248047
    8. '<' → logprob: -16.500072479248047
    9. '<<"' → logprob: -16.500072479248047
    10. '>>' → logprob: -17.250072479248047

Token 181: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.572941179503687e-05
    2. ' n' → logprob: -10.125045776367188
    3. ')n' → logprob: -13.625045776367188
    4. '(n' → logprob: -13.750045776367188
    5. '
' → logprob: -14.125045776367188
    6. '-n' → logprob: -14.625045776367188
    7. '	n' → logprob: -15.000045776367188
    8. '   ' → logprob: -15.125045776367188
    9. '```' → logprob: -15.125045776367188
    10. '(' → logprob: -15.250045776367188

Token 182: ')-' (ID: 14080)
  Prédit: ')-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')-' → logprob: -0.03372718393802643
    2. ')' → logprob: -3.4087271690368652
    3. ' )' → logprob: -10.283727645874023
    4. ')-(' → logprob: -10.783727645874023
    5. '-' → logprob: -11.908727645874023
    6. '1' → logprob: -12.283727645874023
    7. 'n' → logprob: -13.283727645874023
    8. ']-' → logprob: -13.533727645874023
    9. ' -' → logprob: -13.658727645874023
    10. '')' → logprob: -13.908727645874023

Token 183: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.889424836728722e-05
    2. 'n' → logprob: -9.500099182128906
    3. ' ' → logprob: -11.000099182128906
    4. '0' → logprob: -13.000099182128906
    5. '

' → logprob: -14.062599182128906
    6. '
' → logprob: -14.250099182128906
    7. '```' → logprob: -14.250099182128906
    8. ' n' → logprob: -14.562599182128906
    9. '2' → logprob: -14.750099182128906
    10. '   ' → logprob: -15.937599182128906

Token 184: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -5.764977686339989e-05
    2. ')]
' → logprob: -10.125057220458984
    3. ')' → logprob: -11.375057220458984
    4. ' )' → logprob: -12.500057220458984
    5. ')]

' → logprob: -14.250057220458984
    6. '))' → logprob: -14.750057220458984
    7. ')]
' → logprob: -15.375057220458984
    8. '),' → logprob: -15.500057220458984
    9. ']' → logprob: -15.500057220458984
    10. ',' → logprob: -15.750057220458984

Token 185: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3035668432712555
    2. '   ' → logprob: -1.928566813468933
    3. '
' → logprob: -2.6785669326782227
    4. '       ' → logprob: -3.8035669326782227
    5. '<|end|>' → logprob: -4.553566932678223
    6. ':' → logprob: -5.303566932678223
    7. ',' → logprob: -6.178566932678223
    8. '    
' → logprob: -6.178566932678223
    9. '  
' → logprob: -7.053566932678223
    10. ' 
' → logprob: -7.803566932678223

Token 186: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.4209536015987396
    2. ')' → logprob: -1.670953631401062
    3. ' while' → logprob: -2.4209535121917725
    4. '   ' → logprob: -3.1709535121917725
    5. ' ' → logprob: -5.420953750610352
    6. '	while' → logprob: -5.420953750610352
    7. '
' → logprob: -5.795953750610352
    8. '       ' → logprob: -6.045953750610352
    9. ',' → logprob: -6.420953750610352
    10. '<|end|>' → logprob: -6.545953750610352

Token 187: ' heap' (ID: 37237)
  Prédit: ' heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.0005021584220230579
    2. 'heap' → logprob: -7.625502109527588
    3. ' ' → logprob: -11.875502586364746
    4. '(heap' → logprob: -12.250502586364746
    5. ' len' → logprob: -13.125502586364746
    6. '   ' → logprob: -15.875502586364746
    7. '  ' → logprob: -16.25050163269043
    8. '.heap' → logprob: -16.37550163269043
    9. ' ' → logprob: -17.25050163269043
    10. ' he' → logprob: -17.37550163269043

Token 188: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011093784123659134
    2. '):' → logprob: -7.251109600067139
    3. ':
' → logprob: -8.25110912322998
    4. '>:' → logprob: -10.00110912322998
    5. ']:' → logprob: -10.37610912322998
    6. ' and' → logprob: -10.37610912322998
    7. 'and' → logprob: -11.62610912322998
    8. '):
' → logprob: -11.75110912322998
    9. '}:' → logprob: -12.12610912322998
    10. ',' → logprob: -13.00110912322998

Token 189: '           ' (ID: 352)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0090140104293823
    2. '       ' → logprob: -1.1340140104293823
    3. '           ' → logprob: -1.2590140104293823
    4. ' ,' → logprob: -4.509014129638672
    5. '0' → logprob: -5.509014129638672
    6. ':' → logprob: -6.134014129638672
    7. '        ' → logprob: -6.134014129638672
    8. ' ' → logprob: -6.259014129638672
    9. '<|end|>' → logprob: -6.509014129638672
    10. '   ' → logprob: -6.634014129638672

Token 190: ' time' (ID: 1058)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0673321783542633
    2. 'dist' → logprob: -2.9423322677612305
    3. 'cur' → logprob: -5.6923322677612305
    4. 'd' → logprob: -6.1923322677612305
    5. 'time' (adapté à ' time') → logprob: -6.3173322677612305
    6. '0' → logprob: -6.3173322677612305
    7. ' cost' → logprob: -6.5673322677612305
    8. 'c' → logprob: -7.4423322677612305
    9. 'curr' → logprob: -7.4423322677612305
    10. ' dist' → logprob: -7.8173322677612305

Token 191: ',u' (ID: 80698)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000984935206361115
    2. ' ,' → logprob: -7.250985145568848
    3. ',time' → logprob: -10.125985145568848
    4. '_,' → logprob: -10.250985145568848
    5. ',c' → logprob: -10.625985145568848
    6. ',current' → logprob: -10.625985145568848
    7. ',user' → logprob: -10.750985145568848
    8. ',_' → logprob: -10.875985145568848
    9. ',val' → logprob: -11.250985145568848
    10. ',next' → logprob: -11.375985145568848

Token 192: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1647154986858368
    2. '=' → logprob: -2.289715528488159
    3. ',time' → logprob: -3.539715528488159
    4. ' =' → logprob: -4.28971529006958
    5. ')' → logprob: -6.03971529006958
    6. ' ,' → logprob: -6.53971529006958
    7. '=time' → logprob: -7.16471529006958
    8. 'time' → logprob: -7.28971529006958
    9. ',current' → logprob: -7.91471529006958
    10. ',t' → logprob: -7.91471529006958

Token 193: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.15871688723564148
    2. 'state' → logprob: -2.158716917037964
    3. 'bit' → logprob: -4.658716678619385
    4. 'tickets' → logprob: -5.158716678619385
    5. 'used' → logprob: -5.908716678619385
    6. 'status' → logprob: -6.158716678619385
    7. 'visited' → logprob: -6.658716678619385
    8. 's' → logprob: -6.783716678619385
    9. 'm' → logprob: -7.033716678619385
    10. 'b' → logprob: -7.158716678619385

Token 194: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692853808403015
    2. ' =' → logprob: -2.1269285678863525
    3. '   ' → logprob: -15.001928329467773
    4. ')' → logprob: -16.501928329467773
    5. '=

' → logprob: -17.376928329467773
    6. ')=' → logprob: -17.501928329467773
    7. ' ' → logprob: -18.126928329467773
    8. '＝' → logprob: -18.251928329467773
    9. '	' → logprob: -18.876928329467773
    10. '=}' → logprob: -19.126928329467773

Token 195: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.00043162284418940544
    2. ' he' → logprob: -7.750431537628174
    3. 'heap' → logprob: -13.875432014465332
    4. '   ' → logprob: -20.125431060791016
    5. ' heap' → logprob: -20.375431060791016
    6. ' ' → logprob: -21.500431060791016
    7. 'h' → logprob: -21.875431060791016
    8. '_he' → logprob: -22.250431060791016
    9. '.he' → logprob: -22.375431060791016
    10. 'ha' → logprob: -22.625431060791016

Token 196: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -2.339278580620885e-06
    2. ' app' → logprob: -13.500001907348633
    3. 'ap' → logprob: -14.375001907348633
    4. '_app' → logprob: -16.250001907348633
    5. 'a' → logprob: -16.625001907348633
    6. '(app' → logprob: -16.875001907348633
    7. '	app' → logprob: -16.875001907348633
    8. 'appe' → logprob: -17.000001907348633
    9. 'pp' → logprob: -18.250001907348633
    10. '   ' → logprob: -18.500001907348633

Token 197: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -6.420598219847307e-05
    2. 'ush' → logprob: -9.7500638961792
    3. '	op' → logprob: -13.8750638961792
    4. ' op' → logprob: -14.1250638961792
    5. '(op' → logprob: -14.3750638961792
    6. 'o' → logprob: -14.3750638961792
    7. 'pop' → logprob: -14.5000638961792
    8. '   ' → logprob: -14.6250638961792
    9. '[' → logprob: -14.7500638961792
    10. 'оп' → logprob: -15.0000638961792

Token 198: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -0.0011717714369297028
    2. '(' → logprob: -6.751171588897705
    3. '(
' → logprob: -13.751172065734863
    4. ' (' → logprob: -15.501172065734863
    5. 'heap' → logprob: -16.001171112060547
    6. '(h' → logprob: -16.626171112060547
    7. '(

' → logprob: -17.251171112060547
    8. '```' → logprob: -18.001171112060547
    9. ' heap' → logprob: -18.001171112060547
    10. '(queue' → logprob: -18.126171112060547

Token 199: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011987409379798919
    2. ')
' → logprob: -9.125120162963867
    3. '           ' → logprob: -11.750120162963867
    4. ' )' → logprob: -13.125120162963867
    5. ')

' → logprob: -15.625120162963867
    6. '   ' → logprob: -15.750120162963867
    7. '       ' → logprob: -15.875120162963867
    8. ')`' → logprob: -16.250120162963867
    9. '):
' → logprob: -16.500120162963867
    10. '),' → logprob: -16.500120162963867

Token 200: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 201: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5783066153526306
    2. ' 
' → logprob: -1.4533066749572754
    3. ' if' → logprob: -2.4533066749572754
    4. 'if' (adapté à ' if') → logprob: -3.3283066749572754
    5. '            
' → logprob: -3.4533066749572754
    6. '
' → logprob: -3.8283066749572754
    7. '       ' → logprob: -3.8283066749572754
    8. '        
' → logprob: -5.953306674957275
    9. '            ' → logprob: -6.828306674957275
    10. '    ' → logprob: -7.328306674957275

Token 202: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5278633236885071
    2. ' dist' → logprob: -0.9028633236885071
    3. 'time' → logprob: -6.277863502502441
    4. ' time' → logprob: -6.527863502502441
    5. ' u' → logprob: -7.152863502502441
    6. 'u' → logprob: -7.652863502502441
    7. '	dist' → logprob: -9.402863502502441
    8. '   ' → logprob: -10.652863502502441
    9. '(dist' → logprob: -11.527863502502441
    10. 'distance' → logprob: -12.902863502502441

Token 203: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -9.088346359931165e-07
    2. 'u' → logprob: -14.625000953674316
    3. '[' → logprob: -15.125000953674316
    4. '[user' → logprob: -16.875
    5. ' [' → logprob: -17.75
    6. '[t' → logprob: -17.875
    7. '[a' → logprob: -19.125
    8. '][' → logprob: -19.75
    9. '<u' → logprob: -19.75
    10. ' u' → logprob: -19.75

Token 204: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.03869495168328285
    2. '[' → logprob: -3.2886948585510254
    3. '[u' → logprob: -7.913694858551025
    4. ')[' → logprob: -9.163695335388184
    5. ']' → logprob: -9.538695335388184
    6. ' ][' → logprob: -10.288695335388184
    7. '[m' → logprob: -11.288695335388184
    8. '   ' → logprob: -11.413695335388184
    9. '>[' → logprob: -11.913695335388184
    10. ')][' → logprob: -12.038695335388184

Token 205: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -4.842555426876061e-06
    2. ' mask' → logprob: -12.250004768371582
    3. '(mask' → logprob: -17.7500057220459
    4. '	mask' → logprob: -18.3750057220459
    5. '_mask' → logprob: -20.1250057220459
    6. 'masked' → logprob: -20.3750057220459
    7. 'mas' → logprob: -21.2500057220459
    8. 'm' → logprob: -21.7500057220459
    9. '   ' → logprob: -21.8750057220459
    10. ' ' → logprob: -22.1250057220459

Token 206: ']<' (ID: 80424)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.01600808836519718
    2. ']' → logprob: -5.016007900238037
    3. ']<' → logprob: -5.016007900238037
    4. ' <' → logprob: -6.391007900238037
    5. '<m' → logprob: -8.266008377075195
    6. '<int' → logprob: -8.391008377075195
    7. '<u' → logprob: -9.391008377075195
    8. ']!=' → logprob: -9.516008377075195
    9. '<len' → logprob: -10.016008377075195
    10. '<ll' → logprob: -10.266008377075195

Token 207: 'time' (ID: 4580)
  Prédit: 'time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.00043126524542458355
    2. ' time' → logprob: -7.750431060791016
    3. '=time' → logprob: -15.875431060791016
    4. '	time' → logprob: -16.375431060791016
    5. ' ' → logprob: -16.625431060791016
    6. '(time' → logprob: -17.000431060791016
    7. '   ' → logprob: -17.250431060791016
    8. '=' → logprob: -17.500431060791016
    9. '0' → logprob: -17.625431060791016
    10. '"time' → logprob: -17.625431060791016

Token 208: ' -' (ID: 533)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005749551928602159
    2. 'continue' → logprob: -8.625575065612793
    3. ' continue' → logprob: -8.625575065612793
    4. ':
' → logprob: -9.500575065612793
    5. ' :' → logprob: -10.375575065612793
    6. ':return' → logprob: -10.500575065612793
    7. '	continue' → logprob: -10.750575065612793
    8. '):' → logprob: -11.125575065612793
    9. ')' → logprob: -11.125575065612793
    10. ' ' → logprob: -11.500575065612793

Token 209: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.054890066385269165
    2. ' ' → logprob: -2.9298901557922363
    3. '0' → logprob: -12.429889678955078
    4. ':' → logprob: -13.304889678955078
    5. '
' → logprob: -14.554889678955078
    6. '10' → logprob: -14.554889678955078
    7. '-' → logprob: -15.054889678955078
    8. '   ' → logprob: -15.429889678955078
    9. '  ' → logprob: -15.554889678955078
    10. 'sys' → logprob: -16.679889678955078

Token 210: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.796184723294573e-06
    2. ' ' → logprob: -12.125005722045898
    3. '10' → logprob: -16.6250057220459
    4. '0' → logprob: -16.6250057220459
    5. '(' → logprob: -17.8750057220459
    6. '   ' → logprob: -18.0000057220459
    7. ':' → logprob: -19.8750057220459
    8. '**' → logprob: -20.0000057220459
    9. '
' → logprob: -20.0000057220459
    10. '```' → logprob: -20.5000057220459

Token 211: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.03157654404640198
    2. ':' → logprob: -3.531576633453369
    3. ':
' → logprob: -6.531576633453369
    4. '.' → logprob: -9.281576156616211
    5. '0' → logprob: -9.281576156616211
    6. ' ' → logprob: -10.281576156616211
    7. '.e' → logprob: -10.531576156616211
    8. '1' → logprob: -10.656576156616211
    9. '*' → logprob: -10.781576156616211
    10. '000' → logprob: -10.906576156616211

Token 212: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.15165753662586212
    2. '9' → logprob: -2.2766575813293457
    3. '7' → logprob: -3.9016575813293457
    4. '8' → logprob: -4.151657581329346
    5. '6' → logprob: -6.651657581329346
    6. '10' → logprob: -7.276657581329346
    7. '12' → logprob: -9.901657104492188
    8. '5' → logprob: -10.151657104492188
    9. '09' → logprob: -10.651657104492188
    10. '```' → logprob: -10.901657104492188

Token 213: '12' (ID: 899)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.057534631341695786
    2. '8' → logprob: -3.932534694671631
    3. '10' → logprob: -4.057534694671631
    4. '7' → logprob: -4.682534694671631
    5. '12' → logprob: -4.807534694671631
    6. '6' → logprob: -7.432534694671631
    7. '14' → logprob: -7.557534694671631
    8. '15' → logprob: -8.057534217834473
    9. '5' → logprob: -9.682534217834473
    10. '13' → logprob: -9.807534217834473

Token 214: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029210081323981285
    2. ':
' → logprob: -3.654210090637207
    3. ' continue' → logprob: -6.279210090637207
    4. 'continue' → logprob: -7.279210090637207
    5. ' or' → logprob: -8.904210090637207
    6. '	continue' → logprob: -10.029210090637207
    7. ':return' → logprob: -10.154210090637207
    8. '           ' → logprob: -10.154210090637207
    9. ')' → logprob: -10.779210090637207
    10. '):' → logprob: -11.029210090637207

Token 215: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.32184043526649475
    2. '           ' → logprob: -1.5718404054641724
    3. ' continue' → logprob: -3.446840524673462
    4. '       ' → logprob: -3.946840524673462
    5. 'continue' → logprob: -4.196840286254883
    6. '	continue' → logprob: -7.571840286254883
    7. '   ' → logprob: -7.946840286254883
    8. '\t' → logprob: -9.446840286254883
    9. '	       ' → logprob: -9.571840286254883
    10. '	' → logprob: -9.946840286254883

Token 216: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.387571781873703
    2. '           ' → logprob: -1.6375718116760254
    3. ' continue' → logprob: -2.1375718116760254
    4. '               ' → logprob: -4.762571811676025
    5. '	continue' → logprob: -8.137571334838867
    6. '_continue' → logprob: -10.762571334838867
    7. '		' → logprob: -11.012571334838867
    8. '   ' → logprob: -11.387571334838867
    9. 'contin' → logprob: -12.137571334838867
    10. '                   ' → logprob: -12.137571334838867

Token 217: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1002226322889328
    2. '       ' → logprob: -2.725222587585449
    3. '<|end|>' → logprob: -4.975222587585449
    4. ' 
' → logprob: -5.350222587585449
    5. ')' → logprob: -5.350222587585449
    6. '
' → logprob: -5.725222587585449
    7. '            
' → logprob: -6.225222587585449
    8. '        ' → logprob: -6.225222587585449
    9. '   ' → logprob: -6.725222587585449
    10. '    ' → logprob: -6.850222587585449

Token 218: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019766123965382576
    2. '       ' → logprob: -4.769766330718994
    3. ' 
' → logprob: -6.019766330718994
    4. '<|end|>' → logprob: -6.394766330718994
    5. '            
' → logprob: -6.519766330718994
    6. ')' → logprob: -6.644766330718994
    7. '        ' → logprob: -6.644766330718994
    8. '            ' → logprob: -7.144766330718994
    9. '    ' → logprob: -7.519766330718994
    10. ' ' → logprob: -7.769766330718994

Token 219: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.249296173453331
    2. '           ' → logprob: -1.7492961883544922
    3. ' for' → logprob: -3.874296188354492
    4. 'for' → logprob: -4.624296188354492
    5. '        ' → logprob: -4.999296188354492
    6. '   ' → logprob: -5.874296188354492
    7. '    ' → logprob: -5.999296188354492
    8. '        
' → logprob: -6.874296188354492
    9. '            
' → logprob: -7.374296188354492
    10. ' 
' → logprob: -7.874296188354492

Token 220: ' u' (ID: 337)
  Prédit: ' u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.06993921101093292
    2. 'u' → logprob: -2.694939136505127
    3. '	u' → logprob: -14.069939613342285
    4. '(u' → logprob: -14.569939613342285
    5. ' ' → logprob: -14.694939613342285
    6. ' (' → logprob: -15.444939613342285
    7. '<|end|>' → logprob: -15.569939613342285
    8. ' ' → logprob: -15.569939613342285
    9. '    ' → logprob: -15.944939613342285
    10. '   ' → logprob: -15.944939613342285

Token 221: '==' (ID: 560)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3132770359516144
    2. '==' → logprob: -1.313277006149292
    3. ')==' → logprob: -12.063277244567871
    4. ']==' → logprob: -12.063277244567871
    5. '==
' → logprob: -13.813277244567871
    6. '=' → logprob: -14.063277244567871
    7. ')' → logprob: -14.313277244567871
    8. '()==' → logprob: -15.188277244567871
    9. '[' → logprob: -15.438277244567871
    10. ' =' → logprob: -15.813277244567871

Token 222: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0011703446507453918
    2. ' b' → logprob: -6.7511701583862305
    3. '   ' → logprob: -16.501171112060547
    4. '           ' → logprob: -16.876171112060547
    5. '       ' → logprob: -17.126171112060547
    6. ')b' → logprob: -17.626171112060547
    7. ' ' → logprob: -18.501171112060547
    8. '	b' → logprob: -19.126171112060547
    9. '    ' → logprob: -19.626171112060547
    10. '        ' → logprob: -20.251171112060547

Token 223: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03366610035300255
    2. 'and' → logprob: -3.4086661338806152
    3. ':' → logprob: -11.283665657043457
    4. ':
' → logprob: -12.783665657043457
    5. ' ' → logprob: -13.283665657043457
    6. '           ' → logprob: -14.033665657043457
    7. '   ' → logprob: -14.658665657043457
    8. '        ' → logprob: -14.783665657043457
    9. '       ' → logprob: -15.033665657043457
    10. '	and' → logprob: -15.158665657043457

Token 224: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.35250499844551086
    2. ' and' → logprob: -1.2275049686431885
    3. '           ' → logprob: -6.477505207061768
    4. '
' → logprob: -6.727505207061768
    5. '<|end|>' → logprob: -7.602505207061768
    6. ',' → logprob: -8.72750473022461
    7. 'and' → logprob: -9.35250473022461
    8. ':
' → logprob: -9.47750473022461
    9. '   ' → logprob: -9.47750473022461
    10. ':' → logprob: -9.85250473022461

Token 225: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.02799055352807045
    2. '               ' → logprob: -4.027990341186523
    3. 'return' → logprob: -5.152990341186523
    4. '           ' → logprob: -5.902990341186523
    5. ' print' → logprob: -6.777990341186523
    6. ' return' → logprob: -9.652990341186523
    7. '
' → logprob: -9.902990341186523
    8. 'break' → logprob: -11.277990341186523
    9. '                   ' → logprob: -12.527990341186523
    10. '   ' → logprob: -12.527990341186523

Token 226: '("{' (ID: 29673)
  Prédit: '(time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(time' → logprob: -0.5058785676956177
    2. '(f' → logprob: -1.0058785676956177
    3. '(int' → logprob: -3.880878448486328
    4. '(round' → logprob: -5.380878448486328
    5. '(' → logprob: -5.755878448486328
    6. '("{' → logprob: -6.630878448486328
    7. '("%.' → logprob: -7.630878448486328
    8. '('{' → logprob: -7.755878448486328
    9. 'time' → logprob: -8.130878448486328
    10. '(format' → logprob: -8.505878448486328

Token 227: '0' (ID: 15)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -1.022655725479126
    2. '0' → logprob: -1.147655725479126
    3. ':.' → logprob: -1.147655725479126
    4. '.' → logprob: -5.647655487060547
    5. 'dist' → logprob: -6.522655487060547
    6. ':' → logprob: -8.272655487060547
    7. '.time' → logprob: -9.022655487060547
    8. 'int' → logprob: -9.522655487060547
    9. '{' → logprob: -10.147655487060547
    10. '"time' → logprob: -10.772655487060547

Token 228: ':.' (ID: 27474)
  Prédit: ':.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':.' → logprob: -4.4849443838757e-06
    2. '.' → logprob: -13.000004768371582
    3. ':' → logprob: -13.375004768371582
    4. ' :.' → logprob: -15.625004768371582
    5. ':f' → logprob: -16.125003814697266
    6. ' .' → logprob: -17.000003814697266
    7. '}' → logprob: -17.000003814697266
    8. '}.' → logprob: -17.000003814697266
    9. '}".' → logprob: -17.375003814697266
    10. ':F' → logprob: -18.125003814697266

Token 229: '3' (ID: 18)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.2830657660961151
    2. '12' → logprob: -2.2830657958984375
    3. '9' → logprob: -2.5330657958984375
    4. '8' → logprob: -4.1580657958984375
    5. '10' → logprob: -4.1580657958984375
    6. '7' → logprob: -4.2830657958984375
    7. '3' → logprob: -5.1580657958984375
    8. '2' → logprob: -5.4080657958984375
    9. '15' → logprob: -5.6580657958984375
    10. '4' → logprob: -5.7830657958984375

Token 230: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: 0.0
    2. '
' → logprob: -17.375
    3. '}' → logprob: -19.375
    4. ' f' → logprob: -19.75
    5. 'g' → logprob: -20.5
    6. 'e' → logprob: -20.625
    7. 'lf' → logprob: -20.75
    8. '	f' → logprob: -20.875
    9. '

' → logprob: -20.875
    10. '```' → logprob: -21.0

Token 231: '}".' (ID: 53576)
  Prédit: '}".'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}".' → logprob: -3.7385154428193346e-05
    2. '}' → logprob: -10.75003719329834
    3. '}"' → logprob: -11.87503719329834
    4. '".' → logprob: -12.62503719329834
    5. '}'.' → logprob: -13.12503719329834
    6. '}")' → logprob: -13.50003719329834
    7. '}.' → logprob: -13.87503719329834
    8. 'f' → logprob: -13.87503719329834
    9. '}",' → logprob: -15.87503719329834
    10. 'format' → logprob: -16.625038146972656

Token 232: 'format' (ID: 4078)
  Prédit: 'format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -1.1472419600977446e-06
    2. ' format' → logprob: -14.000000953674316
    3. '	format' → logprob: -16.250001907348633
    4. '(format' → logprob: -16.875001907348633
    5. 'ormat' → logprob: -17.000001907348633
    6. ')' → logprob: -17.750001907348633
    7. '
' → logprob: -18.250001907348633
    8. '```' → logprob: -20.125001907348633
    9. '.format' → logprob: -20.250001907348633
    10. 'f' → logprob: -20.375001907348633

Token 233: '(time' (ID: 19192)
  Prédit: '(time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(time' → logprob: -0.12759409844875336
    2. 'time' → logprob: -2.127593994140625
    3. 'dist' → logprob: -7.752593994140625
    4. '(dist' → logprob: -8.877593994140625
    5. ' time' → logprob: -9.377593994140625
    6. '	time' → logprob: -13.002593994140625
    7. '(math' → logprob: -13.252593994140625
    8. ')' → logprob: -13.627593994140625
    9. '(' → logprob: -13.877593994140625
    10. '=time' → logprob: -14.127593994140625

Token 234: '))
' (ID: 2210)
  Prédit: '))
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.20151975750923157
    2. '))' → logprob: -1.7015197277069092
    3. ' ))
' → logprob: -9.951519966125488
    4. '               ' → logprob: -10.576519966125488
    5. '))
' → logprob: -11.076519966125488
    6. '           ' → logprob: -12.076519966125488
    7. ')' → logprob: -12.701519966125488
    8. ' ))' → logprob: -12.951519966125488
    9. '))

' → logprob: -13.201519966125488
    10. '                   ' → logprob: -13.701519966125488

Token 235: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.014283149503171444
    2. '           ' → logprob: -4.264283180236816
    3. '       ' → logprob: -10.389283180236816
    4. '                   ' → logprob: -10.639283180236816
    5. '<|end|>' → logprob: -10.764283180236816
    6. ')' → logprob: -11.639283180236816
    7. '                
' → logprob: -12.014283180236816
    8. '            
' → logprob: -12.389283180236816
    9. '   ' → logprob: -12.514283180236816
    10. '			' → logprob: -12.639283180236816

Token 236: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10202020406723022
    2. 'return' → logprob: -2.352020263671875
    3. ' return' → logprob: -6.602020263671875
    4. 'break' (adapté à ' break') → logprob: -7.727020263671875
    5. ' break' → logprob: -11.602020263671875
    6. '       ' → logprob: -13.227020263671875
    7. 'continue' → logprob: -13.977020263671875
    8. '           ' → logprob: -14.227020263671875
    9. '```' → logprob: -14.477020263671875
    10. '                       ' → logprob: -16.227020263671875

Token 237: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002875726670026779
    2. '       ' → logprob: -5.877875804901123
    3. '   ' → logprob: -10.877875328063965
    4. '
' → logprob: -11.627875328063965
    5. '            
' → logprob: -11.627875328063965
    6. '          ' → logprob: -11.752875328063965
    7. '         ' → logprob: -12.377875328063965
    8. 'else' → logprob: -12.502875328063965
    9. '               ' → logprob: -12.502875328063965
    10. ' for' → logprob: -13.002875328063965

Token 238: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2403145730495453
    2. '       ' → logprob: -1.6153146028518677
    3. '
' → logprob: -4.740314483642578
    4. '   ' → logprob: -5.740314483642578
    5. '            
' → logprob: -6.740314483642578
    6. 'for' → logprob: -7.615314483642578
    7. '        
' → logprob: -7.990314483642578
    8. ' for' → logprob: -8.365314483642578
    9. '    
' → logprob: -8.615314483642578
    10. 'else' → logprob: -9.115314483642578

Token 239: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.275639146566391
    2. '           ' → logprob: -2.025639057159424
    3. ' for' → logprob: -2.275639057159424
    4. '       ' → logprob: -5.150639057159424
    5. '            
' → logprob: -8.275639533996582
    6. '   ' → logprob: -9.525639533996582
    7. '
' → logprob: -10.525639533996582
    8. '        
' → logprob: -10.775639533996582
    9. 'next' → logprob: -11.025639533996582
    10. '	for' → logprob: -11.025639533996582

Token 240: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.014523091726005077
    2. '(v' → logprob: -4.264523029327393
    3. ' v' → logprob: -8.01452350616455
    4. '   ' → logprob: -12.51452350616455
    5. '(' → logprob: -12.51452350616455
    6. '_v' → logprob: -12.63952350616455
    7. ',v' → logprob: -13.01452350616455
    8. 'to' → logprob: -13.13952350616455
    9. 'w' → logprob: -13.26452350616455
    10. '[v' → logprob: -13.26452350616455

Token 241: ',d' (ID: 26159)
  Prédit: ',w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',w' → logprob: -0.044537391513586044
    2. ',' → logprob: -3.544537305831909
    3. ',c' → logprob: -4.294537544250488
    4. ',d' → logprob: -7.044537544250488
    5. ',t' → logprob: -9.794537544250488
    6. ',time' → logprob: -9.919537544250488
    7. ',u' → logprob: -10.919537544250488
    8. ',l' → logprob: -11.169537544250488
    9. ' ,' → logprob: -11.794537544250488
    10. ',(' → logprob: -12.669537544250488

Token 242: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0103872399777174
    2. ',' → logprob: -5.135387420654297
    3. 'in' → logprob: -5.510387420654297
    4. ',v' → logprob: -8.510387420654297
    5. ')' → logprob: -9.635387420654297
    6. ' ,' → logprob: -9.885387420654297
    7. ',in' → logprob: -10.885387420654297
    8. ',time' → logprob: -11.635387420654297
    9. ' ' → logprob: -11.760387420654297
    10. 'istance' → logprob: -11.885387420654297

Token 243: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.011049231514334679
    2. ' adj' → logprob: -4.511049270629883
    3. '(adj' → logprob: -14.011049270629883
    4. 'ad' → logprob: -14.636049270629883
    5. ' ' → logprob: -16.136049270629883
    6. '   ' → logprob: -17.886049270629883
    7. '_adj' → logprob: -19.011049270629883
    8. '```' → logprob: -19.011049270629883
    9. '    ' → logprob: -19.386049270629883
    10. 'range' → logprob: -19.511049270629883

Token 244: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.7432603272027336e-06
    2. '[' → logprob: -13.625001907348633
    3. 'u' → logprob: -15.000001907348633
    4. '[v' → logprob: -16.125001907348633
    5. '(u' → logprob: -18.000001907348633
    6. ',u' → logprob: -18.125001907348633
    7. ' [' → logprob: -19.000001907348633
    8. '   ' → logprob: -19.125001907348633
    9. '```' → logprob: -19.375001907348633
    10. '[s' → logprob: -19.375001907348633

Token 245: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.08070335537195206
    2. ']:
' → logprob: -2.8307032585144043
    3. '):' → logprob: -4.830703258514404
    4. ':' → logprob: -4.955703258514404
    5. ']' → logprob: -6.705703258514404
    6. '[' → logprob: -7.205703258514404
    7. '):
' → logprob: -7.205703258514404
    8. '[v' → logprob: -8.455703735351562
    9. ']):' → logprob: -8.955703735351562
    10. ']:

' → logprob: -9.080703735351562

Token 246: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008223525248467922
    2. ' new' → logprob: -5.883223533630371
    3. '                
' → logprob: -6.258223533630371
    4. '           ' → logprob: -6.883223533630371
    5. '                ' → logprob: -7.258223533630371
    6. '```' → logprob: -8.133223533630371
    7. '
' → logprob: -8.383223533630371
    8. ' if' → logprob: -8.508223533630371
    9. '              ' → logprob: -8.633223533630371
    10. ',' → logprob: -9.133223533630371

Token 247: ' for' (ID: 395)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.13831669092178345
    2. 'new' → logprob: -2.5133166313171387
    3. '               ' → logprob: -3.7633166313171387
    4. ' nt' → logprob: -5.013316631317139
    5. ' next' → logprob: -5.263316631317139
    6. ' nd' → logprob: -6.013316631317139
    7. ' for' → logprob: -6.138316631317139
    8. 'next' → logprob: -6.638316631317139
    9. ' n' → logprob: -7.263316631317139
    10. 'nt' → logprob: -7.388316631317139

Token 248: ' i' (ID: 575)
  Prédit: ' mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mask' → logprob: -1.4957146644592285
    2. 'mask' → logprob: -1.6207146644592285
    3. ' new' → logprob: -1.8707146644592285
    4. ' next' → logprob: -2.1207146644592285
    5. 'new' → logprob: -2.6207146644592285
    6. 'next' → logprob: -3.1207146644592285
    7. 'k' → logprob: -3.6207146644592285
    8. ' t' → logprob: -3.6207146644592285
    9. ' ticket' → logprob: -3.7457146644592285
    10. 't' → logprob: -4.1207146644592285

Token 249: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005567651707679033
    2. 'in' → logprob: -5.25556755065918
    3. ' ' → logprob: -8.88056755065918
    4. 'n' → logprob: -9.13056755065918
    5. ',' → logprob: -9.75556755065918
    6. ' ,' → logprob: -12.00556755065918
    7. ' n' → logprob: -12.00556755065918
    8. 's' → logprob: -12.38056755065918
    9. '0' → logprob: -13.50556755065918
    10. '	in' → logprob: -13.63056755065918

Token 250: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0021998595912009478
    2. ' range' → logprob: -6.127199649810791
    3. '[' → logprob: -11.62720012664795
    4. 'tickets' → logprob: -13.12720012664795
    5. '(range' → logprob: -13.50220012664795
    6. '	range' → logprob: -14.50220012664795
    7. '(' → logprob: -14.62720012664795
    8. '[-' → logprob: -15.25220012664795
    9. 'ran' → logprob: -15.50220012664795
    10. 'r' → logprob: -16.002199172973633

Token 251: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.055598024278879166
    2. '(n' → logprob: -2.930598020553589
    3. '(' → logprob: -8.180598258972168
    4. ' n' → logprob: -8.555598258972168
    5. 'len' → logprob: -9.430598258972168
    6. '1' → logprob: -9.555598258972168
    7. '(len' → logprob: -10.680598258972168
    8. '   ' → logprob: -10.930598258972168
    9. ' (' → logprob: -12.180598258972168
    10. '0' → logprob: -12.180598258972168

Token 252: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.696125328540802
    2. '):' → logprob: -0.696125328540802
    3. '+' → logprob: -6.071125507354736
    4. ' ):' → logprob: -8.321125030517578
    5. ' ):
' → logprob: -8.946125030517578
    6. '):
' → logprob: -8.946125030517578
    7. ')' → logprob: -9.821125030517578
    8. '):

' → logprob: -10.446125030517578
    9. '-' → logprob: -10.571125030517578
    10. ' +' → logprob: -12.321125030517578

Token 253: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5352011322975159
    2. ' ' → logprob: -1.785201072692871
    3. '<|end|>' → logprob: -1.910201072692871
    4. '               ' → logprob: -3.285201072692871
    5. ' if' → logprob: -3.535201072692871
    6. '                ' → logprob: -4.535201072692871
    7. '<|end|>' → logprob: -5.285201072692871
    8. '                    ' → logprob: -6.160201072692871
    9. '                               ' → logprob: -6.285201072692871
    10. ' 
' → logprob: -6.410201072692871

Token 254: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.030756106600165367
    2. 'if' (adapté à ' if') → logprob: -3.6557559967041016
    3. '               ' → logprob: -6.405755996704102
    4. '                   ' → logprob: -6.655755996704102
    5. '                ' → logprob: -7.655755996704102
    6. ' ' → logprob: -7.780755996704102
    7. ' next' → logprob: -8.905755996704102
    8. '                               ' → logprob: -9.405755996704102
    9. '                    ' → logprob: -9.780755996704102
    10. '                       ' → logprob: -10.030755996704102

Token 255: ' mask' (ID: 10910)
  Prédit: '(mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mask' → logprob: -0.1497906595468521
    2. 'mask' → logprob: -2.8997907638549805
    3. '((' → logprob: -3.5247907638549805
    4. '(t' → logprob: -4.0247907638549805
    5. ' mask' → logprob: -4.3997907638549805
    6. ' (' → logprob: -4.6497907638549805
    7. 'not' → logprob: -5.3997907638549805
    8. 'tickets' → logprob: -5.6497907638549805
    9. '(not' → logprob: -6.3997907638549805
    10. ' not' → logprob: -6.3997907638549805

Token 256: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.16081957519054413
    2. '&' → logprob: -1.9108195304870605
    3. '>>' → logprob: -7.9108195304870605
    4. '&(' → logprob: -9.035820007324219
    5. '&
' → logprob: -10.785820007324219
    6. ' &
' → logprob: -11.035820007324219
    7. ' &(' → logprob: -11.410820007324219
    8. '>>&' → logprob: -11.660820007324219
    9. '&amp' → logprob: -12.160820007324219
    10. '>' → logprob: -12.160820007324219

Token 257: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3132686913013458
    2. ' (' → logprob: -1.3132686614990234
    3. '1' → logprob: -13.063268661499023
    4. ')' → logprob: -14.063268661499023
    5. ' tickets' → logprob: -14.563268661499023
    6. ' ' → logprob: -14.563268661499023
    7. 'tickets' → logprob: -14.688268661499023
    8. '((' → logprob: -14.688268661499023
    9. '(ticket' → logprob: -14.938268661499023
    10. '>' → logprob: -15.063268661499023

Token 258: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012520251795649529
    2. '(' → logprob: -4.3875203132629395
    3. ' ' → logprob: -12.387519836425781
    4. '0' → logprob: -13.137519836425781
    5. 'tickets' → logprob: -13.262519836425781
    6. ' (' → logprob: -14.512519836425781
    7. '
' → logprob: -14.762519836425781
    8. ')' → logprob: -14.762519836425781
    9. '(t' → logprob: -15.637519836425781
    10. '2' → logprob: -15.762519836425781

Token 259: '<<' (ID: 5354)
  Prédit: '<<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -9.627176768844947e-05
    2. ' <<' → logprob: -9.750096321105957
    3. '1' → logprob: -11.000096321105957
    4. ')<<' → logprob: -11.625096321105957
    5. '<' → logprob: -13.000096321105957
    6. '<<(' → logprob: -13.125096321105957
    7. '()<<' → logprob: -13.250096321105957
    8. '>>' → logprob: -13.625096321105957
    9. '<<<' → logprob: -13.750096321105957
    10. '(' → logprob: -14.000096321105957

Token 260: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -7.755678961984813e-05
    2. ' i' → logprob: -10.375077247619629
    3. '(' → logprob: -10.625077247619629
    4. '(i' → logprob: -11.125077247619629
    5. 'n' → logprob: -13.250077247619629
    6. '
' → logprob: -13.250077247619629
    7. '   ' → logprob: -14.000077247619629
    8. '(n' → logprob: -14.625077247619629
    9. ')' → logprob: -15.125077247619629
    10. '```' → logprob: -15.125077247619629

Token 261: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5622209310531616
    2. ')==' → logprob: -1.4372209310531616
    3. '):' → logprob: -1.8122209310531616
    4. '):
' → logprob: -3.687221050262451
    5. '==' → logprob: -6.187221050262451
    6. ' )' → logprob: -7.062221050262451
    7. ')=' → logprob: -8.062220573425293
    8. ')!=' → logprob: -8.187220573425293
    9. ')>' → logprob: -8.562220573425293
    10. ' ):' → logprob: -8.812220573425293

Token 262: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.3533214032649994
    2. ':' → logprob: -2.3533213138580322
    3. '                   ' → logprob: -2.6033213138580322
    4. ':
' → logprob: -3.4783213138580322
    5. ' continue' → logprob: -3.6033213138580322
    6. ' and' → logprob: -3.8533213138580322
    7. '                               ' → logprob: -4.478321552276611
    8. '                           ' → logprob: -4.728321552276611
    9. ',' → logprob: -5.478321552276611
    10. ' ' → logprob: -5.603321552276611

Token 263: ' nt' (ID: 7646)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.132854163646698
    2. ' continue' → logprob: -3.1328542232513428
    3. 'new' → logprob: -4.007853984832764
    4. ' next' → logprob: -4.132853984832764
    5. ' cost' → logprob: -4.132853984832764
    6. ' time' → logprob: -5.257853984832764
    7. ' he' → logprob: -5.507853984832764
    8. '                   ' → logprob: -5.757853984832764
    9. ' nt' → logprob: -6.007853984832764
    10. 'continue' → logprob: -6.132853984832764

Token 264: ' =' (ID: 314)
  Prédit: '_mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.6569874882698059
    2. 'mask' → logprob: -1.2819874286651611
    3. 'ime' → logprob: -2.156987428665161
    4. ' =' → logprob: -2.656987428665161
    5. 'im' → logprob: -5.28198766708374
    6. '=' → logprob: -5.78198766708374
    7. 'ew' → logprob: -6.40698766708374
    8. '_' → logprob: -6.53198766708374
    9. '_time' → logprob: -6.53198766708374
    10. '=_' → logprob: -7.15698766708374

Token 265: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.16675908863544464
    2. ' time' → logprob: -1.9167591333389282
    3. 'd' → logprob: -6.291759014129639
    4. '(time' → logprob: -6.791759014129639
    5. ' d' → logprob: -7.166759014129639
    6. ' max' → logprob: -7.416759014129639
    7. 'max' → logprob: -7.541759014129639
    8. ' math' → logprob: -7.916759014129639
    9. 'math' → logprob: -8.166759490966797
    10. ' (' → logprob: -8.541759490966797

Token 266: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4861615300178528
    2. ' +' → logprob: -0.9861615300178528
    3. '+d' → logprob: -4.486161708831787
    4. '+(' → logprob: -8.361161231994629
    5. '+
' → logprob: -8.486161231994629
    6. '*' → logprob: -9.611161231994629
    7. ' -' → logprob: -10.236161231994629
    8. '-' → logprob: -10.236161231994629
    9. ' +
' → logprob: -10.736161231994629
    10. '+=' → logprob: -10.736161231994629

Token 267: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.030866310000419617
    2. ' d' → logprob: -3.9058663845062256
    3. '(d' → logprob: -5.1558661460876465
    4. 'tickets' → logprob: -7.1558661460876465
    5. 'dist' → logprob: -7.4058661460876465
    6. '(' → logprob: -7.4058661460876465
    7. 'math' → logprob: -7.9058661460876465
    8. ' (' → logprob: -7.9058661460876465
    9. '1' → logprob: -8.155866622924805
    10. ' math' → logprob: -8.655866622924805

Token 268: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.14801622927188873
    2. ' /' → logprob: -2.3980162143707275
    3. '*' → logprob: -3.8980162143707275
    4. '/(' → logprob: -4.523016452789307
    5. '/t' → logprob: -4.523016452789307
    6. '*(' → logprob: -5.773016452789307
    7. ' *' → logprob: -7.148016452789307
    8. '*t' → logprob: -7.898016452789307
    9. '/math' → logprob: -9.023015975952148
    10. '*((' → logprob: -9.773015975952148

Token 269: ' tickets' (ID: 17323)
  Prédit: 'tickets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tickets' → logprob: -0.04119563102722168
    2. '(' → logprob: -4.541195869445801
    3. '(t' → logprob: -4.541195869445801
    4. 'math' → logprob: -4.791195869445801
    5. 'max' → logprob: -5.541195869445801
    6. ' tickets' → logprob: -6.041195869445801
    7. '(math' → logprob: -6.666195869445801
    8. '(max' → logprob: -7.291195869445801
    9. '((' → logprob: -7.416195869445801
    10. ' (' → logprob: -8.2911958694458

Token 270: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005699523026123643
    2. '[' → logprob: -7.500569820404053
    3. '[v' → logprob: -11.375570297241211
    4. '[m' → logprob: -13.875570297241211
    5. '[j' → logprob: -14.250570297241211
    6. '[u' → logprob: -14.250570297241211
    7. ' [' → logprob: -14.500570297241211
    8. '[
' → logprob: -14.625570297241211
    9. '[t' → logprob: -14.750570297241211
    10. '[s' → logprob: -14.750570297241211

Token 271: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05370846018195152
    2. ')' → logprob: -3.553708553314209
    3. '])' → logprob: -3.928708553314209
    4. ']
' → logprob: -6.803708553314209
    5. ' ]' → logprob: -6.928708553314209
    6. '[' → logprob: -7.178708553314209
    7. ' )' → logprob: -7.553708553314209
    8. ')
' → logprob: -8.42870807647705
    9. ']+' → logprob: -9.92870807647705
    10. '**' → logprob: -10.30370807647705

Token 272: '                       ' (ID: 968)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7635437250137329
    2. '                       ' → logprob: -0.8885437250137329
    3. '                        
' → logprob: -2.7635436058044434
    4. '                           ' → logprob: -4.013543605804443
    5. '                            
' → logprob: -4.388543605804443
    6. '               ' → logprob: -4.763543605804443
    7. '                   ' → logprob: -6.013543605804443
    8. '                
' → logprob: -6.013543605804443
    9. '                               ' → logprob: -6.263543605804443
    10. ' new' → logprob: -6.263543605804443

Token 273: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.22256194055080414
    2. 'new' → logprob: -1.7225619554519653
    3. ' new' → logprob: -4.347561836242676
    4. ' if' → logprob: -5.972561836242676
    5. ' n' → logprob: -6.222561836242676
    6. 'if' → logprob: -6.222561836242676
    7. 'next' → logprob: -7.222561836242676
    8. 'nm' → logprob: -8.472561836242676
    9. ' next' → logprob: -9.097561836242676
    10. '               ' → logprob: -9.222561836242676

Token 274: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.2243175059556961
    2. 'ew' → logprob: -1.9743175506591797
    3. 'dist' → logprob: -3.9743175506591797
    4. 'w' → logprob: -4.34931755065918
    5. 'ext' → logprob: -4.72431755065918
    6. 'u' → logprob: -4.72431755065918
    7. '_mask' → logprob: -5.59931755065918
    8. 't' → logprob: -5.84931755065918
    9. 'v' → logprob: -6.84931755065918
    10. 'e' → logprob: -6.84931755065918

Token 275: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.313264399766922
    2. ' =' → logprob: -1.3132643699645996
    3. '|' → logprob: -13.313264846801758
    4. ' |=' → logprob: -14.063264846801758
    5. ' ' → logprob: -15.938264846801758
    6. ' &=' → logprob: -16.438264846801758
    7. '＝' → logprob: -16.813264846801758
    8. ')' → logprob: -17.313264846801758
    9. '```' → logprob: -18.313264846801758
    10. '>' → logprob: -18.313264846801758

Token 276: ' mask' (ID: 10910)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.04874303564429283
    2. ' mask' → logprob: -3.0487430095672607
    3. '(mask' → logprob: -8.79874324798584
    4. '	mask' → logprob: -13.54874324798584
    5. ' ' → logprob: -13.79874324798584
    6. '
' → logprob: -14.17374324798584
    7. '   ' → logprob: -15.04874324798584
    8. '_mask' → logprob: -15.42374324798584
    9. 'm' → logprob: -15.79874324798584
    10. '0' → logprob: -15.79874324798584

Token 277: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.25720638036727905
    2. ' &' → logprob: -1.5072064399719238
    3. '|' → logprob: -5.382206439971924
    4. ' |' → logprob: -8.007205963134766
    5. '^' → logprob: -8.882205963134766
    6. ' ^' → logprob: -9.132205963134766
    7. '&
' → logprob: -10.257205963134766
    8. '&amp' → logprob: -11.382205963134766
    9. '&nbsp' → logprob: -12.132205963134766
    10. '&(' → logprob: -12.257205963134766

Token 278: ' ~(' (ID: 85491)
  Prédit: '~'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '~' → logprob: -0.03643551096320152
    2. '(~' → logprob: -3.411435604095459
    3. ' ~(' → logprob: -5.911435604095459
    4. ' (~' → logprob: -9.5364351272583
    5. '(' → logprob: -13.1614351272583
    6. ' ~' → logprob: -14.2864351272583
    7. '((' → logprob: -14.5364351272583
    8. '~~' → logprob: -14.6614351272583
    9. '~

' → logprob: -14.7864351272583
    10. '~,' → logprob: -15.1614351272583

Token 279: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009436229011043906
    2. '1' → logprob: -7.000943660736084
    3. ' (' → logprob: -10.375943183898926
    4. '```' → logprob: -15.125943183898926
    5. '   ' → logprob: -16.125944137573242
    6. ' ' → logprob: -16.250944137573242
    7. '
' → logprob: -16.375944137573242
    8. '{' → logprob: -17.000944137573242
    9. '[' → logprob: -17.125944137573242
    10. '           ' → logprob: -17.250944137573242

Token 280: '<<' (ID: 5354)
  Prédit: '<<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -5.200166469876422e-06
    2. ' <<' → logprob: -13.125004768371582
    3. '<' → logprob: -13.375004768371582
    4. '(' → logprob: -13.625004768371582
    5. '```' → logprob: -15.750004768371582
    6. '()<<' → logprob: -16.6250057220459
    7. '1' → logprob: -16.8750057220459
    8. '<<(' → logprob: -17.5000057220459
    9. '   ' → logprob: -17.7500057220459
    10. '&lt' → logprob: -18.0000057220459

Token 281: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -5.9153885558771435e-06
    2. ' i' → logprob: -12.125005722045898
    3. '(i' → logprob: -15.625005722045898
    4. '(' → logprob: -16.2500057220459
    5. '
' → logprob: -16.2500057220459
    6. '   ' → logprob: -17.0000057220459
    7. '```' → logprob: -17.7500057220459
    8. '[i' → logprob: -18.3750057220459
    9. '	i' → logprob: -18.5000057220459
    10. '1' → logprob: -18.8750057220459

Token 282: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.005329455249011517
    2. ')' → logprob: -5.255329608917236
    3. '                       ' → logprob: -9.755329132080078
    4. ')
' → logprob: -10.255329132080078
    5. ')

' → logprob: -13.630329132080078
    6. '                           ' → logprob: -14.880329132080078
    7. '                   ' → logprob: -15.005329132080078
    8. ' )
' → logprob: -15.130329132080078
    9. '               ' → logprob: -15.755329132080078
    10. ')`
' → logprob: -16.630329132080078

Token 283: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.16927620768547058
    2. '
' → logprob: -3.294276237487793
    3. '<|end|>' → logprob: -3.544276237487793
    4. '                           ' → logprob: -3.669276237487793
    5. '                        
' → logprob: -3.919276237487793
    6. ')' → logprob: -3.919276237487793
    7. '                               ' → logprob: -5.044276237487793
    8. '               ' → logprob: -5.419276237487793
    9. ' 
' → logprob: -6.044276237487793
    10. ' if' → logprob: -6.544276237487793

Token 284: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.10698358714580536
    2. ' if' → logprob: -2.3569836616516113
    3. '                       ' → logprob: -5.106983661651611
    4. '               ' → logprob: -7.481983661651611
    5. '                           ' → logprob: -9.356983184814453
    6. '                               ' → logprob: -10.731983184814453
    7. '                   ' → logprob: -10.856983184814453
    8. '           ' → logprob: -12.356983184814453
    9. '```' → logprob: -13.481983184814453
    10. ' ' → logprob: -14.356983184814453

Token 285: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.7068564295768738
    2. ' dist' → logprob: -0.8318564295768738
    3. ' nt' → logprob: -3.3318564891815186
    4. 'nt' → logprob: -3.3318564891815186
    5. 'n' → logprob: -11.081856727600098
    6. '(nt' → logprob: -11.206856727600098
    7. '(dist' → logprob: -11.206856727600098
    8. '	dist' → logprob: -11.706856727600098
    9. ' n' → logprob: -11.956856727600098
    10. '   ' → logprob: -12.394356727600098

Token 286: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -5.796184723294573e-06
    2. 'v' → logprob: -12.375005722045898
    3. '[u' → logprob: -13.500005722045898
    4. '[' → logprob: -17.3750057220459
    5. '<v' → logprob: -18.0000057220459
    6. '=v' → logprob: -18.2500057220459
    7. '```' → logprob: -18.2500057220459
    8. ' v' → logprob: -19.1250057220459
    9. '	v' → logprob: -19.1250057220459
    10. ')v' → logprob: -19.3750057220459

Token 287: '][' (ID: 2696)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.0633856058120728
    2. '[v' → logprob: -1.0633856058120728
    3. '][' → logprob: -1.1883856058120728
    4. '[' → logprob: -5.438385486602783
    5. ']' → logprob: -9.063385963439941
    6. 'n' → logprob: -9.313385963439941
    7. '[i' → logprob: -10.813385963439941
    8. '[node' → logprob: -10.813385963439941
    9. '[u' → logprob: -10.938385963439941
    10. '[next' → logprob: -11.188385963439941

Token 288: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00019614976190496236
    2. 'mask' → logprob: -8.62519645690918
    3. ' n' → logprob: -11.75019645690918
    4. '(n' → logprob: -13.50019645690918
    5. ']' → logprob: -13.87519645690918
    6. '
' → logprob: -14.00019645690918
    7. 'nt' → logprob: -14.00019645690918
    8. '   ' → logprob: -14.25019645690918
    9. '0' → logprob: -14.62519645690918
    10. ' ' → logprob: -14.75019645690918

Token 289: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -9.610702363715973e-06
    2. '[v' → logprob: -12.375009536743164
    3. '[' → logprob: -13.125009536743164
    4. 'v' → logprob: -13.500009536743164
    5. '_mask' → logprob: -14.625009536743164
    6. 'MASK' → logprob: -15.250009536743164
    7. '][' → logprob: -15.625009536743164
    8. '[u' → logprob: -15.750009536743164
    9. '	mask' → logprob: -15.875009536743164
    10. 'm' → logprob: -15.875009536743164

Token 290: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.032565440982580185
    2. ']' → logprob: -4.032565593719482
    3. ']>' → logprob: -4.407565593719482
    4. ' >' → logprob: -6.157565593719482
    5. ' ]' → logprob: -12.782565116882324
    6. '[' → logprob: -13.157565116882324
    7. '   ' → logprob: -13.407565116882324
    8. ' ' → logprob: -14.282565116882324
    9. '">' → logprob: -14.532565116882324
    10. '  ' → logprob: -15.032565116882324

Token 291: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.01815205067396164
    2. ' >' → logprob: -4.018152236938477
    3. '＞' → logprob: -15.518152236938477
    4. ' ' → logprob: -15.643152236938477
    5. '>tag' → logprob: -15.643152236938477
    6. '>`' → logprob: -15.768152236938477
    7. ')>' → logprob: -15.893152236938477
    8. '">' → logprob: -16.018152236938477
    9. '>
' → logprob: -16.143152236938477
    10. '>[' → logprob: -16.268152236938477

Token 292: ' nt' (ID: 7646)
  Prédit: 'nt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nt' → logprob: -0.12694647908210754
    2. ' nt' → logprob: -2.126946449279785
    3. '(nt' → logprob: -11.251946449279785
    4. '_nt' → logprob: -13.876946449279785
    5. 'nts' → logprob: -14.251946449279785
    6. '.nt' → logprob: -14.751946449279785
    7. '   ' → logprob: -14.876946449279785
    8. 'n' → logprob: -15.001946449279785
    9. 'ntime' → logprob: -15.126946449279785
    10. ' ' → logprob: -15.376946449279785

Token 293: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10261625051498413
    2. ':
' → logprob: -2.477616310119629
    3. '                           ' → logprob: -5.227616310119629
    4. ' :' → logprob: -5.852616310119629
    5. ' :
' → logprob: -6.352616310119629
    6. '                               ' → logprob: -6.352616310119629
    7. '                            ' → logprob: -7.977616310119629
    8. '                       ' → logprob: -8.227616310119629
    9. '+' → logprob: -8.352616310119629
    10. '                                   ' → logprob: -8.852616310119629

Token 294: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.42164427042007446
    2. '                               ' → logprob: -1.5466442108154297
    3. '[' → logprob: -3.2966442108154297
    4. '                                   ' → logprob: -3.5466442108154297
    5. '<|end|>' → logprob: -4.17164421081543
    6. '```' → logprob: -4.92164421081543
    7. ' 
' → logprob: -5.29664421081543
    8. '                            ' → logprob: -5.42164421081543
    9. '                       ' → logprob: -5.42164421081543
    10. '                            
' → logprob: -5.67164421081543

Token 295: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.12727990746498108
    2. ' dist' → logprob: -2.1272799968719482
    3. '                               ' → logprob: -8.002280235290527
    4. '                           ' → logprob: -11.252280235290527
    5. '	dist' → logprob: -13.252280235290527
    6. '                                   ' → logprob: -14.752280235290527
    7. '(dist' → logprob: -15.252280235290527
    8. '                            ' → logprob: -15.377280235290527
    9. '```' → logprob: -15.377280235290527
    10. '.dist' → logprob: -15.502280235290527

Token 296: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -3.128163257315464e-07
    2. 'v' → logprob: -15.5
    3. '<v' → logprob: -17.875
    4. '[u' → logprob: -18.375
    5. '][' → logprob: -19.125
    6. '[' → logprob: -19.125
    7. '```' → logprob: -19.5
    8. '=v' → logprob: -19.5
    9. '	v' → logprob: -19.75
    10. ',v' → logprob: -19.875

Token 297: '][' (ID: 2696)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.0040823169983923435
    2. '][' → logprob: -5.504082202911377
    3. 'v' → logprob: -14.004082679748535
    4. '[' → logprob: -14.629082679748535
    5. ')[' → logprob: -14.754082679748535
    6. ']' → logprob: -14.754082679748535
    7. '}[' → logprob: -15.129082679748535
    8. '<v' → logprob: -15.129082679748535
    9. '[u' → logprob: -15.254082679748535
    10. '                           ' → logprob: -15.629082679748535

Token 298: 'n' (ID: 77)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.2871912121772766
    2. 'n' → logprob: -1.9121911525726318
    3. 'nt' → logprob: -2.287191152572632
    4. ' nt' → logprob: -8.912191390991211
    5. 'mask' → logprob: -9.287191390991211
    6. '(nt' → logprob: -10.412191390991211
    7. 'vt' → logprob: -11.537191390991211
    8. ' v' → logprob: -11.912191390991211
    9. 't' → logprob: -12.037191390991211
    10. '[v' → logprob: -12.162191390991211

Token 299: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.006340991705656052
    2. '[v' → logprob: -5.131340980529785
    3. 'v' → logprob: -8.256340980529785
    4. '[' → logprob: -9.756340980529785
    5. '[i' → logprob: -11.506340980529785
    6. 'pop' → logprob: -11.631340980529785
    7. 'MASK' → logprob: -11.631340980529785
    8. '(v' → logprob: -12.131340980529785
    9. 'm' → logprob: -12.506340980529785
    10. '_mask' → logprob: -12.506340980529785

Token 300: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5767715573310852
    2. ' =' → logprob: -0.8267715573310852
    3. ']=' → logprob: -7.4517717361450195
    4. ']' → logprob: -8.32677173614502
    5. ',' → logprob: -12.70177173614502
    6. ')' → logprob: -13.32677173614502
    7. ')=' → logprob: -13.57677173614502
    8. '[' → logprob: -13.82677173614502
    9. '=
' → logprob: -13.95177173614502
    10. '=v' → logprob: -14.70177173614502

Token 301: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0485873706638813
    2. ' =' → logprob: -3.0485873222351074
    3. '＝' → logprob: -18.173587799072266
    4. ',' → logprob: -18.673587799072266
    5. '.=' → logprob: -18.673587799072266
    6. '=

' → logprob: -19.923587799072266
    7. '[' → logprob: -20.548587799072266
    8. ']=' → logprob: -20.673587799072266
    9. '=
' → logprob: -20.798587799072266
    10. '=n' → logprob: -20.798587799072266

Token 302: ' nt' (ID: 7646)
  Prédit: ' nt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nt' → logprob: -0.5759599804878235
    2. 'nt' → logprob: -0.8259599804878235
    3. '(nt' → logprob: -10.950960159301758
    4. '_nt' → logprob: -14.075960159301758
    5. 'nd' → logprob: -14.325960159301758
    6. 'n' → logprob: -14.825960159301758
    7. '
' → logprob: -15.700960159301758
    8. ' nd' → logprob: -16.200960159301758
    9. 'nc' → logprob: -16.450960159301758
    10. 'ns' → logprob: -16.450960159301758

Token 303: '
' (ID: 198)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.00048632267862558365
    2. '                            ' → logprob: -8.125486373901367
    3. '                               ' → logprob: -9.625486373901367
    4. '                       ' → logprob: -10.750486373901367
    5. '           ' → logprob: -10.750486373901367
    6. ',' → logprob: -11.375486373901367
    7. '                            
' → logprob: -11.375486373901367
    8. '               ' → logprob: -11.500486373901367
    9. '                             ' → logprob: -11.500486373901367
    10. '                   ' → logprob: -11.875486373901367

Token 304: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.00037859921576455235
    2. '                            ' → logprob: -9.000378608703613
    3. '                            
' → logprob: -9.375378608703613
    4. ' he' → logprob: -9.375378608703613
    5. 'he' → logprob: -10.000378608703613
    6. '                               ' → logprob: -11.250378608703613
    7. '						' → logprob: -12.000378608703613
    8. '                       ' → logprob: -12.500378608703613
    9. '                          ' → logprob: -12.875378608703613
    10. ',' → logprob: -13.000378608703613

Token 305: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' (adapté à ' he') → logprob: -3.5597102396423e-05
    2. ' he' → logprob: -10.250035285949707
    3. 'heap' → logprob: -15.875035285949707
    4. '                           ' → logprob: -17.625036239624023
    5. '                       ' → logprob: -20.000036239624023
    6. '                   ' → logprob: -20.250036239624023
    7. '                               ' → logprob: -20.375036239624023
    8. '           ' → logprob: -20.500036239624023
    9. '                                   ' → logprob: -20.625036239624023
    10. '   ' → logprob: -20.750036239624023

Token 306: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -3.128163257315464e-07
    2. 'ap' → logprob: -15.375
    3. ' app' → logprob: -17.875
    4. 'a' → logprob: -19.125
    5. 'pp' → logprob: -20.75
    6. 'appt' → logprob: -21.0
    7. 'App' → logprob: -21.125
    8. '(app' → logprob: -21.625
    9. '_app' → logprob: -21.875
    10. 'append' → logprob: -21.875

Token 307: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -7.052377623040229e-05
    2. 'push' → logprob: -9.625070571899414
    3. 'op' → logprob: -12.625070571899414
    4. 'app' → logprob: -14.375070571899414
    5. 'sh' → logprob: -15.250070571899414
    6. 'p' → logprob: -15.625070571899414
    7. 'us' → logprob: -16.875070571899414
    8. 'pp' → logprob: -17.000070571899414
    9. '[' → logprob: -17.375070571899414
    10. '```' → logprob: -17.375070571899414

Token 308: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -3.128163257315464e-07
    2. 'heap' → logprob: -15.25
    3. '(' → logprob: -16.875
    4. ' (' → logprob: -18.875
    5. '```' → logprob: -18.875
    6. ' heap' → logprob: -19.0
    7. '(hero' → logprob: -19.5
    8. '.heap' → logprob: -19.625
    9. '(kernel' → logprob: -19.875
    10. '(queue' → logprob: -19.875

Token 309: ',(' (ID: 27243)
  Prédit: '(heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(heap' → logprob: -3.8889261304575484e-06
    2. '(' → logprob: -12.625003814697266
    3. ' (' → logprob: -15.125003814697266
    4. '((' → logprob: -16.250003814697266
    5. 'heap' → logprob: -16.875003814697266
    6. '(h' → logprob: -16.875003814697266
    7. '(
' → logprob: -17.000003814697266
    8. ')' → logprob: -17.750003814697266
    9. ',' → logprob: -18.000003814697266
    10. '```' → logprob: -18.750003814697266

Token 310: 'nt' (ID: 578)
  Prédit: 'nt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nt' → logprob: -3.531315314830863e-06
    2. ' nt' → logprob: -12.750003814697266
    3. '(nt' → logprob: -14.625003814697266
    4. '_nt' → logprob: -18.125003814697266
    5. '
' → logprob: -18.375003814697266
    6. '   ' → logprob: -19.125003814697266
    7. 'nts' → logprob: -19.250003814697266
    8. '.nt' → logprob: -20.000003814697266
    9. 'n' → logprob: -20.375003814697266
    10. 'ntime' → logprob: -20.500003814697266

Token 311: ',v' (ID: 30680)
  Prédit: ',v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',v' → logprob: -0.10024431347846985
    2. ',' → logprob: -2.3502442836761475
    3. ' ,' → logprob: -10.350244522094727
    4. 'v' → logprob: -12.225244522094727
    5. ',
' → logprob: -15.350244522094727
    6. ' v' → logprob: -15.725244522094727
    7. '	v' → logprob: -16.100244522094727
    8. '```' → logprob: -16.100244522094727
    9. ',n' → logprob: -16.850244522094727
    10. ')v' → logprob: -17.350244522094727

Token 312: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.003294162917882204
    2. ',' → logprob: -5.753293991088867
    3. 'n' → logprob: -9.128293991088867
    4. ' ,' → logprob: -12.378293991088867
    5. ' n' → logprob: -12.878293991088867
    6. ',
' → logprob: -15.003293991088867
    7. ',m' → logprob: -15.503293991088867
    8. ',(' → logprob: -16.503293991088867
    9. ',new' → logprob: -16.753293991088867
    10. ',node' → logprob: -17.628293991088867

Token 313: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.0004473540757317096
    2. 'ask' → logprob: -7.7504472732543945
    3. 'n' → logprob: -11.500447273254395
    4. 'm' → logprob: -12.625447273254395
    5. '_mask' → logprob: -14.500447273254395
    6. 'a' → logprob: -15.125447273254395
    7. '(mask' → logprob: -15.125447273254395
    8. 'emask' → logprob: -15.250447273254395
    9. 'MASK' → logprob: -15.250447273254395
    10. 'mark' → logprob: -15.625447273254395

Token 314: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00021903318702243268
    2. ')' → logprob: -9.125219345092773
    3. '))
' → logprob: -9.125219345092773
    4. ')))' → logprob: -14.500219345092773
    5. ' ))' → logprob: -15.125219345092773
    6. '                           ' → logprob: -15.625219345092773
    7. '))

' → logprob: -16.250219345092773
    8. '                       ' → logprob: -16.750219345092773
    9. '           ' → logprob: -16.875219345092773
    10. '))
' → logprob: -17.125219345092773

Token 315: '       ' (ID: 309)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1387472152709961
    2. '<|end|>' → logprob: -2.638747215270996
    3. '       ' → logprob: -4.263747215270996
    4. '                ' → logprob: -4.763747215270996
    5. ' else' → logprob: -4.888747215270996
    6. '        ' → logprob: -5.138747215270996
    7. 'else' → logprob: -5.388747215270996
    8. ')' → logprob: -5.388747215270996
    9. '              ' → logprob: -6.013747215270996
    10. '           ' → logprob: -6.138747215270996

Token 316: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.40353429317474365
    2. '<|end|>' → logprob: -1.1535342931747437
    3. ' else' → logprob: -4.778534412384033
    4. '   ' → logprob: -5.403534412384033
    5. '       ' → logprob: -6.653534412384033
    6. '```' → logprob: -7.153534412384033
    7. '	else' → logprob: -7.278534412384033
    8. '
' → logprob: -8.278533935546875
    9. '<|end|>' → logprob: -8.528533935546875
    10. 'elif' → logprob: -9.528533935546875

Token 317: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014178205281496048
    2. ':
' → logprob: -4.264178276062012
    3. '           ' → logprob: -11.764178276062012
    4. '       ' → logprob: -12.889178276062012
    5. ' :' → logprob: -14.014178276062012
    6. ':

' → logprob: -14.139178276062012
    7. '   ' → logprob: -14.264178276062012
    8. ':
' → logprob: -14.389178276062012
    9. '>' → logprob: -15.639178276062012
    10. '        ' → logprob: -15.639178276062012

Token 318: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6022951602935791
    2. '           ' → logprob: -1.102295160293579
    3. '   ' → logprob: -2.602295160293579
    4. 'print' → logprob: -3.102295160293579
    5. ' print' → logprob: -6.727294921875
    6. '	       ' → logprob: -10.102294921875
    7. '	   ' → logprob: -11.102294921875
    8. '               ' → logprob: -11.477294921875
    9. '	print' → logprob: -11.477294921875
    10. '```' → logprob: -11.977294921875

Token 319: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.006435637827962637
    2. '       ' → logprob: -5.256435871124268
    3. ' print' → logprob: -6.881435871124268
    4. '   ' → logprob: -9.25643539428711
    5. '           ' → logprob: -9.50643539428711
    6. '	print' → logprob: -13.13143539428711
    7. ' ' → logprob: -13.38143539428711
    8. '```' → logprob: -14.75643539428711
    9. '               ' → logprob: -15.50643539428711
    10. '     ' → logprob: -16.50643539428711

Token 320: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.011346542276442051
    2. '(' → logprob: -4.511346340179443
    3. '('' → logprob: -8.511346817016602
    4. '("(' → logprob: -10.011346817016602
    5. '(-' → logprob: -11.011346817016602
    6. '   ' → logprob: -11.011346817016602
    7. '("("' → logprob: -11.511346817016602
    8. '(
' → logprob: -12.511346817016602
    9. '       ' → logprob: -13.011346817016602
    10. ' ("' → logprob: -14.636346817016602

Token 321: 'Impossible' (ID: 192245)
  Prédit: 'Impossible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Impossible' → logprob: -0.014071004465222359
    2. 'IMP' → logprob: -4.389070987701416
    3. 'im' → logprob: -7.639070987701416
    4. '-' → logprob: -7.639070987701416
    5. '"' → logprob: -8.639071464538574
    6. 'Infinity' → logprob: -9.264071464538574
    7. 'No' → logprob: -9.889071464538574
    8. 'Never' → logprob: -10.014071464538574
    9. 'INF' → logprob: -10.514071464538574
    10. 'Inf' → logprob: -10.639071464538574

Token 322: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -4.961759259458631e-06
    2. '")
' → logprob: -13.125004768371582
    3. ')' → logprob: -13.500004768371582
    4. ')")' → logprob: -13.875004768371582
    5. '")}' → logprob: -15.250004768371582
    6. '");' → logprob: -16.1250057220459
    7. '<|end|>' → logprob: -16.7500057220459
    8. '}")' → logprob: -17.0000057220459
    9. '!")' → logprob: -17.1250057220459
    10. '')' → logprob: -17.7500057220459

Token 323: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 324: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.008614808320999146
    2. '__' → logprob: -4.758615016937256
    3. 'name' → logprob: -15.633614540100098
    4. '___' → logprob: -17.008615493774414
    5. ' ' → logprob: -18.008615493774414
    6. ' "__' → logprob: -18.008615493774414
    7. '_' → logprob: -18.133615493774414
    8. '  ' → logprob: -18.133615493774414
    9. ' '__' → logprob: -18.133615493774414
    10. '_name' → logprob: -18.383615493774414

Token 325: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.7955477833747864
    2. ' ==' → logprob: -1.0455477237701416
    3. ' __' → logprob: -1.6705477237701416
    4. '==' → logprob: -5.045547962188721
    5. '=="' → logprob: -7.045547962188721
    6. '_' → logprob: -7.420547962188721
    7. ' =="' → logprob: -8.170547485351562
    8. 'name' → logprob: -9.170547485351562
    9. '<|end|>' → logprob: -9.295547485351562
    10. '_name' → logprob: -9.420547485351562

Token 326: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.006095046643167734
    2. '==' → logprob: -5.506094932556152
    3. ' ==' → logprob: -6.881094932556152
    4. '=="' → logprob: -7.006094932556152
    5. '__.__' → logprob: -10.131094932556152
    6. '_' → logprob: -10.506094932556152
    7. '=='' → logprob: -11.756094932556152
    8. '__.' → logprob: -13.506094932556152
    9. '__":
' → logprob: -14.256094932556152
    10. '___' → logprob: -14.381094932556152

Token 327: '=="' (ID: 24027)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.15468016266822815
    2. ' ==' → logprob: -2.5296802520751953
    3. '==' → logprob: -2.9046802520751953
    4. '=="' → logprob: -4.779680252075195
    5. '=='' → logprob: -8.654680252075195
    6. '__.__' → logprob: -9.779680252075195
    7. '__["' → logprob: -10.279680252075195
    8. '_' → logprob: -10.529680252075195
    9. '()==' → logprob: -10.529680252075195
    10. '__":
' → logprob: -10.529680252075195

Token 328: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.02127515897154808
    2. ''' → logprob: -4.021275043487549
    3. '"' → logprob: -5.771275043487549
    4. ' __' → logprob: -12.896275520324707
    5. '___' → logprob: -13.646275520324707
    6. 'main' → logprob: -15.146275520324707
    7. ' "__' → logprob: -15.521275520324707
    8. '_main' → logprob: -16.02127456665039
    9. '____' → logprob: -16.39627456665039
    10. '/__' → logprob: -16.77127456665039

Token 329: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0009436229011043906
    2. '"' → logprob: -7.000943660736084
    3. 'name' → logprob: -10.500943183898926
    4. ''' → logprob: -12.750943183898926
    5. '__' → logprob: -14.625943183898926
    6. '"name' → logprob: -14.750943183898926
    7. '_main' → logprob: -15.125943183898926
    8. ' "__' → logprob: -15.250943183898926
    9. ' main' → logprob: -15.250943183898926
    10. '	main' → logprob: -16.750944137573242

Token 330: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.2103029489517212
    2. '__' → logprob: -1.9603029489517212
    3. ':' → logprob: -3.3353028297424316
    4. '__':
' → logprob: -5.585302829742432
    5. '__:' → logprob: -5.710302829742432
    6. ':
' → logprob: -5.835302829742432
    7. '():
' → logprob: -5.960302829742432
    8. '_' → logprob: -8.33530330657959
    9. '   ' → logprob: -9.83530330657959
    10. '.__' → logprob: -10.21030330657959

Token 331: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01732230931520462
    2. 'solve' → logprob: -4.642322540283203
    3. '	s' → logprob: -5.392322540283203
    4. ' solve' → logprob: -5.892322540283203
    5. '.solve' → logprob: -9.267322540283203
    6. '<|end|>' → logprob: -10.017322540283203
    7. '    
' → logprob: -10.142322540283203
    8. '```' → logprob: -11.017322540283203
    9. '   ' → logprob: -11.892322540283203
    10. '
' → logprob: -12.267322540283203

Token 332: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' (adapté à ' solve') → logprob: -0.0006491714157164097
    2. '   ' → logprob: -7.5006489753723145
    3. ' solve' → logprob: -9.250649452209473
    4. '.solve' → logprob: -15.875649452209473
    5. '  ' → logprob: -17.875648498535156
    6. '	s' → logprob: -18.250648498535156
    7. ' ' → logprob: -18.750648498535156
    8. '```' → logprob: -19.125648498535156
    9. 'resolve' → logprob: -19.750648498535156
    10. '    
' → logprob: -20.500648498535156

Token 333: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 331
Tokens correctement prédits (1ère position, stricte): 157
Tokens correctement prédits (1ère position, avec adaptation): 174
Tokens correctement prédits (top 10): 303
Précision stricte (1ère position): 47.43%
Précision adaptée (1ère position): 52.57%
Précision (top 10): 91.54%
================================================================================
