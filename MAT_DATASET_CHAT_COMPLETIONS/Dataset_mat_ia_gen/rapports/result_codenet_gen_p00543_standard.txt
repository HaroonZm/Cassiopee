================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:15:19
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N,M=map(int,input().split())
A=[int(input()) for _ in range(N)]
for k in range(2,M+1):
    i=0
    while i<N-1:
        if A[i]%k > A[i+1]%k:
            A[i],A[i+1]=A[i+1],A[i]
            i+=1
        i+=1
for x in A:
    print(x)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ',M' (ID: 54127)
  → Token d'amorce (pas de prédiction)

Token 2: '=' (ID: 28)
  → Token d'amorce (pas de prédiction)

Token 3: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.29158642888069153
    2. ' map' → logprob: -1.4165863990783691
    3. 'input' → logprob: -4.916586399078369
    4. ' input' → logprob: -6.666586399078369
    5. '10' → logprob: -7.041586399078369
    6. 'list' → logprob: -7.916586399078369
    7. ' ' → logprob: -8.666586875915527
    8. '0' → logprob: -9.041586875915527
    9. ' list' → logprob: -9.041586875915527
    10. 'int' → logprob: -9.416586875915527

Token 4: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.031151410192251205
    2. '(int' → logprob: -3.906151294708252
    3. '(str' → logprob: -5.531151294708252
    4. '(lambda' → logprob: -5.531151294708252
    5. '```' → logprob: -6.531151294708252
    6. '<|end|>' → logprob: -7.781151294708252
    7. '(input' → logprob: -8.65615177154541
    8. '[int' → logprob: -9.53115177154541
    9. '(len' → logprob: -9.53115177154541
    10. '(
' → logprob: -9.53115177154541

Token 5: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.15680192410945892
    2. ')' → logprob: -2.03180193901062
    3. '(' → logprob: -4.906801700592041
    4. 'input' → logprob: -7.031801700592041
    5. '`)' → logprob: -7.281801700592041
    6. '(user' → logprob: -7.281801700592041
    7. '```' → logprob: -7.281801700592041
    8. '(int' → logprob: -7.406801700592041
    9. ',input' → logprob: -7.906801700592041
    10. '(str' → logprob: -7.906801700592041

Token 6: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.21142327785491943
    2. '()' → logprob: -2.086423397064209
    3. ')' → logprob: -3.461423397064209
    4. '(' → logprob: -4.836423397064209
    5. '('' → logprob: -4.961423397064209
    6. '().' → logprob: -5.336423397064209
    7. '(""))' → logprob: -5.711423397064209
    8. '`()' → logprob: -6.836423397064209
    9. '()>' → logprob: -6.836423397064209
    10. '()">' → logprob: -6.836423397064209

Token 7: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0024694709572941065
    2. ')' → logprob: -6.252469539642334
    3. 'strip' → logprob: -7.627469539642334
    4. ' split' → logprob: -10.377469062805176
    5. 'rstrip' → logprob: -11.252469062805176
    6. 'read' → logprob: -13.127469062805176
    7. '(split' → logprob: -13.377469062805176
    8. 'replace' → logprob: -13.877469062805176
    9. '())' → logprob: -14.002469062805176
    10. '```' → logprob: -14.377469062805176

Token 8: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0026546090375632048
    2. '())' → logprob: -6.377654552459717
    3. '))' → logprob: -7.502654552459717
    4. '`)' → logprob: -8.377655029296875
    5. '()' → logprob: -9.127655029296875
    6. '(' → logprob: -10.252655029296875
    7. '')' → logprob: -12.377655029296875
    8. ')`' → logprob: -12.377655029296875
    9. '```' → logprob: -12.877655029296875
    10. ' )' → logprob: -13.127655029296875

Token 9: 'A' (ID: 32)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06837956607341766
    2. 'for' → logprob: -3.0683796405792236
    3. 's' → logprob: -5.1933794021606445
    4. 'array' → logprob: -5.9433794021606445
    5. 'arr' → logprob: -6.0683794021606445
    6. 'A' → logprob: -6.1933794021606445
    7. 'data' → logprob: -6.8183794021606445
    8. 'd' → logprob: -7.1933794021606445
    9. '```' → logprob: -7.1933794021606445
    10. 'r' → logprob: -7.3183794021606445

Token 10: '=[' (ID: 13370)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0008121283026412129
    2. '\[' → logprob: -8.250812530517578
    3. '.' → logprob: -8.500812530517578
    4. '=' → logprob: -9.250812530517578
    5. '[i' → logprob: -9.500812530517578
    6. '[]' → logprob: -10.125812530517578
    7. '[A' → logprob: -10.250812530517578
    8. '[a' → logprob: -10.875812530517578
    9. '[:]' → logprob: -11.000812530517578
    10. '[
' → logprob: -11.375812530517578

Token 11: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -2.5822400857578032e-05
    2. '0' → logprob: -11.500025749206543
    3. ' int' → logprob: -12.125025749206543
    4. 'map' → logprob: -12.250025749206543
    5. ']int' → logprob: -12.875025749206543
    6. 'list' → logprob: -13.875025749206543
    7. '(int' → logprob: -14.375025749206543
    8. '[int' → logprob: -14.875025749206543
    9. ']' → logprob: -15.250025749206543
    10. '*' → logprob: -15.375025749206543

Token 12: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03285444527864456
    2. '(input' → logprob: -4.2828545570373535
    3. '(x' → logprob: -4.9078545570373535
    4. '()' → logprob: -5.4078545570373535
    5. '()]' → logprob: -5.5328545570373535
    6. '(a' → logprob: -6.7828545570373535
    7. '(i' → logprob: -6.9078545570373535
    8. '(A' → logprob: -8.157854080200195
    9. '(

' → logprob: -9.282854080200195
    10. '(
' → logprob: -10.282854080200195

Token 13: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00029840084607712924
    2. ')' → logprob: -9.000298500061035
    3. '()' → logprob: -9.375298500061035
    4. '()]' → logprob: -9.750298500061035
    5. '()))' → logprob: -11.375298500061035
    6. ')])' → logprob: -11.750298500061035
    7. ')]' → logprob: -12.000298500061035
    8. '().' → logprob: -13.250298500061035
    9. ' ())' → logprob: -13.750298500061035
    10. '()),' → logprob: -14.000298500061035

Token 14: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.019600259140133858
    2. '()' → logprob: -4.5196003913879395
    3. ')]' → logprob: -5.2696003913879395
    4. '())' → logprob: -5.8946003913879395
    5. '()]' → logprob: -8.019599914550781
    6. 'for' → logprob: -8.769599914550781
    7. ']' → logprob: -10.144599914550781
    8. ')])' → logprob: -10.769599914550781
    9. ' )' → logprob: -11.019599914550781
    10. ' for' → logprob: -11.269599914550781

Token 15: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5559248328208923
    2. '_' → logprob: -0.9309248328208923
    3. ' _' → logprob: -3.930924892425537
    4. ' ' → logprob: -4.555924892425537
    5. ' i' → logprob: -6.805924892425537
    6. ' in' → logprob: -7.180924892425537
    7. '_range' → logprob: -8.805924415588379
    8. 'range' → logprob: -10.430924415588379
    9. '	range' → logprob: -10.680924415588379
    10. ' ▁' → logprob: -10.805924415588379

Token 16: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.043060053139925
    2. 'in' → logprob: -3.168060064315796
    3. 'range' → logprob: -10.293060302734375
    4. ' ' → logprob: -10.668060302734375
    5. ' range' → logprob: -13.918060302734375
    6. '  ' → logprob: -14.293060302734375
    7. '```' → logprob: -14.918060302734375
    8. 'i' → logprob: -15.293060302734375
    9. '	in' → logprob: -15.293060302734375
    10. ')' → logprob: -15.543060302734375

Token 17: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -7.517272024415433e-05
    2. ' range' → logprob: -9.500075340270996
    3. '(range' → logprob: -16.75007438659668
    4. '	range' → logprob: -17.25007438659668
    5. 'ange' → logprob: -17.75007438659668
    6. '.range' → logprob: -18.75007438659668
    7. '_range' → logprob: -19.37507438659668
    8. 'rang' → logprob: -19.50007438659668
    9. 'ran' → logprob: -20.00007438659668
    10. 'rage' → logprob: -21.12507438659668

Token 18: '(N' (ID: 10564)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.0022118736524134874
    2. '(' → logprob: -6.502212047576904
    3. '(N' → logprob: -7.252212047576904
    4. '(
' → logprob: -15.002211570739746
    5. ' (' → logprob: -16.377212524414062
    6. '(A' → logprob: -16.502212524414062
    7. 'M' → logprob: -16.627212524414062
    8. '(K' → logprob: -16.752212524414062
    9. '(n' → logprob: -16.877212524414062
    10. '(

' → logprob: -17.502212524414062

Token 19: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0004235243541188538
    2. ')' → logprob: -8.125423431396484
    3. ']' → logprob: -9.000423431396484
    4. ')])' → logprob: -13.500423431396484
    5. '])]' → logprob: -14.000423431396484
    6. '')]' → logprob: -14.875423431396484
    7. '])' → logprob: -15.125423431396484
    8. ')],' → logprob: -15.250423431396484
    9. ')]
' → logprob: -15.625423431396484
    10. ' )' → logprob: -16.000423431396484

Token 20: 'for' (ID: 1938)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8022003173828125
    2. 'A' → logprob: -0.9272003173828125
    3. 'B' → logprob: -3.1772003173828125
    4. 'dp' → logprob: -3.5522003173828125
    5. 'a' → logprob: -3.6772003173828125
    6. 'result' → logprob: -4.3022003173828125
    7. 'for' → logprob: -4.8022003173828125
    8. 'S' → logprob: -4.9272003173828125
    9. 'C' → logprob: -4.9272003173828125
    10. 'd' → logprob: -5.1772003173828125

Token 21: ' k' (ID: 372)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0499037429690361
    2. ' _' → logprob: -3.674903631210327
    3. ' ' → logprob: -4.049903869628906
    4. '_' → logprob: -5.174903869628906
    5. 'i' → logprob: -8.799903869628906
    6. ' x' → logprob: -10.674903869628906
    7. ' ' → logprob: -11.174903869628906
    8. ' ‌' → logprob: -11.174903869628906
    9. ' in' → logprob: -11.799903869628906
    10. ' a' → logprob: -11.924903869628906

Token 22: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00349530391395092
    2. 'in' → logprob: -5.878495216369629
    3. ' ' → logprob: -7.378495216369629
    4. 'n' → logprob: -10.378495216369629
    5. '  ' → logprob: -10.753495216369629
    6. ' i' → logprob: -12.753495216369629
    7. '	in' → logprob: -13.253495216369629
    8. 'space' → logprob: -13.503495216369629
    9. '_' → logprob: -13.878495216369629
    10. 'range' → logprob: -14.003495216369629

Token 23: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5233438014984131
    2. ' range' → logprob: -0.8983438014984131
    3. 'A' → logprob: -9.148344039916992
    4. ' A' → logprob: -9.273344039916992
    5. ' ' → logprob: -12.023344039916992
    6. 'rang' → logprob: -12.773344039916992
    7. 'r' → logprob: -13.148344039916992
    8. '(range' → logprob: -13.523344039916992
    9. '	range' → logprob: -14.023344039916992
    10. 'Range' → logprob: -14.148344039916992

Token 24: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20404137670993805
    2. '(M' → logprob: -1.7040413618087769
    3. '(N' → logprob: -5.954041481018066
    4. ' (' → logprob: -11.329041481018066
    5. '(k' → logprob: -12.329041481018066
    6. '(m' → logprob: -13.204041481018066
    7. '(A' → logprob: -13.329041481018066
    8. '(range' → logprob: -13.329041481018066
    9. '((' → logprob: -13.829041481018066
    10. '(n' → logprob: -13.829041481018066

Token 25: '2' (ID: 17)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.011142849922180176
    2. '1' → logprob: -4.636142730712891
    3. 'N' → logprob: -6.636142730712891
    4. ' M' → logprob: -10.38614273071289
    5. '2' → logprob: -11.01114273071289
    6. '(M' → logprob: -11.76114273071289
    7. '0' → logprob: -12.13614273071289
    8. '(' → logprob: -12.51114273071289
    9. '10' → logprob: -13.26114273071289
    10. 'len' → logprob: -13.51114273071289

Token 26: ',M' (ID: 54127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04092023894190788
    2. ' ,' → logprob: -3.2909202575683594
    3. ',N' → logprob: -6.040920257568359
    4. ',M' → logprob: -7.915920257568359
    5. ',k' → logprob: -10.41592025756836
    6. ',n' → logprob: -10.66592025756836
    7. ')' → logprob: -10.91592025756836
    8. ' ' → logprob: -12.04092025756836
    9. '*' → logprob: -12.16592025756836
    10. ',m' → logprob: -12.16592025756836

Token 27: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.001877827919088304
    2. ' +' → logprob: -6.501877784729004
    3. '):' → logprob: -8.001877784729004
    4. ')' → logprob: -11.126877784729004
    5. '-' → logprob: -11.626877784729004
    6. ' ):' → logprob: -11.751877784729004
    7. ')+' → logprob: -13.251877784729004
    8. '*' → logprob: -13.501877784729004
    9. '+k' → logprob: -13.626877784729004
    10. ',' → logprob: -13.751877784729004

Token 28: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006476254784502089
    2. ' ' → logprob: -7.37564754486084
    3. '2' → logprob: -11.12564754486084
    4. ')' → logprob: -12.62564754486084
    5. '+' → logprob: -13.50064754486084
    6. '):' → logprob: -14.25064754486084
    7. '```' → logprob: -15.62564754486084
    8. '-' → logprob: -15.87564754486084
    9. ' )' → logprob: -16.125648498535156
    10. ',' → logprob: -16.500648498535156

Token 29: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4889153242111206
    2. ':' → logprob: -1.1139153242111206
    3. ')' → logprob: -2.86391544342041
    4. ':)' → logprob: -6.61391544342041
    5. '):
' → logprob: -11.11391544342041
    6. ':
' → logprob: -11.61391544342041
    7. ':**' → logprob: -11.61391544342041
    8. ' ):' → logprob: -12.61391544342041
    9. ',' → logprob: -12.86391544342041
    10. ',:)' → logprob: -13.23891544342041

Token 30: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3610813617706299
    2. ':' → logprob: -1.6110813617706299
    3. ' if' → logprob: -3.61108136177063
    4. '   ' → logprob: -3.86108136177063
    5. '    ' → logprob: -4.486081123352051
    6. 'if' → logprob: -4.861081123352051
    7. '[' → logprob: -5.486081123352051
    8. '```' → logprob: -5.486081123352051
    9. ' 
' → logprob: -5.611081123352051
    10. ' :' → logprob: -5.611081123352051

Token 31: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.6165021657943726
    2. ' for' → logprob: -1.7415021657943726
    3. ' if' → logprob: -1.8665021657943726
    4. ' A' → logprob: -2.116502285003662
    5. 'i' (adapté à ' i') → logprob: -2.991502285003662
    6. '    ' → logprob: -2.991502285003662
    7. 'for' → logprob: -2.991502285003662
    8. '   ' → logprob: -3.116502285003662
    9. ' ' → logprob: -3.116502285003662
    10. 'if' → logprob: -3.241502285003662

Token 32: '=' (ID: 28)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1691029816865921
    2. 'f' → logprob: -1.9191030263900757
    3. '=' → logprob: -5.794103145599365
    4. ' n' → logprob: -6.044103145599365
    5. ' =' → logprob: -6.294103145599365
    6. '+' → logprob: -8.294102668762207
    7. ' ' → logprob: -8.544102668762207
    8. 'nt' → logprob: -8.544102668762207
    9. ',' → logprob: -8.669102668762207
    10. ',n' → logprob: -8.794102668762207

Token 33: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03268242999911308
    2. '1' → logprob: -3.907682418823242
    3. 'k' → logprob: -4.657682418823242
    4. '2' → logprob: -6.782682418823242
    5. 'N' → logprob: -7.157682418823242
    6. 'A' → logprob: -7.782682418823242
    7. ' ' → logprob: -9.407682418823242
    8. 'len' → logprob: -9.782682418823242
    9. '(' → logprob: -10.157682418823242
    10. '-' → logprob: -10.782682418823242

Token 34: '
' (ID: 198)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -1.1654155254364014
    2. '<|end|>' → logprob: -1.2904155254364014
    3. 'while' → logprob: -1.6654155254364014
    4. ' ' → logprob: -1.7904155254364014
    5. '	while' → logprob: -3.9154155254364014
    6. '   ' → logprob: -4.6654157638549805
    7. '    ' → logprob: -4.9154157638549805
    8. '  ' → logprob: -5.4154157638549805
    9. '<|end|>' → logprob: -5.9154157638549805
    10. 'While' → logprob: -6.4154157638549805

Token 35: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 36: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.24888797104358673
    2. 'while' (adapté à ' while') → logprob: -1.6238880157470703
    3. ' ' → logprob: -4.87388801574707
    4. '   ' → logprob: -5.37388801574707
    5. '    ' → logprob: -5.49888801574707
    6. '	while' → logprob: -5.74888801574707
    7. '<|end|>' → logprob: -7.12388801574707
    8. '  ' → logprob: -7.87388801574707
    9. 'While' → logprob: -7.87388801574707
    10. ' While' → logprob: -8.24888801574707

Token 37: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.11482733488082886
    2. 'i' → logprob: -2.2398273944854736
    3. ' ' → logprob: -7.1148271560668945
    4. ' A' → logprob: -7.2398271560668945
    5. 'A' → logprob: -8.614827156066895
    6. ' N' → logprob: -9.739827156066895
    7. '(i' → logprob: -9.989827156066895
    8. '	i' → logprob: -10.114827156066895
    9. '(' → logprob: -10.489827156066895
    10. ' True' → logprob: -10.614827156066895

Token 38: '<N' (ID: 60262)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.2432112991809845
    2. ' <' → logprob: -1.743211269378662
    3. '+' → logprob: -3.493211269378662
    4. '<len' → logprob: -5.243211269378662
    5. ' ' → logprob: -5.743211269378662
    6. ' <=' → logprob: -6.993211269378662
    7. '<=' → logprob: -7.493211269378662
    8. '<N' → logprob: -7.993211269378662
    9. '*' → logprob: -9.24321174621582
    10. ' +' → logprob: -10.24321174621582

Token 39: '-' (ID: 12)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.022068187594413757
    2. ' and' → logprob: -4.272068023681641
    3. ' :' → logprob: -5.147068023681641
    4. 'and' → logprob: -7.522068023681641
    5. '   ' → logprob: -7.772068023681641
    6. '+' → logprob: -8.27206802368164
    7. '):' → logprob: -8.64706802368164
    8. ':
' → logprob: -8.77206802368164
    9. '+:' → logprob: -9.14706802368164
    10. ':**' → logprob: -9.14706802368164

Token 40: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1002650186419487
    2. 'k' → logprob: -2.3502650260925293
    3. '2' → logprob: -10.350264549255371
    4. '(k' → logprob: -11.350264549255371
    5. ' k' → logprob: -12.725264549255371
    6. '(' → logprob: -13.100264549255371
    7. '-' → logprob: -13.100264549255371
    8. ' ' → logprob: -13.225264549255371
    9. '-k' → logprob: -13.225264549255371
    10. '	k' → logprob: -14.475264549255371

Token 41: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.044952310621738434
    2. ' and' → logprob: -3.169952392578125
    3. 'and' → logprob: -6.544952392578125
    4. '   ' → logprob: -8.544952392578125
    5. ' :' → logprob: -8.919952392578125
    6. ':
' → logprob: -9.794952392578125
    7. '       ' → logprob: -10.169952392578125
    8. '    ' → logprob: -10.794952392578125
    9. '+' → logprob: -11.169952392578125
    10. ':**' → logprob: -11.419952392578125

Token 42: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18187612295150757
    2. '<|end|>' → logprob: -2.8068761825561523
    3. '   ' → logprob: -3.5568761825561523
    4. ':' → logprob: -3.5568761825561523
    5. '    ' → logprob: -3.9318761825561523
    6. ' ' → logprob: -4.181876182556152
    7. ' and' → logprob: -5.431876182556152
    8. ':
' → logprob: -6.681876182556152
    9. ' 
' → logprob: -6.806876182556152
    10. ' if' → logprob: -7.181876182556152

Token 43: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3955301344394684
    2. ' if' → logprob: -1.395530104637146
    3. '   ' → logprob: -2.7705302238464355
    4. '       ' → logprob: -4.5205302238464355
    5. '    ' → logprob: -5.7705302238464355
    6. '+' → logprob: -7.1455302238464355
    7. ' ' → logprob: -8.020529747009277
    8. 'i' → logprob: -8.395529747009277
    9. '```' → logprob: -8.520529747009277
    10. '           ' → logprob: -9.020529747009277

Token 44: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.17998382449150085
    2. 'A' → logprob: -1.8049838542938232
    3. ' ' → logprob: -9.429984092712402
    4. ' abs' → logprob: -9.679984092712402
    5. 'abs' → logprob: -10.054984092712402
    6. '	A' → logprob: -10.929984092712402
    7. '<|end|>' → logprob: -11.179984092712402
    8. '(A' → logprob: -12.304984092712402
    9. ' (' → logprob: -12.429984092712402
    10. '(' → logprob: -12.804984092712402

Token 45: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.011088501662015915
    2. '[' → logprob: -4.5110883712768555
    3. '[j' → logprob: -10.761088371276855
    4. '[k' → logprob: -11.511088371276855
    5. ' [' → logprob: -12.136088371276855
    6. '[A' → logprob: -13.636088371276855
    7. '[a' → logprob: -14.886088371276855
    8. '==' → logprob: -15.011088371276855
    9. '```' → logprob: -15.261088371276855
    10. '[I' → logprob: -15.386088371276855

Token 46: ']%' (ID: 158002)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -1.085356593132019
    2. '+' → logprob: -1.210356593132019
    3. '==' → logprob: -2.5853567123413086
    4. ' ==' → logprob: -2.5853567123413086
    5. '>' → logprob: -2.7103567123413086
    6. ' %' → logprob: -2.9603567123413086
    7. ' >' → logprob: -3.3353567123413086
    8. ' <' → logprob: -3.9603567123413086
    9. '<' → logprob: -4.085356712341309
    10. '*' → logprob: -5.085356712341309

Token 47: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.4498052223643754e-05
    2. ' k' → logprob: -11.375014305114746
    3. '2' → logprob: -13.750014305114746
    4. '	k' → logprob: -14.500014305114746
    5. '==' → logprob: -15.000014305114746
    6. '=k' → logprob: -15.500014305114746
    7. '?k' → logprob: -16.000015258789062
    8. '```' → logprob: -16.125015258789062
    9. ' ' → logprob: -16.375015258789062
    10. '"k' → logprob: -16.625015258789062

Token 48: ' >' (ID: 1424)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.016291363164782524
    2. ' ==' → logprob: -4.26629114151001
    3. '!=' → logprob: -6.39129114151001
    4. '=' → logprob: -8.141291618347168
    5. ' !=' → logprob: -9.641291618347168
    6. '>' → logprob: -10.766291618347168
    7. ' and' → logprob: -10.766291618347168
    8. ' or' → logprob: -11.641291618347168
    9. ' ' → logprob: -11.766291618347168
    10. '```' → logprob: -12.266291618347168

Token 49: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.05684506893157959
    2. ' A' → logprob: -2.931845188140869
    3. '0' → logprob: -6.306845188140869
    4. ' ' → logprob: -9.681844711303711
    5. '>A' → logprob: -10.431844711303711
    6. '	A' → logprob: -11.306844711303711
    7. '=A' → logprob: -11.431844711303711
    8. '1' → logprob: -11.431844711303711
    9. '  ' → logprob: -12.806844711303711
    10. '   ' → logprob: -13.431844711303711

Token 50: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.641841820150148e-05
    2. '[' → logprob: -10.62502670288086
    3. '[j' → logprob: -13.87502670288086
    4. 'i' → logprob: -14.75002670288086
    5. '[
' → logprob: -15.50002670288086
    6. '[k' → logprob: -16.37502670288086
    7. '[I' → logprob: -16.37502670288086
    8. '```' → logprob: -16.62502670288086
    9. '[user' → logprob: -17.37502670288086
    10. ' ' → logprob: -17.62502670288086

Token 51: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5421076416969299
    2. '%' → logprob: -1.0421075820922852
    3. ']%' → logprob: -2.792107582092285
    4. ']' → logprob: -5.542107582092285
    5. ' ' → logprob: -8.667107582092285
    6. '1' → logprob: -9.167107582092285
    7. '+k' → logprob: -9.542107582092285
    8. '-' → logprob: -10.042107582092285
    9. '%i' → logprob: -10.292107582092285
    10. ')%' → logprob: -10.917107582092285

Token 52: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.17513525485992432
    2. ']' → logprob: -2.4251351356506348
    3. '0' → logprob: -3.3001351356506348
    4. 'i' → logprob: -4.300135135650635
    5. ' ' → logprob: -4.800135135650635
    6. ']%' → logprob: -5.050135135650635
    7. '<|end|>' → logprob: -6.050135135650635
    8. 'k' → logprob: -6.800135135650635
    9. '%' → logprob: -7.050135135650635
    10. '```' → logprob: -7.800135135650635

Token 53: ']%' (ID: 158002)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.03511667251586914
    2. '):' → logprob: -3.410116672515869
    3. ')%' → logprob: -7.410116672515869
    4. ':' → logprob: -8.160116195678711
    5. ' ):' → logprob: -8.535116195678711
    6. ' %' → logprob: -8.660116195678711
    7. ')' → logprob: -9.660116195678711
    8. ' ' → logprob: -9.910116195678711
    9. '%)' → logprob: -11.035116195678711
    10. '):
' → logprob: -11.160116195678711

Token 54: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -2.339278580620885e-06
    2. ' k' → logprob: -13.125001907348633
    3. '<|end|>' → logprob: -15.625001907348633
    4. '2' → logprob: -17.500001907348633
    5. '{k' → logprob: -17.500001907348633
    6. ' ' → logprob: -18.125001907348633
    7. '	k' → logprob: -18.500001907348633
    8. ')' → logprob: -18.875001907348633
    9. '[k' → logprob: -19.375001907348633
    10. '(k' → logprob: -19.375001907348633

Token 55: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0757504552602768
    2. ' :' → logprob: -2.8257503509521484
    3. ' and' → logprob: -4.450750350952148
    4. ' or' → logprob: -7.450750350952148
    5. '):' → logprob: -7.575750350952148
    6. '>' → logprob: -8.450750350952148
    7. 'and' → logprob: -8.450750350952148
    8. '>:' → logprob: -8.575750350952148
    9. ' ):' → logprob: -8.950750350952148
    10. ' ' → logprob: -10.075750350952148

Token 56: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5814468264579773
    2. '           ' → logprob: -1.081446886062622
    3. ':
' → logprob: -3.081446886062622
    4. '       ' → logprob: -3.706446886062622
    5. '\n' → logprob: -4.456446647644043
    6. ' :' → logprob: -5.956446647644043
    7. '```' → logprob: -6.456446647644043
    8. '        ' → logprob: -6.581446647644043
    9. '   ' → logprob: -6.581446647644043
    10. ',' → logprob: -6.581446647644043

Token 57: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.16757333278656006
    2. 'A' (adapté à ' A') → logprob: -1.91757333278656
    3. '           ' → logprob: -5.41757345199585
    4. ' break' → logprob: -6.41757345199585
    5. 'break' → logprob: -8.792572975158691
    6. ' 
' → logprob: -8.917572975158691
    7. '               ' → logprob: -9.042572975158691
    8. '            ' → logprob: -9.167572975158691
    9. '       ' → logprob: -9.292572975158691
    10. '            
' → logprob: -9.542572975158691

Token 58: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.011643055826425552
    2. '[' → logprob: -5.386642932891846
    3. '.swap' → logprob: -5.886642932891846
    4. ',' → logprob: -6.011642932891846
    5. ',i' → logprob: -6.761642932891846
    6. '.' → logprob: -7.636642932891846
    7. 'swap' → logprob: -10.386643409729004
    8. 'i' → logprob: -10.386643409729004
    9. '_swap' → logprob: -11.511643409729004
    10. '[j' → logprob: -11.761643409729004

Token 59: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.11182631552219391
    2. ',' → logprob: -2.3618264198303223
    3. ']' → logprob: -5.111826419830322
    4. '+' → logprob: -6.236826419830322
    5. ',i' → logprob: -6.736826419830322
    6. '>,' → logprob: -6.861826419830322
    7. ' ],' → logprob: -8.236825942993164
    8. ',A' → logprob: -8.236825942993164
    9. '),' → logprob: -8.611825942993164
    10. ' ' → logprob: -8.736825942993164

Token 60: 'A' (ID: 32)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.20141597092151642
    2. 'A' → logprob: -1.701416015625
    3. ' ' → logprob: -13.826416015625
    4. '	A' → logprob: -14.451416015625
    5. '           ' → logprob: -14.451416015625
    6. '<|end|>' → logprob: -15.826416015625
    7. '    ' → logprob: -16.201416015625
    8. '   ' → logprob: -16.576416015625
    9. '>A' → logprob: -16.826416015625
    10. ' ' → logprob: -16.826416015625

Token 61: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.005140307825058699
    2. '+' → logprob: -5.38014030456543
    3. '[' → logprob: -7.63014030456543
    4. '[
' → logprob: -11.38014030456543
    5. '[++' → logprob: -11.88014030456543
    6. '+i' → logprob: -12.13014030456543
    7. '<|end|>' → logprob: -12.13014030456543
    8. 'i' → logprob: -13.75514030456543
    9. '[I' → logprob: -13.88014030456543
    10. ']' → logprob: -14.50514030456543

Token 62: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.5716304410016164e-05
    2. '+]' → logprob: -10.750035285949707
    3. '+i' → logprob: -11.500035285949707
    4. '+
' → logprob: -13.375035285949707
    5. ' +' → logprob: -13.625035285949707
    6. '1' → logprob: -15.125035285949707
    7. ']' → logprob: -15.250035285949707
    8. '+"]' → logprob: -15.375035285949707
    9. ']+' → logprob: -15.625035285949707
    10. '+</' → logprob: -16.000036239624023

Token 63: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.650518920039758e-06
    2. ' ' → logprob: -13.125003814697266
    3. '```' → logprob: -14.750003814697266
    4. '<|end|>' → logprob: -15.062503814697266
    5. '2' → logprob: -16.250003814697266
    6. '`' → logprob: -16.687503814697266
    7. 'i' → logprob: -16.750003814697266
    8. '0' → logprob: -16.812503814697266
    9. '   ' → logprob: -16.875003814697266
    10. '१' → logprob: -17.500003814697266

Token 64: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.6523820161819458
    2. '=' → logprob: -1.2773820161819458
    3. ']' → logprob: -1.6523820161819458
    4. ')=' → logprob: -5.152381896972656
    5. ')' → logprob: -6.027381896972656
    6. ' =' → logprob: -8.027381896972656
    7. '']=' → logprob: -9.527381896972656
    8. '<|end|>' → logprob: -9.902381896972656
    9. '=A' → logprob: -10.152381896972656
    10. ']=(' → logprob: -10.402381896972656

Token 65: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0021859495900571346
    2. ' A' → logprob: -6.127185821533203
    3. '	A' → logprob: -15.002185821533203
    4. '>A' → logprob: -15.127185821533203
    5. ' ' → logprob: -15.752185821533203
    6. 'a' → logprob: -17.252185821533203
    7. '   ' → logprob: -17.377185821533203
    8. '=A' → logprob: -17.752185821533203
    9. '```' → logprob: -17.877185821533203
    10. '<A' → logprob: -17.877185821533203

Token 66: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.240481914370321e-05
    2. 'i' → logprob: -10.125052452087402
    3. '[j' → logprob: -11.750052452087402
    4. '[' → logprob: -12.625052452087402
    5. '```' → logprob: -15.625052452087402
    6. '[
' → logprob: -16.000051498413086
    7. '   ' → logprob: -16.125051498413086
    8. '1' → logprob: -16.250051498413086
    9. 'A' → logprob: -16.500051498413086
    10. '(i' → logprob: -16.625051498413086

Token 67: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00411591911688447
    2. '[i' → logprob: -5.504116058349609
    3. 'i' → logprob: -10.87911605834961
    4. '],' → logprob: -12.00411605834961
    5. '+i' → logprob: -12.00411605834961
    6. '1' → logprob: -13.37911605834961
    7. ' +' → logprob: -13.87911605834961
    8. ',i' → logprob: -14.12911605834961
    9. '(i' → logprob: -14.50411605834961
    10. '```' → logprob: -14.75411605834961

Token 68: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.6895233531831764e-05
    2. ' ' → logprob: -11.12502670288086
    3. '```' → logprob: -12.75002670288086
    4. 'i' → logprob: -13.56252670288086
    5. '   ' → logprob: -13.87502670288086
    6. '[i' → logprob: -14.06252670288086
    7. '
' → logprob: -14.43752670288086
    8. '+' → logprob: -14.50002670288086
    9. '１' → logprob: -14.75002670288086
    10. '-' → logprob: -14.81252670288086

Token 69: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.045805878937244415
    2. ',A' → logprob: -3.1708059310913086
    3. ',i' → logprob: -6.420805931091309
    4. '],' → logprob: -7.295805931091309
    5. ' ,' → logprob: -7.920805931091309
    6. ']' → logprob: -10.295805931091309
    7. '<|end|>' → logprob: -10.920805931091309
    8. '‌,' → logprob: -11.545805931091309
    9. ',None' → logprob: -11.545805931091309
    10. ',a' → logprob: -11.795805931091309

Token 70: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.676292231422849e-05
    2. ' A' → logprob: -11.000017166137695
    3. '   ' → logprob: -19.000017166137695
    4. '```' → logprob: -19.250017166137695
    5. '	A' → logprob: -19.500017166137695
    6. ' ' → logprob: -20.375017166137695
    7. '  ' → logprob: -20.625017166137695
    8. '>A' → logprob: -20.875017166137695
    9. 'Ａ' → logprob: -21.000017166137695
    10. 'a' → logprob: -21.500017166137695

Token 71: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.002202593954280019
    2. '[' → logprob: -6.12720251083374
    3. 'i' → logprob: -11.877202987670898
    4. ']' → logprob: -12.252202987670898
    5. '[
' → logprob: -12.627202987670898
    6. '```' → logprob: -14.877202987670898
    7. '[]' → logprob: -15.002202987670898
    8. '[j' → logprob: -15.002202987670898
    9. '[I' → logprob: -15.377202987670898
    10. '][' → logprob: -15.627202987670898

Token 72: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3878241777420044
    2. ')' → logprob: -1.1378241777420044
    3. ')]' → logprob: -8.262824058532715
    4. '])' → logprob: -8.762824058532715
    5. '}' → logprob: -8.887824058532715
    6. '[i' → logprob: -9.262824058532715
    7. ')
' → logprob: -9.387824058532715
    8. '）' → logprob: -9.637824058532715
    9. ']
' → logprob: -9.762824058532715
    10. '<|end|>' → logprob: -10.137824058532715

Token 73: '           ' (ID: 352)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8520352840423584
    2. '       ' → logprob: -1.3520352840423584
    3. ' i' → logprob: -1.4770352840423584
    4. '           ' → logprob: -3.2270352840423584
    5. '```' → logprob: -4.3520355224609375
    6. '	' → logprob: -5.2270355224609375
    7. '	i' → logprob: -5.3520355224609375
    8. '   ' → logprob: -5.4770355224609375
    9. ' 
' → logprob: -5.6020355224609375
    10. '	       ' → logprob: -5.6020355224609375

Token 74: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -5.872261317563243e-05
    2. '   ' → logprob: -10.500059127807617
    3. '           ' → logprob: -10.625059127807617
    4. ' i' → logprob: -12.500059127807617
    5. '```' → logprob: -13.500059127807617
    6. '	i' → logprob: -14.500059127807617
    7. '       ' → logprob: -14.750059127807617
    8. '               ' → logprob: -15.500059127807617
    9. '  ' → logprob: -15.625059127807617
    10. '    ' → logprob: -15.875059127807617

Token 75: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2936229109764099
    2. '=' → logprob: -1.4186229705810547
    3. '+' → logprob: -4.668622970581055
    4. ' +=' → logprob: -6.043622970581055
    5. '-=' → logprob: -7.793622970581055
    6. ' =' → logprob: -8.793622970581055
    7. '0' → logprob: -10.293622970581055
    8. '++' → logprob: -11.793622970581055
    9. '-' → logprob: -12.168622970581055
    10. ']+=' → logprob: -12.168622970581055

Token 76: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.048740535974502563
    2. '-' → logprob: -3.2987406253814697
    3. '0' → logprob: -4.548740386962891
    4. '2' → logprob: -10.54874038696289
    5. ' -' → logprob: -10.92374038696289
    6. ' ' → logprob: -11.04874038696289
    7. '+' → logprob: -15.86124038696289
    8. '```' → logprob: -15.86124038696289
    9. '−' → logprob: -16.29874038696289
    10. '   ' → logprob: -16.29874038696289

Token 77: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.4290443956851959
    2. '       ' → logprob: -1.6790443658828735
    3. ' else' → logprob: -2.429044485092163
    4. '+' → logprob: -3.054044485092163
    5. '<|end|>' → logprob: -3.929044485092163
    6. '   ' → logprob: -6.304044246673584
    7. '```' → logprob: -6.554044246673584
    8. '0' → logprob: -7.179044246673584
    9. '<|end|>' → logprob: -7.429044246673584
    10. '1' → logprob: -7.554044246673584

Token 78: '       ' (ID: 309)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.1182936280965805
    2. '       ' → logprob: -2.618293523788452
    3. ' else' → logprob: -3.368293523788452
    4. '<|end|>' → logprob: -5.993293762207031
    5. '```' → logprob: -7.493293762207031
    6. '+' → logprob: -8.368293762207031
    7. '   ' → logprob: -8.368293762207031
    8. '	else' → logprob: -8.368293762207031
    9. 'i' → logprob: -9.118293762207031
    10. '<|end|>' → logprob: -9.368293762207031

Token 79: ' i' (ID: 575)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.08225028961896896
    2. ' else' → logprob: -3.0822503566741943
    3. '1' → logprob: -4.207250118255615
    4. '       ' → logprob: -4.207250118255615
    5. '   ' → logprob: -6.957250118255615
    6. 'i' (adapté à ' i') → logprob: -7.332250118255615
    7. '```' → logprob: -7.707250118255615
    8. '0' → logprob: -7.832250118255615
    9. '<|end|>' → logprob: -7.957250118255615
    10. '+' → logprob: -8.457250595092773

Token 80: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.10895374417304993
    2. '+' → logprob: -2.3589537143707275
    3. '-=' → logprob: -5.733953952789307
    4. '=' → logprob: -5.733953952789307
    5. '-' → logprob: -6.483953952789307
    6. ' +=' → logprob: -7.608953952789307
    7. '++' → logprob: -8.983953475952148
    8. '<|end|>' → logprob: -10.858953475952148
    9. '0' → logprob: -11.233953475952148
    10. 'else' → logprob: -11.358953475952148

Token 81: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003022153687197715
    2. ' ' → logprob: -8.1253023147583
    3. '0' → logprob: -12.1253023147583
    4. '+' → logprob: -15.3753023147583
    5. '2' → logprob: -15.5003023147583
    6. '<|end|>' → logprob: -15.6253023147583
    7. '```' → logprob: -17.687801361083984
    8. '<|end|>' → logprob: -17.687801361083984
    9. '-' → logprob: -18.250301361083984
    10. ' -' → logprob: -18.812801361083984

Token 82: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 83: 'for' (ID: 1938)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 84: ' x' (ID: 1215)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.2240486145019531
    2. ' i' → logprob: -1.4740486145019531
    3. ' a' → logprob: -1.4740486145019531
    4. 'i' → logprob: -1.8490486145019531
    5. ' x' → logprob: -3.849048614501953
    6. 'x' → logprob: -4.099048614501953
    7. ' k' → logprob: -4.224048614501953
    8. ' A' → logprob: -4.349048614501953
    9. 'A' → logprob: -4.474048614501953
    10. 'k' → logprob: -4.599048614501953

Token 85: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5231529474258423
    2. 'in' → logprob: -0.8981529474258423
    3. ' ' → logprob: -11.273153305053711
    4. '	in' → logprob: -11.523153305053711
    5. '   ' → logprob: -13.898153305053711
    6. '  ' → logprob: -13.898153305053711
    7. 'i' → logprob: -14.585653305053711
    8. 'In' → logprob: -14.648153305053711
    9. '_in' → logprob: -14.835653305053711
    10. ' ' → logprob: -14.898153305053711

Token 86: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0004309076175559312
    2. ' A' → logprob: -7.750431060791016
    3. 'range' → logprob: -15.875431060791016
    4. ' range' → logprob: -18.250431060791016
    5. 'a' → logprob: -18.875431060791016
    6. ' ' → logprob: -19.250431060791016
    7. '_A' → logprob: -19.875431060791016
    8. '	A' → logprob: -20.250431060791016
    9. 'sorted' → logprob: -20.250431060791016
    10. 'Ａ' → logprob: -20.250431060791016

Token 87: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.071429044008255
    2. 'print' → logprob: -2.6964290142059326
    3. ' print' → logprob: -6.946429252624512
    4. ')' → logprob: -8.571429252624512
    5. '.print' → logprob: -8.821429252624512
    6. ':
' → logprob: -9.696429252624512
    7. '(print' → logprob: -9.821429252624512
    8. '_print' → logprob: -10.946429252624512
    9. ',' → logprob: -11.196429252624512
    10. '	print' → logprob: -11.196429252624512

Token 88: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.007857519201934338
    2. ' print' → logprob: -5.257857322692871
    3. '   ' → logprob: -6.007857322692871
    4. '	print' → logprob: -9.382857322692871
    5. '```' → logprob: -9.632857322692871
    6. '<|end|>' → logprob: -11.757857322692871
    7. ' ' → logprob: -14.257857322692871
    8. '``' → logprob: -15.007857322692871
    9. '.print' → logprob: -15.132857322692871
    10. '-print' → logprob: -15.257857322692871

Token 89: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -7.941850526549388e-06
    2. ' print' → logprob: -11.750007629394531
    3. '   ' → logprob: -17.25000762939453
    4. '	print' → logprob: -18.75000762939453
    5. 'pr' → logprob: -18.87500762939453
    6. '```' → logprob: -18.87500762939453
    7. 'prin' → logprob: -19.87500762939453
    8. '
' → logprob: -21.25000762939453
    9. '_print' → logprob: -21.37500762939453
    10. 'prit' → logprob: -21.50000762939453

Token 90: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00861669983714819
    2. '(' → logprob: -4.758616924285889
    3. 'x' → logprob: -13.13361644744873
    4. ' (' → logprob: -17.133617401123047
    5. '(
' → logprob: -17.633617401123047
    6. '()' → logprob: -17.758617401123047
    7. '((' → logprob: -18.258617401123047
    8. '(a' → logprob: -20.133617401123047
    9. '(X' → logprob: -20.133617401123047
    10. '(int' → logprob: -20.258617401123047

Token 91: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. '))' → logprob: -15.125000953674316
    3. ')
' → logprob: -15.250000953674316
    4. ' )' → logprob: -15.750000953674316
    5. ')`' → logprob: -16.5
    6. '(' → logprob: -18.0
    7. '()' → logprob: -18.5
    8. '`)' → logprob: -18.625
    9. ')#' → logprob: -18.875
    10. ')}' → logprob: -18.875


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 89
Tokens correctement prédits (1ère position, stricte): 42
Tokens correctement prédits (1ère position, avec adaptation): 45
Tokens correctement prédits (top 10): 76
Précision stricte (1ère position): 47.19%
Précision adaptée (1ère position): 50.56%
Précision (top 10): 85.39%
================================================================================
