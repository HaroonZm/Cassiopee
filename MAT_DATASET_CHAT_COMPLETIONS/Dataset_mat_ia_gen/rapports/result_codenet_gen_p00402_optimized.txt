================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:58:46
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N=int(input())
x=sorted(map(int,input().split()))
m=x[N//2]
print(max(abs(m-i) for i in x))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: '=int' (ID: 37431)
  → Token d'amorce (pas de prédiction)

Token 2: '(input' (ID: 10054)
  → Token d'amorce (pas de prédiction)

Token 3: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.481197714805603
    2. '(' → logprob: -0.981197714805603
    3. '()' → logprob: -5.356197834014893
    4. '())' → logprob: -6.731197834014893
    5. '(
' → logprob: -8.356197357177734
    6. '[' → logprob: -8.356197357177734
    7. '```' → logprob: -8.981197357177734
    8. '`)' → logprob: -9.231197357177734
    9. '')' → logprob: -9.606197357177734
    10. '")' → logprob: -9.731197357177734

Token 4: 'x' (ID: 87)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7019301056861877
    2. 'if' → logprob: -1.826930046081543
    3. 's' → logprob: -2.451930046081543
    4. 'i' → logprob: -2.701930046081543
    5. '[' → logprob: -3.451930046081543
    6. 'a' → logprob: -3.701930046081543
    7. '\n' → logprob: -3.826930046081543
    8. 'f' → logprob: -4.326930046081543
    9. '#' → logprob: -4.326930046081543
    10. ''' → logprob: -4.451930046081543

Token 5: '=' (ID: 28)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05494050681591034
    2. '+' → logprob: -3.3049404621124268
    3. '=' → logprob: -4.679940700531006
    4. '*' → logprob: -6.554940700531006
    5. ')' → logprob: -6.929940700531006
    6. ' ' → logprob: -6.929940700531006
    7. ' =' → logprob: -7.054940700531006
    8. '**' → logprob: -7.304940700531006
    9. '%' → logprob: -7.679940700531006
    10. '(' → logprob: -7.929940700531006

Token 6: 'sorted' (ID: 64288)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.37592813372612
    2. '0' → logprob: -1.3759281635284424
    3. 'N' → logprob: -3.3759281635284424
    4. '1' → logprob: -4.500927925109863
    5. 'list' → logprob: -4.625927925109863
    6. '[]' → logprob: -6.500927925109863
    7. 'input' → logprob: -6.625927925109863
    8. '[int' → logprob: -6.750927925109863
    9. 'x' → logprob: -7.375927925109863
    10. 'float' → logprob: -8.250927925109863

Token 7: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0031979158520698547
    2. '((' → logprob: -6.503198146820068
    3. '(x' → logprob: -7.503198146820068
    4. '(range' → logprob: -8.00319766998291
    5. '(lambda' → logprob: -8.37819766998291
    6. '(list' → logprob: -9.25319766998291
    7. '(open' → logprob: -9.50319766998291
    8. '(input' → logprob: -10.00319766998291
    9. '(user' → logprob: -10.12819766998291
    10. '(()' → logprob: -10.12819766998291

Token 8: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0052304440177977085
    2. '(' → logprob: -5.38023042678833
    3. '(input' → logprob: -8.130230903625488
    4. '(str' → logprob: -8.380230903625488
    5. '(lambda' → logprob: -10.880230903625488
    6. '(list' → logprob: -11.130230903625488
    7. '(eval' → logprob: -11.255230903625488
    8. '=int' → logprob: -11.505230903625488
    9. '(
' → logprob: -12.255230903625488
    10. 'int' → logprob: -12.380230903625488

Token 9: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.019465936347842216
    2. ',input' → logprob: -4.144465923309326
    3. '(' → logprob: -5.769465923309326
    4. ',' → logprob: -8.769466400146484
    5. 'input' → logprob: -9.894466400146484
    6. ')' → logprob: -10.394466400146484
    7. '=input' → logprob: -10.769466400146484
    8. ' (' → logprob: -11.519466400146484
    9. '))' → logprob: -12.519466400146484
    10. ' ,' → logprob: -12.644466400146484

Token 10: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.432518421206623e-05
    2. '()' → logprob: -9.8750638961792
    3. '()))' → logprob: -11.6250638961792
    4. '())' → logprob: -12.8750638961792
    5. '()));' → logprob: -14.3750638961792
    6. ')' → logprob: -15.8750638961792
    7. ' ().' → logprob: -15.8750638961792
    8. '())))' → logprob: -15.8750638961792
    9. '(' → logprob: -16.250064849853516
    10. '()),' → logprob: -16.750064849853516

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.966313281329349e-05
    2. 'strip' → logprob: -10.000049591064453
    3. ' split' → logprob: -12.875049591064453
    4. 'rstrip' → logprob: -13.625049591064453
    5. '(split' → logprob: -15.125049591064453
    6. 'spl' → logprob: -18.375049591064453
    7. ')' → logprob: -18.500049591064453
    8. 's' → logprob: -18.875049591064453
    9. ' ' → logprob: -19.250049591064453
    10. '.split' → logprob: -19.500049591064453

Token 12: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.3055904507637024
    2. '())' → logprob: -1.6805903911590576
    3. '))' → logprob: -3.3055903911590576
    4. ')' → logprob: -3.4305903911590576
    5. '()' → logprob: -5.555590629577637
    6. '()),' → logprob: -6.180590629577637
    7. '(' → logprob: -7.305590629577637
    8. '),' → logprob: -8.055590629577637
    9. '('' → logprob: -8.055590629577637
    10. '())))' → logprob: -8.180590629577637

Token 13: 'm' (ID: 76)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10788027197122574
    2. ')' → logprob: -3.7328803539276123
    3. 'print' → logprob: -3.8578803539276123
    4. 'if' → logprob: -3.9828803539276123
    5. '[' → logprob: -4.107880115509033
    6. 'd' → logprob: -5.482880115509033
    7. 'a' → logprob: -5.732880115509033
    8. ')
' → logprob: -6.232880115509033
    9. '
' → logprob: -6.607880115509033
    10. '[
' → logprob: -6.607880115509033

Token 14: '=x' (ID: 56980)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.11900876462459564
    2. '=' → logprob: -2.744008779525757
    3. 'ax' → logprob: -3.994008779525757
    4. ' =' → logprob: -4.369008541107178
    5. '=a' → logprob: -4.494008541107178
    6. '_a' → logprob: -6.119008541107178
    7. '=ax' → logprob: -6.744008541107178
    8. 'o' → logprob: -7.619008541107178
    9. '=len' → logprob: -8.244009017944336
    10. '=max' → logprob: -8.494009017944336

Token 15: '[N' (ID: 49776)
  Prédit: '[:]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:]' → logprob: -0.14790868759155273
    2. '[' → logprob: -2.7729086875915527
    3. '.copy' → logprob: -3.2729086875915527
    4. '.' → logprob: -3.8979086875915527
    5. '[:' → logprob: -4.147908687591553
    6. '[m' → logprob: -7.522908687591553
    7. '[::-' → logprob: -8.897909164428711
    8. '[]' → logprob: -10.147909164428711
    9. '[:-' → logprob: -10.522909164428711
    10. '.[' → logprob: -10.522909164428711

Token 16: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.005431662313640118
    2. '-' → logprob: -5.255431652069092
    3. '2' → logprob: -9.00543212890625
    4. ' //' → logprob: -10.38043212890625
    5. '//
' → logprob: -12.00543212890625
    6. '```' → logprob: -12.00543212890625
    7. '://' → logprob: -12.00543212890625
    8. '']//' → logprob: -12.13043212890625
    9. '/' → logprob: -12.50543212890625
    10. '1' → logprob: -12.75543212890625

Token 17: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.664371848164592e-05
    2. '4' → logprob: -12.000016212463379
    3. '3' → logprob: -12.000016212463379
    4. ' ' → logprob: -12.625016212463379
    5. '1' → logprob: -14.375016212463379
    6. '5' → logprob: -15.875016212463379
    7. '  ' → logprob: -16.625017166137695
    8. '6' → logprob: -16.875017166137695
    9. '20' → logprob: -17.000017166137695
    10. '10' → logprob: -17.125017166137695

Token 18: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.18575605750083923
    2. ':]' → logprob: -1.9357560873031616
    3. '])' → logprob: -4.060756206512451
    4. ':' → logprob: -5.435756206512451
    5. ')]' → logprob: -6.060756206512451
    6. ')' → logprob: -8.810755729675293
    7. ' ]' → logprob: -9.060755729675293
    8. '-' → logprob: -9.060755729675293
    9. '+' → logprob: -9.185755729675293
    10. ']+' → logprob: -9.185755729675293

Token 19: 'print' (ID: 1598)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2598385512828827
    2. 'print' → logprob: -1.759838581085205
    3. 'for' → logprob: -4.384838581085205
    4. '=' → logprob: -4.884838581085205
    5. '\n' → logprob: -4.884838581085205
    6. 's' → logprob: -5.259838581085205
    7. '
' → logprob: -5.634838581085205
    8. '+
' → logprob: -5.759838581085205
    9. '<|end|>' → logprob: -5.759838581085205
    10. ')' → logprob: -6.134838581085205

Token 20: '(max' (ID: 17178)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0011109242914244533
    2. '(m' → logprob: -6.876111030578613
    3. '("("' → logprob: -10.501111030578613
    4. '((' → logprob: -10.751111030578613
    5. '(x' → logprob: -11.126111030578613
    6. '('' → logprob: -11.876111030578613
    7. '()' → logprob: -12.751111030578613
    8. '(`' → logprob: -14.126111030578613
    9. '(*' → logprob: -14.626111030578613
    10. '(f' → logprob: -14.751111030578613

Token 21: '(abs' (ID: 71957)
  Prédit: '(abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(abs' → logprob: -0.14659082889556885
    2. '(' → logprob: -2.3965907096862793
    3. '(m' → logprob: -3.1465907096862793
    4. '(x' → logprob: -6.146590709686279
    5. 'abs' → logprob: -9.771591186523438
    6. '((' → logprob: -9.771591186523438
    7. '(max' → logprob: -10.271591186523438
    8. '(-' → logprob: -12.146591186523438
    9. '(min' → logprob: -12.271591186523438
    10. '(
' → logprob: -12.396591186523438

Token 22: '(m' (ID: 2145)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.1351473182439804
    2. '(m' → logprob: -2.7601473331451416
    3. '(a' → logprob: -2.8851473331451416
    4. '(i' → logprob: -5.2601470947265625
    5. '(' → logprob: -6.5101470947265625
    6. '(y' → logprob: -8.135147094726562
    7. '(v' → logprob: -9.385147094726562
    8. '(c' → logprob: -10.385147094726562
    9. '(n' → logprob: -10.510147094726562
    10. '((' → logprob: -10.635147094726562

Token 23: '-i' (ID: 18499)
  Prédit: '-i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-i' → logprob: -0.8368907570838928
    2. '-x' → logprob: -0.9618907570838928
    3. ' -' → logprob: -2.211890697479248
    4. '-' → logprob: -2.961890697479248
    5. '-n' → logprob: -4.586890697479248
    6. '-min' → logprob: -5.461890697479248
    7. '-y' → logprob: -5.836890697479248
    8. '-a' → logprob: -5.836890697479248
    9. '-k' → logprob: -6.586890697479248
    10. '-v' → logprob: -7.961890697479248

Token 24: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00302869058214128
    2. ')))' → logprob: -6.003028869628906
    3. '))' → logprob: -7.878028869628906
    4. ' )' → logprob: -8.753028869628906
    5. '-' → logprob: -12.503028869628906
    6. ' ' → logprob: -12.628028869628906
    7. '-)' → logprob: -12.753028869628906
    8. ' for' → logprob: -13.753028869628906
    9. '))))' → logprob: -14.628028869628906
    10. ')+' → logprob: -14.628028869628906

Token 25: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3081921935081482
    2. ' for' → logprob: -1.808192253112793
    3. '))' → logprob: -2.933192253112793
    4. 'for' → logprob: -3.058192253112793
    5. ' ' → logprob: -7.433192253112793
    6. ' )' → logprob: -8.683192253112793
    7. ')))' → logprob: -8.683192253112793
    8. ' ))' → logprob: -9.933192253112793
    9. '	for' → logprob: -10.433192253112793
    10. ',' → logprob: -10.933192253112793

Token 26: ' i' (ID: 575)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5384292602539062
    2. ' x' → logprob: -0.9134292602539062
    3. 'i' → logprob: -4.663429260253906
    4. ' i' → logprob: -5.163429260253906
    5. ' ' → logprob: -11.163429260253906
    6. '	x' → logprob: -12.163429260253906
    7. ')x' → logprob: -12.663429260253906
    8. ')' → logprob: -12.788429260253906
    9. '  ' → logprob: -13.163429260253906
    10. '>x' → logprob: -13.913429260253906

Token 27: ' in' (ID: 306)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.024072211235761642
    2. 'x' → logprob: -3.7740721702575684
    3. ' in' → logprob: -7.274072170257568
    4. ')x' → logprob: -10.524072647094727
    5. ')' → logprob: -10.649072647094727
    6. '(x' → logprob: -10.774072647094727
    7. ' ' → logprob: -10.774072647094727
    8. ',x' → logprob: -11.399072647094727
    9. ' )' → logprob: -11.524072647094727
    10. '	x' → logprob: -11.649072647094727

Token 28: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.25193363428115845
    2. ' x' → logprob: -1.5019335746765137
    3. '	x' → logprob: -13.501934051513672
    4. ' ' → logprob: -13.626934051513672
    5. ')x' → logprob: -14.501934051513672
    6. '[x' → logprob: -15.251934051513672
    7. '(x' → logprob: -15.376934051513672
    8. '<x' → logprob: -15.501934051513672
    9. ' range' → logprob: -15.876934051513672
    10. '  ' → logprob: -16.001934051513672

Token 29: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.023275645449757576
    2. ')' → logprob: -3.77327561378479
    3. ')))' → logprob: -10.648275375366211
    4. '))
' → logprob: -12.773275375366211
    5. ' ))' → logprob: -13.273275375366211
    6. '),' → logprob: -15.148275375366211
    7. ')
' → logprob: -15.148275375366211
    8. ' ' → logprob: -15.398275375366211
    9. ''))' → logprob: -15.398275375366211
    10. ')}' → logprob: -15.648275375366211


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 27
Tokens correctement prédits (1ère position, stricte): 9
Tokens correctement prédits (1ère position, avec adaptation): 9
Tokens correctement prédits (top 10): 17
Précision stricte (1ère position): 33.33%
Précision adaptée (1ère position): 33.33%
Précision (top 10): 62.96%
================================================================================
