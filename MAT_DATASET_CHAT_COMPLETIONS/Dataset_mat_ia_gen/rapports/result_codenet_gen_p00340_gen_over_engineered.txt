================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:58:05
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class Stick:
    def __init__(self, length: int):
        self.length = length

    def __eq__(self, other):
        if not isinstance(other, Stick):
            return False
        return self.length == other.length

    def __hash__(self):
        return hash(self.length)

    def __repr__(self):
        return f"Stick(length={self.length})"


class RectangleValidator:
    def __init__(self, sticks):
        if len(sticks) != 4:
            raise ValueError("Exactly four sticks are required")
        self.sticks = sticks

    def _group_sticks_by_length(self):
        length_counts = {}
        for stick in self.sticks:
            length_counts[stick.length] = length_counts.get(stick.length, 0) + 1
        return length_counts

    def can_form_rectangle(self) -> bool:
        length_counts = self._group_sticks_by_length()
        # For a rectangle using four sticks without modification,
        # there must be either:
        # - Two pairs of equal lengths (including the case where all four are the same — square)
        counts = sorted(length_counts.values())
        if counts == [4]:
            return True  # square case
        if counts == [2, 2]:
            return True  # rectangle with pairs of equal lengths
        return False


class RectangleFactory:
    @staticmethod
    def create_sticks_from_input(input_line: str):
        lengths = list(map(int, input_line.strip().split()))
        return [Stick(length) for length in lengths]


def main():
    import sys
    input_line = sys.stdin.readline()
    sticks = RectangleFactory.create_sticks_from_input(input_line)
    validator = RectangleValidator(sticks)
    if validator.can_form_rectangle():
        print("yes")
    else:
        print("no")


if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Stick' (ID: 55261)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12046375870704651
    2. '(' → logprob: -3.1204638481140137
    3. '```' → logprob: -3.1204638481140137
    4. '   ' → logprob: -4.120463848114014
    5. ' :' → logprob: -6.620463848114014
    6. '():' → logprob: -6.620463848114014
    7. '.' → logprob: -6.995463848114014
    8. '`' → logprob: -7.120463848114014
    9. ''' → logprob: -7.245463848114014
    10. '``' → logprob: -7.370463848114014

Token 4: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4210164546966553
    2. ' def' → logprob: -1.7960164546966553
    3. '```' → logprob: -1.7960164546966553
    4. '    ' → logprob: -2.4210164546966553
    5. '_' → logprob: -2.4210164546966553
    6. 's' → logprob: -3.1710164546966553
    7. ' ' → logprob: -3.2960164546966553
    8. ' pass' → logprob: -3.4210164546966553
    9. ' ```' → logprob: -3.6710164546966553
    10. 'def' (adapté à ' def') → logprob: -3.7960164546966553

Token 5: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14056645333766937
    2. ' __' → logprob: -2.515566349029541
    3. '__' → logprob: -3.765566349029541
    4. ' ' → logprob: -4.140566349029541
    5. ' init' → logprob: -5.640566349029541
    6. '_' → logprob: -6.515566349029541
    7. ' a' → logprob: -7.140566349029541
    8. '    ' → logprob: -7.640566349029541
    9. '<|end|>' → logprob: -7.640566349029541
    10. ' ‌' → logprob: -7.765566349029541

Token 6: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.7432603272027336e-06
    2. ' init' → logprob: -13.875001907348633
    3. '_init' → logprob: -14.750001907348633
    4. 'i' → logprob: -15.375001907348633
    5. 'ini' → logprob: -15.875001907348633
    6. 'in' → logprob: -17.625001907348633
    7. '	init' → logprob: -17.875001907348633
    8. 'int' → logprob: -18.750001907348633
    9. 'inite' → logprob: -18.750001907348633
    10. '_i' → logprob: -19.375001907348633

Token 7: '__(' (ID: 8241)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6967028975486755
    2. '__(' → logprob: -0.6967028975486755
    3. '_' → logprob: -5.94670295715332
    4. '__(
' → logprob: -7.69670295715332
    5. '(' → logprob: -8.07170295715332
    6. '__((' → logprob: -9.44670295715332
    7. '___' → logprob: -10.82170295715332
    8. '_(' → logprob: -10.82170295715332
    9. '(self' → logprob: -11.07170295715332
    10. '__('' → logprob: -11.19670295715332

Token 8: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0006288022268563509
    2. ' self' → logprob: -7.37562894821167
    3. ')' → logprob: -13.500628471374512
    4. '(self' → logprob: -14.625628471374512
    5. '_self' → logprob: -16.000629425048828
    6. 'stick' → logprob: -16.500629425048828
    7. '       ' → logprob: -17.000629425048828
    8. '   ' → logprob: -17.125629425048828
    9. '```' → logprob: -17.125629425048828
    10. ' ' → logprob: -17.125629425048828

Token 9: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14617779850959778
    2. 'self' → logprob: -2.0211777687072754
    3. ',self' → logprob: -6.396177768707275
    4. '(self' → logprob: -7.646177768707275
    5. ' ,' → logprob: -7.896177768707275
    6. '):' → logprob: -8.146178245544434
    7. ' self' → logprob: -8.271178245544434
    8. '_self' → logprob: -8.771178245544434
    9. ')' → logprob: -9.021178245544434
    10. ',s' → logprob: -9.896178245544434

Token 10: ' length' (ID: 5517)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07932727038860321
    2. ' self' → logprob: -2.579327344894409
    3. 'length' → logprob: -7.95432710647583
    4. ' length' → logprob: -10.329327583312988
    5. 'color' → logprob: -11.204327583312988
    6. 'name' → logprob: -11.204327583312988
    7. 'width' → logprob: -12.079327583312988
    8. 'position' → logprob: -12.829327583312988
    9. '   ' → logprob: -13.079327583312988
    10. ')' → logprob: -13.329327583312988

Token 11: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16733375191688538
    2. ',' → logprob: -1.917333722114563
    3. '=' → logprob: -5.417333602905273
    4. ':' → logprob: -6.542333602905273
    5. ')' → logprob: -7.292333602905273
    6. '):
' → logprob: -8.042333602905273
    7. '   ' → logprob: -9.292333602905273
    8. ' ,' → logprob: -10.917333602905273
    9. '       ' → logprob: -11.042333602905273
    10. '```' → logprob: -11.542333602905273

Token 12: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.31335198879241943
    2. 'int' → logprob: -1.3133519887924194
    3. ' float' → logprob: -10.06335163116455
    4. ':int' → logprob: -11.31335163116455
    5. 'float' → logprob: -11.56335163116455
    6. '=int' → logprob: -11.68835163116455
    7. ' ' → logprob: -12.18835163116455
    8. '(int' → logprob: -12.68835163116455
    9. '[int' → logprob: -13.18835163116455
    10. ' )' → logprob: -13.56335163116455

Token 13: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.19222836196422577
    2. ',' → logprob: -2.067228317260742
    3. ')' → logprob: -3.067228317260742
    4. '):
' → logprob: -6.442228317260742
    5. '   ' → logprob: -9.817228317260742
    6. ':' → logprob: -10.567228317260742
    7. ' ,' → logprob: -10.692228317260742
    8. '),' → logprob: -11.317228317260742
    9. '```' → logprob: -11.442228317260742
    10. '       ' → logprob: -11.567228317260742

Token 14: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022984668612480164
    2. '    ' → logprob: -7.377298355102539
    3. '   ' → logprob: -7.502298355102539
    4. 'self' → logprob: -8.252298355102539
    5. ' self' → logprob: -8.252298355102539
    6. ' ' → logprob: -8.877298355102539
    7. '<|end|>' → logprob: -8.877298355102539
    8. '        ' → logprob: -9.377298355102539
    9. ')' → logprob: -10.252298355102539
    10. '     ' → logprob: -10.502298355102539

Token 15: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4274866282939911
    2. 'self' (adapté à ' self') → logprob: -1.3024866580963135
    3. ' self' → logprob: -2.9274866580963135
    4. '           ' → logprob: -4.552486419677734
    5. '```' → logprob: -5.052486419677734
    6. '   ' → logprob: -6.302486419677734
    7. ' ' → logprob: -6.552486419677734
    8. ' ' → logprob: -7.927486419677734
    9. '        ' → logprob: -8.052486419677734
    10. '               ' → logprob: -8.177486419677734

Token 16: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -0.020649095997214317
    2. '.' → logprob: -3.8956491947174072
    3. '._' → logprob: -10.395648956298828
    4. 'length' → logprob: -10.645648956298828
    5. ' .' → logprob: -10.770648956298828
    6. '_length' → logprob: -11.395648956298828
    7. '.l' → logprob: -12.145648956298828
    8. ' length' → logprob: -12.395648956298828
    9. '.width' → logprob: -13.270648956298828
    10. '.value' → logprob: -13.395648956298828

Token 17: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868943452835083
    2. ' =' → logprob: -1.1368943452835083
    3. '<|end|>' → logprob: -11.761894226074219
    4. ' ' → logprob: -12.136894226074219
    5. ' =
' → logprob: -13.136894226074219
    6. '_' → logprob: -13.386894226074219
    7. ')' → logprob: -13.761894226074219
    8. '   ' → logprob: -13.886894226074219
    9. '.' → logprob: -14.011894226074219
    10. '       ' → logprob: -14.261894226074219

Token 18: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.38690000772476196
    2. 'length' → logprob: -1.1368999481201172
    3. '(length' → logprob: -10.636899948120117
    4. '[length' → logprob: -12.761899948120117
    5. '_length' → logprob: -14.761899948120117
    6. 'ength' → logprob: -14.761899948120117
    7. '	length' → logprob: -15.011899948120117
    8. ',length' → logprob: -15.136899948120117
    9. ' ' → logprob: -15.511899948120117
    10. ' lenght' → logprob: -16.011899948120117

Token 19: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7056254744529724
    2. '<|end|>' → logprob: -1.3306255340576172
    3. '\' → logprob: -2.330625534057617
    4. '
' → logprob: -2.705625534057617
    5. '\n' → logprob: -3.205625534057617
    6. '   ' → logprob: -4.580625534057617
    7. '```' → logprob: -4.830625534057617
    8. '<|end|>' → logprob: -5.830625534057617
    9. '#' → logprob: -6.205625534057617
    10. ':' → logprob: -6.205625534057617

Token 20: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12971779704093933
    2. '   ' → logprob: -3.0047178268432617
    3. '<|end|>' → logprob: -3.7547178268432617
    4. '.' → logprob: -4.754717826843262
    5. ':' → logprob: -4.754717826843262
    6. 'n' → logprob: -5.129717826843262
    7. ' ' → logprob: -5.879717826843262
    8. '\n' → logprob: -6.129717826843262
    9. '```' → logprob: -6.129717826843262
    10. '    
' → logprob: -6.379717826843262

Token 21: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6784695386886597
    2. 'def' (adapté à ' def') → logprob: -1.0534695386886597
    3. ' def' → logprob: -2.053469657897949
    4. '```' → logprob: -4.678469657897949
    5. '    
' → logprob: -6.803469657897949
    6. '\n' → logprob: -6.928469657897949
    7. ' ' → logprob: -6.928469657897949
    8. '    ' → logprob: -7.178469657897949
    9. '\' → logprob: -7.553469657897949
    10. '
' → logprob: -7.928469657897949

Token 22: ' __' (ID: 2516)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.45290589332580566
    2. ' def' → logprob: -2.0779058933258057
    3. ' is' → logprob: -2.4529058933258057
    4. ' cut' → logprob: -2.8279058933258057
    5. ' ' → logprob: -3.3279058933258057
    6. ' __' → logprob: -3.7029058933258057
    7. ' break' → logprob: -4.327905654907227
    8. ' space' → logprob: -6.077905654907227
    9. ' set' → logprob: -6.577905654907227
    10. ' calculate' → logprob: -6.577905654907227

Token 23: 'eq' (ID: 21725)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.0187362432479858
    2. 'str' → logprob: -1.2687362432479858
    3. 'repr' → logprob: -1.5187362432479858
    4. 'init' → logprob: -2.2687363624572754
    5. 'eq' → logprob: -3.3937363624572754
    6. 'lt' → logprob: -7.643736362457275
    7. '_' → logprob: -7.768736362457275
    8. 'le' → logprob: -8.268735885620117
    9. 'add' → logprob: -9.018735885620117
    10. '_str' → logprob: -9.143735885620117

Token 24: '__(' (ID: 8241)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.062442757189273834
    2. '__(' → logprob: -3.0624427795410156
    3. '_' → logprob: -4.312442779541016
    4. '___' → logprob: -8.187442779541016
    5. '_(' → logprob: -10.812442779541016
    6. '__((' → logprob: -11.062442779541016
    7. '____' → logprob: -11.687442779541016
    8. '(' → logprob: -12.187442779541016
    9. '(self' → logprob: -12.187442779541016
    10. '__

' → logprob: -12.437442779541016

Token 25: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.3080716346157715e-05
    2. ' self' → logprob: -10.750022888183594
    3. 'other' → logprob: -14.125022888183594
    4. 's' → logprob: -14.500022888183594
    5. '       ' → logprob: -16.000022888183594
    6. ' ' → logprob: -17.000022888183594
    7. '   ' → logprob: -17.375022888183594
    8. ')' → logprob: -17.500022888183594
    9. 'sel' → logprob: -17.625022888183594
    10. '(self' → logprob: -18.250022888183594

Token 26: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0380677729845047
    2. ' ,' → logprob: -3.2880678176879883
    3. 'self' → logprob: -10.788067817687988
    4. ',self' → logprob: -13.163067817687988
    5. ' ' → logprob: -13.413067817687988
    6. ',s' → logprob: -13.913067817687988
    7. ')' → logprob: -14.913067817687988
    8. ',obj' → logprob: -16.288066864013672
    9. '‌,' → logprob: -16.413066864013672
    10. '```' → logprob: -16.413066864013672

Token 27: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.07889506965875626
    2. 'other' → logprob: -2.578895092010498
    3. ' o' → logprob: -12.57889461517334
    4. ' stick' → logprob: -14.32889461517334
    5. ' ' → logprob: -15.20389461517334
    6. ')' → logprob: -15.20389461517334
    7. 'o' → logprob: -15.32889461517334
    8. ' oth' → logprob: -15.95389461517334
    9. '(other' → logprob: -16.328895568847656
    10. 'self' → logprob: -16.578895568847656

Token 28: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009676877409219742
    2. ')' → logprob: -4.759676933288574
    3. ' ):' → logprob: -7.259676933288574
    4. ':' → logprob: -8.509676933288574
    5. ',' → logprob: -9.509676933288574
    6. '):
' → logprob: -10.134676933288574
    7. ' )' → logprob: -10.509676933288574
    8. '   ' → logprob: -13.259676933288574
    9. '<|end|>' → logprob: -13.384676933288574
    10. 'and' → logprob: -13.634676933288574

Token 29: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21866869926452637
    2. ':' → logprob: -3.4686686992645264
    3. ' return' → logprob: -3.5936686992645264
    4. '<|end|>' → logprob: -3.5936686992645264
    5. '        ' → logprob: -3.9686686992645264
    6. '    ' → logprob: -3.9686686992645264
    7. ' (' → logprob: -3.9686686992645264
    8. ' if' → logprob: -4.0936689376831055
    9. ' isinstance' → logprob: -5.2186689376831055
    10. ' :' → logprob: -5.3436689376831055

Token 30: ' if' (ID: 538)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.48574718832969666
    2. 'return' → logprob: -1.110747218132019
    3. '       ' → logprob: -2.9857470989227295
    4. ' if' → logprob: -5.735747337341309
    5. ' isinstance' → logprob: -6.985747337341309
    6. 'if' (adapté à ' if') → logprob: -7.610747337341309
    7. '   ' → logprob: -9.110747337341309
    8. '<|end|>' → logprob: -10.610747337341309
    9. 'self' → logprob: -11.235747337341309
    10. 'eturn' → logprob: -11.235747337341309

Token 31: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.03904261440038681
    2. ' isinstance' → logprob: -3.6640427112579346
    3. 'not' → logprob: -4.7890424728393555
    4. ' self' → logprob: -5.6640424728393555
    5. 'self' → logprob: -7.1640424728393555
    6. ' ' → logprob: -9.664042472839355
    7. ' ' → logprob: -10.539042472839355
    8. '	not' → logprob: -12.664042472839355
    9. 'is' → logprob: -13.164042472839355
    10. '   ' → logprob: -14.164042472839355

Token 32: ' isinstance' (ID: 25889)
  Prédit: ' isinstance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' isinstance' → logprob: -3.5716304410016164e-05
    2. 'is' → logprob: -10.250035285949707
    3. ' hasattr' → logprob: -15.125035285949707
    4. '(is' → logprob: -18.375036239624023
    5. ' ' → logprob: -18.875036239624023
    6. ' is' → logprob: -19.000036239624023
    7. ' iss' → logprob: -19.125036239624023
    8. 'iss' → logprob: -19.625036239624023
    9. ' ' → logprob: -20.375036239624023
    10. '  ' → logprob: -20.625036239624023

Token 33: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -0.00046272401232272387
    2. '(' → logprob: -7.750462532043457
    3. 'other' → logprob: -10.500462532043457
    4. ' other' → logprob: -12.375462532043457
    5. '(self' → logprob: -16.125463485717773
    6. 'Other' → logprob: -16.375463485717773
    7. '(o' → logprob: -17.000463485717773
    8. ' ' → logprob: -17.750463485717773
    9. '(
' → logprob: -17.750463485717773
    10. '.other' → logprob: -17.875463485717773

Token 34: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.064297824399546e-05
    2. '(other' → logprob: -10.125070571899414
    3. ' ,' → logprob: -10.625070571899414
    4. 'other' → logprob: -12.125070571899414
    5. '(' → logprob: -14.375070571899414
    6. '(self' → logprob: -16.250070571899414
    7. '

' → logprob: -16.750070571899414
    8. 'Other' → logprob: -17.375070571899414
    9. '```' → logprob: -17.375070571899414
    10. 'self' → logprob: -18.000070571899414

Token 35: ' Stick' (ID: 55261)
  Prédit: ' Stick'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Stick' → logprob: -0.08156371116638184
    2. 'Stick' → logprob: -2.581563711166382
    3. ' ' → logprob: -5.956563949584961
    4. ' stick' → logprob: -10.081563949584961
    5. ' ' → logprob: -10.331563949584961
    6. ' St' → logprob: -13.206563949584961
    7. '  ' → logprob: -13.456563949584961
    8. ' self' → logprob: -14.081563949584961
    9. 'St' → logprob: -14.456563949584961
    10. ' )' → logprob: -14.956563949584961

Token 36: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2532598376274109
    2. '):
' → logprob: -1.5032598972320557
    3. ')' → logprob: -7.628259658813477
    4. '):
' → logprob: -7.628259658813477
    5. ' ):' → logprob: -8.253259658813477
    6. ' ):
' → logprob: -10.128259658813477
    7. '):

' → logprob: -10.878259658813477
    8. '       ' → logprob: -10.878259658813477
    9. '   ' → logprob: -12.253259658813477
    10. ':' → logprob: -12.253259658813477

Token 37: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.046945273876190186
    2. ' return' → logprob: -3.921945333480835
    3. ':' → logprob: -4.296945095062256
    4. ':return' → logprob: -4.921945095062256
    5. 'return' → logprob: -5.671945095062256
    6. ' :' → logprob: -7.921945095062256
    7. ':
' → logprob: -7.921945095062256
    8. '            ' → logprob: -8.171945571899414
    9. ')' → logprob: -9.171945571899414
    10. '```' → logprob: -9.296945571899414

Token 38: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.026556188240647316
    2. 'return' (adapté à ' return') → logprob: -4.276556015014648
    3. '           ' → logprob: -4.526556015014648
    4. '            ' → logprob: -7.276556015014648
    5. ' ' → logprob: -7.401556015014648
    6. ' ' → logprob: -9.776556015014648
    7. ':return' → logprob: -9.901556015014648
    8. ' 
' → logprob: -10.151556015014648
    9. '```' → logprob: -10.901556015014648
    10. '               ' → logprob: -12.026556015014648

Token 39: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.10301174968481064
    2. ' False' → logprob: -2.3530118465423584
    3. ' Not' → logprob: -6.353011608123779
    4. 'Not' → logprob: -6.853011608123779
    5. '    ' → logprob: -13.103012084960938
    6. '       ' → logprob: -14.103012084960938
    7. '   ' → logprob: -14.853012084960938
    8. '(False' → logprob: -15.728012084960938
    9. 'True' → logprob: -16.478012084960938
    10. '        ' → logprob: -16.853012084960938

Token 40: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5296240448951721
    2. '       ' → logprob: -0.9046240448951721
    3. '\n' → logprob: -5.404623985290527
    4. '        
' → logprob: -7.154623985290527
    5. '<|end|>' → logprob: -7.904623985290527
    6. '\' → logprob: -8.904623985290527
    7. ' 
' → logprob: -8.904623985290527
    8. '  
' → logprob: -8.904623985290527
    9. '    
' → logprob: -9.529623985290527
    10. '' → logprob: -9.654623985290527

Token 41: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6357662081718445
    2. '
' → logprob: -0.7607662081718445
    3. '\n' → logprob: -6.26076602935791
    4. '        
' → logprob: -7.26076602935791
    5. '
' → logprob: -8.88576602935791
    6. '' → logprob: -9.63576602935791
    7. '\' → logprob: -9.76076602935791
    8. '    
' → logprob: -10.01076602935791
    9. '  
' → logprob: -10.13576602935791
    10. ' 
' → logprob: -10.38576602935791

Token 42: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.07038096338510513
    2. '       ' → logprob: -3.195380926132202
    3. '
' → logprob: -4.445381164550781
    4. ' return' → logprob: -4.695381164550781
    5. '        
' → logprob: -5.820381164550781
    6. '    
' → logprob: -6.695381164550781
    7. '\' → logprob: -7.570381164550781
    8. '<|end|>' → logprob: -8.445381164550781
    9. '{return' → logprob: -8.695381164550781
    10. 'self' → logprob: -8.820381164550781

Token 43: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.014164448715746403
    2. 'self' → logprob: -4.264164447784424
    3. ' ' → logprob: -13.889164924621582
    4. ' ' → logprob: -18.264163970947266
    5. '	self' → logprob: -18.264163970947266
    6. '(self' → logprob: -18.514163970947266
    7. '_self' → logprob: -18.514163970947266
    8. 'Self' → logprob: -18.889163970947266
    9. '    ' → logprob: -19.264163970947266
    10. '        ' → logprob: -20.014163970947266

Token 44: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -8.602024900028482e-05
    2. '.' → logprob: -9.375085830688477
    3. 'length' → logprob: -15.000085830688477
    4. '.size' → logprob: -15.250085830688477
    5. '.value' → logprob: -15.875085830688477
    6. '.l' → logprob: -16.125085830688477
    7. '.code' → logprob: -16.625085830688477
    8. '.width' → logprob: -17.125085830688477
    9. '.len' → logprob: -17.125085830688477
    10. '.LENGTH' → logprob: -17.250085830688477

Token 45: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0017033906187862158
    2. '==' → logprob: -6.376703262329102
    3. '=' → logprob: -15.376703262329102
    4. ' ===' → logprob: -15.376703262329102
    5. ' =' → logprob: -15.376703262329102
    6. '        ' → logprob: -16.3767032623291
    7. '===' → logprob: -16.3767032623291
    8. '   ' → logprob: -16.6267032623291
    9. '.' → logprob: -16.8767032623291
    10. '    ' → logprob: -16.8767032623291

Token 46: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.31326186656951904
    2. 'other' → logprob: -1.313261866569519
    3. '.other' → logprob: -16.063261032104492
    4. '(other' → logprob: -16.563261032104492
    5. 'Other' → logprob: -17.438261032104492
    6. '_other' → logprob: -17.813261032104492
    7. ' ' → logprob: -18.938261032104492
    8. ' oth' → logprob: -19.188261032104492
    9. 'o' → logprob: -19.938261032104492
    10. ' other's' → logprob: -20.438261032104492

Token 47: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -0.007621653378009796
    2. '.' → logprob: -4.882621765136719
    3. 'length' → logprob: -11.757621765136719
    4. ' .' → logprob: -12.132621765136719
    5. '.l' → logprob: -14.382621765136719
    6. '.size' → logprob: -14.882621765136719
    7. '.LENGTH' → logprob: -15.507621765136719
    8. '.width' → logprob: -16.25762176513672
    9. '.other' → logprob: -16.25762176513672
    10. '.
' → logprob: -16.50762176513672

Token 48: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7512214183807373
    2. '   ' → logprob: -1.5012214183807373
    3. '<|end|>' → logprob: -1.5012214183807373
    4. '    
' → logprob: -3.2512214183807373
    5. ' 
' → logprob: -4.501221656799316
    6. '

' → logprob: -5.376221656799316
    7. '<|end|>' → logprob: -5.376221656799316
    8. '\n' → logprob: -5.501221656799316
    9. ' ' → logprob: -5.626221656799316
    10. '```' → logprob: -5.751221656799316

Token 49: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22056430578231812
    2. '<|end|>' → logprob: -2.220564365386963
    3. '
' → logprob: -2.720564365386963
    4. '    
' → logprob: -4.095564365386963
    5. '<|end|>' → logprob: -6.470564365386963
    6. ' 
' → logprob: -6.595564365386963
    7. ' ' → logprob: -6.970564365386963
    8. '  
' → logprob: -7.720564365386963
    9. '```' → logprob: -7.720564365386963
    10. '

' → logprob: -8.220563888549805

Token 50: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17016220092773438
    2. 'def' (adapté à ' def') → logprob: -1.9201622009277344
    3. '    
' → logprob: -5.170162200927734
    4. ' def' → logprob: -6.045162200927734
    5. ' ' → logprob: -7.795162200927734
    6. '    ' → logprob: -7.920162200927734
    7. ' 
' → logprob: -8.295162200927734
    8. '
' → logprob: -8.920162200927734
    9. '  ' → logprob: -9.045162200927734
    10. '```' → logprob: -9.045162200927734

Token 51: ' __' (ID: 2516)
  Prédit: 'repr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repr' → logprob: -1.0476229190826416
    2. 'lt' → logprob: -1.4226229190826416
    3. ' lt' → logprob: -1.7976229190826416
    4. ' __' → logprob: -1.7976229190826416
    5. '__' → logprob: -4.4226226806640625
    6. ' repr' → logprob: -4.4226226806640625
    7. 'len' → logprob: -4.5476226806640625
    8. 'hash' → logprob: -4.9226226806640625
    9. ' str' → logprob: -5.1726226806640625
    10. 'str' → logprob: -5.2976226806640625

Token 52: 'hash' (ID: 16909)
  Prédit: 'hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.40195804834365845
    2. 'lt' → logprob: -1.1519579887390137
    3. 'repr' → logprob: -4.526957988739014
    4. 'len' → logprob: -6.026957988739014
    5. 'str' → logprob: -7.026957988739014
    6. 'add' → logprob: -7.651957988739014
    7. 'gt' → logprob: -8.526958465576172
    8. 'ne' → logprob: -9.026958465576172
    9. 'ge' → logprob: -10.776958465576172
    10. 'le' → logprob: -10.901958465576172

Token 53: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5348133444786072
    2. '(self' → logprob: -0.9098133444786072
    3. '__(' → logprob: -5.159813404083252
    4. '_' → logprob: -6.284813404083252
    5. '   ' → logprob: -6.409813404083252
    6. '__' → logprob: -6.909813404083252
    7. ' (' → logprob: -7.784813404083252
    8. ')' → logprob: -8.284812927246094
    9. '```' → logprob: -8.659812927246094
    10. '_(' → logprob: -9.034812927246094

Token 54: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.128163257315464e-07
    2. ' self' → logprob: -15.75
    3. ')' → logprob: -16.125
    4. '   ' → logprob: -18.375
    5. '(self' → logprob: -19.25
    6. 's' → logprob: -20.125
    7. '       ' → logprob: -20.375
    8. ' ' → logprob: -21.125
    9. '	self' → logprob: -21.125
    10. '
' → logprob: -21.5

Token 55: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006405200809240341
    2. ',' → logprob: -5.256405353546143
    3. '):
' → logprob: -7.256405353546143
    4. ')' → logprob: -8.006404876708984
    5. ' ):' → logprob: -10.006404876708984
    6. 'self' → logprob: -10.131404876708984
    7. '   ' → logprob: -10.381404876708984
    8. '       ' → logprob: -12.131404876708984
    9. ' ,' → logprob: -13.381404876708984
    10. ' ' → logprob: -13.631404876708984

Token 56: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21755799651145935
    2. ' return' → logprob: -1.7175580263137817
    3. 'return' → logprob: -4.217557907104492
    4. '   ' → logprob: -6.717557907104492
    5. ' hash' → logprob: -10.217557907104492
    6. '    ' → logprob: -11.592557907104492
    7. '
' → logprob: -11.717557907104492
    8. '      ' → logprob: -12.717557907104492
    9. '        
' → logprob: -12.967557907104492
    10. '        ' → logprob: -12.967557907104492

Token 57: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.35030224919319153
    2. '       ' → logprob: -1.3503022193908691
    3. ' return' → logprob: -3.475302219390869
    4. '   ' → logprob: -5.225302219390869
    5. '```' → logprob: -11.100302696228027
    6. '    ' → logprob: -12.350302696228027
    7. '      ' → logprob: -12.725302696228027
    8. '     ' → logprob: -13.100302696228027
    9. '	return' → logprob: -13.475302696228027
    10. 'ret' → logprob: -14.100302696228027

Token 58: ' hash' (ID: 10691)
  Prédit: ' hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' hash' → logprob: -0.6028381586074829
    2. 'hash' → logprob: -0.8528381586074829
    3. ' self' → logprob: -3.9778380393981934
    4. 'self' → logprob: -4.852838039398193
    5. '   ' → logprob: -11.977838516235352
    6. ' ' → logprob: -13.852838516235352
    7. '	hash' → logprob: -15.727838516235352
    8. '  ' → logprob: -15.852838516235352
    9. '(hash' → logprob: -16.35283851623535
    10. ' ' → logprob: -16.60283851623535

Token 59: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.029816102236509323
    2. '(' → logprob: -3.529816150665283
    3. '(s' → logprob: -10.404815673828125
    4. '((' → logprob: -10.404815673828125
    5. ' (' → logprob: -13.154815673828125
    6. '(st' → logprob: -13.529815673828125
    7. 'self' → logprob: -14.529815673828125
    8. '(this' → logprob: -15.279815673828125
    9. '(S' → logprob: -15.779815673828125
    10. '(sel' → logprob: -15.904815673828125

Token 60: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -2.7014437364414334e-05
    2. '.' → logprob: -10.62502670288086
    3. ' .' → logprob: -13.62502670288086
    4. '.st' → logprob: -14.12502670288086
    5. ').' → logprob: -15.87502670288086
    6. ')' → logprob: -16.37502670288086
    7. '.LENGTH' → logprob: -16.50002670288086
    8. '.l' → logprob: -16.62502670288086
    9. '.size' → logprob: -16.75002670288086
    10. '.width' → logprob: -16.87502670288086

Token 61: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ')
' → logprob: -15.5
    3. ' )' → logprob: -15.875
    4. '   ' → logprob: -17.0
    5. '))' → logprob: -18.0
    6. '}' → logprob: -18.375
    7. '       ' → logprob: -19.25
    8. ')return' → logprob: -19.5
    9. '）' → logprob: -19.625
    10. ')}' → logprob: -19.625

Token 62: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 63: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03142106905579567
    2. 'def' (adapté à ' def') → logprob: -4.281421184539795
    3. 'class' → logprob: -4.531421184539795
    4. '<|end|>' → logprob: -6.656421184539795
    5. ' ' → logprob: -6.906421184539795
    6. '#' → logprob: -7.031421184539795
    7. '    ' → logprob: -7.406421184539795
    8. '
' → logprob: -7.781421184539795
    9. '```' → logprob: -7.906421184539795
    10. 's' → logprob: -8.031420707702637

Token 64: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1419854164123535
    2. ' __' → logprob: -1.2669854164123535
    3. ' is' → logprob: -1.6419854164123535
    4. ' cut' → logprob: -2.2669854164123535
    5. ' break' → logprob: -3.8919854164123535
    6. ' can' → logprob: -4.0169854164123535
    7. ' get' → logprob: -4.0169854164123535
    8. ' copy' → logprob: -4.7669854164123535
    9. ' compare' → logprob: -5.3919854164123535
    10. ' def' → logprob: -5.5169854164123535

Token 65: 'repr' (ID: 67002)
  Prédit: 'lt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lt' → logprob: -0.282470166683197
    2. 'repr' → logprob: -1.7824702262878418
    3. 'str' → logprob: -2.657470226287842
    4. 'len' → logprob: -5.032470226287842
    5. 'add' → logprob: -6.907470226287842
    6. 'gt' → logprob: -9.157469749450684
    7. 'le' → logprob: -9.657469749450684
    8. 'ne' → logprob: -11.032469749450684
    9. 'copy' → logprob: -11.782469749450684
    10. 'ge' → logprob: -12.657469749450684

Token 66: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.1247202530503273
    2. '__' → logprob: -2.249720335006714
    3. '__('' → logprob: -4.749720096588135
    4. '__(
' → logprob: -5.999720096588135
    5. '__("' → logprob: -8.124720573425293
    6. '__((' → logprob: -8.249720573425293
    7. '(' → logprob: -9.249720573425293
    8. '__(*' → logprob: -10.999720573425293
    9. '_' → logprob: -11.874720573425293
    10. '(self' → logprob: -12.624720573425293

Token 67: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.1008713702030946e-06
    2. ')' → logprob: -13.750001907348633
    3. ' self' → logprob: -14.000001907348633
    4. '(self' → logprob: -17.125001907348633
    5. 'Self' → logprob: -17.500001907348633
    6. '_self' → logprob: -18.375001907348633
    7. '{' → logprob: -19.125001907348633
    8. '   ' → logprob: -19.250001907348633
    9. '
' → logprob: -19.500001907348633
    10. '       ' → logprob: -19.750001907348633

Token 68: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.036879319697618484
    2. '__' → logprob: -3.536879301071167
    3. '__)' → logprob: -5.661879539489746
    4. 'self' → logprob: -7.036879539489746
    5. ')__' → logprob: -7.536879539489746
    6. '__('' → logprob: -7.661879539489746
    7. ').__' → logprob: -8.286879539489746
    8. '(' → logprob: -8.536879539489746
    9. '<|end|>' → logprob: -8.536879539489746
    10. ')(__' → logprob: -8.786879539489746

Token 69: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014659387525171041
    2. ' f' → logprob: -6.751465797424316
    3. 'return' → logprob: -9.126465797424316
    4. 'f' → logprob: -9.626465797424316
    5. ' return' → logprob: -9.626465797424316
    6. '   ' → logprob: -10.751465797424316
    7. 'self' → logprob: -11.001465797424316
    8. '           ' → logprob: -11.626465797424316
    9. '      ' → logprob: -13.376465797424316
    10. '        ' → logprob: -13.501465797424316

Token 70: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.025122296065092087
    2. 'f' → logprob: -3.7751224040985107
    3. ' return' → logprob: -6.525122165679932
    4. '       ' → logprob: -8.15012264251709
    5. '   ' → logprob: -9.40012264251709
    6. ' f' → logprob: -10.27512264251709
    7. '```' → logprob: -13.52512264251709
    8. '           ' → logprob: -14.52512264251709
    9. '{return' → logprob: -15.02512264251709
    10. '`' → logprob: -15.40012264251709

Token 71: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.5759459733963013
    2. 'f' → logprob: -0.8259459733963013
    3. ''f' → logprob: -12.325945854187012
    4. ' ' → logprob: -14.825945854187012
    5. '(f' → logprob: -14.950945854187012
    6. '	f' → logprob: -15.200945854187012
    7. 'F' → logprob: -15.325945854187012
    8. ''' → logprob: -15.325945854187012
    9. '"' → logprob: -15.950945854187012
    10. '<f' → logprob: -16.325946807861328

Token 72: '"' (ID: 1)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.9054321646690369
    2. '(' → logprob: -1.4054322242736816
    3. '(f' → logprob: -2.0304322242736816
    4. '"' → logprob: -2.4054322242736816
    5. 'Stick' → logprob: -2.5304322242736816
    6. ''S' → logprob: -3.5304322242736816
    7. ' Stick' → logprob: -4.655432224273682
    8. '(F' → logprob: -6.530432224273682
    9. ''' → logprob: -6.530432224273682
    10. '(
' → logprob: -6.905432224273682

Token 73: 'Stick' (ID: 94452)
  Prédit: 'Stick'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stick' → logprob: -7.584239938296378e-06
    2. ' Stick' → logprob: -12.625007629394531
    3. 'St' → logprob: -13.250007629394531
    4. '"' → logprob: -13.750007629394531
    5. '<' → logprob: -14.125007629394531
    6. ''' → logprob: -15.375007629394531
    7. 'stick' → logprob: -16.00000762939453
    8. '`' → logprob: -16.50000762939453
    9. ''S' → logprob: -16.87500762939453
    10. 'Sticker' → logprob: -16.87500762939453

Token 74: '(length' (ID: 47037)
  Prédit: '(length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(length' → logprob: -0.16037268936634064
    2. '({' → logprob: -1.9103727340698242
    3. '{' → logprob: -9.660372734069824
    4. '(' → logprob: -9.910372734069824
    5. '(self' → logprob: -10.410372734069824
    6. '(len' → logprob: -12.535372734069824
    7. '[length' → logprob: -14.785372734069824
    8. '('{' → logprob: -15.160372734069824
    9. '(({' → logprob: -15.535372734069824
    10. '(l' → logprob: -16.285371780395508

Token 75: '={' (ID: 1693)
  Prédit: '={'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '={' → logprob: -0.008889085613191128
    2. '=' → logprob: -5.258889198303223
    3. '{' → logprob: -5.758889198303223
    4. '=self' → logprob: -7.633889198303223
    5. '=f' → logprob: -12.383889198303223
    6. '=}' → logprob: -13.258889198303223
    7. 'self' → logprob: -13.758889198303223
    8. '={
' → logprob: -14.633889198303223
    9. '=

' → logprob: -14.758889198303223
    10. '={`' → logprob: -14.883889198303223

Token 76: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.248469718324486e-05
    2. '{' → logprob: -10.750022888183594
    3. ' self' → logprob: -13.875022888183594
    4. 's' → logprob: -17.750022888183594
    5. '
' → logprob: -18.000022888183594
    6. '{
' → logprob: -18.250022888183594
    7. '       ' → logprob: -18.625022888183594
    8. '   ' → logprob: -18.750022888183594
    9. '$self' → logprob: -18.875022888183594
    10. '	self' → logprob: -19.125022888183594

Token 77: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -0.00037919526221230626
    2. '.' → logprob: -8.25037956237793
    3. '.st' → logprob: -9.37537956237793
    4. '.l' → logprob: -10.87537956237793
    5. '.len' → logprob: -11.37537956237793
    6. '.s' → logprob: -14.37537956237793
    7. '.width' → logprob: -14.50037956237793
    8. '.Length' → logprob: -15.37537956237793
    9. '.left' → logprob: -15.62537956237793
    10. '.size' → logprob: -15.62537956237793

Token 78: '})' (ID: 9263)
  Prédit: ')"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')"' → logprob: -0.01663399673998356
    2. '})' → logprob: -4.516633987426758
    3. ')' → logprob: -5.266633987426758
    4. '}"' → logprob: -8.391633987426758
    5. ')}' → logprob: -9.016633987426758
    6. ')">' → logprob: -10.891633987426758
    7. ')")' → logprob: -11.266633987426758
    8. '}")' → logprob: -11.391633987426758
    9. '")' → logprob: -12.266633987426758
    10. ')`' → logprob: -13.016633987426758

Token 79: '"


' (ID: 36470)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2172088623046875
    2. '<|end|>' → logprob: -2.2172088623046875
    3. '\n' → logprob: -3.3422088623046875
    4. '```' → logprob: -3.7172088623046875
    5. '"""' → logprob: -5.0922088623046875
    6. ')' → logprob: -5.0922088623046875
    7. ''' → logprob: -5.4672088623046875
    8. '`' → logprob: -5.4672088623046875
    9. '
' → logprob: -6.4672088623046875
    10. '")' → logprob: -6.7172088623046875

Token 80: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -1.0762039422988892
    2. '
' → logprob: -1.2012039422988892
    3. 'd' → logprob: -2.5762038230895996
    4. '#' → logprob: -2.9512038230895996
    5. '[' → logprob: -3.2012038230895996
    6. '   ' → logprob: -3.5762038230895996
    7. 'n' → logprob: -3.5762038230895996
    8. 'c' → logprob: -3.7012038230895996
    9. '<|end|>' → logprob: -3.9512038230895996
    10. '.' → logprob: -4.3262038230896

Token 81: ' Rectangle' (ID: 38728)
  Prédit: ' Cube'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Cube' → logprob: -0.5159898400306702
    2. ' Box' → logprob: -1.3909897804260254
    3. ' ' → logprob: -2.0159897804260254
    4. ' Board' → logprob: -5.640989780426025
    5. ' Space' → logprob: -5.765989780426025
    6. ' Block' → logprob: -6.390989780426025
    7. ' Square' → logprob: -6.765989780426025
    8. ' `' → logprob: -6.765989780426025
    9. ' Triangle' → logprob: -6.890989780426025
    10. ' Stick' → logprob: -6.890989780426025

Token 82: 'Validator' (ID: 18992)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00033308175625279546
    2. '<|end|>' → logprob: -8.875332832336426
    3. ':
' → logprob: -9.125332832336426
    4. '(' → logprob: -10.375332832336426
    5. ' :' → logprob: -10.750332832336426
    6. '):' → logprob: -10.875332832336426
    7. '():' → logprob: -12.375332832336426
    8. '(object' → logprob: -13.375332832336426
    9. '<|end|>' → logprob: -13.750332832336426
    10. ':**' → logprob: -14.125332832336426

Token 83: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005953280488029122
    2. '(' → logprob: -8.375595092773438
    3. ' :' → logprob: -8.625595092773438
    4. '<|end|>' → logprob: -8.875595092773438
    5. ':
' → logprob: -10.500595092773438
    6. '():' → logprob: -12.375595092773438
    7. '):' → logprob: -12.500595092773438
    8. '<|end|>' → logprob: -13.250595092773438
    9. '(object' → logprob: -14.000595092773438
    10. '```' → logprob: -14.000595092773438

Token 84: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.277640700340271
    2. ' def' → logprob: -1.902640700340271
    3. ' 
' → logprob: -2.7776408195495605
    4. '    
' → logprob: -4.2776408195495605
    5. '    ' → logprob: -5.1526408195495605
    6. ' ' → logprob: -5.7776408195495605
    7. '<|end|>' → logprob: -6.0276408195495605
    8. 'def' → logprob: -7.0276408195495605
    9. '  
' → logprob: -7.2776408195495605
    10. '(' → logprob: -7.2776408195495605

Token 85: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.12361545860767365
    2. ' ' → logprob: -2.6236155033111572
    3. '   ' → logprob: -3.8736155033111572
    4. 'def' (adapté à ' def') → logprob: -4.623615264892578
    5. '    ' → logprob: -5.248615264892578
    6. ' 
' → logprob: -5.498615264892578
    7. '  ' → logprob: -6.373615264892578
    8. ' ' → logprob: -7.998615264892578
    9. '_' → logprob: -8.123615264892578
    10. 'd' → logprob: -8.248615264892578

Token 86: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3685489296913147
    2. ' validate' → logprob: -1.24354887008667
    3. ' __' → logprob: -4.61854887008667
    4. '_validate' → logprob: -6.11854887008667
    5. 'validate' → logprob: -6.24354887008667
    6. '_' → logprob: -6.24354887008667
    7. ' def' → logprob: -6.74354887008667
    8. ' _' → logprob: -7.11854887008667
    9. '  ' → logprob: -7.24354887008667
    10. ' ```' → logprob: -8.368549346923828

Token 87: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0005730479606427252
    2. 'eq' → logprob: -7.62557315826416
    3. 'call' → logprob: -9.50057315826416
    4. ' init' → logprob: -12.50057315826416
    5. 'hash' → logprob: -12.87557315826416
    6. 'new' → logprob: -13.87557315826416
    7. '```' → logprob: -14.12557315826416
    8. 'in' → logprob: -15.12557315826416
    9. 'is' → logprob: -15.12557315826416
    10. 'int' → logprob: -15.37557315826416

Token 88: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.5498487949371338
    2. ' (' → logprob: -1.1748487949371338
    3. '(' → logprob: -3.049848794937134
    4. '(self' → logprob: -3.424848794937134
    5. '__' → logprob: -4.174848556518555
    6. '<|end|>' → logprob: -5.299848556518555
    7. '_' → logprob: -5.424848556518555
    8. '__(
' → logprob: -5.674848556518555
    9. ' ' → logprob: -6.049848556518555
    10. '_(' → logprob: -6.299848556518555

Token 89: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.024180781096220016
    2. ')' → logprob: -4.274180889129639
    3. ' self' → logprob: -4.649180889129639
    4. ' ' → logprob: -8.52418041229248
    5. ' )' → logprob: -9.39918041229248
    6. 's' → logprob: -10.14918041229248
    7. '   ' → logprob: -11.52418041229248
    8. 'length' → logprob: -11.89918041229248
    9. '[' → logprob: -12.02418041229248
    10. ' ' → logprob: -12.27418041229248

Token 90: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007754384074360132
    2. ' ,' → logprob: -4.882754325866699
    3. ')' → logprob: -9.8827543258667
    4. '):' → logprob: -10.1327543258667
    5. 'self' → logprob: -10.6327543258667
    6. '<|end|>' → logprob: -11.2577543258667
    7. ' )' → logprob: -12.3827543258667
    8. ',length' → logprob: -12.5077543258667
    9. ',
' → logprob: -13.3827543258667
    10. '<|end|>' → logprob: -13.7577543258667

Token 91: ' sticks' (ID: 54819)
  Prédit: 'sticks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sticks' → logprob: -0.7135988473892212
    2. ' sticks' → logprob: -1.0885988473892212
    3. 's' → logprob: -2.2135987281799316
    4. ' sides' → logprob: -3.7135987281799316
    5. 'self' → logprob: -4.588598728179932
    6. ' self' → logprob: -5.463598728179932
    7. 'stick' → logprob: -5.463598728179932
    8. ' side' → logprob: -5.838598728179932
    9. ')' → logprob: -5.838598728179932
    10. 'side' → logprob: -6.213598728179932

Token 92: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5843742489814758
    2. '):' → logprob: -0.8343742489814758
    3. ')' → logprob: -5.20937442779541
    4. ' ):' → logprob: -6.20937442779541
    5. ':list' → logprob: -7.58437442779541
    6. ',' → logprob: -8.83437442779541
    7. ' )' → logprob: -9.08437442779541
    8. '):
' → logprob: -9.95937442779541
    9. ' :' → logprob: -10.08437442779541
    10. '[' → logprob: -11.45937442779541

Token 93: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006417043972760439
    2. 'self' → logprob: -5.881417274475098
    3. '   ' → logprob: -6.381417274475098
    4. '[' → logprob: -6.756417274475098
    5. ' self' → logprob: -7.631417274475098
    6. '[]' → logprob: -10.381417274475098
    7. '      ' → logprob: -10.631417274475098
    8. '    ' → logprob: -10.756417274475098
    9. ' ' → logprob: -10.756417274475098
    10. '<|end|>' → logprob: -10.881417274475098

Token 94: ' if' (ID: 538)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.16126111149787903
    2. 'self' → logprob: -1.9112610816955566
    3. '       ' → logprob: -7.036261081695557
    4. '        ' → logprob: -9.661261558532715
    5. ' ' → logprob: -9.786261558532715
    6. ' ' → logprob: -11.161261558532715
    7. '   ' → logprob: -11.411261558532715
    8. '    ' → logprob: -12.036261558532715
    9. '	self' → logprob: -13.286261558532715
    10. ' sticks' → logprob: -14.161261558532715

Token 95: ' len' (ID: 4631)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.07873653620481491
    2. ' len' → logprob: -2.7037365436553955
    3. ' sticks' → logprob: -5.578736305236816
    4. 'not' → logprob: -6.078736305236816
    5. ' isinstance' → logprob: -6.703736305236816
    6. 'len' → logprob: -6.703736305236816
    7. ' all' → logprob: -9.078736305236816
    8. ' any' → logprob: -10.078736305236816
    9. 'sticks' → logprob: -10.078736305236816
    10. ' ' → logprob: -11.578736305236816

Token 96: '(st' (ID: 4065)
  Prédit: '(st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(st' → logprob: -0.202354297041893
    2. '(' → logprob: -1.7023543119430542
    3. '(s' → logprob: -7.077354431152344
    4. ' (' → logprob: -9.702354431152344
    5. '(self' → logprob: -10.952354431152344
    6. '(
' → logprob: -11.077354431152344
    7. '(

' → logprob: -14.452354431152344
    8. '(set' → logprob: -14.577354431152344
    9. ' ' → logprob: -14.827354431152344
    10. '	st' → logprob: -15.452354431152344

Token 97: 'icks' (ID: 8736)
  Prédit: 'icks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icks' → logprob: -0.0006545356009155512
    2. 'cks' → logprob: -8.000654220581055
    3. '```' → logprob: -9.750654220581055
    4. ' ' → logprob: -10.000654220581055
    5. 'ics' → logprob: -10.500654220581055
    6. '   ' → logprob: -10.500654220581055
    7. '``' → logprob: -10.875654220581055
    8. '>' → logprob: -11.000654220581055
    9. '[' → logprob: -11.000654220581055
    10. 'iks' → logprob: -11.250654220581055

Token 98: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04321396350860596
    2. ' )' → logprob: -3.1682138442993164
    3. ')!=' → logprob: -8.918213844299316
    4. ' !=' → logprob: -9.918213844299316
    5. ')<' → logprob: -11.418213844299316
    6. ' <' → logprob: -11.793213844299316
    7. ' ' → logprob: -12.418213844299316
    8. ')==' → logprob: -13.418213844299316
    9. ')%' → logprob: -13.793213844299316
    10. '!=' → logprob: -13.793213844299316

Token 99: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.033230431377887726
    2. ' <' → logprob: -4.158230304718018
    3. '!=' → logprob: -4.283230304718018
    4. ' ' → logprob: -6.658230304718018
    5. ' %' → logprob: -6.908230304718018
    6. ')' → logprob: -8.033230781555176
    7. '<' → logprob: -8.408230781555176
    8. ' not' → logprob: -8.533230781555176
    9. '%' → logprob: -9.783230781555176
    10. ' )' → logprob: -9.908230781555176

Token 100: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.11284806579351425
    2. ' ' → logprob: -2.2378480434417725
    3. '6' → logprob: -11.237848281860352
    4. '8' → logprob: -11.612848281860352
    5. '   ' → logprob: -13.362848281860352
    6. ' ' → logprob: -14.362848281860352
    7. '  ' → logprob: -14.612848281860352
    8. '16' → logprob: -15.550348281860352
    9. '```' → logprob: -15.550348281860352
    10. '12' → logprob: -15.862848281860352

Token 101: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.00010282796574756503
    2. ' ' → logprob: -9.250102996826172
    3. '6' → logprob: -12.500102996826172
    4. '8' → logprob: -14.187602996826172
    5. '   ' → logprob: -14.625102996826172
    6. '```' → logprob: -14.812602996826172
    7. '۴' → logprob: -15.500102996826172
    8. '

' → logprob: -15.875102996826172
    9. '  ' → logprob: -15.875102996826172
    10. '' → logprob: -15.937602996826172

Token 102: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01644992083311081
    2. ':
' → logprob: -4.266449928283691
    3. ' or' → logprob: -6.266449928283691
    4. '):' → logprob: -8.641449928283691
    5. ' and' → logprob: -9.516449928283691
    6. '       ' → logprob: -10.391449928283691
    7. ')' → logprob: -10.391449928283691
    8. '):
' → logprob: -10.516449928283691
    9. ' :' → logprob: -11.141449928283691
    10. ',' → logprob: -11.391449928283691

Token 103: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006353192962706089
    2. ' raise' → logprob: -5.256353378295898
    3. 'raise' → logprob: -8.006353378295898
    4. '       ' → logprob: -8.381353378295898
    5. '               ' → logprob: -9.256353378295898
    6. ' 
' → logprob: -9.381353378295898
    7. '
' → logprob: -9.506353378295898
    8. '            
' → logprob: -9.756353378295898
    9. '   ' → logprob: -10.131353378295898
    10. ' Value' → logprob: -10.381353378295898

Token 104: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.07945588231086731
    2. 'raise' (adapté à ' raise') → logprob: -2.579455852508545
    3. '
' → logprob: -7.954455852508545
    4. '           ' → logprob: -8.954456329345703
    5. '	raise' → logprob: -9.579456329345703
    6. ' 
' → logprob: -12.454456329345703
    7. '_raise' → logprob: -12.829456329345703
    8. '            ' → logprob: -13.204456329345703
    9. '       ' → logprob: -13.329456329345703
    10. '        ' → logprob: -13.329456329345703

Token 105: ' Value' (ID: 9963)
  Prédit: ' Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -0.0008397616329602897
    2. 'Value' → logprob: -7.125839710235596
    3. ' ' → logprob: -10.500840187072754
    4. '	Value' → logprob: -12.375840187072754
    5. ' Val' → logprob: -13.375840187072754
    6. ' ' → logprob: -14.375840187072754
    7. ' value' → logprob: -15.125840187072754
    8. '_Value' → logprob: -15.125840187072754
    9. '<Value' → logprob: -15.500840187072754
    10. '  ' → logprob: -16.125839233398438

Token 106: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -8.73314929776825e-05
    2. 'rror' → logprob: -9.37508773803711
    3. 'Value' → logprob: -13.37508773803711
    4. 'r' → logprob: -14.25008773803711
    5. 'Er' → logprob: -15.62508773803711
    6. 'n' → logprob: -16.50008773803711
    7. 'l' → logprob: -18.87508773803711
    8. 'E' → logprob: -19.00008773803711
    9. '   ' → logprob: -19.00008773803711
    10. 'ror' → logprob: -19.00008773803711

Token 107: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38740143179893494
    2. '("' → logprob: -1.1374014616012573
    3. '(
' → logprob: -7.762401580810547
    4. '('' → logprob: -9.262401580810547
    5. '()' → logprob: -12.262401580810547
    6. '(

' → logprob: -12.762401580810547
    7. '(
' → logprob: -14.512401580810547
    8. '("")' → logprob: -14.637401580810547
    9. '"' → logprob: -14.762401580810547
    10. '(",' → logprob: -15.387401580810547

Token 108: 'Exactly' (ID: 91021)
  Prédit: 'Exactly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Exactly' → logprob: -0.10722371190786362
    2. 'Four' → logprob: -3.4822237491607666
    3. 'Expected' → logprob: -3.7322237491607666
    4. 'A' → logprob: -4.1072235107421875
    5. 'Rectangle' → logprob: -4.9822235107421875
    6. 'Must' → logprob: -5.1072235107421875
    7. ' Exactly' → logprob: -5.2322235107421875
    8. ' Four' → logprob: -5.9822235107421875
    9. 'There' → logprob: -6.1072235107421875
    10. 'Rect' → logprob: -6.8572235107421875

Token 109: ' four' (ID: 4242)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05350508168339729
    2. '4' → logprob: -3.3035051822662354
    3. ' four' → logprob: -4.178504943847656
    4. 'four' → logprob: -11.428504943847656
    5. '   ' → logprob: -11.678504943847656
    6. ' ' → logprob: -12.678504943847656
    7. '  ' → logprob: -14.928504943847656
    8. ' quatro' → logprob: -16.428504943847656
    9. ' fours' → logprob: -16.553504943847656
    10. ' cuatro' → logprob: -16.678504943847656

Token 110: ' sticks' (ID: 54819)
  Prédit: ' sticks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sticks' → logprob: -0.005983900744467974
    2. ' ' → logprob: -5.130983829498291
    3. 'sticks' → logprob: -10.13098430633545
    4. ' stick' → logprob: -12.00598430633545
    5. ' spaces' → logprob: -12.63098430633545
    6. ' ' → logprob: -13.63098430633545
    7. ' s' → logprob: -13.75598430633545
    8. ' st' → logprob: -14.00598430633545
    9. ' space' → logprob: -14.75598430633545
    10. 's' → logprob: -14.88098430633545

Token 111: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.0018217855831608176
    2. ' ' → logprob: -7.001821994781494
    3. ' must' → logprob: -7.501821994781494
    4. ' required' → logprob: -8.876821517944336
    5. ' is' → logprob: -9.501821517944336
    6. 'are' → logprob: -9.626821517944336
    7. ' of' → logprob: -11.001821517944336
    8. ',' → logprob: -11.376821517944336
    9. ' )' → logprob: -11.501821517944336
    10. ')' → logprob: -11.751821517944336

Token 112: ' required' (ID: 3759)
  Prédit: ' required'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' required' → logprob: -0.01647769846022129
    2. ' needed' → logprob: -4.641477584838867
    3. 'required' → logprob: -5.016477584838867
    4. 'needed' → logprob: -10.391477584838867
    5. '	required' → logprob: -10.516477584838867
    6. ' ' → logprob: -12.891477584838867
    7. ' expected' → logprob: -12.891477584838867
    8. ' necessary' → logprob: -13.016477584838867
    9. '   ' → logprob: -13.391477584838867
    10. '_required' → logprob: -13.391477584838867

Token 113: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.02320866845548153
    2. '.")' → logprob: -4.5232086181640625
    3. ' for' → logprob: -4.8982086181640625
    4. '")
' → logprob: -6.0232086181640625
    5. ' to' → logprob: -6.5232086181640625
    6. ',' → logprob: -7.7732086181640625
    7. '.")
' → logprob: -9.648208618164062
    8. ' ")' → logprob: -9.648208618164062
    9. '!")' → logprob: -9.773208618164062
    10. ')' → logprob: -10.148208618164062

Token 114: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03642331808805466
    2. '
' → logprob: -3.5364232063293457
    3. '        
' → logprob: -5.286423206329346
    4. '<|end|>' → logprob: -6.661423206329346
    5. 'self' → logprob: -9.036423683166504
    6. '    
' → logprob: -10.286423683166504
    7. ' 
' → logprob: -10.286423683166504
    8. '        ' → logprob: -11.161423683166504
    9. '   ' → logprob: -11.286423683166504
    10. '  
' → logprob: -11.286423683166504

Token 115: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.311572790145874
    2. ' self' → logprob: -1.436572790145874
    3. 'self' (adapté à ' self') → logprob: -3.686572790145874
    4. '        
' → logprob: -6.311573028564453
    5. '
' → logprob: -6.811573028564453
    6. ' ' → logprob: -7.436573028564453
    7. ' 
' → logprob: -7.561573028564453
    8. '        ' → logprob: -8.436573028564453
    9. '<|end|>' → logprob: -8.561573028564453
    10. '   ' → logprob: -9.561573028564453

Token 116: '.st' (ID: 1980)
  Prédit: '.st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.st' → logprob: -0.0023206991609185934
    2. '.' → logprob: -6.127320766448975
    3. '.s' → logprob: -9.502320289611816
    4. ' .' → logprob: -9.877320289611816
    5. 'sticks' → logprob: -11.752320289611816
    6. '._' → logprob: -14.502320289611816
    7. ' sticks' → logprob: -14.627320289611816
    8. '.St' → logprob: -14.877320289611816
    9. '	st' → logprob: -16.752321243286133
    10. '.stub' → logprob: -17.377321243286133

Token 117: 'icks' (ID: 8736)
  Prédit: 'icks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icks' → logprob: -0.00011212585377506912
    2. '_' → logprob: -11.250112533569336
    3. 'ics' → logprob: -11.250112533569336
    4. 'cks' → logprob: -11.250112533569336
    5. '=' → logprob: -11.625112533569336
    6. '   ' → logprob: -11.625112533569336
    7. '#' → logprob: -11.625112533569336
    8. 'i' → logprob: -12.125112533569336
    9. ' ' → logprob: -12.250112533569336
    10. 'ick' → logprob: -12.375112533569336

Token 118: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407791018486023
    2. '=' → logprob: -0.9740779399871826
    3. '   ' → logprob: -15.349078178405762
    4. ' ' → logprob: -15.724078178405762
    5. '_' → logprob: -16.099077224731445
    6. '    ' → logprob: -16.224077224731445
    7. '.' → logprob: -16.349077224731445
    8. 's' → logprob: -16.599077224731445
    9. '＝' → logprob: -17.599077224731445
    10. '.extend' → logprob: -17.599077224731445

Token 119: ' sticks' (ID: 54819)
  Prédit: 'sticks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sticks' → logprob: -0.1446138173341751
    2. ' sticks' → logprob: -2.019613742828369
    3. 'st' → logprob: -6.644613742828369
    4. 'list' → logprob: -8.144614219665527
    5. 'stick' → logprob: -9.019614219665527
    6. '[' → logprob: -9.269614219665527
    7. ' list' → logprob: -9.644614219665527
    8. ' [' → logprob: -11.519614219665527
    9. 'tuple' → logprob: -12.144614219665527
    10. 'St' → logprob: -12.269614219665527

Token 120: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02684265561401844
    2. '<|end|>' → logprob: -3.7768425941467285
    3. '   ' → logprob: -6.0268425941467285
    4. '

' → logprob: -7.6518425941467285
    5. '    
' → logprob: -7.9018425941467285
    6. '<|end|>' → logprob: -9.026843070983887
    7. 'def' → logprob: -9.276843070983887
    8. ' 
' → logprob: -10.026843070983887
    9. '  
' → logprob: -10.026843070983887
    10. ' def' → logprob: -11.526843070983887

Token 121: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.00925352517515421
    2. '<|end|>' → logprob: -5.00925350189209
    3. '

' → logprob: -6.38425350189209
    4. 'def' → logprob: -8.38425350189209
    5. '    
' → logprob: -8.88425350189209
    6. '   ' → logprob: -8.88425350189209
    7. '  
' → logprob: -9.13425350189209
    8. ' 
' → logprob: -9.25925350189209
    9. '<|end|>' → logprob: -9.50925350189209
    10. ' def' → logprob: -10.25925350189209

Token 122: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0007235141238197684
    2. ' def' → logprob: -7.250723361968994
    3. '   ' → logprob: -12.000723838806152
    4. '
' → logprob: -12.875723838806152
    5. 'de' → logprob: -13.250723838806152
    6. ' ' → logprob: -13.750723838806152
    7. '    
' → logprob: -14.250723838806152
    8. 'd' → logprob: -14.500723838806152
    9. '

' → logprob: -15.250723838806152
    10. '  
' → logprob: -16.250722885131836

Token 123: ' _' (ID: 1175)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.5340914726257324
    2. ' validate' → logprob: -1.4090914726257324
    3. 'is' → logprob: -2.2840914726257324
    4. 'validate' → logprob: -3.1590914726257324
    5. ' can' → logprob: -5.034091472625732
    6. ' are' → logprob: -5.409091472625732
    7. 'are' → logprob: -5.409091472625732
    8. ' has' → logprob: -5.534091472625732
    9. ' ' → logprob: -5.909091472625732
    10. 'can' → logprob: -6.784091472625732

Token 124: 'group' (ID: 4323)
  Prédit: 'are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'are' → logprob: -0.4747692048549652
    2. 'validate' → logprob: -1.7247692346572876
    3. 'is' → logprob: -2.474769115447998
    4. 'all' → logprob: -3.099769115447998
    5. 'has' → logprob: -3.724769115447998
    6. 'check' → logprob: -4.224769115447998
    7. 'can' → logprob: -4.349769115447998
    8. 's' → logprob: -4.974769115447998
    9. 'get' → logprob: -5.349769115447998
    10. 'group' → logprob: -6.099769115447998

Token 125: '_st' (ID: 2518)
  Prédit: '_by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_by' → logprob: -0.2418256253004074
    2. '_st' → logprob: -1.7418255805969238
    3. 'ed' → logprob: -3.741825580596924
    4. '_' → logprob: -4.241825580596924
    5. '_lengths' → logprob: -7.116825580596924
    6. '_s' → logprob: -7.866825580596924
    7. 'by' → logprob: -9.491826057434082
    8. '_tokens' → logprob: -10.116826057434082
    9. '<|end|>' → logprob: -10.241826057434082
    10. 'ing' → logprob: -10.366826057434082

Token 126: 'icks' (ID: 8736)
  Prédit: 'icks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icks' → logprob: -0.0008768046391196549
    2. 'cks' → logprob: -7.5008769035339355
    3. ' ' → logprob: -8.750876426696777
    4. '```' → logprob: -10.125876426696777
    5. '   ' → logprob: -10.750876426696777
    6. 'ics' → logprob: -11.125876426696777
    7. 'ick' → logprob: -11.250876426696777
    8. '	' → logprob: -12.000876426696777
    9. '``' → logprob: -12.000876426696777
    10. '
' → logprob: -12.188376426696777

Token 127: '_by' (ID: 8214)
  Prédit: '_by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_by' → logprob: -0.5938239693641663
    2. '(self' → logprob: -0.8438239693641663
    3. '(' → logprob: -4.2188239097595215
    4. ' (' → logprob: -6.7188239097595215
    5. 'by' → logprob: -6.9688239097595215
    6. ' by' → logprob: -8.21882438659668
    7. 'By' → logprob: -8.46882438659668
    8. 'self' → logprob: -9.59382438659668
    9. '<|end|>' → logprob: -9.59382438659668
    10. 'b' → logprob: -10.34382438659668

Token 128: '_length' (ID: 11514)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.004354991018772125
    2. ' length' → logprob: -5.754354953765869
    3. '_length' → logprob: -6.754354953765869
    4. 'ength' → logprob: -12.504355430603027
    5. 'Length' → logprob: -13.129355430603027
    6. 'len' → logprob: -13.379355430603027
    7. 'hash' → logprob: -14.004355430603027
    8. 'lambda' → logprob: -14.254355430603027
    9. '	length' → logprob: -14.379355430603027
    10. 'leng' → logprob: -15.254355430603027

Token 129: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0017224266193807125
    2. '(' → logprob: -6.37672233581543
    3. ' (' → logprob: -11.50172233581543
    4. '(s' → logprob: -11.62672233581543
    5. 'self' → logprob: -14.37672233581543
    6. '(
' → logprob: -15.37672233581543
    7. '(sel' → logprob: -15.87672233581543
    8. '       ' → logprob: -16.25172233581543
    9. '(Self' → logprob: -16.50172233581543
    10. '   ' → logprob: -16.50172233581543

Token 130: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.46600618958473206
    2. '):' → logprob: -1.2160061597824097
    3. ')' → logprob: -2.841006278991699
    4. 'self' → logprob: -4.466006278991699
    5. '):
' → logprob: -5.716006278991699
    6. '       ' → logprob: -6.466006278991699
    7. '   ' → logprob: -7.841006278991699
    8. '(' → logprob: -8.8410062789917
    9. ',' → logprob: -8.9660062789917
    10. ' ' → logprob: -9.2160062789917

Token 131: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012768734246492386
    2. '):' → logprob: -5.262768745422363
    3. ':' → logprob: -5.637768745422363
    4. '):
' → logprob: -5.887768745422363
    5. '
' → logprob: -8.012768745422363
    6. ')' → logprob: -8.512768745422363
    7. ':
' → logprob: -8.762768745422363
    8. '```' → logprob: -8.762768745422363
    9. ',' → logprob: -9.387768745422363
    10. '():' → logprob: -9.637768745422363

Token 132: ' length' (ID: 5517)
  Prédit: 'groups'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'groups' → logprob: -0.321637898683548
    2. 'length' (adapté à ' length') → logprob: -1.3216378688812256
    3. 'from' → logprob: -5.196638107299805
    4. 'group' → logprob: -6.071638107299805
    5. ' groups' → logprob: -8.821638107299805
    6. '   ' → logprob: -8.946638107299805
    7. '       ' → logprob: -9.321638107299805
    8. 'd' → logprob: -9.321638107299805
    9. ' length' → logprob: -11.196638107299805
    10. 'counts' → logprob: -12.071638107299805

Token 133: '_counts' (ID: 61971)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1041127443313599
    2. '_groups' → logprob: -1.1041127443313599
    3. '_to' → logprob: -1.3541127443313599
    4. '_map' → logprob: -3.4791126251220703
    5. '_counts' → logprob: -3.7291126251220703
    6. '_dict' → logprob: -3.8541126251220703
    7. '_' → logprob: -5.97911262512207
    8. '_s' → logprob: -9.35411262512207
    9. '_group' → logprob: -9.97911262512207
    10. '_mapping' → logprob: -10.72911262512207

Token 134: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07891491055488586
    2. '=' → logprob: -2.5789148807525635
    3. ' ' → logprob: -11.828914642333984
    4. '()' → logprob: -12.203914642333984
    5. '   ' → logprob: -12.328914642333984
    6. '(self' → logprob: -12.328914642333984
    7. '(' → logprob: -13.953914642333984
    8. '=self' → logprob: -14.078914642333984
    9. '       ' → logprob: -14.453914642333984
    10. 'self' → logprob: -14.953914642333984

Token 135: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.0008698907913640141
    2. ' {}' → logprob: -7.2508697509765625
    3. '{}
' → logprob: -8.750869750976562
    4. ' {}
' → logprob: -13.750869750976562
    5. '{}

' → logprob: -15.250869750976562
    6. ' defaultdict' → logprob: -16.000869750976562
    7. 'dict' → logprob: -16.625869750976562
    8. '{' → logprob: -16.875869750976562
    9. 'default' → logprob: -17.000869750976562
    10. '{})' → logprob: -18.250869750976562

Token 136: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021210046485066414
    2. ' for' → logprob: -4.146210193634033
    3. '
' → logprob: -5.646210193634033
    4. 'for' → logprob: -6.521210193634033
    5. '        
' → logprob: -9.396209716796875
    6. '<|end|>' → logprob: -10.771209716796875
    7. ' 
' → logprob: -11.521209716796875
    8. ':' → logprob: -11.646209716796875
    9. '   ' → logprob: -11.771209716796875
    10. '  
' → logprob: -11.896209716796875

Token 137: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.38805922865867615
    2. ' for' → logprob: -1.1380592584609985
    3. '       ' → logprob: -6.763059139251709
    4. ' ' → logprob: -11.388059616088867
    5. '   ' → logprob: -12.013059616088867
    6. '
' → logprob: -12.013059616088867
    7. ' ' → logprob: -12.263059616088867
    8. '	for' → logprob: -13.138059616088867
    9. '        
' → logprob: -14.388059616088867
    10. ' 
' → logprob: -15.263059616088867

Token 138: ' stick' (ID: 12899)
  Prédit: 'stick'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stick' → logprob: -0.2254716157913208
    2. ' stick' → logprob: -1.6004716157913208
    3. 's' → logprob: -10.350471496582031
    4. 'st' → logprob: -11.475471496582031
    5. '   ' → logprob: -12.475471496582031
    6. ' s' → logprob: -12.725471496582031
    7. '```' → logprob: -13.225471496582031
    8. '-stick' → logprob: -13.350471496582031
    9. ' ' → logprob: -14.100471496582031
    10. 'stk' → logprob: -14.162971496582031

Token 139: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0012099954765290022
    2. 'in' → logprob: -6.8762102127075195
    3. ' ' → logprob: -8.75121021270752
    4. '	in' → logprob: -11.87621021270752
    5. 's' → logprob: -12.50121021270752
    6. ' ' → logprob: -13.12621021270752
    7. '<|end|>' → logprob: -13.25121021270752
    8. '_' → logprob: -14.25121021270752
    9. '<|end|>' → logprob: -14.50121021270752
    10. '  ' → logprob: -14.62621021270752

Token 140: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06197945028543472
    2. ' self' → logprob: -2.8119795322418213
    3. '       ' → logprob: -12.061979293823242
    4. '(self' → logprob: -13.311979293823242
    5. '	self' → logprob: -13.811979293823242
    6. '
' → logprob: -14.061979293823242
    7. '[self' → logprob: -14.686979293823242
    8. '   ' → logprob: -15.061979293823242
    9. '_self' → logprob: -15.561979293823242
    10. '    ' → logprob: -15.561979293823242

Token 141: '.st' (ID: 1980)
  Prédit: '.st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.st' → logprob: -0.0002382249804213643
    2. '.' → logprob: -8.500238418579102
    3. '.s' → logprob: -10.375238418579102
    4. ' .' → logprob: -13.250238418579102
    5. '.St' → logprob: -14.625238418579102
    6. 'sticks' → logprob: -14.625238418579102
    7. '	st' → logprob: -15.375238418579102
    8. 'st' → logprob: -15.625238418579102
    9. ' sticks' → logprob: -16.3752384185791
    10. '.
' → logprob: -16.7502384185791

Token 142: 'icks' (ID: 8736)
  Prédit: 'icks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icks' → logprob: -0.0011692718835547566
    2. 'cks' → logprob: -7.251169204711914
    3. 'ticks' → logprob: -8.751169204711914
    4. '```' → logprob: -9.876169204711914
    5. 'ick' → logprob: -10.126169204711914
    6. 'sticks' → logprob: -10.126169204711914
    7. '   ' → logprob: -10.501169204711914
    8. '``' → logprob: -11.188669204711914
    9. 'iks' → logprob: -11.313669204711914
    10. '
' → logprob: -11.688669204711914

Token 143: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008633003570139408
    2. ':
' → logprob: -4.758633136749268
    3. ' :' → logprob: -11.63363265991211
    4. '       ' → logprob: -13.00863265991211
    5. '):' → logprob: -13.25863265991211
    6. '):
' → logprob: -13.88363265991211
    7. ',' → logprob: -14.00863265991211
    8. ':
' → logprob: -14.13363265991211
    9. ':

' → logprob: -14.25863265991211
    10. ':length' → logprob: -14.50863265991211

Token 144: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002409065840765834
    2. 'length' → logprob: -6.752408981323242
    3. ' length' → logprob: -7.627408981323242
    4. '            ' → logprob: -8.252408981323242
    5. ' if' → logprob: -8.752408981323242
    6. '            
' → logprob: -9.502408981323242
    7. ':' → logprob: -9.502408981323242
    8. 'if' → logprob: -10.127408981323242
    9. '       ' → logprob: -10.502408981323242
    10. '```' → logprob: -10.877408981323242

Token 145: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.5592643022537231
    2. 'length' (adapté à ' length') → logprob: -0.9342643022537231
    3. ' if' → logprob: -3.9342641830444336
    4. '           ' → logprob: -4.309264183044434
    5. 'if' → logprob: -6.059264183044434
    6. '            ' → logprob: -10.559264183044434
    7. '   ' → logprob: -10.559264183044434
    8. '               ' → logprob: -10.559264183044434
    9. '       ' → logprob: -10.934264183044434
    10. '_length' → logprob: -11.059264183044434

Token 146: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.004255646374076605
    2. '_' → logprob: -6.129255771636963
    3. ' =' → logprob: -6.504255771636963
    4. '=' → logprob: -7.504255771636963
    5. '_lengths' → logprob: -11.754255294799805
    6. '=_' → logprob: -12.254255294799805
    7. '_length' → logprob: -12.629255294799805
    8. '_=' → logprob: -13.504255294799805
    9. 'counts' → logprob: -14.754255294799805
    10. '=len' → logprob: -15.004255294799805

Token 147: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.006750424392521381
    2. '.setdefault' → logprob: -5.006750583648682
    3. ' [' → logprob: -10.631750106811523
    4. '.' → logprob: -12.381750106811523
    5. 'stick' → logprob: -13.381750106811523
    6. ' .' → logprob: -13.756750106811523
    7. '[
' → logprob: -14.131750106811523
    8. '.st' → logprob: -14.381750106811523
    9. '   ' → logprob: -14.881750106811523
    10. '.get' → logprob: -14.881750106811523

Token 148: 'stick' (ID: 46389)
  Prédit: 'stick'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stick' → logprob: -0.002828530967235565
    2. ' stick' → logprob: -5.877828598022461
    3. 'st' → logprob: -11.377828598022461
    4. 'sticks' → logprob: -12.127828598022461
    5. 'length' → logprob: -12.877828598022461
    6. '```' → logprob: -14.127828598022461
    7. 'tick' → logprob: -14.627828598022461
    8. '
' → logprob: -14.877828598022461
    9. '-stick' → logprob: -15.127828598022461
    10. '   ' → logprob: -15.252828598022461

Token 149: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -0.0002003218833124265
    2. '.' → logprob: -8.625200271606445
    3. ' .' → logprob: -12.000200271606445
    4. ']' → logprob: -12.375200271606445
    5. 'length' → logprob: -12.750200271606445
    6. ')' → logprob: -12.875200271606445
    7. '.l' → logprob: -13.000200271606445
    8. '.
' → logprob: -14.375200271606445
    9. '.len' → logprob: -15.000200271606445
    10. '.count' → logprob: -15.125200271606445

Token 150: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0013896391028538346
    2. ' ]' → logprob: -7.126389503479004
    3. ']=' → logprob: -7.751389503479004
    4. ' =' → logprob: -9.126389503479004
    5. '=' → logprob: -10.001389503479004
    6. ']+=' → logprob: -14.251389503479004
    7. ' ' → logprob: -16.75139045715332
    8. ')' → logprob: -17.50139045715332
    9. '`]' → logprob: -17.62639045715332
    10. '()]' → logprob: -18.00139045715332

Token 151: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326326727867126
    2. '=' → logprob: -1.3132632970809937
    3. ' ' → logprob: -14.063262939453125
    4. '=

' → logprob: -15.688262939453125
    5. ' =
' → logprob: -15.813262939453125
    6. ' +=' → logprob: -15.813262939453125
    7. ']' → logprob: -15.813262939453125
    8. '=
' → logprob: -16.188262939453125
    9. '+=' → logprob: -17.063262939453125
    10. ']=' → logprob: -17.563262939453125

Token 152: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.22542403638362885
    2. 'length' → logprob: -1.60042405128479
    3. 'leng' → logprob: -12.475423812866211
    4. 'ength' → logprob: -12.975423812866211
    5. '	length' → logprob: -13.600423812866211
    6. ' ' → logprob: -13.725423812866211
    7. 'len' → logprob: -13.850423812866211
    8. '(length' → logprob: -14.850423812866211
    9. ' lenght' → logprob: -15.100423812866211
    10. ' len' → logprob: -15.225423812866211

Token 153: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -1.5928495486150496e-05
    2. 'counts' → logprob: -12.125016212463379
    3. 's' → logprob: -12.625016212463379
    4. '_' → logprob: -13.000016212463379
    5. ' counts' → logprob: -13.375016212463379
    6. '_lengths' → logprob: -13.875016212463379
    7. 'Counts' → logprob: -14.375016212463379
    8. ' length' → logprob: -14.750016212463379
    9. '_c' → logprob: -15.125016212463379
    10. 'length' → logprob: -15.250016212463379

Token 154: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -2.069664333248511e-05
    2. '.' → logprob: -10.875020980834961
    3. 'get' → logprob: -13.375020980834961
    4. ' .' → logprob: -16.00002098083496
    5. '.setdefault' → logprob: -17.62502098083496
    6. '().' → logprob: -17.87502098083496
    7. '```' → logprob: -18.87502098083496
    8. '.g' → logprob: -19.00002098083496
    9. '].' → logprob: -19.12502098083496
    10. '`.' → logprob: -19.50002098083496

Token 155: '(st' (ID: 4065)
  Prédit: '(st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(st' → logprob: -1.7954958821064793e-05
    2. '(' → logprob: -11.000018119812012
    3. 'stick' → logprob: -14.000018119812012
    4. '(
' → logprob: -16.500017166137695
    5. ' stick' → logprob: -16.625017166137695
    6. ' (' → logprob: -17.000017166137695
    7. '(s' → logprob: -17.000017166137695
    8. 'length' → logprob: -17.875017166137695
    9. '(length' → logprob: -18.125017166137695
    10. '/st' → logprob: -18.625017166137695

Token 156: 'ick' (ID: 1003)
  Prédit: 'ick'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ick' → logprob: -0.00031520487391389906
    2. 'tick' → logprob: -9.00031566619873
    3. '.tick' → logprob: -10.25031566619873
    4. '.' → logprob: -10.25031566619873
    5. 'stick' → logprob: -10.37531566619873
    6. 'ickness' → logprob: -10.87531566619873
    7. '```' → logprob: -11.62531566619873
    8. '[' → logprob: -11.75031566619873
    9. ' ' → logprob: -11.75031566619873
    10. '   ' → logprob: -12.50031566619873

Token 157: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -0.03611705079674721
    2. '.st' → logprob: -3.4111170768737793
    3. '(st' → logprob: -6.036117076873779
    4. '.' → logprob: -10.036116600036621
    5. ')' → logprob: -11.286116600036621
    6. '(' → logprob: -12.536116600036621
    7. '.len' → logprob: -13.036116600036621
    8. '.l' → logprob: -13.161116600036621
    9. 'ength' → logprob: -13.411116600036621
    10. 'length' → logprob: -13.411116600036621

Token 158: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7610454708337784e-05
    2. ' ,' → logprob: -11.375027656555176
    3. '(),' → logprob: -12.125027656555176
    4. '0' → logprob: -12.125027656555176
    5. '1' → logprob: -12.375027656555176
    6. ')' → logprob: -15.250027656555176
    7. 's' → logprob: -15.625027656555176
    8. '(' → logprob: -15.875027656555176
    9. '```' → logprob: -16.37502670288086
    10. '

' → logprob: -16.50002670288086

Token 159: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.026301460340619087
    2. ' ' → logprob: -3.651301383972168
    3. ')' → logprob: -13.901301383972168
    4. ' ' → logprob: -16.526302337646484
    5. ' 
' → logprob: -17.151302337646484
    6. '1' → logprob: -17.526302337646484
    7. '۰' → logprob: -17.651302337646484
    8. '  ' → logprob: -17.838802337646484
    9. '```' → logprob: -18.026302337646484
    10. '+' → logprob: -18.088802337646484

Token 160: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009119403548538685
    2. ' ' → logprob: -7.000911712646484
    3. ')' → logprob: -15.625911712646484
    4. '۰' → logprob: -16.750911712646484
    5. '

' → logprob: -17.188411712646484
    6. '   ' → logprob: -17.313411712646484
    7. '
' → logprob: -17.375911712646484
    8. '  ' → logprob: -17.375911712646484
    9. '1' → logprob: -17.750911712646484
    10. ' 
' → logprob: -17.875911712646484

Token 161: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.632542913896032e-05
    2. ' )' → logprob: -10.125046730041504
    3. ')+' → logprob: -12.000046730041504
    4. '0' → logprob: -17.500045776367188
    5. '+' → logprob: -17.875045776367188
    6. ' ' → logprob: -17.875045776367188
    7. '```' → logprob: -18.000045776367188
    8. ']' → logprob: -18.500045776367188
    9. '1' → logprob: -19.125045776367188
    10. ' +' → logprob: -19.750045776367188

Token 162: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.12702617049217224
    2. '+' → logprob: -2.127026081085205
    3. '1' → logprob: -10.127026557922363
    4. ' ' → logprob: -10.252026557922363
    5. '0' → logprob: -10.752026557922363
    6. ' ' → logprob: -14.877026557922363
    7. ')' → logprob: -15.127026557922363
    8. ')+' → logprob: -15.752026557922363
    9. ' plus' → logprob: -15.877026557922363
    10. '()+' → logprob: -15.877026557922363

Token 163: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.061967913061380386
    2. ' ' → logprob: -2.8119678497314453
    3. '   ' → logprob: -16.061967849731445
    4. '<|end|>' → logprob: -16.436967849731445
    5. '```' → logprob: -18.436967849731445
    6. '  ' → logprob: -18.436967849731445
    7. '    ' → logprob: -19.186967849731445
    8. ' ' → logprob: -19.686967849731445
    9. '
' → logprob: -20.311967849731445
    10. '0' → logprob: -20.311967849731445

Token 164: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -18.750011444091797
    4. '```' → logprob: -19.375011444091797
    5. '  ' → logprob: -21.500011444091797
    6. '`' → logprob: -22.875011444091797
    7. '       ' → logprob: -22.875011444091797
    8. '
' → logprob: -23.250011444091797
    9. '0' → logprob: -23.625011444091797
    10. '    ' → logprob: -23.687511444091797

Token 165: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.268683522939682
    2. '
' → logprob: -1.5186835527420044
    3. '<|end|>' → logprob: -4.268683433532715
    4. 'return' → logprob: -6.643683433532715
    5. ' return' → logprob: -7.393683433532715
    6. '<|end|>' → logprob: -8.268683433532715
    7. '   ' → logprob: -9.893683433532715
    8. '        
' → logprob: -10.018683433532715
    9. '  
' → logprob: -10.018683433532715
    10. '	return' → logprob: -10.143683433532715

Token 166: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05582069978117943
    2. '
' → logprob: -2.9308207035064697
    3. '<|end|>' → logprob: -7.805820465087891
    4. ' return' → logprob: -8.18082046508789
    5. 'return' → logprob: -8.93082046508789
    6. '   ' → logprob: -9.93082046508789
    7. '        
' → logprob: -11.55582046508789
    8. ' ' → logprob: -11.80582046508789
    9. '<|end|>' → logprob: -11.93082046508789
    10. '  
' → logprob: -11.93082046508789

Token 167: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.8117352724075317
    2. '       ' → logprob: -1.0617352724075317
    3. ' return' → logprob: -1.5617352724075317
    4. '
' → logprob: -8.561735153198242
    5. ' ' → logprob: -10.436735153198242
    6. '   ' → logprob: -10.686735153198242
    7. '```' → logprob: -10.686735153198242
    8. '	return' → logprob: -11.561735153198242
    9. '        
' → logprob: -12.686735153198242
    10. ')return' → logprob: -13.686735153198242

Token 168: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.4740905463695526
    2. 'length' → logprob: -0.974090576171875
    3. '[length' → logprob: -11.724090576171875
    4. '{' → logprob: -12.349090576171875
    5. 'len' → logprob: -14.724090576171875
    6. ' {' → logprob: -15.224090576171875
    7. '(length' → logprob: -15.474090576171875
    8. 'leng' → logprob: -16.349090576171875
    9. ' len' → logprob: -16.599090576171875
    10. '	length' → logprob: -16.849090576171875

Token 169: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -4.320199877838604e-07
    2. '_' → logprob: -16.25
    3. '_lengths' → logprob: -16.25
    4. '_c' → logprob: -16.5
    5. ' _' → logprob: -16.625
    6. '_count' → logprob: -17.875
    7. '_length' → logprob: -19.125
    8. '_codes' → logprob: -19.375
    9. '_COUN' → logprob: -19.875
    10. 's' → logprob: -19.875

Token 170: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22151586413383484
    2. '

' → logprob: -1.8465158939361572
    3. '<|end|>' → logprob: -3.3465158939361572
    4. '   ' → logprob: -5.846515655517578
    5. 'def' → logprob: -6.721515655517578
    6. '<|end|>' → logprob: -7.471515655517578
    7. '    
' → logprob: -7.721515655517578
    8. '```' → logprob: -8.596515655517578
    9. '  
' → logprob: -8.846515655517578
    10. ' def' → logprob: -9.721515655517578

Token 171: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08076328784227371
    2. '   ' → logprob: -2.955763339996338
    3. '<|end|>' → logprob: -4.830763339996338
    4. 'def' → logprob: -5.080763339996338
    5. '

' → logprob: -5.705763339996338
    6. '```' → logprob: -5.830763339996338
    7. ' def' → logprob: -5.955763339996338
    8. '  
' → logprob: -7.080763339996338
    9. '    
' → logprob: -7.080763339996338
    10. '<|end|>' → logprob: -8.33076286315918

Token 172: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0007347009377554059
    2. ' def' → logprob: -7.250734806060791
    3. '   ' → logprob: -10.875734329223633
    4. '
' → logprob: -12.125734329223633
    5. ' ' → logprob: -15.625734329223633
    6. '    
' → logprob: -16.125734329223633
    7. '	def' → logprob: -17.000734329223633
    8. '```' → logprob: -17.250734329223633
    9. '  
' → logprob: -17.625734329223633
    10. ' 
' → logprob: -18.000734329223633

Token 173: ' can' (ID: 665)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.12094574421644211
    2. ' can' → logprob: -2.370945692062378
    3. ' validate' → logprob: -4.495945930480957
    4. ' def' → logprob: -5.745945930480957
    5. 'is' → logprob: -5.870945930480957
    6. 'can' → logprob: -6.370945930480957
    7. 'def' → logprob: -7.495945930480957
    8. ' ' → logprob: -7.745945930480957
    9. ' _' → logprob: -8.620945930480957
    10. 'validate' → logprob: -8.745945930480957

Token 174: '_form' (ID: 18664)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6533657908439636
    2. '_form' → logprob: -0.7783657908439636
    3. '_make' → logprob: -4.028365612030029
    4. ' _' → logprob: -6.153365612030029
    5. '_validate' → logprob: -8.528366088867188
    6. '_construct' → logprob: -8.778366088867188
    7. '_create' → logprob: -9.153366088867188
    8. '_build' → logprob: -10.403366088867188
    9. '_have' → logprob: -11.028366088867188
    10. '_define' → logprob: -11.653366088867188

Token 175: '_rectangle' (ID: 166619)
  Prédit: '_rectangle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rectangle' → logprob: -0.0011879685334861279
    2. '_square' → logprob: -7.126187801361084
    3. '_' → logprob: -8.376188278198242
    4. '_a' → logprob: -9.001188278198242
    5. '_rect' → logprob: -10.876188278198242
    6. '_s' → logprob: -13.251188278198242
    7. 'Rectangle' → logprob: -13.751188278198242
    8. '_Rect' → logprob: -13.876188278198242
    9. 'a' → logprob: -14.126188278198242
    10. 'rectangle' → logprob: -14.376188278198242

Token 176: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0006295174825936556
    2. '(' → logprob: -7.375629425048828
    3. ' (' → logprob: -13.875629425048828
    4. '(
' → logprob: -14.125629425048828
    5. 'self' → logprob: -14.500629425048828
    6. '(s' → logprob: -15.000629425048828
    7. '   ' → logprob: -15.250629425048828
    8. '       ' → logprob: -15.875629425048828
    9. '(Self' → logprob: -17.625629425048828
    10. ' self' → logprob: -17.875629425048828

Token 177: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0643603503704071
    2. '):
' → logprob: -2.8143603801727295
    3. 'self' → logprob: -6.68936014175415
    4. ')' → logprob: -7.43936014175415
    5. '(self' → logprob: -8.564360618591309
    6. ' ):' → logprob: -8.689360618591309
    7. '       ' → logprob: -9.689360618591309
    8. '):
' → logprob: -10.189360618591309
    9. '   ' → logprob: -10.439360618591309
    10. ':' → logprob: -10.689360618591309

Token 178: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004914466291666031
    2. '(' → logprob: -5.504914283752441
    3. ':' → logprob: -7.254914283752441
    4. '(
' → logprob: -9.754914283752441
    5. '       ' → logprob: -10.379914283752441
    6. 'self' → logprob: -11.254914283752441
    7. ':
' → logprob: -11.879914283752441
    8. '   ' → logprob: -11.879914283752441
    9. '(s' → logprob: -12.004914283752441
    10. '():' → logprob: -13.379914283752441

Token 179: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.008625805377960205
    2. 'bool' → logprob: -4.7586259841918945
    3. ' True' → logprob: -12.008625984191895
    4. ' ' → logprob: -12.383625984191895
    5. ' ' → logprob: -14.758625984191895
    6. 'True' → logprob: -16.508625030517578
    7. '	bool' → logprob: -16.633625030517578
    8. ' False' → logprob: -16.758625030517578
    9. '<bool' → logprob: -16.758625030517578
    10. ' int' → logprob: -16.883625030517578

Token 180: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009684317745268345
    2. '(self' → logprob: -4.884684085845947
    3. ':
' → logprob: -6.634684085845947
    4. '(' → logprob: -8.009684562683105
    5. '):' → logprob: -8.384684562683105
    6. '():' → logprob: -10.009684562683105
    7. '       ' → logprob: -10.009684562683105
    8. '(
' → logprob: -10.509684562683105
    9. ':self' → logprob: -10.759684562683105
    10. '):
' → logprob: -11.009684562683105

Token 181: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01104015950113535
    2. '
' → logprob: -4.636040210723877
    3. ' 
' → logprob: -7.761040210723877
    4. ' ' → logprob: -8.261039733886719
    5. '        
' → logprob: -8.511039733886719
    6. '    ' → logprob: -9.261039733886719
    7. '  
' → logprob: -9.636039733886719
    8. '   ' → logprob: -10.011039733886719
    9. ':' → logprob: -10.636039733886719
    10. '        ' → logprob: -10.886039733886719

Token 182: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' (adapté à ' length') → logprob: -0.6416637301445007
    2. ' length' → logprob: -0.7666637301445007
    3. '       ' → logprob: -4.766663551330566
    4. 'counts' → logprob: -8.641663551330566
    5. ' lengths' → logprob: -8.641663551330566
    6. ' counts' → logprob: -9.516663551330566
    7. 'count' → logprob: -9.766663551330566
    8. '   ' → logprob: -11.141663551330566
    9. '	length' → logprob: -12.641663551330566
    10. ' ' → logprob: -12.891663551330566

Token 183: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -1.1398757123970427e-05
    2. '_' → logprob: -11.625011444091797
    3. 's' → logprob: -13.250011444091797
    4. '_s' → logprob: -15.000011444091797
    5. '_lengths' → logprob: -15.875011444091797
    6. ' _' → logprob: -16.750011444091797
    7. '_c' → logprob: -17.500011444091797
    8. '_count' → logprob: -18.125011444091797
    9. 'counts' → logprob: -18.125011444091797
    10. '_groups' → logprob: -18.625011444091797

Token 184: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014164921827614307
    2. '=' → logprob: -4.264164924621582
    3. '()' → logprob: -14.264164924621582
    4. ' ' → logprob: -14.264164924621582
    5. ' =
' → logprob: -16.389163970947266
    6. '(' → logprob: -18.014163970947266
    7. ' ' → logprob: -18.639163970947266
    8. '   ' → logprob: -19.139163970947266
    9. '＝' → logprob: -19.139163970947266
    10. 's' → logprob: -19.139163970947266

Token 185: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.4740838408470154
    2. 'self' → logprob: -0.9740838408470154
    3. '       ' → logprob: -12.97408390045166
    4. '(self' → logprob: -12.97408390045166
    5. ' ' → logprob: -13.72408390045166
    6. '   ' → logprob: -14.97408390045166
    7. '=self' → logprob: -15.34908390045166
    8. '	self' → logprob: -15.97408390045166
    9. '[self' → logprob: -16.349082946777344
    10. ' ' → logprob: -16.849082946777344

Token 186: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0010397175792604685
    2. '.' → logprob: -6.876039505004883
    3. ' .' → logprob: -12.251039505004883
    4. '_' → logprob: -14.376039505004883
    5. '.__' → logprob: -15.251039505004883
    6. ')._' → logprob: -15.626039505004883
    7. '.group' → logprob: -16.001039505004883
    8. '.groupby' → logprob: -16.001039505004883
    9. ']._' → logprob: -16.251039505004883
    10. ' ' → logprob: -16.251039505004883

Token 187: 'group' (ID: 4323)
  Prédit: 'group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -1.7432603272027336e-06
    2. ' group' → logprob: -14.250001907348633
    3. '_group' → logprob: -14.375001907348633
    4. '"group' → logprob: -16.500001907348633
    5. '(group' → logprob: -16.500001907348633
    6. ' ' → logprob: -16.625001907348633
    7. '.group' → logprob: -17.500001907348633
    8. 'g' → logprob: -17.500001907348633
    9. '	group' → logprob: -17.500001907348633
    10. '   ' → logprob: -17.625001907348633

Token 188: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -4.723352049040841e-06
    2. '_' → logprob: -12.500004768371582
    3. ' _' → logprob: -15.000004768371582
    4. '_s' → logprob: -15.500004768371582
    5. '_sn' → logprob: -15.625004768371582
    6. '```' → logprob: -16.750003814697266
    7. '(_' → logprob: -17.000003814697266
    8. '(st' → logprob: -17.500003814697266
    9. '_lengths' → logprob: -18.250003814697266
    10. ' St' → logprob: -18.500003814697266

Token 189: 'icks' (ID: 8736)
  Prédit: 'icks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icks' → logprob: -0.0006450029904954135
    2. 'ick' → logprob: -8.87564468383789
    3. 'cks' → logprob: -9.37564468383789
    4. ' ' → logprob: -9.62564468383789
    5. '   ' → logprob: -9.75064468383789
    6. '```' → logprob: -10.25064468383789
    7. 'ticks' → logprob: -10.37564468383789
    8. '
' → logprob: -10.81314468383789
    9. 'sticks' → logprob: -10.81314468383789
    10. 'ics' → logprob: -10.87564468383789

Token 190: '_by' (ID: 8214)
  Prédit: '_by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_by' → logprob: -4.60414821645827e-06
    2. 'by' → logprob: -12.875004768371582
    3. '_' → logprob: -14.125004768371582
    4. 'By' → logprob: -14.625004768371582
    5. '_length' → logprob: -15.250004768371582
    6. '_b' → logprob: -15.750004768371582
    7. '_BY' → logprob: -16.000003814697266
    8. '_for' → logprob: -17.125003814697266
    9. '_to' → logprob: -17.250003814697266
    10. '_lengths' → logprob: -17.250003814697266

Token 191: '_length' (ID: 11514)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.011779473163187504
    2. '_length' → logprob: -4.511779308319092
    3. 'ength' → logprob: -7.261779308319092
    4. 'leng' → logprob: -11.13677978515625
    5. ' length' → logprob: -11.63677978515625
    6. 'l' → logprob: -13.01177978515625
    7. 'len' → logprob: -13.38677978515625
    8. '(length' → logprob: -15.26177978515625
    9. '_lengths' → logprob: -15.51177978515625
    10. '```' → logprob: -15.63677978515625

Token 192: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0008096250821836293
    2. '()
' → logprob: -7.125809669494629
    3. '()

' → logprob: -12.750809669494629
    4. '(' → logprob: -13.500809669494629
    5. '()
' → logprob: -15.125809669494629
    6. ' ()' → logprob: -15.875809669494629
    7. '       ' → logprob: -16.125808715820312
    8. '())' → logprob: -16.250808715820312
    9. '()`' → logprob: -16.500808715820312
    10. ')' → logprob: -17.125808715820312

Token 193: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010314998216927052
    2. '
' → logprob: -7.001031398773193
    3. '        
' → logprob: -9.626031875610352
    4. ' if' → logprob: -10.126031875610352
    5. '  
' → logprob: -12.751031875610352
    6. '<|end|>' → logprob: -12.751031875610352
    7. '      ' → logprob: -13.251031875610352
    8. 'if' → logprob: -13.501031875610352
    9. '   ' → logprob: -14.251031875610352
    10. '        ' → logprob: -14.376031875610352

Token 194: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.12207607924938202
    2. 'if' → logprob: -2.8720760345458984
    3. ' lengths' → logprob: -3.1220760345458984
    4. '       ' → logprob: -4.622076034545898
    5. ' return' → logprob: -6.122076034545898
    6. 'return' → logprob: -6.497076034545898
    7. 'length' → logprob: -8.122076034545898
    8. ' keys' → logprob: -8.372076034545898
    9. ' length' → logprob: -9.497076034545898
    10. 'len' → logprob: -10.247076034545898

Token 195: ' For' (ID: 2214)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5475557446479797
    2. ' lengths' → logprob: -1.547555685043335
    3. 'length' → logprob: -2.047555685043335
    4. ' if' → logprob: -2.672555685043335
    5. 'return' → logprob: -5.547555923461914
    6. '       ' → logprob: -5.922555923461914
    7. '#' → logprob: -6.922555923461914
    8. 'valid' → logprob: -6.922555923461914
    9. ' valid' → logprob: -7.672555923461914
    10. 'values' → logprob: -7.672555923461914

Token 196: ' a' (ID: 261)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.08059922605752945
    2. ' a' → logprob: -3.705599308013916
    3. ' length' → logprob: -4.205599308013916
    4. 'len' → logprob: -4.330599308013916
    5. ' the' → logprob: -4.705599308013916
    6. ' ' → logprob: -5.080599308013916
    7. ' rectangles' → logprob: -6.330599308013916
    8. ' l' → logprob: -7.330599308013916
    9. 'rect' → logprob: -7.455599308013916
    10. 'length' → logprob: -7.580599308013916

Token 197: ' rectangle' (ID: 45808)
  Prédit: 'rectangle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rectangle' → logprob: -0.23492704331874847
    2. ' rectangle' → logprob: -1.6099270582199097
    3. ' valid' → logprob: -5.484927177429199
    4. 'rect' → logprob: -5.859927177429199
    5. 'valid' → logprob: -6.484927177429199
    6. 'Rectangle' → logprob: -8.1099271774292
    7. '_rectangle' → logprob: -8.3599271774292
    8. 'length' → logprob: -9.9849271774292
    9. 'stick' → logprob: -10.3599271774292
    10. 'len' → logprob: -10.4849271774292

Token 198: ' using' (ID: 2360)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.017845408990979195
    2. '       ' → logprob: -4.142845630645752
    3. ':' → logprob: -7.267845630645752
    4. ',
' → logprob: -7.892845630645752
    5. ' ,' → logprob: -8.392845153808594
    6. '   ' → logprob: -8.642845153808594
    7. ':
' → logprob: -9.392845153808594
    8. '
' → logprob: -9.892845153808594
    9. ' to' → logprob: -10.517845153808594
    10. ' there' → logprob: -10.767845153808594

Token 199: ' four' (ID: 4242)
  Prédit: ' four'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' four' → logprob: -1.0658353567123413
    2. ' two' → logprob: -1.8158353567123413
    3. ' the' → logprob: -2.315835475921631
    4. ' sticks' → logprob: -2.565835475921631
    5. 'sticks' → logprob: -2.815835475921631
    6. ' exactly' → logprob: -2.940835475921631
    7. 'two' → logprob: -3.190835475921631
    8. 'four' → logprob: -3.315835475921631
    9. ' ' → logprob: -3.690835475921631
    10. ' all' → logprob: -3.940835475921631

Token 200: ' sticks' (ID: 54819)
  Prédit: ' sticks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sticks' → logprob: -0.2606605887413025
    2. 'sticks' → logprob: -1.5106606483459473
    3. 's' → logprob: -5.260660648345947
    4. ' sides' → logprob: -5.760660648345947
    5. 'st' → logprob: -9.635660171508789
    6. '       ' → logprob: -10.385660171508789
    7. '   ' → logprob: -10.385660171508789
    8. 'stick' → logprob: -10.510660171508789
    9. ' ' → logprob: -10.760660171508789
    10. ',' → logprob: -10.760660171508789

Token 201: ' without' (ID: 2935)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012808160856366158
    2. '       ' → logprob: -4.762808322906494
    3. ':' → logprob: -5.637808322906494
    4. ' ,' → logprob: -7.887808322906494
    5. ' that' → logprob: -9.762807846069336
    6. ' there' → logprob: -10.512807846069336
    7. '<|end|>' → logprob: -10.637807846069336
    8. '   ' → logprob: -11.137807846069336
    9. ' if' → logprob: -11.262807846069336
    10. ' the' → logprob: -11.262807846069336

Token 202: ' modification' (ID: 29847)
  Prédit: ' any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.5746508240699768
    2. ' diagon' → logprob: -1.949650764465332
    3. ' considering' → logprob: -3.449650764465332
    4. 'di' → logprob: -3.449650764465332
    5. ' forming' → logprob: -3.449650764465332
    6. ' diagonal' → logprob: -3.824650764465332
    7. ' duplicates' → logprob: -3.949650764465332
    8. 'any' → logprob: -3.949650764465332
    9. ' creating' → logprob: -4.199650764465332
    10. 'forming' → logprob: -4.699650764465332

Token 203: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02345079556107521
    2. '       ' → logprob: -3.8984508514404297
    3. ':' → logprob: -5.89845085144043
    4. ' ,' → logprob: -9.52345085144043
    5. ',
' → logprob: -11.27345085144043
    6. '.' → logprob: -11.27345085144043
    7. ':
' → logprob: -11.27345085144043
    8. '<|end|>' → logprob: -11.39845085144043
    9. '   ' → logprob: -12.02345085144043
    10. ' if' → logprob: -12.27345085144043

Token 204: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08596112579107285
    2. ' if' → logprob: -2.960961103439331
    3. ' lengths' → logprob: -3.710961103439331
    4. ' return' → logprob: -6.33596134185791
    5. 'return' → logprob: -6.58596134185791
    6. 'length' → logprob: -6.71096134185791
    7. 'if' → logprob: -7.21096134185791
    8. ' length' → logprob: -7.96096134185791
    9. ' keys' → logprob: -9.08596134185791
    10. ' len' → logprob: -9.33596134185791

Token 205: ' #' (ID: 1069)
  Prédit: ' lengths'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lengths' → logprob: -0.6505016684532166
    2. ' if' → logprob: -1.6505017280578613
    3. '       ' → logprob: -2.4005017280578613
    4. ' return' → logprob: -2.6505017280578613
    5. 'return' → logprob: -2.9005017280578613
    6. '#' (adapté à ' #') → logprob: -3.5255017280578613
    7. 'length' → logprob: -3.5255017280578613
    8. 'if' → logprob: -5.025501728057861
    9. ' length' → logprob: -5.775501728057861
    10. ' #' → logprob: -6.900501728057861

Token 206: ' there' (ID: 1354)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4522445499897003
    2. 'return' → logprob: -1.702244520187378
    3. ' return' → logprob: -2.452244520187378
    4. '       ' → logprob: -3.202244520187378
    5. 'if' → logprob: -3.202244520187378
    6. ' lengths' → logprob: -4.577244758605957
    7. '#' → logprob: -6.327244758605957
    8. 'length' → logprob: -6.702244758605957
    9. 'len' → logprob: -8.202244758605957
    10. ' #' → logprob: -8.827244758605957

Token 207: ' must' (ID: 2804)
  Prédit: ' should'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' should' → logprob: -0.7015426754951477
    2. ' must' → logprob: -0.8265426754951477
    3. ' are' → logprob: -3.451542615890503
    4. 'should' → logprob: -3.951542615890503
    5. 'must' → logprob: -4.451542854309082
    6. '   ' → logprob: -6.076542854309082
    7. '       ' → logprob: -7.326542854309082
    8. 'are' → logprob: -7.951542854309082
    9. '```' → logprob: -8.701542854309082
    10. ' ' → logprob: -9.076542854309082

Token 208: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.4292336106300354
    2. ' be' → logprob: -1.0542335510253906
    3. 'either' → logprob: -8.42923355102539
    4. '       ' → logprob: -9.67923355102539
    5. ' either' → logprob: -9.67923355102539
    6. 'to' → logprob: -9.92923355102539
    7. 'only' → logprob: -10.67923355102539
    8. ' only' → logprob: -10.67923355102539
    9. ' to' → logprob: -11.17923355102539
    10. '	be' → logprob: -11.30423355102539

Token 209: ' either' (ID: 4784)
  Prédit: ' either'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' either' → logprob: -1.416147232055664
    2. '2' → logprob: -1.541147232055664
    3. 'either' → logprob: -1.666147232055664
    4. 'two' → logprob: -2.291147232055664
    5. 'exact' → logprob: -2.291147232055664
    6. ' exactly' → logprob: -3.041147232055664
    7. 'len' → logprob: -3.166147232055664
    8. ' two' → logprob: -3.416147232055664
    9. ' len' → logprob: -4.666147232055664
    10. 'at' → logprob: -4.791147232055664

Token 210: ':
' (ID: 734)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.09314687550067902
    2. ' two' → logprob: -3.468146800994873
    3. 'two' → logprob: -3.718146800994873
    4. 'len' → logprob: -4.718146800994873
    5. ' ' → logprob: -4.968146800994873
    6. 'exact' → logprob: -4.968146800994873
    7. ' exactly' → logprob: -5.093146800994873
    8. '1' → logprob: -5.843146800994873
    9. ' len' → logprob: -6.718146800994873
    10. ' only' → logprob: -9.343147277832031

Token 211: '       ' (ID: 309)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1827521026134491
    2. '       ' → logprob: -2.0577521324157715
    3. ' two' → logprob: -3.6827521324157715
    4. ' ' → logprob: -4.4327521324157715
    5. 'two' → logprob: -6.8077521324157715
    6. '1' → logprob: -7.4327521324157715
    7. '```' → logprob: -8.432751655578613
    8. '   ' → logprob: -9.682751655578613
    9. ' either' → logprob: -10.057751655578613
    10. ' at' → logprob: -10.557751655578613

Token 212: ' #' (ID: 1069)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5892173647880554
    2. '1' → logprob: -1.3392174243927002
    3. ' two' → logprob: -2.7142174243927
    4. ' ' → logprob: -2.9642174243927
    5. '       ' → logprob: -2.9642174243927
    6. ' either' → logprob: -4.839217185974121
    7. 'two' → logprob: -6.089217185974121
    8. '#' (adapté à ' #') → logprob: -7.464217185974121
    9. 'either' → logprob: -7.464217185974121
    10. '   ' → logprob: -7.589217185974121

Token 213: ' -' (ID: 533)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.9950030446052551
    2. ' two' → logprob: -0.9950030446052551
    3. '1' → logprob: -1.9950029850006104
    4. ' ' → logprob: -2.7450029850006104
    5. 'two' → logprob: -3.9950029850006104
    6. 'len' → logprob: -4.1200032234191895
    7. ' len' → logprob: -4.7450032234191895
    8. ' exactly' → logprob: -5.2450032234191895
    9. '#' → logprob: -5.3700032234191895
    10. ' one' → logprob: -5.8700032234191895

Token 214: ' Two' (ID: 13311)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -1.37663733959198
    2. 'two' → logprob: -1.37663733959198
    3. ' two' → logprob: -1.75163733959198
    4. '1' → logprob: -2.0016374588012695
    5. 'Two' → logprob: -2.8766374588012695
    6. ' one' → logprob: -3.1266374588012695
    7. 'one' → logprob: -3.2516374588012695
    8. 'One' → logprob: -3.8766374588012695
    9. ' ' → logprob: -4.3766374588012695
    10. 'len' → logprob: -4.8766374588012695

Token 215: ' pairs' (ID: 24702)
  Prédit: ' pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pairs' → logprob: -0.3257802128791809
    2. ' distinct' → logprob: -2.325780153274536
    3. ' different' → logprob: -3.075780153274536
    4. ' lengths' → logprob: -3.200780153274536
    5. 'distinct' → logprob: -3.325780153274536
    6. 'pairs' → logprob: -3.950780153274536
    7. ' unique' → logprob: -4.825780391693115
    8. 'length' → logprob: -4.825780391693115
    9. 'different' → logprob: -4.825780391693115
    10. ' or' → logprob: -5.450780391693115

Token 216: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.05842422693967819
    2. ' or' → logprob: -3.058424234390259
    3. ',' → logprob: -5.43342399597168
    4. 'of' → logprob: -5.68342399597168
    5. '<|end|>' → logprob: -7.18342399597168
    6. ' (' → logprob: -7.68342399597168
    7. '       ' → logprob: -8.30842399597168
    8. 'or' → logprob: -8.68342399597168
    9. '<|end|>' → logprob: -9.30842399597168
    10. '(' → logprob: -9.55842399597168

Token 217: ' equal' (ID: 12629)
  Prédit: ' lengths'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lengths' → logprob: -1.147697925567627
    2. 'length' → logprob: -1.647697925567627
    3. 'equal' → logprob: -1.647697925567627
    4. ' equal' → logprob: -1.772697925567627
    5. 'sticks' → logprob: -2.147697925567627
    6. ' sticks' → logprob: -5.147697925567627
    7. 'different' → logprob: -6.522697925567627
    8. ' length' → logprob: -6.772697925567627
    9. 'distinct' → logprob: -6.897697925567627
    10. ' different' → logprob: -7.272697925567627

Token 218: ' lengths' (ID: 51957)
  Prédit: ' lengths'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lengths' → logprob: -0.2894039750099182
    2. 'length' → logprob: -1.4144039154052734
    3. '-length' → logprob: -5.539403915405273
    4. ' length' → logprob: -5.664403915405273
    5. '_lengths' → logprob: -8.164403915405273
    6. 'sticks' → logprob: -8.414403915405273
    7. 's' → logprob: -9.039403915405273
    8. ' sides' → logprob: -9.164403915405273
    9. ' sticks' → logprob: -10.289403915405273
    10. '(length' → logprob: -11.414403915405273

Token 219: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6512569785118103
    2. ',' → logprob: -0.9012569785118103
    3. ' or' → logprob: -2.776257038116455
    4. '
' → logprob: -5.401257038116455
    5. ',
' → logprob: -6.026257038116455
    6. ' (' → logprob: -6.901257038116455
    7. ' ,' → logprob: -7.401257038116455
    8. '<|end|>' → logprob: -7.526257038116455
    9. '#' → logprob: -8.651256561279297
    10. '        ' → logprob: -8.776256561279297

Token 220: 'including' (ID: 26167)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.44692617654800415
    2. ')' → logprob: -1.5719261169433594
    3. '2' → logprob: -3.1969261169433594
    4. ' len' → logprob: -4.321926116943359
    5. ' two' → logprob: -4.446926116943359
    6. 'len' → logprob: -4.446926116943359
    7. 'or' → logprob: -4.696926116943359
    8. ' lengths' → logprob: -4.696926116943359
    9. '),' → logprob: -4.821926116943359
    10. ' length' → logprob: -5.321926116943359

Token 221: ' the' (ID: 290)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.9063919186592102
    2. 'a' → logprob: -1.0313918590545654
    3. 'four' → logprob: -2.1563918590545654
    4. ' one' → logprob: -3.2813918590545654
    5. 'the' → logprob: -3.2813918590545654
    6. ' four' → logprob: -4.6563920974731445
    7. ' a' → logprob: -4.7813920974731445
    8. '4' → logprob: -5.6563920974731445
    9. 'quad' → logprob: -5.6563920974731445
    10. 'sticks' → logprob: -5.7813920974731445

Token 222: ' case' (ID: 1890)
  Prédit: ' possibility'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possibility' → logprob: -0.6071541905403137
    2. ' case' → logprob: -0.9821541905403137
    3. 'case' → logprob: -2.732154130935669
    4. 'poss' → logprob: -5.482154369354248
    5. ' four' → logprob: -5.607154369354248
    6. 'four' → logprob: -5.982154369354248
    7. '   ' → logprob: -7.232154369354248
    8. ' one' → logprob: -7.232154369354248
    9. ' same' → logprob: -7.357154369354248
    10. 'same' → logprob: -7.857154369354248

Token 223: ' where' (ID: 1919)
  Prédit: ' where'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' where' → logprob: -0.3153511881828308
    2. ' of' → logprob: -1.4403512477874756
    3. 'where' → logprob: -3.9403512477874756
    4. ' when' → logprob: -5.6903510093688965
    5. '   ' → logprob: -5.8153510093688965
    6. 'of' → logprob: -5.9403510093688965
    7. '       ' → logprob: -6.0653510093688965
    8. ' ' → logprob: -7.4403510093688965
    9. '{' → logprob: -7.9403510093688965
    10. ' with' → logprob: -8.065351486206055

Token 224: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.40612977743148804
    2. ' there' → logprob: -1.7811298370361328
    3. 'all' → logprob: -2.156129837036133
    4. 'there' → logprob: -3.906129837036133
    5. ' one' → logprob: -4.156129837036133
    6. ' there's' → logprob: -5.281129837036133
    7. ' the' → logprob: -6.156129837036133
    8. 'one' → logprob: -6.906129837036133
    9. '   ' → logprob: -6.906129837036133
    10. ' a' → logprob: -7.156129837036133

Token 225: ' four' (ID: 4242)
  Prédit: ' four'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' four' → logprob: -0.17212103307247162
    2. 'four' → logprob: -1.9221210479736328
    3. '4' → logprob: -5.172121047973633
    4. ' lengths' → logprob: -5.672121047973633
    5. ' ' → logprob: -6.922121047973633
    6. 'length' → logprob: -6.922121047973633
    7. ' are' → logprob: -8.047121047973633
    8. 'sticks' → logprob: -8.922121047973633
    9. ' sticks' → logprob: -9.047121047973633
    10. '   ' → logprob: -9.797121047973633

Token 226: ' are' (ID: 553)
  Prédit: ' sticks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sticks' → logprob: -0.17882560193538666
    2. 'sticks' → logprob: -2.303825616836548
    3. ' lengths' → logprob: -3.303825616836548
    4. ' are' → logprob: -3.678825616836548
    5. 'length' → logprob: -7.303825378417969
    6. ' of' → logprob: -8.803825378417969
    7. 'st' → logprob: -9.053825378417969
    8. '=' → logprob: -9.053825378417969
    9. ' have' → logprob: -9.178825378417969
    10. 'are' → logprob: -9.178825378417969

Token 227: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.12970073521137238
    2. 'equal' → logprob: -2.7547006607055664
    3. ' the' → logprob: -3.1297006607055664
    4. ' equal' → logprob: -4.254700660705566
    5. 'same' → logprob: -9.754700660705566
    6. '```' → logprob: -11.504700660705566
    7. ' identical' → logprob: -12.129700660705566
    8. 'ident' → logprob: -12.379700660705566
    9. ' same' → logprob: -13.254700660705566
    10. ' ' → logprob: -13.629700660705566

Token 228: ' same' (ID: 2684)
  Prédit: 'same'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'same' → logprob: -0.34888094663619995
    2. ' same' → logprob: -1.2238810062408447
    3. 's' → logprob: -8.723880767822266
    4. ' ' → logprob: -9.098880767822266
    5. '
' → logprob: -10.848880767822266
    6. 'equal' → logprob: -10.848880767822266
    7. '<|end|>' → logprob: -11.098880767822266
    8. ' ' → logprob: -11.598880767822266
    9. '```' → logprob: -11.598880767822266
    10. 'Same' → logprob: -11.723880767822266

Token 229: ' —' (ID: 2733)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21045488119125366
    2. 'length' → logprob: -2.0854549407958984
    3. ' length' → logprob: -3.0854549407958984
    4. ')
' → logprob: -4.210454940795898
    5. ' lengths' → logprob: -5.960454940795898
    6. '),' → logprob: -7.460454940795898
    7. ' or' → logprob: -7.835454940795898
    8. ',' → logprob: -8.085454940795898
    9. ')

' → logprob: -8.585454940795898
    10. '):' → logprob: -8.710454940795898

Token 230: ' square' (ID: 13749)
  Prédit: ' which'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' which' → logprob: -0.9429301619529724
    2. ')' → logprob: -1.9429302215576172
    3. ' ' → logprob: -2.317930221557617
    4. ' a' → logprob: -3.192930221557617
    5. ' forming' → logprob: -3.192930221557617
    6. ' the' → logprob: -3.567930221557617
    7. '2' → logprob: -3.692930221557617
    8. 'which' → logprob: -3.817930221557617
    9. '   ' → logprob: -4.192930221557617
    10. ' four' → logprob: -4.192930221557617

Token 231: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3521536588668823
    2. ')
' → logprob: -1.2271536588668823
    3. '),' → logprob: -5.977153778076172
    4. ' or' → logprob: -7.977153778076172
    5. ' lengths' → logprob: -8.602153778076172
    6. 'length' → logprob: -9.102153778076172
    7. ')

' → logprob: -9.477153778076172
    8. '),
' → logprob: -9.852153778076172
    9. 's' → logprob: -9.977153778076172
    10. ')
' → logprob: -10.102153778076172

Token 232: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010671298019587994
    2. '
' → logprob: -4.760671138763428
    3. '        
' → logprob: -6.885671138763428
    4. '<|end|>' → logprob: -7.635671138763428
    5. ',' → logprob: -8.510671615600586
    6. '   ' → logprob: -9.385671615600586
    7. '  
' → logprob: -9.635671615600586
    8. ' 
' → logprob: -10.635671615600586
    9. '      ' → logprob: -10.635671615600586
    10. '    
' → logprob: -10.760671615600586

Token 233: ' counts' (ID: 28991)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43820253014564514
    2. ' if' → logprob: -1.4382025003433228
    3. ' lengths' → logprob: -2.1882026195526123
    4. 'if' → logprob: -5.688202381134033
    5. ' length' → logprob: -7.438202381134033
    6. 'length' → logprob: -7.688202381134033
    7. ' return' → logprob: -8.063202857971191
    8. 'Lengths' → logprob: -9.063202857971191
    9. ' keys' → logprob: -9.188202857971191
    10. 'return' → logprob: -9.438202857971191

Token 234: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012022731825709343
    2. '=' → logprob: -4.762022495269775
    3. '_values' → logprob: -5.762022495269775
    4. '_vals' → logprob: -9.387022972106934
    5. 'values' → logprob: -9.762022972106934
    6. '_items' → logprob: -9.887022972106934
    7. '()' → logprob: -11.137022972106934
    8. '.values' → logprob: -11.512022972106934
    9. 's' → logprob: -11.512022972106934
    10. ' ' → logprob: -11.637022972106934

Token 235: ' sorted' (ID: 20099)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.20856305956840515
    2. ' list' → logprob: -2.5835630893707275
    3. 'sorted' → logprob: -2.5835630893707275
    4. '[list' → logprob: -3.9585630893707275
    5. ' sorted' → logprob: -4.333562850952148
    6. '{}' → logprob: -5.708562850952148
    7. '[' → logprob: -7.208562850952148
    8. '{}
' → logprob: -8.208562850952148
    9. 'set' → logprob: -8.833562850952148
    10. '[length' → logprob: -8.958562850952148

Token 236: '(length' (ID: 47037)
  Prédit: '(length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(length' → logprob: -0.00012201975914649665
    2. 'length' → logprob: -9.3751220703125
    3. '(list' → logprob: -10.3751220703125
    4. '(count' → logprob: -13.0001220703125
    5. '(' → logprob: -13.6251220703125
    6. '((' → logprob: -13.8751220703125
    7. '(value' → logprob: -14.3751220703125
    8. '([' → logprob: -14.6251220703125
    9. '(len' → logprob: -15.1251220703125
    10. '[length' → logprob: -16.0001220703125

Token 237: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.005436400882899761
    2. 's' → logprob: -5.255436420440674
    3. '_values' → logprob: -8.880435943603516
    4. '.values' → logprob: -11.130435943603516
    5. 'counts' → logprob: -11.255435943603516
    6. '(length' → logprob: -11.755435943603516
    7. '(' → logprob: -12.130435943603516
    8. '()' → logprob: -12.380435943603516
    9. '_lengths' → logprob: -12.380435943603516
    10. '().' → logprob: -12.380435943603516

Token 238: '.values' (ID: 20422)
  Prédit: '.values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.values' → logprob: -0.014699890278279781
    2. '().' → logprob: -4.264699935913086
    3. '.' → logprob: -8.014699935913086
    4. ' .' → logprob: -8.514699935913086
    5. 'values' → logprob: -13.139699935913086
    6. '.Values' → logprob: -13.889699935913086
    7. ').' → logprob: -14.389699935913086
    8. '.items' → logprob: -14.639699935913086
    9. ' values' → logprob: -14.764699935913086
    10. '.value' → logprob: -15.014699935913086

Token 239: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.4523959755897522
    2. '()' → logprob: -1.3273959159851074
    3. '(),' → logprob: -2.3273959159851074
    4. ')' → logprob: -7.077395915985107
    5. ' ())' → logprob: -8.952396392822266
    6. '(' → logprob: -9.827396392822266
    7. '())
' → logprob: -10.202396392822266
    8. ' ()' → logprob: -10.202396392822266
    9. '()>' → logprob: -10.827396392822266
    10. '()]' → logprob: -10.952396392822266

Token 240: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06862792372703552
    2. '[' → logprob: -3.6936278343200684
    3. '
' → logprob: -4.568627834320068
    4. '==' → logprob: -4.943627834320068
    5. '   ' → logprob: -5.193627834320068
    6. ' if' → logprob: -5.318627834320068
    7. ' and' → logprob: -5.568627834320068
    8. '<|end|>' → logprob: -5.818627834320068
    9. ' ==' → logprob: -5.943627834320068
    10. ',' → logprob: -6.318627834320068

Token 241: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9332671165466309
    2. ' if' → logprob: -1.3082671165466309
    3. 'if' (adapté à ' if') → logprob: -1.8082671165466309
    4. '[' → logprob: -1.9332671165466309
    5. '==' → logprob: -3.683267116546631
    6. '   ' → logprob: -7.058267116546631
    7. ' ==' → logprob: -7.308267116546631
    8. '```' → logprob: -8.308267593383789
    9. '[:' → logprob: -8.683267593383789
    10. '[::-' → logprob: -9.308267593383789

Token 242: ' counts' (ID: 28991)
  Prédit: ' counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' counts' → logprob: -0.012112953700125217
    2. 'counts' → logprob: -4.637113094329834
    3. ' len' → logprob: -6.137113094329834
    4. 'len' → logprob: -8.637112617492676
    5. ' [' → logprob: -12.262112617492676
    6. '[' → logprob: -12.512112617492676
    7. ' ' → logprob: -12.762112617492676
    8. '_counts' → logprob: -13.762112617492676
    9. ' (' → logprob: -14.387112617492676
    10. ' not' → logprob: -14.387112617492676

Token 243: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6558550596237183
    2. '==' → logprob: -0.7808550596237183
    3. '[' → logprob: -3.780855178833008
    4. ' !=' → logprob: -9.655855178833008
    5. ' [' → logprob: -10.405855178833008
    6. ' in' → logprob: -10.655855178833008
    7. ' ' → logprob: -10.905855178833008
    8. '=' → logprob: -11.155855178833008
    9. '!=' → logprob: -11.405855178833008
    10. '```' → logprob: -12.530855178833008

Token 244: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0009247996495105326
    2. ' [' → logprob: -7.000924587249756
    3. '   ' → logprob: -11.375925064086914
    4. ' ' → logprob: -13.625925064086914
    5. '([' → logprob: -15.500925064086914
    6. '       ' → logprob: -15.875925064086914
    7. '```' → logprob: -16.125925064086914
    8. '  ' → logprob: -16.875925064086914
    9. '[
' → logprob: -16.875925064086914
    10. '=[' → logprob: -17.000925064086914

Token 245: '4' (ID: 19)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0010338802821934223
    2. ' ' → logprob: -7.501033782958984
    3. '1' → logprob: -8.251033782958984
    4. '   ' → logprob: -9.126033782958984
    5. ',' → logprob: -10.001033782958984
    6. '
' → logprob: -11.501033782958984
    7. '           ' → logprob: -11.813533782958984
    8. '       ' → logprob: -12.188533782958984
    9. '    ' → logprob: -12.251033782958984
    10. '    
' → logprob: -12.376033782958984

Token 246: ']:
' (ID: 22152)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.049582406878471375
    2. ']:' → logprob: -3.1745824813842773
    3. ']:
' → logprob: -5.049582481384277
    4. ']:

' → logprob: -9.924582481384277
    5. ']:
' → logprob: -10.174582481384277
    6. ' ]' → logprob: -10.174582481384277
    7. ']
' → logprob: -12.299582481384277
    8. ',' → logprob: -12.299582481384277
    9. '   ' → logprob: -12.299582481384277
    10. '],' → logprob: -13.174582481384277

Token 247: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008986006141640246
    2. 'return' → logprob: -7.750898838043213
    3. ' return' → logprob: -8.000898361206055
    4. '       ' → logprob: -9.500898361206055
    5. ' or' → logprob: -10.875898361206055
    6. 'True' → logprob: -11.750898361206055
    7. ':' → logprob: -12.000898361206055
    8. ' True' → logprob: -12.125898361206055
    9. ',' → logprob: -12.625898361206055
    10. '          ' → logprob: -12.750898361206055

Token 248: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.6192381978034973
    2. '           ' → logprob: -0.8692381978034973
    3. ' return' → logprob: -3.2442381381988525
    4. '       ' → logprob: -5.869238376617432
    5. '   ' → logprob: -8.369237899780273
    6. '               ' → logprob: -8.744237899780273
    7. '
' → logprob: -9.119237899780273
    8. '	return' → logprob: -10.619237899780273
    9. ':return' → logprob: -12.369237899780273
    10. '          ' → logprob: -12.494237899780273

Token 249: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0001584850688232109
    2. ' True' → logprob: -8.750158309936523
    3. '   ' → logprob: -19.375158309936523
    4. 'False' → logprob: -20.000158309936523
    5. '(True' → logprob: -20.375158309936523
    6. '=True' → logprob: -21.375158309936523
    7. 'true' → logprob: -22.375158309936523
    8. 'Tr' → logprob: -23.000158309936523
    9. '1' → logprob: -23.750158309936523
    10. '
' → logprob: -24.250158309936523

Token 250: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20403964817523956
    2. '
' → logprob: -1.7040396928787231
    3. 'elif' → logprob: -7.329039573669434
    4. '        
' → logprob: -7.454039573669434
    5. '   ' → logprob: -7.829039573669434
    6. '<|end|>' → logprob: -8.079039573669434
    7. '    
' → logprob: -8.579039573669434
    8. 'if' → logprob: -8.954039573669434
    9. '
' → logprob: -9.329039573669434
    10. ' if' → logprob: -9.579039573669434

Token 251: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1521814614534378
    2. '
' → logprob: -2.027181386947632
    3. ' or' → logprob: -5.402181625366211
    4. '   ' → logprob: -5.652181625366211
    5. 'or' → logprob: -7.277181625366211
    6. 'elif' → logprob: -8.152181625366211
    7. '<|end|>' → logprob: -8.652181625366211
    8. '    
' → logprob: -9.902181625366211
    9. ' and' → logprob: -9.902181625366211
    10. '        
' → logprob: -10.277181625366211

Token 252: ' square' (ID: 13749)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.7036623954772949
    2. 'Square' → logprob: -1.453662395477295
    3. ' True' → logprob: -1.453662395477295
    4. '           ' → logprob: -4.828662395477295
    5. ' Square' → logprob: -4.953662395477295
    6. '       ' → logprob: -5.078662395477295
    7. 'square' → logprob: -5.078662395477295
    8. 'return' → logprob: -5.953662395477295
    9. '#' → logprob: -6.078662395477295
    10. ' square' → logprob: -6.453662395477295

Token 253: ' case' (ID: 1890)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018833002541214228
    2. '
' → logprob: -7.251883506774902
    3. ' or' → logprob: -7.376883506774902
    4. '<|end|>' → logprob: -8.251883506774902
    5. '   ' → logprob: -8.751883506774902
    6. ' and' → logprob: -10.501883506774902
    7. ',' → logprob: -10.626883506774902
    8. 'elif' → logprob: -10.751883506774902
    9. 'or' → logprob: -11.126883506774902
    10. '<|end|>' → logprob: -12.251883506774902

Token 254: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016807749634608626
    2. '   ' → logprob: -7.376680850982666
    3. 'elif' → logprob: -7.751680850982666
    4. '<|end|>' → logprob: -7.876680850982666
    5. '
' → logprob: -9.376680374145508
    6. 'if' → logprob: -9.751680374145508
    7. ' if' → logprob: -10.501680374145508
    8. ',' → logprob: -11.126680374145508
    9. ' or' → logprob: -11.876680374145508
    10. '        
' → logprob: -12.001680374145508

Token 255: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06511949747800827
    2. ' or' → logprob: -2.815119504928589
    3. '   ' → logprob: -6.06511926651001
    4. 'or' → logprob: -7.31511926651001
    5. '
' → logprob: -10.065119743347168
    6. ' and' → logprob: -10.315119743347168
    7. 'elif' → logprob: -10.565119743347168
    8. '	' → logprob: -11.565119743347168
    9. '<|end|>' → logprob: -12.065119743347168
    10. ' if' → logprob: -12.440119743347168

Token 256: ' if' (ID: 538)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.7414330840110779
    2. 'or' → logprob: -1.2414331436157227
    3. 'if' (adapté à ' if') → logprob: -2.1164331436157227
    4. '       ' → logprob: -2.4914331436157227
    5. ' if' → logprob: -4.491433143615723
    6. '[' → logprob: -4.866433143615723
    7. 'and' → logprob: -5.616433143615723
    8. '   ' → logprob: -5.741433143615723
    9. 'elif' → logprob: -5.741433143615723
    10. '==' → logprob: -6.866433143615723

Token 257: ' counts' (ID: 28991)
  Prédit: ' counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' counts' → logprob: -0.16080527007579803
    2. 'counts' → logprob: -1.9108052253723145
    3. 'len' → logprob: -8.035805702209473
    4. ' len' → logprob: -8.285805702209473
    5. ' ' → logprob: -12.910805702209473
    6. '_counts' → logprob: -13.660805702209473
    7. 'count' → logprob: -13.910805702209473
    8. 'Counts' → logprob: -15.660805702209473
    9. ' [' → logprob: -15.910805702209473
    10. '   ' → logprob: -16.285804748535156

Token 258: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3869851231575012
    2. ' ==' → logprob: -1.1369850635528564
    3. '[' → logprob: -9.261984825134277
    4. ' ' → logprob: -11.761984825134277
    5. '==
' → logprob: -12.386984825134277
    6. ']==' → logprob: -13.636984825134277
    7. ' [' → logprob: -13.761984825134277
    8. '=' → logprob: -14.011984825134277
    9. '==(' → logprob: -14.011984825134277
    10. 's' → logprob: -14.636984825134277

Token 259: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1426859050989151
    2. ' [' → logprob: -2.017685890197754
    3. ' ' → logprob: -12.267685890197754
    4. '   ' → logprob: -13.267685890197754
    5. '[
' → logprob: -13.392685890197754
    6. ' ' → logprob: -13.892685890197754
    7. ' `[' → logprob: -15.142685890197754
    8. '([' → logprob: -15.267685890197754
    9. '	' → logprob: -15.517685890197754
    10. ' [
' → logprob: -15.580185890197754

Token 260: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002848152944352478
    2. ' ' → logprob: -8.375285148620605
    3. '   ' → logprob: -10.750285148620605
    4. ',' → logprob: -11.125285148620605
    5. '
' → logprob: -11.500285148620605
    6. '1' → logprob: -13.375285148620605
    7. '(' → logprob: -14.125285148620605
    8. '    
' → logprob: -14.312785148620605
    9. '       ' → logprob: -14.312785148620605
    10. '           ' → logprob: -15.000285148620605

Token 261: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019829542725346982
    2. ' ,' → logprob: -8.625198364257812
    3. '2' → logprob: -11.000198364257812
    4. ',
' → logprob: -13.625198364257812
    5. ' ' → logprob: -14.500198364257812
    6. '，' → logprob: -16.375198364257812
    7. '   ' → logprob: -16.750198364257812
    8. '4' → logprob: -17.750198364257812
    9. '1' → logprob: -18.000198364257812
    10. '`,' → logprob: -18.125198364257812

Token 262: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004892880679108202
    2. ' ' → logprob: -7.625489234924316
    3. '
' → logprob: -15.250489234924316
    4. '```' → logprob: -15.750489234924316
    5. '۲' → logprob: -16.187990188598633
    6. ']' → logprob: -16.250490188598633
    7. '   ' → logprob: -16.500490188598633
    8. '{' → logprob: -16.500490188598633
    9. ' two' → logprob: -16.750490188598633
    10. '  ' → logprob: -16.875490188598633

Token 263: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00012403888104017824
    2. ' ' → logprob: -9.000123977661133
    3. '
' → logprob: -15.812623977661133
    4. '۲' → logprob: -16.000123977661133
    5. ']' → logprob: -16.500123977661133
    6. '<|end|>' → logprob: -17.312623977661133
    7. '```' → logprob: -17.562623977661133
    8. '{' → logprob: -17.625123977661133
    9. '２' → logprob: -17.625123977661133
    10. '   ' → logprob: -17.687623977661133

Token 264: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.06205148994922638
    2. ']:' → logprob: -2.81205153465271
    3. ']:
' → logprob: -9.937051773071289
    4. ']' → logprob: -10.937051773071289
    5. '       ' → logprob: -11.812051773071289
    6. ']:

' → logprob: -12.312051773071289
    7. ',' → logprob: -13.187051773071289
    8. '):
' → logprob: -13.437051773071289
    9. ' ]' → logprob: -14.187051773071289
    10. '"]:
' → logprob: -14.812051773071289

Token 265: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2505984902381897
    2. '           ' → logprob: -2.000598430633545
    3. ':' → logprob: -3.000598430633545
    4. ':
' → logprob: -3.375598430633545
    5. '
' → logprob: -7.000598430633545
    6. ' return' → logprob: -7.375598430633545
    7. ':return' → logprob: -8.000598907470703
    8. 'return' → logprob: -8.375598907470703
    9. '   ' → logprob: -8.625598907470703
    10. '<|end|>' → logprob: -10.625598907470703

Token 266: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2167179137468338
    2. ' return' → logprob: -1.7167179584503174
    3. '       ' → logprob: -4.216717720031738
    4. '           ' → logprob: -7.841717720031738
    5. '   ' → logprob: -10.466717720031738
    6. '	return' → logprob: -11.091717720031738
    7. ':return' → logprob: -13.341717720031738
    8. '               ' → logprob: -14.091717720031738
    9. '
' → logprob: -14.466717720031738
    10. 'eturn' → logprob: -14.841717720031738

Token 267: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0019286326132714748
    2. ' True' → logprob: -6.251928806304932
    3. 'False' → logprob: -17.876928329467773
    4. 'true' → logprob: -19.876928329467773
    5. ' ' → logprob: -20.376928329467773
    6. '(True' → logprob: -20.751928329467773
    7. '   ' → logprob: -21.001928329467773
    8. '=True' → logprob: -21.376928329467773
    9. '  ' → logprob: -22.501928329467773
    10. '
' → logprob: -22.751928329467773

Token 268: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00208412017673254
    2. '
' → logprob: -6.252084255218506
    3. '   ' → logprob: -9.502083778381348
    4. 'return' → logprob: -10.252083778381348
    5. '        
' → logprob: -11.127083778381348
    6. '    
' → logprob: -11.252083778381348
    7. '      ' → logprob: -12.752083778381348
    8. ' return' → logprob: -12.752083778381348
    9. '<|end|>' → logprob: -13.127083778381348
    10. '    ' → logprob: -13.377083778381348

Token 269: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021707331761717796
    2. 'return' → logprob: -4.021707534790039
    3. '   ' → logprob: -6.021707534790039
    4. '
' → logprob: -7.021707534790039
    5. '        
' → logprob: -9.521707534790039
    6. '    
' → logprob: -9.771707534790039
    7. 'else' → logprob: -10.271707534790039
    8. ' return' → logprob: -10.646707534790039
    9. '      ' → logprob: -11.771707534790039
    10. '    ' → logprob: -11.896707534790039

Token 270: ' rectangle' (ID: 45808)
  Prédit: 'rectangle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rectangle' → logprob: -0.05030127614736557
    2. ' rectangle' → logprob: -3.0503013134002686
    3. '#' → logprob: -6.8003010749816895
    4. ' #' → logprob: -8.925301551818848
    5. 'two' → logprob: -9.175301551818848
    6. 'Rectangle' → logprob: -9.925301551818848
    7. ' ' → logprob: -10.175301551818848
    8. 'pair' → logprob: -10.175301551818848
    9. 'pairs' → logprob: -10.175301551818848
    10. ' two' → logprob: -10.300301551818848

Token 271: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016323382034897804
    2. '
' → logprob: -4.266323566436768
    3. '        
' → logprob: -7.016323566436768
    4. '    
' → logprob: -7.266323566436768
    5. 'return' → logprob: -8.26632308959961
    6. '   ' → logprob: -8.76632308959961
    7. '  
' → logprob: -10.39132308959961
    8. '       
' → logprob: -10.76632308959961
    9. '      ' → logprob: -10.89132308959961
    10. ' return' → logprob: -11.26632308959961

Token 272: ' pairs' (ID: 24702)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.007895370945334435
    2. ' two' → logprob: -4.882895469665527
    3. '2' → logprob: -8.382895469665527
    4. 'different' → logprob: -10.757895469665527
    5. 'equal' → logprob: -11.507895469665527
    6. 'Two' → logprob: -11.757895469665527
    7. 'pairs' → logprob: -12.257895469665527
    8. 's' → logprob: -12.882895469665527
    9. 'distinct' → logprob: -12.882895469665527
    10. '_two' → logprob: -13.132895469665527

Token 273: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004043967928737402
    2. '
' → logprob: -5.629044055938721
    3. '        
' → logprob: -8.504043579101562
    4. 'return' → logprob: -8.879043579101562
    5. '   ' → logprob: -9.879043579101562
    6. '<|end|>' → logprob: -11.379043579101562
    7. '    
' → logprob: -11.629043579101562
    8. ' return' → logprob: -12.004043579101562
    9. '      ' → logprob: -12.504043579101562
    10. '<|end|>' → logprob: -13.379043579101562

Token 274: ' equal' (ID: 12629)
  Prédit: 'equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'equal' → logprob: -0.02036505565047264
    2. ' equal' → logprob: -4.270365238189697
    3. 'different' → logprob: -6.020365238189697
    4. 'sticks' → logprob: -6.270365238189697
    5. 's' → logprob: -6.895365238189697
    6. 'length' → logprob: -7.520365238189697
    7. 'equals' → logprob: -9.520364761352539
    8. 'two' → logprob: -9.895364761352539
    9. 'distinct' → logprob: -9.895364761352539
    10. ' lengths' → logprob: -10.645364761352539

Token 275: ' lengths' (ID: 51957)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.0003517894074320793
    2. ' lengths' → logprob: -8.250351905822754
    3. ' length' → logprob: -10.125351905822754
    4. 'sticks' → logprob: -10.125351905822754
    5. '2' → logprob: -12.125351905822754
    6. '-length' → logprob: -12.875351905822754
    7. 's' → logprob: -14.500351905822754
    8. '<|end|>' → logprob: -14.500351905822754
    9. '(length' → logprob: -15.375351905822754
    10. '_lengths' → logprob: -15.500351905822754

Token 276: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0025913503486663103
    2. 'return' → logprob: -6.002591133117676
    3. '   ' → logprob: -9.252591133117676
    4. ' return' → logprob: -11.377591133117676
    5. '
' → logprob: -12.127591133117676
    6. '        
' → logprob: -13.752591133117676
    7. '           ' → logprob: -14.877591133117676
    8. '      ' → logprob: -15.127591133117676
    9. '```' → logprob: -15.627591133117676
    10. '    
' → logprob: -15.752591133117676

Token 277: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0072770873084664345
    2. 'return' → logprob: -5.007277011871338
    3. '   ' → logprob: -7.757277011871338
    4. '
' → logprob: -9.632277488708496
    5. ' return' → logprob: -10.757277488708496
    6. '        
' → logprob: -11.007277488708496
    7. 'else' → logprob: -11.882277488708496
    8. '    
' → logprob: -12.132277488708496
    9. '	' → logprob: -12.632277488708496
    10. '      ' → logprob: -12.882277488708496

Token 278: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.693649411201477
    2. 'return' (adapté à ' return') → logprob: -0.693649411201477
    3. ' return' → logprob: -8.068649291992188
    4. '   ' → logprob: -8.818649291992188
    5. '
' → logprob: -11.818649291992188
    6. '        
' → logprob: -11.943649291992188
    7. 'False' → logprob: -11.943649291992188
    8. 'else' → logprob: -12.068649291992188
    9. 'if' → logprob: -12.318649291992188
    10. '```' → logprob: -12.693649291992188

Token 279: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.10020667314529419
    2. ' False' → logprob: -2.3502066135406494
    3. '(False' → logprob: -21.47520637512207
    4. 'false' → logprob: -21.60020637512207
    5. '_false' → logprob: -23.35020637512207
    6. ' false' → logprob: -23.47520637512207
    7. ' ' → logprob: -23.85020637512207
    8. 'True' → logprob: -24.47520637512207
    9. '=False' → logprob: -24.47520637512207
    10. 'F' → logprob: -25.47520637512207

Token 280: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 281: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.05695778876543045
    2. 'def' → logprob: -3.056957721710205
    3. '#' → logprob: -5.681957721710205
    4. '<|end|>' → logprob: -5.931957721710205
    5. 'import' → logprob: -7.931957721710205
    6. '```' → logprob: -8.181958198547363
    7. '   ' → logprob: -8.306958198547363
    8. 'stick' → logprob: -8.306958198547363
    9. ' sticks' → logprob: -8.431958198547363
    10. 'a' → logprob: -8.556958198547363

Token 282: ' Rectangle' (ID: 38728)
  Prédit: ' Square'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Square' → logprob: -0.5909727811813354
    2. 'Square' → logprob: -1.2159727811813354
    3. ' Rectangle' → logprob: -2.340972900390625
    4. 'Rectangle' → logprob: -3.965972900390625
    5. ' Stick' → logprob: -4.715972900390625
    6. ' Triangle' → logprob: -5.340972900390625
    7. 'Stick' → logprob: -5.340972900390625
    8. ' Solution' → logprob: -5.840972900390625
    9. ' Rect' → logprob: -6.340972900390625
    10. 'Triangle' → logprob: -6.653472900390625

Token 283: 'Factory' (ID: 4870)
  Prédit: 'Builder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Builder' → logprob: -0.766048789024353
    2. 'Validator' → logprob: -1.516048789024353
    3. 'Stick' → logprob: -2.1410489082336426
    4. ':
' → logprob: -2.6410489082336426
    5. ':' → logprob: -3.2660489082336426
    6. 'Checker' → logprob: -3.7660489082336426
    7. 'Maker' → logprob: -3.8910489082336426
    8. 'Finder' → logprob: -5.391048908233643
    9. 'Area' → logprob: -5.516048908233643
    10. 'Helper' → logprob: -6.141048908233643

Token 284: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009155054576694965
    2. ':
' → logprob: -7.00091552734375
    3. ':

' → logprob: -13.37591552734375
    4. ':def' → logprob: -14.00091552734375
    5. '<|end|>' → logprob: -14.62591552734375
    6. '(object' → logprob: -15.50091552734375
    7. '(' → logprob: -15.62591552734375
    8. '():' → logprob: -15.75091552734375
    9. ' :' → logprob: -15.75091552734375
    10. ':**' → logprob: -15.87591552734375

Token 285: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007681038696318865
    2. ' def' → logprob: -5.257680892944336
    3. ':' → logprob: -6.632680892944336
    4. 'def' → logprob: -7.757680892944336
    5. '    
' → logprob: -8.632680892944336
    6. '```' → logprob: -8.757680892944336
    7. '    ' → logprob: -9.007680892944336
    8. ':
' → logprob: -9.382680892944336
    9. '(' → logprob: -9.882680892944336
    10. '<|end|>' → logprob: -10.132680892944336

Token 286: ' @' (ID: 759)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.002246246440336108
    2. 'def' → logprob: -6.377246379852295
    3. '   ' → logprob: -8.002245903015137
    4. ' @' → logprob: -8.627245903015137
    5. '    ' → logprob: -10.502245903015137
    6. '@' (adapté à ' @') → logprob: -13.252245903015137
    7. '	def' → logprob: -15.502245903015137
    8. '```' → logprob: -15.627245903015137
    9. ' ' → logprob: -16.252246856689453
    10. ' class' → logprob: -16.252246856689453

Token 287: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.010560312308371067
    2. 'dat' → logprob: -5.260560512542725
    3. 'classmethod' → logprob: -5.260560512542725
    4. 'static' → logprob: -9.760560035705566
    5. 'st' → logprob: -10.385560035705566
    6. 'property' → logprob: -10.635560035705566
    7. 'sta' → logprob: -12.260560035705566
    8. 'stat' → logprob: -14.135560035705566
    9. 's' → logprob: -14.760560035705566
    10. 'cache' → logprob: -15.010560035705566

Token 288: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10648709535598755
    2. ' def' → logprob: -2.4814870357513428
    3. '   ' → logprob: -4.231487274169922
    4. '(' → logprob: -6.606487274169922
    5. '
' → logprob: -6.606487274169922
    6. '    
' → logprob: -10.356487274169922
    7. '(
' → logprob: -10.356487274169922
    8. '	def' → logprob: -10.981487274169922
    9. '(def' → logprob: -11.106487274169922
    10. '()
' → logprob: -11.106487274169922

Token 289: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003013357287272811
    2. '
' → logprob: -6.2530131340026855
    3. ' def' → logprob: -6.8780131340026855
    4. '   ' → logprob: -9.878013610839844
    5. ' ' → logprob: -14.378013610839844
    6. '(def' → logprob: -14.378013610839844
    7. '()
' → logprob: -15.253013610839844
    8. '(' → logprob: -15.253013610839844
    9. '\' → logprob: -15.503013610839844
    10. '    
' → logprob: -15.628013610839844

Token 290: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -6.074907287256792e-05
    2. ' def' → logprob: -10.12506103515625
    3. '
' → logprob: -11.62506103515625
    4. 'classmethod' → logprob: -11.62506103515625
    5. 'class' → logprob: -13.87506103515625
    6. '   ' → logprob: -14.12506103515625
    7. 'from' → logprob: -15.12506103515625
    8. 'staticmethod' → logprob: -15.25006103515625
    9. 'python' → logprob: -16.00006103515625
    10. ' ' → logprob: -16.12506103515625

Token 291: ' create' (ID: 2501)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.44238704442977905
    2. ' create' → logprob: -1.1923871040344238
    3. 'can' → logprob: -3.567387104034424
    4. ' make' → logprob: -4.817387104034424
    5. 'create' → logprob: -5.192387104034424
    6. ' def' → logprob: -5.692387104034424
    7. ' try' → logprob: -6.817387104034424
    8. ' validate' → logprob: -6.942387104034424
    9. ' generate' → logprob: -6.942387104034424
    10. ' find' → logprob: -7.192387104034424

Token 292: '_st' (ID: 2518)
  Prédit: '_rectangle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_rectangle' → logprob: -0.16109278798103333
    2. '(rect' → logprob: -2.536092758178711
    3. '(' → logprob: -3.286092758178711
    4. '(st' → logprob: -3.661092758178711
    5. 'rectangle' → logprob: -6.411092758178711
    6. '(Rect' → logprob: -6.536092758178711
    7. 'Rectangle' → logprob: -6.911092758178711
    8. ' (' → logprob: -7.286092758178711
    9. '(
' → logprob: -7.786092758178711
    10. '_rect' → logprob: -8.036092758178711

Token 293: 'icks' (ID: 8736)
  Prédit: 'ick'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ick' → logprob: -0.0016218608943745494
    2. 'icks' → logprob: -6.501621723175049
    3. ' ' → logprob: -10.126622200012207
    4. '```' → logprob: -11.126622200012207
    5. 'ic' → logprob: -11.751622200012207
    6. '_' → logprob: -11.751622200012207
    7. '   ' → logprob: -12.001622200012207
    8. 'ck' → logprob: -12.626622200012207
    9. '
' → logprob: -12.626622200012207
    10. 'ickt' → logprob: -12.751622200012207

Token 294: '_from' (ID: 12526)
  Prédit: '(length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(length' → logprob: -0.06367648392915726
    2. '(' → logprob: -2.938676595687866
    3. '():' → logprob: -5.188676357269287
    4. '(size' → logprob: -6.438676357269287
    5. '(*' → logprob: -7.813676357269287
    6. '(list' → logprob: -8.438676834106445
    7. ' (' → logprob: -8.688676834106445
    8. '(n' → logprob: -8.938676834106445
    9. '(l' → logprob: -9.063676834106445
    10. '(len' → logprob: -9.063676834106445

Token 295: '_input' (ID: 12507)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.2668430805206299
    2. '_lengths' → logprob: -1.7668430805206299
    3. ' lengths' → logprob: -3.26684308052063
    4. '(length' → logprob: -4.891842842102051
    5. 'list' → logprob: -5.391842842102051
    6. '[length' → logprob: -5.516842842102051
    7. '_list' → logprob: -5.766842842102051
    8. '[' → logprob: -5.891842842102051
    9. 'input' → logprob: -8.14184284210205
    10. ' list' → logprob: -8.14184284210205

Token 296: '(input' (ID: 10054)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.28303855657577515
    2. '(length' → logprob: -2.40803861618042
    3. '(input' → logprob: -2.40803861618042
    4. '(st' → logprob: -3.90803861618042
    5. '(' → logprob: -4.78303861618042
    6. '():
' → logprob: -4.90803861618042
    7. '(prompt' → logprob: -5.03303861618042
    8. '(s' → logprob: -5.15803861618042
    9. '(lines' → logprob: -5.40803861618042
    10. '(line' → logprob: -5.53303861618042

Token 297: '_line' (ID: 14418)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2507176399230957
    2. '():' → logprob: -1.6257176399230957
    3. '())' → logprob: -4.375717639923096
    4. '(' → logprob: -5.375717639923096
    5. '_str' → logprob: -5.875717639923096
    6. '_string' → logprob: -6.125717639923096
    7. '().' → logprob: -7.625717639923096
    8. '_line' → logprob: -7.875717639923096
    9. '):' → logprob: -8.125717163085938
    10. '_data' → logprob: -8.250717163085938

Token 298: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12304239720106125
    2. ':' → logprob: -2.498042345046997
    3. '():' → logprob: -3.748042345046997
    4. ')' → logprob: -5.998042583465576
    5. '(input' → logprob: -5.998042583465576
    6. '(' → logprob: -6.373042583465576
    7. '):
' → logprob: -6.498042583465576
    8. '(line' → logprob: -6.998042583465576
    9. ' ):' → logprob: -7.498042583465576
    10. ',' → logprob: -9.373042106628418

Token 299: ' str' (ID: 989)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.34759199619293213
    2. 'input' → logprob: -1.3475919961929321
    3. ')' → logprob: -4.222591876983643
    4. ' str' → logprob: -4.472591876983643
    5. 'str' → logprob: -4.972591876983643
    6. ' )' → logprob: -7.347591876983643
    7. 'strip' → logprob: -10.5975923538208
    8. ' ' → logprob: -10.8475923538208
    9. '=input' → logprob: -10.8475923538208
    10. 'split' → logprob: -11.4725923538208

Token 300: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0028364919126033783
    2. '):' → logprob: -5.87783670425415
    3. '):
' → logprob: -10.877836227416992
    4. ')->' → logprob: -11.752836227416992
    5. ' )' → logprob: -12.627836227416992
    6. '   ' → logprob: -14.252836227416992
    7. ':' → logprob: -14.502836227416992
    8. ',' → logprob: -15.752836227416992
    9. '):
' → logprob: -16.252836227416992
    10. '):

' → logprob: -17.377836227416992

Token 301: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006538204033859074
    2. 'return' → logprob: -8.250654220581055
    3. 'tokens' → logprob: -9.000654220581055
    4. 'sticks' → logprob: -9.500654220581055
    5. ' return' → logprob: -9.750654220581055
    6. ' sticks' → logprob: -9.875654220581055
    7. 'input' → logprob: -10.000654220581055
    8. 's' → logprob: -12.125654220581055
    9. 'stick' → logprob: -12.375654220581055
    10. ' tokens' → logprob: -12.625654220581055

Token 302: ' lengths' (ID: 51957)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.04389449581503868
    2. 'return' → logprob: -3.7938945293426514
    3. ' lengths' → logprob: -4.043894290924072
    4. 'parts' → logprob: -6.918894290924072
    5. 'sticks' → logprob: -7.043894290924072
    6. ' return' → logprob: -8.04389476776123
    7. 'stick' → logprob: -8.29389476776123
    8. ' parts' → logprob: -9.29389476776123
    9. '   ' → logprob: -9.41889476776123
    10. ' length' → logprob: -9.91889476776123

Token 303: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038043100386857986
    2. '=' → logprob: -3.2880430221557617
    3. ')' → logprob: -14.663043022155762
    4. ' ' → logprob: -14.913043022155762
    5. '=int' → logprob: -15.413043022155762
    6. 's' → logprob: -15.788043022155762
    7. ' =
' → logprob: -16.288043975830078
    8. '.' → logprob: -16.413043975830078
    9. '_str' → logprob: -16.413043975830078
    10. '	' → logprob: -16.538043975830078

Token 304: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.39597663283348083
    2. ' list' → logprob: -1.1459766626358032
    3. '[input' → logprob: -5.270976543426514
    4. 'input' → logprob: -6.395976543426514
    5. '[list' → logprob: -6.520976543426514
    6. '[' → logprob: -7.645976543426514
    7. ' input' → logprob: -8.645977020263672
    8. ' [' → logprob: -9.020977020263672
    9. 'map' → logprob: -11.770977020263672
    10. '[line' → logprob: -14.895977020263672

Token 305: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00012642296496778727
    2. 'map' → logprob: -9.625126838684082
    3. '(' → logprob: -9.750126838684082
    4. '(
' → logprob: -14.375126838684082
    5. '(int' → logprob: -14.750126838684082
    6. ' map' → logprob: -15.000126838684082
    7. '	map' → logprob: -15.375126838684082
    8. '.map' → logprob: -15.750126838684082
    9. '_map' → logprob: -15.750126838684082
    10. '()' → logprob: -15.875126838684082

Token 306: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0015366430161520839
    2. '(' → logprob: -6.501536846160889
    3. 'int' → logprob: -10.50153636932373
    4. '(
' → logprob: -12.75153636932373
    5. '(lambda' → logprob: -13.37653636932373
    6. '<int' → logprob: -14.12653636932373
    7. '(str' → logprob: -14.50153636932373
    8. ')' → logprob: -14.75153636932373
    9. '[int' → logprob: -15.12653636932373
    10. ' (' → logprob: -15.75153636932373

Token 307: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.008570010773837566
    2. '(' → logprob: -5.008570194244385
    3. ',input' → logprob: -6.633570194244385
    4. ',' → logprob: -8.258569717407227
    5. 'input' → logprob: -8.508569717407227
    6. '))' → logprob: -10.508569717407227
    7. '(
' → logprob: -10.633569717407227
    8. ' (' → logprob: -11.508569717407227
    9. ')' → logprob: -12.133569717407227
    10. ' input' → logprob: -12.633569717407227

Token 308: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10021001845598221
    2. ' input' → logprob: -2.350209951400757
    3. '(input' → logprob: -12.975210189819336
    4. '   ' → logprob: -14.850210189819336
    5. '	input' → logprob: -15.600210189819336
    6. ',input' → logprob: -15.600210189819336
    7. ' ' → logprob: -16.225210189819336
    8. '
' → logprob: -16.600210189819336
    9. '=input' → logprob: -16.600210189819336
    10. '[input' → logprob: -16.725210189819336

Token 309: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.004907227586954832
    2. '(input' → logprob: -5.379907131195068
    3. '(' → logprob: -9.004907608032227
    4. '().' → logprob: -9.629907608032227
    5. ')' → logprob: -10.504907608032227
    6. 'line' → logprob: -10.754907608032227
    7. 'Line' → logprob: -11.004907608032227
    8. '.' → logprob: -12.129907608032227
    9. '=input' → logprob: -12.129907608032227
    10. '_LINE' → logprob: -12.254907608032227

Token 310: '.strip' (ID: 40613)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.2821480333805084
    2. '.strip' → logprob: -1.532148003578186
    3. '.split' → logprob: -3.5321481227874756
    4. '.' → logprob: -7.6571478843688965
    5. ' .' → logprob: -10.657148361206055
    6. '()' → logprob: -11.282148361206055
    7. 'strip' → logprob: -11.782148361206055
    8. 'split' → logprob: -12.157148361206055
    9. '(strip' → logprob: -14.157148361206055
    10. '(' → logprob: -14.657148361206055

Token 311: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.961759259458631e-06
    2. '()' → logprob: -12.250004768371582
    3. ' ().' → logprob: -17.0000057220459
    4. '()
' → logprob: -18.0000057220459
    5. '.split' → logprob: -18.6250057220459
    6. '(' → logprob: -20.2500057220459
    7. '().
' → logprob: -20.8750057220459
    8. '('' → logprob: -21.1250057220459
    9. '().'' → logprob: -21.2500057220459
    10. '   ' → logprob: -21.3750057220459

Token 312: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.896309739408025e-07
    2. ' split' → logprob: -14.250000953674316
    3. '(split' → logprob: -16.625
    4. '.split' → logprob: -16.875
    5. 'spl' → logprob: -19.875
    6. 'plit' → logprob: -21.375
    7. '_split' → logprob: -21.625
    8. ')' → logprob: -21.875
    9. 'rstrip' → logprob: -22.125
    10. '```' → logprob: -22.375

Token 313: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.014589458703994751
    2. '()' → logprob: -4.389589309692383
    3. '()))
' → logprob: -6.639589309692383
    4. '())' → logprob: -8.139589309692383
    5. '('' → logprob: -8.389589309692383
    6. '(' → logprob: -8.764589309692383
    7. '())))' → logprob: -10.514589309692383
    8. '(','' → logprob: -10.889589309692383
    9. '()))

' → logprob: -11.014589309692383
    10. '()));' → logprob: -11.514589309692383

Token 314: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05356158688664436
    2. ')' → logprob: -3.5535616874694824
    3. 'return' → logprob: -4.553561687469482
    4. '   ' → logprob: -5.428561687469482
    5. ':' → logprob: -6.303561687469482
    6. ' return' → logprob: -6.678561687469482
    7. '[' → logprob: -6.803561687469482
    8. '<|end|>' → logprob: -6.928561687469482
    9. '        
' → logprob: -7.553561687469482
    10. ' sticks' → logprob: -7.803561687469482

Token 315: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.09076010435819626
    2. ' return' → logprob: -3.2157599925994873
    3. 'sticks' → logprob: -3.4657599925994873
    4. '       ' → logprob: -4.340760231018066
    5. ' sticks' → logprob: -6.090760231018066
    6. 'if' → logprob: -10.215760231018066
    7. 'stick' → logprob: -11.090760231018066
    8. 'st' → logprob: -11.465760231018066
    9. ' if' → logprob: -11.715760231018066
    10. '[' → logprob: -11.715760231018066

Token 316: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.221884101862088e-05
    2. ' [' → logprob: -9.375092506408691
    3. '[List' → logprob: -12.000092506408691
    4. '   ' → logprob: -14.875092506408691
    5. '[list' → logprob: -15.500092506408691
    6. '[class' → logprob: -16.125091552734375
    7. '[len' → logprob: -16.500091552734375
    8. '[int' → logprob: -16.625091552734375
    9. '[np' → logprob: -16.625091552734375
    10. '[Int' → logprob: -17.000091552734375

Token 317: 'Stick' (ID: 94452)
  Prédit: 'Stick'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stick' → logprob: -1.1472419600977446e-06
    2. ' Stick' → logprob: -13.750000953674316
    3. '   ' → logprob: -17.125001907348633
    4. '
' → logprob: -19.125001907348633
    5. 'Sticky' → logprob: -20.250001907348633
    6. 'St' → logprob: -20.375001907348633
    7. '       ' → logprob: -20.500001907348633
    8. '  ' → logprob: -20.750001907348633
    9. 'Sticker' → logprob: -21.000001907348633
    10. 'Stem' → logprob: -21.125001907348633

Token 318: '(length' (ID: 47037)
  Prédit: '(length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(length' → logprob: -0.0021795271895825863
    2. '(' → logprob: -6.5021796226501465
    3. '(l' → logprob: -7.8771796226501465
    4. 'length' → logprob: -8.127179145812988
    5. '(
' → logprob: -14.127179145812988
    6. '(n' → logprob: -14.877179145812988
    7. '(len' → logprob: -15.252179145812988
    8. ')' → logprob: -15.377179145812988
    9. '(x' → logprob: -16.002180099487305
    10. '[length' → logprob: -16.002180099487305

Token 319: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018983196059707552
    2. '=' → logprob: -9.500189781188965
    3. 'length' → logprob: -9.625189781188965
    4. '(length' → logprob: -10.750189781188965
    5. ')
' → logprob: -12.125189781188965
    6. ')]' → logprob: -12.500189781188965
    7. 's' → logprob: -13.000189781188965
    8. '_' → logprob: -13.125189781188965
    9. '(' → logprob: -13.125189781188965
    10. '(l' → logprob: -13.250189781188965

Token 320: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3011261224746704
    2. 'length' → logprob: -1.3011261224746704
    3. ' for' → logprob: -1.6761261224746704
    4. 'for' → logprob: -1.8011261224746704
    5. '(length' → logprob: -2.301126003265381
    6. ' length' → logprob: -6.176126003265381
    7. 'l' → logprob: -8.051126480102539
    8. ' l' → logprob: -8.426126480102539
    9. '(l' → logprob: -8.551126480102539
    10. '   ' → logprob: -9.176126480102539

Token 321: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.38687190413475037
    2. 'length' → logprob: -1.1368719339370728
    3. ' ' → logprob: -14.886872291564941
    4. '	length' → logprob: -15.886872291564941
    5. 'leng' → logprob: -16.386871337890625
    6. ' l' → logprob: -16.386871337890625
    7. 'l' → logprob: -16.511871337890625
    8. '(length' → logprob: -16.511871337890625
    9. ' lenght' → logprob: -17.011871337890625
    10. ' leng' → logprob: -17.136871337890625

Token 322: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5246312022209167
    2. 'in' → logprob: -0.8996312022209167
    3. 'length' → logprob: -7.274631023406982
    4. ' lengths' → logprob: -7.399631023406982
    5. '_lengths' → logprob: -9.27463150024414
    6. ' ' → logprob: -9.77463150024414
    7. 'Lengths' → logprob: -10.89963150024414
    8. 's' → logprob: -11.02463150024414
    9. '_' → logprob: -12.14963150024414
    10. '  ' → logprob: -13.27463150024414

Token 323: ' lengths' (ID: 51957)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.0024774393532425165
    2. ' lengths' → logprob: -6.002477645874023
    3. ' length' → logprob: -13.627477645874023
    4. 'ength' → logprob: -15.127477645874023
    5. 'leng' → logprob: -16.002477645874023
    6. '_lengths' → logprob: -16.252477645874023
    7. ' lenght' → logprob: -17.502477645874023
    8. '(length' → logprob: -18.127477645874023
    9. '-length' → logprob: -18.377477645874023
    10. 'Lengths' → logprob: -18.502477645874023

Token 324: ']


' (ID: 52447)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0001737431448418647
    2. ' ]' → logprob: -9.625173568725586
    3. '   ' → logprob: -9.750173568725586
    4. '<|end|>' → logprob: -10.375173568725586
    5. '       ' → logprob: -11.875173568725586
    6. ']
' → logprob: -12.125173568725586
    7. '<|end|>' → logprob: -13.500173568725586
    8. '()]' → logprob: -13.875173568725586
    9. '}' → logprob: -14.625173568725586
    10. ')' → logprob: -14.625173568725586

Token 325: 'def' (ID: 1314)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0063800872303545475
    2. '
' → logprob: -5.506380081176758
    3. 'def' → logprob: -6.131380081176758
    4. ' class' → logprob: -10.381380081176758
    5. '```' → logprob: -10.381380081176758
    6. 'input' → logprob: -10.756380081176758
    7. '  
' → logprob: -11.881380081176758
    8. '   ' → logprob: -12.256380081176758
    9. 'rectangle' → logprob: -12.381380081176758
    10. '    
' → logprob: -12.381380081176758

Token 326: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.01472384762018919
    2. ' _' → logprob: -4.889723777770996
    3. ' check' → logprob: -6.014723777770996
    4. ' validate' → logprob: -6.139723777770996
    5. ' create' → logprob: -7.389723777770996
    6. ' process' → logprob: -7.764723777770996
    7. ' ' → logprob: -8.014723777770996
    8. '_' → logprob: -8.389723777770996
    9. ' test' → logprob: -8.889723777770996
    10. ' solve' → logprob: -9.014723777770996

Token 327: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0005264613428153098
    2. '():
' → logprob: -7.625526428222656
    3. '()' → logprob: -10.875526428222656
    4. ' ():' → logprob: -11.000526428222656
    5. '(' → logprob: -13.125526428222656
    6. '():
' → logprob: -14.750526428222656
    7. '_' → logprob: -16.625526428222656
    8. ':' → logprob: -16.625526428222656
    9. '()>' → logprob: -16.750526428222656
    10. '():

' → logprob: -16.750526428222656

Token 328: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6230990886688232
    2. ' input' → logprob: -0.8730990886688232
    3. 'input' → logprob: -3.1230990886688232
    4. ' import' → logprob: -6.498099327087402
    5. 'import' → logprob: -8.623099327087402
    6. ' line' → logprob: -9.248099327087402
    7. ' lines' → logprob: -9.248099327087402
    8. ' sticks' → logprob: -9.623099327087402
    9. ' try' → logprob: -10.248099327087402
    10. 'sticks' → logprob: -11.248099327087402

Token 329: ' import' (ID: 1588)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.4812150299549103
    2. ' input' → logprob: -1.106215000152588
    3. 'import' (adapté à ' import') → logprob: -3.481215000152588
    4. ' import' → logprob: -4.481215000152588
    5. '   ' → logprob: -4.856215000152588
    6. 'sticks' → logprob: -7.606215000152588
    7. ' sticks' → logprob: -7.981215000152588
    8. 'line' → logprob: -8.856215476989746
    9. 'try' → logprob: -9.231215476989746
    10. ' lines' → logprob: -9.856215476989746

Token 330: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.0067161982879042625
    2. 'sys' → logprob: -5.006716251373291
    3. '=sys' → logprob: -14.631715774536133
    4. '	sys' → logprob: -15.131715774536133
    5. '(sys' → logprob: -16.131715774536133
    6. '_sys' → logprob: -19.131715774536133
    7. '```' → logprob: -19.381715774536133
    8. 's' → logprob: -20.256715774536133
    9. ' math' → logprob: -20.506715774536133
    10. '.sys' → logprob: -20.881715774536133

Token 331: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25390490889549255
    2. '
' → logprob: -1.628904938697815
    3. '    
' → logprob: -3.7539048194885254
    4. 'input' → logprob: -5.503904819488525
    5. 'for' → logprob: -8.503905296325684
    6. ' input' → logprob: -9.003905296325684
    7. ' lines' → logprob: -10.003905296325684
    8. '   
' → logprob: -10.128905296325684
    9. ' for' → logprob: -10.878905296325684
    10. ' 
' → logprob: -11.253905296325684

Token 332: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029546240344643593
    2. '
' → logprob: -4.15454626083374
    3. 'input' → logprob: -4.77954626083374
    4. 'for' → logprob: -5.65454626083374
    5. '    
' → logprob: -6.90454626083374
    6. ' for' → logprob: -8.279545783996582
    7. ' input' → logprob: -9.029545783996582
    8. ' lines' → logprob: -9.779545783996582
    9. '```' → logprob: -11.154545783996582
    10. 'lines' → logprob: -11.404545783996582

Token 333: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.7325407266616821
    2. ' input' → logprob: -1.6075407266616821
    3. ' lines' → logprob: -2.2325406074523926
    4. 'for' → logprob: -2.9825406074523926
    5. '   ' → logprob: -3.1075406074523926
    6. 'sticks' → logprob: -3.2325406074523926
    7. ' sticks' → logprob: -3.7325406074523926
    8. 'lines' → logprob: -3.7325406074523926
    9. ' for' → logprob: -3.8575406074523926
    10. 'if' → logprob: -5.732540607452393

Token 334: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.0008378617349080741
    2. '_' → logprob: -7.375837802886963
    3. '_lines' → logprob: -8.500838279724121
    4. '()' → logprob: -12.875838279724121
    5. '_data' → logprob: -13.250838279724121
    6. '_=' → logprob: -13.750838279724121
    7. '=' → logprob: -14.000838279724121
    8. ' =' → logprob: -14.750838279724121
    9. 'line' → logprob: -14.875838279724121
    10. '=_' → logprob: -15.500838279724121

Token 335: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10024549067020416
    2. '=' → logprob: -2.350245475769043
    3. '=sys' → logprob: -10.225245475769043
    4. '   ' → logprob: -13.725245475769043
    5. ' ' → logprob: -14.475245475769043
    6. '()' → logprob: -15.725245475769043
    7. ' ' → logprob: -15.850245475769043
    8. '_' → logprob: -15.975245475769043
    9. '=input' → logprob: -15.975245475769043
    10. '	' → logprob: -16.60024642944336

Token 336: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.5759404897689819
    2. 'sys' → logprob: -0.8259404897689819
    3. 'input' → logprob: -14.075940132141113
    4. ' input' → logprob: -16.07594108581543
    5. '	sys' → logprob: -16.45094108581543
    6. '=sys' → logprob: -16.70094108581543
    7. '(sys' → logprob: -16.95094108581543
    8. '   ' → logprob: -17.95094108581543
    9. ' ' → logprob: -19.07594108581543
    10. 'next' → logprob: -19.82594108581543

Token 337: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -2.069664333248511e-05
    2. '.' → logprob: -12.000020980834961
    3. '.stdout' → logprob: -12.125020980834961
    4. 'stdin' → logprob: -12.250020980834961
    5. '.readline' → logprob: -13.000020980834961
    6. '.argv' → logprob: -13.250020980834961
    7. '.std' → logprob: -16.12502098083496
    8. '(stdin' → logprob: -17.00002098083496
    9. ' stdin' → logprob: -17.37502098083496
    10. '.stderr' → logprob: -17.75002098083496

Token 338: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.7432603272027336e-06
    2. '.' → logprob: -13.875001907348633
    3. '.read' → logprob: -14.625001907348633
    4. 'read' → logprob: -15.375001907348633
    5. '.readlines' → logprob: -17.750001907348633
    6. 'buffer' → logprob: -19.375001907348633
    7. '.stdin' → logprob: -19.375001907348633
    8. '.buffer' → logprob: -19.500001907348633
    9. ' readline' → logprob: -19.625001907348633
    10. '```' → logprob: -20.000001907348633

Token 339: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0040887282229959965
    2. '().' → logprob: -5.504088878631592
    3. '()
' → logprob: -11.754088401794434
    4. '()

' → logprob: -14.004088401794434
    5. '())' → logprob: -14.254088401794434
    6. '(' → logprob: -15.254088401794434
    7. '()\' → logprob: -15.254088401794434
    8. '()`' → logprob: -15.879088401794434
    9. '()<' → logprob: -16.62908935546875
    10. '()]' → logprob: -16.75408935546875

Token 340: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21294070780277252
    2. 'sticks' → logprob: -1.8379406929016113
    3. ' sticks' → logprob: -3.4629406929016113
    4. 'st' → logprob: -6.962940692901611
    5. '    
' → logprob: -8.71294116973877
    6. '	st' → logprob: -9.71294116973877
    7. 's' → logprob: -10.08794116973877
    8. 'stick' → logprob: -10.08794116973877
    9. '
' → logprob: -11.21294116973877
    10. '    ' → logprob: -11.33794116973877

Token 341: ' sticks' (ID: 54819)
  Prédit: 'sticks'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sticks' (adapté à ' sticks') → logprob: -0.0022702778223901987
    2. 'st' → logprob: -6.377270221710205
    3. ' sticks' → logprob: -7.752270221710205
    4. 'stick' → logprob: -9.502270698547363
    5. '   ' → logprob: -9.752270698547363
    6. '
' → logprob: -13.752270698547363
    7. 'sts' → logprob: -14.002270698547363
    8. 'stakes' → logprob: -14.127270698547363
    9. '```' → logprob: -14.502270698547363
    10. '	st' → logprob: -14.752270698547363

Token 342: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.001502598519437015
    2. '=' → logprob: -6.501502513885498
    3. ' =[' → logprob: -15.876502990722656
    4. ' ' → logprob: -17.001502990722656
    5. ' =
' → logprob: -17.626502990722656
    6. '[' → logprob: -18.001502990722656
    7. ' =)' → logprob: -18.126502990722656
    8. '.' → logprob: -18.376502990722656
    9. ' ' → logprob: -18.876502990722656
    10. '[:]' → logprob: -18.876502990722656

Token 343: ' Rectangle' (ID: 38728)
  Prédit: 'Rectangle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rectangle' → logprob: -0.00861456897109747
    2. ' Rectangle' → logprob: -4.758614540100098
    3. 'Rect' → logprob: -17.258615493774414
    4. '(Rect' → logprob: -18.633615493774414
    5. '.Rectangle' → logprob: -18.633615493774414
    6. '_rectangle' → logprob: -20.133615493774414
    7. '   ' → logprob: -21.008615493774414
    8. ' rectangle' → logprob: -22.008615493774414
    9. 'rectangle' → logprob: -22.258615493774414
    10. ' ' → logprob: -22.883615493774414

Token 344: 'Factory' (ID: 4870)
  Prédit: 'Factory'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Factory' → logprob: -0.00010926496179308742
    2. 'Validator' → logprob: -9.125109672546387
    3. 'factory' → logprob: -15.750109672546387
    4. 'Factor' → logprob: -16.12510871887207
    5. '_factory' → logprob: -16.87510871887207
    6. ' Factory' → logprob: -18.12510871887207
    7. 'Fact' → logprob: -18.62510871887207
    8. '   ' → logprob: -18.87510871887207
    9. ' factory' → logprob: -19.75010871887207
    10. 'Fabric' → logprob: -19.87510871887207

Token 345: '.create' (ID: 3916)
  Prédit: '.create'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.create' → logprob: -2.856408536899835e-05
    2. '.' → logprob: -10.500028610229492
    3. 'create' → logprob: -14.000028610229492
    4. ' .' → logprob: -15.750028610229492
    5. '().' → logprob: -17.000028610229492
    6. '_create' → logprob: -18.375028610229492
    7. '._' → logprob: -18.625028610229492
    8. '.from' → logprob: -19.500028610229492
    9. '=create' → logprob: -19.625028610229492
    10. '(create' → logprob: -20.000028610229492

Token 346: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -1.7432603272027336e-06
    2. '_' → logprob: -14.125001907348633
    3. '_s' → logprob: -14.750001907348633
    4. 'sticks' → logprob: -15.375001907348633
    5. '```' → logprob: -15.875001907348633
    6. ' _' → logprob: -17.000001907348633
    7. 'St' → logprob: -17.625001907348633
    8. 'st' → logprob: -18.125001907348633
    9. '_sn' → logprob: -18.125001907348633
    10. '_ticks' → logprob: -18.125001907348633

Token 347: 'icks' (ID: 8736)
  Prédit: 'icks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icks' → logprob: -0.0003079334564972669
    2. 'cks' → logprob: -8.6253080368042
    3. 'ticks' → logprob: -10.3753080368042
    4. 'ick' → logprob: -10.7503080368042
    5. 'sticks' → logprob: -10.8753080368042
    6. '```' → logprob: -12.2503080368042
    7. '
' → logprob: -12.5003080368042
    8. ' ' → logprob: -12.5003080368042
    9. '_' → logprob: -12.6253080368042
    10. '``' → logprob: -12.6253080368042

Token 348: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -4.787507714354433e-05
    2. 'from' → logprob: -10.37504768371582
    3. '_st' → logprob: -11.12504768371582
    4. '_for' → logprob: -13.87504768371582
    5. '_' → logprob: -15.25004768371582
    6. '_of' → logprob: -15.87504768371582
    7. 's' → logprob: -16.12504768371582
    8. '_f' → logprob: -16.25004768371582
    9. '_to' → logprob: -16.25004768371582
    10. 'sticks' → logprob: -16.25004768371582

Token 349: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.5810549855232239
    2. 'input' → logprob: -0.8310549855232239
    3. 'put' → logprob: -5.331055164337158
    4. '(input' → logprob: -8.4560546875
    5. '_line' → logprob: -10.9560546875
    6. 'puts' → logprob: -11.3310546875
    7. 'line' → logprob: -12.2060546875
    8. '_put' → logprob: -12.3310546875
    9. '_st' → logprob: -12.8310546875
    10. ' input' → logprob: -13.0810546875

Token 350: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -5.5577775128767826e-06
    2. '(' → logprob: -12.250005722045898
    3. ' (' → logprob: -14.500005722045898
    4. '(
' → logprob: -16.1250057220459
    5. '(inp' → logprob: -17.2500057220459
    6. '(import' → logprob: -17.2500057220459
    7. ',input' → logprob: -18.0000057220459
    8. '(in' → logprob: -18.8750057220459
    9. '=input' → logprob: -18.8750057220459
    10. '(output' → logprob: -19.1250057220459

Token 351: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -1.9361264946837764e-07
    2. 'line' → logprob: -15.625
    3. '_LINE' → logprob: -18.875
    4. '_' → logprob: -19.0
    5. ')' → logprob: -19.5
    6. ')_' → logprob: -19.625
    7. '_lin' → logprob: -21.25
    8. '(line' → logprob: -21.375
    9. '_l' → logprob: -21.375
    10. ' line' → logprob: -21.75

Token 352: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004467389080673456
    2. '())' → logprob: -6.129467487335205
    3. '()' → logprob: -6.379467487335205
    4. ')
' → logprob: -7.504467487335205
    5. '())
' → logprob: -11.379467010498047
    6. '()
' → logprob: -11.629467010498047
    7. '   ' → logprob: -11.754467010498047
    8. ' )' → logprob: -12.629467010498047
    9. '(' → logprob: -14.629467010498047
    10. ')
' → logprob: -15.504467010498047

Token 353: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0566021203994751
    2. ' validator' → logprob: -3.1816020011901855
    3. 'validator' → logprob: -4.3066020011901855
    4. '
' → logprob: -11.681602478027344
    5. '```' → logprob: -12.181602478027344
    6. ' rv' → logprob: -12.431602478027344
    7. '_validator' → logprob: -13.056602478027344
    8. '    
' → logprob: -13.181602478027344
    9. '-validator' → logprob: -13.181602478027344
    10. ' rectangle' → logprob: -13.806602478027344

Token 354: ' validator' (ID: 44590)
  Prédit: 'validator'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'validator' (adapté à ' validator') → logprob: -0.0009219424682669342
    2. ' validator' → logprob: -7.000921726226807
    3. 'if' → logprob: -12.125922203063965
    4. 'try' → logprob: -13.000922203063965
    5. '   ' → logprob: -13.125922203063965
    6. 'valid' → logprob: -15.000922203063965
    7. ' if' → logprob: -15.375922203063965
    8. 'rectangle' → logprob: -15.875922203063965
    9. '    
' → logprob: -16.50092124938965
    10. 'rv' → logprob: -17.00092124938965

Token 355: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.001705175032839179
    2. '=' → logprob: -6.376705169677734
    3. '.' → logprob: -13.001705169677734
    4. '.can' → logprob: -15.376705169677734
    5. '   ' → logprob: -15.376705169677734
    6. '.validate' → logprob: -15.626705169677734
    7. ' ' → logprob: -17.376705169677734
    8. '  ' → logprob: -17.376705169677734
    9. '.check' → logprob: -17.876705169677734
    10. ' =
' → logprob: -18.001705169677734

Token 356: ' Rectangle' (ID: 38728)
  Prédit: ' Rectangle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Rectangle' → logprob: -0.4740770161151886
    2. 'Rectangle' → logprob: -0.9740769863128662
    3. 'Rect' → logprob: -17.474077224731445
    4. '.Rectangle' → logprob: -18.974077224731445
    5. '(Rect' → logprob: -19.599077224731445
    6. '_rectangle' → logprob: -19.724077224731445
    7. ' rectangle' → logprob: -20.099077224731445
    8. ' ' → logprob: -20.974077224731445
    9. ' ' → logprob: -21.099077224731445
    10. ' Rect' → logprob: -21.849077224731445

Token 357: 'Validator' (ID: 18992)
  Prédit: 'Validator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Validator' → logprob: 0.0
    2. 'Valid' → logprob: -17.375
    3. 'validator' → logprob: -17.625
    4. ' Validator' → logprob: -18.125
    5. 'Validate' → logprob: -20.0
    6. '_validator' → logprob: -20.25
    7. 'Val' → logprob: -20.5
    8. '-validator' → logprob: -21.0
    9. 'Validation' → logprob: -21.5
    10. 'Validators' → logprob: -21.75

Token 358: '(st' (ID: 4065)
  Prédit: '(st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(st' → logprob: -1.2352385965641588e-05
    2. '(' → logprob: -12.000012397766113
    3. 'sticks' → logprob: -12.625012397766113
    4. 'st' → logprob: -13.500012397766113
    5. '(s' → logprob: -14.000012397766113
    6. '   ' → logprob: -15.250012397766113
    7. ' (' → logprob: -16.000011444091797
    8. '(
' → logprob: -16.500011444091797
    9. ' sticks' → logprob: -16.875011444091797
    10. 'stick' → logprob: -18.500011444091797

Token 359: 'icks' (ID: 8736)
  Prédit: 'icks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icks' → logprob: -2.629921436891891e-05
    2. '(' → logprob: -11.62502670288086
    3. 'cks' → logprob: -11.75002670288086
    4. '[' → logprob: -12.50002670288086
    5. 'i' → logprob: -13.62502670288086
    6. ' ' → logprob: -14.00002670288086
    7. 'ics' → logprob: -14.25002670288086
    8. 'iks' → logprob: -14.87502670288086
    9. 'ick' → logprob: -15.25002670288086
    10. '
' → logprob: -15.37502670288086

Token 360: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20157715678215027
    2. ')
' → logprob: -1.7015771865844727
    3. '   ' → logprob: -8.951577186584473
    4. 'if' → logprob: -11.451577186584473
    5. ')
' → logprob: -11.826577186584473
    6. '())
' → logprob: -12.826577186584473
    7. ')

' → logprob: -12.951577186584473
    8. ' )' → logprob: -13.576577186584473
    9. ' )
' → logprob: -13.576577186584473
    10. '())' → logprob: -13.576577186584473

Token 361: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001556163071654737
    2. 'if' → logprob: -6.751556396484375
    3. 'print' → logprob: -8.376556396484375
    4. ' if' → logprob: -8.876556396484375
    5. 'try' → logprob: -11.501556396484375
    6. ' print' → logprob: -12.501556396484375
    7. 'result' → logprob: -14.126556396484375
    8. '
' → logprob: -14.626556396484375
    9. '    
' → logprob: -14.626556396484375
    10. '```' → logprob: -15.751556396484375

Token 362: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5792072415351868
    2. 'print' → logprob: -0.8292072415351868
    3. 'can' → logprob: -6.204207420349121
    4. 'result' → logprob: -7.079207420349121
    5. '   ' → logprob: -8.329207420349121
    6. ' if' → logprob: -8.954207420349121
    7. ' print' → logprob: -10.954207420349121
    8. 'try' → logprob: -11.704207420349121
    9. ' can' → logprob: -14.204207420349121
    10. 'is' → logprob: -14.454207420349121

Token 363: ' validator' (ID: 44590)
  Prédit: ' validator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' validator' → logprob: -0.2519342601299286
    2. 'validator' → logprob: -1.501934289932251
    3. 'not' → logprob: -13.501934051513672
    4. 'Validator' → logprob: -13.626934051513672
    5. '_validator' → logprob: -14.001934051513672
    6. ' not' → logprob: -14.251934051513672
    7. '   ' → logprob: -14.626934051513672
    8. 'validate' → logprob: -15.501934051513672
    9. '.validator' → logprob: -16.126934051513672
    10. ' validation' → logprob: -16.876934051513672

Token 364: '.can' (ID: 46002)
  Prédit: '.can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.can' → logprob: -1.9361264946837764e-07
    2. ' .' → logprob: -16.625
    3. '.' → logprob: -17.125
    4. '.Can' → logprob: -19.25
    5. '_can' → logprob: -21.375
    6. 'can' → logprob: -21.75
    7. '.should' → logprob: -22.0
    8. '   ' → logprob: -22.625
    9. '.has' → logprob: -22.75
    10. '	can' → logprob: -22.75

Token 365: '_form' (ID: 18664)
  Prédit: '_form'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_form' → logprob: -9.968312951968983e-06
    2. '_' → logprob: -11.625009536743164
    3. '_for' → logprob: -15.375009536743164
    4. ' _' → logprob: -15.750009536743164
    5. 'form' → logprob: -15.750009536743164
    6. '_format' → logprob: -16.375009536743164
    7. '_forms' → logprob: -16.375009536743164
    8. '_f' → logprob: -16.625009536743164
    9. '_make' → logprob: -16.750009536743164
    10. '_find' → logprob: -16.875009536743164

Token 366: '_rectangle' (ID: 166619)
  Prédit: '_rectangle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rectangle' → logprob: -5.080963092041202e-06
    2. 'rectangle' → logprob: -12.250004768371582
    3. '_rect' → logprob: -15.500004768371582
    4. '.rectangle' → logprob: -19.1250057220459
    5. 'Rectangle' → logprob: -19.2500057220459
    6. ' rectangle' → logprob: -19.5000057220459
    7. '
' → logprob: -19.7500057220459
    8. '_' → logprob: -19.7500057220459
    9. '```' → logprob: -20.3750057220459
    10. '_triangle' → logprob: -20.3750057220459

Token 367: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.014225441962480545
    2. '():
' → logprob: -4.264225482940674
    3. '()' → logprob: -9.764225006103516
    4. '():
' → logprob: -12.639225006103516
    5. ' ():' → logprob: -13.764225006103516
    6. '()==' → logprob: -16.139225006103516
    7. '():

' → logprob: -16.764225006103516
    8. '()):
' → logprob: -17.389225006103516
    9. '()>' → logprob: -17.514225006103516
    10. ':' → logprob: -17.639225006103516

Token 368: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002925598528236151
    2. 'print' → logprob: -8.375292778015137
    3. ' print' → logprob: -9.875292778015137
    4. '
' → logprob: -11.750292778015137
    5. '   ' → logprob: -13.250292778015137
    6. '        
' → logprob: -15.250292778015137
    7. '           ' → logprob: -15.500292778015137
    8. '```' → logprob: -16.25029182434082
    9. '	print' → logprob: -16.87529182434082
    10. '      ' → logprob: -16.87529182434082

Token 369: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.05194311589002609
    2. '       ' → logprob: -3.301943063735962
    3. ' print' → logprob: -4.301943302154541
    4. '   ' → logprob: -8.301942825317383
    5. '
' → logprob: -11.426942825317383
    6. '	print' → logprob: -12.926942825317383
    7. '```' → logprob: -13.801942825317383
    8. '           ' → logprob: -15.301942825317383
    9. 'import' → logprob: -15.426942825317383
    10. '.print' → logprob: -16.176942825317383

Token 370: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0012486852938309312
    2. '(' → logprob: -6.751248836517334
    3. '(True' → logprob: -10.376248359680176
    4. '('' → logprob: -10.501248359680176
    5. '('"' → logprob: -11.376248359680176
    6. '("\"' → logprob: -12.501248359680176
    7. '("'' → logprob: -12.751248359680176
    8. '"' → logprob: -14.001248359680176
    9. '("("' → logprob: -15.376248359680176
    10. '(("' → logprob: -15.751248359680176

Token 371: 'yes' (ID: 6763)
  Prédit: 'YES'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'YES' → logprob: -0.33562082052230835
    2. 'Rectangle' → logprob: -1.5856208801269531
    3. 'Yes' → logprob: -2.835620880126953
    4. 'RECT' → logprob: -4.210620880126953
    5. 'True' → logprob: -6.210620880126953
    6. 'rectangle' → logprob: -6.710620880126953
    7. 'Possible' → logprob: -6.835620880126953
    8. '"' → logprob: -7.335620880126953
    9. 'true' → logprob: -8.210620880126953
    10. 'TRUE' → logprob: -8.585620880126953

Token 372: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.47408562898635864
    2. '")' → logprob: -0.9740856289863586
    3. 'else' → logprob: -12.599085807800293
    4. '")
' → logprob: -13.224085807800293
    5. '!")
' → logprob: -14.474085807800293
    6. '!")' → logprob: -14.599085807800293
    7. '"' → logprob: -14.724085807800293
    8. ')' → logprob: -14.974085807800293
    9. ' ")
' → logprob: -15.224085807800293
    10. ')
' → logprob: -15.224085807800293

Token 373: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009779583662748337
    2. 'else' → logprob: -4.759779453277588
    3. ' else' → logprob: -6.759779453277588
    4. '<|end|>' → logprob: -13.259779930114746
    5. '	else' → logprob: -13.384779930114746
    6. '
' → logprob: -14.759779930114746
    7. '```' → logprob: -14.884779930114746
    8. '  ' → logprob: -15.634779930114746
    9. '<|end|>' → logprob: -15.884779930114746
    10. '       ' → logprob: -16.00977897644043

Token 374: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.44112539291381836
    2. '   ' → logprob: -1.1911253929138184
    3. ' else' → logprob: -2.9411253929138184
    4. '	else' → logprob: -13.566125869750977
    5. 'elif' → logprob: -14.316125869750977
    6. ' ' → logprob: -15.441125869750977
    7. '
' → logprob: -15.441125869750977
    8. '    
' → logprob: -16.941125869750977
    9. 'elser' → logprob: -17.191125869750977
    10. '```' → logprob: -17.441125869750977

Token 375: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25481948256492615
    2. ':
' → logprob: -1.5048195123672485
    3. '       ' → logprob: -6.004819393157959
    4. '   ' → logprob: -7.879819393157959
    5. '    ' → logprob: -11.379819869995117
    6. 'print' → logprob: -12.379819869995117
    7. ' :
' → logprob: -12.504819869995117
    8. ' :' → logprob: -12.879819869995117
    9. '      ' → logprob: -13.129819869995117
    10. '(' → logprob: -13.129819869995117

Token 376: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011708548292517662
    2. ' print' → logprob: -4.511708736419678
    3. 'print' → logprob: -7.511708736419678
    4. '
' → logprob: -10.63670825958252
    5. '   ' → logprob: -11.63670825958252
    6. '    ' → logprob: -11.63670825958252
    7. '        ' → logprob: -11.76170825958252
    8. '"' → logprob: -11.76170825958252
    9. '```' → logprob: -11.76170825958252
    10. ' ' → logprob: -11.88670825958252

Token 377: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.3132629096508026
    2. 'print' (adapté à ' print') → logprob: -1.313262939453125
    3. '       ' → logprob: -13.813262939453125
    4. '"' → logprob: -17.188262939453125
    5. '   ' → logprob: -17.313262939453125
    6. '.print' → logprob: -17.563262939453125
    7. 'pr' → logprob: -17.688262939453125
    8. '(print' → logprob: -17.688262939453125
    9. '	print' → logprob: -17.938262939453125
    10. ' ' → logprob: -18.313262939453125

Token 378: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0004306692280806601
    2. '(' → logprob: -7.750430583953857
    3. '('' → logprob: -17.000431060791016
    4. '(
' → logprob: -17.250431060791016
    5. '("("' → logprob: -19.250431060791016
    6. '("")' → logprob: -20.250431060791016
    7. '()' → logprob: -20.750431060791016
    8. '(

' → logprob: -20.875431060791016
    9. '(""' → logprob: -21.000431060791016
    10. '"' → logprob: -21.125431060791016

Token 379: 'no' (ID: 1750)
  Prédit: 'no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -3.128163257315464e-07
    2. ' no' → logprob: -15.875
    3. '"' → logprob: -16.625
    4. 'not' → logprob: -19.875
    5. 'No' → logprob: -21.875
    6. '	no' → logprob: -22.125
    7. 'n' → logprob: -22.625
    8. 'NO' → logprob: -23.375
    9. '")' → logprob: -23.375
    10. '"No' → logprob: -23.625

Token 380: '")


' (ID: 57903)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.3879050612449646
    2. ')' → logprob: -1.1379051208496094
    3. ')")' → logprob: -6.887905120849609
    4. '")
' → logprob: -11.88790512084961
    5. ')
' → logprob: -12.51290512084961
    6. '()' → logprob: -13.63790512084961
    7. '')' → logprob: -13.88790512084961
    8. '())' → logprob: -15.63790512084961
    9. '}")' → logprob: -15.88790512084961
    10. ')"' → logprob: -16.01290512084961

Token 381: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -6.153795766294934e-06
    2. ' if' → logprob: -12.500005722045898
    3. '```' → logprob: -13.375005722045898
    4. '#' → logprob: -14.625005722045898
    5. '<|end|>' → logprob: -15.250005722045898
    6. '
' → logprob: -16.3750057220459
    7. '__' → logprob: -17.7500057220459
    8. '\n' → logprob: -18.1250057220459
    9. 'main' → logprob: -18.5000057220459
    10. 'If' → logprob: -18.5000057220459

Token 382: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.014184308238327503
    2. '__' → logprob: -4.264184474945068
    3. ' ' → logprob: -11.76418399810791
    4. '_name' → logprob: -11.76418399810791
    5. '_' → logprob: -13.01418399810791
    6. 'name' → logprob: -14.13918399810791
    7. ' ' → logprob: -14.26418399810791
    8. ' _' → logprob: -14.51418399810791
    9. ' name' → logprob: -14.88918399810791
    10. '﻿' → logprob: -16.139184951782227

Token 383: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2741938829421997
    2. '==' → logprob: -1.6491938829421997
    3. ' ==' → logprob: -3.14919376373291
    4. '=="' → logprob: -5.64919376373291
    5. '=='' → logprob: -7.89919376373291
    6. '__.__' → logprob: -8.39919376373291
    7. '.__' → logprob: -8.52419376373291
    8. 'name' → logprob: -9.02419376373291
    9. '[' → logprob: -9.14919376373291
    10. ' __' → logprob: -10.02419376373291

Token 384: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.700132997939363e-05
    2. '__.__' → logprob: -11.375017166137695
    3. '==' → logprob: -12.375017166137695
    4. ' ==' → logprob: -14.375017166137695
    5. '__.' → logprob: -14.875017166137695
    6. '__["' → logprob: -16.375017166137695
    7. '__
' → logprob: -16.500017166137695
    8. '____' → logprob: -16.625017166137695
    9. '___' → logprob: -16.875017166137695
    10. '=="' → logprob: -17.375017166137695

Token 385: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7077861428260803
    2. ' ==' → logprob: -1.2077860832214355
    3. '__' → logprob: -1.5827860832214355
    4. '=="' → logprob: -5.8327860832214355
    5. '=='' → logprob: -9.832786560058594
    6. '_' → logprob: -11.957786560058594
    7. '=' → logprob: -12.082786560058594
    8. '===' → logprob: -12.832786560058594
    9. '___' → logprob: -13.082786560058594
    10. '==
' → logprob: -13.332786560058594

Token 386: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.001969554228708148
    2. ''' → logprob: -6.251969337463379
    3. ' "__' → logprob: -10.126969337463379
    4. '__' → logprob: -14.126969337463379
    5. ' '__' → logprob: -16.251970291137695
    6. '"user' → logprob: -16.876970291137695
    7. '"name' → logprob: -17.126970291137695
    8. '("__' → logprob: -17.251970291137695
    9. '"class' → logprob: -18.126970291137695
    10. '"_' → logprob: -18.501970291137695

Token 387: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.7432603272027336e-06
    2. 'name' → logprob: -13.625001907348633
    3. '__' → logprob: -15.125001907348633
    4. ' main' → logprob: -16.000001907348633
    5. '_main' → logprob: -16.125001907348633
    6. 'ma' → logprob: -19.875001907348633
    7. '"' → logprob: -20.625001907348633
    8. 'built' → logprob: -20.625001907348633
    9. '-main' → logprob: -21.250001907348633
    10. 'm' → logprob: -21.625001907348633

Token 388: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.018330441787838936
    2. '__' → logprob: -4.0183305740356445
    3. '__':
' → logprob: -8.643330574035645
    4. '__:' → logprob: -13.643330574035645
    5. '__.' → logprob: -13.768330574035645
    6. '__["' → logprob: -13.893330574035645
    7. '__.__' → logprob: -14.143330574035645
    8. '__
' → logprob: -15.768330574035645
    9. '__
' → logprob: -16.018329620361328
    10. '__",' → logprob: -16.518329620361328

Token 389: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.008749190717935562
    2. ' main' → logprob: -4.758749008178711
    3. '__' → logprob: -9.008749008178711
    4. '   ' → logprob: -11.883749008178711
    5. '	main' → logprob: -12.383749008178711
    6. ' __' → logprob: -14.133749008178711
    7. '_main' → logprob: -14.883749008178711
    8. '(main' → logprob: -16.88374900817871
    9. '.main' → logprob: -18.00874900817871
    10. '    
' → logprob: -18.00874900817871

Token 390: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -3.7697225252486533e-06
    2. ' main' → logprob: -12.500003814697266
    3. 'import' → logprob: -18.000003814697266
    4. '	main' → logprob: -19.750003814697266
    5. '   ' → logprob: -20.250003814697266
    6. '.main' → logprob: -24.000003814697266
    7. '_main' → logprob: -24.750003814697266
    8. '(main' → logprob: -24.750003814697266
    9. '
' → logprob: -25.125003814697266
    10. ' ' → logprob: -26.125003814697266

Token 391: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0013977376511320472
    2. '()
' → logprob: -7.126397609710693
    3. '(' → logprob: -7.626397609710693
    4. '<|end|>' → logprob: -10.126398086547852
    5. '
' → logprob: -10.876398086547852
    6. '```' → logprob: -11.001398086547852
    7. '(
' → logprob: -11.751398086547852
    8. '();' → logprob: -12.501398086547852
    9. '()\' → logprob: -12.626398086547852
    10. '#' → logprob: -12.751398086547852


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 389
Tokens correctement prédits (1ère position, stricte): 196
Tokens correctement prédits (1ère position, avec adaptation): 215
Tokens correctement prédits (top 10): 348
Précision stricte (1ère position): 50.39%
Précision adaptée (1ère position): 55.27%
Précision (top 10): 89.46%
================================================================================
