================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:10:47
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    N = int(input())
    if N == 0:
        break
    gems = set()
    for _ in range(N):
        x, y = map(int, input().split())
        gems.add((x, y))
    M = int(input())
    x, y = 10, 10
    collected = set()
    if (x, y) in gems:
        collected.add((x, y))
    for _ in range(M):
        d, l = input().split()
        l = int(l)
        for _ in range(l):
            if d == 'N':
                y += 1
            elif d == 'E':
                x += 1
            elif d == 'S':
                y -= 1
            elif d == 'W':
                x -= 1
            if (x, y) in gems:
                collected.add((x, y))
    if len(collected) == len(gems):
        print("Yes")
    else:
        print("No")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6314842700958252
    2. '    ' → logprob: -2.131484270095825
    3. '    
' → logprob: -2.631484270095825
    4. '\' → logprob: -2.881484270095825
    5. '\n' → logprob: -2.881484270095825
    6. ' ' → logprob: -3.256484270095825
    7. '```' → logprob: -3.256484270095825
    8. ' 
' → logprob: -3.631484270095825
    9. '  
' → logprob: -4.131484031677246
    10. '     
' → logprob: -4.256484031677246

Token 4: ' N' (ID: 478)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30723127722740173
    2. '    ' → logprob: -1.6822313070297241
    3. '```' → logprob: -3.5572311878204346
    4. ' ' → logprob: -3.8072311878204346
    5. '       ' → logprob: -4.807231426239014
    6. '    
' → logprob: -5.932231426239014
    7. '  ' → logprob: -6.182231426239014
    8. '\' → logprob: -6.182231426239014
    9. '\n' → logprob: -6.682231426239014
    10. '\t' → logprob: -6.807231426239014

Token 5: ' =' (ID: 314)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -1.1940009593963623
    2. '=' → logprob: -1.4440009593963623
    3. '   ' → logprob: -1.5690009593963623
    4. ' ' → logprob: -2.5690009593963623
    5. 'u' → logprob: -3.1940009593963623
    6. ' =' → logprob: -3.6940009593963623
    7. '>' → logprob: -3.9440009593963623
    8. '  ' → logprob: -4.444001197814941
    9. '-' → logprob: -4.569001197814941
    10. '.' → logprob: -4.694001197814941

Token 6: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.05340055003762245
    2. ' input' → logprob: -3.4284005165100098
    3. 'int' → logprob: -4.05340051651001
    4. 'input' → logprob: -6.17840051651001
    5. ' ' → logprob: -10.178400993347168
    6. ' randint' → logprob: -10.928400993347168
    7. ' eval' → logprob: -11.303400993347168
    8. ' N' → logprob: -11.928400993347168
    9. ' len' → logprob: -12.428400993347168
    10. ' i' → logprob: -12.553400993347168

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.038116078823804855
    2. '(input' → logprob: -3.288115978240967
    3. 'input' → logprob: -10.538116455078125
    4. '(
' → logprob: -11.288116455078125
    5. '('' → logprob: -11.663116455078125
    6. '()' → logprob: -11.788116455078125
    7. ' (' → logprob: -12.163116455078125
    8. '(open' → logprob: -12.663116455078125
    9. '(N' → logprob: -13.663116455078125
    10. ' ' → logprob: -14.038116455078125

Token 8: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9293133020401001
    2. '(' → logprob: -1.3043133020401
    3. '()' → logprob: -1.3043133020401
    4. '())' → logprob: -2.9293131828308105
    5. '))' → logprob: -4.9293131828308105
    6. '()))' → logprob: -6.6793131828308105
    7. '(
' → logprob: -9.179313659667969
    8. '('' → logprob: -9.554313659667969
    9. '```' → logprob: -9.804313659667969
    10. '')' → logprob: -10.179313659667969

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9660837650299072
    2. ' ' → logprob: -1.3410837650299072
    3. '<|end|>' → logprob: -2.0910837650299072
    4. ' if' → logprob: -2.8410837650299072
    5. ')' → logprob: -3.0910837650299072
    6. '    ' → logprob: -3.2160837650299072
    7. '  ' → logprob: -3.7160837650299072
    8. '    
' → logprob: -4.216083526611328
    9. 'if' → logprob: -4.341083526611328
    10. ':' → logprob: -4.341083526611328

Token 10: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4922998249530792
    2. '<|end|>' → logprob: -1.8672997951507568
    3. ' if' → logprob: -2.367299795150757
    4. ')' → logprob: -3.117299795150757
    5. '  ' → logprob: -3.742299795150757
    6. '   ' → logprob: -4.117300033569336
    7. 'if' (adapté à ' if') → logprob: -4.367300033569336
    8. '+' → logprob: -4.367300033569336
    9. '    ' → logprob: -4.992300033569336
    10. '%' → logprob: -5.367300033569336

Token 11: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.024110853672027588
    2. ' ' → logprob: -3.774110794067383
    3. ' not' → logprob: -7.649110794067383
    4. 'N' → logprob: -7.899110794067383
    5. '  ' → logprob: -11.774110794067383
    6. ' ' → logprob: -12.024110794067383
    7. '<|end|>' → logprob: -14.024110794067383
    8. ')' → logprob: -14.524110794067383
    9. ' )' → logprob: -14.774110794067383
    10. 'not' → logprob: -14.774110794067383

Token 12: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6320152878761292
    2. ' >' → logprob: -1.0070152282714844
    3. ' <=' → logprob: -2.8820152282714844
    4. ' <' → logprob: -4.007015228271484
    5. '>' → logprob: -4.507015228271484
    6. '==' → logprob: -4.507015228271484
    7. ' ' → logprob: -5.382015228271484
    8. ' >=' → logprob: -7.257015228271484
    9. '<=' → logprob: -7.882015228271484
    10. '  ' → logprob: -8.382015228271484

Token 13: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10021023452281952
    2. '0' → logprob: -2.350210189819336
    3. ' -' → logprob: -13.475210189819336
    4. '1' → logprob: -14.475210189819336
    5. '  ' → logprob: -15.037710189819336
    6. '-' → logprob: -15.225210189819336
    7. '=' → logprob: -15.662710189819336
    8. '100' → logprob: -16.287710189819336
    9. ' ' → logprob: -16.287710189819336
    10. '<|end|>' → logprob: -16.350210189819336

Token 14: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018185412511229515
    2. ' ' → logprob: -4.018185615539551
    3. '-' → logprob: -10.64318561553955
    4. ' -' → logprob: -12.26818561553955
    5. '1' → logprob: -12.89318561553955
    6. '42' → logprob: -14.01818561553955
    7. '   ' → logprob: -14.26818561553955
    8. '  ' → logprob: -14.26818561553955
    9. '```' → logprob: -14.39318561553955
    10. '4' → logprob: -15.39318561553955

Token 15: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00012773419439326972
    2. ':
' → logprob: -9.875127792358398
    3. '   ' → logprob: -10.125127792358398
    4. '       ' → logprob: -10.625127792358398
    5. ' :' → logprob: -12.000127792358398
    6. ':return' → logprob: -13.125127792358398
    7. '    ' → logprob: -13.500127792358398
    8. ' break' → logprob: -14.250127792358398
    9. '):' → logprob: -14.500127792358398
    10. '      ' → logprob: -15.000127792358398

Token 16: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007218453683890402
    2. '   ' → logprob: -7.7507219314575195
    3. ' break' → logprob: -8.37572193145752
    4. '\n' → logprob: -10.75072193145752
    5. '	break' → logprob: -11.75072193145752
    6. '    ' → logprob: -11.87572193145752
    7. '      ' → logprob: -12.25072193145752
    8. ':' → logprob: -12.25072193145752
    9. '     ' → logprob: -12.50072193145752
    10. '\t' → logprob: -13.25072193145752

Token 17: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.020226046442985535
    2. '       ' → logprob: -4.020226001739502
    3. 'break' (adapté à ' break') → logprob: -6.270226001739502
    4. '   ' → logprob: -10.02022647857666
    5. '\n' → logprob: -10.02022647857666
    6. '	break' → logprob: -10.02022647857666
    7. '_break' → logprob: -10.89522647857666
    8. '```' → logprob: -11.27022647857666
    9. ' \' → logprob: -12.52022647857666
    10. 'Break' → logprob: -13.27022647857666

Token 18: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47208982706069946
    2. '\n' → logprob: -1.3470897674560547
    3. '    
' → logprob: -3.2220897674560547
    4. '\' → logprob: -3.5970897674560547
    5. '```' → logprob: -4.347089767456055
    6. '<|end|>' → logprob: -4.347089767456055
    7. '
' → logprob: -5.097089767456055
    8. '\r' → logprob: -5.472089767456055
    9. ')' → logprob: -5.847089767456055
    10. '#' → logprob: -6.222089767456055

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5674213767051697
    2. '<|end|>' → logprob: -0.9424213767051697
    3. ')' → logprob: -4.1924214363098145
    4. '    
' → logprob: -4.9424214363098145
    5. '\n' → logprob: -5.4424214363098145
    6. '
' → logprob: -5.6924214363098145
    7. '```' → logprob: -5.6924214363098145
    8. '<|end|>' → logprob: -5.9424214363098145
    9. '#' → logprob: -6.0674214363098145
    10. ' ' → logprob: -6.8174214363098145

Token 20: ' gems' (ID: 68945)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00957096740603447
    2. '=' → logprob: -5.509571075439453
    3. '[' → logprob: -6.009571075439453
    4. '_count' → logprob: -7.509571075439453
    5. '   ' → logprob: -7.509571075439453
    6. '_' → logprob: -7.634571075439453
    7. '    ' → logprob: -7.884571075439453
    8. '.' → logprob: -8.509571075439453
    9. ' ' → logprob: -8.509571075439453
    10. 's' → logprob: -8.634571075439453

Token 22: ' set' (ID: 920)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.35471707582473755
    2. ' list' → logprob: -1.6047170162200928
    3. '[]' → logprob: -2.8547170162200928
    4. ' [' → logprob: -4.229717254638672
    5. 'list' → logprob: -4.229717254638672
    6. ' {}' → logprob: -5.354717254638672
    7. '{}' → logprob: -6.104717254638672
    8. ' input' → logprob: -6.604717254638672
    9. '[' → logprob: -6.979717254638672
    10. ' set' → logprob: -7.104717254638672

Token 23: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006310084834694862
    2. '()' → logprob: -5.131309986114502
    3. '([' → logprob: -9.13131046295166
    4. '((' → logprob: -9.75631046295166
    5. '('' → logprob: -9.75631046295166
    6. '(range' → logprob: -10.50631046295166
    7. '([(' → logprob: -10.88131046295166
    8. ' (' → logprob: -11.13131046295166
    9. '([]' → logprob: -11.50631046295166
    10. '(g' → logprob: -11.63131046295166

Token 24: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03763388842344284
    2. '<|end|>' → logprob: -4.412633895874023
    3. ' ' → logprob: -4.787633895874023
    4. '    ' → logprob: -5.037633895874023
    5. ' for' → logprob: -6.162633895874023
    6. 'for' → logprob: -6.162633895874023
    7. '    
' → logprob: -6.287633895874023
    8. ')' → logprob: -6.537633895874023
    9. '  ' → logprob: -7.412633895874023
    10. '(' → logprob: -8.287633895874023

Token 25: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.21836094558238983
    2. ' for' → logprob: -1.8433609008789062
    3. '   ' → logprob: -3.3433609008789062
    4. '	for' → logprob: -6.468360900878906
    5. '<|end|>' → logprob: -7.718360900878906
    6. '    ' → logprob: -8.843360900878906
    7. '\t' → logprob: -9.593360900878906
    8. 'g' → logprob: -9.718360900878906
    9. ' ' → logprob: -9.718360900878906
    10. 's' → logprob: -10.218360900878906

Token 26: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.19093899428844452
    2. '_' → logprob: -2.315938949584961
    3. ' i' → logprob: -2.690938949584961
    4. ' ' → logprob: -4.940938949584961
    5. ' range' → logprob: -9.315938949584961
    6. 'i' → logprob: -9.690938949584961
    7. 'range' → logprob: -11.815938949584961
    8. ' I' → logprob: -12.065938949584961
    9. ' ' → logprob: -12.565938949584961
    10. ' ‌' → logprob: -12.565938949584961

Token 27: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026345815509557724
    2. 'in' → logprob: -3.776345729827881
    3. ' ' → logprob: -6.276345729827881
    4. ' i' → logprob: -7.401345729827881
    5. 'i' → logprob: -8.276346206665039
    6. ' _' → logprob: -8.651346206665039
    7. '_' → logprob: -9.151346206665039
    8. '  ' → logprob: -10.526346206665039
    9. 'range' → logprob: -11.651346206665039
    10. 'n' → logprob: -12.401346206665039

Token 28: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01298032607883215
    2. ' range' → logprob: -4.3879804611206055
    3. 'g' → logprob: -8.012980461120605
    4. 'input' → logprob: -10.262980461120605
    5. 'put' → logprob: -10.762980461120605
    6. 'rang' → logprob: -11.262980461120605
    7. '[' → logprob: -11.512980461120605
    8. 'ran' → logprob: -11.762980461120605
    9. '	range' → logprob: -11.887980461120605
    10. ')' → logprob: -12.137980461120605

Token 29: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.39614981412887573
    2. '(' → logprob: -1.3961498737335205
    3. ' N' → logprob: -2.7711498737335205
    4. ' (' → logprob: -4.146149635314941
    5. 'N' → logprob: -7.271149635314941
    6. '(n' → logprob: -8.646149635314941
    7. '(int' → logprob: -9.396149635314941
    8. ' ' → logprob: -9.521149635314941
    9. '()' → logprob: -10.396149635314941
    10. '   ' → logprob: -10.521149635314941

Token 30: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012210107408463955
    2. ')' → logprob: -4.637209892272949
    3. ' ):' → logprob: -6.387209892272949
    4. ':' → logprob: -7.887209892272949
    5. '   ' → logprob: -8.51220989227295
    6. '):
' → logprob: -9.38720989227295
    7. ' )' → logprob: -9.76220989227295
    8. ',' → logprob: -11.13720989227295
    9. ' ' → logprob: -11.76220989227295
    10. '():' → logprob: -12.38720989227295

Token 31: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2821457087993622
    2. '    ' → logprob: -1.7821457386016846
    3. ' ' → logprob: -3.4071457386016846
    4. '   ' → logprob: -3.5321457386016846
    5. '<|end|>' → logprob: -4.7821455001831055
    6. '        ' → logprob: -6.7821455001831055
    7. ' gems' → logprob: -6.9071455001831055
    8. ' g' → logprob: -7.4071455001831055
    9. ' s' → logprob: -7.4071455001831055
    10. 's' → logprob: -7.7821455001831055

Token 32: ' x' (ID: 1215)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.34600213170051575
    2. ' gems' → logprob: -1.5960021018981934
    3. ' g' → logprob: -4.096002101898193
    4. ' gem' → logprob: -4.221002101898193
    5. 'gem' → logprob: -4.221002101898193
    6. ' input' → logprob: -4.471002101898193
    7. '   ' → logprob: -4.971002101898193
    8. 'input' → logprob: -5.096002101898193
    9. ' line' → logprob: -5.596002101898193
    10. 's' → logprob: -5.971002101898193

Token 33: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.29857251048088074
    2. ',' → logprob: -1.4235725402832031
    3. '=' → logprob: -4.298572540283203
    4. ',y' → logprob: -6.798572540283203
    5. '=input' → logprob: -7.173572540283203
    6. '=int' → logprob: -7.298572540283203
    7. ' ,' → logprob: -7.673572540283203
    8. ',input' → logprob: -8.798572540283203
    9. 'y' → logprob: -9.048572540283203
    10. 'input' → logprob: -9.548572540283203

Token 34: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.38792526721954346
    2. ' y' → logprob: -1.1379252672195435
    3. ' ' → logprob: -6.887925148010254
    4. '	y' → logprob: -11.137925148010254
    5. '_y' → logprob: -12.137925148010254
    6. '=' → logprob: -12.512925148010254
    7. '_' → logprob: -12.887925148010254
    8. 'space' → logprob: -13.387925148010254
    9. '<|end|>' → logprob: -13.887925148010254
    10. 'a' → logprob: -14.512925148010254

Token 35: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14490674436092377
    2. '=' → logprob: -2.019906759262085
    3. ',' → logprob: -6.144906520843506
    4. ')' → logprob: -10.394906997680664
    5. ' ' → logprob: -10.769906997680664
    6. '<|end|>' → logprob: -11.019906997680664
    7. '   ' → logprob: -12.394906997680664
    8. '=int' → logprob: -12.769906997680664
    9. ' ,' → logprob: -13.019906997680664
    10. '    ' → logprob: -13.644906997680664

Token 36: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0024279789067804813
    2. 'map' → logprob: -6.25242805480957
    3. ' input' → logprob: -7.62742805480957
    4. 'input' → logprob: -11.62742805480957
    5. ' ' → logprob: -13.75242805480957
    6. '	map' → logprob: -14.00242805480957
    7. ' mapa' → logprob: -14.62742805480957
    8. ' list' → logprob: -14.87742805480957
    9. '   ' → logprob: -15.25242805480957
    10. ' ' → logprob: -16.25242805480957

Token 37: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.003003492718562484
    2. '(' → logprob: -5.8780035972595215
    3. '(input' → logprob: -8.628003120422363
    4. '<int' → logprob: -12.128003120422363
    5. '(str' → logprob: -12.253003120422363
    6. 'int' → logprob: -12.503003120422363
    7. '(list' → logprob: -13.628003120422363
    8. '[int' → logprob: -13.878003120422363
    9. ' (' → logprob: -14.003003120422363
    10. '(tuple' → logprob: -14.753003120422363

Token 38: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.3182491064071655
    2. ',' → logprob: -1.3182491064071655
    3. 'input' → logprob: -5.693249225616455
    4. '(input' → logprob: -6.568249225616455
    5. ' input' → logprob: -9.568248748779297
    6. ' ,' → logprob: -9.818248748779297
    7. '   ' → logprob: -10.568248748779297
    8. ')' → logprob: -10.568248748779297
    9. '=input' → logprob: -11.818248748779297
    10. '(' → logprob: -11.818248748779297

Token 39: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.281158983707428
    2. 'input' → logprob: -1.4061589241027832
    3. ')' → logprob: -12.531159400939941
    4. ' ' → logprob: -13.781159400939941
    5. '	input' → logprob: -13.781159400939941
    6. '=input' → logprob: -13.781159400939941
    7. ' )' → logprob: -13.906159400939941
    8. ',input' → logprob: -14.781159400939941
    9. '(input' → logprob: -15.281159400939941
    10. ' ' → logprob: -15.406159400939941

Token 40: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.7432603272027336e-06
    2. '()' → logprob: -13.375001907348633
    3. ' ().' → logprob: -16.125001907348633
    4. ')' → logprob: -18.000001907348633
    5. '(' → logprob: -18.000001907348633
    6. '()
' → logprob: -18.125001907348633
    7. '())' → logprob: -18.250001907348633
    8. '.split' → logprob: -18.750001907348633
    9. 'split' → logprob: -19.750001907348633
    10. '   ' → logprob: -20.125001907348633

Token 41: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00016861737822182477
    2. 'strip' → logprob: -8.750168800354004
    3. 'rstrip' → logprob: -12.000168800354004
    4. ' split' → logprob: -13.375168800354004
    5. ')' → logprob: -13.625168800354004
    6. '(split' → logprob: -14.125168800354004
    7. ' ' → logprob: -15.875168800354004
    8. 's' → logprob: -16.250167846679688
    9. 'spl' → logprob: -16.750167846679688
    10. '().' → logprob: -16.875167846679688

Token 42: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.026830580085515976
    2. '()))' → logprob: -3.9018306732177734
    3. ')' → logprob: -5.776830673217773
    4. '()' → logprob: -6.026830673217773
    5. '))' → logprob: -7.526830673217773
    6. '())
' → logprob: -8.776830673217773
    7. '()))
' → logprob: -10.651830673217773
    8. '('' → logprob: -11.276830673217773
    9. '(' → logprob: -11.276830673217773
    10. '())))' → logprob: -13.401830673217773

Token 43: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17592380940914154
    2. ')' → logprob: -1.9259238243103027
    3. '   ' → logprob: -5.425923824310303
    4. '<|end|>' → logprob: -5.550923824310303
    5. 'g' → logprob: -6.300923824310303
    6. '        
' → logprob: -6.675923824310303
    7. ',' → logprob: -6.800923824310303
    8. ' )' → logprob: -7.175923824310303
    9. '
' → logprob: -8.050923347473145
    10. ')
' → logprob: -8.425923347473145

Token 44: ' gems' (ID: 68945)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.4306875467300415
    2. ' gems' → logprob: -1.0556875467300415
    3. ' g' → logprob: -7.555687427520752
    4. ' if' → logprob: -7.805687427520752
    5. 'gem' → logprob: -8.30568790435791
    6. 's' → logprob: -8.55568790435791
    7. '   ' → logprob: -8.68068790435791
    8. ' gem' → logprob: -9.43068790435791
    9. '	g' → logprob: -9.80568790435791
    10. 'x' → logprob: -9.93068790435791

Token 45: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.2520228624343872
    2. '.' → logprob: -1.5020228624343872
    3. ' .' → logprob: -10.127022743225098
    4. '.update' → logprob: -10.377022743225098
    5. '.setdefault' → logprob: -11.127022743225098
    6. '.append' → logprob: -12.252022743225098
    7. '.Add' → logprob: -14.127022743225098
    8. ').' → logprob: -15.127022743225098
    9. '.=' → logprob: -15.252022743225098
    10. '.insert' → logprob: -15.252022743225098

Token 46: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.04867037013173103
    2. '(' → logprob: -3.0486702919006348
    3. '(x' → logprob: -9.798670768737793
    4. ' (' → logprob: -11.173670768737793
    5. ' ((' → logprob: -11.923670768737793
    6. '(
' → logprob: -13.173670768737793
    7. ' ' → logprob: -13.173670768737793
    8. '(y' → logprob: -14.048670768737793
    9. '(tuple' → logprob: -14.048670768737793
    10. '(('' → logprob: -14.923670768737793

Token 47: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00014060820103622973
    2. ' x' → logprob: -8.875140190124512
    3. ' ' → logprob: -14.500140190124512
    4. '   ' → logprob: -16.125141143798828
    5. ')x' → logprob: -16.875141143798828
    6. ')' → logprob: -17.000141143798828
    7. '    ' → logprob: -17.375141143798828
    8. 'y' → logprob: -17.625141143798828
    9. '(x' → logprob: -17.750141143798828
    10. '  ' → logprob: -18.250141143798828

Token 48: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006799076218158007
    2. ',y' → logprob: -7.500679969787598
    3. ' ,' → logprob: -9.000679969787598
    4. ',
' → logprob: -13.500679969787598
    5. '<|end|>' → logprob: -15.125679969787598
    6. '‌,' → logprob: -15.250679969787598
    7. '`,' → logprob: -15.500679969787598
    8. ' ' → logprob: -15.625679969787598
    9. '',' → logprob: -15.750679969787598
    10. '   ' → logprob: -15.750679969787598

Token 49: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.2519347369670868
    2. ' y' → logprob: -1.5019347667694092
    3. ' ' → logprob: -12.751935005187988
    4. ')y' → logprob: -13.876935005187988
    5. '	y' → logprob: -14.501935005187988
    6. '    ' → logprob: -14.626935005187988
    7. '<|end|>' → logprob: -14.876935005187988
    8. ')' → logprob: -15.126935005187988
    9. ' ' → logprob: -17.001934051513672
    10. '   ' → logprob: -17.251934051513672

Token 50: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.004227866418659687
    2. ')' → logprob: -5.504227638244629
    3. '))
' → logprob: -8.879227638244629
    4. ')))' → logprob: -11.879227638244629
    5. ' ))' → logprob: -13.629227638244629
    6. ')
' → logprob: -14.129227638244629
    7. '),' → logprob: -14.754227638244629
    8. '))

' → logprob: -15.254227638244629
    9. '   ' → logprob: -15.504227638244629
    10. '))
' → logprob: -16.129228591918945

Token 51: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18491846323013306
    2. '<|end|>' → logprob: -2.1849184036254883
    3. '
' → logprob: -3.8099184036254883
    4. '    
' → logprob: -4.309918403625488
    5. 'print' → logprob: -5.434918403625488
    6. ')' → logprob: -5.559918403625488
    7. '    ' → logprob: -6.559918403625488
    8. '#' → logprob: -6.809918403625488
    9. '  
' → logprob: -6.934918403625488
    10. ' ' → logprob: -6.934918403625488

Token 52: ' M' (ID: 391)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25953149795532227
    2. 'print' → logprob: -2.8845314979553223
    3. '    
' → logprob: -3.6345314979553223
    4. 'count' → logprob: -3.7595314979553223
    5. 'common' → logprob: -4.384531497955322
    6. 'inter' → logprob: -4.384531497955322
    7. '    ' → logprob: -4.634531497955322
    8. 's' → logprob: -4.759531497955322
    9. 'result' → logprob: -4.884531497955322
    10. ' if' → logprob: -5.259531497955322

Token 53: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005933297798037529
    2. '=' → logprob: -5.1309332847595215
    3. ' ' → logprob: -13.63093376159668
    4. '   ' → logprob: -13.88093376159668
    5. '=int' → logprob: -13.88093376159668
    6. '    ' → logprob: -14.75593376159668
    7. '  ' → logprob: -14.88093376159668
    8. ')' → logprob: -15.63093376159668
    9. ',' → logprob: -16.00593376159668
    10. '>' → logprob: -16.94343376159668

Token 54: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.2254391610622406
    2. 'int' → logprob: -1.600439190864563
    3. '=int' → logprob: -10.975439071655273
    4. '[int' → logprob: -12.350439071655273
    5. '(int' → logprob: -13.225439071655273
    6. '<int' → logprob: -13.350439071655273
    7. '   ' → logprob: -14.725439071655273
    8. '	int' → logprob: -14.725439071655273
    9. ':int' → logprob: -15.100439071655273
    10. '    ' → logprob: -16.100439071655273

Token 55: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -1.676292231422849e-05
    2. '(' → logprob: -11.125017166137695
    3. 'input' → logprob: -13.750017166137695
    4. ' (' → logprob: -14.500017166137695
    5. '=input' → logprob: -15.500017166137695
    6. ' input' → logprob: -17.000017166137695
    7. ',input' → logprob: -17.625017166137695
    8. '()' → logprob: -18.125017166137695
    9. '<input' → logprob: -18.375017166137695
    10. '[input' → logprob: -19.500017166137695

Token 56: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.17786313593387604
    2. '()' → logprob: -1.9278631210327148
    3. ')' → logprob: -4.052863121032715
    4. '())
' → logprob: -9.802863121032715
    5. '()
' → logprob: -10.052863121032715
    6. '();)' → logprob: -12.052863121032715
    7. ' ())' → logprob: -12.677863121032715
    8. '(' → logprob: -14.302863121032715
    9. ' )' → logprob: -14.677863121032715
    10. '   ' → logprob: -14.927863121032715

Token 57: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27195313572883606
    2. '<|end|>' → logprob: -1.8969531059265137
    3. ' for' → logprob: -4.396953105926514
    4. 'for' → logprob: -4.521953105926514
    5. 'shift' → logprob: -5.146953105926514
    6. 'delta' → logprob: -5.271953105926514
    7. 'moves' → logprob: -5.271953105926514
    8. 'transform' → logprob: -5.646953105926514
    9. '    ' → logprob: -5.646953105926514
    10. 'points' → logprob: -5.896953105926514

Token 58: ' x' (ID: 1215)
  Prédit: 'common'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'common' → logprob: -1.648071527481079
    2. 'for' → logprob: -2.398071527481079
    3. 'matches' → logprob: -2.773071527481079
    4. 'count' → logprob: -2.773071527481079
    5. 'found' → logprob: -3.023071527481079
    6. 'valid' → logprob: -3.273071527481079
    7. '   ' → logprob: -3.273071527481079
    8. 'shift' → logprob: -3.398071527481079
    9. 'offset' → logprob: -3.523071527481079
    10. 'moves' → logprob: -3.523071527481079

Token 59: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7969362139701843
    2. 's' → logprob: -0.7969362139701843
    3. '0' → logprob: -4.04693603515625
    4. '_,' → logprob: -4.54693603515625
    5. 'min' → logprob: -4.79693603515625
    6. '1' → logprob: -4.79693603515625
    7. '_shift' → logprob: -4.79693603515625
    8. 'o' → logprob: -4.92193603515625
    9. 'ys' → logprob: -5.42193603515625
    10. 'y' → logprob: -5.54693603515625

Token 60: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.17980079352855682
    2. ' y' → logprob: -1.8048007488250732
    3. ' ' → logprob: -11.304800987243652
    4. '<|end|>' → logprob: -11.929800987243652
    5. '	y' → logprob: -12.054800987243652
    6. ' =' → logprob: -12.304800987243652
    7. '_y' → logprob: -12.429800987243652
    8. ',' → logprob: -12.429800987243652
    9. '    ' → logprob: -12.554800987243652
    10. '   ' → logprob: -12.679800987243652

Token 61: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.43530839681625366
    2. ',' → logprob: -1.3103084564208984
    3. '=' → logprob: -2.9353084564208984
    4. ' +=' → logprob: -3.6853084564208984
    5. ' ,' → logprob: -6.060308456420898
    6. ' ' → logprob: -7.060308456420898
    7. '+=' → logprob: -7.560308456420898
    8. ' -=' → logprob: -7.685308456420898
    9. '2' → logprob: -9.060308456420898
    10. '+' → logprob: -9.185308456420898

Token 62: ' ' (ID: 220)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.24370741844177246
    2. 'map' → logprob: -1.9937074184417725
    3. '0' → logprob: -2.9937074184417725
    4. ' ' → logprob: -3.6187074184417725
    5. ' list' → logprob: -6.993707656860352
    6. ' gems' → logprob: -6.993707656860352
    7. 'list' → logprob: -7.743707656860352
    8. '1' → logprob: -8.118707656860352
    9. '	map' → logprob: -9.368707656860352
    10. 'g' → logprob: -9.618707656860352

Token 63: '10' (ID: 702)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.09809384495019913
    2. '0' → logprob: -2.4730937480926514
    3. ' map' → logprob: -4.9730939865112305
    4. 'list' → logprob: -7.0980939865112305
    5. 'g' → logprob: -7.5980939865112305
    6. ' ' → logprob: -8.22309398651123
    7. '1' → logprob: -8.47309398651123
    8. 'int' → logprob: -9.72309398651123
    9. '[' → logprob: -9.97309398651123
    10. 'x' → logprob: -10.34809398651123

Token 64: ',' (ID: 11)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011226310394704342
    2. '4' → logprob: -5.761226177215576
    3. '5' → logprob: -6.511226177215576
    4. ' ' → logprob: -6.761226177215576
    5. '**' → logprob: -7.011226177215576
    6. '7' → logprob: -7.136226177215576
    7. '-' → logprob: -7.136226177215576
    8. '00' → logprob: -7.511226177215576
    9. '1' → logprob: -7.761226177215576
    10. ' -' → logprob: -8.011226654052734

Token 65: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.08568860590457916
    2. '0' → logprob: -3.210688591003418
    3. ' ' → logprob: -3.460688591003418
    4. '-' → logprob: -4.960688591003418
    5. '20' → logprob: -6.960688591003418
    6. '5' → logprob: -7.335688591003418
    7. '1' → logprob: -7.460688591003418
    8. '9' → logprob: -7.960688591003418
    9. ' -' → logprob: -8.210688591003418
    10. '100' → logprob: -8.835688591003418

Token 66: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.02589126117527485
    2. '0' → logprob: -3.9008913040161133
    3. '-' → logprob: -6.775891304016113
    4. '1' → logprob: -7.025891304016113
    5. ' ' → logprob: -7.150891304016113
    6. '5' → logprob: -7.400891304016113
    7. '20' → logprob: -7.525891304016113
    8. '9' → logprob: -7.525891304016113
    9. '100' → logprob: -8.025891304016113
    10. '4' → logprob: -9.400891304016113

Token 67: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 68: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 69: ' collected' (ID: 20480)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1383335143327713
    2. ' for' → logprob: -2.388333559036255
    3. '   ' → logprob: -5.138333320617676
    4. '0' → logprob: -5.388333320617676
    5. 'while' → logprob: -5.388333320617676
    6. '+' → logprob: -5.888333320617676
    7. ')' → logprob: -5.888333320617676
    8. '<|end|>' → logprob: -6.263333320617676
    9. 'x' → logprob: -6.513333320617676
    10. '=' → logprob: -6.513333320617676

Token 70: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.025459032505750656
    2. '=' → logprob: -4.275458812713623
    3. '_g' → logprob: -4.775458812713623
    4. '_' → logprob: -6.525458812713623
    5. 's' → logprob: -7.525458812713623
    6. 'G' → logprob: -8.400459289550781
    7. 'g' → logprob: -9.400459289550781
    8. '_tokens' → logprob: -9.400459289550781
    9. ' ' → logprob: -9.650459289550781
    10. '_positions' → logprob: -9.900459289550781

Token 71: ' set' (ID: 920)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5208415985107422
    2. 'set' → logprob: -1.0208415985107422
    3. ' set' → logprob: -3.645841598510742
    4. ' ' → logprob: -4.020841598510742
    5. '[]' → logprob: -7.270841598510742
    6. '{' → logprob: -8.145841598510742
    7. ' []' → logprob: -8.270841598510742
    8. 'False' → logprob: -8.770841598510742
    9. '{}' → logprob: -9.395841598510742
    10. ' True' → logprob: -10.270841598510742

Token 72: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -4.060365608893335e-05
    2. '(' → logprob: -10.500041007995605
    3. ' ()' → logprob: -12.000041007995605
    4. '(),' → logprob: -14.125041007995605
    5. '()

' → logprob: -14.250041007995605
    6. '()<' → logprob: -14.250041007995605
    7. '()
' → logprob: -14.375041007995605
    8. '()]' → logprob: -14.375041007995605
    9. '()</' → logprob: -14.375041007995605
    10. '()>' → logprob: -14.500041007995605

Token 73: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7343283891677856
    2. '<|end|>' → logprob: -0.7343283891677856
    3. '\' → logprob: -5.109328269958496
    4. ' ' → logprob: -5.234328269958496
    5. '    
' → logprob: -5.484328269958496
    6. '\n' → logprob: -5.484328269958496
    7. '<|end|>' → logprob: -5.609328269958496
    8. 'for' → logprob: -5.609328269958496
    9. ' for' → logprob: -6.109328269958496
    10. '  ' → logprob: -6.484328269958496

Token 74: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2485605627298355
    2. ' for' → logprob: -1.6235605478286743
    3. '<|end|>' → logprob: -4.373560428619385
    4. ' ' → logprob: -5.873560428619385
    5. '\n' → logprob: -6.123560428619385
    6. '   ' → logprob: -6.623560428619385
    7. '\' → logprob: -7.373560428619385
    8. '.' → logprob: -7.998560428619385
    9. 'while' → logprob: -8.123560905456543
    10. 's' → logprob: -8.123560905456543

Token 75: ' (' (ID: 350)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.03514567017555237
    2. 'M' → logprob: -4.9101457595825195
    3. ' collected' → logprob: -4.9101457595825195
    4. ' N' → logprob: -5.4101457595825195
    5. ' ' → logprob: -5.5351457595825195
    6. ' x' → logprob: -5.6601457595825195
    7. ' (' → logprob: -5.9101457595825195
    8. ' not' → logprob: -6.6601457595825195
    9. 'x' → logprob: -7.2851457595825195
    10. ' len' → logprob: -7.4101457595825195

Token 76: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.04714600369334221
    2. ' x' → logprob: -3.2971460819244385
    3. '10' → logprob: -5.797145843505859
    4. '0' → logprob: -5.922145843505859
    5. '(x' → logprob: -6.922145843505859
    6. ' ' → logprob: -7.047145843505859
    7. '(' → logprob: -7.547145843505859
    8. '   ' → logprob: -8.17214584350586
    9. ' (' → logprob: -8.17214584350586
    10. '1' → logprob: -8.54714584350586

Token 77: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003155625017825514
    2. ' ,' → logprob: -9.12531566619873
    3. ',y' → logprob: -9.75031566619873
    4. ' in' → logprob: -10.00031566619873
    5. ',)' → logprob: -10.37531566619873
    6. ')' → logprob: -10.75031566619873
    7. '+' → logprob: -11.00031566619873
    8. '<|end|>' → logprob: -12.12531566619873
    9. 'in' → logprob: -12.50031566619873
    10. '-' → logprob: -12.75031566619873

Token 78: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00881677120923996
    2. ' y' → logprob: -4.758816719055176
    3. '10' → logprob: -9.133816719055176
    4. ' ' → logprob: -9.758816719055176
    5. ')' → logprob: -11.008816719055176
    6. '   ' → logprob: -12.258816719055176
    7. '<|end|>' → logprob: -12.383816719055176
    8. '  ' → logprob: -12.883816719055176
    9. ')y' → logprob: -13.258816719055176
    10. '    ' → logprob: -13.383816719055176

Token 79: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006957019679248333
    2. ' in' → logprob: -5.256957054138184
    3. ' )' → logprob: -6.506957054138184
    4. 'in' → logprob: -8.506957054138184
    5. ' not' → logprob: -11.381957054138184
    6. ' ' → logprob: -12.131957054138184
    7. 'not' → logprob: -12.631957054138184
    8. '   ' → logprob: -13.631957054138184
    9. ')==' → logprob: -14.006957054138184
    10. '<|end|>' → logprob: -14.694457054138184

Token 80: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0021447893232107162
    2. 'in' → logprob: -7.002144813537598
    3. ' ' → logprob: -7.127144813537598
    4. ' not' → logprob: -7.877144813537598
    5. '<|end|>' → logprob: -10.002144813537598
    6. ' ' → logprob: -14.002144813537598
    7. 'not' → logprob: -14.127144813537598
    8. ' i' → logprob: -14.377144813537598
    9. ')' → logprob: -14.377144813537598
    10. ' n' → logprob: -14.752144813537598

Token 81: ' gems' (ID: 68945)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.05503281205892563
    2. ' gems' → logprob: -2.930032730102539
    3. ' g' → logprob: -9.305032730102539
    4. '<|end|>' → logprob: -10.680032730102539
    5. '	g' → logprob: -11.430032730102539
    6. 'gem' → logprob: -12.305032730102539
    7. ' ' → logprob: -12.680032730102539
    8. 's' → logprob: -12.805032730102539
    9. '_g' → logprob: -12.930032730102539
    10. ' germs' → logprob: -13.805032730102539

Token 82: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006182014476507902
    2. '       ' → logprob: -5.8811821937561035
    3. ':
' → logprob: -6.0061821937561035
    4. '):' → logprob: -7.7561821937561035
    5. '   ' → logprob: -8.256181716918945
    6. '.' → logprob: -9.881181716918945
    7. ' and' → logprob: -9.881181716918945
    8. ',' → logprob: -10.381181716918945
    9. ')' → logprob: -11.006181716918945
    10. ' collected' → logprob: -11.131181716918945

Token 83: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0182123351842165
    2. ' collected' → logprob: -4.89321231842041
    3. '
' → logprob: -5.51821231842041
    4. '   ' → logprob: -5.64321231842041
    5. '<|end|>' → logprob: -6.89321231842041
    6. '    
' → logprob: -7.01821231842041
    7. '        
' → logprob: -7.64321231842041
    8. 'col' → logprob: -8.39321231842041
    9. ' 
' → logprob: -9.51821231842041
    10. '	col' → logprob: -10.39321231842041

Token 84: ' collected' (ID: 20480)
  Prédit: ' collected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collected' → logprob: -0.25299355387687683
    2. 'col' → logprob: -1.5029935836791992
    3. '
' → logprob: -8.1279935836792
    4. ' col' → logprob: -8.5029935836792
    5. '   ' → logprob: -8.7529935836792
    6. ' 
' → logprob: -9.0029935836792
    7. '	col' → logprob: -9.5029935836792
    8. '    
' → logprob: -9.8779935836792
    9. '_col' → logprob: -10.0029935836792
    10. ' ' → logprob: -10.6279935836792

Token 85: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.31331825256347656
    2. '.' → logprob: -1.3133182525634766
    3. ' .' → logprob: -10.438318252563477
    4. '.update' → logprob: -11.188318252563477
    5. '.remove' → logprob: -12.188318252563477
    6. '.union' → logprob: -13.313318252563477
    7. '<|end|>' → logprob: -13.563318252563477
    8. 'add' → logprob: -13.688318252563477
    9. '.setdefault' → logprob: -13.813318252563477
    10. '.append' → logprob: -13.938318252563477

Token 86: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00010950337309623137
    2. '(' → logprob: -9.250109672546387
    3. ' ((' → logprob: -11.500109672546387
    4. ' ' → logprob: -12.875109672546387
    5. '(((' → logprob: -15.125109672546387
    6. ' (' → logprob: -15.500109672546387
    7. '(x' → logprob: -16.12510871887207
    8. '(
' → logprob: -17.12510871887207
    9. '  ' → logprob: -17.50010871887207
    10. '   ' → logprob: -17.62510871887207

Token 87: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.978233846486546e-05
    2. ' x' → logprob: -10.625049591064453
    3. '10' → logprob: -10.625049591064453
    4. ' ' → logprob: -14.375049591064453
    5. '   ' → logprob: -15.125049591064453
    6. '(x' → logprob: -16.375049591064453
    7. '0' → logprob: -16.750049591064453
    8. '    ' → logprob: -16.875049591064453
    9. '1' → logprob: -17.250049591064453
    10. '  ' → logprob: -17.375049591064453

Token 88: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.6100132496794686e-05
    2. '<|end|>' → logprob: -10.750056266784668
    3. ',y' → logprob: -11.625056266784668
    4. ' ,' → logprob: -11.750056266784668
    5. ')' → logprob: -11.750056266784668
    6. ',x' → logprob: -13.625056266784668
    7. ',
' → logprob: -13.875056266784668
    8. '‌,' → logprob: -13.875056266784668
    9. '1' → logprob: -14.000056266784668
    10. '0' → logprob: -14.000056266784668

Token 89: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.016039881855249405
    2. ' y' → logprob: -4.141039848327637
    3. '10' → logprob: -13.016039848327637
    4. '<|end|>' → logprob: -13.891039848327637
    5. ' ' → logprob: -14.266039848327637
    6. ')' → logprob: -14.516039848327637
    7. ')y' → logprob: -14.516039848327637
    8. '9' → logprob: -15.266039848327637
    9. '0' → logprob: -15.766039848327637
    10. 'x' → logprob: -15.891039848327637

Token 90: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015061709564179182
    2. '))' → logprob: -6.501506328582764
    3. ')
' → logprob: -12.626505851745605
    4. '   ' → logprob: -15.876505851745605
    5. ' )' → logprob: -16.126506805419922
    6. ')))' → logprob: -16.126506805419922
    7. ')}' → logprob: -16.751506805419922
    8. '       ' → logprob: -16.751506805419922
    9. '),' → logprob: -18.626506805419922
    10. '))
' → logprob: -18.876506805419922

Token 91: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6393060088157654
    2. '   ' → logprob: -1.0143060684204102
    3. ' for' → logprob: -2.76430606842041
    4. '<|end|>' → logprob: -3.26430606842041
    5. '\n' → logprob: -6.26430606842041
    6. 'while' → logprob: -6.76430606842041
    7. '    
' → logprob: -7.13930606842041
    8. '\' → logprob: -7.51430606842041
    9. '  ' → logprob: -7.51430606842041
    10. '
' → logprob: -7.63930606842041

Token 92: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.018152287229895592
    2. ' for' → logprob: -4.268152236938477
    3. '   ' → logprob: -5.893152236938477
    4. 'while' → logprob: -6.768152236938477
    5. ' while' → logprob: -11.268152236938477
    6. '	for' → logprob: -11.393152236938477
    7. 'dire' → logprob: -11.643152236938477
    8. 'dx' → logprob: -12.018152236938477
    9. 'direction' → logprob: -12.143152236938477
    10. '    
' → logprob: -12.268152236938477

Token 93: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4741806983947754
    2. ' _' → logprob: -0.9741806983947754
    3. ' i' → logprob: -9.224180221557617
    4. ' in' → logprob: -13.724180221557617
    5. ' ' → logprob: -13.724180221557617
    6. '_i' → logprob: -13.849180221557617
    7. ' ' → logprob: -14.099180221557617
    8. 'i' → logprob: -14.224180221557617
    9. ' __' → logprob: -15.724180221557617
    10. ' step' → logprob: -16.599180221557617

Token 94: ' in' (ID: 306)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8059163093566895
    2. ' _' → logprob: -0.9309163093566895
    3. ' in' → logprob: -1.9309163093566895
    4. ' range' → logprob: -4.9309163093566895
    5. '_' → logprob: -5.9309163093566895
    6. '  ' → logprob: -6.3059163093566895
    7. ' space' → logprob: -7.9309163093566895
    8. ' ```' → logprob: -8.055915832519531
    9. ' ' → logprob: -8.180915832519531
    10. ' __' → logprob: -8.430915832519531

Token 95: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.038108162581920624
    2. 'range' → logprob: -3.2881081104278564
    3. ' ' → logprob: -10.163107872009277
    4. ' xrange' → logprob: -11.288107872009277
    5. '(range' → logprob: -12.038107872009277
    6. '	range' → logprob: -12.913107872009277
    7. 'r' → logprob: -13.913107872009277
    8. ' ran' → logprob: -13.913107872009277
    9. ' rang' → logprob: -14.288107872009277
    10. 'rang' → logprob: -14.288107872009277

Token 96: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.0015047440538182855
    2. '(' → logprob: -6.501504898071289
    3. ' (' → logprob: -13.001504898071289
    4. ' M' → logprob: -17.25150489807129
    5. '(
' → logprob: -17.37650489807129
    6. '(m' → logprob: -17.37650489807129
    7. 'M' → logprob: -17.37650489807129
    8. '()' → logprob: -19.00150489807129
    9. '(S' → logprob: -19.00150489807129
    10. '(N' → logprob: -19.50150489807129

Token 97: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.015846896916627884
    2. ':' → logprob: -4.2658467292785645
    3. '):
' → logprob: -6.5158467292785645
    4. ')' → logprob: -9.640847206115723
    5. '   ' → logprob: -9.890847206115723
    6. '+' → logprob: -10.140847206115723
    7. ' ):' → logprob: -10.890847206115723
    8. ':
' → logprob: -12.390847206115723
    9. ',' → logprob: -12.640847206115723
    10. '+:' → logprob: -12.765847206115723

Token 98: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11282410472631454
    2. '       ' → logprob: -2.3628242015838623
    3. '<|end|>' → logprob: -4.862823963165283
    4. ',' → logprob: -6.612823963165283
    5. ':' → logprob: -6.737823963165283
    6. ' ' → logprob: -7.487823963165283
    7. ' s' → logprob: -7.862823963165283
    8. '<|end|>' → logprob: -7.987823963165283
    9. '    ' → logprob: -8.737824440002441
    10. 's' → logprob: -8.987824440002441

Token 99: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.5383852124214172
    2. 'd' (adapté à ' d') → logprob: -1.2883851528167725
    3. ' move' → logprob: -3.1633851528167725
    4. ' c' → logprob: -3.5383851528167725
    5. ' dx' → logprob: -3.9133851528167725
    6. 'move' → logprob: -4.538385391235352
    7. 'c' → logprob: -4.663385391235352
    8. ' command' → logprob: -5.288385391235352
    9. 'dx' → logprob: -5.413385391235352
    10. 'cmd' → logprob: -5.413385391235352

Token 100: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3112339377403259
    2. 'irection' → logprob: -1.6862339973449707
    3. 'ir' → logprob: -3.0612339973449707
    4. '=' → logprob: -3.4362339973449707
    5. 'irections' → logprob: -6.436233997344971
    6. 'ire' → logprob: -7.436233997344971
    7. 'irect' → logprob: -8.186233520507812
    8. ' ' → logprob: -8.311233520507812
    9. ',' → logprob: -8.561233520507812
    10. 'IRECTION' → logprob: -9.061233520507812

Token 101: ' l' (ID: 305)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.37391117215156555
    2. ' s' → logprob: -2.498911142349243
    3. 's' → logprob: -3.248911142349243
    4. '_' → logprob: -3.248911142349243
    5. ' =' → logprob: -3.248911142349243
    6. ' l' → logprob: -3.623911142349243
    7. ' _' → logprob: -3.623911142349243
    8. '=' → logprob: -3.748911142349243
    9. ' k' → logprob: -4.998911380767822
    10. '_=' → logprob: -5.123911380767822

Token 102: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519468665122986
    2. '=' → logprob: -1.5019469261169434
    3. 'ength' → logprob: -11.751946449279785
    4. ' ' → logprob: -12.376946449279785
    5. ',' → logprob: -13.501946449279785
    6. ')' → logprob: -14.251946449279785
    7. '=int' → logprob: -14.376946449279785
    8. '=input' → logprob: -14.501946449279785
    9. '=line' → logprob: -14.751946449279785
    10. 'en' → logprob: -15.376946449279785

Token 103: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.16147790849208832
    2. ' input' → logprob: -1.9114779233932495
    3. 'map' → logprob: -6.911478042602539
    4. ' map' → logprob: -8.411478042602539
    5. ' ' → logprob: -11.161478042602539
    6. '=input' → logprob: -11.911478042602539
    7. '(input' → logprob: -12.161478042602539
    8. '[input' → logprob: -13.036478042602539
    9. '	input' → logprob: -13.536478042602539
    10. ',input' → logprob: -13.661478042602539

Token 104: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.01342738326638937
    2. '(' → logprob: -5.013427257537842
    3. '()' → logprob: -5.013427257537842
    4. '('' → logprob: -10.513427734375
    5. '.' → logprob: -12.888427734375
    6. '()
' → logprob: -13.388427734375
    7. '("("' → logprob: -13.513427734375
    8. ' ().' → logprob: -13.638427734375
    9. '("' → logprob: -13.763427734375
    10. ')' → logprob: -13.888427734375

Token 105: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.8889261304575484e-06
    2. 'strip' → logprob: -12.500003814697266
    3. ' split' → logprob: -16.375003814697266
    4. 'rstrip' → logprob: -18.375003814697266
    5. 'spl' → logprob: -18.625003814697266
    6. '.split' → logprob: -19.875003814697266
    7. '(split' → logprob: -19.875003814697266
    8. '_split' → logprob: -21.875003814697266
    9. 'sp' → logprob: -21.875003814697266
    10. 'rs' → logprob: -22.125003814697266

Token 106: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10141515731811523
    2. '(' → logprob: -2.3514151573181152
    3. '('' → logprob: -6.851415157318115
    4. '(
' → logprob: -9.976415634155273
    5. '()
' → logprob: -11.101415634155273
    6. ')' → logprob: -11.101415634155273
    7. ',' → logprob: -11.351415634155273
    8. '(',' → logprob: -11.476415634155273
    9. '("("' → logprob: -11.726415634155273
    10. '("' → logprob: -11.851415634155273

Token 107: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 108: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.383073091506958
    2. ' ' → logprob: -1.258073091506958
    3. 'l' (adapté à ' l') → logprob: -3.633073091506958
    4. '<|end|>' → logprob: -5.883072853088379
    5. ' 
' → logprob: -6.258072853088379
    6. '	l' → logprob: -7.758072853088379
    7. '        ' → logprob: -7.883072853088379
    8. '    ' → logprob: -8.008072853088379
    9. '       ' → logprob: -8.133072853088379
    10. '<|end|>' → logprob: -8.383072853088379

Token 109: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3135678768157959
    2. '=' → logprob: -1.313567876815796
    3. '=int' → logprob: -8.313568115234375
    4. ' ' → logprob: -9.813568115234375
    5. ' =
' → logprob: -12.563568115234375
    6. ')' → logprob: -15.063568115234375
    7. '=
' → logprob: -15.188568115234375
    8. 'int' → logprob: -15.188568115234375
    9. ' ' → logprob: -15.188568115234375
    10. '<|end|>' → logprob: -15.188568115234375

Token 110: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.10020667314529419
    2. ' int' → logprob: -2.3502066135406494
    3. '=int' → logprob: -18.72520637512207
    4. ' ' → logprob: -19.22520637512207
    5. '[int' → logprob: -20.60020637512207
    6. '	int' → logprob: -20.72520637512207
    7. '<int' → logprob: -21.10020637512207
    8. '(int' → logprob: -21.22520637512207
    9. ':int' → logprob: -21.35020637512207
    10. ']int' → logprob: -22.10020637512207

Token 111: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.006715967319905758
    2. '(' → logprob: -5.006715774536133
    3. ' (' → logprob: -15.256715774536133
    4. '(li' → logprob: -16.131715774536133
    5. '(
' → logprob: -16.631715774536133
    6. '(ll' → logprob: -16.881715774536133
    7. '	l' → logprob: -17.131715774536133
    8. '()' → logprob: -17.131715774536133
    9. '(line' → logprob: -17.881715774536133
    10. '(len' → logprob: -18.256715774536133

Token 112: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00024751186720095575
    2. ')
' → logprob: -8.500247955322266
    3. '   ' → logprob: -11.000247955322266
    4. '       ' → logprob: -11.125247955322266
    5. ' )' → logprob: -12.250247955322266
    6. '<|end|>' → logprob: -12.250247955322266
    7. '<|end|>' → logprob: -14.500247955322266
    8. ')

' → logprob: -15.000247955322266
    9. ' ' → logprob: -15.500247955322266
    10. ',' → logprob: -15.625247955322266

Token 113: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 114: ' for' (ID: 395)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7114753127098083
    2. ' for' → logprob: -0.8364753127098083
    3. 'for' (adapté à ' for') → logprob: -3.211475372314453
    4. ' 
' → logprob: -3.461475372314453
    5. '<|end|>' → logprob: -6.336475372314453
    6. '
' → logprob: -7.086475372314453
    7. '    ' → logprob: -8.336475372314453
    8. '    
' → logprob: -8.711475372314453
    9. '	for' → logprob: -8.711475372314453
    10. '   ' → logprob: -8.836475372314453

Token 115: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.16277459263801575
    2. '_' → logprob: -1.9127745628356934
    3. ' i' → logprob: -6.412774562835693
    4. ' ' → logprob: -7.162774562835693
    5. ' __' → logprob: -9.287775039672852
    6. 'i' → logprob: -10.662775039672852
    7. '_i' → logprob: -11.662775039672852
    8. '__' → logprob: -13.037775039672852
    9. ' step' → logprob: -13.412775039672852
    10. ' ___' → logprob: -13.787775039672852

Token 116: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02873922698199749
    2. 'in' → logprob: -4.5287394523620605
    3. ' range' → logprob: -4.9037394523620605
    4. 'range' → logprob: -4.9037394523620605
    5. ' ' → logprob: -6.0287394523620605
    6. ' _' → logprob: -8.403738975524902
    7. ' i' → logprob: -11.028738975524902
    8. ' xrange' → logprob: -11.653738975524902
    9. ' l' → logprob: -12.028738975524902
    10. '  ' → logprob: -12.028738975524902

Token 117: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0006277294596657157
    2. ' range' → logprob: -7.375627517700195
    3. '(range' → logprob: -14.000627517700195
    4. '	range' → logprob: -15.875627517700195
    5. 'ange' → logprob: -16.375627517700195
    6. 'rang' → logprob: -16.500627517700195
    7. ')' → logprob: -17.125627517700195
    8. ' ' → logprob: -18.625627517700195
    9. 'ran' → logprob: -18.875627517700195
    10. '_range' → logprob: -19.000627517700195

Token 118: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.0008346432005055249
    2. ' (' → logprob: -7.3758344650268555
    3. '(' → logprob: -8.875834465026855
    4. ' l' → logprob: -9.625834465026855
    5. '	l' → logprob: -13.375834465026855
    6. 'l' → logprob: -14.625834465026855
    7. ' ' → logprob: -16.250835418701172
    8. '   ' → logprob: -16.625835418701172
    9. ',l' → logprob: -17.750835418701172
    10. '    ' → logprob: -18.000835418701172

Token 119: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5359669327735901
    2. '):
' → logprob: -1.5359668731689453
    3. ':' → logprob: -1.6609668731689453
    4. ':
' → logprob: -5.035966873168945
    5. ')' → logprob: -6.160966873168945
    6. '   ' → logprob: -7.160966873168945
    7. ' :' → logprob: -9.660966873168945
    8. '<|end|>' → logprob: -9.785966873168945
    9. '       ' → logprob: -10.160966873168945
    10. '):
' → logprob: -10.910966873168945

Token 120: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 121: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6939196586608887
    2. ' ' → logprob: -0.8189196586608887
    3. '<|end|>' → logprob: -3.5689196586608887
    4. ' 
' → logprob: -4.068919658660889
    5. 'if' (adapté à ' if') → logprob: -5.443919658660889
    6. '    ' → logprob: -6.443919658660889
    7. ' #' → logprob: -6.818919658660889
    8. '
' → logprob: -6.943919658660889
    9. '       ' → logprob: -7.193919658660889
    10. '  ' → logprob: -7.318919658660889

Token 122: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.0059363823384046555
    2. 'd' → logprob: -5.130936145782471
    3. '    ' → logprob: -12.755936622619629
    4. '   ' → logprob: -13.380936622619629
    5. ' ' → logprob: -13.755936622619629
    6. '	d' → logprob: -13.755936622619629
    7. '       ' → logprob: -15.255936622619629
    8. '  ' → logprob: -15.380936622619629
    9. '     ' → logprob: -15.380936622619629
    10. ' ' → logprob: -16.005935668945312

Token 123: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0433829128742218
    2. '==' → logprob: -3.1683828830718994
    3. '=' → logprob: -8.41838264465332
    4. '=='' → logprob: -9.79338264465332
    5. ' =' → logprob: -10.41838264465332
    6. ')' → logprob: -10.91838264465332
    7. '[' → logprob: -11.04338264465332
    8. ' ' → logprob: -11.41838264465332
    9. '=="' → logprob: -11.66838264465332
    10. ' =='' → logprob: -12.29338264465332

Token 124: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.38570085167884827
    2. ''U' → logprob: -1.2607008218765259
    3. '"' → logprob: -4.010700702667236
    4. ' '' → logprob: -4.760700702667236
    5. ''A' → logprob: -5.510700702667236
    6. ''S' → logprob: -6.010700702667236
    7. ''L' → logprob: -7.135700702667236
    8. ' "' → logprob: -7.885700702667236
    9. ''a' → logprob: -8.135701179504395
    10. ''N' → logprob: -8.260701179504395

Token 125: 'N' (ID: 45)
  Prédit: 'U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'U' → logprob: -0.848234236240387
    2. 'N' → logprob: -1.3482341766357422
    3. 'R' → logprob: -1.5982341766357422
    4. 'L' → logprob: -3.098234176635742
    5. 'E' → logprob: -3.223234176635742
    6. 'D' → logprob: -4.098234176635742
    7. 'S' → logprob: -5.098234176635742
    8. 'u' → logprob: -7.348234176635742
    9. 'W' → logprob: -7.848234176635742
    10. 'r' → logprob: -8.473234176635742

Token 126: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.016829410567879677
    2. '':
' → logprob: -4.391829490661621
    3. ''' → logprob: -5.516829490661621
    4. ':' → logprob: -9.391829490661621
    5. '):' → logprob: -9.641829490661621
    6. ''):' → logprob: -10.391829490661621
    7. ' '' → logprob: -11.016829490661621
    8. ''):
' → logprob: -11.016829490661621
    9. '':
' → logprob: -11.141829490661621
    10. ' ':' → logprob: -11.266829490661621

Token 127: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.587715744972229
    2. 'y' → logprob: -1.212715744972229
    3. ':' → logprob: -2.8377156257629395
    4. '<|end|>' → logprob: -3.0877156257629395
    5. ':
' → logprob: -4.0877156257629395
    6. ' y' → logprob: -4.5877156257629395
    7. '           ' → logprob: -5.0877156257629395
    8. ' ' → logprob: -6.4627156257629395
    9. ',' → logprob: -6.7127156257629395
    10. ' and' → logprob: -6.8377156257629395

Token 128: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.14333932101726532
    2. 'y' (adapté à ' y') → logprob: -2.0183393955230713
    3. ' ' → logprob: -8.643339157104492
    4. ' 
' → logprob: -8.768339157104492
    5. '	y' → logprob: -9.893339157104492
    6. ',' → logprob: -10.018339157104492
    7. '
' → logprob: -10.143339157104492
    8. '<|end|>' → logprob: -10.393339157104492
    9. '            ' → logprob: -10.768339157104492
    10. '           ' → logprob: -10.768339157104492

Token 129: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.22758503258228302
    2. ' +=' → logprob: -1.6025850772857666
    3. '+' → logprob: -6.2275848388671875
    4. '-=' → logprob: -9.227584838867188
    5. ' -=' → logprob: -10.102584838867188
    6. ']+=' → logprob: -11.227584838867188
    7. '=' → logprob: -11.352584838867188
    8. '+='' → logprob: -11.727584838867188
    9. '<|end|>' → logprob: -12.102584838867188
    10. '+="' → logprob: -12.477584838867188

Token 130: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019287518225610256
    2. ' ' → logprob: -6.251928806304932
    3. '-' → logprob: -15.751928329467773
    4. '
' → logprob: -17.251928329467773
    5. '<|end|>' → logprob: -17.376928329467773
    6. '   ' → logprob: -18.376928329467773
    7. '2' → logprob: -18.751928329467773
    8. '  ' → logprob: -19.126928329467773
    9. ')' → logprob: -19.501928329467773
    10. '10' → logprob: -19.939428329467773

Token 131: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006271334132179618
    2. ' ' → logprob: -7.375627040863037
    3. '-' → logprob: -14.750627517700195
    4. '<|end|>' → logprob: -17.375627517700195
    5. '   ' → logprob: -17.500627517700195
    6. '  ' → logprob: -17.625627517700195
    7. ' -' → logprob: -18.125627517700195
    8. '2' → logprob: -18.563127517700195
    9. ' one' → logprob: -18.875627517700195
    10. '```' → logprob: -18.938127517700195

Token 132: '
' (ID: 198)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.802388608455658
    2. ' elif' → logprob: -1.1773886680603027
    3. '           ' → logprob: -1.4273886680603027
    4. '
' → logprob: -5.927388668060303
    5. '<|end|>' → logprob: -8.177388191223145
    6. '       ' → logprob: -8.427388191223145
    7. '	elif' → logprob: -8.802388191223145
    8. '            
' → logprob: -9.052388191223145
    9. '               ' → logprob: -9.677388191223145
    10. ')' → logprob: -10.302388191223145

Token 133: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.841853678226471
    2. 'elif' → logprob: -1.0918536186218262
    3. ' elif' → logprob: -1.4668536186218262
    4. '<|end|>' → logprob: -7.466853618621826
    5. '       ' → logprob: -7.716853618621826
    6. '
' → logprob: -7.841853618621826
    7. '               ' → logprob: -8.341854095458984
    8. '            
' → logprob: -8.341854095458984
    9. '	elif' → logprob: -8.341854095458984
    10. ')' → logprob: -8.591854095458984

Token 134: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.4746639132499695
    2. ' elif' → logprob: -0.9746639132499695
    3. '           ' → logprob: -7.974663734436035
    4. '	elif' → logprob: -9.099663734436035
    5. ' ' → logprob: -9.599663734436035
    6. '       ' → logprob: -11.474663734436035
    7. ',' → logprob: -11.599663734436035
    8. '   ' → logprob: -11.724663734436035
    9. ')' → logprob: -11.974663734436035
    10. '    ' → logprob: -12.224663734436035

Token 135: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.010916359722614288
    2. 'd' → logprob: -5.260916233062744
    3. ' ' → logprob: -5.510916233062744
    4. ' '' → logprob: -6.635916233062744
    5. ''' → logprob: -8.510916709899902
    6. ' ' → logprob: -10.260916709899902
    7. 's' → logprob: -10.385916709899902
    8. ''s' → logprob: -11.510916709899902
    9. '<|end|>' → logprob: -11.760916709899902
    10. '	d' → logprob: -12.135916709899902

Token 136: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.14273251593112946
    2. '==' → logprob: -2.017732620239258
    3. '=' → logprob: -10.767732620239258
    4. ' =' → logprob: -11.517732620239258
    5. ' ' → logprob: -11.892732620239258
    6. '=='' → logprob: -12.142732620239258
    7. ' =='' → logprob: -12.517732620239258
    8. '<|end|>' → logprob: -12.517732620239258
    9. '===' → logprob: -13.642732620239258
    10. ')' → logprob: -14.017732620239258

Token 137: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.03785808011889458
    2. ''S' → logprob: -3.662858009338379
    3. ' '' → logprob: -4.537858009338379
    4. ''O' → logprob: -8.037858009338379
    5. ''E' → logprob: -8.162858009338379
    6. ''A' → logprob: -9.662858009338379
    7. ''s' → logprob: -10.537858009338379
    8. ' ' → logprob: -11.037858009338379
    9. '"' → logprob: -11.412858009338379
    10. ''I' → logprob: -11.412858009338379

Token 138: 'E' (ID: 36)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.06759193539619446
    2. ''S' → logprob: -3.442591905593872
    3. 'E' → logprob: -4.192592144012451
    4. ''' → logprob: -4.442592144012451
    5. ' S' → logprob: -5.442592144012451
    6. ''E' → logprob: -6.442592144012451
    7. ''s' → logprob: -8.317591667175293
    8. ' '' → logprob: -8.942591667175293
    9. ' ' → logprob: -9.817591667175293
    10. 'W' → logprob: -9.817591667175293

Token 139: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003152288496494293
    2. ':
' → logprob: -6.003152370452881
    3. '<|end|>' → logprob: -7.878152370452881
    4. '               ' → logprob: -8.503151893615723
    5. ' :' → logprob: -9.878151893615723
    6. '           ' → logprob: -11.503151893615723
    7. '):' → logprob: -12.128151893615723
    8. ':

' → logprob: -12.253151893615723
    9. ' ' → logprob: -12.503151893615723
    10. ')' → logprob: -12.753151893615723

Token 140: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03285733237862587
    2. '                ' → logprob: -4.032857418060303
    3. ' ' → logprob: -4.532857418060303
    4. ' x' → logprob: -5.907857418060303
    5. '            ' → logprob: -8.407856941223145
    6. '              ' → logprob: -8.532856941223145
    7. '           ' → logprob: -8.782856941223145
    8. '                   ' → logprob: -9.032856941223145
    9. ' y' → logprob: -9.407856941223145
    10. ':' → logprob: -9.657856941223145

Token 141: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.06197217106819153
    2. ' x' → logprob: -2.811972141265869
    3. '               ' → logprob: -12.436972618103027
    4. ' ' → logprob: -15.811972618103027
    5. '	x' → logprob: -15.811972618103027
    6. '                   ' → logprob: -16.06197166442871
    7. '           ' → logprob: -16.56197166442871
    8. '```' → logprob: -17.06197166442871
    9. '                ' → logprob: -18.06197166442871
    10. '   ' → logprob: -18.68697166442871

Token 142: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0160395298153162
    2. '+=' → logprob: -4.1410393714904785
    3. '+' → logprob: -12.891039848327637
    4. ' -=' → logprob: -13.641039848327637
    5. ' +' → logprob: -14.391039848327637
    6. ']+=' → logprob: -14.641039848327637
    7. ' ' → logprob: -15.766039848327637
    8. '    ' → logprob: -15.891039848327637
    9. ')' → logprob: -16.01603889465332
    10. '   ' → logprob: -17.14103889465332

Token 143: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.25192928314208984
    2. ' ' → logprob: -1.5019292831420898
    3. ' ' → logprob: -16.876930236816406
    4. '```' → logprob: -17.251930236816406
    5. '0' → logprob: -17.876930236816406
    6. '<|end|>' → logprob: -18.001930236816406
    7. '   ' → logprob: -19.439430236816406
    8. '+' → logprob: -19.626930236816406
    9. '`' → logprob: -19.626930236816406
    10. '۱' → logprob: -19.626930236816406

Token 144: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '```' → logprob: -17.500051498413086
    4. '0' → logprob: -17.875051498413086
    5. '-' → logprob: -18.187551498413086
    6. '   ' → logprob: -18.375051498413086
    7. '+' → logprob: -18.375051498413086
    8. '<|end|>' → logprob: -18.437551498413086
    9. '  ' → logprob: -19.750051498413086
    10. '2' → logprob: -19.812551498413086

Token 145: '
' (ID: 198)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.9445338249206543
    2. '           ' → logprob: -1.0695338249206543
    3. ' elif' → logprob: -1.3195338249206543
    4. '	elif' → logprob: -7.694533824920654
    5. '<|end|>' → logprob: -8.944534301757812
    6. ',' → logprob: -9.944534301757812
    7. '       ' → logprob: -10.194534301757812
    8. ')' → logprob: -11.944534301757812
    9. '            
' → logprob: -12.069534301757812
    10. '   ' → logprob: -12.694534301757812

Token 146: '           ' (ID: 352)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.659682035446167
    2. ' elif' → logprob: -1.159682035446167
    3. '           ' → logprob: -1.784682035446167
    4. '	elif' → logprob: -7.034682273864746
    5. '<|end|>' → logprob: -7.409682273864746
    6. ',' → logprob: -10.534682273864746
    7. '<|end|>' → logprob: -12.034682273864746
    8. '#elif' → logprob: -12.534682273864746
    9. ')' → logprob: -12.534682273864746
    10. '```' → logprob: -12.534682273864746

Token 147: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.04869569092988968
    2. ' elif' → logprob: -3.0486958026885986
    3. '           ' → logprob: -9.42369556427002
    4. '	elif' → logprob: -10.67369556427002
    5. 'else' → logprob: -13.04869556427002
    6. '   ' → logprob: -13.54869556427002
    7. '       ' → logprob: -14.67369556427002
    8. ' else' → logprob: -15.79869556427002
    9. 'el' → logprob: -16.173696517944336
    10. ' ' → logprob: -16.548696517944336

Token 148: ' d' (ID: 272)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4013771116733551
    2. ''S' → logprob: -1.5263770818710327
    3. ' '' → logprob: -2.2763772010803223
    4. ''s' → logprob: -6.026377201080322
    5. ''d' → logprob: -6.526377201080322
    6. ' S' → logprob: -6.651377201080322
    7. ''D' → logprob: -6.651377201080322
    8. 's' → logprob: -6.776377201080322
    9. 'd' → logprob: -7.276377201080322
    10. ''w' → logprob: -8.026376724243164

Token 149: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07924578338861465
    2. '==' → logprob: -2.5792458057403564
    3. ''' → logprob: -8.954245567321777
    4. '=='' → logprob: -9.579245567321777
    5. '=' → logprob: -9.829245567321777
    6. ' =='' → logprob: -9.954245567321777
    7. ' '' → logprob: -10.704245567321777
    8. ' =' → logprob: -10.704245567321777
    9. ' ' → logprob: -12.454245567321777
    10. 'elif' → logprob: -13.829245567321777

Token 150: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3161294162273407
    2. ''S' → logprob: -1.316129446029663
    3. ' '' → logprob: -6.066129207611084
    4. ''O' → logprob: -7.941129207611084
    5. ''s' → logprob: -10.191129684448242
    6. ''w' → logprob: -10.691129684448242
    7. ' ' → logprob: -11.441129684448242
    8. 'S' → logprob: -11.566129684448242
    9. ''C' → logprob: -11.566129684448242
    10. ''I' → logprob: -11.691129684448242

Token 151: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.023426689207553864
    2. 'W' → logprob: -4.398426532745361
    3. ''S' → logprob: -4.773426532745361
    4. ''' → logprob: -6.148426532745361
    5. ' S' → logprob: -8.64842700958252
    6. ''s' → logprob: -10.39842700958252
    7. 'w' → logprob: -11.64842700958252
    8. ' ' → logprob: -11.89842700958252
    9. '```' → logprob: -12.14842700958252
    10. 's' → logprob: -12.52342700958252

Token 152: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03500329703092575
    2. ':
' → logprob: -3.410003185272217
    3. '               ' → logprob: -6.785003185272217
    4. '<|end|>' → logprob: -9.535003662109375
    5. ' :' → logprob: -10.660003662109375
    6. '):
' → logprob: -11.035003662109375
    7. '```' → logprob: -11.035003662109375
    8. ')' → logprob: -11.160003662109375
    9. ':

' → logprob: -11.160003662109375
    10. '           ' → logprob: -11.285003662109375

Token 153: '               ' (ID: 506)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.22819316387176514
    2. '               ' → logprob: -2.2281932830810547
    3. 'y' → logprob: -2.4781932830810547
    4. '           ' → logprob: -5.228193283081055
    5. '                   ' → logprob: -6.103193283081055
    6. ' ' → logprob: -6.228193283081055
    7. '                ' → logprob: -7.228193283081055
    8. ' 
' → logprob: -7.853193283081055
    9. '            ' → logprob: -7.978193283081055
    10. '   ' → logprob: -8.353193283081055

Token 154: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.008616226725280285
    2. 'y' (adapté à ' y') → logprob: -4.7586164474487305
    3. ' ' → logprob: -13.63361644744873
    4. '	y' → logprob: -14.88361644744873
    5. ' ' → logprob: -16.508615493774414
    6. ' 
' → logprob: -16.758615493774414
    7. '1' → logprob: -16.883615493774414
    8. '-' → logprob: -17.258615493774414
    9. '
' → logprob: -18.008615493774414
    10. ''y' → logprob: -18.383615493774414

Token 155: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.6003618240356445
    2. ' -=' → logprob: -0.8503618240356445
    3. '-' → logprob: -3.7253618240356445
    4. ' -' → logprob: -11.225361824035645
    5. '+=' → logprob: -11.850361824035645
    6. ' +=' → logprob: -14.100361824035645
    7. '```' → logprob: -15.100361824035645
    8. '>' → logprob: -15.100361824035645
    9. '=' → logprob: -15.600361824035645
    10. ' ' → logprob: -16.850360870361328

Token 156: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11282335966825485
    2. ' ' → logprob: -2.237823247909546
    3. '<|end|>' → logprob: -15.112823486328125
    4. ' ' → logprob: -15.487823486328125
    5. '           ' → logprob: -15.612823486328125
    6. '0' → logprob: -16.550323486328125
    7. '```' → logprob: -16.550323486328125
    8. '   ' → logprob: -16.862823486328125
    9. '               ' → logprob: -18.050323486328125
    10. '=' → logprob: -18.112823486328125

Token 157: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.615255839889869e-05
    2. ' ' → logprob: -9.250096321105957
    3. '<|end|>' → logprob: -18.12509536743164
    4. '```' → logprob: -19.12509536743164
    5. '0' → logprob: -19.37509536743164
    6. '           ' → logprob: -19.81259536743164
    7. '   ' → logprob: -20.12509536743164
    8. '۱' → logprob: -20.12509536743164
    9. '１' → logprob: -20.25009536743164
    10. '2' → logprob: -20.50009536743164

Token 158: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.36777693033218384
    2. 'elif' → logprob: -1.492776870727539
    3. ' elif' → logprob: -2.492776870727539
    4. 'else' → logprob: -8.867776870727539
    5. '	elif' → logprob: -9.367776870727539
    6. ' else' → logprob: -9.867776870727539
    7. '<|end|>' → logprob: -11.992776870727539
    8. '```' → logprob: -12.117776870727539
    9. '       ' → logprob: -12.367776870727539
    10. '   ' → logprob: -13.742776870727539

Token 159: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3344801366329193
    2. 'elif' → logprob: -1.8344801664352417
    3. ' elif' → logprob: -2.084480047225952
    4. '	elif' → logprob: -8.834480285644531
    5. 'else' → logprob: -10.209480285644531
    6. ' else' → logprob: -11.084480285644531
    7. '<|end|>' → logprob: -11.834480285644531
    8. '       ' → logprob: -12.209480285644531
    9. '          ' → logprob: -12.834480285644531
    10. '   ' → logprob: -13.084480285644531

Token 160: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.3202027976512909
    2. ' elif' → logprob: -1.3202028274536133
    3. 'else' → logprob: -5.195202827453613
    4. ' else' → logprob: -6.695202827453613
    5. '	elif' → logprob: -9.445202827453613
    6. '           ' → logprob: -9.820202827453613
    7. '   ' → logprob: -13.820202827453613
    8. '```' → logprob: -13.820202827453613
    9. 'e' → logprob: -14.945202827453613
    10. '               ' → logprob: -15.695202827453613

Token 161: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.0005151443183422089
    2. 'd' → logprob: -7.750514984130859
    3. ' ' → logprob: -10.12551498413086
    4. ''' → logprob: -10.50051498413086
    5. ' '' → logprob: -11.75051498413086
    6. ' ' → logprob: -12.87551498413086
    7. '	d' → logprob: -13.12551498413086
    8. ''d' → logprob: -13.25051498413086
    9. 's' → logprob: -14.75051498413086
    10. '<|end|>' → logprob: -14.87551498413086

Token 162: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0700237974524498
    2. '==' → logprob: -2.695023775100708
    3. '=' → logprob: -10.320023536682129
    4. '=='' → logprob: -10.570023536682129
    5. ' =='' → logprob: -11.320023536682129
    6. ' =' → logprob: -12.070023536682129
    7. ''' → logprob: -12.445023536682129
    8. ' ' → logprob: -13.195023536682129
    9. '[' → logprob: -13.820023536682129
    10. '===' → logprob: -14.320023536682129

Token 163: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.017962388694286346
    2. ' '' → logprob: -4.142962455749512
    3. ''A' → logprob: -7.642962455749512
    4. ''w' → logprob: -7.642962455749512
    5. ''O' → logprob: -7.642962455749512
    6. ''S' → logprob: -8.267962455749512
    7. ''D' → logprob: -10.017962455749512
    8. ''I' → logprob: -10.142962455749512
    9. ''E' → logprob: -10.267962455749512
    10. ''C' → logprob: -10.767962455749512

Token 164: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0013917810283601284
    2. ''' → logprob: -6.626391887664795
    3. ' W' → logprob: -9.751391410827637
    4. '')' → logprob: -13.001391410827637
    5. '"W' → logprob: -13.626391410827637
    6. '`' → logprob: -13.876391410827637
    7. ''w' → logprob: -14.626391410827637
    8. ' ' → logprob: -14.876391410827637
    9. 'O' → logprob: -15.126391410827637
    10. '```' → logprob: -15.376391410827637

Token 165: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07434002310037613
    2. ':
' → logprob: -2.8243401050567627
    3. '               ' → logprob: -4.449339866638184
    4. ' :' → logprob: -8.949339866638184
    5. '           ' → logprob: -9.199339866638184
    6. ' :
' → logprob: -9.324339866638184
    7. '):
' → logprob: -9.574339866638184
    8. '):' → logprob: -9.824339866638184
    9. '```' → logprob: -10.199339866638184
    10. ')' → logprob: -10.199339866638184

Token 166: '               ' (ID: 506)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.09684505313634872
    2. 'x' → logprob: -3.0968451499938965
    3. '               ' → logprob: -3.3468451499938965
    4. '                ' → logprob: -4.5968451499938965
    5. ' ' → logprob: -7.3468451499938965
    6. '            ' → logprob: -7.3468451499938965
    7. '           ' → logprob: -8.096844673156738
    8. '                   ' → logprob: -8.846844673156738
    9. '    ' → logprob: -10.846844673156738
    10. '   ' → logprob: -11.096844673156738

Token 167: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.25193002820014954
    2. 'x' (adapté à ' x') → logprob: -1.5019299983978271
    3. '               ' → logprob: -14.501930236816406
    4. '	x' → logprob: -15.876930236816406
    5. '           ' → logprob: -16.001930236816406
    6. '   ' → logprob: -16.751930236816406
    7. '```' → logprob: -17.376930236816406
    8. '    ' → logprob: -17.876930236816406
    9. '                   ' → logprob: -17.876930236816406
    10. ' ' → logprob: -18.001930236816406

Token 168: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.10353251546621323
    2. '-=' → logprob: -2.353532552719116
    3. '-' → logprob: -5.728532314300537
    4. ' -' → logprob: -9.603532791137695
    5. ' +=' → logprob: -15.353532791137695
    6. ' ' → logprob: -15.353532791137695
    7. '    ' → logprob: -15.478532791137695
    8. '+=' → logprob: -15.728532791137695
    9. '   ' → logprob: -16.103532791137695
    10. '```' → logprob: -16.228532791137695

Token 169: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10020774602890015
    2. ' ' → logprob: -2.350207805633545
    3. '           ' → logprob: -14.850207328796387
    4. ' ' → logprob: -15.225207328796387
    5. '   ' → logprob: -15.225207328796387
    6. '```' → logprob: -16.600208282470703
    7. '0' → logprob: -16.975208282470703
    8. ')' → logprob: -17.725208282470703
    9. '10' → logprob: -17.787708282470703
    10. '	' → logprob: -17.787708282470703

Token 170: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -19.00002098083496
    4. '           ' → logprob: -19.00002098083496
    5. '```' → logprob: -19.00002098083496
    6. '0' → logprob: -19.75002098083496
    7. '<|end|>' → logprob: -20.00002098083496
    8. '１' → logprob: -20.06252098083496
    9. '       ' → logprob: -20.87502098083496
    10. '۱' → logprob: -21.00002098083496

Token 171: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013083330122753978
    2. '
' → logprob: -7.001308441162109
    3. ' if' → logprob: -8.25130844116211
    4. '       ' → logprob: -10.00130844116211
    5. '            
' → logprob: -10.50130844116211
    6. '```' → logprob: -11.25130844116211
    7. ' 
' → logprob: -11.62630844116211
    8. '  
' → logprob: -11.75130844116211
    9. 'if' → logprob: -11.75130844116211
    10. '<|end|>' → logprob: -12.25130844116211

Token 172: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.025668200105428696
    2. ' if' → logprob: -3.775668144226074
    3. '       ' → logprob: -6.525668144226074
    4. 'if' → logprob: -7.400668144226074
    5. '   ' → logprob: -8.775668144226074
    6. '```' → logprob: -9.025668144226074
    7. '
' → logprob: -10.275668144226074
    8. '            
' → logprob: -11.900668144226074
    9. '<|end|>' → logprob: -12.275668144226074
    10. ',' → logprob: -12.400668144226074

Token 173: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.27271220088005066
    2. '           ' → logprob: -1.647712230682373
    3. 'if' (adapté à ' if') → logprob: -3.147712230682373
    4. '   ' → logprob: -6.522712230682373
    5. '       ' → logprob: -6.772712230682373
    6. '
' → logprob: -7.522712230682373
    7. ' ' → logprob: -10.272711753845215
    8. '```' → logprob: -11.022711753845215
    9. '            
' → logprob: -11.397711753845215
    10. ' 
' → logprob: -12.147711753845215

Token 174: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.31376469135284424
    2. '(x' → logprob: -1.3137646913528442
    3. '(d' → logprob: -7.688764572143555
    4. '(' → logprob: -10.563764572143555
    5. '(y' → logprob: -11.563764572143555
    6. ' ' → logprob: -13.063764572143555
    7. '   ' → logprob: -13.188764572143555
    8. '(dx' → logprob: -13.438764572143555
    9. ' ' → logprob: -13.938764572143555
    10. '((' → logprob: -14.063764572143555

Token 175: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.003719199914485216
    2. ' x' → logprob: -5.753719329833984
    3. '(x' → logprob: -7.628719329833984
    4. ' (' → logprob: -9.878719329833984
    5. '(' → logprob: -12.628719329833984
    6. ',' → logprob: -16.628719329833984
    7. ' ' → logprob: -16.628719329833984
    8. '	x' → logprob: -17.003719329833984
    9. ')x' → logprob: -17.003719329833984
    10. ',x' → logprob: -17.128719329833984

Token 176: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017970333283301443
    2. ',y' → logprob: -8.875179290771484
    3. ' ,' → logprob: -10.500179290771484
    4. ',x' → logprob: -12.125179290771484
    5. ',
' → logprob: -12.375179290771484
    6. '<|end|>' → logprob: -14.375179290771484
    7. ',user' → logprob: -15.000179290771484
    8. ',w' → logprob: -15.000179290771484
    9. ',v' → logprob: -15.875179290771484
    10. '‌,' → logprob: -16.125179290771484

Token 177: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.1002078503370285
    2. ' y' → logprob: -2.350207805633545
    3. ' ' → logprob: -14.600208282470703
    4. '<|end|>' → logprob: -14.975208282470703
    5. ',y' → logprob: -15.350208282470703
    6. ',' → logprob: -16.225208282470703
    7. '	y' → logprob: -16.225208282470703
    8. ' ' → logprob: -17.225208282470703
    9. '    ' → logprob: -17.725208282470703
    10. ''y' → logprob: -17.725208282470703

Token 178: ')' (ID: 8)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4795987606048584
    2. ')' → logprob: -0.9795987606048584
    3. ' )' → logprob: -5.7295989990234375
    4. 'in' → logprob: -6.1045989990234375
    5. ' ' → logprob: -10.729598999023438
    6. '<|end|>' → logprob: -13.854598999023438
    7. ' ' → logprob: -14.479598999023438
    8. ' not' → logprob: -14.604598999023438
    9. '	in' → logprob: -14.729598999023438
    10. 'In' → logprob: -15.229598999023438

Token 179: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1002136841416359
    2. 'in' → logprob: -2.3502137660980225
    3. ' ' → logprob: -11.975214004516602
    4. ' ' → logprob: -14.975214004516602
    5. ')' → logprob: -15.850214004516602
    6. '	in' → logprob: -16.2252140045166
    7. 'In' → logprob: -16.9752140045166
    8. ' not' → logprob: -17.4752140045166
    9. 'not' → logprob: -17.7252140045166
    10. 's' → logprob: -18.1002140045166

Token 180: ' gems' (ID: 68945)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.3869008421897888
    2. ' gems' → logprob: -1.1369009017944336
    3. 's' → logprob: -11.636900901794434
    4. '	g' → logprob: -12.136900901794434
    5. ' g' → logprob: -12.261900901794434
    6. '_g' → logprob: -12.261900901794434
    7. 'gem' → logprob: -13.261900901794434
    8. ' gem' → logprob: -14.136900901794434
    9. '(g' → logprob: -14.261900901794434
    10. ' ' → logprob: -14.886900901794434

Token 181: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.35291802883148193
    2. ' and' → logprob: -1.352918028831482
    3. ':
' → logprob: -3.3529181480407715
    4. '           ' → logprob: -5.9779181480407715
    5. 'and' → logprob: -7.4779181480407715
    6. '               ' → logprob: -8.352917671203613
    7. '):' → logprob: -8.727917671203613
    8. '):
' → logprob: -8.977917671203613
    9. '       ' → logprob: -9.477917671203613
    10. ' collected' → logprob: -9.727917671203613

Token 182: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.252438485622406
    2. ' collected' → logprob: -1.5024385452270508
    3. 'col' → logprob: -7.877438545227051
    4. 'Collected' → logprob: -9.62743854522705
    5. '           ' → logprob: -10.25243854522705
    6. '	col' → logprob: -12.37743854522705
    7. '<|end|>' → logprob: -12.62743854522705
    8. ' col' → logprob: -12.62743854522705
    9. '                
' → logprob: -12.87743854522705
    10. '	           ' → logprob: -13.62743854522705

Token 183: ' collected' (ID: 20480)
  Prédit: ' collected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collected' → logprob: -0.0038557741791009903
    2. '               ' → logprob: -5.7538557052612305
    3. '                   ' → logprob: -7.6288557052612305
    4. 'col' → logprob: -8.75385570526123
    5. '           ' → logprob: -11.50385570526123
    6. 'Collected' → logprob: -11.75385570526123
    7. '                ' → logprob: -11.87885570526123
    8. '   ' → logprob: -13.75385570526123
    9. '                
' → logprob: -13.75385570526123
    10. '                       ' → logprob: -13.75385570526123

Token 184: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.12698879837989807
    2. '.' → logprob: -2.1269888877868652
    3. '.update' → logprob: -10.501988410949707
    4. '.setdefault' → logprob: -10.626988410949707
    5. ' .' → logprob: -12.751988410949707
    6. '.append' → logprob: -12.751988410949707
    7. '.union' → logprob: -13.876988410949707
    8. '.remove' → logprob: -14.251988410949707
    9. '.Add' → logprob: -14.751988410949707
    10. '.insert' → logprob: -15.001988410949707

Token 185: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -6.749814019713085e-06
    2. ' ((' → logprob: -12.125006675720215
    3. '(' → logprob: -13.625006675720215
    4. ' ' → logprob: -18.87500762939453
    5. '(
' → logprob: -19.00000762939453
    6. '(x' → logprob: -19.25000762939453
    7. ' (' → logprob: -19.25000762939453
    8. '(((' → logprob: -19.50000762939453
    9. '   ' → logprob: -19.75000762939453
    10. '[(' → logprob: -20.37500762939453

Token 186: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0021924946922808886
    2. '(x' → logprob: -6.127192497253418
    3. ' x' → logprob: -12.127192497253418
    4. ' (' → logprob: -14.002192497253418
    5. '(' → logprob: -14.502192497253418
    6. '"x' → logprob: -15.127192497253418
    7. ')x' → logprob: -16.2521915435791
    8. '(
' → logprob: -16.6271915435791
    9. '{x' → logprob: -16.7521915435791
    10. '   ' → logprob: -16.7521915435791

Token 187: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020461321400944144
    2. ',x' → logprob: -9.500205039978027
    3. ',y' → logprob: -9.750205039978027
    4. 'x' → logprob: -10.000205039978027
    5. ' ,' → logprob: -11.125205039978027
    6. ')' → logprob: -12.750205039978027
    7. '               ' → logprob: -13.250205039978027
    8. '           ' → logprob: -13.625205039978027
    9. '                   ' → logprob: -13.625205039978027
    10. '(x' → logprob: -13.625205039978027

Token 188: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.12692883610725403
    2. ' y' → logprob: -2.1269288063049316
    3. 'x' → logprob: -14.12692928314209
    4. ' ' → logprob: -17.501928329467773
    5. ')' → logprob: -17.626928329467773
    6. ')y' → logprob: -17.626928329467773
    7. '	y' → logprob: -18.251928329467773
    8. ',y' → logprob: -18.376928329467773
    9. ' x' → logprob: -18.376928329467773
    10. ''y' → logprob: -18.626928329467773

Token 189: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002860073291230947
    2. '))' → logprob: -8.250286102294922
    3. ')
' → logprob: -10.625286102294922
    4. ')

' → logprob: -15.750286102294922
    5. ')`' → logprob: -15.875286102294922
    6. ' )' → logprob: -16.625286102294922
    7. ')))' → logprob: -16.750286102294922
    8. '())' → logprob: -17.500286102294922
    9. '))
' → logprob: -17.500286102294922
    10. '`)' → logprob: -18.000286102294922

Token 190: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20174436271190643
    2. 'print' → logprob: -1.7017443180084229
    3. '
' → logprob: -8.701744079589844
    4. ' print' → logprob: -9.201744079589844
    5. '```' → logprob: -10.326744079589844
    6. '    
' → logprob: -10.576744079589844
    7. '       ' → logprob: -12.701744079589844
    8. '        
' → logprob: -14.576744079589844
    9. '	print' → logprob: -14.701744079589844
    10. '  
' → logprob: -14.826744079589844

Token 191: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.001221774611622095
    2. '   ' → logprob: -6.751221656799316
    3. ' print' → logprob: -10.001221656799316
    4. '
' → logprob: -12.251221656799316
    5. '```' → logprob: -14.126221656799316
    6. '    
' → logprob: -14.376221656799316
    7. '	print' → logprob: -17.251222610473633
    8. '#print' → logprob: -17.876222610473633
    9. ')' → logprob: -18.626222610473633
    10. '  
' → logprob: -18.626222610473633

Token 192: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.6118702292442322
    2. 'len' → logprob: -0.9868702292442322
    3. 'col' → logprob: -3.361870288848877
    4. 'x' → logprob: -4.361870288848877
    5. ' x' → logprob: -4.361870288848877
    6. ' collected' → logprob: -4.986870288848877
    7. ' N' → logprob: -5.361870288848877
    8. '(len' → logprob: -5.611870288848877
    9. ' (' → logprob: -6.111870288848877
    10. 'N' → logprob: -6.111870288848877

Token 193: '(col' (ID: 37070)
  Prédit: '(col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(col' → logprob: -0.0005749551928602159
    2. 'col' → logprob: -7.625575065612793
    3. '(' → logprob: -9.750575065612793
    4. '(g' → logprob: -11.125575065612793
    5. '(collection' → logprob: -11.500575065612793
    6. 'g' → logprob: -13.000575065612793
    7. ' collected' → logprob: -14.750575065612793
    8. ' (' → logprob: -14.875575065612793
    9. '	col' → logprob: -15.125575065612793
    10. ')' → logprob: -15.250575065612793

Token 194: 'lected' (ID: 2576)
  Prédit: 'ected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ected' → logprob: -0.00016682932619005442
    2. 'ect' → logprob: -9.000166893005371
    3. 'lected' → logprob: -10.375166893005371
    4. 'g' → logprob: -12.250166893005371
    5. '   ' → logprob: -13.125166893005371
    6. 'ection' → logprob: -13.375166893005371
    7. 'eg' → logprob: -13.875166893005371
    8. 'ct' → logprob: -14.000166893005371
    9. 'eted' → logprob: -14.875166893005371
    10. 'ects' → logprob: -14.875166893005371

Token 195: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0031118765473365784
    2. ' ==' → logprob: -6.253111839294434
    3. ')==' → logprob: -7.378111839294434
    4. '==' → logprob: -7.628111839294434
    5. '>' → logprob: -10.753111839294434
    6. ')>=' → logprob: -11.378111839294434
    7. ' )' → logprob: -11.503111839294434
    8. ' >=' → logprob: -11.628111839294434
    9. '>=' → logprob: -12.003111839294434
    10. ')>' → logprob: -12.253111839294434

Token 196: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.283517062664032
    2. '==' → logprob: -1.4085171222686768
    3. ')' → logprob: -7.033516883850098
    4. '>' → logprob: -7.533516883850098
    5. ' >' → logprob: -8.408516883850098
    6. ' >=' → logprob: -8.533516883850098
    7. ')==' → logprob: -8.783516883850098
    8. '>=' → logprob: -9.158516883850098
    9. '<|end|>' → logprob: -9.408516883850098
    10. '=' → logprob: -9.533516883850098

Token 197: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.030942589044570923
    2. 'N' → logprob: -3.905942678451538
    3. ' len' → logprob: -5.155942440032959
    4. '0' → logprob: -5.530942440032959
    5. ' N' → logprob: -7.530942440032959
    6. ' ' → logprob: -9.655942916870117
    7. 'g' → logprob: -12.655942916870117
    8. '1' → logprob: -12.655942916870117
    9. '(len' → logprob: -12.780942916870117
    10. '   ' → logprob: -13.030942916870117

Token 198: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -5.431207682704553e-05
    2. '(' → logprob: -9.875054359436035
    3. 'g' → logprob: -13.000054359436035
    4. ' (' → logprob: -14.750054359436035
    5. '(s' → logprob: -16.37505340576172
    6. '(
' → logprob: -17.87505340576172
    7. ' g' → logprob: -18.37505340576172
    8. '()' → logprob: -18.62505340576172
    9. '	g' → logprob: -18.62505340576172
    10. '(e' → logprob: -19.00005340576172

Token 199: 'ems' (ID: 17308)
  Prédit: 'ems'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ems' → logprob: -0.0076562040485441685
    2. 's' → logprob: -4.882656097412109
    3. 'ms' → logprob: -10.50765609741211
    4. 'em' → logprob: -11.13265609741211
    5. 'erms' → logprob: -12.88265609741211
    6. 'g' → logprob: -13.50765609741211
    7. 'ims' → logprob: -13.88265609741211
    8. 'ams' → logprob: -13.88265609741211
    9. ' gems' → logprob: -14.25765609741211
    10. '```' → logprob: -15.13265609741211

Token 200: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14332589507102966
    2. '):
' → logprob: -2.0183258056640625
    3. ')' → logprob: -7.7683258056640625
    4. ':' → logprob: -8.518325805664062
    5. ':
' → logprob: -11.518325805664062
    6. '):
' → logprob: -11.768325805664062
    7. ' ):' → logprob: -12.643325805664062
    8. '   ' → logprob: -13.143325805664062
    9. ' and' → logprob: -13.768325805664062
    10. '**' → logprob: -14.143325805664062

Token 201: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0044691660441458225
    2. 'print' → logprob: -6.004469394683838
    3. ' print' → logprob: -6.754469394683838
    4. '   ' → logprob: -7.129469394683838
    5. '
' → logprob: -11.87946891784668
    6. '           ' → logprob: -12.37946891784668
    7. '        
' → logprob: -12.62946891784668
    8. ':
' → logprob: -12.75446891784668
    9. '```' → logprob: -13.62946891784668
    10. '	print' → logprob: -14.19196891784668

Token 202: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.36836251616477966
    2. '   ' → logprob: -1.493362545967102
    3. ' print' → logprob: -2.4933624267578125
    4. '       ' → logprob: -7.1183624267578125
    5. '           ' → logprob: -10.618362426757812
    6. '
' → logprob: -10.993362426757812
    7. '	print' → logprob: -11.743362426757812
    8. '    
' → logprob: -11.993362426757812
    9. '  ' → logprob: -12.368362426757812
    10. 'break' → logprob: -12.618362426757812

Token 203: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.02302311733365059
    2. '(' → logprob: -4.0230231285095215
    3. '('' → logprob: -5.3980231285095215
    4. '(":' → logprob: -8.648022651672363
    5. '("("' → logprob: -9.648022651672363
    6. '"' → logprob: -10.023022651672363
    7. '("(' → logprob: -10.773022651672363
    8. ' ("' → logprob: -11.648022651672363
    9. '("")' → logprob: -12.773022651672363
    10. '(True' → logprob: -13.148022651672363

Token 204: 'Yes' (ID: 13022)
  Prédit: 'yes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yes' → logprob: -1.009122371673584
    2. 'Yes' → logprob: -1.134122371673584
    3. 'All' → logprob: -2.134122371673584
    4. 'Collected' → logprob: -2.634122371673584
    5. 'diamond' → logprob: -3.384122371673584
    6. 'Diamond' → logprob: -3.634122371673584
    7. 'YES' → logprob: -4.509122371673584
    8. 'You' → logprob: -4.884122371673584
    9. 'success' → logprob: -5.634122371673584
    10. 'all' → logprob: -5.884122371673584

Token 205: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.05510850250720978
    2. '")' → logprob: -2.9301085472106934
    3. ')
' → logprob: -9.305108070373535
    4. '")
' → logprob: -9.430108070373535
    5. ')' → logprob: -11.055108070373535
    6. '!")
' → logprob: -11.430108070373535
    7. '"' → logprob: -11.680108070373535
    8. ')")
' → logprob: -12.430108070373535
    9. 'else' → logprob: -12.805108070373535
    10. ' ")
' → logprob: -12.805108070373535

Token 206: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0629667341709137
    2. ' else' → logprob: -2.812966823577881
    3. '   ' → logprob: -6.937966823577881
    4. '	else' → logprob: -10.687966346740723
    5. 'elif' → logprob: -12.937966346740723
    6. ' ' → logprob: -13.687966346740723
    7. '       ' → logprob: -14.062966346740723
    8. '<|end|>' → logprob: -14.812966346740723
    9. 'Else' → logprob: -15.812966346740723
    10. '```' → logprob: -16.18796730041504

Token 207: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.4840996563434601
    2. '   ' → logprob: -0.9840996265411377
    3. ' else' → logprob: -4.609099864959717
    4. '	else' → logprob: -11.734099388122559
    5. ' ' → logprob: -13.234099388122559
    6. 'elif' → logprob: -13.859099388122559
    7. '  ' → logprob: -14.859099388122559
    8. '       ' → logprob: -15.359099388122559
    9. 'e' → logprob: -15.484099388122559
    10. '    ' → logprob: -16.734100341796875

Token 208: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004769853316247463
    2. ':
' → logprob: -5.379769802093506
    3. ' :' → logprob: -9.504770278930664
    4. '       ' → logprob: -10.129770278930664
    5. '   ' → logprob: -10.504770278930664
    6. ' :
' → logprob: -12.379770278930664
    7. ' print' → logprob: -14.129770278930664
    8. '):' → logprob: -14.504770278930664
    9. 'print' → logprob: -14.629770278930664
    10. ':

' → logprob: -15.379770278930664

Token 209: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12018916010856628
    2. ' print' → logprob: -2.6201891899108887
    3. 'print' → logprob: -3.4951891899108887
    4. '   ' → logprob: -4.620189189910889
    5. '    ' → logprob: -8.87018871307373
    6. '	print' → logprob: -10.37018871307373
    7. '"' → logprob: -10.87018871307373
    8. '     ' → logprob: -10.99518871307373
    9. '           ' → logprob: -11.74518871307373
    10. '(print' → logprob: -11.87018871307373

Token 210: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.048698194324970245
    2. ' print' → logprob: -3.0486981868743896
    3. '       ' → logprob: -9.173698425292969
    4. '   ' → logprob: -12.048698425292969
    5. '	print' → logprob: -14.173698425292969
    6. '    ' → logprob: -15.548698425292969
    7. '.print' → logprob: -15.673698425292969
    8. ' ' → logprob: -16.54869842529297
    9. '"' → logprob: -16.54869842529297
    10. '           ' → logprob: -17.79869842529297

Token 211: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.07889363914728165
    2. '(' → logprob: -2.5788936614990234
    3. '(
' → logprob: -13.328893661499023
    4. '("("' → logprob: -13.953893661499023
    5. '('' → logprob: -14.703893661499023
    6. '()' → logprob: -15.203893661499023
    7. '("")' → logprob: -15.453893661499023
    8. '"' → logprob: -15.453893661499023
    9. '("""' → logprob: -16.328893661499023
    10. ' ("' → logprob: -16.703893661499023

Token 212: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.0001589618914294988
    2. '"No' → logprob: -8.75015926361084
    3. ' No' → logprob: -15.12515926361084
    4. '"' → logprob: -16.375158309936523
    5. 'NO' → logprob: -17.500158309936523
    6. '   ' → logprob: -19.375158309936523
    7. '>No' → logprob: -20.000158309936523
    8. '_No' → logprob: -20.000158309936523
    9. '“No' → logprob: -20.625158309936523
    10. '(No' → logprob: -20.875158309936523

Token 213: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.2586473822593689
    2. ')' → logprob: -1.5086474418640137
    3. ')")' → logprob: -5.008647441864014
    4. '")
' → logprob: -12.258646965026855
    5. ')"' → logprob: -12.633646965026855
    6. '}")' → logprob: -12.633646965026855
    7. ')
' → logprob: -13.258646965026855
    8. '')' → logprob: -14.008646965026855
    9. '```' → logprob: -14.758646965026855
    10. ')")
' → logprob: -15.008646965026855


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 211
Tokens correctement prédits (1ère position, stricte): 108
Tokens correctement prédits (1ère position, avec adaptation): 117
Tokens correctement prédits (top 10): 188
Précision stricte (1ère position): 51.18%
Précision adaptée (1ère position): 55.45%
Précision (top 10): 89.10%
================================================================================
