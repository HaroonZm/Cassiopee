================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:17:26
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math

for line in sys.stdin:
    n = line.strip()
    if not n:
        continue
    n = int(n)
    if n == 0:
        break
    m = int(sys.stdin.readline())
    total = 0
    for _ in range(m):
        a,b,d = sys.stdin.readline().strip().split(',')
        d = int(d)
        total += d // 100 - 1
    print(total)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5435490608215332
    2. '.' → logprob: -1.0435490608215332
    3. '<|end|>' → logprob: -3.918549060821533
    4. '\' → logprob: -4.043549060821533
    5. 'import' → logprob: -4.418549060821533
    6. 'newline' → logprob: -5.293549060821533
    7. '' → logprob: -6.043549060821533
    8. '\r' → logprob: -6.168549060821533
    9. '
' → logprob: -6.293549060821533
    10. '<|end|>' → logprob: -6.418549060821533

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00023321842309087515
    2. 'os' → logprob: -8.37523365020752
    3. ' math' → logprob: -13.87523365020752
    4. ' re' → logprob: -14.37523365020752
    5. '"os' → logprob: -14.87523365020752
    6. ' json' → logprob: -15.12523365020752
    7. '_os' → logprob: -15.87523365020752
    8. '	os' → logprob: -16.375232696533203
    9. ' ' → logprob: -16.750232696533203
    10. ' ' → logprob: -17.000232696533203

Token 5: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1524793654680252
    2. 'import' → logprob: -3.152479410171509
    3. '\' → logprob: -3.402479410171509
    4. '\n' → logprob: -3.777479410171509
    5. '
' → logprob: -4.02747917175293
    6. '

' → logprob: -5.02747917175293
    7. '```' → logprob: -5.27747917175293
    8. '<|end|>' → logprob: -5.40247917175293
    9. ',' → logprob: -5.90247917175293
    10. '<|end|>' → logprob: -6.90247917175293

Token 6: 'for' (ID: 1938)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.06968530267477036
    2. '\' → logprob: -3.444685220718384
    3. '\n' → logprob: -4.194685459136963
    4. '```' → logprob: -4.319685459136963
    5. 'import' → logprob: -5.944685459136963
    6. ',' → logprob: -6.694685459136963
    7. 'def' → logprob: -7.319685459136963
    8. '.
' → logprob: -7.569685459136963
    9. '
' → logprob: -7.944685459136963
    10. '`' → logprob: -8.069684982299805

Token 7: ' line' (ID: 2543)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0009227732080034912
    2. '  ' → logprob: -7.125922679901123
    3. ' i' → logprob: -9.125923156738281
    4. '_' → logprob: -13.125923156738281
    5. ' space' → logprob: -13.125923156738281
    6. 'space' → logprob: -14.250923156738281
    7. ' ‌' → logprob: -14.375923156738281
    8. ' ```' → logprob: -14.375923156738281
    9. ' ▁' → logprob: -14.750923156738281
    10. ' )' → logprob: -14.875923156738281

Token 8: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.057000018656253815
    2. 'in' → logprob: -3.181999921798706
    3. '[' → logprob: -4.432000160217285
    4. ' ' → logprob: -7.557000160217285
    5. '(' → logprob: -8.182000160217285
    6. '.' → logprob: -8.557000160217285
    7. ':' → logprob: -8.682000160217285
    8. '  ' → logprob: -9.432000160217285
    9. '   ' → logprob: -9.557000160217285
    10. '[]' → logprob: -9.682000160217285

Token 9: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.018317801877856255
    2. 'sys' → logprob: -4.018317699432373
    3. '=sys' → logprob: -9.393318176269531
    4. ' ' → logprob: -10.393318176269531
    5. ' iter' → logprob: -11.393318176269531
    6. '	sys' → logprob: -11.518318176269531
    7. '(sys' → logprob: -12.143318176269531
    8. ' open' → logprob: -12.393318176269531
    9. 's' → logprob: -12.643318176269531
    10. ' range' → logprob: -12.643318176269531

Token 10: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0688634067773819
    2. '.stdin' → logprob: -3.0688633918762207
    3. '.readline' → logprob: -4.193863391876221
    4. '.argv' → logprob: -5.943863391876221
    5. '.stdout' → logprob: -6.818863391876221
    6. ' .' → logprob: -7.193863391876221
    7. '.input' → logprob: -8.818863868713379
    8. '.readlines' → logprob: -9.443863868713379
    9. '​.' → logprob: -10.068863868713379
    10. '.stderr' → logprob: -10.193863868713379

Token 11: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008006958523765206
    2. '[:]' → logprob: -8.750801086425781
    3. ':
' → logprob: -8.875801086425781
    4. ' :' → logprob: -9.125801086425781
    5. '.' → logprob: -9.375801086425781
    6. '.readline' → logprob: -9.500801086425781
    7. '':' → logprob: -9.625801086425781
    8. '":' → logprob: -10.625801086425781
    9. ':**' → logprob: -10.750801086425781
    10. '':'' → logprob: -11.000801086425781

Token 12: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010421457700431347
    2. '    
' → logprob: -4.760421276092529
    3. ':' → logprob: -7.260421276092529
    4. '.strip' → logprob: -7.760421276092529
    5. '    ' → logprob: -8.635421752929688
    6. '.rstrip' → logprob: -9.010421752929688
    7. '```' → logprob: -10.010421752929688
    8. 'rstrip' → logprob: -10.510421752929688
    9. ' readline' → logprob: -10.635421752929688
    10. '  
' → logprob: -10.635421752929688

Token 13: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012370610609650612
    2. ' line' → logprob: -4.512370586395264
    3. '    ' → logprob: -7.762370586395264
    4. ' if' → logprob: -8.262371063232422
    5. 'line' → logprob: -8.637371063232422
    6. '    
' → logprob: -9.262371063232422
    7. ' print' → logprob: -9.387371063232422
    8. 'print' → logprob: -9.512371063232422
    9. ' stripped' → logprob: -10.137371063232422
    10. '```' → logprob: -10.387371063232422

Token 14: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03126602619886398
    2. '=' → logprob: -3.5312659740448
    3. ' ' → logprob: -6.531266212463379
    4. '=int' → logprob: -10.781266212463379
    5. ',' → logprob: -11.656266212463379
    6. '.' → logprob: -12.406266212463379
    7. ' +=' → logprob: -12.656266212463379
    8. '_' → logprob: -12.906266212463379
    9. '  ' → logprob: -13.031266212463379
    10. 'umber' → logprob: -13.156266212463379

Token 15: ' line' (ID: 2543)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.009791151620447636
    2. 'int' → logprob: -4.634791374206543
    3. ' line' → logprob: -11.259791374206543
    4. ' float' → logprob: -11.384791374206543
    5. ' len' → logprob: -12.009791374206543
    6. ' ' → logprob: -12.884791374206543
    7. '=int' → logprob: -13.759791374206543
    8. 'line' → logprob: -14.884791374206543
    9. ' math' → logprob: -15.134791374206543
    10. '   ' → logprob: -15.884791374206543

Token 16: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.019747888669371605
    2. '.rstrip' → logprob: -4.519747734069824
    3. '.' → logprob: -4.769747734069824
    4. '.split' → logprob: -8.769747734069824
    5. '.readline' → logprob: -11.019747734069824
    6. 'strip' → logprob: -12.894747734069824
    7. '.replace' → logprob: -13.144747734069824
    8. 'rstrip' → logprob: -13.894747734069824
    9. '.trim' → logprob: -14.144747734069824
    10. '.chomp' → logprob: -14.394747734069824

Token 17: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.055361974984407425
    2. '(' → logprob: -2.9303619861602783
    3. '().' → logprob: -8.5553617477417
    4. '('' → logprob: -9.0553617477417
    5. '(
' → logprob: -10.5553617477417
    6. '())' → logprob: -10.5553617477417
    7. ')' → logprob: -11.1803617477417
    8. '("("' → logprob: -11.5553617477417
    9. '()+' → logprob: -11.6803617477417
    10. '()`' → logprob: -11.8053617477417

Token 18: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0940182209014893
    2. '   ' → logprob: -1.2190182209014893
    3. ' if' → logprob: -1.4690182209014893
    4. '
' → logprob: -3.0940182209014893
    5. '    
' → logprob: -3.8440182209014893
    6. ' 
' → logprob: -3.9690182209014893
    7. '```' → logprob: -4.59401798248291
    8. '<|end|>' → logprob: -5.09401798248291
    9. ' =' → logprob: -5.34401798248291
    10. '    ' → logprob: -5.34401798248291

Token 19: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3823305666446686
    2. ' if' → logprob: -1.2573305368423462
    3. '   ' → logprob: -4.507330417633057
    4. '    
' → logprob: -4.757330417633057
    5. ' 
' → logprob: -5.632330417633057
    6. '```' → logprob: -6.382330417633057
    7. '  
' → logprob: -6.632330417633057
    8. '   
' → logprob: -6.632330417633057
    9. '
' → logprob: -6.757330417633057
    10. '     
' → logprob: -6.882330417633057

Token 20: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.09641029685735703
    2. ' n' → logprob: -2.4714102745056152
    3. ' ' → logprob: -5.471410274505615
    4. 'not' → logprob: -6.096410274505615
    5. 'n' → logprob: -6.971410274505615
    6. ' ' → logprob: -10.471410751342773
    7. ' n't' → logprob: -12.596410751342773
    8. 'n't' → logprob: -12.721410751342773
    9. '  ' → logprob: -13.096410751342773
    10. '"' → logprob: -13.096410751342773

Token 21: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0031897129956632853
    2. 'n' → logprob: -5.753189563751221
    3. ' ' → logprob: -11.503190040588379
    4. '(n' → logprob: -14.253190040588379
    5. '	n' → logprob: -15.128190040588379
    6. ' ' → logprob: -15.128190040588379
    7. '_n' → logprob: -15.628190040588379
    8. 's' → logprob: -16.628189086914062
    9. ' н' → logprob: -16.753189086914062
    10. ' isinstance' → logprob: -16.878189086914062

Token 22: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3474344313144684
    2. '.is' → logprob: -1.597434401512146
    3. ' or' → logprob: -2.7224345207214355
    4. '.' → logprob: -3.9724345207214355
    5. ' .' → logprob: -5.8474345207214355
    6. ':
' → logprob: -6.7224345207214355
    7. '.startswith' → logprob: -6.8474345207214355
    8. '.strip' → logprob: -8.097434043884277
    9. ' :' → logprob: -8.847434043884277
    10. 'isdigit' → logprob: -8.847434043884277

Token 23: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007663871510885656
    2. ' break' → logprob: -7.750766277313232
    3. '   ' → logprob: -8.37576675415039
    4. ' continue' → logprob: -10.37576675415039
    5. 'break' → logprob: -10.50076675415039
    6. '    ' → logprob: -11.25076675415039
    7. 'continue' → logprob: -11.75076675415039
    8. '	break' → logprob: -11.75076675415039
    9. ':' → logprob: -13.00076675415039
    10. '	   ' → logprob: -13.25076675415039

Token 24: ' continue' (ID: 4901)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.08032511174678802
    2. 'break' → logprob: -2.580325126647949
    3. '   ' → logprob: -6.705325126647949
    4. '	break' → logprob: -9.70532512664795
    5. ' continue' → logprob: -9.83032512664795
    6. '       ' → logprob: -9.95532512664795
    7. 'continue' (adapté à ' continue') → logprob: -10.33032512664795
    8. '    ' → logprob: -12.20532512664795
    9. '```' → logprob: -12.20532512664795
    10. '    
' → logprob: -13.33032512664795

Token 25: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005039428360760212
    2. '    
' → logprob: -7.875504016876221
    3. 'n' → logprob: -9.500503540039062
    4. '```' → logprob: -10.750503540039062
    5. '   
' → logprob: -12.250503540039062
    6. ',' → logprob: -12.750503540039062
    7. '    ' → logprob: -12.875503540039062
    8. ' n' → logprob: -12.875503540039062
    9. '  ' → logprob: -13.000503540039062
    10. ':' → logprob: -13.250503540039062

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008205882040783763
    2. '    
' → logprob: -7.500820636749268
    3. 'n' → logprob: -9.00082015991211
    4. '```' → logprob: -9.25082015991211
    5. ' n' → logprob: -11.37582015991211
    6. '
' → logprob: -12.00082015991211
    7. 'try' → logprob: -12.62582015991211
    8. '   
' → logprob: -12.87582015991211
    9. '`' → logprob: -13.25082015991211
    10. '        
' → logprob: -13.25082015991211

Token 27: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.6666426062583923
    2. ' n' → logprob: -1.166642665863037
    3. '   ' → logprob: -1.791642665863037
    4. 'num' → logprob: -6.291642665863037
    5. '```' → logprob: -6.666642665863037
    6. ':' → logprob: -7.166642665863037
    7. '    ' → logprob: -7.291642665863037
    8. '    
' → logprob: -7.541642665863037
    9. ' =' → logprob: -7.666642665863037
    10. ' num' → logprob: -7.791642665863037

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08960277587175369
    2. '=' → logprob: -2.4646027088165283
    3. '=int' → logprob: -7.339602947235107
    4. 'int' → logprob: -12.33960247039795
    5. ' ' → logprob: -12.71460247039795
    6. ' =
' → logprob: -13.21460247039795
    7. ')' → logprob: -14.33960247039795
    8. 's' → logprob: -14.33960247039795
    9. ',' → logprob: -14.46460247039795
    10. '_int' → logprob: -14.46460247039795

Token 29: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.011051236651837826
    2. 'int' → logprob: -4.511051177978516
    3. '=int' → logprob: -13.136051177978516
    4. '[int' → logprob: -14.511051177978516
    5. '(int' → logprob: -15.136051177978516
    6. ' math' → logprob: -15.511051177978516
    7. ' in' → logprob: -15.886051177978516
    8. '	int' → logprob: -16.386051177978516
    9. ' ' → logprob: -16.511051177978516
    10. ' ' → logprob: -16.511051177978516

Token 30: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.1002136841416359
    2. '(' → logprob: -2.3502137660980225
    3. ' (' → logprob: -12.350214004516602
    4. '(
' → logprob: -13.725214004516602
    5. ' ' → logprob: -14.600214004516602
    6. '(line' → logprob: -14.975214004516602
    7. 'n' → logprob: -15.350214004516602
    8. ')' → logprob: -16.1002140045166
    9. '((' → logprob: -16.3502140045166
    10. '`' → logprob: -16.3502140045166

Token 31: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.0100624169572257e-05
    2. ' )' → logprob: -11.000020027160645
    3. ')
' → logprob: -13.500020027160645
    4. '))' → logprob: -14.250020027160645
    5. '**' → logprob: -15.375020027160645
    6. '`)' → logprob: -15.750020027160645
    7. ' ' → logprob: -15.875020027160645
    8. ')**' → logprob: -15.875020027160645
    9. '   ' → logprob: -16.00002098083496
    10. ')`' → logprob: -16.12502098083496

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03366044908761978
    2. '    
' → logprob: -4.408660411834717
    3. '```' → logprob: -4.783660411834717
    4. ' if' → logprob: -5.533660411834717
    5. '
' → logprob: -5.908660411834717
    6. '  
' → logprob: -7.158660411834717
    7. '   
' → logprob: -7.158660411834717
    8. ',' → logprob: -7.533660411834717
    9. 'if' → logprob: -7.533660411834717
    10. '    ' → logprob: -7.533660411834717

Token 33: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6969283223152161
    2. '   ' → logprob: -1.0719282627105713
    3. 'if' (adapté à ' if') → logprob: -3.3219282627105713
    4. 's' → logprob: -3.4469282627105713
    5. ' result' → logprob: -4.19692850112915
    6. '    
' → logprob: -4.44692850112915
    7. 'result' → logprob: -4.57192850112915
    8. ' 
' → logprob: -4.69692850112915
    9. '```' → logprob: -4.69692850112915
    10. ' s' → logprob: -5.32192850112915

Token 34: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.024123409762978554
    2. ' ' → logprob: -3.899123430252075
    3. 'n' → logprob: -5.649123191833496
    4. ' ' → logprob: -10.024123191833496
    5. ' not' → logprob: -12.524123191833496
    6. ' math' → logprob: -12.774123191833496
    7. '  ' → logprob: -14.149123191833496
    8. ' (' → logprob: -14.149123191833496
    9. '	n' → logprob: -14.961623191833496
    10. '(n' → logprob: -15.461623191833496

Token 35: ' ==' (ID: 951)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.3544546067714691
    2. ' ==' → logprob: -2.354454517364502
    3. '%' → logprob: -2.479454517364502
    4. ' >' → logprob: -2.729454517364502
    5. ' <=' → logprob: -3.479454517364502
    6. ' <' → logprob: -4.229454517364502
    7. '>' → logprob: -5.604454517364502
    8. '==' → logprob: -5.854454517364502
    9. ' ' → logprob: -7.104454517364502
    10. ' >=' → logprob: -7.104454517364502

Token 36: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14851851761341095
    2. '0' → logprob: -2.0235185623168945
    3. '1' → logprob: -5.1485185623168945
    4. '2' → logprob: -11.148518562316895
    5. '   ' → logprob: -14.836018562316895
    6. '  ' → logprob: -14.898518562316895
    7. '=' → logprob: -15.023518562316895
    8. ' ' → logprob: -15.086018562316895
    9. ' math' → logprob: -15.711018562316895
    10. '3' → logprob: -15.773518562316895

Token 37: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011212398298084736
    2. '1' → logprob: -5.136212348937988
    3. ' ' → logprob: -5.261212348937988
    4. '2' → logprob: -9.636212348937988
    5. '4' → logprob: -12.886212348937988
    6. '-' → logprob: -12.886212348937988
    7. '3' → logprob: -13.261212348937988
    8. ' 
' → logprob: -13.948712348937988
    9. '6' → logprob: -14.073712348937988
    10. '7' → logprob: -14.198712348937988

Token 38: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002518031978979707
    2. ' :' → logprob: -8.500251770019531
    3. ':
' → logprob: -10.000251770019531
    4. ':return' → logprob: -13.375251770019531
    5. ':**' → logprob: -14.625251770019531
    6. ' :
' → logprob: -15.125251770019531
    7. '):' → logprob: -15.375251770019531
    8. '   ' → logprob: -15.500251770019531
    9. '':' → logprob: -17.37525177001953
    10. ':

' → logprob: -17.50025177001953

Token 39: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0035580198746174574
    2. '   ' → logprob: -5.878558158874512
    3. ' break' → logprob: -8.003558158874512
    4. '    ' → logprob: -8.503558158874512
    5. ':' → logprob: -9.503558158874512
    6. '      ' → logprob: -10.378558158874512
    7. '     ' → logprob: -10.628558158874512
    8. '	break' → logprob: -11.128558158874512
    9. '    ' → logprob: -11.503558158874512
    10. ' ' → logprob: -11.878558158874512

Token 40: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.05485181882977486
    2. 'break' (adapté à ' break') → logprob: -3.429851770401001
    3. '       ' → logprob: -3.929851770401001
    4. '   ' → logprob: -7.05485200881958
    5. '	break' → logprob: -8.054851531982422
    6. '```' → logprob: -9.804851531982422
    7. 'b' → logprob: -11.304851531982422
    8. '    
' → logprob: -11.429851531982422
    9. 'br' → logprob: -11.554851531982422
    10. '        
' → logprob: -11.554851531982422

Token 41: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.722352921962738
    2. ':' → logprob: -1.3473529815673828
    3. '    
' → logprob: -2.097352981567383
    4. '\n' → logprob: -2.847352981567383
    5. '
' → logprob: -4.097352981567383
    6. ' 
' → logprob: -4.222352981567383
    7. '   
' → logprob: -4.597352981567383
    8. '  
' → logprob: -4.597352981567383
    9. '```' → logprob: -4.847352981567383
    10. '\' → logprob: -5.472352981567383

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24194608628749847
    2. '
' → logprob: -1.9919461011886597
    3. '    
' → logprob: -2.74194598197937
    4. '```' → logprob: -5.116946220397949
    5. ' 
' → logprob: -6.116946220397949
    6. '   
' → logprob: -6.491946220397949
    7. '  
' → logprob: -6.741946220397949
    8. '<|end|>' → logprob: -7.116946220397949
    9. '\n' → logprob: -7.491946220397949
    10. '\' → logprob: -7.991946220397949

Token 43: ' m' (ID: 284)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1754773110151291
    2. '    
' → logprob: -2.8004772663116455
    3. ' 
' → logprob: -3.1754772663116455
    4. '
' → logprob: -4.050477504730225
    5. '   
' → logprob: -4.425477504730225
    6. ' ' → logprob: -4.675477504730225
    7. '     
' → logprob: -5.550477504730225
    8. '  
' → logprob: -5.800477504730225
    9. 'n' → logprob: -5.925477504730225
    10. '    ' → logprob: -6.425477504730225

Token 44: ' =' (ID: 314)
  Prédit: 'ath'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ath' → logprob: -1.1577956676483154
    2. 'ax' → logprob: -1.2827956676483154
    3. ' =' → logprob: -1.2827956676483154
    4. 'a' → logprob: -2.2827956676483154
    5. '=' → logprob: -3.7827956676483154
    6. ' ' → logprob: -5.4077959060668945
    7. 'aths' → logprob: -7.0327959060668945
    8. 'atrix' → logprob: -9.032795906066895
    9. '   ' → logprob: -9.157795906066895
    10. 'at' → logprob: -9.407795906066895

Token 45: ' int' (ID: 677)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.40095993876457214
    2. ' int' → logprob: -1.2759599685668945
    3. ' ' → logprob: -3.2759599685668945
    4. ' n' → logprob: -4.7759599685668945
    5. 'math' → logprob: -6.6509599685668945
    6. ' max' → logprob: -6.6509599685668945
    7. 'int' → logprob: -6.7759599685668945
    8. '1' → logprob: -7.7759599685668945
    9. ' sum' → logprob: -8.150959968566895
    10. ' min' → logprob: -9.150959968566895

Token 46: '(sys' (ID: 41042)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16538670659065247
    2. '(math' → logprob: -1.91538667678833
    3. '(n' → logprob: -5.54038667678833
    4. '(s' → logprob: -7.66538667678833
    5. '((' → logprob: -7.79038667678833
    6. '(m' → logprob: -8.915387153625488
    7. '(max' → logprob: -9.665387153625488
    8. '('' → logprob: -9.665387153625488
    9. '(pow' → logprob: -10.665387153625488
    10. '(round' → logprob: -11.040387153625488

Token 47: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.021950993686914444
    2. '.' → logprob: -4.146951198577881
    3. '.argv' → logprob: -5.271951198577881
    4. '.readline' → logprob: -7.771951198577881
    5. '.max' → logprob: -8.771950721740723
    6. '.stdout' → logprob: -9.021950721740723
    7. '.sqrt' → logprob: -10.271950721740723
    8. '(stdin' → logprob: -11.896950721740723
    9. '.math' → logprob: -12.021950721740723
    10. '.std' → logprob: -12.271950721740723

Token 48: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.014168208464980125
    2. '.' → logprob: -4.2641682624816895
    3. ' .' → logprob: -13.139167785644531
    4. '().' → logprob: -13.514167785644531
    5. '.next' → logprob: -14.764167785644531
    6. '()' → logprob: -14.764167785644531
    7. ')' → logprob: -15.389167785644531
    8. '.read' → logprob: -15.764167785644531
    9. '.stdin' → logprob: -16.38916778564453
    10. ' readline' → logprob: -17.01416778564453

Token 49: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.16071675717830658
    2. '()' → logprob: -1.9107167720794678
    3. '().' → logprob: -7.910716533660889
    4. ' ())' → logprob: -9.160717010498047
    5. ' ()' → logprob: -12.160717010498047
    6. ')' → logprob: -12.535717010498047
    7. '()
' → logprob: -12.660717010498047
    8. '(' → logprob: -12.785717010498047
    9. '()))' → logprob: -13.410717010498047
    10. '())
' → logprob: -13.660717010498047

Token 50: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 51: ' total' (ID: 3609)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2775028944015503
    2. '<|end|>' → logprob: -2.65250301361084
    3. ' 
' → logprob: -3.02750301361084
    4. '#' → logprob: -3.90250301361084
    5. 'n' → logprob: -4.15250301361084
    6. '   ' → logprob: -4.52750301361084
    7. ')' → logprob: -4.65250301361084
    8. 's' → logprob: -4.90250301361084
    9. '\n' → logprob: -5.02750301361084
    10. '.' → logprob: -5.15250301361084

Token 52: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16727960109710693
    2. '_sum' → logprob: -2.6672797203063965
    3. '_' → logprob: -3.0422797203063965
    4. '=' → logprob: -3.4172797203063965
    5. '_points' → logprob: -7.4172797203063965
    6. '_s' → logprob: -7.5422797203063965
    7. ' +=' → logprob: -8.167279243469238
    8. '_space' → logprob: -8.167279243469238
    9. '_cost' → logprob: -8.417279243469238
    10. '_time' → logprob: -8.417279243469238

Token 53: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.026981662958860397
    2. '0' → logprob: -3.6519815921783447
    3. ' math' → logprob: -7.651981830596924
    4. ' n' → logprob: -9.401981353759766
    5. ' sum' → logprob: -10.151981353759766
    6. ' m' → logprob: -10.276981353759766
    7. 'math' → logprob: -11.276981353759766
    8. 'sum' → logprob: -11.526981353759766
    9. ' ' → logprob: -11.651981353759766
    10. 'n' → logprob: -12.151981353759766

Token 54: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07459618151187897
    2. 'math' → logprob: -3.8245961666107178
    3. 'm' → logprob: -4.324596405029297
    4. ' ' → logprob: -4.574596405029297
    5. ' math' → logprob: -4.574596405029297
    6. 'sum' → logprob: -4.824596405029297
    7. 'n' → logprob: -5.949596405029297
    8. ' m' → logprob: -6.324596405029297
    9. ' sum' → logprob: -6.574596405029297
    10. ' n' → logprob: -6.574596405029297

Token 55: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 56: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 57: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8615809082984924
    2. 'for' (adapté à ' for') → logprob: -0.8615809082984924
    3. ' ' → logprob: -1.9865808486938477
    4. '<|end|>' → logprob: -4.361580848693848
    5. '   ' → logprob: -5.611580848693848
    6. '    ' → logprob: -7.861580848693848
    7. ' 
' → logprob: -8.236580848693848
    8. '  ' → logprob: -8.361580848693848
    9. '	for' → logprob: -9.361580848693848
    10. ')' → logprob: -9.736580848693848

Token 58: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3544626832008362
    2. ' i' → logprob: -1.3544626235961914
    3. ' _' → logprob: -3.2294626235961914
    4. '_' → logprob: -7.479462623596191
    5. '  ' → logprob: -9.604462623596191
    6. ' range' → logprob: -9.854462623596191
    7. 'i' → logprob: -9.979462623596191
    8. ' ‌' → logprob: -11.354462623596191
    9. ' j' → logprob: -11.854462623596191
    10. ' in' → logprob: -12.479462623596191

Token 59: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004192248452454805
    2. 'in' → logprob: -6.129192352294922
    3. ' ' → logprob: -6.254192352294922
    4. 'range' → logprob: -10.629192352294922
    5. ' _' → logprob: -10.879192352294922
    6. ' i' → logprob: -11.254192352294922
    7. 'n' → logprob: -11.629192352294922
    8. ' range' → logprob: -12.754192352294922
    9. '	in' → logprob: -13.004192352294922
    10. 's' → logprob: -13.129192352294922

Token 60: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.08901341259479523
    2. ' range' → logprob: -2.4640133380889893
    3. '	range' → logprob: -10.58901309967041
    4. ' ' → logprob: -11.58901309967041
    5. '(range' → logprob: -11.96401309967041
    6. 'm' → logprob: -11.96401309967041
    7. ' xrange' → logprob: -12.08901309967041
    8. 'rang' → logprob: -12.33901309967041
    9. 'ran' → logprob: -12.58901309967041
    10. 'r' → logprob: -13.08901309967041

Token 61: '(m' (ID: 2145)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5204326510429382
    2. ' n' → logprob: -1.270432710647583
    3. ' m' → logprob: -2.645432710647583
    4. '(' → logprob: -3.895432710647583
    5. '(n' → logprob: -4.270432472229004
    6. ' (' → logprob: -4.770432472229004
    7. ')' → logprob: -6.395432472229004
    8. ' range' → logprob: -6.395432472229004
    9. '<|end|>' → logprob: -6.520432472229004
    10. 'm' → logprob: -6.770432472229004

Token 62: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004847922828048468
    2. ')' → logprob: -6.004848003387451
    3. ' ):' → logprob: -6.504848003387451
    4. '):
' → logprob: -7.629848003387451
    5. ':' → logprob: -8.129847526550293
    6. '   ' → logprob: -10.129847526550293
    7. ' )' → logprob: -10.879847526550293
    8. ',' → logprob: -11.879847526550293
    9. '+' → logprob: -12.379847526550293
    10. '**' → logprob: -12.629847526550293

Token 63: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4432893991470337
    2. '       ' → logprob: -1.4432893991470337
    3. '    ' → logprob: -2.568289279937744
    4. '   ' → logprob: -3.443289279937744
    5. '<|end|>' → logprob: -5.193289279937744
    6. '  ' → logprob: -6.693289279937744
    7. ' 
' → logprob: -6.818289279937744
    8. '        ' → logprob: -7.568289279937744
    9. ')' → logprob: -7.693289279937744
    10. '     ' → logprob: -7.818289279937744

Token 64: ' a' (ID: 261)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -1.6855064630508423
    2. ' a' → logprob: -1.9355064630508423
    3. ' line' → logprob: -2.0605063438415527
    4. ' parts' → logprob: -2.0605063438415527
    5. ' value' → logprob: -3.0605063438415527
    6. ' s' → logprob: -3.1855063438415527
    7. ' data' → logprob: -3.3105063438415527
    8. ' val' → logprob: -3.4355063438415527
    9. 'a' (adapté à ' a') → logprob: -3.6855063438415527
    10. '   ' → logprob: -3.8105063438415527

Token 65: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15593838691711426
    2. ' ,' → logprob: -2.6559383869171143
    3. ',b' → logprob: -2.6559383869171143
    4. ' =' → logprob: -6.530938148498535
    5. ' ' → logprob: -6.780938148498535
    6. '=' → logprob: -8.655938148498535
    7. ',n' → logprob: -8.905938148498535
    8. '_line' → logprob: -9.030938148498535
    9. ',line' → logprob: -9.155938148498535
    10. ',s' → logprob: -9.280938148498535

Token 66: ',d' (ID: 26159)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08943250775337219
    2. '=' → logprob: -2.46443247795105
    3. ',' → logprob: -7.714432716369629
    4. ' ,' → logprob: -10.589432716369629
    5. ')' → logprob: -11.964432716369629
    6. ' ' → logprob: -11.964432716369629
    7. '    ' → logprob: -13.339432716369629
    8. '=input' → logprob: -13.589432716369629
    9. '  ' → logprob: -13.839432716369629
    10. ' =
' → logprob: -13.964432716369629

Token 67: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42891091108322144
    2. '=' → logprob: -1.0539109706878662
    3. ',' → logprob: -8.678911209106445
    4. '=line' → logprob: -10.803911209106445
    5. '=input' → logprob: -12.053911209106445
    6. ' ' → logprob: -12.678911209106445
    7. ' ,' → logprob: -13.678911209106445
    8. '=sys' → logprob: -13.678911209106445
    9. '=int' → logprob: -13.803911209106445
    10. ')' → logprob: -14.553911209106445

Token 68: ' sys' (ID: 12228)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.02705673687160015
    2. 'map' → logprob: -4.277056694030762
    3. ' sys' → logprob: -4.402056694030762
    4. 'sys' → logprob: -8.777056694030762
    5. ' line' → logprob: -8.902056694030762
    6. ' ' → logprob: -9.152056694030762
    7. ' [' → logprob: -9.527056694030762
    8. '[' → logprob: -10.027056694030762
    9. ' list' → logprob: -11.152056694030762
    10. ' input' → logprob: -11.527056694030762

Token 69: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0014364237431436777
    2. '.' → logprob: -6.751436233520508
    3. '.stdout' → logprob: -9.251436233520508
    4. '.std' → logprob: -9.501436233520508
    5. '.readline' → logprob: -9.751436233520508
    6. '.argv' → logprob: -10.376436233520508
    7. '.stderr' → logprob: -13.126436233520508
    8. 'stdin' → logprob: -13.251436233520508
    9. '.st' → logprob: -14.376436233520508
    10. '.standard' → logprob: -14.501436233520508

Token 70: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00010747690976131707
    2. '.' → logprob: -9.250107765197754
    3. '.read' → logprob: -11.750107765197754
    4. '.readlines' → logprob: -12.750107765197754
    5. ' .' → logprob: -15.875107765197754
    6. ' readline' → logprob: -15.875107765197754
    7. '.stdin' → logprob: -16.375106811523438
    8. 'read' → logprob: -16.625106811523438
    9. '.write' → logprob: -18.000106811523438
    10. '.Read' → logprob: -18.125106811523438

Token 71: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00021915239631198347
    2. '()' → logprob: -8.875219345092773
    3. '.strip' → logprob: -9.750219345092773
    4. '.' → logprob: -11.500219345092773
    5. '.split' → logprob: -12.250219345092773
    6. ' ().' → logprob: -12.750219345092773
    7. '(' → logprob: -13.250219345092773
    8. '.rstrip' → logprob: -13.750219345092773
    9. ' .' → logprob: -15.125219345092773
    10. '   ' → logprob: -17.625219345092773

Token 72: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.16026301681995392
    2. 'split' → logprob: -1.9102630615234375
    3. 'rstrip' → logprob: -10.160263061523438
    4. ' split' → logprob: -15.785263061523438
    5. ' strip' → logprob: -16.660263061523438
    6. 'spl' → logprob: -17.785263061523438
    7. 'rs' → logprob: -18.285263061523438
    8. '.strip' → logprob: -19.660263061523438
    9. '(split' → logprob: -20.035263061523438
    10. 'plit' → logprob: -20.410263061523438

Token 73: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.000563042180147022
    2. '()' → logprob: -7.500563144683838
    3. '(' → logprob: -11.62556266784668
    4. ' ().' → logprob: -14.75056266784668
    5. '().'' → logprob: -15.25056266784668
    6. '('' → logprob: -15.50056266784668
    7. '.split' → logprob: -15.87556266784668
    8. '.' → logprob: -17.00056266784668
    9. '('').' → logprob: -17.37556266784668
    10. '(),' → logprob: -17.75056266784668

Token 74: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.512236498361744e-07
    2. ' split' → logprob: -15.375000953674316
    3. 'spl' → logprob: -16.5
    4. 'rstrip' → logprob: -16.5
    5. 'plit' → logprob: -17.0
    6. '(split' → logprob: -17.5
    7. 'rs' → logprob: -17.75
    8. 'sp' → logprob: -18.125
    9. 's' → logprob: -18.625
    10. '.split' → logprob: -19.25

Token 75: '(',')
' (ID: 161318)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5222251415252686
    2. '()' → logprob: -1.0222251415252686
    3. '('' → logprob: -3.1472251415252686
    4. '(',' → logprob: -5.772225379943848
    5. '(','' → logprob: -7.772225379943848
    6. '(),' → logprob: -8.772225379943848
    7. '("("' → logprob: -9.022225379943848
    8. '(",' → logprob: -9.897225379943848
    9. '("' → logprob: -10.022225379943848
    10. '(
' → logprob: -10.647225379943848

Token 76: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04204011335968971
    2. '<|end|>' → logprob: -3.2920401096343994
    3. ' )' → logprob: -6.5420403480529785
    4. '        ' → logprob: -7.1670403480529785
    5. '    ' → logprob: -7.4170403480529785
    6. '       ' → logprob: -7.4170403480529785
    7. ')' → logprob: -8.79203987121582
    8. '  ' → logprob: -9.29203987121582
    9. ' 
' → logprob: -9.66703987121582
    10. ' ,' → logprob: -9.91703987121582

Token 77: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0010207825107499957
    2. '<|end|>' → logprob: -7.251020908355713
    3. ' 
' → logprob: -9.876020431518555
    4. ' a' → logprob: -10.126020431518555
    5. ' )' → logprob: -10.251020431518555
    6. '    ' → logprob: -10.251020431518555
    7. ' ' → logprob: -10.501020431518555
    8. 'a' → logprob: -10.751020431518555
    9. '  ' → logprob: -10.876020431518555
    10. '        ' → logprob: -10.876020431518555

Token 78: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06385868042707443
    2. '=' → logprob: -2.8138587474823
    3. ' ' → logprob: -6.313858509063721
    4. '=int' → logprob: -9.688858985900879
    5. ')' → logprob: -12.438858985900879
    6. '.' → logprob: -13.313858985900879
    7. ',' → logprob: -13.438858985900879
    8. '  ' → logprob: -13.438858985900879
    9. ' *=' → logprob: -13.563858985900879
    10. ' ==' → logprob: -14.063858985900879

Token 79: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.9234731197357178
    2. 'int' → logprob: -1.2984731197357178
    3. ' float' → logprob: -1.4234731197357178
    4. 'float' → logprob: -2.4234731197357178
    5. ' math' → logprob: -8.423473358154297
    6. 'math' → logprob: -9.548473358154297
    7. ' ' → logprob: -9.548473358154297
    8. '1' → logprob: -10.923473358154297
    9. '[int' → logprob: -11.673473358154297
    10. ' ' → logprob: -12.673473358154297

Token 80: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.03804757073521614
    2. '(' → logprob: -3.2880475521087646
    3. ' (' → logprob: -12.288047790527344
    4. ')d' → logprob: -15.038047790527344
    5. ')' → logprob: -15.288047790527344
    6. 'd' → logprob: -15.288047790527344
    7. '(
' → logprob: -15.538047790527344
    8. ' ' → logprob: -15.663047790527344
    9. '	d' → logprob: -16.538047790527344
    10. ',d' → logprob: -16.663047790527344

Token 81: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009532637195661664
    2. ' )' → logprob: -7.500953197479248
    3. ')
' → logprob: -7.875953197479248
    4. '<|end|>' → logprob: -11.500953674316406
    5. ' ' → logprob: -13.125953674316406
    6. ' )
' → logprob: -13.250953674316406
    7. '   ' → logprob: -13.750953674316406
    8. ')
' → logprob: -14.125953674316406
    9. ')

' → logprob: -14.250953674316406
    10. '),' → logprob: -15.000953674316406

Token 82: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44309189915657043
    2. '   ' → logprob: -2.068091869354248
    3. '<|end|>' → logprob: -2.068091869354248
    4. ' ' → logprob: -2.443091869354248
    5. '
' → logprob: -5.568091869354248
    6. '    ' → logprob: -6.068091869354248
    7. '        
' → logprob: -6.193091869354248
    8. '        ' → logprob: -6.193091869354248
    9. ' 
' → logprob: -6.568091869354248
    10. '  ' → logprob: -6.693091869354248

Token 83: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.6889775991439819
    2. 'total' (adapté à ' total') → logprob: -1.188977599143982
    3. '   ' → logprob: -2.8139777183532715
    4. ' if' → logprob: -2.8139777183532715
    5. 'a' → logprob: -3.5639777183532715
    6. 'if' → logprob: -4.0639777183532715
    7. ' a' → logprob: -4.0639777183532715
    8. '       ' → logprob: -5.1889777183532715
    9. 'distance' → logprob: -6.5639777183532715
    10. ' ' → logprob: -7.0639777183532715

Token 84: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.01686692424118519
    2. '+=' → logprob: -4.141867160797119
    3. '+' → logprob: -7.141867160797119
    4. ' +' → logprob: -11.016866683959961
    5. '+=(' → logprob: -11.516866683959961
    6. ' -=' → logprob: -12.141866683959961
    7. ' ' → logprob: -12.766866683959961
    8. ']+=' → logprob: -13.266866683959961
    9. ' =' → logprob: -13.516866683959961
    10. '<|end|>' → logprob: -13.766866683959961

Token 85: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.4313441216945648
    2. 'd' → logprob: -1.9313441514968872
    3. ' math' → logprob: -2.0563440322875977
    4. 'math' → logprob: -3.8063440322875977
    5. ' a' → logprob: -3.9313440322875977
    6. ' int' → logprob: -4.306344032287598
    7. 'a' → logprob: -4.931344032287598
    8. ' ' → logprob: -5.056344032287598
    9. 'int' → logprob: -5.681344032287598
    10. '1' → logprob: -6.431344032287598

Token 86: ' //' (ID: 602)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13000045716762543
    2. '<|end|>' → logprob: -2.380000352859497
    3. '*' → logprob: -4.130000591278076
    4. ' 
' → logprob: -6.005000591278076
    5. '+' → logprob: -6.255000591278076
    6. ' ' → logprob: -6.505000591278076
    7. ' *' → logprob: -6.755000591278076
    8. '**' → logprob: -6.755000591278076
    9. '%' → logprob: -7.005000591278076
    10. '<|end|>' → logprob: -7.380000591278076

Token 87: ' ' (ID: 220)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.7359228730201721
    2. '2' → logprob: -1.1109228134155273
    3. 'math' → logprob: -2.9859228134155273
    4. 'a' → logprob: -2.9859228134155273
    5. ' ' → logprob: -3.1109228134155273
    6. 'n' → logprob: -4.360922813415527
    7. ' a' → logprob: -4.985922813415527
    8. '10' → logprob: -5.110922813415527
    9. ' n' → logprob: -5.360922813415527
    10. 'int' → logprob: -5.735922813415527

Token 88: '100' (ID: 1353)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.46717795729637146
    2. 'a' → logprob: -1.5921779870986938
    3. '2' → logprob: -2.8421778678894043
    4. 'n' → logprob: -3.0921778678894043
    5. ' math' → logprob: -3.5921778678894043
    6. '10' → logprob: -5.092177867889404
    7. 'int' → logprob: -5.092177867889404
    8. 'g' → logprob: -5.217177867889404
    9. 'max' → logprob: -5.717177867889404
    10. 'b' → logprob: -5.967177867889404

Token 89: ' -' (ID: 533)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 90: ' ' (ID: 220)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.8454271554946899
    2. ' ' → logprob: -1.84542715549469
    3. '1' → logprob: -2.0954270362854004
    4. ' (' → logprob: -2.2204270362854004
    5. ' a' → logprob: -2.4704270362854004
    6. ' int' → logprob: -3.9704270362854004
    7. 'math' → logprob: -3.9704270362854004
    8. 'a' → logprob: -3.9704270362854004
    9. '(' → logprob: -4.8454270362854
    10. '(math' → logprob: -5.0954270362854

Token 91: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8206858038902283
    2. 'a' → logprob: -1.445685863494873
    3. 'math' → logprob: -2.070685863494873
    4. '(a' → logprob: -2.945685863494873
    5. '(math' → logprob: -3.195685863494873
    6. '(' → logprob: -3.195685863494873
    7. 'int' → logprob: -3.695685863494873
    8. '(int' → logprob: -4.820685863494873
    9. 'b' → logprob: -5.570685863494873
    10. '(n' → logprob: -5.695685863494873

Token 92: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5368448495864868
    2. '<|end|>' → logprob: -1.0368448495864868
    3. '+' → logprob: -3.5368447303771973
    4. '*' → logprob: -4.161844730377197
    5. ')' → logprob: -5.036844730377197
    6. '```' → logprob: -6.536844730377197
    7. '0' → logprob: -6.661844730377197
    8. '+
' → logprob: -6.661844730377197
    9. '   ' → logprob: -6.786844730377197
    10. ' ' → logprob: -7.161844730377197

Token 93: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.008526868186891079
    2. '<|end|>' → logprob: -5.008526802062988
    3. '\n' → logprob: -8.008526802062988
    4. ')' → logprob: -8.133526802062988
    5. '+' → logprob: -8.258526802062988
    6. '
' → logprob: -8.758526802062988
    7. '*' → logprob: -8.883526802062988
    8. '   ' → logprob: -9.008526802062988
    9. ' 
' → logprob: -9.008526802062988
    10. '```' → logprob: -9.258526802062988

Token 94: ' print' (ID: 2123)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 95: '(total' (ID: 39744)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.36600369215011597
    2. '(total' → logprob: -1.2410037517547607
    3. '('' → logprob: -4.241003513336182
    4. '()' → logprob: -6.991003513336182
    5. '(f' → logprob: -7.616003513336182
    6. '("("' → logprob: -7.741003513336182
    7. 'total' → logprob: -8.36600399017334
    8. '("' → logprob: -8.36600399017334
    9. ' (' → logprob: -8.36600399017334
    10. '((' → logprob: -8.61600399017334

Token 96: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1041145626222715e-05
    2. ' )' → logprob: -12.125011444091797
    3. '+' → logprob: -12.750011444091797
    4. '*' → logprob: -13.125011444091797
    5. ')
' → logprob: -15.625011444091797
    6. '))' → logprob: -16.250011444091797
    7. ')`' → logprob: -16.375011444091797
    8. '```' → logprob: -16.375011444091797
    9. '`)' → logprob: -16.875011444091797
    10. '')' → logprob: -17.125011444091797


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 94
Tokens correctement prédits (1ère position, stricte): 44
Tokens correctement prédits (1ère position, avec adaptation): 46
Tokens correctement prédits (top 10): 75
Précision stricte (1ère position): 46.81%
Précision adaptée (1ère position): 48.94%
Précision (top 10): 79.79%
================================================================================
