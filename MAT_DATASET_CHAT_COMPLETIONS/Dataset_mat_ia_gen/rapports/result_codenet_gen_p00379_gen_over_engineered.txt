================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:07:30
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class DigitSum:
    def __init__(self, value: int):
        self.value = value

    def compute(self) -> int:
        total = 0
        temp = self.value
        while temp > 0:
            total += temp % 10
            temp //= 10
        return total

class ExponentiationStrategy:
    def __init__(self, base: int, exponent: int):
        self.base = base
        self.exponent = exponent

    def power(self) -> int:
        # Here, prepare for possible various exponentiation methods 
        return self.base ** self.exponent

class DudeneyCandidate:
    def __init__(self, x: int, a: int, n: int):
        self.x = x
        self.a = a
        self.n = n

    def is_valid(self) -> bool:
        y = DigitSum(self.x).compute()
        powered = ExponentiationStrategy(y + self.a, self.n).power()
        return self.x == powered

class DudeneyNumberEnumerator:
    def __init__(self, a: int, n: int, m: int):
        self.a = a
        self.n = n
        self.m = m

    def max_base_candidate(self) -> int:
        # To limit the search, find max base b such that b^n <= m,
        # b = y + a, and y <= 9 * number_of_digits(x)
        # But establish an upper bound for b: nth root of m
        return int(self.m ** (1/self.n)) + 1

    def enumerate(self) -> int:
        count = 0
        max_base = self.max_base_candidate()
        # Iterate over potential sums + a = base
        for base in range(self.a, max_base + 1):
            x = base ** self.n
            if x > self.m or x <= 0:
                continue
            candidate = DudeneyCandidate(x, self.a, self.n)
            if candidate.is_valid():
                count += 1
        return count

def main():
    import sys
    # Parsing input in a single line
    input_line = sys.stdin.readline().strip()
    a, n, m = map(int, input_line.split())
    enumerator = DudeneyNumberEnumerator(a, n, m)
    print(enumerator.enumerate())

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Digit' (ID: 91174)
  → Token d'amorce (pas de prédiction)

Token 2: 'Sum' (ID: 17434)
  → Token d'amorce (pas de prédiction)

Token 3: ':
' (ID: 734)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.2747267484664917
    2. '(' → logprob: -1.5247267484664917
    3. ':' → logprob: -4.149726867675781
    4. ' {' → logprob: -5.149726867675781
    5. '```' → logprob: -7.649726867675781
    6. '.' → logprob: -8.399726867675781
    7. ' (' → logprob: -9.399726867675781
    8. '(:' → logprob: -9.774726867675781
    9. '({' → logprob: -10.524726867675781
    10. ' ' → logprob: -10.649726867675781

Token 4: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14103823900222778
    2. '(' → logprob: -2.516038179397583
    3. '   ' → logprob: -3.516038179397583
    4. '```' → logprob: -4.141038417816162
    5. '():' → logprob: -5.891038417816162
    6. ':
' → logprob: -7.266038417816162
    7. '{' → logprob: -7.641038417816162
    8. '(
' → logprob: -8.016037940979004
    9. ' ' → logprob: -8.016037940979004
    10. '``' → logprob: -9.016037940979004

Token 5: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.32389843463897705
    2. '   ' → logprob: -1.448898434638977
    3. '```' → logprob: -4.0738983154296875
    4. ' ' → logprob: -4.9488983154296875
    5. 'def' (adapté à ' def') → logprob: -5.1988983154296875
    6. '    ' → logprob: -5.1988983154296875
    7. ' ```' → logprob: -6.4488983154296875
    8. '(' → logprob: -6.4488983154296875
    9. '_' → logprob: -6.6988983154296875
    10. '\' → logprob: -8.073898315429688

Token 6: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -1.2292612791061401
    2. ' ' → logprob: -1.4792612791061401
    3. ' calculate' → logprob: -1.4792612791061401
    4. '__' → logprob: -1.7292612791061401
    5. ' ' → logprob: -3.1042613983154297
    6. 'calculate' → logprob: -4.35426139831543
    7. '_' → logprob: -5.22926139831543
    8. ' compute' → logprob: -6.10426139831543
    9. ' init' → logprob: -6.72926139831543
    10. ' )' → logprob: -7.10426139831543

Token 7: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.011373155459296e-05
    2. '_init' → logprob: -10.750030517578125
    3. ' init' → logprob: -11.750030517578125
    4. '__' → logprob: -15.250030517578125
    5. 'ini' → logprob: -15.500030517578125
    6. 'i' → logprob: -16.125030517578125
    7. '_' → logprob: -16.500030517578125
    8. '_i' → logprob: -16.875030517578125
    9. '	init' → logprob: -17.625030517578125
    10. 'int' → logprob: -18.250030517578125

Token 8: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.24222372472286224
    2. '__' → logprob: -1.6172237396240234
    3. '(' → logprob: -4.367223739624023
    4. '__(
' → logprob: -6.117223739624023
    5. '(self' → logprob: -6.992223739624023
    6. '__((' → logprob: -7.992223739624023
    7. '_' → logprob: -8.117223739624023
    8. '__('' → logprob: -9.742223739624023
    9. ' (' → logprob: -10.867223739624023
    10. '<|end|>' → logprob: -10.867223739624023

Token 9: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0015331897884607315
    2. ' self' → logprob: -6.501533031463623
    3. ')' → logprob: -11.001533508300781
    4. ' ' → logprob: -12.001533508300781
    5. '(self' → logprob: -12.126533508300781
    6. ' )' → logprob: -14.251533508300781
    7. '   ' → logprob: -15.376533508300781
    8. '	self' → logprob: -15.376533508300781
    9. '       ' → logprob: -15.501533508300781
    10. '*self' → logprob: -15.626533508300781

Token 10: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8008756041526794
    2. ')' → logprob: -1.3008756637573242
    3. 'self' → logprob: -1.6758756637573242
    4. '(self' → logprob: -3.175875663757324
    5. '_' → logprob: -4.050875663757324
    6. '(' → logprob: -4.425875663757324
    7. '<|end|>' → logprob: -5.050875663757324
    8. '):' → logprob: -5.800875663757324
    9. ' self' → logprob: -6.175875663757324
    10. ' )' → logprob: -6.550875663757324

Token 11: ' value' (ID: 1432)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1674354076385498
    2. ' self' → logprob: -1.9174354076385498
    3. 'number' → logprob: -5.542435646057129
    4. 'n' → logprob: -6.667435646057129
    5. ' number' → logprob: -6.792435646057129
    6. ' n' → logprob: -7.917435646057129
    7. ' numbers' → logprob: -8.792435646057129
    8. 'num' → logprob: -9.042435646057129
    9. 'numbers' → logprob: -9.042435646057129
    10. 'value' → logprob: -10.042435646057129

Token 12: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.015260874293744564
    2. ')' → logprob: -4.265260696411133
    3. ':' → logprob: -7.515260696411133
    4. '=' → logprob: -8.140260696411133
    5. '   ' → logprob: -9.390260696411133
    6. ',' → logprob: -9.515260696411133
    7. '):
' → logprob: -10.015260696411133
    8. '_' → logprob: -11.265260696411133
    9. ' ):' → logprob: -11.515260696411133
    10. 's' → logprob: -12.390260696411133

Token 13: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5239279866218567
    2. ' int' → logprob: -0.8989279866218567
    3. ')' → logprob: -7.398928165435791
    4. ' )' → logprob: -8.898927688598633
    5. '   ' → logprob: -11.523927688598633
    6. ':int' → logprob: -11.773927688598633
    7. '=int' → logprob: -11.773927688598633
    8. '(int' → logprob: -12.023927688598633
    9. ' str' → logprob: -12.148927688598633
    10. ' ' → logprob: -12.273927688598633

Token 14: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16029642522335052
    2. ')' → logprob: -1.9102964401245117
    3. ':' → logprob: -10.160296440124512
    4. '):
' → logprob: -11.035296440124512
    5. '   ' → logprob: -11.535296440124512
    6. ' ):' → logprob: -12.910296440124512
    7. ',' → logprob: -13.785296440124512
    8. ' )' → logprob: -14.285296440124512
    9. '=' → logprob: -14.410296440124512
    10. ' ' → logprob: -14.410296440124512

Token 15: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011712433770298958
    2. 'self' → logprob: -5.511712551116943
    3. '    ' → logprob: -6.011712551116943
    4. '   ' → logprob: -6.261712551116943
    5. '        ' → logprob: -7.386712551116943
    6. ' self' → logprob: -7.761712551116943
    7. ' ' → logprob: -7.761712551116943
    8. '```' → logprob: -7.761712551116943
    9. '<|end|>' → logprob: -8.261712074279785
    10. ')' → logprob: -8.261712074279785

Token 16: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.06932765990495682
    2. ' self' → logprob: -3.0693275928497314
    3. '       ' → logprob: -3.9443275928497314
    4. '           ' → logprob: -7.8193278312683105
    5. '```' → logprob: -8.444327354431152
    6. ' ' → logprob: -8.569327354431152
    7. '        ' → logprob: -8.944327354431152
    8. '_self' → logprob: -9.444327354431152
    9. ' ' → logprob: -9.569327354431152
    10. '   ' → logprob: -11.319327354431152

Token 17: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.6328514814376831
    2. '.' → logprob: -0.7578514814376831
    3. ' .' → logprob: -9.132851600646973
    4. 'value' → logprob: -10.007851600646973
    5. '.val' → logprob: -10.382851600646973
    6. '._' → logprob: -11.257851600646973
    7. '.code' → logprob: -11.507851600646973
    8. '.s' → logprob: -12.132851600646973
    9. '.values' → logprob: -12.257851600646973
    10. ' ' → logprob: -12.632851600646973

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3869795501232147
    2. '=' → logprob: -1.136979579925537
    3. '.' → logprob: -10.136979103088379
    4. ' ' → logprob: -10.636979103088379
    5. '<|end|>' → logprob: -11.636979103088379
    6. ')' → logprob: -12.136979103088379
    7. '   ' → logprob: -12.261979103088379
    8. '  ' → logprob: -12.261979103088379
    9. '_' → logprob: -12.636979103088379
    10. '    ' → logprob: -13.011979103088379

Token 19: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.0485946387052536
    2. 'value' → logprob: -3.0485947132110596
    3. ' ' → logprob: -12.79859447479248
    4. '(value' → logprob: -12.79859447479248
    5. ')value' → logprob: -14.17359447479248
    6. '0' → logprob: -14.67359447479248
    7. ' )' → logprob: -16.173595428466797
    8. '	value' → logprob: -16.423595428466797
    9. '"value' → logprob: -16.423595428466797
    10. '=value' → logprob: -16.548595428466797

Token 20: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3568771183490753
    2. '   ' → logprob: -1.731877088546753
    3. '    
' → logprob: -2.731877088546753
    4. '\n' → logprob: -4.231877326965332
    5. '  
' → logprob: -4.481877326965332
    6. ' 
' → logprob: -4.981877326965332
    7. '```' → logprob: -5.231877326965332
    8. '<|end|>' → logprob: -5.231877326965332
    9. '\' → logprob: -5.356877326965332
    10. ' ' → logprob: -6.356877326965332

Token 21: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.040515534579753876
    2. '
' → logprob: -4.290515422821045
    3. '    
' → logprob: -4.290515422821045
    4. '```' → logprob: -5.665515422821045
    5. ' ' → logprob: -6.290515422821045
    6. ' 
' → logprob: -6.415515422821045
    7. '  
' → logprob: -6.665515422821045
    8. '\n' → logprob: -6.915515422821045
    9. '    ' → logprob: -7.165515422821045
    10. '\' → logprob: -7.790515422821045

Token 22: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.7598403096199036
    2. '   ' → logprob: -0.8848403096199036
    3. ' def' → logprob: -2.134840250015259
    4. '```' → logprob: -7.634840488433838
    5. '    
' → logprob: -8.75984001159668
    6. ' ' → logprob: -8.75984001159668
    7. '    ' → logprob: -8.88484001159668
    8. '       ' → logprob: -9.50984001159668
    9. ' 
' → logprob: -9.75984001159668
    10. '	def' → logprob: -10.88484001159668

Token 23: ' compute' (ID: 23864)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14976879954338074
    2. ' calculate' → logprob: -2.274768829345703
    3. ' compute' → logprob: -4.274768829345703
    4. ' sum' → logprob: -4.274768829345703
    5. '_' → logprob: -6.649768829345703
    6. ' add' → logprob: -6.774768829345703
    7. 'calculate' → logprob: -6.899768829345703
    8. ' space' → logprob: -7.024768829345703
    9. ' get' → logprob: -7.024768829345703
    10. ' _' → logprob: -7.274768829345703

Token 24: '(self' (ID: 2402)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.42305415868759155
    2. '_sum' → logprob: -1.1730542182922363
    3. '(' → logprob: -3.6730542182922363
    4. '_s' → logprob: -5.048054218292236
    5. '_value' → logprob: -6.423054218292236
    6. '_total' → logprob: -7.423054218292236
    7. ' _' → logprob: -8.423053741455078
    8. '(self' → logprob: -8.673053741455078
    9. '_digit' → logprob: -8.673053741455078
    10. ' ' → logprob: -9.048053741455078

Token 25: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13968348503112793
    2. '):' → logprob: -2.139683485031128
    3. ' )' → logprob: -5.139683723449707
    4. '.' → logprob: -6.139683723449707
    5. '_' → logprob: -6.389683723449707
    6. ')_' → logprob: -7.014683723449707
    7. ' ):' → logprob: -7.889683723449707
    8. '._' → logprob: -8.139683723449707
    9. '.)' → logprob: -8.264683723449707
    10. ',' → logprob: -8.264683723449707

Token 26: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0013048797845840454
    2. '(' → logprob: -8.001304626464844
    3. ' :' → logprob: -8.376304626464844
    4. '():' → logprob: -8.626304626464844
    5. '):' → logprob: -8.751304626464844
    6. '(self' → logprob: -9.001304626464844
    7. ':**' → logprob: -9.376304626464844
    8. '   ' → logprob: -10.001304626464844
    9. '       ' → logprob: -10.501304626464844
    10. '(:' → logprob: -10.501304626464844

Token 27: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.012560510076582432
    2. 'int' → logprob: -4.3875603675842285
    3. ' ' → logprob: -10.137560844421387
    4. ' None' → logprob: -12.512560844421387
    5. ' in' → logprob: -12.887560844421387
    6. ' ' → logprob: -13.887560844421387
    7. '  ' → logprob: -14.262560844421387
    8. '	int' → logprob: -14.387560844421387
    9. '[int' → logprob: -14.387560844421387
    10. '   ' → logprob: -14.762560844421387

Token 28: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00012570773833431304
    2. '():' → logprob: -9.125125885009766
    3. ':**' → logprob: -12.000125885009766
    4. '):' → logprob: -12.250125885009766
    5. ':return' → logprob: -13.250125885009766
    6. ':
' → logprob: -13.500125885009766
    7. ' :' → logprob: -13.750125885009766
    8. '':' → logprob: -14.875125885009766
    9. '(:' → logprob: -15.500125885009766
    10. '>:' → logprob: -15.625125885009766

Token 29: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005604391917586327
    2. '    ' → logprob: -6.755604267120361
    3. '\' → logprob: -6.880604267120361
    4. '        ' → logprob: -6.880604267120361
    5. '\n' → logprob: -6.880604267120361
    6. '   ' → logprob: -8.00560474395752
    7. '        
' → logprob: -8.75560474395752
    8. ' ' → logprob: -8.75560474395752
    9. 'return' → logprob: -9.50560474395752
    10. '```' → logprob: -9.50560474395752

Token 30: ' total' (ID: 3609)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0723999738693237
    2. '       ' → logprob: -1.1973999738693237
    3. 'return' → logprob: -2.1974000930786133
    4. 'r' → logprob: -2.9474000930786133
    5. 'result' → logprob: -2.9474000930786133
    6. 'n' → logprob: -3.3224000930786133
    7. ' if' → logprob: -3.4474000930786133
    8. 'total' (adapté à ' total') → logprob: -4.197400093078613
    9. 'if' → logprob: -4.322400093078613
    10. 'sum' → logprob: -4.822400093078613

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24896037578582764
    2. '=' → logprob: -1.9989603757858276
    3. ' +=' → logprob: -2.748960494995117
    4. '<|end|>' → logprob: -4.748960494995117
    5. ' ' → logprob: -4.998960494995117
    6. '+' → logprob: -6.498960494995117
    7. ' +' → logprob: -6.873960494995117
    8. ')' → logprob: -7.123960494995117
    9. '<|end|>' → logprob: -7.498960494995117
    10. '+=' → logprob: -8.123960494995117

Token 32: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10117127001285553
    2. '0' → logprob: -2.3511712551116943
    3. ' self' → logprob: -7.351171493530273
    4. 'self' → logprob: -8.726171493530273
    5. ' sum' → logprob: -9.226171493530273
    6. 'sum' → logprob: -9.726171493530273
    7. ' ' → logprob: -13.976171493530273
    8. '  ' → logprob: -14.851171493530273
    9. '   ' → logprob: -15.788671493530273
    10. '1' → logprob: -16.538671493530273

Token 33: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002617989666759968
    2. 'sum' → logprob: -6.377617835998535
    3. 'self' → logprob: -7.002617835998535
    4. ' ' → logprob: -12.377617835998535
    5. 'str' → logprob: -14.002617835998535
    6. ' sum' → logprob: -15.127617835998535
    7. 'int' → logprob: -15.502617835998535
    8. ' self' → logprob: -16.00261878967285
    9. '(sum' → logprob: -16.00261878967285
    10. '1' → logprob: -17.12761878967285

Token 34: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2972222864627838
    2. '
' → logprob: -1.5472222566604614
    3. 'for' → logprob: -4.172222137451172
    4. '<|end|>' → logprob: -4.422222137451172
    5. ' for' → logprob: -4.547222137451172
    6. '' → logprob: -6.422222137451172
    7. ' ' → logprob: -6.672222137451172
    8. '   ' → logprob: -7.422222137451172
    9. '\n' → logprob: -8.172222137451172
    10. ' 
' → logprob: -8.297222137451172

Token 35: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07026562094688416
    2. '       ' → logprob: -3.070265531539917
    3. '<|end|>' → logprob: -4.945265769958496
    4. ' 
' → logprob: -5.445265769958496
    5. ' ' → logprob: -5.695265769958496
    6. 'for' → logprob: -6.320265769958496
    7. ' for' → logprob: -6.945265769958496
    8. '        ' → logprob: -7.320265769958496
    9. '' → logprob: -7.445265769958496
    10. '        
' → logprob: -7.820265769958496

Token 36: ' temp' (ID: 5484)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8279091119766235
    2. 'for' → logprob: -1.4529091119766235
    3. 'temp' (adapté à ' temp') → logprob: -2.202908992767334
    4. ' n' → logprob: -2.452908992767334
    5. 'num' → logprob: -2.952908992767334
    6. ' for' → logprob: -3.452908992767334
    7. 'value' → logprob: -4.202908992767334
    8. ' temp' → logprob: -4.952908992767334
    9. '       ' → logprob: -5.077908992767334
    10. 'number' → logprob: -5.327908992767334

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0015536671271547675
    2. '=' → logprob: -7.126553535461426
    3. '_value' → logprob: -8.001553535461426
    4. ' ' → logprob: -8.126553535461426
    5. '_val' → logprob: -9.501553535461426
    6. '_' → logprob: -10.876553535461426
    7. '_number' → logprob: -12.001553535461426
    8. 'value' → logprob: -12.126553535461426
    9. '_num' → logprob: -12.126553535461426
    10. '   ' → logprob: -13.251553535461426

Token 38: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3868802487850189
    2. 'self' → logprob: -1.1368802785873413
    3. '	self' → logprob: -12.636879920959473
    4. ' ' → logprob: -13.136879920959473
    5. ' ' → logprob: -13.261879920959473
    6. '_self' → logprob: -14.136879920959473
    7. '   ' → logprob: -14.636879920959473
    8. 'Self' → logprob: -15.386879920959473
    9. '    ' → logprob: -15.511879920959473
    10. '(self' → logprob: -16.26188087463379

Token 39: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.014428031630814075
    2. '.' → logprob: -4.26442813873291
    3. ' .' → logprob: -8.26442813873291
    4. 'value' → logprob: -12.63942813873291
    5. '.val' → logprob: -13.13942813873291
    6. '.user' → logprob: -14.51442813873291
    7. '.v' → logprob: -15.51442813873291
    8. ').' → logprob: -16.139427185058594
    9. '._' → logprob: -16.514427185058594

Token 40: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11834128201007843
    2. ' 
' → logprob: -2.6183412075042725
    3. '       ' → logprob: -3.9933412075042725
    4. '        
' → logprob: -4.868341445922852
    5. ' while' → logprob: -5.493341445922852
    6. '  
' → logprob: -6.368341445922852
    7. 'while' → logprob: -6.493341445922852
    8. '    
' → logprob: -6.743341445922852
    9. '<|end|>' → logprob: -6.743341445922852
    10. '\n' → logprob: -7.243341445922852

Token 41: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9756501913070679
    2. ' 
' → logprob: -1.4756501913070679
    3. '       ' → logprob: -1.7256501913070679
    4. '        
' → logprob: -2.2256503105163574
    5. ' while' → logprob: -2.9756503105163574
    6. 'while' → logprob: -3.2256503105163574
    7. '<|end|>' → logprob: -4.850650310516357
    8. ' ' → logprob: -6.225650310516357
    9. '  
' → logprob: -6.350650310516357
    10. '    
' → logprob: -6.600650310516357

Token 42: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.13588175177574158
    2. 'while' (adapté à ' while') → logprob: -2.5108816623687744
    3. ' 
' → logprob: -3.2608816623687744
    4. '       ' → logprob: -5.5108819007873535
    5. '
' → logprob: -6.2608819007873535
    6. '        
' → logprob: -6.8858819007873535
    7. '	while' → logprob: -8.635881423950195
    8. ' ' → logprob: -9.385881423950195
    9. '    
' → logprob: -9.885881423950195
    10. '        ' → logprob: -10.510881423950195

Token 43: ' temp' (ID: 5484)
  Prédit: ' temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' temp' → logprob: -0.012762731872498989
    2. ' ' → logprob: -4.512762546539307
    3. 'temp' → logprob: -6.387762546539307
    4. '  ' → logprob: -12.137763023376465
    5. ' not' → logprob: -12.262763023376465
    6. '(temp' → logprob: -12.387763023376465
    7. ' ' → logprob: -12.512763023376465
    8. '	temp' → logprob: -12.512763023376465
    9. ' (' → logprob: -13.387763023376465
    10. '>' → logprob: -13.762763023376465

Token 44: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.018160592764616013
    2. '>' → logprob: -4.018160820007324
    3. ' !=' → logprob: -12.268160820007324
    4. ':' → logprob: -12.893160820007324
    5. ' ' → logprob: -13.393160820007324
    6. ' ' → logprob: -14.143160820007324
    7. '%' → logprob: -14.893160820007324
    8. '```' → logprob: -16.143159866333008
    9. ' %' → logprob: -16.268159866333008
    10. ' />' → logprob: -16.393159866333008

Token 45: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14267855882644653
    2. '0' → logprob: -2.0176784992218018
    3. '>' → logprob: -13.017678260803223
    4. '9' → logprob: -14.267678260803223
    5. ' ' → logprob: -15.267678260803223
    6. '=' → logprob: -15.642678260803223
    7. '  ' → logprob: -16.45517921447754
    8. '```' → logprob: -17.45517921447754
    9. '۰' → logprob: -17.70517921447754
    10. '<|end|>' → logprob: -17.76767921447754

Token 46: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007566197891719639
    2. ' ' → logprob: -7.500756740570068
    3. '9' → logprob: -8.50075626373291
    4. '>' → logprob: -16.250757217407227
    5. '```' → logprob: -16.375757217407227
    6. '۰' → logprob: -16.875757217407227
    7. '  ' → logprob: -17.000757217407227
    8. ' ' → logprob: -17.000757217407227
    9. '=' → logprob: -17.625757217407227
    10. '   ' → logprob: -18.063257217407227

Token 47: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004691188223659992
    2. ':
' → logprob: -5.379691123962402
    3. '<|end|>' → logprob: -10.504691123962402
    4. '       ' → logprob: -11.629691123962402
    5. '           ' → logprob: -11.879691123962402
    6. ' :' → logprob: -12.004691123962402
    7. ',' → logprob: -12.004691123962402
    8. '):' → logprob: -12.379691123962402
    9. '<|end|>' → logprob: -12.879691123962402
    10. ':

' → logprob: -13.504691123962402

Token 48: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17266251146793365
    2. '<|end|>' → logprob: -2.2976624965667725
    3. ' ' → logprob: -4.172662734985352
    4. '            ' → logprob: -4.672662734985352
    5. ' 
' → logprob: -5.297662734985352
    6. '<|end|>' → logprob: -5.422662734985352
    7. 't' → logprob: -5.547662734985352
    8. '        ' → logprob: -5.547662734985352
    9. '            
' → logprob: -5.547662734985352
    10. '0' → logprob: -5.797662734985352

Token 49: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.2083260416984558
    2. 'total' (adapté à ' total') → logprob: -1.7083261013031006
    3. ' ' → logprob: -5.8333258628845215
    4. '           ' → logprob: -5.9583258628845215
    5. '            ' → logprob: -7.7083258628845215
    6. ' 
' → logprob: -8.70832633972168
    7. ' remainder' → logprob: -8.95832633972168
    8. '   ' → logprob: -9.45832633972168
    9. '(total' → logprob: -9.70832633972168
    10. '    ' → logprob: -9.70832633972168

Token 50: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0006500058807432652
    2. '+=' → logprob: -7.375649929046631
    3. ' ' → logprob: -11.000650405883789
    4. ' +' → logprob: -13.125650405883789
    5. '    ' → logprob: -13.250650405883789
    6. ' ' → logprob: -14.125650405883789
    7. ' -=' → logprob: -14.500650405883789
    8. ']+=' → logprob: -14.625650405883789
    9. '```' → logprob: -15.125650405883789
    10. '+=(' → logprob: -15.625650405883789

Token 51: ' temp' (ID: 5484)
  Prédit: ' temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' temp' → logprob: -0.01105170976370573
    2. 'temp' → logprob: -4.511051654815674
    3. '(temp' → logprob: -13.011052131652832
    4. '	temp' → logprob: -14.011052131652832
    5. ' tmp' → logprob: -15.011052131652832
    6. '[temp' → logprob: -15.511052131652832
    7. ' ' → logprob: -17.011051177978516
    8. ' ' → logprob: -17.011051177978516
    9. '=temp' → logprob: -17.386051177978516
    10. 't' → logprob: -17.386051177978516

Token 52: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.049001872539520264
    2. '%' → logprob: -3.049001932144165
    3. ' ' → logprob: -7.799001693725586
    4. ' ' → logprob: -12.799001693725586
    5. '<|end|>' → logprob: -14.174001693725586
    6. ' `%' → logprob: -15.924001693725586
    7. '```' → logprob: -16.299001693725586
    8. ' %
' → logprob: -16.424001693725586
    9. ' //' → logprob: -16.924001693725586
    10. '4' → logprob: -17.299001693725586

Token 53: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00012201975914649665
    2. ' ' → logprob: -9.1251220703125
    3. '1' → logprob: -11.2501220703125
    4. '۱۰' → logprob: -18.7501220703125
    5. '```' → logprob: -19.2501220703125
    6. '9' → logprob: -19.5001220703125
    7. ' ' → logprob: -20.1251220703125
    8. '  ' → logprob: -20.3751220703125
    9. '１０' → logprob: -20.3751220703125
    10. '100' → logprob: -21.1251220703125

Token 54: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -7.226628895296017e-06
    2. '1' → logprob: -11.875007629394531
    3. ' ' → logprob: -15.500007629394531
    4. '۱۰' → logprob: -20.00000762939453
    5. '```' → logprob: -20.62500762939453
    6. '１０' → logprob: -21.25000762939453
    7. '१०' → logprob: -22.00000762939453
    8. '0' → logprob: -22.62500762939453
    9. '  ' → logprob: -22.87500762939453
    10. '100' → logprob: -22.87500762939453

Token 55: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02185627818107605
    2. '            
' → logprob: -4.896856307983398
    3. '\n' → logprob: -5.396856307983398
    4. ' 
' → logprob: -5.771856307983398
    5. '    
' → logprob: -5.896856307983398
    6. '
' → logprob: -6.271856307983398
    7. '            ' → logprob: -7.396856307983398
    8. '  
' → logprob: -8.021856307983398
    9. '   
' → logprob: -8.271856307983398
    10. '<|end|>' → logprob: -8.896856307983398

Token 56: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04237951338291168
    2. '            
' → logprob: -3.79237961769104
    3. '
' → logprob: -4.417379379272461
    4. '    
' → logprob: -6.042379379272461
    5. ' 
' → logprob: -6.417379379272461
    6. '\n' → logprob: -6.542379379272461
    7. '            ' → logprob: -7.667379379272461
    8. '     
' → logprob: -8.542379379272461
    9. '   
' → logprob: -8.667379379272461
    10. '           
' → logprob: -8.667379379272461

Token 57: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' (adapté à ' temp') → logprob: -0.0901527926325798
    2. ' temp' → logprob: -2.4651527404785156
    3. '           ' → logprob: -7.215152740478516
    4. ' ' → logprob: -8.590152740478516
    5. '            ' → logprob: -8.715152740478516
    6. '10' → logprob: -9.965152740478516
    7. '    ' → logprob: -10.840152740478516
    8. ' ' → logprob: -11.090152740478516
    9. '        ' → logprob: -11.840152740478516
    10. '   ' → logprob: -12.215152740478516

Token 58: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.018818870186805725
    2. ' ' → logprob: -4.5188188552856445
    3. ' =' → logprob: -5.2688188552856445
    4. '//=' → logprob: -6.2688188552856445
    5. '//' → logprob: -8.393818855285645
    6. ' >>=' → logprob: -8.518818855285645
    7. '=' → logprob: -9.518818855285645
    8. '   ' → logprob: -9.768818855285645
    9. '    ' → logprob: -9.893818855285645
    10. ' ' → logprob: -10.643818855285645

Token 59: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.5048530030981055e-06
    2. '10' → logprob: -14.500001907348633
    3. '=}' → logprob: -14.750001907348633
    4. ' ' → logprob: -16.375001907348633
    5. '=*/' → logprob: -16.375001907348633
    6. '=_' → logprob: -16.625001907348633
    7. '='' → logprob: -16.875001907348633
    8. ' =' → logprob: -17.000001907348633
    9. '=

' → logprob: -17.250001907348633
    10. '=.' → logprob: -17.375001907348633

Token 60: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '```' → logprob: -18.62502098083496
    4. '1' → logprob: -19.00002098083496
    5. '   ' → logprob: -19.25002098083496
    6. '۱۰' → logprob: -20.62502098083496
    7. '１０' → logprob: -21.12502098083496
    8. ' ' → logprob: -21.25002098083496
    9. '=' → logprob: -21.50002098083496
    10. '  ' → logprob: -21.50002098083496

Token 61: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '```' → logprob: -20.25
    4. '1' → logprob: -20.5
    5. '۱۰' → logprob: -21.125
    6. '   ' → logprob: -21.875
    7. '１０' → logprob: -22.0
    8. '0' → logprob: -22.25
    9. '
' → logprob: -22.75
    10. '१०' → logprob: -23.625

Token 62: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1430380940437317
    2. '
' → logprob: -2.018038034439087
    3. ' return' → logprob: -8.768037796020508
    4. '
' → logprob: -9.893037796020508
    5. 'return' → logprob: -10.143037796020508
    6. '        
' → logprob: -10.143037796020508
    7. ' 
' → logprob: -10.518037796020508
    8. '<|end|>' → logprob: -11.018037796020508
    9. '\n' → logprob: -11.268037796020508
    10. '```' → logprob: -12.018037796020508

Token 63: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003338717622682452
    2. '
' → logprob: -5.878338813781738
    3. '        
' → logprob: -8.753338813781738
    4. ' return' → logprob: -8.878338813781738
    5. ' 
' → logprob: -9.378338813781738
    6. 'return' → logprob: -9.628338813781738
    7. '   ' → logprob: -11.003338813781738
    8. '        ' → logprob: -11.378338813781738
    9. '```' → logprob: -11.503338813781738
    10. '\n' → logprob: -11.753338813781738

Token 64: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014774249866604805
    2. ' return' → logprob: -4.889774322509766
    3. 'return' (adapté à ' return') → logprob: -5.014774322509766
    4. '   ' → logprob: -8.514774322509766
    5. '
' → logprob: -8.639774322509766
    6. ' 
' → logprob: -9.764774322509766
    7. '	return' → logprob: -10.764774322509766
    8. '        
' → logprob: -11.889774322509766
    9. ' ' → logprob: -12.139774322509766
    10. '    ' → logprob: -12.139774322509766

Token 65: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.023245826363563538
    2. 'total' → logprob: -3.7732458114624023
    3. ' ' → logprob: -15.523245811462402
    4. ' tot' → logprob: -16.89824676513672
    5. ' tota' → logprob: -17.39824676513672
    6. '	total' → logprob: -18.64824676513672
    7. ' ' → logprob: -18.64824676513672
    8. ' totals' → logprob: -18.89824676513672
    9. '(total' → logprob: -19.27324676513672
    10. 'tot' → logprob: -19.64824676513672

Token 66: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 67: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5647157430648804
    2. '#' → logprob: -2.31471586227417
    3. '.' → logprob: -2.43971586227417
    4. '<|end|>' → logprob: -2.56471586227417
    5. '\n' → logprob: -3.43971586227417
    6. 'n' → logprob: -4.06471586227417
    7. '_' → logprob: -4.18971586227417
    8. '+' → logprob: -4.31471586227417
    9. '*' → logprob: -4.31471586227417
    10. '\' → logprob: -4.43971586227417

Token 68: ' Ex' (ID: 1771)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6078304052352905
    2. ' Digit' → logprob: -1.1078304052352905
    3. ' Space' → logprob: -2.98283052444458
    4. ' Pal' → logprob: -3.60783052444458
    5. ' Factor' → logprob: -4.23283052444458
    6. ' Number' → logprob: -4.23283052444458
    7. ' Dig' → logprob: -4.85783052444458
    8. ' Mult' → logprob: -6.60783052444458
    9. ' Doub' → logprob: -7.35783052444458
    10. ' Summ' → logprob: -7.35783052444458

Token 69: 'ponent' (ID: 1758)
  Prédit: 'ponent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ponent' → logprob: -0.04372791200876236
    2. 'ponential' → logprob: -4.043727874755859
    3. 'pression' → logprob: -4.918727874755859
    4. 'p' → logprob: -5.543727874755859
    5. 't' → logprob: -5.668727874755859
    6. 'pon' → logprob: -5.918727874755859
    7. 'tra' → logprob: -5.918727874755859
    8. 'ample' → logprob: -5.918727874755859
    9. 'po' → logprob: -7.168727874755859
    10. 'ception' → logprob: -7.668727874755859

Token 70: 'iation' (ID: 23408)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01658487506210804
    2. 'iation' → logprob: -4.516584873199463
    3. '(' → logprob: -5.766584873199463
    4. ' :' → logprob: -6.641584873199463
    5. '):' → logprob: -8.641585350036621
    6. 'iate' → logprob: -8.766585350036621
    7. 'Calculator' → logprob: -8.891585350036621
    8. ':
' → logprob: -9.516585350036621
    9. 'ation' → logprob: -9.891585350036621
    10. 'iating' → logprob: -9.891585350036621

Token 71: 'Strategy' (ID: 21488)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02369612641632557
    2. '(' → logprob: -3.773696184158325
    3. ' :' → logprob: -8.523695945739746
    4. '):' → logprob: -9.273695945739746
    5. '(object' → logprob: -10.398695945739746
    6. ':
' → logprob: -10.398695945739746
    7. '():' → logprob: -10.648695945739746
    8. '<|end|>' → logprob: -11.023695945739746
    9. ':**' → logprob: -11.398695945739746
    10. '   ' → logprob: -12.148695945739746

Token 72: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002177146729081869
    2. ' :' → logprob: -6.2521772384643555
    3. ':
' → logprob: -8.502177238464355
    4. '(' → logprob: -10.877177238464355
    5. ':def' → logprob: -12.127177238464355
    6. ' :
' → logprob: -12.252177238464355
    7. '():' → logprob: -12.627177238464355
    8. '):' → logprob: -12.752177238464355
    9. '<|end|>' → logprob: -12.752177238464355
    10. ':

' → logprob: -13.752177238464355

Token 73: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31361958384513855
    2. ' def' → logprob: -1.313619613647461
    3. 'def' → logprob: -8.313619613647461
    4. '    ' → logprob: -10.063619613647461
    5. ':' → logprob: -10.688619613647461
    6. '    
' → logprob: -11.438619613647461
    7. '	def' → logprob: -11.938619613647461
    8. ' ' → logprob: -12.188619613647461
    9. '   ' → logprob: -12.188619613647461
    10. '```' → logprob: -13.063619613647461

Token 74: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.062184691429138184
    2. 'def' (adapté à ' def') → logprob: -2.8121848106384277
    3. '   ' → logprob: -8.43718433380127
    4. ' ' → logprob: -16.187185287475586
    5. '    ' → logprob: -16.312185287475586
    6. '	def' → logprob: -16.687185287475586
    7. '```' → logprob: -18.437185287475586
    8. '  ' → logprob: -18.687185287475586
    9. ':def' → logprob: -19.937185287475586
    10. 'ndef' → logprob: -20.437185287475586

Token 75: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4234618544578552
    2. ' compute' → logprob: -1.2984619140625
    3. ' calculate' → logprob: -3.4234619140625
    4. ' __' → logprob: -4.0484619140625
    5. ' def' → logprob: -4.0484619140625
    6. ' _' → logprob: -6.7984619140625
    7. ' ```' → logprob: -7.4234619140625
    8. ' execute' → logprob: -7.6734619140625
    9. '  ' → logprob: -7.7984619140625
    10. 'compute' → logprob: -8.1734619140625

Token 76: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.002514069899916649
    2. 'call' → logprob: -6.377513885498047
    3. 'def' → logprob: -8.127513885498047
    4. 'in' → logprob: -8.877513885498047
    5. 'i' → logprob: -9.502513885498047
    6. 'ini' → logprob: -10.002513885498047
    7. ' init' → logprob: -10.002513885498047
    8. 'it' → logprob: -10.502513885498047
    9. 'nit' → logprob: -10.502513885498047
    10. 'int' → logprob: -10.627513885498047

Token 77: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.29055798053741455
    2. '__' → logprob: -2.290557861328125
    3. '(' → logprob: -2.415557861328125
    4. ' (' → logprob: -3.040557861328125
    5. '(self' → logprob: -4.915557861328125
    6. '_' → logprob: -5.790557861328125
    7. '__(
' → logprob: -6.415557861328125
    8. '__((' → logprob: -7.790557861328125
    9. '_(' → logprob: -8.165557861328125
    10. ' ' → logprob: -8.165557861328125

Token 78: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03643251955509186
    2. ' self' → logprob: -3.5364325046539307
    3. ')' → logprob: -5.16143274307251
    4. ' ' → logprob: -8.161432266235352
    5. ' )' → logprob: -8.411432266235352
    6. 'value' → logprob: -8.786432266235352
    7. '):
' → logprob: -10.161432266235352
    8. 'base' → logprob: -10.161432266235352
    9. ',' → logprob: -10.536432266235352
    10. 's' → logprob: -10.661432266235352

Token 79: ',' (ID: 11)
  Prédit: ' ,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ,' → logprob: -0.1131134033203125
    2. ',' → logprob: -2.2381134033203125
    3. ' )' → logprob: -8.363113403320312
    4. ' ' → logprob: -11.113113403320312
    5. ' ):' → logprob: -11.613113403320312
    6. ')' → logprob: -11.738113403320312
    7. 'self' → logprob: -11.863113403320312
    8. 'value' → logprob: -12.363113403320312
    9. ',value' → logprob: -12.613113403320312
    10. '  ' → logprob: -12.738113403320312

Token 80: ' base' (ID: 3611)
  Prédit: ' base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.290230393409729
    2. 'base' → logprob: -1.415230393409729
    3. ' power' → logprob: -6.6652302742004395
    4. 'ex' → logprob: -6.7902302742004395
    5. '):
' → logprob: -6.9152302742004395
    6. ')' → logprob: -6.9152302742004395
    7. ' ):
' → logprob: -7.0402302742004395
    8. ' exponent' → logprob: -7.0402302742004395
    9. 'power' → logprob: -7.0402302742004395
    10. ' )' → logprob: -7.5402302742004395

Token 81: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.061569333076477
    2. ' ,' → logprob: -1.061569333076477
    3. ' ):' → logprob: -1.561569333076477
    4. '):' → logprob: -3.0615692138671875
    5. '=' → logprob: -3.5615692138671875
    6. ' )' → logprob: -4.4365692138671875
    7. ':' → logprob: -5.5615692138671875
    8. ' ' → logprob: -5.8115692138671875
    9. ' =' → logprob: -6.1865692138671875
    10. ')' → logprob: -6.6865692138671875

Token 82: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5270135998725891
    2. 'int' → logprob: -0.9020135998725891
    3. '10' → logprob: -6.652013778686523
    4. ')' → logprob: -7.277013778686523
    5. ' )' → logprob: -7.402013778686523
    6. '2' → logprob: -7.902013778686523
    7. ' ' → logprob: -8.402013778686523
    8. '):
' → logprob: -9.152013778686523
    9. 'float' → logprob: -9.277013778686523
    10. ':int' → logprob: -9.277013778686523

Token 83: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16069230437278748
    2. '):' → logprob: -1.9106923341751099
    3. ')' → logprob: -9.03569221496582
    4. ' ):' → logprob: -9.03569221496582
    5. ' ,' → logprob: -9.41069221496582
    6. '):
' → logprob: -9.78569221496582
    7. ':' → logprob: -10.16069221496582
    8. '=' → logprob: -10.53569221496582
    9. '<|end|>' → logprob: -11.41069221496582
    10. ' ' → logprob: -12.41069221496582

Token 84: ' exponent' (ID: 51159)
  Prédit: ' exponent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exponent' → logprob: -0.05960707738995552
    2. 'ex' → logprob: -2.9346070289611816
    3. ' power' → logprob: -5.559607028961182
    4. ' ' → logprob: -7.934607028961182
    5. 'exp' → logprob: -8.80960750579834
    6. ' exp' → logprob: -8.93460750579834
    7. 'power' → logprob: -9.43460750579834
    8. ' ex' → logprob: -9.68460750579834
    9. '   ' → logprob: -10.05960750579834
    10. '```' → logprob: -11.93460750579834

Token 85: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0631072074174881
    2. '):' → logprob: -2.8131072521209717
    3. ' ):' → logprob: -7.563107013702393
    4. ':int' → logprob: -8.18810749053955
    5. ' :' → logprob: -8.68810749053955
    6. ')' → logprob: -9.06310749053955
    7. ' ' → logprob: -11.31310749053955
    8. '<|end|>' → logprob: -11.56310749053955
    9. '):
' → logprob: -11.68810749053955
    10. '<|end|>' → logprob: -11.93810749053955

Token 86: ' int' (ID: 677)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2485724687576294
    2. ' int' → logprob: -1.6235724687576294
    3. ' ' → logprob: -1.8735724687576294
    4. ' )' → logprob: -1.8735724687576294
    5. 'int' → logprob: -1.9985724687576294
    6. '2' → logprob: -2.99857234954834
    7. ')' → logprob: -3.99857234954834
    8. '<|end|>' → logprob: -5.87357234954834
    9. '0' → logprob: -7.87357234954834
    10. ' 
' → logprob: -7.99857234954834

Token 87: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0034372040536254644
    2. ')' → logprob: -5.753437042236328
    3. '):
' → logprob: -8.378437042236328
    4. ':' → logprob: -10.753437042236328
    5. ' ):' → logprob: -12.378437042236328
    6. '   ' → logprob: -13.753437042236328
    7. ',' → logprob: -14.128437042236328
    8. '<|end|>' → logprob: -14.503437042236328
    9. '       ' → logprob: -14.878437042236328
    10. '):

' → logprob: -15.378437042236328

Token 88: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05952901765704155
    2. ')' → logprob: -3.3095290660858154
    3. '   ' → logprob: -4.809528827667236
    4. '):' → logprob: -5.184528827667236
    5. ' )' → logprob: -6.184528827667236
    6. '<|end|>' → logprob: -6.559528827667236
    7. 'self' → logprob: -6.934528827667236
    8. ' ' → logprob: -7.059528827667236
    9. '):
' → logprob: -7.184528827667236
    10. ' ' → logprob: -8.059529304504395

Token 89: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.38696157932281494
    2. 'self' (adapté à ' self') → logprob: -1.136961579322815
    3. 'base' → logprob: -10.011961936950684
    4. ' base' → logprob: -10.511961936950684
    5. '       ' → logprob: -11.386961936950684
    6. '        ' → logprob: -12.886961936950684
    7. ' ' → logprob: -13.011961936950684
    8. ' ' → logprob: -13.511961936950684
    9. '	self' → logprob: -14.761961936950684
    10. 'super' → logprob: -15.636961936950684

Token 90: '.base' (ID: 15523)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.45039138197898865
    2. '.base' → logprob: -1.075391411781311
    3. ' ' → logprob: -4.4503912925720215
    4. ' .' → logprob: -4.8253912925720215
    5. '.value' → logprob: -7.0753912925720215
    6. ' base' → logprob: -7.3253912925720215
    7. ' =' → logprob: -8.82539176940918
    8. 'base' → logprob: -10.70039176940918
    9. ',' → logprob: -11.57539176940918
    10. '.data' → logprob: -11.82539176940918

Token 91: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01116241980344057
    2. ' ' → logprob: -5.136162281036377
    3. '=' → logprob: -5.261162281036377
    4. '<|end|>' → logprob: -10.636162757873535
    5. ' =
' → logprob: -12.886162757873535
    6. ')' → logprob: -13.886162757873535
    7. ' ,' → logprob: -14.011162757873535
    8. ',' → logprob: -14.636162757873535
    9. ' =)' → logprob: -14.761162757873535
    10. ' )' → logprob: -15.136162757873535

Token 92: ' base' (ID: 3611)
  Prédit: ' base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.009788316674530506
    2. 'base' → logprob: -4.634788513183594
    3. ' ' → logprob: -10.509788513183594
    4. ' ' → logprob: -12.634788513183594
    5. '	base' → logprob: -13.884788513183594
    6. 'ex' → logprob: -15.009788513183594
    7. 'Base' → logprob: -16.134788513183594
    8. '(base' → logprob: -16.134788513183594
    9. ' 
' → logprob: -16.259788513183594
    10. '_base' → logprob: -16.509788513183594

Token 93: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04474407806992531
    2. '       ' → logprob: -4.04474401473999
    3. ',' → logprob: -4.41974401473999
    4. '<|end|>' → logprob: -4.66974401473999
    5. ' 
' → logprob: -6.41974401473999
    6. ',
' → logprob: -6.54474401473999
    7. 'ex' → logprob: -7.54474401473999
    8. '<|end|>' → logprob: -8.169744491577148
    9. ' ' → logprob: -8.544744491577148
    10. '   ' → logprob: -8.669744491577148

Token 94: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004117104224860668
    2. ',' → logprob: -6.504117012023926
    3. '   ' → logprob: -7.504117012023926
    4. 'self' → logprob: -7.879117012023926
    5. '<|end|>' → logprob: -8.004117012023926
    6. '
' → logprob: -8.129117012023926
    7. ' ' → logprob: -8.379117012023926
    8. 'ex' → logprob: -8.504117012023926
    9. '    
' → logprob: -8.754117012023926
    10. '        
' → logprob: -9.004117012023926

Token 95: ' self' (ID: 1051)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.38232582807540894
    2. 'self' (adapté à ' self') → logprob: -1.8823258876800537
    3. ' self' → logprob: -2.3823258876800537
    4. ' exponent' → logprob: -2.6323258876800537
    5. '       ' → logprob: -6.882325649261475
    6. ' ex' → logprob: -9.632326126098633
    7. ' ' → logprob: -10.007326126098633
    8. '   ' → logprob: -10.757326126098633
    9. ' ' → logprob: -11.382326126098633
    10. '        ' → logprob: -11.632326126098633

Token 96: '.ex' (ID: 3482)
  Prédit: '.ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ex' → logprob: -0.3487826883792877
    2. '.' → logprob: -1.8487826585769653
    3. 'ex' → logprob: -2.973782777786255
    4. ' =' → logprob: -3.473782777786255
    5. '=' → logprob: -4.098782539367676
    6. '_ex' → logprob: -4.098782539367676
    7. ' exponent' → logprob: -4.473782539367676
    8. ' **' → logprob: -5.973782539367676
    9. ' ' → logprob: -6.098782539367676
    10. '**' → logprob: -6.723782539367676

Token 97: 'ponent' (ID: 1758)
  Prédit: 'ponent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ponent' → logprob: -2.093505099765025e-05
    2. 'pon' → logprob: -11.375020980834961
    3. 'ponen' → logprob: -13.125020980834961
    4. 'ponente' → logprob: -13.375020980834961
    5. 'onent' → logprob: -13.375020980834961
    6. 'po' → logprob: -13.500020980834961
    7. 'pone' → logprob: -13.875020980834961
    8. 'p' → logprob: -14.000020980834961
    9. '```' → logprob: -14.875020980834961
    10. 'pot' → logprob: -15.250020980834961

Token 98: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.015989787876605988
    2. '=' → logprob: -4.390989780426025
    3. ' ' → logprob: -5.890989780426025
    4. '<|end|>' → logprob: -7.265989780426025
    5. ' =
' → logprob: -12.140990257263184
    6. '<|end|>' → logprob: -12.765990257263184
    7. ')' → logprob: -14.015990257263184
    8. ' ' → logprob: -14.265990257263184
    9. ' =)' → logprob: -15.390990257263184
    10. '_' → logprob: -15.640990257263184

Token 99: ' exponent' (ID: 51159)
  Prédit: ' exponent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exponent' → logprob: -0.03847942873835564
    2. 'ex' → logprob: -3.2884793281555176
    3. ' ex' → logprob: -8.038479804992676
    4. ' ' → logprob: -9.163479804992676
    5. ' ' → logprob: -13.038479804992676
    6. '1' → logprob: -13.163479804992676
    7. 'Exponent' → logprob: -13.163479804992676
    8. '0' → logprob: -14.163479804992676
    9. '_ex' → logprob: -14.163479804992676
    10. '	ex' → logprob: -14.913479804992676

Token 100: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5339592099189758
    2. '   ' → logprob: -0.9089592099189758
    3. '    
' → logprob: -5.03395938873291
    4. '<|end|>' → logprob: -5.78395938873291
    5. 'def' → logprob: -7.65895938873291
    6. '<|end|>' → logprob: -7.90895938873291
    7. '

' → logprob: -8.53395938873291
    8. '        
' → logprob: -9.65895938873291
    9. ' def' → logprob: -10.03395938873291
    10. '  
' → logprob: -11.40895938873291

Token 101: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01526251807808876
    2. '
' → logprob: -4.390262603759766
    3. '    
' → logprob: -6.640262603759766
    4. 'def' → logprob: -6.890262603759766
    5. '<|end|>' → logprob: -8.265262603759766
    6. ' def' → logprob: -9.640262603759766
    7. '

' → logprob: -10.015262603759766
    8. '<|end|>' → logprob: -10.765262603759766
    9. '        
' → logprob: -10.890262603759766
    10. '  
' → logprob: -12.515262603759766

Token 102: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.002708819229155779
    2. ' def' → logprob: -6.002708911895752
    3. '   ' → logprob: -8.377708435058594
    4. 'de' → logprob: -13.752708435058594
    5. 'd' → logprob: -14.252708435058594
    6. ' ' → logprob: -14.377708435058594
    7. '    
' → logprob: -15.002708435058594
    8. '	def' → logprob: -15.252708435058594
    9. '
' → logprob: -16.002708435058594
    10. '  ' → logprob: -16.502708435058594

Token 103: ' power' (ID: 3470)
  Prédit: ' compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.5342332124710083
    2. ' execute' → logprob: -1.0342332124710083
    3. ' calculate' → logprob: -3.0342330932617188
    4. 'execute' → logprob: -5.159233093261719
    5. 'compute' → logprob: -5.909233093261719
    6. ' ' → logprob: -6.909233093261719
    7. 'calculate' → logprob: -8.284233093261719
    8. ' apply' → logprob: -8.909233093261719
    9. ' e' → logprob: -9.409233093261719
    10. ' evaluate' → logprob: -9.534233093261719

Token 104: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.029988130554556847
    2. '(' → logprob: -3.5299880504608154
    3. ' (' → logprob: -8.529988288879395
    4. '()' → logprob: -10.529988288879395
    5. 'self' → logprob: -12.529988288879395
    6. '   ' → logprob: -13.029988288879395
    7. '(
' → logprob: -13.154988288879395
    8. '       ' → logprob: -13.404988288879395
    9. ' ' → logprob: -13.654988288879395
    10. '(s' → logprob: -14.029988288879395

Token 105: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.031240500509738922
    2. ' ):' → logprob: -3.656240463256836
    3. ')' → logprob: -5.906240463256836
    4. '):
' → logprob: -6.906240463256836
    5. 'self' → logprob: -7.406240463256836
    6. '(self' → logprob: -9.031240463256836
    7. ' )' → logprob: -9.156240463256836
    8. '():' → logprob: -9.281240463256836
    9. '   ' → logprob: -9.281240463256836
    10. ' ' → logprob: -9.531240463256836

Token 106: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.48800140619277954
    2. ':' → logprob: -1.6130013465881348
    3. ' ->' → logprob: -2.3630013465881348
    4. '(' → logprob: -2.9880013465881348
    5. '->' → logprob: -3.6130013465881348
    6. ':
' → logprob: -5.488001346588135
    7. '       ' → logprob: -5.488001346588135
    8. ')' → logprob: -6.738001346588135
    9. ' (' → logprob: -7.113001346588135
    10. '():' → logprob: -7.113001346588135

Token 107: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.8076870441436768
    2. ' int' → logprob: -1.4326870441436768
    3. ' self' → logprob: -1.6826870441436768
    4. 'self' → logprob: -2.0576870441436768
    5. ' ' → logprob: -7.432686805725098
    6. '1' → logprob: -7.557686805725098
    7. ' pow' → logprob: -8.057686805725098
    8. 'pow' → logprob: -8.557686805725098
    9. ' None' → logprob: -9.807686805725098
    10. 'None' → logprob: -9.932686805725098

Token 108: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012066427618265152
    2. ':
' → logprob: -4.76206636428833
    3. '       ' → logprob: -5.76206636428833
    4. '<|end|>' → logprob: -9.387066841125488
    5. ':return' → logprob: -9.387066841125488
    6. '):' → logprob: -10.137066841125488
    7. '():' → logprob: -10.262066841125488
    8. '):
' → logprob: -11.262066841125488
    9. '():
' → logprob: -11.387066841125488
    10. '   ' → logprob: -11.762066841125488

Token 109: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005196703714318573
    2. 'return' → logprob: -7.750519752502441
    3. 'result' → logprob: -9.875519752502441
    4. ' return' → logprob: -11.000519752502441
    5. 'pow' → logprob: -12.000519752502441
    6. '0' → logprob: -12.625519752502441
    7. '```' → logprob: -13.125519752502441
    8. 'self' → logprob: -13.125519752502441
    9. '   ' → logprob: -13.500519752502441
    10. '      ' → logprob: -13.875519752502441

Token 110: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.01762055605649948
    2. ' result' → logprob: -4.39262056350708
    3. 'return' → logprob: -5.76762056350708
    4. '       ' → logprob: -6.39262056350708
    5. 'res' → logprob: -9.017620086669922
    6. 'self' → logprob: -9.642620086669922
    7. ' return' → logprob: -9.892620086669922
    8. '1' → logprob: -11.142620086669922
    9. '   ' → logprob: -11.517620086669922
    10. '0' → logprob: -12.267620086669922

Token 111: ' Here' (ID: 7306)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.3521758019924164
    2. 'result' → logprob: -1.2271758317947388
    3. ' return' → logprob: -6.352175712585449
    4. 'return' → logprob: -6.602175712585449
    5. '       ' → logprob: -8.60217571258545
    6. ' if' → logprob: -8.72717571258545
    7. 'if' → logprob: -9.85217571258545
    8. '   ' → logprob: -10.10217571258545
    9. ' total' → logprob: -10.85217571258545
    10. ' ' → logprob: -10.97717571258545

Token 112: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5119055509567261
    2. 'result' → logprob: -1.136905550956726
    3. ' result' → logprob: -2.7619056701660156
    4. ' return' → logprob: -5.136905670166016
    5. 'return' → logprob: -5.261905670166016
    6. '        ' → logprob: -6.011905670166016
    7. ',' → logprob: -6.511905670166016
    8. ':' → logprob: -7.636905670166016
    9. '   ' → logprob: -8.386905670166016
    10. ' is' → logprob: -8.636905670166016

Token 113: ' prepare' (ID: 13708)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.17271587252616882
    2. 'result' → logprob: -1.9227159023284912
    3. ' return' → logprob: -5.422715663909912
    4. '       ' → logprob: -5.672715663909912
    5. ' pass' → logprob: -7.172715663909912
    6. ' total' → logprob: -7.297715663909912
    7. 'return' → logprob: -7.422715663909912
    8. '   ' → logprob: -7.547715663909912
    9. ' we' → logprob: -8.04771614074707
    10. ' res' → logprob: -8.17271614074707

Token 114: ' for' (ID: 395)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.7597551941871643
    2. 'result' → logprob: -0.7597551941871643
    3. ' to' → logprob: -3.6347551345825195
    4. ' for' → logprob: -4.6347551345825195
    5. '       ' → logprob: -4.6347551345825195
    6. '_result' → logprob: -5.3847551345825195
    7. ' ' → logprob: -5.6347551345825195
    8. '    ' → logprob: -6.1347551345825195
    9. ' return' → logprob: -6.3847551345825195
    10. '   ' → logprob: -6.5097551345825195

Token 115: ' possible' (ID: 4149)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.2309235334396362
    2. ' exponent' → logprob: -1.6059235334396362
    3. '       ' → logprob: -2.355923652648926
    4. '   ' → logprob: -2.480923652648926
    5. ' result' → logprob: -2.980923652648926
    6. ' self' → logprob: -3.355923652648926
    7. ' an' → logprob: -3.605923652648926
    8. ' base' → logprob: -3.855923652648926
    9. ' for' → logprob: -3.980923652648926
    10. ' return' → logprob: -4.230923652648926

Token 116: ' various' (ID: 5890)
  Prédit: ' recursion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' recursion' → logprob: -0.7933136820793152
    2. ' optimization' → logprob: -2.41831374168396
    3. ' exponent' → logprob: -2.54331374168396
    4. ' recursive' → logprob: -2.54331374168396
    5. ' future' → logprob: -2.79331374168396
    6. ' exponential' → logprob: -3.54331374168396
    7. ' negative' → logprob: -3.66831374168396
    8. ' overflow' → logprob: -4.293313503265381
    9. ' exceptions' → logprob: -4.543313503265381
    10. ' return' → logprob: -4.668313503265381

Token 117: ' exponent' (ID: 51159)
  Prédit: ' exponent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exponent' → logprob: -0.7396121025085449
    2. ' implementations' → logprob: -1.364612102508545
    3. ' strategies' → logprob: -2.614612102508545
    4. 'ex' → logprob: -3.114612102508545
    5. ' methods' → logprob: -3.614612102508545
    6. ' approaches' → logprob: -3.739612102508545
    7. '   ' → logprob: -3.864612102508545
    8. 'strateg' → logprob: -3.989612102508545
    9. ' ways' → logprob: -4.364612102508545
    10. 'implement' → logprob: -4.489612102508545

Token 118: 'iation' (ID: 23408)
  Prédit: 'iation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iation' → logprob: -0.1307201385498047
    2. '   ' → logprob: -2.6307201385498047
    3. '       ' → logprob: -4.005720138549805
    4. 'i' → logprob: -4.005720138549805
    5. ' ' → logprob: -5.630720138549805
    6. '    ' → logprob: -5.880720138549805
    7. '  ' → logprob: -6.255720138549805
    8. 'iating' → logprob: -7.005720138549805
    9. '     ' → logprob: -7.193220138549805
    10. ' i' → logprob: -7.693220138549805

Token 119: ' methods' (ID: 7933)
  Prédit: ' methods'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' methods' → logprob: -0.24140386283397675
    2. ' strategies' → logprob: -2.241403818130493
    3. ' implementations' → logprob: -3.491403818130493
    4. ' approaches' → logprob: -3.491403818130493
    5. '   ' → logprob: -3.866403818130493
    6. ' techniques' → logprob: -4.491404056549072
    7. '       ' → logprob: -4.866404056549072
    8. ' s' → logprob: -6.241404056549072
    9. 'methods' → logprob: -6.491404056549072
    10. 'strateg' → logprob: -6.741404056549072

Token 120: ' 
' (ID: 793)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004060050705447793
    2. '<|end|>' → logprob: -8.375406265258789
    3. 'return' → logprob: -9.750406265258789
    4. '
' → logprob: -9.875406265258789
    5. '        
' → logprob: -10.625406265258789
    6. ' return' → logprob: -11.625406265258789
    7. '        ' → logprob: -11.750406265258789
    8. '<|end|>' → logprob: -11.875406265258789
    9. ',' → logprob: -12.375406265258789
    10. '      ' → logprob: -12.625406265258789

Token 121: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007130279554985464
    2. '        
' → logprob: -8.500713348388672
    3. '<|end|>' → logprob: -8.875713348388672
    4. ',' → logprob: -8.875713348388672
    5. 'return' → logprob: -9.625713348388672
    6. ' by' → logprob: -10.125713348388672
    7. '
' → logprob: -10.375713348388672
    8. ' return' → logprob: -10.500713348388672
    9. ' and' → logprob: -11.500713348388672
    10. '   ' → logprob: -11.875713348388672

Token 122: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011530972085893154
    2. 'return' (adapté à ' return') → logprob: -4.511530876159668
    3. ' return' → logprob: -8.136530876159668
    4. '
' → logprob: -9.136530876159668
    5. '        
' → logprob: -10.761530876159668
    6. 'if' → logprob: -11.261530876159668
    7. ',' → logprob: -11.386530876159668
    8. ' if' → logprob: -11.761530876159668
    9. '```' → logprob: -12.386530876159668
    10. '      ' → logprob: -12.636530876159668

Token 123: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4754559099674225
    2. ' self' → logprob: -0.9754558801651001
    3. 'pow' → logprob: -6.9754557609558105
    4. ' pow' → logprob: -7.7254557609558105
    5. ' ' → logprob: -14.350456237792969
    6. '	self' → logprob: -14.600456237792969
    7. '(self' → logprob: -14.725456237792969
    8. '   ' → logprob: -15.725456237792969
    9. ' ' → logprob: -16.35045623779297
    10. '[self' → logprob: -16.85045623779297

Token 124: '.base' (ID: 15523)
  Prédit: '.base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.base' → logprob: -5.490809417096898e-05
    2. '.' → logprob: -10.500055313110352
    3. 'base' → logprob: -10.875055313110352
    4. ' .' → logprob: -12.875055313110352
    5. '.power' → logprob: -13.250055313110352
    6. '.value' → logprob: -14.000055313110352
    7. '.pow' → logprob: -14.250055313110352
    8. ' base' → logprob: -15.250055313110352
    9. '_.' → logprob: -15.500055313110352
    10. '(base' → logprob: -15.625055313110352

Token 125: ' **' (ID: 6240)
  Prédit: ' **'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' **' → logprob: -0.004078639671206474
    2. '**' → logprob: -5.5040788650512695
    3. ' ' → logprob: -16.379077911376953
    4. ' ' → logprob: -16.629077911376953
    5. ' self' → logprob: -18.254077911376953
    6. '```' → logprob: -19.129077911376953
    7. 'self' → logprob: -19.504077911376953
    8. ' raised' → logprob: -19.754077911376953
    9. '       ' → logprob: -20.379077911376953
    10. ' **
' → logprob: -20.754077911376953

Token 126: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0015023599844425917
    2. ' self' → logprob: -6.501502513885498
    3. '(self' → logprob: -17.751502990722656
    4. '	self' → logprob: -18.126502990722656
    5. '       ' → logprob: -19.001502990722656
    6. '0' → logprob: -19.126502990722656
    7. ' ' → logprob: -19.126502990722656
    8. '<|end|>' → logprob: -19.376502990722656
    9. '1' → logprob: -20.376502990722656
    10. '[self' → logprob: -20.626502990722656

Token 127: '.ex' (ID: 3482)
  Prédit: '.ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ex' → logprob: -9.710618905955926e-05
    2. '.' → logprob: -9.250097274780273
    3. ' .' → logprob: -14.125097274780273
    4. 'ex' → logprob: -15.875097274780273
    5. '.exp' → logprob: -17.375097274780273
    6. 'Exponent' → logprob: -17.500097274780273
    7. '..' → logprob: -18.250097274780273
    8. '.Ex' → logprob: -18.375097274780273
    9. ').' → logprob: -18.750097274780273
    10. '.con' → logprob: -18.875097274780273

Token 128: 'ponent' (ID: 1758)
  Prédit: 'ponent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ponent' → logprob: -9.372294698550832e-06
    2. 'pon' → logprob: -12.125009536743164
    3. 'pot' → logprob: -12.875009536743164
    4. 'ponente' → logprob: -15.000009536743164
    5. 'pow' → logprob: -15.250009536743164
    6. 'po' → logprob: -15.750009536743164
    7. 'pont' → logprob: -15.875009536743164
    8. 'p' → logprob: -16.000009536743164
    9. 'ponen' → logprob: -16.125009536743164
    10. 'ponents' → logprob: -16.625009536743164

Token 129: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 130: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.2592238485813141
    2. '
' → logprob: -1.5092238187789917
    3. '

' → logprob: -5.634223937988281
    4. '<|end|>' → logprob: -5.759223937988281
    5. '```' → logprob: -9.134223937988281
    6. ' class' → logprob: -9.259223937988281
    7. '
' → logprob: -9.259223937988281
    8. '<|end|>' → logprob: -9.759223937988281
    9. '    
' → logprob: -10.134223937988281
    10. '  
' → logprob: -10.259223937988281

Token 131: ' D' (ID: 415)
  Prédit: ' Calculator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Calculator' → logprob: -0.7993601560592651
    2. ' Power' → logprob: -2.1743602752685547
    3. ' Multip' → logprob: -2.4243602752685547
    4. ' Digit' → logprob: -2.7993602752685547
    5. ' Calculation' → logprob: -2.9243602752685547
    6. ' Factor' → logprob: -3.4243602752685547
    7. ' Number' → logprob: -3.7993602752685547
    8. ' Context' → logprob: -3.9243602752685547
    9. ' Operation' → logprob: -4.549360275268555
    10. ' Sum' → logprob: -4.549360275268555

Token 132: 'uden' (ID: 25460)
  Prédit: 'igit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'igit' → logprob: -0.6470786929130554
    2. 'ec' → logprob: -1.1470787525177002
    3. 'iv' → logprob: -2.8970787525177
    4. 'igital' → logprob: -3.1470787525177
    5. 'igits' → logprob: -4.022078514099121
    6. 'ouble' → logprob: -4.897078514099121
    7. 'ynamic' → logprob: -5.272078514099121
    8. 'irect' → logprob: -5.397078514099121
    9. 'is' → logprob: -5.772078514099121
    10. 'ivid' → logprob: -6.272078514099121

Token 133: 'ey' (ID: 806)
  Prédit: 'ey'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ey' → logprob: -0.09710245579481125
    2. 'm' → logprob: -2.972102403640747
    3. 'mey' → logprob: -4.722102642059326
    4. 'z' → logprob: -5.722102642059326
    5. 'k' → logprob: -5.722102642059326
    6. 'd' → logprob: -5.722102642059326
    7. 'berg' → logprob: -6.097102642059326
    8. 'ess' → logprob: -6.097102642059326
    9. 'ko' → logprob: -6.097102642059326
    10. 'mu' → logprob: -6.222102642059326

Token 134: 'Candidate' (ID: 58112)
  Prédit: 'Number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Number' → logprob: -0.001511408481746912
    2. 'number' → logprob: -7.876511573791504
    3. '   ' → logprob: -8.376511573791504
    4. 'Numbers' → logprob: -8.751511573791504
    5. 'Root' → logprob: -9.376511573791504
    6. '```' → logprob: -9.376511573791504
    7. 'Cube' → logprob: -9.501511573791504
    8. ' ' → logprob: -9.626511573791504
    9. 'Digit' → logprob: -10.001511573791504
    10. 'Square' → logprob: -10.501511573791504

Token 135: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03006807155907154
    2. ':
' → logprob: -3.5300681591033936
    3. '(' → logprob: -8.530068397521973
    4. '(D' → logprob: -9.280068397521973
    5. ' :' → logprob: -11.530068397521973
    6. ':

' → logprob: -12.280068397521973
    7. '(object' → logprob: -13.280068397521973
    8. ':
' → logprob: -13.780068397521973
    9. '   ' → logprob: -14.030068397521973
    10. 's' → logprob: -14.280068397521973

Token 136: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45419204235076904
    2. ':
' → logprob: -1.079192042350769
    3. ':' → logprob: -3.8291921615600586
    4. '):
' → logprob: -6.954192161560059
    5. ' def' → logprob: -7.204192161560059
    6. 'def' → logprob: -7.829192161560059
    7. ' (' → logprob: -7.954192161560059
    8. '(' → logprob: -8.454192161560059
    9. '(object' → logprob: -8.454192161560059
    10. '<|end|>' → logprob: -8.579192161560059

Token 137: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.17008507251739502
    2. 'def' (adapté à ' def') → logprob: -1.920085072517395
    3. '   ' → logprob: -4.6700849533081055
    4. ':
' → logprob: -8.295084953308105
    5. ':' → logprob: -9.670084953308105
    6. 'class' → logprob: -9.920084953308105
    7. '):
' → logprob: -10.545084953308105
    8. ' ' → logprob: -11.170084953308105
    9. '
' → logprob: -11.920084953308105
    10. '	def' → logprob: -12.045084953308105

Token 138: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0005289645632728934
    2. '__' → logprob: -8.625529289245605
    3. ' init' → logprob: -8.875529289245605
    4. 'init' → logprob: -9.250529289245605
    5. '_init' → logprob: -10.000529289245605
    6. ' def' → logprob: -10.250529289245605
    7. ' ' → logprob: -10.750529289245605
    8. ' _' → logprob: -12.375529289245605
    9. ' ' → logprob: -13.000529289245605
    10. ' ```' → logprob: -13.375529289245605

Token 139: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -4.320199877838604e-07
    2. ' init' → logprob: -16.625
    3. 'ini' → logprob: -16.625
    4. 'new' → logprob: -16.875
    5. 'i' → logprob: -17.25
    6. '```' → logprob: -17.375
    7. '   ' → logprob: -17.75
    8. 'int' → logprob: -18.25
    9. '_init' → logprob: -18.375
    10. 'def' → logprob: -18.75

Token 140: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0036345154512673616
    2. '__' → logprob: -5.628634452819824
    3. '__(
' → logprob: -10.503634452819824
    4. '__((' → logprob: -12.003634452819824
    5. '__('' → logprob: -15.003634452819824
    6. '__(*' → logprob: -15.628634452819824
    7. '__("' → logprob: -15.878634452819824
    8. '(self' → logprob: -16.37863540649414
    9. '__[' → logprob: -16.87863540649414
    10. '___' → logprob: -16.87863540649414

Token 141: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0006327360169962049
    2. ' self' → logprob: -7.3756327629089355
    3. ',' → logprob: -12.500632286071777
    4. '(self' → logprob: -13.375632286071777
    5. '
' → logprob: -14.625632286071777
    6. ',self' → logprob: -16.125633239746094
    7. ')' → logprob: -16.375633239746094
    8. '	self' → logprob: -16.375633239746094
    9. '<|end|>' → logprob: -17.125633239746094
    10. 'value' → logprob: -17.125633239746094

Token 142: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022821188031230122
    2. ' ,' → logprob: -9.000227928161621
    3. 'self' → logprob: -9.250227928161621
    4. '<|end|>' → logprob: -12.750227928161621
    5. ' (' → logprob: -13.625227928161621
    6. '(self' → logprob: -13.875227928161621
    7. '(' → logprob: -14.250227928161621
    8. ' self' → logprob: -14.375227928161621
    9. '‌,' → logprob: -14.500227928161621
    10. ')' → logprob: -14.625227928161621

Token 143: ' x' (ID: 1215)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.14578655362129211
    2. ' self' → logprob: -2.1457865238189697
    3. 'value' → logprob: -4.895786762237549
    4. ' number' → logprob: -5.395786762237549
    5. ' value' → logprob: -5.520786762237549
    6. 'number' → logprob: -6.145786762237549
    7. 'n' → logprob: -8.27078628540039
    8. ' n' → logprob: -10.02078628540039
    9. ' base' → logprob: -10.27078628540039
    10. 'candidate' → logprob: -10.39578628540039

Token 144: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004798918962478638
    2. '):' → logprob: -5.754798889160156
    3. ',' → logprob: -7.004798889160156
    4. ':int' → logprob: -7.379798889160156
    5. ' :' → logprob: -10.129798889160156
    6. ')' → logprob: -10.504798889160156
    7. ' ):' → logprob: -11.754798889160156
    8. '=' → logprob: -12.379798889160156
    9. '):
' → logprob: -12.629798889160156
    10. ' ,' → logprob: -13.504798889160156

Token 145: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.25206324458122253
    2. ' int' → logprob: -1.502063274383545
    3. ')' → logprob: -10.127062797546387
    4. ' ' → logprob: -10.502062797546387
    5. ':int' → logprob: -11.252062797546387
    6. '):
' → logprob: -11.752062797546387
    7. '(int' → logprob: -12.127062797546387
    8. '=int' → logprob: -12.502062797546387
    9. '	int' → logprob: -12.627062797546387
    10. '[int' → logprob: -12.627062797546387

Token 146: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03511275351047516
    2. '):
' → logprob: -4.0351128578186035
    3. ',' → logprob: -4.1601128578186035
    4. ':' → logprob: -7.1601128578186035
    5. ')' → logprob: -7.9101128578186035
    6. ' ):' → logprob: -10.285112380981445
    7. '):
' → logprob: -11.285112380981445
    8. '   ' → logprob: -11.785112380981445
    9. '       ' → logprob: -12.785112380981445
    10. '=' → logprob: -13.285112380981445

Token 147: ' a' (ID: 261)
  Prédit: ' strategy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' strategy' → logprob: -0.443118691444397
    2. ' digit' → logprob: -2.0681185722351074
    3. 'strategy' → logprob: -2.4431185722351074
    4. ' exponent' → logprob: -2.8181185722351074
    5. 'digit' → logprob: -3.4431185722351074
    6. ' strategies' → logprob: -4.068118572235107
    7. ' power' → logprob: -5.318118572235107
    8. 'strateg' → logprob: -5.318118572235107
    9. ' value' → logprob: -5.818118572235107
    10. ' ):
' → logprob: -6.193118572235107

Token 148: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012361075729131699
    2. ',' → logprob: -4.7623610496521
    3. '=' → logprob: -6.6373610496521
    4. '):' → logprob: -7.2623610496521
    5. '_strategy' → logprob: -8.262361526489258
    6. '):
' → logprob: -8.262361526489258
    7. ':int' → logprob: -8.387361526489258
    8. 'strategy' → logprob: -9.137361526489258
    9. 'ction' → logprob: -9.262361526489258
    10. 'pp' → logprob: -9.262361526489258

Token 149: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.8278460502624512
    2. 'Exponent' → logprob: -1.2028460502624512
    3. ':int' → logprob: -1.8278460502624512
    4. ':' → logprob: -3.077846050262451
    5. ' int' → logprob: -3.952846050262451
    6. 'Digit' → logprob: -4.952846050262451
    7. 'nt' → logprob: -5.577846050262451
    8. 'x' → logprob: -5.827846050262451
    9. ')' → logprob: -6.077846050262451
    10. 'ex' → logprob: -6.327846050262451

Token 150: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6405569911003113
    2. '):' → logprob: -0.7655569911003113
    3. '):
' → logprob: -5.640556812286377
    4. ')' → logprob: -5.890556812286377
    5. ':' → logprob: -7.140556812286377
    6. '=' → logprob: -8.265557289123535
    7. ' ,' → logprob: -8.640557289123535
    8. ' ):' → logprob: -8.640557289123535
    9. '=None' → logprob: -8.890557289123535
    10. '):
' → logprob: -10.890557289123535

Token 151: ' n' (ID: 297)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.6354362964630127
    2. 'b' → logprob: -0.8854362964630127
    3. ' n' → logprob: -4.385436058044434
    4. 'n' → logprob: -4.510436058044434
    5. 'e' → logprob: -5.260436058044434
    6. ' e' → logprob: -5.260436058044434
    7. ' strategy' → logprob: -5.760436058044434
    8. ' exponent' → logprob: -5.885436058044434
    9. 'd' → logprob: -6.385436058044434
    10. ' d' → logprob: -6.572936058044434

Token 152: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3268953561782837
    2. '):' → logprob: -1.3268953561782837
    3. '):
' → logprob: -4.951895236968994
    4. ')' → logprob: -5.576895236968994
    5. ':int' → logprob: -6.826895236968994
    6. ',' → logprob: -7.326895236968994
    7. '=' → logprob: -7.701895236968994
    8. '<|end|>' → logprob: -8.826895713806152
    9. '<|end|>' → logprob: -9.201895713806152
    10. '=None' → logprob: -9.826895713806152

Token 153: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0017513417406007648
    2. ' int' → logprob: -6.87675142288208
    3. ')' → logprob: -7.87675142288208
    4. '1' → logprob: -8.751750946044922
    5. ':int' → logprob: -9.501750946044922
    6. '):' → logprob: -10.251750946044922
    7. '):
' → logprob: -11.251750946044922
    8. '2' → logprob: -11.626750946044922
    9. ' ' → logprob: -11.751750946044922
    10. ':' → logprob: -12.251750946044922

Token 154: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.029833676293492317
    2. '):
' → logprob: -3.5298337936401367
    3. ')' → logprob: -10.154833793640137
    4. ':' → logprob: -10.404833793640137
    5. ',' → logprob: -11.779833793640137
    6. '):
' → logprob: -12.654833793640137
    7. '   ' → logprob: -13.529833793640137
    8. '       ' → logprob: -14.154833793640137
    9. '):

' → logprob: -14.654833793640137
    10. ' ):' → logprob: -15.404833793640137

Token 155: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027023201808333397
    2. '):' → logprob: -4.6520233154296875
    3. '):
' → logprob: -4.7770233154296875
    4. ':' → logprob: -5.0270233154296875
    5. ')' → logprob: -7.1520233154296875
    6. ',' → logprob: -7.2770233154296875
    7. ':
' → logprob: -8.152023315429688
    8. '   ' → logprob: -9.152023315429688
    9. '
' → logprob: -9.402023315429688
    10. '<|end|>' → logprob: -9.527023315429688

Token 156: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.007448917254805565
    2. ' self' → logprob: -5.132449150085449
    3. '       ' → logprob: -6.507449150085449
    4. 'super' → logprob: -11.00744915008545
    5. '	self' → logprob: -13.25744915008545
    6. '   ' → logprob: -13.25744915008545
    7. 'x' → logprob: -13.50744915008545
    8. '
' → logprob: -13.75744915008545
    9. '        
' → logprob: -14.50744915008545
    10. '#' → logprob: -14.63244915008545

Token 157: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.06298274546861649
    2. '.' → logprob: -2.8129827976226807
    3. '.value' → logprob: -7.187982559204102
    4. ' .' → logprob: -8.687982559204102
    5. 'x' → logprob: -10.937982559204102
    6. '.user' → logprob: -11.437982559204102
    7. '       ' → logprob: -11.937982559204102
    8. ':' → logprob: -11.937982559204102
    9. '   ' → logprob: -12.062982559204102
    10. '.xhtml' → logprob: -12.187982559204102

Token 158: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03372039273381233
    2. '=' → logprob: -3.4087204933166504
    3. ' ' → logprob: -9.908720016479492
    4. ',' → logprob: -10.908720016479492
    5. '<|end|>' → logprob: -13.158720016479492
    6. ' =
' → logprob: -13.533720016479492
    7. '   ' → logprob: -14.408720016479492
    8. '       ' → logprob: -14.658720016479492
    9. '  ' → logprob: -14.783720016479492
    10. '    ' → logprob: -14.783720016479492

Token 159: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5759403705596924
    2. ' x' → logprob: -0.8259403705596924
    3. '	x' → logprob: -14.200940132141113
    4. '<|end|>' → logprob: -16.20094108581543
    5. ' ' → logprob: -16.57594108581543
    6. ' ' → logprob: -16.70094108581543
    7. 'a' → logprob: -17.32594108581543
    8. ' a' → logprob: -18.32594108581543
    9. ')x' → logprob: -19.07594108581543
    10. '$x' → logprob: -19.20094108581543

Token 160: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016531404107809067
    2. ',' → logprob: -4.766531467437744
    3. '
' → logprob: -5.391531467437744
    4. 'self' → logprob: -6.141531467437744
    5. ' self' → logprob: -7.266531467437744
    6. ',
' → logprob: -9.141530990600586
    7. '        
' → logprob: -9.391530990600586
    8. ' 
' → logprob: -9.766530990600586
    9. '<|end|>' → logprob: -9.891530990600586
    10. ' ,' → logprob: -10.016530990600586

Token 161: '       ' (ID: 309)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5826822519302368
    2. 'self' → logprob: -1.2076822519302368
    3. '       ' → logprob: -1.9576822519302368
    4. ' a' → logprob: -6.832682132720947
    5. 'a' → logprob: -8.457682609558105
    6. '   ' → logprob: -9.582682609558105
    7. ' ' → logprob: -10.207682609558105
    8. ',' → logprob: -10.957682609558105
    9. '<|end|>' → logprob: -11.082682609558105
    10. '	self' → logprob: -11.332682609558105

Token 162: ' self' (ID: 1051)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.02719051204621792
    2. ' a' → logprob: -3.6521904468536377
    3. 'self' (adapté à ' self') → logprob: -7.152190685272217
    4. ' self' → logprob: -9.277190208435059
    5. '       ' → logprob: -12.152190208435059
    6. 'x' → logprob: -13.152190208435059
    7. '   ' → logprob: -14.152190208435059
    8. 'd' → logprob: -14.277190208435059
    9. 'y' → logprob: -14.464690208435059
    10. 's' → logprob: -14.527190208435059

Token 163: '.a' (ID: 8772)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12224076688289642
    2. 'a' → logprob: -2.9972407817840576
    3. ' a' → logprob: -4.3722405433654785
    4. '=' → logprob: -4.4972405433654785
    5. '<|end|>' → logprob: -4.9972405433654785
    6. '.a' → logprob: -5.2472405433654785
    7. 'x' → logprob: -5.4972405433654785
    8. ',' → logprob: -5.6222405433654785
    9. '.' → logprob: -5.6222405433654785
    10. ' ' → logprob: -6.3722405433654785

Token 164: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132847845554352
    2. '=' → logprob: -1.3132847547531128
    3. '<|end|>' → logprob: -11.063284873962402
    4. ',' → logprob: -12.688284873962402
    5. ' ' → logprob: -13.438284873962402
    6. '=a' → logprob: -13.563284873962402
    7. '=x' → logprob: -14.938284873962402
    8. ')' → logprob: -15.313284873962402
    9. ' =
' → logprob: -15.813284873962402
    10. 'a' → logprob: -16.063283920288086

Token 165: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07889022678136826
    2. ' a' → logprob: -2.578890323638916
    3. '<|end|>' → logprob: -15.828889846801758
    4. '	a' → logprob: -15.953889846801758
    5. 'x' → logprob: -16.078889846801758
    6. ' ' → logprob: -16.828889846801758
    7. '_a' → logprob: -16.828889846801758
    8. ',a' → logprob: -18.328889846801758
    9. ' x' → logprob: -19.078889846801758
    10. ''a' → logprob: -19.203889846801758

Token 166: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12299264967441559
    2. '
' → logprob: -2.372992753982544
    3. ',' → logprob: -4.247992515563965
    4. '<|end|>' → logprob: -5.122992515563965
    5. '<|end|>' → logprob: -8.122992515563965
    6. ' 
' → logprob: -8.247992515563965
    7. ',
' → logprob: -8.247992515563965
    8. 'n' → logprob: -8.497992515563965
    9. '   ' → logprob: -8.497992515563965
    10. '        
' → logprob: -8.622992515563965

Token 167: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.144509419798851
    2. 'self' → logprob: -2.3945093154907227
    3. ' self' → logprob: -3.1445093154907227
    4. ',' → logprob: -9.644509315490723
    5. '
' → logprob: -9.644509315490723
    6. 'n' → logprob: -9.644509315490723
    7. '   ' → logprob: -11.644509315490723
    8. ' 
' → logprob: -11.769509315490723
    9. ' and' → logprob: -12.394509315490723
    10. '	self' → logprob: -12.394509315490723

Token 168: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.014175384305417538
    2. 'n' → logprob: -4.2641754150390625
    3. ' self' → logprob: -11.514175415039062
    4. '       ' → logprob: -13.264175415039062
    5. 's' → logprob: -16.014175415039062
    6. '_n' → logprob: -18.889175415039062
    7. ' n' → logprob: -19.014175415039062
    8. '=self' → logprob: -19.014175415039062
    9. '	self' → logprob: -19.389175415039062
    10. 'class' → logprob: -19.639175415039062

Token 169: '.n' (ID: 1835)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14014045894145966
    2. '=' → logprob: -2.5151405334472656
    3. 'n' → logprob: -3.1401405334472656
    4. ' n' → logprob: -5.390140533447266
    5. '.n' → logprob: -7.140140533447266
    6. '.' → logprob: -7.765140533447266
    7. ' ' → logprob: -8.390140533447266
    8. '_n' → logprob: -8.640140533447266
    9. 'ex' → logprob: -9.640140533447266
    10. '=n' → logprob: -10.015140533447266

Token 170: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06196948140859604
    2. ' =' → logprob: -2.811969518661499
    3. '<|end|>' → logprob: -14.561969757080078
    4. '=int' → logprob: -14.686969757080078
    5. '=n' → logprob: -15.311969757080078
    6. '=x' → logprob: -15.436969757080078
    7. '=
' → logprob: -15.686969757080078
    8. ' ' → logprob: -15.686969757080078
    9. '=a' → logprob: -16.311969757080078
    10. ' =
' → logprob: -17.186969757080078

Token 171: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4740830957889557
    2. ' n' → logprob: -0.9740830659866333
    3. 'a' → logprob: -13.224082946777344
    4. '	n' → logprob: -13.849082946777344
    5. '<|end|>' → logprob: -14.099082946777344
    6. '_n' → logprob: -14.349082946777344
    7. '1' → logprob: -14.474082946777344
    8. 'x' → logprob: -14.849082946777344
    9. ' a' → logprob: -15.099082946777344
    10. ' ' → logprob: -15.474082946777344

Token 172: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 173: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.41255059838294983
    2. '   ' → logprob: -1.2875505685806274
    3. 'def' → logprob: -3.037550687789917
    4. '<|end|>' → logprob: -5.287550449371338
    5. ' def' → logprob: -5.662550449371338
    6. '    
' → logprob: -5.662550449371338
    7. '

' → logprob: -6.787550449371338
    8. '<|end|>' → logprob: -7.787550449371338
    9. '  
' → logprob: -9.287550926208496
    10. '	def' → logprob: -9.412550926208496

Token 174: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.000546122610103339
    2. ' def' → logprob: -7.750545978546143
    3. '@property' → logprob: -9.2505464553833
    4. '   ' → logprob: -10.8755464553833
    5. '
' → logprob: -16.000545501708984
    6. 'class' → logprob: -16.375545501708984
    7. '@' → logprob: -16.500545501708984
    8. '       ' → logprob: -17.125545501708984
    9. ' ' → logprob: -17.375545501708984
    10. 'property' → logprob: -17.750545501708984

Token 175: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.7623636722564697
    2. ' def' → logprob: -0.8873636722564697
    3. 'def' → logprob: -2.7623636722564697
    4. 'is' → logprob: -4.012363433837891
    5. ' compute' → logprob: -4.262363433837891
    6. ' calculate' → logprob: -4.762363433837891
    7. 'compute' → logprob: -5.887363433837891
    8. ' evaluate' → logprob: -6.012363433837891
    9. 'calculate' → logprob: -6.137363433837891
    10. ')' → logprob: -6.262363433837891

Token 176: '_valid' (ID: 23321)
  Prédit: '_d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.0027029928751289845
    2. 'd' → logprob: -6.2527031898498535
    3. '_valid' → logprob: -7.7527031898498535
    4. '_a' → logprob: -8.752702713012695
    5. '_power' → logprob: -10.252702713012695
    6. '_' → logprob: -10.502702713012695
    7. 'D' → logprob: -10.877702713012695
    8. '_ex' → logprob: -11.377702713012695
    9. '_candidate' → logprob: -11.377702713012695
    10. '_du' → logprob: -12.002702713012695

Token 177: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0006984960054978728
    2. '(' → logprob: -7.375698566436768
    3. ' (' → logprob: -9.75069808959961
    4. '(s' → logprob: -12.37569808959961
    5. '()' → logprob: -12.62569808959961
    6. 'self' → logprob: -13.00069808959961
    7. '   ' → logprob: -13.62569808959961
    8. ' ' → logprob: -14.50069808959961
    9. '():' → logprob: -14.50069808959961
    10. '(
' → logprob: -14.75069808959961

Token 178: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07484728842973709
    2. '):' → logprob: -2.6998472213745117
    3. 'self' → logprob: -5.699847221374512
    4. '):
' → logprob: -6.699847221374512
    5. ' )' → logprob: -8.574847221374512
    6. '   ' → logprob: -9.949847221374512
    7. '(self' → logprob: -10.449847221374512
    8. ' ):' → logprob: -10.824847221374512
    9. '       ' → logprob: -11.449847221374512
    10. '):

' → logprob: -11.949847221374512

Token 179: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.008766545914113522
    2. ' ->' → logprob: -5.2587666511535645
    3. '(' → logprob: -6.3837666511535645
    4. ':' → logprob: -7.2587666511535645
    5. '():' → logprob: -7.3837666511535645
    6. '()' → logprob: -8.758766174316406
    7. '->' → logprob: -8.758766174316406
    8. ' (' → logprob: -9.383766174316406
    9. 'self' → logprob: -9.508766174316406
    10. '()->' → logprob: -11.133766174316406

Token 180: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.16023357212543488
    2. 'bool' → logprob: -1.9102336168289185
    3. 'int' → logprob: -12.535233497619629
    4. ' True' → logprob: -13.535233497619629
    5. ' int' → logprob: -13.660233497619629
    6. ' ' → logprob: -13.910233497619629
    7. '(bool' → logprob: -14.285233497619629
    8. 'True' → logprob: -14.285233497619629
    9. '	bool' → logprob: -14.410233497619629
    10. '<bool' → logprob: -16.035234451293945

Token 181: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.17348337173461914
    2. '(' → logprob: -2.548483371734619
    3. ':' → logprob: -2.548483371734619
    4. '(
' → logprob: -6.673483371734619
    5. '       ' → logprob: -7.298483371734619
    6. ':
' → logprob: -7.423483371734619
    7. 'self' → logprob: -9.048482894897461
    8. '   ' → logprob: -9.548482894897461
    9. '():' → logprob: -9.798482894897461
    10. '(s' → logprob: -10.548482894897461

Token 182: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.7848862373502925e-05
    2. ' return' → logprob: -10.875027656555176
    3. '        
' → logprob: -13.000027656555176
    4. '```' → logprob: -13.500027656555176
    5. 'return' → logprob: -13.625027656555176
    6. 'd' → logprob: -13.875027656555176
    7. ' if' → logprob: -14.625027656555176
    8. ' x' → logprob: -14.625027656555176
    9. ' value' → logprob: -15.000027656555176
    10. '   ' → logprob: -15.250027656555176

Token 183: ' y' (ID: 342)
  Prédit: 'digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'digit' → logprob: -1.011085033416748
    2. '       ' → logprob: -2.011085033416748
    3. 'return' → logprob: -2.011085033416748
    4. ' return' → logprob: -2.136085033416748
    5. ' digit' → logprob: -2.886085033416748
    6. ' cube' → logprob: -3.261085033416748
    7. 'cube' → logprob: -3.261085033416748
    8. 'sum' → logprob: -3.886085033416748
    9. 'result' → logprob: -4.011085033416748
    10. 'd' → logprob: -4.136085033416748

Token 184: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008105640299618244
    2. '=' → logprob: -5.008105754852295
    3. '_sum' → logprob: -6.883105754852295
    4. 'sum' → logprob: -8.883105278015137
    5. '   ' → logprob: -9.883105278015137
    6. ' ' → logprob: -10.383105278015137
    7. '_digit' → logprob: -10.383105278015137
    8. '_value' → logprob: -10.633105278015137
    9. 'Sum' → logprob: -11.258105278015137
    10. '_' → logprob: -11.508105278015137

Token 185: ' Digit' (ID: 91174)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16423065960407257
    2. ' self' → logprob: -2.2892305850982666
    3. 'Exponent' → logprob: -3.4142305850982666
    4. 'Digit' → logprob: -4.289230823516846
    5. ' Digit' → logprob: -6.414230823516846
    6. '(self' → logprob: -7.914230823516846
    7. 'pow' → logprob: -8.164230346679688
    8. 'D' → logprob: -8.164230346679688
    9. ' D' → logprob: -8.539230346679688
    10. ' Ex' → logprob: -9.289230346679688

Token 186: 'Sum' (ID: 17434)
  Prédit: 'Sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sum' → logprob: -1.9361264946837764e-07
    2. 'sum' → logprob: -16.375
    3. '_sum' → logprob: -18.0
    4. 'S' → logprob: -18.625
    5. 'Summ' → logprob: -19.5
    6. ' Sum' → logprob: -19.75
    7. '.Sum' → logprob: -19.875
    8. ' sum' → logprob: -21.375
    9. '(sum' → logprob: -21.625
    10. 'SUM' → logprob: -21.625

Token 187: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00010080150241265073
    2. '(' → logprob: -9.250101089477539
    3. 'self' → logprob: -13.625101089477539
    4. '((' → logprob: -13.875101089477539
    5. '(x' → logprob: -14.000101089477539
    6. '(
' → logprob: -15.125101089477539
    7. '(y' → logprob: -15.250101089477539
    8. ')(' → logprob: -15.375101089477539
    9. '(sum' → logprob: -15.375101089477539
    10. '(s' → logprob: -15.500101089477539

Token 188: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.006375344004482031
    2. '.a' → logprob: -5.131375312805176
    3. '.' → logprob: -8.131375312805176
    4. ').' → logprob: -9.506375312805176
    5. '.value' → logprob: -10.006375312805176
    6. ' .' → logprob: -11.381375312805176
    7. '(x' → logprob: -11.631375312805176
    8. 'x' → logprob: -12.506375312805176
    9. '.n' → logprob: -13.881375312805176
    10. '(' → logprob: -14.131375312805176

Token 189: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.027151644229888916
    2. '**' → logprob: -4.277151584625244
    3. ')' → logprob: -4.777151584625244
    4. ' ).' → logprob: -5.902151584625244
    5. ' **' → logprob: -7.152151584625244
    6. ' ' → logprob: -8.527152061462402
    7. '   ' → logprob: -8.777152061462402
    8. '  ' → logprob: -9.277152061462402
    9. '.' → logprob: -9.777152061462402
    10. ')
' → logprob: -9.902152061462402

Token 190: 'compute' (ID: 54521)
  Prédit: 'compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: 0.0
    2. ' compute' → logprob: -17.25
    3. 'calculate' → logprob: -18.75
    4. 'value' → logprob: -19.125
    5. '.compute' → logprob: -19.25
    6. 'computer' → logprob: -19.375
    7. 'com' → logprob: -20.875
    8. 'comput' → logprob: -21.875
    9. '_compute' → logprob: -22.5
    10. 'computed' → logprob: -22.625

Token 191: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -8.315936429426074e-05
    2. '()
' → logprob: -9.625082969665527
    3. ' ()' → logprob: -11.750082969665527
    4. '()>' → logprob: -12.875082969665527
    5. '()`' → logprob: -13.250082969665527
    6. '())' → logprob: -13.625082969665527
    7. '()

' → logprob: -13.750082969665527
    8. '()<' → logprob: -14.250082969665527
    9. '()==' → logprob: -14.375082969665527
    10. '()"' → logprob: -15.125082969665527

Token 192: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008315387181937695
    2. ' **' → logprob: -5.883315563201904
    3. ' return' → logprob: -5.883315563201904
    4. '**' → logprob: -6.133315563201904
    5. 'return' → logprob: -8.883315086364746
    6. '
' → logprob: -9.008315086364746
    7. '        
' → logprob: -10.008315086364746
    8. '<|end|>' → logprob: -10.508315086364746
    9. ' ==' → logprob: -10.758315086364746
    10. '      ' → logprob: -10.883315086364746

Token 193: ' powered' (ID: 34643)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7336266040802002
    2. ' return' → logprob: -0.9836266040802002
    3. '       ' → logprob: -2.2336266040802
    4. 'result' → logprob: -3.9836266040802
    5. ' if' → logprob: -4.983626365661621
    6. ' result' → logprob: -5.108626365661621
    7. 'if' → logprob: -5.983626365661621
    8. 'power' → logprob: -6.983626365661621
    9. 'pow' → logprob: -7.108626365661621
    10. ' power' → logprob: -7.608626365661621

Token 194: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3625852167606354
    2. '_value' → logprob: -1.362585186958313
    3. '_result' → logprob: -3.6125853061676025
    4. '=' → logprob: -4.112585067749023
    5. '_val' → logprob: -5.612585067749023
    6. '_y' → logprob: -7.112585067749023
    7. '_power' → logprob: -8.987585067749023
    8. '_' → logprob: -9.487585067749023
    9. 'result' → logprob: -10.737585067749023
    10. 'value' → logprob: -10.737585067749023

Token 195: ' Ex' (ID: 1771)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5050405859947205
    2. 'Exponent' → logprob: -1.6300406455993652
    3. ' self' → logprob: -1.8800406455993652
    4. 'y' → logprob: -3.2550406455993652
    5. ' y' → logprob: -5.255040645599365
    6. ' Ex' → logprob: -6.630040645599365
    7. 'pow' → logprob: -7.255040645599365
    8. '(self' → logprob: -7.255040645599365
    9. '(' → logprob: -8.255040168762207
    10. 'Ex' → logprob: -8.317540168762207

Token 196: 'ponent' (ID: 1758)
  Prédit: 'ponent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ponent' → logprob: -0.06863170862197876
    2. 'on' → logprob: -3.193631649017334
    3. 'onent' → logprob: -3.943631649017334
    4. 'ont' → logprob: -5.943631649017334
    5. 'onation' → logprob: -7.193631649017334
    6. 'ot' → logprob: -7.818631649017334
    7. 'oten' → logprob: -8.193632125854492
    8. 'otation' → logprob: -8.318632125854492
    9. 'pon' → logprob: -8.318632125854492
    10. 'pot' → logprob: -8.568632125854492

Token 197: 'iation' (ID: 23408)
  Prédit: 'iation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iation' → logprob: -0.0009033614187501371
    2. 'enti' → logprob: -7.125903129577637
    3. 'i' → logprob: -9.750903129577637
    4. 'ti' → logprob: -10.625903129577637
    5. 'ation' → logprob: -11.500903129577637
    6. 'entation' → logprob: -12.375903129577637
    7. 'antiation' → logprob: -14.875903129577637
    8. 'e' → logprob: -14.875903129577637
    9. 't' → logprob: -15.125903129577637
    10. 'ent' → logprob: -15.500903129577637

Token 198: 'Strategy' (ID: 21488)
  Prédit: 'Strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Strategy' → logprob: -1.6240566083070007e-06
    2. 'Strateg' → logprob: -13.875001907348633
    3. 'strategy' → logprob: -14.375001907348633
    4. '_strategy' → logprob: -18.000001907348633
    5. 'Str' → logprob: -18.250001907348633
    6. ' Strategy' → logprob: -18.625001907348633
    7. 'Strategies' → logprob: -19.375001907348633
    8. ' strategy' → logprob: -20.000001907348633
    9. 'Stra' → logprob: -20.250001907348633
    10. 'Method' → logprob: -20.500001907348633

Token 199: '(y' (ID: 14684)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.001163196051493287
    2. '(y' → logprob: -6.876163005828857
    3. '(' → logprob: -9.126163482666016
    4. '(x' → logprob: -11.626163482666016
    5. '(a' → logprob: -12.876163482666016
    6. ' (' → logprob: -13.001163482666016
    7. '(
' → logprob: -13.501163482666016
    8. '(power' → logprob: -13.501163482666016
    9. '(s' → logprob: -13.626163482666016
    10. ')(' → logprob: -14.001163482666016

Token 200: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002250887919217348
    2. ',self' → logprob: -6.627250671386719
    3. ' ,' → logprob: -7.127250671386719
    4. ').' → logprob: -10.002250671386719
    5. ')' → logprob: -10.502250671386719
    6. ',y' → logprob: -11.627250671386719
    7. ',
' → logprob: -11.752250671386719
    8. ',n' → logprob: -11.877250671386719
    9. 'self' → logprob: -12.377250671386719
    10. ' ' → logprob: -12.752250671386719

Token 201: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02568782866001129
    2. ' self' → logprob: -3.9006879329681396
    3. '1' → logprob: -5.4006876945495605
    4. ')' → logprob: -7.7756876945495605
    5. '(self' → logprob: -9.650688171386719
    6. '
' → logprob: -9.775688171386719
    7. ' ' → logprob: -10.900688171386719
    8. '0' → logprob: -11.900688171386719
    9. '10' → logprob: -12.275688171386719
    10. '2' → logprob: -12.400688171386719

Token 202: '.a' (ID: 8772)
  Prédit: '.a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.a' → logprob: -0.0014395194593816996
    2. 'a' → logprob: -7.001439571380615
    3. '.n' → logprob: -8.376439094543457
    4. '.' → logprob: -8.876439094543457
    5. '.x' → logprob: -9.001439094543457
    6. ' ' → logprob: -12.126439094543457
    7. 'self' → logprob: -12.126439094543457
    8. '1' → logprob: -12.376439094543457
    9. 'n' → logprob: -12.501439094543457
    10. ' .' → logprob: -12.626439094543457

Token 203: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005294715519994497
    2. ' ,' → logprob: -5.2552947998046875
    3. ',self' → logprob: -10.380294799804688
    4. 'self' → logprob: -11.755294799804688
    5. ').' → logprob: -11.880294799804688
    6. ',
' → logprob: -12.005294799804688
    7. ')' → logprob: -12.505294799804688
    8. ' ' → logprob: -13.380294799804688
    9. ',n' → logprob: -14.380294799804688
    10. '```' → logprob: -15.005294799804688

Token 204: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16037391126155853
    2. ' self' → logprob: -1.9103739261627197
    3. '2' → logprob: -9.66037368774414
    4. ' ' → logprob: -10.91037368774414
    5. '(self' → logprob: -11.16037368774414
    6. 'n' → logprob: -11.66037368774414
    7. '3' → logprob: -11.78537368774414
    8. '1' → logprob: -11.91037368774414
    9. '	self' → logprob: -12.16037368774414
    10. ')' → logprob: -12.41037368774414

Token 205: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.000215457082958892
    2. '.' → logprob: -8.500215530395508
    3. 'n' → logprob: -11.625215530395508
    4. '.
' → logprob: -14.000215530395508
    5. ').' → logprob: -14.250215530395508
    6. ' .' → logprob: -14.375215530395508
    7. ' ' → logprob: -15.875215530395508
    8. '
' → logprob: -15.875215530395508
    9. ')' → logprob: -15.875215530395508
    10. '_n' → logprob: -16.375215530395508

Token 206: ').' (ID: 741)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1630631685256958
    2. ').' → logprob: -1.9130631685256958
    3. ')
' → logprob: -5.913063049316406
    4. ' )' → logprob: -9.413063049316406
    5. ' ).' → logprob: -10.788063049316406
    6. ')

' → logprob: -11.788063049316406
    7. ').__' → logprob: -11.913063049316406
    8. ')**' → logprob: -12.663063049316406
    9. ')
' → logprob: -13.038063049316406
    10. ' )
' → logprob: -13.163063049316406

Token 207: 'power' (ID: 22295)
  Prédit: 'power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'power' → logprob: -3.7697225252486533e-06
    2. ' power' → logprob: -12.500003814697266
    3. 'pow' → logprob: -18.625003814697266
    4. '.power' → logprob: -20.625003814697266
    5. '_power' → logprob: -21.000003814697266
    6. '(power' → logprob: -21.750003814697266
    7. 'powered' → logprob: -22.500003814697266
    8. ' ' → logprob: -23.000003814697266
    9. 'Power' → logprob: -24.125003814697266
    10. '-power' → logprob: -24.875003814697266

Token 208: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.8444881536415778e-05
    2. '()
' → logprob: -10.500028610229492
    3. ' ()' → logprob: -14.750028610229492
    4. '()`' → logprob: -15.250028610229492
    5. '()

' → logprob: -15.500028610229492
    6. '()
' → logprob: -17.625028610229492
    7. '()"' → logprob: -17.625028610229492
    8. '())' → logprob: -17.875028610229492
    9. '()==' → logprob: -17.875028610229492
    10. '()>' → logprob: -18.125028610229492

Token 209: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005742399953305721
    2. ' return' → logprob: -8.125574111938477
    3. 'return' → logprob: -8.750574111938477
    4. '
' → logprob: -9.375574111938477
    5. '<|end|>' → logprob: -10.875574111938477
    6. '        
' → logprob: -12.125574111938477
    7. '	return' → logprob: -12.500574111938477
    8. '   ' → logprob: -13.750574111938477
    9. 'eturn' → logprob: -14.125574111938477
    10. '	' → logprob: -14.250574111938477

Token 210: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3575059473514557
    2. ' return' → logprob: -1.2325059175491333
    3. '       ' → logprob: -4.732505798339844
    4. 'eturn' → logprob: -8.982505798339844
    5. '	return' → logprob: -10.232505798339844
    6. ' ' → logprob: -10.357505798339844
    7. '   ' → logprob: -12.232505798339844
    8. '
' → logprob: -12.232505798339844
    9. ')return' → logprob: -12.482505798339844
    10. ':return' → logprob: -13.232505798339844

Token 211: ' self' (ID: 1051)
  Prédit: ' powered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' powered' → logprob: -0.09864248335361481
    2. 'powered' → logprob: -2.473642587661743
    3. ' self' → logprob: -4.973642349243164
    4. 'self' → logprob: -6.098642349243164
    5. 'pow' → logprob: -7.973642349243164
    6. ' pow' → logprob: -9.973642349243164
    7. '       ' → logprob: -10.348642349243164
    8. ' power' → logprob: -10.723642349243164
    9. 'power' → logprob: -11.098642349243164
    10. '-powered' → logprob: -11.598642349243164

Token 212: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0001564586127642542
    2. '.' → logprob: -9.87515640258789
    3. '.n' → logprob: -10.12515640258789
    4. '.s' → logprob: -10.37515640258789
    5. '.power' → logprob: -10.75015640258789
    6. ' .' → logprob: -12.25015640258789
    7. '.p' → logprob: -13.50015640258789
    8. 's' → logprob: -14.00015640258789
    9. '.a' → logprob: -14.25015640258789
    10. 'x' → logprob: -14.25015640258789

Token 213: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.16023874282836914
    2. '==' → logprob: -1.9102387428283691
    3. '=' → logprob: -11.410238265991211
    4. ' =' → logprob: -13.785238265991211
    5. ' <=' → logprob: -13.785238265991211
    6. '<=' → logprob: -14.910238265991211
    7. '==
' → logprob: -15.035238265991211
    8. '===' → logprob: -15.785238265991211
    9. '**' → logprob: -16.16023826599121
    10. ' ' → logprob: -16.53523826599121

Token 214: ' powered' (ID: 34643)
  Prédit: 'powered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'powered' → logprob: -0.12701955437660217
    2. ' powered' → logprob: -2.1270196437835693
    3. 'pow' → logprob: -9.502019882202148
    4. 'power' → logprob: -11.627019882202148
    5. '-powered' → logprob: -12.377019882202148
    6. 'Powered' → logprob: -13.252019882202148
    7. ' pow' → logprob: -14.127019882202148
    8. '
' → logprob: -15.002019882202148
    9. ' power' → logprob: -15.002019882202148
    10. ' ' → logprob: -15.752019882202148

Token 215: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 216: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 217: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.1779664158821106
    2. ' D' → logprob: -2.927966356277466
    3. 'Solution' → logprob: -3.302966356277466
    4. 'Digit' → logprob: -3.302966356277466
    5. 'Candidate' → logprob: -5.177966594696045
    6. 'Test' → logprob: -5.302966594696045
    7. 'Finder' → logprob: -5.302966594696045
    8. 'int' → logprob: -5.677966594696045
    9. 'Range' → logprob: -5.802966594696045
    10. ' Solution' → logprob: -6.177966594696045

Token 218: 'uden' (ID: 25460)
  Prédit: 'uden'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uden' → logprob: -4.787507714354433e-05
    2. 'ud' → logprob: -10.75004768371582
    3. 'eden' → logprob: -11.87504768371582
    4. 'udent' → logprob: -12.00004768371582
    5. 'ude' → logprob: -12.12504768371582
    6. 'ueden' → logprob: -12.75004768371582
    7. 'udes' → logprob: -14.12504768371582
    8. 'u' → logprob: -14.25004768371582
    9. 'unden' → logprob: -15.00004768371582
    10. '{}' → logprob: -15.37504768371582

Token 219: 'ey' (ID: 806)
  Prédit: 'ey'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ey' → logprob: -2.696889623621246e-06
    2. '_' → logprob: -15.00000286102295
    3. ' ey' → logprob: -15.12500286102295
    4. '\' → logprob: -15.25000286102295
    5. 'eys' → logprob: -15.37500286102295
    6. '**' → logprob: -15.50000286102295
    7. 'e' → logprob: -15.50000286102295
    8. '```' → logprob: -15.75000286102295
    9. 'Ey' → logprob: -16.125001907348633
    10. '

' → logprob: -16.250001907348633

Token 220: 'Number' (ID: 3695)
  Prédit: 'Number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' → logprob: -0.10731729865074158
    2. 'Candidate' → logprob: -2.4823172092437744
    3. 'Finder' → logprob: -5.6073174476623535
    4. 'Checker' → logprob: -5.9823174476623535
    5. 'Numbers' → logprob: -5.9823174476623535
    6. 'Cube' → logprob: -6.7323174476623535
    7. 'Test' → logprob: -7.1073174476623535
    8. 'Solver' → logprob: -7.3573174476623535
    9. 'Puzzle' → logprob: -7.4823174476623535
    10. 'Search' → logprob: -7.6073174476623535

Token 221: 'Enumerator' (ID: 22087)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4385410249233246
    2. 'Finder' → logprob: -1.563541054725647
    3. 'Candidate' → logprob: -2.8135409355163574
    4. ':
' → logprob: -3.0635409355163574
    5. 's' → logprob: -3.8135409355163574
    6. 'Generator' → logprob: -6.063540935516357
    7. '(D' → logprob: -6.063540935516357
    8. 'Searcher' → logprob: -6.188540935516357
    9. 'Candidates' → logprob: -6.313540935516357
    10. '(' → logprob: -6.438540935516357

Token 222: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3868902921676636
    2. ':
' → logprob: -1.1368902921676636
    3. ':

' → logprob: -11.886890411376953
    4. ':def' → logprob: -11.886890411376953
    5. ':
' → logprob: -13.261890411376953
    6. '(' → logprob: -13.261890411376953
    7. ' :' → logprob: -14.136890411376953
    8. ' :
' → logprob: -15.011890411376953
    9. '(object' → logprob: -15.261890411376953
    10. '   ' → logprob: -15.511890411376953

Token 223: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008681466802954674
    2. ' def' → logprob: -4.758681297302246
    3. 'def' → logprob: -9.758681297302246
    4. '	def' → logprob: -13.008681297302246
    5. '
' → logprob: -13.133681297302246
    6. ':
' → logprob: -13.383681297302246
    7. '    
' → logprob: -13.508681297302246
    8. '```' → logprob: -14.258681297302246
    9. 'class' → logprob: -14.758681297302246
    10. ' ' → logprob: -15.633681297302246

Token 224: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.34096789360046387
    2. '   ' → logprob: -1.7159678936004639
    3. 'def' (adapté à ' def') → logprob: -2.215967893600464
    4. ':
' → logprob: -10.090968132019043
    5. '	def' → logprob: -10.965968132019043
    6. 'class' → logprob: -12.090968132019043
    7. ' ' → logprob: -12.215968132019043
    8. ':def' → logprob: -12.715968132019043
    9. ':' → logprob: -13.340968132019043
    10. '
' → logprob: -13.465968132019043

Token 225: ' __' (ID: 2516)
  Prédit: 'object'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'object' → logprob: -1.3177375793457031
    2. ' def' → logprob: -1.4427375793457031
    3. 'def' → logprob: -1.4427375793457031
    4. ' __' → logprob: -2.067737579345703
    5. '__' → logprob: -2.942737579345703
    6. 'init' → logprob: -3.567737579345703
    7. '   ' → logprob: -3.942737579345703
    8. 'class' → logprob: -4.567737579345703
    9. ' object' → logprob: -5.192737579345703
    10. ' ' → logprob: -5.192737579345703

Token 226: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -8.578184497309849e-05
    2. 'iter' → logprob: -9.500085830688477
    3. 'int' → logprob: -11.875085830688477
    4. 'class' → logprob: -12.750085830688477
    5. 'inite' → logprob: -15.750085830688477
    6. '__' → logprob: -16.125085830688477
    7. 'def' → logprob: -16.250085830688477
    8. 'in' → logprob: -16.500085830688477
    9. 'post' → logprob: -16.500085830688477
    10. 'new' → logprob: -16.750085830688477

Token 227: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.01156833115965128
    2. ' (' → logprob: -5.136568546295166
    3. '__(' → logprob: -5.386568546295166
    4. 'self' → logprob: -7.761568546295166
    5. '(' → logprob: -7.761568546295166
    6. '   ' → logprob: -10.136568069458008
    7. ',' → logprob: -10.136568069458008
    8. '
' → logprob: -10.386568069458008
    9. ' ' → logprob: -11.011568069458008
    10. ')(' → logprob: -11.386568069458008

Token 228: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.451116051815916e-05
    2. ' self' → logprob: -10.625024795532227
    3. 'n' → logprob: -17.125024795532227
    4. '
' → logprob: -17.125024795532227
    5. '	self' → logprob: -17.875024795532227
    6. '0' → logprob: -18.000024795532227
    7. '   ' → logprob: -18.250024795532227
    8. 's' → logprob: -18.375024795532227
    9. '(self' → logprob: -18.500024795532227
    10. ',' → logprob: -18.500024795532227

Token 229: ',' (ID: 11)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5829857587814331
    2. ',' → logprob: -0.8329857587814331
    3. ' self' → logprob: -5.332985877990723
    4. '(self' → logprob: -6.582985877990723
    5. ' (' → logprob: -7.707985877990723
    6. ' ,' → logprob: -9.082985877990723
    7. '   ' → logprob: -9.207985877990723
    8. '__(' → logprob: -9.832985877990723
    9. ',self' → logprob: -10.582985877990723
    10. '
' → logprob: -11.457985877990723

Token 230: ' a' (ID: 261)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.11924633383750916
    2. 'a' → logprob: -3.244246244430542
    3. ' self' → logprob: -3.244246244430542
    4. 'n' → logprob: -3.994246244430542
    5. ' a' → logprob: -5.369246482849121
    6. 'start' → logprob: -5.494246482849121
    7. ' n' → logprob: -5.994246482849121
    8. '   ' → logprob: -6.244246482849121
    9. ' start' → logprob: -6.744246482849121
    10. 'max' → logprob: -7.369246482849121

Token 231: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002519657602533698
    2. ':' → logprob: -6.127519607543945
    3. ',' → logprob: -8.377519607543945
    4. ' =' → logprob: -9.627519607543945
    5. '=int' → logprob: -10.627519607543945
    6. '=a' → logprob: -11.877519607543945
    7. ':int' → logprob: -12.502519607543945
    8. ' ,' → logprob: -13.752519607543945
    9. '=None' → logprob: -14.502519607543945
    10. '=-' → logprob: -15.127519607543945

Token 232: ' int' (ID: 677)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6214916706085205
    2. '0' → logprob: -1.2464916706085205
    3. 'int' → logprob: -2.3714916706085205
    4. '-' → logprob: -3.3714916706085205
    5. ' int' → logprob: -3.9964916706085205
    6. ' ' → logprob: -4.246491432189941
    7. '2' → logprob: -5.121491432189941
    8. '3' → logprob: -5.621491432189941
    9. '10' → logprob: -6.371491432189941
    10. ' -' → logprob: -6.746491432189941

Token 233: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015500946901738644
    2. ' ,' → logprob: -6.501550197601318
    3. ',n' → logprob: -10.87654972076416
    4. '       ' → logprob: -11.00154972076416
    5. '=' → logprob: -12.87654972076416
    6. '   ' → logprob: -13.12654972076416
    7. '):' → logprob: -13.12654972076416
    8. '):
' → logprob: -13.37654972076416
    9. ',
' → logprob: -13.50154972076416
    10. 'n' → logprob: -14.12654972076416

Token 234: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.47437065839767456
    2. 'n' → logprob: -0.9743706583976746
    3. 'max' → logprob: -9.724370956420898
    4. ' ' → logprob: -10.099370956420898
    5. ' max' → logprob: -10.099370956420898
    6. 'start' → logprob: -10.724370956420898
    7. '   ' → logprob: -10.724370956420898
    8. 'min' → logprob: -10.724370956420898
    9. ' start' → logprob: -11.099370956420898
    10. ' min' → logprob: -11.349370956420898

Token 235: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.038935188204050064
    2. '):' → logprob: -3.2889351844787598
    3. ':int' → logprob: -7.78893518447876
    4. ',' → logprob: -8.038935661315918
    5. '):
' → logprob: -9.663935661315918
    6. ' ):' → logprob: -10.538935661315918
    7. ')' → logprob: -10.538935661315918
    8. ' :' → logprob: -10.538935661315918
    9. '   ' → logprob: -12.163935661315918
    10. '}:' → logprob: -13.413935661315918

Token 236: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.007646848913282156
    2. ' int' → logprob: -4.8826470375061035
    3. '1' → logprob: -11.007646560668945
    4. ')' → logprob: -11.757646560668945
    5. '2' → logprob: -11.882646560668945
    6. '10' → logprob: -13.007646560668945
    7. ' ' → logprob: -13.882646560668945
    8. '   ' → logprob: -14.257646560668945
    9. '	int' → logprob: -14.257646560668945
    10. ':int' → logprob: -14.257646560668945

Token 237: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.24529589712619781
    2. '):
' → logprob: -1.6202958822250366
    3. ',' → logprob: -3.995296001434326
    4. '):
' → logprob: -7.245296001434326
    5. '       ' → logprob: -7.995296001434326
    6. '   ' → logprob: -8.870295524597168
    7. ' ):' → logprob: -10.495295524597168
    8. ' ,' → logprob: -10.745295524597168
    9. ':' → logprob: -10.995295524597168
    10. ')' → logprob: -11.745295524597168

Token 238: ' m' (ID: 284)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -1.02829909324646
    2. 'max' → logprob: -1.52829909324646
    3. 'limit' → logprob: -1.52829909324646
    4. ' start' → logprob: -2.40329909324646
    5. ' max' → logprob: -3.02829909324646
    6. ' limit' → logprob: -3.27829909324646
    7. 'min' → logprob: -4.403299331665039
    8. 'lower' → logprob: -5.153299331665039
    9. 'upper' → logprob: -5.903299331665039
    10. 'range' → logprob: -6.153299331665039

Token 239: ':' (ID: 25)
  Prédit: 'ax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ax' → logprob: -0.004731179680675268
    2. ':' → logprob: -5.379731178283691
    3. '):' → logprob: -10.254731178283691
    4. 'a' → logprob: -11.129731178283691
    5. 'axb' → logprob: -11.629731178283691
    6. ' ax' → logprob: -11.754731178283691
    7. ')' → logprob: -11.754731178283691
    8. ':int' → logprob: -12.004731178283691
    9. '_ax' → logprob: -12.504731178283691
    10. '):
' → logprob: -13.129731178283691

Token 240: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00717471307143569
    2. ' int' → logprob: -5.007174491882324
    3. '10' → logprob: -7.882174491882324
    4. '100' → logprob: -9.632174491882324
    5. '20' → logprob: -12.257174491882324
    6. '1' → logprob: -13.257174491882324
    7. '0' → logprob: -13.757174491882324
    8. ')' → logprob: -13.757174491882324
    9. ' ' → logprob: -13.757174491882324
    10. ':int' → logprob: -13.882174491882324

Token 241: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04345642775297165
    2. '):
' → logprob: -3.1684563159942627
    3. '):
' → logprob: -8.043456077575684
    4. ',' → logprob: -10.168456077575684
    5. ':' → logprob: -10.168456077575684
    6. '   ' → logprob: -10.793456077575684
    7. ')' → logprob: -10.918456077575684
    8. '       ' → logprob: -11.668456077575684
    9. ' ):' → logprob: -12.293456077575684
    10. '=' → logprob: -12.668456077575684

Token 242: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007133874110877514
    2. '   ' → logprob: -5.007133960723877
    3. 'self' → logprob: -8.132133483886719
    4. 'def' → logprob: -9.382133483886719
    5. ' self' → logprob: -10.507133483886719
    6. ',' → logprob: -12.007133483886719
    7. '	self' → logprob: -13.257133483886719
    8. ':' → logprob: -13.757133483886719
    9. '	' → logprob: -14.507133483886719
    10. '      ' → logprob: -14.632133483886719

Token 243: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0004766671918332577
    2. ' self' → logprob: -8.250476837158203
    3. '       ' → logprob: -8.500476837158203
    4. '   ' → logprob: -11.375476837158203
    5. 'a' → logprob: -15.625476837158203
    6. 'class' → logprob: -15.625476837158203
    7. ' ' → logprob: -16.500476837158203
    8. '	self' → logprob: -17.125476837158203
    9. '        
' → logprob: -17.750476837158203
    10. 'def' → logprob: -18.250476837158203

Token 244: '.a' (ID: 8772)
  Prédit: '.a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.a' → logprob: -0.0007891403511166573
    2. '.' → logprob: -7.500789165496826
    3. '.m' → logprob: -8.750788688659668
    4. ' .' → logprob: -10.250788688659668
    5. 'a' → logprob: -10.375788688659668
    6. '._' → logprob: -12.375788688659668
    7. '.n' → logprob: -13.250788688659668
    8. '   ' → logprob: -13.750788688659668
    9. '.x' → logprob: -14.375788688659668
    10. '.i' → logprob: -14.375788688659668

Token 245: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740943908691406
    2. ' =' → logprob: -0.9740943908691406
    3. ',' → logprob: -11.72409439086914
    4. '=a' → logprob: -11.84909439086914
    5. '=m' → logprob: -13.97409439086914
    6. ' ' → logprob: -14.22409439086914
    7. ')' → logprob: -15.72409439086914
    8. '   ' → logprob: -15.84909439086914
    9. '    ' → logprob: -16.72409439086914
    10. '=int' → logprob: -17.09909439086914

Token 246: ' a' (ID: 261)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.7346170544624329
    2. ' m' → logprob: -0.7346170544624329
    3. 'a' → logprob: -3.484616994857788
    4. ' a' → logprob: -4.609617233276367
    5. '	m' → logprob: -15.359617233276367
    6. ' ' → logprob: -15.484617233276367
    7. ' ' → logprob: -16.859617233276367
    8. '	a' → logprob: -17.484617233276367
    9. '_a' → logprob: -17.484617233276367
    10. '    ' → logprob: -18.109617233276367

Token 247: '
' (ID: 198)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7989150285720825
    2. '       ' → logprob: -1.1739150285720825
    3. ' self' → logprob: -1.4239150285720825
    4. 'm' → logprob: -9.173914909362793
    5. '	self' → logprob: -9.798914909362793
    6. '   ' → logprob: -9.923914909362793
    7. ' ' → logprob: -11.673914909362793
    8. 'def' → logprob: -11.923914909362793
    9. ',' → logprob: -11.923914909362793
    10. '      ' → logprob: -12.173914909362793

Token 248: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0031078457832336426
    2. ' self' → logprob: -6.378108024597168
    3. '       ' → logprob: -7.003108024597168
    4. 'm' → logprob: -7.628108024597168
    5. '   ' → logprob: -12.253108024597168
    6. '	self' → logprob: -13.503108024597168
    7. 'def' → logprob: -14.128108024597168
    8. 's' → logprob: -14.503108024597168
    9. '(self' → logprob: -15.128108024597168
    10. ' ' → logprob: -15.128108024597168

Token 249: ' self' (ID: 1051)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.002057950245216489
    2. 'self' (adapté à ' self') → logprob: -6.502058029174805
    3. 'n' → logprob: -7.627058029174805
    4. ' m' → logprob: -9.752058029174805
    5. ' self' → logprob: -11.627058029174805
    6. '   ' → logprob: -14.502058029174805
    7. '       ' → logprob: -14.627058029174805
    8. ' n' → logprob: -15.252058029174805
    9. '    ' → logprob: -16.252058029174805
    10. '	m' → logprob: -18.377058029174805

Token 250: '.n' (ID: 1835)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0678587481379509
    2. ' m' → logprob: -3.0678586959838867
    3. '_m' → logprob: -5.067858695983887
    4. '.m' → logprob: -5.192858695983887
    5. '.' → logprob: -5.567858695983887
    6. ' =' → logprob: -6.317858695983887
    7. ' ' → logprob: -8.067858695983887
    8. '   ' → logprob: -8.192858695983887
    9. '=' → logprob: -8.317858695983887
    10. '	m' → logprob: -8.317858695983887

Token 251: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3157738447189331
    2. '=' → logprob: -1.315773844718933
    3. '<|end|>' → logprob: -6.440773963928223
    4. ',' → logprob: -7.190773963928223
    5. 'm' → logprob: -9.815773963928223
    6. '<|end|>' → logprob: -10.940773963928223
    7. ' ' → logprob: -11.065773963928223
    8. '=int' → logprob: -11.065773963928223
    9. '=m' → logprob: -11.315773963928223
    10. ':' → logprob: -11.315773963928223

Token 252: ' n' (ID: 297)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.3868711292743683
    2. ' m' → logprob: -1.136871099472046
    3. '	m' → logprob: -16.261871337890625
    4. ' ' → logprob: -18.011871337890625
    5. ' ' → logprob: -18.511871337890625
    6. '   ' → logprob: -19.136871337890625
    7. '    ' → logprob: -19.261871337890625
    8. '_m' → logprob: -19.261871337890625
    9. '=m' → logprob: -20.011871337890625
    10. 'м' → logprob: -20.261871337890625

Token 253: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004172660410404205
    2. 'self' → logprob: -5.6291728019714355
    3. '   ' → logprob: -7.6291728019714355
    4. ' self' → logprob: -9.879172325134277
    5. '
' → logprob: -10.379172325134277
    6. '	self' → logprob: -13.504172325134277
    7. 'def' → logprob: -14.379172325134277
    8. '
' → logprob: -15.129172325134277
    9. '      ' → logprob: -15.129172325134277
    10. ',' → logprob: -15.129172325134277

Token 254: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0798054039478302
    2. 'self' → logprob: -2.579805374145508
    3. '   ' → logprob: -7.079805374145508
    4. ' self' → logprob: -9.579805374145508
    5. '	self' → logprob: -12.954805374145508
    6. ' ' → logprob: -14.579805374145508
    7. 'def' → logprob: -14.954805374145508
    8. '     ' → logprob: -15.079805374145508
    9. '      ' → logprob: -15.329805374145508
    10. '
' → logprob: -15.704805374145508

Token 255: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -5.080963092041202e-06
    2. '       ' → logprob: -12.625004768371582
    3. ' self' → logprob: -14.000004768371582
    4. 'm' → logprob: -14.250004768371582
    5. 'import' → logprob: -16.3750057220459
    6. 's' → logprob: -16.3750057220459
    7. '
' → logprob: -17.5000057220459
    8. 'from' → logprob: -17.5000057220459
    9. '        
' → logprob: -17.8750057220459
    10. '   ' → logprob: -17.8750057220459

Token 256: '.m' (ID: 1021)
  Prédit: '.m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.m' → logprob: -0.1965886950492859
    2. '.' → logprob: -1.8215887546539307
    3. 'm' → logprob: -4.196588516235352
    4. ' .' → logprob: -7.696588516235352
    5. '=' → logprob: -8.446588516235352
    6. ' =' → logprob: -8.446588516235352
    7. '=m' → logprob: -8.821588516235352
    8. '_m' → logprob: -8.946588516235352
    9. ' ' → logprob: -9.571588516235352
    10. '	m' → logprob: -9.696588516235352

Token 257: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14383137226104736
    2. '=' → logprob: -2.018831253051758
    3. ' ' → logprob: -6.768831253051758
    4. '=int' → logprob: -13.393831253051758
    5. '<|end|>' → logprob: -14.018831253051758
    6. ',' → logprob: -14.643831253051758
    7. '        ' → logprob: -14.768831253051758
    8. '    ' → logprob: -15.018831253051758
    9. '   ' → logprob: -15.018831253051758
    10. '  ' → logprob: -15.018831253051758

Token 258: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.6931667923927307
    2. ' m' → logprob: -0.6931667923927307
    3. '10' → logprob: -11.818166732788086
    4. ' ' → logprob: -12.068166732788086
    5. '100' → logprob: -13.443166732788086
    6. 'int' → logprob: -13.443166732788086
    7. '	m' → logprob: -13.943166732788086
    8. '0' → logprob: -14.693166732788086
    9. '1' → logprob: -15.068166732788086
    10. '    ' → logprob: -15.318166732788086

Token 259: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05068085342645645
    2. '   ' → logprob: -3.0506808757781982
    3. 'def' → logprob: -6.800680637359619
    4. '    
' → logprob: -7.425680637359619
    5. '

' → logprob: -9.175681114196777
    6. '
' → logprob: -9.300681114196777
    7. ' def' → logprob: -9.675681114196777
    8. '<|end|>' → logprob: -10.175681114196777
    9. '  
' → logprob: -10.425681114196777
    10. '	def' → logprob: -11.300681114196777

Token 260: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4783550798892975
    2. '   ' → logprob: -0.9783550500869751
    3. '
' → logprob: -5.7283549308776855
    4. ' def' → logprob: -7.2283549308776855
    5. '    
' → logprob: -8.228355407714844
    6. '        
' → logprob: -11.478355407714844
    7. '	def' → logprob: -11.978355407714844
    8. '  
' → logprob: -12.978355407714844
    9. '

' → logprob: -13.853355407714844
    10. '```' → logprob: -13.978355407714844

Token 261: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -4.320199877838604e-07
    2. ' def' → logprob: -14.75
    3. 'from' → logprob: -20.125
    4. '   ' → logprob: -20.375
    5. 'de' → logprob: -21.375
    6. '
' → logprob: -22.0
    7. '	def' → logprob: -22.875
    8. 'class' → logprob: -23.0
    9. '    
' → logprob: -23.125
    10. '```' → logprob: -23.375

Token 262: ' max' (ID: 2999)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.13043005764484406
    2. ' enumerate' → logprob: -2.130429983139038
    3. 'generate' → logprob: -6.380430221557617
    4. 'find' → logprob: -7.005430221557617
    5. ' find' → logprob: -8.005430221557617
    6. '__' → logprob: -8.130430221557617
    7. ' generate' → logprob: -9.130430221557617
    8. 'numbers' → logprob: -10.130430221557617
    9. 'c' → logprob: -10.380430221557617
    10. 'iterate' → logprob: -10.630430221557617

Token 263: '_base' (ID: 17096)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.25970304012298584
    2. '_number' → logprob: -2.0097031593322754
    3. '(self' → logprob: -3.7597031593322754
    4. '_candidate' → logprob: -3.7597031593322754
    5. '_x' → logprob: -4.009703159332275
    6. '_digits' → logprob: -4.884703159332275
    7. '_limit' → logprob: -5.259703159332275
    8. '_candidates' → logprob: -5.384703159332275
    9. '_digit' → logprob: -6.259703159332275
    10. '_num' → logprob: -6.384703159332275

Token 264: '_candidate' (ID: 158186)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0001544321421533823
    2. '_value' → logprob: -9.875154495239258
    3. '_length' → logprob: -10.250154495239258
    4. '_digits' → logprob: -10.875154495239258
    5. '(' → logprob: -11.500154495239258
    6. '_base' → logprob: -12.000154495239258
    7. '_(' → logprob: -12.375154495239258
    8. '_digit' → logprob: -12.500154495239258
    9. '_for' → logprob: -12.625154495239258
    10. 'self' → logprob: -13.000154495239258

Token 265: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00034833617974072695
    2. '(' → logprob: -8.625348091125488
    3. '(s' → logprob: -9.375348091125488
    4. 's' → logprob: -9.875348091125488
    5. ' (' → logprob: -10.875348091125488
    6. 'self' → logprob: -11.625348091125488
    7. '(
' → logprob: -14.125348091125488
    8. '   ' → logprob: -14.375348091125488
    9. '_(' → logprob: -14.750348091125488
    10. '_value' → logprob: -15.125348091125488

Token 266: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.015146980993449688
    2. '):' → logprob: -5.6401472091674805
    3. 'self' → logprob: -5.6401472091674805
    4. '):
' → logprob: -5.7651472091674805
    5. '   ' → logprob: -6.2651472091674805
    6. ')' → logprob: -6.7651472091674805
    7. ')(' → logprob: -7.1401472091674805
    8. '       ' → logprob: -7.6401472091674805
    9. 'def' → logprob: -8.51514720916748
    10. 's' → logprob: -9.14014720916748

Token 267: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.4378848391061183e-05
    2. '(' → logprob: -11.625014305114746
    3. 'self' → logprob: -13.125014305114746
    4. ':' → logprob: -13.750014305114746
    5. '   ' → logprob: -14.125014305114746
    6. ' (' → logprob: -14.500014305114746
    7. '       ' → logprob: -14.750014305114746
    8. ':self' → logprob: -15.625014305114746
    9. ' self' → logprob: -15.750014305114746
    10. 'def' → logprob: -16.125015258789062

Token 268: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0034543105866760015
    2. ' int' → logprob: -6.253454208374023
    3. 'self' → logprob: -7.128454208374023
    4. '10' → logprob: -8.003454208374023
    5. '(int' → logprob: -8.378454208374023
    6. '   ' → logprob: -10.003454208374023
    7. 'return' → logprob: -10.253454208374023
    8. ' self' → logprob: -11.503454208374023
    9. '9' → logprob: -12.003454208374023
    10. 'str' → logprob: -12.128454208374023

Token 269: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.049398284405469894
    2. ':' → logprob: -3.174398183822632
    3. ':
' → logprob: -6.049398422241211
    4. '(' → logprob: -6.174398422241211
    5. '():
' → logprob: -7.299398422241211
    6. '       ' → logprob: -7.549398422241211
    7. '(
' → logprob: -7.674398422241211
    8. '():' → logprob: -8.674398422241211
    9. 'self' → logprob: -10.299398422241211
    10. '   ' → logprob: -10.424398422241211

Token 270: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021765533834695816
    2. 'return' → logprob: -4.27176570892334
    3. '10' → logprob: -5.64676570892334
    4. ' return' → logprob: -6.64676570892334
    5. '9' → logprob: -6.64676570892334
    6. '0' → logprob: -7.39676570892334
    7. '2' → logprob: -8.52176570892334
    8. '1' → logprob: -8.64676570892334
    9. '100' → logprob: -9.64676570892334
    10. '5' → logprob: -9.64676570892334

Token 271: ' #' (ID: 1069)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.33924296498298645
    2. '9' → logprob: -2.339242935180664
    3. 'int' → logprob: -2.589242935180664
    4. 'return' → logprob: -2.714242935180664
    5. 'self' → logprob: -3.589242935180664
    6. '(' → logprob: -4.214242935180664
    7. 'len' → logprob: -6.089242935180664
    8. 'pow' → logprob: -6.339242935180664
    9. 'max' → logprob: -6.464242935180664
    10. 'for' → logprob: -7.964242935180664

Token 272: ' To' (ID: 2514)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.18804451823234558
    2. '#' → logprob: -2.813044548034668
    3. 'max' → logprob: -3.063044548034668
    4. 'length' → logprob: -3.813044548034668
    5. 'digits' → logprob: -4.563044548034668
    6. 'import' → logprob: -4.563044548034668
    7. ' return' → logprob: -5.063044548034668
    8. '       ' → logprob: -5.438044548034668
    9. 'if' → logprob: -5.813044548034668
    10. 'num' → logprob: -5.938044548034668

Token 273: ' limit' (ID: 5967)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5671738982200623
    2. 'return' → logprob: -0.9421738982200623
    3. ' max' → logprob: -4.817173957824707
    4. 'max' → logprob: -4.817173957824707
    5. ' ' → logprob: -5.442173957824707
    6. 'len' → logprob: -5.567173957824707
    7. '
' → logprob: -5.692173957824707
    8. '    ' → logprob: -6.192173957824707
    9. ' len' → logprob: -6.442173957824707
    10. ' find' → logprob: -6.442173957824707

Token 274: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.0529465675354004
    2. 'self' → logprob: -1.3029465675354004
    3. 'the' → logprob: -1.5529465675354004
    4. 'digits' → logprob: -2.9279465675354004
    5. ' self' → logprob: -3.0529465675354004
    6. 'max' → logprob: -4.1779465675354
    7. '10' → logprob: -4.3029465675354
    8. 'return' → logprob: -4.3029465675354
    9. '_digits' → logprob: -5.3029465675354
    10. ' return' → logprob: -5.4279465675354

Token 275: ' search' (ID: 3684)
  Prédit: 'search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'search' → logprob: -1.064721941947937
    2. ' search' → logprob: -1.064721941947937
    3. 'max' → logprob: -3.0647220611572266
    4. 'base' → logprob: -3.1897220611572266
    5. 'ex' → logprob: -3.3147220611572266
    6. 'number' → logprob: -3.6897220611572266
    7. ' number' → logprob: -3.6897220611572266
    8. ' base' → logprob: -3.8147220611572266
    9. 'return' → logprob: -4.189722061157227
    10. 'digits' → logprob: -4.314722061157227

Token 276: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.055407166481018
    2. ' for' → logprob: -1.555407166481018
    3. '10' → logprob: -2.0554070472717285
    4. '       ' → logprob: -2.0554070472717285
    5. ' return' → logprob: -3.5554070472717285
    6. ' ' → logprob: -3.9304070472717285
    7. ' ,' → logprob: -4.0554070472717285
    8. 'for' → logprob: -4.0554070472717285
    9. 'return' → logprob: -4.1804070472717285
    10. '   ' → logprob: -4.1804070472717285

Token 277: ' find' (ID: 1646)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7934477925300598
    2. 'return' → logprob: -0.9184477925300598
    3. ' max' → logprob: -3.043447732925415
    4. 'import' → logprob: -3.543447732925415
    5. ' import' → logprob: -3.543447732925415
    6. 'max' → logprob: -3.793447732925415
    7. '       ' → logprob: -4.918447971343994
    8. ' length' → logprob: -5.668447971343994
    9. 'digits' → logprob: -5.668447971343994
    10. 'length' → logprob: -6.418447971343994

Token 278: ' max' (ID: 2999)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.37621212005615234
    2. 'len' → logprob: -2.2512121200561523
    3. 'self' → logprob: -2.7512121200561523
    4. ' int' → logprob: -2.7512121200561523
    5. '9' → logprob: -4.001212120056152
    6. '10' → logprob: -4.001212120056152
    7. '(' → logprob: -4.626212120056152
    8. ' self' → logprob: -4.751212120056152
    9. ' ' → logprob: -5.001212120056152
    10. 'max' → logprob: -5.126212120056152

Token 279: ' base' (ID: 3611)
  Prédit: '_base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_base' → logprob: -0.11293496191501617
    2. '(' → logprob: -3.3629350662231445
    3. '_' → logprob: -3.7379350662231445
    4. '_candidate' → logprob: -4.1129350662231445
    5. '_digits' → logprob: -4.8629350662231445
    6. '_digit' → logprob: -4.9879350662231445
    7. '_possible' → logprob: -5.6129350662231445
    8. '_value' → logprob: -5.6129350662231445
    9. '(
' → logprob: -5.7379350662231445
    10. '_power' → logprob: -6.1129350662231445

Token 280: ' b' (ID: 287)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25924405455589294
    2. '_candidate' → logprob: -2.759243965148926
    3. '_value' → logprob: -3.259243965148926
    4. '_limit' → logprob: -3.384243965148926
    5. '=' → logprob: -3.884243965148926
    6. '_base' → logprob: -4.384243965148926
    7. 'return' → logprob: -4.884243965148926
    8. '_digit' → logprob: -5.259243965148926
    9. '_digits' → logprob: -5.634243965148926
    10. '       ' → logprob: -5.759243965148926

Token 281: ' such' (ID: 2238)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.060230743139982224
    2. '=' → logprob: -2.9352307319641113
    3. '       ' → logprob: -6.060230731964111
    4. '   ' → logprob: -6.810230731964111
    5. ' for' → logprob: -7.810230731964111
    6. ' ' → logprob: -8.68523120880127
    7. ':' → logprob: -8.68523120880127
    8. ' where' → logprob: -8.81023120880127
    9. ',' → logprob: -8.93523120880127
    10. ' such' → logprob: -9.06023120880127

Token 282: ' that' (ID: 484)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'that' → logprob: -0.3157956600189209
    2. ' that' → logprob: -1.565795660018921
    3. '=' → logprob: -3.315795660018921
    4. '       ' → logprob: -5.0657958984375
    5. 'at' → logprob: -5.3157958984375
    6. 'hat' → logprob: -5.6907958984375
    7. 'return' → logprob: -6.0657958984375
    8. 'as' → logprob: -6.4407958984375
    9. 'to' → logprob: -6.8157958984375
    10. 'b' → logprob: -7.0657958984375

Token 283: ' b' (ID: 287)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.03506648540496826
    2. '(self' → logprob: -3.535066604614258
    3. 'b' → logprob: -5.410066604614258
    4. 'self' → logprob: -8.035066604614258
    5. '(' → logprob: -8.410066604614258
    6. 'pow' → logprob: -9.285066604614258
    7. '(pow' → logprob: -9.785066604614258
    8. ' (' → logprob: -9.785066604614258
    9. '((' → logprob: -10.785066604614258
    10. '(power' → logprob: -11.660066604614258

Token 284: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.055161867290735245
    2. '=' → logprob: -4.055161952972412
    3. ' =' → logprob: -4.055161952972412
    4. ' **' → logprob: -4.305161952972412
    5. '
' → logprob: -6.055161952972412
    6. '<=' → logprob: -6.930161952972412
    7. ' <=' → logprob: -7.805161952972412
    8. '>' → logprob: -8.180161476135254
    9. '```' → logprob: -8.180161476135254
    10. ' ' → logprob: -8.805161476135254

Token 285: 'n' (ID: 77)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.071281298995018
    2. '(self' → logprob: -2.6962811946868896
    3. ' self' → logprob: -7.571281433105469
    4. 'n' → logprob: -7.946281433105469
    5. '
' → logprob: -8.571281433105469
    6. '=self' → logprob: -9.446281433105469
    7. '(' → logprob: -9.696281433105469
    8. '*self' → logprob: -10.196281433105469
    9. 's' → logprob: -10.696281433105469
    10. '[self' → logprob: -10.821281433105469

Token 286: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.05514359101653099
    2. '<=' → logprob: -2.9301435947418213
    3. ' <' → logprob: -9.180143356323242
    4. ' ' → logprob: -10.555143356323242
    5. ' *' → logprob: -10.555143356323242
    6. ' +' → logprob: -10.930143356323242
    7. ')<=' → logprob: -11.305143356323242
    8. ')' → logprob: -11.430143356323242
    9. '()' → logprob: -11.555143356323242
    10. '=' → logprob: -11.555143356323242

Token 287: ' m' (ID: 284)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.000649529043585062
    2. '10' → logprob: -7.375649452209473
    3. ' self' → logprob: -10.750649452209473
    4. '(self' → logprob: -14.000649452209473
    5. '   ' → logprob: -15.500649452209473
    6. '9' → logprob: -15.750649452209473
    7. '       ' → logprob: -16.75065040588379
    8. '=self' → logprob: -16.75065040588379
    9. 'pow' → logprob: -16.87565040588379
    10. '[self' → logprob: -17.00065040588379

Token 288: ',
' (ID: 412)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5249050259590149
    2. '=' → logprob: -1.2749049663543701
    3. 'import' → logprob: -2.77490496635437
    4. '       ' → logprob: -3.39990496635437
    5. '
' → logprob: -3.77490496635437
    6. '**' → logprob: -5.774905204772949
    7. '=int' → logprob: -5.899905204772949
    8. ',' → logprob: -7.524905204772949
    9. '=self' → logprob: -7.524905204772949
    10. 'int' → logprob: -7.649905204772949

Token 289: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.045327071100473404
    2. 'b' → logprob: -4.795327186584473
    3. '   ' → logprob: -4.795327186584473
    4. 'return' → logprob: -4.795327186584473
    5. '0' → logprob: -5.295327186584473
    6. ' b' → logprob: -5.545327186584473
    7. ' ' → logprob: -5.670327186584473
    8. ' return' → logprob: -6.545327186584473
    9. ' and' → logprob: -7.045327186584473
    10. '    ' → logprob: -7.295327186584473

Token 290: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4743276536464691
    2. 'return' → logprob: -1.7243276834487915
    3. 'b' → logprob: -2.724327564239502
    4. 'import' → logprob: -2.849327564239502
    5. '10' → logprob: -3.724327564239502
    6. ' b' → logprob: -4.099327564239502
    7. ' return' → logprob: -4.599327564239502
    8. 'max' → logprob: -4.724327564239502
    9. '0' → logprob: -5.474327564239502
    10. '1' → logprob: -6.474327564239502

Token 291: ' b' (ID: 287)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0226919651031494
    2. 'b' → logprob: -1.5226919651031494
    3. 'return' → logprob: -1.8976919651031494
    4. ' b' → logprob: -2.2726919651031494
    5. 'import' → logprob: -2.6476919651031494
    6. ' return' → logprob: -2.8976919651031494
    7. ' max' → logprob: -4.14769172668457
    8. 'max' → logprob: -4.89769172668457
    9. ' import' → logprob: -5.02269172668457
    10. '#' → logprob: -5.14769172668457

Token 292: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17978057265281677
    2. '=' → logprob: -1.8047806024551392
    3. ',' → logprob: -11.554780960083008
    4. '=int' → logprob: -12.054780960083008
    5. 'max' → logprob: -12.679780960083008
    6. '   ' → logprob: -12.929780960083008
    7. '_max' → logprob: -12.929780960083008
    8. '
' → logprob: -13.054780960083008
    9. '=max' → logprob: -13.679780960083008
    10. ' <=' → logprob: -13.679780960083008

Token 293: ' y' (ID: 342)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00035095500061288476
    2. ' int' → logprob: -8.000350952148438
    3. 'self' → logprob: -11.125350952148438
    4. '(int' → logprob: -14.250350952148438
    5. '	int' → logprob: -17.125350952148438
    6. '[int' → logprob: -18.125350952148438
    7. '=int' → logprob: -18.125350952148438
    8. 'floor' → logprob: -18.625350952148438
    9. ' self' → logprob: -18.750350952148438
    10. '   ' → logprob: -18.875350952148438

Token 294: ' +' (ID: 659)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06203445792198181
    2. '=' → logprob: -3.3120343685150146
    3. '=int' → logprob: -4.187034606933594
    4. 'int' → logprob: -6.437034606933594
    5. '
' → logprob: -6.437034606933594
    6. '**' → logprob: -6.562034606933594
    7. ' ' → logprob: -6.937034606933594
    8. ' int' → logprob: -7.562034606933594
    9. ' **' → logprob: -7.687034606933594
    10. '       ' → logprob: -8.187034606933594

Token 295: ' a' (ID: 261)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.026345815509557724
    2. ' self' → logprob: -3.651345729827881
    3. 'a' → logprob: -10.401346206665039
    4. '<|end|>' → logprob: -12.526346206665039
    5. '1' → logprob: -12.776346206665039
    6. '(self' → logprob: -13.026346206665039
    7. ' ' → logprob: -13.401346206665039
    8. '
' → logprob: -14.026346206665039
    9. '   ' → logprob: -14.151346206665039
    10. '	self' → logprob: -14.276346206665039

Token 296: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36403021216392517
    2. '
' → logprob: -1.2390302419662476
    3. ' 
' → logprob: -5.739030361175537
    4. '        
' → logprob: -5.739030361175537
    5. '<|end|>' → logprob: -6.239030361175537
    6. '   ' → logprob: -6.864030361175537
    7. 'return' → logprob: -6.989030361175537
    8. ',' → logprob: -7.614030361175537
    9. ' ' → logprob: -7.614030361175537
    10. '  
' → logprob: -7.739030361175537

Token 297: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3478500843048096
    2. 'import' → logprob: -1.7228500843048096
    3. 'b' → logprob: -1.8478500843048096
    4. ' b' → logprob: -2.0978500843048096
    5. ' y' → logprob: -2.3478500843048096
    6. ' so' → logprob: -2.3478500843048096
    7. ' import' → logprob: -3.9728500843048096
    8. 'y' → logprob: -4.3478498458862305
    9. ' and' → logprob: -4.4728498458862305
    10. 'return' → logprob: -4.9728498458862305

Token 298: ' y' (ID: 342)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.42097777128219604
    2. ' b' → logprob: -1.6709778308868408
    3. ' y' → logprob: -2.045977830886841
    4. 'y' → logprob: -4.045977592468262
    5. '       ' → logprob: -5.545977592468262
    6. 'return' → logprob: -6.420977592468262
    7. 'self' → logprob: -6.545977592468262
    8. ' self' → logprob: -7.295977592468262
    9. ' return' → logprob: -8.045977592468262
    10. ' (' → logprob: -8.170977592468262

Token 299: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.8664092421531677
    2. ' >=' → logprob: -1.3664093017578125
    3. ' =' → logprob: -1.6164093017578125
    4. '>=' → logprob: -3.1164093017578125
    5. '=' → logprob: -3.3664093017578125
    6. '<=' → logprob: -3.7414093017578125
    7. ' +' → logprob: -4.1164093017578125
    8. '+' → logprob: -5.3664093017578125
    9. ' ' → logprob: -7.8664093017578125
    10. 'max' → logprob: -7.8664093017578125

Token 300: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.003030475229024887
    2. 'self' → logprob: -6.628030300140381
    3. 'm' → logprob: -6.878030300140381
    4. 'int' → logprob: -8.628030776977539
    5. '(m' → logprob: -9.253030776977539
    6. '(' → logprob: -9.378030776977539
    7. ' ' → logprob: -9.378030776977539
    8. '99' → logprob: -10.128030776977539
    9. 'max' → logprob: -10.128030776977539
    10. '81' → logprob: -10.128030776977539

Token 301: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.06103941798210144
    2. '81' → logprob: -3.061039447784424
    3. 'self' → logprob: -5.311039447784424
    4. 'm' → logprob: -5.936039447784424
    5. '(m' → logprob: -6.436039447784424
    6. '(' → logprob: -6.686039447784424
    7. 'int' → logprob: -7.061039447784424
    8. '99' → logprob: -8.186038970947266
    9. 'len' → logprob: -8.936038970947266
    10. ' ' → logprob: -9.311038970947266

Token 302: ' *' (ID: 425)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2716827690601349
    2. ' ' → logprob: -2.7716827392578125
    3. '
' → logprob: -3.2716827392578125
    4. '   ' → logprob: -3.6466827392578125
    5. 'def' → logprob: -3.7716827392578125
    6. '0' → logprob: -3.8966827392578125
    7. 'return' → logprob: -4.6466827392578125
    8. '    ' → logprob: -4.7716827392578125
    9. ' +' → logprob: -5.0216827392578125
    10. ',' → logprob: -5.6466827392578125

Token 303: ' number' (ID: 2086)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.16316159069538116
    2. '(len' → logprob: -2.038161516189575
    3. ' len' → logprob: -4.038161754608154
    4. '(' → logprob: -6.413161754608154
    5. ' (' → logprob: -7.788161754608154
    6. '((' → logprob: -8.413161277770996
    7. 'self' → logprob: -8.788161277770996
    8. '10' → logprob: -9.913161277770996
    9. '9' → logprob: -10.038161277770996
    10. '(self' → logprob: -11.038161277770996

Token 304: '_of' (ID: 8023)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.6399346590042114
    2. '_of' → logprob: -1.0149346590042114
    3. 'of' → logprob: -2.514934539794922
    4. 's' → logprob: -4.264934539794922
    5. '_digits' → logprob: -4.514934539794922
    6. ' ' → logprob: -6.764934539794922
    7. '<|end|>' → logprob: -7.264934539794922
    8. '  ' → logprob: -7.639934539794922
    9. '_s' → logprob: -7.639934539794922
    10. '   ' → logprob: -8.264934539794922

Token 305: '_digits' (ID: 108638)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.26252302527427673
    2. 'len' → logprob: -1.6375230550765991
    3. '_digits' → logprob: -3.8875229358673096
    4. ' digits' → logprob: -4.512523174285889
    5. ' len' → logprob: -5.512523174285889
    6. '   ' → logprob: -7.887523174285889
    7. '(len' → logprob: -8.51252269744873
    8. '       ' → logprob: -8.76252269744873
    9. 'Digits' → logprob: -10.26252269744873
    10. 'd' → logprob: -10.51252269744873

Token 306: '(x' (ID: 4061)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013118583709001541
    2. 'def' → logprob: -4.888118743896484
    3. 'import' → logprob: -6.763118743896484
    4. '   ' → logprob: -6.763118743896484
    5. ',' → logprob: -7.138118743896484
    6. ' (' → logprob: -8.138118743896484
    7. 'digits' → logprob: -8.138118743896484
    8. '(' → logprob: -8.263118743896484
    9. 'from' → logprob: -8.513118743896484
    10. ' in' → logprob: -8.638118743896484

Token 307: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.727814257144928
    2. '       ' → logprob: -0.852814257144928
    3. ')
' → logprob: -3.227814197540283
    4. '
' → logprob: -3.977814197540283
    5. 'def' → logprob: -4.602814197540283
    6. '   ' → logprob: -4.727814197540283
    7. 's' → logprob: -6.477814197540283
    8. ' ' → logprob: -6.477814197540283
    9. '):
' → logprob: -6.727814197540283
    10. '        
' → logprob: -6.852814197540283

Token 308: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016075820894911885
    2. 'import' → logprob: -7.001607418060303
    3. '<|end|>' → logprob: -8.626607894897461
    4. 'def' → logprob: -9.001607894897461
    5. '   ' → logprob: -9.126607894897461
    6. ',' → logprob: -9.626607894897461
    7. 'from' → logprob: -9.751607894897461
    8. '        
' → logprob: -10.251607894897461
    9. '        ' → logprob: -10.501607894897461
    10. '#' → logprob: -11.251607894897461

Token 309: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33342355489730835
    2. ' max' → logprob: -2.458423614501953
    3. 'max' → logprob: -2.708423614501953
    4. 'digits' → logprob: -2.958423614501953
    5. ' digits' → logprob: -4.083423614501953
    6. 'b' → logprob: -4.708423614501953
    7. 'digit' → logprob: -4.708423614501953
    8. 'return' → logprob: -4.958423614501953
    9. 'num' → logprob: -5.083423614501953
    10. '#' (adapté à ' #') → logprob: -5.333423614501953

Token 310: ' But' (ID: 3072)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1124210357666016
    2. ' max' → logprob: -1.2374210357666016
    3. 'max' → logprob: -2.1124210357666016
    4. ' digits' → logprob: -2.9874210357666016
    5. 'digits' → logprob: -3.1124210357666016
    6. 'num' → logprob: -3.1124210357666016
    7. 'digit' → logprob: -3.9874210357666016
    8. ' num' → logprob: -4.112421035766602
    9. ' y' → logprob: -4.112421035766602
    10. 'import' → logprob: -4.237421035766602

Token 311: ' establish' (ID: 12791)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.3078885078430176
    2. '       ' → logprob: -2.0578885078430176
    3. ' def' → logprob: -2.5578885078430176
    4. ' the' → logprob: -2.6828885078430176
    5. ' y' → logprob: -3.0578885078430176
    6. ' we' → logprob: -3.1828885078430176
    7. 'def' → logprob: -3.1828885078430176
    8. ' max' → logprob: -3.3078885078430176
    9. ' return' → logprob: -3.5578885078430176
    10. ' in' → logprob: -3.6828885078430176

Token 312: ' an' (ID: 448)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.4596175253391266
    2. ' a' → logprob: -1.5846174955368042
    3. 'max' → logprob: -2.5846176147460938
    4. ' the' → logprob: -4.459617614746094
    5. '#' → logprob: -4.584617614746094
    6. ' upper' → logprob: -4.584617614746094
    7. '       ' → logprob: -4.709617614746094
    8. ' an' → logprob: -5.334617614746094
    9. 'ing' → logprob: -5.459617614746094
    10. ' #' → logprob: -5.709617614746094

Token 313: ' upper' (ID: 13057)
  Prédit: ' upper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' upper' → logprob: -0.07632461190223694
    2. ' approximate' → logprob: -3.326324701309204
    3. ' initial' → logprob: -4.326324462890625
    4. 'upper' → logprob: -4.451324462890625
    5. ' approximation' → logprob: -6.076324462890625
    6. ' explicit' → logprob: -6.451324462890625
    7. ' approach' → logprob: -6.701324462890625
    8. '   ' → logprob: -7.326324462890625
    9. 'approx' → logprob: -7.326324462890625
    10. ' estimate' → logprob: -7.326324462890625

Token 314: ' bound' (ID: 11608)
  Prédit: ' bound'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bound' → logprob: -0.0898648351430893
    2. ' limit' → logprob: -3.464864730834961
    3. 'bound' → logprob: -3.589864730834961
    4. '_bound' → logprob: -3.839864730834961
    5. 'limit' → logprob: -5.464864730834961
    6. '_limit' → logprob: -6.839864730834961
    7. '_' → logprob: -8.339864730834961
    8. '   ' → logprob: -11.589864730834961
    9. ' ' → logprob: -12.214864730834961
    10. 'import' → logprob: -12.839864730834961

Token 315: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6042522192001343
    2. ' for' → logprob: -1.3542522192001343
    3. '
' → logprob: -2.854252338409424
    4. ' ' → logprob: -3.479252338409424
    5. '        
' → logprob: -3.854252338409424
    6. ':' → logprob: -4.229252338409424
    7. 'def' → logprob: -4.479252338409424
    8. ' 
' → logprob: -4.729252338409424
    9. '        ' → logprob: -5.104252338409424
    10. 'import' → logprob: -5.479252338409424

Token 316: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.29213640093803406
    2. ' b' → logprob: -2.1671364307403564
    3. ' y' → logprob: -2.5421364307403564
    4. 'y' → logprob: -3.6671364307403564
    5. ' the' → logprob: -4.542136192321777
    6. ' base' → logprob: -4.542136192321777
    7. ' self' → logprob: -5.917136192321777
    8. 'self' → logprob: -6.417136192321777
    9. ' possible' → logprob: -6.667136192321777
    10. 'the' → logprob: -6.667136192321777

Token 317: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.045660920441150665
    2. ' =' → logprob: -4.045660972595215
    3. '=' → logprob: -5.170660972595215
    4. ':' → logprob: -5.795660972595215
    5. '        
' → logprob: -5.795660972595215
    6. 'return' → logprob: -5.920660972595215
    7. ' return' → logprob: -6.295660972595215
    8. ',' → logprob: -6.545660972595215
    9. '
' → logprob: -6.545660972595215
    10. 'import' → logprob: -6.670660972595215

Token 318: ' nth' (ID: 58687)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.9973626136779785
    2. '       ' → logprob: -1.4973626136779785
    3. 'return' → logprob: -1.6223626136779785
    4. '9' → logprob: -1.9973626136779785
    5. ' ' → logprob: -3.3723626136779785
    6. ' self' → logprob: -4.7473626136779785
    7. '10' → logprob: -5.2473626136779785
    8. ' b' → logprob: -5.6223626136779785
    9. 'b' → logprob: -5.7473626136779785
    10. 'self' → logprob: -5.8723626136779785

Token 319: ' root' (ID: 6577)
  Prédit: '_root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -0.010984745807945728
    2. 'root' → logprob: -4.635984897613525
    3. ' root' → logprob: -7.260984897613525
    4. '_' → logprob: -7.635984897613525
    5. '_ro' → logprob: -10.385984420776367
    6. '_power' → logprob: -12.510984420776367
    7. '_ROOT' → logprob: -13.135984420776367
    8. ' _' → logprob: -13.260984420776367
    9. 'roots' → logprob: -14.510984420776367
    10. '_pow' → logprob: -14.510984420776367

Token 320: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.581868588924408
    2. '(self' → logprob: -2.7068686485290527
    3. 'import' → logprob: -2.8318686485290527
    4. '       ' → logprob: -3.0818686485290527
    5. 'self' → logprob: -3.0818686485290527
    6. '(' → logprob: -3.0818686485290527
    7. 'int' → logprob: -3.2068686485290527
    8. ' self' → logprob: -3.4568686485290527
    9. ' (' → logprob: -3.7068686485290527
    10. '(int' → logprob: -4.206868648529053

Token 321: ' m' (ID: 284)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06203882396221161
    2. ' self' → logprob: -2.8120388984680176
    3. 'm' → logprob: -9.68703842163086
    4. '(self' → logprob: -11.81203842163086
    5. ' m' → logprob: -13.68703842163086
    6. '       ' → logprob: -15.68703842163086
    7. '```' → logprob: -16.31203842163086
    8. '   ' → logprob: -16.43703842163086
    9. '
' → logprob: -16.56203842163086
    10. '    ' → logprob: -17.31203842163086

Token 322: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7617296576499939
    2. 'import' → logprob: -1.0117297172546387
    3. '
' → logprob: -2.0117297172546387
    4. 'return' → logprob: -4.636729717254639
    5. '**' → logprob: -4.761729717254639
    6. '   ' → logprob: -5.511729717254639
    7. ':' → logprob: -6.136729717254639
    8. ' return' → logprob: -6.511729717254639
    9. '        
' → logprob: -6.511729717254639
    10. ' 
' → logprob: -6.761729717254639

Token 323: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019770918413996696
    2. 'import' → logprob: -4.394771099090576
    3. '
' → logprob: -6.269771099090576
    4. '   ' → logprob: -7.269771099090576
    5. '**' → logprob: -7.269771099090576
    6. 'return' → logprob: -7.394771099090576
    7. ' return' → logprob: -7.769771099090576
    8. '        
' → logprob: -7.894771099090576
    9. ' **' → logprob: -7.894771099090576
    10. '<|end|>' → logprob: -7.894771099090576

Token 324: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7756269574165344
    2. 'import' → logprob: -0.9006269574165344
    3. 'return' (adapté à ' return') → logprob: -2.5256268978118896
    4. ' return' → logprob: -3.7756268978118896
    5. 'int' → logprob: -3.9006268978118896
    6. ' import' → logprob: -5.150627136230469
    7. ' int' → logprob: -6.025627136230469
    8. 'from' → logprob: -7.150627136230469
    9. '
' → logprob: -7.775627136230469
    10. '   ' → logprob: -8.400627136230469

Token 325: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00033665422233752906
    2. ' int' → logprob: -8.000336647033691
    3. '(int' → logprob: -14.625336647033691
    4. '   ' → logprob: -15.125336647033691
    5. 'math' → logprob: -15.125336647033691
    6. '	int' → logprob: -16.375337600708008
    7. 'floor' → logprob: -16.750337600708008
    8. 'self' → logprob: -17.250337600708008
    9. 'round' → logprob: -17.625337600708008
    10. '  ' → logprob: -18.250337600708008

Token 326: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0017238459549844265
    2. '(' → logprob: -6.751723766326904
    3. '(pow' → logprob: -7.876723766326904
    4. '(m' → logprob: -9.001724243164062
    5. '((' → logprob: -10.501724243164062
    6. '(round' → logprob: -10.751724243164062
    7. 'self' → logprob: -13.751724243164062
    8. '(s' → logprob: -15.626724243164062
    9. '(math' → logprob: -15.751724243164062
    10. '(max' → logprob: -16.001724243164062

Token 327: '.m' (ID: 1021)
  Prédit: '.m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.m' → logprob: -1.4498052223643754e-05
    2. '.' → logprob: -11.625014305114746
    3. 'm' → logprob: -12.625014305114746
    4. '._' → logprob: -14.375014305114746
    5. '.м' → logprob: -15.125014305114746
    6. '	m' → logprob: -15.375014305114746
    7. '.n' → logprob: -15.500014305114746
    8. ' .' → logprob: -15.750014305114746
    9. 'self' → logprob: -16.250015258789062
    10. ':m' → logprob: -16.375015258789062

Token 328: ' **' (ID: 6240)
  Prédit: ' **'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' **' → logprob: -0.575941801071167
    2. '**' → logprob: -0.825941801071167
    3. ' ' → logprob: -13.450942039489746
    4. ' ' → logprob: -15.700942039489746
    5. ' **)' → logprob: -15.825942039489746
    6. ' **
' → logprob: -15.950942039489746
    7. ')**' → logprob: -16.07594108581543
    8. '**)' → logprob: -16.45094108581543
    9. '**
' → logprob: -17.07594108581543
    10. '(**' → logprob: -17.32594108581543

Token 329: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008623439818620682
    2. ' (' → logprob: -4.7586236000061035
    3. '1' → logprob: -12.133623123168945
    4. '   ' → logprob: -13.008623123168945
    5. ')' → logprob: -14.883623123168945
    6. '       ' → logprob: -15.633623123168945
    7. '
' → logprob: -15.633623123168945
    8. '    ' → logprob: -15.758623123168945
    9. ' ' → logprob: -16.008623123168945
    10. '(
' → logprob: -16.133623123168945

Token 330: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.250000953674316
    3. '(' → logprob: -15.500000953674316
    4. '   ' → logprob: -17.0
    5. '           ' → logprob: -20.375
    6. '```' → logprob: -20.5
    7. '
' → logprob: -20.625
    8. ')' → logprob: -21.5
    9. '       ' → logprob: -22.0
    10. '  ' → logprob: -22.5

Token 331: '/self' (ID: 173312)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.39789727330207825
    2. '/self' → logprob: -1.1478972434997559
    3. '/(' → logprob: -4.772897243499756
    4. ' /' → logprob: -6.022897243499756
    5. 'self' → logprob: -10.647897720336914
    6. '/f' → logprob: -11.397897720336914
    7. '   ' → logprob: -11.772897720336914
    8. '/n' → logprob: -12.022897720336914
    9. '/max' → logprob: -12.397897720336914
    10. '       ' → logprob: -12.522897720336914

Token 332: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -1.2471589798224159e-05
    2. 'n' → logprob: -11.625012397766113
    3. '.' → logprob: -12.625012397766113
    4. '	n' → logprob: -16.00001335144043
    5. ' .' → logprob: -16.75001335144043
    6. '.
' → logprob: -17.37501335144043
    7. ',n' → logprob: -17.50001335144043
    8. ' n' → logprob: -17.75001335144043
    9. '   ' → logprob: -17.87501335144043
    10. '
' → logprob: -18.25001335144043

Token 333: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.04331590235233307
    2. ')' → logprob: -3.168315887451172
    3. ' ))' → logprob: -8.293315887451172
    4. '))+' → logprob: -10.168315887451172
    5. ' )' → logprob: -11.043315887451172
    6. ')+' → logprob: -12.168315887451172
    7. ')))' → logprob: -12.668315887451172
    8. '))
' → logprob: -13.168315887451172
    9. '))-' → logprob: -14.668315887451172
    10. ' ' → logprob: -15.418315887451172

Token 334: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 335: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0076099359430372715
    2. ' ' → logprob: -4.882609844207764
    3. '2' → logprob: -12.757610321044922
    4. '0' → logprob: -14.257610321044922
    5. '10' → logprob: -15.757610321044922
    6. '  ' → logprob: -16.882610321044922
    7. '5' → logprob: -17.382610321044922
    8. '```' → logprob: -18.007610321044922
    9. '   ' → logprob: -18.132610321044922
    10. '100' → logprob: -18.507610321044922

Token 336: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.941161776310764e-05
    2. ' ' → logprob: -10.500039100646973
    3. '2' → logprob: -11.375039100646973
    4. '10' → logprob: -15.250039100646973
    5. '5' → logprob: -16.50004005432129
    6. '0' → logprob: -17.12504005432129
    7. '3' → logprob: -18.25004005432129
    8. '100' → logprob: -18.62504005432129
    9. '   ' → logprob: -19.00004005432129
    10. '  ' → logprob: -19.25004005432129

Token 337: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 338: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0341942198574543
    2. 'def' → logprob: -3.409194231033325
    3. '    
' → logprob: -7.909193992614746
    4. '
' → logprob: -8.909193992614746
    5. ' def' → logprob: -10.534193992614746
    6. '  
' → logprob: -11.784193992614746
    7. '<|end|>' → logprob: -12.284193992614746
    8. '        
' → logprob: -12.909193992614746
    9. '```' → logprob: -13.534193992614746
    10. '	def' → logprob: -14.159193992614746

Token 339: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -9.710618905955926e-05
    2. ' def' → logprob: -9.625097274780273
    3. '   ' → logprob: -10.625097274780273
    4. '
' → logprob: -12.125097274780273
    5. '    
' → logprob: -14.375097274780273
    6. '	def' → logprob: -14.625097274780273
    7. '  
' → logprob: -16.375097274780273
    8. ' ' → logprob: -17.750097274780273
    9. '        
' → logprob: -17.750097274780273
    10. '```' → logprob: -19.000097274780273

Token 340: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.6939336657524109
    2. 'enumer' → logprob: -0.8189336657524109
    3. ' find' → logprob: -3.9439337253570557
    4. 'c' → logprob: -4.193933486938477
    5. 'find' → logprob: -4.443933486938477
    6. ' candidates' → logprob: -4.943933486938477
    7. 'generate' → logprob: -5.568933486938477
    8. ' generate' → logprob: -6.943933486938477
    9. ' valid' → logprob: -8.193933486938477
    10. 'search' → logprob: -8.818933486938477

Token 341: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.12230934202671051
    2. '(' → logprob: -2.372309446334839
    3. '_candidates' → logprob: -4.24730920791626
    4. '_' → logprob: -4.99730920791626
    5. 's' → logprob: -7.99730920791626
    6. 'self' → logprob: -8.872309684753418
    7. '_(' → logprob: -8.997309684753418
    8. '_numbers' → logprob: -10.122309684753418
    9. '_valid' → logprob: -10.122309684753418
    10. '()' → logprob: -10.372309684753418

Token 342: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11785443872213364
    2. '_candidates' → logprob: -2.992854356765747
    3. ')' → logprob: -3.117854356765747
    4. 'self' → logprob: -4.742854595184326
    5. 's' → logprob: -6.367854595184326
    6. '(self' → logprob: -6.617854595184326
    7. '   ' → logprob: -6.617854595184326
    8. '):
' → logprob: -6.992854595184326
    9. '_numbers' → logprob: -7.242854595184326
    10. '_' → logprob: -7.742854595184326

Token 343: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0003491705865599215
    2. '(' → logprob: -8.250349044799805
    3. 'self' → logprob: -10.500349044799805
    4. ':' → logprob: -10.625349044799805
    5. '   ' → logprob: -11.375349044799805
    6. 'def' → logprob: -11.875349044799805
    7. '       ' → logprob: -12.375349044799805
    8. ' (' → logprob: -12.500349044799805
    9. '(s' → logprob: -12.875349044799805
    10. 's' → logprob: -13.250349044799805

Token 344: ' int' (ID: 677)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.014300551265478134
    2. ' list' → logprob: -4.389300346374512
    3. '[]' → logprob: -6.889300346374512
    4. 'int' → logprob: -7.639300346374512
    5. '   ' → logprob: -9.639300346374512
    6. 'range' → logprob: -9.764300346374512
    7. ' []' → logprob: -9.764300346374512
    8. ' ' → logprob: -10.764300346374512
    9. '[int' → logprob: -10.764300346374512
    10. '[list' → logprob: -10.889300346374512

Token 345: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12625546753406525
    2. '(self' → logprob: -2.376255512237549
    3. ':
' → logprob: -3.876255512237549
    4. '   ' → logprob: -6.126255512237549
    5. ':' → logprob: -6.376255512237549
    6. '(' → logprob: -7.376255512237549
    7. 'self' → logprob: -8.25125503540039
    8. '(
' → logprob: -9.62625503540039
    9. '):
' → logprob: -10.37625503540039
    10. '        
' → logprob: -10.75125503540039

Token 346: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000263481488218531
    2. 'result' → logprob: -9.250263214111328
    3. '
' → logprob: -9.750263214111328
    4. '```' → logprob: -10.375263214111328
    5. '   ' → logprob: -10.500263214111328
    6. '0' → logprob: -11.125263214111328
    7. 'count' → logprob: -12.375263214111328
    8. '	' → logprob: -12.500263214111328
    9. 'n' → logprob: -12.500263214111328
    10. ',' → logprob: -12.875263214111328

Token 347: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.04095342010259628
    2. 'result' → logprob: -3.5409533977508545
    3. '       ' → logprob: -5.040953636169434
    4. 'total' → logprob: -5.540953636169434
    5. 'counter' → logprob: -8.290953636169434
    6. ' count' → logprob: -8.540953636169434
    7. 'found' → logprob: -9.415953636169434
    8. 'results' → logprob: -9.790953636169434
    9. '   ' → logprob: -10.290953636169434
    10. 'valid' → logprob: -10.290953636169434

Token 348: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06197025999426842
    2. '=' → logprob: -2.8119702339172363
    3. ' ' → logprob: -13.061970710754395
    4. '_' → logprob: -15.811970710754395
    5. ',' → logprob: -16.186969757080078
    6. '   ' → logprob: -16.561969757080078
    7. '  ' → logprob: -17.061969757080078
    8. '	' → logprob: -17.186969757080078
    9. ' =
' → logprob: -17.436969757080078
    10. ' +=' → logprob: -17.436969757080078

Token 349: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0028049908578395844
    2. ' ' → logprob: -5.877804756164551
    3. '   ' → logprob: -16.752805709838867
    4. '       ' → logprob: -18.877805709838867
    5. '۰' → logprob: -20.190305709838867
    6. ' ' → logprob: -20.252805709838867
    7. '  ' → logprob: -20.502805709838867
    8. '1' → logprob: -20.877805709838867
    9. '=' → logprob: -20.940305709838867
    10. '000' → logprob: -21.252805709838867

Token 350: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.180879816180095e-05
    2. ' ' → logprob: -9.875051498413086
    3. '   ' → logprob: -15.875051498413086
    4. '1' → logprob: -16.937551498413086
    5. 'sum' → logprob: -17.125051498413086
    6. '```' → logprob: -17.750051498413086
    7. '=' → logprob: -18.437551498413086
    8. '  ' → logprob: -18.687551498413086
    9. '۰' → logprob: -18.937551498413086
    10. '100' → logprob: -19.062551498413086

Token 351: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.006004398223012686
    2. '       ' → logprob: -5.131004333496094
    3. '
' → logprob: -10.131004333496094
    4. ' for' → logprob: -10.756004333496094
    5. '        
' → logprob: -12.381004333496094
    6. '<|end|>' → logprob: -12.381004333496094
    7. '    
' → logprob: -13.881004333496094
    8. 'for' → logprob: -14.006004333496094
    9. ' 
' → logprob: -14.256004333496094
    10. '   ' → logprob: -14.381004333496094

Token 352: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011286636581644416
    2. ' for' → logprob: -7.001128673553467
    3. '
' → logprob: -9.126128196716309
    4. '   ' → logprob: -9.626128196716309
    5. 'for' → logprob: -10.126128196716309
    6. '	for' → logprob: -13.501128196716309
    7. '        
' → logprob: -15.376128196716309
    8. '
' → logprob: -16.001129150390625
    9. '	' → logprob: -16.126129150390625
    10. '           ' → logprob: -16.126129150390625

Token 353: ' max' (ID: 2999)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00297354138456285
    2. '       ' → logprob: -6.252973556518555
    3. ' for' → logprob: -6.877973556518555
    4. 'max' (adapté à ' max') → logprob: -12.002973556518555
    5. 'b' → logprob: -12.252973556518555
    6. 'x' → logprob: -13.127973556518555
    7. '
' → logprob: -15.002973556518555
    8. '	for' → logprob: -15.252973556518555
    9. '   ' → logprob: -15.502973556518555
    10. 'limit' → logprob: -15.627973556518555

Token 354: '_base' (ID: 17096)
  Prédit: '_base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_base' → logprob: -0.040333036333322525
    2. '_candidate' → logprob: -3.2903330326080322
    3. '_b' → logprob: -6.415333271026611
    4. '_' → logprob: -8.040332794189453
    5. '_val' → logprob: -8.415332794189453
    6. '_c' → logprob: -9.790332794189453
    7. '_value' → logprob: -10.540332794189453
    8. '_candidates' → logprob: -11.790332794189453
    9. 'candidate' → logprob: -12.790332794189453
    10. 'b' → logprob: -12.790332794189453

Token 355: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39166951179504395
    2. '=' → logprob: -1.141669511795044
    3. '_candidate' → logprob: -5.391669273376465
    4. 'candidate' → logprob: -8.516669273376465
    5. '_' → logprob: -11.516669273376465
    6. 'c' → logprob: -11.891669273376465
    7. 'b' → logprob: -12.266669273376465
    8. '_=' → logprob: -12.516669273376465
    9. '   ' → logprob: -13.516669273376465
    10. ' ' → logprob: -13.891669273376465

Token 356: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004078997299075127
    2. ' self' → logprob: -5.5040788650512695
    3. 'int' → logprob: -14.50407886505127
    4. '       ' → logprob: -16.254079818725586
    5. '(self' → logprob: -17.379079818725586
    6. '	self' → logprob: -17.754079818725586
    7. '   ' → logprob: -18.754079818725586
    8. '=self' → logprob: -19.129079818725586
    9. '[self' → logprob: -19.504079818725586
    10. '           ' → logprob: -20.129079818725586

Token 357: '.max' (ID: 11883)
  Prédit: '.max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.max' → logprob: -0.00861729308962822
    2. 'max' → logprob: -4.758617401123047
    3. '.' → logprob: -13.258617401123047
    4. ' max' → logprob: -14.008617401123047
    5. ' .' → logprob: -17.008617401123047
    6. '	max' → logprob: -17.633617401123047
    7. '.m' → logprob: -17.883617401123047
    8. '_max' → logprob: -19.008617401123047
    9. '   ' → logprob: -19.258617401123047
    10. ',max' → logprob: -19.508617401123047

Token 358: '_base' (ID: 17096)
  Prédit: '_base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_base' → logprob: 0.0
    2. 'base' → logprob: -18.5
    3. '_BASE' → logprob: -19.75
    4. '_Base' → logprob: -20.375
    5. 'Base' → logprob: -21.0
    6. ' base' → logprob: -21.0
    7. '_' → logprob: -21.25
    8. '_bas' → logprob: -21.5
    9. '_based' → logprob: -21.875
    10. '_b' → logprob: -22.0

Token 359: '_candidate' (ID: 158186)
  Prédit: '_candidate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_candidate' → logprob: -0.10024603456258774
    2. 'candidate' → logprob: -2.350245952606201
    3. 'Candidate' → logprob: -10.22524642944336
    4. ' candidate' → logprob: -13.22524642944336
    5. 'andidate' → logprob: -14.47524642944336
    6. 'c' → logprob: -15.47524642944336
    7. '_candidates' → logprob: -15.72524642944336
    8. '   ' → logprob: -16.60024642944336
    9. 'base' → logprob: -16.72524642944336
    10. '```' → logprob: -17.22524642944336

Token 360: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0010653206845745444
    2. '       ' → logprob: -7.126065254211426
    3. '
' → logprob: -8.501065254211426
    4. '        
' → logprob: -10.376065254211426
    5. 'for' → logprob: -12.001065254211426
    6. '+' → logprob: -12.126065254211426
    7. ' for' → logprob: -12.751065254211426
    8. ' +' → logprob: -12.751065254211426
    9. '  
' → logprob: -13.501065254211426
    10. '+
' → logprob: -13.626065254211426

Token 361: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13505566120147705
    2. '
' → logprob: -2.1350555419921875
    3. ' for' → logprob: -4.8850555419921875
    4. 'for' → logprob: -8.010055541992188
    5. '   ' → logprob: -8.760055541992188
    6. '	for' → logprob: -10.635055541992188
    7. '        
' → logprob: -11.760055541992188
    8. '
' → logprob: -12.135055541992188
    9. '```' → logprob: -13.010055541992188
    10. '	' → logprob: -13.135055541992188

Token 362: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00034511767444200814
    2. '       ' → logprob: -8.000345230102539
    3. ' for' → logprob: -11.875345230102539
    4. 'max' → logprob: -13.125345230102539
    5. '```' → logprob: -15.000345230102539
    6. '
' → logprob: -15.375345230102539
    7. 'digit' → logprob: -17.12534523010254
    8. 'x' → logprob: -17.25034523010254
    9. '	for' → logprob: -17.37534523010254
    10. '        
' → logprob: -17.37534523010254

Token 363: ' Iterate' (ID: 129410)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002639629878103733
    2. ' for' → logprob: -6.1276397705078125
    3. '       ' → logprob: -7.8776397705078125
    4. 'max' → logprob: -10.627639770507812
    5. '```' → logprob: -10.752639770507812
    6. 'b' → logprob: -11.377639770507812
    7. 'x' → logprob: -11.377639770507812
    8. '
' → logprob: -13.752639770507812
    9. 'from' → logprob: -13.877639770507812
    10. 'y' → logprob: -14.252639770507812

Token 364: ' over' (ID: 1072)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1572234630584717
    2. '       ' → logprob: -1.6572234630584717
    3. ' over' → logprob: -2.1572234630584717
    4. 'x' → logprob: -2.4072234630584717
    5. ' for' → logprob: -2.5322234630584717
    6. 'from' → logprob: -2.5322234630584717
    7. 'over' → logprob: -2.6572234630584717
    8. '(' → logprob: -4.282223701477051
    9. '(x' → logprob: -4.282223701477051
    10. ' through' → logprob: -4.782223701477051

Token 365: ' potential' (ID: 6451)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3543448746204376
    2. 'range' → logprob: -1.2293448448181152
    3. 'b' → logprob: -5.354344844818115
    4. 'self' → logprob: -7.854344844818115
    5. 'base' → logprob: -8.354345321655273
    6. 'possible' → logprob: -8.729345321655273
    7. 'candidate' → logprob: -8.729345321655273
    8. ' range' → logprob: -9.479345321655273
    9. 'y' → logprob: -9.604345321655273
    10. 'pow' → logprob: -11.479345321655273

Token 366: ' sums' (ID: 73121)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.010023684240877628
    2. 'b' → logprob: -5.260023593902588
    3. 'bases' → logprob: -6.135023593902588
    4. ' x' → logprob: -6.635023593902588
    5. 'base' → logprob: -8.010024070739746
    6. 'y' → logprob: -8.385024070739746
    7. 'digits' → logprob: -9.260024070739746
    8. 'candidate' → logprob: -9.260024070739746
    9. 'values' → logprob: -9.385024070739746
    10. 'powers' → logprob: -9.385024070739746

Token 367: ' +' (ID: 659)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.4434127807617188
    2. 'of' → logprob: -1.6934127807617188
    3. '       ' → logprob: -1.8184127807617188
    4. 'for' → logprob: -2.1934127807617188
    5. 'x' → logprob: -2.5684127807617188
    6. 'from' → logprob: -3.1934127807617188
    7. ' of' → logprob: -3.4434127807617188
    8. 'range' → logprob: -3.4434127807617188
    9. ' for' → logprob: -3.9434127807617188
    10. ' y' → logprob: -3.9434127807617188

Token 368: ' a' (ID: 261)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.24092325568199158
    2. ' self' → logprob: -1.865923285484314
    3. 'a' → logprob: -2.8659231662750244
    4. ' a' → logprob: -6.9909234046936035
    5. '<|end|>' → logprob: -7.3659234046936035
    6. ' ' → logprob: -8.740922927856445
    7. '=self' → logprob: -9.115922927856445
    8. '[self' → logprob: -9.490922927856445
    9. 'ex' → logprob: -10.303422927856445
    10. '   ' → logprob: -10.428422927856445

Token 369: ' =' (ID: 314)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6631096601486206
    2. 'for' → logprob: -1.1631096601486206
    3. '       ' → logprob: -2.41310977935791
    4. '
' → logprob: -3.91310977935791
    5. 'range' → logprob: -4.03810977935791
    6. ' =' → logprob: -4.41310977935791
    7. ':' → logprob: -4.41310977935791
    8. ' range' → logprob: -5.28810977935791
    9. '=' → logprob: -5.78810977935791
    10. '   ' → logprob: -6.03810977935791

Token 370: ' base' (ID: 3611)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.18396951258182526
    2. 'max' → logprob: -2.558969497680664
    3. 'y' → logprob: -3.683969497680664
    4. 'range' → logprob: -3.808969497680664
    5. 'base' → logprob: -4.183969497680664
    6. ' b' → logprob: -4.808969497680664
    7. 'for' → logprob: -5.183969497680664
    8. 'self' → logprob: -5.808969497680664
    9. 'a' → logprob: -6.058969497680664
    10. ' range' → logprob: -6.683969497680664

Token 371: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4186652600765228
    2. '       ' → logprob: -1.6686652898788452
    3. ' for' → logprob: -1.9186652898788452
    4. '
' → logprob: -5.168665409088135
    5. ',' → logprob: -8.293664932250977
    6. ':' → logprob: -8.293664932250977
    7. '```' → logprob: -9.543664932250977
    8. '   ' → logprob: -9.793664932250977
    9. ':
' → logprob: -9.918664932250977
    10. '        
' → logprob: -10.043664932250977

Token 372: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06924557685852051
    2. ' for' → logprob: -2.9442455768585205
    3. 'for' → logprob: -4.569245338439941
    4. '
' → logprob: -5.944245338439941
    5. '```' → logprob: -7.444245338439941
    6. ',' → logprob: -7.819245338439941
    7. '        
' → logprob: -9.944245338439941
    8. ':' → logprob: -10.444245338439941
    9. 'b' → logprob: -10.819245338439941
    10. '   ' → logprob: -10.819245338439941

Token 373: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.01822076365351677
    2. ' for' → logprob: -4.268220901489258
    3. '       ' → logprob: -5.518220901489258
    4. '
' → logprob: -11.268220901489258
    5. 'b' → logprob: -12.018220901489258
    6. 'y' → logprob: -12.393220901489258
    7. '```' → logprob: -12.393220901489258
    8. '   ' → logprob: -12.768220901489258
    9. 'from' → logprob: -13.518220901489258
    10. '	for' → logprob: -13.518220901489258

Token 374: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.3458450138568878
    2. 'b' → logprob: -1.4708449840545654
    3. ' base' → logprob: -3.4708449840545654
    4. 'y' → logprob: -4.0958452224731445
    5. 's' → logprob: -5.5958452224731445
    6. 'candidate' → logprob: -5.5958452224731445
    7. 'sum' → logprob: -5.8458452224731445
    8. ' b' → logprob: -6.3458452224731445
    9. ' y' → logprob: -6.9708452224731445
    10. 'ba' → logprob: -7.5958452224731445

Token 375: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07903289049863815
    2. 'in' → logprob: -2.5790328979492188
    3. '_in' → logprob: -9.954032897949219
    4. 'a' → logprob: -11.204032897949219
    5. ' ' → logprob: -11.454032897949219
    6. 's' → logprob: -11.454032897949219
    7. ',' → logprob: -11.829032897949219
    8. 'from' → logprob: -12.204032897949219
    9. '	in' → logprob: -12.204032897949219
    10. '_' → logprob: -12.454032897949219

Token 376: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001589618914294988
    2. ' range' → logprob: -8.75015926361084
    3. '   ' → logprob: -15.00015926361084
    4. '(range' → logprob: -16.000158309936523
    5. '	range' → logprob: -17.875158309936523
    6. 'filter' → logprob: -18.250158309936523
    7. '

' → logprob: -18.250158309936523
    8. '
' → logprob: -18.625158309936523
    9. ' ' → logprob: -18.875158309936523
    10. '  ' → logprob: -19.000158309936523

Token 377: '(self' (ID: 2402)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5289116501808167
    2. '1' → logprob: -0.9039116501808167
    3. ' self' → logprob: -5.778911590576172
    4. '(self' → logprob: -6.528911590576172
    5. '0' → logprob: -7.653911590576172
    6. '   ' → logprob: -7.903911590576172
    7. 'max' → logprob: -9.278911590576172
    8. ' ' → logprob: -9.403911590576172
    9. '[self' → logprob: -9.778911590576172
    10. '(' → logprob: -10.028911590576172

Token 378: '.a' (ID: 8772)
  Prédit: '.a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.a' → logprob: -0.0362391471862793
    2. 'max' → logprob: -4.036239147186279
    3. 'a' → logprob: -4.786239147186279
    4. '.max' → logprob: -4.911239147186279
    5. '.m' → logprob: -7.411239147186279
    6. ' ' → logprob: -7.911239147186279
    7. '.n' → logprob: -8.286239624023438
    8. '   ' → logprob: -8.661239624023438
    9. '_a' → logprob: -9.036239624023438
    10. '       ' → logprob: -9.411239624023438

Token 379: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011259292950853705
    2. ' ,' → logprob: -7.501125812530518
    3. '+' → logprob: -8.126126289367676
    4. ' +' → logprob: -8.751126289367676
    5. ',max' → logprob: -9.251126289367676
    6. '+,' → logprob: -11.126126289367676
    7. '   ' → logprob: -13.376126289367676
    8. ',
' → logprob: -13.376126289367676
    9. ' ' → logprob: -14.376126289367676
    10. '       ' → logprob: -14.501126289367676

Token 380: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -9.372294698550832e-06
    2. ' max' → logprob: -11.625009536743164
    3. '[max' → logprob: -15.500009536743164
    4. '(max' → logprob: -16.375009536743164
    5. '	max' → logprob: -17.375009536743164
    6. '=max' → logprob: -17.625009536743164
    7. ',max' → logprob: -18.750009536743164
    8. ':max' → logprob: -18.875009536743164
    9. '_max' → logprob: -19.000009536743164
    10. 'maxlength' → logprob: -19.750009536743164

Token 381: '_base' (ID: 17096)
  Prédit: '_base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_base' → logprob: -3.128163257315464e-07
    2. 'base' → logprob: -15.25
    3. '(base' → logprob: -16.75
    4. ' base' → logprob: -17.625
    5. 'Base' → logprob: -18.25
    6. '_BASE' → logprob: -18.625
    7. 'a' → logprob: -20.125
    8. '.base' → logprob: -20.375
    9. '_Base' → logprob: -20.375
    10. '-base' → logprob: -21.0

Token 382: ' +' (ID: 659)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6355535387992859
    2. '):' → logprob: -0.8855535387992859
    3. '+' → logprob: -3.2605535984039307
    4. ' +' → logprob: -4.010553359985352
    5. ' ):' → logprob: -7.260553359985352
    6. ' ):
' → logprob: -7.635553359985352
    7. '):
' → logprob: -9.260553359985352
    8. '   ' → logprob: -10.510553359985352
    9. ')' → logprob: -10.760553359985352
    10. '):

' → logprob: -11.135553359985352

Token 383: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005617309361696243
    2. ' ' → logprob: -7.500561714172363
    3. '0' → logprob: -12.250561714172363
    4. '   ' → logprob: -12.625561714172363
    5. '2' → logprob: -15.125561714172363
    6. '  ' → logprob: -15.625561714172363
    7. ')' → logprob: -16.75056266784668
    8. '       ' → logprob: -17.12556266784668
    9. '
' → logprob: -17.37556266784668
    10. '    ' → logprob: -17.50056266784668

Token 384: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.297462171758525e-05
    2. ' ' → logprob: -10.375033378601074
    3. '0' → logprob: -13.750033378601074
    4. '   ' → logprob: -14.750033378601074
    5. '2' → logprob: -16.500032424926758
    6. '  ' → logprob: -17.375032424926758
    7. '
' → logprob: -18.750032424926758
    8. '     ' → logprob: -19.187532424926758
    9. '       ' → logprob: -19.187532424926758
    10. '10' → logprob: -19.250032424926758

Token 385: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.25253695249557495
    2. '):' → logprob: -1.5025370121002197
    3. ':' → logprob: -8.12753677368164
    4. '):
' → logprob: -8.37753677368164
    5. '       ' → logprob: -9.87753677368164
    6. '   ' → logprob: -11.50253677368164
    7. ' ):
' → logprob: -12.25253677368164
    8. '+' → logprob: -12.62753677368164
    9. ',' → logprob: -12.75253677368164
    10. ':
' → logprob: -12.87753677368164

Token 386: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009461151785217226
    2. '       ' → logprob: -7.125946044921875
    3. ',' → logprob: -9.875946044921875
    4. '	       ' → logprob: -10.500946044921875
    5. '   ' → logprob: -11.250946044921875
    6. ' for' → logprob: -12.000946044921875
    7. '
' → logprob: -12.000946044921875
    8. '          ' → logprob: -12.250946044921875
    9. 'x' → logprob: -12.500946044921875
    10. '	   ' → logprob: -12.625946044921875

Token 387: ' x' (ID: 1215)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3114291727542877
    2. 'max' → logprob: -2.311429262161255
    3. 'x' (adapté à ' x') → logprob: -3.186429262161255
    4. 'power' → logprob: -3.436429262161255
    5. 'y' → logprob: -3.561429262161255
    6. 'for' → logprob: -3.811429262161255
    7. 'digit' → logprob: -4.686429023742676
    8. 'digits' → logprob: -4.811429023742676
    9. 'pow' → logprob: -5.186429023742676
    10. 'min' → logprob: -5.311429023742676

Token 388: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5763779878616333
    2. ' =' → logprob: -0.8263779878616333
    3. ':' → logprob: -8.826377868652344
    4. 'for' → logprob: -9.951377868652344
    5. '       ' → logprob: -10.451377868652344
    6. '           ' → logprob: -10.701377868652344
    7. '_candidate' → logprob: -10.826377868652344
    8. '   ' → logprob: -11.201377868652344
    9. '_candidates' → logprob: -11.326377868652344
    10. ' ' → logprob: -11.326377868652344

Token 389: ' base' (ID: 3611)
  Prédit: '(base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(base' → logprob: -0.4324401915073395
    2. 'base' → logprob: -1.182440161705017
    3. '(' → logprob: -3.6824402809143066
    4. '0' → logprob: -4.932440280914307
    5. 'Exponent' → logprob: -4.932440280914307
    6. 'pow' → logprob: -6.307440280914307
    7. '((' → logprob: -7.057440280914307
    8. '(pow' → logprob: -7.932440280914307
    9. ' (' → logprob: -8.057439804077148
    10. '(power' → logprob: -8.307439804077148

Token 390: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.002485050121322274
    2. '
' → logprob: -6.252485275268555
    3. ' **' → logprob: -7.752485275268555
    4. '           ' → logprob: -9.877485275268555
    5. 'self' → logprob: -10.252485275268555
    6. '*' → logprob: -11.252485275268555
    7. '
' → logprob: -11.627485275268555
    8. '```' → logprob: -12.377485275268555
    9. '#' → logprob: -12.502485275268555
    10. '**
' → logprob: -13.002485275268555

Token 391: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00011856284982059151
    2. ' self' → logprob: -9.125118255615234
    3. '(self' → logprob: -12.125118255615234
    4. '2' → logprob: -13.750118255615234
    5. '       ' → logprob: -14.500118255615234
    6. '0' → logprob: -14.625118255615234
    7. 'n' → logprob: -14.750118255615234
    8. '```' → logprob: -14.875118255615234
    9. '   ' → logprob: -15.625118255615234
    10. '	self' → logprob: -15.625118255615234

Token 392: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -1.5451681974809617e-05
    2. '.' → logprob: -11.250015258789062
    3. 'n' → logprob: -13.000015258789062
    4. 'self' → logprob: -16.625015258789062
    5. ' .' → logprob: -18.750015258789062
    6. '.N' → logprob: -18.750015258789062
    7. ',n' → logprob: -19.250015258789062
    8. '_n' → logprob: -19.250015258789062
    9. '   ' → logprob: -19.500015258789062
    10. '```' → logprob: -20.000015258789062

Token 393: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005299181793816388
    2. '
' → logprob: -7.625529766082764
    3. '       ' → logprob: -11.375530242919922
    4. '		' → logprob: -12.000530242919922
    5. '   ' → logprob: -12.125530242919922
    6. '          ' → logprob: -12.250530242919922
    7. '            
' → logprob: -12.500530242919922
    8. '
' → logprob: -13.125530242919922
    9. 'if' → logprob: -13.625530242919922
    10. ' if' → logprob: -13.625530242919922

Token 394: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00014704519708175212
    2. '
' → logprob: -9.500146865844727
    3. '       ' → logprob: -10.500146865844727
    4. '            
' → logprob: -10.875146865844727
    5. '<|end|>' → logprob: -12.375146865844727
    6. '		' → logprob: -12.750146865844727
    7. '               ' → logprob: -13.000146865844727
    8. '   ' → logprob: -13.125146865844727
    9. '          ' → logprob: -13.125146865844727
    10. ',' → logprob: -13.250146865844727

Token 395: ' if' (ID: 538)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.26444801688194275
    2. 'y' → logprob: -2.3894479274749756
    3. 'if' (adapté à ' if') → logprob: -2.6394479274749756
    4. '           ' → logprob: -3.5144479274749756
    5. 'digit' → logprob: -3.6394479274749756
    6. 'd' → logprob: -4.889448165893555
    7. 'dc' → logprob: -6.264448165893555
    8. 'cand' → logprob: -6.514448165893555
    9. 'c' → logprob: -6.639448165893555
    10. 'digits' → logprob: -8.389448165893555

Token 396: ' x' (ID: 1215)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.3158910274505615
    2. 'x' → logprob: -1.3158910274505615
    3. 'self' → logprob: -7.065891265869141
    4. 'Digit' → logprob: -7.315891265869141
    5. 'len' → logprob: -7.565891265869141
    6. ' D' → logprob: -8.31589126586914
    7. 'base' → logprob: -8.94089126586914
    8. ' x' → logprob: -9.06589126586914
    9. '0' → logprob: -11.31589126586914
    10. 'not' → logprob: -12.12839126586914

Token 397: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.24308696389198303
    2. ' <=' → logprob: -1.8680869340896606
    3. '>' → logprob: -2.99308705329895
    4. '<=' → logprob: -4.493086814880371
    5. ' ==' → logprob: -10.368086814880371
    6. '==' → logprob: -10.868086814880371
    7. ' >=' → logprob: -13.243086814880371
    8. ' <' → logprob: -13.618086814880371
    9. ' ' → logprob: -13.743086814880371
    10. '>=' → logprob: -14.118086814880371

Token 398: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0011714138090610504
    2. ' self' → logprob: -6.751171588897705
    3. '           ' → logprob: -14.751171112060547
    4. '=self' → logprob: -15.501171112060547
    5. '       ' → logprob: -15.751171112060547
    6. '	self' → logprob: -15.876171112060547
    7. '0' → logprob: -16.001171112060547
    8. '(self' → logprob: -16.626171112060547
    9. '[self' → logprob: -16.876171112060547
    10. '   ' → logprob: -16.876171112060547

Token 399: '.m' (ID: 1021)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12042929977178574
    2. 'm' → logprob: -2.870429277420044
    3. ' self' → logprob: -2.870429277420044
    4. '.m' → logprob: -9.745429039001465
    5. '           ' → logprob: -11.120429039001465
    6. ' m' → logprob: -11.370429039001465
    7. '   ' → logprob: -12.245429039001465
    8. '.' → logprob: -12.620429039001465
    9. '       ' → logprob: -12.620429039001465
    10. 's' → logprob: -12.870429039001465

Token 400: ' or' (ID: 503)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4742051362991333
    2. ':' → logprob: -0.9742051362991333
    3. ':
' → logprob: -9.849205017089844
    4. '           ' → logprob: -10.349205017089844
    5. '               ' → logprob: -10.849205017089844
    6. '       ' → logprob: -11.474205017089844
    7. '):
' → logprob: -12.349205017089844
    8. ' or' → logprob: -13.224205017089844
    9. ' :
' → logprob: -13.224205017089844
    10. '():
' → logprob: -13.474205017089844

Token 401: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0005245577194727957
    2. 'base' → logprob: -7.875524520874023
    3. '           ' → logprob: -10.250524520874023
    4. ' x' → logprob: -10.375524520874023
    5. 'D' → logprob: -10.500524520874023
    6. 'self' → logprob: -11.750524520874023
    7. '       ' → logprob: -12.000524520874023
    8. 'len' → logprob: -12.125524520874023
    9. '            
' → logprob: -12.500524520874023
    10. '   ' → logprob: -12.750524520874023

Token 402: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.016297228634357452
    2. '<' → logprob: -4.516297340393066
    3. ' ==' → logprob: -5.641297340393066
    4. ' <=' → logprob: -6.766297340393066
    5. '==' → logprob: -7.766297340393066
    6. '<=' → logprob: -9.516297340393066
    7. '<x' → logprob: -10.516297340393066
    8. ' ' → logprob: -12.391297340393066
    9. 'x' → logprob: -13.266297340393066
    10. '<len' → logprob: -13.891297340393066

Token 403: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003529814421199262
    2. ' ' → logprob: -8.25035285949707
    3. '9' → logprob: -10.25035285949707
    4. '1' → logprob: -10.37535285949707
    5. '=' → logprob: -11.75035285949707
    6. '10' → logprob: -12.12535285949707
    7. '   ' → logprob: -12.37535285949707
    8. 'a' → logprob: -13.00035285949707
    9. 'self' → logprob: -13.12535285949707
    10. '  ' → logprob: -14.25035285949707

Token 404: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005421888781711459
    2. ' ' → logprob: -7.625542163848877
    3. '1' → logprob: -10.375542640686035
    4. '9' → logprob: -11.375542640686035
    5. '   ' → logprob: -12.875542640686035
    6. '  ' → logprob: -13.375542640686035
    7. '10' → logprob: -13.500542640686035
    8. 'self' → logprob: -13.625542640686035
    9. 'a' → logprob: -13.938042640686035
    10. '=' → logprob: -14.375542640686035

Token 405: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17243017256259918
    2. ':
' → logprob: -1.922430157661438
    3. '               ' → logprob: -4.922430038452148
    4. '           ' → logprob: -5.422430038452148
    5. ' or' → logprob: -8.172430038452148
    6. ':return' → logprob: -9.672430038452148
    7. '       ' → logprob: -10.547430038452148
    8. ',' → logprob: -11.172430038452148
    9. ':
' → logprob: -11.547430038452148
    10. '<|end|>' → logprob: -11.922430038452148

Token 406: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003758575767278671
    2. ' continue' → logprob: -8.125375747680664
    3. 'continue' → logprob: -9.875375747680664
    4. '           ' → logprob: -11.125375747680664
    5. '	           ' → logprob: -12.625375747680664
    6. '                   ' → logprob: -13.500375747680664
    7. '0' → logprob: -13.625375747680664
    8. ' continues' → logprob: -13.750375747680664
    9. '	continue' → logprob: -13.875375747680664
    10. ':' → logprob: -13.875375747680664

Token 407: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4217422306537628
    2. 'continue' (adapté à ' continue') → logprob: -1.5467422008514404
    3. '           ' → logprob: -2.5467422008514404
    4. ' continue' → logprob: -3.1717422008514404
    5. 'break' → logprob: -5.0467424392700195
    6. '                   ' → logprob: -6.0467424392700195
    7. ' break' → logprob: -6.4217424392700195
    8. '	           ' → logprob: -8.67174243927002
    9. '	continue' → logprob: -9.04674243927002
    10. '   ' → logprob: -9.92174243927002

Token 408: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009581484831869602
    2. '
' → logprob: -4.759581565856934
    3. '            
' → logprob: -7.509581565856934
    4. '<|end|>' → logprob: -8.134581565856934
    5. '<|end|>' → logprob: -10.884581565856934
    6. '  
' → logprob: -10.884581565856934
    7. '   ' → logprob: -11.009581565856934
    8. '    
' → logprob: -11.134581565856934
    9. '		' → logprob: -11.259581565856934
    10. '       ' → logprob: -12.134581565856934

Token 409: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01179137360304594
    2. '
' → logprob: -4.511791229248047
    3. '            
' → logprob: -8.136791229248047
    4. '<|end|>' → logprob: -8.386791229248047
    5. '  
' → logprob: -10.011791229248047
    6. '       ' → logprob: -10.511791229248047
    7. '    
' → logprob: -10.511791229248047
    8. '<|end|>' → logprob: -10.636791229248047
    9. '        
' → logprob: -10.761791229248047
    10. '   ' → logprob: -10.886791229248047

Token 410: ' candidate' (ID: 17098)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4933094382286072
    2. 'y' → logprob: -1.243309497833252
    3. ' y' → logprob: -2.368309497833252
    4. '       ' → logprob: -5.868309497833252
    5. 'candidate' (adapté à ' candidate') → logprob: -5.993309497833252
    6. 'a' → logprob: -7.868309497833252
    7. '            
' → logprob: -8.118309020996094
    8. '   ' → logprob: -8.368309020996094
    9. ' candidate' → logprob: -8.368309020996094
    10. '
' → logprob: -8.743309020996094

Token 411: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931474208831787
    2. ' =' → logprob: -0.6931474208831787
    3. '=
' → logprob: -16.443147659301758
    4. 's' → logprob: -16.443147659301758
    5. ' ' → logprob: -16.693147659301758
    6. ' =
' → logprob: -17.318147659301758
    7. '   ' → logprob: -17.943147659301758
    8. '.' → logprob: -18.318147659301758
    9. 'd' → logprob: -18.568147659301758
    10. ')' → logprob: -18.693147659301758

Token 412: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.03804183006286621
    2. ' D' → logprob: -3.288041830062866
    3. '	D' → logprob: -15.538042068481445
    4. ' ' → logprob: -16.288042068481445
    5. '   ' → logprob: -16.788042068481445
    6. '  ' → logprob: -18.538042068481445
    7. '_D' → logprob: -19.663042068481445
    8. '           ' → logprob: -19.913042068481445
    9. ' ' → logprob: -20.413042068481445
    10. '>D' → logprob: -20.788042068481445

Token 413: 'uden' (ID: 25460)
  Prédit: 'uden'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uden' → logprob: -7.465036105713807e-06
    2. 'ud' → logprob: -12.250007629394531
    3. 'ude' → logprob: -13.250007629394531
    4. 'udent' → logprob: -15.625007629394531
    5. 'u' → logprob: -16.00000762939453
    6. 'udet' → logprob: -16.00000762939453
    7. 'udy' → logprob: -17.00000762939453
    8. 'udes' → logprob: -17.12500762939453
    9. 'iden' → logprob: -17.12500762939453
    10. 'ueden' → logprob: -17.50000762939453

Token 414: 'ey' (ID: 806)
  Prédit: 'ey'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ey' → logprob: -6.704273118884885e-07
    2. ' ey' → logprob: -16.0
    3. 'y' → logprob: -16.25
    4. 'Candidate' → logprob: -16.375
    5. 'Ey' → logprob: -16.625
    6. 'e' → logprob: -16.875
    7. 'eys' → logprob: -17.5
    8. 'D' → logprob: -18.125
    9. '**' → logprob: -18.25
    10. '\' → logprob: -18.25

Token 415: 'Candidate' (ID: 58112)
  Prédit: 'Candidate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Candidate' → logprob: -3.173704271830502e-06
    2. 'candidate' → logprob: -13.00000286102295
    3. 'C' → logprob: -14.62500286102295
    4. 'Number' → logprob: -16.000003814697266
    5. '_candidate' → logprob: -16.000003814697266
    6. 'Cand' → logprob: -16.250003814697266
    7. 'Candidates' → logprob: -17.250003814697266
    8. ' Candidate' → logprob: -17.750003814697266
    9. 'andidate' → logprob: -18.375003814697266
    10. ' candidate' → logprob: -18.500003814697266

Token 416: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -9.960946772480384e-05
    2. '(' → logprob: -9.875099182128906
    3. '(
' → logprob: -10.000099182128906
    4. 'x' → logprob: -12.875099182128906
    5. ' (' → logprob: -16.125099182128906
    6. '(candidate' → logprob: -17.125099182128906
    7. '(
' → logprob: -17.500099182128906
    8. '(

' → logprob: -18.375099182128906
    9. '
' → logprob: -18.750099182128906
    10. 'candidate' → logprob: -18.875099182128906

Token 417: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003880834672600031
    2. '=' → logprob: -5.628880977630615
    3. ' ,' → logprob: -8.253880500793457
    4. '           ' → logprob: -12.503880500793457
    5. ',
' → logprob: -12.503880500793457
    6. ',self' → logprob: -13.253880500793457
    7. ' =' → logprob: -13.378880500793457
    8. ',b' → logprob: -13.378880500793457
    9. ')' → logprob: -13.628880500793457
    10. '         ' → logprob: -13.753880500793457

Token 418: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04997621104121208
    2. ' self' → logprob: -3.049976110458374
    3. '-self' → logprob: -6.924976348876953
    4. '-' → logprob: -8.549976348876953
    5. 'base' → logprob: -9.549976348876953
    6. ' -' → logprob: -9.799976348876953
    7. '(self' → logprob: -10.924976348876953
    8. '
' → logprob: -10.924976348876953
    9. '   ' → logprob: -11.174976348876953
    10. '-base' → logprob: -12.049976348876953

Token 419: '.a' (ID: 8772)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4741405248641968
    2. '.a' → logprob: -0.9741405248641968
    3. '.' → logprob: -10.349140167236328
    4. ' a' → logprob: -11.224140167236328
    5. '   ' → logprob: -12.599140167236328
    6. '	a' → logprob: -12.724140167236328
    7. '#a' → logprob: -12.849140167236328
    8. ',a' → logprob: -12.974140167236328
    9. ',' → logprob: -13.724140167236328
    10. 'а' → logprob: -13.724140167236328

Token 420: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00038443657103925943
    2. ' ,' → logprob: -7.875384330749512
    3. '           ' → logprob: -12.750384330749512
    4. ',n' → logprob: -15.000384330749512
    5. '       ' → logprob: -15.500384330749512
    6. ',self' → logprob: -15.625384330749512
    7. ',
' → logprob: -16.125385284423828
    8. '   ' → logprob: -16.125385284423828
    9. ')' → logprob: -16.250385284423828
    10. '               ' → logprob: -16.250385284423828

Token 421: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011062435805797577
    2. ' self' → logprob: -4.5110626220703125
    3. 'n' → logprob: -11.386062622070312
    4. '           ' → logprob: -14.011062622070312
    5. '(self' → logprob: -14.511062622070312
    6. '
' → logprob: -15.011062622070312
    7. '	self' → logprob: -15.136062622070312
    8. '[self' → logprob: -15.136062622070312
    9. '       ' → logprob: -15.511062622070312
    10. ' ' → logprob: -15.761062622070312

Token 422: '.n' (ID: 1835)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3133620023727417
    2. '.n' → logprob: -1.3133620023727417
    3. '	n' → logprob: -10.563362121582031
    4. ' n' → logprob: -10.938362121582031
    5. '_n' → logprob: -10.938362121582031
    6. ')' → logprob: -11.563362121582031
    7. ')n' → logprob: -11.563362121582031
    8. '.' → logprob: -11.938362121582031
    9. ',n' → logprob: -12.063362121582031
    10. ').' → logprob: -12.563362121582031

Token 423: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.16082262992858887
    2. ')' → logprob: -1.9108226299285889
    3. '           ' → logprob: -8.160822868347168
    4. '       ' → logprob: -8.410822868347168
    5. ')
' → logprob: -9.410822868347168
    6. ').' → logprob: -12.410822868347168
    7. ')

' → logprob: -12.910822868347168
    8. '   ' → logprob: -14.410822868347168
    9. '               ' → logprob: -14.785822868347168
    10. ' )
' → logprob: -15.160822868347168

Token 424: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.578184497309849e-05
    2. '       ' → logprob: -10.125085830688477
    3. '<|end|>' → logprob: -10.500085830688477
    4. '<|end|>' → logprob: -12.000085830688477
    5. 'if' → logprob: -12.750085830688477
    6. '   ' → logprob: -13.250085830688477
    7. ' if' → logprob: -13.375085830688477
    8. '	       ' → logprob: -13.500085830688477
    9. '          ' → logprob: -14.000085830688477
    10. '            
' → logprob: -14.250085830688477

Token 425: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.002674345625564456
    2. '           ' → logprob: -6.502674579620361
    3. ' if' → logprob: -6.752674579620361
    4. '       ' → logprob: -13.502674102783203
    5. '	if' → logprob: -13.502674102783203
    6. '   ' → logprob: -14.502674102783203
    7. '	       ' → logprob: -15.752674102783203
    8. '		' → logprob: -17.127674102783203
    9. '          ' → logprob: -17.252674102783203
    10. '	   ' → logprob: -17.627674102783203

Token 426: ' candidate' (ID: 17098)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.5759470462799072
    2. ' candidate' → logprob: -0.8259470462799072
    3. '(candidate' → logprob: -12.200946807861328
    4. '           ' → logprob: -13.075946807861328
    5. 'andidate' → logprob: -15.450946807861328
    6. ' candidat' → logprob: -15.950946807861328
    7. '               ' → logprob: -16.450946807861328
    8. '_candidate' → logprob: -16.950946807861328
    9. ' candidato' → logprob: -17.200946807861328
    10. 'c' → logprob: -17.950946807861328

Token 427: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.0001410850090906024
    2. '.' → logprob: -8.875141143798828
    3. 'is' → logprob: -14.250141143798828
    4. ' .' → logprob: -14.375141143798828
    5. ').' → logprob: -18.375141143798828
    6. '   ' → logprob: -18.750141143798828
    7. '.
' → logprob: -18.750141143798828
    8. '.isnan' → logprob: -19.000141143798828
    9. '().' → logprob: -20.000141143798828
    10. '.isfile' → logprob: -20.375141143798828

Token 428: '_valid' (ID: 23321)
  Prédit: '_valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_valid' → logprob: -1.2664456789934775e-06
    2. 'valid' → logprob: -13.625000953674316
    3. '_' → logprob: -19.250001907348633
    4. '_val' → logprob: -19.500001907348633
    5. ' valid' → logprob: -20.000001907348633
    6. '	valid' → logprob: -21.625001907348633
    7. 'Valid' → logprob: -22.250001907348633
    8. '(valid' → logprob: -22.750001907348633
    9. '_v' → logprob: -22.875001907348633
    10. '_VALID' → logprob: -23.250001907348633

Token 429: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.011085073463618755
    2. '():
' → logprob: -4.511085033416748
    3. '()' → logprob: -10.261085510253906
    4. '():
' → logprob: -13.136085510253906
    5. ' ():' → logprob: -15.636085510253906
    6. ':' → logprob: -16.386085510253906
    7. '():

' → logprob: -17.011085510253906
    8. '(' → logprob: -17.511085510253906
    9. '()==' → logprob: -18.011085510253906
    10. '()):
' → logprob: -18.761085510253906

Token 430: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005636404734104872
    2. 'count' → logprob: -5.255636215209961
    3. ' count' → logprob: -8.130636215209961
    4. '	count' → logprob: -10.880636215209961
    5. '	           ' → logprob: -11.130636215209961
    6. '			' → logprob: -11.130636215209961
    7. '                
' → logprob: -11.380636215209961
    8. '
' → logprob: -11.630636215209961
    9. '           ' → logprob: -11.630636215209961
    10. '[count' → logprob: -11.630636215209961

Token 431: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.5651416182518005
    2. ' count' → logprob: -1.3151416778564453
    3. '               ' → logprob: -1.8151416778564453
    4. '                   ' → logprob: -8.440141677856445
    5. '	count' → logprob: -9.065141677856445
    6. '
' → logprob: -9.815141677856445
    7. '           ' → logprob: -10.440141677856445
    8. '   ' → logprob: -11.065141677856445
    9. '[count' → logprob: -11.065141677856445
    10. '(count' → logprob: -11.940141677856445

Token 432: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3868991434574127
    2. '+=' → logprob: -1.1368991136550903
    3. ']+=' → logprob: -11.0118989944458
    4. '+' → logprob: -11.5118989944458
    5. '   ' → logprob: -14.7618989944458
    6. '    ' → logprob: -14.8868989944458
    7. '=' → logprob: -15.6368989944458
    8. ')' → logprob: -16.011899948120117
    9. ' +' → logprob: -16.386899948120117
    10. '+="' → logprob: -16.511899948120117

Token 433: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -18.875003814697266
    4. '```' → logprob: -19.875003814697266
    5. '           ' → logprob: -20.000003814697266
    6. 'x' → logprob: -20.375003814697266
    7. '
' → logprob: -21.937503814697266
    8. '0' → logprob: -21.937503814697266
    9. '       ' → logprob: -22.312503814697266
    10. '  ' → logprob: -22.375003814697266

Token 434: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '   ' → logprob: -19.875
    4. '```' → logprob: -21.125
    5. '۱' → logprob: -23.25
    6. '１' → logprob: -23.5625
    7. '           ' → logprob: -23.6875
    8. '  ' → logprob: -23.75
    9. '<|end|>' → logprob: -23.9375
    10. 'x' → logprob: -23.9375

Token 435: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16156470775604248
    2. '       ' → logprob: -1.9115647077560425
    3. 'return' → logprob: -7.286564826965332
    4. '
' → logprob: -8.161564826965332
    5. '        
' → logprob: -9.036564826965332
    6. ' return' → logprob: -9.536564826965332
    7. '	' → logprob: -9.661564826965332
    8. '	return' → logprob: -10.411564826965332
    9. '		
' → logprob: -10.536564826965332
    10. '   ' → logprob: -11.411564826965332

Token 436: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.800739018013701e-05
    2. 'return' → logprob: -10.0000581741333
    3. '   ' → logprob: -12.3750581741333
    4. '	' → logprob: -12.5000581741333
    5. '
' → logprob: -13.1250581741333
    6. ' return' → logprob: -13.2500581741333
    7. '	return' → logprob: -14.6250581741333
    8. '           ' → logprob: -15.5000581741333
    9. '      ' → logprob: -17.000057220458984
    10. '	   ' → logprob: -17.250057220458984

Token 437: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3144410252571106
    2. '       ' → logprob: -1.3144409656524658
    3. ' return' → logprob: -7.314441204071045
    4. '   ' → logprob: -7.689441204071045
    5. '	return' → logprob: -10.314440727233887
    6. '
' → logprob: -10.814440727233887
    7. '```' → logprob: -14.439440727233887
    8. '	' → logprob: -14.689440727233887
    9. '{return' → logprob: -15.314440727233887
    10. ' ' → logprob: -15.939440727233887

Token 438: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.005233763717114925
    2. ' count' → logprob: -5.2552337646484375
    3. '	count' → logprob: -19.880233764648438
    4. '[count' → logprob: -23.005233764648438
    5. '$count' → logprob: -23.255233764648438
    6. 'counts' → logprob: -23.505233764648438
    7. 'c' → logprob: -24.255233764648438
    8. '(count' → logprob: -24.380233764648438
    9. '
' → logprob: -24.505233764648438
    10. '<count' → logprob: -24.755233764648438

Token 439: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 440: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 441: ' main' (ID: 2758)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.15799324214458466
    2. ' main' → logprob: -2.4079933166503906
    3. ' find' → logprob: -2.9079933166503906
    4. ' run' → logprob: -7.407993316650391
    5. ' test' → logprob: -7.532993316650391
    6. 'count' → logprob: -8.53299331665039
    7. ' d' → logprob: -9.90799331665039
    8. ' solve' → logprob: -10.03299331665039
    9. ' example' → logprob: -10.03299331665039
    10. ' enumerate' → logprob: -10.90799331665039

Token 442: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -6.432518421206623e-05
    2. ' ():' → logprob: -10.2500638961792
    3. '():
' → logprob: -10.7500638961792
    4. '()' → logprob: -12.1250638961792
    5. '(' → logprob: -13.8750638961792
    6. '()>' → logprob: -14.5000638961792
    7. '_' → logprob: -15.6250638961792
    8. '():
' → logprob: -16.125064849853516
    9. '():

' → logprob: -17.125064849853516
    10. '()">' → logprob: -17.125064849853516

Token 443: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03891580551862717
    2. 'def' → logprob: -4.038915634155273
    3. 'a' → logprob: -4.538915634155273
    4. 'import' → logprob: -5.163915634155273
    5. ' a' → logprob: -6.038915634155273
    6. 'if' → logprob: -7.288915634155273
    7. '```' → logprob: -7.663915634155273
    8. ' if' → logprob: -8.413915634155273
    9. ' import' → logprob: -8.788915634155273
    10. ' def' → logprob: -9.038915634155273

Token 444: ' import' (ID: 1588)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.030870122835040092
    2. ' a' → logprob: -4.030869960784912
    3. '   ' → logprob: -5.155869960784912
    4. 'import' (adapté à ' import') → logprob: -5.155869960784912
    5. ' import' → logprob: -7.155869960784912
    6. 'n' → logprob: -8.90587043762207
    7. 'if' → logprob: -9.03087043762207
    8. ' n' → logprob: -10.40587043762207
    9. 't' → logprob: -11.53087043762207
    10. '#' → logprob: -11.90587043762207

Token 445: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.0052618607878685
    2. 'sys' → logprob: -5.2552618980407715
    3. ' math' → logprob: -10.505261421203613
    4. '=sys' → logprob: -14.380261421203613
    5. 'math' → logprob: -16.13026237487793
    6. '	sys' → logprob: -17.50526237487793
    7. '(sys' → logprob: -18.00526237487793
    8. ' argparse' → logprob: -18.00526237487793
    9. '_sys' → logprob: -20.50526237487793
    10. ' ' → logprob: -21.63026237487793

Token 446: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19987916946411133
    2. ' if' → logprob: -3.0748791694641113
    3. ' input' → logprob: -3.4498791694641113
    4. '
' → logprob: -3.4498791694641113
    5. '    
' → logprob: -3.6998791694641113
    6. ' readline' → logprob: -4.824879169464111
    7. ' 
' → logprob: -5.074879169464111
    8. ' lines' → logprob: -5.074879169464111
    9. '    ' → logprob: -5.574879169464111
    10. 'input' → logprob: -5.699879169464111

Token 447: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7100121974945068
    2. ' input' → logprob: -1.7100121974945068
    3. 'input' → logprob: -1.7100121974945068
    4. 'data' → logprob: -2.210012197494507
    5. 'n' → logprob: -4.710012435913086
    6. ' data' → logprob: -4.710012435913086
    7. 'def' → logprob: -5.585012435913086
    8. 'if' → logprob: -5.710012435913086
    9. ' lines' → logprob: -5.960012435913086
    10. ' if' → logprob: -6.085012435913086

Token 448: ' #' (ID: 1069)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6275730729103088
    2. '   ' → logprob: -1.752573013305664
    3. ' input' → logprob: -2.002573013305664
    4. 'data' → logprob: -2.127573013305664
    5. 'if' → logprob: -4.002573013305664
    6. 'args' → logprob: -4.627573013305664
    7. ' data' → logprob: -5.752573013305664
    8. 'n' → logprob: -6.127573013305664
    9. ' if' → logprob: -6.127573013305664
    10. 'a' → logprob: -7.377573013305664

Token 449: ' Parsing' (ID: 173321)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06753721088171005
    2. ' input' → logprob: -3.067537307739258
    3. 'data' → logprob: -4.317537307739258
    4. 'args' → logprob: -5.692537307739258
    5. 'lines' → logprob: -7.442537307739258
    6. '   ' → logprob: -7.817537307739258
    7. ' data' → logprob: -7.942537307739258
    8. ' lines' → logprob: -8.567537307739258
    9. 'inputs' → logprob: -9.192537307739258
    10. 'n' → logprob: -9.317537307739258

Token 450: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5886505246162415
    2. 'input' → logprob: -0.8386505246162415
    3. '   ' → logprob: -5.088650703430176
    4. 'data' → logprob: -5.713650703430176
    5. ' n' → logprob: -6.963650703430176
    6. 'n' → logprob: -7.463650703430176
    7. ' lines' → logprob: -7.713650703430176
    8. ' data' → logprob: -7.838650703430176
    9. 'args' → logprob: -8.338650703430176
    10. 'line' → logprob: -8.838650703430176

Token 451: ' in' (ID: 306)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.9226287007331848
    2. ' =' → logprob: -1.67262864112854
    3. ' line' → logprob: -2.04762864112854
    4. 'data' → logprob: -2.04762864112854
    5. '   ' → logprob: -2.29762864112854
    6. 'input' → logprob: -4.172628879547119
    7. '()' → logprob: -4.797628879547119
    8. '_line' → logprob: -5.172628879547119
    9. '=' → logprob: -5.297628879547119
    10. ' data' → logprob: -5.922628879547119

Token 452: ' a' (ID: 261)
  Prédit: 'put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'put' → logprob: -0.04378153383731842
    2. ' sys' → logprob: -4.043781757354736
    3. 'sys' → logprob: -4.793781757354736
    4. 'pu' → logprob: -5.043781757354736
    5. '=sys' → logprob: -5.793781757354736
    6. 't' → logprob: -6.293781757354736
    7. 'p' → logprob: -7.043781757354736
    8. 'input' → logprob: -7.168781757354736
    9. 'stdin' → logprob: -7.543781757354736
    10. '[' → logprob: -7.668781757354736

Token 453: ' single' (ID: 4590)
  Prédit: 'single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'single' → logprob: -0.9788743853569031
    2. ' single' → logprob: -1.8538744449615479
    3. ' line' → logprob: -1.9788744449615479
    4. 'line' → logprob: -2.353874444961548
    5. ' =' → logprob: -2.603874444961548
    6. 'b' → logprob: -3.228874444961548
    7. 'dd' → logprob: -4.228874206542969
    8. '_line' → logprob: -4.353874206542969
    9. '   ' → logprob: -4.478874206542969
    10. '=' → logprob: -4.478874206542969

Token 454: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0337069034576416
    2. ' line' → logprob: -3.4087069034576416
    3. 'input' → logprob: -10.658706665039062
    4. '   ' → logprob: -10.908706665039062
    5. 'ine' → logprob: -12.408706665039062
    6. 'def' → logprob: -12.408706665039062
    7. '_line' → logprob: -13.033706665039062
    8. '```' → logprob: -13.158706665039062
    9. 'import' → logprob: -14.033706665039062
    10. ' ' → logprob: -14.283706665039062

Token 455: '
' (ID: 198)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.14332319796085358
    2. '   ' → logprob: -2.6433231830596924
    3. ' line' → logprob: -3.0183231830596924
    4. 'input' → logprob: -4.7683234214782715
    5. 'data' → logprob: -6.2683234214782715
    6. ' input' → logprob: -6.6433234214782715
    7. '(line' → logprob: -7.3933234214782715
    8. '_line' → logprob: -8.393322944641113
    9. '	line' → logprob: -8.643322944641113
    10. 'inputs' → logprob: -9.018322944641113

Token 456: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37995582818984985
    2. 'line' → logprob: -1.379955768585205
    3. ' line' → logprob: -3.004955768585205
    4. 'data' → logprob: -5.129955768585205
    5. 'input' → logprob: -5.129955768585205
    6. 'a' → logprob: -7.254955768585205
    7. 'inputs' → logprob: -7.504955768585205
    8. ' input' → logprob: -7.629955768585205
    9. 'tokens' → logprob: -7.754955768585205
    10. 'params' → logprob: -8.879956245422363

Token 457: ' input' (ID: 3422)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.21964676678180695
    2. 'line' → logprob: -1.7196468114852905
    3. ' line' → logprob: -4.59464693069458
    4. ' a' → logprob: -5.71964693069458
    5. 'data' → logprob: -5.96964693069458
    6. 'input' (adapté à ' input') → logprob: -6.59464693069458
    7. '   ' → logprob: -7.71964693069458
    8. ' data' → logprob: -9.219646453857422
    9. ' input' → logprob: -9.719646453857422
    10. 'l' → logprob: -9.969646453857422

Token 458: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.005300873890519142
    2. '_data' → logprob: -5.755300998687744
    3. '()' → logprob: -7.255300998687744
    4. '_' → logprob: -7.380300998687744
    5. 'line' → logprob: -8.630300521850586
    6. '_str' → logprob: -8.755300521850586
    7. '=' → logprob: -8.880300521850586
    8. ' =' → logprob: -9.130300521850586
    9. '_lines' → logprob: -10.505300521850586
    10. 's' → logprob: -10.630300521850586

Token 459: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687387108802795
    2. '=' → logprob: -1.1368738412857056
    3. '()' → logprob: -13.636874198913574
    4. '=input' → logprob: -14.261874198913574
    5. '=sys' → logprob: -15.386874198913574
    6. '   ' → logprob: -15.386874198913574
    7. 's' → logprob: -15.886874198913574
    8. '_' → logprob: -16.386873245239258
    9. '=line' → logprob: -16.636873245239258
    10. ',' → logprob: -16.761873245239258

Token 460: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0019561098888516426
    2. ' sys' → logprob: -6.251955986022949
    3. 'input' → logprob: -10.50195598602295
    4. ' input' → logprob: -17.126956939697266
    5. '=sys' → logprob: -18.126956939697266
    6. '	sys' → logprob: -19.126956939697266
    7. '(sys' → logprob: -19.876956939697266
    8. '   ' → logprob: -22.501956939697266
    9. 'stdin' → logprob: -22.501956939697266
    10. '_sys' → logprob: -22.876956939697266

Token 461: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.01734328083693981
    2. '.' → logprob: -4.642343044281006
    3. '.argv' → logprob: -4.892343044281006
    4. 'stdin' → logprob: -10.892343521118164
    5. '.stdout' → logprob: -11.142343521118164
    6. '.std' → logprob: -11.642343521118164
    7. ' .' → logprob: -12.517343521118164
    8. '._' → logprob: -12.767343521118164
    9. '[' → logprob: -13.767343521118164
    10. '.readline' → logprob: -13.892343521118164

Token 462: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.2664456789934775e-06
    2. '.' → logprob: -14.375000953674316
    3. 'read' → logprob: -14.875000953674316
    4. '.read' → logprob: -15.125000953674316
    5. '.readlines' → logprob: -17.000001907348633
    6. ' readline' → logprob: -17.250001907348633
    7. 'buffer' → logprob: -18.500001907348633
    8. '.stdin' → logprob: -19.625001907348633
    9. '```' → logprob: -19.750001907348633
    10. 'stdin' → logprob: -20.500001907348633

Token 463: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.12712769210338593
    2. '()' → logprob: -2.1271276473999023
    3. '()
' → logprob: -9.127127647399902
    4. '.strip' → logprob: -9.377127647399902
    5. '.rstrip' → logprob: -13.502127647399902
    6. '(' → logprob: -13.752127647399902
    7. '()

' → logprob: -14.252127647399902
    8. 'strip' → logprob: -14.377127647399902
    9. '.split' → logprob: -14.502127647399902
    10. '.' → logprob: -15.002127647399902

Token 464: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.00043281487887725234
    2. 'rstrip' → logprob: -7.750432968139648
    3. 'split' → logprob: -13.250432968139648
    4. ' strip' → logprob: -14.750432968139648
    5. 'decode' → logprob: -19.87543296813965
    6. '.strip' → logprob: -20.00043296813965
    7. '_strip' → logprob: -20.75043296813965
    8. '(strip' → logprob: -21.62543296813965
    9. '-strip' → logprob: -22.62543296813965
    10. 'str' → logprob: -23.00043296813965

Token 465: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0014128545299172401
    2. '()
' → logprob: -6.626412868499756
    3. '().' → logprob: -9.501412391662598
    4. '(' → logprob: -12.001412391662598
    5. '()

' → logprob: -13.126412391662598
    6. '()
' → logprob: -13.501412391662598
    7. '())' → logprob: -14.126412391662598
    8. '(),' → logprob: -14.376412391662598
    9. '()`' → logprob: -14.501412391662598
    10. '()\' → logprob: -15.376412391662598

Token 466: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4821208417415619
    2. 'a' → logprob: -1.3571208715438843
    3. 'tokens' → logprob: -2.7321207523345947
    4. 'values' → logprob: -3.2321207523345947
    5. 'params' → logprob: -5.357120990753174
    6. 'parts' → logprob: -5.732120990753174
    7. 'if' → logprob: -5.982120990753174
    8. ' a' → logprob: -5.982120990753174
    9. 'inputs' → logprob: -6.232120990753174
    10. '    
' → logprob: -7.107120990753174

Token 467: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.0005028736195527017
    2. ' a' → logprob: -8.125502586364746
    3. 'if' → logprob: -8.625502586364746
    4. '   ' → logprob: -11.375502586364746
    5. 'parts' → logprob: -11.750502586364746
    6. ' if' → logprob: -12.375502586364746
    7. 'params' → logprob: -13.500502586364746
    8. 'A' → logprob: -13.875502586364746
    9. ' parts' → logprob: -14.750502586364746
    10. '_a' → logprob: -15.250502586364746

Token 468: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00033939589047804475
    2. ' ,' → logprob: -8.25033950805664
    3. ',a' → logprob: -10.12533950805664
    4. '_,' → logprob: -11.75033950805664
    5. 's' → logprob: -12.00033950805664
    6. ',s' → logprob: -12.12533950805664
    7. ',b' → logprob: -12.25033950805664
    8. ',n' → logprob: -12.50033950805664
    9. ',int' → logprob: -13.50033950805664
    10. 'a' → logprob: -13.62533950805664

Token 469: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04858827963471413
    2. ' n' → logprob: -3.048588275909424
    3. ' ' → logprob: -14.673588752746582
    4. '_n' → logprob: -15.298588752746582
    5. '	n' → logprob: -16.173587799072266
    6. '*n' → logprob: -17.673587799072266
    7. 'b' → logprob: -18.048587799072266
    8. ',n' → logprob: -18.173587799072266
    9. '
' → logprob: -18.298587799072266
    10. ' 
' → logprob: -18.423587799072266

Token 470: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4736459888808895e-05
    2. '=' → logprob: -12.125014305114746
    3. ' =' → logprob: -12.250014305114746
    4. ' ,' → logprob: -12.375014305114746
    5. '_,' → logprob: -16.750015258789062
    6. '‌,' → logprob: -17.375015258789062
    7. ',input' → logprob: -17.500015258789062
    8. ',...' → logprob: -17.875015258789062
    9. ',user' → logprob: -17.875015258789062
    10. '<|end|>' → logprob: -18.000015258789062

Token 471: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0002613358374219388
    2. ' m' → logprob: -8.250261306762695
    3. 'M' → logprob: -17.000261306762695
    4. '	m' → logprob: -20.500261306762695
    5. '*m' → logprob: -20.750261306762695
    6. '_m' → logprob: -21.000261306762695
    7. ' ' → logprob: -21.250261306762695
    8. ' ' → logprob: -22.000261306762695
    9. '   ' → logprob: -22.250261306762695
    10. 's' → logprob: -22.375261306762695

Token 472: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4742406904697418
    2. ' =' → logprob: -0.9742406606674194
    3. ',' → logprob: -8.72424030303955
    4. '=input' → logprob: -15.34924030303955
    5. ' ' → logprob: -15.72424030303955
    6. ' =
' → logprob: -16.349241256713867
    7. '<|end|>' → logprob: -16.474241256713867
    8. '＝' → logprob: -16.724241256713867
    9. ')' → logprob: -16.974241256713867
    10. '   ' → logprob: -17.099241256713867

Token 473: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0011703446507453918
    2. ' map' → logprob: -6.7511701583862305
    3. '(map' → logprob: -16.501171112060547
    4. '	map' → logprob: -19.501171112060547
    5. '_map' → logprob: -20.626171112060547
    6. 'input' → logprob: -20.751171112060547
    7. '.map' → logprob: -20.751171112060547
    8. 'm' → logprob: -21.001171112060547
    9. 'list' → logprob: -21.126171112060547
    10. '[' → logprob: -21.126171112060547

Token 474: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -7.862962229410186e-05
    2. '(' → logprob: -9.750078201293945
    3. '(str' → logprob: -11.125078201293945
    4. 'int' → logprob: -12.250078201293945
    5. '(lambda' → logprob: -14.250078201293945
    6. '=int' → logprob: -17.750078201293945
    7. '[int' → logprob: -17.875078201293945
    8. ' int' → logprob: -18.000078201293945
    9. '<int' → logprob: -18.250078201293945
    10. '(
' → logprob: -18.250078201293945

Token 475: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.4876890182495117
    2. ',input' → logprob: -0.9876890182495117
    3. ',' → logprob: -4.987689018249512
    4. 'input' → logprob: -5.112689018249512
    5. ')' → logprob: -7.862689018249512
    6. '=input' → logprob: -9.237689018249512
    7. ' input' → logprob: -9.237689018249512
    8. '(' → logprob: -9.862689018249512
    9. '[input' → logprob: -10.362689018249512
    10. ' (' → logprob: -12.362689018249512

Token 476: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0001584850688232109
    2. ' input' → logprob: -8.750158309936523
    3. '(input' → logprob: -19.375158309936523
    4. '=input' → logprob: -22.625158309936523
    5. ',input' → logprob: -22.750158309936523
    6. '	input' → logprob: -22.750158309936523
    7. ' ' → logprob: -23.125158309936523
    8. '[input' → logprob: -23.125158309936523
    9. '<input' → logprob: -23.500158309936523
    10. ')' → logprob: -23.875158309936523

Token 477: '_line' (ID: 14418)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.04986383020877838
    2. '().' → logprob: -3.049863815307617
    3. '(' → logprob: -7.799863815307617
    4. '=input' → logprob: -7.924863815307617
    5. 'input' → logprob: -8.424863815307617
    6. ',input' → logprob: -8.674863815307617
    7. ')' → logprob: -10.674863815307617
    8. '[input' → logprob: -10.674863815307617
    9. '_line' → logprob: -11.299863815307617
    10. '()' → logprob: -11.424863815307617

Token 478: '.split' (ID: 10347)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.31481122970581055
    2. '.split' → logprob: -1.3148112297058105
    3. '.strip' → logprob: -6.5648112297058105
    4. '.' → logprob: -9.064811706542969
    5. ' .' → logprob: -10.814811706542969
    6. 'split' → logprob: -13.564811706542969
    7. '()' → logprob: -14.189811706542969
    8. '.rstrip' → logprob: -15.064811706542969
    9. '(split' → logprob: -15.189811706542969
    10. '.readline' → logprob: -15.189811706542969

Token 479: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.012290183454751968
    2. '()' → logprob: -4.512290000915527
    3. '(' → logprob: -7.387290000915527
    4. '('' → logprob: -7.637290000915527
    5. ')' → logprob: -9.012290000915527
    6. '(','' → logprob: -12.012290000915527
    7. '()))' → logprob: -12.512290000915527
    8. '())
' → logprob: -12.637290000915527
    9. '()]' → logprob: -13.262290000915527
    10. ' ())' → logprob: -13.887290000915527

Token 480: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03663099929690361
    2. '
' → logprob: -4.036631107330322
    3. 'count' → logprob: -4.411631107330322
    4. 'result' → logprob: -5.286631107330322
    5. '    
' → logprob: -7.536631107330322
    6. '```' → logprob: -8.036630630493164
    7. 'results' → logprob: -9.661630630493164
    8. 'd' → logprob: -10.161630630493164
    9. '<|end|>' → logprob: -10.411630630493164
    10. 'counter' → logprob: -10.536630630493164

Token 481: ' enumer' (ID: 21093)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' (adapté à ' enumer') → logprob: -0.19168497622013092
    2. '   ' → logprob: -2.5666849613189697
    3. ' enumer' → logprob: -2.5666849613189697
    4. 'd' → logprob: -4.191685199737549
    5. 'dn' → logprob: -5.941685199737549
    6. 'e' → logprob: -6.566685199737549
    7. ' d' → logprob: -7.191685199737549
    8. ' dn' → logprob: -8.06668472290039
    9. '```' → logprob: -8.94168472290039
    10. '    
' → logprob: -9.81668472290039

Token 482: 'ator' (ID: 1246)
  Prédit: 'ator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ator' → logprob: -2.963691804325208e-05
    2. 'ate' → logprob: -10.500029563903809
    3. '=' → logprob: -14.625029563903809
    4. 'ater' → logprob: -14.750029563903809
    5. '   ' → logprob: -15.375029563903809
    6. ' =' → logprob: -15.625029563903809
    7. 'ar' → logprob: -16.125030517578125
    8. 'artor' → logprob: -16.125030517578125
    9. ' ator' → logprob: -16.250030517578125
    10. 'tor' → logprob: -16.250030517578125

Token 483: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023245595395565033
    2. '=' → logprob: -3.7732455730438232
    3. '=D' → logprob: -17.648244857788086
    4. '＝' → logprob: -17.648244857788086
    5. ' ' → logprob: -18.023244857788086
    6. ' ' → logprob: -19.023244857788086
    7. '.' → logprob: -19.023244857788086
    8. ' =
' → logprob: -19.148244857788086
    9. '   ' → logprob: -19.273244857788086
    10. ')' → logprob: -19.273244857788086

Token 484: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -2.935296834039036e-06
    2. ' D' → logprob: -12.75000286102295
    3. '   ' → logprob: -20.500003814697266
    4. '	D' → logprob: -21.250003814697266
    5. '<D' → logprob: -24.625003814697266
    6. '=D' → logprob: -24.625003814697266
    7. ' ' → logprob: -25.125003814697266
    8. '_D' → logprob: -25.375003814697266
    9. '>D' → logprob: -25.875003814697266
    10. '  ' → logprob: -26.875003814697266

Token 485: 'uden' (ID: 25460)
  Prédit: 'uden'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uden' → logprob: -0.009787020273506641
    2. 'D' → logprob: -4.634787082672119
    3. 'ude' → logprob: -11.134786605834961
    4. 'ud' → logprob: -11.884786605834961
    5. 'uded' → logprob: -13.134786605834961
    6. 'uder' → logprob: -14.009786605834961
    7. 'Den' → logprob: -14.134786605834961
    8. 'udes' → logprob: -14.384786605834961
    9. 'den' → logprob: -14.384786605834961
    10. 'udem' → logprob: -14.634786605834961

Token 486: 'ey' (ID: 806)
  Prédit: 'ey'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ey' → logprob: -0.0005905635771341622
    2. 'D' → logprob: -7.875590801239014
    3. 'Number' → logprob: -8.750590324401855
    4. 'Ey' → logprob: -10.625590324401855
    5. 'e' → logprob: -11.375590324401855
    6. 'y' → logprob: -11.500590324401855
    7. 'EY' → logprob: -14.000590324401855
    8. 'Y' → logprob: -14.125590324401855
    9. 'ay' → logprob: -14.375590324401855
    10. 'ex' → logprob: -14.750590324401855

Token 487: 'Number' (ID: 3695)
  Prédit: 'Number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' → logprob: -4.320199877838604e-07
    2. 'number' → logprob: -15.625
    3. 'Numbers' → logprob: -15.625
    4. 'umber' → logprob: -17.375
    5. 'Num' → logprob: -18.375
    6. '_number' → logprob: -18.625
    7. ' Number' → logprob: -18.75
    8. 'Numer' → logprob: -18.875
    9. 'Enumerator' → logprob: -19.125
    10. 'D' → logprob: -19.125

Token 488: 'Enumerator' (ID: 22087)
  Prédit: 'Enumerator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Enumerator' → logprob: -4.036524842376821e-05
    2. 'Number' → logprob: -10.375040054321289
    3. 'enumer' → logprob: -12.375040054321289
    4. 'Enumer' → logprob: -12.875040054321289
    5. 'Enum' → logprob: -13.500040054321289
    6. ' Enumerator' → logprob: -15.000040054321289
    7. 'Enumerable' → logprob: -15.125040054321289
    8. ' enumer' → logprob: -15.375040054321289
    9. 'umerator' → logprob: -17.00004005432129
    10. 'ENUM' → logprob: -17.87504005432129

Token 489: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.375
    3. '(
' → logprob: -18.0
    4. 'a' → logprob: -18.625
    5. '(A' → logprob: -20.0
    6. ' (' → logprob: -20.625
    7. '   ' → logprob: -21.125
    8. '(ai' → logprob: -23.125
    9. '((' → logprob: -23.375
    10. '```' → logprob: -23.5

Token 490: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004341261519584805
    2. ',n' → logprob: -7.750433921813965
    3. ' ,' → logprob: -13.000433921813965
    4. ',
' → logprob: -14.250433921813965
    5. '=' → logprob: -15.500433921813965
    6. 'a' → logprob: -16.00043487548828
    7. '   ' → logprob: -16.50043487548828
    8. ',a' → logprob: -16.87543487548828
    9. ',m' → logprob: -16.87543487548828
    10. 'n' → logprob: -17.87543487548828

Token 491: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0040785204619169235
    2. ' n' → logprob: -5.504078388214111
    3. '   ' → logprob: -17.254077911376953
    4. '	n' → logprob: -17.879077911376953
    5. '    ' → logprob: -19.379077911376953
    6. '_n' → logprob: -20.254077911376953
    7. ')n' → logprob: -20.629077911376953
    8. '  ' → logprob: -20.879077911376953
    9. '
' → logprob: -21.004077911376953
    10. '```' → logprob: -21.254077911376953

Token 492: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014239625306800008
    2. ',m' → logprob: -8.875142097473145
    3. ' ,' → logprob: -13.375142097473145
    4. 'm' → logprob: -14.000142097473145
    5. '   ' → logprob: -16.87514305114746
    6. ',
' → logprob: -17.37514305114746
    7. '```' → logprob: -19.00014305114746
    8. ')' → logprob: -19.50014305114746
    9. '،' → logprob: -21.37514305114746
    10. '‌,' → logprob: -21.62514305114746

Token 493: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.10020667314529419
    2. ' m' → logprob: -2.3502066135406494
    3. '   ' → logprob: -19.85020637512207
    4. '	m' → logprob: -20.60020637512207
    5. ')m' → logprob: -20.60020637512207
    6. '```' → logprob: -21.72520637512207
    7. ' ' → logprob: -22.22520637512207
    8. ' ' → logprob: -22.47520637512207
    9. ' м' → logprob: -22.60020637512207
    10. '    ' → logprob: -22.85020637512207

Token 494: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015028368216007948
    2. ')
' → logprob: -6.501502990722656
    3. ')
' → logprob: -15.126502990722656
    4. '   ' → logprob: -15.751502990722656
    5. ')

' → logprob: -16.751502990722656
    6. ' )' → logprob: -17.126502990722656
    7. ').' → logprob: -17.626502990722656
    8. '),' → logprob: -18.126502990722656
    9. '<|end|>' → logprob: -18.876502990722656
    10. '()' → logprob: -19.626502990722656

Token 495: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.11566360294818878
    2. 'count' → logprob: -2.615663528442383
    3. 'result' → logprob: -3.365663528442383
    4. '   ' → logprob: -6.490663528442383
    5. ' print' → logprob: -10.490663528442383
    6. ' result' → logprob: -11.865663528442383
    7. ' count' → logprob: -11.865663528442383
    8. '```' → logprob: -12.615663528442383
    9. 'results' → logprob: -13.490663528442383
    10. '<|end|>' → logprob: -13.740663528442383

Token 496: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.29829132556915283
    2. 'result' → logprob: -2.0482912063598633
    3. 'count' → logprob: -2.0482912063598633
    4. '   ' → logprob: -13.298291206359863
    5. 'results' → logprob: -13.923291206359863
    6. ' print' → logprob: -13.923291206359863
    7. ' count' → logprob: -14.298291206359863
    8. ' result' → logprob: -14.923291206359863
    9. 'res' → logprob: -15.798291206359863
    10. 'answer' → logprob: -16.17329216003418

Token 497: '(en' (ID: 36375)
  Prédit: '(en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(en' → logprob: -0.00023417205375153571
    2. '(enum' → logprob: -8.500234603881836
    3. '(' → logprob: -10.625234603881836
    4. 'enumer' → logprob: -12.000234603881836
    5. '(
' → logprob: -16.250234603881836
    6. '.enumer' → logprob: -17.625234603881836
    7. ' (' → logprob: -17.750234603881836
    8. '(len' → logprob: -18.000234603881836
    9. '(e' → logprob: -18.375234603881836
    10. ' enumer' → logprob: -18.500234603881836

Token 498: 'umerator' (ID: 152035)
  Prédit: 'umerator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umerator' → logprob: -0.00014895245840307325
    2. 'umer' → logprob: -8.87514877319336
    3. 'um' → logprob: -12.87514877319336
    4. 'urator' → logprob: -13.62514877319336
    5. 'uer' → logprob: -13.75014877319336
    6. 'umulator' → logprob: -14.25014877319336
    7. 'uator' → logprob: -14.37514877319336
    8. 't' → logprob: -14.62514877319336
    9. 'm' → logprob: -14.87514877319336
    10. 'er' → logprob: -14.87514877319336

Token 499: '.enumer' (ID: 113777)
  Prédit: '.enumer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.enumer' → logprob: -6.575563020305708e-05
    2. 'enumer' → logprob: -9.750065803527832
    3. '.' → logprob: -12.250065803527832
    4. '.en' → logprob: -13.625065803527832
    5. '.enum' → logprob: -14.500065803527832
    6. ').' → logprob: -15.125065803527832
    7. '.enqueue' → logprob: -15.875065803527832
    8. ')' → logprob: -16.250064849853516
    9. 'Enumer' → logprob: -16.250064849853516
    10. ' .' → logprob: -16.250064849853516

Token 500: 'ate' (ID: 379)
  Prédit: 'ate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ate' → logprob: 0.0
    2. 'a' → logprob: -19.0
    3. 'rate' → logprob: -19.75
    4. 'ator' → logprob: -19.875
    5. '```' → logprob: -20.25
    6. 'e' → logprob: -20.25
    7. ' ate' → logprob: -20.5
    8. '
' → logprob: -20.75
    9. 'te' → logprob: -20.75
    10. 'ATE' → logprob: -21.0

Token 501: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0009163398644886911
    2. '()' → logprob: -7.000916481018066
    3. ')' → logprob: -12.500916481018066
    4. ' ())' → logprob: -14.250916481018066
    5. '())
' → logprob: -15.000916481018066
    6. '();)' → logprob: -15.750916481018066
    7. '(),' → logprob: -17.50091552734375
    8. '()
' → logprob: -17.62591552734375
    9. '()))' → logprob: -17.75091552734375
    10. '()]' → logprob: -18.25091552734375

Token 502: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00012630375567823648
    2. ' if' → logprob: -9.875125885009766
    3. '<|end|>' → logprob: -10.375125885009766
    4. '
' → logprob: -10.875125885009766
    5. '```' → logprob: -11.125125885009766
    6. '#' → logprob: -12.250125885009766
    7. '\n' → logprob: -12.375125885009766
    8. ';if' → logprob: -15.500125885009766
    9. '	if' → logprob: -15.750125885009766
    10. '<|end|>' → logprob: -16.125125885009766

Token 503: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0298096165060997
    2. '__' → logprob: -3.5298097133636475
    3. '_name' → logprob: -10.529809951782227
    4. 'name' → logprob: -10.529809951782227
    5. ' ' → logprob: -13.279809951782227
    6. '_' → logprob: -13.904809951782227
    7. '___' → logprob: -14.029809951782227
    8. ' name' → logprob: -14.279809951782227
    9. ' "__' → logprob: -14.404809951782227
    10. '```' → logprob: -15.404809951782227

Token 504: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.1300632655620575
    2. '==' → logprob: -2.50506329536438
    3. ' ==' → logprob: -3.25506329536438
    4. '__.__' → logprob: -7.130063056945801
    5. '.__' → logprob: -8.3800630569458
    6. 'name' → logprob: -8.3800630569458
    7. ' __' → logprob: -9.0050630569458
    8. '=="' → logprob: -9.0050630569458
    9. '__.' → logprob: -9.7550630569458
    10. '.' → logprob: -10.0050630569458

Token 505: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -3.583550642360933e-05
    2. '==' → logprob: -10.625036239624023
    3. '__.__' → logprob: -11.500036239624023
    4. ' ==' → logprob: -14.375036239624023
    5. '=="' → logprob: -14.500036239624023
    6. '__["' → logprob: -16.500036239624023
    7. '__.' → logprob: -17.000036239624023
    8. '__('' → logprob: -18.000036239624023
    9. '___' → logprob: -18.125036239624023
    10. '____' → logprob: -18.250036239624023

Token 506: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3220321834087372
    2. '==' → logprob: -1.3220322132110596
    3. ' ==' → logprob: -5.3220319747924805
    4. '=="' → logprob: -5.5720319747924805
    5. '=='' → logprob: -10.44703197479248
    6. '=' → logprob: -11.57203197479248
    7. '_' → logprob: -13.07203197479248
    8. '"' → logprob: -13.57203197479248
    9. '===' → logprob: -13.82203197479248
    10. '__.__' → logprob: -14.32203197479248

Token 507: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.02977120317518711
    2. ''' → logprob: -3.529771089553833
    3. '__' → logprob: -10.904770851135254
    4. ' "__' → logprob: -13.029770851135254
    5. '"user' → logprob: -16.40477180480957
    6. '"name' → logprob: -17.15477180480957
    7. ' '__' → logprob: -17.65477180480957
    8. '"class' → logprob: -18.65477180480957
    9. '("__' → logprob: -18.77977180480957
    10. ''"' → logprob: -19.27977180480957

Token 508: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0002457238151691854
    2. '__' → logprob: -8.500246047973633
    3. 'name' → logprob: -10.250246047973633
    4. '"' → logprob: -12.000246047973633
    5. '_main' → logprob: -15.125246047973633
    6. 'built' → logprob: -15.500246047973633
    7. ' main' → logprob: -16.625246047973633
    8. '__":
' → logprob: -16.625246047973633
    9. ''' → logprob: -17.625246047973633
    10. 'ma' → logprob: -17.750246047973633

Token 509: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3163209855556488
    2. '__":
' → logprob: -1.3163210153579712
    3. '__.' → logprob: -6.441320896148682
    4. '__.__' → logprob: -7.691320896148682
    5. '__':
' → logprob: -7.691320896148682
    6. '__["' → logprob: -7.816320896148682
    7. '__
' → logprob: -9.69132137298584
    8. '__
' → logprob: -9.94132137298584
    9. '__("' → logprob: -11.69132137298584
    10. '.__' → logprob: -12.06632137298584

Token 510: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.981667537620524e-06
    2. ' main' → logprob: -13.250001907348633
    3. '__' → logprob: -16.750001907348633
    4. '	main' → logprob: -17.500001907348633
    5. '_main' → logprob: -18.250001907348633
    6. '   ' → logprob: -19.500001907348633
    7. '(main' → logprob: -22.125001907348633
    8. '.main' → logprob: -22.125001907348633
    9. 'Main' → logprob: -24.125001907348633
    10. 'master' → logprob: -25.250001907348633

Token 511: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -7.941850526549388e-06
    2. ' main' → logprob: -11.750007629394531
    3. '	main' → logprob: -18.00000762939453
    4. '   ' → logprob: -19.37500762939453
    5. '_main' → logprob: -23.00000762939453
    6. 'maine' → logprob: -24.12500762939453
    7. 'ma' → logprob: -24.37500762939453
    8. '.main' → logprob: -24.37500762939453
    9. 'mai' → logprob: -25.37500762939453
    10. '(main' → logprob: -25.50000762939453

Token 512: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 510
Tokens correctement prédits (1ère position, stricte): 224
Tokens correctement prédits (1ère position, avec adaptation): 245
Tokens correctement prédits (top 10): 432
Précision stricte (1ère position): 43.92%
Précision adaptée (1ère position): 48.04%
Précision (top 10): 84.71%
================================================================================
