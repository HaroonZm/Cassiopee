================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:10:21
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from abc import ABC, abstractmethod
from functools import lru_cache
from itertools import product


class BoolExpr(ABC):
    """
    Abstract base class for all Boolean expressions.
    Anticipates extensions with visitor patterns or more operators.
    """

    @abstractmethod
    def evaluate(self, env: dict) -> bool:
        """
        Evaluate the expression for a given variable environment.
        env: dict mapping variable names ('a','b','c','d') to bool.
        """
        pass

    @abstractmethod
    def canonical_forms(self) -> set:
        """
        Return a set of canonical string representations of this expression,
        representing the same Boolean function.
        This abstraction anticipates future caching and normalization strategies.
        Each returned form is an expression string.
        """
        pass


class Const(BoolExpr):
    __slots__ = ('value',)

    def __init__(self, value: bool):
        self.value = value

    def evaluate(self, env: dict) -> bool:
        return self.value

    def canonical_forms(self) -> set:
        return { '1' if self.value else '0' }


class Var(BoolExpr):
    __slots__ = ('name',)

    def __init__(self, name: str):
        self.name = name

    def evaluate(self, env: dict) -> bool:
        return env[self.name]

    def canonical_forms(self) -> set:
        # single variable name as is
        return {self.name}


class Not(BoolExpr):
    __slots__ = ('expr',)

    def __init__(self, expr: BoolExpr):
        self.expr = expr

    def evaluate(self, env: dict) -> bool:
        return not self.expr.evaluate(env)

    def canonical_forms(self) -> set:
        # We produce minimal forms by prefixing '-' to child's minimal canonical forms
        forms = set()
        for f in self.expr.canonical_forms():
            # Avoid double negations in normalized form:
            if f.startswith('-'):
                # --x == x, so flatten
                forms.update({f[1:]})
            else:
                forms.add('-' + f)
        return forms


class BinOp(BoolExpr):
    __slots__ = ('left', 'right')

    def __init__(self, left: BoolExpr, right: BoolExpr):
        self.left = left
        self.right = right


class And(BinOp):
    def evaluate(self, env: dict) -> bool:
        return self.left.evaluate(env) and self.right.evaluate(env)

    def canonical_forms(self) -> set:
        # Generate all pairs of children canonical forms
        left_forms = self.left.canonical_forms()
        right_forms = self.right.canonical_forms()
        # Because AND is commutative, we impose order to avoid duplicates:
        forms = set()
        pairs = []
        for lf in left_forms:
            for rf in right_forms:
                pairs.append((lf, rf))
        # Sort pair lex to keep order
        for lf, rf in pairs:
            if lf < rf:
                expr_str = f'({lf}*{rf})'
            else:
                expr_str = f'({rf}*{lf})'
            forms.add(expr_str)
        return forms


class Xor(BinOp):
    def evaluate(self, env: dict) -> bool:
        return self.left.evaluate(env) != self.right.evaluate(env)

    def canonical_forms(self) -> set:
        # XOR is commutative and associative but grammar uses binary parentheses.
        # We impose left<right order lexicographically to get canonical forms.
        left_forms = self.left.canonical_forms()
        right_forms = self.right.canonical_forms()
        forms = set()
        pairs = []
        for lf in left_forms:
            for rf in right_forms:
                pairs.append((lf, rf))
        for lf, rf in pairs:
            if lf < rf:
                expr_str = f'({lf}^{rf})'
            else:
                expr_str = f'({rf}^{lf})'
            forms.add(expr_str)
        return forms


class Parser:
    """
    Recursive descent parser using the grammar:
    <E> ::= 0 | 1 | a | b | c | d | -<E> | (<E> ^ <E>) | (<E> * <E>)
    """

    def __init__(self, s: str):
        self.s = s
        self.pos = 0
        self.length = len(s)

    def parse(self) -> BoolExpr:
        expr = self.parse_expr()
        if self.pos != self.length:
            raise ValueError(f"Unexpected chars at pos {self.pos}")
        return expr

    def parse_expr(self) -> BoolExpr:
        if self.pos >= self.length:
            raise ValueError("Unexpected end of input")

        c = self.s[self.pos]

        # Terminal 0 or 1
        if c == '0':
            self.pos += 1
            return Const(False)
        if c == '1':
            self.pos += 1
            return Const(True)

        # Terminal variable
        if c in ('a', 'b', 'c', 'd'):
            self.pos += 1
            return Var(c)

        # Negation
        if c == '-':
            self.pos += 1
            sub = self.parse_expr()
            return Not(sub)

        # Paren construct: (<E> op <E>)
        if c == '(':
            self.pos += 1
            left = self.parse_expr()
            if self.pos >= self.length:
                raise ValueError("Expected operator but got end of input")
            op = self.s[self.pos]
            if op not in ('^', '*'):
                raise ValueError(f"Expected operator ^ or *, got {op} at pos {self.pos}")
            self.pos += 1
            right = self.parse_expr()
            if self.pos >= self.length or self.s[self.pos] != ')':
                raise ValueError(f"Expected ')' at pos {self.pos}")
            self.pos += 1
            if op == '*':
                return And(left, right)
            else:
                return Xor(left, right)

        raise ValueError(f"Unexpected char {c} at pos {self.pos}")


class TruthTable:
    """
    Abstraction to compute and represent truth tables of Boolean expressions with 4 vars.
    Encapsulates mapping env->val and comparison.
    """

    VARS = ['a', 'b', 'c', 'd']
    ALL_ENVS = list(product([False, True], repeat=4))

    def __init__(self, expr: BoolExpr):
        # We store 16 bits corrsponding to the 16 envs in VARS order
        bits = 0
        for i, env_values in enumerate(self.ALL_ENVS):
            env = dict(zip(self.VARS, env_values))
            val = expr.evaluate(env)
            if val:
                bits |= (1 << i)
        self.bits = bits

    def __eq__(self, other) -> bool:
        return isinstance(other, TruthTable) and self.bits == other.bits

    def __hash__(self):
        return hash(self.bits)


class Compressor:
    """
    This class organizes a bottom-up cache of minimal length expressions for each Boolean function.
    Extremely sophisticated structure to precompute minimal lengths leveraging the grammar and truth tables.
    Suitable for future extensions like multiple operators, arbitrary variables counts etc.
    """

    def __init__(self):
        # Maps TruthTable.bits -> minimal length expression strings with that function
        self.cache = dict()
        # We use the set of vars as primitives
        self.primitives = [
            (TruthTable(Var(v)).bits, v) for v in TruthTable.VARS
        ] + [
            (TruthTable(Const(False)).bits, '0'),
            (TruthTable(Const(True)).bits, '1')
        ]
        # Negations cache: truth bits -> minimal form length (and their forms, but forms only strings)
        self.neg_cache = dict()

        # Initialize cache with primitives
        for bits, expr_str in self.primitives:
            self.cache[bits] = {expr_str}

        # For negations of primitives
        self._build_negations()

        # We precompute minimal expressions iteratively to cover all needed functions.
        # The number of Boolean functions of 4 vars is 2^(16) which is huge,
        # so instead of all, we build cache only incrementally per input expression.

    def _build_negations(self):
        # For each cached function, cache negation minimal forms
        # We do this once to bootstrap negations of primitives.
        new_entries = dict()
        for bits, forms in self.cache.items():
            neg = bits ^ 0xFFFF  # 16 bits all ones
            neg_forms = set()
            for f in forms:
                # Only add negation form if it respects grammar as minimal form candidates
                # We add '-' + f unless f is already a negation, then strip double negations
                if f.startswith('-') and len(f) >= 2:
                    # --x == x
                    nf = f[1:]
                else:
                    nf = '-' + f
                neg_forms.add(nf)
            if neg not in self.cache:
                new_entries[neg] = neg_forms
            else:
                # Merge and keep minimal length forms
                current = self.cache[neg]
                merged = current | neg_forms
                # Keep only minimal length forms
                min_len = min(len(x) for x in merged)
                minimal = {x for x in merged if len(x) == min_len}
                new_entries[neg] = minimal
        # Add negations to cache
        for k, v in new_entries.items():
            if k in self.cache:
                self.cache[k].update(v)
            else:
                self.cache[k] = v

    def minimize(self, expr: BoolExpr) -> int:
        """
        Given an expr, find minimal length of an expression string equivalent to expr.
        The minimal string must be valid under grammar and evaluate identically over all environments.
        """
        # We compute its truth table:
        tt = TruthTable(expr)

        # We use a memoized bottom-up construction of minimal forms to avoid recomputations:

        @lru_cache(None)
        def dfs(bits: int):
            """
            Return a set of minimal length expression strings representing bits.
            """
            # If bits in cache, return cached forms directly:
            if bits in self.cache:
                # prune to minimal length
                forms = self.cache[bits]
                min_len = min(len(x) for x in forms)
                return {x for x in forms if len(x) == min_len}

            results = set()

            # Try negation of known bits if we have them cached:
            neg_bits = bits ^ 0xFFFF
            if neg_bits in self.cache:
                neg_forms = self.cache[neg_bits]
                min_len = min(len(x) for x in neg_forms)
                candidates = {'-' + x if not x.startswith('-') else x[1:] for x in neg_forms if len(x) == min_len}
                min_cand_len = min(len(x) for x in candidates)
                candidates = {x for x in candidates if len(x) == min_cand_len}
                results.update(candidates)

            # Try binary ops:
            # Because the grammar requires parentheses around binary ops, length always at least 5
            # Enumerate all partitions of bits into left and right operands that could be combined by AND or XOR

            # We will try all pairs from cache, but that is impossible since 2^16 huge.
            # Instead, recursively try combinations built from smaller bits.
            # But we do not know which functions compose bits.
            # So we memoize feasible from primitives and inputs from top.

            # To avoid infinite recursion, we forbid direct recursion by depth limit or caching.
            # Instead, use a memo and do a iterative discovery starting from primitives.

            # This is complicated, so we do a heuristic top-down approach to guess minimal expressions.

            # To attempt operations, we try all pairs (l, r) with lbits ^ rbits == bits if op is XOR,
            # and lbits & rbits == bits if op is AND, but that's complicated.
            # We'll do a loop over cached keys and try AND and XOR:

            # We trust the current cache to contain some expressions.
            for lbits in list(self.cache.keys()):
                for rbits in list(self.cache.keys()):
                    # Try AND
                    and_bits = lbits & rbits
                    if and_bits == bits:
                        # Compose forms from left and right minimal:
                        for lf in dfs(lbits):
                            for rf in dfs(rbits):
                                # produce normalized form (order lex for commutative)
                                a, b = sorted([lf, rf])
                                cand = '(' + a + '*' + b + ')'
                                results.add(cand)

                    # Try XOR
                    xor_bits = lbits ^ rbits
                    if xor_bits == bits:
                        for lf in dfs(lbits):
                            for rf in dfs(rbits):
                                a, b = sorted([lf, rf])
                                cand = '(' + a + '^' + b + ')'
                                results.add(cand)

            # Also try not to forget look up primitives
            if bits in self.cache:
                results.update(self.cache[bits])

            # Choose minimal length expressions
            if not results:
                # Should never happen if primitives are included
                return set()

            min_len = min(len(x) for x in results)
            minimal = {x for x in results if len(x) == min_len}

            # Cache this minimal set
            self.cache[bits] = minimal

            # For negation cache:
            neg_bits = bits ^ 0xFFFF
            if neg_bits not in self.cache:
                self.cache[neg_bits] = {('-' + x if not x.startswith('-') else x[1:]) for x in minimal}

            return minimal

        # Just call dfs on this expr's bits and return minimal length of any form
        minimal_forms = dfs(tt.bits)
        return min(len(f) for f in minimal_forms)


def main():
    compressor = Compressor()
    while True:
        line = input()
        if line == '.':
            break
        parser = Parser(line)
        expr = parser.parse()
        result = compressor.minimize(expr)
        print(result)


if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' abc' (ID: 75094)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' ABC' (ID: 33047)
  Prédit: 'ABC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.1003810316324234
    2. ' ABC' → logprob: -2.3503811359405518
    3. 'AB' → logprob: -8.975380897521973
    4. 'ABCDE' → logprob: -10.475380897521973
    5. 'A' → logprob: -11.600380897521973
    6. 'abc' → logprob: -12.350380897521973
    7. 'abstract' → logprob: -12.725380897521973
    8. ' A' → logprob: -13.600380897521973
    9. '`' → logprob: -14.475380897521973
    10. '```' → logprob: -14.600380897521973

Token 4: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.24382559955120087
    2. ',' → logprob: -1.6188255548477173
    3. 'import' → logprob: -5.243825435638428
    4. ':' → logprob: -5.868825435638428
    5. '' → logprob: -5.868825435638428
    6. '```' → logprob: -6.118825435638428
    7. ' ' → logprob: -7.118825435638428
    8. ' ,' → logprob: -7.243825435638428
    9. '<|end|>' → logprob: -7.868825435638428
    10. '\' → logprob: -7.868825435638428

Token 5: ' abstract' (ID: 13004)
  Prédit: ' abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abstract' → logprob: -0.5464798808097839
    2. 'abstract' → logprob: -0.9214798808097839
    3. 'Abstract' → logprob: -3.7964799404144287
    4. ' ' → logprob: -8.671480178833008
    5. ' Abstract' → logprob: -9.046480178833008
    6. '.abstract' → logprob: -9.296480178833008
    7. ' A' → logprob: -9.921480178833008
    8. '```' → logprob: -10.546480178833008
    9. ' ABC' → logprob: -10.796480178833008
    10. ' ABSTRACT' → logprob: -11.296480178833008

Token 6: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.0006913475226610899
    2. 'm' → logprob: -7.7506914138793945
    3. 'classmethod' → logprob: -8.500691413879395
    4. 'meth' → logprob: -10.750691413879395
    5. 'staticmethod' → logprob: -11.250691413879395
    6. '_method' → logprob: -11.500691413879395
    7. 'abstract' → logprob: -12.500691413879395
    8. '```' → logprob: -13.250691413879395
    9. 'met' → logprob: -13.500691413879395
    10. 'ethod' → logprob: -14.000691413879395

Token 7: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7003582715988159
    2. '```' → logprob: -1.075358271598816
    3. 'class' → logprob: -2.3253583908081055
    4. '

' → logprob: -3.8253583908081055
    5. '\n' → logprob: -3.9503583908081055
    6. '<|end|>' → logprob: -5.3253583908081055
    7. '' → logprob: -5.5753583908081055
    8. '``' → logprob: -5.8253583908081055
    9. ' class' → logprob: -5.9503583908081055
    10. '\' → logprob: -6.0753583908081055

Token 8: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2349473088979721
    2. '

' → logprob: -1.7349473237991333
    3. 'class' → logprob: -3.8599472045898438
    4. '```' → logprob: -5.609947204589844
    5. '


' → logprob: -5.984947204589844
    6. '
' → logprob: -6.609947204589844
    7. ' 

' → logprob: -7.109947204589844
    8. '\n' → logprob: -7.109947204589844
    9. '' → logprob: -7.234947204589844
    10. '`
' → logprob: -8.109947204589844

Token 9: ' functools' (ID: 142636)
  Prédit: ' typing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.08416859060525894
    2. ' collections' → logprob: -3.0841686725616455
    3. ' dat' → logprob: -4.084168434143066
    4. ' abc' → logprob: -4.959168434143066
    5. ' os' → logprob: -6.334168434143066
    6. 'typing' → logprob: -6.584168434143066
    7. ' math' → logprob: -6.709168434143066
    8. ' datetime' → logprob: -6.834168434143066
    9. ' sys' → logprob: -6.834168434143066
    10. ' sklearn' → logprob: -7.209168434143066

Token 10: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.03502435237169266
    2. 'import' → logprob: -3.410024404525757
    3. '_import' → logprob: -7.535024166107178
    4. '.' → logprob: -7.910024166107178
    5. ' .' → logprob: -8.535024642944336
    6. '.import' → logprob: -8.910024642944336
    7. ' ' → logprob: -9.910024642944336
    8. '._' → logprob: -10.285024642944336
    9. '	import' → logprob: -10.660024642944336
    10. ' _' → logprob: -11.285024642944336

Token 11: ' l' (ID: 305)
  Prédit: ' wraps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' wraps' → logprob: -0.15316693484783173
    2. ' l' → logprob: -2.4031670093536377
    3. 'wrap' → logprob: -3.1531670093536377
    4. 'l' → logprob: -5.153166770935059
    5. ' total' → logprob: -6.653166770935059
    6. ' partial' → logprob: -7.403166770935059
    7. 'partial' → logprob: -7.778166770935059
    8. ' singled' → logprob: -8.278166770935059
    9. 'total' → logprob: -8.403166770935059
    10. 'cached' → logprob: -9.653166770935059

Token 12: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.0001725511101540178
    2. 'ruz' → logprob: -9.25017261505127
    3. 'r' → logprob: -10.00017261505127
    4. 'azy' → logprob: -11.25017261505127
    5. 'az' → logprob: -11.62517261505127
    6. '_ru' → logprob: -13.50017261505127
    7. '```' → logprob: -13.87517261505127
    8. 'u' → logprob: -14.25017261505127
    9. 'rup' → logprob: -14.37517261505127
    10. '##' → logprob: -14.50017261505127

Token 13: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.3892964720726013
    2. 'cache' → logprob: -1.139296531677246
    3. 'c' → logprob: -6.139296531677246
    4. 'cached' → logprob: -9.639296531677246
    5. '```' → logprob: -9.764296531677246
    6. 'ca' → logprob: -10.264296531677246
    7. '_c' → logprob: -10.639296531677246
    8. 'ac' → logprob: -10.889296531677246
    9. '_cached' → logprob: -10.889296531677246
    10. ' cache' → logprob: -12.139296531677246

Token 14: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5772276520729065
    2. 'class' → logprob: -1.3272275924682617
    3. '

' → logprob: -1.8272275924682617
    4. '```' → logprob: -4.952227592468262
    5. '


' → logprob: -6.577227592468262
    6. '@' → logprob: -6.577227592468262
    7. '\n' → logprob: -7.577227592468262
    8. '
' → logprob: -7.702227592468262
    9. '' → logprob: -8.077227592468262
    10. ' class' → logprob: -8.327227592468262

Token 15: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6233307123184204
    2. 'class' → logprob: -0.8733307123184204
    3. '@' → logprob: -3.623330593109131
    4. '```' → logprob: -4.998330593109131
    5. '

' → logprob: -5.123330593109131
    6. '@
' → logprob: -5.623330593109131
    7. '\n' → logprob: -7.123330593109131
    8. '@class' → logprob: -7.873330593109131
    9. '<class' → logprob: -7.998330593109131
    10. '
' → logprob: -8.373331069946289

Token 16: ' itertools' (ID: 103178)
  Prédit: ' typing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.3712676763534546
    2. ' collections' → logprob: -1.9962676763534546
    3. ' math' → logprob: -2.371267795562744
    4. ' threading' → logprob: -3.996267795562744
    5. ' datetime' → logprob: -4.621267795562744
    6. 'typing' → logprob: -4.621267795562744
    7. ' dat' → logprob: -4.871267795562744
    8. ' ' → logprob: -4.871267795562744
    9. 'collections' → logprob: -4.996267795562744
    10. ' hashlib' → logprob: -5.246267795562744

Token 17: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.13221769034862518
    2. 'import' → logprob: -2.1322176456451416
    3. '.' → logprob: -5.382217884063721
    4. ' ' → logprob: -7.882217884063721
    5. ' .' → logprob: -9.257217407226562
    6. '.import' → logprob: -10.257217407226562
    7. '	import' → logprob: -10.257217407226562
    8. '<|end|>' → logprob: -10.257217407226562
    9. '_import' → logprob: -11.132217407226562
    10. '.groupby' → logprob: -11.382217407226562

Token 18: ' product' (ID: 1888)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.1812108755111694
    2. 'product' → logprob: -1.4312108755111694
    3. 'com' → logprob: -1.6812108755111694
    4. 'chain' → logprob: -2.681210994720459
    5. 'cycle' → logprob: -2.931210994720459
    6. ' product' → logprob: -3.181210994720459
    7. 'per' → logprob: -3.806210994720459
    8. ' chain' → logprob: -4.306210994720459
    9. 'group' → logprob: -4.306210994720459
    10. 'is' → logprob: -4.431210994720459

Token 19: '


' (ID: 2499)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.25621816515922546
    2. '
' → logprob: -1.8812181949615479
    3. 'class' → logprob: -3.881218194961548
    4. 'import' → logprob: -4.131217956542969
    5. '<|end|>' → logprob: -4.131217956542969
    6. '


' → logprob: -4.631217956542969
    7. '```' → logprob: -5.256217956542969
    8. '\n' → logprob: -6.381217956542969
    9. '<|end|>' → logprob: -6.506217956542969
    10. 'from' → logprob: -7.381217956542969

Token 20: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.001690058154053986
    2. '
' → logprob: -6.876689910888672
    3. '```' → logprob: -8.376689910888672
    4. '@' → logprob: -8.501689910888672
    5. '@
' → logprob: -9.626689910888672
    6. '\n' → logprob: -10.501689910888672
    7. '@class' → logprob: -10.876689910888672
    8. ' class' → logprob: -10.876689910888672
    9. '<class' → logprob: -11.001689910888672
    10. 'clas' → logprob: -11.001689910888672

Token 21: ' Bool' (ID: 28693)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04722832888364792
    2. ' ABC' → logprob: -3.9222283363342285
    3. ' Abstract' → logprob: -4.0472283363342285
    4. ' My' → logprob: -6.6722283363342285
    5. ' Object' → logprob: -7.1722283363342285
    6. ' Base' → logprob: -7.2972283363342285
    7. ' Iterable' → logprob: -7.5472283363342285
    8. ' Shape' → logprob: -7.6722283363342285
    9. ' Basic' → logprob: -7.7972283363342285
    10. ' Serializer' → logprob: -7.7972283363342285

Token 22: 'Expr' (ID: 21037)
  Prédit: 'ean'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ean' → logprob: -0.0012858292320743203
    2. 'Op' → logprob: -7.876286029815674
    3. 'Expr' → logprob: -8.251285552978516
    4. 'Func' → logprob: -8.501285552978516
    5. 'Operator' → logprob: -8.751285552978516
    6. 'e' → logprob: -9.876285552978516
    7. 'ian' → logprob: -10.251285552978516
    8. 'Function' → logprob: -10.376285552978516
    9. 'Evaluator' → logprob: -10.751285552978516
    10. 'Vector' → logprob: -10.876285552978516

Token 23: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005661767907440662
    2. ':' → logprob: -5.755661964416504
    3. '(Abstract' → logprob: -6.005661964416504
    4. '():' → logprob: -12.005661964416504
    5. ' (' → logprob: -12.755661964416504
    6. '(object' → logprob: -13.755661964416504
    7. '(AST' → logprob: -13.880661964416504
    8. ' :' → logprob: -14.005661964416504
    9. '):' → logprob: -14.005661964416504
    10. 'Abstract' → logprob: -14.880661964416504

Token 24: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.11292708665132523
    2. ' ABC' → logprob: -2.237927198410034
    3. ' ' → logprob: -10.487927436828613
    4. ')' → logprob: -10.862927436828613
    5. '   ' → logprob: -10.862927436828613
    6. 'abc' → logprob: -11.862927436828613
    7. '):' → logprob: -11.987927436828613
    8. 'Abstract' → logprob: -12.112927436828613
    9. '  ' → logprob: -12.362927436828613
    10. 'AB' → logprob: -12.612927436828613

Token 25: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0046659111976623535
    2. ')' → logprob: -5.379665851593018
    3. ':' → logprob: -10.379666328430176
    4. ' ):' → logprob: -11.754666328430176
    5. '):
' → logprob: -12.504666328430176
    6. ',' → logprob: -14.879666328430176
    7. '>):' → logprob: -14.879666328430176
    8. '>' → logprob: -15.254666328430176
    9. '():' → logprob: -15.254666328430176
    10. '>:' → logprob: -15.379666328430176

Token 26: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.48127588629722595
    2. '   ' → logprob: -0.9812759160995483
    3. ' :' → logprob: -5.981276035308838
    4. '    ' → logprob: -6.606276035308838
    5. ' ' → logprob: -6.856276035308838
    6. '):' → logprob: -7.106276035308838
    7. '    
' → logprob: -8.35627555847168
    8. ')' → logprob: -8.35627555847168
    9. '  ' → logprob: -8.48127555847168
    10. '<|end|>' → logprob: -8.48127555847168

Token 27: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029223166406154633
    2. '    ' → logprob: -3.9042232036590576
    3. '@' → logprob: -5.4042229652404785
    4. '    
' → logprob: -6.1542229652404785
    5. ' ' → logprob: -7.0292229652404785
    6. 'def' → logprob: -8.279223442077637
    7. '  ' → logprob: -8.654223442077637
    8. ' def' → logprob: -8.904223442077637
    9. ' @' → logprob: -8.904223442077637
    10. '
' → logprob: -9.154223442077637

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27529412508010864
    2. '"""' → logprob: -1.7752940654754639
    3. ' """' → logprob: -3.275294065475464
    4. ')' → logprob: -3.900294065475464
    5. 'abstract' → logprob: -5.150294303894043
    6. ' abstract' → logprob: -6.650294303894043
    7. '""' → logprob: -7.025294303894043
    8. ' """
' → logprob: -7.400294303894043
    9. ' @' → logprob: -7.650294303894043
    10. '    ' → logprob: -7.650294303894043

Token 29: ' Abstract' (ID: 17413)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.3614625334739685
    2. '*' → logprob: -1.7364625930786133
    3. ' """' → logprob: -2.8614625930786133
    4. ')' → logprob: -3.6114625930786133
    5. '   ' → logprob: -4.986462593078613
    6. ' ' → logprob: -4.986462593078613
    7. '""' → logprob: -5.111462593078613
    8. ' *' → logprob: -5.236462593078613
    9. '"""
' → logprob: -5.611462593078613
    10. 'A' → logprob: -5.861462593078613

Token 30: ' base' (ID: 3611)
  Prédit: ' class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' class' → logprob: -0.5509623289108276
    2. ' ' → logprob: -1.9259623289108276
    3. 'class' → logprob: -2.425962448120117
    4. '   ' → logprob: -2.550962448120117
    5. '
' → logprob: -2.550962448120117
    6. ' base' → logprob: -4.800962448120117
    7. 'classmethod' → logprob: -4.925962448120117
    8. '  ' → logprob: -5.675962448120117
    9. ' 
' → logprob: -5.800962448120117
    10. 'Base' → logprob: -6.050962448120117

Token 31: ' class' (ID: 744)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.7187538146972656
    2. ' class' → logprob: -0.9687538146972656
    3. ' ' → logprob: -2.0937538146972656
    4. '<|end|>' → logprob: -5.218753814697266
    5. '   ' → logprob: -5.843753814697266
    6. '  ' → logprob: -7.343753814697266
    7. '    ' → logprob: -8.343753814697266
    8. ')' → logprob: -8.843753814697266
    9. '<class' → logprob: -9.218753814697266
    10. '_' → logprob: -9.343753814697266

Token 32: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.30406156182289124
    2. '<|end|>' → logprob: -1.5540615320205688
    3. '   ' → logprob: -3.6790616512298584
    4. ' ' → logprob: -4.804061412811279
    5. '<|end|>' → logprob: -5.179061412811279
    6. '```' → logprob: -6.179061412811279
    7. 'class' → logprob: -6.179061412811279
    8. ':' → logprob: -6.179061412811279
    9. '  ' → logprob: -6.304061412811279
    10. 'for' → logprob: -6.429061412811279

Token 33: ' all' (ID: 722)
  Prédit: ' boolean'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' boolean' → logprob: -0.03577181324362755
    2. ' Boolean' → logprob: -3.9107718467712402
    3. ' all' → logprob: -4.53577184677124
    4. ' bool' → logprob: -6.03577184677124
    5. ' logical' → logprob: -7.66077184677124
    6. ' a' → logprob: -7.78577184677124
    7. 'boolean' → logprob: -7.78577184677124
    8. 'Boolean' → logprob: -8.535771369934082
    9. ' representing' → logprob: -8.910771369934082
    10. 'bool' → logprob: -9.035771369934082

Token 34: ' Boolean' (ID: 12759)
  Prédit: ' boolean'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' boolean' → logprob: -0.07428769022226334
    2. ' Boolean' → logprob: -2.9492876529693604
    3. ' bool' → logprob: -4.4492878913879395
    4. ' Bool' → logprob: -6.1992878913879395
    5. ' expressions' → logprob: -6.4492878913879395
    6. 'bool' → logprob: -6.8242878913879395
    7. 'Bool' → logprob: -7.0742878913879395
    8. 'boolean' → logprob: -7.1992878913879395
    9. 'Boolean' → logprob: -7.5742878913879395
    10. ' logical' → logprob: -8.074287414550781

Token 35: ' expressions' (ID: 43578)
  Prédit: ' expressions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' expressions' → logprob: -0.0009338518721051514
    2. 'express' → logprob: -8.250933647155762
    3. ' ' → logprob: -8.500933647155762
    4. ' expression' → logprob: -8.875933647155762
    5. 'Expressions' → logprob: -8.875933647155762
    6. '   ' → logprob: -10.250933647155762
    7. ' Expressions' → logprob: -10.375933647155762
    8. ' Boolean' → logprob: -10.375933647155762
    9. ' logic' → logprob: -10.625933647155762
    10. ' express' → logprob: -11.125933647155762

Token 36: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.18375666439533234
    2. '   ' → logprob: -2.3087565898895264
    3. '<|end|>' → logprob: -3.3087565898895264
    4. ':' → logprob: -4.5587568283081055
    5. ')' → logprob: -4.8087568283081055
    6. '
' → logprob: -5.4337568283081055
    7. '```' → logprob: -5.6837568283081055
    8. '<|end|>' → logprob: -5.8087568283081055
    9. ' .' → logprob: -7.6837568283081055
    10. ',' → logprob: -8.183756828308105

Token 37: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07793738692998886
    2. '"""' → logprob: -3.452937364578247
    3. ')' → logprob: -3.577937364578247
    4. '
' → logprob: -5.202937602996826
    5. '```' → logprob: -5.327937602996826
    6. '    
' → logprob: -6.202937602996826
    7. ' """' → logprob: -6.452937602996826
    8. ' ' → logprob: -8.202937126159668
    9. '    ' → logprob: -8.452937126159668
    10. ' 
' → logprob: -8.827937126159668

Token 38: ' Ant' (ID: 7019)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3440588712692261
    2. '"""' → logprob: -1.594058871269226
    3. '
' → logprob: -3.5940589904785156
    4. '```' → logprob: -3.5940589904785156
    5. ')' → logprob: -3.7190589904785156
    6. ' """' → logprob: -5.219058990478516
    7. '    
' → logprob: -7.094058990478516
    8. '\n' → logprob: -7.469058990478516
    9. '"""
' → logprob: -8.094058990478516
    10. '    ' → logprob: -8.094058990478516

Token 39: 'icip' (ID: 6144)
  Prédit: 'icip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icip' → logprob: -0.16317829489707947
    2. 'ic' → logprob: -2.9131782054901123
    3. '   ' → logprob: -3.0381782054901123
    4. 'e' → logprob: -4.413178443908691
    5. '```' → logprob: -4.413178443908691
    6. '"""' → logprob: -5.413178443908691
    7. 'icipant' → logprob: -5.413178443908691
    8. '       ' → logprob: -5.788178443908691
    9. 'i' → logprob: -6.288178443908691
    10. '``' → logprob: -6.663178443908691

Token 40: 'ates' (ID: 1381)
  Prédit: 'ated'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ated' → logprob: -0.456348180770874
    2. 'ates' → logprob: -1.581348180770874
    3. 'ip' → logprob: -2.331348180770874
    4. 'icip' → logprob: -3.331348180770874
    5. 'icated' → logprob: -5.331348419189453
    6. 'cip' → logprob: -5.581348419189453
    7. 'icates' → logprob: -5.581348419189453
    8. 'ic' → logprob: -5.706348419189453
    9. '```' → logprob: -5.706348419189453
    10. 'ed' → logprob: -6.081348419189453

Token 41: ' extensions' (ID: 34511)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21043924987316132
    2. ' subclasses' → logprob: -2.9604392051696777
    3. ' the' → logprob: -3.0854392051696777
    4. ' that' → logprob: -4.085439205169678
    5. ' methods' → logprob: -4.460439205169678
    6. ' a' → logprob: -4.585439205169678
    7. '    ' → logprob: -4.835439205169678
    8. ' an' → logprob: -5.085439205169678
    9. ' def' → logprob: -5.335439205169678
    10. ' concrete' → logprob: -5.585439205169678

Token 42: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08616729825735092
    2. '.' → logprob: -2.961167335510254
    3. ' to' → logprob: -4.336167335510254
    4. ':' → logprob: -5.461167335510254
    5. '<|end|>' → logprob: -5.711167335510254
    6. ' for' → logprob: -6.586167335510254
    7. ',' → logprob: -6.711167335510254
    8. '```' → logprob: -6.836167335510254
    9. ' in' → logprob: -6.961167335510254
    10. ' and' → logprob: -7.086167335510254

Token 43: ' visitor' (ID: 28939)
  Prédit: ' additional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' additional' → logprob: -0.9980030655860901
    2. ' different' → logprob: -1.8730030059814453
    3. ' methods' → logprob: -2.4980030059814453
    4. ' various' → logprob: -2.6230030059814453
    5. ' new' → logprob: -2.8730030059814453
    6. ' other' → logprob: -2.9980030059814453
    7. ' more' → logprob: -2.9980030059814453
    8. ' caching' → logprob: -3.7480030059814453
    9. ' abstract' → logprob: -4.123003005981445
    10. ' concrete' → logprob: -4.248003005981445

Token 44: ' patterns' (ID: 18587)
  Prédit: ' pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pattern' → logprob: -0.01411261223256588
    2. 's' → logprob: -5.01411247253418
    3. 'pattern' → logprob: -5.26411247253418
    4. ' methods' → logprob: -7.13911247253418
    5. ' patterns' → logprob: -7.13911247253418
    6. ' ' → logprob: -8.13911247253418
    7. '<|end|>' → logprob: -9.01411247253418
    8. ' s' → logprob: -9.76411247253418
    9. '_pattern' → logprob: -9.88911247253418
    10. ' design' → logprob: -11.01411247253418

Token 45: ' or' (ID: 503)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16870839893817902
    2. '.' → logprob: -2.418708324432373
    3. ' and' → logprob: -3.418708324432373
    4. ',' → logprob: -3.668708324432373
    5. ':' → logprob: -6.293708324432373
    6. '<|end|>' → logprob: -6.293708324432373
    7. ' to' → logprob: -7.168708324432373
    8. ' for' → logprob: -7.168708324432373
    9. '  ' → logprob: -7.918708324432373
    10. ')' → logprob: -7.918708324432373

Token 46: ' more' (ID: 945)
  Prédit: ' other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.6918556690216064
    2. ' evaluation' → logprob: -1.6918556690216064
    3. ' additional' → logprob: -1.8168556690216064
    4. 'evaluation' → logprob: -3.6918556690216064
    5. 'other' → logprob: -3.8168556690216064
    6. ' double' → logprob: -3.9418556690216064
    7. 'additional' → logprob: -4.191855430603027
    8. ' different' → logprob: -4.316855430603027
    9. ' composite' → logprob: -4.691855430603027
    10. ' pattern' → logprob: -5.441855430603027

Token 47: ' operators' (ID: 29893)
  Prédit: ' methods'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' methods' → logprob: -0.5598108172416687
    2. ' complex' → logprob: -1.5598108768463135
    3. ' advanced' → logprob: -2.0598108768463135
    4. '   ' → logprob: -4.309810638427734
    5. 'methods' → logprob: -4.309810638427734
    6. ' detailed' → logprob: -4.559810638427734
    7. ' concrete' → logprob: -4.684810638427734
    8. ' functionality' → logprob: -5.059810638427734
    9. 'complex' → logprob: -5.184810638427734
    10. ' ' → logprob: -5.559810638427734

Token 48: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4362124502658844
    2. '   ' → logprob: -1.061212420463562
    3. '<|end|>' → logprob: -6.561212539672852
    4. ')' → logprob: -6.686212539672852
    5. ':' → logprob: -7.436212539672852
    6. '
' → logprob: -7.561212539672852
    7. ',' → logprob: -7.561212539672852
    8. '.
' → logprob: -7.686212539672852
    9. '```' → logprob: -7.686212539672852
    10. '."""' → logprob: -7.811212539672852

Token 49: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16696500778198242
    2. '"""' → logprob: -1.9169650077819824
    3. '
' → logprob: -5.916965007781982
    4. '```' → logprob: -6.291965007781982
    5. ' """' → logprob: -7.041965007781982
    6. ')' → logprob: -7.791965007781982
    7. '"""
' → logprob: -8.41696548461914
    8. '""' → logprob: -8.66696548461914
    9. '    
' → logprob: -8.79196548461914
    10. '    ' → logprob: -9.41696548461914

Token 50: ' """

' (ID: 28800)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.5974721312522888
    2. '   ' → logprob: -0.8474721312522888
    3. ')' → logprob: -4.972472190856934
    4. '```' → logprob: -5.097472190856934
    5. '
' → logprob: -5.847472190856934
    6. '"""
' → logprob: -6.222472190856934
    7. ' """' → logprob: -6.847472190856934
    8. '"""

' (adapté à ' """

') → logprob: -6.972472190856934
    9. '""' → logprob: -7.597472190856934
    10. '    
' → logprob: -7.972472190856934

Token 51: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08523944765329361
    2. '@' → logprob: -3.2102394104003906
    3. '
' → logprob: -3.8352394104003906
    4. '    
' → logprob: -3.9602394104003906
    5. '    ' → logprob: -8.71023941040039
    6. ' 
' → logprob: -8.83523941040039
    7. '   
' → logprob: -9.46023941040039
    8. '  ' → logprob: -9.71023941040039
    9. ' @' → logprob: -10.08523941040039
    10. '        
' → logprob: -10.21023941040039

Token 52: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -0.018465615808963776
    2. '   ' → logprob: -4.018465518951416
    3. ' @' → logprob: -9.018465995788574
    4. 'def' → logprob: -9.268465995788574
    5. '@property' → logprob: -9.643465995788574
    6. '    
' → logprob: -11.518465995788574
    7. '
' → logprob: -11.768465995788574
    8. '@index' → logprob: -12.268465995788574
    9. '@
' → logprob: -12.518465995788574
    10. '@param' → logprob: -13.268465995788574

Token 53: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -1.5048530030981055e-06
    2. 'property' → logprob: -14.375001907348633
    3. 'abs' → logprob: -15.125001907348633
    4. 'ab' → logprob: -15.125001907348633
    5. 'staticmethod' → logprob: -16.250001907348633
    6. 'abc' → logprob: -16.375001907348633
    7. ' abstract' → logprob: -16.625001907348633
    8. '.abstract' → logprob: -17.375001907348633
    9. 'classmethod' → logprob: -18.875001907348633
    10. 'a' → logprob: -19.875001907348633

Token 54: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -8.2994620242971e-06
    2. 'classmethod' → logprob: -12.375008583068848
    3. '_method' → logprob: -12.750008583068848
    4. 'meth' → logprob: -14.250008583068848
    5. 'staticmethod' → logprob: -14.750008583068848
    6. 'property' → logprob: -16.87500762939453
    7. 'abstract' → logprob: -17.12500762939453
    8. ' method' → logprob: -17.75000762939453
    9. '	method' → logprob: -18.00000762939453
    10. 'm' → logprob: -18.00000762939453

Token 55: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5977530479431152
    2. 'def' → logprob: -0.9727530479431152
    3. ' def' → logprob: -3.0977530479431152
    4. '(' → logprob: -4.222753047943115
    5. '\' → logprob: -6.222753047943115
    6. '    
' → logprob: -6.222753047943115
    7. 'method' → logprob: -6.347753047943115
    8. '<|end|>' → logprob: -6.597753047943115
    9. '  
' → logprob: -6.722753047943115
    10. ' 
' → logprob: -6.847753047943115

Token 56: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2578508257865906
    2. '
' → logprob: -1.5078508853912354
    3. ' def' → logprob: -5.757850646972656
    4. 'method' → logprob: -6.507850646972656
    5. '    
' → logprob: -7.257850646972656
    6. '\' → logprob: -8.882850646972656
    7. '```' → logprob: -9.382850646972656
    8. '`' → logprob: -9.507850646972656
    9. 'classmethod' → logprob: -9.632850646972656
    10. '   ' → logprob: -9.882850646972656

Token 57: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.009230507537722588
    2. 'method' → logprob: -5.759230613708496
    3. 'classmethod' → logprob: -6.384230613708496
    4. 'call' → logprob: -6.509230613708496
    5. 'property' → logprob: -7.009230613708496
    6. ' def' → logprob: -7.009230613708496
    7. 'bool' → logprob: -7.509230613708496
    8. '`' → logprob: -8.759230613708496
    9. '
' → logprob: -8.884230613708496
    10. 'staticmethod' → logprob: -9.634230613708496

Token 58: ' evaluate' (ID: 21646)
  Prédit: ' evaluate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' evaluate' → logprob: -0.0038720392622053623
    2. 'evaluate' → logprob: -5.878871917724609
    3. ' eval' → logprob: -6.878871917724609
    4. 'eval' → logprob: -11.50387191772461
    5. ' evaluates' → logprob: -12.00387191772461
    6. ' __' → logprob: -12.25387191772461
    7. ' to' → logprob: -12.75387191772461
    8. 'Evaluate' → logprob: -12.87887191772461
    9. '__' → logprob: -12.87887191772461
    10. 'to' → logprob: -13.37887191772461

Token 59: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4756576418876648
    2. '(self' → logprob: -0.9756576418876648
    3. '<|end|>' → logprob: -6.7256574630737305
    4. '(
' → logprob: -8.85065746307373
    5. 'self' → logprob: -9.10065746307373
    6. ' (' → logprob: -9.85065746307373
    7. '(s' → logprob: -10.35065746307373
    8. '<|end|>' → logprob: -11.10065746307373
    9. ')' → logprob: -12.35065746307373
    10. '```' → logprob: -12.60065746307373

Token 60: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01665826328098774
    2. 'self' → logprob: -4.141658306121826
    3. ' ,' → logprob: -8.266657829284668
    4. ')' → logprob: -8.391657829284668
    5. '):' → logprob: -10.016657829284668
    6. '(self' → logprob: -10.266657829284668
    7. ' self' → logprob: -10.391657829284668
    8. ',self' → logprob: -10.766657829284668
    9. '_self' → logprob: -12.891657829284668
    10. '<|end|>' → logprob: -13.891657829284668

Token 61: ' env' (ID: 9744)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.08244287222623825
    2. 'self' → logprob: -2.8324427604675293
    3. ' context' → logprob: -4.082442760467529
    4. 'context' → logprob: -6.457442760467529
    5. ')' → logprob: -6.832442760467529
    6. ' env' → logprob: -8.457443237304688
    7. ' )' → logprob: -8.707443237304688
    8. ' state' → logprob: -9.457443237304688
    9. ' environment' → logprob: -9.582443237304688
    10. ' variables' → logprob: -9.832443237304688

Token 62: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007453064317815006
    2. ':' → logprob: -7.5007452964782715
    3. ')' → logprob: -9.00074577331543
    4. '):
' → logprob: -10.00074577331543
    5. ' ):' → logprob: -11.62574577331543
    6. '}:' → logprob: -13.12574577331543
    7. 'vironment' → logprob: -13.50074577331543
    8. ',' → logprob: -13.62574577331543
    9. '<|end|>' → logprob: -14.00074577331543
    10. ' ' → logprob: -14.25074577331543

Token 63: ' dict' (ID: 11878)
  Prédit: 'dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dict' → logprob: -0.1602267622947693
    2. ' dict' → logprob: -1.910226821899414
    3. ')' → logprob: -13.160226821899414
    4. '(dict' → logprob: -14.785226821899414
    5. 'Dict' → logprob: -16.285226821899414
    6. '=dict' → logprob: -16.660226821899414
    7. '```' → logprob: -17.660226821899414
    8. ' ' → logprob: -17.785226821899414
    9. ' )' → logprob: -17.910226821899414
    10. ' {})' → logprob: -18.535226821899414

Token 64: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5239202380180359
    2. ')' → logprob: -0.8989202380180359
    3. '):
' → logprob: -7.398920059204102
    4. '   ' → logprob: -10.023920059204102
    5. '<|end|>' → logprob: -10.148920059204102
    6. ' ):' → logprob: -10.398920059204102
    7. '[' → logprob: -10.898920059204102
    8. '       ' → logprob: -11.523920059204102
    9. '<|end|>' → logprob: -11.898920059204102
    10. ' ' → logprob: -11.898920059204102

Token 65: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02897167019546032
    2. '):' → logprob: -3.9039716720581055
    3. '():' → logprob: -5.9039716720581055
    4. ')' → logprob: -6.2789716720581055
    5. '->' → logprob: -6.9039716720581055
    6. ' ->' → logprob: -7.1539716720581055
    7. ':return' → logprob: -7.1539716720581055
    8. '       ' → logprob: -7.9039716720581055
    9. '   ' → logprob: -8.153971672058105
    10. ')->' → logprob: -8.278971672058105

Token 66: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.005243833642452955
    2. 'bool' → logprob: -5.25524377822876
    3. ' int' → logprob: -12.255244255065918
    4. '	bool' → logprob: -13.005244255065918
    5. ' ' → logprob: -13.630244255065918
    6. '<bool' → logprob: -13.880244255065918
    7. 'int' → logprob: -15.130244255065918
    8. '   ' → logprob: -15.630244255065918
    9. ' ' → logprob: -15.630244255065918
    10. '  ' → logprob: -16.0052433013916

Token 67: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00038562860572710633
    2. '):' → logprob: -8.250385284423828
    3. '<|end|>' → logprob: -9.500385284423828
    4. ':return' → logprob: -10.625385284423828
    5. ':
' → logprob: -11.250385284423828
    6. ')' → logprob: -12.500385284423828
    7. '():' → logprob: -12.500385284423828
    8. ',' → logprob: -14.000385284423828
    9. ':**' → logprob: -14.250385284423828
    10. ':def' → logprob: -14.250385284423828

Token 68: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6637937426567078
    2. '<|end|>' → logprob: -1.5387938022613525
    3. ' ' → logprob: -1.9137938022613525
    4. '   ' → logprob: -2.7887938022613525
    5. '    ' → logprob: -4.163793563842773
    6. ' 
' → logprob: -4.413793563842773
    7. '\n' → logprob: -4.413793563842773
    8. ')' → logprob: -5.413793563842773
    9. '\' → logprob: -6.038793563842773
    10. ':' → logprob: -6.038793563842773

Token 69: ' """
' (ID: 7037)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.2106061577796936
    2. '       ' → logprob: -1.9606060981750488
    3. ' pass' → logprob: -3.085606098175049
    4. '...' → logprob: -6.210606098175049
    5. '   ' → logprob: -7.210606098175049
    6. 'raise' → logprob: -8.335606575012207
    7. '    ' → logprob: -9.335606575012207
    8. '"""' → logprob: -9.835606575012207
    9. '        ' → logprob: -9.835606575012207
    10. ' ' → logprob: -9.960606575012207

Token 70: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002370297210291028
    2. ' pass' → logprob: -6.252370357513428
    3. 'pass' → logprob: -8.00236988067627
    4. '   ' → logprob: -10.00236988067627
    5. '"""' → logprob: -10.50236988067627
    6. '...' → logprob: -11.62736988067627
    7. ')' → logprob: -12.12736988067627
    8. '      ' → logprob: -12.25236988067627
    9. '#' → logprob: -12.37736988067627
    10. '	pass' → logprob: -13.37736988067627

Token 71: ' Evaluate' (ID: 95819)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10314562171697617
    2. ' pass' → logprob: -2.4781455993652344
    3. 'pass' → logprob: -4.353145599365234
    4. '"""' → logprob: -6.853145599365234
    5. '   ' → logprob: -9.728145599365234
    6. ' """' → logprob: -9.978145599365234
    7. 'Pass' → logprob: -10.353145599365234
    8. '     ' → logprob: -11.478145599365234
    9. '      ' → logprob: -11.853145599365234
    10. 'raise' → logprob: -12.228145599365234

Token 72: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.4396345317363739
    2. '<|end|>' → logprob: -1.8146345615386963
    3. '(self' → logprob: -2.1896345615386963
    4. '(' → logprob: -3.9396345615386963
    5. 'self' → logprob: -4.189634323120117
    6. 'the' → logprob: -4.564634323120117
    7. '       ' → logprob: -5.064634323120117
    8. ' self' → logprob: -5.064634323120117
    9. ' (' → logprob: -5.064634323120117
    10. ' ' → logprob: -5.189634323120117

Token 73: ' expression' (ID: 12973)
  Prédit: ' expression'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' expression' → logprob: -0.12974490225315094
    2. 'expression' → logprob: -2.6297450065612793
    3. ' boolean' → logprob: -4.004745006561279
    4. ' Boolean' → logprob: -5.004745006561279
    5. ' given' → logprob: -5.379745006561279
    6. 'expr' → logprob: -5.629745006561279
    7. 'boolean' → logprob: -5.629745006561279
    8. '       ' → logprob: -5.754745006561279
    9. ' current' → logprob: -5.754745006561279
    10. 'bool' → logprob: -6.504745006561279

Token 74: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6116862893104553
    2. '   ' → logprob: -0.8616862893104553
    3. '<|end|>' → logprob: -4.3616862297058105
    4. '.' → logprob: -5.6116862297058105
    5. ' ' → logprob: -5.9866862297058105
    6. ')' → logprob: -5.9866862297058105
    7. '    ' → logprob: -6.1116862297058105
    8. ',' → logprob: -6.4866862297058105
    9. '<|end|>' → logprob: -6.4866862297058105
    10. '  ' → logprob: -6.7366862297058105

Token 75: ' a' (ID: 261)
  Prédit: ' given'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' given' → logprob: -0.20477397739887238
    2. ' a' → logprob: -2.2047739028930664
    3. ' the' → logprob: -2.8297739028930664
    4. ' env' → logprob: -4.579773902893066
    5. 'given' → logprob: -6.329773902893066
    6. ' an' → logprob: -6.454773902893066
    7. ' environment' → logprob: -6.829773902893066
    8. 'env' → logprob: -7.079773902893066
    9. ' self' → logprob: -9.329773902893066
    10. 'the' → logprob: -9.829773902893066

Token 76: ' given' (ID: 4335)
  Prédit: ' given'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' given' → logprob: -0.09034339338541031
    2. 'n' → logprob: -2.465343475341797
    3. 'given' → logprob: -7.090343475341797
    4. ' n' → logprob: -7.590343475341797
    5. ' ' → logprob: -10.590343475341797
    6. '_given' → logprob: -10.715343475341797
    7. ' giv' → logprob: -11.965343475341797
    8. 'll' → logprob: -12.465343475341797
    9. 'ny' → logprob: -13.590343475341797
    10. ' Given' → logprob: -14.215343475341797

Token 77: ' variable' (ID: 11076)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04456167295575142
    2. '<|end|>' → logprob: -3.6695616245269775
    3. ' environment' → logprob: -4.419561862945557
    4. ' )' → logprob: -5.419561862945557
    5. ')' → logprob: -7.419561862945557
    6. ' input' → logprob: -8.544561386108398
    7. '<|end|>' → logprob: -8.794561386108398
    8. '  ' → logprob: -9.169561386108398
    9. ' space' → logprob: -9.669561386108398
    10. 'environment' → logprob: -9.794561386108398

Token 78: ' environment' (ID: 5870)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4454137086868286
    2. ' environment' → logprob: -1.5704137086868286
    3. ' ' → logprob: -2.320413589477539
    4. ' )' → logprob: -4.320413589477539
    5. ')' → logprob: -4.445413589477539
    6. '<|end|>' → logprob: -4.445413589477539
    7. '_' → logprob: -5.320413589477539
    8. ' values' → logprob: -5.570413589477539
    9. ' s' → logprob: -6.320413589477539
    10. ' assignment' → logprob: -6.695413589477539

Token 79: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7126072645187378
    2. '<|end|>' → logprob: -1.2126072645187378
    3. '.' → logprob: -2.0876073837280273
    4. '   ' → logprob: -3.2126073837280273
    5. '       ' → logprob: -4.212607383728027
    6. ')' → logprob: -4.962607383728027
    7. ' ' → logprob: -4.962607383728027
    8. ',' → logprob: -5.087607383728027
    9. ' :' → logprob: -5.337607383728027
    10. '):' → logprob: -5.587607383728027

Token 80: '       ' (ID: 309)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.112121820449829
    2. '   ' → logprob: -1.362121820449829
    3. '       ' → logprob: -1.362121820449829
    4. ' ' → logprob: -2.487121820449829
    5. '    ' → logprob: -3.737121820449829
    6. '\' → logprob: -4.36212158203125
    7. ' 
' → logprob: -4.73712158203125
    8. 'n' → logprob: -5.36212158203125
    9. '```' → logprob: -5.48712158203125
    10. ')' → logprob: -5.61212158203125

Token 81: ' env' (ID: 9744)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.0094056129455566
    2. ' 
' → logprob: -1.6344056129455566
    3. ' ' → logprob: -2.0094056129455566
    4. '       ' → logprob: -2.2594056129455566
    5. '   ' → logprob: -2.3844056129455566
    6. ')' → logprob: -3.6344056129455566
    7. '<|end|>' → logprob: -3.7594056129455566
    8. '    ' → logprob: -4.259405612945557
    9. '"""' → logprob: -4.634405612945557
    10. '```' → logprob: -5.134405612945557

Token 82: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -1.2062456607818604
    2. ')' → logprob: -1.3312456607818604
    3. ':' → logprob: -1.3312456607818604
    4. '<|end|>' → logprob: -1.8312456607818604
    5. '<|end|>' → logprob: -5.081245422363281
    6. '[' → logprob: -6.456245422363281
    7. ' ' → logprob: -6.581245422363281
    8. '.setdefault' → logprob: -7.581245422363281
    9. '.get' → logprob: -7.831245422363281
    10. '   ' → logprob: -7.956245422363281

Token 83: ' dict' (ID: 11878)
  Prédit: ' dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dict' → logprob: -0.02459796890616417
    2. ' ' → logprob: -4.024598121643066
    3. 'dict' → logprob: -5.274598121643066
    4. ')' → logprob: -7.649598121643066
    5. ' Dict' → logprob: -8.274598121643066
    6. '<|end|>' → logprob: -8.274598121643066
    7. ' )' → logprob: -8.774598121643066
    8. ' ")' → logprob: -10.524598121643066
    9. ' mapping' → logprob: -10.774598121643066
    10. ' ' → logprob: -11.024598121643066

Token 84: ' mapping' (ID: 22573)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0720309019088745
    2. ' ' → logprob: -1.6970309019088745
    3. '<|end|>' → logprob: -1.8220309019088745
    4. '   ' → logprob: -2.072031021118164
    5. '[' → logprob: -2.322031021118164
    6. '):' → logprob: -3.572031021118164
    7. '  ' → logprob: -4.322031021118164
    8. '<|end|>' → logprob: -4.447031021118164
    9. ' )' → logprob: -4.822031021118164
    10. '    ' → logprob: -5.197031021118164

Token 85: ' variable' (ID: 11076)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 86: ' names' (ID: 8747)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2229938954114914
    2. 's' → logprob: -2.222993850708008
    3. ' names' → logprob: -2.972993850708008
    4. '<|end|>' → logprob: -3.472993850708008
    5. ')' → logprob: -6.222993850708008
    6. '  ' → logprob: -6.472993850708008
    7. ' )' → logprob: -6.597993850708008
    8. ' to' → logprob: -6.722993850708008
    9. 'name' → logprob: -6.847993850708008
    10. ' name' → logprob: -7.222993850708008

Token 87: ' ('' (ID: 9906)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.15223060548305511
    2. ')' → logprob: -3.1522305011749268
    3. ' ' → logprob: -3.2772305011749268
    4. ' ->' → logprob: -3.7772305011749268
    5. '<|end|>' → logprob: -4.027230739593506
    6. '[str' → logprob: -4.652230739593506
    7. 'to' → logprob: -5.777230739593506
    8. ',' → logprob: -6.902230739593506
    9. '  ' → logprob: -7.402230739593506
    10. ':' → logprob: -7.402230739593506

Token 88: 'a' (ID: 64)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.002086261985823512
    2. 's' → logprob: -6.252086162567139
    3. ')' → logprob: -10.002086639404297
    4. ' str' → logprob: -10.252086639404297
    5. 'a' → logprob: -10.502086639404297
    6. '[str' → logprob: -11.252086639404297
    7. 'st' → logprob: -11.502086639404297
    8. 'bool' → logprob: -11.627086639404297
    9. 'string' → logprob: -12.502086639404297
    10. '')' → logprob: -12.627086639404297

Token 89: '','' (ID: 4074)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.34870263934135437
    2. ''' → logprob: -1.5987026691436768
    3. '',' → logprob: -3.3487026691436768
    4. ',' → logprob: -3.9737026691436768
    5. 'b' → logprob: -4.598702430725098
    6. ' ' → logprob: -5.098702430725098
    7. 's' → logprob: -5.098702430725098
    8. ')' → logprob: -5.473702430725098
    9. ' ')' → logprob: -6.098702430725098
    10. ' to' → logprob: -6.598702430725098

Token 90: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.011357495561242104
    2. ' b' → logprob: -4.511357307434082
    3. ''b' → logprob: -8.511357307434082
    4. ''' → logprob: -10.261357307434082
    5. ' '' → logprob: -11.011357307434082
    6. ' ' → logprob: -11.136357307434082
    7. 'z' → logprob: -11.261357307434082
    8. 's' → logprob: -11.386357307434082
    9. ')' → logprob: -12.261357307434082
    10. '_' → logprob: -13.136357307434082

Token 91: '','' (ID: 4074)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.04359164834022522
    2. ')' → logprob: -3.5435917377471924
    3. ''' → logprob: -4.668591499328613
    4. '',' → logprob: -6.293591499328613
    5. ' ')' → logprob: -7.168591499328613
    6. ',' → logprob: -7.418591499328613
    7. ' ' → logprob: -7.668591499328613
    8. ' )' → logprob: -8.168591499328613
    9. '<|end|>' → logprob: -9.293591499328613
    10. ' to' → logprob: -9.668591499328613

Token 92: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.009488902054727077
    2. ''' → logprob: -4.884489059448242
    3. '')' → logprob: -6.384489059448242
    4. ')' → logprob: -9.009489059448242
    5. '...' → logprob: -10.259489059448242
    6. ' c' → logprob: -11.634489059448242
    7. ' '' → logprob: -12.134489059448242
    8. ''s' → logprob: -12.134489059448242
    9. '',' → logprob: -12.384489059448242
    10. ' ')' → logprob: -13.259489059448242

Token 93: '','' (ID: 4074)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.014842603355646133
    2. ''' → logprob: -5.014842510223389
    3. ' ')' → logprob: -5.389842510223389
    4. '',' → logprob: -5.889842510223389
    5. ')' → logprob: -7.389842510223389
    6. 'a' → logprob: -10.264842987060547
    7. ' ',' → logprob: -10.889842987060547
    8. ' '' → logprob: -11.014842987060547
    9. '']' → logprob: -11.514842987060547
    10. ''s' → logprob: -11.639842987060547

Token 94: 'd' (ID: 67)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.27840209007263184
    2. ')' → logprob: -2.278402090072632
    3. 'a' → logprob: -2.903402090072632
    4. 'd' → logprob: -3.153402090072632
    5. ''' → logprob: -4.028402328491211
    6. '...' → logprob: -4.528402328491211
    7. ' ')' → logprob: -4.653402328491211
    8. 's' → logprob: -6.653402328491211
    9. 'x' → logprob: -6.903402328491211
    10. ',' → logprob: -8.028402328491211

Token 95: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.00313529372215271
    2. ')' → logprob: -5.8781352043151855
    3. ' ')' → logprob: -8.503135681152344
    4. ''' → logprob: -9.378135681152344
    5. '',' → logprob: -10.503135681152344
    6. '")' → logprob: -13.003135681152344
    7. ',' → logprob: -13.003135681152344
    8. '}')' → logprob: -13.128135681152344
    9. '')
' → logprob: -13.378135681152344
    10. '}' → logprob: -13.628135681152344

Token 96: ' to' (ID: 316)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09640195965766907
    2. '   ' → logprob: -3.3464019298553467
    3. ' to' → logprob: -4.096402168273926
    4. '<|end|>' → logprob: -4.221402168273926
    5. '):' → logprob: -4.596402168273926
    6. ' ' → logprob: -4.846402168273926
    7. ' )' → logprob: -6.096402168273926
    8. '  ' → logprob: -6.596402168273926
    9. '):
' → logprob: -7.221402168273926
    10. ' ->' → logprob: -7.346402168273926

Token 97: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.0281688179820776
    2. 'bool' → logprob: -4.028168678283691
    3. ' True' → logprob: -4.903168678283691
    4. ' bo' → logprob: -6.028168678283691
    5. ' boolean' → logprob: -9.903168678283691
    6. 'True' → logprob: -9.903168678283691
    7. ' their' → logprob: -10.903168678283691
    8. '	bool' → logprob: -12.653168678283691
    9. '<bool' → logprob: -13.028168678283691
    10. ' a' → logprob: -13.278168678283691

Token 98: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09709293395280838
    2. '<|end|>' → logprob: -2.722092866897583
    3. ' ' → logprob: -4.472093105316162
    4. 's' → logprob: -5.222093105316162
    5. '   ' → logprob: -5.847093105316162
    6. ']' → logprob: -6.222093105316162
    7. ' values' → logprob: -6.597093105316162
    8. '}' → logprob: -7.097093105316162
    9. '):' → logprob: -7.347093105316162
    10. '  ' → logprob: -7.472093105316162

Token 99: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2683335542678833
    2. ')' → logprob: -1.8933335542678833
    3. ' 
' → logprob: -3.7683334350585938
    4. ' ' → logprob: -4.393333435058594
    5. '<|end|>' → logprob: -4.393333435058594
    6. '```' → logprob: -4.518333435058594
    7. '       ' → logprob: -5.018333435058594
    8. '\n' → logprob: -5.018333435058594
    9. '    ' → logprob: -5.143333435058594
    10. '    
' → logprob: -6.393333435058594

Token 100: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2938803434371948
    2. ' 
' → logprob: -2.4188804626464844
    3. '       ' → logprob: -2.7938804626464844
    4. '\n' → logprob: -3.6688804626464844
    5. '"""' → logprob: -3.9188804626464844
    6. ')' → logprob: -4.168880462646484
    7. '    ' → logprob: -4.418880462646484
    8. ' """' → logprob: -4.543880462646484
    9. ' """
' → logprob: -5.043880462646484
    10. ' ' → logprob: -5.418880462646484

Token 101: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1161060780286789
    2. ' 
' → logprob: -2.7411060333251953
    3. ' ' → logprob: -4.241106033325195
    4. '   ' → logprob: -4.366106033325195
    5. '\n' → logprob: -5.241106033325195
    6. '    ' → logprob: -5.241106033325195
    7. '        
' → logprob: -6.241106033325195
    8. '    
' → logprob: -6.366106033325195
    9. '     ' → logprob: -7.491106033325195
    10. '  ' → logprob: -7.616106033325195

Token 102: ' pass' (ID: 1853)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' (adapté à ' pass') → logprob: -0.01142903883010149
    2. '...' → logprob: -4.7614288330078125
    3. ' pass' → logprob: -6.3864288330078125
    4. '       ' → logprob: -7.6364288330078125
    5. 'raise' → logprob: -8.011428833007812
    6. 'p' → logprob: -8.386428833007812
    7. '   ' → logprob: -9.886428833007812
    8. 'pas' → logprob: -11.636428833007812
    9. ' ...' → logprob: -12.011428833007812
    10. '    ' → logprob: -12.136428833007812

Token 103: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23014304041862488
    2. '<|end|>' → logprob: -2.6051430702209473
    3. '   ' → logprob: -2.7301430702209473
    4. '\n' → logprob: -3.7301430702209473
    5. '    
' → logprob: -3.8551430702209473
    6. ' 
' → logprob: -5.105143070220947
    7. '

' → logprob: -5.230143070220947
    8. '  
' → logprob: -5.730143070220947
    9. '```' → logprob: -6.730143070220947
    10. 'n' → logprob: -6.855143070220947

Token 104: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08420486748218536
    2. '

' → logprob: -3.334204912185669
    3. '   ' → logprob: -3.709204912185669
    4. '    
' → logprob: -4.70920467376709
    5. '\n' → logprob: -5.20920467376709
    6. '<|end|>' → logprob: -5.83420467376709
    7. '


' → logprob: -7.45920467376709
    8. ' 
' → logprob: -7.45920467376709
    9. 'n' → logprob: -7.58420467376709
    10. '\' → logprob: -8.08420467376709

Token 105: ' @' (ID: 759)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2896293103694916
    2. '
' → logprob: -2.1646292209625244
    3. '    
' → logprob: -2.7896292209625244
    4. '    ' → logprob: -3.9146292209625244
    5. '\n' → logprob: -3.9146292209625244
    6. 'n' → logprob: -4.5396294593811035
    7. 'class' → logprob: -5.1646294593811035
    8. ' 
' → logprob: -5.5396294593811035
    9. ' ' → logprob: -5.7896294593811035
    10. '

' → logprob: -6.4146294593811035

Token 106: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.00019471932318992913
    2. 'property' → logprob: -9.375194549560547
    3. 'classmethod' → logprob: -9.875194549560547
    4. 'l' → logprob: -11.250194549560547
    5. 'staticmethod' → logprob: -11.375194549560547
    6. 'bool' → logprob: -11.500194549560547
    7. 'Bool' → logprob: -11.500194549560547
    8. 'ab' → logprob: -12.500194549560547
    9. 'evaluate' → logprob: -12.875194549560547
    10. 'abc' → logprob: -12.875194549560547

Token 107: 'method' (ID: 8697)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5205140113830566
    2. 'method' → logprob: -1.5205140113830566
    3. '_method' → logprob: -1.7705140113830566
    4. '   ' → logprob: -5.020514011383057
    5. ' def' → logprob: -5.270514011383057
    6. '_' → logprob: -6.395514011383057
    7. ')' → logprob: -7.145514011383057
    8. '_token' → logprob: -7.520514011383057
    9. '(' → logprob: -7.645514011383057
    10. '_def' → logprob: -7.770514011383057

Token 108: '
' (ID: 198)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.007703633978962898
    2. 'def' → logprob: -4.88270378112793
    3. '   ' → logprob: -9.50770378112793
    4. '
' → logprob: -11.25770378112793
    5. '	def' → logprob: -12.50770378112793
    6. '    ' → logprob: -12.63270378112793
    7. ' ' → logprob: -14.25770378112793
    8. ' 
' → logprob: -15.00770378112793
    9. '  ' → logprob: -15.00770378112793
    10. ' space' → logprob: -15.13270378112793

Token 109: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007759823463857174
    2. ' def' → logprob: -5.007760047912598
    3. '   ' → logprob: -6.882760047912598
    4. '
' → logprob: -11.007760047912598
    5. ' ' → logprob: -14.507760047912598
    6. '  ' → logprob: -14.632760047912598
    7. '	def' → logprob: -14.632760047912598
    8. 'ndef' → logprob: -16.00775909423828
    9. '_def' → logprob: -16.25775909423828
    10. 'd' → logprob: -16.38275909423828

Token 110: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0013075022725388408
    2. 'property' → logprob: -7.626307487487793
    3. 'class' → logprob: -8.001307487487793
    4. ' def' → logprob: -8.501307487487793
    5. '
' → logprob: -9.001307487487793
    6. 'classmethod' → logprob: -9.501307487487793
    7. '   ' → logprob: -10.251307487487793
    8. 'bool' → logprob: -11.626307487487793
    9. 'staticmethod' → logprob: -12.126307487487793
    10. 'str' → logprob: -12.251307487487793

Token 111: ' canonical' (ID: 91323)
  Prédit: ' simplify'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' simplify' → logprob: -0.07720790803432465
    2. ' __' → logprob: -3.3272078037261963
    3. 'simpl' → logprob: -4.202208042144775
    4. ' to' → logprob: -5.202208042144775
    5. ' str' → logprob: -5.202208042144775
    6. ' optimize' → logprob: -6.202208042144775
    7. ' stringify' → logprob: -6.327208042144775
    8. ' _' → logprob: -6.327208042144775
    9. ' evaluate' → logprob: -6.452208042144775
    10. ' simplified' → logprob: -6.952208042144775

Token 112: '_forms' (ID: 176505)
  Prédit: '_form'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_form' → logprob: -0.09358543902635574
    2. 'ize' → logprob: -3.21858549118042
    3. '_name' → logprob: -3.34358549118042
    4. '_' → logprob: -4.96858549118042
    5. '_repr' → logprob: -5.21858549118042
    6. '_rep' → logprob: -7.21858549118042
    7. '_format' → logprob: -8.343585014343262
    8. 'form' → logprob: -8.593585014343262
    9. '_string' → logprob: -9.718585014343262
    10. '_forms' → logprob: -9.968585014343262

Token 113: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.008720354177057743
    2. '(' → logprob: -4.758720397949219
    3. ' (' → logprob: -9.633720397949219
    4. '(s' → logprob: -10.883720397949219
    5. '(
' → logprob: -11.008720397949219
    6. 'self' → logprob: -12.633720397949219
    7. '   ' → logprob: -14.758720397949219
    8. ' ' → logprob: -15.133720397949219
    9. 's' → logprob: -15.133720397949219
    10. ' self' → logprob: -15.383720397949219

Token 114: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.035773079842329025
    2. ')' → logprob: -3.6607730388641357
    3. 'self' → logprob: -4.910773277282715
    4. '):
' → logprob: -6.785773277282715
    5. ',' → logprob: -7.285773277282715
    6. ' ):' → logprob: -9.035773277282715
    7. '(self' → logprob: -9.660773277282715
    8. '():' → logprob: -11.285773277282715
    9. ':' → logprob: -11.535773277282715
    10. '   ' → logprob: -11.535773277282715

Token 115: ' ->' (ID: 2747)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5943295359611511
    2. '(self' → logprob: -1.094329595565796
    3. ':' → logprob: -2.219329595565796
    4. '   ' → logprob: -6.719329357147217
    5. 'self' → logprob: -7.094329357147217
    6. '():' → logprob: -7.594329357147217
    7. '(
' → logprob: -7.844329357147217
    8. '(s' → logprob: -8.219329833984375
    9. '       ' → logprob: -8.219329833984375
    10. '):' → logprob: -8.344329833984375

Token 116: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.2125469595193863
    2. ' set' → logprob: -2.0875470638275146
    3. 'list' → logprob: -2.9625470638275146
    4. ' list' → logprob: -4.4625468254089355
    5. 'dict' → logprob: -6.8375468254089355
    6. 'tuple' → logprob: -7.3375468254089355
    7. 'None' → logprob: -7.5875468254089355
    8. ' None' → logprob: -7.7125468254089355
    9. ' tuple' → logprob: -7.8375468254089355
    10. 'str' → logprob: -8.087547302246094

Token 117: ':
' (ID: 734)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03155725076794624
    2. '(self' → logprob: -3.781557321548462
    3. ':' → logprob: -5.656557083129883
    4. '   ' → logprob: -6.406557083129883
    5. '():' → logprob: -6.656557083129883
    6. '(
' → logprob: -6.906557083129883
    7. '()' → logprob: -8.281557083129883
    8. '[' → logprob: -8.781557083129883
    9. ' (' → logprob: -9.406557083129883
    10. '{' → logprob: -9.406557083129883

Token 118: '       ' (ID: 309)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3126092553138733
    2. '       ' → logprob: -1.6876091957092285
    3. '   ' → logprob: -3.1876091957092285
    4. '<|end|>' → logprob: -3.8126091957092285
    5. '()' → logprob: -4.5626091957092285
    6. '{' → logprob: -6.1876091957092285
    7. ' ' → logprob: -6.3126091957092285
    8. '\' → logprob: -6.5626091957092285
    9. '    ' → logprob: -6.8126091957092285
    10. ' (' → logprob: -7.5626091957092285

Token 119: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008111671544611454
    2. '   ' → logprob: -5.883111476898193
    3. '<|end|>' → logprob: -5.883111476898193
    4. ' pass' → logprob: -6.758111476898193
    5. ' ' → logprob: -7.508111476898193
    6. '()' → logprob: -8.258111953735352
    7. '  ' → logprob: -8.883111953735352
    8. ')' → logprob: -9.383111953735352
    9. 'pass' → logprob: -9.633111953735352
    10. '    ' → logprob: -9.633111953735352

Token 120: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04387737810611725
    2. '<|end|>' → logprob: -3.918877363204956
    3. ' ' → logprob: -4.668877601623535
    4. '   ' → logprob: -5.168877601623535
    5. ')' → logprob: -5.793877601623535
    6. '    ' → logprob: -6.293877601623535
    7. '  ' → logprob: -6.668877601623535
    8. '      ' → logprob: -7.668877601623535
    9. '     ' → logprob: -8.543877601623535
    10. '        
' → logprob: -8.918877601623535

Token 121: ' Return' (ID: 6318)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03147386386990547
    2. '   ' → logprob: -3.9064738750457764
    3. '"""' → logprob: -5.156473636627197
    4. 'Generate' → logprob: -5.656473636627197
    5. 'Return' (adapté à ' Return') → logprob: -7.281473636627197
    6. 'Provide' → logprob: -8.906474113464355
    7. 'Returns' → logprob: -9.031474113464355
    8. 'Pass' → logprob: -9.031474113464355
    9. ' Generate' → logprob: -9.531474113464355
    10. ' """' → logprob: -9.656474113464355

Token 122: ' a' (ID: 261)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 123: ' set' (ID: 920)
  Prédit: ' set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.0007691288483329117
    2. 'set' → logprob: -7.875769138336182
    3. 's' → logprob: -9.000768661499023
    4. ' ' → logprob: -9.250768661499023
    5. 'n' → logprob: -9.375768661499023
    6. ' space' → logprob: -10.625768661499023
    7. ' s' → logprob: -10.625768661499023
    8. ' canonical' → logprob: -11.375768661499023
    9. '<|end|>' → logprob: -11.875768661499023
    10. 'space' → logprob: -12.250768661499023

Token 124: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -1.0251879692077637
    2. '(' → logprob: -1.1501879692077637
    3. '()' → logprob: -1.9001879692077637
    4. '<|end|>' → logprob: -2.0251879692077637
    5. '[' → logprob: -4.400187969207764
    6. '{' → logprob: -4.525187969207764
    7. 'of' → logprob: -4.525187969207764
    8. '   ' → logprob: -5.275187969207764
    9. '<|end|>' → logprob: -6.525187969207764
    10. '       ' → logprob: -7.900187969207764

Token 125: ' canonical' (ID: 91323)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -1.2447260618209839
    2. ' Bool' → logprob: -1.4947260618209839
    3. 'Bool' → logprob: -1.6197260618209839
    4. ' str' → logprob: -2.1197261810302734
    5. ' strings' → logprob: -2.6197261810302734
    6. ' canonical' → logprob: -2.7447261810302734
    7. ' all' → logprob: -4.619726181030273
    8. 'canonical' → logprob: -4.744726181030273
    9. ' tuples' → logprob: -5.744726181030273
    10. 'strings' → logprob: -5.869726181030273

Token 126: ' string' (ID: 1621)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3535596430301666
    2. '_' → logprob: -1.7285596132278442
    3. ' _' → logprob: -2.978559732437134
    4. '<|end|>' → logprob: -3.853559732437134
    5. ' (' → logprob: -4.228559494018555
    6. '(' → logprob: -4.603559494018555
    7. ' strings' → logprob: -5.603559494018555
    8. ' forms' → logprob: -5.728559494018555
    9. ' ()' → logprob: -5.853559494018555
    10. '  ' → logprob: -6.103559494018555

Token 127: ' representations' (ID: 63700)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7966949939727783
    2. ' representations' → logprob: -1.1716949939727783
    3. '(' → logprob: -1.9216949939727783
    4. '<|end|>' → logprob: -3.6716949939727783
    5. ' ' → logprob: -3.7966949939727783
    6. ' forms' → logprob: -4.546694755554199
    7. '_' → logprob: -5.046694755554199
    8. '   ' → logprob: -5.296694755554199
    9. 'represent' → logprob: -5.296694755554199
    10. '()' → logprob: -5.671694755554199

Token 128: ' of' (ID: 328)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.016419781371951103
    2. '   ' → logprob: -4.641419887542725
    3. '       ' → logprob: -5.516419887542725
    4. '(
' → logprob: -7.141419887542725
    5. '<|end|>' → logprob: -8.016419410705566
    6. ' of' → logprob: -8.141419410705566
    7. '[' → logprob: -8.641419410705566
    8. ':' → logprob: -8.766419410705566
    9. ' (' → logprob: -8.766419410705566
    10. '    ' → logprob: -8.891419410705566

Token 129: ' this' (ID: 495)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.13431917130947113
    2. ' all' → logprob: -3.0093190670013428
    3. 'the' → logprob: -3.5093190670013428
    4. ' self' → logprob: -4.009319305419922
    5. 'self' → logprob: -4.134319305419922
    6. ' possible' → logprob: -5.259319305419922
    7. ' canonical' → logprob: -5.759319305419922
    8. ' expressions' → logprob: -7.134319305419922
    9. 'all' → logprob: -7.509319305419922
    10. ' boolean' → logprob: -7.509319305419922

Token 130: ' expression' (ID: 12973)
  Prédit: ' Bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Bool' → logprob: -1.0187506675720215
    2. ' ' → logprob: -1.7687506675720215
    3. ' expression' → logprob: -1.7687506675720215
    4. ' Boolean' → logprob: -2.3937506675720215
    5. '<|end|>' → logprob: -2.5187506675720215
    6. 'Bool' → logprob: -2.6437506675720215
    7. ' expressions' → logprob: -3.5187506675720215
    8. ' boolean' → logprob: -4.7687506675720215
    9. ' bool' → logprob: -5.2687506675720215
    10. 'Boolean' → logprob: -6.0187506675720215

Token 131: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5131558179855347
    2. ':' → logprob: -1.1381558179855347
    3. '       ' → logprob: -3.513155937194824
    4. '<|end|>' → logprob: -4.013155937194824
    5. '(' → logprob: -4.513155937194824
    6. '    ' → logprob: -5.513155937194824
    7. '\n' → logprob: -5.513155937194824
    8. '.' → logprob: -5.763155937194824
    9. ' :' → logprob: -6.513155937194824
    10. ',' → logprob: -6.513155937194824

Token 132: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 133: ' representing' (ID: 25389)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8678526282310486
    2. '       ' → logprob: -0.8678526282310486
    3. ' representing' → logprob: -2.4928526878356934
    4. ' which' → logprob: -3.4928526878356934
    5. ' including' → logprob: -5.242852687835693
    6. ' to' → logprob: -5.242852687835693
    7. ' ensuring' → logprob: -5.367852687835693
    8. ' each' → logprob: -5.367852687835693
    9. ' that' → logprob: -5.617852687835693
    10. '    ' → logprob: -5.742852687835693

Token 134: ' the' (ID: 290)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.15875716507434845
    2. ' its' → logprob: -2.533757209777832
    3. ' equivalent' → logprob: -3.408757209777832
    4. 'all' → logprob: -4.158757209777832
    5. ' the' → logprob: -4.408757209777832
    6. 'equ' → logprob: -5.783757209777832
    7. ' equival' → logprob: -6.533757209777832
    8. 'the' → logprob: -7.408757209777832
    9. ' logically' → logprob: -8.033757209777832
    10. ' logical' → logprob: -8.158757209777832

Token 135: ' same' (ID: 2684)
  Prédit: ' minimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimal' → logprob: -0.8703543543815613
    2. ' expression' → logprob: -1.870354413986206
    3. ' same' → logprob: -2.245354413986206
    4. ' equival' → logprob: -2.620354413986206
    5. ' equivalent' → logprob: -3.120354413986206
    6. ' possible' → logprob: -3.495354413986206
    7. 'minimal' → logprob: -3.495354413986206
    8. ' Boolean' → logprob: -4.245354175567627
    9. ' simplest' → logprob: -4.370354175567627
    10. ' boolean' → logprob: -4.370354175567627

Token 136: ' Boolean' (ID: 12759)
  Prédit: ' boolean'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' boolean' → logprob: -0.4370388984680176
    2. ' logical' → logprob: -1.4370388984680176
    3. ' Boolean' → logprob: -3.1870388984680176
    4. ' logic' → logprob: -3.5620388984680176
    5. 'boolean' → logprob: -4.062038898468018
    6. ' expression' → logprob: -4.562038898468018
    7. 'logical' → logprob: -4.687038898468018
    8. 'Boolean' → logprob: -5.687038898468018
    9. ' function' → logprob: -5.937038898468018
    10. ' expressions' → logprob: -6.562038898468018

Token 137: ' function' (ID: 1114)
  Prédit: ' expression'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' expression' → logprob: -0.2080548107624054
    2. ' expressions' → logprob: -2.458054780960083
    3. 'expression' → logprob: -2.958054780960083
    4. ' function' → logprob: -3.208054780960083
    5. ' logic' → logprob: -5.708055019378662
    6. 'express' → logprob: -6.583055019378662
    7. '<|end|>' → logprob: -6.583055019378662
    8. 'function' → logprob: -7.208055019378662
    9. ' ' → logprob: -7.333055019378662
    10. '_expression' → logprob: -7.458055019378662

Token 138: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.573696494102478
    2. '.' → logprob: -1.573696494102478
    3. '       ' → logprob: -2.3236966133117676
    4. '<|end|>' → logprob: -2.3236966133117676
    5. ':' → logprob: -4.198696613311768
    6. ',' → logprob: -5.198696613311768
    7. '<|end|>' → logprob: -5.823696613311768
    8. '    ' → logprob: -5.948696613311768
    9. '  ' → logprob: -6.448696613311768
    10. ')' → logprob: -6.948696613311768

Token 139: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39669936895370483
    2. '<|end|>' → logprob: -2.0216994285583496
    3. '\n' → logprob: -2.2716994285583496
    4. ':' → logprob: -3.8966994285583496
    5. '    
' → logprob: -4.39669942855835
    6. ' ' → logprob: -4.64669942855835
    7. '
' → logprob: -4.77169942855835
    8. ' 
' → logprob: -4.89669942855835
    9. '  
' → logprob: -5.52169942855835
    10. '  ' → logprob: -5.64669942855835

Token 140: ' This' (ID: 1328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8360469341278076
    2. '<|end|>' → logprob: -0.8360469341278076
    3. '       ' → logprob: -2.7110469341278076
    4. '"""' → logprob: -3.9610469341278076
    5. '\n' → logprob: -4.461047172546387
    6. '<|end|>' → logprob: -4.961047172546387
    7. '```' → logprob: -5.086047172546387
    8. '    ' → logprob: -5.461047172546387
    9. ')' → logprob: -5.836047172546387
    10. '    
' → logprob: -5.961047172546387

Token 141: ' abstraction' (ID: 129564)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8228552341461182
    2. ' is' → logprob: -1.6978552341461182
    3. ' can' → logprob: -2.322855234146118
    4. '
' → logprob: -3.322855234146118
    5. '   ' → logprob: -3.322855234146118
    6. '    ' → logprob: -3.572855234146118
    7. ' will' → logprob: -4.072854995727539
    8. ' \' → logprob: -4.072854995727539
    9. ' def' → logprob: -4.072854995727539
    10. ' set' → logprob: -4.197854995727539

Token 142: ' anticip' (ID: 20155)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 143: 'ates' (ID: 1381)
  Prédit: 'ates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ates' → logprob: -0.01429925300180912
    2. 'ate' → logprob: -5.264299392700195
    3. 's' → logprob: -5.639299392700195
    4. 'p' → logprob: -6.514299392700195
    5. 'cip' → logprob: -6.639299392700195
    6. 'ated' → logprob: -7.014299392700195
    7. 't' → logprob: -8.264299392700195
    8. 'pt' → logprob: -8.764299392700195
    9. 'c' → logprob: -9.014299392700195
    10. '@' → logprob: -9.139299392700195

Token 144: ' future' (ID: 5277)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.995282769203186
    2. ' the' → logprob: -1.120282769203186
    3. ' more' → logprob: -2.8702826499938965
    4. ' different' → logprob: -3.3702826499938965
    5. ' extensions' → logprob: -3.3702826499938965
    6. ' multiple' → logprob: -3.6202826499938965
    7. ' additional' → logprob: -4.1202826499938965
    8. 'possible' → logprob: -4.1202826499938965
    9. 'extensions' → logprob: -4.3702826499938965
    10. ' a' → logprob: -4.3702826499938965

Token 145: ' caching' (ID: 104247)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 146: ' and' (ID: 326)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 147: ' normalization' (ID: 115461)
  Prédit: ' memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' memo' → logprob: -0.6503563523292542
    2. 'memo' → logprob: -1.5253562927246094
    3. ' optimization' → logprob: -3.0253562927246094
    4. ' equival' → logprob: -3.0253562927246094
    5. ' minim' → logprob: -3.6503562927246094
    6. ' simpl' → logprob: -3.6503562927246094
    7. ' transformations' → logprob: -3.7753562927246094
    8. 'optimization' → logprob: -4.025356292724609
    9. 'equ' → logprob: -4.525356292724609
    10. ' optim' → logprob: -4.650356292724609

Token 148: ' strategies' (ID: 15142)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.581264317035675
    2. '   ' → logprob: -0.831264317035675
    3. ',' → logprob: -6.456264495849609
    4. '<|end|>' → logprob: -6.956264495849609
    5. '  ' → logprob: -7.081264495849609
    6. '    ' → logprob: -7.206264495849609
    7. '\n' → logprob: -7.831264495849609
    8. ' of' → logprob: -8.45626449584961
    9. '       ' → logprob: -8.83126449584961
    10. '    
' → logprob: -9.20626449584961

Token 149: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2788948714733124
    2. '<|end|>' → logprob: -2.2788949012756348
    3. ':' → logprob: -2.4038949012756348
    4. '.' → logprob: -3.5288949012756348
    5. '\n' → logprob: -5.278894901275635
    6. '       ' → logprob: -5.403894901275635
    7. '<|end|>' → logprob: -5.903894901275635
    8. '
' → logprob: -6.028894901275635
    9. '    ' → logprob: -6.153894901275635
    10. '  ' → logprob: -6.653894901275635

Token 150: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013202590867877007
    2. '<|end|>' → logprob: -4.888202667236328
    3. '
' → logprob: -6.263202667236328
    4. '       ' → logprob: -6.888202667236328
    5. '"""' → logprob: -7.513202667236328
    6. ')' → logprob: -7.638202667236328
    7. '```' → logprob: -7.888202667236328
    8. '\n' → logprob: -7.888202667236328
    9. '    
' → logprob: -8.263202667236328
    10. 'newline' → logprob: -8.513202667236328

Token 151: ' Each' (ID: 11555)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31759577989578247
    2. '       ' → logprob: -1.6925957202911377
    3. '<|end|>' → logprob: -3.3175957202911377
    4. '"""' → logprob: -3.5675957202911377
    5. '```' → logprob: -4.692595958709717
    6. '\n' → logprob: -4.942595958709717
    7. '
' → logprob: -6.067595958709717
    8. '    ' → logprob: -6.567595958709717
    9. ')' → logprob: -7.192595958709717
    10. '    
' → logprob: -7.317595958709717

Token 152: ' returned' (ID: 10508)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11606797575950623
    2. ' canonical' → logprob: -3.991067886352539
    3. '<|end|>' → logprob: -4.366067886352539
    4. ' expression' → logprob: -4.366067886352539
    5. ' token' → logprob: -4.991067886352539
    6. ' _' → logprob: -5.116067886352539
    7. '  ' → logprob: -5.241067886352539
    8. '_' → logprob: -5.241067886352539
    9. '    ' → logprob: -5.366067886352539
    10. ')' → logprob: -5.866067886352539

Token 153: ' form' (ID: 1625)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02000289037823677
    2. ' set' → logprob: -5.270002841949463
    3. '_' → logprob: -5.520002841949463
    4. '<|end|>' → logprob: -5.770002841949463
    5. ' _' → logprob: -6.395002841949463
    6. ' form' → logprob: -6.645002841949463
    7. ' token' → logprob: -6.770002841949463
    8. '  ' → logprob: -7.145002841949463
    9. '    ' → logprob: -7.770002841949463
    10. ' )' → logprob: -8.145003318786621

Token 154: ' is' (ID: 382)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21335557103157043
    2. '<|end|>' → logprob: -2.213355541229248
    3. ' is' → logprob: -3.588355541229248
    4. '   ' → logprob: -5.088355541229248
    5. '<|end|>' → logprob: -5.088355541229248
    6. ')' → logprob: -5.088355541229248
    7. '    ' → logprob: -5.213355541229248
    8. ':' → logprob: -5.338355541229248
    9. ' must' → logprob: -5.338355541229248
    10. '  ' → logprob: -5.588355541229248

Token 155: ' an' (ID: 448)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.023202382028102875
    2. 'a' → logprob: -4.648202419281006
    3. ' an' → logprob: -5.023202419281006
    4. ' ' → logprob: -5.398202419281006
    5. '<|end|>' → logprob: -7.648202419281006
    6. ' represented' → logprob: -8.023201942443848
    7. '    ' → logprob: -8.398201942443848
    8. 's' → logprob: -9.273201942443848
    9. ' set' → logprob: -9.398201942443848
    10. ' generated' → logprob: -9.523201942443848

Token 156: ' expression' (ID: 12973)
  Prédit: ' immutable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' immutable' → logprob: -0.1362854391336441
    2. 'immutable' → logprob: -2.6362855434417725
    3. ' expression' → logprob: -4.386285305023193
    4. ' ' → logprob: -4.886285305023193
    5. ' abstract' → logprob: -5.011285305023193
    6. ' exact' → logprob: -5.511285305023193
    7. ' fro' → logprob: -5.636285305023193
    8. '   ' → logprob: -5.636285305023193
    9. ' iterable' → logprob: -6.761285305023193
    10. ' optimized' → logprob: -6.761285305023193

Token 157: ' string' (ID: 1621)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.42141035199165344
    2. '<|end|>' → logprob: -1.296410322189331
    3. '    ' → logprob: -4.54641056060791
    4. ')' → logprob: -4.67141056060791
    5. '  ' → logprob: -4.92141056060791
    6. '   ' → logprob: -5.17141056060791
    7. ',' → logprob: -5.29641056060791
    8. '[' → logprob: -5.42141056060791
    9. 's' → logprob: -5.79641056060791
    10. '<|end|>' → logprob: -5.79641056060791

Token 158: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.491241991519928
    2. ',' → logprob: -2.366241931915283
    3. ')' → logprob: -2.741241931915283
    4. '<|end|>' → logprob: -2.866241931915283
    5. '"' → logprob: -3.491241931915283
    6. '\' → logprob: -3.866241931915283
    7. '(' → logprob: -3.866241931915283
    8. '.' → logprob: -4.241241931915283
    9. '       ' → logprob: -4.241241931915283
    10. '[' → logprob: -4.616241931915283

Token 159: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22262482345104218
    2. '"""' → logprob: -2.0976247787475586
    3. '\n' → logprob: -3.4726247787475586
    4. '<|end|>' → logprob: -3.9726247787475586
    5. '```' → logprob: -4.847624778747559
    6. '
' → logprob: -5.097624778747559
    7. '"' → logprob: -5.597624778747559
    8. '    
' → logprob: -6.222624778747559
    9. 'newline' → logprob: -6.472624778747559
    10. '       ' → logprob: -6.847624778747559

Token 160: ' """
' (ID: 7037)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 161: '       ' (ID: 309)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.10092722624540329
    2. '   ' → logprob: -3.2259271144866943
    3. '       ' → logprob: -3.2259271144866943
    4. '<|end|>' → logprob: -5.600927352905273
    5. '    
' → logprob: -5.975927352905273
    6. '\r' → logprob: -6.350927352905273
    7. '
' → logprob: -6.475927352905273
    8. ' 
' → logprob: -6.600927352905273
    9. '\' → logprob: -6.600927352905273
    10. 'newline' → logprob: -6.975927352905273

Token 162: ' pass' (ID: 1853)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' (adapté à ' pass') → logprob: -0.0032368937972933054
    2. '       ' → logprob: -5.753236770629883
    3. ' pass' → logprob: -9.753236770629883
    4. '   ' → logprob: -15.003236770629883
    5. 'return' → logprob: -15.003236770629883
    6. '	pass' → logprob: -15.503236770629883
    7. 'pas' → logprob: -16.378236770629883
    8. 'raise' → logprob: -17.503236770629883
    9. '      ' → logprob: -18.503236770629883
    10. '     ' → logprob: -18.753236770629883

Token 163: '


' (ID: 2499)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03742595016956329
    2. '

' → logprob: -4.287425994873047
    3. '<|end|>' → logprob: -4.287425994873047
    4. '\n' → logprob: -5.162425994873047
    5. '


' → logprob: -6.787425994873047
    6. '   ' → logprob: -7.037425994873047
    7. '\' → logprob: -7.912425994873047
    8. '    
' → logprob: -7.912425994873047
    9. '<|end|>' → logprob: -8.287425994873047
    10. ' 
' → logprob: -9.162425994873047

Token 164: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1462050974369049
    2. 'class' → logprob: -2.271205186843872
    3. '

' → logprob: -3.521205186843872
    4. '\n' → logprob: -6.021204948425293
    5. '


' → logprob: -8.396204948425293
    6. ' 
' → logprob: -8.521204948425293
    7. '' → logprob: -9.146204948425293
    8. '    
' → logprob: -9.271204948425293
    9. ' class' → logprob: -10.021204948425293
    10. '  
' → logprob: -10.521204948425293

Token 165: ' Const' (ID: 19594)
  Prédit: 'Var'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Var' → logprob: -0.23978206515312195
    2. ' Var' → logprob: -2.4897820949554443
    3. 'Variable' → logprob: -2.6147820949554443
    4. ' Variable' → logprob: -3.7397820949554443
    5. 'Bool' → logprob: -4.114781856536865
    6. ' Bool' → logprob: -4.989781856536865
    7. 'And' → logprob: -5.364781856536865
    8. 'Literal' → logprob: -6.364781856536865
    9. ' And' → logprob: -6.489781856536865
    10. 'Not' → logprob: -6.864781856536865

Token 166: '(B' (ID: 8409)
  Prédit: 'Bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Bool' → logprob: -0.03706381842494011
    2. 'Expr' → logprob: -3.4120638370513916
    3. 'True' → logprob: -7.1620635986328125
    4. '(bool' → logprob: -7.7870635986328125
    5. ')' → logprob: -8.162063598632812
    6. '(' → logprob: -8.162063598632812
    7. '<bool' → logprob: -8.287063598632812
    8. ':' → logprob: -8.287063598632812
    9. '(True' → logprob: -8.287063598632812
    10. ' Bool' → logprob: -8.912063598632812

Token 167: 'ool' (ID: 971)
  Prédit: 'ool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ool' → logprob: -1.747814349073451e-05
    2. 'oolean' → logprob: -11.625017166137695
    3. 'o' → logprob: -11.750017166137695
    4. 'oo' → logprob: -15.000017166137695
    5. 'ools' → logprob: -15.125017166137695
    6. 'OOL' → logprob: -16.875017166137695
    7. ')' → logprob: -18.000017166137695
    8. 'oola' → logprob: -18.750017166137695
    9. '```' → logprob: -18.750017166137695
    10. 'bool' → logprob: -19.250017166137695

Token 168: 'Expr' (ID: 21037)
  Prédit: 'Expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Expr' → logprob: -2.5776860184123507e-06
    2. ')' → logprob: -13.62500286102295
    3. 'Const' → logprob: -14.50000286102295
    4. ' Expr' → logprob: -15.37500286102295
    5. 'Exp' → logprob: -15.50000286102295
    6. 'Express' → logprob: -15.75000286102295
    7. '_expr' → logprob: -17.000001907348633
    8. 'expr' → logprob: -17.250001907348633
    9. '   ' → logprob: -17.375001907348633
    10. 'True' → logprob: -17.625001907348633

Token 169: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001074611209332943
    2. ')' → logprob: -7.00107479095459
    3. '):
' → logprob: -9.62607479095459
    4. ',' → logprob: -9.75107479095459
    5. ':' → logprob: -11.37607479095459
    6. '   ' → logprob: -11.62607479095459
    7. ' ):' → logprob: -11.75107479095459
    8. '(True' → logprob: -13.25107479095459
    9. '(' → logprob: -13.37607479095459
    10. '<boolean' → logprob: -13.62607479095459

Token 170: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012848060578107834
    2. ':' → logprob: -4.512847900390625
    3. '):' → logprob: -6.762847900390625
    4. '(' → logprob: -8.262847900390625
    5. 'def' → logprob: -9.262847900390625
    6. ')' → logprob: -9.762847900390625
    7. ' :' → logprob: -9.887847900390625
    8. ' def' → logprob: -10.262847900390625
    9. '  ' → logprob: -10.637847900390625
    10. '    ' → logprob: -10.637847900390625

Token 171: ' __' (ID: 2516)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013367156498134136
    2. '    ' → logprob: -5.263367176055908
    3. ' ' → logprob: -5.388367176055908
    4. '  ' → logprob: -7.138367176055908
    5. '
' → logprob: -7.763367176055908
    6. '    
' → logprob: -7.763367176055908
    7. ':' → logprob: -7.888367176055908
    8. 'def' → logprob: -8.13836669921875
    9. ' def' → logprob: -8.26336669921875
    10. ')' → logprob: -8.38836669921875

Token 172: 'slots' (ID: 101916)
  Prédit: 'slots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'slots' → logprob: -0.4299052357673645
    2. 'init' → logprob: -1.0549051761627197
    3. ' slots' → logprob: -7.429905414581299
    4. 'slot' → logprob: -7.804905414581299
    5. ' init' → logprob: -8.80490493774414
    6. 'new' → logprob: -11.17990493774414
    7. '_slots' → logprob: -11.30490493774414
    8. ' slot' → logprob: -11.67990493774414
    9. 'value' → logprob: -12.67990493774414
    10. '_init' → logprob: -12.92990493774414

Token 173: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0015398615505546331
    2. '=' → logprob: -6.626539707183838
    3. '__[' → logprob: -9.126540184020996
    4. '=['' → logprob: -10.376540184020996
    5. ' =' → logprob: -10.501540184020996
    6. '__('' → logprob: -11.001540184020996
    7. '___' → logprob: -11.751540184020996
    8. '__["' → logprob: -12.001540184020996
    9. '__.__' → logprob: -12.751540184020996
    10. '_=' → logprob: -13.001540184020996

Token 174: ' =' (ID: 314)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0002158146962756291
    2. ' =' → logprob: -9.000215530395508
    3. '=' → logprob: -9.625215530395508
    4. '__('' → logprob: -11.000215530395508
    5. '___' → logprob: -12.000215530395508
    6. '=['' → logprob: -14.000215530395508
    7. '_' → logprob: -14.250215530395508
    8. '____' → logprob: -14.500215530395508
    9. '__[' → logprob: -14.750215530395508
    10. '__["' → logprob: -15.375215530395508

Token 175: ' ('' (ID: 9906)
  Prédit: '('_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('_' → logprob: -0.3989236354827881
    2. '('' → logprob: -1.148923635482788
    3. '("_' → logprob: -5.273923873901367
    4. '('__' → logprob: -5.898923873901367
    5. ' ('' → logprob: -6.398923873901367
    6. '("' → logprob: -7.273923873901367
    7. '['' → logprob: -7.523923873901367
    8. ''value' → logprob: -7.648923873901367
    9. ''_' → logprob: -8.773923873901367
    10. '['_' → logprob: -8.773923873901367

Token 176: 'value' (ID: 1594)
  Prédit: 'value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.003199108177796006
    2. '_value' → logprob: -6.003199100494385
    3. 'val' → logprob: -7.628199100494385
    4. '_val' → logprob: -8.878199577331543
    5. ' value' → logprob: -9.378199577331543
    6. '.value' → logprob: -11.878199577331543
    7. 'v' → logprob: -13.753199577331543
    8. '_' → logprob: -14.253199577331543
    9. '__' → logprob: -14.378199577331543
    10. '"value' → logprob: -14.378199577331543

Token 177: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.062356069684028625
    2. '')' → logprob: -2.8123559951782227
    3. ',' → logprob: -8.937355995178223
    4. ''' → logprob: -9.187355995178223
    5. ' ',' → logprob: -9.812355995178223
    6. ' ')' → logprob: -9.812355995178223
    7. '','' → logprob: -10.562355995178223
    8. ')' → logprob: -11.687355995178223
    9. '',
' → logprob: -12.437355995178223
    10. '=' → logprob: -13.437355995178223

Token 178: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.038557082414627075
    2. ' '' → logprob: -4.413557052612305
    3. ''' → logprob: -4.788557052612305
    4. ' )' → logprob: -4.913557052612305
    5. ')
' → logprob: -5.288557052612305
    6. ''value' → logprob: -6.538557052612305
    7. ')

' → logprob: -6.663557052612305
    8. 'value' → logprob: -7.788557052612305
    9. '')' → logprob: -7.913557052612305
    10. ' )
' → logprob: -8.038557052612305

Token 179: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06021614745259285
    2. '   ' → logprob: -3.185216188430786
    3. 'def' → logprob: -4.685215950012207
    4. ' def' → logprob: -5.185215950012207
    5. '    
' → logprob: -6.560215950012207
    6. ':' → logprob: -8.435215950012207
    7. '

' → logprob: -8.810215950012207
    8. '
' → logprob: -9.060215950012207
    9. ' 
' → logprob: -9.435215950012207
    10. '  
' → logprob: -9.435215950012207

Token 180: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0003374886582605541
    2. ' def' → logprob: -8.000337600708008
    3. '   ' → logprob: -13.125337600708008
    4. '0' → logprob: -18.375337600708008
    5. '	def' → logprob: -19.125337600708008
    6. 'value' → logprob: -19.500337600708008
    7. ' ' → logprob: -20.875337600708008
    8. '
' → logprob: -21.250337600708008
    9. 'de' → logprob: -21.375337600708008
    10. '    
' → logprob: -22.000337600708008

Token 181: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -7.314625690924004e-05
    2. '__' → logprob: -9.750073432922363
    3. ' def' → logprob: -11.875073432922363
    4. ' ' → logprob: -12.125073432922363
    5. ' ' → logprob: -13.875073432922363
    6. ' init' → logprob: -14.375073432922363
    7. '  ' → logprob: -14.750073432922363
    8. '_init' → logprob: -14.875073432922363
    9. ' _' → logprob: -17.250072479248047
    10. ' initialize' → logprob: -17.625072479248047

Token 182: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.3856492842023727e-06
    2. 'slots' → logprob: -13.750000953674316
    3. ' init' → logprob: -16.250001907348633
    4. 'slot' → logprob: -16.500001907348633
    5. 'ini' → logprob: -17.250001907348633
    6. 'inite' → logprob: -17.625001907348633
    7. 'in' → logprob: -17.750001907348633
    8. 'int' → logprob: -18.500001907348633
    9. '	init' → logprob: -19.250001907348633
    10. 'i' → logprob: -19.500001907348633

Token 183: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.7259680032730103
    2. '(' → logprob: -0.8509680032730103
    3. '__(' → logprob: -2.6009678840637207
    4. ' (' → logprob: -4.350967884063721
    5. '__' → logprob: -7.350967884063721
    6. '(value' → logprob: -7.850967884063721
    7. '<|end|>' → logprob: -8.100968360900879
    8. 'self' → logprob: -8.350968360900879
    9. '_(' → logprob: -8.975968360900879
    10. '_' → logprob: -9.850968360900879

Token 184: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00043162284418940544
    2. ' self' → logprob: -7.750431537628174
    3. 'value' → logprob: -14.000432014465332
    4. '(self' → logprob: -16.875431060791016
    5. '   ' → logprob: -17.250431060791016
    6. '
' → logprob: -17.375431060791016
    7. '	self' → logprob: -17.750431060791016
    8. ' ' → logprob: -17.875431060791016
    9. ',' → logprob: -19.250431060791016
    10. ',self' → logprob: -19.625431060791016

Token 185: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.046120885759592056
    2. ' ,' → logprob: -3.2961208820343018
    3. 'value' → logprob: -5.421121120452881
    4. '(value' → logprob: -6.546121120452881
    5. ' value' → logprob: -6.921121120452881
    6. ',value' → logprob: -7.046121120452881
    7. ' (' → logprob: -8.296120643615723
    8. '(' → logprob: -10.421120643615723
    9. ' ' → logprob: -10.921120643615723
    10. 'self' → logprob: -11.421120643615723

Token 186: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.07889287173748016
    2. ' value' → logprob: -2.578892946243286
    3. ' ' → logprob: -13.078892707824707
    4. '   ' → logprob: -14.203892707824707
    5. '  ' → logprob: -16.078893661499023
    6. '	value' → logprob: -16.703893661499023
    7. ')value' → logprob: -17.203893661499023
    8. '    ' → logprob: -17.578893661499023
    9. '"value' → logprob: -17.828893661499023
    10. 'val' → logprob: -18.203893661499023

Token 187: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.045649636536836624
    2. '):' → logprob: -3.170649528503418
    3. ' :' → logprob: -6.545649528503418
    4. ' ):' → logprob: -6.920649528503418
    5. ')' → logprob: -8.670649528503418
    6. ':boolean' → logprob: -10.920649528503418
    7. '):
' → logprob: -11.045649528503418
    8. ' )' → logprob: -11.795649528503418
    9. '=' → logprob: -12.420649528503418
    10. '   ' → logprob: -12.920649528503418

Token 188: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.575940728187561
    2. 'bool' → logprob: -0.825940728187561
    3. ' ' → logprob: -14.70094108581543
    4. '	bool' → logprob: -15.20094108581543
    5. '(bool' → logprob: -15.82594108581543
    6. ')' → logprob: -15.95094108581543
    7. '   ' → logprob: -16.07594108581543
    8. 'int' → logprob: -16.07594108581543
    9. '<bool' → logprob: -16.57594108581543
    10. '  ' → logprob: -17.20094108581543

Token 189: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0034284121356904507
    2. ')' → logprob: -5.7534284591674805
    3. '):
' → logprob: -8.37842845916748
    4. ' ):' → logprob: -11.00342845916748
    5. ':' → logprob: -12.62842845916748
    6. '   ' → logprob: -15.00342845916748
    7. '):
' → logprob: -15.12842845916748
    8. ' )' → logprob: -16.128427505493164
    9. ' ' → logprob: -16.878427505493164
    10. ',' → logprob: -17.503427505493164

Token 190: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004074354947078973
    2. 'self' → logprob: -8.125407218933105
    3. ' self' → logprob: -9.250407218933105
    4. '   ' → logprob: -12.500407218933105
    5. ' ' → logprob: -12.875407218933105
    6. ',' → logprob: -12.875407218933105
    7. ')' → logprob: -13.250407218933105
    8. '    ' → logprob: -13.875407218933105
    9. '      ' → logprob: -14.000407218933105
    10. '	' → logprob: -14.375407218933105

Token 191: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -1.0223448276519775
    2. 'self' (adapté à ' self') → logprob: -1.0223448276519775
    3. '       ' → logprob: -1.2723448276519775
    4. '   ' → logprob: -8.147344589233398
    5. ' ' → logprob: -10.772344589233398
    6. '	self' → logprob: -11.522344589233398
    7. '    ' → logprob: -13.272344589233398
    8. ' ' → logprob: -14.147344589233398
    9. '      ' → logprob: -14.272344589233398
    10. '     ' → logprob: -14.397344589233398

Token 192: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.018154975026845932
    2. '.' → logprob: -4.018155097961426
    3. 'value' → logprob: -12.393155097961426
    4. ' .' → logprob: -14.268155097961426
    5. ' value' → logprob: -15.268155097961426
    6. ' ' → logprob: -17.76815414428711
    7. '.val' → logprob: -17.89315414428711
    8. '.values' → logprob: -18.01815414428711
    9. '"value' → logprob: -18.39315414428711
    10. '.v' → logprob: -18.51815414428711

Token 193: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020699352025986
    2. ' =' → logprob: -2.3502070903778076
    3. ' ' → logprob: -14.975207328796387
    4. ' is' → logprob: -17.72520637512207
    5. ')' → logprob: -18.10020637512207
    6. ' =)' → logprob: -18.10020637512207
    7. '=

' → logprob: -18.60020637512207
    8. '=}' → logprob: -18.60020637512207
    9. '＝' → logprob: -18.97520637512207
    10. ' =
' → logprob: -19.10020637512207

Token 194: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.47407716512680054
    2. ' value' → logprob: -0.9740771651268005
    3. ' ' → logprob: -17.599077224731445
    4. 'bool' → logprob: -17.724077224731445
    5. '"value' → logprob: -18.349077224731445
    6. '(value' → logprob: -18.474077224731445
    7. '	value' → logprob: -18.974077224731445
    8. 'valu' → logprob: -19.099077224731445
    9. 'val' → logprob: -19.099077224731445
    10. ' bool' → logprob: -19.599077224731445

Token 195: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7046450972557068
    2. '<|end|>' → logprob: -0.9546450972557068
    3. '   ' → logprob: -2.5796451568603516
    4. '

' → logprob: -4.204645156860352
    5. '<|end|>' → logprob: -5.204645156860352
    6. '    
' → logprob: -5.329645156860352
    7. ')' → logprob: -5.579645156860352
    8. 'def' → logprob: -5.579645156860352
    9. ' ' → logprob: -5.954645156860352
    10. '  
' → logprob: -6.329645156860352

Token 196: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8524534106254578
    2. '<|end|>' → logprob: -1.1024534702301025
    3. '   ' → logprob: -1.7274534702301025
    4. '    
' → logprob: -3.4774534702301025
    5. 'def' → logprob: -4.977453231811523
    6. '  
' → logprob: -4.977453231811523
    7. '<|end|>' → logprob: -5.477453231811523
    8. '\n' → logprob: -5.852453231811523
    9. ' def' → logprob: -5.977453231811523
    10. ' 
' → logprob: -6.102453231811523

Token 197: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -2.45848218582978e-06
    2. ' def' → logprob: -13.00000286102295
    3. '   ' → logprob: -16.250001907348633
    4. '@' → logprob: -20.625001907348633
    5. 'de' → logprob: -21.000001907348633
    6. '@property' → logprob: -21.625001907348633
    7. 'evaluate' → logprob: -22.000001907348633
    8. '	def' → logprob: -22.750001907348633
    9. 'd' → logprob: -23.875001907348633
    10. '    
' → logprob: -25.625001907348633

Token 198: ' evaluate' (ID: 21646)
  Prédit: ' evaluate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' evaluate' → logprob: -0.008740320801734924
    2. 'evaluate' → logprob: -4.758740425109863
    3. ' ' → logprob: -9.258740425109863
    4. ' def' → logprob: -10.758740425109863
    5. ' _' → logprob: -12.383740425109863
    6. '.evaluate' → logprob: -13.133740425109863
    7. ' ' → logprob: -13.508740425109863
    8. '  ' → logprob: -14.883740425109863
    9. '_' → logprob: -15.008740425109863
    10. ' evaluates' → logprob: -15.633740425109863

Token 199: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.039301566779613495
    2. '(' → logprob: -3.289301633834839
    3. ' (' → logprob: -6.78930139541626
    4. '(env' → logprob: -9.039301872253418
    5. '(
' → logprob: -11.789301872253418
    6. ' ' → logprob: -12.289301872253418
    7. '   ' → logprob: -14.539301872253418
    8. 'self' → logprob: -15.039301872253418
    9. '(s' → logprob: -15.164301872253418
    10. '(

' → logprob: -15.164301872253418

Token 200: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0059342472814023495
    2. ' ,' → logprob: -5.130934238433838
    3. 'self' → logprob: -13.130934715270996
    4. '(env' → logprob: -13.255934715270996
    5. '   ' → logprob: -14.505934715270996
    6. ',self' → logprob: -15.255934715270996
    7. ' ' → logprob: -15.505934715270996
    8. 'env' → logprob: -15.505934715270996
    9. '       ' → logprob: -16.13093376159668
    10. ',
' → logprob: -16.25593376159668

Token 201: ' env' (ID: 9744)
  Prédit: ' env'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' env' → logprob: -0.04859565943479538
    2. 'env' → logprob: -3.048595666885376
    3. ' self' → logprob: -13.173595428466797
    4. 'self' → logprob: -13.298595428466797
    5. ' ' → logprob: -13.423595428466797
    6. '(env' → logprob: -14.298595428466797
    7. '.env' → logprob: -14.923595428466797
    8. '_env' → logprob: -14.923595428466797
    9. '	env' → logprob: -15.048595428466797
    10. ' {})' → logprob: -15.173595428466797

Token 202: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1790173053741455
    2. ')' → logprob: -2.0540173053741455
    3. ':' → logprob: -3.5540173053741455
    4. '):
' → logprob: -5.304017066955566
    5. ' ):' → logprob: -6.304017066955566
    6. ' )' → logprob: -8.929017066955566
    7. '   ' → logprob: -9.929017066955566
    8. '):
' → logprob: -10.304017066955566
    9. ' ' → logprob: -10.679017066955566
    10. '       ' → logprob: -11.804017066955566

Token 203: ' dict' (ID: 11878)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.6699607372283936
    2. ')' → logprob: -0.7949607372283936
    3. ' ' → logprob: -3.9199607372283936
    4. ' None' → logprob: -4.419960975646973
    5. ' self' → logprob: -6.669960975646973
    6. 'None' → logprob: -7.044960975646973
    7. 'self' → logprob: -7.169960975646973
    8. ' bool' → logprob: -7.919960975646973
    9. ' dict' → logprob: -8.419960975646973
    10. ' ):' → logprob: -8.544960975646973

Token 204: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014208168722689152
    2. '):' → logprob: -4.2642083168029785
    3. ' )' → logprob: -10.76420783996582
    4. '):
' → logprob: -10.88920783996582
    5. ' ):' → logprob: -12.63920783996582
    6. ')->' → logprob: -14.13920783996582
    7. '   ' → logprob: -14.26420783996582
    8. '):
' → logprob: -16.26420783996582
    9. '       ' → logprob: -16.88920783996582
    10. ')=' → logprob: -17.26420783996582

Token 205: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007199380779638886
    2. ':
' → logprob: -7.500720024108887
    3. ' :' → logprob: -9.875720024108887
    4. ':return' → logprob: -9.875720024108887
    5. '):' → logprob: -10.250720024108887
    6. ')' → logprob: -11.500720024108887
    7. '       ' → logprob: -11.625720024108887
    8. '   ' → logprob: -12.250720024108887
    9. '):
' → logprob: -12.875720024108887
    10. '->' → logprob: -14.500720024108887

Token 206: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.005235767923295498
    2. 'bool' → logprob: -5.25523567199707
    3. ' ' → logprob: -13.13023567199707
    4. ' ' → logprob: -17.88023567199707
    5. '<bool' → logprob: -19.13023567199707
    6. ' int' → logprob: -19.25523567199707
    7. '	bool' → logprob: -19.38023567199707
    8. '.bool' → logprob: -19.38023567199707
    9. '_bool' → logprob: -19.50523567199707
    10. '(bool' → logprob: -19.75523567199707

Token 207: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00206223432905972
    2. ':
' → logprob: -6.2520623207092285
    3. '):' → logprob: -9.87706184387207
    4. '       ' → logprob: -9.87706184387207
    5. ':return' → logprob: -11.00206184387207
    6. '   ' → logprob: -12.50206184387207
    7. ',' → logprob: -12.62706184387207
    8. '):
' → logprob: -12.75206184387207
    9. ' :' → logprob: -13.12706184387207
    10. '():' → logprob: -14.12706184387207

Token 208: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00021879478299524635
    2. ' return' → logprob: -9.125218391418457
    3. 'return' → logprob: -9.875218391418457
    4. ' 
' → logprob: -10.375218391418457
    5. '        
' → logprob: -11.375218391418457
    6. '
' → logprob: -11.875218391418457
    7. '   ' → logprob: -12.750218391418457
    8. '    ' → logprob: -13.750218391418457
    9. '    
' → logprob: -14.375218391418457
    10. '        ' → logprob: -14.500218391418457

Token 209: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.009175095707178116
    2. '       ' → logprob: -5.0091753005981445
    3. ' return' → logprob: -6.0091753005981445
    4. '   ' → logprob: -14.509175300598145
    5. '	return' → logprob: -16.884174346923828
    6. '{return' → logprob: -17.384174346923828
    7. ':return' → logprob: -17.759174346923828
    8. 'ret' → logprob: -18.259174346923828
    9. ' ' → logprob: -19.009174346923828
    10. 'eturn' → logprob: -19.259174346923828

Token 210: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.575939416885376
    2. 'self' → logprob: -0.825939416885376
    3. '	self' → logprob: -20.950939178466797
    4. ' ' → logprob: -21.325939178466797
    5. '       ' → logprob: -21.825939178466797
    6. ' True' → logprob: -22.325939178466797
    7. '(self' → logprob: -23.075939178466797
    8. '   ' → logprob: -23.575939178466797
    9. ' ' → logprob: -23.825939178466797
    10. 'True' → logprob: -24.200939178466797

Token 211: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.006792101543396711
    2. '.' → logprob: -5.006792068481445
    3. ' .' → logprob: -9.506792068481445
    4. 'value' → logprob: -13.131792068481445
    5. ' ' → logprob: -15.756792068481445
    6. '.val' → logprob: -16.631792068481445
    7. '.space' → logprob: -17.006792068481445
    8. '.v' → logprob: -17.881792068481445
    9. '.token' → logprob: -17.881792068481445
    10. '.constant' → logprob: -18.006792068481445

Token 212: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4536278247833252
    2. '<|end|>' → logprob: -1.2036278247833252
    3. '

' → logprob: -3.953627824783325
    4. '   ' → logprob: -4.203627586364746
    5. '    
' → logprob: -4.453627586364746
    6. '\n' → logprob: -4.828627586364746
    7. 'newline' → logprob: -5.703627586364746
    8. ' 
' → logprob: -6.203627586364746
    9. '<|end|>' → logprob: -6.578627586364746
    10. '```' → logprob: -6.578627586364746

Token 213: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 214: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.65365070104599
    2. 'def' (adapté à ' def') → logprob: -0.77865070104599
    3. '    
' → logprob: -4.903650760650635
    4. ' def' → logprob: -5.153650760650635
    5. '@' → logprob: -5.278650760650635
    6. '```' → logprob: -7.028650760650635
    7. '@property' → logprob: -7.028650760650635
    8. '
' → logprob: -8.278650283813477
    9. '        
' → logprob: -9.528650283813477
    10. ' ' → logprob: -9.528650283813477

Token 215: ' canonical' (ID: 91323)
  Prédit: ' canonical'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' canonical' → logprob: -0.3132704198360443
    2. 'canonical' → logprob: -1.3132704496383667
    3. 'def' → logprob: -11.813270568847656
    4. ' def' → logprob: -14.313270568847656
    5. ' ' → logprob: -15.188270568847656
    6. 'c' → logprob: -15.313270568847656
    7. 'Canonical' → logprob: -16.438270568847656
    8. '_c' → logprob: -18.063270568847656
    9. 'class' → logprob: -18.188270568847656
    10. '@' → logprob: -18.688270568847656

Token 216: '_forms' (ID: 176505)
  Prédit: '_forms'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_forms' → logprob: -0.004293511155992746
    2. '_' → logprob: -5.504293441772461
    3. '_form' → logprob: -8.879293441772461
    4. ' _' → logprob: -10.504293441772461
    5. '_f' → logprob: -10.504293441772461
    6. '_s' → logprob: -11.379293441772461
    7. '_formats' → logprob: -12.379293441772461
    8. '_faces' → logprob: -14.129293441772461
    9. '_names' → logprob: -14.504293441772461
    10. '_for' → logprob: -14.879293441772461

Token 217: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004097396973520517
    2. '(' → logprob: -5.5040974617004395
    3. '(s' → logprob: -11.754096984863281
    4. ' (' → logprob: -11.879096984863281
    5. '(
' → logprob: -12.629096984863281
    6. '()' → logprob: -14.379096984863281
    7. 'self' → logprob: -16.25409698486328
    8. '(

' → logprob: -16.75409698486328
    9. '(se' → logprob: -16.87909698486328
    10. '(sel' → logprob: -17.12909698486328

Token 218: ')' (ID: 8)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4918272793292999
    2. ')' → logprob: -0.9918272495269775
    3. '(self' → logprob: -4.366827487945557
    4. '):' → logprob: -6.366827487945557
    5. ')(' → logprob: -6.741827487945557
    6. ',' → logprob: -6.991827487945557
    7. '   ' → logprob: -8.116827011108398
    8. ' self' → logprob: -8.241827011108398
    9. '):
' → logprob: -8.241827011108398
    10. 's' → logprob: -9.491827011108398

Token 219: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.2533276677131653
    2. '(' → logprob: -1.5033276081085205
    3. ' (' → logprob: -7.7533278465271
    4. '(
' → logprob: -8.003327369689941
    5. 'self' → logprob: -8.128327369689941
    6. '{' → logprob: -9.128327369689941
    7. ':' → logprob: -9.253327369689941
    8. '(s' → logprob: -10.003327369689941
    9. 's' → logprob: -10.503327369689941
    10. ' self' → logprob: -11.003327369689941

Token 220: ' set' (ID: 920)
  Prédit: ' {'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.11412937194108963
    2. '{' → logprob: -2.3641293048858643
    3. ' {'' → logprob: -4.864129543304443
    4. ' set' → logprob: -5.989129543304443
    5. 'set' → logprob: -6.364129543304443
    6. ' {"' → logprob: -6.989129543304443
    7. '{'' → logprob: -7.989129543304443
    8. '{"' → logprob: -7.989129543304443
    9. ' {
' → logprob: -9.739129066467285
    10. '{return' → logprob: -9.739129066467285

Token 221: ':
' (ID: 734)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7079708576202393
    2. '(self' → logprob: -0.7079708576202393
    3. '{' → logprob: -4.70797061920166
    4. '({' → logprob: -5.58297061920166
    5. '(
' → logprob: -7.08297061920166
    6. '():' → logprob: -7.45797061920166
    7. '()' → logprob: -8.45797061920166
    8. 'self' → logprob: -9.08297061920166
    9. ':' → logprob: -9.45797061920166
    10. '   ' → logprob: -10.20797061920166

Token 222: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16630129516124725
    2. '{' → logprob: -2.0413012504577637
    3. ' {' → logprob: -3.7913012504577637
    4. ' return' → logprob: -8.416301727294922
    5. '{return' → logprob: -8.541301727294922
    6. 'return' → logprob: -8.916301727294922
    7. '({' → logprob: -9.541301727294922
    8. '{"' → logprob: -9.541301727294922
    9. '   ' → logprob: -10.666301727294922
    10. '(' → logprob: -10.666301727294922

Token 223: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5696679949760437
    2. '{return' → logprob: -1.0696680545806885
    3. '{' → logprob: -2.5696680545806885
    4. '       ' → logprob: -4.569667816162109
    5. ' return' → logprob: -5.569667816162109
    6. ' {' → logprob: -8.31966781616211
    7. '{"' → logprob: -8.69466781616211
    8. '   ' → logprob: -11.19466781616211
    9. '{'' → logprob: -12.81966781616211
    10. '	return' → logprob: -13.44466781616211

Token 224: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.3135696351528168
    2. ' {' → logprob: -1.3135696649551392
    3. '{"' → logprob: -8.313570022583008
    4. '{'' → logprob: -10.063570022583008
    5. ' {"' → logprob: -11.813570022583008
    6. ' {'' → logprob: -11.813570022583008
    7. ' ' → logprob: -12.688570022583008
    8. '{name' → logprob: -13.813570022583008
    9. '   ' → logprob: -15.063570022583008
    10. ' ' → logprob: -15.438570022583008

Token 225: ' '' (ID: 461)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.1845671534538269
    2. '"' → logprob: -2.1845672130584717
    3. ''' → logprob: -2.9345672130584717
    4. ' str' → logprob: -6.184566974639893
    5. ' '' → logprob: -8.43456745147705
    6. ' "' → logprob: -8.43456745147705
    7. ''t' → logprob: -8.55956745147705
    8. ''f' → logprob: -9.68456745147705
    9. ''T' → logprob: -9.93456745147705
    10. '(str' → logprob: -11.18456745147705

Token 226: '1' (ID: 16)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.41814929246902466
    2. '1' → logprob: -1.7931492328643799
    3. 'T' → logprob: -2.04314923286438
    4. 'true' → logprob: -3.41814923286438
    5. 'TRUE' → logprob: -4.418149471282959
    6. ''' → logprob: -8.0431489944458
    7. 't' → logprob: -8.6681489944458
    8. 'str' → logprob: -9.0431489944458
    9. '0' → logprob: -9.9181489944458
    10. ' True' → logprob: -10.5431489944458

Token 227: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -6.802049756515771e-05
    2. ''}' → logprob: -9.625067710876465
    3. '0' → logprob: -14.250067710876465
    4. '}'' → logprob: -14.375067710876465
    5. '}' → logprob: -14.625067710876465
    6. '"' → logprob: -15.875067710876465
    7. '')' → logprob: -16.75006866455078
    8. ''''' → logprob: -17.12506866455078
    9. '1' → logprob: -18.62506866455078
    10. 'if' → logprob: -18.87506866455078

Token 228: ' if' (ID: 538)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.07985779643058777
    2. ' if' → logprob: -2.57985782623291
    3. ' }' → logprob: -7.32985782623291
    4. 'if' → logprob: -8.07985782623291
    5. ''' → logprob: -14.95485782623291
    6. '}
' → logprob: -15.32985782623291
    7. ' ' → logprob: -15.45485782623291
    8. '   ' → logprob: -15.45485782623291
    9. '}

' → logprob: -15.57985782623291
    10. ''}' → logprob: -15.57985782623291

Token 229: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.10020699352025986
    2. 'self' → logprob: -2.3502070903778076
    3. ' ' → logprob: -15.350207328796387
    4. '(self' → logprob: -16.85020637512207
    5. '	self' → logprob: -17.85020637512207
    6. ' ' → logprob: -18.10020637512207
    7. '    ' → logprob: -19.60020637512207
    8. '_self' → logprob: -20.35020637512207
    9. '[self' → logprob: -20.60020637512207
    10. ' not' → logprob: -20.85020637512207

Token 230: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.0006302326801232994
    2. 'value' → logprob: -7.5006303787231445
    3. '.' → logprob: -9.500630378723145
    4. ' .' → logprob: -13.125630378723145
    5. ' value' → logprob: -14.875630378723145
    6. ' ' → logprob: -19.250629425048828
    7. '"value' → logprob: -19.500629425048828
    8. '	value' → logprob: -20.000629425048828
    9. 'alue' → logprob: -20.625629425048828
    10. '.val' → logprob: -21.000629425048828

Token 231: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.018150413408875465
    2. 'else' → logprob: -4.018150329589844
    3. ' ' → logprob: -15.018150329589844
    4. '	else' → logprob: -15.893150329589844
    5. '==' → logprob: -17.518150329589844
    6. ' els' → logprob: -18.518150329589844
    7. '_else' → logprob: -18.643150329589844
    8. '  ' → logprob: -19.143150329589844
    9. '   ' → logprob: -19.393150329589844
    10. ' ' → logprob: -19.643150329589844

Token 232: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.029755808413028717
    2. ' '' → logprob: -3.5297558307647705
    3. '"' → logprob: -12.529755592346191
    4. ' ' → logprob: -14.404755592346191
    5. '0' → logprob: -14.654755592346191
    6. '   ' → logprob: -14.904755592346191
    7. '('' → logprob: -15.404755592346191
    8. '`' → logprob: -16.779756546020508
    9. ' ' → logprob: -17.029756546020508
    10. '       ' → logprob: -17.154756546020508

Token 233: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5759457945823669
    2. ''' → logprob: -0.8259457945823669
    3. ' '' → logprob: -12.200945854187012
    4. ' ' → logprob: -13.825945854187012
    5. '"' → logprob: -15.325945854187012
    6. '('' → logprob: -15.825945854187012
    7. '`' → logprob: -17.575944900512695
    8. '   ' → logprob: -18.200944900512695
    9. '{'' → logprob: -18.700944900512695
    10. '
' → logprob: -19.825944900512695

Token 234: ''' (ID: 6)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.002841491252183914
    2. ' }' → logprob: -6.502841472625732
    3. ''}' → logprob: -6.627841472625732
    4. ''' → logprob: -11.37784194946289
    5. '}
' → logprob: -13.00284194946289
    6. '"}' → logprob: -14.25284194946289
    7. '}'' → logprob: -15.12784194946289
    8. '`}' → logprob: -15.37784194946289
    9. '}

' → logprob: -15.75284194946289
    10. '   ' → logprob: -16.37784194946289

Token 235: ' }


' (ID: 8158)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.007619399111717939
    2. ' }' → logprob: -4.882619380950928
    3. '   ' → logprob: -12.257619857788086
    4. '       ' → logprob: -12.382619857788086
    5. '}
' → logprob: -12.507619857788086
    6. '	' → logprob: -15.632619857788086
    7. ' ' → logprob: -16.132619857788086
    8. '    ' → logprob: -16.257619857788086
    9. ' }
' → logprob: -16.257619857788086
    10. '}

' → logprob: -16.632619857788086

Token 236: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05752360075712204
    2. '<|end|>' → logprob: -2.932523488998413
    3. 'class' → logprob: -7.057523727416992
    4. '

' → logprob: -7.557523727416992
    5. '    
' → logprob: -7.807523727416992
    6. '\n' → logprob: -8.307523727416992
    7. '  
' → logprob: -8.932523727416992
    8. '```' → logprob: -9.057523727416992
    9. ' 
' → logprob: -9.182523727416992
    10. '<|end|>' → logprob: -9.307523727416992

Token 237: ' Var' (ID: 18782)
  Prédit: 'Var'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Var' → logprob: -0.16448767483234406
    2. ' Var' → logprob: -1.9144877195358276
    3. 'Variable' → logprob: -6.039487838745117
    4. ' Variable' → logprob: -6.789487838745117
    5. 'Not' → logprob: -8.164487838745117
    6. 'var' → logprob: -8.414487838745117
    7. ' Not' → logprob: -8.539487838745117
    8. '_var' → logprob: -11.039487838745117
    9. 'Bool' → logprob: -11.789487838745117
    10. ' var' → logprob: -11.914487838745117

Token 238: '(B' (ID: 8409)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.026131339371204376
    2. '(B' → logprob: -3.7761313915252686
    3. '('' → logprob: -7.0261311531066895
    4. '(`' → logprob: -7.7761311531066895
    5. '("("' → logprob: -8.401131629943848
    6. '<|end|>' → logprob: -8.401131629943848
    7. '(Name' → logprob: -8.526131629943848
    8. ' (' → logprob: -8.651131629943848
    9. ':' → logprob: -9.026131629943848
    10. ')' → logprob: -9.401131629943848

Token 239: 'ool' (ID: 971)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.339218407869339
    2. 'a' → logprob: -1.8392183780670166
    3. '(' → logprob: -2.5892183780670166
    4. '('' → logprob: -3.3392183780670166
    5. ')' → logprob: -5.089218616485596
    6. 'al' → logprob: -6.339218616485596
    7. '(a' → logprob: -6.339218616485596
    8. 'ool' → logprob: -6.339218616485596
    9. 'o' → logprob: -6.589218616485596
    10. ')(' → logprob: -7.214218616485596

Token 240: 'Expr' (ID: 21037)
  Prédit: 'Expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Expr' → logprob: -0.0075093829073011875
    2. ')' → logprob: -5.257509231567383
    3. '('' → logprob: -6.757509231567383
    4. '(' → logprob: -7.382509231567383
    5. 'Express' → logprob: -9.132509231567383
    6. 'Expression' → logprob: -9.257509231567383
    7. 'E' → logprob: -9.882509231567383
    8. '   ' → logprob: -10.007509231567383
    9. ' (' → logprob: -10.257509231567383
    10. 'Name' → logprob: -10.507509231567383

Token 241: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5761333107948303
    2. '):' → logprob: -0.8261333107948303
    3. '):
' → logprob: -9.326133728027344
    4. '   ' → logprob: -10.201133728027344
    5. '):

' → logprob: -11.201133728027344
    6. ':' → logprob: -11.201133728027344
    7. ',' → logprob: -11.576133728027344
    8. '(' → logprob: -11.576133728027344
    9. ')' → logprob: -12.076133728027344
    10. ' ):' → logprob: -12.451133728027344

Token 242: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6964832544326782
    2. ':' → logprob: -1.0714832544326782
    3. ':
' → logprob: -2.9464831352233887
    4. '):
' → logprob: -3.1964831352233887
    5. '__' → logprob: -3.3214831352233887
    6. '<|end|>' → logprob: -4.321483135223389
    7. '):' → logprob: -4.446483135223389
    8. '(' → logprob: -6.696483135223389
    9. ')' → logprob: -7.321483135223389
    10. ',' → logprob: -8.196483612060547

Token 243: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' (adapté à ' __') → logprob: -0.0017101633129641414
    2. ' __' → logprob: -6.376709938049316
    3. '   ' → logprob: -12.126709938049316
    4. '_slots' → logprob: -14.001709938049316
    5. '___' → logprob: -14.376709938049316
    6. '.__' → logprob: -14.501709938049316
    7. 'slots' → logprob: -15.876709938049316
    8. ' slots' → logprob: -16.251710891723633
    9. '(__' → logprob: -16.376710891723633
    10. '____' → logprob: -16.751710891723633

Token 244: 'slots' (ID: 101916)
  Prédit: 'slots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'slots' → logprob: -5.8961017202818766e-05
    2. '_slots' → logprob: -9.750059127807617
    3. ' slots' → logprob: -15.125059127807617
    4. 'sl' → logprob: -15.375059127807617
    5. '__' → logprob: -16.125059127807617
    6. 'slot' → logprob: -16.875059127807617
    7. 'Slots' → logprob: -18.875059127807617
    8. 's' → logprob: -19.250059127807617
    9. '_sl' → logprob: -20.625059127807617
    10. 'tabs' → logprob: -20.750059127807617

Token 245: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0008909751777537167
    2. '=' → logprob: -7.375891208648682
    3. ' =' → logprob: -8.250890731811523
    4. '_' → logprob: -13.375890731811523
    5. '___' → logprob: -14.375890731811523
    6. '__('' → logprob: -14.625890731811523
    7. '=('' → logprob: -14.750890731811523
    8. '____' → logprob: -16.375890731811523
    9. '_=' → logprob: -16.375890731811523
    10. '=['' → logprob: -16.750890731811523

Token 246: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023252464830875397
    2. '=' → logprob: -3.773252487182617
    3. '=('' → logprob: -11.898252487182617
    4. '=['' → logprob: -16.273252487182617
    5. ' ' → logprob: -16.273252487182617
    6. '('' → logprob: -17.523252487182617
    7. '   ' → logprob: -17.523252487182617
    8. '=("' → logprob: -17.773252487182617
    9. '	' → logprob: -19.648252487182617
    10. '＝' → logprob: -19.773252487182617

Token 247: ' ('' (ID: 9906)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.00021140782337170094
    2. ' ('' → logprob: -8.500211715698242
    3. '('_' → logprob: -11.875211715698242
    4. '('__' → logprob: -14.250211715698242
    5. '(' → logprob: -16.250211715698242
    6. '['' → logprob: -16.750211715698242
    7. ''s' → logprob: -16.875211715698242
    8. ''a' → logprob: -18.875211715698242
    9. ''value' → logprob: -19.125211715698242
    10. ''name' → logprob: -19.625211715698242

Token 248: 'name' (ID: 897)
  Prédit: 'name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'name' → logprob: -0.0029526203870773315
    2. ''name' → logprob: -5.877952575683594
    3. ' name' → logprob: -9.002952575683594
    4. ''' → logprob: -11.252952575683594
    5. '"name' → logprob: -12.002952575683594
    6. ''s' → logprob: -13.752952575683594
    7. '   ' → logprob: -14.002952575683594
    8. ' ' → logprob: -14.377952575683594
    9. '	name' → logprob: -14.627952575683594
    10. ' '' → logprob: -14.877952575683594

Token 249: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.00018732868193183094
    2. '')' → logprob: -8.625186920166016
    3. ''' → logprob: -12.875186920166016
    4. '','' → logprob: -13.250186920166016
    5. ',' → logprob: -13.750186920166016
    6. '',
' → logprob: -14.250186920166016
    7. ' ',' → logprob: -14.375186920166016
    8. '=',' → logprob: -14.500186920166016
    9. '=' → logprob: -15.750186920166016
    10. ')' → logprob: -15.875186920166016

Token 250: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04901799187064171
    2. ')

' → logprob: -3.049017906188965
    3. ')
' → logprob: -8.424017906188965
    4. ''' → logprob: -9.174017906188965
    5. ''name' → logprob: -9.674017906188965
    6. '')' → logprob: -11.049017906188965
    7. ''value' → logprob: -11.049017906188965
    8. ' '' → logprob: -12.674017906188965
    9. 'name' → logprob: -12.924017906188965
    10. ' )' → logprob: -13.174017906188965

Token 251: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.020548192784190178
    2. '   ' → logprob: -4.145548343658447
    3. '<|end|>' → logprob: -6.520548343658447
    4. 'def' → logprob: -6.895548343658447
    5. '    
' → logprob: -6.895548343658447
    6. '  
' → logprob: -8.645547866821289
    7. '

' → logprob: -8.770547866821289
    8. ' ' → logprob: -8.895547866821289
    9. '<|end|>' → logprob: -8.895547866821289
    10. ' 
' → logprob: -9.020547866821289

Token 252: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0045097507536411285
    2. '
' → logprob: -6.129509925842285
    3. ' def' → logprob: -6.754509925842285
    4. 'name' → logprob: -6.879509925842285
    5. '   ' → logprob: -9.004509925842285
    6. ' name' → logprob: -13.379509925842285
    7. '    
' → logprob: -14.129509925842285
    8. '	def' → logprob: -14.129509925842285
    9. '

' → logprob: -14.254509925842285
    10. ' ' → logprob: -14.504509925842285

Token 253: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.011674256063997746
    2. '__' → logprob: -4.886674404144287
    3. ' def' → logprob: -5.636674404144287
    4. 'def' → logprob: -7.761674404144287
    5. '_init' → logprob: -10.511673927307129
    6. 'init' → logprob: -10.761673927307129
    7. ' name' → logprob: -11.761673927307129
    8. ' init' → logprob: -12.011673927307129
    9. 'name' → logprob: -12.386673927307129
    10. ' ' → logprob: -14.011673927307129

Token 254: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0019289902411401272
    2. 'slots' → logprob: -6.251928806304932
    3. '_init' → logprob: -15.75192928314209
    4. 'slot' → logprob: -16.376928329467773
    5. ' init' → logprob: -16.876928329467773
    6. '_slots' → logprob: -17.376928329467773
    7. 'sl' → logprob: -17.751928329467773
    8. ' slots' → logprob: -17.876928329467773
    9. '(init' → logprob: -18.251928329467773
    10. '	init' → logprob: -18.251928329467773

Token 255: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.08977515995502472
    2. '(self' → logprob: -2.4647750854492188
    3. '__' → logprob: -7.589775085449219
    4. '(' → logprob: -8.964775085449219
    5. ' (' → logprob: -9.214775085449219
    6. '__(
' → logprob: -9.839775085449219
    7. 'self' → logprob: -10.839775085449219
    8. '_(' → logprob: -11.214775085449219
    9. '__((' → logprob: -12.464775085449219
    10. ',' → logprob: -13.089775085449219

Token 256: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0011714138090610504
    2. ' self' → logprob: -6.751171588897705
    3. '(self' → logprob: -14.501171112060547
    4. '   ' → logprob: -15.376171112060547
    5. ',' → logprob: -15.626171112060547
    6. 'name' → logprob: -16.126171112060547
    7. '	self' → logprob: -17.001171112060547
    8. ',self' → logprob: -17.001171112060547
    9. '       ' → logprob: -17.126171112060547
    10. ' ' → logprob: -18.126171112060547

Token 257: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.050743285566568375
    2. 'name' → logprob: -3.675743341445923
    3. ' (' → logprob: -4.675743103027344
    4. ' name' → logprob: -5.175743103027344
    5. ' ,' → logprob: -5.300743103027344
    6. 'self' → logprob: -6.425743103027344
    7. '(' → logprob: -7.175743103027344
    8. '(name' → logprob: -7.425743103027344
    9. '(self' → logprob: -7.925743103027344
    10. '   ' → logprob: -8.175743103027344

Token 258: ' name' (ID: 1308)
  Prédit: 'name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'name' → logprob: -0.0028115289751440287
    2. ' name' → logprob: -5.877811431884766
    3. '   ' → logprob: -12.252811431884766
    4. '	name' → logprob: -14.252811431884766
    5. '
' → logprob: -15.002811431884766
    6. ' ' → logprob: -15.002811431884766
    7. '    ' → logprob: -15.377811431884766
    8. '       ' → logprob: -16.002811431884766
    9. '  ' → logprob: -16.627811431884766
    10. '           ' → logprob: -17.502811431884766

Token 259: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2463124841451645
    2. '):' → logprob: -1.9963124990463257
    3. ':' → logprob: -2.996312379837036
    4. '):
' → logprob: -3.621312379837036
    5. '   ' → logprob: -6.121312618255615
    6. '<|end|>' → logprob: -7.121312618255615
    7. ' )' → logprob: -7.371312618255615
    8. ',' → logprob: -7.496312618255615
    9. '=' → logprob: -7.871312618255615
    10. '='' → logprob: -8.371312141418457

Token 260: ' str' (ID: 989)
  Prédit: 'name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'name' → logprob: -0.6852959394454956
    2. 'str' → logprob: -1.5602959394454956
    3. ' name' → logprob: -1.6852959394454956
    4. ' str' → logprob: -2.310296058654785
    5. ''name' → logprob: -7.060296058654785
    6. ')' → logprob: -7.810296058654785
    7. '   ' → logprob: -10.435296058654785
    8. ' ' → logprob: -10.935296058654785
    9. ' '' → logprob: -11.310296058654785
    10. '')' → logprob: -11.810296058654785

Token 261: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02059818245470524
    2. ')' → logprob: -4.020598411560059
    3. '):
' → logprob: -6.020598411560059
    4. ' ):' → logprob: -11.520598411560059
    5. ':' → logprob: -12.770598411560059
    6. '   ' → logprob: -13.270598411560059
    7. ''):' → logprob: -14.145598411560059
    8. '):
' → logprob: -14.395598411560059
    9. ' )' → logprob: -14.645598411560059
    10. '):

' → logprob: -15.895598411560059

Token 262: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1720961332321167
    2. ' self' → logprob: -2.4220962524414062
    3. 'self' → logprob: -2.6720962524414062
    4. '   ' → logprob: -8.922096252441406
    5. '	self' → logprob: -9.047096252441406
    6. ' ' → logprob: -12.922096252441406
    7. ' ' → logprob: -13.297096252441406
    8. '	' → logprob: -13.922096252441406
    9. '<|end|>' → logprob: -14.047096252441406
    10. '      ' → logprob: -14.672096252441406

Token 263: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.07890520989894867
    2. ' self' → logprob: -2.5789051055908203
    3. '       ' → logprob: -11.95390510559082
    4. '   ' → logprob: -12.07890510559082
    5. 'name' → logprob: -12.95390510559082
    6. '	self' → logprob: -13.95390510559082
    7. ' name' → logprob: -16.70390510559082
    8. ' ' → logprob: -17.07890510559082
    9. '    ' → logprob: -17.57890510559082
    10. '  ' → logprob: -19.57890510559082

Token 264: '.name' (ID: 4834)
  Prédit: '.name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.name' → logprob: -0.011491270735859871
    2. '.' → logprob: -4.886491298675537
    3. ' name' → logprob: -5.886491298675537
    4. ' .' → logprob: -7.511491298675537
    5. 'name' → logprob: -7.511491298675537
    6. '=name' → logprob: -13.136490821838379
    7. '	name' → logprob: -13.386490821838379
    8. ' =' → logprob: -13.886490821838379
    9. ' ' → logprob: -14.136490821838379
    10. '=' → logprob: -14.511490821838379

Token 265: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6933472156524658
    2. ' =' → logprob: -0.6933472156524658
    3. '=name' → logprob: -8.568346977233887
    4. ')' → logprob: -12.193346977233887
    5. '<|end|>' → logprob: -13.568346977233887
    6. ' ' → logprob: -13.818346977233887
    7. ' =
' → logprob: -14.318346977233887
    8. '   ' → logprob: -14.818346977233887
    9. ')=' → logprob: -14.943346977233887
    10. 'name' → logprob: -15.193346977233887

Token 266: ' name' (ID: 1308)
  Prédit: 'name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'name' → logprob: -0.12692831456661224
    2. ' name' → logprob: -2.1269283294677734
    3. '	name' → logprob: -15.876928329467773
    4. ' ' → logprob: -16.501928329467773
    5. ''name' → logprob: -16.626928329467773
    6. '(name' → logprob: -17.751928329467773
    7. ' ' → logprob: -18.001928329467773
    8. 'nam' → logprob: -18.126928329467773
    9. '"name' → logprob: -18.251928329467773
    10. '<|end|>' → logprob: -19.376928329467773

Token 267: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 268: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07109580188989639
    2. '<|end|>' → logprob: -2.9460957050323486
    3. 'def' → logprob: -4.821095943450928
    4. '<|end|>' → logprob: -5.946095943450928
    5. '
' → logprob: -6.321095943450928
    6. ')' → logprob: -6.696095943450928
    7. ' def' → logprob: -6.946095943450928
    8. ' ' → logprob: -7.696095943450928
    9. '```' → logprob: -8.32109546661377
    10. '    
' → logprob: -8.69609546661377

Token 269: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0004915529862046242
    2. ' def' → logprob: -7.875491619110107
    3. '   ' → logprob: -9.12549114227295
    4. '
' → logprob: -14.37549114227295
    5. ' ' → logprob: -14.37549114227295
    6. '	def' → logprob: -14.75049114227295
    7. '    
' → logprob: -15.50049114227295
    8. ')' → logprob: -15.50049114227295
    9. 'self' → logprob: -15.62549114227295
    10. '       ' → logprob: -16.125492095947266

Token 270: ' evaluate' (ID: 21646)
  Prédit: 'evaluate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'evaluate' → logprob: -0.47410520911216736
    2. ' evaluate' → logprob: -0.9741052389144897
    3. 'def' → logprob: -10.849104881286621
    4. ' def' → logprob: -12.224104881286621
    5. '.evaluate' → logprob: -12.599104881286621
    6. 'Evaluate' → logprob: -15.974104881286621
    7. ' ' → logprob: -16.224105834960938
    8. '   ' → logprob: -16.974105834960938
    9. 'e' → logprob: -17.099105834960938
    10. 'canonical' → logprob: -17.349105834960938

Token 271: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.023333178833127022
    2. '(' → logprob: -3.7733330726623535
    3. ' (' → logprob: -10.023333549499512
    4. ',' → logprob: -11.273333549499512
    5. '(env' → logprob: -11.398333549499512
    6. '(
' → logprob: -11.398333549499512
    7. 'self' → logprob: -12.523333549499512
    8. '(s' → logprob: -13.648333549499512
    9. '   ' → logprob: -14.148333549499512
    10. ' ' → logprob: -14.523333549499512

Token 272: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5779698491096497
    2. '(env' → logprob: -1.5779697895050049
    3. ',' → logprob: -1.9529697895050049
    4. '(' → logprob: -2.577969789505005
    5. ' (' → logprob: -4.327970027923584
    6. ')' → logprob: -7.202970027923584
    7. ' ,' → logprob: -8.077969551086426
    8. 'self' → logprob: -8.952969551086426
    9. '(environment' → logprob: -9.327969551086426
    10. '   ' → logprob: -9.327969551086426

Token 273: ' env' (ID: 9744)
  Prédit: ' env'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' env' → logprob: -0.31326621770858765
    2. 'env' → logprob: -1.3132662773132324
    3. '(env' → logprob: -12.563265800476074
    4. 'self' → logprob: -14.563265800476074
    5. '	env' → logprob: -15.063265800476074
    6. '.env' → logprob: -15.563265800476074
    7. 'environment' → logprob: -16.81326675415039
    8. ' self' → logprob: -16.93826675415039
    9. ' envi' → logprob: -17.93826675415039
    10. '_env' → logprob: -18.43826675415039

Token 274: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08872633427381516
    2. '[' → logprob: -2.838726282119751
    3. '.get' → logprob: -4.96372652053833
    4. ':' → logprob: -5.33872652053833
    5. ' ' → logprob: -5.58872652053833
    6. '   ' → logprob: -5.83872652053833
    7. ',' → logprob: -6.21372652053833
    8. '<|end|>' → logprob: -6.33872652053833
    9. ' )' → logprob: -6.46372652053833
    10. '.setdefault' → logprob: -7.08872652053833

Token 275: ' dict' (ID: 11878)
  Prédit: ' env'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' env' → logprob: -0.10020915418863297
    2. 'env' → logprob: -2.3502092361450195
    3. '(env' → logprob: -12.97520923614502
    4. ' ' → logprob: -16.475208282470703
    5. ' dict' → logprob: -17.225208282470703
    6. '	env' → logprob: -17.475208282470703
    7. 'dict' → logprob: -17.600208282470703
    8. ' var' → logprob: -17.725208282470703
    9. ')' → logprob: -17.975208282470703
    10. '.env' → logprob: -17.975208282470703

Token 276: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00028410006780177355
    2. '):' → logprob: -8.875284194946289
    3. '):
' → logprob: -9.000284194946289
    4. ' )' → logprob: -11.000284194946289
    5. '   ' → logprob: -12.875284194946289
    6. ')
' → logprob: -14.500284194946289
    7. '):

' → logprob: -15.250284194946289
    8. '       ' → logprob: -15.625284194946289
    9. ':' → logprob: -16.50028419494629
    10. '):
' → logprob: -16.50028419494629

Token 277: ' ->' (ID: 2747)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09751992672681808
    2. ':' → logprob: -2.972519874572754
    3. '       ' → logprob: -4.222519874572754
    4. ')' → logprob: -4.347519874572754
    5. '   ' → logprob: -4.847519874572754
    6. 'return' → logprob: -6.472519874572754
    7. ',' → logprob: -6.472519874572754
    8. ' return' → logprob: -6.597519874572754
    9. '.get' → logprob: -7.597519874572754
    10. ':return' → logprob: -8.097519874572754

Token 278: ' bool' (ID: 3792)
  Prédit: ' env'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' env' → logprob: -0.0254038255661726
    2. 'env' → logprob: -3.7754037380218506
    3. ' bool' → logprob: -6.27540397644043
    4. 'bool' → logprob: -8.27540397644043
    5. '(env' → logprob: -11.65040397644043
    6. ' return' → logprob: -12.77540397644043
    7. ' True' → logprob: -12.77540397644043
    8. '.env' → logprob: -13.77540397644043
    9. ' get' → logprob: -13.77540397644043
    10. 'return' → logprob: -14.40040397644043

Token 279: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08172905445098877
    2. '       ' → logprob: -2.956728935241699
    3. ':
' → logprob: -3.706728935241699
    4. '[' → logprob: -6.956728935241699
    5. 'return' → logprob: -7.956728935241699
    6. ':return' → logprob: -7.956728935241699
    7. '   ' → logprob: -8.9567289352417
    8. ' return' → logprob: -10.0817289352417
    9. '):' → logprob: -10.8317289352417
    10. '[
' → logprob: -10.8317289352417

Token 280: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032175222877413034
    2. 'return' → logprob: -6.128217697143555
    3. ' return' → logprob: -6.878217697143555
    4. '   ' → logprob: -13.378217697143555
    5. '           ' → logprob: -16.253217697143555
    6. '      ' → logprob: -16.753217697143555
    7. '	return' → logprob: -16.753217697143555
    8. '	' → logprob: -17.003217697143555
    9. 'eturn' → logprob: -18.003217697143555
    10. '        
' → logprob: -18.003217697143555

Token 281: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.014190888963639736
    2. ' return' → logprob: -4.514190673828125
    3. '       ' → logprob: -5.764190673828125
    4. '	return' → logprob: -15.639190673828125
    5. '   ' → logprob: -16.514190673828125
    6. 'eturn' → logprob: -19.389190673828125
    7. ' ' → logprob: -19.889190673828125
    8. '{return' → logprob: -20.389190673828125
    9. '	' → logprob: -20.514190673828125
    10. 'try' → logprob: -20.639190673828125

Token 282: ' env' (ID: 9744)
  Prédit: ' env'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' env' → logprob: -0.003178306156769395
    2. 'env' → logprob: -5.753178119659424
    3. '(env' → logprob: -14.503178596496582
    4. '	env' → logprob: -15.628178596496582
    5. ' ' → logprob: -17.003177642822266
    6. '.env' → logprob: -18.003177642822266
    7. ' envi' → logprob: -18.128177642822266
    8. ' en' → logprob: -18.503177642822266
    9. '_env' → logprob: -18.753177642822266
    10. '/env' → logprob: -19.878177642822266

Token 283: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.00016039233014453202
    2. '[' → logprob: -8.750160217285156
    3. 'self' → logprob: -13.875160217285156
    4. '.get' → logprob: -14.000160217285156
    5. ' self' → logprob: -16.750160217285156
    6. '[get' → logprob: -18.000160217285156
    7. '(self' → logprob: -19.250160217285156
    8. ' [' → logprob: -19.750160217285156
    9. '[
' → logprob: -19.750160217285156
    10. '	self' → logprob: -19.875160217285156

Token 284: '.name' (ID: 4834)
  Prédit: '.name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.name' → logprob: -0.0005077573587186635
    2. '.' → logprob: -7.625507831573486
    3. ' .' → logprob: -11.125507354736328
    4. 'name' → logprob: -12.375507354736328
    5. ' ' → logprob: -15.625507354736328
    6. '[name' → logprob: -15.750507354736328
    7. '.n' → logprob: -15.750507354736328
    8. ':name' → logprob: -16.500507354736328
    9. ' name' → logprob: -16.625507354736328
    10. ''name' → logprob: -17.000507354736328

Token 285: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00020544764993246645
    2. ' ]' → logprob: -8.500205039978027
    3. ']
' → logprob: -14.500205039978027
    4. '']' → logprob: -14.625205039978027
    5. '}' → logprob: -15.000205039978027
    6. ')' → logprob: -15.500205039978027
    7. '<|end|>' → logprob: -15.750205039978027
    8. '[' → logprob: -15.875205039978027
    9. '   ' → logprob: -17.250205993652344
    10. '"]' → logprob: -17.875205993652344

Token 286: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43532896041870117
    2. '<|end|>' → logprob: -1.1853289604187012
    3. '```' → logprob: -4.185328960418701
    4. '
' → logprob: -4.185328960418701
    5. '    
' → logprob: -4.560328960418701
    6. '<|end|>' → logprob: -5.935328960418701
    7. '  
' → logprob: -6.310328960418701
    8. 'def' → logprob: -7.310328960418701
    9. ' 
' → logprob: -7.810328960418701
    10. ' ' → logprob: -8.56032943725586

Token 287: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.009513345547020435
    2. '   ' → logprob: -4.7595133781433105
    3. ' def' → logprob: -7.6345133781433105
    4. '
' → logprob: -8.134512901306152
    5. '    
' → logprob: -9.509512901306152
    6. '```' → logprob: -10.384512901306152
    7. '  
' → logprob: -12.259512901306152
    8. ' 
' → logprob: -12.759512901306152
    9. ' ' → logprob: -12.884512901306152
    10. '

' → logprob: -13.384512901306152

Token 288: ' canonical' (ID: 91323)
  Prédit: 'canonical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'canonical' → logprob: -0.008620839565992355
    2. ' canonical' → logprob: -4.758620738983154
    3. 'def' → logprob: -12.008621215820312
    4. 'can' → logprob: -16.133621215820312
    5. 'c' → logprob: -16.758621215820312
    6. 'Canonical' → logprob: -16.883621215820312
    7. ' def' → logprob: -18.258621215820312
    8. 'class' → logprob: -19.508621215820312
    9. 'canon' → logprob: -19.633621215820312
    10. 'camel' → logprob: -20.133621215820312

Token 289: '_forms' (ID: 176505)
  Prédit: '_forms'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_forms' → logprob: -5.512236498361744e-07
    2. '_form' → logprob: -15.500000953674316
    3. '_' → logprob: -16.0
    4. '_formats' → logprob: -16.0
    5. ' _' → logprob: -17.0
    6. '_f' → logprob: -17.375
    7. '_parts' → logprob: -18.375
    8. '_faces' → logprob: -18.375
    9. '_spaces' → logprob: -19.5
    10. '_sets' → logprob: -19.75

Token 290: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0009343287092633545
    2. '(' → logprob: -7.00093412399292
    3. '()' → logprob: -11.125934600830078
    4. '   ' → logprob: -12.750934600830078
    5. ' (' → logprob: -13.000934600830078
    6. '(
' → logprob: -14.000934600830078
    7. '(s' → logprob: -14.250934600830078
    8. 'self' → logprob: -14.375934600830078
    9. '=' → logprob: -15.375934600830078
    10. ' =' → logprob: -15.375934600830078

Token 291: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17366273701190948
    2. '()' → logprob: -2.0486626625061035
    3. '(self' → logprob: -3.6736626625061035
    4. '(' → logprob: -5.6736626625061035
    5. 'self' → logprob: -6.7986626625061035
    6. '   ' → logprob: -8.173663139343262
    7. 'def' → logprob: -9.798663139343262
    8. ' )' → logprob: -10.048663139343262
    9. ' ' → logprob: -10.173663139343262
    10. '=' → logprob: -10.173663139343262

Token 292: ' ->' (ID: 2747)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.43235066533088684
    2. '(self' → logprob: -1.3073506355285645
    3. '()' → logprob: -2.5573506355285645
    4. ' ->' → logprob: -6.9323506355285645
    5. '->' → logprob: -7.6823506355285645
    6. '(
' → logprob: -7.8073506355285645
    7. '   ' → logprob: -7.9323506355285645
    8. ' (' → logprob: -8.182351112365723
    9. 'return' → logprob: -8.932351112365723
    10. '=' → logprob: -9.682351112365723

Token 293: ' set' (ID: 920)
  Prédit: ' {'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.691491425037384
    2. ' set' → logprob: -0.941491425037384
    3. 'set' → logprob: -2.6914913654327393
    4. '{' → logprob: -3.1914913654327393
    5. ' {'' → logprob: -9.19149112701416
    6. ' return' → logprob: -10.56649112701416
    7. ' ' → logprob: -10.56649112701416
    8. '{return' → logprob: -10.56649112701416
    9. ' {"' → logprob: -11.31649112701416
    10. ' {
' → logprob: -11.44149112701416

Token 294: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.48650485277175903
    2. '(' → logprob: -1.2365047931671143
    3. '():' → logprob: -2.4865047931671143
    4. '(
' → logprob: -5.236505031585693
    5. '()' → logprob: -5.611505031585693
    6. '():
' → logprob: -6.611505031585693
    7. ':' → logprob: -7.111505031585693
    8. '       ' → logprob: -8.361504554748535
    9. '   ' → logprob: -8.736504554748535
    10. 'return' → logprob: -9.861504554748535

Token 295: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11276692897081375
    2. '{' → logprob: -2.612766981124878
    3. ' {' → logprob: -3.612766981124878
    4. '{return' → logprob: -5.362766742706299
    5. ' return' → logprob: -6.737766742706299
    6. 'return' → logprob: -7.737766742706299
    7. '{"' → logprob: -11.487767219543457
    8. '   ' → logprob: -12.487767219543457
    9. '{s' → logprob: -12.737767219543457
    10. '{
' → logprob: -12.987767219543457

Token 296: ' #' (ID: 1069)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.23490412533283234
    2. '{return' → logprob: -1.734904170036316
    3. ' {' → logprob: -3.4849040508270264
    4. 'return' → logprob: -6.4849042892456055
    5. ' return' → logprob: -7.4849042892456055
    6. '       ' → logprob: -8.734904289245605
    7. '{name' → logprob: -10.484904289245605
    8. '{
' → logprob: -13.484904289245605
    9. '{s' → logprob: -14.109904289245605
    10. '{"' → logprob: -14.734904289245605

Token 297: ' single' (ID: 4590)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.014573716558516026
    2. ' return' → logprob: -4.264573574066162
    3. '       ' → logprob: -8.51457405090332
    4. '{return' → logprob: -8.51457405090332
    5. '{' → logprob: -11.76457405090332
    6. '   ' → logprob: -13.76457405090332
    7. ' {' → logprob: -15.38957405090332
    8. '	return' → logprob: -18.01457405090332
    9. '           ' → logprob: -18.01457405090332
    10. '{name' → logprob: -18.26457405090332

Token 298: ' variable' (ID: 11076)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.011257904581725597
    2. '{return' → logprob: -4.761258125305176
    3. ' {' → logprob: -6.011258125305176
    4. '{name' → logprob: -9.011258125305176
    5. '{s' → logprob: -10.386258125305176
    6. 'return' → logprob: -10.761258125305176
    7. '{
' → logprob: -11.261258125305176
    8. ' return' → logprob: -13.761258125305176
    9. '{x' → logprob: -15.386258125305176
    10. 'self' → logprob: -15.386258125305176

Token 299: ' name' (ID: 1308)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.09174072742462158
    2. '{return' → logprob: -2.841740608215332
    3. 'return' → logprob: -4.341740608215332
    4. '       ' → logprob: -4.341740608215332
    5. ' {' → logprob: -6.341740608215332
    6. '()' → logprob: -7.341740608215332
    7. ' return' → logprob: -7.466740608215332
    8. '{
' → logprob: -8.591740608215332
    9. ':return' → logprob: -9.966740608215332
    10. '   ' → logprob: -10.466740608215332

Token 300: ' as' (ID: 472)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.05096309259533882
    2. '{return' → logprob: -3.5509631633758545
    3. ' {' → logprob: -4.425962924957275
    4. '       ' → logprob: -4.800962924957275
    5. 'return' → logprob: -7.425962924957275
    6. ' return' → logprob: -9.175963401794434
    7. '{s' → logprob: -10.050963401794434
    8. '{"' → logprob: -10.550963401794434
    9. '{
' → logprob: -11.425963401794434
    10. '{name' → logprob: -11.425963401794434

Token 301: ' is' (ID: 382)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.13115234673023224
    2. ' {' → logprob: -2.131152391433716
    3. '{return' → logprob: -5.631152153015137
    4. 'return' → logprob: -8.506152153015137
    5. '{name' → logprob: -8.756152153015137
    6. 'fro' → logprob: -9.006152153015137
    7. 'self' → logprob: -10.381152153015137
    8. '{s' → logprob: -10.506152153015137
    9. '{x' → logprob: -10.756152153015137
    10. ' return' → logprob: -11.006152153015137

Token 302: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.043390896171331406
    2. 'return' → logprob: -3.793390989303589
    3. '{' → logprob: -4.29339075088501
    4. ' return' → logprob: -5.66839075088501
    5. '{return' → logprob: -6.29339075088501
    6. ' {' → logprob: -7.16839075088501
    7. '{
' → logprob: -10.168391227722168
    8. '   ' → logprob: -10.543391227722168
    9. '<|end|>' → logprob: -10.543391227722168
    10. ':return' → logprob: -10.918391227722168

Token 303: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0031578729394823313
    2. ' return' → logprob: -6.253158092498779
    3. 'return' → logprob: -6.878158092498779
    4. '{' → logprob: -8.878157615661621
    5. '{return' → logprob: -10.128157615661621
    6. ' {' → logprob: -11.003157615661621
    7. '{"' → logprob: -14.753157615661621
    8. ',' → logprob: -14.753157615661621
    9. '	return' → logprob: -14.878157615661621
    10. '{
' → logprob: -15.003157615661621

Token 304: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.11386048793792725
    2. '{return' → logprob: -2.613860607147217
    3. '{' → logprob: -3.613860607147217
    4. ' return' → logprob: -5.113860607147217
    5. '       ' → logprob: -6.613860607147217
    6. ' {' → logprob: -9.863860130310059
    7. '{
' → logprob: -11.488860130310059
    8. '	return' → logprob: -14.363860130310059
    9. '{name' → logprob: -14.363860130310059
    10. '{"' → logprob: -14.363860130310059

Token 305: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.1602250337600708
    2. ' {' → logprob: -1.9102250337600708
    3. '       ' → logprob: -14.660224914550781
    4. ' ' → logprob: -15.535224914550781
    5. '{name' → logprob: -16.03522491455078
    6. '   ' → logprob: -16.28522491455078
    7. '{s' → logprob: -17.16022491455078
    8. '{return' → logprob: -17.66022491455078
    9. ' ' → logprob: -18.78522491455078
    10. '{x' → logprob: -19.16022491455078

Token 306: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.003178544342517853
    2. ' self' → logprob: -5.753178596496582
    3. 'f' → logprob: -14.503178596496582
    4. '{' → logprob: -15.503178596496582
    5. ' f' → logprob: -16.878177642822266
    6. '(self' → logprob: -16.878177642822266
    7. '   ' → logprob: -17.503177642822266
    8. '       ' → logprob: -17.503177642822266
    9. '           ' → logprob: -17.753177642822266
    10. '	self' → logprob: -19.003177642822266

Token 307: '.name' (ID: 4834)
  Prédit: '.name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.name' → logprob: -3.7697225252486533e-06
    2. '.' → logprob: -12.750003814697266
    3. ' .' → logprob: -14.375003814697266
    4. 'name' → logprob: -15.375003814697266
    5. '.n' → logprob: -17.000003814697266
    6. '.names' → logprob: -18.375003814697266
    7. '.value' → logprob: -18.750003814697266
    8. ').' → logprob: -19.000003814697266
    9. ':name' → logprob: -19.125003814697266
    10. '`.' → logprob: -19.125003814697266

Token 308: '}


' (ID: 8751)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.0015217645559459925
    2. ' }' → logprob: -6.501521587371826
    3. '       ' → logprob: -11.626522064208984
    4. '   ' → logprob: -11.626522064208984
    5. '}
' → logprob: -13.626522064208984
    6. ',' → logprob: -16.251522064208984
    7. ')' → logprob: -16.251522064208984
    8. '	' → logprob: -17.126522064208984
    9. '}

' → logprob: -17.376522064208984
    10. '    ' → logprob: -17.376522064208984

Token 309: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.046277277171611786
    2. '
' → logprob: -3.1712772846221924
    3. '

' → logprob: -6.296277046203613
    4. '<|end|>' → logprob: -6.671277046203613
    5. ' class' → logprob: -9.671277046203613
    6. '


' → logprob: -10.046277046203613
    7. '<class' → logprob: -10.921277046203613
    8. '<|end|>' → logprob: -11.671277046203613
    9. '```' → logprob: -12.421277046203613
    10. ' 
' → logprob: -12.671277046203613

Token 310: ' Not' (ID: 4037)
  Prédit: 'Not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Not' → logprob: -0.2526395618915558
    2. ' Not' → logprob: -1.5026395320892334
    3. 'And' → logprob: -7.3776397705078125
    4. ' And' → logprob: -10.252639770507812
    5. 'Neg' → logprob: -10.627639770507812
    6. '_Not' → logprob: -11.502639770507812
    7. '(Not' → logprob: -12.627639770507812
    8. ' Neg' → logprob: -12.877639770507812
    9. 'NOT' → logprob: -13.252639770507812
    10. '_not' → logprob: -13.252639770507812

Token 311: '(B' (ID: 8409)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.313603013753891
    2. '(B' → logprob: -1.3136030435562134
    3. ' (' → logprob: -8.688603401184082
    4. '("("' → logprob: -9.688603401184082
    5. '((' → logprob: -10.313603401184082
    6. '(Box' → logprob: -10.938603401184082
    7. '(Boolean' → logprob: -11.688603401184082
    8. '(`' → logprob: -11.688603401184082
    9. '(Void' → logprob: -12.188603401184082
    10. '('' → logprob: -12.188603401184082

Token 312: 'ool' (ID: 971)
  Prédit: 'ool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ool' → logprob: -0.00010640407708706334
    2. 'Bool' → logprob: -9.500106811523438
    3. '(' → logprob: -11.500106811523438
    4. 'o' → logprob: -11.625106811523438
    5. 'oolean' → logprob: -12.250106811523438
    6. 'oo' → logprob: -12.750106811523438
    7. 'OOL' → logprob: -13.000106811523438
    8. 'Expr' → logprob: -14.500106811523438
    9. 'ools' → logprob: -14.625106811523438
    10. 'ol' → logprob: -15.125106811523438

Token 313: 'Expr' (ID: 21037)
  Prédit: 'Expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Expr' → logprob: -0.0013777334243059158
    2. '(' → logprob: -6.626377582550049
    3. ')' → logprob: -10.251378059387207
    4. ' (' → logprob: -12.126378059387207
    5. '   ' → logprob: -12.876378059387207
    6. ' Expr' → logprob: -13.126378059387207
    7. ' ' → logprob: -13.626378059387207
    8. ')(' → logprob: -14.001378059387207
    9. '(expr' → logprob: -14.126378059387207
    10. 'Express' → logprob: -14.251378059387207

Token 314: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.020704323425889015
    2. '):
' → logprob: -3.8957042694091797
    3. '   ' → logprob: -9.14570426940918
    4. ')' → logprob: -10.64570426940918
    5. '(' → logprob: -11.64570426940918
    6. '):

' → logprob: -11.77070426940918
    7. '):
' → logprob: -12.14570426940918
    8. ' ):' → logprob: -12.14570426940918
    9. ':' → logprob: -13.39570426940918
    10. ',' → logprob: -13.39570426940918

Token 315: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002600268693640828
    2. '__' → logprob: -6.002600193023682
    3. '
' → logprob: -10.37760066986084
    4. '(' → logprob: -11.00260066986084
    5. ':' → logprob: -11.00260066986084
    6. '	' → logprob: -11.12760066986084
    7. ' __' → logprob: -12.00260066986084
    8. '___' → logprob: -12.00260066986084
    9. 'def' → logprob: -12.25260066986084
    10. '    
' → logprob: -12.25260066986084

Token 316: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' (adapté à ' __') → logprob: -0.0001843485952122137
    2. ' __' → logprob: -9.000184059143066
    3. '   ' → logprob: -9.750184059143066
    4. '_slots' → logprob: -13.625184059143066
    5. '___' → logprob: -14.625184059143066
    6. 'class' → logprob: -15.625184059143066
    7. 'slots' → logprob: -15.750184059143066
    8. '.__' → logprob: -15.750184059143066
    9. '	' → logprob: -16.125185012817383
    10. ' ' → logprob: -16.875185012817383

Token 317: 'slots' (ID: 101916)
  Prédit: 'slots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'slots' → logprob: -9.491498531133402e-06
    2. '_slots' → logprob: -11.625009536743164
    3. ' slots' → logprob: -15.125009536743164
    4. 'sl' → logprob: -16.000009536743164
    5. '__' → logprob: -16.125009536743164
    6. 'Slots' → logprob: -17.500009536743164
    7. 'slot' → logprob: -18.500009536743164
    8. '(sl' → logprob: -19.500009536743164
    9. 'spaces' → logprob: -19.875009536743164
    10. 'spots' → logprob: -20.125009536743164

Token 318: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.004114730749279261
    2. ' =' → logprob: -6.129114627838135
    3. '=' → logprob: -6.254114627838135
    4. '__('' → logprob: -13.504115104675293
    5. '_' → logprob: -13.629115104675293
    6. '___' → logprob: -13.754115104675293
    7. '____' → logprob: -14.004115104675293
    8. '   ' → logprob: -15.129115104675293
    9. '=('' → logprob: -15.379115104675293
    10. '_=' → logprob: -17.004114151000977

Token 319: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31328558921813965
    2. ' =' → logprob: -1.3132855892181396
    3. '=('' → logprob: -10.688285827636719
    4. '('' → logprob: -14.688285827636719
    5. '   ' → logprob: -15.063285827636719
    6. '=['' → logprob: -16.56328582763672
    7. '=("' → logprob: -16.68828582763672
    8. ' ' → logprob: -16.93828582763672
    9. '__' → logprob: -17.43828582763672
    10. ' ('' → logprob: -17.56328582763672

Token 320: ' ('' (ID: 9906)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -3.011373155459296e-05
    2. ''ex' → logprob: -11.000030517578125
    3. '('_' → logprob: -12.000030517578125
    4. ' ('' → logprob: -12.125030517578125
    5. ''' → logprob: -14.625030517578125
    6. ''value' → logprob: -15.125030517578125
    7. '('__' → logprob: -15.500030517578125
    8. ''exp' → logprob: -15.750030517578125
    9. 'expr' → logprob: -15.750030517578125
    10. ''s' → logprob: -16.250030517578125

Token 321: 'expr' (ID: 21343)
  Prédit: 'expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.0300710741430521
    2. 'operand' → logprob: -3.5300710201263428
    3. 'arg' → logprob: -8.280071258544922
    4. 'child' → logprob: -10.780071258544922
    5. '_expr' → logprob: -11.030071258544922
    6. ' operand' → logprob: -11.155071258544922
    7. ' expr' → logprob: -11.655071258544922
    8. '.expr' → logprob: -13.030071258544922
    9. '_operand' → logprob: -13.155071258544922
    10. '(expr' → logprob: -14.280071258544922

Token 322: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -5.9153885558771435e-06
    2. ' ',' → logprob: -13.000005722045898
    3. ''' → logprob: -13.500005722045898
    4. '')' → logprob: -13.625005722045898
    5. '','' → logprob: -14.000005722045898
    6. '',
' → logprob: -16.1250057220459
    7. ',' → logprob: -17.5000057220459
    8. '",' → logprob: -17.7500057220459
    9. ')' → logprob: -18.6250057220459
    10. '=',' → logprob: -18.7500057220459

Token 323: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04540214315056801
    2. ')

' → logprob: -3.2954020500183105
    3. ''' → logprob: -5.6704020500183105
    4. ' '' → logprob: -6.2954020500183105
    5. ')
' → logprob: -6.5454020500183105
    6. 'expr' → logprob: -8.170402526855469
    7. '')' → logprob: -8.545402526855469
    8. ''ex' → logprob: -10.670402526855469
    9. ' expr' → logprob: -10.795402526855469
    10. ' )' → logprob: -11.045402526855469

Token 324: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01846514642238617
    2. '   ' → logprob: -4.143465042114258
    3. '    
' → logprob: -6.643465042114258
    4. 'def' → logprob: -7.518465042114258
    5. '

' → logprob: -8.518465042114258
    6. '<|end|>' → logprob: -8.768465042114258
    7. '
' → logprob: -9.768465042114258
    8. ' def' → logprob: -9.893465042114258
    9. '<|end|>' → logprob: -10.518465042114258
    10. '  
' → logprob: -10.768465042114258

Token 325: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -5.633853652398102e-05
    2. ' def' → logprob: -9.875056266784668
    3. '   ' → logprob: -12.875056266784668
    4. '
' → logprob: -13.750056266784668
    5. 'expr' → logprob: -14.000056266784668
    6. '	def' → logprob: -15.875056266784668
    7. '    
' → logprob: -16.500057220458984
    8. '

' → logprob: -19.250057220458984
    9. '  
' → logprob: -19.500057220458984
    10. '  ' → logprob: -20.375057220458984

Token 326: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.01585393399000168
    2. '__' → logprob: -4.5158538818359375
    3. ' def' → logprob: -5.5158538818359375
    4. 'def' → logprob: -7.3908538818359375
    5. '_init' → logprob: -9.515853881835938
    6. 'init' → logprob: -9.765853881835938
    7. ' init' → logprob: -11.265853881835938
    8. ' ' → logprob: -12.890853881835938
    9. '.__' → logprob: -12.890853881835938
    10. '```' → logprob: -13.390853881835938

Token 327: 'init' (ID: 3287)
  Prédit: 'slots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'slots' → logprob: -0.3485117554664612
    2. 'init' → logprob: -1.2235116958618164
    3. '_slots' → logprob: -9.973511695861816
    4. '_init' → logprob: -11.848511695861816
    5. 'slot' → logprob: -12.098511695861816
    6. ' slots' → logprob: -12.473511695861816
    7. ' init' → logprob: -13.848511695861816
    8. 'Slots' → logprob: -14.348511695861816
    9. '   ' → logprob: -14.973511695861816
    10. 'sl' → logprob: -14.973511695861816

Token 328: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.02747945487499237
    2. '(self' → logprob: -3.652479410171509
    3. '__' → logprob: -6.902479648590088
    4. '__(
' → logprob: -10.02747917175293
    5. ' (' → logprob: -10.15247917175293
    6. 'self' → logprob: -10.15247917175293
    7. '(' → logprob: -10.77747917175293
    8. '__((' → logprob: -11.27747917175293
    9. '_(' → logprob: -11.52747917175293
    10. '__('' → logprob: -13.90247917175293

Token 329: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00033677343162707984
    2. ' self' → logprob: -8.000336647033691
    3. '(self' → logprob: -14.000336647033691
    4. ',' → logprob: -15.875336647033691
    5. '   ' → logprob: -16.125337600708008
    6. ')' → logprob: -16.500337600708008
    7. 'expr' → logprob: -16.750337600708008
    8. ' ' → logprob: -17.125337600708008
    9. '0' → logprob: -17.500337600708008
    10. '	self' → logprob: -17.750337600708008

Token 330: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.28059154748916626
    2. '(self' → logprob: -2.1555914878845215
    3. 'self' → logprob: -2.4055914878845215
    4. ' (' → logprob: -4.0305914878845215
    5. ' self' → logprob: -4.1555914878845215
    6. '(' → logprob: -6.4055914878845215
    7. ' ,' → logprob: -6.5305914878845215
    8. 'expr' → logprob: -7.1555914878845215
    9. '(expr' → logprob: -7.9055914878845215
    10. ' expr' → logprob: -8.03059196472168

Token 331: ' expr' (ID: 30206)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.0003802680876106024
    2. ' expr' → logprob: -7.875380039215088
    3. 'express' → logprob: -16.12537956237793
    4. '(expr' → logprob: -17.62537956237793
    5. '.expr' → logprob: -19.12537956237793
    6. ' ' → logprob: -19.37537956237793
    7. '   ' → logprob: -19.37537956237793
    8. 'expression' → logprob: -19.50037956237793
    9. ')' → logprob: -20.50037956237793
    10. '_expr' → logprob: -20.50037956237793

Token 332: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.39716097712516785
    2. ')' → logprob: -1.2721610069274902
    3. '):
' → logprob: -3.6471610069274902
    4. ' ):' → logprob: -5.02216100692749
    5. ' )' → logprob: -5.64716100692749
    6. '<|end|>' → logprob: -5.64716100692749
    7. '=' → logprob: -5.77216100692749
    8. ':' → logprob: -6.14716100692749
    9. ',' → logprob: -6.52216100692749
    10. ' ' → logprob: -8.272160530090332

Token 333: ' Bool' (ID: 28693)
  Prédit: 'Bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Bool' → logprob: -0.06202325597405434
    2. ' Bool' → logprob: -2.812023162841797
    3. 'Expr' → logprob: -10.062023162841797
    4. 'bool' → logprob: -12.062023162841797
    5. ')' → logprob: -12.937023162841797
    6. 'expr' → logprob: -13.062023162841797
    7. ' ' → logprob: -14.687023162841797
    8. ' bool' → logprob: -14.812023162841797
    9. ' Expr' → logprob: -15.187023162841797
    10. '_bool' → logprob: -15.312023162841797

Token 334: 'Expr' (ID: 21037)
  Prédit: 'Expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Expr' → logprob: -1.3856492842023727e-06
    2. ')' → logprob: -14.125000953674316
    3. ' Expr' → logprob: -14.625000953674316
    4. '.Expr' → logprob: -16.500001907348633
    5. '   ' → logprob: -17.375001907348633
    6. '_expr' → logprob: -17.875001907348633
    7. 'expr' → logprob: -18.375001907348633
    8. 'Express' → logprob: -18.500001907348633
    9. ' ' → logprob: -18.625001907348633
    10. '_EXPR' → logprob: -19.500001907348633

Token 335: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007160988170653582
    2. '):
' → logprob: -5.0071611404418945
    3. ')' → logprob: -7.7571611404418945
    4. ' ):' → logprob: -11.382161140441895
    5. '   ' → logprob: -12.507161140441895
    6. ':' → logprob: -14.007161140441895
    7. '):
' → logprob: -14.257161140441895
    8. '):

' → logprob: -15.007161140441895
    9. ''):' → logprob: -15.257161140441895
    10. '       ' → logprob: -15.507161140441895

Token 336: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1211521252989769
    2. 'expr' → logprob: -2.37115216255188
    3. ' expr' → logprob: -4.121151924133301
    4. 'self' → logprob: -5.621151924133301
    5. ' self' → logprob: -7.246151924133301
    6. '	' → logprob: -9.3711519241333
    7. '   ' → logprob: -9.9961519241333
    8. 'express' → logprob: -11.4961519241333
    9. '(expr' → logprob: -12.1211519241333
    10. '    ' → logprob: -12.6211519241333

Token 337: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.02334948256611824
    2. ' self' → logprob: -3.7733495235443115
    3. '       ' → logprob: -9.52334976196289
    4. 'expr' → logprob: -10.52334976196289
    5. '	self' → logprob: -13.27334976196289
    6. ' expr' → logprob: -13.39834976196289
    7. '   ' → logprob: -14.39834976196289
    8. ' ' → logprob: -16.27334976196289
    9. ' ' → logprob: -16.89834976196289
    10. 'express' → logprob: -16.89834976196289

Token 338: '.expr' (ID: 121306)
  Prédit: '.expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.expr' → logprob: -0.005244902800768614
    2. '.' → logprob: -5.255244731903076
    3. 'expr' → logprob: -11.755245208740234
    4. ' .' → logprob: -14.130245208740234
    5. '.expression' → logprob: -14.380245208740234
    6. '.ex' → logprob: -14.505245208740234
    7. '.exp' → logprob: -14.505245208740234
    8. '.exc' → logprob: -14.505245208740234
    9. '.eval' → logprob: -16.255245208740234
    10. '.img' → logprob: -17.130245208740234

Token 339: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014164801687002182
    2. ' =' → logprob: -4.264164924621582
    3. ')' → logprob: -13.889164924621582
    4. '=
' → logprob: -16.139163970947266
    5. '   ' → logprob: -16.264163970947266
    6. ')=' → logprob: -16.514163970947266
    7. '.' → logprob: -17.764163970947266
    8. ' ' → logprob: -17.889163970947266
    9. '=}' → logprob: -17.889163970947266
    10. '=

' → logprob: -17.889163970947266

Token 340: ' expr' (ID: 30206)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.0024758970830589533
    2. ' expr' → logprob: -6.002475738525391
    3. '(expr' → logprob: -15.75247573852539
    4. 'express' → logprob: -16.75247573852539
    5. 'Expr' → logprob: -18.75247573852539
    6. '.expr' → logprob: -19.12747573852539
    7. 'not' → logprob: -20.12747573852539
    8. '_expr' → logprob: -20.25247573852539
    9. 'Not' → logprob: -20.37747573852539
    10. 'ex' → logprob: -20.50247573852539

Token 341: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5723587274551392
    2. '<|end|>' → logprob: -1.0723587274551392
    3. '
' → logprob: -3.0723586082458496
    4. '    
' → logprob: -3.6973586082458496
    5. '<|end|>' → logprob: -4.44735860824585
    6. 'def' → logprob: -5.32235860824585
    7. '  
' → logprob: -5.57235860824585
    8. ' 
' → logprob: -7.69735860824585
    9. ')' → logprob: -7.94735860824585
    10. '

' → logprob: -8.197359085083008

Token 342: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21007242798805237
    2. 'def' → logprob: -1.83507239818573
    3. '<|end|>' → logprob: -4.7100725173950195
    4. '
' → logprob: -4.9600725173950195
    5. '    
' → logprob: -5.0850725173950195
    6. ' def' → logprob: -5.5850725173950195
    7. '  
' → logprob: -6.2100725173950195
    8. '<|end|>' → logprob: -7.8350725173950195
    9. '        
' → logprob: -8.08507251739502
    10. '	def' → logprob: -8.08507251739502

Token 343: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0006789539474993944
    2. ' def' → logprob: -7.875679016113281
    3. '   ' → logprob: -8.125679016113281
    4. '
' → logprob: -13.375679016113281
    5. '    
' → logprob: -14.125679016113281
    6. '	def' → logprob: -15.125679016113281
    7. ' 
' → logprob: -16.25067901611328
    8. '  
' → logprob: -16.50067901611328
    9. '        
' → logprob: -16.75067901611328
    10. ' ' → logprob: -16.87567901611328

Token 344: ' evaluate' (ID: 21646)
  Prédit: 'evaluate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'evaluate' → logprob: -8.602024900028482e-05
    2. ' evaluate' → logprob: -9.375085830688477
    3. 'def' → logprob: -13.875085830688477
    4. '.evaluate' → logprob: -15.625085830688477
    5. 'eval' → logprob: -18.500085830688477
    6. '   ' → logprob: -18.750085830688477
    7. ' def' → logprob: -19.000085830688477
    8. 'execute' → logprob: -19.250085830688477
    9. ' ' → logprob: -19.500085830688477
    10. 'calculate' → logprob: -20.375085830688477

Token 345: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.02313937246799469
    2. '(' → logprob: -3.898139476776123
    3. '(env' → logprob: -6.148139476776123
    4. ',' → logprob: -8.148138999938965
    5. ' (' → logprob: -9.023138999938965
    6. '(
' → logprob: -10.898138999938965
    7. '   ' → logprob: -11.148138999938965
    8. '       ' → logprob: -12.148138999938965
    9. 'self' → logprob: -12.523138999938965
    10. ' ' → logprob: -13.273138999938965

Token 346: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06241677701473236
    2. '(self' → logprob: -3.1874167919158936
    3. '(env' → logprob: -4.3124165534973145
    4. '(' → logprob: -5.4374165534973145
    5. ' ,' → logprob: -7.4374165534973145
    6. ' (' → logprob: -7.4374165534973145
    7. ')' → logprob: -8.562417030334473
    8. '   ' → logprob: -10.062417030334473
    9. 'self' → logprob: -10.562417030334473
    10. ' ' → logprob: -11.812417030334473

Token 347: ' env' (ID: 9744)
  Prédit: ' env'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' env' → logprob: -0.4425743818283081
    2. 'env' → logprob: -1.317574381828308
    3. ' self' → logprob: -2.9425745010375977
    4. 'self' → logprob: -3.3175745010375977
    5. ' lambda' → logprob: -7.942574501037598
    6. ' not' → logprob: -9.317574501037598
    7. 'lambda' → logprob: -9.317574501037598
    8. 'not' → logprob: -9.567574501037598
    9. '   ' → logprob: -9.692574501037598
    10. '       ' → logprob: -9.817574501037598

Token 348: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3719146251678467
    2. ',' → logprob: -1.4969146251678467
    3. ')' → logprob: -3.2469146251678467
    4. ':' → logprob: -3.3719146251678467
    5. '):
' → logprob: -4.871914863586426
    6. ' ):' → logprob: -5.746914863586426
    7. '   ' → logprob: -6.871914863586426
    8. '       ' → logprob: -6.996914863586426
    9. ',
' → logprob: -9.246914863586426
    10. ' ,' → logprob: -9.246914863586426

Token 349: ' dict' (ID: 11878)
  Prédit: ' env'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' env' → logprob: -0.3138599097728729
    2. 'env' → logprob: -1.3138599395751953
    3. 'self' → logprob: -8.688859939575195
    4. 'expr' → logprob: -8.938859939575195
    5. ' self' → logprob: -9.688859939575195
    6. ')' → logprob: -9.813859939575195
    7. '(env' → logprob: -9.813859939575195
    8. ' expr' → logprob: -9.938859939575195
    9. 'def' → logprob: -11.313859939575195
    10. '       ' → logprob: -11.438859939575195

Token 350: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6338182091712952
    2. ')' → logprob: -0.8838182091712952
    3. '):
' → logprob: -2.8838181495666504
    4. '   ' → logprob: -8.633818626403809
    5. ' ):' → logprob: -9.758818626403809
    6. '       ' → logprob: -10.133818626403809
    7. '):
' → logprob: -11.133818626403809
    8. ' )' → logprob: -11.508818626403809
    9. '):

' → logprob: -12.008818626403809
    10. ' ):
' → logprob: -12.383818626403809

Token 351: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001528194174170494
    2. ':
' → logprob: -6.876528263092041
    3. '):' → logprob: -8.876527786254883
    4. '       ' → logprob: -9.001527786254883
    5. ')' → logprob: -9.126527786254883
    6. ':return' → logprob: -9.751527786254883
    7. '->' → logprob: -11.126527786254883
    8. '   ' → logprob: -11.126527786254883
    9. ' ->' → logprob: -11.751527786254883
    10. '):
' → logprob: -11.876527786254883

Token 352: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.20148105919361115
    2. ' bool' → logprob: -1.7014811038970947
    3. ' not' → logprob: -10.826480865478516
    4. 'self' → logprob: -11.076480865478516
    5. 'not' → logprob: -11.201480865478516
    6. ' self' → logprob: -11.826480865478516
    7. '(bool' → logprob: -12.201480865478516
    8. ' return' → logprob: -12.576480865478516
    9. 'return' → logprob: -13.576480865478516
    10. '_bool' → logprob: -14.576480865478516

Token 353: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05896053463220596
    2. '       ' → logprob: -3.058960437774658
    3. ':
' → logprob: -4.808960437774658
    4. '   ' → logprob: -7.308960437774658
    5. '):' → logprob: -7.808960437774658
    6. '(' → logprob: -7.933960437774658
    7. ',' → logprob: -8.308960914611816
    8. ')' → logprob: -8.558960914611816
    9. ':return' → logprob: -9.308960914611816
    10. '(self' → logprob: -9.808960914611816

Token 354: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07913818210363388
    2. 'return' → logprob: -2.5791382789611816
    3. ' return' → logprob: -8.329137802124023
    4. '   ' → logprob: -12.829137802124023
    5. '
' → logprob: -12.954137802124023
    6. '```' → logprob: -14.204137802124023
    7. '	return' → logprob: -14.704137802124023
    8. 'result' → logprob: -16.079137802124023
    9. '	' → logprob: -16.079137802124023
    10. '        
' → logprob: -16.329137802124023

Token 355: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0011498635867610574
    2. '       ' → logprob: -7.251149654388428
    3. ' return' → logprob: -7.751149654388428
    4. 'not' → logprob: -12.001150131225586
    5. '   ' → logprob: -12.626150131225586
    6. '	return' → logprob: -16.251150131225586
    7. '
' → logprob: -17.376150131225586
    8. '           ' → logprob: -17.626150131225586
    9. '        
' → logprob: -17.626150131225586
    10. '     ' → logprob: -19.501150131225586

Token 356: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.03804333135485649
    2. ' not' → logprob: -3.288043260574341
    3. '(not' → logprob: -14.288043022155762
    4. '	not' → logprob: -14.538043022155762
    5. '   ' → logprob: -14.913043022155762
    6. ' ' → logprob: -15.288043022155762
    7. '!' → logprob: -15.788043022155762
    8. 'n' → logprob: -16.913043975830078
    9. '
' → logprob: -17.538043975830078
    10. ':not' → logprob: -17.913043975830078

Token 357: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.25192928314208984
    2. ' self' → logprob: -1.5019292831420898
    3. '(self' → logprob: -15.62692928314209
    4. ' ' → logprob: -17.876930236816406
    5. '	self' → logprob: -18.876930236816406
    6. ' ' → logprob: -19.376930236816406
    7. '[self' → logprob: -21.626930236816406
    8. '   ' → logprob: -22.501930236816406
    9. '1' → logprob: -22.751930236816406
    10. '_self' → logprob: -22.876930236816406

Token 358: '.expr' (ID: 121306)
  Prédit: '.expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.expr' → logprob: -6.511406809295295e-06
    2. '.' → logprob: -12.750006675720215
    3. '.eval' → logprob: -13.000006675720215
    4. 'expr' → logprob: -14.000006675720215
    5. '.evaluate' → logprob: -15.125006675720215
    6. '.env' → logprob: -16.8750057220459
    7. ' .' → logprob: -16.8750057220459
    8. '(expr' → logprob: -17.6250057220459
    9. '.Expr' → logprob: -18.3750057220459
    10. '.expression' → logprob: -18.7500057220459

Token 359: '.evaluate' (ID: 71397)
  Prédit: '.evaluate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.evaluate' → logprob: -0.018173474818468094
    2. '.' → logprob: -4.018173694610596
    3. ' .' → logprob: -11.143173217773438
    4. 'evaluate' → logprob: -11.768173217773438
    5. '.eval' → logprob: -14.018173217773438
    6. '.validate' → logprob: -16.268173217773438
    7. '.execute' → logprob: -16.518173217773438
    8. ').' → logprob: -17.143173217773438
    9. '.calculate' → logprob: -17.393173217773438
    10. '.e' → logprob: -17.393173217773438

Token 360: '(env' (ID: 38512)
  Prédit: '(env'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(env' → logprob: -0.001508674118667841
    2. '(' → logprob: -6.501508712768555
    3. ' (' → logprob: -12.626508712768555
    4. '(environment' → logprob: -13.126508712768555
    5. '(en' → logprob: -14.251508712768555
    6. '(
' → logprob: -15.376508712768555
    7. '(expr' → logprob: -16.751508712768555
    8. '(eval' → logprob: -17.376508712768555
    9. '(org' → logprob: -17.751508712768555
    10. 'env' → logprob: -18.001508712768555

Token 361: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005557744298130274
    2. ' )' → logprob: -7.500555992126465
    3. ')
' → logprob: -13.750555992126465
    4. ',' → logprob: -13.875555992126465
    5. '))' → logprob: -15.250555992126465
    6. '(env' → logprob: -16.12555503845215
    7. '),' → logprob: -16.50055503845215
    8. ')}' → logprob: -16.75055503845215
    9. ' ' → logprob: -17.25055503845215
    10. '   ' → logprob: -17.25055503845215

Token 362: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6485810875892639
    2. '   ' → logprob: -1.0235810279846191
    3. '```' → logprob: -3.148581027984619
    4. '<|end|>' → logprob: -3.398581027984619
    5. '

' → logprob: -3.773581027984619
    6. '    
' → logprob: -4.523581027984619
    7. '  
' → logprob: -5.773581027984619
    8. ' 
' → logprob: -6.648581027984619
    9. '\n' → logprob: -6.773581027984619
    10. '``' → logprob: -7.523581027984619

Token 363: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.023057477548718452
    2. '   ' → logprob: -4.398057460784912
    3. ' def' → logprob: -5.648057460784912
    4. '
' → logprob: -5.648057460784912
    5. '@' → logprob: -6.523057460784912
    6. '    
' → logprob: -7.648057460784912
    7. '

' → logprob: -7.773057460784912
    8. '@property' → logprob: -8.39805793762207
    9. '```' → logprob: -8.39805793762207
    10. ' 
' → logprob: -8.64805793762207

Token 364: ' canonical' (ID: 91323)
  Prédit: 'canonical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'canonical' → logprob: -0.00865014549344778
    2. ' canonical' → logprob: -4.758650302886963
    3. 'def' → logprob: -10.258649826049805
    4. ' def' → logprob: -14.508649826049805
    5. 'Canonical' → logprob: -18.133649826049805
    6. 'can' → logprob: -18.633649826049805
    7. 'c' → logprob: -18.883649826049805
    8. 'cached' → logprob: -19.633649826049805
    9. ' ' → logprob: -19.633649826049805
    10. '_c' → logprob: -19.758649826049805

Token 365: '_forms' (ID: 176505)
  Prédit: '_forms'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_forms' → logprob: -1.0802738870552275e-05
    2. '_form' → logprob: -12.12501049041748
    3. ' _' → logprob: -13.00001049041748
    4. '_' → logprob: -13.12501049041748
    5. '_f' → logprob: -14.62501049041748
    6. '_formats' → logprob: -15.00001049041748
    7. '_faces' → logprob: -16.375011444091797
    8. '_parts' → logprob: -16.875011444091797
    9. '```' → logprob: -17.000011444091797
    10. '\' → logprob: -17.375011444091797

Token 366: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00033760786755010486
    2. '(' → logprob: -8.000337600708008
    3. '(s' → logprob: -14.125337600708008
    4. 'self' → logprob: -14.250337600708008
    5. '()' → logprob: -15.000337600708008
    6. ' (' → logprob: -15.250337600708008
    7. '(
' → logprob: -16.125337600708008
    8. '   ' → logprob: -16.375337600708008
    9. '(se' → logprob: -18.375337600708008
    10. '       ' → logprob: -18.750337600708008

Token 367: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.06197104603052139
    2. '(' → logprob: -3.3119709491729736
    3. '()' → logprob: -4.061971187591553
    4. ')' → logprob: -5.311971187591553
    5. '(
' → logprob: -7.061971187591553
    6. 'self' → logprob: -8.311970710754395
    7. '   ' → logprob: -9.186970710754395
    8. ' (' → logprob: -9.436970710754395
    9. '(s' → logprob: -9.936970710754395
    10. '
' → logprob: -10.186970710754395

Token 368: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0382097102701664
    2. '(' → logprob: -3.2882096767425537
    3. 'self' → logprob: -9.788209915161133
    4. '(
' → logprob: -10.038209915161133
    5. '()' → logprob: -10.163209915161133
    6. '   ' → logprob: -11.788209915161133
    7. ' (' → logprob: -12.538209915161133
    8. '(s' → logprob: -12.663209915161133
    9. '{' → logprob: -12.913209915161133
    10. '=' → logprob: -13.038209915161133

Token 369: ' set' (ID: 920)
  Prédit: ' set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.2903784215450287
    2. 'set' → logprob: -1.415378451347351
    3. ' {' → logprob: -5.165378570556641
    4. '{' → logprob: -5.915378570556641
    5. '()' → logprob: -7.540378570556641
    6. '(set' → logprob: -9.16537857055664
    7. ' ()' → logprob: -10.29037857055664
    8. '       ' → logprob: -11.04037857055664
    9. '   ' → logprob: -11.04037857055664
    10. ' {'' → logprob: -11.29037857055664

Token 370: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00415651872754097
    2. '(' → logprob: -5.504156589508057
    3. '(
' → logprob: -9.504156112670898
    4. '       ' → logprob: -13.629156112670898
    5. '   ' → logprob: -13.629156112670898
    6. 'self' → logprob: -14.254156112670898
    7. '()' → logprob: -16.2541561126709
    8. '{' → logprob: -16.2541561126709
    9. ' (' → logprob: -16.3791561126709
    10. '(s' → logprob: -16.5041561126709

Token 371: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6096688508987427
    2. '{' → logprob: -1.7346688508987427
    3. 'expr' → logprob: -1.8596688508987427
    4. 'return' → logprob: -2.359668731689453
    5. '   ' → logprob: -4.109668731689453
    6. '{
' → logprob: -5.609668731689453
    7. '{return' → logprob: -6.109668731689453
    8. '{s' → logprob: -6.109668731689453
    9. 'forms' → logprob: -6.859668731689453
    10. '{"' → logprob: -6.984668731689453

Token 372: ' #' (ID: 1069)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.6343651413917542
    2. '{'' → logprob: -1.2593650817871094
    3. '{"' → logprob: -1.8843650817871094
    4. 'return' → logprob: -5.009365081787109
    5. 'expr' → logprob: -5.134365081787109
    6. 'inner' → logprob: -5.259365081787109
    7. '{sub' → logprob: -5.634365081787109
    8. 'forms' → logprob: -5.884365081787109
    9. '{s' → logprob: -6.134365081787109
    10. 'result' → logprob: -6.384365081787109

Token 373: ' We' (ID: 1416)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.8471623659133911
    2. 'inner' → logprob: -1.3471623659133911
    3. 'expr' → logprob: -1.9721623659133911
    4. '{'' → logprob: -2.5971622467041016
    5. '{"' → logprob: -3.2221622467041016
    6. 'forms' → logprob: -4.222162246704102
    7. 'sub' → logprob: -4.222162246704102
    8. '{sub' → logprob: -4.722162246704102
    9. 'result' → logprob: -5.097162246704102
    10. 'prefix' → logprob: -5.972162246704102

Token 374: ' produce' (ID: 10635)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.1925428956747055
    2. 'return' → logprob: -1.9425429105758667
    3. 'def' → logprob: -4.567543029785156
    4. '#' → logprob: -5.442543029785156
    5. '.expr' → logprob: -5.817543029785156
    6. ' expr' → logprob: -5.942543029785156
    7. 'if' → logprob: -6.192543029785156
    8. 'from' → logprob: -6.942543029785156
    9. ' =' → logprob: -7.192543029785156
    10. 's' → logprob: -7.192543029785156

Token 375: ' minimal' (ID: 19957)
  Prédit: '{''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{'' → logprob: -0.6382582783699036
    2. '{"' → logprob: -1.3882582187652588
    3. '{' → logprob: -1.5132582187652588
    4. ' {' → logprob: -6.888258457183838
    5. ' {'' → logprob: -7.138258457183838
    6. ' {"' → logprob: -8.76325798034668
    7. 'set' → logprob: -10.13825798034668
    8. '{s' → logprob: -10.51325798034668
    9. '{
' → logprob: -11.51325798034668
    10. '   ' → logprob: -11.63825798034668

Token 376: ' forms' (ID: 11526)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.751545786857605
    2. '{'' → logprob: -0.751545786857605
    3. '{"' → logprob: -3.7515459060668945
    4. ' {' → logprob: -4.1265459060668945
    5. ' {'' → logprob: -5.0015459060668945
    6. '_forms' → logprob: -5.7515459060668945
    7. '{
' → logprob: -5.8765459060668945
    8. 'expr' → logprob: -6.6265459060668945
    9. 'forms' → logprob: -7.0015459060668945
    10. 'set' → logprob: -7.8765459060668945

Token 377: ' by' (ID: 656)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.8386712670326233
    2. '       ' → logprob: -0.8386712670326233
    3. '()' → logprob: -2.3386712074279785
    4. ' =' → logprob: -4.4636712074279785
    5. '():' → logprob: -4.9636712074279785
    6. 'return' → logprob: -5.4636712074279785
    7. ' {' → logprob: -5.5886712074279785
    8. '{
' → logprob: -6.0886712074279785
    9. ':' → logprob: -6.3386712074279785
    10. ',' → logprob: -6.4636712074279785

Token 378: ' prefix' (ID: 18633)
  Prédit: '{''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{'' → logprob: -0.3428490161895752
    2. '{' → logprob: -1.5928490161895752
    3. '{"' → logprob: -2.592849016189575
    4. 'expr' → logprob: -5.467848777770996
    5. '{
' → logprob: -5.842848777770996
    6. 'fro' → logprob: -6.467848777770996
    7. '{s' → logprob: -7.217848777770996
    8. ' {'' → logprob: -7.467848777770996
    9. 'return' → logprob: -7.967848777770996
    10. 'set' → logprob: -8.092848777770996

Token 379: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.36334821581840515
    2. ''' → logprob: -1.6133482456207275
    3. ''ing' → logprob: -2.6133482456207275
    4. '"' → logprob: -3.9883482456207275
    5. '       ' → logprob: -5.238348007202148
    6. ''ng' → logprob: -6.363348007202148
    7. ' '' → logprob: -6.738348007202148
    8. 'not' → logprob: -6.738348007202148
    9. ''-' → logprob: -7.238348007202148
    10. '{' → logprob: -7.738348007202148

Token 380: ' '-'' (ID: 59558)
  Prédit: '{''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{'' → logprob: -0.07257334887981415
    2. '{"' → logprob: -3.44757342338562
    3. '{' → logprob: -3.69757342338562
    4. ''' → logprob: -4.322573184967041
    5. '"' → logprob: -10.1975736618042
    6. ' {'' → logprob: -10.4475736618042
    7. ''s' → logprob: -11.1975736618042
    8. ''n' → logprob: -11.4475736618042
    9. '('' → logprob: -11.6975736618042
    10. ''t' → logprob: -11.8225736618042

Token 381: ' to' (ID: 316)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.01209258008748293
    2. '       ' → logprob: -5.262092590332031
    3. ' {' → logprob: -5.762092590332031
    4. '(' → logprob: -6.887092590332031
    5. '{
' → logprob: -7.262092590332031
    6. 'return' → logprob: -7.512092590332031
    7. '+' → logprob: -7.762092590332031
    8. '-' → logprob: -8.012092590332031
    9. ' +' → logprob: -8.887092590332031
    10. '   ' → logprob: -9.262092590332031

Token 382: ' child's' (ID: 72758)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.7687667012214661
    2. 'form' → logprob: -1.8937666416168213
    3. 'f' → logprob: -2.2687666416168213
    4. 'expr' → logprob: -2.6437666416168213
    5. '{' → logprob: -3.0187666416168213
    6. 's' → logprob: -3.5187666416168213
    7. ' next' → logprob: -3.7687666416168213
    8. 'e' → logprob: -4.0187668800354
    9. 'each' → logprob: -4.0187668800354
    10. 'min' → logprob: -4.2687668800354

Token 383: ' minimal' (ID: 19957)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.9050214886665344
    2. 'next' → logprob: -1.5300214290618896
    3. 'form' → logprob: -1.7800214290618896
    4. 'canonical' → logprob: -2.9050214290618896
    5. ' next' → logprob: -3.1550214290618896
    6. 'forms' → logprob: -3.4050214290618896
    7. 's' → logprob: -3.6550214290618896
    8. 'min' → logprob: -4.155021667480469
    9. '{' → logprob: -5.030021667480469
    10. '(next' → logprob: -5.155021667480469

Token 384: ' canonical' (ID: 91323)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.2026357501745224
    2. '(' → logprob: -2.9526357650756836
    3. 'form' → logprob: -3.4526357650756836
    4. 'expr' → logprob: -3.4526357650756836
    5. 's' → logprob: -3.7026357650756836
    6. 'c' → logprob: -5.327635765075684
    7. 'string' → logprob: -5.827635765075684
    8. '(c' → logprob: -5.827635765075684
    9. 'forms' → logprob: -5.952635765075684
    10. 'f' → logprob: -5.952635765075684

Token 385: ' forms' (ID: 11526)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.34880331158638
    2. '_forms' → logprob: -1.3488032817840576
    3. '{'' → logprob: -4.348803520202637
    4. 'forms' → logprob: -5.223803520202637
    5. '_form' → logprob: -5.223803520202637
    6. 'form' → logprob: -5.348803520202637
    7. '{
' → logprob: -6.223803520202637
    8. ' {' → logprob: -6.348803520202637
    9. '{"' → logprob: -7.348803520202637
    10. 's' → logprob: -7.973803520202637

Token 386: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0146584277972579
    2. '(' → logprob: -5.014658451080322
    3. '()' → logprob: -6.264658451080322
    4. '{' → logprob: -6.514658451080322
    5. ',' → logprob: -6.889658451080322
    6. ' +' → logprob: -7.639658451080322
    7. '+' → logprob: -7.639658451080322
    8. '        ' → logprob: -7.764658451080322
    9. '   ' → logprob: -7.764658451080322
    10. '           ' → logprob: -8.264657974243164

Token 387: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16530992090702057
    2. 'return' → logprob: -1.9153099060058594
    3. '{' → logprob: -5.665309906005859
    4. ' return' → logprob: -7.290309906005859
    5. 'result' → logprob: -7.665309906005859
    6. '(' → logprob: -8.66530990600586
    7. ',' → logprob: -9.66530990600586
    8. ':' → logprob: -9.91530990600586
    9. '   ' → logprob: -10.41530990600586
    10. '{
' → logprob: -10.54030990600586

Token 388: ' forms' (ID: 11526)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.03192391246557236
    2. '{' → logprob: -3.65692400932312
    3. '{return' → logprob: -5.906923770904541
    4. 'result' → logprob: -6.906923770904541
    5. '       ' → logprob: -7.531923770904541
    6. 'prefix' → logprob: -7.781923770904541
    7. '{'' → logprob: -8.4069242477417
    8. '{"' → logprob: -8.9069242477417
    9. '{-' → logprob: -9.0319242477417
    10. 'forms' (adapté à ' forms') → logprob: -9.0319242477417

Token 389: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3870008885860443
    2. ' =' → logprob: -1.1370009183883667
    3. '()' → logprob: -9.012001037597656
    4. '   ' → logprob: -12.637001037597656
    5. 's' → logprob: -13.512001037597656
    6. '       ' → logprob: -13.762001037597656
    7. 'return' → logprob: -14.262001037597656
    8. '(' → logprob: -15.012001037597656
    9. '=set' → logprob: -15.137001037597656
    10. '	' → logprob: -15.887001037597656

Token 390: ' set' (ID: 920)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.39467042684555054
    2. 'set' → logprob: -1.2696704864501953
    3. 'self' → logprob: -3.6446704864501953
    4. '{'' → logprob: -4.644670486450195
    5. '{"' → logprob: -4.769670486450195
    6. '{s' → logprob: -8.519670486450195
    7. ' set' → logprob: -8.644670486450195
    8. '{-' → logprob: -8.644670486450195
    9. ' {' → logprob: -8.644670486450195
    10. '{
' → logprob: -8.894670486450195

Token 391: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.933164119720459
    2. '()
' → logprob: -1.183164119720459
    3. '(f' → logprob: -1.558164119720459
    4. '(
' → logprob: -3.433164119720459
    5. '('-' → logprob: -3.808164119720459
    6. '(' → logprob: -4.558164119720459
    7. '("-' → logprob: -4.808164119720459
    8. '(form' → logprob: -5.558164119720459
    9. '(['' → logprob: -5.933164119720459
    10. '('' → logprob: -6.183164119720459

Token 392: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2162826508283615
    2. 'for' → logprob: -1.716282606124878
    3. ' for' → logprob: -4.216282844543457
    4. '   ' → logprob: -12.091282844543457
    5. '	for' → logprob: -15.716282844543457
    6. ' ' → logprob: -16.09128189086914
    7. 'expr' → logprob: -17.84128189086914
    8. '      ' → logprob: -18.09128189086914
    9. '     ' → logprob: -18.34128189086914
    10. '           ' → logprob: -18.46628189086914

Token 393: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0006531051476486027
    2. ' for' → logprob: -7.500653266906738
    3. '       ' → logprob: -9.250653266906738
    4. 'child' → logprob: -12.500653266906738
    5. '   ' → logprob: -15.125653266906738
    6. '	for' → logprob: -16.375652313232422
    7. 'expr' → logprob: -17.375652313232422
    8. ' ' → logprob: -18.000652313232422
    9. ' child' → logprob: -18.625652313232422
    10. '
' → logprob: -20.000652313232422

Token 394: ' f' (ID: 285)
  Prédit: 'form'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'form' → logprob: -0.4277442991733551
    2. 'f' → logprob: -1.6777442693710327
    3. 'child' → logprob: -2.1777443885803223
    4. 'cf' → logprob: -3.4277443885803223
    5. 'c' → logprob: -4.677744388580322
    6. 'inner' → logprob: -6.302744388580322
    7. 'expr' → logprob: -6.427744388580322
    8. 'sub' → logprob: -6.552744388580322
    9. ' form' → logprob: -7.177744388580322
    10. ' child' → logprob: -8.802743911743164

Token 395: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.046146273612976074
    2. 'in' → logprob: -3.1711463928222656
    3. 'orm' → logprob: -5.796146392822266
    4. ' ' → logprob: -9.796146392822266
    5. 'i' → logprob: -11.421146392822266
    6. 'ormat' → logprob: -11.796146392822266
    7. 'o' → logprob: -12.171146392822266
    8. 'or' → logprob: -12.171146392822266
    9. '  ' → logprob: -12.671146392822266
    10. '_in' → logprob: -12.796146392822266

Token 396: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00011105302110081539
    2. ' self' → logprob: -9.125110626220703
    3. '(self' → logprob: -13.750110626220703
    4. '       ' → logprob: -14.000110626220703
    5. '
' → logprob: -17.000110626220703
    6. '[self' → logprob: -17.250110626220703
    7. '           ' → logprob: -17.500110626220703
    8. '   ' → logprob: -18.250110626220703
    9. '        
' → logprob: -19.125110626220703
    10. '     ' → logprob: -19.500110626220703

Token 397: '.expr' (ID: 121306)
  Prédit: '.expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.expr' → logprob: -0.0019288709154352546
    2. 'expr' → logprob: -6.251928806304932
    3. '(expr' → logprob: -16.501928329467773
    4. '.' → logprob: -16.501928329467773
    5. ' expr' → logprob: -17.501928329467773
    6. ' .' → logprob: -17.876928329467773
    7. '_expr' → logprob: -17.876928329467773
    8. '   ' → logprob: -18.751928329467773
    9. '_.' → logprob: -20.001928329467773
    10. '._' → logprob: -20.376928329467773

Token 398: '.c' (ID: 1081)
  Prédit: '.c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.c' → logprob: -9.615255839889869e-05
    2. ' .' → logprob: -9.500096321105957
    3. '.' → logprob: -11.625096321105957
    4. '().' → logprob: -11.750096321105957
    5. 'canonical' → logprob: -13.250096321105957
    6. '   ' → logprob: -13.500096321105957
    7. ').' → logprob: -15.000096321105957
    8. '.can' → logprob: -15.000096321105957
    9. '
' → logprob: -15.375096321105957
    10. ' ' → logprob: -16.00009536743164

Token 399: 'anonical' (ID: 143898)
  Prédit: 'anonical'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anonical' → logprob: -2.45848218582978e-06
    2. 'canonical' → logprob: -13.00000286102295
    3. 'annon' → logprob: -17.000001907348633
    4. 'an' → logprob: -17.125001907348633
    5. 'anon' → logprob: -18.000001907348633
    6. 'on' → logprob: -18.250001907348633
    7. 'a' → logprob: -18.750001907348633
    8. 'ano' → logprob: -18.875001907348633
    9. '_' → logprob: -19.125001907348633
    10. 'anical' → logprob: -19.625001907348633

Token 400: '_forms' (ID: 176505)
  Prédit: '_forms'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_forms' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -15.375
    3. '_formats' → logprob: -17.75
    4. '_form' → logprob: -18.25
    5. 's' → logprob: -18.375
    6. 'forms' → logprob: -18.5
    7. '\' → logprob: -19.125
    8. '_for' → logprob: -19.125
    9. '_
' → logprob: -19.25
    10. ' _' → logprob: -19.75

Token 401: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.20259204506874084
    2. '():
' → logprob: -1.7025920152664185
    3. '()' → logprob: -6.827591896057129
    4. '():
' → logprob: -9.452591896057129
    5. ' ():' → logprob: -11.327591896057129
    6. ':' → logprob: -13.202591896057129
    7. '()):
' → logprob: -14.202591896057129
    8. '(' → logprob: -14.202591896057129
    9. ' ()' → logprob: -15.202591896057129
    10. '       ' → logprob: -15.577591896057129

Token 402: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00027468299958854914
    2. ' forms' → logprob: -8.500274658203125
    3. 'forms' → logprob: -9.875274658203125
    4. '(forms' → logprob: -11.500274658203125
    5. '          ' → logprob: -12.875274658203125
    6. '       ' → logprob: -13.000274658203125
    7. '=forms' → logprob: -13.375274658203125
    8. '.forms' → logprob: -14.250274658203125
    9. '               ' → logprob: -14.500274658203125
    10. '	       ' → logprob: -14.875274658203125

Token 403: ' #' (ID: 1069)
  Prédit: 'forms'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'forms' → logprob: -0.013906787149608135
    2. ' forms' → logprob: -4.513906955718994
    3. 'if' → logprob: -6.388906955718994
    4. '           ' → logprob: -6.888906955718994
    5. '       ' → logprob: -9.263906478881836
    6. ' if' → logprob: -10.138906478881836
    7. '(forms' → logprob: -12.763906478881836
    8. '_forms' → logprob: -12.763906478881836
    9. '   ' → logprob: -13.013906478881836
    10. '
' → logprob: -13.013906478881836

Token 404: ' Avoid' (ID: 46613)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2019881010055542
    2. 'forms' → logprob: -1.7019881010055542
    3. '           ' → logprob: -8.201988220214844
    4. '#' → logprob: -9.451988220214844
    5. '       ' → logprob: -9.451988220214844
    6. 'form' → logprob: -9.701988220214844
    7. ' forms' → logprob: -11.326988220214844
    8. ' if' → logprob: -11.451988220214844
    9. 's' → logprob: -11.701988220214844
    10. 'prefix' → logprob: -12.326988220214844

Token 405: ' double' (ID: 3503)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.01316952332854271
    2. ' f' → logprob: -5.013169288635254
    3. '(f' → logprob: -6.138169288635254
    4. '('-' → logprob: -6.513169288635254
    5. '(' → logprob: -6.763169288635254
    6. '('' → logprob: -7.638169288635254
    7. 'if' → logprob: -8.388169288635254
    8. ' (' → logprob: -8.388169288635254
    9. ''-' → logprob: -8.638169288635254
    10. ' ' → logprob: -9.138169288635254

Token 406: ' neg' (ID: 4528)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.0109143257141113
    2. 'if' → logprob: -1.1359143257141113
    3. ''-' → logprob: -1.5109143257141113
    4. 'neg' → logprob: -2.6359143257141113
    5. '('-' → logprob: -4.760914325714111
    6. '-neg' → logprob: -5.135914325714111
    7. 'minus' → logprob: -6.635914325714111
    8. 'f' → logprob: -6.885914325714111
    9. '_neg' → logprob: -6.885914325714111
    10. 'negative' → logprob: -7.135914325714111

Token 407: 'ations' (ID: 929)
  Prédit: 'ation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.3488563597202301
    2. '--' → logprob: -1.4738563299179077
    3. '-' → logprob: -3.3488564491271973
    4. 's' → logprob: -4.098856449127197
    5. 'ations' → logprob: -5.098856449127197
    6. ''' → logprob: -5.973856449127197
    7. '--
' → logprob: -6.723856449127197
    8. ''-' → logprob: -7.098856449127197
    9. '__' → logprob: -7.473856449127197
    10. 'not' → logprob: -7.723856449127197

Token 408: ' in' (ID: 306)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03295087441802025
    2. 'if' → logprob: -3.9079508781433105
    3. ' if' → logprob: -4.4079508781433105
    4. '               ' → logprob: -9.782950401306152
    5. ',' → logprob: -10.407950401306152
    6. '       ' → logprob: -11.532950401306152
    7. '          ' → logprob: -11.782950401306152
    8. '            
' → logprob: -11.782950401306152
    9. ':' → logprob: -11.907950401306152
    10. '.' → logprob: -12.032950401306152

Token 409: ' normalized' (ID: 59625)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.006635793950408697
    2. ' f' → logprob: -5.506635665893555
    3. 'if' → logprob: -7.006635665893555
    4. 'forms' → logprob: -7.131635665893555
    5. 'form' → logprob: -8.631635665893555
    6. '   ' → logprob: -9.006635665893555
    7. 'the' → logprob: -9.006635665893555
    8. '           ' → logprob: -9.631635665893555
    9. ' ' → logprob: -9.756635665893555
    10. '       ' → logprob: -10.006635665893555

Token 410: ' form' (ID: 1625)
  Prédit: 'forms'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'forms' → logprob: -0.8307658433914185
    2. 'f' → logprob: -0.9557658433914185
    3. 'form' → logprob: -1.8307658433914185
    4. ' forms' → logprob: -4.705765724182129
    5. 'if' → logprob: -4.955765724182129
    6. ' form' → logprob: -6.330765724182129
    7. ' f' → logprob: -6.830765724182129
    8. ' if' → logprob: -9.080765724182129
    9. '(f' → logprob: -9.080765724182129
    10. 'express' → logprob: -9.705765724182129

Token 411: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18245477974414825
    2. 'if' → logprob: -1.8074548244476318
    3. ' if' → logprob: -5.932454586029053
    4. '               ' → logprob: -10.557455062866211
    5. '       ' → logprob: -10.807455062866211
    6. '{
' → logprob: -13.557455062866211
    7. '   ' → logprob: -13.682455062866211
    8. '          ' → logprob: -13.807455062866211
    9. '
' → logprob: -14.182455062866211
    10. ',' → logprob: -14.307455062866211

Token 412: '           ' (ID: 352)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09629489481449127
    2. '           ' → logprob: -2.59629487991333
    3. ' if' → logprob: -4.22129487991333
    4. '               ' → logprob: -5.97129487991333
    5. '       ' → logprob: -11.221295356750488
    6. '   ' → logprob: -11.596295356750488
    7. '                   ' → logprob: -14.971295356750488
    8. '	if' → logprob: -15.471295356750488
    9. ' ' → logprob: -15.596295356750488
    10. '```' → logprob: -15.846295356750488

Token 413: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -3.011373155459296e-05
    2. ' if' → logprob: -11.000030517578125
    3. '           ' → logprob: -11.250030517578125
    4. '               ' → logprob: -14.875030517578125
    5. '   ' → logprob: -18.250030517578125
    6. '
' → logprob: -19.500030517578125
    7. '       ' → logprob: -20.125030517578125
    8. '            
' → logprob: -20.500030517578125
    9. 'If' → logprob: -21.250030517578125
    10. '                   ' → logprob: -21.250030517578125

Token 414: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0024856459349393845
    2. ' f' → logprob: -6.002485752105713
    3. '   ' → logprob: -12.627485275268555
    4. 'not' → logprob: -13.127485275268555
    5. '	f' → logprob: -13.627485275268555
    6. ' ' → logprob: -14.127485275268555
    7. 'len' → logprob: -14.627485275268555
    8. '           ' → logprob: -14.752485275268555
    9. '  ' → logprob: -14.877485275268555
    10. ' not' → logprob: -15.002485275268555

Token 415: '.startswith' (ID: 64340)
  Prédit: '.startswith'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.startswith' → logprob: -0.0002901757834479213
    2. 'startswith' → logprob: -8.500289916992188
    3. '.' → logprob: -9.875289916992188
    4. 'and' → logprob: -10.750289916992188
    5. ' and' → logprob: -11.250289916992188
    6. '.starts' → logprob: -14.625289916992188
    7. '[' → logprob: -16.000289916992188
    8. '[:' → logprob: -16.875289916992188
    9. '.endswith' → logprob: -17.375289916992188
    10. '   ' → logprob: -17.500289916992188

Token 416: '('-' (ID: 33343)
  Prédit: ''-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''-' → logprob: -0.012046047486364841
    2. '('-' → logprob: -4.512045860290527
    3. '"-' → logprob: -7.262045860290527
    4. ''' → logprob: -9.137045860290527
    5. '-' → logprob: -9.262045860290527
    6. '("-' → logprob: -10.262045860290527
    7. '(' → logprob: -11.137045860290527
    8. ' '-'' → logprob: -11.137045860290527
    9. '   ' → logprob: -11.637045860290527
    10. '('' → logprob: -12.637045860290527

Token 417: ''):
' (ID: 26539)
  Prédit: ''):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''):
' → logprob: -0.5404301285743713
    2. '-' → logprob: -1.0404300689697266
    3. ''):' → logprob: -3.5404300689697266
    4. '('' → logprob: -3.7904300689697266
    5. '')' → logprob: -4.790430068969727
    6. 'f' → logprob: -6.915430068969727
    7. ''-' → logprob: -7.165430068969727
    8. '('-' → logprob: -7.540430068969727
    9. '(f' → logprob: -7.540430068969727
    10. ''' → logprob: -7.665430068969727

Token 418: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1203681156039238
    2. 'continue' → logprob: -2.245368003845215
    3. ' continue' → logprob: -4.995368003845215
    4. '           ' → logprob: -8.495368003845215
    5. 'forms' → logprob: -8.745368003845215
    6. 'f' → logprob: -9.370368003845215
    7. ' forms' → logprob: -9.495368003845215
    8. '                   ' → logprob: -9.870368003845215
    9. ',' → logprob: -10.120368003845215
    10. ')' → logprob: -10.745368003845215

Token 419: ' #' (ID: 1069)
  Prédit: 'forms'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'forms' → logprob: -0.0052899690344929695
    2. ' forms' → logprob: -5.2552900314331055
    3. '               ' → logprob: -10.380290031433105
    4. '           ' → logprob: -11.505290031433105
    5. 'form' → logprob: -12.630290031433105
    6. '                   ' → logprob: -12.880290031433105
    7. 'return' → logprob: -13.005290031433105
    8. 'f' → logprob: -13.130290031433105
    9. '(forms' → logprob: -13.130290031433105
    10. 'formes' → logprob: -14.630290031433105

Token 420: ' --' (ID: 2230)
  Prédit: 'forms'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'forms' → logprob: -0.00011546355381142348
    2. ' forms' → logprob: -9.250115394592285
    3. 'f' → logprob: -13.000115394592285
    4. 'continue' → logprob: -13.000115394592285
    5. 'sub' → logprob: -13.125115394592285
    6. '       ' → logprob: -13.250115394592285
    7. 'for' → logprob: -13.375115394592285
    8. '           ' → logprob: -13.625115394592285
    9. '#' → logprob: -13.875115394592285
    10. '(forms' → logprob: -14.000115394592285

Token 421: 'x' (ID: 87)
  Prédit: 'forms'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'forms' → logprob: -0.04900653287768364
    2. ' forms' → logprob: -3.174006462097168
    3. 'f' → logprob: -5.549006462097168
    4. 'return' → logprob: -6.924006462097168
    5. 's' → logprob: -8.049006462097168
    6. '               ' → logprob: -8.424006462097168
    7. '           ' → logprob: -8.674006462097168
    8. 'form' → logprob: -8.799006462097168
    9. '(forms' → logprob: -8.924006462097168
    10. '=' → logprob: -10.049006462097168

Token 422: ' ==' (ID: 951)
  Prédit: 'forms'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'forms' → logprob: -0.4996178448200226
    2. ' forms' → logprob: -1.6246178150177002
    3. '=' → logprob: -2.2496178150177
    4. ' =' → logprob: -3.2496178150177
    5. '(forms' → logprob: -4.499618053436279
    6. '           ' → logprob: -4.749618053436279
    7. '=forms' → logprob: -4.749618053436279
    8. '               ' → logprob: -4.749618053436279
    9. '
' → logprob: -5.124618053436279
    10. ',' → logprob: -6.624618053436279

Token 423: ' x' (ID: 1215)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.00041148843592964113
    2. 'x' → logprob: -7.875411510467529
    3. ' f' → logprob: -10.375411033630371
    4. '{' → logprob: -15.875411033630371
    5. ' x' → logprob: -17.125411987304688
    6. ' ' → logprob: -17.625411987304688
    7. '
' → logprob: -19.000411987304688
    8. '	f' → logprob: -19.125411987304688
    9. '   ' → logprob: -19.500411987304688
    10. 'form' → logprob: -19.750411987304688

Token 424: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03438946604728699
    2. '                   ' → logprob: -3.7843894958496094
    3. 'continue' → logprob: -5.534389495849609
    4. ' continue' → logprob: -6.409389495849609
    5. ' forms' → logprob: -6.534389495849609
    6. ',' → logprob: -6.659389495849609
    7. 'forms' → logprob: -7.534389495849609
    8. '(forms' → logprob: -7.534389495849609
    9. '           ' → logprob: -8.15938949584961
    10. ':
' → logprob: -8.40938949584961

Token 425: ' so' (ID: 813)
  Prédit: ' forms'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' forms' → logprob: -0.4571220576763153
    2. 'forms' → logprob: -1.0821220874786377
    3. '               ' → logprob: -3.7071220874786377
    4. '                   ' → logprob: -6.332121849060059
    5. '           ' → logprob: -7.082121849060059
    6. '(forms' → logprob: -7.957121849060059
    7. '
' → logprob: -9.082121849060059
    8. '   ' → logprob: -9.582121849060059
    9. '                ' → logprob: -9.957121849060059
    10. 'f' → logprob: -10.082121849060059

Token 426: ' flatten' (ID: 61445)
  Prédit: 'forms'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'forms' → logprob: -0.2541956901550293
    2. ' forms' → logprob: -1.5041956901550293
    3. '               ' → logprob: -6.379195690155029
    4. '           ' → logprob: -8.004196166992188
    5. '(forms' → logprob: -10.004196166992188
    6. '
' → logprob: -10.129196166992188
    7. '                   ' → logprob: -10.629196166992188
    8. 'f' → logprob: -10.754196166992188
    9. 'form' → logprob: -11.004196166992188
    10. 'continue' → logprob: -11.129196166992188

Token 427: '
' (ID: 198)
  Prédit: ' forms'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' forms' → logprob: -0.5976802110671997
    2. 'forms' → logprob: -1.2226802110671997
    3. '               ' → logprob: -1.9726802110671997
    4. '(forms' → logprob: -5.22268009185791
    5. '                   ' → logprob: -5.47268009185791
    6. '           ' → logprob: -6.22268009185791
    7. 'f' → logprob: -6.34768009185791
    8. '
' → logprob: -7.59768009185791
    9. ',' → logprob: -7.84768009185791
    10. '                       ' → logprob: -7.97268009185791

Token 428: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009412388317286968
    2. ' forms' → logprob: -7.625941276550293
    3. 'forms' → logprob: -8.500941276550293
    4. '           ' → logprob: -9.000941276550293
    5. '(forms' → logprob: -10.500941276550293
    6. '                   ' → logprob: -10.625941276550293
    7. '
' → logprob: -11.125941276550293
    8. '                
' → logprob: -11.375941276550293
    9. ',' → logprob: -11.500941276550293
    10. 'f' → logprob: -11.500941276550293

Token 429: ' forms' (ID: 11526)
  Prédit: 'forms'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'forms' (adapté à ' forms') → logprob: -0.14454852044582367
    2. ' forms' → logprob: -2.0195484161376953
    3. '               ' → logprob: -7.269548416137695
    4. '           ' → logprob: -7.769548416137695
    5. 'f' → logprob: -8.394548416137695
    6. 'return' → logprob: -8.519548416137695
    7. '(forms' → logprob: -9.769548416137695
    8. '                   ' → logprob: -9.769548416137695
    9. '
' → logprob: -10.144548416137695
    10. 'form' → logprob: -10.394548416137695

Token 430: '.update' (ID: 8689)
  Prédit: '.update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.update' → logprob: -0.41682732105255127
    2. '.' → logprob: -1.1668273210525513
    3. '.add' → logprob: -3.5418272018432617
    4. '   ' → logprob: -8.916827201843262
    5. ' .' → logprob: -8.916827201843262
    6. '=' → logprob: -9.416827201843262
    7. ' |=' → logprob: -9.541827201843262
    8. 'update' → logprob: -10.041827201843262
    9. '.union' → logprob: -10.666827201843262
    10. '|' → logprob: -10.916827201843262

Token 431: '({' (ID: 3972)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.10670141130685806
    2. 'f' → logprob: -2.481701374053955
    3. '({' → logprob: -5.106701374053955
    4. '(f' → logprob: -5.356701374053955
    5. 'self' → logprob: -5.606701374053955
    6. ' {' → logprob: -6.981701374053955
    7. '[f' → logprob: -7.231701374053955
    8. ' f' → logprob: -7.856701374053955
    9. '(self' → logprob: -8.231701850891113
    10. ' ' → logprob: -8.481701850891113

Token 432: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.00035369666875340044
    2. ' f' → logprob: -8.125353813171387
    3. '   ' → logprob: -11.250353813171387
    4. '               ' → logprob: -11.500353813171387
    5. '           ' → logprob: -11.500353813171387
    6. 'x' → logprob: -12.125353813171387
    7. '       ' → logprob: -12.375353813171387
    8. 'form' → logprob: -12.625353813171387
    9. ' ' → logprob: -14.000353813171387
    10. '     ' → logprob: -14.000353813171387

Token 433: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0001487140398239717
    2. '.l' → logprob: -8.87514877319336
    3. '[len' → logprob: -11.87514877319336
    4. '.strip' → logprob: -14.37514877319336
    5. '[-' → logprob: -14.87514877319336
    6. 'f' → logprob: -15.62514877319336
    7. 'l' → logprob: -15.62514877319336
    8. '[l' → logprob: -16.12514877319336
    9. 'for' → logprob: -16.25014877319336
    10. '[
' → logprob: -16.62514877319336

Token 434: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018180029466748238
    2. '2' → logprob: -4.018179893493652
    3. '-' → logprob: -11.018179893493652
    4. ' ' → logprob: -12.018179893493652
    5. '--' → logprob: -13.018179893493652
    6. '   ' → logprob: -13.393179893493652
    7. '       ' → logprob: -13.893179893493652
    8. '
' → logprob: -14.768179893493652
    9. '```' → logprob: -14.768179893493652
    10. '0' → logprob: -14.830679893493652

Token 435: ':]' (ID: 67377)
  Prédit: ':]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.000680265249684453
    2. ':' → logprob: -7.375680446624756
    3. ':],' → logprob: -10.750679969787598
    4. ' :]' → logprob: -11.125679969787598
    5. ':]
' → logprob: -11.750679969787598
    6. ':].' → logprob: -12.250679969787598
    7. ':]

' → logprob: -12.875679969787598
    8. '1' → logprob: -14.000679969787598
    9. ']' → logprob: -14.375679969787598
    10. ':])
' → logprob: -15.875679969787598

Token 436: '})
' (ID: 6795)
  Prédit: '})'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '})' → logprob: -0.20920470356941223
    2. '})
' → logprob: -1.8342046737670898
    3. '           ' → logprob: -4.08420467376709
    4. '               ' → logprob: -5.08420467376709
    5. ' })' → logprob: -5.45920467376709
    6. ' })
' → logprob: -7.83420467376709
    7. '                   ' → logprob: -8.20920467376709
    8. '}' → logprob: -8.83420467376709
    9. '            ' → logprob: -9.33420467376709
    10. '                       ' → logprob: -9.33420467376709

Token 437: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005318254698067904
    2. 'else' → logprob: -7.6255316734313965
    3. ' else' → logprob: -11.250532150268555
    4. '               ' → logprob: -11.250532150268555
    5. '
' → logprob: -11.500532150268555
    6. '       ' → logprob: -12.750532150268555
    7. '		' → logprob: -13.375532150268555
    8. '          ' → logprob: -13.375532150268555
    9. ')' → logprob: -15.500532150268555
    10. 'continue' → logprob: -15.500532150268555

Token 438: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19703233242034912
    2. 'else' (adapté à ' else') → logprob: -1.9470323324203491
    3. ' else' → logprob: -3.3220324516296387
    4. '       ' → logprob: -10.69703197479248
    5. '               ' → logprob: -11.19703197479248
    6. '		' → logprob: -12.07203197479248
    7. '	else' → logprob: -12.57203197479248
    8. '          ' → logprob: -12.57203197479248
    9. 'elif' → logprob: -12.69703197479248
    10. '   ' → logprob: -13.69703197479248

Token 439: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7045002579689026
    2. '               ' → logprob: -1.0795001983642578
    3. ':' → logprob: -1.8295001983642578
    4. '           ' → logprob: -5.954500198364258
    5. '):
' → logprob: -6.954500198364258
    6. ' :
' → logprob: -7.079500198364258
    7. '):' → logprob: -8.704500198364258
    8. ' forms' → logprob: -8.829500198364258
    9. '-' → logprob: -8.954500198364258
    10. '              ' → logprob: -8.954500198364258

Token 440: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8440702557563782
    2. ' forms' → logprob: -0.9690702557563782
    3. 'forms' → logprob: -2.0940701961517334
    4. '           ' → logprob: -2.7190701961517334
    5. '       ' → logprob: -7.8440704345703125
    6. '(forms' → logprob: -8.219070434570312
    7. '```' → logprob: -8.844070434570312
    8. '   ' → logprob: -8.969070434570312
    9. '{' → logprob: -9.344070434570312
    10. '.forms' → logprob: -9.469070434570312

Token 441: ' forms' (ID: 11526)
  Prédit: 'forms'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'forms' (adapté à ' forms') → logprob: -0.0931684821844101
    2. ' forms' → logprob: -2.4681684970855713
    3. '           ' → logprob: -5.843168258666992
    4. '-' → logprob: -7.593168258666992
    5. '               ' → logprob: -8.093168258666992
    6. '       ' → logprob: -8.093168258666992
    7. '{' → logprob: -9.843168258666992
    8. '   ' → logprob: -9.968168258666992
    9. 'form' → logprob: -10.968168258666992
    10. '{-' → logprob: -11.093168258666992

Token 442: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.06048290431499481
    2. '.' → logprob: -3.310482978820801
    3. '.update' → logprob: -3.810482978820801
    4. ' .' → logprob: -10.0604829788208
    5. 'add' → logprob: -12.3104829788208
    6. '   ' → logprob: -12.5604829788208
    7. 'update' → logprob: -13.6854829788208
    8. '       ' → logprob: -14.0604829788208
    9. '           ' → logprob: -14.1854829788208
    10. '{' → logprob: -14.9354829788208

Token 443: '('-' (ID: 33343)
  Prédit: '('-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('-' → logprob: -0.004039102699607611
    2. '(f' → logprob: -5.754039287567139
    3. '(' → logprob: -7.254039287567139
    4. ''-' → logprob: -9.87903881072998
    5. '('-',' → logprob: -10.37903881072998
    6. 'f' → logprob: -10.37903881072998
    7. '("-' → logprob: -10.75403881072998
    8. ' ('' → logprob: -12.25403881072998
    9. '(
' → logprob: -12.50403881072998
    10. '   ' → logprob: -12.75403881072998

Token 444: ''' (ID: 6)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -9.088346359931165e-07
    2. ' f' → logprob: -14.000000953674316
    3. '{' → logprob: -19.375
    4. ''f' → logprob: -19.75
    5. '\f' → logprob: -20.75
    6. ')' → logprob: -21.0
    7. '	f' → logprob: -21.375
    8. '(f' → logprob: -22.0
    9. '[f' → logprob: -22.0
    10. '```' → logprob: -22.125

Token 445: ' +' (ID: 659)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -2.339278580620885e-06
    2. ' f' → logprob: -13.250001907348633
    3. ')' → logprob: -14.500001907348633
    4. '{' → logprob: -17.250001907348633
    5. '+' → logprob: -19.375001907348633
    6. '(f' → logprob: -20.250001907348633
    7. ' ' → logprob: -20.375001907348633
    8. '<|end|>' → logprob: -20.375001907348633
    9. '[f' → logprob: -21.000001907348633
    10. '	f' → logprob: -21.125001907348633

Token 446: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.6240566083070007e-06
    2. ' f' → logprob: -13.375001907348633
    3. '	f' → logprob: -20.500001907348633
    4. '   ' → logprob: -20.750001907348633
    5. '```' → logprob: -21.125001907348633
    6. 'ф' → logprob: -22.875001907348633
    7. ' ' → logprob: -23.000001907348633
    8. '$f' → logprob: -23.000001907348633
    9. ''f' → logprob: -23.000001907348633
    10. ')' → logprob: -23.000001907348633

Token 447: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0059976475313305855
    2. ')
' → logprob: -5.130997657775879
    3. '       ' → logprob: -10.005997657775879
    4. ')return' → logprob: -11.130997657775879
    5. ' )' → logprob: -11.880997657775879
    6. '')' → logprob: -14.005997657775879
    7. 'return' → logprob: -15.130997657775879
    8. ')
' → logprob: -15.130997657775879
    9. '           ' → logprob: -15.130997657775879
    10. '   ' → logprob: -15.380997657775879

Token 448: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006514362758025527
    2. 'return' → logprob: -7.8756513595581055
    3. '
' → logprob: -9.000651359558105
    4. ' return' → logprob: -9.375651359558105
    5. '   ' → logprob: -10.500651359558105
    6. '	' → logprob: -11.250651359558105
    7. '	return' → logprob: -11.500651359558105
    8. '<|end|>' → logprob: -12.750651359558105
    9. '        
' → logprob: -13.125651359558105
    10. '           ' → logprob: -13.250651359558105

Token 449: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38731998205184937
    2. 'return' (adapté à ' return') → logprob: -1.1373200416564941
    3. ' return' → logprob: -7.762320041656494
    4. '   ' → logprob: -11.637319564819336
    5. '	return' → logprob: -12.012319564819336
    6. '
' → logprob: -12.137319564819336
    7. '```' → logprob: -13.762319564819336
    8. ')return' → logprob: -14.887319564819336
    9. '	' → logprob: -15.137319564819336
    10. '           ' → logprob: -15.387319564819336

Token 450: ' forms' (ID: 11526)
  Prédit: 'forms'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'forms' → logprob: -0.03365619108080864
    2. ' forms' → logprob: -3.408656120300293
    3. 'form' → logprob: -12.658656120300293
    4. 'fro' → logprob: -12.783656120300293
    5. '(forms' → logprob: -13.908656120300293
    6. '{' → logprob: -14.033656120300293
    7. 'formats' → logprob: -14.908656120300293
    8. ' formes' → logprob: -14.908656120300293
    9. '   ' → logprob: -14.908656120300293
    10. '_forms' → logprob: -15.658656120300293

Token 451: '


' (ID: 2499)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.2749641239643097
    2. '<|end|>' → logprob: -2.0249640941619873
    3. '
' → logprob: -2.2749640941619873
    4. '

' → logprob: -5.399964332580566
    5. '<|end|>' → logprob: -8.274964332580566
    6. '


' → logprob: -8.524964332580566
    7. '  
' → logprob: -9.024964332580566
    8. '```' → logprob: -9.274964332580566
    9. ' class' → logprob: -9.399964332580566
    10. '    
' → logprob: -9.649964332580566

Token 452: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -3.762356209335849e-05
    2. '```' → logprob: -11.12503719329834
    3. '<class' → logprob: -11.37503719329834
    4. ' class' → logprob: -12.75003719329834
    5. '
' → logprob: -12.87503719329834
    6. '"class' → logprob: -13.62503719329834
    7. '

' → logprob: -13.62503719329834
    8. '<|end|>' → logprob: -14.00003719329834
    9. 'from' → logprob: -14.50003719329834
    10. '(' → logprob: -15.12503719329834

Token 453: ' Bin' (ID: 30917)
  Prédit: 'And'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'And' → logprob: -0.06204420328140259
    2. ' And' → logprob: -2.812044143676758
    3. 'Or' → logprob: -9.812044143676758
    4. ' Or' → logprob: -11.937044143676758
    5. 'Bin' → logprob: -12.062044143676758
    6. 'Binary' → logprob: -13.062044143676758
    7. '_and' → logprob: -13.187044143676758
    8. ' Bin' → logprob: -13.812044143676758
    9. '(' → logprob: -14.062044143676758
    10. 'and' → logprob: -14.437044143676758

Token 454: 'Op' (ID: 7766)
  Prédit: 'Op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Op' → logprob: -0.004836888052523136
    2. 'op' → logprob: -5.6298370361328125
    3. 'ary' → logprob: -7.0048370361328125
    4. 'OP' → logprob: -9.004837036132812
    5. 'omial' → logprob: -9.754837036132812
    6. 'Expr' → logprob: -10.004837036132812
    7. '('' → logprob: -10.254837036132812
    8. '(op' → logprob: -10.379837036132812
    9. ')' → logprob: -11.754837036132812
    10. 'Operator' → logprob: -12.254837036132812

Token 455: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.5286174416542053
    2. '(' → logprob: -0.9036174416542053
    3. '(Abstract' → logprob: -5.9036173820495605
    4. '(Boolean' → logprob: -7.0286173820495605
    5. '("("' → logprob: -8.278617858886719
    6. ' (' → logprob: -8.653617858886719
    7. '(False' → logprob: -8.778617858886719
    8. '((' → logprob: -9.028617858886719
    9. '(True' → logprob: -9.278617858886719
    10. '(Base' → logprob: -9.403617858886719

Token 456: 'ool' (ID: 971)
  Prédit: 'ool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ool' → logprob: -0.00038300611777231097
    2. 'Bool' → logprob: -8.000383377075195
    3. 'Expr' → logprob: -10.250383377075195
    4. 'oolean' → logprob: -12.375383377075195
    5. 'o' → logprob: -12.500383377075195
    6. 'oo' → logprob: -13.125383377075195
    7. 'OOL' → logprob: -13.500383377075195
    8. 'ools' → logprob: -14.875383377075195
    9. 'O' → logprob: -16.125383377075195
    10. '(B' → logprob: -16.375383377075195

Token 457: 'Expr' (ID: 21037)
  Prédit: 'Expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Expr' → logprob: -0.0001817297888919711
    2. 'Op' → logprob: -8.625182151794434
    3. 'expr' → logprob: -13.375182151794434
    4. ' Expr' → logprob: -15.000182151794434
    5. ')' → logprob: -16.000181198120117
    6. '_expr' → logprob: -16.750181198120117
    7. 'op' → logprob: -16.750181198120117
    8. 'Bool' → logprob: -16.750181198120117
    9. '.Expr' → logprob: -17.875181198120117
    10. '(expr' → logprob: -18.125181198120117

Token 458: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4862563908100128
    2. '):' → logprob: -0.9862563610076904
    3. ',' → logprob: -5.3612565994262695
    4. '(' → logprob: -5.4862565994262695
    5. '(Abstract' → logprob: -6.8612565994262695
    6. ':' → logprob: -6.9862565994262695
    7. '   ' → logprob: -7.7362565994262695
    8. '(B' → logprob: -7.8612565994262695
    9. ':
' → logprob: -8.36125659942627
    10. '<|end|>' → logprob: -9.98625659942627

Token 459: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6472561955451965
    2. '(' → logprob: -1.7722561359405518
    3. ':' → logprob: -2.2722561359405518
    4. ':
' → logprob: -2.3972561359405518
    5. '):
' → logprob: -2.7722561359405518
    6. '__' → logprob: -4.397256374359131
    7. '(Abstract' → logprob: -4.772256374359131
    8. '):' → logprob: -5.022256374359131
    9. 'ABC' → logprob: -5.272256374359131
    10. '(B' → logprob: -5.772256374359131

Token 460: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' (adapté à ' __') → logprob: -0.004055960103869438
    2. '   ' → logprob: -6.004055976867676
    3. '
' → logprob: -7.379055976867676
    4. ' __' → logprob: -7.629055976867676
    5. '<|end|>' → logprob: -9.254055976867676
    6. '___' → logprob: -9.504055976867676
    7. '('__' → logprob: -10.254055976867676
    8. '...' → logprob: -10.379055976867676
    9. ' ' → logprob: -10.629055976867676
    10. '(' → logprob: -10.629055976867676

Token 461: 'slots' (ID: 101916)
  Prédit: 'slots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'slots' → logprob: -7.64839569455944e-05
    2. '_slots' → logprob: -9.500076293945312
    3. '__' → logprob: -14.125076293945312
    4. ' slots' → logprob: -14.125076293945312
    5. 'tabs' → logprob: -17.250076293945312
    6. 'Slots' → logprob: -18.000076293945312
    7. 'sl' → logprob: -18.125076293945312
    8. 'tokens' → logprob: -18.125076293945312
    9. 'slot' → logprob: -18.500076293945312
    10. 'spaces' → logprob: -18.750076293945312

Token 462: '__' (ID: 771)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47409453988075256
    2. ' =' → logprob: -0.9740945100784302
    3. '__' → logprob: -11.09909439086914
    4. '=('' → logprob: -13.22409439086914
    5. '_' → logprob: -14.84909439086914
    6. ' ' → logprob: -16.34909439086914
    7. '_=' → logprob: -16.47409439086914
    8. '=['' → logprob: -17.47409439086914
    9. ')' → logprob: -17.59909439086914
    10. '   ' → logprob: -18.34909439086914

Token 463: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141959190368652
    2. ' =' → logprob: -1.7014195919036865
    3. '=('' → logprob: -12.201419830322266
    4. '('' → logprob: -15.326419830322266
    5. '__' → logprob: -15.451419830322266
    6. '   ' → logprob: -15.951419830322266
    7. '=['' → logprob: -16.326419830322266
    8. '='' → logprob: -17.013919830322266
    9. '('_' → logprob: -17.076419830322266
    10. ':' → logprob: -17.076419830322266

Token 464: ' ('' (ID: 9906)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0018146444344893098
    2. '('_' → logprob: -6.376814842224121
    3. '('__' → logprob: -9.126814842224121
    4. ''op' → logprob: -13.376814842224121
    5. ' ('' → logprob: -13.501814842224121
    6. ''' → logprob: -15.376814842224121
    7. ''ex' → logprob: -15.501814842224121
    8. '()' → logprob: -16.251813888549805
    9. '(('' → logprob: -16.376813888549805
    10. '(op' → logprob: -16.751813888549805

Token 465: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.4326978325843811
    2. 'op' → logprob: -1.0576977729797363
    3. 'lhs' → logprob: -5.682697772979736
    4. 'operator' → logprob: -7.932697772979736
    5. 'expr' → logprob: -8.807698249816895
    6. ' left' → logprob: -10.307698249816895
    7. ' op' → logprob: -11.557698249816895
    8. 'opr' → logprob: -12.307698249816895
    9. 'l' → logprob: -12.557698249816895
    10. 'oper' → logprob: -12.682698249816895

Token 466: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.12742745876312256
    2. ',' → logprob: -2.127427577972412
    3. '','' → logprob: -7.877427577972412
    4. ','' → logprob: -10.127427101135254
    5. ',left' → logprob: -10.127427101135254
    6. 'left' → logprob: -10.502427101135254
    7. ' ,' → logprob: -12.502427101135254
    8. ' ',' → logprob: -13.002427101135254
    9. ''' → logprob: -13.377427101135254
    10. '",' → logprob: -13.752427101135254

Token 467: ' '' (ID: 461)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.022070173174142838
    2. ''op' → logprob: -4.772070407867432
    3. 'operator' → logprob: -5.147070407867432
    4. ''' → logprob: -5.397070407867432
    5. 'op' → logprob: -6.147070407867432
    6. ' right' → logprob: -7.272070407867432
    7. '   ' → logprob: -10.272069931030273
    8. ' '' → logprob: -10.397069931030273
    9. '	right' → logprob: -10.522069931030273
    10. ' operator' → logprob: -10.897069931030273

Token 468: 'right' (ID: 2460)
  Prédit: 'right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0004123192047700286
    2. 'op' → logprob: -8.000411987304688
    3. 'operator' → logprob: -9.875411987304688
    4. ' right' → logprob: -10.625411987304688
    5. '	right' → logprob: -14.125411987304688
    6. '
' → logprob: -16.375411987304688
    7. ',right' → logprob: -17.375411987304688
    8. '

' → logprob: -17.375411987304688
    9. ' op' → logprob: -17.500411987304688
    10. 'opcode' → logprob: -17.750411987304688

Token 469: '')

' (ID: 9735)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '',' → logprob: -0.008969905786216259
    2. ',' → logprob: -4.758969783782959
    3. '','' → logprob: -8.258970260620117
    4. '')' → logprob: -9.758970260620117
    5. ','' → logprob: -10.508970260620117
    6. ''' → logprob: -12.383970260620117
    7. ' ',' → logprob: -13.133970260620117
    8. '',
' → logprob: -13.383970260620117
    9. ' ,' → logprob: -14.133970260620117
    10. '",' → logprob: -14.258970260620117

Token 470: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04750494658946991
    2. '
' → logprob: -3.6725049018859863
    3. '    
' → logprob: -4.297504901885986
    4. ',' → logprob: -5.547504901885986
    5. '<|end|>' → logprob: -6.047504901885986
    6. '  
' → logprob: -8.422505378723145
    7. 'def' → logprob: -8.797505378723145
    8. '<|end|>' → logprob: -9.047505378723145
    9. ',
' → logprob: -9.672505378723145
    10. '	
' → logprob: -9.922505378723145

Token 471: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.051208097487688065
    2. 'left' → logprob: -3.176208019256592
    3. '   ' → logprob: -5.801208019256592
    4. '__' → logprob: -6.551208019256592
    5. '(left' → logprob: -6.551208019256592
    6. ' def' → logprob: -6.676208019256592
    7. ' left' → logprob: -8.42620849609375
    8. '('' → logprob: -8.67620849609375
    9. '    
' → logprob: -8.92620849609375
    10. '(' → logprob: -9.05120849609375

Token 472: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.19838570058345795
    2. ' __' → logprob: -1.9483857154846191
    3. 'init' → logprob: -4.323385715484619
    4. 'def' → logprob: -4.823385715484619
    5. '_init' → logprob: -5.073385715484619
    6. 'left' → logprob: -5.198385715484619
    7. '_left' → logprob: -5.823385715484619
    8. ' left' → logprob: -7.073385715484619
    9. ' def' → logprob: -7.948385715484619
    10. ' init' → logprob: -9.948385238647461

Token 473: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.47409194707870483
    2. 'slots' → logprob: -0.9740919470787048
    3. '_slots' → logprob: -12.349091529846191
    4. 'slot' → logprob: -12.974091529846191
    5. ' slots' → logprob: -13.224091529846191
    6. '_init' → logprob: -13.349091529846191
    7. '   ' → logprob: -13.849091529846191
    8. '```' → logprob: -13.974091529846191
    9. ' init' → logprob: -14.974091529846191
    10. 'sl' → logprob: -15.349091529846191

Token 474: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.015311109833419323
    2. '(self' → logprob: -4.265311241149902
    3. '__' → logprob: -7.140311241149902
    4. '__(
' → logprob: -8.890311241149902
    5. '(' → logprob: -9.015311241149902
    6. 'self' → logprob: -9.765311241149902
    7. '_(' → logprob: -10.890311241149902
    8. '__((' → logprob: -11.890311241149902
    9. '=' → logprob: -12.390311241149902
    10. ' (' → logprob: -12.515311241149902

Token 475: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.2352385965641588e-05
    2. ' self' → logprob: -11.625012397766113
    3. '   ' → logprob: -13.500012397766113
    4. 'left' → logprob: -13.750012397766113
    5. ',' → logprob: -14.375012397766113
    6. '       ' → logprob: -15.875012397766113
    7. '(self' → logprob: -16.125011444091797
    8. '
' → logprob: -17.250011444091797
    9. '	self' → logprob: -17.250011444091797
    10. ',self' → logprob: -17.250011444091797

Token 476: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09055324643850327
    2. 'self' → logprob: -2.5905532836914062
    3. '(self' → logprob: -4.465553283691406
    4. '__(' → logprob: -10.215553283691406
    5. ' self' → logprob: -10.840553283691406
    6. ',self' → logprob: -11.215553283691406
    7. '   ' → logprob: -11.715553283691406
    8. ' ,' → logprob: -12.215553283691406
    9. ' (' → logprob: -12.340553283691406
    10. 'left' → logprob: -12.340553283691406

Token 477: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -5.8961017202818766e-05
    2. ' left' → logprob: -9.750059127807617
    3. '   ' → logprob: -15.125059127807617
    4. '	left' → logprob: -15.500059127807617
    5. '(left' → logprob: -16.875059127807617
    6. ' ' → logprob: -17.250059127807617
    7. '.left' → logprob: -18.000059127807617
    8. 'self' → logprob: -18.375059127807617
    9. '[left' → logprob: -18.500059127807617
    10. 'lef' → logprob: -18.500059127807617

Token 478: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000816773681435734
    2. ' ,' → logprob: -7.125816822052002
    3. '   ' → logprob: -12.000816345214844
    4. ',
' → logprob: -12.875816345214844
    5. '=' → logprob: -13.875816345214844
    6. ',left' → logprob: -13.875816345214844
    7. ':' → logprob: -14.750816345214844
    8. '       ' → logprob: -15.625816345214844
    9. '',' → logprob: -15.750816345214844
    10. ' ' → logprob: -15.750816345214844

Token 479: ' Bool' (ID: 28693)
  Prédit: 'Bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Bool' → logprob: -6.873571692267433e-05
    2. ' Bool' → logprob: -9.625068664550781
    3. 'bool' → logprob: -13.375068664550781
    4. 'Expr' → logprob: -14.625068664550781
    5. ')' → logprob: -14.875068664550781
    6. ' ' → logprob: -16.25006866455078
    7. '   ' → logprob: -16.37506866455078
    8. '       ' → logprob: -17.50006866455078
    9. 'left' → logprob: -17.87506866455078
    10. ',' → logprob: -18.00006866455078

Token 480: 'Expr' (ID: 21037)
  Prédit: 'Expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Expr' → logprob: -0.012576993554830551
    2. ',' → logprob: -4.387577056884766
    3. '   ' → logprob: -10.262577056884766
    4. ' ,' → logprob: -11.137577056884766
    5. ' Expr' → logprob: -12.137577056884766
    6. '_expr' → logprob: -12.262577056884766
    7. 'Op' → logprob: -12.762577056884766
    8. 'Express' → logprob: -13.387577056884766
    9. '  ' → logprob: -14.262577056884766
    10. 'expr' → logprob: -14.637577056884766

Token 481: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.666993507067673e-05
    2. ' ,' → logprob: -10.250036239624023
    3. '   ' → logprob: -14.500036239624023
    4. ',left' → logprob: -14.875036239624023
    5. ',right' → logprob: -15.750036239624023
    6. '       ' → logprob: -16.250036239624023
    7. ',
' → logprob: -16.250036239624023
    8. '‌,' → logprob: -17.000036239624023
    9. ' ' → logprob: -18.625036239624023
    10. '	' → logprob: -18.875036239624023

Token 482: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.2519335150718689
    2. ' right' → logprob: -1.5019335746765137
    3. '	right' → logprob: -12.501933097839355
    4. '   ' → logprob: -15.251933097839355
    5. ',right' → logprob: -15.751933097839355
    6. ' ' → logprob: -15.876933097839355
    7. '    ' → logprob: -16.126934051513672
    8. '       ' → logprob: -17.251934051513672
    9. '     ' → logprob: -17.876934051513672
    10. '(right' → logprob: -18.126934051513672

Token 483: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2817405164241791
    2. ':' → logprob: -1.4067405462265015
    3. ' ,' → logprob: -7.906740665435791
    4. ')' → logprob: -9.156740188598633
    5. '):' → logprob: -10.156740188598633
    6. '=' → logprob: -10.406740188598633
    7. ' :' → logprob: -11.031740188598633
    8. '<|end|>' → logprob: -11.656740188598633
    9. '   ' → logprob: -11.781740188598633
    10. '=None' → logprob: -12.406740188598633

Token 484: ' Bool' (ID: 28693)
  Prédit: 'Bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Bool' → logprob: -0.003178901970386505
    2. ' Bool' → logprob: -5.75317907333374
    3. 'bool' → logprob: -14.253178596496582
    4. ' ' → logprob: -15.628178596496582
    5. '   ' → logprob: -16.0031795501709
    6. ')' → logprob: -16.2531795501709
    7. '       ' → logprob: -17.0031795501709
    8. '  ' → logprob: -17.6281795501709
    9. '.Bool' → logprob: -18.0031795501709
    10. '_bool' → logprob: -18.0031795501709

Token 485: 'Expr' (ID: 21037)
  Prédit: 'Expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Expr' → logprob: -0.003405136289075017
    2. '):' → logprob: -6.1284050941467285
    3. ':' → logprob: -6.8784050941467285
    4. ')' → logprob: -9.128405570983887
    5. '   ' → logprob: -10.878405570983887
    6. ',' → logprob: -11.003405570983887
    7. '):
' → logprob: -11.378405570983887
    8. ' ):' → logprob: -11.378405570983887
    9. 'expr' → logprob: -11.753405570983887
    10. '_expr' → logprob: -12.378405570983887

Token 486: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012440663762390614
    2. ',' → logprob: -5.1374406814575195
    3. '):
' → logprob: -5.1374406814575195
    4. ')' → logprob: -7.5124406814575195
    5. '   ' → logprob: -10.01244068145752
    6. ' ):' → logprob: -10.88744068145752
    7. '):
' → logprob: -13.13744068145752
    8. ' ' → logprob: -14.01244068145752
    9. '),' → logprob: -14.01244068145752
    10. ':' → logprob: -14.01244068145752

Token 487: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3216777443885803
    2. ',' → logprob: -1.5716776847839355
    3. 'self' → logprob: -3.0716776847839355
    4. 'left' → logprob: -4.0716776847839355
    5. ',left' → logprob: -6.5716776847839355
    6. ' left' → logprob: -6.6966776847839355
    7. '   ' → logprob: -7.3216776847839355
    8. ' self' → logprob: -8.571678161621094
    9. ',self' → logprob: -9.196678161621094
    10. '	' → logprob: -9.196678161621094

Token 488: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0007225605077110231
    2. '       ' → logprob: -7.875722408294678
    3. ' self' → logprob: -8.000722885131836
    4. '   ' → logprob: -12.375722885131836
    5. '	self' → logprob: -12.750722885131836
    6. '	' → logprob: -17.000722885131836
    7. '(self' → logprob: -17.750722885131836
    8. 'super' → logprob: -18.125722885131836
    9. '           ' → logprob: -18.250722885131836
    10. '     ' → logprob: -18.500722885131836

Token 489: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -8.292095299111679e-05
    2. '.' → logprob: -9.750082969665527
    3. 'left' → logprob: -10.625082969665527
    4. ' .' → logprob: -15.875082969665527
    5. '.right' → logprob: -16.50008201599121
    6. '.Left' → logprob: -17.25008201599121
    7. '	left' → logprob: -17.87508201599121
    8. '.le' → logprob: -17.87508201599121
    9. ' left' → logprob: -19.12508201599121
    10. '_left' → logprob: -19.50008201599121

Token 490: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10196065902709961
    2. ' =' → logprob: -2.3519606590270996
    3. ',' → logprob: -6.3519606590271
    4. ' ,' → logprob: -12.351961135864258
    5. '   ' → logprob: -13.726961135864258
    6. ',
' → logprob: -13.976961135864258
    7. ' ' → logprob: -13.976961135864258
    8. ')' → logprob: -14.101961135864258
    9. '    ' → logprob: -15.476961135864258
    10. ',left' → logprob: -15.476961135864258

Token 491: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.01814994215965271
    2. ' left' → logprob: -4.0181498527526855
    3. '	left' → logprob: -17.893150329589844
    4. ' lef' → logprob: -19.018150329589844
    5. 'lef' → logprob: -19.893150329589844
    6. 'right' → logprob: -20.893150329589844
    7. '(left' → logprob: -21.018150329589844
    8. '.left' → logprob: -21.143150329589844
    9. '[left' → logprob: -21.643150329589844
    10. ' ' → logprob: -21.893150329589844

Token 492: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0282578244805336
    2. ',' → logprob: -3.7782578468322754
    3. 'self' → logprob: -5.903257846832275
    4. '
' → logprob: -6.778257846832275
    5. '	' → logprob: -7.653257846832275
    6. ' ' → logprob: -8.778257369995117
    7. ',
' → logprob: -8.903257369995117
    8. '   ' → logprob: -9.403257369995117
    9. '<|end|>' → logprob: -10.278257369995117
    10. ' 
' → logprob: -10.403257369995117

Token 493: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013393030501902103
    2. 'self' → logprob: -4.388392925262451
    3. ',' → logprob: -7.263392925262451
    4. ' self' → logprob: -9.51339340209961
    5. '	' → logprob: -10.01339340209961
    6. '	self' → logprob: -11.01339340209961
    7. '   ' → logprob: -11.13839340209961
    8. ',self' → logprob: -11.76339340209961
    9. '
' → logprob: -11.88839340209961
    10. ',
' → logprob: -12.63839340209961

Token 494: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -9.984787902794778e-05
    2. '       ' → logprob: -9.375100135803223
    3. ' self' → logprob: -11.125100135803223
    4. '   ' → logprob: -15.625100135803223
    5. '	self' → logprob: -17.250099182128906
    6. '
' → logprob: -17.375099182128906
    7. '(self' → logprob: -18.375099182128906
    8. '           ' → logprob: -18.625099182128906
    9. '     ' → logprob: -19.250099182128906
    10. '      ' → logprob: -19.625099182128906

Token 495: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.12949946522712708
    2. 'right' → logprob: -2.1294994354248047
    3. ' right' → logprob: -6.629499435424805
    4. '.' → logprob: -6.754499435424805
    5. '	right' → logprob: -9.879499435424805
    6. ' .' → logprob: -10.879499435424805
    7. ',right' → logprob: -12.504499435424805
    8. ' ' → logprob: -13.004499435424805
    9. ',' → logprob: -13.004499435424805
    10. '   ' → logprob: -13.879499435424805

Token 496: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09914331883192062
    2. ' =' → logprob: -2.5991432666778564
    3. '<|end|>' → logprob: -3.9741432666778564
    4. ',' → logprob: -7.2241435050964355
    5. ' ' → logprob: -8.474143028259277
    6. ')' → logprob: -8.599143028259277
    7. '<|end|>' → logprob: -9.349143028259277
    8. ':' → logprob: -11.724143028259277
    9. '.' → logprob: -11.849143028259277
    10. '[' → logprob: -11.849143028259277

Token 497: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.00861468818038702
    2. ' right' → logprob: -4.758614540100098
    3. '	right' → logprob: -16.258615493774414
    4. '[right' → logprob: -19.383615493774414
    5. '(right' → logprob: -19.758615493774414
    6. ' ' → logprob: -19.758615493774414
    7. 'Right' → logprob: -19.883615493774414
    8. '.right' → logprob: -20.383615493774414
    9. 'rights' → logprob: -20.383615493774414
    10. '   ' → logprob: -20.758615493774414

Token 498: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 499: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.007289519999176264
    2. '   ' → logprob: -5.507289409637451
    3. '
' → logprob: -6.382289409637451
    4. 'def' → logprob: -7.382289409637451
    5. '<|end|>' → logprob: -8.13228988647461
    6. '    
' → logprob: -8.38228988647461
    7. 'from' → logprob: -9.88228988647461
    8. '@' → logprob: -10.25728988647461
    9. ' class' → logprob: -10.38228988647461
    10. 'import' → logprob: -10.38228988647461

Token 500: ' And' (ID: 1958)
  Prédit: 'And'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'And' → logprob: -0.0016624432755634189
    2. ' And' → logprob: -6.751662254333496
    3. 'Or' → logprob: -7.626662254333496
    4. 'Bin' → logprob: -13.876662254333496
    5. 'AND' → logprob: -14.251662254333496
    6. '_' → logprob: -14.251662254333496
    7. 'X' → logprob: -14.376662254333496
    8. ' Or' → logprob: -14.626662254333496
    9. 'Impl' → logprob: -15.001662254333496
    10. '_and' → logprob: -15.876662254333496

Token 501: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.0008383385138586164
    2. '(' → logprob: -7.125838279724121
    3. '(Binary' → logprob: -10.500838279724121
    4. ' (' → logprob: -12.625838279724121
    5. '(
' → logprob: -13.875838279724121
    6. 'Bin' → logprob: -14.750838279724121
    7. '(bin' → logprob: -14.875838279724121
    8. 'B' → logprob: -15.500838279724121
    9. '(Bit' → logprob: -15.625838279724121
    10. '('' → logprob: -15.750838279724121

Token 502: 'in' (ID: 258)
  Prédit: 'in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.00023119196703191847
    2. 'In' → logprob: -8.75023078918457
    3. 'Bin' → logprob: -10.75023078918457
    4. 'ool' → logprob: -11.00023078918457
    5. '(in' → logprob: -11.87523078918457
    6. 'inom' → logprob: -12.50023078918457
    7. 'i' → logprob: -12.50023078918457
    8. 'Bool' → logprob: -12.50023078918457
    9. '(' → logprob: -12.87523078918457
    10. 'ind' → logprob: -13.25023078918457

Token 503: 'Op' (ID: 7766)
  Prédit: 'Op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Op' → logprob: -4.320199877838604e-07
    2. '(Op' → logprob: -15.875
    3. 'Ops' → logprob: -16.625
    4. ' Op' → logprob: -16.875
    5. '(' → logprob: -17.5
    6. '_op' → logprob: -17.625
    7. 'op' → logprob: -17.625
    8. 'OP' → logprob: -17.875
    9. 'O' → logprob: -18.375
    10. 'Or' → logprob: -19.75

Token 504: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003918937873095274
    2. '):
' → logprob: -5.7539191246032715
    3. ')' → logprob: -7.2539191246032715
    4. ' ):' → logprob: -11.253918647766113
    5. '):

' → logprob: -11.878918647766113
    6. ',' → logprob: -11.878918647766113
    7. '   ' → logprob: -12.253918647766113
    8. ':' → logprob: -13.878918647766113
    9. '):
' → logprob: -14.503918647766113
    10. '),' → logprob: -16.12891960144043

Token 505: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002072109840810299
    2. '):
' → logprob: -6.752072334289551
    3. ':' → logprob: -8.37707233428955
    4. '):' → logprob: -8.50207233428955
    5. '    
' → logprob: -9.25207233428955
    6. '__' → logprob: -9.25207233428955
    7. '
' → logprob: -9.87707233428955
    8. ')' → logprob: -9.87707233428955
    9. '<|end|>' → logprob: -10.37707233428955
    10. ':
' → logprob: -10.62707233428955

Token 506: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.2705838978290558
    2. '__' → logprob: -1.7705838680267334
    3. '   ' → logprob: -2.7705838680267334
    4. '
' → logprob: -5.6455841064453125
    5. ' def' → logprob: -7.5205841064453125
    6. ' __' → logprob: -9.645584106445312
    7. '    
' → logprob: -11.020584106445312
    8. '_def' → logprob: -11.645584106445312
    9. '___' → logprob: -11.895584106445312
    10. '	def' → logprob: -12.270584106445312

Token 507: ' evaluate' (ID: 21646)
  Prédit: ' evaluate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' evaluate' → logprob: -0.10062865912914276
    2. 'evaluate' → logprob: -2.350628614425659
    3. ' canonical' → logprob: -8.100628852844238
    4. 'canonical' → logprob: -9.600628852844238
    5. 'valuate' → logprob: -11.475628852844238
    6. ' ' → logprob: -11.600628852844238
    7. ' def' → logprob: -12.100628852844238
    8. 'def' → logprob: -12.350628852844238
    9. '  ' → logprob: -12.350628852844238
    10. '   ' → logprob: -12.725628852844238

Token 508: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.292907877039397e-06
    2. '(' → logprob: -13.00000286102295
    3. ' (' → logprob: -14.50000286102295
    4. '   ' → logprob: -15.12500286102295
    5. '(
' → logprob: -16.000003814697266
    6. ' ' → logprob: -17.500003814697266
    7. '(s' → logprob: -17.750003814697266
    8. '       ' → logprob: -17.875003814697266
    9. 'self' → logprob: -17.875003814697266
    10. '=self' → logprob: -18.000003814697266

Token 509: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.38789916038513184
    2. '(self' → logprob: -1.1378991603851318
    3. 'self' → logprob: -7.887899398803711
    4. '   ' → logprob: -7.887899398803711
    5. ',self' → logprob: -9.262899398803711
    6. ' ,' → logprob: -9.637899398803711
    7. '       ' → logprob: -10.512899398803711
    8. ' self' → logprob: -10.637899398803711
    9. ')' → logprob: -10.887899398803711
    10. ' ' → logprob: -11.012899398803711

Token 510: ' env' (ID: 9744)
  Prédit: 'env'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'env' → logprob: -0.2519896924495697
    2. ' env' → logprob: -1.501989722251892
    3. '   ' → logprob: -11.001989364624023
    4. 'self' → logprob: -11.251989364624023
    5. '(env' → logprob: -11.376989364624023
    6. 'lambda' → logprob: -11.501989364624023
    7. '       ' → logprob: -12.626989364624023
    8. ' lambda' → logprob: -13.376989364624023
    9. ' ' → logprob: -13.876989364624023
    10. '.env' → logprob: -14.251989364624023

Token 511: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5455202460289001
    2. ')' → logprob: -1.545520305633545
    3. ',' → logprob: -1.795520305633545
    4. '):
' → logprob: -3.795520305633545
    5. ' ):' → logprob: -4.920520305633545
    6. '   ' → logprob: -5.170520305633545
    7. '       ' → logprob: -6.295520305633545
    8. ':' → logprob: -6.420520305633545
    9. ' )' → logprob: -6.920520305633545
    10. 'self' → logprob: -7.420520305633545

Token 512: ' dict' (ID: 11878)
  Prédit: 'dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dict' → logprob: -0.03827132657170296
    2. ' dict' → logprob: -3.288271427154541
    3. 'bool' → logprob: -8.538270950317383
    4. 'def' → logprob: -10.413270950317383
    5. ' bool' → logprob: -13.538270950317383
    6. '       ' → logprob: -14.038270950317383
    7. 'return' → logprob: -14.663270950317383
    8. ' def' → logprob: -14.663270950317383
    9. ')' → logprob: -15.288270950317383
    10. '   ' → logprob: -15.788270950317383

Token 513: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07702659070491791
    2. '):
' → logprob: -3.077026605606079
    3. '):' → logprob: -3.577026605606079
    4. '):
' → logprob: -10.2020263671875
    5. ' )' → logprob: -10.8270263671875
    6. '   ' → logprob: -11.4520263671875
    7. ' ):
' → logprob: -12.0770263671875
    8. '):

' → logprob: -12.7020263671875
    9. ' ):' → logprob: -12.9520263671875
    10. '       ' → logprob: -14.3270263671875

Token 514: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.26650533080101013
    2. ':
' → logprob: -1.5165053606033325
    3. '       ' → logprob: -4.391505241394043
    4. '   ' → logprob: -6.766505241394043
    5. '):
' → logprob: -7.766505241394043
    6. ')' → logprob: -8.391505241394043
    7. '):' → logprob: -8.891505241394043
    8. ':return' → logprob: -9.266505241394043
    9. ' ->' → logprob: -11.266505241394043
    10. '->' → logprob: -11.641505241394043

Token 515: ' bool' (ID: 3792)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4174932837486267
    2. 'bool' → logprob: -1.4174933433532715
    3. ' self' → logprob: -2.6674933433532715
    4. 'return' → logprob: -3.9174933433532715
    5. ' bool' → logprob: -4.9174933433532715
    6. ' return' → logprob: -6.1674933433532715
    7. '(self' → logprob: -8.917492866516113
    8. '       ' → logprob: -9.792492866516113
    9. '   ' → logprob: -10.042492866516113
    10. '(bool' → logprob: -11.792492866516113

Token 516: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1814204454421997
    2. ':
' → logprob: -2.43142032623291
    3. ':' → logprob: -2.55642032623291
    4. '):
' → logprob: -8.68142032623291
    5. '():
' → logprob: -9.30642032623291
    6. ':return' → logprob: -9.68142032623291
    7. '   ' → logprob: -10.68142032623291
    8. ' return' → logprob: -10.80642032623291
    9. 'return' → logprob: -11.55642032623291
    10. '):' → logprob: -11.80642032623291

Token 517: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00024358915106859058
    2. 'return' → logprob: -8.500243186950684
    3. ' return' → logprob: -10.125243186950684
    4. '   ' → logprob: -18.625244140625
    5. '	return' → logprob: -19.500244140625
    6. '      ' → logprob: -19.875244140625
    7. '	' → logprob: -19.875244140625
    8. '           ' → logprob: -20.375244140625
    9. '     ' → logprob: -21.250244140625
    10. '               ' → logprob: -21.500244140625

Token 518: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06429518014192581
    2. '       ' → logprob: -2.8142952919006348
    3. ' return' → logprob: -6.064295291900635
    4. '	return' → logprob: -15.189294815063477
    5. '   ' → logprob: -16.189294815063477
    6. '{return' → logprob: -16.814294815063477
    7. '
' → logprob: -17.939294815063477
    8. ' ' → logprob: -18.064294815063477
    9. 'self' → logprob: -18.814294815063477
    10. '      ' → logprob: -19.064294815063477

Token 519: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.000553151941858232
    2. ' self' → logprob: -7.500553131103516
    3. '(self' → logprob: -16.125553131103516
    4. '	self' → logprob: -19.375553131103516
    5. '   ' → logprob: -20.875553131103516
    6. '[self' → logprob: -21.625553131103516
    7. 's' → logprob: -22.500553131103516
    8. ' ' → logprob: -23.125553131103516
    9. '=self' → logprob: -23.500553131103516
    10. 'bool' → logprob: -23.750553131103516

Token 520: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -6.704273118884885e-07
    2. '.right' → logprob: -14.875000953674316
    3. '.' → logprob: -15.375000953674316
    4. 'left' → logprob: -17.375
    5. ' .' → logprob: -19.625
    6. '.Left' → logprob: -19.625
    7. '.value' → logprob: -21.75
    8. '.parent' → logprob: -21.875
    9. '[left' → logprob: -21.875
    10. '.l' → logprob: -22.375

Token 521: '.evaluate' (ID: 71397)
  Prédit: '.evaluate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.evaluate' → logprob: -0.0009109867387451231
    2. '.' → logprob: -7.125910758972168
    3. ' .' → logprob: -9.375910758972168
    4. 'evaluate' → logprob: -10.875910758972168
    5. ').' → logprob: -13.625910758972168
    6. '   ' → logprob: -13.875910758972168
    7. ' ' → logprob: -15.875910758972168
    8. ' and' → logprob: -16.250911712646484
    9. '
' → logprob: -17.125911712646484
    10. '  ' → logprob: -17.125911712646484

Token 522: '(env' (ID: 38512)
  Prédit: '(env'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(env' → logprob: -3.2378600735682994e-05
    2. 'env' → logprob: -10.500032424926758
    3. '(' → logprob: -13.000032424926758
    4. ' (' → logprob: -13.000032424926758
    5. ' env' → logprob: -15.625032424926758
    6. 'and' → logprob: -17.000032424926758
    7. '(en' → logprob: -17.375032424926758
    8. '(environment' → logprob: -17.625032424926758
    9. '	env' → logprob: -18.625032424926758
    10. ' and' → logprob: -18.625032424926758

Token 523: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3411269783973694
    2. ' and' → logprob: -1.5911269187927246
    3. 'and' → logprob: -2.4661269187927246
    4. ' )' → logprob: -8.466127395629883
    5. ',' → logprob: -8.716127395629883
    6. 'env' → logprob: -10.341127395629883
    7. '   ' → logprob: -12.716127395629883
    8. ' ,' → logprob: -12.841127395629883
    9. ' env' → logprob: -12.966127395629883
    10. '(env' → logprob: -13.216127395629883

Token 524: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4740835428237915
    2. 'and' → logprob: -0.9740835428237915
    3. ' ' → logprob: -12.59908390045166
    4. '(env' → logprob: -13.59908390045166
    5. '   ' → logprob: -14.34908390045166
    6. 'env' → logprob: -14.47408390045166
    7. '&&' → logprob: -15.34908390045166
    8. ' ' → logprob: -15.59908390045166
    9. '       ' → logprob: -15.84908390045166
    10. '()' → logprob: -16.474082946777344

Token 525: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.02975071594119072
    2. 'self' → logprob: -3.5297508239746094
    3. ' ' → logprob: -16.65475082397461
    4. '       ' → logprob: -16.90475082397461
    5. '	self' → logprob: -17.40475082397461
    6. ' ' → logprob: -17.40475082397461
    7. '(self' → logprob: -18.02975082397461
    8. '  ' → logprob: -19.77975082397461
    9. '   ' → logprob: -20.15475082397461
    10. '    ' → logprob: -20.15475082397461

Token 526: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.0002680112374946475
    2. 'right' → logprob: -8.25026798248291
    3. '.' → logprob: -12.00026798248291
    4. ' .' → logprob: -14.75026798248291
    5. '.left' → logprob: -16.125268936157227
    6. '[right' → logprob: -17.500268936157227
    7. ' right' → logprob: -17.625268936157227
    8. '	right' → logprob: -18.250268936157227
    9. '.
' → logprob: -19.000268936157227
    10. '.Right' → logprob: -19.375268936157227

Token 527: '.evaluate' (ID: 71397)
  Prédit: '.evaluate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.evaluate' → logprob: -0.0032875132746994495
    2. '.' → logprob: -5.753287315368652
    3. ' .' → logprob: -9.128287315368652
    4. 'evaluate' → logprob: -14.503287315368652
    5. '   ' → logprob: -15.378287315368652
    6. '().' → logprob: -15.878287315368652
    7. '.execute' → logprob: -16.50328826904297
    8. '.eval' → logprob: -16.62828826904297
    9. '.validate' → logprob: -16.87828826904297
    10. '.perform' → logprob: -17.25328826904297

Token 528: '(env' (ID: 38512)
  Prédit: '(env'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(env' → logprob: -2.8206473871250637e-05
    2. ' (' → logprob: -10.500028610229492
    3. '(' → logprob: -14.625028610229492
    4. '(environment' → logprob: -16.750028610229492
    5. 'env' → logprob: -17.500028610229492
    6. '(
' → logprob: -18.625028610229492
    7. '(org' → logprob: -19.875028610229492
    8. '(en' → logprob: -20.000028610229492
    9. '```' → logprob: -20.625028610229492
    10. '/env' → logprob: -20.625028610229492

Token 529: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.3795937522663735e-05
    2. ' )' → logprob: -11.75002384185791
    3. ')
' → logprob: -12.00002384185791
    4. ',' → logprob: -12.62502384185791
    5. '   ' → logprob: -12.62502384185791
    6. '(env' → logprob: -13.75002384185791
    7. ' ' → logprob: -14.87502384185791
    8. 'env' → logprob: -14.87502384185791
    9. '       ' → logprob: -15.12502384185791
    10. ')

' → logprob: -15.25002384185791

Token 530: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.031090514734387398
    2. '   ' → logprob: -4.03109073638916
    3. 'def' → logprob: -4.40609073638916
    4. '    
' → logprob: -8.53109073638916
    5. ' def' → logprob: -8.90609073638916
    6. '```' → logprob: -9.03109073638916
    7. '<|end|>' → logprob: -9.15609073638916
    8. ' ' → logprob: -10.40609073638916
    9. '

' → logprob: -10.78109073638916
    10. '<|end|>' → logprob: -11.15609073638916

Token 531: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.000499297515489161
    2. '   ' → logprob: -7.750499248504639
    3. '@' → logprob: -9.875499725341797
    4. ' def' → logprob: -11.125499725341797
    5. '
' → logprob: -13.000499725341797
    6. '@property' → logprob: -15.875499725341797
    7. '    
' → logprob: -16.125499725341797
    8. 'from' → logprob: -17.500499725341797
    9. '	def' → logprob: -17.625499725341797
    10. ' ' → logprob: -18.750499725341797

Token 532: ' canonical' (ID: 91323)
  Prédit: 'canonical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'canonical' → logprob: -0.0024820810649544
    2. ' canonical' → logprob: -6.002481937408447
    3. 'def' → logprob: -12.002482414245605
    4. '#' → logprob: -16.50248146057129
    5. '   ' → logprob: -16.87748146057129
    6. 'can' → logprob: -17.37748146057129
    7. 'Canonical' → logprob: -17.50248146057129
    8. ' def' → logprob: -17.75248146057129
    9. 'canon' → logprob: -17.87748146057129
    10. '```' → logprob: -17.87748146057129

Token 533: '_forms' (ID: 176505)
  Prédit: '_forms'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_forms' → logprob: -2.5776860184123507e-06
    2. '_' → logprob: -13.37500286102295
    3. '_form' → logprob: -14.87500286102295
    4. '_formats' → logprob: -15.00000286102295
    5. '```' → logprob: -16.500001907348633
    6. ' _' → logprob: -17.625001907348633
    7. '_parts' → logprob: -17.625001907348633
    8. '\' → logprob: -18.125001907348633
    9. '_
' → logprob: -18.375001907348633
    10. '_faces' → logprob: -18.375001907348633

Token 534: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.3663626305060461e-05
    2. '   ' → logprob: -11.75001335144043
    3. '(' → logprob: -12.50001335144043
    4. 'self' → logprob: -13.62501335144043
    5. '(s' → logprob: -14.62501335144043
    6. ' (' → logprob: -15.75001335144043
    7. '(
' → logprob: -16.62501335144043
    8. '       ' → logprob: -16.75001335144043
    9. 'def' → logprob: -17.25001335144043
    10. ' ' → logprob: -17.87501335144043

Token 535: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002422748599201441
    2. '()' → logprob: -6.50242280960083
    3. ')' → logprob: -7.25242280960083
    4. '(' → logprob: -8.752422332763672
    5. '(s' → logprob: -10.877422332763672
    6. '   ' → logprob: -11.002422332763672
    7. 'self' → logprob: -11.752422332763672
    8. ' (' → logprob: -12.377422332763672
    9. '(
' → logprob: -13.252422332763672
    10. 'def' → logprob: -14.002422332763672

Token 536: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0004108924185857177
    2. '(' → logprob: -7.875411033630371
    3. 'self' → logprob: -11.000411033630371
    4. '   ' → logprob: -12.250411033630371
    5. '(s' → logprob: -13.000411033630371
    6. 'def' → logprob: -13.125411033630371
    7. ' (' → logprob: -13.250411033630371
    8. '(
' → logprob: -13.500411033630371
    9. '()' → logprob: -14.750411033630371
    10. 'return' → logprob: -14.875411033630371

Token 537: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.20147736370563507
    2. ' set' → logprob: -1.7014774084091187
    3. 'def' → logprob: -10.32647705078125
    4. '   ' → logprob: -11.32647705078125
    5. '(set' → logprob: -11.32647705078125
    6. ' def' → logprob: -12.82647705078125
    7. '       ' → logprob: -13.57647705078125
    8. ' ' → logprob: -14.45147705078125
    9. ')set' → logprob: -14.45147705078125
    10. ')' → logprob: -14.95147705078125

Token 538: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0005207431968301535
    2. '(' → logprob: -7.625520706176758
    3. '(
' → logprob: -11.500520706176758
    4. '(s' → logprob: -11.625520706176758
    5. '   ' → logprob: -12.000520706176758
    6. 'self' → logprob: -12.250520706176758
    7. '       ' → logprob: -13.000520706176758
    8. ' (' → logprob: -15.500520706176758
    9. '():' → logprob: -16.000520706176758
    10. '(Self' → logprob: -16.125520706176758

Token 539: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.802049756515771e-05
    2. '()' → logprob: -10.125067710876465
    3. '(' → logprob: -11.875067710876465
    4. '(forms' → logprob: -11.875067710876465
    5. ' forms' → logprob: -12.375067710876465
    6. 'forms' → logprob: -13.125067710876465
    7. '
' → logprob: -13.250067710876465
    8. '(
' → logprob: -13.750067710876465
    9. '{
' → logprob: -14.125067710876465
    10. '():' → logprob: -14.625067710876465

Token 540: ' #' (ID: 1069)
  Prédit: 'forms'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'forms' → logprob: -0.05093125253915787
    2. '       ' → logprob: -3.675931215286255
    3. 'left' → logprob: -3.925931215286255
    4. ' forms' → logprob: -6.050931453704834
    5. 'result' → logprob: -6.800931453704834
    6. 'lhs' → logprob: -8.550930976867676
    7. 'results' → logprob: -8.675930976867676
    8. 'res' → logprob: -9.300930976867676
    9. 's' → logprob: -9.300930976867676
    10. 'sets' → logprob: -9.425930976867676

Token 541: ' Generate' (ID: 33886)
  Prédit: 'forms'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'forms' → logprob: -0.2235444188117981
    2. 'left' → logprob: -1.7235443592071533
    3. 'l' → logprob: -4.598544597625732
    4. 'lf' → logprob: -6.348544597625732
    5. '       ' → logprob: -6.473544597625732
    6. '   ' → logprob: -6.598544597625732
    7. 'lhs' → logprob: -6.598544597625732
    8. '#' → logprob: -6.848544597625732
    9. 'parts' → logprob: -6.848544597625732
    10. ' forms' → logprob: -6.973544597625732

Token 542: ' all' (ID: 722)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.698845386505127
    2. 'forms' → logprob: -0.948845386505127
    3. ' left' → logprob: -2.698845386505127
    4. ' forms' → logprob: -3.573845386505127
    5. '   ' → logprob: -6.073845386505127
    6. '       ' → logprob: -6.323845386505127
    7. 'lf' → logprob: -6.323845386505127
    8. 'set' → logprob: -6.323845386505127
    9. 'result' → logprob: -6.448845386505127
    10. 'l' → logprob: -6.573845386505127

Token 543: ' pairs' (ID: 24702)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.5470920205116272
    2. 'forms' → logprob: -1.7970919609069824
    3. '(left' → logprob: -2.0470919609069824
    4. ' left' → logprob: -3.5470919609069824
    5. 'lf' → logprob: -4.047091960906982
    6. '{' → logprob: -4.172091960906982
    7. 'l' → logprob: -4.547091960906982
    8. '(forms' → logprob: -5.172091960906982
    9. '(self' → logprob: -5.297091960906982
    10. '{
' → logprob: -5.547091960906982

Token 544: ' of' (ID: 328)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.862618088722229
    2. '       ' → logprob: -1.612618088722229
    3. ' =' → logprob: -1.612618088722229
    4. '=' → logprob: -2.7376179695129395
    5. '():' → logprob: -2.9876179695129395
    6. 'of' → logprob: -3.2376179695129395
    7. '()
' → logprob: -4.8626179695129395
    8. '():
' → logprob: -5.6126179695129395
    9. 's' → logprob: -5.8626179695129395
    10. ' of' → logprob: -6.1126179695129395

Token 545: ' children' (ID: 3953)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4462166428565979
    2. 'left' → logprob: -1.9462165832519531
    3. 'forms' → logprob: -2.321216583251953
    4. 'canonical' → logprob: -3.071216583251953
    5. '(self' → logprob: -4.196216583251953
    6. ' self' → logprob: -4.821216583251953
    7. '{' → logprob: -4.946216583251953
    8. 'f' → logprob: -4.946216583251953
    9. ' left' → logprob: -5.196216583251953
    10. 'form' → logprob: -5.321216583251953

Token 546: ' canonical' (ID: 91323)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -1.1648887395858765
    2. '()' → logprob: -1.4148887395858765
    3. ' =' → logprob: -2.289888858795166
    4. '       ' → logprob: -2.414888858795166
    5. '_forms' → logprob: -3.289888858795166
    6. '():
' → logprob: -3.539888858795166
    7. '   ' → logprob: -3.664888858795166
    8. ':' → logprob: -3.664888858795166
    9. 'for' → logprob: -3.914888858795166
    10. '=' → logprob: -3.914888858795166

Token 547: ' forms' (ID: 11526)
  Prédit: '_forms'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_forms' → logprob: -0.0008717980235815048
    2. 'forms' → logprob: -7.750871658325195
    3. ' forms' → logprob: -9.000871658325195
    4. '       ' → logprob: -9.625871658325195
    5. '_left' → logprob: -9.750871658325195
    6. '_sets' → logprob: -10.125871658325195
    7. 'left' → logprob: -10.250871658325195
    8. '   ' → logprob: -10.500871658325195
    9. 's' → logprob: -11.125871658325195
    10. '_' → logprob: -11.250871658325195

Token 548: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28369197249412537
    2. '()' → logprob: -1.5336920022964478
    3. '()
' → logprob: -3.658691883087158
    4. '():
' → logprob: -6.033691883087158
    5. '():' → logprob: -6.408691883087158
    6. ' =' → logprob: -7.408691883087158
    7. ':' → logprob: -8.533692359924316
    8. ',' → logprob: -8.908692359924316
    9. '=' → logprob: -9.658692359924316
    10. ':
' → logprob: -9.783692359924316

Token 549: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00046141279744915664
    2. '()' → logprob: -8.00046157836914
    3. ' forms' → logprob: -10.00046157836914
    4. ' sets' → logprob: -11.62546157836914
    5. '()
' → logprob: -11.75046157836914
    6. ',' → logprob: -11.87546157836914
    7. '(forms' → logprob: -12.00046157836914
    8. 'result' → logprob: -12.25046157836914
    9. 'forms' → logprob: -12.25046157836914
    10. '(' → logprob: -12.37546157836914

Token 550: ' left' (ID: 3561)
  Prédit: 'forms'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'forms' → logprob: -0.040733013302087784
    2. 'left' (adapté à ' left') → logprob: -3.6657330989837646
    3. '       ' → logprob: -4.5407328605651855
    4. ' forms' → logprob: -6.4157328605651855
    5. 'result' → logprob: -6.7907328605651855
    6. 'child' → logprob: -8.540733337402344
    7. ' left' → logprob: -9.040733337402344
    8. 'sets' → logprob: -9.165733337402344
    9. 'res' → logprob: -9.415733337402344
    10. 'results' → logprob: -9.540733337402344

Token 551: '_forms' (ID: 176505)
  Prédit: '_forms'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_forms' → logprob: -0.006550174206495285
    2. ' =' → logprob: -5.631550312042236
    3. '_' → logprob: -6.756550312042236
    4. '_c' → logprob: -7.506550312042236
    5. '_set' → logprob: -7.881550312042236
    6. '=' → logprob: -7.881550312042236
    7. 'forms' → logprob: -8.506549835205078
    8. 's' → logprob: -9.256549835205078
    9. '()' → logprob: -9.881549835205078
    10. '   ' → logprob: -10.381549835205078

Token 552: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6412709951400757
    2. '=' → logprob: -0.7662709951400757
    3. '()' → logprob: -4.766271114349365
    4. '       ' → logprob: -9.891270637512207
    5. '   ' → logprob: -10.516270637512207
    6. ',' → logprob: -11.266270637512207
    7. 's' → logprob: -11.641270637512207
    8. ' ' → logprob: -12.016270637512207
    9. '()
' → logprob: -12.266270637512207
    10. '        ' → logprob: -13.141270637512207

Token 553: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0002036595979006961
    2. ' self' → logprob: -8.500204086303711
    3. '       ' → logprob: -16.00020408630371
    4. '{' → logprob: -19.00020408630371
    5. '   ' → logprob: -19.25020408630371
    6. '(self' → logprob: -19.25020408630371
    7. '[self' → logprob: -20.37520408630371
    8. '	self' → logprob: -20.75020408630371
    9. '           ' → logprob: -20.75020408630371
    10. '=self' → logprob: -22.00020408630371

Token 554: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -1.843177233240567e-05
    2. '.c' → logprob: -11.000018119812012
    3. 'left' → logprob: -13.375018119812012
    4. 'canonical' → logprob: -15.750018119812012
    5. '.' → logprob: -17.500019073486328
    6. '.Left' → logprob: -18.750019073486328
    7. '.right' → logprob: -18.875019073486328
    8. '   ' → logprob: -18.875019073486328
    9. ' .' → logprob: -19.250019073486328
    10. 'Canonical' → logprob: -19.500019073486328

Token 555: '.c' (ID: 1081)
  Prédit: '.c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.c' → logprob: -5.061676347395405e-05
    2. '.' → logprob: -10.62505054473877
    3. ' .' → logprob: -11.12505054473877
    4. 'canonical' → logprob: -11.50005054473877
    5. '   ' → logprob: -14.25005054473877
    6. ' canonical' → logprob: -15.62505054473877
    7. 'Canonical' → logprob: -15.75005054473877
    8. '().' → logprob: -15.87505054473877
    9. '.can' → logprob: -16.000051498413086
    10. '
' → logprob: -17.625051498413086

Token 556: 'anonical' (ID: 143898)
  Prédit: 'anonical'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anonical' → logprob: -2.975612187583465e-05
    2. 'canonical' → logprob: -10.500029563903809
    3. 'an' → logprob: -14.125029563903809
    4. 'on' → logprob: -14.875029563903809
    5. '```' → logprob: -15.000029563903809
    6. 'annon' → logprob: -15.625029563903809
    7. 'anical' → logprob: -15.750029563903809
    8. '_' → logprob: -16.000030517578125
    9. 'lassical' → logprob: -16.625030517578125
    10. 'onal' → logprob: -17.000030517578125

Token 557: '_forms' (ID: 176505)
  Prédit: '_forms'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_forms' → logprob: -5.512236498361744e-07
    2. '_formats' → logprob: -15.375000953674316
    3. 'forms' → logprob: -16.0
    4. '```' → logprob: -17.25
    5. 's' → logprob: -17.375
    6. '\' → logprob: -17.5
    7. '_' → logprob: -17.75
    8. '_faces' → logprob: -18.625
    9. '_sets' → logprob: -18.875
    10. '_form' → logprob: -19.0

Token 558: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.014309346675872803
    2. '()' → logprob: -4.264309406280518
    3. '       ' → logprob: -8.88930892944336
    4. '()
' → logprob: -12.63930892944336
    5. '   ' → logprob: -12.88930892944336
    6. '
' → logprob: -14.38930892944336
    7. '(),' → logprob: -14.88930892944336
    8. '()

' → logprob: -15.38930892944336
    9. ',' → logprob: -15.51430892944336
    10. ' ()
' → logprob: -15.51430892944336

Token 559: '       ' (ID: 309)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.508630096912384
    2. '       ' → logprob: -1.0086300373077393
    3. ' right' → logprob: -3.3836300373077393
    4. '   ' → logprob: -10.88362979888916
    5. '	right' → logprob: -11.75862979888916
    6. ' ' → logprob: -12.38362979888916
    7. ',right' → logprob: -12.88362979888916
    8. '.right' → logprob: -14.25862979888916
    9. '           ' → logprob: -14.38362979888916
    10. '	' → logprob: -14.63362979888916

Token 560: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.07039540261030197
    2. ' right' → logprob: -2.6953954696655273
    3. '       ' → logprob: -7.695395469665527
    4. '	right' → logprob: -13.195395469665527
    5. '   ' → logprob: -14.445395469665527
    6. 'Right' → logprob: -14.695395469665527
    7. ' ' → logprob: -14.945395469665527
    8. '.right' → logprob: -15.320395469665527
    9. 'r' → logprob: -16.07039451599121
    10. ',right' → logprob: -16.32039451599121

Token 561: '_forms' (ID: 176505)
  Prédit: '_forms'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_forms' → logprob: -0.0012129719834774733
    2. '_' → logprob: -6.751213073730469
    3. '=' → logprob: -11.876213073730469
    4. ' =' → logprob: -12.001213073730469
    5. '_formats' → logprob: -12.001213073730469
    6. ')_' → logprob: -12.126213073730469
    7. '_form' → logprob: -12.501213073730469
    8. '=_' → logprob: -12.626213073730469
    9. '   ' → logprob: -12.751213073730469
    10. ' _' → logprob: -13.001213073730469

Token 562: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5760374069213867
    2. '=' → logprob: -0.8260374069213867
    3. '   ' → logprob: -9.701037406921387
    4. ',' → logprob: -11.576037406921387
    5. ')' → logprob: -11.951037406921387
    6. ' ' → logprob: -12.326037406921387
    7. '()' → logprob: -12.701037406921387
    8. '       ' → logprob: -12.701037406921387
    9. '  ' → logprob: -13.201037406921387
    10. '=
' → logprob: -13.201037406921387

Token 563: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.048589076846838
    2. ' self' → logprob: -3.048588991165161
    3. '       ' → logprob: -14.423588752746582
    4. '(self' → logprob: -14.798588752746582
    5. '   ' → logprob: -15.048588752746582
    6. ' ' → logprob: -15.798588752746582
    7. '	self' → logprob: -15.923588752746582
    8. '=self' → logprob: -16.2985897064209
    9. '[self' → logprob: -17.0485897064209
    10. 'set' → logprob: -17.2985897064209

Token 564: '.right' (ID: 17627)
  Prédit: '.c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.c' → logprob: -0.00470483023673296
    2. 'canonical' → logprob: -5.37970495223999
    3. '().' → logprob: -10.254704475402832
    4. '_c' → logprob: -10.629704475402832
    5. '()' → logprob: -11.379704475402832
    6. 'c' → logprob: -12.754704475402832
    7. ' canonical' → logprob: -13.129704475402832
    8. '   ' → logprob: -13.379704475402832
    9. 'Canonical' → logprob: -13.504704475402832
    10. ' .' → logprob: -14.129704475402832

Token 565: '.c' (ID: 1081)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00012821101699955761
    2. '()
' → logprob: -9.000127792358398
    3. ' ()' → logprob: -12.875127792358398
    4. '()`' → logprob: -14.750127792358398
    5. '()]' → logprob: -14.750127792358398
    6. '()

' → logprob: -15.375127792358398
    7. '())' → logprob: -15.500127792358398
    8. '()
' → logprob: -15.750127792358398
    9. '().' → logprob: -15.875127792358398
    10. '()}' → logprob: -16.0001277923584

Token 566: 'anonical' (ID: 143898)
  Prédit: 'anonical'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anonical' → logprob: -0.0026708997320383787
    2. 'canonical' → logprob: -6.252670764923096
    3. 'forms' → logprob: -7.752670764923096
    4. 'an' → logprob: -8.877671241760254
    5. '_forms' → logprob: -9.377671241760254
    6. 'om' → logprob: -10.377671241760254
    7. 'orm' → logprob: -11.502671241760254
    8. 'on' → logprob: -11.627671241760254
    9. 'ont' → logprob: -11.752671241760254
    10. '_' → logprob: -12.127671241760254

Token 567: '_forms' (ID: 176505)
  Prédit: '_forms'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_forms' → logprob: -2.6895233531831764e-05
    2. 'forms' → logprob: -11.37502670288086
    3. 'set' → logprob: -12.37502670288086
    4. 'Forms' → logprob: -12.87502670288086
    5. '()' → logprob: -13.12502670288086
    6. 's' → logprob: -13.50002670288086
    7. '_' → logprob: -13.75002670288086
    8. '_sets' → logprob: -13.87502670288086
    9. '```' → logprob: -14.87502670288086
    10. '_frames' → logprob: -14.87502670288086

Token 568: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1828073114156723
    2. '()
' → logprob: -1.8078073263168335
    3. '       ' → logprob: -5.807807445526123
    4. '()

' → logprob: -10.557806968688965
    5. '()
' → logprob: -11.182806968688965
    6. '())' → logprob: -12.307806968688965
    7. ')' → logprob: -13.557806968688965
    8. '(),' → logprob: -13.807806968688965
    9. ' ()' → logprob: -14.182806968688965
    10. '=' → logprob: -14.307806968688965

Token 569: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008415759541094303
    2. ' forms' → logprob: -5.258415699005127
    3. 'forms' → logprob: -5.883415699005127
    4. 'result' → logprob: -8.258416175842285
    5. ' result' → logprob: -9.383416175842285
    6. '   ' → logprob: -11.258416175842285
    7. 'form' → logprob: -12.258416175842285
    8. '_forms' → logprob: -12.383416175842285
    9. 'results' → logprob: -12.508416175842285
    10. '(forms' → logprob: -12.633416175842285

Token 570: ' #' (ID: 1069)
  Prédit: 'forms'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'forms' → logprob: -0.08770642429590225
    2. 'result' → logprob: -3.0877063274383545
    3. '       ' → logprob: -3.5877063274383545
    4. 'results' → logprob: -5.337706565856934
    5. 'res' → logprob: -6.212706565856934
    6. 'combined' → logprob: -6.337706565856934
    7. 'pairs' → logprob: -7.337706565856934
    8. 'return' → logprob: -7.712706565856934
    9. ' forms' → logprob: -7.962706565856934
    10. 'parts' → logprob: -9.337706565856934

Token 571: ' Because' (ID: 13602)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6668853759765625
    2. 'forms' → logprob: -1.0418853759765625
    3. ' result' → logprob: -3.4168853759765625
    4. 'res' → logprob: -3.5418853759765625
    5. ' forms' → logprob: -3.6668853759765625
    6. 'results' → logprob: -4.5418853759765625
    7. '   ' → logprob: -4.9168853759765625
    8. 'pairs' → logprob: -5.0418853759765625
    9. 'combined' → logprob: -5.1668853759765625
    10. '       ' → logprob: -5.1668853759765625

Token 572: ' AND' (ID: 6178)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.4967421293258667
    2. ' we' → logprob: -1.8717421293258667
    3. ' all' → logprob: -2.1217422485351562
    4. ' forms' → logprob: -2.2467422485351562
    5. ' left' → logprob: -2.4967422485351562
    6. ' result' → logprob: -2.9967422485351562
    7. ' l' → logprob: -3.4967422485351562
    8. 'all' → logprob: -3.7467422485351562
    9. ''' → logprob: -3.8717422485351562
    10. 'left' → logprob: -3.8717422485351562

Token 573: ' is' (ID: 382)
  Prédit: ' forms'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' forms' → logprob: -1.0155322551727295
    2. '_forms' → logprob: -1.5155322551727295
    3. '   ' → logprob: -2.6405322551727295
    4. ' is' → logprob: -2.7655322551727295
    5. ',' → logprob: -3.0155322551727295
    6. 'forms' → logprob: -3.5155322551727295
    7. '=' → logprob: -3.6405322551727295
    8. 's' → logprob: -3.6405322551727295
    9. ' =' → logprob: -3.8905322551727295
    10. ':' → logprob: -4.140532493591309

Token 574: ' comm' (ID: 1394)
  Prédit: 'comm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comm' → logprob: -0.2519685626029968
    2. ' comm' → logprob: -1.5019686222076416
    3. '_comm' → logprob: -10.501968383789062
    4. 'com' → logprob: -12.126968383789062
    5. 'ass' → logprob: -13.251968383789062
    6. ' Com' → logprob: -13.251968383789062
    7. ' com' → logprob: -14.126968383789062
    8. 'commun' → logprob: -14.501968383789062
    9. ' associative' → logprob: -14.501968383789062
    10. '(comm' → logprob: -15.251968383789062

Token 575: 'ut' (ID: 339)
  Prédit: 'ut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ut' → logprob: -0.07938552647829056
    2. 'utable' → logprob: -2.57938551902771
    3. 'utat' → logprob: -8.454385757446289
    4. 'uting' → logprob: -8.829385757446289
    5. 'uted' → logprob: -9.704385757446289
    6. 'utive' → logprob: -10.204385757446289
    7. 'utation' → logprob: -11.079385757446289
    8. 'ute' → logprob: -11.829385757446289
    9. '```' → logprob: -12.329385757446289
    10. '   ' → logprob: -13.079385757446289

Token 576: 'ative' (ID: 1799)
  Prédit: 'ative'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ative' → logprob: -1.7954958821064793e-05
    2. 'a' → logprob: -11.625018119812012
    3. 'ive' → logprob: -12.375018119812012
    4. 'able' → logprob: -13.500018119812012
    5. '   ' → logprob: -13.500018119812012
    6. '
' → logprob: -14.375018119812012
    7. 't' → logprob: -15.375018119812012
    8. 'e' → logprob: -15.625018119812012
    9. '```' → logprob: -15.875018119812012
    10. '...' → logprob: -16.000017166137695

Token 577: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.052994657307863235
    2. ',' → logprob: -3.177994728088379
    3. ' and' → logprob: -6.052994728088379
    4. 'result' → logprob: -6.052994728088379
    5. 'and' → logprob: -6.802994728088379
    6. ' forms' → logprob: -7.052994728088379
    7. ' =' → logprob: -7.802994728088379
    8. '()' → logprob: -7.802994728088379
    9. 'left' → logprob: -7.802994728088379
    10. ':' → logprob: -7.802994728088379

Token 578: ' we' (ID: 581)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.1660237312316895
    2. 'forms' → logprob: -1.9160237312316895
    3. ' forms' → logprob: -1.9160237312316895
    4. ' result' → logprob: -2.1660237312316895
    5. '       ' → logprob: -2.2910237312316895
    6. 'pairs' → logprob: -2.6660237312316895
    7. 'combined' → logprob: -3.2910237312316895
    8. ' combined' → logprob: -3.9160237312316895
    9. ' pairs' → logprob: -4.2910237312316895
    10. 'res' → logprob: -4.4160237312316895

Token 579: ' impose' (ID: 68003)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7928382754325867
    2. ' forms' → logprob: -1.7928383350372314
    3. '=' → logprob: -2.0428383350372314
    4. 'combine' → logprob: -2.7928383350372314
    5. 'forms' → logprob: -3.2928383350372314
    6. '_forms' → logprob: -3.6678383350372314
    7. 'all' → logprob: -3.7928383350372314
    8. '   ' → logprob: -4.042838096618652
    9. ' all' → logprob: -4.167838096618652
    10. ' combine' → logprob: -4.667838096618652

Token 580: ' order' (ID: 2569)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.2681007385253906
    2. 'an' → logprob: -1.5181007385253906
    3. ' an' → logprob: -1.8931007385253906
    4. 'sorted' → logprob: -2.7681007385253906
    5. 'left' → logprob: -3.2681007385253906
    6. ' lex' → logprob: -3.2681007385253906
    7. 'lex' → logprob: -3.3931007385253906
    8. ' a' → logprob: -3.6431007385253906
    9. 'ordering' → logprob: -3.6431007385253906
    10. 'canonical' → logprob: -3.8931007385253906

Token 581: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4387952983379364
    2. ' =' → logprob: -1.8137953281402588
    3. 'ed' → logprob: -2.438795328140259
    4. '=' → logprob: -3.313795328140259
    5. 'd' → logprob: -3.313795328140259
    6. 's' → logprob: -5.43879508972168
    7. '   ' → logprob: -6.06379508972168
    8. 'ing' → logprob: -6.06379508972168
    9. ':' → logprob: -6.18879508972168
    10. '(' → logprob: -6.18879508972168

Token 582: ' avoid' (ID: 8397)
  Prédit: ' avoid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' avoid' → logprob: -0.1824672669172287
    2. 'left' → logprob: -2.932467222213745
    3. 'avoid' → logprob: -3.432467222213745
    4. 'reduce' → logprob: -4.307467460632324
    5. 'combine' → logprob: -4.557467460632324
    6. 'all' → logprob: -4.932467460632324
    7. 'min' → logprob: -5.307467460632324
    8. ' prevent' → logprob: -5.432467460632324
    9. ' left' → logprob: -5.432467460632324
    10. ' the' → logprob: -5.432467460632324

Token 583: ' duplicates' (ID: 91135)
  Prédit: ' duplicates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' duplicates' → logprob: -1.1925359964370728
    2. 'duplicates' → logprob: -1.4425359964370728
    3. 'left' → logprob: -2.567535877227783
    4. '{' → logprob: -2.692535877227783
    5. 'duplicate' → logprob: -2.817535877227783
    6. ' redundant' → logprob: -3.067535877227783
    7. ' duplicate' → logprob: -3.192535877227783
    8. ' forms' → logprob: -3.567535877227783
    9. 'forms' → logprob: -3.942535877227783
    10. ' f' → logprob: -4.692535877227783

Token 584: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0845814198255539
    2. 'result' → logprob: -2.5845813751220703
    3. 'sorted' → logprob: -6.20958137512207
    4. ' result' → logprob: -7.08458137512207
    5. 'forms' → logprob: -7.45958137512207
    6. ' forms' → logprob: -7.83458137512207
    7. 'pairs' → logprob: -8.45958137512207
    8. 'left' → logprob: -8.83458137512207
    9. ',' → logprob: -8.95958137512207
    10. 'combined' → logprob: -9.08458137512207

Token 585: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6228093504905701
    2. 'result' → logprob: -1.3728094100952148
    3. 'forms' → logprob: -2.247809410095215
    4. ' forms' → logprob: -2.872809410095215
    5. ' result' → logprob: -3.372809410095215
    6. 'pairs' → logprob: -5.372809410095215
    7. 'sorted' → logprob: -6.372809410095215
    8. 'res' → logprob: -6.497809410095215
    9. 'combined' → logprob: -6.747809410095215
    10. 'results' → logprob: -6.872809410095215

Token 586: ' forms' (ID: 11526)
  Prédit: 'forms'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'forms' (adapté à ' forms') → logprob: -0.0809839591383934
    2. 'result' → logprob: -3.080983877182007
    3. ' forms' → logprob: -4.205984115600586
    4. '       ' → logprob: -4.580984115600586
    5. 'pairs' → logprob: -6.455984115600586
    6. 'res' → logprob: -6.580984115600586
    7. 'return' → logprob: -6.955984115600586
    8. ' result' → logprob: -6.955984115600586
    9. 'combined' → logprob: -7.205984115600586
    10. 'results' → logprob: -8.080984115600586

Token 587: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048590775579214096
    2. ' =' → logprob: -3.048590660095215
    3. '=set' → logprob: -12.798590660095215
    4. '   ' → logprob: -14.673590660095215
    5. '       ' → logprob: -15.298590660095215
    6. '=
' → logprob: -17.54859161376953
    7. '	' → logprob: -17.67359161376953
    8. ' ' → logprob: -17.92359161376953
    9. 's' → logprob: -18.29859161376953
    10. 'set' → logprob: -18.54859161376953

Token 588: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.03966506943106651
    2. '{' → logprob: -3.5396649837493896
    3. '{
' → logprob: -4.664665222167969
    4. ' set' → logprob: -8.289665222167969
    5. '   ' → logprob: -9.289665222167969
    6. '       ' → logprob: -10.039665222167969
    7. '{s' → logprob: -10.289665222167969
    8. '{
' → logprob: -12.789665222167969
    9. '	set' → logprob: -13.039665222167969
    10. ' {' → logprob: -13.039665222167969

Token 589: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.013509475626051426
    2. '()' → logprob: -4.513509273529053
    3. '       ' → logprob: -6.513509273529053
    4. '(
' → logprob: -7.263509273529053
    5. '(f' → logprob: -9.388509750366211
    6. '()
' → logprob: -10.013509750366211
    7. '(sorted' → logprob: -10.013509750366211
    8. 'for' → logprob: -10.138509750366211
    9. '()

' → logprob: -10.638509750366211
    10. '(' → logprob: -11.263509750366211

Token 590: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004033283796161413
    2. 'for' → logprob: -5.629033088684082
    3. ' for' → logprob: -7.754033088684082
    4. '   ' → logprob: -13.004033088684082
    5. '           ' → logprob: -14.379033088684082
    6. ' ' → logprob: -15.004033088684082
    7. '               ' → logprob: -16.0040340423584
    8. ',' → logprob: -16.0040340423584
    9. '	' → logprob: -16.2540340423584
    10. '      ' → logprob: -16.2540340423584

Token 591: ' pairs' (ID: 24702)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03041110374033451
    2. '       ' → logprob: -3.5304110050201416
    3. ' for' → logprob: -7.780411243438721
    4. 'left' → logprob: -8.405410766601562
    5. '   ' → logprob: -11.655410766601562
    6. 'l' → logprob: -12.530410766601562
    7. 'all' → logprob: -13.655410766601562
    8. '	for' → logprob: -13.905410766601562
    9. 'sorted' → logprob: -14.155410766601562
    10. 'lhs' → logprob: -14.280410766601562

Token 592: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25846660137176514
    2. ' =' → logprob: -1.5084666013717651
    3. 'for' → logprob: -5.383466720581055
    4. ' for' → logprob: -7.008466720581055
    5. 'from' → logprob: -8.633466720581055
    6. '()' → logprob: -9.133466720581055
    7. '(' → logprob: -9.133466720581055
    8. '   ' → logprob: -9.383466720581055
    9. '       ' → logprob: -9.383466720581055
    10. ' in' → logprob: -9.508466720581055

Token 593: ' []
' (ID: 8911)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.13350483775138855
    2. '(product' → logprob: -2.133504867553711
    3. '[(' → logprob: -6.133504867553711
    4. '{' → logprob: -6.508504867553711
    5. '((' → logprob: -6.758504867553711
    6. ' product' → logprob: -6.883504867553711
    7. 'sorted' → logprob: -8.008504867553711
    8. '   ' → logprob: -9.258504867553711
    9. '(sorted' → logprob: -9.258504867553711
    10. 'set' → logprob: -10.133504867553711

Token 594: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.36314821243286133
    2. '       ' → logprob: -1.2381482124328613
    3. ' for' → logprob: -4.238148212432861
    4. 'left' → logprob: -10.113147735595703
    5. '
' → logprob: -11.363147735595703
    6. ',' → logprob: -11.488147735595703
    7. '(' → logprob: -11.488147735595703
    8. '(left' → logprob: -11.488147735595703
    9. '(
' → logprob: -11.738147735595703
    10. '   ' → logprob: -11.863147735595703

Token 595: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.03530138358473778
    2. '       ' → logprob: -3.410301446914673
    3. ' for' → logprob: -6.785301208496094
    4. 'left' → logprob: -8.160301208496094
    5. '[(' → logprob: -9.285301208496094
    6. 'if' → logprob: -10.535301208496094
    7. 'sorted' → logprob: -10.535301208496094
    8. 'pairs' → logprob: -10.535301208496094
    9. '[left' → logprob: -11.285301208496094
    10. '(left' → logprob: -11.910301208496094

Token 596: ' lf' (ID: 131463)
  Prédit: 'lf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lf' → logprob: -0.3157581090927124
    2. 'l' → logprob: -1.3157581090927124
    3. ' lf' → logprob: -6.065758228302002
    4. '(l' → logprob: -9.690757751464844
    5. ' l' → logprob: -10.690757751464844
    6. 'f' → logprob: -11.190757751464844
    7. 'left' → logprob: -11.315757751464844
    8. 'Lf' → logprob: -11.565757751464844
    9. '(' → logprob: -11.690757751464844
    10. 'fl' → logprob: -11.940757751464844

Token 597: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.18040014803409576
    2. 'in' → logprob: -1.8054001331329346
    3. ',' → logprob: -8.555399894714355
    4. 'i' → logprob: -8.555399894714355
    5. ' ' → logprob: -9.180399894714355
    6. ' i' → logprob: -10.305399894714355
    7. '_in' → logprob: -10.805399894714355
    8. 'orm' → logprob: -10.930399894714355
    9. 'f' → logprob: -10.930399894714355
    10. 'n' → logprob: -11.180399894714355

Token 598: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.002932656556367874
    2. ' left' → logprob: -6.002932548522949
    3. 'sorted' → logprob: -7.752932548522949
    4. '   ' → logprob: -10.87793254852295
    5. ' sorted' → logprob: -13.25293254852295
    6. '       ' → logprob: -13.37793254852295
    7. '	left' → logprob: -13.75293254852295
    8. ' ' → logprob: -14.00293254852295
    9. '  ' → logprob: -14.25293254852295
    10. '           ' → logprob: -14.37793254852295

Token 599: '_forms' (ID: 176505)
  Prédit: '_forms'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_forms' → logprob: -0.0005375436157919466
    2. '_form' → logprob: -8.500537872314453
    3. '_for' → logprob: -9.000537872314453
    4. '_' → logprob: -9.625537872314453
    5. ' in' → logprob: -10.250537872314453
    6. 'for' → logprob: -10.750537872314453
    7. '_formats' → logprob: -10.750537872314453
    8. 'forms' → logprob: -11.000537872314453
    9. ' _' → logprob: -11.375537872314453
    10. '_in' → logprob: -11.750537872314453

Token 600: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.8185235261917114
    2. ':' → logprob: -1.3185235261917114
    3. '           ' → logprob: -2.193523406982422
    4. ' for' → logprob: -2.318523406982422
    5. 'for' → logprob: -2.568523406982422
    6. '       ' → logprob: -5.943523406982422
    7. '   ' → logprob: -7.068523406982422
    8. ',' → logprob: -7.443523406982422
    9. '):
' → logprob: -8.193523406982422
    10. '               ' → logprob: -8.693523406982422

Token 601: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011719620786607265
    2. ' for' → logprob: -4.511719703674316
    3. 'for' → logprob: -8.136719703674316
    4. ',' → logprob: -8.261719703674316
    5. ' and' → logprob: -10.761719703674316
    6. '       ' → logprob: -10.886719703674316
    7. '               ' → logprob: -11.011719703674316
    8. '   ' → logprob: -11.136719703674316
    9. '            ' → logprob: -11.136719703674316
    10. '          ' → logprob: -12.011719703674316

Token 602: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.07157598435878754
    2. ' for' → logprob: -2.696575880050659
    3. '           ' → logprob: -6.446576118469238
    4. '       ' → logprob: -10.446576118469238
    5. '	for' → logprob: -11.446576118469238
    6. '               ' → logprob: -12.071576118469238
    7. ' ' → logprob: -12.821576118469238
    8. '   ' → logprob: -13.321576118469238
    9. ' ' → logprob: -14.321576118469238
    10. '	       ' → logprob: -14.946576118469238

Token 603: ' rf' (ID: 76208)
  Prédit: 'rf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rf' → logprob: -1.3544423381972592e-05
    2. ' rf' → logprob: -11.37501335144043
    3. '   ' → logprob: -14.00001335144043
    4. '_rf' → logprob: -15.00001335144043
    5. '.rf' → logprob: -15.50001335144043
    6. '
' → logprob: -15.87501335144043
    7. '       ' → logprob: -16.25001335144043
    8. '    ' → logprob: -16.37501335144043
    9. '  ' → logprob: -16.75001335144043
    10. '     ' → logprob: -17.12501335144043

Token 604: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008632768876850605
    2. 'in' → logprob: -4.758632659912109
    3. '	in' → logprob: -12.38363265991211
    4. '<|end|>' → logprob: -12.38363265991211
    5. '<|end|>' → logprob: -12.88363265991211
    6. 'import' → logprob: -13.13363265991211
    7. ' ' → logprob: -14.00863265991211
    8. '_in' → logprob: -14.38363265991211
    9. 's' → logprob: -14.94613265991211
    10. '        ' → logprob: -15.07113265991211

Token 605: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.008624501526355743
    2. ' right' → logprob: -4.75862455368042
    3. '   ' → logprob: -12.008624076843262
    4. ' ' → logprob: -13.508624076843262
    5. 'left' → logprob: -14.133624076843262
    6. '	right' → logprob: -14.633624076843262
    7. '(right' → logprob: -14.633624076843262
    8. '[right' → logprob: -15.133624076843262
    9. '.right' → logprob: -16.008625030517578
    10. '       ' → logprob: -16.133625030517578

Token 606: '_forms' (ID: 176505)
  Prédit: '_forms'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_forms' → logprob: -0.0002075933152809739
    2. 'forms' → logprob: -9.250207901000977
    3. ' in' → logprob: -10.125207901000977
    4. '_' → logprob: -10.375207901000977
    5. 's' → logprob: -11.000207901000977
    6. ' forms' → logprob: -12.375207901000977
    7. 'Forms' → logprob: -12.500207901000977
    8. '_formats' → logprob: -12.625207901000977
    9. '_form' → logprob: -13.000207901000977
    10. '(forms' → logprob: -13.875207901000977

Token 607: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4679202139377594
    2. ':
' → logprob: -1.342920184135437
    3. ':' → logprob: -2.2179203033447266
    4. ',' → logprob: -6.467920303344727
    5. '<|end|>' → logprob: -7.592920303344727
    6. '                ' → logprob: -8.342920303344727
    7. '):
' → logprob: -8.342920303344727
    8. '           ' → logprob: -8.342920303344727
    9. '                
' → logprob: -8.967920303344727
    10. ' if' → logprob: -8.967920303344727

Token 608: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00013500562636181712
    2. '<|end|>' → logprob: -9.37513542175293
    3. '<|end|>' → logprob: -11.50013542175293
    4. ',' → logprob: -11.50013542175293
    5. '           ' → logprob: -11.75013542175293
    6. '                   ' → logprob: -12.00013542175293
    7. '                ' → logprob: -12.37513542175293
    8. ' if' → logprob: -12.62513542175293
    9. '              ' → logprob: -13.12513542175293
    10. '                       ' → logprob: -13.75013542175293

Token 609: ' pairs' (ID: 24702)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3034225404262543
    2. '           ' → logprob: -1.4284225702285767
    3. '               ' → logprob: -4.053422451019287
    4. 'pairs' (adapté à ' pairs') → logprob: -6.428422451019287
    5. 'if' → logprob: -6.678422451019287
    6. '   ' → logprob: -6.928422451019287
    7. ' if' → logprob: -7.803422451019287
    8. '                       ' → logprob: -8.803422927856445
    9. ' pairs' → logprob: -8.803422927856445
    10. 'p' → logprob: -10.303422927856445

Token 610: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0006671638693660498
    2. '.' → logprob: -7.375667095184326
    3. ' .' → logprob: -10.625667572021484
    4. 'append' → logprob: -11.750667572021484
    5. '                   ' → logprob: -13.250667572021484
    6. '               ' → logprob: -13.375667572021484
    7. '.app' → logprob: -14.000667572021484
    8. ').' → logprob: -14.250667572021484
    9. 'Append' → logprob: -14.375667572021484
    10. '+' → logprob: -14.625667572021484

Token 611: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.5103509426116943
    2. '(tuple' → logprob: -1.1353509426116943
    3. '(l' → logprob: -3.1353509426116943
    4. '(' → logprob: -3.6353509426116943
    5. '(sorted' → logprob: -5.260351181030273
    6. 'tuple' → logprob: -5.885351181030273
    7. '   ' → logprob: -8.260351181030273
    8. '(f' → logprob: -9.385351181030273
    9. 'sorted' → logprob: -9.760351181030273
    10. '(
' → logprob: -9.885351181030273

Token 612: 'lf' (ID: 12632)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5770151615142822
    2. 'lf' → logprob: -1.0770151615142822
    3. '(min' → logprob: -2.8270151615142822
    4. 'tuple' → logprob: -3.9520151615142822
    5. '(l' → logprob: -4.202014923095703
    6. '(' → logprob: -6.202014923095703
    7. ' min' → logprob: -7.202014923095703
    8. ' lf' → logprob: -7.327014923095703
    9. '(tuple' → logprob: -7.827014923095703
    10. '(f' → logprob: -8.827014923095703

Token 613: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0050435252487659454
    2. ' ,' → logprob: -6.1300435066223145
    3. ',r' → logprob: -7.3800435066223145
    4. ' if' → logprob: -7.3800435066223145
    5. ',p' → logprob: -7.3800435066223145
    6. ',min' → logprob: -8.005043983459473
    7. '               ' → logprob: -8.130043983459473
    8. ',f' → logprob: -9.630043983459473
    9. ',
' → logprob: -9.880043983459473
    10. 'if' → logprob: -10.005043983459473

Token 614: ' rf' (ID: 76208)
  Prédit: 'rf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rf' → logprob: -0.012528367340564728
    2. ' rf' → logprob: -4.387528419494629
    3. '.rf' → logprob: -12.387528419494629
    4. ' ' → logprob: -12.637528419494629
    5. '_rf' → logprob: -12.637528419494629
    6. ')' → logprob: -13.137528419494629
    7. '               ' → logprob: -13.387528419494629
    8. '                   ' → logprob: -14.012528419494629
    9. '                ' → logprob: -14.387528419494629
    10. '    ' → logprob: -15.137528419494629

Token 615: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00741163594648242
    2. '))
' → logprob: -5.257411479949951
    3. ')' → logprob: -6.757411479949951
    4. ' if' → logprob: -7.882411479949951
    5. '               ' → logprob: -8.13241195678711
    6. ',' → logprob: -8.38241195678711
    7. ' ))' → logprob: -10.13241195678711
    8. 'if' → logprob: -10.75741195678711
    9. ''))' → logprob: -11.25741195678711
    10. '))

' → logprob: -11.75741195678711

Token 616: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07928510755300522
    2. '               ' → logprob: -2.579285144805908
    3. ' pairs' → logprob: -9.07928466796875
    4. 'pairs' → logprob: -9.45428466796875
    5. 'sorted' → logprob: -10.70428466796875
    6. '
' → logprob: -10.70428466796875
    7. ' sorted' → logprob: -10.82928466796875
    8. '           ' → logprob: -10.95428466796875
    9. '<|end|>' → logprob: -10.95428466796875
    10. '.sort' → logprob: -11.07928466796875

Token 617: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00440614391118288
    2. ' pairs' → logprob: -6.129405975341797
    3. 'pairs' → logprob: -6.879405975341797
    4. ',p' → logprob: -7.629405975341797
    5. ',' → logprob: -8.379405975341797
    6. '        
' → logprob: -9.129405975341797
    7. '```' → logprob: -9.254405975341797
    8. '               ' → logprob: -9.629405975341797
    9. '
' → logprob: -10.379405975341797
    10. '[p' → logprob: -10.879405975341797

Token 618: ' Sort' (ID: 25945)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3687244653701782
    2. 'pairs' → logprob: -1.3687244653701782
    3. 'for' → logprob: -2.9937243461608887
    4. 'p' → logprob: -6.743724346160889
    5. ' pairs' → logprob: -7.118724346160889
    6. '#' → logprob: -7.243724346160889
    7. ' for' → logprob: -7.868724346160889
    8. 'sorted' → logprob: -8.243724822998047
    9. '   ' → logprob: -8.618724822998047
    10. '               ' → logprob: -9.618724822998047

Token 619: ' pair' (ID: 10610)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.0583786778151989
    2. '       ' → logprob: -3.5583786964416504
    3. '(p' → logprob: -3.6833786964416504
    4. ' pairs' → logprob: -6.18337869644165
    5. 'sorted' → logprob: -8.308378219604492
    6. '_pairs' → logprob: -8.433378219604492
    7. 'p' → logprob: -8.808378219604492
    8. ' =' → logprob: -9.183378219604492
    9. 'for' → logprob: -9.683378219604492
    10. '   ' → logprob: -10.433378219604492

Token 620: ' lex' (ID: 37772)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.025481345131993294
    2. 'ed' → logprob: -4.400481224060059
    3. 'pairs' → logprob: -5.650481224060059
    4. ' =' → logprob: -5.900481224060059
    5. '=' → logprob: -6.025481224060059
    6. '(p' → logprob: -7.150481224060059
    7. '=p' → logprob: -7.150481224060059
    8. '       ' → logprob: -7.150481224060059
    9. '_pairs' → logprob: -7.775481224060059
    10. ' pairs' → logprob: -7.900481224060059

Token 621: ' to' (ID: 316)
  Prédit: 'ic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.1117880567908287
    2. 'ically' → logprob: -2.736788034439087
    3. 'ographically' → logprob: -4.111788272857666
    4. 'pairs' → logprob: -5.111788272857666
    5. 'sorted' → logprob: -5.361788272857666
    6. '       ' → logprob: -5.361788272857666
    7. '_pairs' → logprob: -5.861788272857666
    8. 'p' → logprob: -6.986788272857666
    9. ' pairs' → logprob: -7.111788272857666
    10. 'ical' → logprob: -7.361788272857666

Token 622: ' keep' (ID: 3357)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -1.4080389738082886
    2. 'avoid' → logprob: -1.5330389738082886
    3. 'ensure' → logprob: -1.7830389738082886
    4. 'for' → logprob: -1.9080389738082886
    5. '       ' → logprob: -2.908039093017578
    6. ' avoid' → logprob: -3.033039093017578
    7. ' pairs' → logprob: -3.533039093017578
    8. 'remove' → logprob: -3.783039093017578
    9. 'filter' → logprob: -4.158039093017578
    10. ' ensure' → logprob: -4.783039093017578

Token 623: ' order' (ID: 2569)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.18478608131408691
    2. ' pairs' → logprob: -2.184786081314087
    3. 'lf' → logprob: -3.934786081314087
    4. '(p' → logprob: -4.684785842895508
    5. ' lf' → logprob: -5.309785842895508
    6. 'forms' → logprob: -5.309785842895508
    7. '       ' → logprob: -5.434785842895508
    8. '   ' → logprob: -5.934785842895508
    9. 'them' → logprob: -6.434785842895508
    10. '(l' → logprob: -6.934785842895508

Token 624: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0306050106883049
    2. '               ' → logprob: -4.155604839324951
    3. 'pairs' → logprob: -4.780604839324951
    4. ' pairs' → logprob: -6.030604839324951
    5. ',' → logprob: -6.530604839324951
    6. ',p' → logprob: -6.780604839324951
    7. '(p' → logprob: -7.655604839324951
    8. '           ' → logprob: -9.15560531616211
    9. '_pairs' → logprob: -9.40560531616211
    10. '.sort' → logprob: -10.03060531616211

Token 625: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004270950332283974
    2. '               ' → logprob: -6.004271030426025
    3. 'pairs' → logprob: -7.129271030426025
    4. ',' → logprob: -7.629271030426025
    5. ' pairs' → logprob: -8.629270553588867
    6. ',p' → logprob: -9.004270553588867
    7. '           ' → logprob: -9.254270553588867
    8. '(p' → logprob: -10.879270553588867
    9. ' and' → logprob: -11.254270553588867
    10. '.' → logprob: -11.879270553588867

Token 626: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.222680926322937
    2. 'pairs' → logprob: -1.722680926322937
    3. 'for' (adapté à ' for') → logprob: -4.597681045532227
    4. ' pairs' → logprob: -4.847681045532227
    5. '               ' → logprob: -6.597681045532227
    6. ' for' → logprob: -7.097681045532227
    7. 'p' → logprob: -7.597681045532227
    8. '[p' → logprob: -8.847681045532227
    9. 'sorted' → logprob: -9.722681045532227
    10. '   ' → logprob: -9.722681045532227

Token 627: ' lf' (ID: 131463)
  Prédit: 'lf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lf' → logprob: -0.05854622647166252
    2. ' lf' → logprob: -3.808546304702759
    3. 'l' → logprob: -4.55854606628418
    4. '(l' → logprob: -4.68354606628418
    5. 'a' → logprob: -4.80854606628418
    6. 'p' → logprob: -6.05854606628418
    7. 'pair' → logprob: -6.68354606628418
    8. '(a' → logprob: -7.18354606628418
    9. 'left' → logprob: -7.43354606628418
    10. 'lp' → logprob: -7.68354606628418

Token 628: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015979631280060858
    2. ' ,' → logprob: -9.125160217285156
    3. ',r' → logprob: -10.625160217285156
    4. ',
' → logprob: -12.000160217285156
    5. '           ' → logprob: -12.750160217285156
    6. '_,' → logprob: -13.000160217285156
    7. ' in' → logprob: -13.000160217285156
    8. '       ' → logprob: -13.125160217285156
    9. '<=' → logprob: -13.500160217285156
    10. '<' → logprob: -13.500160217285156

Token 629: ' rf' (ID: 76208)
  Prédit: 'rf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rf' → logprob: -0.008631703443825245
    2. ' rf' → logprob: -4.758631706237793
    3. ' ' → logprob: -12.008631706237793
    4. '    ' → logprob: -12.258631706237793
    5. '   ' → logprob: -13.008631706237793
    6. '  ' → logprob: -13.508631706237793
    7. '     ' → logprob: -14.133631706237793
    8. '_rf' → logprob: -14.883631706237793
    9. '        ' → logprob: -15.008631706237793
    10. '       ' → logprob: -15.008631706237793

Token 630: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03809186443686485
    2. 'in' → logprob: -3.2880918979644775
    3. '       ' → logprob: -10.538091659545898
    4. '	in' → logprob: -11.913091659545898
    5. '        ' → logprob: -12.538091659545898
    6. ')' → logprob: -12.663091659545898
    7. '   ' → logprob: -13.163091659545898
    8. ',' → logprob: -13.788091659545898
    9. '           ' → logprob: -13.788091659545898
    10. '_in' → logprob: -14.163091659545898

Token 631: ' pairs' (ID: 24702)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.048888470977544785
    2. 'pairs' → logprob: -3.0488884449005127
    3. '(sorted' → logprob: -8.798888206481934
    4. ' sorted' → logprob: -9.173888206481934
    5. ' pairs' → logprob: -11.298888206481934
    6. '   ' → logprob: -11.923888206481934
    7. 'pair' → logprob: -12.298888206481934
    8. '[p' → logprob: -12.548888206481934
    9. 'map' → logprob: -12.673888206481934
    10. 'p' → logprob: -12.673888206481934

Token 632: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7060561776161194
    2. ' in' → logprob: -1.2060561180114746
    3. ':
' → logprob: -2.3310561180114746
    4. ' if' → logprob: -2.4560561180114746
    5. 'in' → logprob: -4.956056118011475
    6. '       ' → logprob: -5.706056118011475
    7. 'sorted' → logprob: -5.831056118011475
    8. ',' → logprob: -5.956056118011475
    9. ' sorted' → logprob: -6.331056118011475
    10. 'if' → logprob: -6.581056118011475

Token 633: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005330758634954691
    2. ' if' → logprob: -5.755330562591553
    3. 'if' → logprob: -6.505330562591553
    4. ':' → logprob: -8.505331039428711
    5. '   ' → logprob: -9.005331039428711
    6. '       ' → logprob: -9.130331039428711
    7. '               ' → logprob: -9.755331039428711
    8. ':
' → logprob: -9.880331039428711
    9. ' and' → logprob: -10.755331039428711
    10. ',' → logprob: -11.630331039428711

Token 634: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3051437735557556
    2. 'forms' → logprob: -2.0551438331604004
    3. 'if' (adapté à ' if') → logprob: -2.6801438331604004
    4. ' forms' → logprob: -4.0551438331604
    5. 'form' → logprob: -4.4301438331604
    6. 'key' → logprob: -4.9301438331604
    7. ' if' → logprob: -4.9301438331604
    8. '               ' → logprob: -5.3051438331604
    9. ' key' → logprob: -5.8051438331604
    10. 'sorted' → logprob: -5.8051438331604

Token 635: ' lf' (ID: 131463)
  Prédit: 'lf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lf' → logprob: -0.0007102862582542002
    2. ' lf' → logprob: -7.250710487365723
    3. ' ' → logprob: -15.625710487365723
    4. '   ' → logprob: -16.125709533691406
    5. '(' → logprob: -16.750709533691406
    6. 'rf' → logprob: -17.000709533691406
    7. '	' → logprob: -18.250709533691406
    8. '(l' → logprob: -18.375709533691406
    9. '  ' → logprob: -18.625709533691406
    10. 'lt' → logprob: -18.625709533691406

Token 636: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.38082408905029297
    2. '<=' → logprob: -1.255824089050293
    3. ' <' → logprob: -3.755824089050293
    4. '<' → logprob: -4.880824089050293
    5. ' >' → logprob: -7.630824089050293
    6. '>' → logprob: -8.880824089050293
    7. '<|end|>' → logprob: -10.130824089050293
    8. '<form' → logprob: -10.380824089050293
    9. ' ' → logprob: -10.505824089050293
    10. ' !=' → logprob: -11.005824089050293

Token 637: ' rf' (ID: 76208)
  Prédit: ' rf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rf' → logprob: -0.38712984323501587
    2. 'rf' → logprob: -1.137129783630371
    3. '=' → logprob: -8.637129783630371
    4. '_rf' → logprob: -9.637129783630371
    5. '.rf' → logprob: -11.387129783630371
    6. ' ' → logprob: -13.137129783630371
    7. 'r' → logprob: -13.512129783630371
    8. '	r' → logprob: -14.887129783630371
    9. ' =' → logprob: -15.262129783630371
    10. ' ' → logprob: -15.512129783630371

Token 638: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5320563912391663
    2. ':' → logprob: -1.2820563316345215
    3. '               ' → logprob: -2.7820563316345215
    4. ' and' → logprob: -3.0320563316345215
    5. '           ' → logprob: -4.5320563316345215
    6. '):
' → logprob: -5.0320563316345215
    7. 'and' → logprob: -5.9070563316345215
    8. ' or' → logprob: -6.7820563316345215
    9. '):' → logprob: -6.9070563316345215
    10. ' :
' → logprob: -7.2820563316345215

Token 639: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.018048912286758423
    2. ' and' → logprob: -4.8930487632751465
    3. ':
' → logprob: -6.1430487632751465
    4. 'forms' → logprob: -6.5180487632751465
    5. ' forms' → logprob: -6.5180487632751465
    6. 'and' → logprob: -6.6430487632751465
    7. ':' → logprob: -6.6430487632751465
    8. '(forms' → logprob: -7.5180487632751465
    9. '<|end|>' → logprob: -7.7680487632751465
    10. '_forms' → logprob: -7.8930487632751465

Token 640: ' expr' (ID: 30206)
  Prédit: 'forms'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'forms' → logprob: -0.06345901638269424
    2. '               ' → logprob: -3.1884589195251465
    3. 'form' → logprob: -4.4384589195251465
    4. ' forms' → logprob: -5.5634589195251465
    5. '                   ' → logprob: -6.3134589195251465
    6. 'expr' (adapté à ' expr') → logprob: -7.3134589195251465
    7. '(forms' → logprob: -7.5634589195251465
    8. 'f' → logprob: -8.313459396362305
    9. 'key' → logprob: -8.563459396362305
    10. '           ' → logprob: -8.688459396362305

Token 641: '_str' (ID: 6182)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42907097935676575
    2. '=' → logprob: -1.0540709495544434
    3. 's' → logprob: -7.929070949554443
    4. 'f' → logprob: -13.429071426391602
    5. ' ' → logprob: -13.679071426391602
    6. '   ' → logprob: -13.929071426391602
    7. '           ' → logprob: -14.179071426391602
    8. '=forms' → logprob: -14.304071426391602
    9. '=
' → logprob: -14.554071426391602
    10. '"' → logprob: -14.679071426391602

Token 642: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2811582684516907
    2. '=' → logprob: -1.406158208847046
    3. 's' → logprob: -12.656158447265625
    4. '           ' → logprob: -13.656158447265625
    5. ' ' → logprob: -14.281158447265625
    6. 'f' → logprob: -14.281158447265625
    7. '=f' → logprob: -14.531158447265625
    8. '   ' → logprob: -15.031158447265625
    9. ')' → logprob: -15.156158447265625
    10. '=form' → logprob: -15.781158447265625

Token 643: ' f' (ID: 285)
  Prédit: 'lf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lf' → logprob: -0.2868787348270416
    2. 'f' → logprob: -1.4118787050247192
    3. ''' → logprob: -5.53687858581543
    4. ' lf' → logprob: -6.78687858581543
    5. ' f' → logprob: -8.66187858581543
    6. '"' → logprob: -8.78687858581543
    7. '   ' → logprob: -9.28687858581543
    8. '(f' → logprob: -9.41187858581543
    9. ''f' → logprob: -9.91187858581543
    10. ' ' → logprob: -11.41187858581543

Token 644: ''' (ID: 6)
  Prédit: '({'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '({' → logprob: -1.0811595916748047
    2. ''' → logprob: -1.2061595916748047
    3. '"' → logprob: -2.2061595916748047
    4. ''{' → logprob: -2.2061595916748047
    5. '{' → logprob: -2.5811595916748047
    6. '"{' → logprob: -2.8311595916748047
    7. 'f' → logprob: -5.831159591674805
    8. '(f' → logprob: -6.081159591674805
    9. '('' → logprob: -8.081159591674805
    10. '('{' → logprob: -8.331159591674805

Token 645: '({' (ID: 3972)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.3525680899620056
    2. '({' → logprob: -1.7275681495666504
    3. ''{' → logprob: -2.4775681495666504
    4. ''' → logprob: -3.6025681495666504
    5. 'lf' → logprob: -6.22756814956665
    6. 'And' → logprob: -6.60256814956665
    7. 'and' → logprob: -7.22756814956665
    8. '('{' → logprob: -7.35256814956665
    9. '"{' → logprob: -7.47756814956665
    10. '(&' → logprob: -7.47756814956665

Token 646: 'lf' (ID: 12632)
  Prédit: 'lf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lf' → logprob: -2.1888679839321412e-05
    2. '{' → logprob: -10.750021934509277
    3. ' lf' → logprob: -15.250021934509277
    4. 'f' → logprob: -16.62502098083496
    5. 'lef' → logprob: -18.50002098083496
    6. 'laf' → logprob: -18.50002098083496
    7. '   ' → logprob: -19.00002098083496
    8. 'lt' → logprob: -19.00002098083496
    9. 'ltf' → logprob: -19.25002098083496
    10. 'and' → logprob: -19.50002098083496

Token 647: '}' (ID: 92)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '&' → logprob: -0.024446872994303703
    2. ' &' → logprob: -3.899446964263916
    3. '*&' → logprob: -6.524446964263916
    4. ')&' → logprob: -6.649446964263916
    5. '&
' → logprob: -8.024446487426758
    6. '&amp' → logprob: -8.649446487426758
    7. '&&' → logprob: -8.649446487426758
    8. '*' → logprob: -9.149446487426758
    9. '&A' → logprob: -9.399446487426758
    10. '&r' → logprob: -9.524446487426758

Token 648: '*' (ID: 9)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '&' → logprob: -0.20356787741184235
    2. ' &' → logprob: -1.7035678625106812
    3. ')&' → logprob: -7.328567981719971
    4. '&amp' → logprob: -7.453567981719971
    5. '&&' → logprob: -8.453567504882812
    6. '&
' → logprob: -8.578567504882812
    7. '&A' → logprob: -9.328567504882812
    8. ' &'' → logprob: -9.578567504882812
    9. '*&' → logprob: -9.953567504882812
    10. ' &
' → logprob: -10.078567504882812

Token 649: '{' (ID: 90)
  Prédit: '{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -2.2842308680992573e-05
    2. 'rf' → logprob: -10.750022888183594
    3. '_rf' → logprob: -14.250022888183594
    4. '.rf' → logprob: -15.000022888183594
    5. ' {' → logprob: -16.375022888183594
    6. '{'' → logprob: -16.500022888183594
    7. ' rf' → logprob: -16.875022888183594
    8. '{
' → logprob: -17.000022888183594
    9. '{lng' → logprob: -17.000022888183594
    10. '{sub' → logprob: -17.750022888183594

Token 650: 'rf' (ID: 19314)
  Prédit: 'rf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rf' → logprob: -5.872261317563243e-05
    2. ' rf' → logprob: -9.875059127807617
    3. '.rf' → logprob: -12.625059127807617
    4. '_rf' → logprob: -13.125059127807617
    5. 'f' → logprob: -13.500059127807617
    6. 'r' → logprob: -15.375059127807617
    7. ')' → logprob: -16.000059127807617
    8. ' ' → logprob: -16.125059127807617
    9. '
' → logprob: -16.875059127807617
    10. '{' → logprob: -17.750059127807617

Token 651: '})' (ID: 9263)
  Prédit: ')''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')'' → logprob: -0.000747802434489131
    2. ')' → logprob: -7.2507476806640625
    3. ')'
' → logprob: -10.250747680664062
    4. '')' → logprob: -14.000747680664062
    5. ')')
' → logprob: -14.500747680664062
    6. '})' → logprob: -15.250747680664062
    7. ')"' → logprob: -15.625747680664062
    8. ')',' → logprob: -15.875747680664062
    9. '}')' → logprob: -16.250747680664062
    10. ')}' → logprob: -16.500747680664062

Token 652: ''
' (ID: 2207)
  Prédit: ')''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')'' → logprob: -0.023071927949786186
    2. ')'
' → logprob: -4.023071765899658
    3. ''' → logprob: -5.523071765899658
    4. ')' → logprob: -7.273071765899658
    5. '')' → logprob: -8.773072242736816
    6. ''
' → logprob: -9.898072242736816
    7. '}'' → logprob: -12.148072242736816
    8. ''
' → logprob: -13.398072242736816
    9. ')
' → logprob: -13.523072242736816
    10. '           ' → logprob: -13.523072242736816

Token 653: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9416704177856445
    2. '               ' → logprob: -1.1916704177856445
    3. 'else' → logprob: -2.1916704177856445
    4. '<|end|>' → logprob: -2.3166704177856445
    5. ')' → logprob: -3.1916704177856445
    6. ' else' → logprob: -3.4416704177856445
    7. 'elif' → logprob: -3.9416704177856445
    8. ' elif' → logprob: -7.3166704177856445
    9. '       ' → logprob: -7.8166704177856445
    10. '                
' → logprob: -8.066670417785645

Token 654: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.056314148008823395
    2. ' else' → logprob: -3.55631422996521
    3. '           ' → logprob: -3.68131422996521
    4. 'elif' → logprob: -6.931313991546631
    5. ' elif' → logprob: -10.681314468383789
    6. '       ' → logprob: -11.181314468383789
    7. '               ' → logprob: -12.306314468383789
    8. '          ' → logprob: -12.806314468383789
    9. '         ' → logprob: -14.431314468383789
    10. '	else' → logprob: -14.431314468383789

Token 655: ':
' (ID: 734)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.8275725245475769
    2. '               ' → logprob: -1.5775725841522217
    3. '           ' → logprob: -1.8275725841522217
    4. ' {' → logprob: -2.9525725841522217
    5. ' (' → logprob: -2.9525725841522217
    6. ':' → logprob: -3.0775725841522217
    7. '{
' → logprob: -4.452572345733643
    8. ' if' → logprob: -4.452572345733643
    9. '(' → logprob: -4.577572345733643
    10. 'if' → logprob: -5.952572345733643

Token 656: '               ' (ID: 506)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.49722474813461304
    2. '(expr' → logprob: -1.1222248077392578
    3. '           ' → logprob: -3.747224807739258
    4. '(' → logprob: -3.997224807739258
    5. ' expr' → logprob: -4.247224807739258
    6. ' (' → logprob: -4.872224807739258
    7. '(f' → logprob: -6.247224807739258
    8. '               ' → logprob: -9.247224807739258
    9. 'f' → logprob: -9.372224807739258
    10. ' f' → logprob: -9.747224807739258

Token 657: ' expr' (ID: 30206)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' (adapté à ' expr') → logprob: -0.003418197389692068
    2. '(expr' → logprob: -6.37841796875
    3. ' expr' → logprob: -6.50341796875
    4. '           ' → logprob: -9.00341796875
    5. 'express' → logprob: -10.25341796875
    6. 'f' → logprob: -10.87841796875
    7. '(' → logprob: -11.00341796875
    8. '               ' → logprob: -11.50341796875
    9. 'expression' → logprob: -12.00341796875
    10. ' (' → logprob: -13.00341796875

Token 658: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -6.153795766294934e-06
    2. 'str' → logprob: -12.500005722045898
    3. 's' → logprob: -13.750005722045898
    4. '_s' → logprob: -13.875005722045898
    5. 'Str' → logprob: -16.0000057220459
    6. '_' → logprob: -16.5000057220459
    7. '_st' → logprob: -16.7500057220459
    8. ' =' → logprob: -17.8750057220459
    9. '_string' → logprob: -18.0000057220459
    10. ' _' → logprob: -18.3750057220459

Token 659: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06196959316730499
    2. '=' → logprob: -2.811969518661499
    3. '           ' → logprob: -14.311969757080078
    4. ')' → logprob: -14.936969757080078
    5. '=f' → logprob: -14.936969757080078
    6. ' ' → logprob: -15.811969757080078
    7. '='' → logprob: -16.686969757080078
    8. ' is' → logprob: -17.061969757080078
    9. '<|end|>' → logprob: -17.061969757080078
    10. '               ' → logprob: -17.186969757080078

Token 660: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.012098586186766624
    2. '(f' → logprob: -4.512098789215088
    3. ' f' → logprob: -6.887098789215088
    4. ''' → logprob: -11.63709831237793
    5. '(' → logprob: -11.63709831237793
    6. '   ' → logprob: -11.76209831237793
    7. ' ' → logprob: -13.51209831237793
    8. ' (' → logprob: -14.13709831237793
    9. '       ' → logprob: -14.51209831237793
    10. '           ' → logprob: -14.76209831237793

Token 661: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.02089756727218628
    2. '({' → logprob: -3.895897626876831
    3. 'f' → logprob: -8.27089786529541
    4. '('' → logprob: -10.64589786529541
    5. '`' → logprob: -11.14589786529541
    6. ' ' → logprob: -11.39589786529541
    7. ' ({' → logprob: -11.77089786529541
    8. ' f' → logprob: -11.77089786529541
    9. '({'' → logprob: -11.89589786529541
    10. '({
' → logprob: -12.02089786529541

Token 662: '({' (ID: 3972)
  Prédit: '({'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '({' → logprob: -4.4060561776859686e-05
    2. '{' → logprob: -10.500043869018555
    3. ''' → logprob: -11.125043869018555
    4. '({'' → logprob: -14.250043869018555
    5. 'rf' → logprob: -15.500043869018555
    6. '({
' → logprob: -15.500043869018555
    7. ''{' → logprob: -15.625043869018555
    8. ' ({' → logprob: -16.125043869018555
    9. '(r' → logprob: -16.250043869018555
    10. '('{' → logprob: -16.500043869018555

Token 663: 'rf' (ID: 19314)
  Prédit: 'rf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rf' → logprob: -9.372294698550832e-06
    2. ' rf' → logprob: -11.625009536743164
    3. '
' → logprob: -16.625009536743164
    4. '   ' → logprob: -16.875009536743164
    5. '(r' → logprob: -17.000009536743164
    6. 'lf' → logprob: -17.250009536743164
    7. '.rf' → logprob: -17.375009536743164
    8. '{' → logprob: -17.500009536743164
    9. 'r' → logprob: -17.500009536743164
    10. '_rf' → logprob: -17.875009536743164

Token 664: '}' (ID: 92)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.023321647197008133
    2. '}' → logprob: -4.273321628570557
    3. ''*' → logprob: -4.898321628570557
    4. '**' → logprob: -7.023321628570557
    5. ')*' → logprob: -7.898321628570557
    6. '>*' → logprob: -9.648322105407715
    7. '"*' → logprob: -9.648322105407715
    8. '*
' → logprob: -9.898322105407715
    9. '***' → logprob: -10.398322105407715
    10. ' *' → logprob: -10.398322105407715

Token 665: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.00028648413717746735
    2. ''*' → logprob: -8.625286102294922
    3. '**' → logprob: -10.250286102294922
    4. '*f' → logprob: -10.500286102294922
    5. ')*' → logprob: -10.750286102294922
    6. '*
' → logprob: -11.625286102294922
    7. '"*' → logprob: -13.000286102294922
    8. '*)' → logprob: -13.625286102294922
    9. '***' → logprob: -13.625286102294922
    10. ' *' → logprob: -13.750286102294922

Token 666: '{' (ID: 90)
  Prédit: '{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.03804550692439079
    2. 'lf' → logprob: -3.2880454063415527
    3. '{lng' → logprob: -12.913045883178711
    4. ' lf' → logprob: -14.288045883178711
    5. '{
' → logprob: -14.788045883178711
    6. 'ltf' → logprob: -15.288045883178711
    7. 'Lf' → logprob: -16.28804588317871
    8. 'l' → logprob: -16.78804588317871
    9. '{sub' → logprob: -17.16304588317871
    10. 'laf' → logprob: -17.28804588317871

Token 667: 'lf' (ID: 12632)
  Prédit: 'lf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lf' → logprob: -2.7610454708337784e-05
    2. '{' → logprob: -10.625027656555176
    3. ' lf' → logprob: -12.750027656555176
    4. 'ltf' → logprob: -16.12502670288086
    5. 'Lf' → logprob: -17.25002670288086
    6. 'f' → logprob: -17.62502670288086
    7. 'l' → logprob: -18.50002670288086
    8. 'lef' → logprob: -18.62502670288086
    9. 'lt' → logprob: -18.75002670288086
    10. '   ' → logprob: -18.75002670288086

Token 668: '})' (ID: 9263)
  Prédit: ')''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')'' → logprob: -0.010568911209702492
    2. ')' → logprob: -4.760569095611572
    3. '})' → logprob: -6.510569095611572
    4. '}')' → logprob: -8.385568618774414
    5. ')'
' → logprob: -9.135568618774414
    6. ')}' → logprob: -9.760568618774414
    7. ')')
' → logprob: -10.385568618774414
    8. '}'' → logprob: -10.760568618774414
    9. '')' → logprob: -11.760568618774414
    10. '))' → logprob: -12.510568618774414

Token 669: ''
' (ID: 2207)
  Prédit: ')''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')'' → logprob: -0.28318968415260315
    2. ')' → logprob: -1.5331896543502808
    3. '')' → logprob: -3.6581897735595703
    4. '           ' → logprob: -6.28318977355957
    5. '       ' → logprob: -6.53318977355957
    6. ')'
' → logprob: -7.15818977355957
    7. ''' → logprob: -7.53318977355957
    8. ')
' → logprob: -9.53318977355957
    9. '}')' → logprob: -9.53318977355957
    10. '}'' → logprob: -9.78318977355957

Token 670: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006048485636711121
    2. '       ' → logprob: -5.381048679351807
    3. ' forms' → logprob: -6.756048679351807
    4. 'forms' → logprob: -9.381048202514648
    5. '               ' → logprob: -9.381048202514648
    6. '   ' → logprob: -10.131048202514648
    7. '<|end|>' → logprob: -10.881048202514648
    8. ')' → logprob: -11.006048202514648
    9. '(forms' → logprob: -12.631048202514648
    10. '          ' → logprob: -12.756048202514648

Token 671: ' forms' (ID: 11526)
  Prédit: 'forms'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'forms' (adapté à ' forms') → logprob: -0.1266217827796936
    2. '           ' → logprob: -2.376621723175049
    3. ' forms' → logprob: -4.001621723175049
    4. '       ' → logprob: -5.001621723175049
    5. '   ' → logprob: -7.001621723175049
    6. '(forms' → logprob: -9.751622200012207
    7. '=forms' → logprob: -10.751622200012207
    8. '               ' → logprob: -10.751622200012207
    9. '```' → logprob: -11.251622200012207
    10. 'form' → logprob: -11.376622200012207

Token 672: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0031797364354133606
    2. '.' → logprob: -5.753179550170898
    3. '.update' → logprob: -13.753179550170898
    4. ' .' → logprob: -14.628179550170898
    5. '.append' → logprob: -15.628179550170898
    6. 'add' → logprob: -16.0031795501709
    7. '.Add' → logprob: -16.8781795501709
    8. '   ' → logprob: -16.8781795501709
    9. '.setdefault' → logprob: -17.0031795501709
    10. '.insert' → logprob: -18.1281795501709

Token 673: '(expr' (ID: 78746)
  Prédit: '(expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(expr' → logprob: -0.0019295861711725593
    2. 'expr' → logprob: -6.251929759979248
    3. ' expr' → logprob: -14.12692928314209
    4. '(' → logprob: -16.001930236816406
    5. '(expression' → logprob: -16.501930236816406
    6. '(express' → logprob: -17.001930236816406
    7. '(
' → logprob: -18.376930236816406
    8. ' (' → logprob: -18.751930236816406
    9. 'express' → logprob: -18.876930236816406
    10. '.expr' → logprob: -19.751930236816406

Token 674: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -3.8889261304575484e-06
    2. 'str' → logprob: -12.750003814697266
    3. '_expr' → logprob: -15.250003814697266
    4. 'Str' → logprob: -15.625003814697266
    5. ')' → logprob: -15.750003814697266
    6. '_STR' → logprob: -17.250003814697266
    7. 'expr' → logprob: -17.375003814697266
    8. ''_' → logprob: -17.750003814697266
    9. '```' → logprob: -17.875003814697266
    10. '_' → logprob: -17.875003814697266

Token 675: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010744181461632252
    2. '       ' → logprob: -4.635744094848633
    3. ')return' → logprob: -7.135744094848633
    4. ')
' → logprob: -9.385744094848633
    5. '<|end|>' → logprob: -9.385744094848633
    6. '')' → logprob: -11.760744094848633
    7. 'return' → logprob: -12.135744094848633
    8. ' return' → logprob: -12.885744094848633
    9. '")' → logprob: -13.510744094848633
    10. '   ' → logprob: -14.135744094848633

Token 676: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001421187655068934
    2. 'return' → logprob: -6.626420974731445
    3. ' return' → logprob: -10.001420974731445
    4. '	' → logprob: -10.876420974731445
    5. '
' → logprob: -11.001420974731445
    6. '	return' → logprob: -11.501420974731445
    7. '   ' → logprob: -13.001420974731445
    8. '<|end|>' → logprob: -14.251420974731445
    9. '        
' → logprob: -15.001420974731445
    10. '           ' → logprob: -15.751420974731445

Token 677: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5762876868247986
    2. 'return' (adapté à ' return') → logprob: -0.8262876868247986
    3. ' return' → logprob: -8.076287269592285
    4. '	return' → logprob: -10.826287269592285
    5. '   ' → logprob: -11.576287269592285
    6. '
' → logprob: -12.451287269592285
    7. '```' → logprob: -13.451287269592285
    8. '	' → logprob: -13.701287269592285
    9. '{return' → logprob: -15.076287269592285
    10. '           ' → logprob: -15.201287269592285

Token 678: ' forms' (ID: 11526)
  Prédit: 'forms'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'forms' → logprob: -6.623244553338736e-05
    2. ' forms' → logprob: -9.625065803527832
    3. 'form' → logprob: -16.50006675720215
    4. 'formats' → logprob: -17.50006675720215
    5. '(forms' → logprob: -18.37506675720215
    6. '.forms' → logprob: -20.50006675720215
    7. '   ' → logprob: -21.00006675720215
    8. 'formen' → logprob: -21.12506675720215
    9. 'formes' → logprob: -21.37506675720215
    10. 'models' → logprob: -21.50006675720215

Token 679: '


' (ID: 2499)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0026277387514710426
    2. '<|end|>' → logprob: -6.377627849578857
    3. ' class' → logprob: -7.502627849578857
    4. '
' → logprob: -8.1276273727417
    5. '<class' → logprob: -10.1276273727417
    6. ')' → logprob: -11.8776273727417
    7. '

' → logprob: -12.0026273727417
    8. 'OR' → logprob: -12.1276273727417
    9. '    
' → logprob: -13.0026273727417
    10. '   ' → logprob: -13.0026273727417

Token 680: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -1.2664456789934775e-06
    2. '<class' → logprob: -14.000000953674316
    3. ' class' → logprob: -15.000000953674316
    4. '"class' → logprob: -17.375001907348633
    5. 'or' → logprob: -18.250001907348633
    6. '```' → logprob: -18.500001907348633
    7. '	class' → logprob: -19.125001907348633
    8. 'OR' → logprob: -19.500001907348633
    9. '
' → logprob: -19.625001907348633
    10. ''class' → logprob: -19.750001907348633

Token 681: ' X' (ID: 2127)
  Prédit: 'Or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Or' → logprob: -1.1756367712223437e-05
    2. ' Or' → logprob: -11.375011444091797
    3. '_or' → logprob: -16.625011444091797
    4. 'OR' → logprob: -16.750011444091797
    5. 'Ore' → logprob: -17.500011444091797
    6. '_' → logprob: -18.625011444091797
    7. ''Or' → logprob: -19.000011444091797
    8. 'O' → logprob: -19.125011444091797
    9. 'Ora' → logprob: -19.250011444091797
    10. 'Orm' → logprob: -19.500011444091797

Token 682: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.4741211235523224
    2. 'Or' → logprob: -0.97412109375
    3. 'And' → logprob: -10.34912109375
    4. 'and' → logprob: -11.47412109375
    5. 'OR' → logprob: -14.09912109375
    6. '_or' → logprob: -15.22412109375
    7. '(or' → logprob: -15.22412109375
    8. 'Nor' → logprob: -15.47412109375
    9. ' Or' → logprob: -16.47412109375
    10. 'o' → logprob: -17.22412109375

Token 683: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -3.8889261304575484e-06
    2. '(' → logprob: -13.250003814697266
    3. '(Binary' → logprob: -13.250003814697266
    4. 'Bin' → logprob: -15.875003814697266
    5. ' (' → logprob: -16.375003814697266
    6. '(Bit' → logprob: -17.500003814697266
    7. 'B' → logprob: -18.250003814697266
    8. '(bin' → logprob: -18.375003814697266
    9. '(
' → logprob: -18.375003814697266
    10. '((' → logprob: -18.875003814697266

Token 684: 'in' (ID: 258)
  Prédit: 'Bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Bin' → logprob: -0.10312777012586594
    2. '(B' → logprob: -2.4781277179718018
    3. 'in' → logprob: -4.478127956390381
    4. 'B' → logprob: -6.478127956390381
    5. ' Bin' → logprob: -6.978127956390381
    6. 'bin' → logprob: -8.853127479553223
    7. 'In' → logprob: -10.728127479553223
    8. '	B' → logprob: -10.728127479553223
    9. '_bin' → logprob: -11.603127479553223
    10. ')' → logprob: -11.728127479553223

Token 685: 'Op' (ID: 7766)
  Prédit: 'Op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Op' → logprob: -3.91732100979425e-05
    2. 'O' → logprob: -10.250039100646973
    3. '(Op' → logprob: -12.750039100646973
    4. 'Ops' → logprob: -15.250039100646973
    5. '(' → logprob: -15.250039100646973
    6. 'op' → logprob: -15.375039100646973
    7. ')' → logprob: -16.25004005432129
    8. ' Op' → logprob: -16.25004005432129
    9. 'OP' → logprob: -17.00004005432129
    10. '_op' → logprob: -19.00004005432129

Token 686: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16067422926425934
    2. '):
' → logprob: -1.9106742143630981
    3. '   ' → logprob: -8.160674095153809
    4. '(B' → logprob: -9.285674095153809
    5. ')' → logprob: -9.910674095153809
    6. ':' → logprob: -11.660674095153809
    7. '):
' → logprob: -11.785674095153809
    8. '):

' → logprob: -12.785674095153809
    9. '(' → logprob: -14.410674095153809
    10. ':
' → logprob: -14.785674095153809

Token 687: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -9.674858301877975e-05
    2. ':' → logprob: -10.250096321105957
    3. ' def' → logprob: -10.625096321105957
    4. 'def' → logprob: -11.250096321105957
    5. ')' → logprob: -11.500096321105957
    6. '  ' → logprob: -12.375096321105957
    7. '<|end|>' → logprob: -13.125096321105957
    8. ',' → logprob: -13.500096321105957
    9. '       ' → logprob: -13.625096321105957
    10. ' ' → logprob: -13.875096321105957

Token 688: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09450223296880722
    2. 'def' (adapté à ' def') → logprob: -2.7195022106170654
    3. ' def' → logprob: -3.7195022106170654
    4. '	def' → logprob: -11.344502449035645
    5. '_def' → logprob: -13.469502449035645
    6. ':def' → logprob: -13.719502449035645
    7. '  ' → logprob: -13.844502449035645
    8. ':' → logprob: -14.094502449035645
    9. ' ' → logprob: -14.094502449035645
    10. '    ' → logprob: -14.219502449035645

Token 689: ' evaluate' (ID: 21646)
  Prédit: 'evaluate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'evaluate' → logprob: -0.003995527047663927
    2. ' evaluate' → logprob: -6.003995418548584
    3. 'valuate' → logprob: -6.503995418548584
    4. 'eval' → logprob: -12.503995895385742
    5. 'def' → logprob: -13.003995895385742
    6. 'value' → logprob: -13.128995895385742
    7. 'evalu' → logprob: -13.128995895385742
    8. '.evaluate' → logprob: -13.378995895385742
    9. '```' → logprob: -13.878995895385742
    10. '__' → logprob: -14.628995895385742

Token 690: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.001121999230235815
    2. '   ' → logprob: -6.876121997833252
    3. 'self' → logprob: -10.50112247467041
    4. '(' → logprob: -10.62612247467041
    5. 'def' → logprob: -10.75112247467041
    6. ' ' → logprob: -12.25112247467041
    7. '       ' → logprob: -12.50112247467041
    8. ' (' → logprob: -13.00112247467041
    9. ' self' → logprob: -13.00112247467041
    10. '(s' → logprob: -14.37612247467041

Token 691: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.44173896312713623
    2. '   ' → logprob: -1.4417389631271362
    3. ',' → logprob: -2.941739082336426
    4. 'self' → logprob: -3.066739082336426
    5. ' self' → logprob: -4.441739082336426
    6. 'def' → logprob: -5.066739082336426
    7. ')' → logprob: -6.816739082336426
    8. '       ' → logprob: -7.566739082336426
    9. ',self' → logprob: -7.816739082336426
    10. '(' → logprob: -8.066739082336426

Token 692: ' env' (ID: 9744)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03429236263036728
    2. 'env' → logprob: -3.784292459487915
    3. ' self' → logprob: -4.534292221069336
    4. ' env' → logprob: -8.409292221069336
    5. '   ' → logprob: -10.909292221069336
    6. '       ' → logprob: -12.159292221069336
    7. 'def' → logprob: -12.534292221069336
    8. ' ' → logprob: -13.909292221069336
    9. '  ' → logprob: -15.784292221069336
    10. '(self' → logprob: -15.909292221069336

Token 693: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7345141172409058
    2. '   ' → logprob: -0.8595141172409058
    3. '=' → logprob: -3.1095142364501953
    4. ')' → logprob: -4.484514236450195
    5. '       ' → logprob: -4.609514236450195
    6. ',' → logprob: -4.859514236450195
    7. '{' → logprob: -5.484514236450195
    8. '  ' → logprob: -5.609514236450195
    9. '<|end|>' → logprob: -5.734514236450195
    10. '[' → logprob: -6.609514236450195

Token 694: ' dict' (ID: 11878)
  Prédit: 'dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dict' → logprob: -0.01815767213702202
    2. ' dict' → logprob: -4.018157482147217
    3. 'bool' → logprob: -12.643157958984375
    4. '       ' → logprob: -13.393157958984375
    5. '   ' → logprob: -13.518157958984375
    6. '```' → logprob: -14.393157958984375
    7. '(dict' → logprob: -15.018157958984375
    8. 'def' → logprob: -15.518157958984375
    9. '.dict' → logprob: -15.643157958984375
    10. '=dict' → logprob: -15.893157958984375

Token 695: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.36574100604048e-06
    2. ' )' → logprob: -13.125004768371582
    3. '   ' → logprob: -13.375004768371582
    4. '):
' → logprob: -14.875004768371582
    5. '):' → logprob: -15.750004768371582
    6. ' ' → logprob: -16.250003814697266
    7. '       ' → logprob: -16.500003814697266
    8. ')
' → logprob: -18.750003814697266
    9. '  ' → logprob: -19.000003814697266
    10. ')->' → logprob: -19.000003814697266

Token 696: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12559035420417786
    2. ' ->' → logprob: -2.6255903244018555
    3. '->' → logprob: -3.1255903244018555
    4. '       ' → logprob: -7.1255903244018555
    5. '   ' → logprob: -7.6255903244018555
    6. ')->' → logprob: -8.750590324401855
    7. '>' → logprob: -9.375590324401855
    8. ' ' → logprob: -9.750590324401855
    9. ' def' → logprob: -11.000590324401855
    10. ',' → logprob: -11.125590324401855

Token 697: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.0011797507759183645
    2. ' bool' → logprob: -6.7511796951293945
    3. '(bool' → logprob: -12.501179695129395
    4. 'def' → logprob: -13.126179695129395
    5. 'int' → logprob: -13.501179695129395
    6. 'return' → logprob: -14.376179695129395
    7. '	bool' → logprob: -14.501179695129395
    8. 'False' → logprob: -15.251179695129395
    9. '<bool' → logprob: -15.251179695129395
    10. ' ' → logprob: -16.12618064880371

Token 698: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015397155657410622
    2. ':
' → logprob: -4.890397071838379
    3. ' return' → logprob: -6.265397071838379
    4. ')' → logprob: -6.265397071838379
    5. '   ' → logprob: -6.765397071838379
    6. ':' → logprob: -6.890397071838379
    7. '):
' → logprob: -7.140397071838379
    8. 'return' → logprob: -7.890397071838379
    9. '()' → logprob: -8.765397071838379
    10. '->' → logprob: -8.765397071838379

Token 699: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005300639197230339
    2. 'return' → logprob: -5.255300521850586
    3. ' return' → logprob: -10.005300521850586
    4. '   ' → logprob: -10.755300521850586
    5. '```' → logprob: -15.255300521850586
    6. '           ' → logprob: -17.380300521850586
    7. '	return' → logprob: -17.505300521850586
    8. '``' → logprob: -18.380300521850586
    9. '     ' → logprob: -18.630300521850586
    10. '	' → logprob: -18.630300521850586

Token 700: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00841445941478014
    2. '       ' → logprob: -5.258414268493652
    3. ' return' → logprob: -5.758414268493652
    4. '   ' → logprob: -11.508414268493652
    5. 'self' → logprob: -11.633414268493652
    6. 'not' → logprob: -15.383414268493652
    7. '	return' → logprob: -16.00841522216797
    8. '           ' → logprob: -16.25841522216797
    9. ' ' → logprob: -17.50841522216797
    10. 'result' → logprob: -17.50841522216797

Token 701: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.024279918521642685
    2. ' self' → logprob: -3.774279832839966
    3. '(self' → logprob: -6.899280071258545
    4. ' (' → logprob: -10.774279594421387
    5. 'bool' → logprob: -13.399279594421387
    6. 'not' → logprob: -13.774279594421387
    7. '(' → logprob: -14.524279594421387
    8. ' ' → logprob: -14.774279594421387
    9. '(not' → logprob: -14.774279594421387
    10. '	self' → logprob: -15.649279594421387

Token 702: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.0003163969377055764
    2. 'left' → logprob: -8.125316619873047
    3. '.' → logprob: -11.500316619873047
    4. '.right' → logprob: -12.375316619873047
    5. '.evaluate' → logprob: -13.125316619873047
    6. 'xor' → logprob: -14.375316619873047
    7. '(left' → logprob: -14.750316619873047
    8. ' .' → logprob: -14.750316619873047
    9. 'evaluate' → logprob: -15.000316619873047
    10. ').' → logprob: -15.125316619873047

Token 703: '.evaluate' (ID: 71397)
  Prédit: '.evaluate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.evaluate' → logprob: -0.01031008455902338
    2. '.' → logprob: -4.635310173034668
    3. 'evaluate' → logprob: -7.635310173034668
    4. ' .' → logprob: -9.885310173034668
    5. ').' → logprob: -13.385310173034668
    6. ' ' → logprob: -13.510310173034668
    7. '.execute' → logprob: -13.635310173034668
    8. ')' → logprob: -13.760310173034668
    9. '.__' → logprob: -13.760310173034668
    10. 'xor' → logprob: -13.760310173034668

Token 704: '(env' (ID: 38512)
  Prédit: '(env'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(env' → logprob: -0.038047123700380325
    2. 'env' → logprob: -3.2880470752716064
    3. '(' → logprob: -12.913046836853027
    4. 'not' → logprob: -14.288046836853027
    5. ' env' → logprob: -14.288046836853027
    6. '.env' → logprob: -14.413046836853027
    7. '/env' → logprob: -15.038046836853027
    8. '	env' → logprob: -15.538046836853027
    9. '(not' → logprob: -15.788046836853027
    10. 'xor' → logprob: -15.913046836853027

Token 705: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8670179997570813e-05
    2. ' )' → logprob: -11.125019073486328
    3. ')!=' → logprob: -12.750019073486328
    4. ',' → logprob: -15.250019073486328
    5. ')^' → logprob: -15.375019073486328
    6. '）' → logprob: -16.625019073486328
    7. '^)' → logprob: -16.875019073486328
    8. '!=' → logprob: -16.875019073486328
    9. ')
' → logprob: -17.000019073486328
    10. '   ' → logprob: -17.250019073486328

Token 706: ' !=' (ID: 1666)
  Prédit: ' ^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ^' → logprob: -0.6724897623062134
    2. ' !=' → logprob: -1.4224897623062134
    3. '!=' → logprob: -2.672489643096924
    4. ' xor' → logprob: -3.047489643096924
    5. 'xor' → logprob: -3.547489643096924
    6. '^' → logprob: -3.547489643096924
    7. ' ' → logprob: -3.797489643096924
    8. ' and' → logprob: -4.297489643096924
    9. ')' → logprob: -4.672489643096924
    10. ' ' → logprob: -5.047489643096924

Token 707: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008615161292254925
    2. ' self' → logprob: -4.758615016937256
    3. '       ' → logprob: -14.633615493774414
    4. '(self' → logprob: -16.383615493774414
    5. '	self' → logprob: -17.258615493774414
    6. '   ' → logprob: -17.508615493774414
    7. ' ' → logprob: -17.508615493774414
    8. '           ' → logprob: -17.758615493774414
    9. '  ' → logprob: -19.258615493774414
    10. '[self' → logprob: -19.508615493774414

Token 708: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.0005562512087635696
    2. '.left' → logprob: -7.750556468963623
    3. 'right' → logprob: -9.000555992126465
    4. '.evaluate' → logprob: -14.000555992126465
    5. '.' → logprob: -14.375555992126465
    6. 'evaluate' → logprob: -14.625555992126465
    7. 'left' → logprob: -16.62555694580078
    8. '	right' → logprob: -17.12555694580078
    9. '   ' → logprob: -17.25055694580078
    10. '.next' → logprob: -17.50055694580078

Token 709: '.evaluate' (ID: 71397)
  Prédit: '.evaluate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.evaluate' → logprob: -0.0010530536528676748
    2. '.' → logprob: -6.8760528564453125
    3. '._' → logprob: -11.376052856445312
    4. 'evaluate' → logprob: -12.751052856445312
    5. ' .' → logprob: -12.876052856445312
    6. '.eval' → logprob: -14.126052856445312
    7. '_.' → logprob: -14.626052856445312
    8. '   ' → logprob: -15.126052856445312
    9. '.perform' → logprob: -15.626052856445312
    10. '\.' → logprob: -15.751052856445312

Token 710: '(env' (ID: 38512)
  Prédit: '(env'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(env' → logprob: -2.1008713702030946e-06
    2. 'env' → logprob: -13.375001907348633
    3. '(environment' → logprob: -15.000001907348633
    4. '(' → logprob: -16.125001907348633
    5. ' (' → logprob: -17.000001907348633
    6. ' env' → logprob: -19.250001907348633
    7. '(en' → logprob: -19.500001907348633
    8. '(eval' → logprob: -19.750001907348633
    9. '.env' → logprob: -20.125001907348633
    10. '	env' → logprob: -20.250001907348633

Token 711: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. '   ' → logprob: -14.750000953674316
    3. ' )' → logprob: -16.125
    4. ')}' → logprob: -16.5
    5. ')
' → logprob: -16.75
    6. '<|end|>' → logprob: -16.75
    7. '))' → logprob: -16.875
    8. '}' → logprob: -17.0
    9. '       ' → logprob: -17.0
    10. '),' → logprob: -17.75

Token 712: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06315017491579056
    2. '<|end|>' → logprob: -2.93815016746521
    3. 'def' → logprob: -5.438150405883789
    4. '
' → logprob: -6.688150405883789
    5. '```' → logprob: -6.688150405883789
    6. '<|end|>' → logprob: -6.938150405883789
    7. ' ' → logprob: -9.313150405883789
    8. '[' → logprob: -9.563150405883789
    9. '    
' → logprob: -9.938150405883789
    10. ' def' → logprob: -10.188150405883789

Token 713: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.024769756942987442
    2. '
' → logprob: -3.7747697830200195
    3. '   ' → logprob: -6.7747697830200195
    4. ' def' → logprob: -7.8997697830200195
    5. '@' → logprob: -12.64976978302002
    6. '    
' → logprob: -12.64976978302002
    7. '```' → logprob: -13.52476978302002
    8. '

' → logprob: -14.64976978302002
    9. '        
' → logprob: -14.89976978302002
    10. '	def' → logprob: -15.02476978302002

Token 714: ' canonical' (ID: 91323)
  Prédit: 'canonical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'canonical' → logprob: -0.005279176402837038
    2. ' canonical' → logprob: -5.255279064178467
    3. 'def' → logprob: -10.005279541015625
    4. ' def' → logprob: -15.755279541015625
    5. '   ' → logprob: -18.005279541015625
    6. 'Canonical' → logprob: -18.380279541015625
    7. '```' → logprob: -18.630279541015625
    8. 'can' → logprob: -18.630279541015625
    9. '
' → logprob: -19.005279541015625
    10. 'cached' → logprob: -19.130279541015625

Token 715: '_forms' (ID: 176505)
  Prédit: '_forms'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_forms' → logprob: -7.822646693966817e-06
    2. '_' → logprob: -12.250007629394531
    3. '_formats' → logprob: -13.500007629394531
    4. '_form' → logprob: -14.000007629394531
    5. '_parts' → logprob: -15.250007629394531
    6. '```' → logprob: -15.875007629394531
    7. ' _' → logprob: -16.00000762939453
    8. '\' → logprob: -16.25000762939453
    9. '_faces' → logprob: -16.87500762939453
    10. '_for' → logprob: -17.50000762939453

Token 716: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.333223139634356e-05
    2. '(' → logprob: -10.375033378601074
    3. '(
' → logprob: -14.125033378601074
    4. '(s' → logprob: -14.375033378601074
    5. 'self' → logprob: -14.750033378601074
    6. '   ' → logprob: -15.375033378601074
    7. '()' → logprob: -16.000032424926758
    8. ' (' → logprob: -16.750032424926758
    9. '       ' → logprob: -18.625032424926758
    10. '(se' → logprob: -18.875032424926758

Token 717: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.006632829084992409
    2. ')' → logprob: -5.5066328048706055
    3. '(' → logprob: -6.7566328048706055
    4. '()' → logprob: -7.0066328048706055
    5. '   ' → logprob: -7.8816328048706055
    6. 'self' → logprob: -9.631632804870605
    7. ' (' → logprob: -10.631632804870605
    8. '```' → logprob: -13.006632804870605
    9. '(s' → logprob: -13.256632804870605
    10. 'def' → logprob: -13.256632804870605

Token 718: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004379328340291977
    2. '(' → logprob: -5.5043792724609375
    3. '   ' → logprob: -8.754379272460938
    4. ' (' → logprob: -9.629379272460938
    5. '()' → logprob: -10.629379272460938
    6. '(
' → logprob: -10.754379272460938
    7. '(s' → logprob: -11.004379272460938
    8. 'def' → logprob: -12.379379272460938
    9. '       ' → logprob: -12.879379272460938
    10. ')' → logprob: -13.254379272460938

Token 719: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.0019286326132714748
    2. ' set' → logprob: -6.251928806304932
    3. '(set' → logprob: -17.876928329467773
    4. '   ' → logprob: -19.001928329467773
    5. 'def' → logprob: -19.376928329467773
    6. '{' → logprob: -20.126928329467773
    7. ' ' → logprob: -20.126928329467773
    8. 's' → logprob: -20.751928329467773
    9. 'sets' → logprob: -21.376928329467773
    10. '	set' → logprob: -21.501928329467773

Token 720: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0012349952012300491
    2. '(' → logprob: -6.751235008239746
    3. '(
' → logprob: -10.501235008239746
    4. '   ' → logprob: -10.751235008239746
    5. '(s' → logprob: -12.001235008239746
    6. 'self' → logprob: -12.376235008239746
    7. '       ' → logprob: -12.501235008239746
    8. 'def' → logprob: -14.876235008239746
    9. '()' → logprob: -15.501235008239746
    10. '=' → logprob: -15.501235008239746

Token 721: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.5048530030981055e-06
    2. '#' → logprob: -14.375001907348633
    3. '   ' → logprob: -14.750001907348633
    4. '```' → logprob: -15.500001907348633
    5. '           ' → logprob: -16.875001907348633
    6. '()' → logprob: -16.875001907348633
    7. '[' → logprob: -17.000001907348633
    8. '	' → logprob: -17.250001907348633
    9. '(' → logprob: -17.750001907348633
    10. '
' → logprob: -17.875001907348633

Token 722: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37177523970603943
    2. '#' (adapté à ' #') → logprob: -1.3717752695083618
    3. 'left' → logprob: -2.8717751502990723
    4. ' left' → logprob: -8.62177562713623
    5. ' #' → logprob: -10.49677562713623
    6. '   ' → logprob: -10.87177562713623
    7. '```' → logprob: -13.12177562713623
    8. '	left' → logprob: -13.49677562713623
    9. '      ' → logprob: -13.87177562713623
    10. '	' → logprob: -13.87177562713623

Token 723: ' XOR' (ID: 147209)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.011542056687176228
    2. '#' → logprob: -4.511541843414307
    3. '       ' → logprob: -7.636541843414307
    4. ' left' → logprob: -12.261542320251465
    5. '   ' → logprob: -12.386542320251465
    6. '	left' → logprob: -13.886542320251465
    7. 'return' → logprob: -14.886542320251465
    8. 'l' → logprob: -15.761542320251465
    9. '[left' → logprob: -15.886542320251465
    10. 'lhs' → logprob: -16.13654136657715

Token 724: ' is' (ID: 382)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.47260594367980957
    2. '       ' → logprob: -1.2226059436798096
    3. '   ' → logprob: -3.2226059436798096
    4. ' left' → logprob: -3.3476059436798096
    5. 'def' → logprob: -5.5976057052612305
    6. '(left' → logprob: -6.5976057052612305
    7. '=' → logprob: -7.5976057052612305
    8. ' =' → logprob: -7.7226057052612305
    9. '_forms' → logprob: -8.72260570526123
    10. '(self' → logprob: -8.97260570526123

Token 725: ' comm' (ID: 1394)
  Prédit: 'comm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comm' → logprob: -0.048798445612192154
    2. ' comm' → logprob: -4.048798561096191
    3. '   ' → logprob: -4.298798561096191
    4. 'set' → logprob: -4.798798561096191
    5. 'com' → logprob: -6.423798561096191
    6. 'def' → logprob: -6.673798561096191
    7. 'a' → logprob: -6.673798561096191
    8. '       ' → logprob: -6.923798561096191
    9. '#' → logprob: -7.298798561096191
    10. 'self' → logprob: -8.048798561096191

Token 726: 'ut' (ID: 339)
  Prédit: 'ut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ut' → logprob: -0.0009505256894044578
    2. 'utable' → logprob: -7.250950336456299
    3. 'utive' → logprob: -8.500950813293457
    4. '   ' → logprob: -11.250950813293457
    5. 'utat' → logprob: -11.625950813293457
    6. '```' → logprob: -12.625950813293457
    7. '       ' → logprob: -13.500950813293457
    8. '...' → logprob: -13.625950813293457
    9. '__' → logprob: -13.625950813293457
    10. 'ulative' → logprob: -13.750950813293457

Token 727: 'ative' (ID: 1799)
  Prédit: 'ative'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ative' → logprob: -0.025187283754348755
    2. 'ut' → logprob: -3.9001872539520264
    3. 'utive' → logprob: -5.7751874923706055
    4. 'at' → logprob: -6.7751874923706055
    5. 't' → logprob: -8.650187492370605
    6. 'utable' → logprob: -9.650187492370605
    7. '   ' → logprob: -10.150187492370605
    8. '__' → logprob: -10.400187492370605
    9. 'itive' → logprob: -11.275187492370605
    10. 'ulative' → logprob: -11.525187492370605

Token 728: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00022821188031230122
    2. 'left' → logprob: -9.000227928161621
    3. ',' → logprob: -10.125227928161621
    4. '(left' → logprob: -10.500227928161621
    5. '   ' → logprob: -11.250227928161621
    6. ' left' → logprob: -11.500227928161621
    7. '
' → logprob: -12.750227928161621
    8. ':' → logprob: -13.500227928161621
    9. '(' → logprob: -13.500227928161621
    10. '()' → logprob: -13.625227928161621

Token 729: ' associative' (ID: 169679)
  Prédit: 'ass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ass' → logprob: -0.12107207626104355
    2. ' associative' → logprob: -2.2460720539093018
    3. 'self' → logprob: -5.371072292327881
    4. '   ' → logprob: -5.746072292327881
    5. '-ass' → logprob: -8.621071815490723
    6. '_ass' → logprob: -10.121071815490723
    7. '       ' → logprob: -10.371071815490723
    8. ' self' → logprob: -10.621071815490723
    9. 'associate' → logprob: -10.746071815490723
    10. 'assoc' → logprob: -11.246071815490723

Token 730: ' but' (ID: 889)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003837213444057852
    2. ',' → logprob: -9.125383377075195
    3. '()' → logprob: -9.125383377075195
    4. '()
' → logprob: -9.625383377075195
    5. '(' → logprob: -10.500383377075195
    6. '
' → logprob: -11.250383377075195
    7. ':' → logprob: -11.750383377075195
    8. '(
' → logprob: -11.875383377075195
    9. '   ' → logprob: -11.875383377075195
    10. '():
' → logprob: -12.250383377075195

Token 731: ' grammar' (ID: 41735)
  Prédit: ' we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' we' → logprob: -0.843268632888794
    2. '       ' → logprob: -0.968268632888794
    3. ' not' → logprob: -2.968268632888794
    4. 'we' → logprob: -3.593268632888794
    5. ' the' → logprob: -3.718268632888794
    6. ' self' → logprob: -3.843268632888794
    7. 'self' → logprob: -4.593268394470215
    8. ' only' → logprob: -4.593268394470215
    9. '#' → logprob: -4.843268394470215
    10. '   ' → logprob: -5.593268394470215

Token 732: ' uses' (ID: 8844)
  Prédit: ' does'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' does' → logprob: -1.5295521020889282
    2. '       ' → logprob: -1.7795521020889282
    3. ':' → logprob: -1.9045521020889282
    4. ' only' → logprob: -2.2795519828796387
    5. '.' → logprob: -2.5295519828796387
    6. 'does' → logprob: -2.5295519828796387
    7. ' doesn't' → logprob: -3.4045519828796387
    8. ' is' → logprob: -3.5295519828796387
    9. '   ' → logprob: -3.5295519828796387
    10. ' continues' → logprob: -4.279551982879639

Token 733: ' binary' (ID: 15600)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.9766407012939453
    2. ''' → logprob: -1.1016407012939453
    3. '{' → logprob: -2.4766407012939453
    4. 'set' → logprob: -3.2266407012939453
    5. 'parent' → logprob: -3.3516407012939453
    6. ' '('' → logprob: -3.8516407012939453
    7. 'sets' → logprob: -3.9766407012939453
    8. 'paren' → logprob: -4.351640701293945
    9. 'the' → logprob: -4.476640701293945
    10. '   ' → logprob: -5.101640701293945

Token 734: ' parentheses' (ID: 180602)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0183157920837402
    2. '   ' → logprob: -1.5183157920837402
    3. '       ' → logprob: -1.5183157920837402
    4. '_forms' → logprob: -1.7683157920837402
    5. '_
' → logprob: -5.14331579208374
    6. 'def' → logprob: -5.39331579208374
    7. '(
' → logprob: -5.76831579208374
    8. '()' → logprob: -5.89331579208374
    9. '()
' → logprob: -6.39331579208374
    10. '_op' → logprob: -6.89331579208374

Token 735: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004337902646511793
    2. '   ' → logprob: -6.004337787628174
    3. '():' → logprob: -6.629337787628174
    4. ':' → logprob: -8.379338264465332
    5. '():
' → logprob: -8.879338264465332
    6. '(' → logprob: -10.129338264465332
    7. '()' → logprob: -10.129338264465332
    8. '(
' → logprob: -10.629338264465332
    9. ',' → logprob: -11.379338264465332
    10. 'left' → logprob: -11.629338264465332

Token 736: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000343210413120687
    2. 'left' → logprob: -8.375343322753906
    3. ' left' → logprob: -9.125343322753906
    4. '   ' → logprob: -14.000343322753906
    5. '```' → logprob: -14.125343322753906
    6. '           ' → logprob: -14.750343322753906
    7. '
' → logprob: -15.125343322753906
    8. '(left' → logprob: -15.250343322753906
    9. '        ' → logprob: -15.500343322753906
    10. '	' → logprob: -15.625343322753906

Token 737: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030693095177412033
    2. 'left' → logprob: -3.7806930541992188
    3. ' left' → logprob: -4.905693054199219
    4. '   ' → logprob: -12.030693054199219
    5. '#' (adapté à ' #') → logprob: -13.280693054199219
    6. '	left' → logprob: -13.280693054199219
    7. '	' → logprob: -13.905693054199219
    8. 'return' → logprob: -14.030693054199219
    9. '      ' → logprob: -14.280693054199219
    10. '
' → logprob: -14.280693054199219

Token 738: ' We' (ID: 1416)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.04712655395269394
    2. '       ' → logprob: -3.172126531600952
    3. ' left' → logprob: -5.547126770019531
    4. '#' → logprob: -8.547126770019531
    5. '   ' → logprob: -11.797126770019531
    6. '	left' → logprob: -12.172126770019531
    7. 'return' → logprob: -12.672126770019531
    8. 'def' → logprob: -13.297126770019531
    9. 'Left' → logprob: -13.547126770019531
    10. '(left' → logprob: -14.047126770019531

Token 739: ' impose' (ID: 68003)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2522449195384979
    2. ' left' → logprob: -2.2522449493408203
    3. 'left' → logprob: -3.2522449493408203
    4. '   ' → logprob: -3.7522449493408203
    5. 'def' → logprob: -3.7522449493408203
    6. ' continue' → logprob: -4.75224494934082
    7. 'continue' → logprob: -4.75224494934082
    8. '#' → logprob: -5.25224494934082
    9. ' return' → logprob: -6.25224494934082
    10. ' def' → logprob: -6.50224494934082

Token 740: ' left' (ID: 3561)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.4001869261264801
    2. ' order' → logprob: -1.1501868963241577
    3. 'an' → logprob: -5.150187015533447
    4. ' an' → logprob: -6.025187015533447
    5. 'a' → logprob: -6.650187015533447
    6. '       ' → logprob: -7.025187015533447
    7. 'ordering' → logprob: -7.400187015533447
    8. ' ordering' → logprob: -7.650187015533447
    9. 'left' → logprob: -7.775187015533447
    10. ' a' → logprob: -8.025186538696289

Token 741: '<' (ID: 27)
  Prédit: '_forms'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_forms' → logprob: -0.02351950667798519
    2. '_parent' → logprob: -5.148519515991211
    3. '_' → logprob: -5.273519515991211
    4. '_par' → logprob: -5.648519515991211
    5. '_form' → logprob: -6.648519515991211
    6. '=' → logprob: -6.648519515991211
    7. ' =' → logprob: -7.398519515991211
    8. 'parent' → logprob: -7.523519515991211
    9. '   ' → logprob: -7.648519515991211
    10. 'forms' → logprob: -7.773519515991211

Token 742: 'right' (ID: 2460)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5853140950202942
    2. '=' → logprob: -1.0853140354156494
    3. 'right' → logprob: -2.4603140354156494
    4. '=self' → logprob: -4.2103142738342285
    5. '=>' → logprob: -7.0853142738342285
    6. '>' → logprob: -7.5853142738342285
    7. ' self' → logprob: -7.8353142738342285
    8. '...' → logprob: -8.08531379699707
    9. ' right' → logprob: -8.33531379699707
    10. 'f' → logprob: -8.46031379699707

Token 743: ' order' (ID: 2569)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1945534944534302
    2. ' and' → logprob: -1.6945534944534302
    3. ':' → logprob: -2.1945533752441406
    4. 'and' → logprob: -2.1945533752441406
    5. 'to' → logprob: -2.4445533752441406
    6. ' to' → logprob: -2.5695533752441406
    7. '_forms' → logprob: -3.0695533752441406
    8. ',' → logprob: -3.9445533752441406
    9. 'for' → logprob: -4.319553375244141
    10. ':
' → logprob: -4.444553375244141

Token 744: ' lex' (ID: 37772)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00918396282941103
    2. '=' → logprob: -6.259183883666992
    3. ' =' → logprob: -6.259183883666992
    4. ':' → logprob: -6.759183883666992
    5. ' to' → logprob: -6.884183883666992
    6. 'left' → logprob: -7.134183883666992
    7. 'to' → logprob: -7.259183883666992
    8. ' and' → logprob: -7.884183883666992
    9. 'and' → logprob: -8.009183883666992
    10. ',' → logprob: -8.259183883666992

Token 745: 'ic' (ID: 291)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5049036145210266
    2. ':' → logprob: -1.8799035549163818
    3. ' to' → logprob: -1.8799035549163818
    4. 'to' → logprob: -3.254903554916382
    5. ':
' → logprob: -4.629903793334961
    6. 'ical' → logprob: -4.754903793334961
    7. ' and' → logprob: -5.004903793334961
    8. 'ic' → logprob: -5.629903793334961
    9. ' for' → logprob: -5.629903793334961
    10. ',' → logprob: -5.629903793334961

Token 746: 'ographically' (ID: 121004)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.04855966567993164
    2. 'ographically' → logprob: -3.5485596656799316
    3. 'ally' → logprob: -4.298559665679932
    4. 'ographical' → logprob: -6.048559665679932
    5. 'graph' → logprob: -6.298559665679932
    6. 'ographic' → logprob: -7.923559665679932
    7. 'on' → logprob: -9.298559188842773
    8. 'agraph' → logprob: -9.548559188842773
    9. 'ograph' → logprob: -10.423559188842773
    10. 'cal' → logprob: -11.048559188842773

Token 747: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004909362178295851
    2. ':' → logprob: -6.004909515380859
    3. ' and' → logprob: -7.254909515380859
    4. ' to' → logprob: -7.254909515380859
    5. ',' → logprob: -7.504909515380859
    6. ' for' → logprob: -9.00490951538086
    7. '           ' → logprob: -9.00490951538086
    8. 'to' → logprob: -9.87990951538086
    9. ':
' → logprob: -10.00490951538086
    10. 'and' → logprob: -10.12990951538086

Token 748: ' get' (ID: 717)
  Prédit: 'avoid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'avoid' → logprob: -0.182004913687706
    2. ' avoid' → logprob: -1.8070049285888672
    3. 'def' → logprob: -6.307004928588867
    4. '   ' → logprob: -9.182004928588867
    5. 'reduce' → logprob: -9.682004928588867
    6. 'prevent' → logprob: -9.807004928588867
    7. '       ' → logprob: -9.807004928588867
    8. 'return' → logprob: -9.932004928588867
    9. 'import' → logprob: -11.057004928588867
    10. '#' → logprob: -11.432004928588867

Token 749: ' canonical' (ID: 91323)
  Prédit: 'unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'unique' → logprob: -0.6449680328369141
    2. 'forms' → logprob: -1.394968032836914
    3. 'consistent' → logprob: -2.269968032836914
    4. 'canonical' → logprob: -3.269968032836914
    5. ' forms' → logprob: -3.894968032836914
    6. 'a' → logprob: -4.269968032836914
    7. '{' → logprob: -4.769968032836914
    8. ' consistent' → logprob: -5.144968032836914
    9. 'minimal' → logprob: -5.144968032836914
    10. ' unique' → logprob: -5.269968032836914

Token 750: ' forms' (ID: 11526)
  Prédit: '_forms'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_forms' → logprob: -0.038993436843156815
    2. 'forms' → logprob: -3.2889933586120605
    3. ' forms' → logprob: -8.288993835449219
    4. '       ' → logprob: -8.538993835449219
    5. '_pairs' → logprob: -9.163993835449219
    6. 'left' → logprob: -9.788993835449219
    7. '_form' → logprob: -9.913993835449219
    8. '   ' → logprob: -10.163993835449219
    9. 'form' → logprob: -10.663993835449219
    10. '(
' → logprob: -10.788993835449219

Token 751: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00029625516617670655
    2. ',' → logprob: -9.625296592712402
    3. '   ' → logprob: -9.625296592712402
    4. 'def' → logprob: -9.875296592712402
    5. '
' → logprob: -10.625296592712402
    6. 'left' → logprob: -11.000296592712402
    7. '(self' → logprob: -11.125296592712402
    8. ':' → logprob: -11.375296592712402
    9. 'from' → logprob: -11.875296592712402
    10. '()' → logprob: -11.875296592712402

Token 752: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.4153549020411447e-05
    2. '
' → logprob: -11.75002384185791
    3. '   ' → logprob: -12.12502384185791
    4. '```' → logprob: -12.12502384185791
    5. 'left' → logprob: -13.12502384185791
    6. ',' → logprob: -14.75002384185791
    7. '[' → logprob: -14.87502384185791
    8. '           ' → logprob: -14.87502384185791
    9. ' left' → logprob: -15.12502384185791
    10. '        ' → logprob: -15.50002384185791

Token 753: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.5789095759391785
    2. '       ' → logprob: -0.8289095759391785
    3. ' left' → logprob: -5.828909397125244
    4. '   ' → logprob: -11.828909873962402
    5. '	left' → logprob: -12.203909873962402
    6. '
' → logprob: -12.828909873962402
    7. 'def' → logprob: -13.328909873962402
    8. '	' → logprob: -13.953909873962402
    9. '#' → logprob: -14.078909873962402
    10. '(left' → logprob: -14.203909873962402

Token 754: '_forms' (ID: 176505)
  Prédit: '_forms'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_forms' → logprob: -4.008129963040119e-06
    2. '_form' → logprob: -13.500003814697266
    3. 'forms' → logprob: -13.625003814697266
    4. 's' → logprob: -15.875003814697266
    5. '_formats' → logprob: -15.875003814697266
    6. '```' → logprob: -16.125003814697266
    7. '_c' → logprob: -16.125003814697266
    8. '._' → logprob: -16.500003814697266
    9. 'left' → logprob: -16.500003814697266
    10. '_for' → logprob: -16.625003814697266

Token 755: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1002156138420105
    2. '=' → logprob: -2.3502156734466553
    3. '       ' → logprob: -11.975215911865234
    4. '=self' → logprob: -13.975215911865234
    5. '=set' → logprob: -14.475215911865234
    6. '   ' → logprob: -14.475215911865234
    7. ' ' → logprob: -14.975215911865234
    8. 'self' → logprob: -16.100215911865234
    9. 's' → logprob: -16.225215911865234
    10. 'set' → logprob: -16.225215911865234

Token 756: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008620012551546097
    2. ' self' → logprob: -4.758619785308838
    3. '       ' → logprob: -12.258620262145996
    4. '(self' → logprob: -14.883620262145996
    5. '   ' → logprob: -15.383620262145996
    6. '	self' → logprob: -17.13361930847168
    7. 'set' → logprob: -17.63361930847168
    8. '[self' → logprob: -17.63361930847168
    9. '{' → logprob: -17.88361930847168
    10. '           ' → logprob: -18.13361930847168

Token 757: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.0008358351769857109
    2. '.right' → logprob: -7.12583589553833
    3. '.c' → logprob: -11.125835418701172
    4. 'left' → logprob: -11.125835418701172
    5. 'canonical' → logprob: -14.500835418701172
    6. '_left' → logprob: -14.625835418701172
    7. '   ' → logprob: -14.625835418701172
    8. '_c' → logprob: -15.500835418701172
    9. '._' → logprob: -16.500835418701172
    10. 'Canonical' → logprob: -17.125835418701172

Token 758: '.c' (ID: 1081)
  Prédit: '.c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.c' → logprob: -6.2729995988775045e-06
    2. 'canonical' → logprob: -12.375006675720215
    3. ' .' → logprob: -14.000006675720215
    4. '.' → logprob: -14.625006675720215
    5. '   ' → logprob: -15.000006675720215
    6. '._' → logprob: -16.6250057220459
    7. ' canonical' → logprob: -16.6250057220459
    8. '.can' → logprob: -16.8750057220459
    9. 'Canonical' → logprob: -17.0000057220459
    10. '.s' → logprob: -17.3750057220459

Token 759: 'anonical' (ID: 143898)
  Prédit: 'anonical'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anonical' → logprob: -1.3902033970225602e-05
    2. 'canonical' → logprob: -11.250014305114746
    3. '```' → logprob: -15.250014305114746
    4. 'an' → logprob: -15.625014305114746
    5. 'lassical' → logprob: -16.37501335144043
    6. '_' → logprob: -16.37501335144043
    7. 'anical' → logprob: -16.62501335144043
    8. 'annon' → logprob: -16.87501335144043
    9. 'onal' → logprob: -17.00001335144043
    10. '_an' → logprob: -18.00001335144043

Token 760: '_forms' (ID: 176505)
  Prédit: '_forms'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_forms' → logprob: -6.153795766294934e-06
    2. '```' → logprob: -13.500005722045898
    3. '()' → logprob: -13.750005722045898
    4. '_' → logprob: -14.000005722045898
    5. 'forms' → logprob: -14.500005722045898
    6. '_formats' → logprob: -15.250005722045898
    7. '_for' → logprob: -15.375005722045898
    8. '_c' → logprob: -15.375005722045898
    9. 'Forms' → logprob: -15.500005722045898
    10. '_sets' → logprob: -16.0000057220459

Token 761: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07890642434358597
    2. '()
' → logprob: -2.578906536102295
    3. '       ' → logprob: -11.328906059265137
    4. '()
' → logprob: -12.828906059265137
    5. '()

' → logprob: -14.453906059265137
    6. '(),' → logprob: -14.578906059265137
    7. '   ' → logprob: -14.953906059265137
    8. ' ()' → logprob: -15.328906059265137
    9. '(' → logprob: -15.703906059265137
    10. '()\' → logprob: -16.578907012939453

Token 762: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008753431029617786
    2. 'right' → logprob: -4.758753299713135
    3. ' right' → logprob: -8.883753776550293
    4. '```' → logprob: -16.258752822875977
    5. '	right' → logprob: -17.008752822875977
    6. '   ' → logprob: -18.383752822875977
    7. '.right' → logprob: -18.508752822875977
    8. 'Right' → logprob: -18.508752822875977
    9. '           ' → logprob: -18.758752822875977
    10. 'root' → logprob: -18.883752822875977

Token 763: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.11664088815450668
    2. '       ' → logprob: -2.36664080619812
    3. ' right' → logprob: -4.116641044616699
    4. '	right' → logprob: -14.9916410446167
    5. '.right' → logprob: -15.9916410446167
    6. 'Right' → logprob: -16.366640090942383
    7. '[right' → logprob: -16.616640090942383
    8. 'rhs' → logprob: -16.991640090942383
    9. '```' → logprob: -17.366640090942383
    10. ',right' → logprob: -17.616640090942383

Token 764: '_forms' (ID: 176505)
  Prédit: '_forms'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_forms' → logprob: -7.3458322731312364e-06
    2. '```' → logprob: -12.625007629394531
    3. '_formats' → logprob: -13.375007629394531
    4. '_form' → logprob: -13.625007629394531
    5. '._' → logprob: -15.000007629394531
    6. ')_' → logprob: -15.625007629394531
    7. 'Forms' → logprob: -16.25000762939453
    8. '_for' → logprob: -16.75000762939453
    9. ''_' → logprob: -16.87500762939453
    10. '_codes' → logprob: -17.12500762939453

Token 765: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31333401799201965
    2. ' =' → logprob: -1.3133339881896973
    3. '=set' → logprob: -10.063334465026855
    4. '   ' → logprob: -10.563334465026855
    5. ')' → logprob: -13.813334465026855
    6. ' ' → logprob: -13.938334465026855
    7. 'set' → logprob: -14.938334465026855
    8. '       ' → logprob: -15.063334465026855
    9. '()' → logprob: -15.563334465026855
    10. '    ' → logprob: -15.813334465026855

Token 766: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.023275762796401978
    2. ' self' → logprob: -3.773275852203369
    3. '       ' → logprob: -10.898275375366211
    4. '(self' → logprob: -12.398275375366211
    5. 'set' → logprob: -12.523275375366211
    6. '   ' → logprob: -12.773275375366211
    7. '[self' → logprob: -15.398275375366211
    8. '           ' → logprob: -15.648275375366211
    9. '	self' → logprob: -15.773275375366211
    10. ' ' → logprob: -15.773275375366211

Token 767: '.right' (ID: 17627)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.016272829845547676
    2. 'canonical' → logprob: -4.141273021697998
    3. '_forms' → logprob: -9.14127254486084
    4. 'set' → logprob: -9.76627254486084
    5. 'c' → logprob: -10.64127254486084
    6. '_sets' → logprob: -11.64127254486084
    7. ' canonical' → logprob: -11.76627254486084
    8. 'left' → logprob: -12.26627254486084
    9. '_set' → logprob: -12.26627254486084
    10. '.c' → logprob: -12.76627254486084

Token 768: '.c' (ID: 1081)
  Prédit: '_forms'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_forms' → logprob: -0.0800839439034462
    2. '_c' → logprob: -2.5800838470458984
    3. 'canonical' → logprob: -7.080083847045898
    4. '.c' → logprob: -8.705083847045898
    5. 'c' → logprob: -9.330083847045898
    6. 'forms' → logprob: -10.205083847045898
    7. 'Forms' → logprob: -11.455083847045898
    8. '_formats' → logprob: -11.955083847045898
    9. '```' → logprob: -12.080083847045898
    10. '_form' → logprob: -12.330083847045898

Token 769: 'anonical' (ID: 143898)
  Prédit: 'anonical'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anonical' → logprob: -0.005444228183478117
    2. '_forms' → logprob: -5.630444049835205
    3. 'canonical' → logprob: -7.005444049835205
    4. 'forms' → logprob: -7.630444049835205
    5. 'an' → logprob: -8.255444526672363
    6. '_' → logprob: -9.380444526672363
    7. 'orm' → logprob: -10.380444526672363
    8. 'ont' → logprob: -11.505444526672363
    9. '```' → logprob: -11.630444526672363
    10. 'on' → logprob: -11.755444526672363

Token 770: '_forms' (ID: 176505)
  Prédit: '_forms'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_forms' → logprob: -7.44574936106801e-05
    2. 's' → logprob: -11.00007438659668
    3. 'forms' → logprob: -11.00007438659668
    4. '_sets' → logprob: -11.37507438659668
    5. 'Forms' → logprob: -12.00007438659668
    6. '```' → logprob: -12.50007438659668
    7. '_strings' → logprob: -12.75007438659668
    8. 'set' → logprob: -12.87507438659668
    9. 'str' → logprob: -13.00007438659668
    10. '_codes' → logprob: -13.37507438659668

Token 771: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1667424440383911
    2. '()
' → logprob: -1.9167424440383911
    3. '       ' → logprob: -5.041742324829102
    4. '()
' → logprob: -11.791742324829102
    5. '(),' → logprob: -11.916742324829102
    6. '():
' → logprob: -12.541742324829102
    7. '()\' → logprob: -13.041742324829102
    8. '()

' → logprob: -13.166742324829102
    9. '(),
' → logprob: -13.166742324829102
    10. '()`' → logprob: -13.416742324829102

Token 772: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019479384645819664
    2. 'forms' → logprob: -4.019479274749756
    3. ' forms' → logprob: -6.644479274749756
    4. '_forms' → logprob: -11.644479751586914
    5. '```' → logprob: -12.144479751586914
    6. '(forms' → logprob: -12.894479751586914
    7. '   ' → logprob: -13.144479751586914
    8. '[' → logprob: -13.269479751586914
    9. 'form' → logprob: -13.519479751586914
    10. '=forms' → logprob: -13.519479751586914

Token 773: ' forms' (ID: 11526)
  Prédit: 'forms'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'forms' (adapté à ' forms') → logprob: -0.10039439797401428
    2. '       ' → logprob: -2.3503944873809814
    3. ' forms' → logprob: -8.725394248962402
    4. '#' → logprob: -11.600394248962402
    5. 'form' → logprob: -11.850394248962402
    6. '_forms' → logprob: -12.350394248962402
    7. '(forms' → logprob: -13.975394248962402
    8. '.forms' → logprob: -13.975394248962402
    9. '```' → logprob: -14.100394248962402
    10. '   ' → logprob: -14.225394248962402

Token 774: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008614808320999146
    2. ' =' → logprob: -4.758615016937256
    3. '=set' → logprob: -15.508614540100098
    4. '   ' → logprob: -18.008615493774414
    5. 's' → logprob: -19.258615493774414
    6. '=
' → logprob: -19.883615493774414
    7. '       ' → logprob: -20.133615493774414
    8. '=[]' → logprob: -20.508615493774414
    9. ' ' → logprob: -20.883615493774414
    10. '＝' → logprob: -21.383615493774414

Token 775: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.0007101670489646494
    2. ' set' → logprob: -7.2507100105285645
    3. '   ' → logprob: -16.375709533691406
    4. '       ' → logprob: -17.000709533691406
    5. '{' → logprob: -17.250709533691406
    6. '=set' → logprob: -17.375709533691406
    7. 's' → logprob: -17.875709533691406
    8. '(set' → logprob: -18.000709533691406
    9. '	set' → logprob: -18.500709533691406
    10. ' ' → logprob: -18.625709533691406

Token 776: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04351495951414108
    2. '()
' → logprob: -3.5435149669647217
    3. '       ' → logprob: -4.293514728546143
    4. '()
' → logprob: -12.0435152053833
    5. '   ' → logprob: -12.9185152053833
    6. '()\' → logprob: -13.1685152053833
    7. '(' → logprob: -13.9185152053833
    8. 'for' → logprob: -14.0435152053833
    9. '	' → logprob: -15.0435152053833
    10. '(
' → logprob: -15.4185152053833

Token 777: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.522638169466518e-05
    2. 'for' → logprob: -10.625024795532227
    3. '   ' → logprob: -14.875024795532227
    4. '	' → logprob: -15.250024795532227
    5. ' for' → logprob: -15.250024795532227
    6. '```' → logprob: -17.125024795532227
    7. '	for' → logprob: -17.500024795532227
    8. '           ' → logprob: -17.750024795532227
    9. ' ' → logprob: -18.375024795532227
    10. '               ' → logprob: -18.875024795532227

Token 778: ' pairs' (ID: 24702)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31712329387664795
    2. 'for' → logprob: -1.317123293876648
    3. 'pairs' (adapté à ' pairs') → logprob: -5.5671234130859375
    4. ' for' → logprob: -10.817123413085938
    5. '   ' → logprob: -11.692123413085938
    6. '```' → logprob: -13.317123413085938
    7. '	for' → logprob: -14.067123413085938
    8. '           ' → logprob: -14.442123413085938
    9. ' pairs' → logprob: -14.692123413085938
    10. '	' → logprob: -15.317123413085938

Token 779: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08957072347402573
    2. ' =' → logprob: -2.7145707607269287
    3. '.append' → logprob: -4.21457052230835
    4. '       ' → logprob: -6.58957052230835
    5. ':' → logprob: -7.21457052230835
    6. 'for' → logprob: -7.46457052230835
    7. '.' → logprob: -7.58957052230835
    8. '(' → logprob: -7.96457052230835
    9. '   ' → logprob: -8.214570999145508
    10. ')' → logprob: -8.589570999145508

Token 780: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.25241783261299133
    2. '[]' → logprob: -1.502417802810669
    3. '[(' → logprob: -7.752418041229248
    4. '()
' → logprob: -10.62741756439209
    5. '()' → logprob: -11.25241756439209
    6. '[
' → logprob: -11.87741756439209
    7. ' []
' → logprob: -12.00241756439209
    8. 'product' → logprob: -12.75241756439209
    9. ' []' → logprob: -13.12741756439209
    10. '[])
' → logprob: -14.12741756439209

Token 781: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001474152784794569
    2. 'for' → logprob: -6.626474380493164
    3. ' for' → logprob: -9.126474380493164
    4. '<|end|>' → logprob: -10.751474380493164
    5. '	' → logprob: -12.626474380493164
    6. '<|end|>' → logprob: -12.751474380493164
    7. '   ' → logprob: -12.876474380493164
    8. '```' → logprob: -13.376474380493164
    9. '	for' → logprob: -13.376474380493164
    10. '        
' → logprob: -13.501474380493164

Token 782: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.16122469305992126
    2. '       ' → logprob: -1.9112247228622437
    3. ' for' → logprob: -6.911224842071533
    4. '	for' → logprob: -13.036224365234375
    5. '   ' → logprob: -14.786224365234375
    6. '```' → logprob: -14.911224365234375
    7. '           ' → logprob: -15.661224365234375
    8. '	' → logprob: -15.786224365234375
    9. 'from' → logprob: -16.036224365234375
    10. 'For' → logprob: -16.161224365234375

Token 783: ' lf' (ID: 131463)
  Prédit: 'lf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lf' → logprob: -0.0004306692280806601
    2. ' lf' → logprob: -7.750430583953857
    3. 'rf' → logprob: -18.375431060791016
    4. 'l' → logprob: -19.250431060791016
    5. 'left' → logprob: -19.375431060791016
    6. '   ' → logprob: -19.875431060791016
    7. 'Lf' → logprob: -20.000431060791016
    8. ' ' → logprob: -20.125431060791016
    9. '(l' → logprob: -20.375431060791016
    10. ' ' → logprob: -21.000431060791016

Token 784: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00777769461274147
    2. 'in' → logprob: -4.882777690887451
    3. '           ' → logprob: -9.25777816772461
    4. ',' → logprob: -10.50777816772461
    5. 'left' → logprob: -10.50777816772461
    6. ' left' → logprob: -11.50777816772461
    7. 'import' → logprob: -13.13277816772461
    8. '       ' → logprob: -13.63277816772461
    9. '[left' → logprob: -13.63277816772461
    10. '        ' → logprob: -14.00777816772461

Token 785: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.6346037983894348
    2. 'left' → logprob: -0.7596037983894348
    3. 'right' → logprob: -6.509603977203369
    4. ' right' → logprob: -7.634603977203369
    5. '_left' → logprob: -11.634603500366211
    6. '.left' → logprob: -12.384603500366211
    7. '[left' → logprob: -12.384603500366211
    8. '(left' → logprob: -12.509603500366211
    9. ' lef' → logprob: -12.634603500366211
    10. 'lef' → logprob: -13.259603500366211

Token 786: '_forms' (ID: 176505)
  Prédit: '_forms'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_forms' → logprob: -1.2352385965641588e-05
    2. '_formats' → logprob: -12.250012397766113
    3. '_' → logprob: -12.875012397766113
    4. '```' → logprob: -14.000012397766113
    5. '_form' → logprob: -14.625012397766113
    6. ''_' → logprob: -14.625012397766113
    7. ' _' → logprob: -14.875012397766113
    8. ',_' → logprob: -15.125012397766113
    9. 's' → logprob: -15.125012397766113
    10. '_for' → logprob: -15.125012397766113

Token 787: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6004046201705933
    2. ':' → logprob: -0.9754046201705933
    3. ':
' → logprob: -2.600404739379883
    4. ',' → logprob: -10.100404739379883
    5. '               ' → logprob: -10.475404739379883
    6. '):
' → logprob: -11.475404739379883
    7. '       ' → logprob: -11.975404739379883
    8. 'for' → logprob: -12.225404739379883
    9. '          ' → logprob: -12.225404739379883
    10. '<|end|>' → logprob: -12.475404739379883

Token 788: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000305310997646302
    2. ' for' → logprob: -8.62530517578125
    3. 'for' → logprob: -9.00030517578125
    4. '```' → logprob: -14.50030517578125
    5. '	       ' → logprob: -14.87530517578125
    6. '       ' → logprob: -15.00030517578125
    7. '               ' → logprob: -15.12530517578125
    8. '		' → logprob: -15.37530517578125
    9. '         ' → logprob: -15.75030517578125
    10. '<|end|>' → logprob: -16.25030517578125

Token 789: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4979383945465088
    2. '           ' → logprob: -0.9979383945465088
    3. ' for' → logprob: -3.747938394546509
    4. '               ' → logprob: -12.12293815612793
    5. '	for' → logprob: -13.12293815612793
    6. ' ' → logprob: -13.62293815612793
    7. '       ' → logprob: -13.62293815612793
    8. '   ' → logprob: -13.87293815612793
    9. '		' → logprob: -14.12293815612793
    10. '	       ' → logprob: -15.12293815612793

Token 790: ' rf' (ID: 76208)
  Prédit: ' rf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rf' → logprob: -0.10022122412919998
    2. 'rf' → logprob: -2.3502211570739746
    3. '_rf' → logprob: -11.600221633911133
    4. '.rf' → logprob: -12.225221633911133
    5. 'r' → logprob: -14.725221633911133
    6. '	r' → logprob: -17.725221633911133
    7. 'Rf' → logprob: -17.975221633911133
    8. ' ' → logprob: -18.225221633911133
    9. 'right' → logprob: -18.225221633911133
    10. ' r' → logprob: -18.350221633911133

Token 791: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0014759370824322104
    2. 'in' → logprob: -6.751475811004639
    3. '<|end|>' → logprob: -8.751476287841797
    4. '<|end|>' → logprob: -9.876476287841797
    5. ' right' → logprob: -10.751476287841797
    6. '           ' → logprob: -10.876476287841797
    7. 'right' → logprob: -11.251476287841797
    8. ',' → logprob: -11.751476287841797
    9. ' rf' → logprob: -12.251476287841797
    10. '_rf' → logprob: -12.626476287841797

Token 792: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.006716079078614712
    2. ' right' → logprob: -5.006716251373291
    3. '	right' → logprob: -15.006715774536133
    4. '[right' → logprob: -15.756715774536133
    5. ' ' → logprob: -16.881715774536133
    6. '.right' → logprob: -17.131715774536133
    7. '(right' → logprob: -17.506715774536133
    8. 'left' → logprob: -17.631715774536133
    9. '   ' → logprob: -17.756715774536133
    10. 'Right' → logprob: -17.881715774536133

Token 793: '_forms' (ID: 176505)
  Prédit: '_forms'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_forms' → logprob: -0.0003884894831571728
    2. 'rf' → logprob: -7.8753886222839355
    3. 'forms' → logprob: -12.875388145446777
    4. '_rf' → logprob: -13.000388145446777
    5. 'f' → logprob: -13.625388145446777
    6. '_' → logprob: -14.250388145446777
    7. '```' → logprob: -15.125388145446777
    8. '_formats' → logprob: -15.250388145446777
    9. 'lf' → logprob: -16.125389099121094
    10. 'xor' → logprob: -16.125389099121094

Token 794: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6996038556098938
    2. ':' → logprob: -1.324603796005249
    3. ':
' → logprob: -1.449603796005249
    4. '           ' → logprob: -6.824604034423828
    5. '(p' → logprob: -7.824604034423828
    6. '():
' → logprob: -8.074604034423828
    7. ',' → logprob: -9.074604034423828
    8. '):
' → logprob: -9.324604034423828
    9. '              ' → logprob: -9.449604034423828
    10. ',p' → logprob: -9.574604034423828

Token 795: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002883913984987885
    2. '           ' → logprob: -8.875288009643555
    3. 'pairs' → logprob: -10.375288009643555
    4. '		       ' → logprob: -10.500288009643555
    5. '	       ' → logprob: -10.625288009643555
    6. '	           ' → logprob: -10.625288009643555
    7. '			' → logprob: -11.125288009643555
    8. ' pairs' → logprob: -11.875288009643555
    9. '_pairs' → logprob: -13.000288009643555
    10. '			   ' → logprob: -13.125288009643555

Token 796: ' pairs' (ID: 24702)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pairs' (adapté à ' pairs') → logprob: -0.2954404950141907
    2. '           ' → logprob: -1.920440435409546
    3. '               ' → logprob: -2.295440435409546
    4. ' pairs' → logprob: -4.920440673828125
    5. 'p' → logprob: -7.295440673828125
    6. '(p' → logprob: -8.045440673828125
    7. 'if' → logprob: -9.670440673828125
    8. '	p' → logprob: -10.170440673828125
    9. '   ' → logprob: -10.545440673828125
    10. '                   ' → logprob: -10.670440673828125

Token 797: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0007189844618551433
    2. '.' → logprob: -7.25071907043457
    3. 'append' → logprob: -12.62571907043457
    4. ' .' → logprob: -12.62571907043457
    5. '           ' → logprob: -13.37571907043457
    6. '.app' → logprob: -15.37571907043457
    7. 'Append' → logprob: -15.75071907043457
    8. '.add' → logprob: -15.75071907043457
    9. ').' → logprob: -16.62571907043457
    10. '().' → logprob: -17.00071907043457

Token 798: '((' (ID: 2054)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.4028419554233551
    2. '((' → logprob: -1.1528419256210327
    3. '(' → logprob: -4.152842044830322
    4. ' (' → logprob: -10.027841567993164
    5. '(lhs' → logprob: -11.027841567993164
    6. '(
' → logprob: -11.277841567993164
    7. '(L' → logprob: -11.277841567993164
    8. '(ls' → logprob: -11.277841567993164
    9. '(ll' → logprob: -11.652841567993164
    10. '(lp' → logprob: -12.277841567993164

Token 799: 'lf' (ID: 12632)
  Prédit: 'lf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lf' → logprob: -1.0325924449716695e-05
    2. ' lf' → logprob: -11.50001049041748
    3. 'rf' → logprob: -16.750009536743164
    4. '(' → logprob: -17.125009536743164
    5. '(l' → logprob: -17.500009536743164
    6. 'Lf' → logprob: -18.500009536743164
    7. ')' → logprob: -18.875009536743164
    8. '   ' → logprob: -19.500009536743164
    9. ' ' → logprob: -19.750009536743164
    10. '           ' → logprob: -20.000009536743164

Token 800: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9266199160483666e-05
    2. ' ,' → logprob: -11.125019073486328
    3. ',
' → logprob: -12.625019073486328
    4. '',' → logprob: -14.250019073486328
    5. '               ' → logprob: -16.125019073486328
    6. '),' → logprob: -16.375019073486328
    7. '           ' → logprob: -16.625019073486328
    8. ')' → logprob: -16.875019073486328
    9. ',l' → logprob: -16.875019073486328
    10. '<|end|>' → logprob: -16.875019073486328

Token 801: ' rf' (ID: 76208)
  Prédit: ' rf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rf' → logprob: -0.12692926824092865
    2. 'rf' → logprob: -2.12692928314209
    3. '_rf' → logprob: -14.25192928314209
    4. '.rf' → logprob: -15.12692928314209
    5. ' ' → logprob: -16.251928329467773
    6. 'Rf' → logprob: -16.626928329467773
    7. 'r' → logprob: -16.751928329467773
    8. '                ' → logprob: -16.876928329467773
    9. ' ' → logprob: -17.251928329467773
    10. '               ' → logprob: -17.751928329467773

Token 802: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12855258584022522
    2. '))' → logprob: -2.1285526752471924
    3. '):' → logprob: -7.128552436828613
    4. '):
' → logprob: -8.503552436828613
    5. '               ' → logprob: -8.628552436828613
    6. ')}' → logprob: -8.878552436828613
    7. ')):' → logprob: -9.253552436828613
    8. '       ' → logprob: -10.003552436828613
    9. '))
' → logprob: -10.253552436828613
    10. '           ' → logprob: -10.753552436828613

Token 803: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00075459701474756
    2. ' for' → logprob: -7.8757548332214355
    3. 'for' → logprob: -8.375754356384277
    4. '<|end|>' → logprob: -9.500754356384277
    5. '```' → logprob: -10.750754356384277
    6. '        ' → logprob: -11.375754356384277
    7. '        
' → logprob: -11.750754356384277
    8. '<|end|>' → logprob: -12.000754356384277
    9. '	' → logprob: -12.375754356384277
    10. '[' → logprob: -12.625754356384277

Token 804: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02403484843671322
    2. 'for' (adapté à ' for') → logprob: -4.3990349769592285
    3. ' for' → logprob: -4.5240349769592285
    4. '<|end|>' → logprob: -7.8990349769592285
    5. '#' → logprob: -9.52403450012207
    6. '[' → logprob: -9.89903450012207
    7. '```' → logprob: -10.14903450012207
    8. ' ' → logprob: -10.89903450012207
    9. '.' → logprob: -11.39903450012207
    10. '   ' → logprob: -11.52403450012207

Token 805: ' lf' (ID: 131463)
  Prédit: 'lf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lf' → logprob: -0.020139828324317932
    2. ' lf' → logprob: -4.020139694213867
    3. '(l' → logprob: -6.270139694213867
    4. '(' → logprob: -9.895139694213867
    5. '   ' → logprob: -10.895139694213867
    6. ' (' → logprob: -11.645139694213867
    7. ' ' → logprob: -12.395139694213867
    8. '       ' → logprob: -12.645139694213867
    9. 'lp' → logprob: -13.270139694213867
    10. 'pair' → logprob: -13.645139694213867

Token 806: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.694766489090398e-05
    2. ' ,' → logprob: -9.750066757202148
    3. ' in' → logprob: -12.500066757202148
    4. ',
' → logprob: -12.875066757202148
    5. ',r' → logprob: -14.250066757202148
    6. '           ' → logprob: -14.625066757202148
    7. ',<' → logprob: -14.625066757202148
    8. '<' → logprob: -16.50006675720215
    9. '       ' → logprob: -16.50006675720215
    10. 'in' → logprob: -16.62506675720215

Token 807: ' rf' (ID: 76208)
  Prédit: 'rf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rf' → logprob: -0.6931998133659363
    2. ' rf' → logprob: -0.6931998133659363
    3. '       ' → logprob: -11.06820011138916
    4. '           ' → logprob: -11.31820011138916
    5. '               ' → logprob: -11.44320011138916
    6. '        ' → logprob: -12.19320011138916
    7. '_rf' → logprob: -12.81820011138916
    8. '.rf' → logprob: -13.44320011138916
    9. '            ' → logprob: -13.69320011138916
    10. '          ' → logprob: -14.06820011138916

Token 808: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002807725453749299
    2. 'in' → logprob: -5.8778076171875
    3. ' ' → logprob: -14.6278076171875
    4. ':
' → logprob: -15.1278076171875
    5. 'import' → logprob: -15.2528076171875
    6. '   ' → logprob: -15.5028076171875
    7. ':' → logprob: -15.6278076171875
    8. '	in' → logprob: -15.6278076171875
    9. '       ' → logprob: -15.6278076171875
    10. ',' → logprob: -15.8778076171875

Token 809: ' pairs' (ID: 24702)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.003616943024098873
    2. ' pairs' → logprob: -5.628616809844971
    3. 'sorted' → logprob: -11.378617286682129
    4. '[(' → logprob: -13.753617286682129
    5. '[p' → logprob: -14.003617286682129
    6. '_pairs' → logprob: -14.003617286682129
    7. 'pair' → logprob: -14.253617286682129
    8. '   ' → logprob: -14.628617286682129
    9. '[' → logprob: -14.878617286682129
    10. ' ' → logprob: -15.753617286682129

Token 810: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06953663378953934
    2. '           ' → logprob: -2.8195366859436035
    3. ':
' → logprob: -5.0695366859436035
    4. '<|end|>' → logprob: -7.5695366859436035
    5. ',' → logprob: -8.569536209106445
    6. '<|end|>' → logprob: -8.819536209106445
    7. '       ' → logprob: -9.194536209106445
    8. '               ' → logprob: -9.819536209106445
    9. '          ' → logprob: -10.069536209106445
    10. ' :' → logprob: -10.819536209106445

Token 811: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00017433916218578815
    2. ':' → logprob: -9.375174522399902
    3. ':
' → logprob: -10.375174522399902
    4. '       ' → logprob: -11.500174522399902
    5. '               ' → logprob: -11.625174522399902
    6. '   ' → logprob: -11.750174522399902
    7. ' if' → logprob: -11.875174522399902
    8. 'if' → logprob: -12.125174522399902
    9. '          ' → logprob: -12.500174522399902
    10. '```' → logprob: -12.875174522399902

Token 812: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03132183104753494
    2. '               ' → logprob: -3.9063217639923096
    3. 'if' (adapté à ' if') → logprob: -4.781322002410889
    4. ' if' → logprob: -6.406322002410889
    5. '       ' → logprob: -7.781322002410889
    6. '   ' → logprob: -8.28132152557373
    7. '```' → logprob: -12.78132152557373
    8. '                   ' → logprob: -12.90632152557373
    9. ' ' → logprob: -13.28132152557373
    10. '{
' → logprob: -13.65632152557373

Token 813: ' lf' (ID: 131463)
  Prédit: 'lf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lf' → logprob: -0.2519303858280182
    2. ' lf' → logprob: -1.5019303560256958
    3. '           ' → logprob: -13.876930236816406
    4. ' ' → logprob: -16.501930236816406
    5. 'Lf' → logprob: -16.501930236816406
    6. '               ' → logprob: -16.626930236816406
    7. '		' → logprob: -16.751930236816406
    8. '   ' → logprob: -16.876930236816406
    9. 'rf' → logprob: -17.376930236816406
    10. '    ' → logprob: -18.126930236816406

Token 814: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0336495004594326
    2. '<' → logprob: -3.408649444580078
    3. '[' → logprob: -14.533649444580078
    4. ' ' → logprob: -14.783649444580078
    5. '<int' → logprob: -14.908649444580078
    6. ' <
' → logprob: -15.033649444580078
    7. '<|end|>' → logprob: -15.283649444580078
    8. ' >' → logprob: -15.283649444580078
    9. '<class' → logprob: -15.408649444580078
    10. '<char' → logprob: -15.783649444580078

Token 815: ' rf' (ID: 76208)
  Prédit: ' rf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rf' → logprob: -0.4740908145904541
    2. 'rf' → logprob: -0.9740908145904541
    3. '_rf' → logprob: -11.724090576171875
    4. '.rf' → logprob: -12.099090576171875
    5. '	r' → logprob: -16.599090576171875
    6. ' ' → logprob: -16.974090576171875
    7. 'Rf' → logprob: -17.224090576171875
    8. 'r' → logprob: -17.724090576171875
    9. ' ' → logprob: -17.724090576171875
    10. 'rpc' → logprob: -18.224090576171875

Token 816: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3769385516643524
    2. ':' → logprob: -1.5019385814666748
    3. '               ' → logprob: -2.501938581466675
    4. '):
' → logprob: -5.126938343048096
    5. '           ' → logprob: -5.876938343048096
    6. '):' → logprob: -8.376938819885254
    7. ')' → logprob: -9.376938819885254
    8. ' :
' → logprob: -9.876938819885254
    9. '():
' → logprob: -9.876938819885254
    10. '{
' → logprob: -10.251938819885254

Token 817: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006604764610528946
    2. 'expr' → logprob: -5.1316046714782715
    3. ':
' → logprob: -8.75660514831543
    4. ':' → logprob: -8.88160514831543
    5. ''' → logprob: -9.25660514831543
    6. '(expr' → logprob: -9.50660514831543
    7. '           ' → logprob: -10.00660514831543
    8. '{
' → logprob: -10.25660514831543
    9. '{' → logprob: -11.00660514831543
    10. '              ' → logprob: -11.13160514831543

Token 818: ' expr' (ID: 30206)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' (adapté à ' expr') → logprob: -0.007269271649420261
    2. '               ' → logprob: -5.507269382476807
    3. ' expr' → logprob: -5.757269382476807
    4. '                   ' → logprob: -11.757268905639648
    5. '(expr' → logprob: -11.882268905639648
    6. 'f' → logprob: -12.882268905639648
    7. ' ' → logprob: -13.632268905639648
    8. '   ' → logprob: -13.632268905639648
    9. '.expr' → logprob: -13.757268905639648
    10. 'expression' → logprob: -13.882268905639648

Token 819: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -4.1318875446449965e-05
    2. 'str' → logprob: -10.250041007995605
    3. '_' → logprob: -12.875041007995605
    4. ''_' → logprob: -13.500041007995605
    5. ' =' → logprob: -13.750041007995605
    6. '=' → logprob: -15.750041007995605
    7. 'Str' → logprob: -15.875041007995605
    8. ''' → logprob: -16.125041961669922
    9. '```' → logprob: -16.375041961669922
    10. 's' → logprob: -16.375041961669922

Token 820: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04858953505754471
    2. '=' → logprob: -3.0485894680023193
    3. '           ' → logprob: -13.423589706420898
    4. '               ' → logprob: -15.298589706420898
    5. '=f' → logprob: -15.548589706420898
    6. ')' → logprob: -16.4235897064209
    7. 'f' → logprob: -16.7985897064209
    8. ' ' → logprob: -17.5485897064209
    9. '                   ' → logprob: -17.6735897064209
    10. '   ' → logprob: -18.0485897064209

Token 821: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0019412499386817217
    2. ' f' → logprob: -6.251941204071045
    3. '(f' → logprob: -11.751941680908203
    4. '           ' → logprob: -12.501941680908203
    5. '       ' → logprob: -15.001941680908203
    6. '   ' → logprob: -15.376941680908203
    7. '               ' → logprob: -16.251941680908203
    8. '	f' → logprob: -16.626941680908203
    9. ' ' → logprob: -16.876941680908203
    10. ''' → logprob: -17.001941680908203

Token 822: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1147855669260025
    2. '({' → logprob: -2.239785671234131
    3. ''(' → logprob: -7.614785671234131
    4. '(f' → logprob: -8.114785194396973
    5. 'f' → logprob: -8.489785194396973
    6. '   ' → logprob: -8.864785194396973
    7. '(x' → logprob: -8.864785194396973
    8. '('' → logprob: -8.989785194396973
    9. '(' → logprob: -8.989785194396973
    10. ' ' → logprob: -9.239785194396973

Token 823: '({' (ID: 3972)
  Prédit: '({'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '({' → logprob: -6.217951886355877e-05
    2. ''' → logprob: -9.750061988830566
    3. '(l' → logprob: -13.000061988830566
    4. '"' → logprob: -14.250061988830566
    5. '(x' → logprob: -15.250061988830566
    6. '{' → logprob: -16.125062942504883
    7. '({'' → logprob: -16.375062942504883
    8. '('' → logprob: -16.375062942504883
    9. ' ({' → logprob: -16.375062942504883
    10. '(' → logprob: -16.500062942504883

Token 824: 'lf' (ID: 12632)
  Prédit: 'lf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lf' → logprob: -6.704273118884885e-07
    2. ' lf' → logprob: -14.625000953674316
    3. '{' → logprob: -16.125
    4. 'lef' → logprob: -19.625
    5. 'Lf' → logprob: -19.75
    6. 'l' → logprob: -19.75
    7. 'f' → logprob: -19.875
    8. 'ltf' → logprob: -19.875
    9. 'rf' → logprob: -20.25
    10. 'xf' → logprob: -20.75

Token 825: '}^{' (ID: 107298)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.09638724476099014
    2. '}' → logprob: -2.4713871479034424
    3. ')^' → logprob: -5.8463873863220215
    4. '*' → logprob: -6.2213873863220215
    5. ' ^' → logprob: -6.4713873863220215
    6. '^^' → logprob: -8.471386909484863
    7. '^{' → logprob: -8.721386909484863
    8. '}^{' → logprob: -8.721386909484863
    9. '_^' → logprob: -9.096386909484863
    10. ''^' → logprob: -9.221386909484863

Token 826: 'rf' (ID: 19314)
  Prédit: 'rf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rf' → logprob: -0.006742962170392275
    2. '{' → logprob: -5.00674295425415
    3. ' rf' → logprob: -10.756743431091309
    4. '_rf' → logprob: -12.506743431091309
    5. '.rf' → logprob: -13.006743431091309
    6. 'r' → logprob: -16.506742477416992
    7. '{
' → logprob: -16.631742477416992
    8. '   ' → logprob: -16.756742477416992
    9. ' {' → logprob: -17.006742477416992
    10. ' ' → logprob: -17.131742477416992

Token 827: '})' (ID: 9263)
  Prédit: ')''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')'' → logprob: -0.23878896236419678
    2. '})' → logprob: -1.7387889623641968
    3. ')' → logprob: -3.4887890815734863
    4. '}')' → logprob: -5.488789081573486
    5. ')}' → logprob: -6.488789081573486
    6. ')'
' → logprob: -8.363788604736328
    7. '}'' → logprob: -8.738788604736328
    8. ')')
' → logprob: -10.363788604736328
    9. '))' → logprob: -10.863788604736328
    10. ')`' → logprob: -11.113788604736328

Token 828: ''
' (ID: 2207)
  Prédit: ')''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')'' → logprob: -0.02467392385005951
    2. ')' → logprob: -4.399673938751221
    3. ')'
' → logprob: -4.524673938751221
    4. '')' → logprob: -7.274673938751221
    5. ''' → logprob: -8.399673461914062
    6. '           ' → logprob: -8.524673461914062
    7. '}'' → logprob: -9.274673461914062
    8. '               ' → logprob: -11.774673461914062
    9. '       ' → logprob: -11.899673461914062
    10. '}'
' → logprob: -12.024673461914062

Token 829: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0075501929968595505
    2. ')' → logprob: -5.257550239562988
    3. '               ' → logprob: -6.507550239562988
    4. '<|end|>' → logprob: -7.382550239562988
    5. 'else' → logprob: -9.007550239562988
    6. ' else' → logprob: -10.882550239562988
    7. '')' → logprob: -11.132550239562988
    8. '       ' → logprob: -11.507550239562988
    9. '          ' → logprob: -11.757550239562988
    10. '<|end|>' → logprob: -12.382550239562988

Token 830: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5132856965065002
    2. 'else' (adapté à ' else') → logprob: -1.0132856369018555
    3. ' else' → logprob: -3.3882856369018555
    4. '               ' → logprob: -5.3882856369018555
    5. '       ' → logprob: -9.388285636901855
    6. '          ' → logprob: -11.763285636901855
    7. 'elif' → logprob: -12.263285636901855
    8. '<|end|>' → logprob: -12.513285636901855
    9. ')' → logprob: -12.888285636901855
    10. '```' → logprob: -13.763285636901855

Token 831: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008079031482338905
    2. ':' → logprob: -5.7580790519714355
    3. '{' → logprob: -6.0080790519714355
    4. '{
' → logprob: -6.5080790519714355
    5. ':
' → logprob: -8.133078575134277
    6. '           ' → logprob: -8.508078575134277
    7. '<|end|>' → logprob: -9.008078575134277
    8. ' :' → logprob: -9.508078575134277
    9. ' (' → logprob: -9.883078575134277
    10. ')' → logprob: -10.383078575134277

Token 832: '               ' (ID: 506)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.6607473492622375
    2. '               ' → logprob: -1.6607472896575928
    3. 'f' → logprob: -2.1607472896575928
    4. 'expr' → logprob: -2.2857472896575928
    5. '           ' → logprob: -2.7857472896575928
    6. ' expr' → logprob: -4.410747528076172
    7. ' ' → logprob: -7.535747528076172
    8. '{
' → logprob: -8.035747528076172
    9. '`' → logprob: -8.160747528076172
    10. '{' → logprob: -8.160747528076172

Token 833: ' expr' (ID: 30206)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' (adapté à ' expr') → logprob: -0.007928011007606983
    2. ' expr' → logprob: -5.507927894592285
    3. 'f' → logprob: -5.632927894592285
    4. ' f' → logprob: -8.757927894592285
    5. '(expr' → logprob: -9.757927894592285
    6. 'express' → logprob: -10.132927894592285
    7. '       ' → logprob: -13.257927894592285
    8. '(f' → logprob: -13.257927894592285
    9. 'expression' → logprob: -13.257927894592285
    10. '           ' → logprob: -13.507927894592285

Token 834: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.0003088871017098427
    2. 'str' → logprob: -8.250308990478516
    3. ''_' → logprob: -10.500308990478516
    4. '_' → logprob: -12.125308990478516
    5. 'Str' → logprob: -12.125308990478516
    6. 's' → logprob: -13.125308990478516
    7. '_s' → logprob: -13.500308990478516
    8. '```' → logprob: -14.375308990478516
    9. '           ' → logprob: -14.750308990478516
    10. '='_' → logprob: -14.750308990478516

Token 835: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132660686969757
    2. '=' → logprob: -1.3132660388946533
    3. '=f' → logprob: -13.063265800476074
    4. '           ' → logprob: -14.188265800476074
    5. 'f' → logprob: -14.563265800476074
    6. ')' → logprob: -15.438265800476074
    7. '               ' → logprob: -15.938265800476074
    8. ' ' → logprob: -16.06326675415039
    9. ''=' → logprob: -16.43826675415039
    10. '='' → logprob: -16.43826675415039

Token 836: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0019299437990412116
    2. ' f' → logprob: -6.251929759979248
    3. '(f' → logprob: -13.501930236816406
    4. '(' → logprob: -18.001930236816406
    5. '	f' → logprob: -18.376930236816406
    6. ' ' → logprob: -18.626930236816406
    7. '   ' → logprob: -18.876930236816406
    8. ''' → logprob: -20.751930236816406
    9. '{' → logprob: -20.751930236816406
    10. ''f' → logprob: -21.001930236816406

Token 837: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00025764419115148485
    2. ''{' → logprob: -8.75025749206543
    3. '({' → logprob: -9.62525749206543
    4. 'f' → logprob: -10.87525749206543
    5. '{' → logprob: -11.62525749206543
    6. '`' → logprob: -12.75025749206543
    7. ''(' → logprob: -14.75025749206543
    8. ''f' → logprob: -14.75025749206543
    9. '(f' → logprob: -14.87525749206543
    10. ''^' → logprob: -14.87525749206543

Token 838: '({' (ID: 3972)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.47424501180648804
    2. '({' → logprob: -0.974245011806488
    3. '(r' → logprob: -8.974245071411133
    4. ''{' → logprob: -10.474245071411133
    5. '('{' → logprob: -12.474245071411133
    6. 'rf' → logprob: -12.474245071411133
    7. ''' → logprob: -12.974245071411133
    8. 'f' → logprob: -13.224245071411133
    9. '(f' → logprob: -14.474245071411133
    10. ' {' → logprob: -15.474245071411133

Token 839: 'rf' (ID: 19314)
  Prédit: 'rf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rf' → logprob: -1.0683535037969705e-05
    2. ' rf' → logprob: -11.50001049041748
    3. 'r' → logprob: -15.37501049041748
    4. '.rf' → logprob: -16.250011444091797
    5. '   ' → logprob: -16.375011444091797
    6. '_rf' → logprob: -16.750011444091797
    7. ' ' → logprob: -18.000011444091797
    8. '    ' → logprob: -18.875011444091797
    9. '  ' → logprob: -19.625011444091797
    10. '	r' → logprob: -19.875011444091797

Token 840: '}^{' (ID: 107298)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.014717863872647285
    2. '^{' → logprob: -4.639718055725098
    3. ''^' → logprob: -6.139718055725098
    4. '}' → logprob: -6.389718055725098
    5. '^^' → logprob: -8.014718055725098
    6. '}^{' → logprob: -8.139718055725098
    7. '*' → logprob: -8.639718055725098
    8. '_^' → logprob: -9.764718055725098
    9. '^

' → logprob: -10.139718055725098
    10. ')^' → logprob: -10.389718055725098

Token 841: 'lf' (ID: 12632)
  Prédit: 'lf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lf' → logprob: -9.088346359931165e-07
    2. ' lf' → logprob: -14.000000953674316
    3. 'Lf' → logprob: -22.125
    4. 'ltf' → logprob: -22.375
    5. 'l' → logprob: -22.75
    6. 'lt' → logprob: -22.75
    7. ' ' → logprob: -23.25
    8. '   ' → logprob: -23.25
    9. 'lef' → logprob: -23.375
    10. '{' → logprob: -23.5

Token 842: '})' (ID: 9263)
  Prédit: '})'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '})' → logprob: -6.635164754698053e-05
    2. ')' → logprob: -10.250066757202148
    3. '}')' → logprob: -10.875066757202148
    4. ')}' → logprob: -11.875066757202148
    5. '))' → logprob: -12.875066757202148
    6. ' })' → logprob: -13.500066757202148
    7. '})
' → logprob: -15.250066757202148
    8. ')'' → logprob: -15.250066757202148
    9. ''})' → logprob: -15.625066757202148
    10. '   ' → logprob: -15.625066757202148

Token 843: ''
' (ID: 2207)
  Prédit: ')''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')'' → logprob: -0.21143129467964172
    2. ')' → logprob: -1.8364312648773193
    3. ')'
' → logprob: -4.336431503295898
    4. '')' → logprob: -4.461431503295898
    5. '           ' → logprob: -5.086431503295898
    6. ''' → logprob: -9.461431503295898
    7. ')
' → logprob: -9.586431503295898
    8. '               ' → logprob: -9.961431503295898
    9. '}'' → logprob: -9.961431503295898
    10. '       ' → logprob: -10.086431503295898

Token 844: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.025636008009314537
    2. '               ' → logprob: -4.150636196136475
    3. 'forms' → logprob: -4.900636196136475
    4. ' forms' → logprob: -6.900636196136475
    5. ')' → logprob: -7.025636196136475
    6. '(forms' → logprob: -9.400635719299316
    7. '=forms' → logprob: -10.400635719299316
    8. '       ' → logprob: -10.525635719299316
    9. '          ' → logprob: -11.150635719299316
    10. '.forms' → logprob: -11.275635719299316

Token 845: ' forms' (ID: 11526)
  Prédit: 'forms'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'forms' (adapté à ' forms') → logprob: -0.009799649938941002
    2. ' forms' → logprob: -4.759799480438232
    3. '           ' → logprob: -6.759799480438232
    4. '       ' → logprob: -11.50979995727539
    5. '(forms' → logprob: -11.75979995727539
    6. '               ' → logprob: -12.88479995727539
    7. '.forms' → logprob: -13.38479995727539
    8. '=forms' → logprob: -13.88479995727539
    9. 'form' → logprob: -14.25979995727539
    10. '   ' → logprob: -14.75979995727539

Token 846: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.008619066327810287
    2. '.' → logprob: -4.7586188316345215
    3. ' .' → logprob: -13.38361930847168
    4. '           ' → logprob: -13.50861930847168
    5. 'add' → logprob: -14.25861930847168
    6. ')add' → logprob: -15.13361930847168
    7. '.
' → logprob: -16.38361930847168
    8. '.update' → logprob: -16.50861930847168
    9. ').' → logprob: -16.63361930847168
    10. '       ' → logprob: -16.63361930847168

Token 847: '(expr' (ID: 78746)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.023248156532645226
    2. '(expr' → logprob: -3.7732481956481934
    3. ' expr' → logprob: -12.898247718811035
    4. 'express' → logprob: -15.898247718811035
    5. '.expr' → logprob: -17.14824867248535
    6. 'expression' → logprob: -18.39824867248535
    7. '_expr' → logprob: -20.02324867248535
    8. '(' → logprob: -20.39824867248535
    9. '(expression' → logprob: -22.52324867248535
    10. '(express' → logprob: -22.64824867248535

Token 848: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -8.65707261255011e-06
    2. 'str' → logprob: -12.000008583068848
    3. '_expr' → logprob: -14.125008583068848
    4. 'expr' → logprob: -14.750008583068848
    5. 'Str' → logprob: -14.875008583068848
    6. ''_' → logprob: -15.250008583068848
    7. ')' → logprob: -15.375008583068848
    8. '```' → logprob: -15.500008583068848
    9. '`' → logprob: -16.750009536743164
    10. '_st' → logprob: -17.250009536743164

Token 849: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002052597003057599
    2. '       ' → logprob: -6.3770527839660645
    3. ')
' → logprob: -8.127052307128906
    4. ')return' → logprob: -10.252052307128906
    5. '')' → logprob: -11.377052307128906
    6. '   ' → logprob: -12.627052307128906
    7. '           ' → logprob: -14.002052307128906
    8. '<|end|>' → logprob: -14.002052307128906
    9. '`)' → logprob: -15.002052307128906
    10. ' )' → logprob: -15.127052307128906

Token 850: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032210873905569315
    2. 'return' → logprob: -5.753221035003662
    3. '	' → logprob: -10.87822151184082
    4. '
' → logprob: -11.50322151184082
    5. ' return' → logprob: -12.00322151184082
    6. '   ' → logprob: -12.25322151184082
    7. '	return' → logprob: -13.12822151184082
    8. '```' → logprob: -14.37822151184082
    9. '           ' → logprob: -15.25322151184082
    10. '<|end|>' → logprob: -15.87822151184082

Token 851: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011152402497828007
    2. 'return' (adapté à ' return') → logprob: -4.511152267456055
    3. ' return' → logprob: -9.511152267456055
    4. '   ' → logprob: -12.011152267456055
    5. '<|end|>' → logprob: -12.011152267456055
    6. ')return' → logprob: -12.136152267456055
    7. ')' → logprob: -12.511152267456055
    8. '
' → logprob: -12.761152267456055
    9. '	return' → logprob: -13.511152267456055
    10. ')
' → logprob: -14.261152267456055

Token 852: ' forms' (ID: 11526)
  Prédit: 'forms'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'forms' → logprob: -3.531315314830863e-06
    2. ' forms' → logprob: -12.625003814697266
    3. 'form' → logprob: -16.625003814697266
    4. 'formats' → logprob: -18.250003814697266
    5. 'for' → logprob: -19.250003814697266
    6. 'f' → logprob: -20.125003814697266
    7. '{' → logprob: -20.125003814697266
    8. '(forms' → logprob: -20.375003814697266
    9. '   ' → logprob: -21.375003814697266
    10. 'formes' → logprob: -21.500003814697266

Token 853: '


' (ID: 2499)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0007724629249423742
    2. '<|end|>' → logprob: -7.625772476196289
    3. '#' → logprob: -9.000772476196289
    4. '
' → logprob: -10.250772476196289
    5. ')' → logprob: -10.375772476196289
    6. ' class' → logprob: -10.875772476196289
    7. '*' → logprob: -11.000772476196289
    8. '+' → logprob: -11.250772476196289
    9. '(' → logprob: -11.375772476196289
    10. '^' → logprob: -12.250772476196289

Token 854: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -1.9361264946837764e-07
    2. ' class' → logprob: -16.625
    3. '#' → logprob: -17.625
    4. '<|end|>' → logprob: -18.0
    5. '<class' → logprob: -18.0
    6. 'def' → logprob: -18.5
    7. '"class' → logprob: -18.875
    8. 'and' → logprob: -19.625
    9. '	class' → logprob: -20.125
    10. ''class' → logprob: -20.125

Token 855: ' Parser' (ID: 44901)
  Prédit: 'Or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Or' → logprob: -4.60414821645827e-06
    2. 'N' → logprob: -12.750004768371582
    3. ' Or' → logprob: -14.250004768371582
    4. 'Impl' → logprob: -14.625004768371582
    5. '_or' → logprob: -15.750004768371582
    6. 'I' → logprob: -16.125003814697266
    7. 'O' → logprob: -16.875003814697266
    8. 'Nor' → logprob: -17.125003814697266
    9. 'Im' → logprob: -17.375003814697266
    10. 'OR' → logprob: -17.375003814697266

Token 856: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002189756603911519
    2. ':
' → logprob: -6.252189636230469
    3. '(object' → logprob: -9.127189636230469
    4. '(' → logprob: -9.252189636230469
    5. ':def' → logprob: -11.002189636230469
    6. '():' → logprob: -12.252189636230469
    7. '(Parser' → logprob: -12.377189636230469
    8. '>:' → logprob: -12.377189636230469
    9. '#:' → logprob: -12.627189636230469
    10. '):' → logprob: -12.627189636230469

Token 857: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002707529056351632
    2. ' def' → logprob: -8.37527084350586
    3. '    ' → logprob: -10.87527084350586
    4. '    
' → logprob: -12.50027084350586
    5. ' indentation' → logprob: -12.62527084350586
    6. ' tokens' → logprob: -13.00027084350586
    7. ' token' → logprob: -13.12527084350586
    8. ' ind' → logprob: -13.37527084350586
    9. ' indent' → logprob: -13.62527084350586
    10. '```' → logprob: -13.75027084350586

Token 858: ' """
' (ID: 7037)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7243742346763611
    2. '   ' → logprob: -1.0993742942810059
    3. ' def' → logprob: -1.8493742942810059
    4. '__' → logprob: -4.974374294281006
    5. '_token' → logprob: -5.474374294281006
    6. '_tokens' → logprob: -5.599374294281006
    7. 'token' → logprob: -5.849374294281006
    8. 'tokens' → logprob: -6.099374294281006
    9. 'TOKEN' → logprob: -6.599374294281006
    10. 'TOK' → logprob: -6.724374294281006

Token 859: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3366561532020569
    2. ' def' → logprob: -1.461656093597412
    3. '   ' → logprob: -3.086656093597412
    4. '"""' → logprob: -5.086656093597412
    5. '"""
' → logprob: -6.711656093597412
    6. ' """
' → logprob: -8.21165657043457
    7. ' """' → logprob: -8.33665657043457
    8. 'class' → logprob: -8.71165657043457
    9. '__' → logprob: -9.21165657043457
    10. 'staticmethod' → logprob: -10.83665657043457

Token 860: ' Recursive' (ID: 174533)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.08396649360656738
    2. 'def' → logprob: -2.5839664936065674
    3. 'class' → logprob: -5.458966255187988
    4. '"""' → logprob: -8.458966255187988
    5. '   ' → logprob: -8.583966255187988
    6. ' """
' → logprob: -8.708966255187988
    7. ' """' → logprob: -9.083966255187988
    8. ' class' → logprob: -10.083966255187988
    9. '__' → logprob: -10.333966255187988
    10. '"""
' → logprob: -11.208966255187988

Token 861: ' descent' (ID: 67101)
  Prédit: ' descent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' descent' → logprob: -0.002524768700823188
    2. 'Des' → logprob: -6.1275248527526855
    3. '-des' → logprob: -8.252524375915527
    4. 'des' → logprob: -9.877524375915527
    5. '_des' → logprob: -11.752524375915527
    6. '   ' → logprob: -12.627524375915527
    7. '
' → logprob: -12.752524375915527
    8. ' ' → logprob: -13.127524375915527
    9. '    ' → logprob: -13.252524375915527
    10. 'Desc' → logprob: -13.377524375915527

Token 862: ' parser' (ID: 14216)
  Prédit: ' parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parser' → logprob: -0.06664509326219559
    2. '_parser' → logprob: -3.3166451454162598
    3. 'parser' → logprob: -4.06664514541626
    4. '-parser' → logprob: -5.31664514541626
    5. 'Parser' → logprob: -5.56664514541626
    6. 'class' → logprob: -6.44164514541626
    7. ' Parser' → logprob: -8.691644668579102
    8. '   ' → logprob: -8.941644668579102
    9. ' class' → logprob: -9.191644668579102
    10. ' parsing' → logprob: -9.441644668579102

Token 863: ' using' (ID: 2360)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.510547399520874
    2. '<|end|>' → logprob: -1.510547399520874
    3. ' for' → logprob: -2.385547399520874
    4. ':' → logprob: -2.760547399520874
    5. '<|end|>' → logprob: -5.010547637939453
    6. ':
' → logprob: -5.385547637939453
    7. ' that' → logprob: -5.885547637939453
    8. '  ' → logprob: -6.510547637939453
    9. '(' → logprob: -6.510547637939453
    10. 'for' → logprob: -7.135547637939453

Token 864: ' the' (ID: 290)
  Prédit: 'preced'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'preced' → logprob: -0.8038860559463501
    2. 'tokens' → logprob: -1.17888605594635
    3. 'token' → logprob: -1.80388605594635
    4. 'the' → logprob: -3.8038859367370605
    5. 'operator' → logprob: -3.9288859367370605
    6. 'class' → logprob: -4.5538859367370605
    7. 'a' → logprob: -5.0538859367370605
    8. 'text' → logprob: -6.0538859367370605
    9. 'recursive' → logprob: -6.0538859367370605
    10. 'from' → logprob: -6.0538859367370605

Token 865: ' grammar' (ID: 41735)
  Prédit: 'token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'token' → logprob: -0.672601580619812
    2. 'preced' → logprob: -2.1726016998291016
    3. 'tokens' → logprob: -2.1726016998291016
    4. 'grammar' → logprob: -2.7976016998291016
    5. '   ' → logprob: -3.5476016998291016
    6. 'text' → logprob: -3.5476016998291016
    7. 'input' → logprob: -3.9226016998291016
    8. 'expr' → logprob: -4.172601699829102
    9. 'Token' → logprob: -4.297601699829102
    10. 'class' → logprob: -4.422601699829102

Token 866: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6772839426994324
    2. '   ' → logprob: -0.8022839426994324
    3. ' for' → logprob: -3.677284002304077
    4. ' =' → logprob: -5.677283763885498
    5. ':
' → logprob: -5.802283763885498
    6. '    ' → logprob: -6.052283763885498
    7. ' of' → logprob: -6.302283763885498
    8. '"""
' → logprob: -6.677283763885498
    9. 'for' → logprob: -6.802283763885498
    10. '=' → logprob: -7.302283763885498

Token 867: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.033746205270290375
    2. '^' → logprob: -5.033746242523193
    3. '```' → logprob: -5.033746242523193
    4. '``' → logprob: -5.283746242523193
    5. '    ' → logprob: -5.658746242523193
    6. '"""
' → logprob: -5.658746242523193
    7. '    
' → logprob: -5.908746242523193
    8. 'r' → logprob: -6.908746242523193
    9. 'class' → logprob: -7.033746242523193
    10. ''''
' → logprob: -7.533746242523193

Token 868: ' <' (ID: 464)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37885555624961853
    2. '"""
' → logprob: -2.5038554668426514
    3. ' Expr' → logprob: -2.7538554668426514
    4. '    ' → logprob: -3.3788554668426514
    5. '``' → logprob: -3.6288554668426514
    6. 'Expr' → logprob: -3.8788554668426514
    7. 'expression' → logprob: -4.5038557052612305
    8. 'expr' → logprob: -4.5038557052612305
    9. 'Bool' → logprob: -4.6288557052612305
    10. ' Bool' → logprob: -4.8788557052612305

Token 869: 'E' (ID: 36)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.01940116658806801
    2. 'bool' → logprob: -5.1444010734558105
    3. 'Expr' → logprob: -5.2694010734558105
    4. 'Bool' → logprob: -5.7694010734558105
    5. 'expression' → logprob: -6.0194010734558105
    6. ' expr' → logprob: -6.7694010734558105
    7. 'start' → logprob: -8.019401550292969
    8. 'formula' → logprob: -8.519401550292969
    9. 'boolean' → logprob: -8.894401550292969
    10. ' Expr' → logprob: -9.019401550292969

Token 870: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -6.980854959692806e-05
    2. ' >' → logprob: -10.500069618225098
    3. ' ::=' → logprob: -11.625069618225098
    4. ':' → logprob: -12.375069618225098
    5. '1' → logprob: -12.875069618225098
    6. '``' → logprob: -13.000069618225098
    7. '```' → logprob: -13.000069618225098
    8. '>=' → logprob: -13.125069618225098
    9. '   ' → logprob: -13.125069618225098
    10. '>
' → logprob: -13.250069618225098

Token 871: ' ::=' (ID: 176636)
  Prédit: ' ::='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ::=' → logprob: -0.34574395418167114
    2. ' =' → logprob: -1.4707438945770264
    3. ' ->' → logprob: -3.4707438945770264
    4. '   ' → logprob: -4.4707441329956055
    5. ' ' → logprob: -4.5957441329956055
    6. ' :' → logprob: -5.3457441329956055
    7. ':' → logprob: -6.3457441329956055
    8. '=' → logprob: -6.4707441329956055
    9. '  ' → logprob: -7.2207441329956055
    10. ' :=' → logprob: -7.3457441329956055

Token 872: ' ' (ID: 220)
  Prédit: '<T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<T' → logprob: -0.09617222100496292
    2. '<E' → logprob: -2.596172332763672
    3. ' <' → logprob: -5.471172332763672
    4. '<F' → logprob: -5.471172332763672
    5. 'T' → logprob: -5.596172332763672
    6. '<' → logprob: -6.346172332763672
    7. ' ' → logprob: -7.096172332763672
    8. '<V' → logprob: -7.221172332763672
    9. '<X' → logprob: -7.846172332763672
    10. '   ' → logprob: -8.096172332763672

Token 873: '0' (ID: 15)
  Prédit: '<T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<T' → logprob: -0.054666612297296524
    2. '<E' → logprob: -3.429666519165039
    3. 'T' → logprob: -4.679666519165039
    4. '<F' → logprob: -4.804666519165039
    5. '<' → logprob: -6.429666519165039
    6. '<V' → logprob: -7.304666519165039
    7. ' ' → logprob: -8.429666519165039
    8. '<X' → logprob: -9.054666519165039
    9. ' <' → logprob: -9.179666519165039
    10. '   ' → logprob: -9.429666519165039

Token 874: ' |' (ID: 1022)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.041953008621931076
    2. ' |' → logprob: -3.2919530868530273
    3. '1' → logprob: -5.666953086853027
    4. '
' → logprob: -8.291953086853027
    5. ' ' → logprob: -9.791953086853027
    6. ''' → logprob: -10.791953086853027
    7. '[' → logprob: -10.916953086853027
    8. '|'' → logprob: -10.916953086853027
    9. '|(' → logprob: -11.416953086853027
    10. '{' → logprob: -11.791953086853027

Token 875: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001307142956648022
    2. ' ' → logprob: -9.000130653381348
    3. '   ' → logprob: -12.250130653381348
    4. '(' → logprob: -14.750130653381348
    5. '[' → logprob: -14.750130653381348
    6. '  ' → logprob: -15.000130653381348
    7. '    ' → logprob: -15.500130653381348
    8. '
' → logprob: -16.000131607055664
    9. '0' → logprob: -16.125131607055664
    10. '     ' → logprob: -16.500131607055664

Token 876: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2007883671903983e-05
    2. ' ' → logprob: -10.875021934509277
    3. '   ' → logprob: -13.750021934509277
    4. '(' → logprob: -14.500021934509277
    5. '[' → logprob: -15.000021934509277
    6. '  ' → logprob: -15.125021934509277
    7. '    ' → logprob: -15.812521934509277
    8. '     ' → logprob: -16.187522888183594
    9. '0' → logprob: -16.250022888183594
    10. '|' → logprob: -17.125022888183594

Token 877: ' |' (ID: 1022)
  Prédit: ' |'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' |' → logprob: -0.3911915719509125
    2. '|' → logprob: -1.1411916017532349
    3. '   ' → logprob: -5.766191482543945
    4. ' ' → logprob: -7.266191482543945
    5. '  ' → logprob: -8.266191482543945
    6. '    ' → logprob: -9.766191482543945
    7. '<' → logprob: -10.016191482543945
    8. '\n' → logprob: -10.641191482543945
    9. '
' → logprob: -11.266191482543945
    10. '|\' → logprob: -11.266191482543945

Token 878: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6294972896575928
    2. '(' → logprob: -1.5044972896575928
    3. '(a' → logprob: -1.5044972896575928
    4. '1' → logprob: -4.754497528076172
    5. ' a' → logprob: -5.379497528076172
    6. ' (' → logprob: -5.754497528076172
    7. '(<' → logprob: -6.504497528076172
    8. '[a' → logprob: -6.879497528076172
    9. '('' → logprob: -7.004497528076172
    10. '<a' → logprob: -7.004497528076172

Token 879: ' |' (ID: 1022)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.6332629323005676
    2. ' |' → logprob: -0.7582629323005676
    3. '   ' → logprob: -8.133262634277344
    4. ' ' → logprob: -9.008262634277344
    5. '...' → logprob: -9.633262634277344
    6. '    ' → logprob: -10.008262634277344
    7. '  ' → logprob: -10.133262634277344
    8. ' |
' → logprob: -10.883262634277344
    9. '<|end|>' → logprob: -11.258262634277344
    10. '|\' → logprob: -11.633262634277344

Token 880: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0010660359403118491
    2. ' b' → logprob: -7.376066207885742
    3. '(' → logprob: -8.751066207885742
    4. '   ' → logprob: -9.251066207885742
    5. '-' → logprob: -9.876066207885742
    6. ' ' → logprob: -10.126066207885742
    7. '1' → logprob: -10.501066207885742
    8. 'A' → logprob: -11.001066207885742
    9. '(b' → logprob: -11.251066207885742
    10. '  ' → logprob: -12.376066207885742

Token 881: ' |' (ID: 1022)
  Prédit: ' |'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' |' → logprob: -0.3140729069709778
    2. '|' → logprob: -1.314072847366333
    3. '   ' → logprob: -8.189072608947754
    4. 'c' → logprob: -8.439072608947754
    5. ' ' → logprob: -8.439072608947754
    6. '  ' → logprob: -9.939072608947754
    7. '    ' → logprob: -10.939072608947754
    8. '...' → logprob: -11.564072608947754
    9. ' c' → logprob: -12.439072608947754
    10. '     ' → logprob: -12.814072608947754

Token 882: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00010282796574756503
    2. ' c' → logprob: -9.375102996826172
    3. '1' → logprob: -11.750102996826172
    4. ''' → logprob: -12.875102996826172
    5. '-c' → logprob: -13.500102996826172
    6. 'b' → logprob: -13.875102996826172
    7. '	c' → logprob: -14.125102996826172
    8. '   ' → logprob: -14.375102996826172
    9. ' ' → logprob: -14.375102996826172
    10. 'с' → logprob: -15.000102996826172

Token 883: ' |' (ID: 1022)
  Prédit: ' |'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' |' → logprob: -0.32383960485458374
    2. '|' → logprob: -1.3238396644592285
    3. '   ' → logprob: -4.8238396644592285
    4. ' ' → logprob: -6.6988396644592285
    5. '  ' → logprob: -7.9488396644592285
    6. '    ' → logprob: -7.9488396644592285
    7. ''' → logprob: -9.19883918762207
    8. '       ' → logprob: -9.32383918762207
    9. '      ' → logprob: -9.44883918762207
    10. '     ' → logprob: -9.82383918762207

Token 884: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00023476807109545916
    2. ' d' → logprob: -8.750234603881836
    3. ''d' → logprob: -9.500234603881836
    4. ''' → logprob: -14.000234603881836
    5. '(' → logprob: -15.750234603881836
    6. '"d' → logprob: -16.125234603881836
    7. '   ' → logprob: -16.750234603881836
    8. '_d' → logprob: -16.875234603881836
    9. ')d' → logprob: -16.875234603881836
    10. '	d' → logprob: -17.000234603881836

Token 885: ' |' (ID: 1022)
  Prédit: ' |'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' |' → logprob: -0.3100239038467407
    2. '|' → logprob: -1.6850239038467407
    3. '   ' → logprob: -2.560023784637451
    4. ' ' → logprob: -7.060023784637451
    5. '\n' → logprob: -7.310023784637451
    6. '<' → logprob: -7.935023784637451
    7. ' |
' → logprob: -7.935023784637451
    8. '    ' → logprob: -8.43502426147461
    9. '|
' → logprob: -8.56002426147461
    10. '...' → logprob: -8.68502426147461

Token 886: ' -' (ID: 533)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01025509275496006
    2. ''' → logprob: -4.885254859924316
    3. '-' → logprob: -6.635254859924316
    4. ' (' → logprob: -7.510254859924316
    5. '1' → logprob: -8.260254859924316
    6. '(<' → logprob: -8.885254859924316
    7. '\(' → logprob: -9.135254859924316
    8. '<' → logprob: -9.635254859924316
    9. '<E' → logprob: -9.635254859924316
    10. '!' → logprob: -10.260254859924316

Token 887: '<' (ID: 27)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.029039639979600906
    2. ' (' → logprob: -4.0290398597717285
    3. '<E' → logprob: -5.2790398597717285
    4. '<' → logprob: -5.6540398597717285
    5. '(E' → logprob: -6.6540398597717285
    6. '(<' → logprob: -8.15403938293457
    7. '\(' → logprob: -8.52903938293457
    8. ''' → logprob: -8.77903938293457
    9. ' <' → logprob: -8.90403938293457
    10. '|' → logprob: -9.65403938293457

Token 888: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -6.825890159234405e-05
    2. '<E' → logprob: -9.750068664550781
    3. 'expr' → logprob: -12.625068664550781
    4. ' E' → logprob: -13.375068664550781
    5. '(E' → logprob: -13.500068664550781
    6. '(' → logprob: -13.750068664550781
    7. '\E' → logprob: -14.500068664550781
    8. 'EClass' → logprob: -15.125068664550781
    9. '>E' → logprob: -15.250068664550781
    10. 'e' → logprob: -15.750068664550781

Token 889: '>' (ID: 29)
  Prédit: ' |'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' |' → logprob: -0.6310604214668274
    2. '|' → logprob: -0.8810604214668274
    3. ')' → logprob: -3.1310603618621826
    4. '   ' → logprob: -4.756060600280762
    5. ' ' → logprob: -7.381060600280762
    6. '     ' → logprob: -8.381060600280762
    7. '       ' → logprob: -9.006060600280762
    8. '    ' → logprob: -9.131060600280762
    9. ' )' → logprob: -10.006060600280762
    10. '  ' → logprob: -10.256060600280762

Token 890: ' |' (ID: 1022)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01583222858607769
    2. '|' → logprob: -4.265832424163818
    3. ' |' → logprob: -6.890832424163818
    4. '  ' → logprob: -8.64083194732666
    5. '    ' → logprob: -9.26583194732666
    6. ' ' → logprob: -9.26583194732666
    7. '
' → logprob: -9.39083194732666
    8. '<E' → logprob: -9.51583194732666
    9. '<' → logprob: -9.64083194732666
    10. '       ' → logprob: -10.64083194732666

Token 891: ' (<' (ID: 46465)
  Prédit: '(<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(<' → logprob: -0.1438911408185959
    2. '(' → logprob: -2.0188910961151123
    3. ''' → logprob: -7.143891334533691
    4. ' (' → logprob: -8.393891334533691
    5. ' (<' → logprob: -9.268891334533691
    6. '(E' → logprob: -10.143891334533691
    7. '<' → logprob: -11.143891334533691
    8. '(\' → logprob: -11.518891334533691
    9. '<E' → logprob: -11.768891334533691
    10. '((' → logprob: -12.143891334533691

Token 892: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -1.8670179997570813e-05
    2. 'expr' → logprob: -11.625019073486328
    3. '<E' → logprob: -12.250019073486328
    4. 'X' → logprob: -13.875019073486328
    5. '>E' → logprob: -14.625019073486328
    6. 'op' → logprob: -14.750019073486328
    7. '	E' → logprob: -14.750019073486328
    8. 'expression' → logprob: -14.750019073486328
    9. ' E' → logprob: -15.375019073486328
    10. '_E' → logprob: -15.500019073486328

Token 893: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.762134850025177
    2. 'op' → logprob: -0.887134850025177
    3. '*' → logprob: -3.2621347904205322
    4. '>)' → logprob: -3.7621347904205322
    5. '><' → logprob: -4.512135028839111
    6. 'operator' → logprob: -4.762135028839111
    7. '>*' → logprob: -4.762135028839111
    8. '*>' → logprob: -5.262135028839111
    9. ' ' → logprob: -5.512135028839111
    10. ')' → logprob: -5.512135028839111

Token 894: ' ^' (ID: 7602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2360914945602417
    2. ' ^' → logprob: -1.2360914945602417
    3. '^' → logprob: -1.6110914945602417
    4. ')^' → logprob: -2.4860916137695312
    5. '*' → logprob: -3.2360916137695312
    6. '<' → logprob: -4.236091613769531
    7. '|' → logprob: -4.611091613769531
    8. 'op' → logprob: -4.736091613769531
    9. '^)' → logprob: -4.986091613769531
    10. ')*' → logprob: -4.986091613769531

Token 895: ' <' (ID: 464)
  Prédit: '<E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<E' → logprob: -1.6166903151315637e-05
    2. ' <' → logprob: -11.750016212463379
    3. '<' → logprob: -12.250016212463379
    4. 'E' → logprob: -12.875016212463379
    5. '\E' → logprob: -15.000016212463379
    6. ' ' → logprob: -16.000015258789062
    7. ' ' → logprob: -16.000015258789062
    8. '   ' → logprob: -17.000015258789062
    9. '{' → logprob: -17.250015258789062
    10. '<I' → logprob: -17.500015258789062

Token 896: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.0004421127669047564
    2. '<E' → logprob: -7.750442028045654
    3. '>E' → logprob: -12.375442504882812
    4. ' E' → logprob: -12.750442504882812
    5. '\E' → logprob: -14.250442504882812
    6. '_E' → logprob: -14.250442504882812
    7. ')' → logprob: -14.500442504882812
    8. '<|end|>' → logprob: -14.875442504882812
    9. '	E' → logprob: -15.000442504882812
    10. ',E' → logprob: -15.000442504882812

Token 897: '>)' (ID: 17991)
  Prédit: '>)'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>)' → logprob: -0.11793103814125061
    2. '>' → logprob: -2.6179311275482178
    3. ')' → logprob: -3.3679311275482178
    4. '|' → logprob: -5.867930889129639
    5. ')>' → logprob: -7.117930889129639
    6. ')|' → logprob: -10.242931365966797
    7. ' >' → logprob: -10.867931365966797
    8. '>|' → logprob: -10.867931365966797
    9. '))' → logprob: -10.992931365966797
    10. ' |' → logprob: -11.117931365966797

Token 898: ' |' (ID: 1022)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.546786367893219
    2. ' |' → logprob: -1.1717863082885742
    3. '|' → logprob: -2.296786308288574
    4. ')' → logprob: -5.171786308288574
    5. ' ' → logprob: -5.796786308288574
    6. '    ' → logprob: -6.921786308288574
    7. '  ' → logprob: -7.421786308288574
    8. '       ' → logprob: -8.921786308288574
    9. '     ' → logprob: -9.671786308288574
    10. ' )' → logprob: -10.296786308288574

Token 899: ' (<' (ID: 46465)
  Prédit: '(<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(<' → logprob: -0.0024889763444662094
    2. ' (<' → logprob: -6.00248908996582
    3. '   ' → logprob: -11.87748908996582
    4. '(' → logprob: -12.37748908996582
    5. ' (' → logprob: -14.62748908996582
    6. ''' → logprob: -14.75248908996582
    7. ' ' → logprob: -14.87748908996582
    8. '((' → logprob: -15.00248908996582
    9. '       ' → logprob: -16.00248908996582
    10. '<' → logprob: -16.12748908996582

Token 900: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -7.743758760625497e-05
    2. '<E' → logprob: -9.500077247619629
    3. 'And' → logprob: -14.500077247619629
    4. ' E' → logprob: -15.125077247619629
    5. ''E' → logprob: -15.250077247619629
    6. '[E' → logprob: -15.500077247619629
    7. '\E' → logprob: -15.875077247619629
    8. '(E' → logprob: -16.125078201293945
    9. '_E' → logprob: -16.375078201293945
    10. '{' → logprob: -16.375078201293945

Token 901: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.01392443012446165
    2. '>*' → logprob: -4.388924598693848
    3. '*' → logprob: -6.638924598693848
    4. '*>' → logprob: -10.388924598693848
    5. ')' → logprob: -11.013924598693848
    6. ' ' → logprob: -11.263924598693848
    7. ' *' → logprob: -11.638924598693848
    8. '   ' → logprob: -11.763924598693848
    9. '><' → logprob: -12.013924598693848
    10. ' >' → logprob: -12.388924598693848

Token 902: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.008084828034043312
    2. ' *' → logprob: -4.883084774017334
    3. ' ' → logprob: -8.258085250854492
    4. ''*' → logprob: -9.508085250854492
    5. ')' → logprob: -9.883085250854492
    6. '&' → logprob: -11.133085250854492
    7. '*)' → logprob: -11.258085250854492
    8. ')*' → logprob: -11.633085250854492
    9. ' <' → logprob: -11.758085250854492
    10. '<' → logprob: -11.883085250854492

Token 903: ' <' (ID: 464)
  Prédit: '<E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<E' → logprob: -0.0020031037274748087
    2. ' <' → logprob: -6.252003192901611
    3. '<' → logprob: -9.627002716064453
    4. 'E' → logprob: -12.127002716064453
    5. ' ' → logprob: -13.502002716064453
    6. '  ' → logprob: -14.877002716064453
    7. '\E' → logprob: -15.002002716064453
    8. ' E' → logprob: -15.002002716064453
    9. ' ' → logprob: -15.002002716064453
    10. '   ' → logprob: -15.502002716064453

Token 904: 'E' (ID: 36)
  Prédit: '<E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<E' → logprob: -0.25655397772789
    2. 'E' → logprob: -1.5065540075302124
    3. '<' → logprob: -5.381554126739502
    4. '\E' → logprob: -12.131553649902344
    5. ' E' → logprob: -12.881553649902344
    6. '<|end|>' → logprob: -13.131553649902344
    7. ' <' → logprob: -13.631553649902344
    8. ' ' → logprob: -14.381553649902344
    9. '[E' → logprob: -15.506553649902344
    10. '	E' → logprob: -16.131553649902344

Token 905: '>)
' (ID: 67591)
  Prédit: '>)'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>)' → logprob: -0.0003233070601709187
    2. '>' → logprob: -8.625323295593262
    3. ')' → logprob: -8.875323295593262
    4. ')>' → logprob: -13.875323295593262
    5. '>)
' → logprob: -14.125323295593262
    6. '))' → logprob: -14.250323295593262
    7. '})' → logprob: -14.625323295593262
    8. '</' → logprob: -15.375323295593262
    9. '>):' → logprob: -15.500323295593262
    10. '])' → logprob: -15.750323295593262

Token 906: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004532419610768557
    2. '
' → logprob: -5.754532337188721
    3. '"""
' → logprob: -7.754532337188721
    4. '    
' → logprob: -8.004532814025879
    5. '"""' → logprob: -8.004532814025879
    6. '    ' → logprob: -9.879532814025879
    7. ' ' → logprob: -10.129532814025879
    8. 'class' → logprob: -10.254532814025879
    9. '  ' → logprob: -10.754532814025879
    10. '\n' → logprob: -11.129532814025879

Token 907: ' """

' (ID: 28800)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28595077991485596
    2. '
' → logprob: -1.410950779914856
    3. '    
' → logprob: -6.160950660705566
    4. '"""' → logprob: -6.910950660705566
    5. 'def' → logprob: -7.160950660705566
    6. '    ' → logprob: -8.035950660705566
    7. ')' → logprob: -8.785950660705566
    8. ' 
' → logprob: -9.285950660705566
    9. ' ' → logprob: -9.660950660705566
    10. '...' → logprob: -10.285950660705566

Token 908: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00038944309926591814
    2. ' def' → logprob: -8.625389099121094
    3. '    ' → logprob: -9.125389099121094
    4. '```' → logprob: -9.875389099121094
    5. 'def' → logprob: -10.875389099121094
    6. '
' → logprob: -12.125389099121094
    7. ' _' → logprob: -12.250389099121094
    8. ' indent' → logprob: -13.000389099121094
    9. '    
' → logprob: -13.125389099121094
    10. 'IND' → logprob: -13.125389099121094

Token 909: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.03508168086409569
    2. 'token' → logprob: -4.03508186340332
    3. 'tokens' → logprob: -5.28508186340332
    4. '_token' → logprob: -5.28508186340332
    5. 'TOK' → logprob: -6.16008186340332
    6. 'TOKEN' → logprob: -6.28508186340332
    7. '_tokens' → logprob: -6.28508186340332
    8. ' def' → logprob: -8.16008186340332
    9. 'class' → logprob: -8.91008186340332
    10. '   ' → logprob: -9.41008186340332

Token 910: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.11289385706186295
    2. 'init' → logprob: -2.36289381980896
    3. '_init' → logprob: -4.862894058227539
    4. ' __' → logprob: -5.487894058227539
    5. 'parse' → logprob: -7.612894058227539
    6. 'def' → logprob: -9.362894058227539
    7. '_parse' → logprob: -9.487894058227539
    8. ' init' → logprob: -10.862894058227539
    9. '___' → logprob: -10.987894058227539
    10. '```' → logprob: -11.112894058227539

Token 911: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. 'slots' → logprob: -16.0
    3. ' init' → logprob: -18.125
    4. 'next' → logprob: -20.875
    5. '_init' → logprob: -21.0
    6. '(init' → logprob: -21.125
    7. '`' → logprob: -21.25
    8. 'slot' → logprob: -21.375
    9. 'code' → logprob: -21.5
    10. '.init' → logprob: -22.125

Token 912: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.476190447807312
    2. '__(' → logprob: -0.976190447807312
    3. 'self' → logprob: -6.476190567016602
    4. '(' → logprob: -8.726190567016602
    5. '__(
' → logprob: -8.851190567016602
    6. ' (' → logprob: -9.601190567016602
    7. '__' → logprob: -9.851190567016602
    8. '=self' → logprob: -10.351190567016602
    9. '_(' → logprob: -10.851190567016602
    10. '=' → logprob: -10.851190567016602

Token 913: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.5213274309644476e-05
    2. ' self' → logprob: -11.500015258789062
    3. '   ' → logprob: -12.375015258789062
    4. '(self' → logprob: -14.375015258789062
    5. '       ' → logprob: -16.750015258789062
    6. '
' → logprob: -16.875015258789062
    7. 's' → logprob: -17.125015258789062
    8. '0' → logprob: -17.250015258789062
    9. ')' → logprob: -18.125015258789062
    10. '...' → logprob: -18.250015258789062

Token 914: ',' (ID: 11)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2582322955131531
    2. ',' → logprob: -1.7582323551177979
    3. '(self' → logprob: -3.133232355117798
    4. ' self' → logprob: -5.258232116699219
    5. 'text' → logprob: -5.883232116699219
    6. ' (' → logprob: -6.258232116699219
    7. '(text' → logprob: -8.133232116699219
    8. '   ' → logprob: -8.258232116699219
    9. 'source' → logprob: -8.883232116699219
    10. '(expression' → logprob: -8.883232116699219

Token 915: ' s' (ID: 265)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.013683398254215717
    2. 's' → logprob: -4.763683319091797
    3. ' text' → logprob: -6.263683319091797
    4. 'expr' → logprob: -6.388683319091797
    5. 'input' → logprob: -6.638683319091797
    6. 'expression' → logprob: -9.638683319091797
    7. ' s' → logprob: -10.263683319091797
    8. 'source' → logprob: -10.388683319091797
    9. 'src' → logprob: -11.513683319091797
    10. 'txt' → logprob: -12.263683319091797

Token 916: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.020331647247076035
    2. '):' → logprob: -4.395331859588623
    3. '):
' → logprob: -4.895331859588623
    4. '   ' → logprob: -9.145331382751465
    5. ' :' → logprob: -9.895331382751465
    6. 'elf' → logprob: -10.145331382751465
    7. ':str' → logprob: -10.145331382751465
    8. ',' → logprob: -11.395331382751465
    9. 'self' → logprob: -11.520331382751465
    10. ':
' → logprob: -11.770331382751465

Token 917: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -1.2352385965641588e-05
    2. ' str' → logprob: -11.500012397766113
    3. 's' → logprob: -13.500012397766113
    4. '(str' → logprob: -14.875012397766113
    5. '[str' → logprob: -15.875012397766113
    6. ')' → logprob: -16.125011444091797
    7. ':str' → logprob: -16.625011444091797
    8. '   ' → logprob: -17.125011444091797
    9. '	str' → logprob: -17.750011444091797
    10. '
' → logprob: -18.250011444091797

Token 918: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.013087762519717216
    2. '):' → logprob: -4.388087749481201
    3. '   ' → logprob: -8.26308822631836
    4. ',' → logprob: -8.51308822631836
    5. ')' → logprob: -9.51308822631836
    6. '):
' → logprob: -10.38808822631836
    7. '       ' → logprob: -11.51308822631836
    8. ' ):
' → logprob: -13.26308822631836
    9. ' ' → logprob: -14.26308822631836
    10. ':' → logprob: -14.26308822631836

Token 919: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03807029500603676
    2. 'self' → logprob: -3.2880702018737793
    3. ' self' → logprob: -10.663070678710938
    4. '   ' → logprob: -12.163070678710938
    5. 's' → logprob: -16.288070678710938
    6. '	self' → logprob: -16.663070678710938
    7. ' ' → logprob: -17.163070678710938
    8. '      ' → logprob: -17.163070678710938
    9. '(self' → logprob: -17.663070678710938
    10. '           ' → logprob: -17.913070678710938

Token 920: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -7.922563963802531e-05
    2. '       ' → logprob: -9.500079154968262
    3. ' self' → logprob: -12.500079154968262
    4. 's' → logprob: -14.625079154968262
    5. '   ' → logprob: -16.250080108642578
    6. '
' → logprob: -17.125080108642578
    7. 'class' → logprob: -18.250080108642578
    8. '0' → logprob: -19.250080108642578
    9. '(self' → logprob: -19.750080108642578
    10. 'import' → logprob: -19.750080108642578

Token 921: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.024690093472599983
    2. '.string' → logprob: -4.7746901512146
    3. '.input' → logprob: -5.5246901512146
    4. 's' → logprob: -5.8996901512146
    5. '.' → logprob: -6.3996901512146
    6. '.str' → logprob: -6.3996901512146
    7. '.text' → logprob: -6.5246901512146
    8. 'string' → logprob: -6.8996901512146
    9. '_string' → logprob: -7.0246901512146
    10. '._' → logprob: -8.024689674377441

Token 922: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6094176173210144
    2. '=' → logprob: -0.8594176173210144
    3. '_index' → logprob: -4.73441743850708
    4. 'self' → logprob: -5.23441743850708
    5. '_len' → logprob: -5.48441743850708
    6. '_length' → logprob: -5.85941743850708
    7. '_idx' → logprob: -6.23441743850708
    8. 's' → logprob: -6.60941743850708
    9. '=self' → logprob: -6.98441743850708
    10. 'len' → logprob: -7.10941743850708

Token 923: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0009115827269852161
    2. ' s' → logprob: -7.000911712646484
    3. '_s' → logprob: -17.125911712646484
    4. '   ' → logprob: -17.375911712646484
    5. '	s' → logprob: -19.125911712646484
    6. '(s' → logprob: -19.125911712646484
    7. '{s' → logprob: -19.250911712646484
    8. '    ' → logprob: -19.625911712646484
    9. '  ' → logprob: -19.875911712646484
    10. ' ' → logprob: -20.000911712646484

Token 924: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001969673437997699
    2. 'self' → logprob: -6.251969814300537
    3. '   ' → logprob: -10.876969337463379
    4. ' self' → logprob: -11.126969337463379
    5. ',' → logprob: -12.751969337463379
    6. '
' → logprob: -13.001969337463379
    7. '      ' → logprob: -14.501969337463379
    8. '(self' → logprob: -15.251969337463379
    9. '0' → logprob: -15.376969337463379
    10. '           ' → logprob: -15.376969337463379

Token 925: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47440627217292786
    2. 'self' → logprob: -0.9744062423706055
    3. ' self' → logprob: -8.474406242370605
    4. '   ' → logprob: -9.099406242370605
    5. '
' → logprob: -12.724406242370605
    6. 'def' → logprob: -12.849406242370605
    7. '	self' → logprob: -13.974406242370605
    8. '           ' → logprob: -14.349406242370605
    9. ' ' → logprob: -14.974406242370605
    10. '	' → logprob: -15.224406242370605

Token 926: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0089105861261487
    2. 'pos' → logprob: -4.758910655975342
    3. '       ' → logprob: -8.758910179138184
    4. '   ' → logprob: -9.008910179138184
    5. 'i' → logprob: -11.633910179138184
    6. ' self' → logprob: -12.633910179138184
    7. 'n' → logprob: -13.258910179138184
    8. 'length' → logprob: -13.883910179138184
    9. 'len' → logprob: -14.008910179138184
    10. 'idx' → logprob: -14.758910179138184

Token 927: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.5942746996879578
    2. 'pos' → logprob: -0.8442746996879578
    3. '.i' → logprob: -4.094274520874023
    4. '.index' → logprob: -7.469274520874023
    5. 'index' → logprob: -8.219274520874023
    6. '_pos' → logprob: -8.344274520874023
    7. '.idx' → logprob: -8.469274520874023
    8. '.len' → logprob: -9.844274520874023
    9. ' pos' → logprob: -10.344274520874023
    10. 'idx' → logprob: -10.719274520874023

Token 928: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3507175147533417
    2. ' =' → logprob: -1.225717544555664
    3. ' +=' → logprob: -6.850717544555664
    4. '+=' → logprob: -6.975717544555664
    5. '<|end|>' → logprob: -8.600717544555664
    6. '   ' → logprob: -10.725717544555664
    7. ')' → logprob: -10.975717544555664
    8. '_' → logprob: -11.600717544555664
    9. ' ' → logprob: -11.850717544555664
    10. ':' → logprob: -11.975717544555664

Token 929: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '   ' → logprob: -22.5
    4. '۰' → logprob: -23.125
    5. '=' → logprob: -24.0
    6. '00' → logprob: -24.875
    7. '000' → logprob: -25.25
    8. '-' → logprob: -25.75
    9. '       ' → logprob: -26.125
    10. '  ' → logprob: -26.125

Token 930: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.0
    3. '-' → logprob: -21.75
    4. '۰' → logprob: -22.25
    5. '```' → logprob: -23.125
    6. '   ' → logprob: -23.75
    7. '[' → logprob: -24.0
    8. '=' → logprob: -24.0
    9. '000' → logprob: -24.375
    10. '00' → logprob: -24.375

Token 931: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.047718629240989685
    2. 'def' → logprob: -3.5477185249328613
    3. ' def' → logprob: -4.797718524932861
    4. '    
' → logprob: -5.547718524932861
    5. '<|end|>' → logprob: -5.672718524932861
    6. '	def' → logprob: -7.547718524932861
    7. '       ' → logprob: -7.672718524932861
    8. ' ' → logprob: -7.922718524932861
    9. '  
' → logprob: -9.29771900177002
    10. '
' → logprob: -9.29771900177002

Token 932: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.036598820239305496
    2. 'def' → logprob: -3.5365989208221436
    3. '    
' → logprob: -5.5365986824035645
    4. ' def' → logprob: -6.6615986824035645
    5. '```' → logprob: -7.2865986824035645
    6. '
' → logprob: -7.6615986824035645
    7. '	def' → logprob: -8.911599159240723
    8. '       ' → logprob: -9.411599159240723
    9. '        
' → logprob: -9.536599159240723
    10. '<|end|>' → logprob: -10.411599159240723

Token 933: ' self' (ID: 1051)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.012481987476348877
    2. 'self' (adapté à ' self') → logprob: -4.762482166290283
    3. '   ' → logprob: -5.887482166290283
    4. ' def' → logprob: -6.887482166290283
    5. '       ' → logprob: -10.262481689453125
    6. ' self' → logprob: -11.762481689453125
    7. '
' → logprob: -11.887481689453125
    8. '    
' → logprob: -12.387481689453125
    9. '	def' → logprob: -13.012481689453125
    10. '@property' → logprob: -13.387481689453125

Token 934: '.length' (ID: 3116)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.546589970588684
    2. '_len' → logprob: -1.671589970588684
    3. 'length' → logprob: -2.1715898513793945
    4. '.length' → logprob: -2.1715898513793945
    5. '.current' → logprob: -2.2965898513793945
    6. 'current' → logprob: -2.6715898513793945
    7. 'char' → logprob: -3.1715898513793945
    8. 'def' → logprob: -3.1715898513793945
    9. '.char' → logprob: -3.4215898513793945
    10. '_char' → logprob: -3.7965898513793945

Token 935: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14070120453834534
    2. ' =' → logprob: -2.3907012939453125
    3. '<|end|>' → logprob: -3.6407012939453125
    4. '   ' → logprob: -4.6407012939453125
    5. '<|end|>' → logprob: -7.3907012939453125
    6. ' ' → logprob: -7.7657012939453125
    7. '       ' → logprob: -7.7657012939453125
    8. ' +=' → logprob: -7.8907012939453125
    9. ')' → logprob: -8.140701293945312
    10. '+=' → logprob: -8.390701293945312

Token 936: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.676292231422849e-05
    2. ' len' → logprob: -11.000017166137695
    3. '   ' → logprob: -17.500017166137695
    4. '(len' → logprob: -18.375017166137695
    5. '       ' → logprob: -18.625017166137695
    6. '[len' → logprob: -21.375017166137695
    7. '	len' → logprob: -22.125017166137695
    8. '=len' → logprob: -22.125017166137695
    9. '           ' → logprob: -23.000017166137695
    10. ' ' → logprob: -23.750017166137695

Token 937: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0032181181013584137
    2. '(self' → logprob: -5.753218173980713
    3. 's' → logprob: -10.253217697143555
    4. 'self' → logprob: -12.378217697143555
    5. '(' → logprob: -13.878217697143555
    6. '(
' → logprob: -18.878217697143555
    7. '_s' → logprob: -19.503217697143555
    8. ' (' → logprob: -20.003217697143555
    9. ' s' → logprob: -20.503217697143555
    10. ' self' → logprob: -20.753217697143555

Token 938: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010318557906430215
    2. ')
' → logprob: -10.375102996826172
    3. ' )' → logprob: -10.500102996826172
    4. '   ' → logprob: -10.625102996826172
    5. 'self' → logprob: -11.625102996826172
    6. '       ' → logprob: -12.500102996826172
    7. '<|end|>' → logprob: -12.750102996826172
    8. '')' → logprob: -13.375102996826172
    9. '
' → logprob: -14.625102996826172
    10. '}' → logprob: -14.625102996826172

Token 939: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3157350718975067
    2. 'def' → logprob: -1.315735101699829
    3. '```' → logprob: -6.69073486328125
    4. ' def' → logprob: -7.06573486328125
    5. '    
' → logprob: -8.19073486328125
    6. '	def' → logprob: -10.19073486328125
    7. '@' → logprob: -11.31573486328125
    8. '@property' → logprob: -11.81573486328125
    9. '        
' → logprob: -12.19073486328125
    10. '
' → logprob: -12.31573486328125

Token 940: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.004510223865509033
    2. '   ' → logprob: -5.504510402679443
    3. ' def' → logprob: -7.754510402679443
    4. '	def' → logprob: -13.754509925842285
    5. '```' → logprob: -14.504509925842285
    6. '    
' → logprob: -14.879509925842285
    7. '@' → logprob: -15.129509925842285
    8. '@property' → logprob: -15.254509925842285
    9. 'Next' → logprob: -15.379509925842285
    10. '_next' → logprob: -16.6295108795166

Token 941: ' parse' (ID: 8420)
  Prédit: 'peek'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'peek' → logprob: -0.029251066967844963
    2. 'skip' → logprob: -4.6542510986328125
    3. 'next' → logprob: -5.6542510986328125
    4. 'current' → logprob: -5.6542510986328125
    5. '_current' → logprob: -5.7792510986328125
    6. 'consume' → logprob: -5.9042510986328125
    7. '_next' → logprob: -6.0292510986328125
    8. ' peek' → logprob: -6.6542510986328125
    9. 'eat' → logprob: -6.9042510986328125
    10. 'parse' → logprob: -7.0292510986328125

Token 942: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5178130269050598
    2. '_token' → logprob: -1.767812967300415
    3. '_expr' → logprob: -1.767812967300415
    4. '_expression' → logprob: -3.517812967300415
    5. '_' → logprob: -3.767812967300415
    6. '_next' → logprob: -5.017813205718994
    7. '()' → logprob: -6.892813205718994
    8. '_factor' → logprob: -7.267813205718994
    9. '_char' → logprob: -7.517813205718994
    10. '_(' → logprob: -7.892813205718994

Token 943: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.035933494567871
    2. '_token' → logprob: -1.285933494567871
    3. '):' → logprob: -1.910933494567871
    4. '_expr' → logprob: -2.035933494567871
    5. '(self' → logprob: -2.910933494567871
    6. '_expression' → logprob: -3.785933494567871
    7. 'self' → logprob: -5.910933494567871
    8. '_next' → logprob: -6.410933494567871
    9. '):
' → logprob: -6.535933494567871
    10. 'token' → logprob: -6.535933494567871

Token 944: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0165486391633749
    2. 'self' → logprob: -4.6415486335754395
    3. ':' → logprob: -5.7665486335754395
    4. '   ' → logprob: -7.0165486335754395
    5. '->' → logprob: -7.1415486335754395
    6. 'def' → logprob: -7.3915486335754395
    7. '_token' → logprob: -7.8915486335754395
    8. '       ' → logprob: -8.391549110412598
    9. ':
' → logprob: -8.641549110412598
    10. '_' → logprob: -9.391549110412598

Token 945: ' Bool' (ID: 28693)
  Prédit: 'Bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Bool' → logprob: -6.945094355614856e-05
    2. ' Bool' → logprob: -9.625069618225098
    3. 'bool' → logprob: -12.625069618225098
    4. '_bool' → logprob: -18.00006866455078
    5. ''' → logprob: -18.62506866455078
    6. '(' → logprob: -18.75006866455078
    7. 'None' → logprob: -20.00006866455078
    8. '(B' → logprob: -20.00006866455078
    9. 'Boolean' → logprob: -20.25006866455078
    10. '"' → logprob: -20.25006866455078

Token 946: 'Expr' (ID: 21037)
  Prédit: 'Expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Expr' → logprob: -4.320199877838604e-07
    2. '   ' → logprob: -15.25
    3. ' Expr' → logprob: -17.5
    4. '.Expr' → logprob: -17.875
    5. '_expr' → logprob: -18.125
    6. 'Token' → logprob: -19.25
    7. '       ' → logprob: -19.5
    8. 'E' → logprob: -19.5
    9. '_EXPR' → logprob: -19.5
    10. 'Express' → logprob: -19.5

Token 947: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.726261556148529
    2. ':' → logprob: -1.9762616157531738
    3. '       ' → logprob: -1.9762616157531738
    4. '():' → logprob: -2.476261615753174
    5. '   ' → logprob: -2.726261615753174
    6. '():
' → logprob: -3.101261615753174
    7. '(' → logprob: -4.101261615753174
    8. ':
' → logprob: -4.226261615753174
    9. 'self' → logprob: -4.976261615753174
    10. '(
' → logprob: -5.601261615753174

Token 948: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.466968650580384e-05
    2. 'self' → logprob: -11.000054359436035
    3. 'return' → logprob: -11.875054359436035
    4. ' if' → logprob: -12.125054359436035
    5. 'token' → logprob: -12.125054359436035
    6. '   ' → logprob: -12.250054359436035
    7. ' token' → logprob: -12.875054359436035
    8. 'if' → logprob: -13.250054359436035
    9. ' self' → logprob: -13.250054359436035
    10. ' while' → logprob: -13.375054359436035

Token 949: ' expr' (ID: 30206)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.29135245084762573
    2. '       ' → logprob: -1.5413525104522705
    3. 'expr' (adapté à ' expr') → logprob: -3.5413525104522705
    4. ' return' → logprob: -5.041352272033691
    5. 'result' → logprob: -6.041352272033691
    6. 'self' → logprob: -7.291352272033691
    7. ' expr' → logprob: -9.166352272033691
    8. '   ' → logprob: -10.541352272033691
    9. ' result' → logprob: -11.666352272033691
    10. 'res' → logprob: -12.541352272033691

Token 950: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05001737177371979
    2. '=' → logprob: -3.0500173568725586
    3. ',' → logprob: -6.925017356872559
    4. '()' → logprob: -7.800017356872559
    5. '   ' → logprob: -10.925017356872559
    6. ' ' → logprob: -12.300017356872559
    7. '_' → logprob: -12.925017356872559
    8. '  ' → logprob: -12.925017356872559
    9. '	' → logprob: -13.300017356872559
    10. 's' → logprob: -13.925017356872559

Token 951: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.9027791495318525e-05
    2. ' self' → logprob: -10.875019073486328
    3. '   ' → logprob: -17.750019073486328
    4. '       ' → logprob: -18.000019073486328
    5. '(self' → logprob: -18.000019073486328
    6. '=self' → logprob: -19.000019073486328
    7. ' ' → logprob: -19.625019073486328
    8. '
' → logprob: -19.750019073486328
    9. '  ' → logprob: -21.250019073486328
    10. '[self' → logprob: -21.250019073486328

Token 952: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -0.10413632541894913
    2. '._' → logprob: -2.3541362285614014
    3. '.expr' → logprob: -6.4791364669799805
    4. '_parse' → logprob: -6.6041364669799805
    5. 'parse' → logprob: -7.3541364669799805
    6. '.expression' → logprob: -8.72913646697998
    7. '_expr' → logprob: -8.97913646697998
    8. 'expr' → logprob: -9.85413646697998
    9. '.next' → logprob: -11.22913646697998
    10. '.Parse' → logprob: -11.85413646697998

Token 953: '_expr' (ID: 53654)
  Prédit: '_expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expr' → logprob: -0.05750762298703194
    2. '_E' → logprob: -4.057507514953613
    3. 'expr' → logprob: -4.057507514953613
    4. 'E' → logprob: -4.557507514953613
    5. '_expression' → logprob: -4.807507514953613
    6. 'Expr' → logprob: -6.182507514953613
    7. '_e' → logprob: -7.932507514953613
    8. 'expression' → logprob: -9.432507514953613
    9. 'e' → logprob: -9.557507514953613
    10. 'Expression' → logprob: -9.932507514953613

Token 954: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -9.698698704596609e-05
    2. '()
' → logprob: -9.250097274780273
    3. '())' → logprob: -16.125097274780273
    4. '()`' → logprob: -16.250097274780273
    5. '()

' → logprob: -16.250097274780273
    6. '()\' → logprob: -16.250097274780273
    7. ' ()' → logprob: -16.375097274780273
    8. '()]' → logprob: -16.750097274780273
    9. '();' → logprob: -17.125097274780273
    10. ')' → logprob: -17.500097274780273

Token 955: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.08944896562025e-05
    2. 'return' → logprob: -10.375081062316895
    3. 'self' → logprob: -10.750081062316895
    4. '	' → logprob: -11.625081062316895
    5. '   ' → logprob: -11.750081062316895
    6. '
' → logprob: -12.750081062316895
    7. '        
' → logprob: -13.125081062316895
    8. '```' → logprob: -13.250081062316895
    9. '           ' → logprob: -14.250081062316895
    10. '' → logprob: -14.875081062316895

Token 956: ' if' (ID: 538)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.7573130130767822
    2. 'self' → logprob: -1.0073130130767822
    3. 'if' (adapté à ' if') → logprob: -2.2573130130767822
    4. 'return' → logprob: -3.1323130130767822
    5. '       ' → logprob: -4.632312774658203
    6. 'assert' → logprob: -5.632312774658203
    7. '   ' → logprob: -6.507312774658203
    8. ' while' → logprob: -6.757312774658203
    9. ' if' → logprob: -7.132312774658203
    10. ' self' → logprob: -8.132312774658203

Token 957: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.251936137676239
    2. ' self' → logprob: -1.5019361972808838
    3. ' not' → logprob: -12.126935958862305
    4. '	self' → logprob: -14.126935958862305
    5. 'not' → logprob: -14.126935958862305
    6. ' ' → logprob: -16.376935958862305
    7. '(self' → logprob: -16.751935958862305
    8. ' ' → logprob: -17.501935958862305
    9. '  ' → logprob: -17.751935958862305
    10. '_self' → logprob: -18.126935958862305

Token 958: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.00043829824426211417
    2. 'pos' → logprob: -7.750438213348389
    3. '.' → logprob: -12.125438690185547
    4. ' .' → logprob: -14.625438690185547
    5. ' pos' → logprob: -14.750438690185547
    6. '	pos' → logprob: -15.125438690185547
    7. '[pos' → logprob: -15.125438690185547
    8. '.<' → logprob: -16.000438690185547
    9. 'self' → logprob: -16.125438690185547
    10. '.peek' → logprob: -16.500438690185547

Token 959: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2390136867761612
    2. ' ==' → logprob: -1.989013671875
    3. '!=' → logprob: -3.489013671875
    4. '>=' → logprob: -3.864013671875
    5. ' !=' → logprob: -4.989013671875
    6. '=' → logprob: -4.989013671875
    7. ' >=' → logprob: -5.364013671875
    8. '<|end|>' → logprob: -5.864013671875
    9. '<' → logprob: -6.489013671875
    10. ' <' → logprob: -7.614013671875

Token 960: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0026166820898652077
    2. ' self' → logprob: -6.002616882324219
    3. 'len' → logprob: -8.877616882324219
    4. ' len' → logprob: -13.502616882324219
    5. '
' → logprob: -17.12761688232422
    6. '	self' → logprob: -17.37761688232422
    7. '   ' → logprob: -18.12761688232422
    8. '0' → logprob: -18.25261688232422
    9. '       ' → logprob: -18.75261688232422
    10. ' ' → logprob: -18.87761688232422

Token 961: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -0.0024889763444662094
    2. 'length' → logprob: -6.00248908996582
    3. 'ength' → logprob: -12.37748908996582
    4. '.len' → logprob: -12.50248908996582
    5. 'len' → logprob: -13.00248908996582
    6. ':length' → logprob: -14.00248908996582
    7. ' length' → logprob: -14.37748908996582
    8. 's' → logprob: -15.00248908996582
    9. '.' → logprob: -15.12748908996582
    10. '   ' → logprob: -15.75248908996582

Token 962: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1533370018005371
    2. ':
' → logprob: -2.403337001800537
    3. ' and' → logprob: -3.278337001800537
    4. 'and' → logprob: -4.778337001800537
    5. ')' → logprob: -5.903337001800537
    6. '):' → logprob: -6.528337001800537
    7. '<|end|>' → logprob: -7.653337001800537
    8. ' :' → logprob: -8.528337478637695
    9. '):
' → logprob: -8.653337478637695
    10. ':return' → logprob: -8.778337478637695

Token 963: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03884012624621391
    2. 'raise' → logprob: -3.4138400554656982
    3. ' raise' → logprob: -5.413840293884277
    4. ':
' → logprob: -7.788840293884277
    5. ':' → logprob: -8.913840293884277
    6. '	raise' → logprob: -9.538840293884277
    7. '            ' → logprob: -11.038840293884277
    8. '       ' → logprob: -11.163840293884277
    9. '.raise' → logprob: -11.413840293884277
    10. '               ' → logprob: -11.538840293884277

Token 964: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.47433120012283325
    2. ' raise' → logprob: -0.9743312001228333
    3. '	raise' → logprob: -8.84933090209961
    4. 'self' → logprob: -9.47433090209961
    5. '           ' → logprob: -11.97433090209961
    6. '       ' → logprob: -12.09933090209961
    7. '   ' → logprob: -12.22433090209961
    8. '    ' → logprob: -12.34933090209961
    9. '_raise' → logprob: -12.34933090209961
    10. '.raise' → logprob: -12.72433090209961

Token 965: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.31339284777641296
    2. 'Syntax' → logprob: -1.3133928775787354
    3. 'Runtime' → logprob: -9.313392639160156
    4. ' Value' → logprob: -10.563392639160156
    5. 'Exception' → logprob: -11.563392639160156
    6. ' Syntax' → logprob: -12.188392639160156
    7. '(Value' → logprob: -14.938392639160156
    8. '_Value' → logprob: -16.813392639160156
    9. 'EOF' → logprob: -17.063392639160156
    10. 'syntax' → logprob: -17.938392639160156

Token 966: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.011063262820243835
    2. 'rror' → logprob: -4.511063098907471
    3. 'r' → logprob: -11.136063575744629
    4. 'ror' → logprob: -14.386063575744629
    5. 'error' → logprob: -15.636063575744629
    6. 'SError' → logprob: -16.511062622070312
    7. 'rr' → logprob: -17.011062622070312
    8. 'n' → logprob: -17.261062622070312
    9. 'rs' → logprob: -18.136062622070312
    10. 'rd' → logprob: -18.761062622070312

Token 967: '(f' (ID: 1526)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.06669505685567856
    2. '('' → logprob: -2.816694974899292
    3. '(' → logprob: -5.566695213317871
    4. '(f' → logprob: -7.066695213317871
    5. '(
' → logprob: -10.441695213317871
    6. '("("' → logprob: -12.191695213317871
    7. '()' → logprob: -12.941695213317871
    8. '(",' → logprob: -14.066695213317871
    9. '(self' → logprob: -14.191695213317871
    10. '("'' → logprob: -14.566695213317871

Token 968: '"' (ID: 1)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.7224640846252441
    2. '("' → logprob: -1.0974640846252441
    3. '(' → logprob: -2.347464084625244
    4. '"' → logprob: -2.722464084625244
    5. ''' → logprob: -4.597464084625244
    6. '(f' → logprob: -4.972464084625244
    7. 'Unexpected' → logprob: -6.597464084625244
    8. ':' → logprob: -8.347463607788086
    9. 'f' → logprob: -8.472463607788086
    10. ')' → logprob: -8.847463607788086

Token 969: 'Unexpected' (ID: 59338)
  Prédit: 'Unexpected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Unexpected' → logprob: -0.49149447679519653
    2. '"' → logprob: -1.2414944171905518
    3. 'f' → logprob: -2.4914944171905518
    4. ' f' → logprob: -5.241494655609131
    5. ''' → logprob: -5.491494655609131
    6. ' Unexpected' → logprob: -5.866494655609131
    7. 'unexpected' → logprob: -6.241494655609131
    8. ' unexpected' → logprob: -7.241494655609131
    9. 'Invalid' → logprob: -7.741494655609131
    10. '(f' → logprob: -7.741494655609131

Token 970: ' chars' (ID: 47991)
  Prédit: ' character'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' character' → logprob: -0.13154111802577972
    2. ' token' → logprob: -3.1315410137176514
    3. ' ' → logprob: -3.2565410137176514
    4. ' input' → logprob: -3.5065410137176514
    5. 'character' → logprob: -4.7565412521362305
    6. 'token' → logprob: -7.0065412521362305
    7. ' s' → logprob: -7.6315412521362305
    8. 'input' → logprob: -8.25654125213623
    9. ' char' → logprob: -8.50654125213623
    10. 'char' → logprob: -8.88154125213623

Token 971: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.016448158770799637
    2. 'at' → logprob: -4.141448020935059
    3. ' after' → logprob: -8.141448020935059
    4. 'after' → logprob: -9.641448020935059
    5. ')' → logprob: -11.141448020935059
    6. '[' → logprob: -11.266448020935059
    7. ':' → logprob: -12.516448020935059
    8. ',' → logprob: -12.516448020935059
    9. '_at' → logprob: -12.516448020935059
    10. '	at' → logprob: -12.641448020935059

Token 972: ' pos' (ID: 1253)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.6604939699172974
    2. ' end' → logprob: -0.9104939699172974
    3. 'self' → logprob: -2.785493850708008
    4. 'the' → logprob: -5.160493850708008
    5. ' the' → logprob: -5.285493850708008
    6. ' self' → logprob: -5.285493850708008
    7. 'position' → logprob: -6.285493850708008
    8. ' position' → logprob: -7.535493850708008
    9. 'input' → logprob: -7.535493850708008
    10. 'pos' → logprob: -8.035493850708008

Token 973: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.019710838794708252
    2. '={' → logprob: -4.644711017608643
    3. ' {' → logprob: -4.644711017608643
    4. '=' → logprob: -8.769710540771484
    5. 'ion' → logprob: -9.269710540771484
    6. '{i' → logprob: -11.394710540771484
    7. 'ition' → logprob: -11.519710540771484
    8. '{s' → logprob: -12.519710540771484
    9. ':' → logprob: -12.644710540771484
    10. '=self' → logprob: -12.644710540771484

Token 974: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001525452476926148
    2. ' self' → logprob: -6.501525402069092
    3. '{' → logprob: -10.75152587890625
    4. '(self' → logprob: -14.25152587890625
    5. '}' → logprob: -14.75152587890625
    6. '
' → logprob: -15.12652587890625
    7. '+self' → logprob: -16.25152587890625
    8. '=self' → logprob: -16.37652587890625
    9. '0' → logprob: -16.87652587890625
    10. '[self' → logprob: -16.87652587890625

Token 975: '.pos' (ID: 25321)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.2019030749797821
    2. '.pos' → logprob: -2.2019031047821045
    3. 'pos' → logprob: -2.9519031047821045
    4. '
' → logprob: -5.076902866363525
    5. '+' → logprob: -5.326902866363525
    6. '}")' → logprob: -6.076902866363525
    7. 's' → logprob: -6.576902866363525
    8. '}")
' → logprob: -6.951902866363525
    9. 'self' → logprob: -7.076902866363525
    10. '.position' → logprob: -7.701902866363525

Token 976: '}")
' (ID: 23577)
  Prédit: '}")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}")' → logprob: -0.022050106897950172
    2. '")' → logprob: -4.272049903869629
    3. ':' → logprob: -5.147049903869629
    4. '}")
' → logprob: -6.647049903869629
    5. '}:' → logprob: -7.897049903869629
    6. '}' → logprob: -8.647049903869629
    7. ')")' → logprob: -9.397049903869629
    8. 'self' → logprob: -9.897049903869629
    9. ',' → logprob: -11.397049903869629
    10. '.")' → logprob: -11.522049903869629

Token 977: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00043805985478684306
    2. '   ' → logprob: -9.25043773651123
    3. '.' → logprob: -9.50043773651123
    4. '	' → logprob: -10.00043773651123
    5. ')' → logprob: -10.00043773651123
    6. '<|end|>' → logprob: -10.25043773651123
    7. '        
' → logprob: -10.75043773651123
    8. '      ' → logprob: -11.00043773651123
    9. 'return' → logprob: -11.00043773651123
    10. '           ' → logprob: -11.37543773651123

Token 978: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25288572907447815
    2. 'return' (adapté à ' return') → logprob: -1.6278856992721558
    3. '	' → logprob: -4.002885818481445
    4. ' return' → logprob: -5.377885818481445
    5. '	return' → logprob: -6.377885818481445
    6. 'self' → logprob: -7.127885818481445
    7. '   ' → logprob: -8.377885818481445
    8. '[' → logprob: -8.752885818481445
    9. ':return' → logprob: -8.752885818481445
    10. '.' → logprob: -8.877885818481445

Token 979: ' expr' (ID: 30206)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.0015024791937321424
    2. ' expr' → logprob: -6.501502513885498
    3. '(expr' → logprob: -16.501502990722656
    4. 'express' → logprob: -17.376502990722656
    5. 'expression' → logprob: -19.376502990722656
    6. '.expr' → logprob: -22.751502990722656
    7. '   ' → logprob: -23.751502990722656
    8. '_expr' → logprob: -24.251502990722656
    9. 'obj' → logprob: -24.751502990722656
    10. ' expression' → logprob: -25.001502990722656

Token 980: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15432418882846832
    2. '    
' → logprob: -2.7793242931365967
    3. '
' → logprob: -3.1543242931365967
    4. '<|end|>' → logprob: -4.154324054718018
    5. ' 
' → logprob: -5.154324054718018
    6. '```' → logprob: -5.279324054718018
    7. '  
' → logprob: -5.654324054718018
    8. 'def' → logprob: -6.279324054718018
    9. ' ' → logprob: -6.779324054718018
    10. '   
' → logprob: -7.029324054718018

Token 981: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39165252447128296
    2. '   ' → logprob: -1.1416525840759277
    3. ' def' → logprob: -6.516652584075928
    4. '    
' → logprob: -6.891652584075928
    5. 'def' → logprob: -7.141652584075928
    6. ' 
' → logprob: -7.266652584075928
    7. '```' → logprob: -7.891652584075928
    8. '

' → logprob: -9.39165210723877
    9. '[' → logprob: -10.14165210723877
    10. '  
' → logprob: -10.26665210723877

Token 982: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.1979881227016449
    2. '   ' → logprob: -1.9479881525039673
    3. '
' → logprob: -3.4479880332946777
    4. ' def' → logprob: -5.322988033294678
    5. '    
' → logprob: -8.322988510131836
    6. '	def' → logprob: -10.322988510131836
    7. ' 
' → logprob: -10.697988510131836
    8. '```' → logprob: -11.072988510131836
    9. '_' → logprob: -11.197988510131836
    10. '_def' → logprob: -11.697988510131836

Token 983: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.008293752558529377
    2. ' parse' → logprob: -5.383293628692627
    3. 'skip' → logprob: -6.008293628692627
    4. 'peek' → logprob: -7.383293628692627
    5. 'consume' → logprob: -8.258294105529785
    6. 'eat' → logprob: -8.758294105529785
    7. '_parse' → logprob: -9.383294105529785
    8. ' skip' → logprob: -10.258294105529785
    9. 'advance' → logprob: -11.008294105529785
    10. '_skip' → logprob: -12.008294105529785

Token 984: '_expr' (ID: 53654)
  Prédit: '_expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expr' → logprob: -1.1279553291387856e-05
    2. '_char' → logprob: -11.750011444091797
    3. '_token' → logprob: -13.250011444091797
    4. '_factor' → logprob: -13.750011444091797
    5. '_atom' → logprob: -15.750011444091797
    6. 'expr' → logprob: -16.625011444091797
    7. '_term' → logprob: -16.750011444091797
    8. '_' → logprob: -17.375011444091797
    9. '_primary' → logprob: -17.500011444091797
    10. '_elem' → logprob: -17.500011444091797

Token 985: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.085517113911919e-05
    2. 'self' → logprob: -10.50005054473877
    3. '(' → logprob: -10.87505054473877
    4. '()' → logprob: -13.62505054473877
    5. '(s' → logprob: -14.12505054473877
    6. 's' → logprob: -14.50005054473877
    7. ' (' → logprob: -14.50005054473877
    8. '   ' → logprob: -15.12505054473877
    9. '0' → logprob: -15.87505054473877
    10. ' ' → logprob: -15.87505054473877

Token 986: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0008850149461068213
    2. 'self' → logprob: -7.250885009765625
    3. ')' → logprob: -9.625885009765625
    4. '   ' → logprob: -10.000885009765625
    5. '()' → logprob: -11.625885009765625
    6. '       ' → logprob: -11.750885009765625
    7. '[self' → logprob: -11.750885009765625
    8. '	self' → logprob: -12.125885009765625
    9. 's' → logprob: -12.250885009765625
    10. '(s' → logprob: -12.250885009765625

Token 987: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.021495243534445763
    2. 'self' → logprob: -3.8964953422546387
    3. '(' → logprob: -8.39649486541748
    4. '   ' → logprob: -8.39649486541748
    5. '       ' → logprob: -9.14649486541748
    6. 's' → logprob: -9.14649486541748
    7. '(
' → logprob: -9.39649486541748
    8. '	self' → logprob: -9.52149486541748
    9. ' self' → logprob: -9.77149486541748
    10. ' ' → logprob: -11.14649486541748

Token 988: ' Bool' (ID: 28693)
  Prédit: 'Bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Bool' → logprob: -0.03940414637327194
    2. 'bool' → logprob: -3.9144041538238525
    3. 'self' → logprob: -4.039403915405273
    4. 'None' → logprob: -7.789403915405273
    5. ' Bool' → logprob: -7.914403915405273
    6. '_bool' → logprob: -8.914403915405273
    7. '   ' → logprob: -10.789403915405273
    8. ' self' → logprob: -11.289403915405273
    9. 'object' → logprob: -11.414403915405273
    10. ' bool' → logprob: -11.664403915405273

Token 989: 'Expr' (ID: 21037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5391490459442139
    2. '():' → logprob: -1.9141490459442139
    3. '():
' → logprob: -2.164149045944214
    4. ':' → logprob: -3.164149045944214
    5. '       ' → logprob: -3.164149045944214
    6. '()' → logprob: -3.789149045944214
    7. 'token' → logprob: -4.164149284362793
    8. 'Expr' → logprob: -4.914149284362793
    9. '(self' → logprob: -5.289149284362793
    10. '_token' → logprob: -5.664149284362793

Token 990: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2600456178188324
    2. '(self' → logprob: -1.6350456476211548
    3. '():
' → logprob: -4.635045528411865
    4. '   ' → logprob: -4.885045528411865
    5. ':' → logprob: -4.885045528411865
    6. '():' → logprob: -5.760045528411865
    7. '(' → logprob: -6.260045528411865
    8. ':
' → logprob: -6.510045528411865
    9. 'self' → logprob: -6.760045528411865
    10. '()' → logprob: -7.510045528411865

Token 991: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00013524403038900346
    2. 'token' → logprob: -9.12513542175293
    3. ' token' → logprob: -11.62513542175293
    4. 'if' → logprob: -12.00013542175293
    5. ' if' → logprob: -12.12513542175293
    6. 'self' → logprob: -14.00013542175293
    7. 'c' → logprob: -14.25013542175293
    8. 'tokens' → logprob: -14.25013542175293
    9. '	token' → logprob: -14.37513542175293
    10. '   ' → logprob: -14.50013542175293

Token 992: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2314746081829071
    2. 'c' → logprob: -1.7314746379852295
    3. 'ch' → logprob: -4.10647439956665
    4. 'char' → logprob: -5.23147439956665
    5. 'self' → logprob: -5.73147439956665
    6. 'token' → logprob: -6.10647439956665
    7. '       ' → logprob: -6.48147439956665
    8. '   ' → logprob: -7.98147439956665
    9. 's' → logprob: -8.106474876403809
    10. ' if' → logprob: -9.106474876403809

Token 993: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.25194430351257324
    2. ' self' → logprob: -1.5019443035125732
    3. ' (' → logprob: -12.001944541931152
    4. ' ' → logprob: -12.751944541931152
    5. '(self' → logprob: -13.126944541931152
    6. '   ' → logprob: -13.251944541931152
    7. '  ' → logprob: -13.751944541931152
    8. '	self' → logprob: -13.876944541931152
    9. '    ' → logprob: -15.626944541931152
    10. '     ' → logprob: -16.501943588256836

Token 994: '.pos' (ID: 25321)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.7393977046012878
    2. '>=' → logprob: -1.1143977642059326
    3. 'self' → logprob: -3.1143977642059326
    4. 's' → logprob: -3.2393977642059326
    5. '==' → logprob: -4.1143975257873535
    6. '.' → logprob: -4.2393975257873535
    7. '[' → logprob: -4.6143975257873535
    8. '[self' → logprob: -4.7393975257873535
    9. '.startswith' → logprob: -4.9893975257873535
    10. '.pos' → logprob: -5.1143975257873535

Token 995: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.33305034041404724
    2. ' >=' → logprob: -1.4580503702163696
    3. '==' → logprob: -3.45805025100708
    4. '<len' → logprob: -4.70805025100708
    5. ' ==' → logprob: -5.33305025100708
    6. '[' → logprob: -6.58305025100708
    7. ' <' → logprob: -6.58305025100708
    8. '<' → logprob: -7.20805025100708
    9. '       ' → logprob: -8.208050727844238
    10. '   ' → logprob: -8.208050727844238

Token 996: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0015241486253216863
    2. ' self' → logprob: -6.501523971557617
    3. 'len' → logprob: -10.751523971557617
    4. ' len' → logprob: -15.751523971557617
    5. '       ' → logprob: -15.876523971557617
    6. '(self' → logprob: -16.751523971557617
    7. '1' → logprob: -17.501523971557617
    8. '   ' → logprob: -17.876523971557617
    9. '0' → logprob: -18.001523971557617
    10. '	self' → logprob: -18.126523971557617

Token 997: '.length' (ID: 3116)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.024639496579766273
    2. 'length' → logprob: -4.27463960647583
    3. 'len' → logprob: -4.77463960647583
    4. '.length' → logprob: -6.64963960647583
    5. ' self' → logprob: -7.52463960647583
    6. 's' → logprob: -10.524639129638672
    7. 'ength' → logprob: -10.899639129638672
    8. '       ' → logprob: -11.024639129638672
    9. '   ' → logprob: -11.024639129638672
    10. '.len' → logprob: -11.274639129638672

Token 998: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5902116894721985
    2. '           ' → logprob: -1.4652116298675537
    3. ':
' → logprob: -1.5902116298675537
    4. ' and' → logprob: -5.465211868286133
    5. ':return' → logprob: -5.965211868286133
    6. ' or' → logprob: -6.090211868286133
    7. '       ' → logprob: -6.965211868286133
    8. 'and' → logprob: -7.840211868286133
    9. 'return' → logprob: -8.590211868286133
    10. 'or' → logprob: -10.090211868286133

Token 999: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007216018158942461
    2. ' c' → logprob: -5.882215976715088
    3. 'return' → logprob: -6.507215976715088
    4. 'c' → logprob: -7.257215976715088
    5. 'if' → logprob: -7.632215976715088
    6. 'char' → logprob: -8.382216453552246
    7. '       ' → logprob: -8.507216453552246
    8. ' if' → logprob: -8.882216453552246
    9. ' return' → logprob: -9.007216453552246
    10. ':' → logprob: -9.132216453552246

Token 1000: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.029524940997362137
    2. '           ' → logprob: -4.279524803161621
    3. ' raise' → logprob: -4.279524803161621
    4. 'return' → logprob: -6.654524803161621
    5. '	raise' → logprob: -9.654524803161621
    6. 'self' → logprob: -11.529524803161621
    7. 'Raise' → logprob: -11.779524803161621
    8. '       ' → logprob: -12.154524803161621
    9. 'None' → logprob: -12.154524803161621
    10. '_raise' → logprob: -13.029524803161621

Token 1001: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.0034888815134763718
    2. 'EOF' → logprob: -5.753489017486572
    3. ' Value' → logprob: -8.128488540649414
    4. ' EOF' → logprob: -12.003488540649414
    5. 'Index' → logprob: -12.628488540649414
    6. ' ' → logprob: -13.003488540649414
    7. 'Syntax' → logprob: -13.628488540649414
    8. 'Runtime' → logprob: -13.878488540649414
    9. '(Value' → logprob: -14.628488540649414
    10. 'value' → logprob: -14.878488540649414

Token 1002: 'Error' (ID: 2255)
  Prédit: 'rror'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rror' → logprob: -0.05022044852375984
    2. 'Error' → logprob: -3.050220489501953
    3. 'of' → logprob: -6.425220489501953
    4. 'OF' → logprob: -12.175220489501953
    5. 'nd' → logprob: -13.300220489501953
    6. 'error' → logprob: -13.425220489501953
    7. 'SError' → logprob: -13.925220489501953
    8. 'ror' → logprob: -14.175220489501953
    9. 'r' → logprob: -14.300220489501953
    10. 'EOF' → logprob: -14.925220489501953

Token 1003: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.017192373052239418
    2. '('' → logprob: -4.517192363739014
    3. '(' → logprob: -6.017192363739014
    4. '()' → logprob: -6.392192363739014
    5. '(f' → logprob: -6.392192363739014
    6. '("("' → logprob: -8.517192840576172
    7. '(
' → logprob: -9.642192840576172
    8. '()
' → logprob: -10.267192840576172
    9. '("'' → logprob: -11.267192840576172
    10. '("\' → logprob: -11.767192840576172

Token 1004: 'Unexpected' (ID: 59338)
  Prédit: 'Unexpected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Unexpected' → logprob: -0.041521500796079636
    2. 'self' → logprob: -3.2915215492248535
    3. 'EOF' → logprob: -6.7915215492248535
    4. 'unexpected' → logprob: -6.9165215492248535
    5. 'Expected' → logprob: -7.5415215492248535
    6. '"' → logprob: -8.291521072387695
    7. ''' → logprob: -8.666521072387695
    8. ' Unexpected' → logprob: -9.541521072387695
    9. ' unexpected' → logprob: -9.666521072387695
    10. 'expected' → logprob: -9.791521072387695

Token 1005: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.07850028574466705
    2. ' end' → logprob: -3.078500270843506
    3. 'EOF' → logprob: -3.703500270843506
    4. 'self' → logprob: -5.703500270843506
    5. 'character' → logprob: -7.203500270843506
    6. 'char' → logprob: -7.953500270843506
    7. ' EOF' → logprob: -8.953500747680664
    8. 'token' → logprob: -9.203500747680664
    9. ' character' → logprob: -10.078500747680664
    10. 'e' → logprob: -10.328500747680664

Token 1006: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.11286627501249313
    2. 'of' → logprob: -2.237866163253784
    3. '_of' → logprob: -11.112866401672363
    4. 'Of' → logprob: -11.862866401672363
    5. '       ' → logprob: -12.237866401672363
    6. '   ' → logprob: -12.987866401672363
    7. ' ' → logprob: -13.112866401672363
    8. ')' → logprob: -13.237866401672363
    9. '           ' → logprob: -13.487866401672363
    10. '1' → logprob: -13.737866401672363

Token 1007: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.003950286656618118
    2. 's' → logprob: -6.003950119018555
    3. 'expression' → logprob: -6.753950119018555
    4. 'self' → logprob: -8.753950119018555
    5. ' input' → logprob: -9.503950119018555
    6. 'string' → logprob: -9.628950119018555
    7. 'data' → logprob: -12.878950119018555
    8. '_input' → logprob: -13.253950119018555
    9. 'text' → logprob: -13.628950119018555
    10. 'expr' → logprob: -13.878950119018555

Token 1008: '")

' (ID: 10822)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45043808221817017
    2. '")' → logprob: -1.7004380226135254
    3. ')' → logprob: -2.0754380226135254
    4. '")
' → logprob: -3.4504380226135254
    5. ')
' → logprob: -4.075438022613525
    6. '')' → logprob: -5.325438022613525
    7. '')
' → logprob: -7.575438022613525
    8. ' )' → logprob: -9.325438499450684
    9. ')")
' → logprob: -9.950438499450684
    10. ' )
' → logprob: -10.075438499450684

Token 1009: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15207037329673767
    2. 'ch' → logprob: -2.6520702838897705
    3. 'c' → logprob: -3.1520702838897705
    4. 'token' → logprob: -3.6520702838897705
    5. 'char' → logprob: -7.15207052230835
    6. '   ' → logprob: -7.27707052230835
    7. 'tok' → logprob: -8.277070045471191
    8. 'current' → logprob: -10.277070045471191
    9. ' c' → logprob: -10.652070045471191
    10. '	ch' → logprob: -10.902070045471191

Token 1010: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.577812910079956
    2. 'ch' → logprob: -0.827812910079956
    3. 'char' → logprob: -6.577813148498535
    4. 'token' → logprob: -7.827813148498535
    5. 'tok' → logprob: -9.702813148498535
    6. '       ' → logprob: -11.827813148498535
    7. 'curr' → logprob: -12.577813148498535
    8. '   ' → logprob: -12.952813148498535
    9. 'cur' → logprob: -13.077813148498535
    10. 'if' → logprob: -13.077813148498535

Token 1011: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014150768518448
    2. ' =' → logprob: -1.7014150619506836
    3. '=self' → logprob: -14.826415061950684
    4. '   ' → logprob: -15.201415061950684
    5. ' ' → logprob: -15.451415061950684
    6. 'urrent' → logprob: -15.576415061950684
    7. '=c' → logprob: -15.576415061950684
    8. '=s' → logprob: -15.826415061950684
    9. 's' → logprob: -16.076416015625
    10. 'c' → logprob: -16.326416015625

Token 1012: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.107425062713446e-06
    2. ' self' → logprob: -11.875006675720215
    3. '       ' → logprob: -17.12500762939453
    4. '(self' → logprob: -17.75000762939453
    5. '[self' → logprob: -18.75000762939453
    6. '   ' → logprob: -18.75000762939453
    7. '=self' → logprob: -18.75000762939453
    8. 's' → logprob: -19.37500762939453
    9. '           ' → logprob: -19.37500762939453
    10. '
' → logprob: -19.50000762939453

Token 1013: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.0011714138090610504
    2. 's' → logprob: -6.876171588897705
    3. '.' → logprob: -9.876171112060547
    4. 'self' → logprob: -10.376171112060547
    5. ' s' → logprob: -10.501171112060547
    6. ' .' → logprob: -10.751171112060547
    7. '   ' → logprob: -12.626171112060547
    8. '       ' → logprob: -14.001171112060547
    9. '.self' → logprob: -14.126171112060547
    10. ' ' → logprob: -14.251171112060547

Token 1014: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.0031897129956632853
    2. 'self' → logprob: -5.753189563751221
    3. ' self' → logprob: -12.628190040588379
    4. 'if' → logprob: -12.753190040588379
    5. '[' → logprob: -12.878190040588379
    6. '
' → logprob: -14.003190040588379
    7. 'def' → logprob: -14.003190040588379
    8. '       ' → logprob: -15.003190040588379
    9. '   ' → logprob: -15.128190040588379
    10. '[
' → logprob: -15.628190040588379

Token 1015: '.pos' (ID: 25321)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.014164221473038197
    2. '.pos' → logprob: -4.264164447784424
    3. '	pos' → logprob: -15.514163970947266
    4. '_pos' → logprob: -15.639163970947266
    5. ' pos' → logprob: -15.889163970947266
    6. '.' → logprob: -16.014163970947266
    7. 'p' → logprob: -17.139163970947266
    8. 'Pos' → logprob: -17.639163970947266
    9. 'posa' → logprob: -17.889163970947266
    10. '[pos' → logprob: -18.389163970947266

Token 1016: ']

' (ID: 3144)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32411086559295654
    2. '
' → logprob: -1.3241108655929565
    3. 'if' → logprob: -5.574110984802246
    4. '        
' → logprob: -6.324110984802246
    5. ')
' → logprob: -6.699110984802246
    6. ')' → logprob: -7.199110984802246
    7. 'self' → logprob: -7.324110984802246
    8. '        ' → logprob: -7.324110984802246
    9. ' if' → logprob: -7.949110984802246
    10. ' ' → logprob: -8.574110984802246

Token 1017: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011264061322435737
    2. 'if' → logprob: -7.001126289367676
    3. ' if' → logprob: -8.501126289367676
    4. '   ' → logprob: -11.751126289367676
    5. '        
' → logprob: -13.626126289367676
    6. '           ' → logprob: -14.501126289367676
    7. '      ' → logprob: -14.876126289367676
    8. ' ' → logprob: -15.126126289367676
    9. '```' → logprob: -15.251126289367676
    10. '    ' → logprob: -15.251126289367676

Token 1018: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -4.251091377227567e-05
    2. '       ' → logprob: -10.250042915344238
    3. ' if' → logprob: -12.250042915344238
    4. 'self' → logprob: -13.000042915344238
    5. 'If' → logprob: -17.375041961669922
    6. '	if' → logprob: -18.750041961669922
    7. '   ' → logprob: -19.750041961669922
    8. '        
' → logprob: -20.500041961669922
    9. '
' → logprob: -21.250041961669922
    10. '#' (adapté à ' #') → logprob: -21.875041961669922

Token 1019: ' Terminal' (ID: 52701)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -6.153795766294934e-06
    2. 'self' → logprob: -12.250005722045898
    3. '       ' → logprob: -13.750005722045898
    4. ' if' → logprob: -15.500005722045898
    5. '#' → logprob: -16.6250057220459
    6. '   ' → logprob: -17.6250057220459
    7. 'If' → logprob: -18.0000057220459
    8. '        
' → logprob: -19.5000057220459
    9. '           ' → logprob: -20.6250057220459
    10. '	if' → logprob: -21.0000057220459

Token 1020: ' ' (ID: 220)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.40784719586372375
    2. ' if' → logprob: -1.4078471660614014
    3. '       ' → logprob: -2.4078471660614014
    4. '        ' → logprob: -8.65784740447998
    5. '        
' → logprob: -10.90784740447998
    6. 'If' → logprob: -11.53284740447998
    7. '	if' → logprob: -11.65784740447998
    8. ' ' → logprob: -11.90784740447998
    9. '   ' → logprob: -12.03284740447998
    10. '           ' → logprob: -12.03284740447998

Token 1021: '0' (ID: 15)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0008756125462241471
    2. '       ' → logprob: -7.500875473022461
    3. ' if' → logprob: -8.125875473022461
    4. '
' → logprob: -11.375875473022461
    5. '           ' → logprob: -11.875875473022461
    6. '        
' → logprob: -13.250875473022461
    7. '   ' → logprob: -14.000875473022461
    8. 'i' → logprob: -14.000875473022461
    9. 'elif' → logprob: -14.125875473022461
    10. ':' → logprob: -14.750875473022461

Token 1022: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.21624672412872314
    2. '<|end|>' → logprob: -2.5912466049194336
    3. '       ' → logprob: -4.216246604919434
    4. 'if' → logprob: -4.216246604919434
    5. ',' → logprob: -4.341246604919434
    6. ' ' → logprob: -4.466246604919434
    7. '<|end|>' → logprob: -4.466246604919434
    8. ':' → logprob: -4.716246604919434
    9. ' if' → logprob: -4.966246604919434
    10. 'elif' → logprob: -5.216246604919434

Token 1023: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006283254479058087
    2. ' ' → logprob: -7.375628471374512
    3. ''' → logprob: -14.125628471374512
    4. '   ' → logprob: -14.625628471374512
    5. '`' → logprob: -15.750628471374512
    6. 'c' → logprob: -16.125627517700195
    7. '  ' → logprob: -16.125627517700195
    8. '
' → logprob: -17.000627517700195
    9. '       ' → logprob: -17.125627517700195
    10. ' '' → logprob: -17.125627517700195

Token 1024: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014168102643452585
    2. ' ' → logprob: -8.875142097473145
    3. ''' → logprob: -13.375142097473145
    4. '`' → logprob: -15.875142097473145
    5. '   ' → logprob: -16.125141143798828
    6. '"' → logprob: -17.500141143798828
    7. '  ' → logprob: -17.500141143798828
    8. ' '' → logprob: -18.000141143798828
    9. '       ' → logprob: -18.750141143798828
    10. '
' → logprob: -18.750141143798828

Token 1025: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10086223483085632
    2. '       ' → logprob: -2.6008622646331787
    3. ' if' → logprob: -3.8508622646331787
    4. 'self' → logprob: -8.350862503051758
    5. '
' → logprob: -8.725862503051758
    6. ',' → logprob: -10.225862503051758
    7. '   ' → logprob: -11.850862503051758
    8. '```' → logprob: -12.100862503051758
    9. 'If' → logprob: -12.475862503051758
    10. '           ' → logprob: -12.600862503051758

Token 1026: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15213847160339355
    2. ' if' → logprob: -2.6521384716033936
    3. 'if' → logprob: -2.6521384716033936
    4. '   ' → logprob: -10.402138710021973
    5. '           ' → logprob: -10.652138710021973
    6. ':' → logprob: -11.527138710021973
    7. '        
' → logprob: -11.527138710021973
    8. ',' → logprob: -11.777138710021973
    9. ' ' → logprob: -12.027138710021973
    10. ' or' → logprob: -12.152138710021973

Token 1027: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0002888682356569916
    2. '       ' → logprob: -8.250288963317871
    3. ' if' → logprob: -10.500288963317871
    4. '   ' → logprob: -17.750288009643555
    5. '	if' → logprob: -18.125288009643555
    6. 'If' → logprob: -18.375288009643555
    7. '```' → logprob: -19.500288009643555
    8. 'self' → logprob: -19.625288009643555
    9. '           ' → logprob: -20.500288009643555
    10. 'i' → logprob: -21.625288009643555

Token 1028: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0024769625160843134
    2. ' c' → logprob: -6.002477169036865
    3. '   ' → logprob: -14.502476692199707
    4. ' ' → logprob: -14.627476692199707
    5. '	c' → logprob: -16.127477645874023
    6. '  ' → logprob: -16.877477645874023
    7. '       ' → logprob: -17.377477645874023
    8. '    ' → logprob: -17.502477645874023
    9. '     ' → logprob: -17.502477645874023
    10. '(c' → logprob: -17.877477645874023

Token 1029: ' ==' (ID: 951)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.29250964522361755
    2. 'in' → logprob: -1.41750967502594
    3. '==' → logprob: -5.16750955581665
    4. ' ==' → logprob: -5.29250955581665
    5. '=='' → logprob: -7.91750955581665
    6. '0' → logprob: -9.292510032653809
    7. '       ' → logprob: -9.667510032653809
    8. '   ' → logprob: -11.667510032653809
    9. ' ' → logprob: -11.667510032653809
    10. ' =='' → logprob: -12.042510032653809

Token 1030: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.7954958821064793e-05
    2. '0' → logprob: -11.250018119812012
    3. '"' → logprob: -12.750018119812012
    4. ' '' → logprob: -13.125018119812012
    5. '('' → logprob: -17.375017166137695
    6. '`' → logprob: -17.625017166137695
    7. '1' → logprob: -18.000017166137695
    8. '‘' → logprob: -19.000017166137695
    9. ''O' → logprob: -19.000017166137695
    10. ' ' → logprob: -20.125017166137695

Token 1031: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.64708495605737e-05
    2. ''' → logprob: -9.625066757202148
    3. '('' → logprob: -16.25006675720215
    4. ' '' → logprob: -16.50006675720215
    5. '1' → logprob: -17.37506675720215
    6. ' ' → logprob: -17.50006675720215
    7. '"' → logprob: -18.87506675720215
    8. '`' → logprob: -19.75006675720215
    9. '{'' → logprob: -19.87506675720215
    10. ''s' → logprob: -20.12506675720215

Token 1032: '':
' (ID: 7669)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.0300545692443848
    2. '':' → logprob: -1.0300545692443848
    3. '':
' → logprob: -1.2800545692443848
    4. ''):
' → logprob: -5.030054569244385
    5. ''or' → logprob: -7.780054569244385
    6. ' or' → logprob: -8.655054092407227
    7. ':' → logprob: -8.655054092407227
    8. ' '' → logprob: -8.780054092407227
    9. ''):' → logprob: -8.780054092407227
    10. ':
' → logprob: -8.905054092407227

Token 1033: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006383348954841495
    2. '       ' → logprob: -8.125638008117676
    3. 'self' → logprob: -9.000638008117676
    4. ':' → logprob: -9.625638008117676
    5. '		' → logprob: -10.125638008117676
    6. '               ' → logprob: -10.250638008117676
    7. '	       ' → logprob: -10.375638008117676
    8. '   ' → logprob: -12.000638008117676
    9. ':
' → logprob: -12.125638008117676
    10. ' self' → logprob: -12.250638008117676

Token 1034: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -7.100059156073257e-05
    2. '           ' → logprob: -9.750070571899414
    3. '       ' → logprob: -11.875070571899414
    4. ' self' → logprob: -12.125070571899414
    5. '   ' → logprob: -16.250070571899414
    6. '               ' → logprob: -16.750070571899414
    7. '	self' → logprob: -17.625070571899414
    8. '```' → logprob: -18.000070571899414
    9. '
' → logprob: -18.125070571899414
    10. 'return' → logprob: -18.250070571899414

Token 1035: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -1.306760805164231e-05
    2. 'pos' → logprob: -11.25001335144043
    3. '	pos' → logprob: -17.87501335144043
    4. 'self' → logprob: -18.50001335144043
    5. '.' → logprob: -19.25001335144043
    6. '.self' → logprob: -19.87501335144043
    7. '.position' → logprob: -20.12501335144043
    8. ' pos' → logprob: -20.37501335144043
    9. '.Pos' → logprob: -20.62501335144043
    10. '.s' → logprob: -20.87501335144043

Token 1036: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0005669722449965775
    2. ' +=' → logprob: -7.5005669593811035
    3. '           ' → logprob: -11.250567436218262
    4. '+
' → logprob: -15.000567436218262
    5. '+' → logprob: -15.125567436218262
    6. ']+=' → logprob: -15.875567436218262
    7. '            ' → logprob: -16.875566482543945
    8. 'self' → logprob: -17.250566482543945
    9. '
' → logprob: -17.375566482543945
    10. '=' → logprob: -17.625566482543945

Token 1037: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '   ' → logprob: -19.875
    4. '2' → logprob: -20.75
    5. '```' → logprob: -22.125
    6. '۱' → logprob: -22.5
    7. '１' → logprob: -22.625
    8. '       ' → logprob: -23.125
    9. '
' → logprob: -23.25
    10. '  ' → logprob: -23.375

Token 1038: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '   ' → logprob: -20.5
    4. '2' → logprob: -21.125
    5. '１' → logprob: -23.0
    6. '```' → logprob: -23.0
    7. '۱' → logprob: -23.25
    8. '3' → logprob: -23.375
    9. '  ' → logprob: -23.5
    10. '0' → logprob: -24.125

Token 1039: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.021891498938202858
    2. 'return' → logprob: -3.8968915939331055
    3. '
' → logprob: -6.8968915939331055
    4. ' return' → logprob: -8.021891593933105
    5. '       ' → logprob: -13.146891593933105
    6. ';' → logprob: -13.521891593933105
    7. '		' → logprob: -13.646891593933105
    8. '            
' → logprob: -13.896891593933105
    9. '               ' → logprob: -14.021891593933105
    10. '   ' → logprob: -14.146891593933105

Token 1040: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04887189716100693
    2. 'return' → logprob: -3.0488719940185547
    3. '
' → logprob: -8.548871994018555
    4. ' return' → logprob: -9.423871994018555
    5. '       ' → logprob: -12.048871994018555
    6. '   ' → logprob: -13.423871994018555
    7. '               ' → logprob: -13.798871994018555
    8. '		' → logprob: -14.673871994018555
    9. '{return' → logprob: -15.298871994018555
    10. ':return' → logprob: -15.673871994018555

Token 1041: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -1.0564331205387134e-05
    2. '           ' → logprob: -11.50001049041748
    3. ' return' → logprob: -14.75001049041748
    4. '
' → logprob: -17.500011444091797
    5. '       ' → logprob: -19.250011444091797
    6. '   ' → logprob: -20.250011444091797
    7. '               ' → logprob: -21.125011444091797
    8. '	return' → logprob: -21.250011444091797
    9. '{return' → logprob: -21.625011444091797
    10. ')return' → logprob: -21.750011444091797

Token 1042: ' Const' (ID: 19594)
  Prédit: 'Const'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Const' → logprob: -6.2729995988775045e-06
    2. ' Const' → logprob: -12.000006675720215
    3. '(Const' → logprob: -19.2500057220459
    4. 'const' → logprob: -19.7500057220459
    5. 'Constant' → logprob: -22.2500057220459
    6. 'CONST' → logprob: -22.5000057220459
    7. 'Consts' → logprob: -23.0000057220459
    8. '   ' → logprob: -23.1250057220459
    9. '_const' → logprob: -23.6250057220459
    10. 'Cons' → logprob: -23.6250057220459

Token 1043: '(False' (ID: 55925)
  Prédit: '(False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(False' → logprob: -2.057743949990254e-05
    2. 'False' → logprob: -11.000020980834961
    3. '(True' → logprob: -13.000020980834961
    4. '(' → logprob: -13.500020980834961
    5. '(
' → logprob: -16.37502098083496
    6. '(FALSE' → logprob: -17.37502098083496
    7. '(false' → logprob: -18.25002098083496
    8. ' False' → logprob: -18.37502098083496
    9. '(F' → logprob: -20.87502098083496
    10. ' (' → logprob: -21.75002098083496

Token 1044: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001295222609769553
    2. ')
' → logprob: -9.000129699707031
    3. '       ' → logprob: -12.500129699707031
    4. ' )' → logprob: -13.125129699707031
    5. '   ' → logprob: -15.750129699707031
    6. '),' → logprob: -16.25012969970703
    7. '')' → logprob: -16.87512969970703
    8. ')`' → logprob: -17.12512969970703
    9. ')return' → logprob: -17.75012969970703
    10. ' ' → logprob: -18.12512969970703

Token 1045: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017812105361372232
    2. '<|end|>' → logprob: -7.001780986785889
    3. '        
' → logprob: -8.001781463623047
    4. '
' → logprob: -8.251781463623047
    5. 'elif' → logprob: -9.626781463623047
    6. ')' → logprob: -9.751781463623047
    7. '      ' → logprob: -10.376781463623047
    8. '   ' → logprob: -11.126781463623047
    9. ' 
' → logprob: -11.501781463623047
    10. '  
' → logprob: -11.501781463623047

Token 1046: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2305806428194046
    2. 'if' (adapté à ' if') → logprob: -2.2305805683135986
    3. 'elif' → logprob: -2.3555805683135986
    4. ' if' → logprob: -6.605580806732178
    5. ' elif' → logprob: -7.105580806732178
    6. 'i' → logprob: -7.730580806732178
    7. '   ' → logprob: -7.980580806732178
    8. '        
' → logprob: -8.10558032989502
    9. '
' → logprob: -8.48058032989502
    10. 'e' → logprob: -10.10558032989502

Token 1047: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.3868729770183563
    2. 'c' → logprob: -1.1368730068206787
    3. 'self' → logprob: -14.761873245239258
    4. '	c' → logprob: -15.011873245239258
    5. '   ' → logprob: -15.136873245239258
    6. ' ' → logprob: -15.636873245239258
    7. '    ' → logprob: -16.011873245239258
    8. '(c' → logprob: -16.386873245239258
    9. ' ' → logprob: -16.386873245239258
    10. '       ' → logprob: -16.824373245239258

Token 1048: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.12700212001800537
    2. '==' → logprob: -2.127002239227295
    3. '=='' → logprob: -9.752001762390137
    4. ''' → logprob: -12.127001762390137
    5. '=' → logprob: -12.127001762390137
    6. ' =='' → logprob: -12.877001762390137
    7. ' ' → logprob: -13.377001762390137
    8. ' =' → logprob: -15.377001762390137
    9. ' '' → logprob: -15.877001762390137
    10. '   ' → logprob: -16.002002716064453

Token 1049: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.012536142021417618
    2. ' '' → logprob: -4.38753604888916
    3. '1' → logprob: -10.63753604888916
    4. ' ' → logprob: -13.26253604888916
    5. '"' → logprob: -14.63753604888916
    6. '`' → logprob: -15.88753604888916
    7. '('' → logprob: -16.262537002563477
    8. ' ' → logprob: -16.887537002563477
    9. ''s' → logprob: -17.262537002563477
    10. '   ' → logprob: -17.637537002563477

Token 1050: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.043004110455513
    2. ''' → logprob: -3.168004035949707
    3. '`' → logprob: -13.793004035949707
    4. ' ' → logprob: -13.793004035949707
    5. '"' → logprob: -14.168004035949707
    6. ''s' → logprob: -14.668004035949707
    7. ' '' → logprob: -14.793004035949707
    8. '('' → logprob: -14.793004035949707
    9. '
' → logprob: -14.918004035949707
    10. '['' → logprob: -16.168004989624023

Token 1051: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.7365018725395203
    2. '':
' → logprob: -1.861501932144165
    3. ':
' → logprob: -1.986501932144165
    4. ':' → logprob: -2.361501932144165
    5. '<|end|>' → logprob: -3.236501932144165
    6. '           ' → logprob: -3.611501932144165
    7. '       ' → logprob: -3.611501932144165
    8. ''):
' → logprob: -3.861501932144165
    9. '):
' → logprob: -4.611501693725586
    10. ''' → logprob: -5.236501693725586

Token 1052: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1707022339105606
    2. '       ' → logprob: -2.2957022190093994
    3. ':' → logprob: -2.9207022190093994
    4. ':
' → logprob: -6.4207024574279785
    5. 'self' → logprob: -8.29570198059082
    6. '          ' → logprob: -8.92070198059082
    7. '   ' → logprob: -9.29570198059082
    8. '.' → logprob: -10.42070198059082
    9. '(self' → logprob: -10.54570198059082
    10. '[self' → logprob: -10.67070198059082

Token 1053: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.1275603175163269
    2. ' self' → logprob: -2.1275603771209717
    3. '       ' → logprob: -7.627560138702393
    4. '           ' → logprob: -8.87756061553955
    5. '[self' → logprob: -13.12756061553955
    6. '```' → logprob: -13.75256061553955
    7. '	self' → logprob: -14.12756061553955
    8. '(self' → logprob: -14.62756061553955
    9. '   ' → logprob: -14.75256061553955
    10. '               ' → logprob: -14.87756061553955

Token 1054: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.0024762547109276056
    2. 'pos' → logprob: -6.002476215362549
    3. ' .' → logprob: -15.502476692199707
    4. '	pos' → logprob: -15.752476692199707
    5. ' pos' → logprob: -16.00247573852539
    6. 'self' → logprob: -17.25247573852539
    7. '_pos' → logprob: -18.12747573852539
    8. '[pos' → logprob: -18.25247573852539
    9. '.' → logprob: -19.12747573852539
    10. '
' → logprob: -19.25247573852539

Token 1055: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.03806134685873985
    2. ' +=' → logprob: -3.2880613803863525
    3. '+' → logprob: -11.288061141967773
    4. ']+=' → logprob: -12.288061141967773
    5. '           ' → logprob: -13.163061141967773
    6. '```' → logprob: -14.663061141967773
    7. '=' → logprob: -15.788061141967773
    8. '++' → logprob: -16.413061141967773
    9. '       ' → logprob: -16.413061141967773
    10. '+='' → logprob: -17.288061141967773

Token 1056: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001398929744027555
    2. ' ' → logprob: -8.875140190124512
    3. '   ' → logprob: -17.500139236450195
    4. '```' → logprob: -18.250139236450195
    5. '+' → logprob: -19.375139236450195
    6. '0' → logprob: -19.500139236450195
    7. '(' → logprob: -19.812639236450195
    8. '       ' → logprob: -20.187639236450195
    9. '=' → logprob: -20.312639236450195
    10. '`' → logprob: -20.437639236450195

Token 1057: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '   ' → logprob: -19.875
    4. '```' → logprob: -20.375
    5. '0' → logprob: -21.625
    6. '۱' → logprob: -22.375
    7. '       ' → logprob: -23.125
    8. '
' → logprob: -23.125
    9. '１' → logprob: -23.125
    10. '2' → logprob: -23.375

Token 1058: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0034015709534287453
    2. 'return' → logprob: -6.628401756286621
    3. '            
' → logprob: -7.503401756286621
    4. '<|end|>' → logprob: -7.878401756286621
    5. '		' → logprob: -8.128401756286621
    6. '
' → logprob: -8.253401756286621
    7. '	       ' → logprob: -9.128401756286621
    8. '          ' → logprob: -9.378401756286621
    9. '<|end|>' → logprob: -10.003401756286621
    10. ' return' → logprob: -10.128401756286621

Token 1059: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000116655595775228
    2. 'return' → logprob: -9.250116348266602
    3. '		' → logprob: -11.750116348266602
    4. ' return' → logprob: -12.250116348266602
    5. '	       ' → logprob: -13.125116348266602
    6. '
' → logprob: -13.625116348266602
    7. '       ' → logprob: -13.625116348266602
    8. '```' → logprob: -14.125116348266602
    9. '               ' → logprob: -14.375116348266602
    10. '	   ' → logprob: -14.875116348266602

Token 1060: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -2.2007883671903983e-05
    2. ' return' → logprob: -10.750021934509277
    3. '           ' → logprob: -14.500021934509277
    4. '       ' → logprob: -19.000022888183594
    5. '   ' → logprob: -20.250022888183594
    6. 'Return' → logprob: -21.000022888183594
    7. '	return' → logprob: -21.625022888183594
    8. '
' → logprob: -21.750022888183594
    9. 'eturn' → logprob: -22.500022888183594
    10. ':return' → logprob: -22.625022888183594

Token 1061: ' Const' (ID: 19594)
  Prédit: 'Const'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Const' → logprob: -0.002476016292348504
    2. ' Const' → logprob: -6.002476215362549
    3. 'const' → logprob: -15.00247573852539
    4. 'Constant' → logprob: -18.12747573852539
    5. '(Const' → logprob: -18.37747573852539
    6. '_const' → logprob: -20.25247573852539
    7. '   ' → logprob: -20.75247573852539
    8. ' const' → logprob: -21.12747573852539
    9. '.Const' → logprob: -21.37747573852539
    10. 'Consts' → logprob: -21.50247573852539

Token 1062: '(True' (ID: 55978)
  Prédit: '(True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(True' → logprob: -5.7530574849806726e-05
    2. 'True' → logprob: -10.000057220458984
    3. '(' → logprob: -11.750057220458984
    4. '(
' → logprob: -12.625057220458984
    5. ' (' → logprob: -14.500057220458984
    6. ' True' → logprob: -14.875057220458984
    7. '(False' → logprob: -17.250057220458984
    8. '=True' → logprob: -19.500057220458984
    9. '(

' → logprob: -20.125057220458984
    10. '(TRUE' → logprob: -20.500057220458984

Token 1063: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014594515785574913
    2. '       ' → logprob: -4.264594554901123
    3. '<|end|>' → logprob: -8.139594078063965
    4. '')' → logprob: -9.264594078063965
    5. ')
' → logprob: -11.514594078063965
    6. '<|end|>' → logprob: -11.639594078063965
    7. '")' → logprob: -11.889594078063965
    8. '   ' → logprob: -12.264594078063965
    9. '	' → logprob: -12.889594078063965
    10. ' )' → logprob: -13.264594078063965

Token 1064: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006726026069372892
    2. 'if' → logprob: -5.006725788116455
    3. ' if' → logprob: -12.006726264953613
    4. '
' → logprob: -12.756726264953613
    5. '   ' → logprob: -14.131726264953613
    6. '        
' → logprob: -14.756726264953613
    7. '      ' → logprob: -15.256726264953613
    8. '	' → logprob: -16.256725311279297
    9. '	if' → logprob: -16.256725311279297
    10. '```' → logprob: -16.881725311279297

Token 1065: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0001589618914294988
    2. '       ' → logprob: -8.75015926361084
    3. ' if' → logprob: -14.50015926361084
    4. '
' → logprob: -17.750158309936523
    5. '#' (adapté à ' #') → logprob: -19.000158309936523
    6. 'elif' → logprob: -19.250158309936523
    7. 'If' → logprob: -19.875158309936523
    8. '	if' → logprob: -20.125158309936523
    9. '        
' → logprob: -20.250158309936523
    10. '   ' → logprob: -20.875158309936523

Token 1066: ' Terminal' (ID: 52701)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -2.816093228830141e-06
    2. '       ' → logprob: -13.75000286102295
    3. '#' → logprob: -14.12500286102295
    4. '
' → logprob: -15.00000286102295
    5. ' if' → logprob: -15.50000286102295
    6. 'elif' → logprob: -15.62500286102295
    7. '   ' → logprob: -16.375001907348633
    8. '        
' → logprob: -16.750001907348633
    9. '           ' → logprob: -16.875001907348633
    10. 'i' → logprob: -17.125001907348633

Token 1067: ' variable' (ID: 11076)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.013465842232108116
    2. ' if' → logprob: -4.388465881347656
    3. 'a' → logprob: -7.138465881347656
    4. '       ' → logprob: -9.013465881347656
    5. ''a' → logprob: -11.763465881347656
    6. ' a' → logprob: -12.138465881347656
    7. '`' → logprob: -12.388465881347656
    8. '   ' → logprob: -12.513465881347656
    9. '           ' → logprob: -12.888465881347656
    10. '('' → logprob: -12.888465881347656

Token 1068: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.120425283908844
    2. '       ' → logprob: -2.870425224304199
    3. ' if' → logprob: -2.870425224304199
    4. ' (' → logprob: -10.4954252243042
    5. '('' → logprob: -11.1204252243042
    6. '           ' → logprob: -11.1204252243042
    7. '        
' → logprob: -11.8704252243042
    8. '
' → logprob: -12.1204252243042
    9. '   ' → logprob: -12.1204252243042
    10. 'elif' → logprob: -12.2454252243042

Token 1069: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5046615600585938
    2. '       ' → logprob: -1.0046615600585938
    3. ' if' → logprob: -3.5046615600585938
    4. '   ' → logprob: -11.504661560058594
    5. '	if' → logprob: -11.504661560058594
    6. 'If' → logprob: -11.879661560058594
    7. 'elif' → logprob: -12.004661560058594
    8. '        
' → logprob: -12.254661560058594
    9. '           ' → logprob: -12.379661560058594
    10. '(' → logprob: -12.504661560058594

Token 1070: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0005891331238672137
    2. '       ' → logprob: -7.750589370727539
    3. ' if' → logprob: -8.750589370727539
    4. 'elif' → logprob: -16.62558937072754
    5. 'If' → logprob: -17.25058937072754
    6. '	if' → logprob: -18.37558937072754
    7. '```' → logprob: -18.50058937072754
    8. '           ' → logprob: -19.25058937072754
    9. '        
' → logprob: -19.75058937072754
    10. '   ' → logprob: -20.12558937072754

Token 1071: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.012515303678810596
    2. ' c' → logprob: -4.387515068054199
    3. ''' → logprob: -12.5125150680542
    4. 'self' → logprob: -14.0125150680542
    5. '   ' → logprob: -14.3875150680542
    6. ' ' → logprob: -15.6375150680542
    7. ' '' → logprob: -15.6375150680542
    8. '	c' → logprob: -16.137516021728516
    9. ' ' → logprob: -17.012516021728516
    10. ' self' → logprob: -17.012516021728516

Token 1072: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.033679354935884476
    2. 'in' → logprob: -3.408679246902466
    3. ' >=' → logprob: -11.533679008483887
    4. '>=' → logprob: -11.533679008483887
    5. '>' → logprob: -12.658679008483887
    6. '   ' → logprob: -13.033679008483887
    7. 'In' → logprob: -13.408679008483887
    8. ' ' → logprob: -13.408679008483887
    9. ' i' → logprob: -13.533679008483887
    10. '	in' → logprob: -13.908679008483887

Token 1073: ' ('' (ID: 9906)
  Prédit: ''ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''ab' → logprob: -0.1164853498339653
    2. ''' → logprob: -3.116485357284546
    3. '{'' → logprob: -3.116485357284546
    4. '"' → logprob: -3.866485357284546
    5. '('' → logprob: -8.366485595703125
    6. 'abcd' → logprob: -9.616485595703125
    7. '['' → logprob: -10.616485595703125
    8. ''a' → logprob: -10.616485595703125
    9. ' {'' → logprob: -10.741485595703125
    10. ''s' → logprob: -11.241485595703125

Token 1074: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.049689725041389465
    2. ''a' → logprob: -3.549689769744873
    3. 'abcd' → logprob: -4.049689769744873
    4. ''ab' → logprob: -6.174689769744873
    5. ''' → logprob: -9.174689292907715
    6. 'abc' → logprob: -9.799689292907715
    7. 'abcdef' → logprob: -10.549689292907715
    8. 'ab' → logprob: -10.924689292907715
    9. 'abcdefghijklmnopqrstuvwxyz' → logprob: -10.924689292907715
    10. 'abcdefgh' → logprob: -12.424689292907715

Token 1075: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.3880753815174103
    2. '','' → logprob: -1.138075351715088
    3. 'b' → logprob: -7.138075351715088
    4. ''' → logprob: -8.013075828552246
    5. '',
' → logprob: -10.513075828552246
    6. ''b' → logprob: -10.888075828552246
    7. ',b' → logprob: -11.013075828552246
    8. '',['' → logprob: -12.638075828552246
    9. '',...
' → logprob: -12.638075828552246
    10. '','','' → logprob: -13.138075828552246

Token 1076: ' '' (ID: 461)
  Prédit: ''b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''b' → logprob: -0.0001029471677611582
    2. 'b' → logprob: -9.375102996826172
    3. ' '' → logprob: -11.250102996826172
    4. ''' → logprob: -12.625102996826172
    5. ''d' → logprob: -14.000102996826172
    6. '   ' → logprob: -15.625102996826172
    7. ''s' → logprob: -15.750102996826172
    8. '       ' → logprob: -16.000102996826172
    9. ' b' → logprob: -16.000102996826172
    10. ''t' → logprob: -16.375102996826172

Token 1077: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3868755102157593
    2. ''b' → logprob: -1.1368755102157593
    3. ''' → logprob: -12.63687515258789
    4. ' b' → logprob: -13.76187515258789
    5. ' '' → logprob: -15.88687515258789
    6. ')b' → logprob: -17.38687515258789
    7. ''d' → logprob: -18.88687515258789
    8. '`' → logprob: -18.88687515258789
    9. '{'' → logprob: -19.01187515258789
    10. '"' → logprob: -19.01187515258789

Token 1078: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.003572388319298625
    2. ',' → logprob: -6.128572463989258
    3. '','' → logprob: -6.878572463989258
    4. 'c' → logprob: -8.503572463989258
    5. ''' → logprob: -9.503572463989258
    6. ',c' → logprob: -9.628572463989258
    7. ','' → logprob: -12.128572463989258
    8. '",' → logprob: -12.878572463989258
    9. ''',' → logprob: -14.003572463989258
    10. '')' → logprob: -14.003572463989258

Token 1079: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0006229649879969656
    2. ' '' → logprob: -7.500622749328613
    3. 'c' → logprob: -9.625622749328613
    4. ''C' → logprob: -13.375622749328613
    5. ''s' → logprob: -14.125622749328613
    6. ' ' → logprob: -14.750622749328613
    7. ' c' → logprob: -14.875622749328613
    8. ''t' → logprob: -15.875622749328613
    9. ''clock' → logprob: -16.12562370300293
    10. ''d' → logprob: -16.12562370300293

Token 1080: 'c' (ID: 66)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.011048054322600365
    2. 'c' → logprob: -4.511047840118408
    3. ''C' → logprob: -16.38604736328125
    4. ''d' → logprob: -16.88604736328125
    5. ' '' → logprob: -18.51104736328125
    6. ''s' → logprob: -18.63604736328125
    7. '"' → logprob: -18.76104736328125
    8. '`' → logprob: -18.88604736328125
    9. ')c' → logprob: -19.01104736328125
    10. '{'' → logprob: -19.01104736328125

Token 1081: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.0003927808138541877
    2. '','' → logprob: -8.12539291381836
    3. ''d' → logprob: -10.12539291381836
    4. 'd' → logprob: -11.00039291381836
    5. ''):
' → logprob: -11.00039291381836
    6. ',' → logprob: -11.12539291381836
    7. ''' → logprob: -12.00039291381836
    8. ',d' → logprob: -14.37539291381836
    9. '',
' → logprob: -15.25039291381836
    10. '   ' → logprob: -15.25039291381836

Token 1082: ' '' (ID: 461)
  Prédit: ''d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''d' → logprob: -8.180258191714529e-06
    2. ' '' → logprob: -12.375008583068848
    3. 'd' → logprob: -12.500008583068848
    4. ''' → logprob: -16.25000762939453
    5. ''s' → logprob: -17.75000762939453
    6. '   ' → logprob: -17.75000762939453
    7. '       ' → logprob: -18.00000762939453
    8. '"d' → logprob: -18.00000762939453
    9. ''D' → logprob: -18.12500762939453
    10. '('' → logprob: -18.87500762939453

Token 1083: 'd' (ID: 67)
  Prédit: ''d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''d' → logprob: -0.002476135268807411
    2. 'd' → logprob: -6.002476215362549
    3. ')d' → logprob: -15.12747573852539
    4. '"d' → logprob: -16.37747573852539
    5. ' d' → logprob: -17.25247573852539
    6. ',d' → logprob: -17.50247573852539
    7. '	d' → logprob: -17.75247573852539
    8. ''' → logprob: -17.87747573852539
    9. ''s' → logprob: -18.25247573852539
    10. '('' → logprob: -18.37747573852539

Token 1084: ''):
' (ID: 26539)
  Prédit: ''):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''):
' → logprob: -0.0054871453903615475
    2. '):
' → logprob: -5.880486965179443
    3. ''):' → logprob: -6.005486965179443
    4. '       ' → logprob: -8.880487442016602
    5. '')' → logprob: -10.130487442016602
    6. '):' → logprob: -11.755487442016602
    7. ')' → logprob: -11.755487442016602
    8. ''' → logprob: -12.130487442016602
    9. 'self' → logprob: -12.505487442016602
    10. '           ' → logprob: -12.880487442016602

Token 1085: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16238713264465332
    2. '           ' → logprob: -1.9123871326446533
    3. ':' → logprob: -6.662386894226074
    4. '	       ' → logprob: -8.662386894226074
    5. '               ' → logprob: -9.162386894226074
    6. 'self' → logprob: -9.287386894226074
    7. '```' → logprob: -9.412386894226074
    8. '#' → logprob: -9.537386894226074
    9. '<|end|>' → logprob: -9.537386894226074
    10. '{' → logprob: -9.787386894226074

Token 1086: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0013724920572713017
    2. '       ' → logprob: -7.251372337341309
    3. ' self' → logprob: -7.501372337341309
    4. '           ' → logprob: -9.126372337341309
    5. '   ' → logprob: -14.126372337341309
    6. '	self' → logprob: -15.001372337341309
    7. '               ' → logprob: -16.751373291015625
    8. '```' → logprob: -16.876373291015625
    9. ' ' → logprob: -18.126373291015625
    10. '(self' → logprob: -18.376373291015625

Token 1087: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.0031838975846767426
    2. 'pos' → logprob: -5.753183841705322
    3. 'self' → logprob: -12.37818431854248
    4. '	pos' → logprob: -14.62818431854248
    5. '[pos' → logprob: -14.75318431854248
    6. '   ' → logprob: -15.12818431854248
    7. 'advance' → logprob: -15.62818431854248
    8. '       ' → logprob: -16.003183364868164
    9. ' .' → logprob: -16.128183364868164
    10. 's' → logprob: -16.128183364868164

Token 1088: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.06196846812963486
    2. ' +=' → logprob: -2.8119685649871826
    3. ']+=' → logprob: -15.186968803405762
    4. '           ' → logprob: -15.686968803405762
    5. '       ' → logprob: -15.936968803405762
    6. '            ' → logprob: -16.436967849731445
    7. '   ' → logprob: -17.061967849731445
    8. '+' → logprob: -17.311967849731445
    9. '+='' → logprob: -17.311967849731445
    10. '+="' → logprob: -17.811967849731445

Token 1089: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -18.250030517578125
    4. '```' → logprob: -19.875030517578125
    5. '۱' → logprob: -20.812530517578125
    6. '
' → logprob: -20.875030517578125
    7. '１' → logprob: -21.312530517578125
    8. '       ' → logprob: -21.500030517578125
    9. '0' → logprob: -21.750030517578125
    10. '+' → logprob: -22.000030517578125

Token 1090: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '   ' → logprob: -18.250003814697266
    4. '```' → logprob: -19.187503814697266
    5. '۱' → logprob: -19.812503814697266
    6. '１' → logprob: -20.312503814697266
    7. '2' → logprob: -20.750003814697266
    8. '0' → logprob: -20.750003814697266
    9. '  ' → logprob: -21.250003814697266
    10. '+' → logprob: -21.625003814697266

Token 1091: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002491595223546028
    2. 'return' → logprob: -6.002491474151611
    3. ' return' → logprob: -11.50249195098877
    4. '       ' → logprob: -12.75249195098877
    5. '   ' → logprob: -13.37749195098877
    6. '	       ' → logprob: -14.75249195098877
    7. '               ' → logprob: -15.12749195098877
    8. '		' → logprob: -15.25249195098877
    9. '{return' → logprob: -16.127490997314453
    10. ':return' → logprob: -16.127490997314453

Token 1092: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10048734396696091
    2. 'return' → logprob: -2.350487232208252
    3. ' return' → logprob: -8.22548770904541
    4. '		' → logprob: -12.97548770904541
    5. '   ' → logprob: -13.10048770904541
    6. ':return' → logprob: -13.10048770904541
    7. '       ' → logprob: -13.22548770904541
    8. '               ' → logprob: -13.35048770904541
    9. '{return' → logprob: -13.47548770904541
    10. '	return' → logprob: -14.10048770904541

Token 1093: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -8.77627644513268e-06
    2. ' return' → logprob: -11.750008583068848
    3. '           ' → logprob: -14.000008583068848
    4. '       ' → logprob: -20.000009536743164
    5. '
' → logprob: -20.250009536743164
    6. '	return' → logprob: -20.750009536743164
    7. '{return' → logprob: -20.750009536743164
    8. 'Return' → logprob: -21.625009536743164
    9. '   ' → logprob: -22.000009536743164
    10. 'var' → logprob: -22.625009536743164

Token 1094: ' Var' (ID: 18782)
  Prédit: 'Var'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Var' → logprob: -0.0031777136027812958
    2. ' Var' → logprob: -5.753177642822266
    3. 'var' → logprob: -20.503177642822266
    4. 'Vars' → logprob: -21.253177642822266
    5. '_var' → logprob: -21.628177642822266
    6. 'Variable' → logprob: -22.128177642822266
    7. '.Var' → logprob: -22.878177642822266
    8. ' ' → logprob: -23.253177642822266
    9. '   ' → logprob: -23.378177642822266
    10. '
' → logprob: -24.628177642822266

Token 1095: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0001514557225164026
    2. 'c' → logprob: -8.875151634216309
    3. '(' → logprob: -11.500151634216309
    4. '(
' → logprob: -13.500151634216309
    5. ' (' → logprob: -17.125150680541992
    6. '	c' → logprob: -17.625150680541992
    7. '((' → logprob: -18.125150680541992
    8. ')c' → logprob: -18.125150680541992
    9. ' c' → logprob: -18.250150680541992
    10. '(f' → logprob: -20.125150680541992

Token 1096: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1160349458805285e-05
    2. '       ' → logprob: -12.000011444091797
    3. ')
' → logprob: -12.375011444091797
    4. '<|end|>' → logprob: -15.375011444091797
    5. ' )' → logprob: -15.750011444091797
    6. ')return' → logprob: -16.125011444091797
    7. '')' → logprob: -16.500011444091797
    8. ')c' → logprob: -16.625011444091797
    9. '),' → logprob: -17.875011444091797
    10. '   ' → logprob: -18.375011444091797

Token 1097: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.635164754698053e-05
    2. 'if' → logprob: -9.750066757202148
    3. '```' → logprob: -12.375066757202148
    4. '   ' → logprob: -13.375066757202148
    5. '        
' → logprob: -13.500066757202148
    6. '           ' → logprob: -15.500066757202148
    7. 'elif' → logprob: -15.875066757202148
    8. '
' → logprob: -15.875066757202148
    9. '	' → logprob: -16.37506675720215
    10. '	if' → logprob: -16.62506675720215

Token 1098: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0019725270103663206
    2. '       ' → logprob: -6.251972675323486
    3. '#' (adapté à ' #') → logprob: -10.126972198486328
    4. ' if' → logprob: -12.751972198486328
    5. '   ' → logprob: -15.001972198486328
    6. '        
' → logprob: -15.251972198486328
    7. '	if' → logprob: -15.626972198486328
    8. '
' → logprob: -16.626972198486328
    9. 'elif' → logprob: -16.626972198486328
    10. '```' → logprob: -16.626972198486328

Token 1099: ' Neg' (ID: 22837)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -5.56233171664644e-05
    2. '#' → logprob: -10.625055313110352
    3. 'self' → logprob: -10.750055313110352
    4. 'elif' → logprob: -11.875055313110352
    5. '-' → logprob: -13.875055313110352
    6. 'If' → logprob: -14.375055313110352
    7. ' if' → logprob: -14.750055313110352
    8. '   ' → logprob: -14.875055313110352
    9. '       ' → logprob: -15.250055313110352
    10. ''-' → logprob: -15.625055313110352

Token 1100: 'ation' (ID: 387)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6412279009819031
    2. 'ate' → logprob: -1.0162279605865479
    3. '       ' → logprob: -3.516227960586548
    4. 'ation' → logprob: -4.391227722167969
    5. '('-' → logprob: -4.516227722167969
    6. '(' → logprob: -5.016227722167969
    7. '()' → logprob: -5.016227722167969
    8. '   ' → logprob: -5.266227722167969
    9. '(-' → logprob: -5.391227722167969
    10. ')' → logprob: -5.516227722167969

Token 1101: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3250204622745514
    2. '       ' → logprob: -1.325020432472229
    3. ' if' → logprob: -4.5750203132629395
    4. 'self' → logprob: -7.3250203132629395
    5. '   ' → logprob: -8.325020790100098
    6. '
' → logprob: -8.575020790100098
    7. '           ' → logprob: -9.450020790100098
    8. ':' → logprob: -10.075020790100098
    9. '(self' → logprob: -10.200020790100098
    10. ':
' → logprob: -10.200020790100098

Token 1102: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04988570883870125
    2. 'if' → logprob: -3.1748857498168945
    3. ' if' → logprob: -5.4248857498168945
    4. ':' → logprob: -6.5498857498168945
    5. '-' → logprob: -8.049885749816895
    6. 'self' → logprob: -8.674885749816895
    7. 'elif' → logprob: -8.799885749816895
    8. ':
' → logprob: -8.924885749816895
    9. '   ' → logprob: -9.299885749816895
    10. '           ' → logprob: -9.424885749816895

Token 1103: ' if' (ID: 538)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2523002326488495
    2. 'if' (adapté à ' if') → logprob: -1.5023002624511719
    3. '       ' → logprob: -8.002300262451172
    4. ' self' → logprob: -11.127300262451172
    5. ' if' → logprob: -11.252300262451172
    6. '           ' → logprob: -12.627300262451172
    7. '   ' → logprob: -12.627300262451172
    8. 'elif' → logprob: -13.377300262451172
    9. '(self' → logprob: -16.002300262451172
    10. '-' → logprob: -16.252300262451172

Token 1104: ' c' (ID: 274)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.13654369115829468
    2. ' self' → logprob: -2.1365437507629395
    3. 'c' → logprob: -4.7615437507629395
    4. ' c' → logprob: -7.0115437507629395
    5. '-' → logprob: -10.011543273925781
    6. '-self' → logprob: -10.636543273925781
    7. ' ' → logprob: -11.011543273925781
    8. 's' → logprob: -11.136543273925781
    9. '	self' → logprob: -12.011543273925781
    10. '(self' → logprob: -12.386543273925781

Token 1105: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.694261372089386
    2. ' ==' → logprob: -0.694261372089386
    3. '=='' → logprob: -6.94426155090332
    4. '=' → logprob: -8.94426155090332
    5. '==-' → logprob: -11.81926155090332
    6. '-' → logprob: -13.06926155090332
    7. '       ' → logprob: -13.31926155090332
    8. '	' → logprob: -13.31926155090332
    9. '   ' → logprob: -13.44426155090332
    10. '==
' → logprob: -13.81926155090332

Token 1106: ' '-' (ID: 17489)
  Prédit: ''-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''-' → logprob: -0.00010044389637187123
    2. '-' → logprob: -9.250100135803223
    3. ' '-'' → logprob: -13.750100135803223
    4. ''' → logprob: -13.750100135803223
    5. ' '-' → logprob: -13.750100135803223
    6. '('-' → logprob: -14.125100135803223
    7. '"-' → logprob: -15.125100135803223
    8. ''>' → logprob: -16.75010108947754
    9. '’-' → logprob: -17.25010108947754
    10. ' '-')' → logprob: -19.00010108947754

Token 1107: '':
' (ID: 7669)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1265668421983719
    2. ':
' → logprob: -2.3765668869018555
    3. '(self' → logprob: -4.6265668869018555
    4. '
' → logprob: -5.1265668869018555
    5. ' self' → logprob: -5.5015668869018555
    6. '):
' → logprob: -6.1265668869018555
    7. '           ' → logprob: -6.2515668869018555
    8. '       ' → logprob: -7.0015668869018555
    9. ''):
' → logprob: -7.8765668869018555
    10. '   ' → logprob: -8.376566886901855

Token 1108: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3573162257671356
    2. 'self' → logprob: -1.232316255569458
    3. '           ' → logprob: -4.982316017150879
    4. ' self' → logprob: -6.482316017150879
    5. '   ' → logprob: -8.982316017150879
    6. '(self' → logprob: -9.232316017150879
    7. '	self' → logprob: -9.857316017150879
    8. '{
' → logprob: -9.982316017150879
    9. '```' → logprob: -10.607316017150879
    10. ':
' → logprob: -10.857316017150879

Token 1109: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00023369524569716305
    2. '           ' → logprob: -8.75023365020752
    3. '       ' → logprob: -9.75023365020752
    4. ' self' → logprob: -11.00023365020752
    5. '   ' → logprob: -16.000234603881836
    6. '(self' → logprob: -18.000234603881836
    7. '	self' → logprob: -18.000234603881836
    8. '
' → logprob: -18.250234603881836
    9. '               ' → logprob: -18.625234603881836
    10. '```' → logprob: -20.375234603881836

Token 1110: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.2846088707447052
    2. '+=' → logprob: -2.284608840942383
    3. 'pos' → logprob: -2.784608840942383
    4. 'self' → logprob: -3.159608840942383
    5. ' +=' → logprob: -3.284608840942383
    6. '_pos' → logprob: -6.409608840942383
    7. '           ' → logprob: -7.159608840942383
    8. '
' → logprob: -7.784608840942383
    9. '   ' → logprob: -8.034608840942383
    10. '       ' → logprob: -8.534608840942383

Token 1111: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.004078758880496025
    2. ' +=' → logprob: -5.5040788650512695
    3. '+' → logprob: -16.129077911376953
    4. ']+=' → logprob: -16.254077911376953
    5. '           ' → logprob: -16.879077911376953
    6. '   ' → logprob: -17.004077911376953
    7. '=' → logprob: -17.129077911376953
    8. '       ' → logprob: -17.379077911376953
    9. '```' → logprob: -18.379077911376953
    10. '1' → logprob: -20.004077911376953

Token 1112: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -19.125009536743164
    4. '```' → logprob: -19.375009536743164
    5. '
' → logprob: -21.125009536743164
    6. '           ' → logprob: -21.375009536743164
    7. '۱' → logprob: -21.500009536743164
    8. '-' → logprob: -21.875009536743164
    9. '(' → logprob: -21.937509536743164
    10. ')' → logprob: -22.000009536743164

Token 1113: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '   ' → logprob: -19.625
    4. '```' → logprob: -20.1875
    5. '۱' → logprob: -20.75
    6. '
' → logprob: -21.0
    7. '１' → logprob: -21.1875
    8. '0' → logprob: -21.5
    9. '-' → logprob: -21.625
    10. '{' → logprob: -21.625

Token 1114: '
' (ID: 198)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.025451593101024628
    2. '           ' → logprob: -4.27545166015625
    3. 'expr' → logprob: -4.52545166015625
    4. ' return' → logprob: -7.90045166015625
    5. '       ' → logprob: -11.77545166015625
    6. '
' → logprob: -11.90045166015625
    7. '               ' → logprob: -13.15045166015625
    8. '(expr' → logprob: -13.40045166015625
    9. '	return' → logprob: -13.65045166015625
    10. ' expr' → logprob: -13.77545166015625

Token 1115: '           ' (ID: 352)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.38807958364486694
    2. 'return' → logprob: -1.1380796432495117
    3. '           ' → logprob: -6.763079643249512
    4. '       ' → logprob: -10.263079643249512
    5. ' expr' → logprob: -12.013079643249512
    6. ' return' → logprob: -12.138079643249512
    7. 'result' → logprob: -13.888079643249512
    8. '(expr' → logprob: -13.888079643249512
    9. '               ' → logprob: -14.013079643249512
    10. 'ex' → logprob: -14.013079643249512

Token 1116: ' sub' (ID: 1543)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.048781413584947586
    2. 'return' → logprob: -3.048781394958496
    3. 'inner' → logprob: -9.048781394958496
    4. 'child' → logprob: -10.173781394958496
    5. '       ' → logprob: -10.798781394958496
    6. 'node' → logprob: -12.298781394958496
    7. 'sub' (adapté à ' sub') → logprob: -12.423781394958496
    8. 'operand' → logprob: -12.548781394958496
    9. '           ' → logprob: -13.048781394958496
    10. ' expr' → logprob: -14.048781394958496

Token 1117: ' =' (ID: 314)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.00027230256819166243
    2. '_expr' → logprob: -8.250272750854492
    3. 'expression' → logprob: -12.250272750854492
    4. '=' → logprob: -12.875272750854492
    5. 'exp' → logprob: -13.875272750854492
    6. 'ex' → logprob: -14.125272750854492
    7. ' expr' → logprob: -14.625272750854492
    8. 'express' → logprob: -14.750272750854492
    9. ' =' → logprob: -15.125272750854492
    10. 'Expr' → logprob: -15.500272750854492

Token 1118: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00023083435371518135
    2. ' self' → logprob: -8.37523078918457
    3. '       ' → logprob: -16.12523078918457
    4. '           ' → logprob: -16.12523078918457
    5. '(self' → logprob: -16.50023078918457
    6. '   ' → logprob: -18.62523078918457
    7. 'Not' → logprob: -19.50023078918457
    8. 'Parser' → logprob: -19.62523078918457
    9. '[self' → logprob: -19.62523078918457
    10. ' ' → logprob: -19.75023078918457

Token 1119: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -0.47411417961120605
    2. 'parse' → logprob: -0.974114179611206
    3. '.' → logprob: -10.349114418029785
    4. ' parse' → logprob: -12.724114418029785
    5. '=parse' → logprob: -13.724114418029785
    6. '(parse' → logprob: -14.849114418029785
    7. '	parse' → logprob: -14.974114418029785
    8. ' .' → logprob: -15.599114418029785
    9. '_parse' → logprob: -15.974114418029785
    10. '```' → logprob: -17.22411346435547

Token 1120: '_expr' (ID: 53654)
  Prédit: '_expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expr' → logprob: -0.02326131984591484
    2. 'expr' → logprob: -3.773261308670044
    3. 'Expr' → logprob: -11.648261070251465
    4. '(expr' → logprob: -12.023261070251465
    5. 'express' → logprob: -14.273261070251465
    6. '_EXPR' → logprob: -16.14826202392578
    7. '_' → logprob: -16.39826202392578
    8. 'expression' → logprob: -16.89826202392578
    9. '.expr' → logprob: -16.89826202392578
    10. 'pexpr' → logprob: -16.89826202392578

Token 1121: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0041111730970442295
    2. 'return' → logprob: -5.504111289978027
    3. '
' → logprob: -11.504111289978027
    4. ' return' → logprob: -11.754111289978027
    5. '		' → logprob: -11.879111289978027
    6. '       ' → logprob: -13.129111289978027
    7. ')return' → logprob: -13.754111289978027
    8. '   ' → logprob: -13.879111289978027
    9. '	       ' → logprob: -13.879111289978027
    10. ':return' → logprob: -14.379111289978027

Token 1122: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8292007446289062
    2. 'return' → logprob: -0.8292007446289062
    3. '           ' → logprob: -2.0792007446289062
    4. ' return' → logprob: -6.204200744628906
    5. '   ' → logprob: -10.204200744628906
    6. '{return' → logprob: -10.579200744628906
    7. '	return' → logprob: -10.579200744628906
    8. ')return' → logprob: -10.704200744628906
    9. ':return' → logprob: -11.454200744628906
    10. '	       ' → logprob: -11.579200744628906

Token 1123: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -1.0921942703134846e-05
    2. '           ' → logprob: -11.50001049041748
    3. ' return' → logprob: -14.25001049041748
    4. '       ' → logprob: -16.625011444091797
    5. '	return' → logprob: -18.625011444091797
    6. '   ' → logprob: -19.375011444091797
    7. '
' → logprob: -21.500011444091797
    8. '               ' → logprob: -22.000011444091797
    9. 'eturn' → logprob: -22.625011444091797
    10. '{return' → logprob: -22.875011444091797

Token 1124: ' Not' (ID: 4037)
  Prédit: 'Not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Not' → logprob: -1.1472419600977446e-06
    2. ' Not' → logprob: -13.750000953674316
    3. '   ' → logprob: -19.125001907348633
    4. '_Not' → logprob: -19.375001907348633
    5. '@Not' → logprob: -20.375001907348633
    6. '(Not' → logprob: -20.750001907348633
    7. 'not' → logprob: -21.250001907348633
    8. '_not' → logprob: -21.750001907348633
    9. 'Neg' → logprob: -22.750001907348633
    10. '       ' → logprob: -22.750001907348633

Token 1125: '(sub' (ID: 19764)
  Prédit: '(sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sub' → logprob: -2.47495681833243e-05
    2. '(' → logprob: -11.000024795532227
    3. 'sub' → logprob: -11.750024795532227
    4. '(
' → logprob: -16.375024795532227
    5. ' (' → logprob: -18.125024795532227
    6. ' sub' → logprob: -18.625024795532227
    7. '=sub' → logprob: -20.125024795532227
    8. '[sub' → logprob: -20.125024795532227
    9. '(

' → logprob: -21.625024795532227
    10. '(Sub' → logprob: -21.750024795532227

Token 1126: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.554343366995454e-05
    2. '       ' → logprob: -9.500085830688477
    3. ')
' → logprob: -11.500085830688477
    4. ' )' → logprob: -15.125085830688477
    5. ')

' → logprob: -16.250085830688477
    6. ')return' → logprob: -16.500085830688477
    7. '   ' → logprob: -17.125085830688477
    8. '	' → logprob: -18.125085830688477
    9. '),' → logprob: -18.250085830688477
    10. '<|end|>' → logprob: -18.875085830688477

Token 1127: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07895137369632721
    2. 'if' → logprob: -2.578951358795166
    3. ' if' → logprob: -10.203951835632324
    4. '        
' → logprob: -11.453951835632324
    5. '```' → logprob: -12.203951835632324
    6. '   ' → logprob: -12.578951835632324
    7. '
' → logprob: -13.078951835632324
    8. '           ' → logprob: -14.203951835632324
    9. '	' → logprob: -14.328951835632324
    10. '#' → logprob: -14.453951835632324

Token 1128: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.004682288039475679
    2. '#' (adapté à ' #') → logprob: -5.7546820640563965
    3. '       ' → logprob: -6.5046820640563965
    4. ' if' → logprob: -12.129682540893555
    5. '        
' → logprob: -14.129682540893555
    6. 'elif' → logprob: -15.129682540893555
    7. '   ' → logprob: -15.629682540893555
    8. '
' → logprob: -16.004682540893555
    9. 'If' → logprob: -16.254682540893555
    10. '	if' → logprob: -16.504682540893555

Token 1129: ' Par' (ID: 3371)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.005260441452264786
    2. '#' → logprob: -5.255260467529297
    3. 'assert' → logprob: -10.755260467529297
    4. ' if' → logprob: -12.755260467529297
    5. 'elif' → logprob: -14.255260467529297
    6. '       ' → logprob: -14.755260467529297
    7. ' #' → logprob: -15.130260467529297
    8. 'If' → logprob: -15.255260467529297
    9. '(' → logprob: -15.380260467529297
    10. '   ' → logprob: -15.505260467529297

Token 1130: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.06222401559352875
    2. 'ent' → logprob: -2.8122239112854004
    3. 'ens' → logprob: -9.187224388122559
    4. 'e' → logprob: -9.312224388122559
    5. 'an' → logprob: -11.187224388122559
    6. '(' → logprob: -11.312224388122559
    7. 'se' → logprob: -11.562224388122559
    8. 'enth' → logprob: -11.812224388122559
    9. 't' → logprob: -12.437224388122559
    10. ' en' → logprob: -12.937224388122559

Token 1131: ' construct' (ID: 12871)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.35346466302871704
    2. 't' → logprob: -1.6034646034240723
    3. 's' → logprob: -2.8534646034240723
    4. ')' → logprob: -4.603464603424072
    5. '(
' → logprob: -4.603464603424072
    6. ' (' → logprob: -4.978464603424072
    7. 'th' → logprob: -5.228464603424072
    8. '   ' → logprob: -5.603464603424072
    9. '('' → logprob: -7.228464603424072
    10. '[' → logprob: -7.603464603424072

Token 1132: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010847324738278985
    2. '(' → logprob: -7.751084804534912
    3. 'if' → logprob: -8.001084327697754
    4. '(
' → logprob: -8.251084327697754
    5. '   ' → logprob: -10.876084327697754
    6. ' if' → logprob: -11.001084327697754
    7. '           ' → logprob: -12.376084327697754
    8. ')' → logprob: -12.501084327697754
    9. ',' → logprob: -13.251084327697754
    10. 'self' → logprob: -13.501084327697754

Token 1133: ' (<' (ID: 46465)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5873816609382629
    2. 'if' → logprob: -0.8373816609382629
    3. 'self' → logprob: -4.962381839752197
    4. ' if' → logprob: -5.462381839752197
    5. '(' → logprob: -10.337381362915039
    6. '   ' → logprob: -10.462381362915039
    7. '(
' → logprob: -10.712381362915039
    8. '(self' → logprob: -11.087381362915039
    9. ' self' → logprob: -11.962381362915039
    10. '           ' → logprob: -12.087381362915039

Token 1134: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.007128073368221521
    2. 'self' → logprob: -5.3821282386779785
    3. '<|end|>' → logprob: -6.5071282386779785
    4. '<|end|>' → logprob: -7.6321282386779785
    5. ')' → logprob: -8.00712776184082
    6. 's' → logprob: -9.75712776184082
    7. '<E' → logprob: -10.50712776184082
    8. 'code' → logprob: -11.25712776184082
    9. ' E' → logprob: -11.38212776184082
    10. '(E' → logprob: -11.75712776184082

Token 1135: '>' (ID: 29)
  Prédit: '>)'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>)' → logprob: -0.38165566325187683
    2. '>' → logprob: -1.6316556930541992
    3. ')' → logprob: -2.131655693054199
    4. ')>' → logprob: -6.256655693054199
    5. '()' → logprob: -8.1316556930542
    6. '(' → logprob: -9.0066556930542
    7. '   ' → logprob: -9.5066556930542
    8. '`)' → logprob: -9.6316556930542
    9. '()>' → logprob: -9.7566556930542
    10. ' >' → logprob: -10.0066556930542

Token 1136: ' op' (ID: 991)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.037735600024461746
    2. 'self' → logprob: -3.6627357006073
    3. '       ' → logprob: -5.037735462188721
    4. '           ' → logprob: -6.412735462188721
    5. '(self' → logprob: -6.662735462188721
    6. ' self' → logprob: -7.787735462188721
    7. '<|end|>' → logprob: -7.912735462188721
    8. '<|end|>' → logprob: -8.162735939025879
    9. ')
' → logprob: -8.787735939025879
    10. '   ' → logprob: -9.162735939025879

Token 1137: ' <' (ID: 464)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08663921803236008
    2. '>' → logprob: -2.711639165878296
    3. '>)' → logprob: -5.336639404296875
    4. '<E' → logprob: -5.461639404296875
    5. ' )' → logprob: -5.961639404296875
    6. ' ' → logprob: -6.461639404296875
    7. ')>' → logprob: -7.336639404296875
    8. ' >' → logprob: -7.336639404296875
    9. '  ' → logprob: -8.086639404296875
    10. ' E' → logprob: -8.086639404296875

Token 1138: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -4.842555426876061e-06
    2. 'token' → logprob: -13.750004768371582
    3. '>E' → logprob: -14.125004768371582
    4. 's' → logprob: -14.250004768371582
    5. '<E' → logprob: -14.375004768371582
    6. '<|end|>' → logprob: -14.750004768371582
    7. ')' → logprob: -15.000004768371582
    8. '<|end|>' → logprob: -15.750004768371582
    9. ' E' → logprob: -16.0000057220459
    10. '>' → logprob: -16.3750057220459

Token 1139: '>)
' (ID: 67591)
  Prédit: '>)'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>)' → logprob: -0.4774474799633026
    2. ')' → logprob: -0.977447509765625
    3. '>' → logprob: -5.852447509765625
    4. ')>' → logprob: -8.227447509765625
    5. '`)' → logprob: -9.477447509765625
    6. '>)
' → logprob: -9.602447509765625
    7. '')' → logprob: -9.852447509765625
    8. ')
' → logprob: -11.727447509765625
    9. '>):' → logprob: -12.602447509765625
    10. '")' → logprob: -12.727447509765625

Token 1140: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006797884125262499
    2. 'self' → logprob: -7.375679969787598
    3. '   ' → logprob: -10.500679969787598
    4. ' self' → logprob: -12.125679969787598
    5. '           ' → logprob: -12.500679969787598
    6. '(self' → logprob: -12.750679969787598
    7. ',' → logprob: -12.875679969787598
    8. '{
' → logprob: -13.000679969787598
    9. '```' → logprob: -13.125679969787598
    10. '#' → logprob: -13.250679969787598

Token 1141: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6046814322471619
    2. 'self' → logprob: -1.1046814918518066
    3. '       ' → logprob: -2.1046814918518066
    4. ' if' → logprob: -8.229681015014648
    5. 'assert' → logprob: -8.604681015014648
    6. ' self' → logprob: -10.604681015014648
    7. '#' → logprob: -10.979681015014648
    8. '   ' → logprob: -11.104681015014648
    9. '(self' → logprob: -11.354681015014648
    10. '(' → logprob: -11.854681015014648

Token 1142: ' c' (ID: 274)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10673783719539642
    2. ' self' → logprob: -2.3567378520965576
    3. 'c' → logprob: -5.1067376136779785
    4. ' c' → logprob: -7.7317376136779785
    5. ' ' → logprob: -12.231738090515137
    6. '   ' → logprob: -12.481738090515137
    7. '(self' → logprob: -12.981738090515137
    8. '	self' → logprob: -13.731738090515137
    9. '       ' → logprob: -13.981738090515137
    10. '  ' → logprob: -14.606738090515137

Token 1143: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.38854286074638367
    2. ' ==' → logprob: -1.138542890548706
    3. '=' → logprob: -6.638542652130127
    4. '=='' → logprob: -8.013543128967285
    5. ' =' → logprob: -11.013543128967285
    6. '[' → logprob: -12.763543128967285
    7. '()==' → logprob: -12.763543128967285
    8. '()' → logprob: -13.638543128967285
    9. '=="' → logprob: -13.638543128967285
    10. '(' → logprob: -13.638543128967285

Token 1144: ' '('' (ID: 87284)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0008732284768484533
    2. '(' → logprob: -7.50087308883667
    3. '('' → logprob: -8.750873565673828
    4. ''(' → logprob: -9.000873565673828
    5. ' '('' → logprob: -10.875873565673828
    6. '"' → logprob: -10.875873565673828
    7. '("("' → logprob: -14.750873565673828
    8. '(
' → logprob: -15.500873565673828
    9. ''>' → logprob: -16.375873565673828
    10. '')' → logprob: -17.750873565673828

Token 1145: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05695632845163345
    2. '       ' → logprob: -3.5569562911987305
    3. 'self' → logprob: -3.6819562911987305
    4. '(self' → logprob: -6.8069562911987305
    5. ' self' → logprob: -8.30695629119873
    6. '               ' → logprob: -9.18195629119873
    7. '   ' → logprob: -9.43195629119873
    8. ')' → logprob: -11.18195629119873
    9. '        ' → logprob: -11.43195629119873
    10. ',' → logprob: -11.55695629119873

Token 1146: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.059228863567113876
    2. '           ' → logprob: -3.0592288970947266
    3. 'self' → logprob: -4.559228897094727
    4. '   ' → logprob: -9.434228897094727
    5. ' self' → logprob: -10.559228897094727
    6. '               ' → logprob: -13.059228897094727
    7. '	self' → logprob: -13.184228897094727
    8. '(self' → logprob: -13.559228897094727
    9. '	       ' → logprob: -13.684228897094727
    10. '        ' → logprob: -14.559228897094727

Token 1147: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0025329755153506994
    2. '           ' → logprob: -6.002532958984375
    3. '       ' → logprob: -10.502532958984375
    4. ' self' → logprob: -10.627532958984375
    5. '   ' → logprob: -12.252532958984375
    6. '               ' → logprob: -14.502532958984375
    7. '	self' → logprob: -15.877532958984375
    8. '(self' → logprob: -16.377532958984375
    9. ' ' → logprob: -17.502532958984375
    10. '
' → logprob: -18.002532958984375

Token 1148: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.0013290488859638572
    2. 'pos' → logprob: -6.626328945159912
    3. '_pos' → logprob: -13.50132942199707
    4. '	pos' → logprob: -13.62632942199707
    5. ' pos' → logprob: -16.00132942199707
    6. ',pos' → logprob: -16.00132942199707
    7. '       ' → logprob: -16.50132942199707
    8. 's' → logprob: -16.87632942199707
    9. '   ' → logprob: -17.00132942199707
    10. '
' → logprob: -17.12632942199707

Token 1149: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2551041841506958
    2. ' +=' → logprob: -1.5051041841506958
    3. '           ' → logprob: -5.755104064941406
    4. '            ' → logprob: -13.630104064941406
    5. ']+=' → logprob: -14.505104064941406
    6. '       ' → logprob: -14.755104064941406
    7. '=' → logprob: -14.880104064941406
    8. '   ' → logprob: -15.255104064941406
    9. '               ' → logprob: -15.380104064941406
    10. '          ' → logprob: -16.130104064941406

Token 1150: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -18.125003814697266
    4. '
' → logprob: -19.500003814697266
    5. '           ' → logprob: -21.000003814697266
    6. '```' → logprob: -21.000003814697266
    7. '۱' → logprob: -21.062503814697266
    8. '       ' → logprob: -21.187503814697266
    9. ')' → logprob: -21.500003814697266
    10. '１' → logprob: -21.562503814697266

Token 1151: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '   ' → logprob: -19.25
    4. '0' → logprob: -19.625
    5. '```' → logprob: -20.0
    6. '
' → logprob: -20.25
    7. '-' → logprob: -20.375
    8. '2' → logprob: -20.4375
    9. '１' → logprob: -20.625
    10. '۱' → logprob: -20.6875

Token 1152: '
' (ID: 198)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.03891030326485634
    2. '       ' → logprob: -4.038910388946533
    3. '           ' → logprob: -4.038910388946533
    4. 'expr' → logprob: -6.163910388946533
    5. ' left' → logprob: -7.788910388946533
    6. 'lhs' → logprob: -8.413909912109375
    7. 'sub' → logprob: -9.538909912109375
    8. '	left' → logprob: -9.788909912109375
    9. '               ' → logprob: -11.413909912109375
    10. 'e' → logprob: -11.538909912109375

Token 1153: '           ' (ID: 352)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.0037959229666739702
    2. '           ' → logprob: -6.628796100616455
    3. 'expr' → logprob: -6.878796100616455
    4. '       ' → logprob: -7.503796100616455
    5. 'sub' → logprob: -7.753796100616455
    6. 'lhs' → logprob: -8.003795623779297
    7. ' left' → logprob: -9.253795623779297
    8. '	left' → logprob: -12.003795623779297
    9. 'right' → logprob: -12.253795623779297
    10. 'e' → logprob: -12.503795623779297

Token 1154: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -5.5577775128767826e-06
    2. 'lhs' → logprob: -12.250005722045898
    3. ' left' → logprob: -14.250005722045898
    4. 'l' → logprob: -16.8750057220459
    5. '   ' → logprob: -17.8750057220459
    6. '	left' → logprob: -18.8750057220459
    7. 'lef' → logprob: -18.8750057220459
    8. 'e' → logprob: -19.5000057220459
    9. '       ' → logprob: -21.3750057220459
    10. '_left' → logprob: -22.2500057220459

Token 1155: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931595802307129
    2. ' =' → logprob: -0.6931595802307129
    3. 'expr' → logprob: -11.943159103393555
    4. '_expr' → logprob: -12.568159103393555
    5. '           ' → logprob: -14.068159103393555
    6. ' ' → logprob: -14.568159103393555
    7. 'left' → logprob: -15.068159103393555
    8. '            ' → logprob: -15.193159103393555
    9. '_=' → logprob: -15.693159103393555
    10. '=
' → logprob: -16.068159103393555

Token 1156: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.313314952421933e-05
    2. ' self' → logprob: -9.750062942504883
    3. '           ' → logprob: -12.250062942504883
    4. '(self' → logprob: -18.875062942504883
    5. '       ' → logprob: -19.750062942504883
    6. '               ' → logprob: -19.875062942504883
    7. '   ' → logprob: -20.875062942504883
    8. '	self' → logprob: -20.875062942504883
    9. '=self' → logprob: -21.500062942504883
    10. '          ' → logprob: -21.625062942504883

Token 1157: '.parse' (ID: 7259)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.011052182875573635
    2. '.parse' → logprob: -4.511052131652832
    3. ' parse' → logprob: -13.011052131652832
    4. '.' → logprob: -14.386052131652832
    5. '_parse' → logprob: -14.886052131652832
    6. '	parse' → logprob: -14.886052131652832
    7. '(parse' → logprob: -15.011052131652832
    8. '=parse' → logprob: -15.136052131652832
    9. '
' → logprob: -16.76105308532715
    10. '   ' → logprob: -17.51105308532715

Token 1158: '_expr' (ID: 53654)
  Prédit: '_expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expr' → logprob: -0.14276652038097382
    2. 'expr' → logprob: -2.0177664756774902
    3. 'Expr' → logprob: -9.392766952514648
    4. 'left' → logprob: -12.892766952514648
    5. 'E' → logprob: -13.517766952514648
    6. 'express' → logprob: -13.892766952514648
    7. '(expr' → logprob: -14.017766952514648
    8. 'pexpr' → logprob: -14.642766952514648
    9. 'expression' → logprob: -15.017766952514648
    10. ' expr' → logprob: -15.517766952514648

Token 1159: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007171401288360357
    2. '       ' → logprob: -5.007171630859375
    3. 'while' → logprob: -8.507171630859375
    4. 'self' → logprob: -9.632171630859375
    5. '<|end|>' → logprob: -10.007171630859375
    6. '		' → logprob: -10.382171630859375
    7. ' while' → logprob: -10.632171630859375
    8. '   ' → logprob: -10.757171630859375
    9. '	       ' → logprob: -11.257171630859375
    10. '<|end|>' → logprob: -11.632171630859375

Token 1160: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02632201462984085
    2. 'while' → logprob: -3.77632212638855
    3. '           ' → logprob: -6.401321887969971
    4. '   ' → logprob: -7.401321887969971
    5. 'c' → logprob: -7.651321887969971
    6. ' while' → logprob: -8.776322364807129
    7. '        
' → logprob: -9.776322364807129
    8. 'if' → logprob: -10.276322364807129
    9. '	while' → logprob: -11.526322364807129
    10. 'op' → logprob: -12.026322364807129

Token 1161: ' if' (ID: 538)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.0016625623684376478
    2. 'c' → logprob: -6.501662731170654
    3. '       ' → logprob: -9.126662254333496
    4. 'if' (adapté à ' if') → logprob: -10.501662254333496
    5. '           ' → logprob: -11.376662254333496
    6. 'while' → logprob: -12.626662254333496
    7. ' op' → logprob: -12.876662254333496
    8. '	op' → logprob: -13.001662254333496
    9. 'operator' → logprob: -13.501662254333496
    10. 'opcode' → logprob: -14.626662254333496

Token 1162: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.038275111466646194
    2. ' self' → logprob: -3.2882750034332275
    3. '   ' → logprob: -9.288274765014648
    4. '	self' → logprob: -9.288274765014648
    5. ' ' → logprob: -10.663274765014648
    6. '(self' → logprob: -12.163274765014648
    7. '           ' → logprob: -12.288274765014648
    8. '  ' → logprob: -12.663274765014648
    9. 'not' → logprob: -12.663274765014648
    10. '       ' → logprob: -12.913274765014648

Token 1163: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.04126643389463425
    2. '.s' → logprob: -3.291266441345215
    3. 'pos' → logprob: -5.791266441345215
    4. 's' → logprob: -8.791266441345215
    5. '	pos' → logprob: -12.916266441345215
    6. '.skip' → logprob: -12.916266441345215
    7. '[pos' → logprob: -13.291266441345215
    8. '_pos' → logprob: -13.666266441345215
    9. '   ' → logprob: -13.916266441345215
    10. 'Pos' → logprob: -14.041266441345215

Token 1164: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.417194664478302
    2. ' >=' → logprob: -1.1671946048736572
    3. '<|end|>' → logprob: -3.9171946048736572
    4. '[' → logprob: -5.917194843292236
    5. ')>=' → logprob: -5.917194843292236
    6. ']>=' → logprob: -6.292194843292236
    7. ' <' → logprob: -7.292194843292236
    8. '==' → logprob: -7.542194843292236
    9. '<' → logprob: -7.667194843292236
    10. '<len' → logprob: -8.542194366455078

Token 1165: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00031294001382775605
    2. ' self' → logprob: -8.250312805175781
    3. 'len' → logprob: -10.375312805175781
    4. '           ' → logprob: -11.000312805175781
    5. '1' → logprob: -12.875312805175781
    6. '<|end|>' → logprob: -15.000312805175781
    7. ')' → logprob: -15.500312805175781
    8. 'length' → logprob: -15.875312805175781
    9. '2' → logprob: -16.50031280517578
    10. '<|end|>' → logprob: -16.62531280517578

Token 1166: '.length' (ID: 3116)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.0031762905418872833
    2. 'len' → logprob: -6.003176212310791
    3. ' length' → logprob: -7.503176212310791
    4. 'self' → logprob: -9.00317668914795
    5. 's' → logprob: -11.75317668914795
    6. '1' → logprob: -12.00317668914795
    7. 'leng' → logprob: -12.87817668914795
    8. '.length' → logprob: -13.12817668914795
    9. ' len' → logprob: -13.12817668914795
    10. '-length' → logprob: -13.75317668914795

Token 1167: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.11077384650707245
    2. '               ' → logprob: -2.735773801803589
    3. 'or' → logprob: -3.735773801803589
    4. '           ' → logprob: -4.735774040222168
    5. ':
' → logprob: -5.735774040222168
    6. ' and' → logprob: -6.235774040222168
    7. ':' → logprob: -6.360774040222168
    8. 'and' → logprob: -7.985774040222168
    9. '	or' → logprob: -9.985774040222168
    10. ')' → logprob: -11.110774040222168

Token 1168: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.015647057443857193
    2. '           ' → logprob: -4.765646934509277
    3. 'raise' → logprob: -5.390646934509277
    4. ' and' → logprob: -7.015646934509277
    5. ' raise' → logprob: -7.640646934509277
    6. ' or' → logprob: -7.890646934509277
    7. 'and' → logprob: -9.015646934509277
    8. ' if' → logprob: -9.015646934509277
    9. 'if' → logprob: -9.390646934509277
    10. '   ' → logprob: -9.640646934509277

Token 1169: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.10116124898195267
    2. ' raise' → logprob: -2.351161241531372
    3. '               ' → logprob: -7.476161479949951
    4. '           ' → logprob: -8.976161003112793
    5. '                   ' → logprob: -8.976161003112793
    6. '	raise' → logprob: -8.976161003112793
    7. '   ' → logprob: -12.101161003112793
    8. '_raise' → logprob: -13.976161003112793
    9. '                       ' → logprob: -14.226161003112793
    10. '                ' → logprob: -15.351161003112793

Token 1170: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -3.5716304410016164e-05
    2. ' Value' → logprob: -10.250035285949707
    3. 'value' → logprob: -16.000036239624023
    4. 'EOF' → logprob: -17.125036239624023
    5. 'Index' → logprob: -17.500036239624023
    6. '	Value' → logprob: -17.500036239624023
    7. '_value' → logprob: -18.250036239624023
    8. '(Value' → logprob: -18.375036239624023
    9. '           ' → logprob: -18.625036239624023
    10. '   ' → logprob: -18.625036239624023

Token 1171: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -2.141186450899113e-05
    2. 'rror' → logprob: -10.875020980834961
    3. '("' → logprob: -13.375020980834961
    4. 'Value' → logprob: -15.375020980834961
    5. 'error' → logprob: -15.625020980834961
    6. 'Index' → logprob: -16.00002098083496
    7. 'EOF' → logprob: -16.12502098083496
    8. 'Unexpected' → logprob: -16.75002098083496
    9. 'f' → logprob: -17.75002098083496
    10. '(f' → logprob: -17.75002098083496

Token 1172: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.001492961309850216
    2. '(f' → logprob: -7.001492977142334
    3. '"' → logprob: -7.876492977142334
    4. '(' → logprob: -9.126492500305176
    5. '(",' → logprob: -10.626492500305176
    6. '")' → logprob: -10.751492500305176
    7. '("("' → logprob: -11.501492500305176
    8. '('' → logprob: -11.626492500305176
    9. '           ' → logprob: -12.126492500305176
    10. '       ' → logprob: -12.251492500305176

Token 1173: 'Expected' (ID: 28041)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.14693821966648102
    2. 'if' → logprob: -2.1469383239746094
    3. 'expected' → logprob: -4.646938323974609
    4. 'op' → logprob: -5.271938323974609
    5. ')' → logprob: -6.396938323974609
    6. 'Expected' → logprob: -7.146938323974609
    7. 'raise' → logprob: -7.271938323974609
    8. 'assert' → logprob: -7.771938323974609
    9. ')
' → logprob: -7.896938323974609
    10. ' if' → logprob: -8.89693832397461

Token 1174: ' operator' (ID: 11019)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2606164216995239
    2. 'self' → logprob: -2.3856163024902344
    3. 'op' → logprob: -2.5106163024902344
    4. ' self' → logprob: -4.135616302490234
    5. '')' → logprob: -4.385616302490234
    6. ' op' → logprob: -4.760616302490234
    7. '")' → logprob: -5.260616302490234
    8. 's' → logprob: -5.760616302490234
    9. ' )' → logprob: -6.385616302490234
    10. ' s' → logprob: -6.635616302490234

Token 1175: ' but' (ID: 889)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.7901309132575989
    2. ',' → logprob: -1.040130853652954
    3. ')' → logprob: -1.790130853652954
    4. ' or' → logprob: -4.790131092071533
    5. ' )' → logprob: -6.165131092071533
    6. ' ,' → logprob: -6.165131092071533
    7. ' and' → logprob: -6.165131092071533
    8. ' but' → logprob: -6.290131092071533
    9. '           ' → logprob: -6.415131092071533
    10. '")' → logprob: -6.415131092071533

Token 1176: ' got' (ID: 3508)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5234460234642029
    2. ' self' → logprob: -0.8984460234642029
    3. '<|end|>' → logprob: -8.773446083068848
    4. ' got' → logprob: -9.898446083068848
    5. '
' → logprob: -10.898446083068848
    6. 'True' → logprob: -11.148446083068848
    7. ' not' → logprob: -11.398446083068848
    8. 's' → logprob: -11.648446083068848
    9. ' found' → logprob: -11.773446083068848
    10. ')' → logprob: -11.773446083068848

Token 1177: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.06033197045326233
    2. ' end' → logprob: -3.5603320598602295
    3. '')' → logprob: -4.06033182144165
    4. 'EOF' → logprob: -4.81033182144165
    5. 'e' → logprob: -6.06033182144165
    6. '")' → logprob: -7.06033182144165
    7. ''end' → logprob: -7.18533182144165
    8. ')' → logprob: -8.310332298278809
    9. ')")' → logprob: -9.310332298278809
    10. ' ')' → logprob: -9.685332298278809

Token 1178: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.10223158448934555
    2. ' of' → logprob: -2.352231502532959
    3. ')' → logprob: -7.102231502532959
    4. '+' → logprob: -7.727231502532959
    5. '_of' → logprob: -7.852231502532959
    6. 'Of' → logprob: -9.602231979370117
    7. '           ' → logprob: -9.727231979370117
    8. '       ' → logprob: -10.477231979370117
    9. 'ofs' → logprob: -10.477231979370117
    10. 'if' → logprob: -10.477231979370117

Token 1179: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10501665621995926
    2. 's' → logprob: -2.3550167083740234
    3. 'string' → logprob: -5.355016708374023
    4. ' input' → logprob: -9.855016708374023
    5. ' s' → logprob: -11.730016708374023
    6. '_input' → logprob: -11.855016708374023
    7. '-input' → logprob: -13.480016708374023
    8. 'text' → logprob: -13.480016708374023
    9. 'str' → logprob: -14.105016708374023
    10. 'expression' → logprob: -14.355016708374023

Token 1180: '")
' (ID: 1896)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.48814892768859863
    2. '           ' → logprob: -0.9881489276885986
    3. ')
' → logprob: -4.4881486892700195
    4. '               ' → logprob: -6.3631486892700195
    5. '')' → logprob: -7.8631486892700195
    6. '")' → logprob: -9.23814868927002
    7. ' )' → logprob: -9.23814868927002
    8. ',' → logprob: -9.48814868927002
    9. '       ' → logprob: -9.73814868927002
    10. ' )
' → logprob: -9.86314868927002

Token 1181: '           ' (ID: 352)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.5552773475646973
    2. 'c' → logprob: -1.1802773475646973
    3. '           ' → logprob: -2.8052773475646973
    4. ' op' → logprob: -3.1802773475646973
    5. 'operator' → logprob: -5.055277347564697
    6. '	op' → logprob: -5.305277347564697
    7. ' c' → logprob: -5.430277347564697
    8. '       ' → logprob: -7.430277347564697
    9. '		' → logprob: -9.430276870727539
    10. '_op' → logprob: -9.805276870727539

Token 1182: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' (adapté à ' op') → logprob: -0.005744387395679951
    2. 'c' → logprob: -5.255744457244873
    3. ' op' → logprob: -7.880744457244873
    4. '           ' → logprob: -9.380743980407715
    5. '	op' → logprob: -10.755743980407715
    6. 'operator' → logprob: -10.880743980407715
    7. 'o' → logprob: -13.130743980407715
    8. 'opcode' → logprob: -13.755743980407715
    9. 'ops' → logprob: -14.005743980407715
    10. '_op' → logprob: -14.380743980407715

Token 1183: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3871530592441559
    2. ' =' → logprob: -1.1371530294418335
    3. 'c' → logprob: -8.262152671813965
    4. ' ' → logprob: -12.012152671813965
    5. 'char' → logprob: -12.387152671813965
    6. '_char' → logprob: -12.637152671813965
    7. '=c' → logprob: -12.887152671813965
    8. '=self' → logprob: -13.387152671813965
    9. '   ' → logprob: -13.762152671813965
    10. '_c' → logprob: -14.012152671813965

Token 1184: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.036524842376821e-05
    2. ' self' → logprob: -10.125040054321289
    3. '[self' → logprob: -16.87504005432129
    4. ' ' → logprob: -17.37504005432129
    5. '   ' → logprob: -17.50004005432129
    6. 's' → logprob: -17.50004005432129
    7. '           ' → logprob: -17.62504005432129
    8. '	self' → logprob: -17.75004005432129
    9. '       ' → logprob: -18.12504005432129
    10. '`' → logprob: -18.62504005432129

Token 1185: '.s' (ID: 640)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0020026268903166056
    2. ' self' → logprob: -6.752002716064453
    3. '[self' → logprob: -7.127002716064453
    4. 's' → logprob: -11.002002716064453
    5. '           ' → logprob: -12.127002716064453
    6. '	self' → logprob: -13.502002716064453
    7. '
' → logprob: -13.627002716064453
    8. '   ' → logprob: -14.377002716064453
    9. '[' → logprob: -14.502002716064453
    10. '=self' → logprob: -14.502002716064453

Token 1186: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.01105300523340702
    2. 'self' → logprob: -4.511053085327148
    3. ' self' → logprob: -12.511053085327148
    4. '
' → logprob: -14.886053085327148
    5. '[' → logprob: -15.011053085327148
    6. '           ' → logprob: -15.136053085327148
    7. '	self' → logprob: -16.01105308532715
    8. '       ' → logprob: -16.13605308532715
    9. '[
' → logprob: -16.26105308532715
    10. '   ' → logprob: -16.38605308532715

Token 1187: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.00012725738633889705
    2. 'pos' → logprob: -9.000126838684082
    3. 'self' → logprob: -12.875126838684082
    4. 'Pos' → logprob: -14.375126838684082
    5. '.position' → logprob: -15.750126838684082
    6. '_pos' → logprob: -15.875126838684082
    7. '[self' → logprob: -16.6251277923584
    8. '[pos' → logprob: -16.7501277923584
    9. '	pos' → logprob: -16.7501277923584
    10. '.Pos' → logprob: -17.0001277923584

Token 1188: ']
' (ID: 1592)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4852697551250458
    2. '<|end|>' → logprob: -1.6102697849273682
    3. ')' → logprob: -2.610269784927368
    4. '<|end|>' → logprob: -2.860269784927368
    5. 'self' → logprob: -3.360269784927368
    6. '       ' → logprob: -5.235269546508789
    7. '
' → logprob: -6.110269546508789
    8. '               ' → logprob: -6.235269546508789
    9. '                   ' → logprob: -6.610269546508789
    10. '   ' → logprob: -6.735269546508789

Token 1189: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003190193965565413
    2. 'self' → logprob: -8.250319480895996
    3. '       ' → logprob: -10.250319480895996
    4. '	       ' → logprob: -11.125319480895996
    5. '		' → logprob: -12.375319480895996
    6. '		   ' → logprob: -14.125319480895996
    7. ' self' → logprob: -14.375319480895996
    8. '   ' → logprob: -14.500319480895996
    9. '               ' → logprob: -14.750319480895996
    10. '	   ' → logprob: -15.000319480895996

Token 1190: ' if' (ID: 538)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2309090793132782
    2. '           ' → logprob: -1.6059091091156006
    3. ' self' → logprob: -5.4809088706970215
    4. '       ' → logprob: -7.6059088706970215
    5. '	self' → logprob: -8.10590934753418
    6. '   ' → logprob: -8.73090934753418
    7. 'if' (adapté à ' if') → logprob: -9.23090934753418
    8. '
' → logprob: -9.60590934753418
    9. '<|end|>' → logprob: -10.48090934753418
    10. '               ' → logprob: -10.85590934753418

Token 1191: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.00015062130114529282
    2. ' op' → logprob: -8.875150680541992
    3. 'self' → logprob: -11.750150680541992
    4. '	op' → logprob: -13.875150680541992
    5. 'not' → logprob: -14.000150680541992
    6. '
' → logprob: -14.750150680541992
    7. '(op' → logprob: -15.625150680541992
    8. '   ' → logprob: -15.625150680541992
    9. '           ' → logprob: -15.750150680541992
    10. '  ' → logprob: -16.625150680541992

Token 1192: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.014263524673879147
    2. 'not' → logprob: -4.26426362991333
    3. ' in' → logprob: -9.514263153076172
    4. '	not' → logprob: -11.514263153076172
    5. ' ==' → logprob: -11.889263153076172
    6. '==' → logprob: -12.014263153076172
    7. 'in' → logprob: -13.764263153076172
    8. ' ' → logprob: -14.264263153076172
    9. ' !=' → logprob: -14.639263153076172
    10. '[' → logprob: -15.139263153076172

Token 1193: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3134089708328247
    2. ' in' → logprob: -1.3134089708328247
    3. '['' → logprob: -9.813408851623535
    4. 'In' → logprob: -10.813408851623535
    5. '           ' → logprob: -11.438408851623535
    6. '=' → logprob: -11.563408851623535
    7. '	in' → logprob: -11.688408851623535
    8. '=['' → logprob: -12.438408851623535
    9. '  ' → logprob: -12.563408851623535
    10. ' ' → logprob: -12.813408851623535

Token 1194: ' ('' (ID: 9906)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.6961563229560852
    2. '('*' → logprob: -1.8211562633514404
    3. ''^' → logprob: -1.8211562633514404
    4. '{'' → logprob: -1.9461562633514404
    5. ''*' → logprob: -3.6961562633514404
    6. ''' → logprob: -4.8211565017700195
    7. '['' → logprob: -6.5711565017700195
    8. '"' → logprob: -8.32115650177002
    9. ' ('' → logprob: -8.69615650177002
    10. '("^' → logprob: -8.94615650177002

Token 1195: '^' (ID: 61)
  Prédit: ''^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''^' → logprob: -0.257645845413208
    2. ''*' → logprob: -1.507645845413208
    3. '^' → logprob: -5.632645606994629
    4. '*' → logprob: -6.257645606994629
    5. ''' → logprob: -8.632645606994629
    6. ')^' → logprob: -12.132645606994629
    7. '"*' → logprob: -12.257645606994629
    8. '('*' → logprob: -12.257645606994629
    9. '`' → logprob: -12.507645606994629
    10. '"' → logprob: -13.132645606994629

Token 1196: '',' (ID: 787)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.10534083098173141
    2. '',' → logprob: -2.3553407192230225
    3. '','' → logprob: -5.730340957641602
    4. ''*' → logprob: -6.355340957641602
    5. ' ',' → logprob: -10.105340957641602
    6. ''' → logprob: -10.230340957641602
    7. ',' → logprob: -10.480340957641602
    8. '*,' → logprob: -11.730340957641602
    9. '^' → logprob: -11.980340957641602
    10. '')' → logprob: -12.480340957641602

Token 1197: ' '*' (ID: 34958)
  Prédit: ''*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''*' → logprob: -1.5690089639974758e-05
    2. ' '*' → logprob: -11.125015258789062
    3. '"*' → logprob: -14.625015258789062
    4. ''' → logprob: -15.375015258789062
    5. ' '*'' → logprob: -15.750015258789062
    6. '*' → logprob: -17.750015258789062
    7. '('*' → logprob: -18.000015258789062
    8. ' ' → logprob: -18.250015258789062
    9. ')*' → logprob: -18.625015258789062
    10. '   ' → logprob: -18.625015258789062

Token 1198: ''):
' (ID: 26539)
  Prédit: ''):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''):
' → logprob: -0.059887465089559555
    2. ')' → logprob: -3.434887409210205
    3. '):
' → logprob: -3.684887409210205
    4. '')' → logprob: -7.934887409210205
    5. ''):' → logprob: -8.309887886047363
    6. ''' → logprob: -10.184887886047363
    7. '')):
' → logprob: -10.434887886047363
    8. '):' → logprob: -10.434887886047363
    9. 'self' → logprob: -10.684887886047363
    10. '('' → logprob: -10.934887886047363

Token 1199: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6384994387626648
    2. '           ' → logprob: -0.7634994387626648
    3. ':' → logprob: -5.7634992599487305
    4. ':
' → logprob: -6.3884992599487305
    5. 'self' → logprob: -7.8884992599487305
    6. '<|end|>' → logprob: -8.76349925994873
    7. '                   ' → logprob: -9.38849925994873
    8. '):
' → logprob: -9.76349925994873
    9. '       ' → logprob: -9.88849925994873
    10. '<|end|>' → logprob: -10.01349925994873

Token 1200: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.03888668864965439
    2. ' raise' → logprob: -3.413886785507202
    3. '               ' → logprob: -5.413886547088623
    4. '                   ' → logprob: -7.788886547088623
    5. '	raise' → logprob: -8.663887023925781
    6. 'self' → logprob: -9.288887023925781
    7. '           ' → logprob: -9.413887023925781
    8. '_raise' → logprob: -12.788887023925781
    9. 'Raise' → logprob: -13.163887023925781
    10. '```' → logprob: -13.538887023925781

Token 1201: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -2.7848862373502925e-05
    2. 'Syntax' → logprob: -10.500027656555176
    3. ' Value' → logprob: -15.125027656555176
    4. 'Runtime' → logprob: -17.875028610229492
    5. '(Value' → logprob: -19.625028610229492
    6. 'value' → logprob: -19.750028610229492
    7. '_value' → logprob: -20.125028610229492
    8. '	Value' → logprob: -20.625028610229492
    9. '_Value' → logprob: -20.750028610229492
    10. 'Type' → logprob: -21.375028610229492

Token 1202: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.0019289902411401272
    2. 'rror' → logprob: -6.251928806304932
    3. 'error' → logprob: -16.001928329467773
    4. 'alue' → logprob: -16.251928329467773
    5. 'Value' → logprob: -16.751928329467773
    6. '(f' → logprob: -16.876928329467773
    7. 'Warning' → logprob: -18.251928329467773
    8. 'n' → logprob: -18.501928329467773
    9. 'r' → logprob: -18.626928329467773
    10. 'f' → logprob: -18.626928329467773

Token 1203: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.001555567141622305
    2. '("' → logprob: -6.501555442810059
    3. '(' → logprob: -10.626555442810059
    4. 'f' → logprob: -10.751555442810059
    5. '(
' → logprob: -12.001555442810059
    6. '('' → logprob: -13.751555442810059
    7. '           ' → logprob: -15.626555442810059
    8. '       ' → logprob: -16.376556396484375
    9. '   ' → logprob: -17.001556396484375
    10. '               ' → logprob: -17.376556396484375

Token 1204: '"' (ID: 1)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.00020580526324920356
    2. '"' → logprob: -8.875205993652344
    3. '(f' → logprob: -10.000205993652344
    4. 'Unexpected' → logprob: -11.125205993652344
    5. ' f' → logprob: -12.375205993652344
    6. ')' → logprob: -14.625205993652344
    7. 'unexpected' → logprob: -15.750205993652344
    8. '
' → logprob: -15.750205993652344
    9. 'Expected' → logprob: -16.125205993652344
    10. '[f' → logprob: -16.125205993652344

Token 1205: 'Expected' (ID: 28041)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.010191855952143669
    2. 'Unexpected' → logprob: -4.760191917419434
    3. '"' → logprob: -6.635191917419434
    4. 'self' → logprob: -9.010191917419434
    5. 'Expected' → logprob: -9.885191917419434
    6. '(f' → logprob: -10.010191917419434
    7. ' f' → logprob: -10.885191917419434
    8. 'Invalid' → logprob: -11.885191917419434
    9. 'unexpected' → logprob: -12.260191917419434
    10. 'op' → logprob: -12.510191917419434

Token 1206: ' operator' (ID: 11019)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.03274635225534439
    2. ''' → logprob: -4.907746315002441
    3. ''op' → logprob: -4.907746315002441
    4. '')' → logprob: -5.157746315002441
    5. ' op' → logprob: -6.157746315002441
    6. '^' → logprob: -6.282746315002441
    7. ''^' → logprob: -6.407746315002441
    8. '(op' → logprob: -6.657746315002441
    9. 'operator' → logprob: -6.782746315002441
    10. ' ' → logprob: -7.032746315002441

Token 1207: ' ^' (ID: 7602)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.2648352384567261
    2. ' but' → logprob: -1.639835238456726
    3. ',' → logprob: -3.3898353576660156
    4. 'at' → logprob: -6.264835357666016
    5. ' (' → logprob: -7.264835357666016
    6. 'but' → logprob: -7.264835357666016
    7. 'self' → logprob: -7.889835357666016
    8. '           ' → logprob: -8.014835357666016
    9. ' self' → logprob: -8.639835357666016
    10. ''' → logprob: -9.389835357666016

Token 1208: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.5761693716049194
    2. 'or' → logprob: -0.8261693716049194
    3. ' ' → logprob: -9.45116901397705
    4. ''or' → logprob: -9.57616901397705
    5. '*' → logprob: -10.95116901397705
    6. ',' → logprob: -11.32616901397705
    7. '
' → logprob: -11.45116901397705
    8. '`' → logprob: -11.95116901397705
    9. '	or' → logprob: -12.07616901397705
    10. 'orm' → logprob: -12.32616901397705

Token 1209: ' *,' (ID: 27655)
  Prédit: ''*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''*' → logprob: -0.033140599727630615
    2. '*' → logprob: -3.5331406593322754
    3. '*,' → logprob: -6.658140659332275
    4. ''' → logprob: -6.658140659332275
    5. ' '*' → logprob: -8.033140182495117
    6. ' '*'' → logprob: -8.158140182495117
    7. ' ' → logprob: -9.783140182495117
    8. ',' → logprob: -10.533140182495117
    9. '"*' → logprob: -10.533140182495117
    10. '',' → logprob: -10.783140182495117

Token 1210: ' got' (ID: 3508)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.8088029623031616
    2. ' f' → logprob: -1.4338029623031616
    3. ' self' → logprob: -1.5588029623031616
    4. 'f' → logprob: -3.183803081512451
    5. '               ' → logprob: -3.933803081512451
    6. ' but' → logprob: -4.433803081512451
    7. '           ' → logprob: -4.558803081512451
    8. '                   ' → logprob: -4.808803081512451
    9. ')' → logprob: -6.308803081512451
    10. '"' → logprob: -6.433803081512451

Token 1211: ' {' (ID: 354)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.28176337480545044
    2. ''{' → logprob: -2.6567633152008057
    3. ' self' → logprob: -3.1567633152008057
    4. 'f' → logprob: -3.4067633152008057
    5. ' f' → logprob: -3.4067633152008057
    6. '{' → logprob: -3.4067633152008057
    7. ''' → logprob: -3.6567633152008057
    8. ' '{' → logprob: -5.906763553619385
    9. ' {' → logprob: -6.656763553619385
    10. ' ' → logprob: -7.281763553619385

Token 1212: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.03993268311023712
    2. 'self' → logprob: -3.4149327278137207
    3. 'repr' → logprob: -5.164932727813721
    4. '{' → logprob: -8.664932250976562
    5. 'f' → logprob: -9.039932250976562
    6. ' op' → logprob: -9.164932250976562
    7. 'c' → logprob: -9.789932250976562
    8. ''op' → logprob: -10.789932250976562
    9. ''{' → logprob: -11.164932250976562
    10. 'rep' → logprob: -11.164932250976562

Token 1213: '}' (ID: 92)
  Prédit: ')")
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')")
' → logprob: -0.1493372619152069
    2. ')' → logprob: -2.8993372917175293
    3. ')")' → logprob: -3.3993372917175293
    4. '")' → logprob: -3.6493372917175293
    5. '")
' → logprob: -3.8993372917175293
    6. '           ' → logprob: -6.774337291717529
    7. '')")
' → logprob: -7.149337291717529
    8. '}")
' → logprob: -7.649337291717529
    9. ')')
' → logprob: -8.149336814880371
    10. ')
' → logprob: -8.149336814880371

Token 1214: ' at' (ID: 540)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12353179603815079
    2. ')
' → logprob: -2.4985318183898926
    3. '')
' → logprob: -3.9985318183898926
    4. ')' → logprob: -4.873531818389893
    5. '")
' → logprob: -5.498531818389893
    6. '       ' → logprob: -6.498531818389893
    7. 'self' → logprob: -7.123531818389893
    8. '               ' → logprob: -7.373531818389893
    9. '')' → logprob: -7.373531818389893
    10. '")' → logprob: -8.373531341552734

Token 1215: ' pos' (ID: 1253)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00033581978641450405
    2. ' self' → logprob: -8.000335693359375
    3. '
' → logprob: -15.500335693359375
    4. '(self' → logprob: -16.500335693359375
    5. '           ' → logprob: -17.375335693359375
    6. 'pos' → logprob: -17.875335693359375
    7. '{' → logprob: -17.875335693359375
    8. 's' → logprob: -18.125335693359375
    9. '[self' → logprob: -18.875335693359375
    10. 'elf' → logprob: -19.125335693359375

Token 1216: ' {' (ID: 354)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6137179732322693
    2. ' {' → logprob: -1.113718032836914
    3. '{' → logprob: -2.613718032836914
    4. 'self' → logprob: -2.863718032836914
    5. '{s' → logprob: -12.488718032836914
    6. ' f' → logprob: -12.988718032836914
    7. ' ' → logprob: -13.863718032836914
    8. '{
' → logprob: -14.238718032836914
    9. 's' → logprob: -14.363718032836914
    10. '
' → logprob: -14.363718032836914

Token 1217: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.080963092041202e-06
    2. ' self' → logprob: -12.375004768371582
    3. '           ' → logprob: -14.500004768371582
    4. '
' → logprob: -15.250004768371582
    5. '(self' → logprob: -17.2500057220459
    6. '               ' → logprob: -17.3750057220459
    7. '                   ' → logprob: -18.2500057220459
    8. '       ' → logprob: -18.3750057220459
    9. '   ' → logprob: -18.6250057220459
    10. '{' → logprob: -18.7500057220459

Token 1218: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.004080897197127342
    2. 'pos' → logprob: -5.504080772399902
    3. 'self' → logprob: -13.629080772399902
    4. '.' → logprob: -14.379080772399902
    5. '.position' → logprob: -15.754080772399902
    6. '.s' → logprob: -16.00408172607422
    7. ' .' → logprob: -16.62908172607422
    8. 'Pos' → logprob: -16.62908172607422
    9. '.Pos' → logprob: -16.75408172607422
    10. '[pos' → logprob: -16.87908172607422

Token 1219: '}")
' (ID: 23577)
  Prédit: ')")
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')")
' → logprob: -0.10538063943386078
    2. ')' → logprob: -3.2303805351257324
    3. '")
' → logprob: -3.7303805351257324
    4. '")' → logprob: -3.9803805351257324
    5. '       ' → logprob: -4.855380535125732
    6. ')")' → logprob: -5.105380535125732
    7. '           ' → logprob: -6.230380535125732
    8. '}")
' → logprob: -6.980380535125732
    9. ')
' → logprob: -8.35538101196289
    10. '               ' → logprob: -8.48038101196289

Token 1220: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007853971794247627
    2. 'self' → logprob: -4.882853984832764
    3. '       ' → logprob: -8.757853507995605
    4. ' self' → logprob: -10.632853507995605
    5. '		' → logprob: -10.757853507995605
    6. '               ' → logprob: -10.882853507995605
    7. '	       ' → logprob: -11.882853507995605
    8. '```' → logprob: -11.882853507995605
    9. '
' → logprob: -12.382853507995605
    10. '   ' → logprob: -13.507853507995605

Token 1221: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.20334145426750183
    2. '           ' → logprob: -1.7033414840698242
    3. ' self' → logprob: -6.328341484069824
    4. '               ' → logprob: -10.078341484069824
    5. '       ' → logprob: -10.203341484069824
    6. '   ' → logprob: -11.078341484069824
    7. '                   ' → logprob: -11.328341484069824
    8. '	self' → logprob: -11.328341484069824
    9. '<|end|>' → logprob: -12.328341484069824
    10. '```' → logprob: -12.953341484069824

Token 1222: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -2.7610454708337784e-05
    2. 'pos' → logprob: -10.500027656555176
    3. '	pos' → logprob: -18.75002670288086
    4. ' pos' → logprob: -19.25002670288086
    5. '.' → logprob: -19.37502670288086
    6. ' .' → logprob: -19.75002670288086
    7. '
' → logprob: -20.87502670288086
    8. ',pos' → logprob: -21.00002670288086
    9. '_pos' → logprob: -21.12502670288086
    10. '[pos' → logprob: -22.00002670288086

Token 1223: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.018170664086937904
    2. ' +=' → logprob: -4.0181708335876465
    3. '+' → logprob: -11.268170356750488
    4. ']+=' → logprob: -12.018170356750488
    5. '+='' → logprob: -14.268170356750488
    6. '   ' → logprob: -15.143170356750488
    7. '1' → logprob: -15.143170356750488
    8. '+="' → logprob: -15.768170356750488
    9. '++' → logprob: -15.768170356750488
    10. '```' → logprob: -16.143171310424805

Token 1224: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '```' → logprob: -18.125001907348633
    4. '   ' → logprob: -18.875001907348633
    5. '2' → logprob: -20.625001907348633
    6. '+' → logprob: -20.625001907348633
    7. '<|end|>' → logprob: -21.000001907348633
    8. '0' → logprob: -21.125001907348633
    9. '۱' → logprob: -21.187501907348633
    10. '
' → logprob: -21.437501907348633

Token 1225: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '   ' → logprob: -19.0
    4. '2' → logprob: -19.375
    5. '```' → logprob: -19.5625
    6. '
' → logprob: -20.4375
    7. '۱' → logprob: -20.6875
    8. '１' → logprob: -20.75
    9. '0' → logprob: -21.375
    10. 'int' → logprob: -21.4375

Token 1226: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6362090706825256
    2. 'right' → logprob: -0.7612090706825256
    3. '	right' → logprob: -6.886209011077881
    4. '<|end|>' → logprob: -6.886209011077881
    5. ' right' → logprob: -7.636209011077881
    6. '[right' → logprob: -8.261209487915039
    7. '       ' → logprob: -8.511209487915039
    8. ',right' → logprob: -8.636209487915039
    9. '		' → logprob: -9.386209487915039
    10. '(right' → logprob: -9.636209487915039

Token 1227: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.31462734937667847
    2. 'right' → logprob: -1.3146274089813232
    3. '       ' → logprob: -6.814627170562744
    4. ' right' → logprob: -8.439627647399902
    5. '	right' → logprob: -10.439627647399902
    6. '   ' → logprob: -11.689627647399902
    7. '		' → logprob: -12.689627647399902
    8. '               ' → logprob: -13.439627647399902
    9. ',right' → logprob: -13.564627647399902
    10. 'next' → logprob: -13.564627647399902

Token 1228: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -6.110668618930504e-05
    2. ' right' → logprob: -9.75006103515625
    3. '           ' → logprob: -13.37506103515625
    4. '	right' → logprob: -13.62506103515625
    5. '       ' → logprob: -17.37506103515625
    6. '   ' → logprob: -18.37506103515625
    7. 'Right' → logprob: -18.62506103515625
    8. '               ' → logprob: -19.62506103515625
    9. '(right' → logprob: -20.00006103515625
    10. '.right' → logprob: -20.00006103515625

Token 1229: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.575941801071167
    2. '=' → logprob: -0.825941801071167
    3. '           ' → logprob: -13.450942039489746
    4. '       ' → logprob: -15.200942039489746
    5. '   ' → logprob: -15.825942039489746
    6. 'left' → logprob: -15.950942039489746
    7. '=self' → logprob: -16.70094108581543
    8. ' ' → logprob: -16.95094108581543
    9. '            ' → logprob: -16.95094108581543
    10. '=
' → logprob: -17.07594108581543

Token 1230: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.023247575387358665
    2. ' self' → logprob: -3.773247480392456
    3. '           ' → logprob: -13.148247718811035
    4. '(self' → logprob: -16.64824676513672
    5. '	self' → logprob: -17.02324676513672
    6. '[self' → logprob: -17.77324676513672
    7. '   ' → logprob: -18.39824676513672
    8. ' ' → logprob: -18.64824676513672
    9. '       ' → logprob: -18.77324676513672
    10. '               ' → logprob: -18.77324676513672

Token 1231: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -0.00033677343162707984
    2. 'parse' → logprob: -8.000336647033691
    3. '.' → logprob: -13.875336647033691
    4. 'self' → logprob: -14.750336647033691
    5. ' parse' → logprob: -17.625337600708008
    6. '=parse' → logprob: -17.750337600708008
    7. '	parse' → logprob: -18.375337600708008
    8. '_parse' → logprob: -18.625337600708008
    9. '(parse' → logprob: -19.125337600708008
    10. ' .' → logprob: -19.375337600708008

Token 1232: '_expr' (ID: 53654)
  Prédit: '_expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expr' → logprob: -0.0031871015671640635
    2. 'expr' → logprob: -5.75318717956543
    3. 'Expr' → logprob: -11.62818717956543
    4. '(expr' → logprob: -16.37818717956543
    5. 'self' → logprob: -16.62818717956543
    6. 'express' → logprob: -16.75318717956543
    7. 'right' → logprob: -16.87818717956543
    8. 'expression' → logprob: -17.75318717956543
    9. '
' → logprob: -18.00318717956543
    10. '_expression' → logprob: -18.12818717956543

Token 1233: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0073805199936032295
    2. '       ' → logprob: -5.382380485534668
    3. 'self' → logprob: -6.757380485534668
    4. ')' → logprob: -6.882380485534668
    5. '<|end|>' → logprob: -8.132380485534668
    6. '   ' → logprob: -9.007380485534668
    7. '		' → logprob: -10.132380485534668
    8. 'if' → logprob: -10.882380485534668
    9. '<|end|>' → logprob: -11.007380485534668
    10. '```' → logprob: -11.507380485534668

Token 1234: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013778526335954666
    2. '       ' → logprob: -7.001378059387207
    3. 'if' → logprob: -7.876378059387207
    4. 'self' → logprob: -9.751378059387207
    5. '   ' → logprob: -10.751378059387207
    6. ' if' → logprob: -12.501378059387207
    7. ')' → logprob: -14.626378059387207
    8. 'assert' → logprob: -14.626378059387207
    9. '            
' → logprob: -14.626378059387207
    10. '```' → logprob: -14.626378059387207

Token 1235: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.10095221549272537
    2. '           ' → logprob: -2.3509521484375
    3. ' if' → logprob: -7.3509521484375
    4. '       ' → logprob: -9.3509521484375
    5. ')' → logprob: -12.3509521484375
    6. '	if' → logprob: -12.4759521484375
    7. '   ' → logprob: -12.7259521484375
    8. '		' → logprob: -13.7259521484375
    9. '            
' → logprob: -14.1009521484375
    10. '#' → logprob: -14.2259521484375

Token 1236: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -8.423219696851447e-05
    2. '           ' → logprob: -9.750083923339844
    3. ' self' → logprob: -10.875083923339844
    4. '       ' → logprob: -12.250083923339844
    5. '   ' → logprob: -13.625083923339844
    6. '               ' → logprob: -15.000083923339844
    7. '(self' → logprob: -15.375083923339844
    8. '
' → logprob: -15.750083923339844
    9. '                   ' → logprob: -16.125083923339844
    10. '	self' → logprob: -16.875083923339844

Token 1237: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -4.0722858102526516e-05
    2. '.s' → logprob: -10.375041007995605
    3. 'pos' → logprob: -11.625041007995605
    4. '	pos' → logprob: -15.250041007995605
    5. '.' → logprob: -16.37504005432129
    6. '[pos' → logprob: -17.00004005432129
    7. '.user' → logprob: -17.50004005432129
    8. 'Pos' → logprob: -17.62504005432129
    9. 's' → logprob: -17.75004005432129
    10. '   ' → logprob: -18.00004005432129

Token 1238: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.35509029030799866
    2. ' >=' → logprob: -1.2300902605056763
    3. '           ' → logprob: -5.230090141296387
    4. '==' → logprob: -7.355090141296387
    5. ' ==' → logprob: -8.230090141296387
    6. '[' → logprob: -8.980090141296387
    7. ')>=' → logprob: -9.730090141296387
    8. ']>=' → logprob: -10.105090141296387
    9. ')' → logprob: -10.230090141296387
    10. '+=' → logprob: -10.730090141296387

Token 1239: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.88418151892256e-05
    2. ' self' → logprob: -10.000059127807617
    3. '1' → logprob: -11.625059127807617
    4. '           ' → logprob: -12.625059127807617
    5. 'len' → logprob: -15.000059127807617
    6. '(self' → logprob: -15.375059127807617
    7. '0' → logprob: -15.625059127807617
    8. '               ' → logprob: -16.000059127807617
    9. '   ' → logprob: -16.375059127807617
    10. '       ' → logprob: -17.125059127807617

Token 1240: '.length' (ID: 3116)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.00828642025589943
    2. 'self' → logprob: -5.383286476135254
    3. '.length' → logprob: -5.758286476135254
    4. 'len' → logprob: -8.383286476135254
    5. ' length' → logprob: -8.383286476135254
    6. '1' → logprob: -11.133286476135254
    7. '_length' → logprob: -11.383286476135254
    8. ')' → logprob: -12.383286476135254
    9. '           ' → logprob: -12.633286476135254
    10. '.' → logprob: -13.133286476135254

Token 1241: ' or' (ID: 503)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6567994356155396
    2. '           ' → logprob: -1.0317994356155396
    3. ':
' → logprob: -2.78179931640625
    4. ' or' → logprob: -3.28179931640625
    5. ':' → logprob: -4.40679931640625
    6. 'or' → logprob: -5.03179931640625
    7. 'and' → logprob: -5.40679931640625
    8. ' and' → logprob: -6.40679931640625
    9. ')' → logprob: -8.53179931640625
    10. '<|end|>' → logprob: -8.78179931640625

Token 1242: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0013959495117887855
    2. ' self' → logprob: -7.251396179199219
    3. '           ' → logprob: -7.376396179199219
    4. '               ' → logprob: -9.876396179199219
    5. '   ' → logprob: -12.626396179199219
    6. ' ' → logprob: -13.501396179199219
    7. '                   ' → logprob: -14.251396179199219
    8. '[self' → logprob: -14.251396179199219
    9. '             ' → logprob: -14.501396179199219
    10. '
' → logprob: -14.501396179199219

Token 1243: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -3.619311974034645e-05
    2. 's' → logprob: -10.250036239624023
    3. ' s' → logprob: -14.875036239624023
    4. '<s' → logprob: -16.500036239624023
    5. '   ' → logprob: -16.750036239624023
    6. '.' → logprob: -16.750036239624023
    7. ' .' → logprob: -17.000036239624023
    8. '.user' → logprob: -17.500036239624023
    9. '<|end|>' → logprob: -17.500036239624023
    10. '	s' → logprob: -17.750036239624023

Token 1244: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -3.023293538717553e-05
    2. 'self' → logprob: -10.500030517578125
    3. '[' → logprob: -13.125030517578125
    4. '[
' → logprob: -15.375030517578125
    5. '   ' → logprob: -15.750030517578125
    6. ' self' → logprob: -16.250030517578125
    7. '```' → logprob: -16.750030517578125
    8. '
' → logprob: -17.500030517578125
    9. '       ' → logprob: -17.750030517578125
    10. '           ' → logprob: -17.875030517578125

Token 1245: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.0009563630446791649
    2. '[self' → logprob: -7.5009565353393555
    3. 'pos' → logprob: -8.000956535339355
    4. 'self' → logprob: -10.375956535339355
    5. '[pos' → logprob: -10.750956535339355
    6. 'Pos' → logprob: -12.125956535339355
    7. '.' → logprob: -12.375956535339355
    8. '_pos' → logprob: -13.125956535339355
    9. '.position' → logprob: -13.375956535339355
    10. '.Pos' → logprob: -14.500956535339355

Token 1246: ']' (ID: 60)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.1935422420501709
    2. '!=' → logprob: -2.318542242050171
    3. '           ' → logprob: -3.443542242050171
    4. ')' → logprob: -4.06854248046875
    5. ']' → logprob: -4.31854248046875
    6. ']!=' → logprob: -4.81854248046875
    7. ')!=' → logprob: -6.06854248046875
    8. '               ' → logprob: -6.56854248046875
    9. '       ' → logprob: -7.44354248046875
    10. '            ' → logprob: -7.81854248046875

Token 1247: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.37761661410331726
    2. ' !=' → logprob: -1.2526166439056396
    3. '           ' → logprob: -4.0026164054870605
    4. ')' → logprob: -5.7526164054870605
    5. ']!=' → logprob: -6.0026164054870605
    6. ')!=' → logprob: -6.6276164054870605
    7. '!='' → logprob: -7.0026164054870605
    8. '       ' → logprob: -7.7526164054870605
    9. ']' → logprob: -8.127616882324219
    10. '==' → logprob: -8.502616882324219

Token 1248: ' ')' (ID: 35910)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0003408263437449932
    2. ')' → logprob: -8.000340461730957
    3. '")' → logprob: -12.625340461730957
    4. ' ')' → logprob: -13.250340461730957
    5. ' ')'' → logprob: -15.875340461730957
    6. '`)' → logprob: -16.500341415405273
    7. ''):' → logprob: -16.750341415405273
    8. '   ' → logprob: -17.125341415405273
    9. '('' → logprob: -17.250341415405273
    10. ''' → logprob: -18.000341415405273

Token 1249: '':
' (ID: 7669)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18172067403793335
    2. ':
' → logprob: -2.306720733642578
    3. '               ' → logprob: -3.681720733642578
    4. 'self' → logprob: -3.931720733642578
    5. ':' → logprob: -4.681720733642578
    6. '):
' → logprob: -5.056720733642578
    7. ')' → logprob: -6.306720733642578
    8. '<|end|>' → logprob: -6.681720733642578
    9. '<|end|>' → logprob: -6.806720733642578
    10. '#' → logprob: -7.306720733642578

Token 1250: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14426694810390472
    2. '               ' → logprob: -2.0192668437957764
    3. 'self' → logprob: -6.5192670822143555
    4. '       ' → logprob: -9.894267082214355
    5. ' self' → logprob: -11.019267082214355
    6. '   ' → logprob: -11.394267082214355
    7. '	       ' → logprob: -12.269267082214355
    8. '```' → logprob: -12.394267082214355
    9. '<|end|>' → logprob: -12.519267082214355
    10. ':
' → logprob: -12.644267082214355

Token 1251: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.3229724168777466
    2. '               ' → logprob: -1.9479724168777466
    3. 'self' → logprob: -2.697972297668457
    4. '                   ' → logprob: -3.072972297668457
    5. ' raise' → logprob: -4.197972297668457
    6. '           ' → logprob: -5.822972297668457
    7. '   ' → logprob: -7.197972297668457
    8. '	raise' → logprob: -7.197972297668457
    9. '                       ' → logprob: -9.572972297668457
    10. 'Raise' → logprob: -9.697972297668457

Token 1252: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.005236956290900707
    2. ' Value' → logprob: -5.255237102508545
    3. '	Value' → logprob: -13.380236625671387
    4. 'Index' → logprob: -14.130236625671387
    5. ' ' → logprob: -15.380236625671387
    6. '.Value' → logprob: -15.630236625671387
    7. '_value' → logprob: -15.880236625671387
    8. '_Value' → logprob: -16.005237579345703
    9. '    ' → logprob: -17.130237579345703
    10. '   ' → logprob: -17.255237579345703

Token 1253: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.000635235570371151
    2. 'Value' → logprob: -7.375635147094727
    3. 'rror' → logprob: -11.875635147094727
    4. 'Index' → logprob: -13.625635147094727
    5. 'alue' → logprob: -16.000635147094727
    6. '.Value' → logprob: -16.375635147094727
    7. 'Out' → logprob: -16.625635147094727
    8. '.Error' → logprob: -17.875635147094727
    9. '   ' → logprob: -18.000635147094727
    10. 'Val' → logprob: -18.125635147094727

Token 1254: '(f' (ID: 1526)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.24319548904895782
    2. '           ' → logprob: -2.2431955337524414
    3. '                   ' → logprob: -3.1181955337524414
    4. '                       ' → logprob: -3.7431955337524414
    5. '(self' → logprob: -4.118195533752441
    6. 'self' → logprob: -5.118195533752441
    7. '(f' → logprob: -5.368195533752441
    8. '       ' → logprob: -5.993195533752441
    9. '(' → logprob: -5.993195533752441
    10. ')' → logprob: -6.243195533752441

Token 1255: '"' (ID: 1)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.49791425466537476
    2. 'Expected' → logprob: -1.3729143142700195
    3. '")' → logprob: -2.4979143142700195
    4. ')' → logprob: -3.4979143142700195
    5. '       ' → logprob: -5.1229143142700195
    6. ' self' → logprob: -5.4979143142700195
    7. '"' → logprob: -5.6229143142700195
    8. '           ' → logprob: -5.9979143142700195
    9. '               ' → logprob: -6.2479143142700195
    10. '   ' → logprob: -6.4979143142700195

Token 1256: 'Expected' (ID: 28041)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6340214014053345
    2. 'Expected' → logprob: -1.1340214014053345
    3. 'raise' → logprob: -2.009021282196045
    4. ' raise' → logprob: -5.384021282196045
    5. '")' → logprob: -5.634021282196045
    6. ')' → logprob: -5.884021282196045
    7. '')' → logprob: -7.009021282196045
    8. 'Unexpected' → logprob: -7.634021282196045
    9. 'expected' → logprob: -8.634021759033203
    10. '       ' → logprob: -8.634021759033203

Token 1257: ' ')'' (ID: 198756)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0004595055361278355
    2. ')' → logprob: -8.375459671020508
    3. '")' → logprob: -8.500459671020508
    4. '')"' → logprob: -11.375459671020508
    5. 'self' → logprob: -12.625459671020508
    6. ' ')'' → logprob: -12.750459671020508
    7. '')")
' → logprob: -12.750459671020508
    8. ')")' → logprob: -13.125459671020508
    9. ')`' → logprob: -14.125459671020508
    10. '`)' → logprob: -14.625459671020508

Token 1258: ' at' (ID: 540)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2801000475883484
    2. 'self' → logprob: -1.9051001071929932
    3. '               ' → logprob: -3.155100107192993
    4. ' at' → logprob: -3.405100107192993
    5. ')' → logprob: -4.405099868774414
    6. ')
' → logprob: -5.780099868774414
    7. '(self' → logprob: -6.530099868774414
    8. '")' → logprob: -7.030099868774414
    9. '):
' → logprob: -7.780099868774414
    10. ':
' → logprob: -8.030099868774414

Token 1259: ' pos' (ID: 1253)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00020425561524461955
    2. ' self' → logprob: -8.500204086303711
    3. '(self' → logprob: -15.000204086303711
    4. '
' → logprob: -15.250204086303711
    5. '           ' → logprob: -15.625204086303711
    6. '               ' → logprob: -17.87520408630371
    7. '   ' → logprob: -18.00020408630371
    8. ' ' → logprob: -18.00020408630371
    9. 's' → logprob: -18.25020408630371
    10. '       ' → logprob: -18.37520408630371

Token 1260: ' {' (ID: 354)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16023580729961395
    2. ' self' → logprob: -1.9102357625961304
    3. '(self' → logprob: -12.035235404968262
    4. '           ' → logprob: -13.160235404968262
    5. '               ' → logprob: -13.160235404968262
    6. '[self' → logprob: -14.535235404968262
    7. '
' → logprob: -15.160235404968262
    8. '                   ' → logprob: -15.285235404968262
    9. 's' → logprob: -15.660235404968262
    10. ',' → logprob: -15.785235404968262

Token 1261: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.0564331205387134e-05
    2. ' self' → logprob: -11.50001049041748
    3. '           ' → logprob: -15.37501049041748
    4. '               ' → logprob: -15.87501049041748
    5. '(self' → logprob: -16.625011444091797
    6. '
' → logprob: -17.750011444091797
    7. '                   ' → logprob: -18.125011444091797
    8. 's' → logprob: -19.500011444091797
    9. '       ' → logprob: -19.750011444091797
    10. '   ' → logprob: -20.125011444091797

Token 1262: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -2.2127087504486553e-05
    2. '.s' → logprob: -11.375021934509277
    3. '.position' → logprob: -12.375021934509277
    4. '.' → logprob: -12.500021934509277
    5. 'pos' → logprob: -13.625021934509277
    6. ' .' → logprob: -14.125021934509277
    7. '.Pos' → logprob: -15.500021934509277
    8. '.self' → logprob: -15.625021934509277
    9. '	pos' → logprob: -16.625022888183594
    10. 'Pos' → logprob: -17.000022888183594

Token 1263: '}")
' (ID: 23577)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06841619312763214
    2. ')' → logprob: -3.068416118621826
    3. '               ' → logprob: -4.443416118621826
    4. '")' → logprob: -5.818416118621826
    5. 'self' → logprob: -6.443416118621826
    6. ',' → logprob: -7.193416118621826
    7. '):
' → logprob: -7.318416118621826
    8. ')
' → logprob: -7.568416118621826
    9. '       ' → logprob: -7.818416118621826
    10. '")
' → logprob: -8.443416595458984

Token 1264: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08512088656425476
    2. '           ' → logprob: -2.585120916366577
    3. 'self' → logprob: -5.085120677947998
    4. '               ' → logprob: -11.585121154785156
    5. ' self' → logprob: -11.710121154785156
    6. '   ' → logprob: -12.710121154785156
    7. '	self' → logprob: -14.460121154785156
    8. '                   ' → logprob: -14.710121154785156
    9. '[self' → logprob: -15.210121154785156
    10. '```' → logprob: -15.460121154785156

Token 1265: ' self' (ID: 1051)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5782739520072937
    2. 'self' (adapté à ' self') → logprob: -0.8282739520072937
    3. '       ' → logprob: -6.078273773193359
    4. ' self' → logprob: -10.45327377319336
    5. '               ' → logprob: -11.95327377319336
    6. '   ' → logprob: -12.82827377319336
    7. '	self' → logprob: -14.32827377319336
    8. '                   ' → logprob: -14.95327377319336
    9. '		' → logprob: -15.57827377319336
    10. '```' → logprob: -15.82827377319336

Token 1266: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -7.896309739408025e-07
    2. 'pos' → logprob: -14.375000953674316
    3. '.' → logprob: -15.750000953674316
    4. '	pos' → logprob: -19.25
    5. ' .' → logprob: -19.75
    6. '_pos' → logprob: -20.625
    7. ' pos' → logprob: -20.75
    8. '.position' → logprob: -21.25
    9. '.p' → logprob: -21.625
    10. '.Pos' → logprob: -21.875

Token 1267: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0005557744298130274
    2. ' +=' → logprob: -7.500555992126465
    3. '           ' → logprob: -13.500555992126465
    4. ']+=' → logprob: -14.125555992126465
    5. '+' → logprob: -14.875555992126465
    6. '       ' → logprob: -16.00055503845215
    7. '   ' → logprob: -16.00055503845215
    8. '```' → logprob: -18.00055503845215
    9. '          ' → logprob: -18.62555503845215
    10. '               ' → logprob: -18.75055503845215

Token 1268: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '   ' → logprob: -19.375
    4. '```' → logprob: -20.875
    5. '           ' → logprob: -22.0
    6. '       ' → logprob: -22.625
    7. '
' → logprob: -22.625
    8. '۱' → logprob: -23.125
    9. '+' → logprob: -23.25
    10. '#' → logprob: -23.25

Token 1269: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -19.5
    3. '   ' → logprob: -21.5
    4. '```' → logprob: -22.25
    5. '
' → logprob: -23.875
    6. '       ' → logprob: -24.5
    7. '１' → logprob: -24.875
    8. '۱' → logprob: -25.0
    9. '+' → logprob: -25.25
    10. '-' → logprob: -25.625

Token 1270: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011134239612147212
    2. '       ' → logprob: -6.876113414764404
    3. 'return' → logprob: -10.126113891601562
    4. '		' → logprob: -11.376113891601562
    5. '<|end|>' → logprob: -11.751113891601562
    6. '   ' → logprob: -11.876113891601562
    7. '	       ' → logprob: -12.001113891601562
    8. '               ' → logprob: -13.001113891601562
    9. '<|end|>' → logprob: -13.501113891601562
    10. ' return' → logprob: -13.751113891601562

Token 1271: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3216843008995056
    2. '       ' → logprob: -1.3216843605041504
    3. 'return' → logprob: -4.82168436050415
    4. '   ' → logprob: -8.071683883666992
    5. ' return' → logprob: -11.196683883666992
    6. '	return' → logprob: -13.071683883666992
    7. '		' → logprob: -13.071683883666992
    8. '               ' → logprob: -13.071683883666992
    9. '	       ' → logprob: -15.071683883666992
    10. '                   ' → logprob: -15.196683883666992

Token 1272: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.02373058907687664
    2. '           ' → logprob: -3.773730516433716
    3. '       ' → logprob: -7.773730754852295
    4. 'return' → logprob: -9.898730278015137
    5. ' if' → logprob: -11.273730278015137
    6. '   ' → logprob: -14.023730278015137
    7. '	if' → logprob: -15.273730278015137
    8. '
' → logprob: -15.898730278015137
    9. 'If' → logprob: -17.023731231689453
    10. '               ' → logprob: -17.273731231689453

Token 1273: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.17978794872760773
    2. ' op' → logprob: -1.8047879934310913
    3. '           ' → logprob: -10.554787635803223
    4. '(op' → logprob: -11.929787635803223
    5. '	op' → logprob: -13.054787635803223
    6. '   ' → logprob: -13.554787635803223
    7. '       ' → logprob: -13.554787635803223
    8. 'X' → logprob: -13.804787635803223
    9. 'opf' → logprob: -13.804787635803223
    10. 'self' → logprob: -14.554787635803223

Token 1274: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.20267264544963837
    2. '==' → logprob: -1.7026726007461548
    3. '=='' → logprob: -6.702672481536865
    4. '=' → logprob: -11.452672958374023
    5. '==
' → logprob: -11.827672958374023
    6. '=="' → logprob: -12.327672958374023
    7. '===' → logprob: -13.452672958374023
    8. ')==' → logprob: -13.827672958374023
    9. ' =='' → logprob: -14.202672958374023
    10. ' ==
' → logprob: -14.327672958374023

Token 1275: ' '*' (ID: 34958)
  Prédit: ''^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''^' → logprob: -0.01815415732562542
    2. ''*' → logprob: -4.018154144287109
    3. ' '^' → logprob: -13.26815414428711
    4. ''' → logprob: -13.39315414428711
    5. '^' → logprob: -14.64315414428711
    6. '"*' → logprob: -15.26815414428711
    7. '   ' → logprob: -16.26815414428711
    8. '"' → logprob: -16.26815414428711
    9. ' ' → logprob: -16.51815414428711
    10. ' '*' → logprob: -18.01815414428711

Token 1276: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.030948946252465248
    2. 'return' → logprob: -4.155949115753174
    3. '           ' → logprob: -4.780949115753174
    4. '               ' → logprob: -5.780949115753174
    5. ':' → logprob: -6.030949115753174
    6. '):
' → logprob: -7.780949115753174
    7. ' return' → logprob: -8.780948638916016
    8. '       ' → logprob: -9.155948638916016
    9. ':return' → logprob: -9.155948638916016
    10. 'And' → logprob: -9.780948638916016

Token 1277: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10052700340747833
    2. 'return' → logprob: -2.600527048110962
    3. '               ' → logprob: -3.850527048110962
    4. '       ' → logprob: -9.600526809692383
    5. ' return' → logprob: -9.725526809692383
    6. ':' → logprob: -12.600526809692383
    7. ':return' → logprob: -12.725526809692383
    8. ':
' → logprob: -13.975526809692383
    9. '   ' → logprob: -14.975526809692383
    10. '		' → logprob: -15.100526809692383

Token 1278: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00036514020757749677
    2. '               ' → logprob: -8.000365257263184
    3. ' return' → logprob: -10.500365257263184
    4. '           ' → logprob: -13.125365257263184
    5. '   ' → logprob: -17.125364303588867
    6. '	return' → logprob: -17.750364303588867
    7. ':return' → logprob: -18.250364303588867
    8. '{return' → logprob: -18.375364303588867
    9. '```' → logprob: -18.375364303588867
    10. '                   ' → logprob: -18.500364303588867

Token 1279: ' And' (ID: 1958)
  Prédit: 'And'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'And' → logprob: 0.0
    2. ' And' → logprob: -20.0
    3. '   ' → logprob: -22.375
    4. 'AND' → logprob: -24.375
    5. 'An' → logprob: -25.0
    6. '.And' → logprob: -25.0
    7. 'and' → logprob: -25.25
    8. '  ' → logprob: -26.125
    9. '_and' → logprob: -26.125
    10. ' ' → logprob: -26.875

Token 1280: '(left' (ID: 32958)
  Prédit: '(left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -2.7729658540920354e-05
    2. 'left' → logprob: -10.625027656555176
    3. '(' → logprob: -12.625027656555176
    4. ',left' → logprob: -17.125028610229492
    5. '[left' → logprob: -17.375028610229492
    6. '(
' → logprob: -17.500028610229492
    7. ' left' → logprob: -18.000028610229492
    8. '   ' → logprob: -19.500028610229492
    9. ':left' → logprob: -19.500028610229492
    10. '	left' → logprob: -19.875028610229492

Token 1281: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002497302368283272
    2. ',right' → logprob: -6.00249719619751
    3. ' ,' → logprob: -10.877497673034668
    4. ',
' → logprob: -13.252497673034668
    5. ',left' → logprob: -14.127497673034668
    6. 'right' → logprob: -15.502497673034668
    7. ',r' → logprob: -18.12749671936035
    8. '           ' → logprob: -19.50249671936035
    9. ')' → logprob: -19.50249671936035
    10. '   ' → logprob: -19.75249671936035

Token 1282: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0001234428636962548
    2. ' right' → logprob: -9.000123023986816
    3. '               ' → logprob: -18.625123977661133
    4. '	right' → logprob: -19.125123977661133
    5. '                   ' → logprob: -21.000123977661133
    6. '   ' → logprob: -21.125123977661133
    7. '[right' → logprob: -21.250123977661133
    8. '           ' → logprob: -21.375123977661133
    9. '(right' → logprob: -21.500123977661133
    10. 'Right' → logprob: -21.750123977661133

Token 1283: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004474732850212604
    2. ')
' → logprob: -8.125447273254395
    3. '           ' → logprob: -8.875447273254395
    4. '       ' → logprob: -11.500447273254395
    5. ')return' → logprob: -14.125447273254395
    6. '<|end|>' → logprob: -15.250447273254395
    7. '   ' → logprob: -16.00044822692871
    8. ' )' → logprob: -16.25044822692871
    9. '),' → logprob: -16.37544822692871
    10. '<|end|>' → logprob: -16.50044822692871

Token 1284: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000273971410933882
    2. '       ' → logprob: -8.375273704528809
    3. 'else' → logprob: -11.125273704528809
    4. 'return' → logprob: -11.250273704528809
    5. 'elif' → logprob: -11.625273704528809
    6. '
' → logprob: -13.000273704528809
    7. 'if' → logprob: -13.125273704528809
    8. '               ' → logprob: -14.125273704528809
    9. '```' → logprob: -14.250273704528809
    10. '          ' → logprob: -15.250273704528809

Token 1285: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02477557584643364
    2. 'else' (adapté à ' else') → logprob: -4.399775505065918
    3. 'return' → logprob: -5.024775505065918
    4. 'elif' → logprob: -5.899775505065918
    5. '       ' → logprob: -6.399775505065918
    6. 'if' → logprob: -6.774775505065918
    7. ' else' → logprob: -10.149775505065918
    8. '               ' → logprob: -11.024775505065918
    9. '
' → logprob: -12.649775505065918
    10. ' elif' → logprob: -12.899775505065918

Token 1286: ':
' (ID: 734)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.46770644187927246
    2. '           ' → logprob: -1.7177064418792725
    3. '               ' → logprob: -2.4677064418792725
    4. ':
' → logprob: -3.2177064418792725
    5. ':' → logprob: -3.4677064418792725
    6. ' return' → logprob: -3.7177064418792725
    7. ':return' → logprob: -4.592706680297852
    8. '       ' → logprob: -5.967706680297852
    9. '   ' → logprob: -8.217706680297852
    10. '          ' → logprob: -8.967706680297852

Token 1287: '               ' (ID: 506)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.10587906837463379
    2. '           ' → logprob: -2.605879068374634
    3. '       ' → logprob: -4.230878829956055
    4. ' return' → logprob: -4.605878829956055
    5. '               ' → logprob: -6.480878829956055
    6. 'X' → logprob: -7.605878829956055
    7. '                   ' → logprob: -10.355878829956055
    8. '   ' → logprob: -11.230878829956055
    9. '{return' → logprob: -11.980878829956055
    10. ' X' → logprob: -12.230878829956055

Token 1288: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00016599490481894463
    2. ' return' → logprob: -8.750165939331055
    3. '           ' → logprob: -12.250165939331055
    4. '               ' → logprob: -13.000165939331055
    5. '       ' → logprob: -15.000165939331055
    6. 'X' → logprob: -16.625165939331055
    7. '   ' → logprob: -17.500165939331055
    8. ':return' → logprob: -17.875165939331055
    9. '{return' → logprob: -18.875165939331055
    10. '                   ' → logprob: -18.875165939331055

Token 1289: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.00033546582562848926
    2. ' X' → logprob: -8.000335693359375
    3. '           ' → logprob: -18.000335693359375
    4. '   ' → logprob: -18.000335693359375
    5. '       ' → logprob: -18.625335693359375
    6. '  ' → logprob: -19.250335693359375
    7. ' ' → logprob: -19.250335693359375
    8. '               ' → logprob: -19.625335693359375
    9. '      ' → logprob: -22.125335693359375
    10. '     ' → logprob: -22.375335693359375

Token 1290: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.00023858259373810142
    2. 'Or' → logprob: -8.375238418579102
    3. 'X' → logprob: -11.875238418579102
    4. 'xor' → logprob: -14.375238418579102
    5. 'o' → logprob: -15.750238418579102
    6. '_or' → logprob: -15.875238418579102
    7. '(or' → logprob: -16.1252384185791
    8. 'ot' → logprob: -16.8752384185791
    9. ' or' → logprob: -17.2502384185791
    10. 'OR' → logprob: -17.7502384185791

Token 1291: '(left' (ID: 32958)
  Prédit: '(right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(right' → logprob: -0.00038407891406677663
    2. 'right' → logprob: -8.500384330749512
    3. '(left' → logprob: -8.750384330749512
    4. '(' → logprob: -11.750384330749512
    5. '(
' → logprob: -12.250384330749512
    6. '[right' → logprob: -12.375384330749512
    7. ' right' → logprob: -13.000384330749512
    8. ',right' → logprob: -14.000384330749512
    9. '.right' → logprob: -14.375384330749512
    10. 'Right' → logprob: -14.500384330749512

Token 1292: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.578184497309849e-05
    2. ',right' → logprob: -9.500085830688477
    3. ' ,' → logprob: -11.625085830688477
    4. ',left' → logprob: -14.000085830688477
    5. ',
' → logprob: -14.750085830688477
    6. '(right' → logprob: -15.250085830688477
    7. ')' → logprob: -15.625085830688477
    8. 'right' → logprob: -15.875085830688477
    9. '           ' → logprob: -16.250085830688477
    10. '(left' → logprob: -18.125085830688477

Token 1293: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0031777136027812958
    2. ' right' → logprob: -5.753177642822266
    3. '	right' → logprob: -17.378177642822266
    4. '           ' → logprob: -17.503177642822266
    5. '               ' → logprob: -17.628177642822266
    6. '(right' → logprob: -18.003177642822266
    7. '[right' → logprob: -19.003177642822266
    8. '   ' → logprob: -19.378177642822266
    9. ',right' → logprob: -19.503177642822266
    10. '.right' → logprob: -19.628177642822266

Token 1294: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007320931763388216
    2. '<|end|>' → logprob: -7.375731945037842
    3. '       ' → logprob: -9.500732421875
    4. ')
' → logprob: -11.375732421875
    5. ')return' → logprob: -11.500732421875
    6. '<|end|>' → logprob: -12.625732421875
    7. '           ' → logprob: -13.500732421875
    8. '')' → logprob: -13.750732421875
    9. ' )' → logprob: -14.625732421875
    10. '   ' → logprob: -14.875732421875

Token 1295: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1296: ' raise' (ID: 9338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005698331515304744
    2. 'raise' (adapté à ' raise') → logprob: -7.500569820404053
    3. '	raise' → logprob: -12.000570297241211
    4. '<|end|>' → logprob: -12.500570297241211
    5. '           ' → logprob: -12.875570297241211
    6. ' raise' → logprob: -13.625570297241211
    7. '   ' → logprob: -14.000570297241211
    8. 'raises' → logprob: -14.875570297241211
    9. '```' → logprob: -14.875570297241211
    10. '#' → logprob: -15.000570297241211

Token 1297: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -4.127333340875339e-06
    2. 'Syntax' → logprob: -12.500003814697266
    3. ' Value' → logprob: -15.000003814697266
    4. '_value' → logprob: -18.875003814697266
    5. 'Runtime' → logprob: -19.500003814697266
    6. '(Value' → logprob: -19.500003814697266
    7. 'value' → logprob: -19.750003814697266
    8. '_Value' → logprob: -20.875003814697266
    9. 'EOF' → logprob: -21.250003814697266
    10. '.Value' → logprob: -22.375003814697266

Token 1298: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -7.107425062713446e-06
    2. 'Value' → logprob: -13.375006675720215
    3. '(f' → logprob: -13.500006675720215
    4. 'rror' → logprob: -13.625006675720215
    5. '("' → logprob: -14.250006675720215
    6. 'Token' → logprob: -15.125006675720215
    7. '(' → logprob: -15.125006675720215
    8. 'f' → logprob: -15.125006675720215
    9. '(Error' → logprob: -15.125006675720215
    10. 'SError' → logprob: -15.250006675720215

Token 1299: '(f' (ID: 1526)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.31433647871017456
    2. '(f' → logprob: -1.3143365383148193
    3. '(' → logprob: -7.06433629989624
    4. '(
' → logprob: -9.064336776733398
    5. '('' → logprob: -9.564336776733398
    6. 'f' → logprob: -10.939336776733398
    7. '("("' → logprob: -12.189336776733398
    8. '(("' → logprob: -13.064336776733398
    9. '(F' → logprob: -13.189336776733398
    10. '   ' → logprob: -13.189336776733398

Token 1300: '"' (ID: 1)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.07520537823438644
    2. 'Unexpected' → logprob: -3.4502053260803223
    3. '"' → logprob: -3.5752053260803223
    4. '(f' → logprob: -4.575205326080322
    5. ' f' → logprob: -6.075205326080322
    6. '("' → logprob: -10.07520580291748
    7. 'Invalid' → logprob: -10.57520580291748
    8. ' Unexpected' → logprob: -11.70020580291748
    9. 'unexpected' → logprob: -12.45020580291748
    10. 'Un' → logprob: -12.70020580291748

Token 1301: 'Unexpected' (ID: 59338)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.47516244649887085
    2. 'Unexpected' → logprob: -0.9751624464988708
    3. 'Invalid' → logprob: -6.975162506103516
    4. '"' → logprob: -9.350162506103516
    5. ' f' → logprob: -10.600162506103516
    6. 'self' → logprob: -11.100162506103516
    7. 'Unknown' → logprob: -11.850162506103516
    8. 'EOF' → logprob: -12.725162506103516
    9. '(f' → logprob: -13.100162506103516
    10. ' Unexpected' → logprob: -13.100162506103516

Token 1302: ' char' (ID: 1826)
  Prédit: ' character'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' character' → logprob: -0.9100009799003601
    2. 'character' → logprob: -1.2850010395050049
    3. 'c' → logprob: -1.4100010395050049
    4. 'char' → logprob: -3.410001039505005
    5. 'token' → logprob: -4.160000801086426
    6. ' c' → logprob: -4.785000801086426
    7. 's' → logprob: -5.410000801086426
    8. 'self' → logprob: -5.535000801086426
    9. 'f' → logprob: -5.660000801086426
    10. 'Character' → logprob: -5.910000801086426

Token 1303: ' {' (ID: 354)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.22122152149677277
    2. '(self' → logprob: -2.846221446990967
    3. ' (' → logprob: -3.096221446990967
    4. '(' → logprob: -3.096221446990967
    5. '(f' → logprob: -3.346221446990967
    6. ' f' → logprob: -4.846221446990967
    7. ' self' → logprob: -5.596221446990967
    8. '(s' → logprob: -7.471221446990967
    9. 'f' → logprob: -7.596221446990967
    10. '{' → logprob: -7.846221446990967

Token 1304: 'c' (ID: 66)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20185630023479462
    2. 'c' → logprob: -1.701856255531311
    3. '{' → logprob: -8.57685661315918
    4. ' self' → logprob: -8.95185661315918
    5. 'repr' → logprob: -9.57685661315918
    6. '(self' → logprob: -10.95185661315918
    7. 's' → logprob: -11.20185661315918
    8. ' c' → logprob: -11.45185661315918
    9. '}' → logprob: -11.70185661315918
    10. '   ' → logprob: -13.82685661315918

Token 1305: '}' (ID: 92)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.003573695896193385
    2. 'at' → logprob: -6.253573894500732
    3. ')' → logprob: -6.753573894500732
    4. ' ' → logprob: -8.378573417663574
    5. '}' → logprob: -8.628573417663574
    6. ' )' → logprob: -10.878573417663574
    7. '  ' → logprob: -11.503573417663574
    8. ' ' → logprob: -11.878573417663574
    9. ' a' → logprob: -12.003573417663574
    10. '   ' → logprob: -12.378573417663574

Token 1306: ' at' (ID: 540)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05462169274687767
    2. ' at' → logprob: -3.054621696472168
    3. '")' → logprob: -6.054621696472168
    4. '       ' → logprob: -6.429621696472168
    5. ' )' → logprob: -6.679621696472168
    6. '   ' → logprob: -8.554621696472168
    7. 'self' → logprob: -8.554621696472168
    8. '')' → logprob: -9.679621696472168
    9. '}' → logprob: -9.929621696472168
    10. '"' → logprob: -10.179621696472168

Token 1307: ' pos' (ID: 1253)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.038980018347501755
    2. 'pos' → logprob: -3.288980007171631
    3. ' self' → logprob: -7.038980007171631
    4. 'position' → logprob: -9.788980484008789
    5. ' pos' → logprob: -12.288980484008789
    6. ' position' → logprob: -14.663980484008789
    7. 'this' → logprob: -18.66398048400879
    8. 'line' → logprob: -19.41398048400879
    9. '(self' → logprob: -19.53898048400879
    10. 'index' → logprob: -19.66398048400879

Token 1308: ' {' (ID: 354)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.4797171950340271
    2. 'self' → logprob: -0.9797171950340271
    3. '{' → logprob: -5.229717254638672
    4. ' {' → logprob: -8.229717254638672
    5. '0' → logprob: -14.604717254638672
    6. '
' → logprob: -14.729717254638672
    7. '{}' → logprob: -14.854717254638672
    8. ' ' → logprob: -15.104717254638672
    9. '(self' → logprob: -15.354717254638672
    10. 's' → logprob: -15.479717254638672

Token 1309: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.8889261304575484e-06
    2. ' self' → logprob: -12.500003814697266
    3. '
' → logprob: -16.750003814697266
    4. '       ' → logprob: -17.375003814697266
    5. '           ' → logprob: -18.500003814697266
    6. '0' → logprob: -19.500003814697266
    7. '   ' → logprob: -19.625003814697266
    8. '(self' → logprob: -20.500003814697266
    9. '{' → logprob: -20.625003814697266
    10. 'elf' → logprob: -21.000003814697266

Token 1310: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.00043138445471413434
    2. 'pos' → logprob: -7.875431537628174
    3. '.' → logprob: -10.000431060791016
    4. '.position' → logprob: -12.250431060791016
    5. '.user' → logprob: -15.625431060791016
    6. 'Pos' → logprob: -15.625431060791016
    7. '	pos' → logprob: -15.875431060791016
    8. ').' → logprob: -16.375431060791016
    9. '[pos' → logprob: -16.375431060791016
    10. '_pos' → logprob: -16.375431060791016

Token 1311: '}"' (ID: 21503)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019207760924473405
    2. '")' → logprob: -7.251920700073242
    3. ')")' → logprob: -7.251920700073242
    4. '}")' → logprob: -8.126920700073242
    5. '}' → logprob: -9.251920700073242
    6. '       ' → logprob: -9.501920700073242
    7. ')}' → logprob: -11.001920700073242
    8. ')">' → logprob: -12.251920700073242
    9. '   ' → logprob: -12.501920700073242
    10. ' )' → logprob: -12.751920700073242

Token 1312: ')


' (ID: 7861)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1313: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05726517364382744
    2. 'class' → logprob: -3.807265281677246
    3. '#' → logprob: -3.932265281677246
    4. '<|end|>' → logprob: -4.807265281677246
    5. '```' → logprob: -5.557265281677246
    6. '@' → logprob: -6.932265281677246
    7. 'import' → logprob: -8.182265281677246
    8. '@pytest' → logprob: -8.307265281677246
    9. '<|end|>' → logprob: -8.807265281677246
    10. '
' → logprob: -10.307265281677246

Token 1314: ' Truth' (ID: 47310)
  Prédit: 'Evaluator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Evaluator' → logprob: -0.18374328315258026
    2. 'Expr' → logprob: -3.0587432384490967
    3. 'Simpl' → logprob: -3.4337432384490967
    4. 'Bool' → logprob: -3.6837432384490967
    5. 'Truth' → logprob: -4.308743476867676
    6. 'Normalizer' → logprob: -4.308743476867676
    7. 'Expression' → logprob: -4.933743476867676
    8. 'DN' → logprob: -5.558743476867676
    9. 'Test' → logprob: -5.558743476867676
    10. 'Eval' → logprob: -5.558743476867676

Token 1315: 'Table' (ID: 3429)
  Prédit: 'Table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Table' → logprob: -0.0006348780007101595
    2. 'Tab' → logprob: -7.375634670257568
    3. '<Table' → logprob: -13.500635147094727
    4. '_Table' → logprob: -13.875635147094727
    5. 'Tables' → logprob: -13.875635147094727
    6. 'Truth' → logprob: -14.250635147094727
    7. 'Tree' → logprob: -14.375635147094727
    8. 'Map' → logprob: -14.500635147094727
    9. '	Table' → logprob: -14.500635147094727
    10. '_table' → logprob: -14.750635147094727

Token 1316: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08929242938756943
    2. ':
' → logprob: -2.464292526245117
    3. '(B' → logprob: -8.339292526245117
    4. '(' → logprob: -9.839292526245117
    5. '   ' → logprob: -11.339292526245117
    6. 'def' → logprob: -11.464292526245117
    7. ':def' → logprob: -12.339292526245117
    8. '(object' → logprob: -12.589292526245117
    9. '```' → logprob: -12.589292526245117
    10. ':

' → logprob: -12.839292526245117

Token 1317: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00021784115233458579
    2. 'def' → logprob: -8.62521743774414
    3. '__' → logprob: -10.37521743774414
    4. '	def' → logprob: -12.25021743774414
    5. ' def' → logprob: -14.62521743774414
    6. 'class' → logprob: -14.75021743774414
    7. 'slots' → logprob: -15.37521743774414
    8. '    
' → logprob: -15.50021743774414
    9. '(' → logprob: -15.87521743774414
    10. '```' → logprob: -15.87521743774414

Token 1318: ' """
' (ID: 7037)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.10810499638319016
    2. 'def' → logprob: -2.983104944229126
    3. '   ' → logprob: -4.108105182647705
    4. 'variables' → logprob: -4.233105182647705
    5. '_vars' → logprob: -4.608105182647705
    6. '_V' → logprob: -6.108105182647705
    7. ' __' → logprob: -6.608105182647705
    8. 'VARIABLE' → logprob: -6.608105182647705
    9. 'vars' → logprob: -6.733105182647705
    10. 'VAR' → logprob: -6.733105182647705

Token 1319: '   ' (ID: 271)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.000156577822053805
    2. '   ' → logprob: -9.12515640258789
    3. 'def' → logprob: -11.12515640258789
    4. ' __' → logprob: -11.25015640258789
    5. 'slots' → logprob: -12.12515640258789
    6. '___' → logprob: -12.62515640258789
    7. '.__' → logprob: -12.87515640258789
    8. 'staticmethod' → logprob: -13.25015640258789
    9. 'class' → logprob: -13.50015640258789
    10. '"""
' → logprob: -13.87515640258789

Token 1320: ' Ab' (ID: 3483)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.05587019398808479
    2. 'def' → logprob: -3.055870294570923
    3. 'variables' → logprob: -5.305870056152344
    4. '_vars' → logprob: -7.055870056152344
    5. 'slots' → logprob: -7.680870056152344
    6. 'vars' → logprob: -8.555870056152344
    7. '_variables' → logprob: -8.680870056152344
    8. 'VARIABLE' → logprob: -8.680870056152344
    9. 'VAR' → logprob: -9.055870056152344
    10. ' def' → logprob: -9.555870056152344

Token 1321: 'straction' (ID: 79887)
  Prédit: 'stract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stract' → logprob: -0.003058992326259613
    2. 'class' → logprob: -6.878058910369873
    3. '"""
' → logprob: -7.128058910369873
    4. 'solute' → logprob: -7.753058910369873
    5. 'str' → logprob: -8.378059387207031
    6. 'ility' → logprob: -8.878059387207031
    7. '   ' → logprob: -9.003059387207031
    8. 'le' → logprob: -9.628059387207031
    9. 'straction' → logprob: -9.878059387207031
    10. 'solutely' → logprob: -10.003059387207031

Token 1322: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.431755930185318
    2. ':
' → logprob: -1.9317559003829956
    3. 'class' → logprob: -2.181756019592285
    4. ':' → logprob: -2.556756019592285
    5. '(' → logprob: -4.681756019592285
    6. 'for' → logprob: -6.056756019592285
    7. ' for' → logprob: -6.556756019592285
    8. '(
' → logprob: -7.431756019592285
    9. 'def' → logprob: -8.181756019592285
    10. '```' → logprob: -8.306756019592285

Token 1323: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.5219739079475403
    2. 'generate' → logprob: -1.5219738483428955
    3. 'represent' → logprob: -2.5219738483428955
    4. 'store' → logprob: -3.2719738483428955
    5. 'class' → logprob: -3.7719738483428955
    6. 'evaluate' → logprob: -4.271974086761475
    7. '__' → logprob: -5.021974086761475
    8. 'build' → logprob: -5.021974086761475
    9. '"""
' → logprob: -5.396974086761475
    10. 'handle' → logprob: -5.646974086761475

Token 1324: ' and' (ID: 326)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1858093738555908
    2. 'the' → logprob: -1.1858093738555908
    3. 'truth' → logprob: -2.060809373855591
    4. 'and' → logprob: -2.435809373855591
    5. 'all' → logprob: -2.685809373855591
    6. 'class' → logprob: -2.935809373855591
    7. 'values' → logprob: -4.310809135437012
    8. 'possible' → logprob: -4.810809135437012
    9. 'variable' → logprob: -5.560809135437012
    10. 'from' → logprob: -5.685809135437012

Token 1325: ' represent' (ID: 5188)
  Prédit: 'store'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'store' → logprob: -0.7961758375167847
    2. 'cache' → logprob: -1.1711758375167847
    3. 'represent' → logprob: -1.5461758375167847
    4. 'man' → logprob: -4.546175956726074
    5. 'compare' → logprob: -5.171175956726074
    6. 'handle' → logprob: -5.921175956726074
    7. 'manage' → logprob: -6.296175956726074
    8. 'work' → logprob: -6.546175956726074
    9. 'enumer' → logprob: -6.671175956726074
    10. 'evaluate' → logprob: -7.921175956726074

Token 1326: ' truth' (ID: 12388)
  Prédit: 'truth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'truth' → logprob: -0.49318385124206543
    2. 'the' → logprob: -1.8681838512420654
    3. 'boolean' → logprob: -2.3681838512420654
    4. 'Boolean' → logprob: -2.7431838512420654
    5. 'a' → logprob: -2.7431838512420654
    6. 'bool' → logprob: -5.1181840896606445
    7. 'def' → logprob: -6.7431840896606445
    8. ' Boolean' → logprob: -6.7431840896606445
    9. 'all' → logprob: -6.9931840896606445
    10. ' boolean' → logprob: -7.1181840896606445

Token 1327: ' tables' (ID: 16584)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48968392610549927
    2. 'tables' → logprob: -0.9896839261054993
    3. 'table' → logprob: -4.614684104919434
    4. ' tables' → logprob: -5.614684104919434
    5. '_table' → logprob: -7.614684104919434
    6. ' ' → logprob: -7.614684104919434
    7. '_tables' → logprob: -7.864684104919434
    8. '
' → logprob: -8.864684104919434
    9. ' table' → logprob: -9.239684104919434
    10. 'Table' → logprob: -9.364684104919434

Token 1328: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1957954317331314
    2. ' for' → logprob: -2.1957955360412598
    3. 'for' → logprob: -2.8207955360412598
    4. ' of' → logprob: -6.19579553604126
    5. '(' → logprob: -6.44579553604126
    6. '(
' → logprob: -6.94579553604126
    7. 'of' → logprob: -7.69579553604126
    8. ':' → logprob: -7.94579553604126
    9. ',' → logprob: -8.320795059204102
    10. 'with' → logprob: -8.445795059204102

Token 1329: ' Boolean' (ID: 12759)
  Prédit: 'Bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Bool' → logprob: -0.3245255947113037
    2. 'Boolean' → logprob: -1.3245255947113037
    3. 'a' → logprob: -5.324525833129883
    4. 'boolean' → logprob: -5.449525833129883
    5. 'bool' → logprob: -6.824525833129883
    6. 'express' → logprob: -7.574525833129883
    7. '#' → logprob: -8.824525833129883
    8. 'class' → logprob: -9.074525833129883
    9. ' Boolean' → logprob: -9.824525833129883
    10. ' Bool' → logprob: -10.199525833129883

Token 1330: ' expressions' (ID: 43578)
  Prédit: 'express'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'express' → logprob: -0.011874547228217125
    2. 'functions' → logprob: -4.511874675750732
    3. ' expressions' → logprob: -7.511874675750732
    4. 'def' → logprob: -9.386874198913574
    5. 'expr' → logprob: -9.511874198913574
    6. ' functions' → logprob: -10.011874198913574
    7. '
' → logprob: -10.636874198913574
    8. 'variables' → logprob: -10.886874198913574
    9. ' four' → logprob: -11.636874198913574
    10. '4' → logprob: -11.636874198913574

Token 1331: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10294292122125626
    2. ':' → logprob: -3.102942943572998
    3. ':
' → logprob: -3.102942943572998
    4. '(' → logprob: -5.352942943572998
    5. 'def' → logprob: -6.852942943572998
    6. '):
' → logprob: -7.102942943572998
    7. '):' → logprob: -7.977942943572998
    8. 'class' → logprob: -8.22794246673584
    9. 'from' → logprob: -8.22794246673584
    10. ')' → logprob: -8.97794246673584

Token 1332: ' ' (ID: 220)
  Prédit: 'up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'up' → logprob: -1.069883108139038
    2. '4' → logprob: -1.194883108139038
    3. 'four' → logprob: -1.319883108139038
    4. 'variables' → logprob: -2.819883108139038
    5. ' up' → logprob: -5.069883346557617
    6. 'a' → logprob: -5.194883346557617
    7. 'fixed' → logprob: -5.319883346557617
    8. ' four' → logprob: -6.319883346557617
    9. 'all' → logprob: -6.319883346557617
    10. 'vars' → logprob: -6.444883346557617

Token 1333: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.813057005405426
    2. 'four' → logprob: -1.5630569458007812
    3. 'variables' → logprob: -1.9380569458007812
    4. 'up' → logprob: -2.4380569458007812
    5. 'vars' → logprob: -3.1880569458007812
    6. 'fixed' → logprob: -3.9380569458007812
    7. '__' → logprob: -4.063056945800781
    8. ''' → logprob: -4.688056945800781
    9. 'slots' → logprob: -4.688056945800781
    10. 'all' → logprob: -5.688056945800781

Token 1334: ' vars' (ID: 36194)
  Prédit: 'variables'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'variables' → logprob: -0.49927809834480286
    2. ' variables' → logprob: -1.2492780685424805
    3. 'vars' → logprob: -2.2492780685424805
    4. 'bits' → logprob: -7.7492780685424805
    5. '_vars' → logprob: -9.12427806854248
    6. 'inputs' → logprob: -9.24927806854248
    7. 'var' → logprob: -9.62427806854248
    8. ' vars' → logprob: -9.74927806854248
    9. 'variable' → logprob: -10.62427806854248
    10. '_variables' → logprob: -10.74927806854248

Token 1335: '.
' (ID: 558)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.09721732884645462
    2. '   ' → logprob: -3.222217321395874
    3. '(a' → logprob: -3.597217321395874
    4. 'a' → logprob: -4.472217559814453
    5. ':' → logprob: -5.347217559814453
    6. ' ('' → logprob: -5.722217559814453
    7. '(' → logprob: -6.222217559814453
    8. ' (' → logprob: -7.222217559814453
    9. '.' → logprob: -7.347217559814453
    10. '
' → logprob: -7.472217559814453

Token 1336: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017845372203737497
    2. 'def' → logprob: -6.751784324645996
    3. '
' → logprob: -8.876784324645996
    4. '    
' → logprob: -9.001784324645996
    5. '__' → logprob: -9.251784324645996
    6. '_vars' → logprob: -9.251784324645996
    7. 'class' → logprob: -9.626784324645996
    8. '_slots' → logprob: -11.001784324645996
    9. '_variables' → logprob: -11.126784324645996
    10. ' def' → logprob: -11.126784324645996

Token 1337: ' Enc' (ID: 26858)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06657516956329346
    2. 'def' → logprob: -3.566575050354004
    3. '__' → logprob: -4.316575050354004
    4. '_vars' → logprob: -4.316575050354004
    5. ' def' → logprob: -5.441575050354004
    6. 'vars' → logprob: -6.566575050354004
    7. 'variables' → logprob: -7.191575050354004
    8. '_V' → logprob: -7.691575050354004
    9. 'var' → logprob: -7.941575050354004
    10. '_variables' → logprob: -7.941575050354004

Token 1338: 'aps' (ID: 3506)
  Prédit: 'aps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aps' → logprob: -0.48536035418510437
    2. 'oded' → logprob: -1.4853603839874268
    3. 'odes' → logprob: -1.9853603839874268
    4. 'ode' → logprob: -4.610360145568848
    5. 'apsulation' → logprob: -5.360360145568848
    6. 'oding' → logprob: -5.610360145568848
    7. 'omp' → logprob: -6.985360145568848
    8. 'om' → logprob: -7.110360145568848
    9. 'od' → logprob: -8.860360145568848
    10. 'ods' → logprob: -9.235360145568848

Token 1339: 'ulates' (ID: 52494)
  Prédit: 'ulates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulates' → logprob: -0.012427827343344688
    2. 'ulating' → logprob: -4.512427806854248
    3. 'ulated' → logprob: -6.762427806854248
    4. 'ulate' → logprob: -9.387428283691406
    5. 'lates' → logprob: -9.512428283691406
    6. 'u' → logprob: -10.137428283691406
    7. 'ates' → logprob: -11.387428283691406
    8. 'aps' → logprob: -12.387428283691406
    9. 'l' → logprob: -13.262428283691406
    10. '   ' → logprob: -13.387428283691406

Token 1340: ' mapping' (ID: 22573)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.124810814857483
    2. 'def' → logprob: -2.1248106956481934
    3. 'variables' → logprob: -2.2498106956481934
    4. '__' → logprob: -2.2498106956481934
    5. 'vars' → logprob: -2.4998106956481934
    6. '('' → logprob: -3.1248106956481934
    7. 'a' → logprob: -3.2498106956481934
    8. ''s' → logprob: -3.4998106956481934
    9. '_vars' → logprob: -3.4998106956481934
    10. ''a' → logprob: -3.8748106956481934

Token 1341: ' env' (ID: 9744)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.21032766997814178
    2. '   ' → logprob: -3.210327625274658
    3. 'of' → logprob: -3.460327625274658
    4. ' of' → logprob: -3.460327625274658
    5. 'variables' → logprob: -3.835327625274658
    6. '('' → logprob: -3.960327625274658
    7. 'between' → logprob: -4.585327625274658
    8. ' from' → logprob: -4.835327625274658
    9. ' between' → logprob: -4.960327625274658
    10. 'to' → logprob: -6.085327625274658

Token 1342: '->' (ID: 609)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8506994843482971
    2. '   ' → logprob: -1.1006994247436523
    3. ' =' → logprob: -2.9756994247436523
    4. '=' → logprob: -3.2256994247436523
    5. '       ' → logprob: -3.8506994247436523
    6. '={'' → logprob: -3.8506994247436523
    7. 'from' → logprob: -4.100699424743652
    8. '_keys' → logprob: -4.225699424743652
    9. ')' → logprob: -4.725699424743652
    10. '_to' → logprob: -4.975699424743652

Token 1343: 'val' (ID: 1105)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.018625929951667786
    2. 'result' → logprob: -4.143625736236572
    3. 'output' → logprob: -6.768625736236572
    4. 'int' → logprob: -7.268625736236572
    5. 'value' → logprob: -7.768625736236572
    6. 'outputs' → logprob: -9.26862621307373
    7. ' bool' → logprob: -10.01862621307373
    8. 'str' → logprob: -10.51862621307373
    9. 'values' → logprob: -10.64362621307373
    10. 'set' → logprob: -10.89362621307373

Token 1344: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09534201771020889
    2. '
' → logprob: -2.970341920852661
    3. 'class' → logprob: -4.09534215927124
    4. ',' → logprob: -4.84534215927124
    5. 's' → logprob: -6.09534215927124
    6. ' ' → logprob: -6.34534215927124
    7. '(' → logprob: -6.84534215927124
    8. ' and' → logprob: -6.84534215927124
    9. '(
' → logprob: -7.22034215927124
    10. '=' → logprob: -7.34534215927124

Token 1345: ' comparison' (ID: 19211)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -1.8586721420288086
    2. 'canonical' → logprob: -1.8586721420288086
    3. 'def' → logprob: -2.2336721420288086
    4. 'string' → logprob: -2.6086721420288086
    5. 'cache' → logprob: -2.7336721420288086
    6. 'c' → logprob: -2.8586721420288086
    7. 'provid' → logprob: -3.2336721420288086
    8. 'the' → logprob: -3.8586721420288086
    9. 'evaluation' → logprob: -3.9836721420288086
    10. 'simpl' → logprob: -4.108672142028809

Token 1346: '.
' (ID: 558)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.6761847734451294
    2. 'methods' → logprob: -1.4261847734451294
    3. 's' → logprob: -2.80118465423584
    4. '   ' → logprob: -3.30118465423584
    5. ',' → logprob: -3.55118465423584
    6. 'of' → logprob: -3.67618465423584
    7. 'cap' → logprob: -3.80118465423584
    8. 'and' → logprob: -4.80118465423584
    9. 'with' → logprob: -4.80118465423584
    10. 'from' → logprob: -4.80118465423584

Token 1347: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20403070747852325
    2. '
' → logprob: -1.7040307521820068
    3. '    
' → logprob: -6.079030513763428
    4. 'class' → logprob: -8.579030990600586
    5. '

' → logprob: -10.829030990600586
    6. 'def' → logprob: -11.079030990600586
    7. '```' → logprob: -11.079030990600586
    8. '   
' → logprob: -11.204030990600586
    9. '__' → logprob: -11.704030990600586
    10. '_' → logprob: -11.829030990600586

Token 1348: ' """

' (ID: 28800)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18327972292900085
    2. '__' → logprob: -2.6832797527313232
    3. '_vars' → logprob: -2.9332797527313232
    4. 'def' → logprob: -3.9332797527313232
    5. 'vars' → logprob: -4.308279514312744
    6. 'slots' → logprob: -5.683279514312744
    7. '_slots' → logprob: -5.808279514312744
    8. 'variables' → logprob: -6.808279514312744
    9. '
' → logprob: -7.058279514312744
    10. '_variables' → logprob: -7.183279514312744

Token 1349: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02151530236005783
    2. '_vars' → logprob: -4.521515369415283
    3. 'def' → logprob: -5.021515369415283
    4. 'vars' → logprob: -6.021515369415283
    5. '__' → logprob: -7.771515369415283
    6. 'var' → logprob: -8.146514892578125
    7. '_var' → logprob: -8.646514892578125
    8. '_slots' → logprob: -8.646514892578125
    9. 'variables' → logprob: -9.271514892578125
    10. '_variables' → logprob: -9.646514892578125

Token 1350: ' VAR' (ID: 17735)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6129489541053772
    2. '_vars' → logprob: -1.6129488945007324
    3. 'def' → logprob: -1.7379488945007324
    4. 'vars' → logprob: -2.7379488945007324
    5. '   ' → logprob: -5.362948894500732
    6. 'slots' → logprob: -5.487948894500732
    7. '_slots' → logprob: -5.862948894500732
    8. ' def' → logprob: -5.862948894500732
    9. '_V' → logprob: -6.862948894500732
    10. 'variables' → logprob: -7.237948894500732

Token 1351: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0036120666190981865
    2. '_NAMES' → logprob: -5.878612041473389
    3. '_ORDER' → logprob: -7.253612041473389
    4. 'N' → logprob: -10.253612518310547
    5. 'ORDER' → logprob: -10.628612518310547
    6. 's' → logprob: -10.878612518310547
    7. '_COUNT' → logprob: -12.378612518310547
    8. '_LIST' → logprob: -12.628612518310547
    9. 'IBUTES' → logprob: -12.753612518310547
    10. '_S' → logprob: -12.878612518310547

Token 1352: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05505109205842018
    2. '=' → logprob: -2.93005108833313
    3. '   ' → logprob: -8.80505084991455
    4. ':' → logprob: -11.55505084991455
    5. '=['' → logprob: -12.05505084991455
    6. ',' → logprob: -13.55505084991455
    7. ' ' → logprob: -14.43005084991455
    8. ' ='' → logprob: -15.18005084991455
    9. '=('' → logprob: -15.30505084991455
    10. ' :' → logprob: -15.43005084991455

Token 1353: ' ['' (ID: 5140)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.023693563416600227
    2. '['' → logprob: -3.773693561553955
    3. ''a' → logprob: -7.898693561553955
    4. ' ('' → logprob: -10.273694038391113
    5. '("' → logprob: -10.648694038391113
    6. ''' → logprob: -12.023694038391113
    7. ''ab' → logprob: -12.148694038391113
    8. ' ['' → logprob: -13.023694038391113
    9. '[' → logprob: -14.023694038391113
    10. '"' → logprob: -14.273694038391113

Token 1354: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.005235529970377684
    2. ''a' → logprob: -5.25523567199707
    3. ' a' → logprob: -13.63023567199707
    4. ''' → logprob: -15.25523567199707
    5. '"a' → logprob: -16.38023567199707
    6. '('' → logprob: -16.75523567199707
    7. '['' → logprob: -17.13023567199707
    8. '{'' → logprob: -17.88023567199707
    9. ' '' → logprob: -18.00523567199707
    10. '’a' → logprob: -18.38023567199707

Token 1355: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.001984067726880312
    2. '','' → logprob: -6.251984119415283
    3. ',' → logprob: -10.001983642578125
    4. ''' → logprob: -12.251983642578125
    5. 'a' → logprob: -12.751983642578125
    6. '',
' → logprob: -13.751983642578125
    7. 'b' → logprob: -14.251983642578125
    8. ' ',' → logprob: -14.751983642578125
    9. ','' → logprob: -15.626983642578125
    10. '",' → logprob: -16.251983642578125

Token 1356: ' '' (ID: 461)
  Prédit: ''b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''b' → logprob: -0.21630607545375824
    2. ''' → logprob: -1.7163060903549194
    3. ' '' → logprob: -4.216306209564209
    4. 'b' → logprob: -11.21630573272705
    5. '',' → logprob: -11.84130573272705
    6. ''a' → logprob: -12.71630573272705
    7. '
' → logprob: -13.59130573272705
    8. ''d' → logprob: -14.21630573272705
    9. ' ' → logprob: -14.71630573272705
    10. ',' → logprob: -14.84130573272705

Token 1357: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0011728443205356598
    2. ''b' → logprob: -6.75117301940918
    3. ' b' → logprob: -13.00117301940918
    4. ''' → logprob: -14.87617301940918
    5. ' '' → logprob: -18.37617301940918
    6. '',' → logprob: -20.75117301940918
    7. ',b' → logprob: -22.37617301940918
    8. ''s' → logprob: -22.75117301940918
    9. ''d' → logprob: -22.87617301940918
    10. '','' → logprob: -23.00117301940918

Token 1358: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.012948205694556236
    2. ',' → logprob: -4.512948036193848
    3. '','' → logprob: -6.637948036193848
    4. 'b' → logprob: -7.637948036193848
    5. ',b' → logprob: -10.012948036193848
    6. ''' → logprob: -10.387948036193848
    7. ''b' → logprob: -10.762948036193848
    8. ','' → logprob: -12.762948036193848
    9. '   ' → logprob: -12.887948036193848
    10. ' ',' → logprob: -13.387948036193848

Token 1359: ' '' (ID: 461)
  Prédit: ''b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''b' → logprob: -8.268254896393046e-05
    2. ' '' → logprob: -9.500082969665527
    3. 'b' → logprob: -12.000082969665527
    4. ''' → logprob: -13.375082969665527
    5. '
' → logprob: -17.00008201599121
    6. '`' → logprob: -17.62508201599121
    7. ' ' → logprob: -18.12508201599121
    8. '   ' → logprob: -18.50008201599121
    9. ' b' → logprob: -18.62508201599121
    10. '"' → logprob: -19.62508201599121

Token 1360: 'c' (ID: 66)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.31516340374946594
    2. ''b' → logprob: -1.3151633739471436
    3. ''' → logprob: -6.315163612365723
    4. 'c' → logprob: -9.940163612365723
    5. ' '' → logprob: -10.690163612365723
    6. ' b' → logprob: -11.065163612365723
    7. ''d' → logprob: -13.440163612365723
    8. ''s' → logprob: -14.065163612365723
    9. ''user' → logprob: -14.315163612365723
    10. ''p' → logprob: -14.815163612365723

Token 1361: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.009303251281380653
    2. ',' → logprob: -5.134303092956543
    3. ''d' → logprob: -5.884303092956543
    4. 'd' → logprob: -7.759303092956543
    5. '','' → logprob: -9.259303092956543
    6. '   ' → logprob: -10.759303092956543
    7. ',d' → logprob: -10.884303092956543
    8. ''' → logprob: -11.509303092956543
    9. ','' → logprob: -12.259303092956543
    10. ' ,' → logprob: -13.009303092956543

Token 1362: ' '' (ID: 461)
  Prédit: ''d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''d' → logprob: -3.7697225252486533e-06
    2. ' '' → logprob: -12.625003814697266
    3. 'd' → logprob: -15.000003814697266
    4. ''D' → logprob: -16.750003814697266
    5. '"d' → logprob: -18.375003814697266
    6. '   ' → logprob: -18.875003814697266
    7. '’d' → logprob: -19.750003814697266
    8. ''' → logprob: -19.750003814697266
    9. '('' → logprob: -20.000003814697266
    10. ' ' → logprob: -20.250003814697266

Token 1363: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00020389800192788243
    2. ''d' → logprob: -8.500204086303711
    3. ' d' → logprob: -14.750204086303711
    4. ''' → logprob: -18.25020408630371
    5. '
' → logprob: -19.75020408630371
    6. '['' → logprob: -20.50020408630371
    7. '_d' → logprob: -21.12520408630371
    8. '	d' → logprob: -22.37520408630371
    9. ''D' → logprob: -23.25020408630371
    10. '   ' → logprob: -23.37520408630371

Token 1364: '']
' (ID: 9756)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.0016434036660939455
    2. '']
' → logprob: -7.251643180847168
    3. '',' → logprob: -7.376643180847168
    4. '   ' → logprob: -8.876643180847168
    5. ''' → logprob: -9.501643180847168
    6. '']

' → logprob: -9.501643180847168
    7. ']' → logprob: -11.251643180847168
    8. '']
' → logprob: -13.251643180847168
    9. '"]' → logprob: -13.751643180847168
    10. ' ']' → logprob: -14.251643180847168

Token 1365: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4316371977329254
    2. '
' → logprob: -1.056637167930603
    3. 'def' → logprob: -6.681637287139893
    4. '    
' → logprob: -6.681637287139893
    5. '

' → logprob: -9.181636810302734
    6. ' def' → logprob: -9.306636810302734
    7. '@' → logprob: -9.806636810302734
    8. ' 
' → logprob: -10.181636810302734
    9. '```' → logprob: -10.806636810302734
    10. ' ' → logprob: -10.931636810302734

Token 1366: ' ALL' (ID: 19465)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.7081689834594727
    2. 'def' → logprob: -0.7081689834594727
    3. '   ' → logprob: -4.458168983459473
    4. '_all' → logprob: -6.833168983459473
    5. '_cache' → logprob: -7.083168983459473
    6. ' def' → logprob: -7.833168983459473
    7. '__' → logprob: -8.333168983459473
    8. '    
' → logprob: -9.083168983459473
    9. '_def' → logprob: -9.083168983459473
    10. '_values' → logprob: -9.708168983459473

Token 1367: '_EN' (ID: 13497)
  Prédit: '_EN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_EN' → logprob: -0.511390209197998
    2. '_ENV' → logprob: -1.011390209197998
    3. '_en' → logprob: -4.636390209197998
    4. 'En' → logprob: -5.011390209197998
    5. '_env' → logprob: -5.011390209197998
    6. '_VALUES' → logprob: -5.011390209197998
    7. ' En' → logprob: -6.636390209197998
    8. '_ASSIGN' → logprob: -6.886390209197998
    9. '_' → logprob: -7.386390209197998
    10. '_V' → logprob: -7.886390209197998

Token 1368: 'VS' (ID: 35688)
  Prédit: 'VS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'VS' → logprob: -0.007636439986526966
    2. 'V' → logprob: -4.882636547088623
    3. 'Vs' → logprob: -11.257636070251465
    4. 'vs' → logprob: -12.382636070251465
    5. '```' → logprob: -12.382636070251465
    6. 'VI' → logprob: -13.507636070251465
    7. 'VAL' → logprob: -13.757636070251465
    8. 'VAR' → logprob: -14.007636070251465
    9. 'VT' → logprob: -14.257636070251465
    10. '
' → logprob: -14.257636070251465

Token 1369: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47408029437065125
    2. '=' → logprob: -0.9740803241729736
    3. '=[' → logprob: -13.474080085754395
    4. '   ' → logprob: -14.849080085754395
    5. ')' → logprob: -15.224080085754395
    6. '[' → logprob: -15.349080085754395
    7. ',' → logprob: -15.349080085754395
    8. '=list' → logprob: -15.474080085754395
    9. '=[]' → logprob: -15.974080085754395
    10. ':' → logprob: -16.09908103942871

Token 1370: ' list' (ID: 1562)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.43411263823509216
    2. 'list' → logprob: -1.1841126680374146
    3. '[list' → logprob: -3.684112548828125
    4. '[{' → logprob: -4.184112548828125
    5. '[
' → logprob: -5.309112548828125
    6. 'tuple' → logprob: -7.309112548828125
    7. ' [' → logprob: -9.684112548828125
    8. ' list' → logprob: -10.184112548828125
    9. '[f' → logprob: -11.059112548828125
    10. '[t' → logprob: -11.559112548828125

Token 1371: '(product' (ID: 31697)
  Prédit: '(product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(product' → logprob: -0.12698669731616974
    2. 'product' → logprob: -2.1269867420196533
    3. '(map' → logprob: -10.501986503601074
    4. 'map' → logprob: -11.126986503601074
    5. '(
' → logprob: -11.751986503601074
    6. '(' → logprob: -12.251986503601074
    7. '$product' → logprob: -13.876986503601074
    8. 'dict' → logprob: -14.001986503601074
    9. '	product' → logprob: -14.501986503601074
    10. ' product' → logprob: -14.751986503601074

Token 1372: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.014128370210528374
    2. '((' → logprob: -4.6391282081604
    3. '(range' → logprob: -5.7641282081604
    4. '('' → logprob: -7.5141282081604
    5. '[' → logprob: -7.8891282081604
    6. '(' → logprob: -8.389128684997559
    7. '(bool' → logprob: -10.264128684997559
    8. '(('' → logprob: -11.139128684997559
    9. '(['' → logprob: -12.014128684997559
    10. '(V' → logprob: -12.764128684997559

Token 1373: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -4.4894986785948277e-05
    2. '0' → logprob: -10.250044822692871
    3. 'True' → logprob: -12.250044822692871
    4. ' False' → logprob: -12.625044822692871
    5. '(False' → logprob: -13.500044822692871
    6. '[' → logprob: -18.125045776367188
    7. '=False' → logprob: -20.375045776367188
    8. '
' → logprob: -20.500045776367188
    9. 'false' → logprob: -20.625045776367188
    10. 'bool' → logprob: -20.875045776367188

Token 1374: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015014449309092015
    2. ' ,' → logprob: -9.250149726867676
    3. 'False' → logprob: -10.875149726867676
    4. '(False' → logprob: -11.000149726867676
    5. ',
' → logprob: -11.500149726867676
    6. ',[' → logprob: -13.000149726867676
    7. '[' → logprob: -13.000149726867676
    8. ',false' → logprob: -14.000149726867676
    9. '(True' → logprob: -14.375149726867676
    10. '
' → logprob: -14.875149726867676

Token 1375: ' True' (ID: 6432)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.1602393537759781
    2. 'True' → logprob: -1.910239338874817
    3. ' False' → logprob: -11.410239219665527
    4. ' True' → logprob: -12.410239219665527
    5. '
' → logprob: -17.910240173339844
    6. '(False' → logprob: -18.035240173339844
    7. '   ' → logprob: -18.160240173339844
    8. '0' → logprob: -18.410240173339844
    9. '(True' → logprob: -19.660240173339844
    10. '[' → logprob: -19.910240173339844

Token 1376: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0013789254007861018
    2. ',' → logprob: -7.251379013061523
    3. '()],' → logprob: -8.001379013061523
    4. '),' → logprob: -8.501379013061523
    5. '],[' → logprob: -9.876379013061523
    6. ']))' → logprob: -10.251379013061523
    7. '(),' → logprob: -11.251379013061523
    8. ' ],' → logprob: -11.626379013061523
    9. '(' → logprob: -12.001379013061523
    10. ']' → logprob: -12.876379013061523

Token 1377: ' repeat' (ID: 22962)
  Prédit: 'repeat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repeat' → logprob: -0.029811935499310493
    2. ' repeat' → logprob: -3.5298118591308594
    3. '[' → logprob: -10.02981185913086
    4. ' ' → logprob: -12.15481185913086
    5. '   ' → logprob: -12.27981185913086
    6. ')' → logprob: -12.40481185913086
    7. '_repeat' → logprob: -14.02981185913086
    8. ' [' → logprob: -14.02981185913086
    9. '.repeat' → logprob: -14.65481185913086
    10. '
' → logprob: -15.27981185913086

Token 1378: '=' (ID: 28)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -6.20603168499656e-05
    2. '=' → logprob: -9.750061988830566
    3. '(' → logprob: -12.750061988830566
    4. ' ' → logprob: -14.000061988830566
    5. ')' → logprob: -16.875062942504883
    6. '   ' → logprob: -18.375062942504883
    7. '
' → logprob: -18.875062942504883
    8. '```' → logprob: -19.250062942504883
    9. ' =' → logprob: -19.500062942504883
    10. '' → logprob: -20.625062942504883

Token 1379: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -3.292907877039397e-06
    2. ' ' → logprob: -13.12500286102295
    3. 'len' → logprob: -13.75000286102295
    4. '   ' → logprob: -16.125003814697266
    5. '
' → logprob: -19.125003814697266
    6. '```' → logprob: -19.125003814697266
    7. '  ' → logprob: -19.500003814697266
    8. '' → logprob: -19.625003814697266
    9. '۴' → logprob: -19.812503814697266
    10. '=' → logprob: -19.937503814697266

Token 1380: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -1.318681188422488e-05
    2. '))
' → logprob: -11.37501335144043
    3. ' ))' → logprob: -14.50001335144043
    4. '   ' → logprob: -14.87501335144043
    5. ')))' → logprob: -15.25001335144043
    6. ')' → logprob: -15.50001335144043
    7. '()))' → logprob: -16.37501335144043
    8. '));' → logprob: -16.50001335144043
    9. ''))' → logprob: -17.00001335144043
    10. '       ' → logprob: -17.12501335144043

Token 1381: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06426400691270828
    2. 'def' → logprob: -2.8142640590667725
    3. '
' → logprob: -6.564263820648193
    4. 'class' → logprob: -7.689263820648193
    5. '    
' → logprob: -8.064264297485352
    6. ' def' → logprob: -9.814264297485352
    7. '@' → logprob: -10.439264297485352
    8. '```' → logprob: -10.939264297485352
    9. ')' → logprob: -12.689264297485352
    10. '	def' → logprob: -13.814264297485352

Token 1382: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.1656821072101593
    2. '@' → logprob: -1.915682077407837
    3. '__' → logprob: -5.415682315826416
    4. '   ' → logprob: -7.415682315826416
    5. ' def' → logprob: -8.790681838989258
    6. '_cache' → logprob: -9.540681838989258
    7. '@property' → logprob: -10.040681838989258
    8. '_def' → logprob: -10.415681838989258
    9. '@s' → logprob: -10.540681838989258
    10. '_expr' → logprob: -11.165681838989258

Token 1383: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0004315036640036851
    2. ' __' → logprob: -7.750431537628174
    3. 'init' → logprob: -15.000431060791016
    4. '_init' → logprob: -15.125431060791016
    5. 'def' → logprob: -15.500431060791016
    6. '___' → logprob: -16.625431060791016
    7. '**' → logprob: -17.375431060791016
    8. 'evaluate' → logprob: -18.500431060791016
    9. 'staticmethod' → logprob: -19.000431060791016
    10. '.__' → logprob: -19.125431060791016

Token 1384: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.00091217877343297
    2. 'slots' → logprob: -7.000912189483643
    3. 'cached' → logprob: -15.500911712646484
    4. 'cache' → logprob: -15.750911712646484
    5. 'slot' → logprob: -16.000911712646484
    6. 'hash' → logprob: -16.750911712646484
    7. '_slots' → logprob: -16.875911712646484
    8. 'post' → logprob: -16.875911712646484
    9. '_init' → logprob: -17.375911712646484
    10. ' init' → logprob: -17.500911712646484

Token 1385: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.00010354319238103926
    2. '(self' → logprob: -9.750103950500488
    3. '__' → logprob: -10.375103950500488
    4. '__(
' → logprob: -11.250103950500488
    5. '_(' → logprob: -15.000103950500488
    6. '__((' → logprob: -15.125103950500488
    7. 'self' → logprob: -15.875103950500488
    8. '(' → logprob: -16.625102996826172
    9. '__('' → logprob: -16.625102996826172
    10. '__("' → logprob: -17.750102996826172

Token 1386: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.7432603272027336e-06
    2. ' self' → logprob: -14.125001907348633
    3. '(self' → logprob: -14.250001907348633
    4. '       ' → logprob: -16.250001907348633
    5. '
' → logprob: -16.375001907348633
    6. '...' → logprob: -17.375001907348633
    7. '   ' → logprob: -17.750001907348633
    8. '	self' → logprob: -18.500001907348633
    9. '0' → logprob: -18.625001907348633
    10. '[' → logprob: -20.125001907348633

Token 1387: ',' (ID: 11)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16487926244735718
    2. '(self' → logprob: -2.039879322052002
    3. ',' → logprob: -4.164879322052002
    4. '__(' → logprob: -5.539879322052002
    5. ' self' → logprob: -6.789879322052002
    6. '(' → logprob: -7.789879322052002
    7. ' (' → logprob: -8.039878845214844
    8. '
' → logprob: -8.539878845214844
    9. '   ' → logprob: -9.039878845214844
    10. '__(
' → logprob: -9.289878845214844

Token 1388: ' expr' (ID: 30206)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' → logprob: -1.5094070477061905e-05
    2. 'expression' → logprob: -11.750015258789062
    3. 'self' → logprob: -12.500015258789062
    4. ' expr' → logprob: -12.625015258789062
    5. '   ' → logprob: -16.625015258789062
    6. 'root' → logprob: -17.000015258789062
    7. '(expr' → logprob: -17.750015258789062
    8. '_expr' → logprob: -17.875015258789062
    9. 'express' → logprob: -18.250015258789062
    10. 'Expr' → logprob: -18.375015258789062

Token 1389: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5003145337104797
    2. ':' → logprob: -1.250314474105835
    3. '):
' → logprob: -2.250314474105835
    4. ')' → logprob: -7.000314712524414
    5. '=' → logprob: -7.750314712524414
    6. '=None' → logprob: -9.000314712524414
    7. '   ' → logprob: -9.000314712524414
    8. ',' → logprob: -9.375314712524414
    9. ' ):' → logprob: -9.875314712524414
    10. '):
' → logprob: -10.500314712524414

Token 1390: ' Bool' (ID: 28693)
  Prédit: 'Bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Bool' → logprob: -1.0087516784551553e-05
    2. ' Bool' → logprob: -11.62501049041748
    3. 'bool' → logprob: -14.87501049041748
    4. 'Expr' → logprob: -15.50001049041748
    5. ')' → logprob: -15.62501049041748
    6. '   ' → logprob: -15.62501049041748
    7. '       ' → logprob: -15.87501049041748
    8. 'Boolean' → logprob: -17.500009536743164
    9. ' ' → logprob: -19.125009536743164
    10. 'True' → logprob: -19.750009536743164

Token 1391: 'Expr' (ID: 21037)
  Prédit: 'Expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Expr' → logprob: -2.5776860184123507e-06
    2. 'expr' → logprob: -13.62500286102295
    3. ')' → logprob: -13.75000286102295
    4. '   ' → logprob: -16.625001907348633
    5. '(expr' → logprob: -16.625001907348633
    6. '
' → logprob: -17.000001907348633
    7. '_expr' → logprob: -17.375001907348633
    8. ')
' → logprob: -17.500001907348633
    9. '.Expr' → logprob: -17.750001907348633
    10. ' Expr' → logprob: -18.000001907348633

Token 1392: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.012594765052199364
    2. '):' → logprob: -4.387594699859619
    3. '   ' → logprob: -9.887595176696777
    4. '):
' → logprob: -11.012595176696777
    5. ')' → logprob: -11.762595176696777
    6. '       ' → logprob: -11.887595176696777
    7. ' ):
' → logprob: -13.512595176696777
    8. '):

' → logprob: -13.887595176696777
    9. ',' → logprob: -15.137595176696777
    10. ''):
' → logprob: -15.887595176696777

Token 1393: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.2127087504486553e-05
    2. 'self' → logprob: -11.125021934509277
    3. '   ' → logprob: -11.875021934509277
    4. ' self' → logprob: -15.375021934509277
    5. 'def' → logprob: -16.625022888183594
    6. 'from' → logprob: -17.375022888183594
    7. '           ' → logprob: -17.875022888183594
    8. 's' → logprob: -18.000022888183594
    9. '	' → logprob: -18.500022888183594
    10. '      ' → logprob: -18.750022888183594

Token 1394: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00866018608212471
    2. '       ' → logprob: -4.758660316467285
    3. ' self' → logprob: -10.008660316467285
    4. '   ' → logprob: -15.008660316467285
    5. 'def' → logprob: -15.883660316467285
    6. '	self' → logprob: -15.883660316467285
    7. '(self' → logprob: -17.25865936279297
    8. 'from' → logprob: -17.38365936279297
    9. 'expr' → logprob: -17.63365936279297
    10. 'import' → logprob: -17.88365936279297

Token 1395: ' We' (ID: 1416)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005089493934065104
    2. '       ' → logprob: -7.750508785247803
    3. 'env' → logprob: -9.875509262084961
    4. ' self' → logprob: -11.000509262084961
    5. 'expr' → logprob: -12.000509262084961
    6. '   ' → logprob: -13.125509262084961
    7. 'def' → logprob: -13.750509262084961
    8. 'values' → logprob: -14.750509262084961
    9. 'vals' → logprob: -16.12550926208496
    10. '
' → logprob: -16.25050926208496

Token 1396: ' store' (ID: 4897)
  Prédit: 'env'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'env' → logprob: -0.3313731849193573
    2. 'expr' → logprob: -1.7063732147216797
    3. 'self' → logprob: -2.7063732147216797
    4. 'evaluate' → logprob: -4.70637321472168
    5. 'def' → logprob: -5.33137321472168
    6. 'vars' → logprob: -5.95637321472168
    7. '       ' → logprob: -6.08137321472168
    8. 'eval' → logprob: -6.33137321472168
    9. ' evaluate' → logprob: -6.58137321472168
    10. 'vals' → logprob: -6.58137321472168

Token 1397: ' ' (ID: 220)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.24179228907451e-05
    2. 'expr' → logprob: -9.750061988830566
    3. '       ' → logprob: -13.125061988830566
    4. ' self' → logprob: -14.500061988830566
    5. '
' → logprob: -15.125061988830566
    6. 'env' → logprob: -15.375061988830566
    7. 'the' → logprob: -15.500061988830566
    8. '   ' → logprob: -15.625061988830566
    9. 'import' → logprob: -15.625061988830566
    10. '{
' → logprob: -15.875061988830566

Token 1398: '16' (ID: 1125)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.18066507577896118
    2. 'expr' → logprob: -1.8056650161743164
    3. '[' → logprob: -7.680665016174316
    4. '[self' → logprob: -8.305665016174316
    5. '(expr' → logprob: -10.305665016174316
    6. 'express' → logprob: -10.430665016174316
    7. '[
' → logprob: -10.430665016174316
    8. ' self' → logprob: -11.055665016174316
    9. ' expr' → logprob: -11.055665016174316
    10. '{' → logprob: -11.055665016174316

Token 1399: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.2976972758769989
    2. 'self' → logprob: -1.6726973056793213
    3. 'bit' → logprob: -3.5476973056793213
    4. 'bool' → logprob: -3.9226973056793213
    5. '-bit' → logprob: -4.797697067260742
    6. 'values' → logprob: -5.547697067260742
    7. 'int' → logprob: -6.172697067260742
    8. 'ints' → logprob: -6.422697067260742
    9. 'boolean' → logprob: -7.047697067260742
    10. 'vals' → logprob: -7.297697067260742

Token 1400: ' cor' (ID: 1907)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9933133721351624
    2. ' =' → logprob: -1.2433133125305176
    3. '=' → logprob: -2.4933133125305176
    4. '(' → logprob: -2.6183133125305176
    5. 'self' → logprob: -2.9933133125305176
    6. '<<' → logprob: -3.2433133125305176
    7. '(self' → logprob: -3.2433133125305176
    8. 'int' → logprob: -4.243313312530518
    9. ' (' → logprob: -4.618313312530518
    10. ' <<=' → logprob: -4.993313312530518

Token 1401: 'rs' (ID: 6435)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.2524939775466919
    2. 'respond' → logprob: -1.502493977546692
    3. 'resp' → logprob: -7.627493858337402
    4. '```' → logprob: -10.002493858337402
    5. 'r' → logprob: -11.627493858337402
    6. 'rupt' → logprob: -12.252493858337402
    7. 'res' → logprob: -12.377493858337402
    8. 'rupted' → logprob: -12.877493858337402
    9. 'rec' → logprob: -13.127493858337402
    10. '``' → logprob: -13.377493858337402

Token 1402: 'pond' (ID: 4940)
  Prédit: 'pond'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pond' → logprob: -0.0004011177225038409
    2. 'es' → logprob: -9.250401496887207
    3. 'ond' → logprob: -9.500401496887207
    4. '=' → logprob: -10.000401496887207
    5. 'e' → logprob: -10.250401496887207
    6. 'ponde' → logprob: -10.250401496887207
    7. '   ' → logprob: -10.625401496887207
    8. ' pond' → logprob: -11.125401496887207
    9. '```' → logprob: -11.375401496887207
    10. 'p' → logprob: -11.375401496887207

Token 1403: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.18396884202957153
    2. 'pond' → logprob: -1.9339687824249268
    3. 'ond' → logprob: -3.8089687824249268
    4. 'onds' → logprob: -8.058968544006348
    5. ' to' → logprob: -8.683968544006348
    6. '       ' → logprob: -9.183968544006348
    7. 'ding' → logprob: -9.183968544006348
    8. 'inding' → logprob: -9.308968544006348
    9. 'ponde' → logprob: -9.433968544006348
    10. '   ' → logprob: -9.933968544006348

Token 1404: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.16035623848438263
    2. ' to' → logprob: -1.9103562831878662
    3. '       ' → logprob: -9.160356521606445
    4. 'self' → logprob: -11.535356521606445
    5. '   ' → logprob: -12.410356521606445
    6. '_to' → logprob: -13.160356521606445
    7. 'in' → logprob: -13.535356521606445
    8. '=' → logprob: -13.785356521606445
    9. 'bits' → logprob: -14.285356521606445
    10. ' ' → logprob: -14.410356521606445

Token 1405: ' the' (ID: 290)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5520959496498108
    2. 'sum' → logprob: -1.052095890045166
    3. 'expr' → logprob: -3.302095890045166
    4. '''.' → logprob: -3.802095890045166
    5. 'int' → logprob: -4.552095890045166
    6. '(' → logprob: -6.427095890045166
    7. 'self' → logprob: -6.427095890045166
    8. 'all' → logprob: -7.927095890045166
    9. '(sum' → logprob: -8.177096366882324
    10. 'eval' → logprob: -8.427096366882324

Token 1406: ' ' (ID: 220)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.8542811274528503
    2. 'expr' → logprob: -1.2292811870574951
    3. 'int' → logprob: -1.9792811870574951
    4. 'sum' → logprob: -3.479281187057495
    5. '0' → logprob: -3.604281187057495
    6. 'values' → logprob: -3.854281187057495
    7. 'bits' → logprob: -4.104280948638916
    8. 'results' → logprob: -4.604280948638916
    9. 'eval' → logprob: -5.104280948638916
    10. 'expression' → logprob: -5.229280948638916

Token 1407: '16' (ID: 1125)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -1.0138578414916992
    2. 'expr' → logprob: -2.013857841491699
    3. 'values' → logprob: -2.138857841491699
    4. 'evalu' → logprob: -2.138857841491699
    5. 'expression' → logprob: -2.638857841491699
    6. 'truth' → logprob: -3.013857841491699
    7. '16' → logprob: -3.263857841491699
    8. 'env' → logprob: -3.638857841491699
    9. 'bool' → logprob: -4.388857841491699
    10. 'evaluation' → logprob: -4.388857841491699

Token 1408: ' env' (ID: 9744)
  Prédit: 'env'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'env' → logprob: -0.7153388261795044
    2. 'possible' → logprob: -1.2153388261795044
    3. 'evalu' → logprob: -2.715338706970215
    4. ' possible' → logprob: -3.340338706970215
    5. 'truth' → logprob: -3.840338706970215
    6. ' environments' → logprob: -3.840338706970215
    7. 'en' → logprob: -3.965338706970215
    8. 'values' → logprob: -4.465338706970215
    9. 'bool' → logprob: -4.715338706970215
    10. 'eval' → logprob: -4.715338706970215

Token 1409: 's' (ID: 82)
  Prédit: 'iron'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iron' → logprob: -0.10083701461553574
    2. 's' → logprob: -2.350836992263794
    3. '   ' → logprob: -8.975836753845215
    4. ' iron' → logprob: -9.350836753845215
    5. 'urations' → logprob: -9.600836753845215
    6. 'iro' → logprob: -9.975836753845215
    7. 'IRON' → logprob: -9.975836753845215
    8. '_values' → logprob: -9.975836753845215
    9. 'values' → logprob: -10.350836753845215
    10. '       ' → logprob: -10.725836753845215

Token 1410: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13692735135555267
    2. '(' → logprob: -2.886927366256714
    3. '(self' → logprob: -4.136927127838135
    4. ',' → logprob: -4.386927127838135
    5. ' (' → logprob: -4.511927127838135
    6. ' =' → logprob: -4.511927127838135
    7. '=' → logprob: -4.761927127838135
    8. ':' → logprob: -5.511927127838135
    9. 'self' → logprob: -6.511927127838135
    10. 'for' → logprob: -7.261927127838135

Token 1411: ' VAR' (ID: 17735)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.407661110162735
    2. '0' → logprob: -2.407661199569702
    3. '[' → logprob: -2.657661199569702
    4. '(' → logprob: -2.657661199569702
    5. 'order' → logprob: -3.157661199569702
    6. 'self' → logprob: -3.282661199569702
    7. 'enumer' → logprob: -5.407660961151123
    8. 'Truth' → logprob: -5.907660961151123
    9. '(range' → logprob: -6.032660961151123
    10. 'binary' → logprob: -6.157660961151123

Token 1412: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0010193521156907082
    2. '   ' → logprob: -7.001019477844238
    3. '['' → logprob: -10.376019477844238
    4. '       ' → logprob: -11.001019477844238
    5. 's' → logprob: -11.251019477844238
    6. '  ' → logprob: -11.501019477844238
    7. 'ARS' → logprob: -12.001019477844238
    8. '[' → logprob: -12.251019477844238
    9. ' ' → logprob: -12.876019477844238
    10. '`' → logprob: -13.001019477844238

Token 1413: ' order' (ID: 2569)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000550887081772089
    2. ',' → logprob: -8.000551223754883
    3. 'self' → logprob: -9.000551223754883
    4. '(self' → logprob: -11.250551223754883
    5. 'def' → logprob: -11.625551223754883
    6. '(' → logprob: -11.625551223754883
    7. ':' → logprob: -11.750551223754883
    8. '   ' → logprob: -11.750551223754883
    9. ' =' → logprob: -11.750551223754883
    10. '=' → logprob: -12.000551223754883

Token 1414: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005981888971291482
    2. 'self' → logprob: -7.875597953796387
    3. ',' → logprob: -9.125597953796387
    4. '(self' → logprob: -10.125597953796387
    5. ' (' → logprob: -11.375597953796387
    6. ' self' → logprob: -11.500597953796387
    7. '(' → logprob: -11.500597953796387
    8. ' in' → logprob: -12.000597953796387
    9. '   ' → logprob: -12.125597953796387
    10. ' for' → logprob: -13.000597953796387

Token 1415: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.123899558791891e-05
    2. 'self' → logprob: -10.00007152557373
    3. ',' → logprob: -10.87507152557373
    4. '   ' → logprob: -13.37507152557373
    5. 'def' → logprob: -13.87507152557373
    6. ' self' → logprob: -13.87507152557373
    7. '(self' → logprob: -14.12507152557373
    8. '           ' → logprob: -14.37507152557373
    9. ':' → logprob: -15.00007152557373
    10. 'from' → logprob: -15.50007152557373

Token 1416: ' bits' (ID: 18189)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.018227552995085716
    2. '       ' → logprob: -4.018227577209473
    3. ' self' → logprob: -9.518227577209473
    4. 'def' → logprob: -13.393227577209473
    5. '0' → logprob: -14.143227577209473
    6. 'bits' (adapté à ' bits') → logprob: -14.518227577209473
    7. '   ' → logprob: -14.893227577209473
    8. 'value' → logprob: -15.143227577209473
    9. 'super' → logprob: -15.393227577209473
    10. 's' → logprob: -15.768227577209473

Token 1417: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1002078503370285
    2. ' =' → logprob: -2.350207805633545
    3. '=[]' → logprob: -14.475208282470703
    4. ',' → logprob: -15.475208282470703
    5. ':' → logprob: -15.975208282470703
    6. ' ' → logprob: -16.100208282470703
    7. '   ' → logprob: -16.350208282470703
    8. '=[' → logprob: -17.100208282470703
    9. ')' → logprob: -17.350208282470703
    10. '    ' → logprob: -17.725208282470703

Token 1418: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09619756042957306
    2. '[]' → logprob: -2.5961976051330566
    3. '[]
' → logprob: -4.096197605133057
    4. '[' → logprob: -8.346197128295898
    5. '['' → logprob: -9.596197128295898
    6. '[]

' → logprob: -9.721197128295898
    7. '''' → logprob: -10.096197128295898
    8. '''.' → logprob: -10.346197128295898
    9. ' ' → logprob: -10.596197128295898
    10. '[
' → logprob: -10.971197128295898

Token 1419: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09555906057357788
    2. '[]' → logprob: -2.4705591201782227
    3. '[' → logprob: -5.470559120178223
    4. '[]
' → logprob: -6.220559120178223
    5. '['' → logprob: -8.595559120178223
    6. '[
' → logprob: -9.595559120178223
    7. '[]

' → logprob: -9.970559120178223
    8. '''.' → logprob: -10.470559120178223
    9. '[],' → logprob: -11.345559120178223
    10. '[].' → logprob: -11.470559120178223

Token 1420: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10144498944282532
    2. ' for' → logprob: -2.726444959640503
    3. 'for' → logprob: -3.476444959640503
    4. ',' → logprob: -10.601445198059082
    5. '<|end|>' → logprob: -10.851445198059082
    6. '
' → logprob: -11.226445198059082
    7. '   ' → logprob: -11.601445198059082
    8. ')' → logprob: -11.601445198059082
    9. '           ' → logprob: -12.476445198059082
    10. '.' → logprob: -12.601445198059082

Token 1421: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017987078754231334
    2. 'for' → logprob: -6.751798629760742
    3. ' for' → logprob: -7.376798629760742
    4. '   ' → logprob: -13.251798629760742
    5. '           ' → logprob: -14.751798629760742
    6. ',' → logprob: -15.376798629760742
    7. ' ' → logprob: -16.501798629760742
    8. '	for' → logprob: -17.126798629760742
    9. '               ' → logprob: -17.376798629760742
    10. '      ' → logprob: -17.626798629760742

Token 1422: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.000924561289139092
    2. '       ' → logprob: -7.000924587249756
    3. ' for' → logprob: -11.250924110412598
    4. 'i' → logprob: -17.875925064086914
    5. '	for' → logprob: -18.625925064086914
    6. '           ' → logprob: -18.750925064086914
    7. '   ' → logprob: -19.000925064086914
    8. 'env' → logprob: -19.000925064086914
    9. '               ' → logprob: -19.250925064086914
    10. 'bits' → logprob: -19.500925064086914

Token 1423: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6229649782180786
    2. 'vals' → logprob: -1.2479649782180786
    3. 'env' → logprob: -2.247964859008789
    4. 'idx' → logprob: -3.247964859008789
    5. 'values' → logprob: -3.997964859008789
    6. 'val' → logprob: -5.122964859008789
    7. 'bits' → logprob: -5.247964859008789
    8. 'bit' → logprob: -7.622964859008789
    9. 'index' → logprob: -7.997964859008789
    10. 'e' → logprob: -7.997964859008789

Token 1424: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.72761470079422
    2. ' in' → logprob: -0.85261470079422
    3. 'in' → logprob: -2.477614641189575
    4. ' ,' → logprob: -5.102614879608154
    5. '   ' → logprob: -8.602614402770996
    6. ',v' → logprob: -8.977614402770996
    7. ' ' → logprob: -10.102614402770996
    8. ',in' → logprob: -10.102614402770996
    9. '       ' → logprob: -10.477614402770996
    10. '    ' → logprob: -10.477614402770996

Token 1425: ' env' (ID: 9744)
  Prédit: 'vals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.6005204916000366
    2. 'env' → logprob: -1.3505204916000366
    3. '(env' → logprob: -1.8505204916000366
    4. 'val' → logprob: -4.600520610809326
    5. '(v' → logprob: -4.600520610809326
    6. 'values' → logprob: -5.100520610809326
    7. '(val' → logprob: -6.350520610809326
    8. '(' → logprob: -6.350520610809326
    9. 'v' → logprob: -6.475520610809326
    10. '(vals' → logprob: -7.100520610809326

Token 1426: '_values' (ID: 20393)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5234084129333496
    2. ' in' → logprob: -0.8984084129333496
    3. ',' → logprob: -8.273408889770508
    4. '   ' → logprob: -11.273408889770508
    5. '	in' → logprob: -12.648408889770508
    6. ' ' → logprob: -12.898408889770508
    7. ')' → logprob: -13.273408889770508
    8. '       ' → logprob: -13.273408889770508
    9. '    ' → logprob: -13.523408889770508
    10. '=' → logprob: -14.023408889770508

Token 1427: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.42871859669685364
    2. 'in' → logprob: -1.0537185668945312
    3. '   ' → logprob: -11.803718566894531
    4. '=' → logprob: -13.428718566894531
    5. '	in' → logprob: -13.553718566894531
    6. '_in' → logprob: -13.678718566894531
    7. '       ' → logprob: -13.678718566894531
    8. '    ' → logprob: -13.803718566894531
    9. ' ' → logprob: -14.178718566894531
    10. '<|end|>' → logprob: -14.303718566894531

Token 1428: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -1.306760805164231e-05
    2. ' enumerate' → logprob: -11.25001335144043
    3. 'enum' → logprob: -17.75001335144043
    4. '```' → logprob: -18.62501335144043
    5. 'en' → logprob: -19.00001335144043
    6. 'enqueue' → logprob: -19.12501335144043
    7. '.enumer' → logprob: -19.87501335144043
    8. '   ' → logprob: -20.00001335144043
    9. 'Enumer' → logprob: -20.00001335144043
    10. '(en' → logprob: -20.87501335144043

Token 1429: '(self' (ID: 2402)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5008649826049805
    2. 'Truth' → logprob: -1.0008649826049805
    3. 'enumer' → logprob: -3.7508649826049805
    4. '(self' → logprob: -7.0008649826049805
    5. 'zip' → logprob: -7.2508649826049805
    6. 'product' → logprob: -7.8758649826049805
    7. 'truth' → logprob: -7.8758649826049805
    8. ' Truth' → logprob: -8.50086498260498
    9. ' self' → logprob: -9.62586498260498
    10. '[self' → logprob: -9.75086498260498

Token 1430: '.ALL' (ID: 81471)
  Prédit: 'Truth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Truth' → logprob: -0.02496360056102276
    2. 'product' → logprob: -4.39996337890625
    3. 'self' → logprob: -4.64996337890625
    4. 'all' → logprob: -6.89996337890625
    5. ' Truth' → logprob: -6.89996337890625
    6. 'ALL' → logprob: -8.14996337890625
    7. 'enumer' → logprob: -9.39996337890625
    8. 'V' → logprob: -9.77496337890625
    9. 'TR' → logprob: -10.27496337890625
    10. 'Trace' → logprob: -10.39996337890625

Token 1431: '_EN' (ID: 13497)
  Prédit: '_EN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_EN' → logprob: -0.9368826150894165
    2. 'V' → logprob: -1.9368826150894165
    3. '_en' → logprob: -1.9368826150894165
    4. 'EN' → logprob: -1.9368826150894165
    5. '_ENV' → logprob: -2.936882495880127
    6. '_env' → logprob: -3.436882495880127
    7. 'ENV' → logprob: -4.186882495880127
    8. '   ' → logprob: -4.311882495880127
    9. '_vars' → logprob: -4.561882495880127
    10. 'env' → logprob: -4.811882495880127

Token 1432: 'VS' (ID: 35688)
  Prédit: 'VS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'VS' → logprob: -0.0003348698082845658
    2. 'V' → logprob: -8.500334739685059
    3. 'vs' → logprob: -9.125334739685059
    4. 'Vs' → logprob: -10.875334739685059
    5. 'v' → logprob: -13.750334739685059
    6. 'S' → logprob: -14.000334739685059
    7. '[' → logprob: -14.375334739685059
    8. '```' → logprob: -15.750334739685059
    9. 'vironments' → logprob: -15.875334739685059
    10. ' VS' → logprob: -15.875334739685059

Token 1433: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.06060464680194855
    2. '):' → logprob: -3.1856045722961426
    3. '       ' → logprob: -4.060604572296143
    4. ':' → logprob: -8.9356050491333
    5. '):
' → logprob: -10.0606050491333
    6. ':
' → logprob: -11.3106050491333
    7. '           ' → logprob: -12.0606050491333
    8. '[::-' → logprob: -12.0606050491333
    9. ')' → logprob: -12.6856050491333
    10. '   ' → logprob: -13.0606050491333

Token 1434: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01295903604477644
    2. '       ' → logprob: -4.387959003448486
    3. ',' → logprob: -9.012959480285645
    4. '               ' → logprob: -9.012959480285645
    5. 'env' → logprob: -9.637959480285645
    6. '```' → logprob: -10.637959480285645
    7. '	       ' → logprob: -10.762959480285645
    8. '<|end|>' → logprob: -11.012959480285645
    9. '   ' → logprob: -11.512959480285645
    10. '            
' → logprob: -11.762959480285645

Token 1435: ' env' (ID: 9744)
  Prédit: 'env'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'env' (adapté à ' env') → logprob: -0.022013260051608086
    2. '           ' → logprob: -3.8970131874084473
    3. ' env' → logprob: -6.772013187408447
    4. '       ' → logprob: -9.772013664245605
    5. '	env' → logprob: -9.772013664245605
    6. '               ' → logprob: -10.022013664245605
    7. '   ' → logprob: -10.272013664245605
    8. 'self' → logprob: -10.522013664245605
    9. 'environment' → logprob: -10.647013664245605
    10. 'var' → logprob: -11.397013664245605

Token 1436: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12886880338191986
    2. '=' → logprob: -2.128868818283081
    3. '={' → logprob: -7.128868579864502
    4. '={'' → logprob: -7.128868579864502
    5. '=dict' → logprob: -8.62886905670166
    6. 'dict' → logprob: -9.62886905670166
    7. '       ' → logprob: -10.50386905670166
    8. '   ' → logprob: -10.87886905670166
    9. '_dict' → logprob: -11.12886905670166
    10. '           ' → logprob: -12.00386905670166

Token 1437: ' dict' (ID: 11878)
  Prédit: 'dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dict' → logprob: -0.003275506664067507
    2. '{' → logprob: -5.753275394439697
    3. ' dict' → logprob: -9.253275871276855
    4. '       ' → logprob: -13.878275871276855
    5. '{'' → logprob: -14.503275871276855
    6. '           ' → logprob: -15.503275871276855
    7. '(dict' → logprob: -15.753275871276855
    8. '{
' → logprob: -16.62827491760254
    9. '   ' → logprob: -16.75327491760254
    10. '=dict' → logprob: -16.75327491760254

Token 1438: '(zip' (ID: 87520)
  Prédit: '(zip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(zip' → logprob: -4.7159857786027715e-05
    2. 'zip' → logprob: -10.000046730041504
    3. '{' → logprob: -14.125046730041504
    4. '((' → logprob: -15.000046730041504
    5. '               ' → logprob: -15.125046730041504
    6. '           ' → logprob: -15.250046730041504
    7. '       ' → logprob: -16.62504768371582
    8. '([(' → logprob: -17.50004768371582
    9. ' zip' → logprob: -17.75004768371582
    10. '.zip' → logprob: -18.00004768371582

Token 1439: '(self' (ID: 2402)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07899829745292664
    2. '(self' → logprob: -2.578998327255249
    3. '           ' → logprob: -9.703998565673828
    4. '       ' → logprob: -11.203998565673828
    5. ' self' → logprob: -11.578998565673828
    6. '('' → logprob: -11.953998565673828
    7. '               ' → logprob: -12.078998565673828
    8. 'Truth' → logprob: -12.328998565673828
    9. '[self' → logprob: -13.578998565673828
    10. '
' → logprob: -13.703998565673828

Token 1440: '.V' (ID: 5970)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00030161935137584805
    2. '(self' → logprob: -8.125301361083984
    3. '('' → logprob: -13.375301361083984
    4. ' self' → logprob: -13.500301361083984
    5. '['' → logprob: -13.625301361083984
    6. '[self' → logprob: -14.750301361083984
    7. 'Truth' → logprob: -15.000301361083984
    8. '           ' → logprob: -15.625301361083984
    9. '       ' → logprob: -15.875301361083984
    10. '=self' → logprob: -16.000301361083984

Token 1441: 'ARS' (ID: 25776)
  Prédit: 'ARS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ARS' → logprob: -0.3251487910747528
    2. '['' → logprob: -1.4501488208770752
    3. 'self' → logprob: -4.450148582458496
    4. 'ars' → logprob: -4.575148582458496
    5. '[
' → logprob: -5.325148582458496
    6. 'AR' → logprob: -5.700148582458496
    7. '(self' → logprob: -5.825148582458496
    8. 'S' → logprob: -5.950148582458496
    9. '[self' → logprob: -5.950148582458496
    10. '[['' → logprob: -6.450148582458496

Token 1442: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004438971809577197
    2. ',self' → logprob: -8.625443458557129
    3. 'self' → logprob: -9.375443458557129
    4. ' ,' → logprob: -9.625443458557129
    5. '           ' → logprob: -9.750443458557129
    6. '(self' → logprob: -11.125443458557129
    7. '               ' → logprob: -11.500443458557129
    8. '(),' → logprob: -11.875443458557129
    9. ',
' → logprob: -12.125443458557129
    10. ',['' → logprob: -12.125443458557129

Token 1443: ' env' (ID: 9744)
  Prédit: 'env'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'env' → logprob: -0.0015040287980809808
    2. ' env' → logprob: -6.501503944396973
    3. '(env' → logprob: -14.001503944396973
    4. '           ' → logprob: -14.126503944396973
    5. '            ' → logprob: -17.00150489807129
    6. '	env' → logprob: -18.12650489807129
    7. '       ' → logprob: -18.12650489807129
    8. '        ' → logprob: -18.12650489807129
    9. '               ' → logprob: -18.25150489807129
    10. '          ' → logprob: -18.25150489807129

Token 1444: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -3.292907877039397e-06
    2. '_VALUES' → logprob: -13.62500286102295
    3. '   ' → logprob: -14.62500286102295
    4. 'values' → logprob: -14.75000286102295
    5. 'Values' → logprob: -15.00000286102295
    6. '=' → logprob: -15.25000286102295
    7. ')' → logprob: -16.000003814697266
    8. '))' → logprob: -16.000003814697266
    9. '           ' → logprob: -16.375003814697266
    10. '       ' → logprob: -16.750003814697266

Token 1445: '))
' (ID: 2210)
  Prédit: '))
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.41002097725868225
    2. '))' → logprob: -1.1600209474563599
    3. '           ' → logprob: -3.7850210666656494
    4. '               ' → logprob: -8.91002082824707
    5. '))
' → logprob: -11.03502082824707
    6. '))}
' → logprob: -12.03502082824707
    7. '          ' → logprob: -12.41002082824707
    8. '       ' → logprob: -12.78502082824707
    9. ' ))
' → logprob: -13.16002082824707
    10. '                   ' → logprob: -13.28502082824707

Token 1446: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.580929347255733e-05
    2. 'bits' → logprob: -12.250016212463379
    3. 'value' → logprob: -12.875016212463379
    4. 'tokens' → logprob: -12.875016212463379
    5. '       ' → logprob: -13.125016212463379
    6. 'result' → logprob: -14.125016212463379
    7. ' bits' → logprob: -14.500016212463379
    8. '               ' → logprob: -14.875016212463379
    9. '```' → logprob: -14.875016212463379
    10. 'token' → logprob: -15.125016212463379

Token 1447: ' val' (ID: 1459)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1788008213043213
    2. 'val' (adapté à ' val') → logprob: -1.3038008213043213
    3. 'bits' → logprob: -1.8038008213043213
    4. 'result' → logprob: -1.9288008213043213
    5. 'value' → logprob: -2.5538008213043213
    6. 'res' → logprob: -4.178800582885742
    7. 'if' → logprob: -5.178800582885742
    8. 'bit' → logprob: -5.178800582885742
    9. 'v' → logprob: -5.928800582885742
    10. ' val' → logprob: -7.053800582885742

Token 1448: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048760972917079926
    2. '=' → logprob: -3.0487608909606934
    3. ' |=' → logprob: -9.298761367797852
    4. ' <<=' → logprob: -9.923761367797852
    5. '       ' → logprob: -11.173761367797852
    6. '        ' → logprob: -11.798761367797852
    7. '           ' → logprob: -12.423761367797852
    8. '|' → logprob: -12.923761367797852
    9. ' ' → logprob: -13.548761367797852
    10. '   ' → logprob: -14.298761367797852

Token 1449: ' expr' (ID: 30206)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' → logprob: -5.4192871175473556e-05
    2. ' expr' → logprob: -9.875054359436035
    3. 'int' → logprob: -13.750054359436035
    4. 'bool' → logprob: -14.375054359436035
    5. '       ' → logprob: -14.625054359436035
    6. '           ' → logprob: -15.500054359436035
    7. '1' → logprob: -15.625054359436035
    8. 'express' → logprob: -16.00005340576172
    9. '   ' → logprob: -17.62505340576172
    10. '0' → logprob: -18.12505340576172

Token 1450: '.evaluate' (ID: 71397)
  Prédit: '.evaluate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.evaluate' → logprob: -1.1875571544806007e-05
    2. '.' → logprob: -11.500011444091797
    3. 'evaluate' → logprob: -13.500011444091797
    4. ' .' → logprob: -15.750011444091797
    5. '   ' → logprob: -15.750011444091797
    6. '.calculate' → logprob: -18.000011444091797
    7. '           ' → logprob: -18.125011444091797
    8. '.validate' → logprob: -18.125011444091797
    9. '.e' → logprob: -18.250011444091797
    10. '       ' → logprob: -18.500011444091797

Token 1451: '(env' (ID: 38512)
  Prédit: '(env'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(env' → logprob: -1.6240566083070007e-06
    2. ' (' → logprob: -14.125001907348633
    3. '(environment' → logprob: -14.750001907348633
    4. 'env' → logprob: -15.250001907348633
    5. '(' → logprob: -15.750001907348633
    6. '(en' → logprob: -18.125001907348633
    7. '/env' → logprob: -19.750001907348633
    8. '(
' → logprob: -20.000001907348633
    9. '	env' → logprob: -20.000001907348633
    10. ' env' → logprob: -20.125001907348633

Token 1452: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.260574072599411
    2. ')' → logprob: -1.5105741024017334
    3. '           ' → logprob: -4.760573863983154
    4. ')
' → logprob: -10.635574340820312
    5. '       ' → logprob: -11.385574340820312
    6. ')<<' → logprob: -12.385574340820312
    7. '               ' → logprob: -12.885574340820312
    8. ')

' → logprob: -13.510574340820312
    9. '          ' → logprob: -14.135574340820312
    10. ' )
' → logprob: -14.510574340820312

Token 1453: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.700132997939363e-05
    2. 'if' → logprob: -11.500017166137695
    3. ' if' → logprob: -12.500017166137695
    4. '       ' → logprob: -13.000017166137695
    5. '
' → logprob: -15.000017166137695
    6. '```' → logprob: -15.875017166137695
    7. '               ' → logprob: -16.000017166137695
    8. '   ' → logprob: -16.000017166137695
    9. '            
' → logprob: -16.125017166137695
    10. '<|end|>' → logprob: -17.250017166137695

Token 1454: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24187664687633514
    2. 'if' (adapté à ' if') → logprob: -1.9918766021728516
    3. 'bits' → logprob: -2.9918766021728516
    4. ' if' → logprob: -3.6168766021728516
    5. ' bits' → logprob: -6.741876602172852
    6. '       ' → logprob: -8.866876602172852
    7. '(bits' → logprob: -11.616876602172852
    8. '```' → logprob: -12.116876602172852
    9. '
' → logprob: -12.366876602172852
    10. '               ' → logprob: -12.741876602172852

Token 1455: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -7.541112427134067e-05
    2. ' val' → logprob: -9.500075340270996
    3. '           ' → logprob: -14.500075340270996
    4. '   ' → logprob: -18.250076293945312
    5. '       ' → logprob: -18.625076293945312
    6. '	val' → logprob: -19.125076293945312
    7. '(val' → logprob: -20.125076293945312
    8. '          ' → logprob: -20.500076293945312
    9. '               ' → logprob: -20.625076293945312
    10. '  ' → logprob: -20.750076293945312

Token 1456: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6402231454849243
    2. ':
' → logprob: -0.7652231454849243
    3. '1' → logprob: -5.390223026275635
    4. '):
' → logprob: -6.515223026275635
    5. '           ' → logprob: -6.890223026275635
    6. '       ' → logprob: -8.765223503112793
    7. '               ' → logprob: -9.140223503112793
    8. '):' → logprob: -9.140223503112793
    9. '<<' → logprob: -9.515223503112793
    10. '==' → logprob: -11.390223503112793

Token 1457: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07577001303434372
    2. 'bits' → logprob: -3.0757699012756348
    3. '           ' → logprob: -3.8257699012756348
    4. ' bits' → logprob: -5.450769901275635
    5. '(bits' → logprob: -7.450769901275635
    6. '_bits' → logprob: -10.325770378112793
    7. '1' → logprob: -10.575770378112793
    8. '```' → logprob: -11.075770378112793
    9. '                   ' → logprob: -11.325770378112793
    10. '              ' → logprob: -11.700770378112793

Token 1458: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' (adapté à ' bits') → logprob: -0.0005542247672565281
    2. ' bits' → logprob: -7.500554084777832
    3. '           ' → logprob: -14.375554084777832
    4. '```' → logprob: -15.375554084777832
    5. '(bits' → logprob: -15.500554084777832
    6. '       ' → logprob: -15.875554084777832
    7. '   ' → logprob: -17.00055503845215
    8. '               ' → logprob: -17.12555503845215
    9. '``' → logprob: -17.50055503845215
    10. '1' → logprob: -18.00055503845215

Token 1459: ' |=' (ID: 19917)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.000912774819880724
    2. ' |=' → logprob: -7.000912666320801
    3. '+=' → logprob: -14.0009126663208
    4. '=' → logprob: -15.5009126663208
    5. ' |' → logprob: -16.375913619995117
    6. '               ' → logprob: -17.875913619995117
    7. '<<' → logprob: -18.125913619995117
    8. '           ' → logprob: -18.250913619995117
    9. '```' → logprob: -18.750913619995117
    10. '       ' → logprob: -19.000913619995117

Token 1460: ' (' (ID: 350)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002774682128801942
    2. '(' → logprob: -6.002774715423584
    3. ' ' → logprob: -8.502774238586426
    4. ' (' → logprob: -9.252774238586426
    5. '   ' → logprob: -15.627774238586426
    6. '           ' → logprob: -17.252775192260742
    7. '               ' → logprob: -18.127775192260742
    8. '                   ' → logprob: -20.627775192260742
    9. '```' → logprob: -20.627775192260742
    10. '`' → logprob: -20.877775192260742

Token 1461: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.688212614681106e-05
    2. '(' → logprob: -11.000017166137695
    3. ' ' → logprob: -16.375017166137695
    4. '   ' → logprob: -19.625017166137695
    5. ' (' → logprob: -21.000017166137695
    6. '           ' → logprob: -22.875017166137695
    7. '       ' → logprob: -23.250017166137695
    8. '[' → logprob: -23.875017166137695
    9. '`' → logprob: -24.125017166137695
    10. '```' → logprob: -24.125017166137695

Token 1462: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.061974965035915375
    2. ' <<' → logprob: -2.8119750022888184
    3. '1' → logprob: -12.06197452545166
    4. '<<<' → logprob: -14.31197452545166
    5. '<' → logprob: -15.56197452545166
    6. ')<<' → logprob: -15.56197452545166
    7. ')' → logprob: -15.56197452545166
    8. '<<(' → logprob: -16.061975479125977
    9. '```' → logprob: -16.811975479125977
    10. ' ' → logprob: -17.061975479125977

Token 1463: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.2233183042553719e-05
    2. ' i' → logprob: -11.375012397766113
    3. '(i' → logprob: -15.000012397766113
    4. '	i' → logprob: -16.625011444091797
    5. ')i' → logprob: -16.625011444091797
    6. '(' → logprob: -16.750011444091797
    7. '   ' → logprob: -16.875011444091797
    8. '```' → logprob: -17.125011444091797
    9. '16' → logprob: -17.250011444091797
    10. '`' → logprob: -17.250011444091797

Token 1464: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011903966515092179
    2. ')
' → logprob: -9.25011920928955
    3. ' )' → logprob: -11.12511920928955
    4. '       ' → logprob: -12.00011920928955
    5. ')return' → logprob: -13.37511920928955
    6. '<|end|>' → logprob: -16.750118255615234
    7. ')#' → logprob: -16.875118255615234
    8. '           ' → logprob: -17.000118255615234
    9. ')`' → logprob: -17.375118255615234
    10. '')' → logprob: -17.500118255615234

Token 1465: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016273299232125282
    2. '<|end|>' → logprob: -4.391273498535156
    3. '
' → logprob: -6.766273498535156
    4. ')' → logprob: -7.141273498535156
    5. 'self' → logprob: -7.391273498535156
    6. ' self' → logprob: -8.141273498535156
    7. '   ' → logprob: -8.266273498535156
    8. ' ' → logprob: -8.641273498535156
    9. 'class' → logprob: -9.391273498535156
    10. '.' → logprob: -9.891273498535156

Token 1466: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.47480642795562744
    2. '       ' → logprob: -0.9748064279556274
    3. '   ' → logprob: -7.599806308746338
    4. ' self' → logprob: -8.474806785583496
    5. '
' → logprob: -11.599806785583496
    6. '	self' → logprob: -13.099806785583496
    7. '```' → logprob: -13.224806785583496
    8. '           ' → logprob: -13.349806785583496
    9. 'def' → logprob: -13.849806785583496
    10. 'class' → logprob: -13.849806785583496

Token 1467: '.bits' (ID: 89914)
  Prédit: '.bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bits' → logprob: -3.702754474943504e-05
    2. '.b' → logprob: -10.50003719329834
    3. '.bit' → logprob: -11.75003719329834
    4. '._' → logprob: -14.37503719329834
    5. 'bits' → logprob: -15.37503719329834
    6. '.value' → logprob: -15.62503719329834
    7. '.bitmap' → logprob: -15.87503719329834
    8. '.' → logprob: -16.625036239624023
    9. '.parts' → logprob: -16.750036239624023
    10. ').' → logprob: -16.875036239624023

Token 1468: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141451060771942
    2. ' =' → logprob: -1.7014144659042358
    3. ' ' → logprob: -14.826414108276367
    4. ' |=' → logprob: -15.576414108276367
    5. '<|end|>' → logprob: -15.701414108276367
    6. ')' → logprob: -16.576414108276367
    7. ',' → logprob: -16.826414108276367
    8. '==' → logprob: -17.076414108276367
    9. '   ' → logprob: -17.326414108276367
    10. '=
' → logprob: -17.576414108276367

Token 1469: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -5.836499985889532e-05
    2. ' bits' → logprob: -9.7500581741333
    3. 'bytes' → logprob: -17.250059127807617
    4. '   ' → logprob: -17.875059127807617
    5. 'bit' → logprob: -18.500059127807617
    6. '(bits' → logprob: -18.500059127807617
    7. 'b' → logprob: -18.625059127807617
    8. '`' → logprob: -19.750059127807617
    9. '       ' → logprob: -19.875059127807617
    10. '  ' → logprob: -20.750059127807617

Token 1470: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3493293225765228
    2. '   ' → logprob: -1.2243293523788452
    3. '<|end|>' → logprob: -7.849329471588135
    4. '

' → logprob: -8.349328994750977
    5. '    
' → logprob: -8.474328994750977
    6. 'def' → logprob: -10.349328994750977
    7. ' ' → logprob: -12.724328994750977
    8. '<|end|>' → logprob: -12.974328994750977
    9. '```' → logprob: -13.349328994750977
    10. '
' → logprob: -13.599328994750977

Token 1471: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.48890435695648193
    2. '   ' → logprob: -0.9889043569564819
    3. '
' → logprob: -4.2389044761657715
    4. ' def' → logprob: -8.363903999328613
    5. '    
' → logprob: -10.238903999328613
    6. '

' → logprob: -11.238903999328613
    7. '<|end|>' → logprob: -12.613903999328613
    8. '@property' → logprob: -12.988903999328613
    9. 'from' → logprob: -13.738903999328613
    10. '@' → logprob: -13.988903999328613

Token 1472: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -5.080963092041202e-06
    2. '   ' → logprob: -12.250004768371582
    3. ' def' → logprob: -15.125004768371582
    4. '__' → logprob: -18.0000057220459
    5. '@' → logprob: -19.2500057220459
    6. '
' → logprob: -19.8750057220459
    7. '	def' → logprob: -20.6250057220459
    8. '    
' → logprob: -21.1250057220459
    9. 'Def' → logprob: -23.0000057220459
    10. '

' → logprob: -23.1250057220459

Token 1473: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0013267839094623923
    2. ' __' → logprob: -6.626326560974121
    3. 'eq' → logprob: -15.626326560974121
    4. 'def' → logprob: -16.001327514648438
    5. 'to' → logprob: -16.126327514648438
    6. ' ' → logprob: -16.126327514648438
    7. '   ' → logprob: -16.251327514648438
    8. '___' → logprob: -16.376327514648438
    9. '  ' → logprob: -17.126327514648438
    10. '==' → logprob: -17.501327514648438

Token 1474: 'eq' (ID: 21725)
  Prédit: 'eq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -3.225939872208983e-05
    2. 'hash' → logprob: -10.500032424926758
    3. 'lt' → logprob: -12.750032424926758
    4. 'init' → logprob: -13.250032424926758
    5. 'xor' → logprob: -16.750032424926758
    6. 'int' → logprob: -17.000032424926758
    7. 'repr' → logprob: -18.875032424926758
    8. '_eq' → logprob: -19.500032424926758
    9. ' eq' → logprob: -19.875032424926758
    10. 'bit' → logprob: -20.875032424926758

Token 1475: '__(' (ID: 8241)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.25219136476516724
    2. '__(' → logprob: -1.5021913051605225
    3. '__(
' → logprob: -9.002191543579102
    4. '_' → logprob: -10.252191543579102
    5. '__((' → logprob: -10.377191543579102
    6. '__('' → logprob: -10.877191543579102
    7. '___' → logprob: -11.252191543579102
    8. '(' → logprob: -11.752191543579102
    9. '__
' → logprob: -11.752191543579102
    10. '(self' → logprob: -11.877191543579102

Token 1476: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.4849443838757e-06
    2. ' self' → logprob: -12.375004768371582
    3. '   ' → logprob: -16.000003814697266
    4. ' ' → logprob: -16.625003814697266
    5. ')' → logprob: -17.375003814697266
    6. 'other' → logprob: -18.000003814697266
    7. '       ' → logprob: -18.625003814697266
    8. '(self' → logprob: -18.750003814697266
    9. ''' → logprob: -19.125003814697266
    10. '
' → logprob: -19.500003814697266

Token 1477: ',' (ID: 11)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0065725501626729965
    2. '__' → logprob: -5.756572723388672
    3. ',' → logprob: -6.631572723388672
    4. '(self' → logprob: -7.006572723388672
    5. '__,' → logprob: -7.256572723388672
    6. 'self' → logprob: -8.006572723388672
    7. ')(' → logprob: -9.506572723388672
    8. '(' → logprob: -10.631572723388672
    9. '__(
' → logprob: -11.756572723388672
    10. '_(' → logprob: -12.631572723388672

Token 1478: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -2.816093228830141e-06
    2. 'self' → logprob: -13.50000286102295
    3. ' other' → logprob: -13.50000286102295
    4. 'o' → logprob: -16.750001907348633
    5. 'oth' → logprob: -17.500001907348633
    6. 'Other' → logprob: -19.000001907348633
    7. '   ' → logprob: -19.375001907348633
    8. '(other' → logprob: -20.125001907348633
    9. 'othe' → logprob: -20.125001907348633
    10. '.other' → logprob: -20.500001907348633

Token 1479: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04701600968837738
    2. ')' → logprob: -3.297015905380249
    3. '):
' → logprob: -4.922016143798828
    4. ' ):' → logprob: -7.297016143798828
    5. ',' → logprob: -7.672016143798828
    6. ':' → logprob: -8.172016143798828
    7. ' )' → logprob: -8.797016143798828
    8. '   ' → logprob: -10.297016143798828
    9. '       ' → logprob: -11.922016143798828
    10. ').__' → logprob: -12.422016143798828

Token 1480: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.322690486907959
    2. '   ' → logprob: -2.822690486907959
    3. ',' → logprob: -2.947690486907959
    4. '       ' → logprob: -3.322690486907959
    5. '(' → logprob: -3.822690486907959
    6. '[' → logprob: -3.947690486907959
    7. '=' → logprob: -3.947690486907959
    8. ')' → logprob: -4.322690486907959
    9. ':
' → logprob: -4.822690486907959
    10. '.' → logprob: -4.947690486907959

Token 1481: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.10329281538724899
    2. ' bool' → logprob: -2.35329270362854
    3. ':' → logprob: -6.353292942047119
    4. '   ' → logprob: -7.853292942047119
    5. 'False' → logprob: -7.978292942047119
    6. 'None' → logprob: -9.478292465209961
    7. ' ' → logprob: -9.603292465209961
    8. 'True' → logprob: -9.603292465209961
    9. '  ' → logprob: -9.728292465209961
    10. ' :' → logprob: -10.103292465209961

Token 1482: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008061882108449936
    2. '       ' → logprob: -5.38306188583374
    3. ':
' → logprob: -6.38306188583374
    4. '   ' → logprob: -7.00806188583374
    5. ' :' → logprob: -7.75806188583374
    6. ',' → logprob: -8.758061408996582
    7. '):' → logprob: -9.133061408996582
    8. '    ' → logprob: -10.758061408996582
    9. '<|end|>' → logprob: -10.883061408996582
    10. ')' → logprob: -11.008061408996582

Token 1483: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00758639071136713
    2. ' return' → logprob: -6.007586479187012
    3. '   ' → logprob: -6.132586479187012
    4. ' if' → logprob: -7.257586479187012
    5. ' isinstance' → logprob: -7.507586479187012
    6. '    ' → logprob: -7.632586479187012
    7. ' self' → logprob: -7.632586479187012
    8. 'return' → logprob: -8.507586479187012
    9. '      ' → logprob: -8.757586479187012
    10. 'self' → logprob: -9.007586479187012

Token 1484: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06660482287406921
    2. '       ' → logprob: -3.0666048526763916
    3. 'self' → logprob: -4.0666046142578125
    4. 'is' → logprob: -7.9416046142578125
    5. ' return' → logprob: -8.066604614257812
    6. ' isinstance' → logprob: -10.941604614257812
    7. '   ' → logprob: -11.191604614257812
    8. 'if' → logprob: -11.316604614257812
    9. '(self' → logprob: -12.941604614257812
    10. ' self' → logprob: -13.566604614257812

Token 1485: ' isinstance' (ID: 25889)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009504065383225679
    2. 'is' → logprob: -7.000950336456299
    3. ' isinstance' → logprob: -11.000950813293457
    4. '(self' → logprob: -11.500950813293457
    5. ' self' → logprob: -11.500950813293457
    6. 'type' → logprob: -13.500950813293457
    7. '   ' → logprob: -14.875950813293457
    8. '(is' → logprob: -15.500950813293457
    9. '       ' → logprob: -16.12594985961914
    10. '	self' → logprob: -19.50094985961914

Token 1486: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -0.0011149736819788814
    2. '(self' → logprob: -7.001114845275879
    3. 'other' → logprob: -8.501114845275879
    4. '(' → logprob: -15.751114845275879
    5. 'self' → logprob: -15.751114845275879
    6. ' other' → logprob: -17.876115798950195
    7. 'Other' → logprob: -18.626115798950195
    8. '_other' → logprob: -20.501115798950195
    9. 'OTHER' → logprob: -21.501115798950195
    10. '(
' → logprob: -21.501115798950195

Token 1487: ',' (ID: 11)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.7233111262321472
    2. '(other' → logprob: -0.7233111262321472
    3. ',' → logprob: -3.598311185836792
    4. '(' → logprob: -6.723310947418213
    5. 'other' → logprob: -7.098310947418213
    6. '(self' → logprob: -8.348311424255371
    7. ' and' → logprob: -10.598311424255371
    8. 'self' → logprob: -10.973311424255371
    9. ')' → logprob: -11.348311424255371
    10. '(and' → logprob: -11.598311424255371

Token 1488: ' Truth' (ID: 47310)
  Prédit: 'Truth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Truth' → logprob: -0.0007118358626030385
    2. 'self' → logprob: -7.250711917877197
    3. ' Truth' → logprob: -14.000711441040039
    4. 'truth' → logprob: -14.125711441040039
    5. 'Truthy' → logprob: -15.250711441040039
    6. ' self' → logprob: -17.25071144104004
    7. 'Self' → logprob: -17.75071144104004
    8. '_truth' → logprob: -18.50071144104004
    9. 'True' → logprob: -19.12571144104004
    10. '(self' → logprob: -19.25071144104004

Token 1489: 'Table' (ID: 3429)
  Prédit: 'Table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Table' → logprob: -1.2664456789934775e-06
    2. 'Tab' → logprob: -14.250000953674316
    3. 'table' → logprob: -16.000001907348633
    4. 'T' → logprob: -16.250001907348633
    5. ' Table' → logprob: -16.250001907348633
    6. '<Table' → logprob: -16.250001907348633
    7. ')' → logprob: -16.750001907348633
    8. '
' → logprob: -17.000001907348633
    9. '	Table' → logprob: -17.000001907348633
    10. '@Table' → logprob: -17.375001907348633

Token 1490: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001310719089815393
    2. 'and' → logprob: -9.000130653381348
    3. ' and' → logprob: -12.375130653381348
    4. ' )' → logprob: -12.750130653381348
    5. ')&&' → logprob: -15.375130653381348
    6. '       ' → logprob: -15.500130653381348
    7. ')
' → logprob: -16.500131607055664
    8. '   ' → logprob: -17.500131607055664
    9. '           ' → logprob: -17.625131607055664
    10. '),' → logprob: -18.625131607055664

Token 1491: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.4740850329399109
    2. ' and' → logprob: -0.9740850329399109
    3. '       ' → logprob: -12.849084854125977
    4. '   ' → logprob: -13.474084854125977
    5. '	and' → logprob: -13.474084854125977
    6. '           ' → logprob: -14.224084854125977
    7. '    ' → logprob: -14.849084854125977
    8. ' ' → logprob: -14.849084854125977
    9. ' ' → logprob: -14.849084854125977
    10. '        ' → logprob: -15.974084854125977

Token 1492: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.392202976712724e-06
    2. ' self' → logprob: -12.000006675720215
    3. '(self' → logprob: -16.6250057220459
    4. '
' → logprob: -19.8750057220459
    5. '       ' → logprob: -20.3750057220459
    6. '   ' → logprob: -20.6250057220459
    7. ' ' → logprob: -21.6250057220459
    8. '	self' → logprob: -23.0000057220459
    9. 'Self' → logprob: -23.3750057220459
    10. '$self' → logprob: -23.5000057220459

Token 1493: '.bits' (ID: 89914)
  Prédit: '.bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bits' → logprob: -7.469590491382405e-05
    2. '.' → logprob: -10.00007438659668
    3. 'bits' → logprob: -10.75007438659668
    4. ' .' → logprob: -12.62507438659668
    5. '.parts' → logprob: -14.37507438659668
    6. '(bits' → logprob: -14.50007438659668
    7. '   ' → logprob: -14.62507438659668
    8. '<bits' → logprob: -14.75007438659668
    9. ').' → logprob: -15.00007438659668
    10. '.bit' → logprob: -15.12507438659668

Token 1494: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.005235529970377684
    2. ' ==' → logprob: -5.25523567199707
    3. '===' → logprob: -14.50523567199707
    4. '=' → logprob: -14.63023567199707
    5. '==
' → logprob: -14.88023567199707
    6. '()==' → logprob: -15.75523567199707
    7. ')==' → logprob: -15.88023567199707
    8. '   ' → logprob: -17.00523567199707
    9. '       ' → logprob: -17.38023567199707
    10. '=====' → logprob: -18.50523567199707

Token 1495: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0001234428636962548
    2. ' other' → logprob: -9.000123023986816
    3. '(other' → logprob: -18.000123977661133
    4. '       ' → logprob: -21.750123977661133
    5. 'Other' → logprob: -21.750123977661133
    6. '.other' → logprob: -21.750123977661133
    7. '_other' → logprob: -22.125123977661133
    8. '   ' → logprob: -23.000123977661133
    9. 'self' → logprob: -23.750123977661133
    10. 'others' → logprob: -24.625123977661133

Token 1496: '.bits' (ID: 89914)
  Prédit: '.bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bits' → logprob: -0.00011796683247666806
    2. 'bits' → logprob: -9.500118255615234
    3. '.' → logprob: -10.125118255615234
    4. '(bits' → logprob: -14.000118255615234
    5. ' .' → logprob: -15.125118255615234
    6. '   ' → logprob: -15.250118255615234
    7. '.b' → logprob: -15.625118255615234
    8. '`.' → logprob: -15.750118255615234
    9. '<bits' → logprob: -15.875118255615234
    10. '_bits' → logprob: -16.000118255615234

Token 1497: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03211844339966774
    2. '
' → logprob: -4.032118320465088
    3. '<|end|>' → logprob: -4.782118320465088
    4. ':' → logprob: -6.657118320465088
    5. '    
' → logprob: -7.282118320465088
    6. '.' → logprob: -7.282118320465088
    7. 'def' → logprob: -7.907118320465088
    8. '       ' → logprob: -7.907118320465088
    9. ' and' → logprob: -8.282118797302246
    10. ')' → logprob: -8.407118797302246

Token 1498: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18057222664356232
    2. '   ' → logprob: -1.805572271347046
    3. 'def' → logprob: -7.555572032928467
    4. '    
' → logprob: -8.805572509765625
    5. '<|end|>' → logprob: -9.805572509765625
    6. '```' → logprob: -10.430572509765625
    7. '

' → logprob: -10.680572509765625
    8. ' ' → logprob: -11.805572509765625
    9. '
' → logprob: -11.930572509765625
    10. ' def' → logprob: -12.180572509765625

Token 1499: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -3.128163257315464e-07
    2. '   ' → logprob: -15.75
    3. ' def' → logprob: -15.875
    4. '
' → logprob: -19.0
    5. '__' → logprob: -20.25
    6. '	def' → logprob: -20.875
    7. '    
' → logprob: -20.875
    8. ':def' → logprob: -21.75
    9. 'class' → logprob: -22.125
    10. '@dat' → logprob: -22.25

Token 1500: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0005395700572989881
    2. 'hash' → logprob: -8.125539779663086
    3. ' __' → logprob: -8.875539779663086
    4. 'def' → logprob: -9.250539779663086
    5. 'lt' → logprob: -12.000539779663086
    6. '   ' → logprob: -14.000539779663086
    7. ' ' → logprob: -15.625539779663086
    8. '
' → logprob: -16.125539779663086
    9. '__
' → logprob: -16.625539779663086
    10. '_hash' → logprob: -16.750539779663086

Token 1501: 'hash' (ID: 16909)
  Prédit: 'hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.00193149340339005
    2. 'lt' → logprob: -6.251931667327881
    3. 'repr' → logprob: -13.251931190490723
    4. 'xor' → logprob: -14.626931190490723
    5. 'str' → logprob: -15.001931190490723
    6. 'ne' → logprob: -15.126931190490723
    7. 'bool' → logprob: -17.75193214416504
    8. 'bit' → logprob: -17.87693214416504
    9. ' hash' → logprob: -18.50193214416504
    10. 'invert' → logprob: -18.75193214416504

Token 1502: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014807011932134628
    2. '()' → logprob: -5.139807224273682
    3. '(
' → logprob: -5.264807224273682
    4. '(self' → logprob: -5.889807224273682
    5. ' (' → logprob: -7.889807224273682
    6. '=' → logprob: -8.889806747436523
    7. '   ' → logprob: -9.139806747436523
    8. ')' → logprob: -10.014806747436523
    9. '(

' → logprob: -10.389806747436523
    10. '<|end|>' → logprob: -10.389806747436523

Token 1503: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -8.77627644513268e-06
    2. ' self' → logprob: -12.500008583068848
    3. '(self' → logprob: -12.625008583068848
    4. ')' → logprob: -13.500008583068848
    5. '   ' → logprob: -15.625008583068848
    6. '
' → logprob: -16.625009536743164
    7. 'return' → logprob: -17.125009536743164
    8. '       ' → logprob: -18.250009536743164
    9. '  ' → logprob: -18.250009536743164
    10. ' ' → logprob: -18.750009536743164

Token 1504: '):
' (ID: 1883)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10081545263528824
    2. '(
' → logprob: -2.725815534591675
    3. '(self' → logprob: -5.100815296173096
    4. ':' → logprob: -5.225815296173096
    5. '():' → logprob: -5.225815296173096
    6. '   ' → logprob: -5.600815296173096
    7. ' (' → logprob: -6.100815296173096
    8. '()' → logprob: -6.600815296173096
    9. '():
' → logprob: -6.600815296173096
    10. '):' → logprob: -6.600815296173096

Token 1505: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003049127757549286
    2. 'self' → logprob: -6.378048896789551
    3. '(self' → logprob: -7.628048896789551
    4. '   ' → logprob: -7.878048896789551
    5. 'return' → logprob: -8.25304889678955
    6. '(' → logprob: -8.50304889678955
    7. '           ' → logprob: -12.62804889678955
    8. '      ' → logprob: -13.12804889678955
    9. 's' → logprob: -13.25304889678955
    10. ' self' → logprob: -13.25304889678955

Token 1506: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0032081345561891794
    2. '       ' → logprob: -5.753208160400391
    3. ' return' → logprob: -10.75320816040039
    4. '   ' → logprob: -12.37820816040039
    5. 'self' → logprob: -12.50320816040039
    6. 'hash' → logprob: -14.12820816040039
    7. '{return' → logprob: -15.50320816040039
    8. '	return' → logprob: -16.12820816040039
    9. 'def' → logprob: -16.62820816040039
    10. '
' → logprob: -17.12820816040039

Token 1507: ' hash' (ID: 10691)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.003236297983676195
    2. 'hash' → logprob: -5.753236293792725
    3. ' self' → logprob: -9.753236770629883
    4. ' hash' → logprob: -15.128236770629883
    5. '   ' → logprob: -16.253236770629883
    6. '       ' → logprob: -16.628236770629883
    7. '(self' → logprob: -19.003236770629883
    8. '           ' → logprob: -20.003236770629883
    9. '	self' → logprob: -21.253236770629883
    10. '     ' → logprob: -21.378236770629883

Token 1508: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.704065213445574e-05
    2. '((' → logprob: -10.000046730041504
    3. '(' → logprob: -13.375046730041504
    4. ' (' → logprob: -19.00004768371582
    5. '(
' → logprob: -19.25004768371582
    6. 'self' → logprob: -19.87504768371582
    7. '(int' → logprob: -21.25004768371582
    8. '```' → logprob: -23.12504768371582
    9. '   ' → logprob: -23.50004768371582
    10. '	self' → logprob: -23.62504768371582

Token 1509: '.bits' (ID: 89914)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0011793931480497122
    2. 'self' → logprob: -6.751179218292236
    3. '(' → logprob: -12.501179695129395
    4. '((' → logprob: -12.751179695129395
    5. ')' → logprob: -13.751179695129395
    6. ' self' → logprob: -14.001179695129395
    7. ' (' → logprob: -14.876179695129395
    8. '(
' → logprob: -16.376178741455078
    9. ')(' → logprob: -16.751178741455078
    10. '   ' → logprob: -17.501178741455078

Token 1510: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015565206995233893
    2. '   ' → logprob: -6.626556396484375
    3. '       ' → logprob: -8.501556396484375
    4. '}' → logprob: -11.501556396484375
    5. '<|end|>' → logprob: -11.626556396484375
    6. '()' → logprob: -13.126556396484375
    7. ' )' → logprob: -14.001556396484375
    8. '())' → logprob: -14.376556396484375
    9. '#' → logprob: -14.501556396484375
    10. ')
' → logprob: -14.626556396484375

Token 1511: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.15663743019104004
    2. 'def' → logprob: -2.15663743019104
    3. '@' → logprob: -3.65663743019104
    4. '   ' → logprob: -5.906637191772461
    5. '#' → logprob: -8.281637191772461
    6. '<|end|>' → logprob: -8.281637191772461
    7. '```' → logprob: -9.656637191772461
    8. '@dat' → logprob: -9.906637191772461
    9. 'from' → logprob: -10.531637191772461
    10. 'import' → logprob: -11.031637191772461

Token 1512: ' Compressor' (ID: 186511)
  Prédit: 'Normalizer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Normalizer' → logprob: -0.6402100324630737
    2. 'Expr' → logprob: -1.6402100324630737
    3. 'Simpl' → logprob: -2.5152101516723633
    4. 'Bool' → logprob: -2.5152101516723633
    5. 'Expression' → logprob: -3.5152101516723633
    6. 'Equ' → logprob: -3.8902101516723633
    7. 'Canonical' → logprob: -4.390210151672363
    8. 'Equivalent' → logprob: -4.890210151672363
    9. 'Normal' → logprob: -5.015210151672363
    10. 'Memo' → logprob: -5.265210151672363

Token 1513: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.020549945533275604
    2. ':
' → logprob: -3.895550012588501
    3. ':

' → logprob: -12.270549774169922
    4. '(' → logprob: -13.770549774169922
    5. '(B' → logprob: -14.520549774169922
    6. '   ' → logprob: -14.770549774169922
    7. '(object' → logprob: -15.020549774169922
    8. ':def' → logprob: -15.645549774169922
    9. '```' → logprob: -15.645549774169922
    10. 'class' → logprob: -15.895549774169922

Token 1514: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005744387395679951
    2. ':' → logprob: -5.255744457244873
    3. ':
' → logprob: -7.880744457244873
    4. '(' → logprob: -10.380743980407715
    5. 'class' → logprob: -10.630743980407715
    6. '    
' → logprob: -11.005743980407715
    7. '```' → logprob: -11.130743980407715
    8. '<|end|>' → logprob: -11.380743980407715
    9. '():
' → logprob: -12.255743980407715
    10. '(object' → logprob: -12.880743980407715

Token 1515: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004127553664147854
    2. ' def' → logprob: -6.129127502441406
    3. 'class' → logprob: -6.629127502441406
    4. 'def' → logprob: -8.004127502441406
    5. ' class' → logprob: -9.129127502441406
    6. ' __' → logprob: -9.754127502441406
    7. '__' → logprob: -9.879127502441406
    8. '
' → logprob: -11.629127502441406
    9. ':' → logprob: -12.004127502441406
    10. ' _' → logprob: -12.254127502441406

Token 1516: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008230387233197689
    2. '__' → logprob: -5.008230209350586
    3. '"""
' → logprob: -7.258230209350586
    4. 'class' → logprob: -8.008230209350586
    5. 'def' → logprob: -8.008230209350586
    6. 'object' → logprob: -10.258230209350586
    7. '"""' → logprob: -10.508230209350586
    8. '
' → logprob: -11.008230209350586
    9. 'staticmethod' → logprob: -11.633230209350586
    10. '___' → logprob: -11.758230209350586

Token 1517: ' This' (ID: 1328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1726807355880737
    2. '__' → logprob: -1.1726807355880737
    3. 'def' → logprob: -1.5476807355880737
    4. 'class' → logprob: -1.9226807355880737
    5. ' def' → logprob: -4.672680854797363
    6. '"""
' → logprob: -5.797680854797363
    7. 'V' → logprob: -5.797680854797363
    8. 'VAR' → logprob: -5.797680854797363
    9. ' __' → logprob: -6.922680854797363
    10. '
' → logprob: -7.797680854797363

Token 1518: ' class' (ID: 744)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.4883876144886017
    2. ' class' → logprob: -0.9883875846862793
    3. '   ' → logprob: -4.738387584686279
    4. ' is' → logprob: -6.488387584686279
    5. ':' → logprob: -6.863387584686279
    6. ' def' → logprob: -6.988387584686279
    7. ':
' → logprob: -7.988387584686279
    8. '
' → logprob: -8.113388061523438
    9. 'def' → logprob: -8.238388061523438
    10. ' """
' → logprob: -8.613388061523438

Token 1519: ' organizes' (ID: 185853)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7161424160003662
    2. ':' → logprob: -0.9661424160003662
    3. 'class' → logprob: -3.341142416000366
    4. ' def' → logprob: -3.466142416000366
    5. 'def' → logprob: -4.091142654418945
    6. 'implements' → logprob: -4.466142654418945
    7. ':
' → logprob: -4.591142654418945
    8. ' class' → logprob: -4.841142654418945
    9. ' is' → logprob: -4.966142654418945
    10. ' provides' → logprob: -6.216142654418945

Token 1520: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39008018374443054
    2. 'class' → logprob: -2.265080213546753
    3. 'def' → logprob: -2.515080213546753
    4. 'the' → logprob: -2.890080213546753
    5. 'express' → logprob: -3.890080213546753
    6. '"""
' → logprob: -3.890080213546753
    7. '
' → logprob: -4.890079975128174
    8. 'methods' → logprob: -5.515079975128174
    9. 'code' → logprob: -5.765079975128174
    10. 'canonical' → logprob: -5.890079975128174

Token 1521: ' bottom' (ID: 8725)
  Prédit: '_cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.4433048963546753
    2. 'cache' → logprob: -1.5683048963546753
    3. 'def' → logprob: -2.568305015563965
    4. 'nd' → logprob: -3.943305015563965
    5. 'mapping' → logprob: -4.193305015563965
    6. ' cache' → logprob: -4.693305015563965
    7. '_mapping' → logprob: -5.318305015563965
    8. 'n' → logprob: -5.443305015563965
    9. '_map' → logprob: -5.818305015563965
    10. '   ' → logprob: -6.068305015563965

Token 1522: '-up' (ID: 7288)
  Prédit: '-up'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-up' → logprob: -0.01159802544862032
    2. 'up' → logprob: -4.511598110198975
    3. '_up' → logprob: -8.136597633361816
    4. '```' → logprob: -8.636597633361816
    5. '-Up' → logprob: -10.261597633361816
    6. 'Up' → logprob: -11.261597633361816
    7. ' up' → logprob: -11.261597633361816
    8. '   ' → logprob: -11.761597633361816
    9. '``' → logprob: -12.136597633361816
    10. '__' → logprob: -13.386597633361816

Token 1523: ' cache' (ID: 11956)
  Prédit: 'search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'search' → logprob: -1.1136337518692017
    2. 'cache' → logprob: -1.9886337518692017
    3. 'appro' → logprob: -2.113633632659912
    4. ' approach' → logprob: -2.363633632659912
    5. 'dynamic' → logprob: -2.363633632659912
    6. 'memo' → logprob: -2.613633632659912
    7. 'builder' → logprob: -3.863633632659912
    8. 'enumer' → logprob: -4.238633632659912
    9. 'com' → logprob: -4.238633632659912
    10. 'normal' → logprob: -4.363633632659912

Token 1524: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26048576831817627
    2. 'and' → logprob: -2.2604856491088867
    3. ' of' → logprob: -3.1354856491088867
    4. 'of' → logprob: -3.6354856491088867
    5. ' and' → logprob: -4.010485649108887
    6. ':' → logprob: -5.010485649108887
    7. ' to' → logprob: -5.135485649108887
    8. ' for' → logprob: -5.260485649108887
    9. 'for' → logprob: -5.760485649108887
    10. 'to' → logprob: -6.385485649108887

Token 1525: ' minimal' (ID: 19957)
  Prédit: 'express'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'express' → logprob: -0.3214513063430786
    2. 'Bool' → logprob: -1.8214513063430786
    3. ' Bool' → logprob: -3.446451187133789
    4. 'canonical' → logprob: -3.821451187133789
    5. 'all' → logprob: -4.071451187133789
    6. 'known' → logprob: -4.321451187133789
    7. 'expr' → logprob: -4.946451187133789
    8. 'truth' → logprob: -5.946451187133789
    9. 'minimal' → logprob: -5.946451187133789
    10. 'equ' → logprob: -6.196451187133789

Token 1526: ' length' (ID: 5517)
  Prédit: 'forms'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'forms' → logprob: -0.8040065169334412
    2. 'express' → logprob: -0.9290065169334412
    3. ' forms' → logprob: -2.679006576538086
    4. 'canonical' → logprob: -3.179006576538086
    5. ' expressions' → logprob: -3.929006576538086
    6. ' canonical' → logprob: -4.679006576538086
    7. '_forms' → logprob: -5.429006576538086
    8. '
' → logprob: -5.929006576538086
    9. 'expr' → logprob: -6.054006576538086
    10. 'expression' → logprob: -6.179006576538086

Token 1527: ' expressions' (ID: 43578)
  Prédit: 'express'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'express' → logprob: -0.2742846608161926
    2. 'forms' → logprob: -2.524284601211548
    3. ' expressions' → logprob: -3.274284601211548
    4. '   ' → logprob: -3.649284601211548
    5. 'represent' → logprob: -3.649284601211548
    6. 'canonical' → logprob: -4.024284839630127
    7. ' forms' → logprob: -4.149284839630127
    8. ' representations' → logprob: -4.899284839630127
    9. 'and' → logprob: -5.024284839630127
    10. 'expression' → logprob: -5.399284839630127

Token 1528: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006128106266260147
    2. 'for' → logprob: -6.381128311157227
    3. 'from' → logprob: -6.631128311157227
    4. ' for' → logprob: -6.756128311157227
    5. ':' → logprob: -7.256128311157227
    6. ':
' → logprob: -8.131128311157227
    7. 'and' → logprob: -8.256128311157227
    8. '
' → logprob: -9.381128311157227
    9. ' and' → logprob: -9.506128311157227
    10. ' that' → logprob: -10.131128311157227

Token 1529: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.08204878866672516
    2. 'all' → logprob: -3.0820488929748535
    3. 'express' → logprob: -4.4570488929748535
    4. 'Boolean' → logprob: -5.0820488929748535
    5. 'truth' → logprob: -5.3320488929748535
    6. 'Truth' → logprob: -5.7070488929748535
    7. 'the' → logprob: -6.0820488929748535
    8. 'every' → logprob: -6.4570488929748535
    9. ' each' → logprob: -7.2070488929748535
    10. 'boolean' → logprob: -7.7070488929748535

Token 1530: ' Boolean' (ID: 12759)
  Prédit: 'truth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'truth' → logprob: -0.358214408159256
    2. 'Truth' → logprob: -1.8582143783569336
    3. ' truth' → logprob: -2.1082143783569336
    4. '_truth' → logprob: -4.733214378356934
    5. ' Truth' → logprob: -5.733214378356934
    6. '
' → logprob: -6.233214378356934
    7. 'Bool' → logprob: -6.233214378356934
    8. 'bool' → logprob: -6.483214378356934
    9. 'expr' → logprob: -6.608214378356934
    10. 'tr' → logprob: -7.233214378356934

Token 1531: ' function' (ID: 1114)
  Prédit: 'function'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'function' → logprob: -0.05269206315279007
    2. ' function' → logprob: -3.302692174911499
    3. 'truth' → logprob: -5.30269193649292
    4. '   ' → logprob: -5.67769193649292
    5. '
' → logprob: -6.42769193649292
    6. 'Truth' → logprob: -7.05269193649292
    7. 'functions' → logprob: -7.30269193649292
    8. ' truth' → logprob: -7.30269193649292
    9. 'expression' → logprob: -7.42769193649292
    10. 'table' → logprob: -7.67769193649292

Token 1532: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022575892508029938
    2. ':' → logprob: -4.397575855255127
    3. '
' → logprob: -5.897575855255127
    4. ',' → logprob: -6.522575855255127
    5. ':
' → logprob: -6.522575855255127
    6. '.' → logprob: -6.897575855255127
    7. ' that' → logprob: -7.647575855255127
    8. ' and' → logprob: -8.147576332092285
    9. 'from' → logprob: -8.272576332092285
    10. ' for' → logprob: -8.397576332092285

Token 1533: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14390592277050018
    2. '
' → logprob: -2.0189058780670166
    3. '    
' → logprob: -6.768906116485596
    4. ' 
' → logprob: -11.143905639648438
    5. '#' → logprob: -11.893905639648438
    6. '"""
' → logprob: -11.893905639648438
    7. 'def' → logprob: -12.143905639648438
    8. '

' → logprob: -12.268905639648438
    9. '   
' → logprob: -12.268905639648438
    10. '    ' → logprob: -12.268905639648438

Token 1534: ' Extremely' (ID: 137929)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009023179300129414
    2. '
' → logprob: -4.884023189544678
    3. ' def' → logprob: -6.759023189544678
    4. ' VAR' → logprob: -9.50902271270752
    5. 'def' → logprob: -9.88402271270752
    6. '    
' → logprob: -9.88402271270752
    7. ' V' → logprob: -10.75902271270752
    8. ' 
' → logprob: -11.50902271270752
    9. '#' → logprob: -11.63402271270752
    10. ' _' → logprob: -11.75902271270752

Token 1535: ' sophisticated' (ID: 36278)
  Prédit: '_cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cache' → logprob: -1.1343716382980347
    2. 'def' → logprob: -1.7593716382980347
    3. 'import' → logprob: -1.8843716382980347
    4. '   ' → logprob: -2.509371757507324
    5. '_verbose' → logprob: -2.759371757507324
    6. '_memory' → logprob: -3.384371757507324
    7. ' def' → logprob: -3.509371757507324
    8. '_cached' → logprob: -3.634371757507324
    9. '_lazy' → logprob: -4.134371757507324
    10. 'important' → logprob: -4.384371757507324

Token 1536: ' structure' (ID: 8866)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9212073683738708
    2. ':' → logprob: -1.4212074279785156
    3. '.' → logprob: -2.5462074279785156
    4. ' in' → logprob: -3.2962074279785156
    5. 'class' → logprob: -3.4212074279785156
    6. ' and' → logprob: -3.6712074279785156
    7. ' :' → logprob: -3.7962074279785156
    8. ' methods' → logprob: -4.046207427978516
    9. ' ' → logprob: -4.171207427978516
    10. ':
' → logprob: -4.546207427978516

Token 1537: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023844320327043533
    2. ':' → logprob: -3.8988442420959473
    3. ',' → logprob: -7.398844242095947
    4. ' and' → logprob: -7.523844242095947
    5. '.' → logprob: -7.898844242095947
    6. '  ' → logprob: -8.273844718933105
    7. ' ' → logprob: -8.648844718933105
    8. 'and' → logprob: -8.898844718933105
    9. '...' → logprob: -9.023844718933105
    10. ':
' → logprob: -9.023844718933105

Token 1538: ' pre' (ID: 876)
  Prédit: 'handle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'handle' → logprob: -1.3758078813552856
    2. 'store' → logprob: -2.000807762145996
    3. 'build' → logprob: -2.250807762145996
    4. 'compress' → logprob: -2.375807762145996
    5. 'implement' → logprob: -2.875807762145996
    6. ' handle' → logprob: -2.875807762145996
    7. 'class' → logprob: -3.000807762145996
    8. 'complete' → logprob: -3.750807762145996
    9. 'generate' → logprob: -4.000807762145996
    10. 'find' → logprob: -4.000807762145996

Token 1539: 'compute' (ID: 54521)
  Prédit: 'compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.4211566150188446
    2. 'serve' → logprob: -1.171156644821167
    3. 'cache' → logprob: -4.546156406402588
    4. 'pare' → logprob: -4.921156406402588
    5. 'cis' → logprob: -5.046156406402588
    6. 'dict' → logprob: -6.171156406402588
    7. '_cache' → logprob: -6.546156406402588
    8. '   ' → logprob: -6.921156406402588
    9. '```' → logprob: -7.421156406402588
    10. '_compute' → logprob: -7.671156406402588

Token 1540: ' minimal' (ID: 19957)
  Prédit: 'express'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'express' → logprob: -1.4961029291152954
    2. 'and' → logprob: -1.6211029291152954
    3. 'all' → logprob: -1.8711029291152954
    4. ' minimal' → logprob: -1.9961029291152954
    5. 'minimal' → logprob: -2.371102809906006
    6. ' all' → logprob: -2.496102809906006
    7. ' and' → logprob: -2.996102809906006
    8. 'the' → logprob: -4.121102809906006
    9. ' the' → logprob: -4.371102809906006
    10. ' expressions' → logprob: -4.621102809906006

Token 1541: ' lengths' (ID: 51957)
  Prédit: 'express'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'express' → logprob: -0.15921403467655182
    2. 'forms' → logprob: -2.2842140197753906
    3. '_forms' → logprob: -4.659214019775391
    4. '   ' → logprob: -4.909214019775391
    5. 'expr' → logprob: -5.034214019775391
    6. 'def' → logprob: -5.284214019775391
    7. '_expr' → logprob: -5.409214019775391
    8. ' forms' → logprob: -5.784214019775391
    9. 'length' → logprob: -6.284214019775391
    10. ' expressions' → logprob: -6.659214019775391

Token 1542: ' leveraging' (ID: 103970)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2365201860666275
    2. ' and' → logprob: -2.736520290374756
    3. 'express' → logprob: -2.986520290374756
    4. ' for' → logprob: -3.486520290374756
    5. ' expressions' → logprob: -3.486520290374756
    6. 'and' → logprob: -3.611520290374756
    7. 'for' → logprob: -5.861520290374756
    8. ',' → logprob: -6.486520290374756
    9. '(express' → logprob: -6.861520290374756
    10. '       ' → logprob: -7.986520290374756

Token 1543: ' the' (ID: 290)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.415621817111969
    2. 'the' → logprob: -2.290621757507324
    3. 'memo' → logprob: -2.790621757507324
    4. 'dynamic' → logprob: -3.165621757507324
    5. ' all' → logprob: -3.540621757507324
    6. ' dynamic' → logprob: -4.665621757507324
    7. '4' → logprob: -4.790621757507324
    8. ' four' → logprob: -4.790621757507324
    9. 'truth' → logprob: -4.790621757507324
    10. ' the' → logprob: -5.040621757507324

Token 1544: ' grammar' (ID: 41735)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cache' → logprob: -1.9088958501815796
    2. 'truth' → logprob: -2.283895969390869
    3. '@' → logprob: -2.408895969390869
    4. '#' → logprob: -2.783895969390869
    5. 'known' → logprob: -3.158895969390869
    6. 'full' → logprob: -3.283895969390869
    7. '4' → logprob: -3.408895969390869
    8. 'express' → logprob: -3.658895969390869
    9. 'sym' → logprob: -3.658895969390869
    10. 'memo' → logprob: -3.783895969390869

Token 1545: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017583541572093964
    2. ' and' → logprob: -5.14258337020874
    3. 'and' → logprob: -5.39258337020874
    4. ',' → logprob: -5.64258337020874
    5. '.' → logprob: -6.39258337020874
    6. ' for' → logprob: -7.01758337020874
    7. 'for' → logprob: -8.642583847045898
    8. ':' → logprob: -9.017583847045898
    9. ' of' → logprob: -9.267583847045898
    10. ' ' → logprob: -9.267583847045898

Token 1546: ' truth' (ID: 12388)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.9395267963409424
    2. 'l' → logprob: -2.4395267963409424
    3. 'cache' → logprob: -2.6895267963409424
    4. 'the' → logprob: -2.6895267963409424
    5. 'dynamic' → logprob: -2.9395267963409424
    6. 'all' → logprob: -2.9395267963409424
    7. 'fixed' → logprob: -3.3145267963409424
    8. ' memo' → logprob: -3.6895267963409424
    9. 'queue' → logprob: -3.8145267963409424
    10. '   ' → logprob: -4.064526557922363

Token 1547: ' tables' (ID: 16584)
  Prédit: '_table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -0.44529831409454346
    2. 'Table' → logprob: -2.195298194885254
    3. 'tables' → logprob: -2.320298194885254
    4. '_tables' → logprob: -2.445298194885254
    5. '
' → logprob: -4.320298194885254
    6. '   ' → logprob: -4.320298194885254
    7. ' tables' → logprob: -4.445298194885254
    8. 'table' → logprob: -5.070298194885254
    9. '       ' → logprob: -5.320298194885254
    10. '```' → logprob: -5.320298194885254

Token 1548: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4860464334487915
    2. '   ' → logprob: -0.9860464334487915
    3. '.' → logprob: -4.736046314239502
    4. ':
' → logprob: -6.236046314239502
    5. ',' → logprob: -7.236046314239502
    6. '
' → logprob: -8.48604679107666
    7. ' and' → logprob: -10.36104679107666
    8. ':

' → logprob: -10.48604679107666
    9. '<|end|>' → logprob: -10.48604679107666
    10. '):' → logprob: -10.61104679107666

Token 1549: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16441383957862854
    2. '
' → logprob: -1.9144138097763062
    3. ':' → logprob: -5.664413928985596
    4. '    
' → logprob: -8.289413452148438
    5. ':
' → logprob: -8.414413452148438
    6. ')' → logprob: -9.914413452148438
    7. '```' → logprob: -10.164413452148438
    8. '):
' → logprob: -10.289413452148438
    9. '

' → logprob: -10.289413452148438
    10. '    ' → logprob: -11.164413452148438

Token 1550: ' Suitable' (ID: 98346)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04453670606017113
    2. '
' → logprob: -3.169536590576172
    3. '    
' → logprob: -6.794536590576172
    4. 'def' → logprob: -8.669536590576172
    5. ' def' → logprob: -9.294536590576172
    6. '

' → logprob: -10.294536590576172
    7. '#' → logprob: -10.419536590576172
    8. ' 
' → logprob: -10.794536590576172
    9. ':' → logprob: -11.419536590576172
    10. '```' → logprob: -11.669536590576172

Token 1551: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4840051829814911
    2. '   ' → logprob: -0.9840052127838135
    3. ' for' → logprob: -4.984004974365234
    4. '_for' → logprob: -7.359004974365234
    5. ':' → logprob: -7.484004974365234
    6. 'def' → logprob: -7.984004974365234
    7. '```' → logprob: -8.109004974365234
    8. '  ' → logprob: -8.234004974365234
    9. 'import' → logprob: -8.359004974365234
    10. '
' → logprob: -8.359004974365234

Token 1552: ' future' (ID: 5277)
  Prédit: 'express'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'express' → logprob: -1.2943503856658936
    2. 'all' → logprob: -1.9193503856658936
    3. ' four' → logprob: -2.4193503856658936
    4. '4' → logprob: -2.4193503856658936
    5. ' expressions' → logprob: -2.5443503856658936
    6. ' all' → logprob: -2.9193503856658936
    7. ' use' → logprob: -3.0443503856658936
    8. ' building' → logprob: -4.169350624084473
    9. ' solving' → logprob: -4.544350624084473
    10. 'building' → logprob: -4.669350624084473

Token 1553: ' extensions' (ID: 34511)
  Prédit: 'extensions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'extensions' → logprob: -0.6324014067649841
    2. 'use' → logprob: -2.132401466369629
    3. 'usage' → logprob: -2.257401466369629
    4. 'exp' → logprob: -2.882401466369629
    5. '   ' → logprob: -3.132401466369629
    6. ' use' → logprob: -3.882401466369629
    7. 'ext' → logprob: -4.257401466369629
    8. 'implement' → logprob: -4.257401466369629
    9. ' usage' → logprob: -4.882401466369629
    10. 'com' → logprob: -5.132401466369629

Token 1554: ' like' (ID: 1299)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029033275321125984
    2. ':' → logprob: -3.6540331840515137
    3. ':
' → logprob: -6.779033184051514
    4. '
' → logprob: -7.904033184051514
    5. '.' → logprob: -8.029033660888672
    6. ',' → logprob: -8.154033660888672
    7. 'and' → logprob: -8.779033660888672
    8. '(' → logprob: -9.529033660888672
    9. '):
' → logprob: -9.654033660888672
    10. '<|end|>' → logprob: -10.029033660888672

Token 1555: ' multiple' (ID: 7598)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.5515918731689453
    2. 'c' → logprob: -2.4265918731689453
    3. 'def' → logprob: -2.6765918731689453
    4. 'dynamic' → logprob: -3.3015918731689453
    5. ' memo' → logprob: -3.8015918731689453
    6. '   ' → logprob: -3.9265918731689453
    7. 'all' → logprob: -3.9265918731689453
    8. 'min' → logprob: -4.176591873168945
    9. 'express' → logprob: -4.176591873168945
    10. 'enumer' → logprob: -4.301591873168945

Token 1556: ' operators' (ID: 29893)
  Prédit: 'levels'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'levels' → logprob: -1.0777339935302734
    2. 'def' → logprob: -2.3277339935302734
    3. 'methods' → logprob: -2.3277339935302734
    4. 'operators' → logprob: -2.7027339935302734
    5. 'variables' → logprob: -2.9527339935302734
    6. ' passes' → logprob: -3.4527339935302734
    7. 'express' → logprob: -3.4527339935302734
    8. ' levels' → logprob: -3.5777339935302734
    9. 'passes' → logprob: -4.077733993530273
    10. 'layers' → logprob: -4.327733993530273

Token 1557: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2849946916103363
    2. ',' → logprob: -2.159994602203369
    3. ':' → logprob: -2.534994602203369
    4. '.' → logprob: -4.034994602203369
    5. 'and' → logprob: -4.409994602203369
    6. ' and' → logprob: -4.784994602203369
    7. '):
' → logprob: -4.909994602203369
    8. '):' → logprob: -5.909994602203369
    9. ':
' → logprob: -6.659994602203369
    10. ')' → logprob: -7.409994602203369

Token 1558: ' arbitrary' (ID: 56424)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.47570914030075073
    2. 'memo' → logprob: -1.6007091999053955
    3. '   ' → logprob: -1.8507091999053955
    4. ' memo' → logprob: -5.975708961486816
    5. 'cache' → logprob: -6.100708961486816
    6. 'variables' → logprob: -6.225708961486816
    7. 'min' → logprob: -6.600708961486816
    8. 'constants' → logprob: -6.725708961486816
    9. ' #' → logprob: -6.975708961486816
    10. 'simpl' → logprob: -7.100708961486816

Token 1559: ' variables' (ID: 13955)
  Prédit: 'variables'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'variables' → logprob: -1.6335318088531494
    2. 'depth' → logprob: -2.0085318088531494
    3. '#' → logprob: -2.1335318088531494
    4. 'express' → logprob: -2.1335318088531494
    5. 'variable' → logprob: -2.6335318088531494
    6. 'sizes' → logprob: -3.2585318088531494
    7. 'var' → logprob: -3.3835318088531494
    8. 'numbers' → logprob: -3.6335318088531494
    9. 'levels' → logprob: -3.6335318088531494
    10. '   ' → logprob: -3.8835318088531494

Token 1560: ' counts' (ID: 28991)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20990274846553802
    2. '   ' → logprob: -1.8349027633666992
    3. 'and' → logprob: -4.459902763366699
    4. '.' → logprob: -5.334902763366699
    5. ' and' → logprob: -5.584902763366699
    6. ',
' → logprob: -5.959902763366699
    7. '):
' → logprob: -6.084902763366699
    8. ':' → logprob: -6.459902763366699
    9. 'class' → logprob: -7.084902763366699
    10. '...' → logprob: -7.584902763366699

Token 1561: ' etc' (ID: 5178)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17215192317962646
    2. '.' → logprob: -2.672152042388916
    3. '   ' → logprob: -2.672152042388916
    4. ':' → logprob: -5.297152042388916
    5. 'and' → logprob: -5.797152042388916
    6. ',
' → logprob: -6.172152042388916
    7. '):
' → logprob: -6.172152042388916
    8. '):' → logprob: -6.297152042388916
    9. '<|end|>' → logprob: -6.547152042388916
    10. ')' → logprob: -6.547152042388916

Token 1562: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08915560692548752
    2. ':' → logprob: -3.214155673980713
    3. '):
' → logprob: -3.964155673980713
    4. '):' → logprob: -4.589155673980713
    5. '.' → logprob: -4.964155673980713
    6. '
' → logprob: -5.589155673980713
    7. ':
' → logprob: -6.089155673980713
    8. ')' → logprob: -6.964155673980713
    9. ',' → logprob: -7.464155673980713
    10. '):

' → logprob: -7.589155673980713

Token 1563: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07060493528842926
    2. '
' → logprob: -2.6956050395965576
    3. '    
' → logprob: -7.4456048011779785
    4. '

' → logprob: -10.570605278015137
    5. ' 
' → logprob: -11.445605278015137
    6. '```' → logprob: -11.570605278015137
    7. '#' → logprob: -11.695605278015137
    8. 'class' → logprob: -11.945605278015137
    9. ':' → logprob: -12.195605278015137
    10. '   
' → logprob: -12.695605278015137

Token 1564: ' """

' (ID: 28800)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004802007228136063
    2. '
' → logprob: -5.379802227020264
    3. '    
' → logprob: -8.754801750183105
    4. 'class' → logprob: -12.254801750183105
    5. 'def' → logprob: -12.379801750183105
    6. ' def' → logprob: -12.879801750183105
    7. '#' → logprob: -12.879801750183105
    8. '```' → logprob: -13.379801750183105
    9. 'IND' → logprob: -13.629801750183105
    10. '

' → logprob: -13.629801750183105

Token 1565: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11163314431905746
    2. ' def' → logprob: -2.361633062362671
    3. ' VAR' → logprob: -4.98663330078125
    4. 'def' → logprob: -5.61163330078125
    5. 'VAR' → logprob: -7.61163330078125
    6. 'class' → logprob: -9.11163330078125
    7. ' V' → logprob: -9.36163330078125
    8. '#' → logprob: -9.73663330078125
    9. 'V' → logprob: -9.86163330078125
    10. ' class' → logprob: -10.86163330078125

Token 1566: ' def' (ID: 1056)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.8420250415802002
    2. 'def' (adapté à ' def') → logprob: -0.8420250415802002
    3. 'VAR' → logprob: -2.3420250415802
    4. ' def' → logprob: -3.7170250415802
    5. '   ' → logprob: -4.717024803161621
    6. '_V' → logprob: -6.592024803161621
    7. ' VAR' → logprob: -6.592024803161621
    8. '#' → logprob: -6.592024803161621
    9. 'MAX' → logprob: -6.717024803161621
    10. '_vars' → logprob: -6.842024803161621

Token 1567: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.008339979685842991
    2. 'init' → logprob: -5.133339881896973
    3. ' __' → logprob: -6.133339881896973
    4. '_init' → logprob: -9.258339881896973
    5. 'staticmethod' → logprob: -9.758339881896973
    6. 'def' → logprob: -9.883339881896973
    7. 'classmethod' → logprob: -10.758339881896973
    8. '___' → logprob: -13.008339881896973
    9. '_slots' → logprob: -13.133339881896973
    10. 'property' → logprob: -13.258339881896973

Token 1568: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.001327499165199697
    2. 'slots' → logprob: -6.6263275146484375
    3. 'tokens' → logprob: -14.001327514648438
    4. '_slots' → logprob: -15.626327514648438
    5. 'cache' → logprob: -16.126327514648438
    6. ' init' → logprob: -16.626327514648438
    7. '_init' → logprob: -16.751327514648438
    8. 'token' → logprob: -16.876327514648438
    9. 'code' → logprob: -17.001327514648438
    10. 'slot' → logprob: -17.251327514648438

Token 1569: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.006086157634854317
    2. '(self' → logprob: -5.131086349487305
    3. '__' → logprob: -9.381086349487305
    4. '__(
' → logprob: -9.756086349487305
    5. 'self' → logprob: -12.131086349487305
    6. '_(' → logprob: -12.881086349487305
    7. '
' → logprob: -13.256086349487305
    8. '(' → logprob: -13.256086349487305
    9. '   ' → logprob: -13.631086349487305
    10. ' (' → logprob: -13.756086349487305

Token 1570: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.4391956685576588e-05
    2. ')' → logprob: -11.375024795532227
    3. '):
' → logprob: -11.875024795532227
    4. '
' → logprob: -13.125024795532227
    5. ' self' → logprob: -13.250024795532227
    6. '0' → logprob: -14.000024795532227
    7. '   ' → logprob: -14.750024795532227
    8. '       ' → logprob: -15.750024795532227
    9. ')
' → logprob: -15.750024795532227
    10. '(self' → logprob: -15.875024795532227

Token 1571: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1447007805109024
    2. '):
' → logprob: -2.769700765609741
    3. 'self' → logprob: -3.019700765609741
    4. '   ' → logprob: -4.39470100402832
    5. ')' → logprob: -5.26970100402832
    6. '):' → logprob: -5.64470100402832
    7. '(self' → logprob: -6.76970100402832
    8. '
' → logprob: -8.01970100402832
    9. ' ' → logprob: -8.26970100402832
    10. '       ' → logprob: -8.76970100402832

Token 1572: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.012542495504021645
    2. '       ' → logprob: -4.512542724609375
    3. '):
' → logprob: -6.637542724609375
    4. '   ' → logprob: -9.512542724609375
    5. ' self' → logprob: -10.387542724609375
    6. ')' → logprob: -10.762542724609375
    7. '):' → logprob: -10.762542724609375
    8. '(self' → logprob: -10.887542724609375
    9. '
' → logprob: -11.387542724609375
    10. '```' → logprob: -13.512542724609375

Token 1573: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002570067998021841
    2. '       ' → logprob: -6.002570152282715
    3. 'from' → logprob: -9.752570152282715
    4. '#' (adapté à ' #') → logprob: -10.252570152282715
    5. ' self' → logprob: -14.127570152282715
    6. '   ' → logprob: -15.627570152282715
    7. '	self' → logprob: -17.2525691986084
    8. '(self' → logprob: -18.6275691986084
    9. '           ' → logprob: -19.7525691986084
    10. 'super' → logprob: -20.0025691986084

Token 1574: ' Maps' (ID: 43803)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0011977284448221326
    2. '       ' → logprob: -6.751197814941406
    3. 'from' → logprob: -10.626197814941406
    4. ' self' → logprob: -13.376197814941406
    5. '#' → logprob: -13.501197814941406
    6. '   ' → logprob: -15.376197814941406
    7. '
' → logprob: -17.376197814941406
    8. '(self' → logprob: -18.126197814941406
    9. 'import' → logprob: -18.251197814941406
    10. '	self' → logprob: -18.251197814941406

Token 1575: ' Truth' (ID: 47310)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005232694558799267
    2. '       ' → logprob: -5.380232810974121
    3. '{}' → logprob: -7.880232810974121
    4. '{' → logprob: -9.380232810974121
    5. ' self' → logprob: -9.630232810974121
    6. '{}
' → logprob: -10.380232810974121
    7. '
' → logprob: -10.880232810974121
    8. '           ' → logprob: -11.505232810974121
    9. '#' → logprob: -11.880232810974121
    10. '{})' → logprob: -12.130232810974121

Token 1576: 'Table' (ID: 3429)
  Prédit: 'Table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Table' → logprob: -1.5048530030981055e-06
    2. 'Tables' → logprob: -14.250001907348633
    3. '   ' → logprob: -14.375001907348633
    4. '       ' → logprob: -16.250001907348633
    5. 'Tab' → logprob: -17.000001907348633
    6. '_table' → logprob: -17.000001907348633
    7. 'table' → logprob: -17.000001907348633
    8. '	Table' → logprob: -17.250001907348633
    9. '<Table' → logprob: -17.375001907348633
    10. 'TABLE' → logprob: -17.625001907348633

Token 1577: '.bits' (ID: 89914)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7644082307815552
    2. ':' → logprob: -1.7644082307815552
    3. 'to' → logprob: -2.1394081115722656
    4. '(self' → logprob: -2.3894081115722656
    5. ',' → logprob: -2.6394081115722656
    6. ' to' → logprob: -3.3894081115722656
    7. '_to' → logprob: -3.6394081115722656
    8. ' self' → logprob: -5.014408111572266
    9. '       ' → logprob: -5.389408111572266
    10. ' ->' → logprob: -6.139408111572266

Token 1578: ' ->' (ID: 2747)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.82069331407547
    2. ':' → logprob: -1.0706932544708252
    3. ' =' → logprob: -1.5706932544708252
    4. 'to' → logprob: -5.320693492889404
    5. ' to' → logprob: -6.195693492889404
    6. '_to' → logprob: -6.570693492889404
    7. ' :' → logprob: -8.070693016052246
    8. '       ' → logprob: -8.445693016052246
    9. 'To' → logprob: -9.820693016052246
    10. 'self' → logprob: -9.945693016052246

Token 1579: ' minimal' (ID: 19957)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.5203598737716675
    2. '(str' → logprob: -1.7703598737716675
    3. '(set' → logprob: -2.145359992980957
    4. 'str' → logprob: -2.895359992980957
    5. '(self' → logprob: -4.270359992980957
    6. '(B' → logprob: -4.520359992980957
    7. '(' → logprob: -4.770359992980957
    8. '(min' → logprob: -5.145359992980957
    9. 'self' → logprob: -6.020359992980957
    10. '{' → logprob: -6.020359992980957

Token 1580: ' length' (ID: 5517)
  Prédit: '_expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_expr' → logprob: -0.28488028049468994
    2. 'expr' → logprob: -1.78488028049469
    3. '_expression' → logprob: -3.6598801612854004
    4. '_form' → logprob: -4.6598801612854
    5. 'form' → logprob: -4.7848801612854
    6. ' expression' → logprob: -5.2848801612854
    7. 'expression' → logprob: -5.2848801612854
    8. 'Expr' → logprob: -5.2848801612854
    9. ' expr' → logprob: -6.0348801612854
    10. 'str' → logprob: -6.0348801612854

Token 1581: ' expression' (ID: 12973)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.0724495649337769
    2. '       ' → logprob: -1.1974495649337769
    3. ':' → logprob: -2.1974496841430664
    4. 'expr' → logprob: -2.4474496841430664
    5. ',' → logprob: -3.4474496841430664
    6. ' self' → logprob: -3.4474496841430664
    7. '(self' → logprob: -3.6974496841430664
    8. ' =' → logprob: -3.8224496841430664
    9. '_expr' → logprob: -4.322449684143066
    10. '{' → logprob: -4.822449684143066

Token 1582: ' strings' (ID: 18279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3490718901157379
    2. ' =' → logprob: -2.099071979522705
    3. 'self' → logprob: -2.599071979522705
    4. '=' → logprob: -3.099071979522705
    5. ',' → logprob: -3.474071979522705
    6. '{' → logprob: -5.099071979522705
    7. ':' → logprob: -5.224071979522705
    8. '(self' → logprob: -5.224071979522705
    9. ' self' → logprob: -5.974071979522705
    10. '           ' → logprob: -7.724071979522705

Token 1583: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0054645054042339325
    2. 'self' → logprob: -5.255464553833008
    3. ' self' → logprob: -9.130464553833008
    4. '(self' → logprob: -9.880464553833008
    5. ',' → logprob: -10.505464553833008
    6. 'from' → logprob: -11.130464553833008
    7. '
' → logprob: -11.380464553833008
    8. ' =' → logprob: -12.505464553833008
    9. ':' → logprob: -12.505464553833008
    10. '   ' → logprob: -13.505464553833008

Token 1584: ' that' (ID: 484)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1291245222091675
    2. 'self' → logprob: -1.5041245222091675
    3. 'their' → logprob: -1.5041245222091675
    4. 'set' → logprob: -2.879124641418457
    5. 'the' → logprob: -3.754124641418457
    6. '{' → logprob: -3.754124641418457
    7. 'minimal' → logprob: -3.754124641418457
    8. '
' → logprob: -4.129124641418457
    9. 'express' → logprob: -4.254124641418457
    10. ' their' → logprob: -4.379124641418457

Token 1585: ' function' (ID: 1114)
  Prédit: 'truth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'truth' → logprob: -0.7133079767227173
    2. 'bits' → logprob: -1.3383079767227173
    3. 'Truth' → logprob: -1.5883079767227173
    4. ' bits' → logprob: -4.088307857513428
    5. '_truth' → logprob: -4.963307857513428
    6. 'function' → logprob: -5.088307857513428
    7. ' truth' → logprob: -5.088307857513428
    8. 'bit' → logprob: -6.713307857513428
    9. '_bits' → logprob: -7.088307857513428
    10. '
' → logprob: -7.338307857513428

Token 1586: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02857206016778946
    2. 'self' → logprob: -3.6535720825195312
    3. ',' → logprob: -6.528572082519531
    4. ' self' → logprob: -8.153572082519531
    5. '{' → logprob: -8.778572082519531
    6. '(self' → logprob: -9.028572082519531
    7. '=' → logprob: -9.403572082519531
    8. ' =' → logprob: -9.403572082519531
    9. ':' → logprob: -10.028572082519531
    10. '
' → logprob: -11.903572082519531

Token 1587: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000453910295618698
    2. 'self' → logprob: -7.750453948974609
    3. '
' → logprob: -10.87545394897461
    4. ' self' → logprob: -12.62545394897461
    5. ',' → logprob: -14.87545394897461
    6. '(self' → logprob: -15.37545394897461
    7. 'def' → logprob: -16.12545394897461
    8. '   ' → logprob: -16.12545394897461
    9. 'from' → logprob: -16.87545394897461
    10. '           ' → logprob: -17.25045394897461

Token 1588: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00775119848549366
    2. '       ' → logprob: -5.007750988006592
    3. ' self' → logprob: -6.882750988006592
    4. '{' → logprob: -11.88275146484375
    5. '	self' → logprob: -13.38275146484375
    6. '(self' → logprob: -14.50775146484375
    7. '{}' → logprob: -14.88275146484375
    8. '   ' → logprob: -15.75775146484375
    9. '#' → logprob: -16.25775146484375
    10. '{
' → logprob: -16.38275146484375

Token 1589: '.cache' (ID: 37175)
  Prédit: '.cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cache' → logprob: -0.6950318813323975
    2. '.min' → logprob: -1.5700318813323975
    3. '.ex' → logprob: -2.0700318813323975
    4. '._' → logprob: -2.8200318813323975
    5. '.expr' → logprob: -2.9450318813323975
    6. 'expr' → logprob: -5.570032119750977
    7. '.best' → logprob: -5.570032119750977
    8. '=' → logprob: -5.695032119750977
    9. 'cache' → logprob: -5.820032119750977
    10. '.table' → logprob: -5.820032119750977

Token 1590: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.062048688530921936
    2. ' =' → logprob: -2.8120486736297607
    3. ':' → logprob: -9.68704891204834
    4. '       ' → logprob: -11.06204891204834
    5. '   ' → logprob: -12.93704891204834
    6. '={}' → logprob: -15.31204891204834
    7. '        ' → logprob: -15.81204891204834
    8. '	' → logprob: -16.687047958374023
    9. '=[]' → logprob: -16.687047958374023
    10. '    ' → logprob: -17.062047958374023

Token 1591: ' dict' (ID: 11878)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.002499794587492943
    2. 'dict' → logprob: -6.002499580383301
    3. '{' → logprob: -11.1274995803833
    4. 'default' → logprob: -11.8774995803833
    5. '={}' → logprob: -14.0024995803833
    6. '{}
' → logprob: -14.5024995803833
    7. ' dict' → logprob: -14.7524995803833
    8. ' {}' → logprob: -15.2524995803833
    9. '{})' → logprob: -15.2524995803833
    10. '{}

' → logprob: -16.377500534057617

Token 1592: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06130584701895714
    2. '   ' → logprob: -2.9363057613372803
    3. '
' → logprob: -5.186305999755859
    4. '<|end|>' → logprob: -7.811305999755859
    5. '    
' → logprob: -8.43630599975586
    6. '        
' → logprob: -10.31130599975586
    7. 'import' → logprob: -10.68630599975586
    8. ' ' → logprob: -10.68630599975586
    9. '<|end|>' → logprob: -10.68630599975586
    10. ')' → logprob: -10.81130599975586

Token 1593: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006550124380737543
    2. '       ' → logprob: -8.375655174255371
    3. 'def' → logprob: -8.500655174255371
    4. '    
' → logprob: -9.000655174255371
    5. '
' → logprob: -10.250655174255371
    6. 'from' → logprob: -11.125655174255371
    7. '<|end|>' → logprob: -11.375655174255371
    8. '@' → logprob: -11.500655174255371
    9. '        
' → logprob: -11.750655174255371
    10. '```' → logprob: -12.625655174255371

Token 1594: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01623225025832653
    2. 'def' → logprob: -4.266232013702393
    3. '       ' → logprob: -6.266232013702393
    4. ' def' → logprob: -9.01623249053955
    5. '
' → logprob: -10.64123249053955
    6. 'from' → logprob: -12.01623249053955
    7. '    
' → logprob: -12.51623249053955
    8. 'import' → logprob: -12.89123249053955
    9. '@' → logprob: -13.14123249053955
    10. '	def' → logprob: -13.26623249053955

Token 1595: ' We' (ID: 1416)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.055850800126791
    2. '       ' → logprob: -3.3058507442474365
    3. 'def' → logprob: -4.555850982666016
    4. '#' → logprob: -5.555850982666016
    5. 'from' → logprob: -5.805850982666016
    6. '   ' → logprob: -8.430850982666016
    7. ' self' → logprob: -11.055850982666016
    8. 'import' → logprob: -11.180850982666016
    9. 'for' → logprob: -12.180850982666016
    10. 'class' → logprob: -12.305850982666016

Token 1596: ' use' (ID: 1199)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3171807527542114
    2. 'from' → logprob: -1.8171807527542114
    3. '   ' → logprob: -2.942180633544922
    4. 'def' → logprob: -3.442180633544922
    5. 'import' → logprob: -5.067180633544922
    6. 'work' → logprob: -5.692180633544922
    7. '#' → logprob: -5.692180633544922
    8. 'queue' → logprob: -6.067180633544922
    9. 'self' → logprob: -6.567180633544922
    10. 'initialize' → logprob: -6.567180633544922

Token 1597: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.39314499497413635
    2. '[]' → logprob: -1.893144965171814
    3. '{' → logprob: -2.8931450843811035
    4. 'from' → logprob: -3.1431450843811035
    5. '{}' → logprob: -3.7681450843811035
    6. 'deque' → logprob: -4.1431450843811035
    7. '[]
' → logprob: -4.3931450843811035
    8. 'set' → logprob: -5.0181450843811035
    9. '       ' → logprob: -5.3931450843811035
    10. '[self' → logprob: -5.7681450843811035

Token 1598: ' set' (ID: 920)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.17139625549316406
    2. 'queue' → logprob: -1.921396255493164
    3. 'import' → logprob: -5.046396255493164
    4. 'work' → logprob: -6.296396255493164
    5. 'next' → logprob: -7.421396255493164
    6. 'to' → logprob: -7.421396255493164
    7. '#' → logprob: -7.546396255493164
    8. 'expr' → logprob: -8.421396255493164
    9. 'todo' → logprob: -8.421396255493164
    10. 'deque' → logprob: -8.671396255493164

Token 1599: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19663049280643463
    2. '()' → logprob: -2.4466304779052734
    3. 'self' → logprob: -3.0716304779052734
    4. '()
' → logprob: -4.196630477905273
    5. ' of' → logprob: -4.321630477905273
    6. 'of' → logprob: -4.946630477905273
    7. 'from' → logprob: -6.196630477905273
    8. '#' → logprob: -6.571630477905273
    9. ',' → logprob: -6.696630477905273
    10. ' self' → logprob: -6.821630477905273

Token 1600: ' vars' (ID: 36194)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4169136881828308
    2. 'from' → logprob: -1.5419137477874756
    3. 'express' → logprob: -3.0419137477874756
    4. '
' → logprob: -4.0419135093688965
    5. 'queue' → logprob: -4.0419135093688965
    6. 'expr' → logprob: -5.0419135093688965
    7. 'current' → logprob: -5.5419135093688965
    8. 'seen' → logprob: -5.7919135093688965
    9. '       ' → logprob: -5.9169135093688965
    10. 'initial' → logprob: -6.1669135093688965

Token 1601: ' as' (ID: 472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6022061705589294
    2. ' =' → logprob: -0.8522061705589294
    3. 'self' → logprob: -4.602206230163574
    4. '(self' → logprob: -4.852206230163574
    5. '=' → logprob: -5.352206230163574
    6. '   ' → logprob: -6.852206230163574
    7. ' self' → logprob: -7.352206230163574
    8. ',' → logprob: -8.477206230163574
    9. '({'' → logprob: -8.727206230163574
    10. 'for' → logprob: -8.977206230163574

Token 1602: ' primitives' (ID: 174906)
  Prédit: '{''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{'' → logprob: -0.6046743988990784
    2. '{' → logprob: -1.4796743392944336
    3. 'keys' → logprob: -2.3546743392944336
    4. 'fro' → logprob: -3.2296743392944336
    5. 'set' → logprob: -4.104674339294434
    6. 'seen' → logprob: -4.354674339294434
    7. ' {'' → logprob: -4.729674339294434
    8. 'Var' → logprob: -4.854674339294434
    9. 'starting' → logprob: -4.979674339294434
    10. '['' → logprob: -5.229674339294434

Token 1603: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002260283101350069
    2. 'self' → logprob: -6.377260208129883
    3. ',' → logprob: -7.752260208129883
    4. ' self' → logprob: -9.252260208129883
    5. '   ' → logprob: -10.877260208129883
    6. '(self' → logprob: -12.502260208129883
    7. 'for' → logprob: -13.377260208129883
    8. ' for' → logprob: -13.877260208129883
    9. ',self' → logprob: -14.002260208129883
    10. ':' → logprob: -14.002260208129883

Token 1604: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.519893501419574e-05
    2. 'self' → logprob: -10.00009536743164
    3. ',' → logprob: -10.25009536743164
    4. '   ' → logprob: -12.12509536743164
    5. 'for' → logprob: -13.00009536743164
    6. 'from' → logprob: -13.00009536743164
    7. '{' → logprob: -13.87509536743164
    8. ' self' → logprob: -14.12509536743164
    9. '
' → logprob: -14.25009536743164
    10. 'import' → logprob: -14.87509536743164

Token 1605: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09282218664884567
    2. 'self' (adapté à ' self') → logprob: -2.7178220748901367
    3. 'for' → logprob: -3.8428220748901367
    4. ' for' → logprob: -7.842822074890137
    5. ' self' → logprob: -7.967822074890137
    6. 'from' → logprob: -9.092822074890137
    7. 'var' → logprob: -9.217822074890137
    8. 'vars' → logprob: -9.217822074890137
    9. '   ' → logprob: -9.467822074890137
    10. '#' → logprob: -10.217822074890137

Token 1606: '.pr' (ID: 27292)
  Prédit: '.V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.V' → logprob: -0.062243275344371796
    2. '.vars' → logprob: -3.3122432231903076
    3. '.cache' → logprob: -4.062243461608887
    4. 'cache' → logprob: -6.187243461608887
    5. 'vars' → logprob: -6.687243461608887
    6. '._' → logprob: -7.187243461608887
    7. '_vars' → logprob: -7.562243461608887
    8. '.variables' → logprob: -7.687243461608887
    9. '       ' → logprob: -8.812243461608887
    10. '   ' → logprob: -8.812243461608887

Token 1607: 'imitives' (ID: 92974)
  Prédit: 'imitives'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imitives' → logprob: -0.306087464094162
    2. 'im' → logprob: -1.4310874938964844
    3. 'ims' → logprob: -4.806087493896484
    4. 'e' → logprob: -5.681087493896484
    5. 'imit' → logprob: -6.056087493896484
    6. 'ops' → logprob: -6.306087493896484
    7. 'imed' → logprob: -6.806087493896484
    8. 'oc' → logprob: -7.306087493896484
    9. 'ov' → logprob: -7.306087493896484
    10. 'int' → logprob: -7.556087493896484

Token 1608: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16023123264312744
    2. '=' → logprob: -1.9102312326431274
    3. ':' → logprob: -12.660231590270996
    4. '   ' → logprob: -12.910231590270996
    5. '=set' → logprob: -14.410231590270996
    6. '={'' → logprob: -15.160231590270996
    7. ' ={' → logprob: -15.785231590270996
    8. ' ' → logprob: -16.28523063659668
    9. '={' → logprob: -16.78523063659668
    10. '={}' → logprob: -16.78523063659668

Token 1609: ' [
' (ID: 4240)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.3461892008781433
    2. '[' → logprob: -1.346189260482788
    3. '{'' → logprob: -3.971189260482788
    4. '['' → logprob: -4.721189022064209
    5. '[
' → logprob: -6.096189022064209
    6. '{
' → logprob: -6.471189022064209
    7. '[{' → logprob: -8.471189498901367
    8. '[var' → logprob: -8.596189498901367
    9. ' {' → logprob: -9.346189498901367
    10. '[self' → logprob: -9.471189498901367

Token 1610: '           ' (ID: 352)
  Prédit: 'Var'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Var' → logprob: -0.022781699895858765
    2. '       ' → logprob: -4.272781848907471
    3. 'Const' → logprob: -5.397781848907471
    4. ' Var' → logprob: -5.522781848907471
    5. '           ' → logprob: -10.522781372070312
    6. '   ' → logprob: -11.647781372070312
    7. ' Const' → logprob: -12.147781372070312
    8. '        ' → logprob: -12.272781372070312
    9. 'Vars' → logprob: -13.022781372070312
    10. 'var' → logprob: -13.147781372070312

Token 1611: ' (' (ID: 350)
  Prédit: 'Var'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Var' → logprob: -0.20146334171295166
    2. 'Const' → logprob: -1.7014633417129517
    3. ' Var' → logprob: -10.82646369934082
    4. '       ' → logprob: -11.82646369934082
    5. '   ' → logprob: -11.95146369934082
    6. ' Const' → logprob: -12.57646369934082
    7. 'const' → logprob: -12.82646369934082
    8. 'Vars' → logprob: -12.95146369934082
    9. '(Const' → logprob: -13.45146369934082
    10. 'var' → logprob: -13.57646369934082

Token 1612: 'Truth' (ID: 46872)
  Prédit: 'Var'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Var' → logprob: -0.058489102870225906
    2. 'Const' → logprob: -2.9334890842437744
    3. ''' → logprob: -6.0584893226623535
    4. 'True' → logprob: -8.058488845825195
    5. ' Var' → logprob: -8.183488845825195
    6. 'Bool' → logprob: -8.933488845825195
    7. '1' → logprob: -9.808488845825195
    8. '"' → logprob: -9.808488845825195
    9. '('' → logprob: -9.808488845825195
    10. 'False' → logprob: -9.933488845825195

Token 1613: 'Table' (ID: 3429)
  Prédit: 'Table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Table' → logprob: -2.176947600673884e-05
    2. '           ' → logprob: -11.125021934509277
    3. '<Table' → logprob: -13.250021934509277
    4. '	Table' → logprob: -13.875021934509277
    5. '(Table' → logprob: -14.000021934509277
    6. 'Var' → logprob: -14.375021934509277
    7. '@Table' → logprob: -14.375021934509277
    8. ' Table' → logprob: -14.875021934509277
    9. '   ' → logprob: -14.875021934509277
    10. ')' → logprob: -15.250021934509277

Token 1614: '(' (ID: 7)
  Prédit: '(bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bits' → logprob: -0.7300931215286255
    2. '({'' → logprob: -1.9800931215286255
    3. '(['' → logprob: -2.105093002319336
    4. '(' → logprob: -2.855093002319336
    5. '('' → logprob: -2.980093002319336
    6. '(('' → logprob: -3.355093002319336
    7. '.V' → logprob: -3.480093002319336
    8. '({' → logprob: -3.980093002319336
    9. '.Var' → logprob: -4.230093002319336
    10. '(V' → logprob: -4.730093002319336

Token 1615: 'Var' (ID: 8106)
  Prédit: 'Var'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Var' → logprob: -0.012538615614175797
    2. 'Const' → logprob: -4.387538433074951
    3. ' Var' → logprob: -10.88753890991211
    4. '   ' → logprob: -13.13753890991211
    5. 'const' → logprob: -13.38753890991211
    6. 'Bool' → logprob: -13.63753890991211
    7. 'Vars' → logprob: -13.76253890991211
    8. 'var' → logprob: -13.76253890991211
    9. 'Variable' → logprob: -14.26253890991211
    10. 'Parser' → logprob: -14.76253890991211

Token 1616: '(v' (ID: 6932)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0019307781476527452
    2. ''a' → logprob: -6.3769307136535645
    3. ''' → logprob: -9.126931190490723
    4. '(a' → logprob: -10.001931190490723
    5. 'a' → logprob: -11.126931190490723
    6. '(' → logprob: -11.251931190490723
    7. ''s' → logprob: -11.751931190490723
    8. '("' → logprob: -12.251931190490723
    9. ' ('' → logprob: -12.251931190490723
    10. ''y' → logprob: -12.751931190490723

Token 1617: ')).' (ID: 8784)
  Prédit: ')),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')),' → logprob: -0.44341859221458435
    2. '),' → logprob: -1.0684186220169067
    3. ''' → logprob: -5.818418502807617
    4. 'v' → logprob: -5.818418502807617
    5. '')),' → logprob: -6.068418502807617
    6. ''),' → logprob: -6.193418502807617
    7. '(v' → logprob: -6.943418502807617
    8. '('' → logprob: -7.318418502807617
    9. ')' → logprob: -7.693418502807617
    10. ' ' → logprob: -8.193418502807617

Token 1618: 'bits' (ID: 24043)
  Prédit: 'bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.14832080900669098
    2. 'v' → logprob: -3.1483209133148193
    3. '0' → logprob: -3.5233209133148193
    4. '__' → logprob: -4.52332067489624
    5. '1' → logprob: -4.64832067489624
    6. 's' → logprob: -5.14832067489624
    7. ' bits' → logprob: -5.14832067489624
    8. 'name' → logprob: -5.39832067489624
    9. 'canonical' → logprob: -5.64832067489624
    10. 'keys' → logprob: -5.77332067489624

Token 1619: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005150251090526581
    2. ' ,' → logprob: -7.875514984130859
    3. '           ' → logprob: -9.50051498413086
    4. '       ' → logprob: -11.25051498413086
    5. ','' → logprob: -11.25051498413086
    6. ',
' → logprob: -12.00051498413086
    7. '         ' → logprob: -12.25051498413086
    8. '        ' → logprob: -12.37551498413086
    9. '          ' → logprob: -12.50051498413086
    10. '            ' → logprob: -12.50051498413086

Token 1620: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.7058239579200745
    2. '{' → logprob: -0.7058239579200745
    3. 'Var' → logprob: -4.95582389831543
    4. ' {' → logprob: -5.45582389831543
    5. ' v' → logprob: -7.20582389831543
    6. 'var' → logprob: -8.58082389831543
    7. 'f' → logprob: -9.45582389831543
    8. 'set' → logprob: -9.70582389831543
    9. '           ' → logprob: -10.20582389831543
    10. '[v' → logprob: -10.83082389831543

Token 1621: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.626739501953125
    2. '),
' → logprob: -1.001739501953125
    3. '),' → logprob: -2.501739501953125
    4. ')
' → logprob: -5.001739501953125
    5. '           ' → logprob: -5.251739501953125
    6. ',' → logprob: -5.876739501953125
    7. '       ' → logprob: -7.001739501953125
    8. ' ),
' → logprob: -8.626739501953125
    9. '          ' → logprob: -8.876739501953125
    10. '),
' → logprob: -8.876739501953125

Token 1622: ' for' (ID: 395)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.540827214717865
    2. ',
' → logprob: -1.1658272743225098
    3. '       ' → logprob: -2.7908272743225098
    4. '           ' → logprob: -3.2908272743225098
    5. ' for' → logprob: -5.16582727432251
    6. 'for' → logprob: -6.79082727432251
    7. ')' → logprob: -7.66582727432251
    8. ' ,' → logprob: -10.165826797485352
    9. '   ' → logprob: -10.415826797485352
    10. ',
' → logprob: -11.040826797485352

Token 1623: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00018232580623589456
    2. ' v' → logprob: -8.625182151794434
    3. ''' → logprob: -13.375182151794434
    4. 'var' → logprob: -14.750182151794434
    5. '	v' → logprob: -15.500182151794434
    6. '`' → logprob: -16.12518310546875
    7. '
' → logprob: -16.62518310546875
    8. '   ' → logprob: -16.62518310546875
    9. 'vq' → logprob: -16.87518310546875
    10. ')v' → logprob: -17.00018310546875

Token 1624: ' in' (ID: 306)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.012949502095580101
    2. 'in' → logprob: -4.887949466705322
    3. ' in' → logprob: -5.637949466705322
    4. ' v' → logprob: -6.512949466705322
    5. ''' → logprob: -8.38794994354248
    6. ' '' → logprob: -10.26294994354248
    7. ''in' → logprob: -11.13794994354248
    8. 'var' → logprob: -13.26294994354248
    9. ' ' → logprob: -13.88794994354248
    10. '('' → logprob: -14.13794994354248

Token 1625: ' Truth' (ID: 47310)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.17327459156513214
    2. 'Bool' → logprob: -2.548274517059326
    3. 'Truth' → logprob: -3.423274517059326
    4. '['' → logprob: -3.423274517059326
    5. '('' → logprob: -4.298274517059326
    6. '"' → logprob: -7.048274517059326
    7. 'self' → logprob: -8.798274993896484
    8. ''m' → logprob: -8.923274993896484
    9. ''T' → logprob: -9.048274993896484
    10. 'Com' → logprob: -9.173274993896484

Token 1626: 'Table' (ID: 3429)
  Prédit: 'Table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Table' → logprob: -0.00137404166162014
    2. 'able' → logprob: -6.876374244689941
    3. '['' → logprob: -8.001374244689941
    4. '_table' → logprob: -13.376374244689941
    5. 'ables' → logprob: -13.751374244689941
    6. '('' → logprob: -14.001374244689941
    7. '{'' → logprob: -14.001374244689941
    8. 'TABLE' → logprob: -14.376374244689941
    9. 'atable' → logprob: -15.751374244689941
    10. ''' → logprob: -16.001373291015625

Token 1627: '.V' (ID: 5970)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.13078531622886658
    2. '['' → logprob: -2.2557852268218994
    3. '(['' → logprob: -4.6307854652404785
    4. ')' → logprob: -6.3807854652404785
    5. ''' → logprob: -6.6307854652404785
    6. '   ' → logprob: -7.3807854652404785
    7. ']' → logprob: -7.7557854652404785
    8. '(a' → logprob: -7.8807854652404785
    9. '`' → logprob: -8.13078498840332
    10. '[:' → logprob: -8.13078498840332

Token 1628: 'ARS' (ID: 25776)
  Prédit: 'ARS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ARS' → logprob: -0.031676679849624634
    2. '['' → logprob: -3.531676769256592
    3. 'ars' → logprob: -6.906676769256592
    4. 'AR' → logprob: -7.281676769256592
    5. ''' → logprob: -9.531676292419434
    6. '[
' → logprob: -10.281676292419434
    7. '{'' → logprob: -10.406676292419434
    8. '[' → logprob: -11.281676292419434
    9. 'A' → logprob: -11.281676292419434
    10. '[['' → logprob: -11.281676292419434

Token 1629: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5760537385940552
    2. ']' → logprob: -0.8260537385940552
    3. '   ' → logprob: -10.326053619384766
    4. '           ' → logprob: -10.576053619384766
    5. ' ]' → logprob: -10.576053619384766
    6. ')' → logprob: -11.951053619384766
    7. ']
' → logprob: -11.951053619384766
    8. ']+' → logprob: -12.451053619384766
    9. ',' → logprob: -12.826053619384766
    10. '()]' → logprob: -13.326053619384766

Token 1630: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3144378662109375
    2. ']' → logprob: -1.3144378662109375
    3. '           ' → logprob: -7.0644378662109375
    4. ' ]' → logprob: -8.689437866210938
    5. ',' → logprob: -9.564437866210938
    6. ']+' → logprob: -10.689437866210938
    7. ',
' → logprob: -11.189437866210938
    8. '   ' → logprob: -11.439437866210938
    9. ']
' → logprob: -11.439437866210938
    10. ')' → logprob: -11.814437866210938

Token 1631: ' ]' (ID: 6045)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.637106716632843
    2. ']' (adapté à ' ]') → logprob: -0.762106716632843
    3. ',' → logprob: -6.012106895446777
    4. ' ]' → logprob: -7.137106895446777
    5. ',
' → logprob: -7.512106895446777
    6. ']
' → logprob: -7.887106895446777
    7. '           ' → logprob: -8.762106895446777
    8. ')' → logprob: -9.637106895446777
    9. '   ' → logprob: -9.887106895446777
    10. '],' → logprob: -11.387106895446777

Token 1632: ' +' (ID: 659)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0030165724456310272
    2. ')' → logprob: -6.503016471862793
    3. '
' → logprob: -7.128016471862793
    4. '<|end|>' → logprob: -8.003016471862793
    5. '   ' → logprob: -8.753016471862793
    6. '```' → logprob: -10.128016471862793
    7. ',' → logprob: -10.628016471862793
    8. '[' → logprob: -10.753016471862793
    9. ']' → logprob: -10.878016471862793
    10. '[
' → logprob: -10.878016471862793

Token 1633: ' [
' (ID: 4240)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.31340157985687256
    2. '[
' → logprob: -1.3134015798568726
    3. '[((' → logprob: -9.438401222229004
    4. '[' → logprob: -10.063401222229004
    5. '   ' → logprob: -11.938401222229004
    6. ' [
' → logprob: -12.063401222229004
    7. ' [(' → logprob: -12.438401222229004
    8. '       ' → logprob: -13.938401222229004
    9. '([
' → logprob: -16.31340217590332
    10. '([(' → logprob: -16.43840217590332

Token 1634: '           ' (ID: 352)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12269765883684158
    2. '           ' → logprob: -2.247697591781616
    3. ' (' → logprob: -5.122697830200195
    4. '       ' → logprob: -5.997697830200195
    5. '   ' → logprob: -6.622697830200195
    6. '(True' → logprob: -10.872697830200195
    7. '(T' → logprob: -12.122697830200195
    8. ' ' → logprob: -12.247697830200195
    9. '               ' → logprob: -12.747697830200195
    10. '(Tree' → logprob: -12.747697830200195

Token 1635: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' (adapté à ' (') → logprob: -0.004448631778359413
    2. ' (' → logprob: -6.129448413848877
    3. '   ' → logprob: -6.129448413848877
    4. '(True' → logprob: -10.129448890686035
    5. '       ' → logprob: -11.254448890686035
    6. ' ' → logprob: -11.379448890686035
    7. '           ' → logprob: -11.504448890686035
    8. '(False' → logprob: -12.254448890686035
    9. '  ' → logprob: -13.629448890686035
    10. '(T' → logprob: -14.379448890686035

Token 1636: 'Truth' (ID: 46872)
  Prédit: 'Truth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Truth' → logprob: -0.002259806264191866
    2. '(' → logprob: -6.377259731292725
    3. ' Truth' → logprob: -8.377260208129883
    4. 'True' → logprob: -8.627260208129883
    5. 'Truthy' → logprob: -10.002260208129883
    6. '   ' → logprob: -10.252260208129883
    7. 'truth' → logprob: -11.127260208129883
    8. '(True' → logprob: -11.252260208129883
    9. '1' → logprob: -11.877260208129883
    10. ' (' → logprob: -12.127260208129883

Token 1637: 'Table' (ID: 3429)
  Prédit: 'Table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Table' → logprob: -0.0007211300544440746
    2. 'Truth' → logprob: -7.250720977783203
    3. 'True' → logprob: -11.750720977783203
    4. '           ' → logprob: -14.375720977783203
    5. 'Tables' → logprob: -14.625720977783203
    6. '(Table' → logprob: -14.875720977783203
    7. 'Tree' → logprob: -15.125720977783203
    8. 'TABLE' → logprob: -15.125720977783203
    9. '(' → logprob: -15.125720977783203
    10. 'Tuple' → logprob: -15.250720977783203

Token 1638: '(Const' (ID: 112623)
  Prédit: '(Const'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Const' → logprob: -5.407366916188039e-05
    2. '(Constant' → logprob: -10.125054359436035
    3. ' (' → logprob: -12.500054359436035
    4. '   ' → logprob: -13.000054359436035
    5. 'Const' → logprob: -13.625054359436035
    6. '(
' → logprob: -13.750054359436035
    7. '(CON' → logprob: -13.875054359436035
    8. '(const' → logprob: -14.000054359436035
    9. '```' → logprob: -14.375054359436035
    10. '       ' → logprob: -14.500054359436035

Token 1639: '(False' (ID: 55925)
  Prédit: '(False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(False' → logprob: -0.00806496012955904
    2. '(True' → logprob: -5.3830647468566895
    3. 'False' → logprob: -5.7580647468566895
    4. '(Const' → logprob: -8.508065223693848
    5. '(Constant' → logprob: -10.133065223693848
    6. 'Const' → logprob: -11.758065223693848
    7. 'const' → logprob: -12.133065223693848
    8. 'True' → logprob: -12.383065223693848
    9. ' False' → logprob: -12.633065223693848
    10. '   ' → logprob: -12.758065223693848

Token 1640: ')).' (ID: 8784)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.24883702397346497
    2. ')).' → logprob: -1.6238369941711426
    3. ').' → logprob: -3.8738369941711426
    4. 'False' → logprob: -7.498836994171143
    5. ')),' → logprob: -7.498836994171143
    6. ')' → logprob: -7.748836994171143
    7. ' ),' → logprob: -8.2488374710083
    8. '   ' → logprob: -8.7488374710083
    9. '(False' → logprob: -8.7488374710083
    10. ' ).' → logprob: -10.1238374710083

Token 1641: 'bits' (ID: 24043)
  Prédit: 'bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.002317726379260421
    2. '.bits' → logprob: -6.127317905426025
    3. '0' → logprob: -9.252317428588867
    4. ' bits' → logprob: -11.502317428588867
    5. '[' → logprob: -11.627317428588867
    6. 'False' → logprob: -12.002317428588867
    7. '(bits' → logprob: -12.877317428588867
    8. 'True' → logprob: -13.127317428588867
    9. '1' → logprob: -13.377317428588867
    10. '.' → logprob: -13.627317428588867

Token 1642: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00031174797913990915
    2. ' ,' → logprob: -8.375311851501465
    3. ',
' → logprob: -9.875311851501465
    4. ','' → logprob: -11.375311851501465
    5. '   ' → logprob: -12.125311851501465
    6. '           ' → logprob: -12.375311851501465
    7. '       ' → logprob: -12.500311851501465
    8. ',
' → logprob: -13.625311851501465
    9. '',' → logprob: -14.000311851501465
    10. '    ' → logprob: -14.750311851501465

Token 1643: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.006741896737366915
    2. ' '' → logprob: -5.256742000579834
    3. '"' → logprob: -6.506742000579834
    4. '       ' → logprob: -12.756741523742676
    5. '   ' → logprob: -12.881741523742676
    6. ' "' → logprob: -13.381741523742676
    7. ' ' → logprob: -13.506741523742676
    8. '`' → logprob: -13.756741523742676
    9. '           ' → logprob: -14.006741523742676
    10. '('' → logprob: -14.131741523742676

Token 1644: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.392202976712724e-06
    2. ''' → logprob: -12.375006675720215
    3. ' ' → logprob: -13.250006675720215
    4. '"' → logprob: -15.125006675720215
    5. '\'' → logprob: -17.0000057220459
    6. '`' → logprob: -17.2500057220459
    7. '00' → logprob: -17.5000057220459
    8. '01' → logprob: -17.5000057220459
    9. '')' → logprob: -17.6250057220459
    10. 'False' → logprob: -18.0000057220459

Token 1645: ''),
' (ID: 7239)
  Prédit: ''),
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''),
' → logprob: -0.08350086957216263
    2. ''),' → logprob: -2.708500862121582
    3. '')' → logprob: -5.083500862121582
    4. ''' → logprob: -5.708500862121582
    5. ')' → logprob: -6.708500862121582
    6. ''),
' → logprob: -6.958500862121582
    7. '')
' → logprob: -7.458500862121582
    8. '),
' → logprob: -8.208500862121582
    9. '),' → logprob: -8.333500862121582
    10. ' '' → logprob: -8.708500862121582

Token 1646: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01380885485559702
    2. '(' → logprob: -4.763808727264404
    3. ' (' → logprob: -5.263808727264404
    4. '            ' → logprob: -12.638809204101562
    5. '   ' → logprob: -14.138809204101562
    6. '       ' → logprob: -14.638809204101562
    7. '          ' → logprob: -14.638809204101562
    8. '(True' → logprob: -16.138809204101562
    9. '(None' → logprob: -16.263809204101562
    10. '               ' → logprob: -16.513809204101562

Token 1647: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' (adapté à ' (') → logprob: -0.03305329382419586
    2. '           ' → logprob: -3.658053398132324
    3. ' (' → logprob: -5.033053398132324
    4. '   ' → logprob: -8.533053398132324
    5. '       ' → logprob: -11.658053398132324
    6. '(True' → logprob: -13.033053398132324
    7. '          ' → logprob: -13.908053398132324
    8. '  ' → logprob: -14.408053398132324
    9. ' ' → logprob: -14.408053398132324
    10. '            ' → logprob: -15.033053398132324

Token 1648: 'Truth' (ID: 46872)
  Prédit: 'Truth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Truth' → logprob: -2.522638169466518e-05
    2. ' Truth' → logprob: -10.875024795532227
    3. '(' → logprob: -12.500024795532227
    4. '           ' → logprob: -13.750024795532227
    5. 'Truthy' → logprob: -14.500024795532227
    6. 'True' → logprob: -15.125024795532227
    7. '   ' → logprob: -15.875024795532227
    8. 'truth' → logprob: -16.000024795532227
    9. 'Trace' → logprob: -17.000024795532227
    10. '       ' → logprob: -17.000024795532227

Token 1649: 'Table' (ID: 3429)
  Prédit: 'Table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Table' → logprob: -0.3786160349845886
    2. 'False' → logprob: -1.8786160945892334
    3. '           ' → logprob: -2.7536160945892334
    4. '(False' → logprob: -3.2536160945892334
    5. 'Truth' → logprob: -3.5036160945892334
    6. 'True' → logprob: -4.378615856170654
    7. 'Bool' → logprob: -5.878615856170654
    8. 'const' → logprob: -6.003615856170654
    9. '(True' → logprob: -6.253615856170654
    10. 'Boolean' → logprob: -6.378615856170654

Token 1650: '(Const' (ID: 112623)
  Prédit: '(Const'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Const' → logprob: -0.31344515085220337
    2. 'Const' → logprob: -1.3134450912475586
    3. ' Const' → logprob: -9.188445091247559
    4. '   ' → logprob: -10.188445091247559
    5. 'True' → logprob: -11.813445091247559
    6. 'const' → logprob: -11.938445091247559
    7. '(Constant' → logprob: -12.063445091247559
    8. '[' → logprob: -12.188445091247559
    9. ' (' → logprob: -12.813445091247559
    10. '.Const' → logprob: -12.938445091247559

Token 1651: '(True' (ID: 55978)
  Prédit: '(True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(True' → logprob: -0.08041279017925262
    2. '(False' → logprob: -2.5804128646850586
    3. 'True' → logprob: -6.580412864685059
    4. 'False' → logprob: -8.955412864685059
    5. '
' → logprob: -12.955412864685059
    6. '(
' → logprob: -13.205412864685059
    7. ' True' → logprob: -14.580412864685059
    8. '   ' → logprob: -15.080412864685059
    9. ' (' → logprob: -15.830412864685059
    10. '(' → logprob: -16.330411911010742

Token 1652: ')).' (ID: 8784)
  Prédit: ')).'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')).' → logprob: -0.0708809345960617
    2. '())).' → logprob: -2.695880889892578
    3. '   ' → logprob: -7.570880889892578
    4. '()).' → logprob: -9.445880889892578
    5. '       ' → logprob: -9.445880889892578
    6. '()' → logprob: -10.070880889892578
    7. ')' → logprob: -10.195880889892578
    8. '())' → logprob: -10.820880889892578
    9. '')).' → logprob: -10.820880889892578
    10. '(True' → logprob: -10.820880889892578

Token 1653: 'bits' (ID: 24043)
  Prédit: 'bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.00035119339008815587
    2. '1' → logprob: -8.625350952148438
    3. '.bits' → logprob: -9.500350952148438
    4. 'True' → logprob: -10.000350952148438
    5. ' bits' → logprob: -11.125350952148438
    6. '0' → logprob: -11.750350952148438
    7. '   ' → logprob: -11.875350952148438
    8. '
' → logprob: -12.500350952148438
    9. ''s' → logprob: -13.000350952148438
    10. ')' → logprob: -13.125350952148438

Token 1654: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008891870966181159
    2. '           ' → logprob: -7.750889301300049
    3. ' ,' → logprob: -8.62588882446289
    4. '),' → logprob: -8.75088882446289
    5. ')' → logprob: -9.50088882446289
    6. ','' → logprob: -11.00088882446289
    7. ',
' → logprob: -11.62588882446289
    8. '',' → logprob: -12.37588882446289
    9. '       ' → logprob: -12.50088882446289
    10. '(),' → logprob: -12.87588882446289

Token 1655: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.03806823492050171
    2. ' '' → logprob: -3.2880682945251465
    3. '   ' → logprob: -11.288067817687988
    4. '           ' → logprob: -12.288067817687988
    5. '       ' → logprob: -12.663067817687988
    6. ' ' → logprob: -13.288067817687988
    7. '     ' → logprob: -14.288067817687988
    8. '"' → logprob: -14.413067817687988
    9. '               ' → logprob: -14.663067817687988
    10. '('' → logprob: -14.663067817687988

Token 1656: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.8624639324116288e-06
    2. '1' → logprob: -13.875001907348633
    3. ' '' → logprob: -14.125001907348633
    4. '"' → logprob: -16.250001907348633
    5. '('' → logprob: -17.875001907348633
    6. ')' → logprob: -18.625001907348633
    7. '   ' → logprob: -19.000001907348633
    8. '`' → logprob: -19.250001907348633
    9. '')' → logprob: -20.500001907348633
    10. ''I' → logprob: -20.875001907348633

Token 1657: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.177902951836586
    2. '),' → logprob: -2.427902936935425
    3. ')]' → logprob: -3.677902936935425
    4. '       ' → logprob: -3.927902936935425
    5. '),
' → logprob: -4.052903175354004
    6. '')' → logprob: -5.552903175354004
    7. ''),' → logprob: -6.302903175354004
    8. '           ' → logprob: -6.302903175354004
    9. '')]' → logprob: -6.552903175354004
    10. ')
' → logprob: -6.802903175354004

Token 1658: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06137288361787796
    2. ']' → logprob: -3.811372995376587
    3. ',' → logprob: -3.936372995376587
    4. ',
' → logprob: -4.436372756958008
    5. '   ' → logprob: -5.186372756958008
    6. '           ' → logprob: -8.061372756958008
    7. ')' → logprob: -9.686372756958008
    8. '])' → logprob: -11.061372756958008
    9. ']
' → logprob: -11.311372756958008
    10. ' ]' → logprob: -11.561372756958008

Token 1659: ' ]
' (ID: 10213)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.626639187335968
    2. '   ' → logprob: -1.2516391277313232
    3. ']' → logprob: -1.7516391277313232
    4. ',' → logprob: -5.251639366149902
    5. ' ]' → logprob: -7.626639366149902
    6. ')' → logprob: -8.501639366149902
    7. ',
' → logprob: -9.501639366149902
    8. '])' → logprob: -10.126639366149902
    9. '	' → logprob: -12.126639366149902
    10. '  ' → logprob: -12.251639366149902

Token 1660: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005149673670530319
    2. '   ' → logprob: -5.380149841308594
    3. 'for' → logprob: -7.630149841308594
    4. 'def' → logprob: -10.630149841308594
    5. 'self' → logprob: -12.005149841308594
    6. ' for' → logprob: -12.130149841308594
    7. '```' → logprob: -12.630149841308594
    8. '           ' → logprob: -13.630149841308594
    9. 'from' → logprob: -14.505149841308594
    10. '
' → logprob: -14.505149841308594

Token 1661: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0037801240105181932
    2. 'for' → logprob: -5.628779888153076
    3. '   ' → logprob: -8.753780364990234
    4. 'self' → logprob: -11.503780364990234
    5. ' for' → logprob: -11.628780364990234
    6. 'def' → logprob: -13.128780364990234
    7. '
' → logprob: -14.503780364990234
    8. '```' → logprob: -15.378780364990234
    9. '#' (adapté à ' #') → logprob: -16.003780364990234
    10. 'from' → logprob: -16.253780364990234

Token 1662: ' Neg' (ID: 22837)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2846146821975708
    2. 'from' → logprob: -2.1596145629882812
    3. '       ' → logprob: -2.2846145629882812
    4. '#' → logprob: -4.034614562988281
    5. 'def' → logprob: -5.034614562988281
    6. 'self' → logprob: -5.659614562988281
    7. 'import' → logprob: -6.159614562988281
    8. '   ' → logprob: -7.409614562988281
    9. ' for' → logprob: -10.159614562988281
    10. '```' → logprob: -11.284614562988281

Token 1663: 'ations' (ID: 929)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2835783064365387
    2. 'ated' → logprob: -2.283578395843506
    3. 'lected' → logprob: -3.408578395843506
    4. 'ate' → logprob: -3.658578395843506
    5. 'ation' → logprob: -3.658578395843506
    6. '_cache' → logprob: -3.783578395843506
    7. '#' → logprob: -4.533578395843506
    8. '   ' → logprob: -5.158578395843506
    9. 'cache' → logprob: -5.158578395843506
    10. 'lect' → logprob: -5.533578395843506

Token 1664: ' cache' (ID: 11956)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6192626357078552
    2. '=' → logprob: -1.6192626953125
    3. '       ' → logprob: -1.9942626953125
    4. ':' → logprob: -3.3692626953125
    5. 'self' → logprob: -3.6192626953125
    6. ' of' → logprob: -4.2442626953125
    7. ',' → logprob: -4.4942626953125
    8. 'of' → logprob: -4.8692626953125
    9. ' are' → logprob: -5.3692626953125
    10. '#' → logprob: -5.7442626953125

Token 1665: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003607317106798291
    2. ' =' → logprob: -5.753607273101807
    3. '=' → logprob: -8.503607749938965
    4. 'self' → logprob: -8.753607749938965
    5. '   ' → logprob: -10.503607749938965
    6. ',' → logprob: -10.753607749938965
    7. ':' → logprob: -11.628607749938965
    8. '
' → logprob: -12.753607749938965
    9. ' self' → logprob: -13.003607749938965
    10. '<|end|>' → logprob: -14.003607749938965

Token 1666: ' truth' (ID: 12388)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2038910984992981
    2. 'self' → logprob: -1.7038910388946533
    3. '{}' → logprob: -6.578891277313232
    4. ' self' → logprob: -7.578891277313232
    5. '{' → logprob: -7.703891277313232
    6. '{}
' → logprob: -10.328890800476074
    7. '
' → logprob: -10.828890800476074
    8. ' {}' → logprob: -11.203890800476074
    9. '   ' → logprob: -11.328890800476074
    10. '#' → logprob: -11.703890800476074

Token 1667: ' bits' (ID: 18189)
  Prédit: '_table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_table' → logprob: -0.9586415886878967
    2. 'table' → logprob: -1.333641529083252
    3. 'Table' → logprob: -1.958641529083252
    4. 'tables' → logprob: -2.333641529083252
    5. '   ' → logprob: -2.833641529083252
    6. '       ' → logprob: -3.583641529083252
    7. '#' → logprob: -4.833641529083252
    8. 'self' → logprob: -5.333641529083252
    9. '_tables' → logprob: -5.458641529083252
    10. 'Tables' → logprob: -5.458641529083252

Token 1668: ' ->' (ID: 2747)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5178267955780029
    2. '=' → logprob: -1.142826795578003
    3. '       ' → logprob: -2.767826795578003
    4. ':' → logprob: -5.017827033996582
    5. 'self' → logprob: -5.017827033996582
    6. '_to' → logprob: -5.642827033996582
    7. ',' → logprob: -6.142827033996582
    8. 'to' → logprob: -6.892827033996582
    9. '   ' → logprob: -7.767827033996582
    10. ' self' → logprob: -8.267827033996582

Token 1669: ' minimal' (ID: 19957)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.8539175987243652
    2. 'None' → logprob: -1.6039175987243652
    3. 'self' → logprob: -1.7289175987243652
    4. '{' → logprob: -3.2289175987243652
    5. '(None' → logprob: -3.2289175987243652
    6. '{}' → logprob: -3.7289175987243652
    7. 'neg' → logprob: -3.9789175987243652
    8. '(' → logprob: -4.353917598724365
    9. ''-' → logprob: -5.103917598724365
    10. 'minimal' → logprob: -5.103917598724365

Token 1670: ' form' (ID: 1625)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.6578442454338074
    2. '_expr' → logprob: -0.9078442454338074
    3. 'form' → logprob: -3.657844305038452
    4. 'length' → logprob: -4.407844066619873
    5. '_forms' → logprob: -5.032844066619873
    6. ' expr' → logprob: -5.032844066619873
    7. '_form' → logprob: -5.157844066619873
    8. 'expression' → logprob: -5.657844066619873
    9. '_length' → logprob: -5.782844066619873
    10. 'forms' → logprob: -5.782844066619873

Token 1671: ' length' (ID: 5517)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3590184450149536
    2. 'self' → logprob: -1.2340184450149536
    3. ',' → logprob: -5.359018325805664
    4. ' =' → logprob: -6.109018325805664
    5. ' self' → logprob: -6.359018325805664
    6. '=' → logprob: -7.484018325805664
    7. '
' → logprob: -7.484018325805664
    8. '(self' → logprob: -7.984018325805664
    9. '{' → logprob: -8.734018325805664
    10. '   ' → logprob: -9.609018325805664

Token 1672: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32872381806373596
    2. 'self' → logprob: -1.4537237882614136
    3. ',' → logprob: -3.203723907470703
    4. ' =' → logprob: -6.703723907470703
    5. '=' → logprob: -6.828723907470703
    6. ' self' → logprob: -6.953723907470703
    7. '
' → logprob: -7.453723907470703
    8. '   ' → logprob: -7.578723907470703
    9. '(self' → logprob: -7.953723907470703
    10. ' and' → logprob: -8.203723907470703

Token 1673: 'and' (ID: 427)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7092716097831726
    2. '0' → logprob: -1.7092716693878174
    3. '{}' → logprob: -1.7092716693878174
    4. '{' → logprob: -3.7092716693878174
    5. '{})' → logprob: -3.8342716693878174
    6. '       ' → logprob: -3.9592716693878174
    7. 'set' → logprob: -4.209271430969238
    8. 'dict' → logprob: -4.834271430969238
    9. 'True' → logprob: -4.959271430969238
    10. 'len' → logprob: -5.334271430969238

Token 1674: ' their' (ID: 1043)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.7902557849884033
    2. 'string' → logprob: -1.0402557849884033
    3. 'expression' → logprob: -2.4152557849884033
    4. 'str' → logprob: -2.9152557849884033
    5. 'form' → logprob: -4.165255546569824
    6. ' expression' → logprob: -4.540255546569824
    7. ' expr' → logprob: -4.915255546569824
    8. ' string' → logprob: -5.290255546569824
    9. '
' → logprob: -6.415255546569824
    10. ')' → logprob: -6.665255546569824

Token 1675: ' forms' (ID: 11526)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.0894000306725502
    2. 'express' → logprob: -3.464400053024292
    3. 'expression' → logprob: -3.964400053024292
    4. ' expr' → logprob: -4.339399814605713
    5. 'forms' → logprob: -5.214399814605713
    6. 'strings' → logprob: -5.214399814605713
    7. 'str' → logprob: -5.839399814605713
    8. 'string' → logprob: -6.089399814605713
    9. 'form' → logprob: -6.589399814605713
    10. ' expressions' → logprob: -6.714399814605713

Token 1676: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5669472217559814
    2. '       ' → logprob: -1.4419472217559814
    3. ',' → logprob: -1.8169472217559814
    4. '=' → logprob: -5.191946983337402
    5. '),' → logprob: -5.191946983337402
    6. ')
' → logprob: -5.191946983337402
    7. 'self' → logprob: -5.441946983337402
    8. ' =' → logprob: -5.441946983337402
    9. '   ' → logprob: -6.316946983337402
    10. '):
' → logprob: -6.316946983337402

Token 1677: ' but' (ID: 889)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.9452857375144958
    2. ')' → logprob: -1.4452857971191406
    3. 'forms' → logprob: -2.8202857971191406
    4. '       ' → logprob: -2.9452857971191406
    5. ' forms' → logprob: -2.9452857971191406
    6. '#' → logprob: -3.1952857971191406
    7. '
' → logprob: -3.3202857971191406
    8. 'and' → logprob: -3.6952857971191406
    9. 'set' → logprob: -4.195285797119141
    10. ' and' → logprob: -4.445285797119141

Token 1678: ' forms' (ID: 11526)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.519688606262207
    2. 'not' → logprob: -1.894688606262207
    3. 'self' → logprob: -2.019688606262207
    4. 'stored' → logprob: -3.894688606262207
    5. '       ' → logprob: -4.019688606262207
    6. 'for' → logprob: -4.394688606262207
    7. ')' → logprob: -4.644688606262207
    8. 'values' → logprob: -5.144688606262207
    9. ' not' → logprob: -5.394688606262207
    10. 'we' → logprob: -5.394688606262207

Token 1679: ' only' (ID: 1606)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -1.3018404245376587
    2. ')' → logprob: -1.6768404245376587
    3. '=' → logprob: -1.8018404245376587
    4. 'are' → logprob: -1.9268404245376587
    5. 's' → logprob: -2.926840305328369
    6. ' =' → logprob: -3.051840305328369
    7. '...' → logprob: -3.926840305328369
    8. 'stored' → logprob: -3.926840305328369
    9. ' is' → logprob: -4.301840305328369
    10. ' not' → logprob: -4.551840305328369

Token 1680: ' strings' (ID: 18279)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09126152098178864
    2. 'stored' → logprob: -3.466261625289917
    3. ')' → logprob: -3.716261625289917
    4. 'are' → logprob: -4.341261386871338
    5. ' are' → logprob: -5.716261386871338
    6. '       ' → logprob: -5.716261386871338
    7. '):
' → logprob: -5.841261386871338
    8. '...' → logprob: -6.091261386871338
    9. ' stored' → logprob: -6.841261386871338
    10. ' =' → logprob: -6.966261386871338

Token 1681: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9411711096763611
    2. '=' → logprob: -1.0661711692810059
    3. '       ' → logprob: -1.8161711692810059
    4. ',' → logprob: -3.316171169281006
    5. ' =' → logprob: -3.691171169281006
    6. '):
' → logprob: -4.316171169281006
    7. ':' → logprob: -5.066171169281006
    8. 'self' → logprob: -5.316171169281006
    9. '<|end|>' → logprob: -5.816171169281006
    10. '),' → logprob: -5.941171169281006

Token 1682: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.692145012086257e-05
    2. 'self' → logprob: -10.500046730041504
    3. '   ' → logprob: -11.000046730041504
    4. '
' → logprob: -13.250046730041504
    5. 'from' → logprob: -14.875046730041504
    6. 'def' → logprob: -16.12504768371582
    7. ' self' → logprob: -16.25004768371582
    8. '           ' → logprob: -16.37504768371582
    9. '#' → logprob: -17.25004768371582
    10. 'import' → logprob: -17.75004768371582

Token 1683: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023271219804883003
    2. 'self' (adapté à ' self') → logprob: -3.773271322250366
    3. '   ' → logprob: -11.398271560668945
    4. ' self' → logprob: -11.648271560668945
    5. '
' → logprob: -13.023271560668945
    6. '#' → logprob: -13.648271560668945
    7. 'from' → logprob: -14.023271560668945
    8. '{' → logprob: -14.648271560668945
    9. '           ' → logprob: -15.523271560668945
    10. '{
' → logprob: -15.648271560668945

Token 1684: '.neg' (ID: 171512)
  Prédit: '.neg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.neg' → logprob: -0.0691196471452713
    2. 'neg' → logprob: -3.944119691848755
    3. '.cache' → logprob: -3.944119691848755
    4. '_neg' → logprob: -4.194119453430176
    5. '._' → logprob: -5.319119453430176
    6. '.n' → logprob: -6.194119453430176
    7. '.not' → logprob: -6.194119453430176
    8. 'cache' → logprob: -6.694119453430176
    9. '.min' → logprob: -7.194119453430176
    10. '_cache' → logprob: -8.319119453430176

Token 1685: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.054533302783966064
    2. 'ations' → logprob: -3.6795332431793213
    3. 'cache' → logprob: -4.3045334815979
    4. 'ation' → logprob: -4.3045334815979
    5. 's' → logprob: -8.179533004760742
    6. 'ated' → logprob: -8.429533004760742
    7. '_bits' → logprob: -9.304533004760742
    8. '_table' → logprob: -10.054533004760742
    9. '_' → logprob: -10.304533004760742
    10. '_map' → logprob: -10.554533004760742

Token 1686: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1602269560098648
    2. ' =' → logprob: -1.9102269411087036
    3. '={}' → logprob: -13.410226821899414
    4. ':' → logprob: -14.160226821899414
    5. '   ' → logprob: -15.035226821899414
    6. '={' → logprob: -17.285226821899414
    7. '=[]' → logprob: -17.410226821899414
    8. 's' → logprob: -17.410226821899414
    9. '       ' → logprob: -17.785226821899414
    10. '=
' → logprob: -17.910226821899414

Token 1687: ' dict' (ID: 11878)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.049046825617551804
    2. 'dict' → logprob: -3.049046754837036
    3. '{' → logprob: -8.674046516418457
    4. ' dict' → logprob: -8.799046516418457
    5. ' {}' → logprob: -9.299046516418457
    6. '{}
' → logprob: -10.799046516418457
    7. 'set' → logprob: -10.924046516418457
    8. '={}' → logprob: -12.924046516418457
    9. '   ' → logprob: -13.924046516418457
    10. '{})' → logprob: -14.049046516418457

Token 1688: '()

' (ID: 5874)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8584378361701965
    2. '<|end|>' → logprob: -0.8584378361701965
    3. '   ' → logprob: -2.1084377765655518
    4. '
' → logprob: -4.108438014984131
    5. ')' → logprob: -4.858438014984131
    6. '<|end|>' → logprob: -5.358438014984131
    7. '()' → logprob: -7.858438014984131
    8. '(' → logprob: -8.358437538146973
    9. 'from' → logprob: -8.733437538146973
    10. '```' → logprob: -8.858437538146973

Token 1689: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11438894271850586
    2. 'def' → logprob: -2.239388942718506
    3. ' def' → logprob: -7.239388942718506
    4. '       ' → logprob: -7.739388942718506
    5. '
' → logprob: -7.989388942718506
    6. '    
' → logprob: -10.364389419555664
    7. 'from' → logprob: -11.489389419555664
    8. '	def' → logprob: -11.864389419555664
    9. '<|end|>' → logprob: -12.239389419555664
    10. '```' → logprob: -12.364389419555664

Token 1690: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3789701759815216
    2. '       ' → logprob: -1.6289701461791992
    3. 'def' → logprob: -2.128970146179199
    4. ' def' → logprob: -8.2539701461792
    5. 'self' → logprob: -9.6289701461792
    6. '
' → logprob: -12.1289701461792
    7. 'from' → logprob: -12.3789701461792
    8. '	def' → logprob: -13.2539701461792
    9. '#' (adapté à ' #') → logprob: -14.0039701461792
    10. ' self' → logprob: -14.2539701461792

Token 1691: ' Initialize' (ID: 19496)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4959443211555481
    2. '       ' → logprob: -1.1209442615509033
    3. '   ' → logprob: -3.1209442615509033
    4. 'self' → logprob: -4.370944499969482
    5. 'for' → logprob: -5.120944499969482
    6. '#' → logprob: -6.495944499969482
    7. ' def' → logprob: -7.495944499969482
    8. '
' → logprob: -9.120944023132324
    9. 'from' → logprob: -9.995944023132324
    10. ' self' → logprob: -10.245944023132324

Token 1692: ' cache' (ID: 11956)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029962917789816856
    2. 'for' → logprob: -3.5299630165100098
    3. ' for' → logprob: -9.529962539672852
    4. '   ' → logprob: -10.029962539672852
    5. 'from' → logprob: -10.404962539672852
    6. 'self' → logprob: -10.904962539672852
    7. '#' → logprob: -11.029962539672852
    8. '
' → logprob: -11.279962539672852
    9. 'to' → logprob: -11.904962539672852
    10. 'import' → logprob: -12.529962539672852

Token 1693: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015098588773980737
    2. 'for' → logprob: -6.501509666442871
    3. ' for' → logprob: -12.251509666442871
    4. '   ' → logprob: -13.751509666442871
    5. 'from' → logprob: -14.251509666442871
    6. 'self' → logprob: -14.876509666442871
    7. '
' → logprob: -15.376509666442871
    8. 'with' → logprob: -16.001510620117188
    9. '#' → logprob: -16.251510620117188
    10. '           ' → logprob: -16.501510620117188

Token 1694: ' primitives' (ID: 174906)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.8372751474380493
    2. '[(' → logprob: -1.5872751474380493
    3. '#' → logprob: -1.9622751474380493
    4. 'for' → logprob: -2.9622750282287598
    5. 'pr' → logprob: -3.3372750282287598
    6. '       ' → logprob: -3.3372750282287598
    7. 'primitive' → logprob: -3.7122750282287598
    8. 'var' → logprob: -3.9622750282287598
    9. 'v' → logprob: -4.46227502822876
    10. '
' → logprob: -5.33727502822876

Token 1695: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005255456548184156
    2. 'for' → logprob: -5.255255222320557
    3. ' for' → logprob: -10.755255699157715
    4. '   ' → logprob: -15.880255699157715
    5. '           ' → logprob: -17.1302547454834
    6. '```' → logprob: -17.5052547454834
    7. ':' → logprob: -17.7552547454834
    8. ',' → logprob: -17.7552547454834
    9. '	for' → logprob: -17.8802547454834
    10. '	' → logprob: -18.2552547454834

Token 1696: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00862320140004158
    2. 'for' → logprob: -4.758623123168945
    3. ' for' → logprob: -11.883623123168945
    4. '   ' → logprob: -14.133623123168945
    5. '           ' → logprob: -14.883623123168945
    6. 'from' → logprob: -15.383623123168945
    7. '
' → logprob: -16.258623123168945
    8. '```' → logprob: -16.383623123168945
    9. 'import' → logprob: -16.633623123168945
    10. '#' → logprob: -17.008623123168945

Token 1697: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3132699131965637
    2. 'for' (adapté à ' for') → logprob: -1.313269853591919
    3. ' for' → logprob: -11.81326961517334
    4. '   ' → logprob: -14.18826961517334
    5. '	for' → logprob: -17.438270568847656
    6. '	' → logprob: -18.188270568847656
    7. '           ' → logprob: -18.438270568847656
    8. '```' → logprob: -18.938270568847656
    9. '#' → logprob: -19.688270568847656
    10. 'from' → logprob: -20.188270568847656

Token 1698: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.00399600388482213
    2. 'tt' → logprob: -6.128995895385742
    3. 'tb' → logprob: -7.003995895385742
    4. 'bt' → logprob: -7.753995895385742
    5. '(bits' → logprob: -8.878995895385742
    6. 'bit' → logprob: -9.128995895385742
    7. 'tbl' → logprob: -9.503995895385742
    8. ' bits' → logprob: -10.128995895385742
    9. 'key' → logprob: -10.378995895385742
    10. 'bb' → logprob: -10.503995895385742

Token 1699: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017306297086179256
    2. 'in' → logprob: -6.626730442047119
    3. ',b' → logprob: -8.126730918884277
    4. ',in' → logprob: -10.126730918884277
    5. ' in' → logprob: -10.376730918884277
    6. ' ,' → logprob: -11.001730918884277
    7. ',self' → logprob: -12.126730918884277
    8. '       ' → logprob: -13.001730918884277
    9. ',t' → logprob: -13.126730918884277
    10. ',_' → logprob: -13.376730918884277

Token 1700: ' expr' (ID: 30206)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.0023136918898671865
    2. 'form' → logprob: -6.252313613891602
    3. ' expr' → logprob: -7.877313613891602
    4. 's' → logprob: -13.502313613891602
    5. 'string' → logprob: -13.627313613891602
    6. 'str' → logprob: -13.752313613891602
    7. ' form' → logprob: -14.252313613891602
    8. '   ' → logprob: -15.002313613891602
    9. 'exp' → logprob: -15.127313613891602
    10. 'forms' → logprob: -15.627313613891602

Token 1701: '_str' (ID: 6182)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007869701832532883
    2. 'in' → logprob: -4.882869720458984
    3. 's' → logprob: -9.507869720458984
    4. ',' → logprob: -10.007869720458984
    5. '           ' → logprob: -10.007869720458984
    6. '       ' → logprob: -10.507869720458984
    7. '_str' → logprob: -10.507869720458984
    8. '   ' → logprob: -12.007869720458984
    9. ' =' → logprob: -12.132869720458984
    10. '_in' → logprob: -12.507869720458984

Token 1702: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03809462487697601
    2. 'in' → logprob: -3.2880945205688477
    3. ',' → logprob: -10.288094520568848
    4. '           ' → logprob: -11.663094520568848
    5. '       ' → logprob: -12.538094520568848
    6. '	in' → logprob: -13.663094520568848
    7. 'self' → logprob: -14.288094520568848
    8. '=' → logprob: -14.413094520568848
    9. ':
' → logprob: -14.538094520568848
    10. '   ' → logprob: -14.663094520568848

Token 1703: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005626845522783697
    2. ' self' → logprob: -7.50056266784668
    3. '       ' → logprob: -11.87556266784668
    4. '           ' → logprob: -13.75056266784668
    5. '[self' → logprob: -14.12556266784668
    6. '(self' → logprob: -14.25056266784668
    7. '   ' → logprob: -15.37556266784668
    8. '	self' → logprob: -17.50056266784668
    9. '
' → logprob: -18.37556266784668
    10. '[' → logprob: -18.50056266784668

Token 1704: '.pr' (ID: 27292)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.10940584540367126
    2. '.pr' → logprob: -2.859405755996704
    3. 'pr' → logprob: -3.859405755996704
    4. ' in' → logprob: -4.609405994415283
    5. '.items' → logprob: -4.984405994415283
    6. '       ' → logprob: -6.234405994415283
    7. ':' → logprob: -6.234405994415283
    8. 'self' → logprob: -6.484405994415283
    9. ':
' → logprob: -7.609405994415283
    10. '_pr' → logprob: -7.734405994415283

Token 1705: 'imitives' (ID: 92974)
  Prédit: 'imitives'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imitives' → logprob: -0.0022612365428358316
    2. 'im' → logprob: -6.127261161804199
    3. 'ims' → logprob: -10.3772611618042
    4. 'imit' → logprob: -10.5022611618042
    5. 'imits' → logprob: -11.7522611618042
    6. '   ' → logprob: -12.3772611618042
    7. 'itives' → logprob: -13.1272611618042
    8. '       ' → logprob: -14.1272611618042
    9. 'imes' → logprob: -14.8772611618042
    10. '           ' → logprob: -15.1272611618042

Token 1706: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9034422636032104
    2. '           ' → logprob: -1.1534422636032104
    3. ':
' → logprob: -1.2784422636032104
    4. '       ' → logprob: -7.6534423828125
    5. ',' → logprob: -9.4034423828125
    6. '):
' → logprob: -9.5284423828125
    7. '<|end|>' → logprob: -9.6534423828125
    8. '<|end|>' → logprob: -10.9034423828125
    9. '=' → logprob: -11.5284423828125
    10. '():
' → logprob: -11.6534423828125

Token 1707: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.6166903151315637e-05
    2. '       ' → logprob: -11.875016212463379
    3. 'self' → logprob: -12.750016212463379
    4. '```' → logprob: -13.000016212463379
    5. ':' → logprob: -13.750016212463379
    6. ' self' → logprob: -14.000016212463379
    7. '               ' → logprob: -14.750016212463379
    8. '          ' → logprob: -14.875016212463379
    9. '<|end|>' → logprob: -15.500016212463379
    10. ',' → logprob: -15.500016212463379

Token 1708: ' self' (ID: 1051)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023301731795072556
    2. 'self' (adapté à ' self') → logprob: -3.773301839828491
    3. '       ' → logprob: -10.27330207824707
    4. ' self' → logprob: -10.77330207824707
    5. '   ' → logprob: -14.64830207824707
    6. 'if' → logprob: -16.14830207824707
    7. '               ' → logprob: -16.27330207824707
    8. '          ' → logprob: -16.52330207824707
    9. '		' → logprob: -17.64830207824707
    10. '	self' → logprob: -18.27330207824707

Token 1709: '.cache' (ID: 37175)
  Prédit: '.cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cache' → logprob: -0.0004541486850939691
    2. 'cache' → logprob: -7.750453948974609
    3. 'self' → logprob: -11.37545394897461
    4. ' .' → logprob: -12.00045394897461
    5. '_cache' → logprob: -13.50045394897461
    6. '       ' → logprob: -13.75045394897461
    7. '.' → logprob: -14.50045394897461
    8. '	cache' → logprob: -14.75045394897461
    9. '.cached' → logprob: -14.87545394897461
    10. '
' → logprob: -15.12545394897461

Token 1710: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.670925358776003e-05
    2. '[b' → logprob: -10.000066757202148
    3. '[self' → logprob: -11.125066757202148
    4. ' [' → logprob: -14.000066757202148
    5. 'bits' → logprob: -14.000066757202148
    6. '[(' → logprob: -14.375066757202148
    7. '   ' → logprob: -14.500066757202148
    8. '       ' → logprob: -14.875066757202148
    9. '(bits' → logprob: -14.875066757202148
    10. '[B' → logprob: -15.375066757202148

Token 1711: 'bits' (ID: 24043)
  Prédit: 'bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -7.896309739408025e-07
    2. ' bits' → logprob: -15.000000953674316
    3. '(bits' → logprob: -15.750000953674316
    4. '   ' → logprob: -16.5
    5. '[' → logprob: -17.5
    6. 'bit' → logprob: -18.375
    7. 'bytes' → logprob: -18.625
    8. 'b' → logprob: -18.875
    9. '       ' → logprob: -19.625
    10. 'bins' → logprob: -20.5

Token 1712: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07847084850072861
    2. ']' → logprob: -3.4534709453582764
    3. ']=' → logprob: -3.7034709453582764
    4. ' =' → logprob: -3.9534709453582764
    5. '[' → logprob: -11.953471183776855
    6. ')=' → logprob: -14.453471183776855
    7. '=
' → logprob: -14.828471183776855
    8. ' ]' → logprob: -14.953471183776855
    9. '           ' → logprob: -15.578471183776855
    10. ')' → logprob: -15.578471183776855

Token 1713: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006723771803081036
    2. ' =' → logprob: -5.006723880767822
    3. '           ' → logprob: -12.006723403930664
    4. '[' → logprob: -14.256723403930664
    5. ']=' → logprob: -14.756723403930664
    6. '               ' → logprob: -15.131723403930664
    7. '=self' → logprob: -15.256723403930664
    8. ']' → logprob: -15.756723403930664
    9. '=
' → logprob: -16.131723403930664
    10. '            ' → logprob: -16.131723403930664

Token 1714: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.014401241205632687
    2. 'expr' → logprob: -4.264401435852051
    3. 'set' → logprob: -8.63940143585205
    4. ' {' → logprob: -10.13940143585205
    5. '[' → logprob: -12.01440143585205
    6. '(expr' → logprob: -12.13940143585205
    7. ' expr' → logprob: -13.01440143585205
    8. '{s' → logprob: -13.38940143585205
    9. '   ' → logprob: -13.51440143585205
    10. 'express' → logprob: -13.88940143585205

Token 1715: 'expr' (ID: 21343)
  Prédit: 'expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' → logprob: -4.36574100604048e-06
    2. ' expr' → logprob: -12.375004768371582
    3. '   ' → logprob: -16.625003814697266
    4. '           ' → logprob: -17.125003814697266
    5. '       ' → logprob: -17.750003814697266
    6. '(expr' → logprob: -18.500003814697266
    7. 'express' → logprob: -18.625003814697266
    8. '{' → logprob: -19.000003814697266
    9. '               ' → logprob: -20.250003814697266
    10. ' ' → logprob: -20.500003814697266

Token 1716: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -9.372294698550832e-06
    2. 'str' → logprob: -11.750009536743164
    3. 's' → logprob: -14.250009536743164
    4. '_s' → logprob: -15.125009536743164
    5. ''_' → logprob: -16.750009536743164
    6. '```' → logprob: -17.000009536743164
    7. 'Str' → logprob: -17.250009536743164
    8. '_' → logprob: -17.500009536743164
    9. '}_' → logprob: -17.625009536743164
    10. '_st' → logprob: -17.625009536743164

Token 1717: '}

' (ID: 943)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.0019233986968174577
    2. '       ' → logprob: -6.501923561096191
    3. '           ' → logprob: -8.376923561096191
    4. ' }' → logprob: -9.501923561096191
    5. '}
' → logprob: -9.626923561096191
    6. ':' → logprob: -11.001923561096191
    7. '   ' → logprob: -11.126923561096191
    8. ',' → logprob: -12.126923561096191
    9. '<|end|>' → logprob: -12.751923561096191
    10. '<|end|>' → logprob: -12.876923561096191

Token 1718: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1023804098367691
    2. '<|end|>' → logprob: -2.4773805141448975
    3. '       ' → logprob: -5.227380275726318
    4. '```' → logprob: -5.352380275726318
    5. 'from' → logprob: -6.977380275726318
    6. '<|end|>' → logprob: -6.977380275726318
    7. 'def' → logprob: -7.477380275726318
    8. '
' → logprob: -7.977380275726318
    9. ')' → logprob: -9.352380752563477
    10. 'import' → logprob: -9.477380752563477

Token 1719: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48978424072265625
    2. 'def' → logprob: -1.1147842407226562
    3. '       ' → logprob: -3.1147842407226562
    4. '
' → logprob: -4.489784240722656
    5. 'from' → logprob: -6.614784240722656
    6. ' def' → logprob: -6.864784240722656
    7. 'self' → logprob: -7.489784240722656
    8. '```' → logprob: -8.364784240722656
    9. 'Next' → logprob: -9.114784240722656
    10. '@property' → logprob: -9.864784240722656

Token 1720: ' For' (ID: 2214)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02842712588608265
    2. '   ' → logprob: -4.2784271240234375
    3. 'self' → logprob: -4.4034271240234375
    4. ' def' → logprob: -7.4034271240234375
    5. '       ' → logprob: -7.7784271240234375
    6. '
' → logprob: -8.153427124023438
    7. 'from' → logprob: -8.153427124023438
    8. '#' → logprob: -8.528427124023438
    9. ' self' → logprob: -9.778427124023438
    10. 'import' → logprob: -9.903427124023438

Token 1721: ' neg' (ID: 4528)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7176417112350464
    2. 'i' → logprob: -1.2176417112350464
    3. 'op' → logprob: -3.842641830444336
    4. '_' → logprob: -3.842641830444336
    5. ' i' → logprob: -3.842641830444336
    6. '#' → logprob: -4.092641830444336
    7. '_bits' → logprob: -4.217641830444336
    8. ' self' → logprob: -4.342641830444336
    9. 'depth' → logprob: -4.467641830444336
    10. 'bit' → logprob: -4.592641830444336

Token 1722: 'ations' (ID: 929)
  Prédit: 'ation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.6854273676872253
    2. '_cache' → logprob: -1.3104274272918701
    3. '       ' → logprob: -1.8104274272918701
    4. 'ations' → logprob: -3.43542742729187
    5. '   ' → logprob: -4.185427188873291
    6. 'ate' → logprob: -4.935427188873291
    7. '#' → logprob: -5.810427188873291
    8. 'bits' → logprob: -6.435427188873291
    9. '_bits' → logprob: -6.685427188873291
    10. '           ' → logprob: -7.560427188873291

Token 1723: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39119595289230347
    2. 'for' → logprob: -1.1411960124969482
    3. '   ' → logprob: -5.891195774078369
    4. ' for' → logprob: -7.141195774078369
    5. 'neg' → logprob: -7.891195774078369
    6. 'def' → logprob: -8.641196250915527
    7. '#' → logprob: -9.516196250915527
    8. 'self' → logprob: -9.766196250915527
    9. 'bits' → logprob: -11.141196250915527
    10. 'from' → logprob: -11.766196250915527

Token 1724: ' primitives' (ID: 174906)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.5153356194496155
    2. 'self' → logprob: -1.5153355598449707
    3. 'all' → logprob: -2.6403355598449707
    4. 'bits' → logprob: -3.5153355598449707
    5. 'primitive' → logprob: -3.6403355598449707
    6. 'keys' → logprob: -3.8903355598449707
    7. 'the' → logprob: -4.640335559844971
    8. 'list' → logprob: -5.015335559844971
    9. '#' → logprob: -5.640335559844971
    10. 'each' → logprob: -5.765335559844971

Token 1725: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22880643606185913
    2. 'for' → logprob: -1.603806495666504
    3. ' for' → logprob: -5.728806495666504
    4. ',' → logprob: -9.603806495666504
    5. 'neg' → logprob: -9.978806495666504
    6. '   ' → logprob: -11.728806495666504
    7. '#' → logprob: -12.853806495666504
    8. ':' → logprob: -12.853806495666504
    9. '           ' → logprob: -13.228806495666504
    10. '
' → logprob: -13.728806495666504

Token 1726: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017452733591198921
    2. 'for' → logprob: -6.376745223999023
    3. ' for' → logprob: -10.251745223999023
    4. '   ' → logprob: -12.751745223999023
    5. '           ' → logprob: -12.751745223999023
    6. ',' → logprob: -13.501745223999023
    7. '	' → logprob: -15.751745223999023
    8. '#' → logprob: -15.876745223999023
    9. 'import' → logprob: -16.001745223999023
    10. 'from' → logprob: -16.626745223999023

Token 1727: ' self' (ID: 1051)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.030230578035116196
    2. '       ' → logprob: -3.5302305221557617
    3. ' for' → logprob: -7.655230522155762
    4. '   ' → logprob: -12.155230522155762
    5. 'from' → logprob: -14.905230522155762
    6. '	for' → logprob: -15.280230522155762
    7. 'neg' → logprob: -15.780230522155762
    8. '           ' → logprob: -16.030231475830078
    9. '```' → logprob: -16.030231475830078
    10. '	' → logprob: -17.030231475830078

Token 1728: '._' (ID: 2697)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0317993201315403
    2. 'def' → logprob: -4.28179931640625
    3. '.neg' → logprob: -4.90679931640625
    4. 'neg' → logprob: -5.65679931640625
    5. ' for' → logprob: -6.40679931640625
    6. '.' → logprob: -6.53179931640625
    7. '._' → logprob: -7.28179931640625
    8. '.update' → logprob: -7.53179931640625
    9. '_neg' → logprob: -7.53179931640625
    10. '   ' → logprob: -7.65679931640625

Token 1729: 'build' (ID: 9242)
  Prédit: 'populate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'populate' → logprob: -0.5355264544487
    2. 'initialize' → logprob: -1.9105265140533447
    3. 'fill' → logprob: -2.5355265140533447
    4. 'compute' → logprob: -2.6605265140533447
    5. 'build' → logprob: -3.1605265140533447
    6. 'init' → logprob: -3.4105265140533447
    7. 'expand' → logprob: -4.410526275634766
    8. 'process' → logprob: -4.535526275634766
    9. 'pre' → logprob: -4.785526275634766
    10. 'update' → logprob: -6.285526275634766

Token 1730: '_neg' (ID: 75899)
  Prédit: '_neg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_neg' → logprob: -0.43016317486763
    2. 'neg' → logprob: -1.3051631450653076
    3. '()' → logprob: -2.6801631450653076
    4. '_cache' → logprob: -4.805163383483887
    5. '_pr' → logprob: -7.430163383483887
    6. 'cache' → logprob: -7.930163383483887
    7. '_' → logprob: -8.430163383483887
    8. 'pr' → logprob: -8.680163383483887
    9. '()
' → logprob: -9.180163383483887
    10. 'self' → logprob: -9.930163383483887

Token 1731: 'ations' (ID: 929)
  Prédit: '_cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.30812737345695496
    2. '()' → logprob: -2.0581274032592773
    3. 'ate' → logprob: -2.4331274032592773
    4. 'ations' → logprob: -3.0581274032592773
    5. 'ation' → logprob: -6.558127403259277
    6. '()
' → logprob: -7.308127403259277
    7. 'cache' → logprob: -8.933127403259277
    8. 'ates' → logprob: -9.058127403259277
    9. '   ' → logprob: -9.183127403259277
    10. '       ' → logprob: -9.433127403259277

Token 1732: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005727320909500122
    2. '()
' → logprob: -5.255727291107178
    3. '()

' → logprob: -7.880727291107178
    4. '   ' → logprob: -9.880727767944336
    5. '       ' → logprob: -10.005727767944336
    6. 'def' → logprob: -11.380727767944336
    7. '()`' → logprob: -13.505727767944336
    8. '()\' → logprob: -13.630727767944336
    9. '())' → logprob: -13.755727767944336
    10. ' ()' → logprob: -14.130727767944336

Token 1733: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.397395521402359
    2. '   ' → logprob: -1.1473954916000366
    3. '
' → logprob: -4.647395610809326
    4. ' def' → logprob: -7.147395610809326
    5. '    
' → logprob: -10.147395133972168
    6. '```' → logprob: -10.147395133972168
    7. '	def' → logprob: -12.272395133972168
    8. '

' → logprob: -12.397395133972168
    9. '<|end|>' → logprob: -12.522395133972168
    10. '        
' → logprob: -14.022395133972168

Token 1734: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5761726498603821
    2. 'def' → logprob: -0.8261726498603821
    3. '
' → logprob: -8.576172828674316
    4. ' def' → logprob: -10.076172828674316
    5. '	def' → logprob: -13.826172828674316
    6. '    
' → logprob: -14.076172828674316
    7. '```' → logprob: -14.576172828674316
    8. '       ' → logprob: -15.576172828674316
    9. '

' → logprob: -17.076171875
    10. '        
' → logprob: -17.701171875

Token 1735: ' We' (ID: 1416)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.019067315384745598
    2. '   ' → logprob: -4.019067287445068
    3. ' def' → logprob: -7.019067287445068
    4. '
' → logprob: -10.894067764282227
    5. '	def' → logprob: -13.394067764282227
    6. '       ' → logprob: -13.644067764282227
    7. '  ' → logprob: -15.269067764282227
    8. ' ' → logprob: -15.269067764282227
    9. 'self' → logprob: -15.519067764282227
    10. '```' → logprob: -16.769067764282227

Token 1736: ' pre' (ID: 876)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14782960712909698
    2. '   ' → logprob: -2.272829532623291
    3. 'build' → logprob: -4.022829532623291
    4. 'continue' → logprob: -5.272829532623291
    5. ' def' → logprob: -5.647829532623291
    6. '       ' → logprob: -5.897829532623291
    7. '_continue' → logprob: -6.647829532623291
    8. '#' → logprob: -7.022829532623291
    9. 'will' → logprob: -7.522829532623291
    10. '_build' → logprob: -7.522829532623291

Token 1737: 'compute' (ID: 54521)
  Prédit: '_build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_build' → logprob: -0.5566309094429016
    2. 'compute' → logprob: -1.5566308498382568
    3. 'pare' → logprob: -2.431630849838257
    4. 'build' → logprob: -2.806630849838257
    5. '   ' → logprob: -3.681630849838257
    6. '_compute' → logprob: -4.056631088256836
    7. 'def' → logprob: -4.556631088256836
    8. '_cache' → logprob: -6.056631088256836
    9. 'serve' → logprob: -6.181631088256836
    10. 's' → logprob: -6.306631088256836

Token 1738: ' minimal' (ID: 19957)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3216384947299957
    2. '   ' → logprob: -2.321638584136963
    3. 'self' → logprob: -2.571638584136963
    4. 'for' → logprob: -3.446638584136963
    5. '#' → logprob: -3.571638584136963
    6. 'def' → logprob: -3.696638584136963
    7. ' for' → logprob: -5.571638584136963
    8. 'the' → logprob: -6.196638584136963
    9. '
' → logprob: -6.696638584136963
    10. 'class' → logprob: -6.821638584136963

Token 1739: ' expressions' (ID: 43578)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.8993183374404907
    2. '_lengths' → logprob: -1.7743183374404907
    3. 'express' → logprob: -2.149318218231201
    4. '_length' → logprob: -2.649318218231201
    5. '_forms' → logprob: -2.774318218231201
    6. '       ' → logprob: -2.774318218231201
    7. 'forms' → logprob: -3.524318218231201
    8. 'expr' → logprob: -4.149318218231201
    9. 'self' → logprob: -4.524318218231201
    10. '   ' → logprob: -4.649318218231201

Token 1740: ' iter' (ID: 10621)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.050400346517562866
    2. '   ' → logprob: -3.1754002571105957
    3. 'for' → logprob: -5.675400257110596
    4. ' for' → logprob: -6.300400257110596
    5. '<|end|>' → logprob: -7.675400257110596
    6. '<|end|>' → logprob: -7.925400257110596
    7. ',' → logprob: -8.175400733947754
    8. 'with' → logprob: -8.425400733947754
    9. 'from' → logprob: -8.675400733947754
    10. 'def' → logprob: -8.925400733947754

Token 1741: 'atively' (ID: 11594)
  Prédit: 'ate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ate' → logprob: -0.2733025848865509
    2. 'atively' → logprob: -1.6483025550842285
    3. '   ' → logprob: -4.3983025550842285
    4. '       ' → logprob: -5.0233025550842285
    5. '```' → logprob: -5.2733025550842285
    6. 'ally' → logprob: -5.5233025550842285
    7. 'ating' → logprob: -5.8983025550842285
    8. 'ately' → logprob: -6.1483025550842285
    9. 't' → logprob: -6.5233025550842285
    10. 'ates' → logprob: -6.8983025550842285

Token 1742: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013141758739948273
    2. '   ' → logprob: -4.388141632080078
    3. ' for' → logprob: -7.888141632080078
    4. 'for' → logprob: -9.013141632080078
    5. ',' → logprob: -10.638141632080078
    6. ' with' → logprob: -10.763141632080078
    7. 'def' → logprob: -10.888141632080078
    8. 'from' → logprob: -11.138141632080078
    9. 'with' → logprob: -11.513141632080078
    10. '
' → logprob: -11.888141632080078

Token 1743: ' cover' (ID: 4321)
  Prédit: 'expand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expand' → logprob: -0.607338547706604
    2. 'complete' → logprob: -1.607338547706604
    3. 'maximize' → logprob: -2.6073384284973145
    4. 'build' → logprob: -3.1073384284973145
    5. 'self' → logprob: -3.3573384284973145
    6. 'cover' → logprob: -4.3573384284973145
    7. 'completion' → logprob: -4.4823384284973145
    8. 'fix' → logprob: -4.6073384284973145
    9. 'con' → logprob: -4.8573384284973145
    10. 'avoid' → logprob: -5.2323384284973145

Token 1744: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.3376392424106598
    2. 'express' → logprob: -2.337639331817627
    3. ' all' → logprob: -2.837639331817627
    4. 'more' → logprob: -3.212639331817627
    5. 'the' → logprob: -3.462639331817627
    6. 'sm' → logprob: -5.087639331817627
    7. 'up' → logprob: -5.087639331817627
    8. '#' → logprob: -5.462639331817627
    9. 'small' → logprob: -5.587639331817627
    10. ' the' → logprob: -5.962639331817627

Token 1745: ' needed' (ID: 6118)
  Prédit: 'functions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'functions' → logprob: -0.19285494089126587
    2. 'bits' → logprob: -2.317854881286621
    3. ' functions' → logprob: -4.067854881286621
    4. 'truth' → logprob: -4.567854881286621
    5. 'possible' → logprob: -4.692854881286621
    6. 'func' → logprob: -5.067854881286621
    7. 'known' → logprob: -5.192854881286621
    8. '#' → logprob: -5.442854881286621
    9. 'express' → logprob: -5.817854881286621
    10. '   ' → logprob: -6.067854881286621

Token 1746: ' functions' (ID: 9964)
  Prédit: 'functions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'functions' → logprob: -0.01846456341445446
    2. ' functions' → logprob: -4.7684645652771
    3. '   ' → logprob: -5.8934645652771
    4. '#' → logprob: -6.1434645652771
    5. 'express' → logprob: -6.3934645652771
    6. 'truth' → logprob: -6.8934645652771
    7. '       ' → logprob: -7.2684645652771
    8. 'func' → logprob: -7.5184645652771
    9. 'bits' → logprob: -8.643464088439941
    10. 'function' → logprob: -9.143464088439941

Token 1747: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031130721792578697
    2. '   ' → logprob: -3.531130790710449
    3. ',' → logprob: -8.15613079071045
    4. '
' → logprob: -8.15613079071045
    5. 'for' → logprob: -8.78113079071045
    6. '<|end|>' → logprob: -8.90613079071045
    7. '.' → logprob: -9.40613079071045
    8. 'def' → logprob: -9.53113079071045
    9. '()' → logprob: -9.53113079071045
    10. ' for' → logprob: -10.03113079071045

Token 1748: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2537360191345215
    2. '       ' → logprob: -1.5037360191345215
    3. '
' → logprob: -6.7537360191345215
    4. 'def' → logprob: -7.3787360191345215
    5. ' def' → logprob: -12.75373649597168
    6. 'self' → logprob: -12.75373649597168
    7. '```' → logprob: -12.87873649597168
    8. 'for' → logprob: -13.62873649597168
    9. 'from' → logprob: -14.00373649597168
    10. 'import' → logprob: -14.12873649597168

Token 1749: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018259162083268166
    2. '   ' → logprob: -4.518259048461914
    3. '
' → logprob: -5.018259048461914
    4. 'def' → logprob: -8.268259048461914
    5. 'self' → logprob: -8.518259048461914
    6. ' self' → logprob: -10.268259048461914
    7. 'for' → logprob: -10.643259048461914
    8. ' def' → logprob: -11.268259048461914
    9. '#' (adapté à ' #') → logprob: -11.393259048461914
    10. '```' → logprob: -11.768259048461914

Token 1750: ' The' (ID: 623)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0037764543667435646
    2. '   ' → logprob: -5.878776550292969
    3. 'self' → logprob: -7.753776550292969
    4. 'def' → logprob: -8.378776550292969
    5. 'for' → logprob: -9.003776550292969
    6. '#' → logprob: -9.378776550292969
    7. '
' → logprob: -9.878776550292969
    8. 'while' → logprob: -10.753776550292969
    9. 'max' → logprob: -11.628776550292969
    10. ' self' → logprob: -12.378776550292969

Token 1751: ' number' (ID: 2086)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.40956762433052063
    2. 'work' → logprob: -1.6595675945281982
    3. 'queue' → logprob: -3.1595675945281982
    4. '#' → logprob: -4.034567832946777
    5. '_work' → logprob: -4.159567832946777
    6. 'max' → logprob: -4.159567832946777
    7. '_queue' → logprob: -4.409567832946777
    8. 'build' → logprob: -4.409567832946777
    9. 'to' → logprob: -5.159567832946777
    10. '   ' → logprob: -5.784567832946777

Token 1752: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.15875105559825897
    2. ' of' → logprob: -2.6587510108947754
    3. '       ' → logprob: -3.4087510108947754
    4. '   ' → logprob: -3.7837510108947754
    5. '_of' → logprob: -4.408751010894775
    6. '#' → logprob: -6.158751010894775
    7. '=' → logprob: -6.158751010894775
    8. 'is' → logprob: -6.908751010894775
    9. 'def' → logprob: -7.283751010894775
    10. ' is' → logprob: -7.533751010894775

Token 1753: ' Boolean' (ID: 12759)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.649819254875183
    2. 'keys' → logprob: -1.774819254875183
    3. 'bits' → logprob: -1.899819254875183
    4. 'functions' → logprob: -2.2748193740844727
    5. '   ' → logprob: -2.6498193740844727
    6. '#' → logprob: -2.6498193740844727
    7. 'def' → logprob: -3.2748193740844727
    8. ' bits' → logprob: -3.5248193740844727
    9. 'steps' → logprob: -4.149819374084473
    10. ' #' → logprob: -4.149819374084473

Token 1754: ' functions' (ID: 9964)
  Prédit: 'functions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'functions' → logprob: -0.14744754135608673
    2. ' functions' → logprob: -2.1474475860595703
    3. '       ' → logprob: -4.77244758605957
    4. '#' → logprob: -5.27244758605957
    5. '   ' → logprob: -6.89744758605957
    6. 'variables' → logprob: -7.02244758605957
    7. 'func' → logprob: -7.02244758605957
    8. 'bits' → logprob: -7.64744758605957
    9. ' variables' → logprob: -7.77244758605957
    10. 'express' → logprob: -7.89744758605957

Token 1755: ' of' (ID: 328)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.6228414177894592
    2. 'is' → logprob: -1.3728413581848145
    3. '       ' → logprob: -2.3728413581848145
    4. '   ' → logprob: -3.1228413581848145
    5. '#' → logprob: -4.1228413581848145
    6. '=' → logprob: -4.9978413581848145
    7. 'with' → logprob: -4.9978413581848145
    8. '
' → logprob: -5.4978413581848145
    9. ' with' → logprob: -5.6228413581848145
    10. 'of' → logprob: -5.6228413581848145

Token 1756: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.010659268125891685
    2. 'four' → logprob: -4.635659217834473
    3. 'n' → logprob: -7.135659217834473
    4. '#' → logprob: -10.260659217834473
    5. ' four' → logprob: -10.385659217834473
    6. ' ' → logprob: -11.510659217834473
    7. 'N' → logprob: -11.885659217834473
    8. 'up' → logprob: -12.010659217834473
    9. '```' → logprob: -12.260659217834473
    10. 'input' → logprob: -12.760659217834473

Token 1757: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.008871365338563919
    2. 'n' → logprob: -5.133871555328369
    3. 'four' → logprob: -5.883871555328369
    4. 'N' → logprob: -10.008871078491211
    5. ' four' → logprob: -10.133871078491211
    6. '#' → logprob: -10.258871078491211
    7. ' ' → logprob: -11.258871078491211
    8. 'variables' → logprob: -12.508871078491211
    9. 'input' → logprob: -13.133871078491211
    10. 'up' → logprob: -13.258871078491211

Token 1758: ' vars' (ID: 36194)
  Prédit: 'variables'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'variables' → logprob: -0.40011900663375854
    2. 'vars' → logprob: -1.2751190662384033
    3. ' variables' → logprob: -3.6501190662384033
    4. '#' → logprob: -4.650118827819824
    5. 'bits' → logprob: -4.650118827819824
    6. '_vars' → logprob: -5.650118827819824
    7. 'args' → logprob: -6.900118827819824
    8. '_variables' → logprob: -8.650118827819824
    9. '```' → logprob: -9.025118827819824
    10. ' vars' → logprob: -9.150118827819824

Token 1759: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.947205662727356
    2. ' is' → logprob: -1.072205662727356
    3. '       ' → logprob: -1.572205662727356
    4. '#' → logprob: -2.9472055435180664
    5. '   ' → logprob: -5.447205543518066
    6. '=' → logprob: -5.822205543518066
    7. ' =' → logprob: -7.197205543518066
    8. ' #' → logprob: -7.822205543518066
    9. ':' → logprob: -8.072205543518066
    10. '(' → logprob: -9.447205543518066

Token 1760: ' ' (ID: 220)
  Prédit: '655'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '655' → logprob: -0.1385028064250946
    2. '2' → logprob: -2.263502836227417
    3. '   ' → logprob: -4.013502597808838
    4. '65' → logprob: -5.638502597808838
    5. ' ' → logprob: -6.638502597808838
    6. '16' → logprob: -7.138502597808838
    7. '1' → logprob: -7.513502597808838
    8. '(' → logprob: -7.763502597808838
    9. '656' → logprob: -9.263503074645996
    10. '=' → logprob: -9.388503074645996

Token 1761: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5184604525566101
    2. '655' → logprob: -1.0184605121612549
    3. '16' → logprob: -3.643460512161255
    4. '1' → logprob: -4.518460273742676
    5. '(' → logprob: -5.518460273742676
    6. '65' → logprob: -6.643460273742676
    7. '   ' → logprob: -7.518460273742676
    8. ' ' → logprob: -8.643460273742676
    9. '256' → logprob: -9.143460273742676
    10. '656' → logprob: -9.893460273742676

Token 1762: '^(' (ID: 32612)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0010451936395838857
    2. '^' → logprob: -7.501045227050781
    3. '16' → logprob: -8.251045227050781
    4. ' **' → logprob: -8.751045227050781
    5. '<<' → logprob: -10.376045227050781
    6. '   ' → logprob: -12.001045227050781
    7. '*' → logprob: -12.126045227050781
    8. '```' → logprob: -12.251045227050781
    9. '
' → logprob: -12.501045227050781
    10. '#' → logprob: -12.626045227050781

Token 1763: '16' (ID: 1125)
  Prédit: '16'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '16' → logprob: -0.00044425477972254157
    2. '(' → logprob: -7.875444412231445
    3. '1' → logprob: -10.500444412231445
    4. '64' → logprob: -11.375444412231445
    5. ' ' → logprob: -11.750444412231445
    6. '32' → logprob: -13.000444412231445
    7. '   ' → logprob: -13.125444412231445
    8. '2' → logprob: -13.250444412231445
    9. '4' → logprob: -13.250444412231445
    10. '(
' → logprob: -13.500444412231445

Token 1764: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016893530264496803
    2. ')
' → logprob: -4.51689338684082
    3. '**' → logprob: -5.76689338684082
    4. '+' → logprob: -7.76689338684082
    5. '),' → logprob: -8.01689338684082
    6. '):
' → logprob: -8.01689338684082
    7. '-' → logprob: -8.01689338684082
    8. '):' → logprob: -8.76689338684082
    9. '0' → logprob: -9.01689338684082
    10. '=' → logprob: -9.01689338684082

Token 1765: ' which' (ID: 1118)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.053191352635622025
    2. '
' → logprob: -3.9281914234161377
    3. ',' → logprob: -4.178191184997559
    4. '   ' → logprob: -5.303191184997559
    5. '#' → logprob: -5.553191184997559
    6. ' (' → logprob: -6.178191184997559
    7. '.' → logprob: -6.303191184997559
    8. '(' → logprob: -7.303191184997559
    9. '**' → logprob: -7.803191184997559
    10. ';' → logprob: -7.928191184997559

Token 1766: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.11212337762117386
    2. 'is' → logprob: -2.987123489379883
    3. '#' → logprob: -3.112123489379883
    4. '       ' → logprob: -6.112123489379883
    5. ' #' → logprob: -6.112123489379883
    6. '
' → logprob: -6.987123489379883
    7. ' will' → logprob: -7.112123489379883
    8. '   ' → logprob: -7.362123489379883
    9. ' would' → logprob: -7.362123489379883
    10. ' cannot' → logprob: -7.362123489379883

Token 1767: ' huge' (ID: 9560)
  Prédit: 'too'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'too' → logprob: -0.1607409119606018
    2. '2' → logprob: -3.410740852355957
    3. '   ' → logprob: -3.660740852355957
    4. 'im' → logprob: -3.910740852355957
    5. 'hu' → logprob: -4.410740852355957
    6. ' too' → logprob: -4.910740852355957
    7. 'in' → logprob: -5.035740852355957
    8. 'pro' → logprob: -5.035740852355957
    9. '16' → logprob: -5.535740852355957
    10. 'un' → logprob: -5.535740852355957

Token 1768: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2807651162147522
    2. ',' → logprob: -1.5307650566101074
    3. '.' → logprob: -3.9057650566101074
    4. ' but' → logprob: -5.905765056610107
    5. '   ' → logprob: -6.655765056610107
    6. '...' → logprob: -6.905765056610107
    7. '
' → logprob: -7.530765056610107
    8. ';' → logprob: -7.655765056610107
    9. ',
' → logprob: -7.780765056610107
    10. '#' → logprob: -7.905765056610107

Token 1769: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7690837979316711
    2. '#' → logprob: -0.8940837979316711
    3. ' so' → logprob: -2.7690837383270264
    4. 'but' → logprob: -3.2690837383270264
    5. ' but' → logprob: -3.7690837383270264
    6. 'so' → logprob: -5.6440839767456055
    7. ' #' → logprob: -9.269083976745605
    8. '   ' → logprob: -9.769083976745605
    9. '           ' → logprob: -11.644083976745605
    10. 'So' → logprob: -11.644083976745605

Token 1770: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.14596231281757355
    2. '       ' → logprob: -2.1459622383117676
    3. 'but' → logprob: -4.020962238311768
    4. 'so' → logprob: -7.895962238311768
    5. ' so' → logprob: -8.145962715148926
    6. ' but' → logprob: -8.520962715148926
    7. '   ' → logprob: -10.520962715148926
    8. 'not' → logprob: -11.645962715148926
    9. '```' → logprob: -11.645962715148926
    10. 'So' → logprob: -12.770962715148926

Token 1771: ' so' (ID: 813)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.01311811339110136
    2. '       ' → logprob: -4.388118267059326
    3. 'but' → logprob: -7.763118267059326
    4. '   ' → logprob: -9.388117790222168
    5. 'so' → logprob: -10.263117790222168
    6. ' #' → logprob: -10.388117790222168
    7. ' but' → logprob: -11.388117790222168
    8. ' so' → logprob: -11.888117790222168
    9. 'self' → logprob: -12.638117790222168
    10. 'and' → logprob: -12.638117790222168

Token 1772: ' instead' (ID: 7665)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5777993202209473
    2. '       ' → logprob: -0.8277993202209473
    3. 'self' → logprob: -7.077799320220947
    4. ' #' → logprob: -7.827799320220947
    5. 'return' → logprob: -8.202798843383789
    6. 'we' → logprob: -8.952798843383789
    7. '   ' → logprob: -9.452798843383789
    8. 'the' → logprob: -10.202798843383789
    9. 'import' → logprob: -10.577798843383789
    10. 'not' → logprob: -10.952798843383789

Token 1773: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.11731258779764175
    2. ' of' → logprob: -2.4923126697540283
    3. '       ' → logprob: -3.6173126697540283
    4. '#' → logprob: -7.992312431335449
    5. 'we' → logprob: -8.24231243133545
    6. ',' → logprob: -8.61731243133545
    7. '   ' → logprob: -8.61731243133545
    8. 'while' → logprob: -10.36731243133545
    9. ':' → logprob: -10.49231243133545
    10. 'import' → logprob: -10.74231243133545

Token 1774: ' all' (ID: 722)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -1.1013751029968262
    2. 'ex' → logprob: -1.8513751029968262
    3. '#' → logprob: -2.351375102996826
    4. 'explicit' → logprob: -2.601375102996826
    5. 'st' → logprob: -2.726375102996826
    6. 'building' → logprob: -2.976375102996826
    7. 'full' → logprob: -3.226375102996826
    8. 'iter' → logprob: -3.351375102996826
    9. 'trying' → logprob: -3.726375102996826
    10. 'expl' → logprob: -4.101375102996826

Token 1775: ',' (ID: 11)
  Prédit: 'functions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'functions' → logprob: -0.8408179879188538
    2. '       ' → logprob: -0.9658179879188538
    3. '#' → logprob: -2.465817928314209
    4. ' functions' → logprob: -3.465817928314209
    5. '   ' → logprob: -3.715817928314209
    6. 'continu' → logprob: -4.215817928314209
    7. 'possible' → logprob: -5.965817928314209
    8. 'comput' → logprob: -5.965817928314209
    9. 'com' → logprob: -6.090817928314209
    10. ' #' → logprob: -6.215817928314209

Token 1776: ' we' (ID: 581)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.009184197522699833
    2. '       ' → logprob: -4.75918436050415
    3. 'we' → logprob: -7.75918436050415
    4. 'self' → logprob: -9.634183883666992
    5. ' #' → logprob: -10.509183883666992
    6. '   ' → logprob: -10.759183883666992
    7. '...' → logprob: -11.634183883666992
    8. 'continue' → logprob: -12.009183883666992
    9. '<|end|>' → logprob: -12.384183883666992
    10. 'import' → logprob: -13.259183883666992

Token 1777: ' build' (ID: 3024)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.7725760340690613
    2. 'focus' → logprob: -2.397576093673706
    3. '#' → logprob: -2.772576093673706
    4. 'build' → logprob: -3.147576093673706
    5. 'expl' → logprob: -3.147576093673706
    6. ' limit' → logprob: -3.272576093673706
    7. '   ' → logprob: -3.522576093673706
    8. 'only' → logprob: -3.522576093673706
    9. 'restrict' → logprob: -3.522576093673706
    10. ' only' → logprob: -3.772576093673706

Token 1778: ' cache' (ID: 11956)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.295217752456665
    2. ' a' → logprob: -2.295217752456665
    3. 'a' → logprob: -2.545217752456665
    4. ' only' → logprob: -2.545217752456665
    5. ' up' → logprob: -2.795217752456665
    6. 'only' → logprob: -2.920217752456665
    7. 'partial' → logprob: -3.045217752456665
    8. 'the' → logprob: -3.045217752456665
    9. 'self' → logprob: -3.420217752456665
    10. '   ' → logprob: -3.545217752456665

Token 1779: ' only' (ID: 1606)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023543136194348335
    2. '   ' → logprob: -5.148543357849121
    3. 'for' → logprob: -5.398543357849121
    4. 'import' → logprob: -5.523543357849121
    5. '#' → logprob: -5.898543357849121
    6. ' for' → logprob: -6.023543357849121
    7. ' only' → logprob: -7.398543357849121
    8. 'with' → logprob: -7.898543357849121
    9. 'only' → logprob: -8.023543357849121
    10. ',' → logprob: -8.023543357849121

Token 1780: ' increment' (ID: 24032)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3700840175151825
    2. ' for' → logprob: -2.245084047317505
    3. 'for' → logprob: -2.370084047317505
    4. '   ' → logprob: -2.870084047317505
    5. '#' → logprob: -3.120084047317505
    6. ' up' → logprob: -5.870083808898926
    7. 'self' → logprob: -6.870083808898926
    8. 'from' → logprob: -7.495083808898926
    9. 'up' → logprob: -7.495083808898926
    10. 'import' → logprob: -7.495083808898926

Token 1781: 'ally' (ID: 2146)
  Prédit: 'ally'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ally' → logprob: -0.0004098195640835911
    2. 'al' → logprob: -8.375410079956055
    3. '   ' → logprob: -9.375410079956055
    4. '       ' → logprob: -9.500410079956055
    5. 'aly' → logprob: -12.500410079956055
    6. '```' → logprob: -12.500410079956055
    7. 'atively' → logprob: -12.625410079956055
    8. '           ' → logprob: -13.000410079956055
    9. '
' → logprob: -13.750410079956055
    10. '_' → logprob: -14.125410079956055

Token 1782: ' per' (ID: 777)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1783: ' input' (ID: 3422)
  Prédit: ' demand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' demand' → logprob: -1.1143133640289307
    2. 'request' → logprob: -1.2393133640289307
    3. 'd' → logprob: -1.4893133640289307
    4. ' request' → logprob: -2.8643133640289307
    5. 'need' → logprob: -3.6143133640289307
    6. 'requested' → logprob: -4.364313125610352
    7. 'requests' → logprob: -4.364313125610352
    8. 'iteration' → logprob: -4.739313125610352
    9. 'depth' → logprob: -5.614313125610352
    10. ' need' → logprob: -5.614313125610352

Token 1784: ' expression' (ID: 12973)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11782106012105942
    2. 'def' → logprob: -2.617820978164673
    3. '       ' → logprob: -4.742821216583252
    4. ' ' → logprob: -5.242821216583252
    5. ',' → logprob: -5.992821216583252
    6. '<|end|>' → logprob: -6.242821216583252
    7. ')' → logprob: -6.367821216583252
    8. '_' → logprob: -6.367821216583252
    9. '  ' → logprob: -6.492821216583252
    10. 's' → logprob: -6.492821216583252

Token 1785: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08443550765514374
    2. '.' → logprob: -3.70943546295166
    3. '<|end|>' → logprob: -3.83443546295166
    4. 'def' → logprob: -4.45943546295166
    5. '
' → logprob: -4.70943546295166
    6. ',' → logprob: -5.33443546295166
    7. '       ' → logprob: -6.20943546295166
    8. ' def' → logprob: -6.58443546295166
    9. ')' → logprob: -6.70943546295166
    10. ' ' → logprob: -6.83443546295166

Token 1786: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1531870812177658
    2. 'def' → logprob: -2.1531870365142822
    3. '<|end|>' → logprob: -4.403187274932861
    4. '
' → logprob: -4.778187274932861
    5. ' def' → logprob: -5.403187274932861
    6. '<|end|>' → logprob: -7.778187274932861
    7. '       ' → logprob: -9.153186798095703
    8. '    
' → logprob: -10.028186798095703
    9. '```' → logprob: -10.403186798095703
    10. '...' → logprob: -10.403186798095703

Token 1787: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.4748499393463135
    2. '   ' → logprob: -0.9748499393463135
    3. ' def' → logprob: -7.724849700927734
    4. '<|end|>' → logprob: -8.349849700927734
    5. '
' → logprob: -10.099849700927734
    6. '<|end|>' → logprob: -10.724849700927734
    7. '	def' → logprob: -11.724849700927734
    8. '    
' → logprob: -12.349849700927734
    9. '#' → logprob: -12.849849700927734
    10. ' ' → logprob: -13.224849700927734

Token 1788: ' _' (ID: 1175)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.35760191082954407
    2. 'def' → logprob: -1.7326018810272217
    3. 'expand' → logprob: -3.4826018810272217
    4. 'add' → logprob: -3.6076018810272217
    5. ' def' → logprob: -4.232602119445801
    6. 'compute' → logprob: -4.482602119445801
    7. 'get' → logprob: -4.732602119445801
    8. ' build' → logprob: -5.232602119445801
    9. 'generate' → logprob: -5.357602119445801
    10. 'find' → logprob: -5.607602119445801

Token 1789: 'build' (ID: 9242)
  Prédit: 'build'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -1.9361264946837764e-07
    2. '_build' → logprob: -15.625
    3. ' build' → logprob: -18.75
    4. 'cache' → logprob: -20.875
    5. '(build' → logprob: -21.25
    6. 'def' → logprob: -21.375
    7. '	build' → logprob: -21.875
    8. 'fill' → logprob: -22.875
    9. 'load' → logprob: -22.875
    10. '   ' → logprob: -23.125

Token 1790: '_neg' (ID: 75899)
  Prédit: '_neg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_neg' → logprob: -0.12720337510108948
    2. 'neg' → logprob: -2.1272034645080566
    3. '_cache' → logprob: -8.627202987670898
    4. 'cache' → logprob: -9.502202987670898
    5. '_pr' → logprob: -11.377202987670898
    6. '_ne' → logprob: -13.127202987670898
    7. 'pr' → logprob: -13.252202987670898
    8. 'cached' → logprob: -14.252202987670898
    9. 'ne' → logprob: -14.502202987670898
    10. 'self' → logprob: -14.627202987670898

Token 1791: 'ations' (ID: 929)
  Prédit: '_cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.023355422541499138
    2. 'ations' → logprob: -3.773355484008789
    3. 'ate' → logprob: -9.273355484008789
    4. 'cache' → logprob: -12.023355484008789
    5. 'ation' → logprob: -12.148355484008789
    6. 'Cache' → logprob: -13.898355484008789
    7. '   ' → logprob: -13.898355484008789
    8. '_' → logprob: -14.148355484008789
    9. '_CACHE' → logprob: -14.773355484008789
    10. 'c' → logprob: -15.273355484008789

Token 1792: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.531315314830863e-06
    2. '   ' → logprob: -13.375003814697266
    3. '       ' → logprob: -13.625003814697266
    4. 'self' → logprob: -14.375003814697266
    5. '(' → logprob: -15.875003814697266
    6. ' (' → logprob: -17.375003814697266
    7. 'def' → logprob: -17.875003814697266
    8. '(
' → logprob: -19.250003814697266
    9. '```' → logprob: -19.875003814697266
    10. '
' → logprob: -20.125003814697266

Token 1793: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0001146291324403137
    2. '   ' → logprob: -10.125114440917969
    3. '):
' → logprob: -10.500114440917969
    4. 'self' → logprob: -10.500114440917969
    5. '       ' → logprob: -11.625114440917969
    6. ' (' → logprob: -12.875114440917969
    7. '):' → logprob: -13.125114440917969
    8. '(' → logprob: -13.375114440917969
    9. '():
' → logprob: -13.875114440917969
    10. ')' → logprob: -14.250114440917969

Token 1794: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019888286478817463
    2. '   ' → logprob: -6.251988887786865
    3. '```' → logprob: -10.251988410949707
    4. 'for' → logprob: -11.251988410949707
    5. '           ' → logprob: -12.501988410949707
    6. 'bits' → logprob: -12.751988410949707
    7. ' for' → logprob: -13.251988410949707
    8. '#' → logprob: -14.376988410949707
    9. ' bits' → logprob: -15.126988410949707
    10. '      ' → logprob: -15.251988410949707

Token 1795: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.019973792135715485
    2. '       ' → logprob: -4.3949737548828125
    3. 'to' → logprob: -5.3949737548828125
    4. 'new' → logprob: -6.7699737548828125
    5. '#' (adapté à ' #') → logprob: -7.3949737548828125
    6. 'neg' → logprob: -7.7699737548828125
    7. 'queue' → logprob: -8.394973754882812
    8. 'from' → logprob: -8.644973754882812
    9. 'changed' → logprob: -9.019973754882812
    10. 'keys' → logprob: -9.519973754882812

Token 1796: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008735946379601955
    2. '       ' → logprob: -4.7587361335754395
    3. 'from' → logprob: -10.133735656738281
    4. '#' → logprob: -10.133735656738281
    5. 'to' → logprob: -10.508735656738281
    6. 'neg' → logprob: -12.383735656738281
    7. 'queue' → logprob: -12.508735656738281
    8. '   ' → logprob: -12.633735656738281
    9. 'new' → logprob: -13.508735656738281
    10. ' for' → logprob: -13.883735656738281

Token 1797: ' each' (ID: 2454)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.002796318382024765
    2. ' bits' → logprob: -6.127796173095703
    3. '(bits' → logprob: -7.502796173095703
    4. 'b' → logprob: -11.252796173095703
    5. 'expr' → logprob: -11.377796173095703
    6. '   ' → logprob: -11.377796173095703
    7. 'bit' → logprob: -11.877796173095703
    8. '(' → logprob: -12.752796173095703
    9. '       ' → logprob: -13.502796173095703
    10. 'def' → logprob: -13.627796173095703

Token 1798: ' cached' (ID: 39472)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.00016325322212651372
    2. ' bits' → logprob: -8.875163078308105
    3. '   ' → logprob: -11.500163078308105
    4. '(bits' → logprob: -11.875163078308105
    5. '       ' → logprob: -12.250163078308105
    6. '           ' → logprob: -15.500163078308105
    7. 'bit' → logprob: -15.500163078308105
    8. '_bits' → logprob: -15.875163078308105
    9. '```' → logprob: -16.000164031982422
    10. '`' → logprob: -16.250164031982422

Token 1799: ' function' (ID: 1114)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.0004450892156455666
    2. ' bits' → logprob: -8.250445365905762
    3. 'key' → logprob: -9.250445365905762
    4. 'func' → logprob: -10.375445365905762
    5. '   ' → logprob: -10.625445365905762
    6. 'def' → logprob: -11.625445365905762
    7. 'keys' → logprob: -12.375445365905762
    8. '_bits' → logprob: -12.375445365905762
    9. '       ' → logprob: -12.500445365905762
    10. 'expr' → logprob: -13.125445365905762

Token 1800: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45120012760162354
    2. ',' → logprob: -1.4512001276016235
    3. ' in' → logprob: -2.951200008392334
    4. 'bits' → logprob: -3.576200008392334
    5. ':' → logprob: -3.951200008392334
    6. 'in' → logprob: -4.451200008392334
    7. '           ' → logprob: -4.826200008392334
    8. '_bits' → logprob: -5.826200008392334
    9. ' bits' → logprob: -6.201200008392334
    10. '(bits' → logprob: -6.576200008392334

Token 1801: ' cache' (ID: 11956)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5066391825675964
    2. '       ' → logprob: -1.2566392421722412
    3. 'bits' → logprob: -2.381639242172241
    4. '           ' → logprob: -4.006639003753662
    5. ' for' → logprob: -6.256639003753662
    6. '   ' → logprob: -8.50663948059082
    7. ' bits' → logprob: -9.63163948059082
    8. 'def' → logprob: -10.63163948059082
    9. 'keys' → logprob: -10.63163948059082
    10. '               ' → logprob: -11.38163948059082

Token 1802: ' neg' (ID: 4528)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.22874706983566284
    2. '       ' → logprob: -2.4787471294403076
    3. 'neg' → logprob: -2.8537471294403076
    4. ' bits' → logprob: -4.1037468910217285
    5. 'keys' → logprob: -4.6037468910217285
    6. 'key' → logprob: -4.8537468910217285
    7. 'self' → logprob: -4.9787468910217285
    8. '   ' → logprob: -4.9787468910217285
    9. '_bits' → logprob: -5.6037468910217285
    10. 'in' → logprob: -5.9787468910217285

Token 1803: 'ation' (ID: 387)
  Prédit: '_cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.33307212591171265
    2. 'ations' → logprob: -2.4580721855163574
    3. 'ated' → logprob: -2.7080721855163574
    4. '       ' → logprob: -2.9580721855163574
    5. 'ation' → logprob: -3.5830721855163574
    6. '_bits' → logprob: -3.7080721855163574
    7. 's' → logprob: -5.083072185516357
    8. 'ate' → logprob: -5.458072185516357
    9. '           ' → logprob: -5.708072185516357
    10. '   ' → logprob: -5.833072185516357

Token 1804: ' minimal' (ID: 19957)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014674392528831959
    2. 'for' → logprob: -4.889674186706543
    3. '   ' → logprob: -6.639674186706543
    4. 'self' → logprob: -6.764674186706543
    5. 'in' → logprob: -7.139674186706543
    6. ' in' → logprob: -7.514674186706543
    7. 'keys' → logprob: -7.639674186706543
    8. ' =' → logprob: -7.764674186706543
    9. '           ' → logprob: -7.889674186706543
    10. ' for' → logprob: -8.014674186706543

Token 1805: ' forms' (ID: 11526)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.6747190356254578
    2. 'forms' → logprob: -0.7997190356254578
    3. 'form' → logprob: -4.174718856811523
    4. 'express' → logprob: -5.299718856811523
    5. 'for' → logprob: -5.424718856811523
    6. ' forms' → logprob: -5.674718856811523
    7. '_forms' → logprob: -5.674718856811523
    8. 'expr' → logprob: -5.924718856811523
    9. ' length' → logprob: -6.424718856811523
    10. '_length' → logprob: -6.674718856811523

Token 1806: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00035631912760436535
    2. 'for' → logprob: -8.500356674194336
    3. ' for' → logprob: -8.875356674194336
    4. ',' → logprob: -11.875356674194336
    5. '   ' → logprob: -13.000356674194336
    6. '
' → logprob: -13.500356674194336
    7. ':' → logprob: -14.375356674194336
    8. '           ' → logprob: -15.250356674194336
    9. ' to' → logprob: -15.500356674194336
    10. 'self' → logprob: -15.625356674194336

Token 1807: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.6789137084269896e-05
    2. '   ' → logprob: -11.25003719329834
    3. 'for' → logprob: -11.25003719329834
    4. ' for' → logprob: -12.12503719329834
    5. ',' → logprob: -13.12503719329834
    6. '           ' → logprob: -14.25003719329834
    7. '```' → logprob: -14.87503719329834
    8. 'self' → logprob: -14.87503719329834
    9. '()' → logprob: -15.12503719329834
    10. ':' → logprob: -15.25003719329834

Token 1808: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03816668316721916
    2. 'for' → logprob: -3.2881667613983154
    3. ' for' → logprob: -9.788166999816895
    4. 'keys' → logprob: -10.538166999816895
    5. '   ' → logprob: -10.788166999816895
    6. 'bits' → logprob: -11.038166999816895
    7. 'neg' → logprob: -13.913166999816895
    8. 'to' → logprob: -14.038166999816895
    9. 'def' → logprob: -14.163166999816895
    10. 'self' → logprob: -14.163166999816895

Token 1809: ' We' (ID: 1416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023845020681619644
    2. 'for' → logprob: -3.7738449573516846
    3. ' for' → logprob: -7.773845195770264
    4. '   ' → logprob: -8.773844718933105
    5. 'def' → logprob: -11.023844718933105
    6. 'bits' → logprob: -12.023844718933105
    7. 'keys' → logprob: -14.398844718933105
    8. 'self' → logprob: -15.273844718933105
    9. '           ' → logprob: -15.523844718933105
    10. ' ' → logprob: -16.398845672607422

Token 1810: ' do' (ID: 621)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.805740475654602
    2. '       ' → logprob: -1.430740475654602
    3. 'for' → logprob: -1.430740475654602
    4. 'continue' → logprob: -3.1807403564453125
    5. '   ' → logprob: -3.9307403564453125
    6. ' for' → logprob: -5.9307403564453125
    7. 'expand' → logprob: -6.6807403564453125
    8. 'build' → logprob: -6.9307403564453125
    9. '#' → logprob: -7.3057403564453125
    10. 'populate' → logprob: -7.4307403564453125

Token 1811: ' this' (ID: 495)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07214079052209854
    2. '       ' → logprob: -3.322140693664551
    3. 'not' → logprob: -3.447140693664551
    4. '   ' → logprob: -6.947140693664551
    5. ' for' → logprob: -7.447140693664551
    6. '
' → logprob: -9.94714069366455
    7. 'def' → logprob: -10.44714069366455
    8. ' not' → logprob: -10.94714069366455
    9. ' ' → logprob: -11.19714069366455
    10. '           ' → logprob: -12.07214069366455

Token 1812: ' once' (ID: 4730)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3294471204280853
    2. 'for' → logprob: -1.5794471502304077
    3. ' for' → logprob: -2.829447031021118
    4. '   ' → logprob: -5.204447269439697
    5. 'def' → logprob: -5.829447269439697
    6. ' by' → logprob: -6.829447269439697
    7. '
' → logprob: -6.954447269439697
    8. ' in' → logprob: -7.204447269439697
    9. ':' → logprob: -7.329447269439697
    10. ':
' → logprob: -7.579447269439697

Token 1813: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0038813117425888777
    2. ' for' → logprob: -6.253881454467773
    3. 'for' → logprob: -6.253881454467773
    4. ',' → logprob: -11.628881454467773
    5. '   ' → logprob: -11.753881454467773
    6. ' at' → logprob: -12.378881454467773
    7. ' to' → logprob: -13.628881454467773
    8. '.' → logprob: -14.128881454467773
    9. '           ' → logprob: -14.503881454467773
    10. ' in' → logprob: -14.628881454467773

Token 1814: ' bootstrap' (ID: 57493)
  Prédit: 'complete'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'complete' → logprob: -0.6458554863929749
    2. 'for' → logprob: -1.52085542678833
    3. 'start' → logprob: -2.64585542678833
    4. 'self' → logprob: -2.64585542678833
    5. '       ' → logprob: -3.39585542678833
    6. 'expand' → logprob: -3.52085542678833
    7. 'keys' → logprob: -4.27085542678833
    8. 'finish' → logprob: -4.64585542678833
    9. 'initialize' → logprob: -5.89585542678833
    10. 'populate' → logprob: -5.89585542678833

Token 1815: ' neg' (ID: 4528)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07039529830217361
    2. 'for' → logprob: -2.8203952312469482
    3. ' for' → logprob: -4.820395469665527
    4. '   ' → logprob: -8.695395469665527
    5. 'keys' → logprob: -9.445395469665527
    6. 'def' → logprob: -10.320395469665527
    7. ',' → logprob: -12.070395469665527
    8. '#' → logprob: -12.320395469665527
    9. 'self' → logprob: -12.320395469665527
    10. 'tokens' → logprob: -12.695395469665527

Token 1816: 'ations' (ID: 929)
  Prédit: '_cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.015890540555119514
    2. '       ' → logprob: -4.890890598297119
    3. 'ations' → logprob: -5.640890598297119
    4. '   ' → logprob: -6.265890598297119
    5. 'cache' → logprob: -7.140890598297119
    6. 'ation' → logprob: -7.515890598297119
    7. 'Cache' → logprob: -8.015890121459961
    8. 'for' → logprob: -8.265890121459961
    9. 'ates' → logprob: -9.015890121459961
    10. 'ots' → logprob: -9.390890121459961

Token 1817: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014923651469871402
    2. ' for' → logprob: -6.751492500305176
    3. 'for' → logprob: -8.126492500305176
    4. ',' → logprob: -11.126492500305176
    5. '   ' → logprob: -12.626492500305176
    6. '.' → logprob: -12.876492500305176
    7. ' and' → logprob: -14.001492500305176
    8. ' to' → logprob: -14.126492500305176
    9. ' with' → logprob: -14.376492500305176
    10. '           ' → logprob: -14.501492500305176

Token 1818: ' primitives' (ID: 174906)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.4515094459056854
    2. 'self' → logprob: -1.2015094757080078
    3. 'all' → logprob: -3.326509475708008
    4. 'the' → logprob: -4.076509475708008
    5. 'cached' → logprob: -5.326509475708008
    6. 'initial' → logprob: -6.326509475708008
    7. 'primitive' → logprob: -6.326509475708008
    8. 'current' → logprob: -8.076509475708008
    9. ' primitives' → logprob: -8.201509475708008
    10. 'existing' → logprob: -8.451509475708008

Token 1819: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011003263061866164
    2. '
' → logprob: -7.501100540161133
    3. ' for' → logprob: -8.001100540161133
    4. 'for' → logprob: -8.751100540161133
    5. ',' → logprob: -10.251100540161133
    6. '   ' → logprob: -12.251100540161133
    7. ' and' → logprob: -12.751100540161133
    8. '.' → logprob: -13.501100540161133
    9. '           ' → logprob: -13.626100540161133
    10. '```' → logprob: -14.001100540161133

Token 1820: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016469687689095736
    2. 'for' → logprob: -6.501646995544434
    3. '   ' → logprob: -9.126646995544434
    4. ' for' → logprob: -10.376646995544434
    5. '
' → logprob: -13.251646995544434
    6. '```' → logprob: -13.251646995544434
    7. 'def' → logprob: -14.626646995544434
    8. '           ' → logprob: -14.876646995544434
    9. 'self' → logprob: -16.251646041870117
    10. '	' → logprob: -16.876646041870117

Token 1821: ' new' (ID: 620)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5759692788124084
    2. 'for' → logprob: -0.8259692788124084
    3. ' for' → logprob: -10.700969696044922
    4. '   ' → logprob: -11.950969696044922
    5. 'keys' → logprob: -14.950969696044922
    6. 'from' → logprob: -16.200969696044922
    7. 'self' → logprob: -16.450969696044922
    8. '	for' → logprob: -16.450969696044922
    9. '           ' → logprob: -16.825969696044922
    10. 'items' → logprob: -17.075969696044922

Token 1822: '_entries' (ID: 63162)
  Prédit: '_cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.10628871619701385
    2. ' =' → logprob: -3.7312886714935303
    3. '_items' → logprob: -3.9812886714935303
    4. '_keys' → logprob: -4.356288909912109
    5. 'cache' → logprob: -4.481288909912109
    6. '=' → logprob: -4.606288909912109
    7. '_entries' → logprob: -4.856288909912109
    8. '_bits' → logprob: -4.981288909912109
    9. '   ' → logprob: -5.856288909912109
    10. '_forms' → logprob: -5.981288909912109

Token 1823: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029779190197587013
    2. ' =' → logprob: -3.5297791957855225
    3. '       ' → logprob: -11.029779434204102
    4. '={}' → logprob: -11.529779434204102
    5. '   ' → logprob: -13.404779434204102
    6. '={}
' → logprob: -14.654779434204102
    7. '={' → logprob: -15.529779434204102
    8. '=[]' → logprob: -15.904779434204102
    9. ':' → logprob: -15.904779434204102
    10. '=self' → logprob: -16.1547794342041

Token 1824: ' dict' (ID: 11878)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.012779091484844685
    2. 'dict' → logprob: -5.012779235839844
    3. '{}
' → logprob: -6.012779235839844
    4. '[]' → logprob: -6.137779235839844
    5. 'set' → logprob: -7.262779235839844
    6. 'True' → logprob: -7.512779235839844
    7. '[]
' → logprob: -9.262779235839844
    8. '{' → logprob: -9.387779235839844
    9. ' {}' → logprob: -12.137779235839844
    10. ' dict' → logprob: -13.387779235839844

Token 1825: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007825464010238647
    2. '()' → logprob: -5.5078253746032715
    3. '()
' → logprob: -6.2578253746032715
    4. '<|end|>' → logprob: -7.8828253746032715
    5. '(' → logprob: -8.38282585144043
    6. '(
' → logprob: -8.50782585144043
    7. 'from' → logprob: -8.63282585144043
    8. '<|end|>' → logprob: -8.75782585144043
    9. ')' → logprob: -9.13282585144043
    10. '(self' → logprob: -9.50782585144043

Token 1826: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06204039230942726
    2. 'for' → logprob: -2.812040328979492
    3. ' for' → logprob: -9.562040328979492
    4. '   ' → logprob: -13.187040328979492
    5. '	for' → logprob: -15.812040328979492
    6. '
' → logprob: -16.187040328979492
    7. '           ' → logprob: -16.437040328979492
    8. '```' → logprob: -17.187040328979492
    9. 'from' → logprob: -17.687040328979492
    10. '	' → logprob: -17.687040328979492

Token 1827: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16188405454158783
    2. 'for' (adapté à ' for') → logprob: -1.911884069442749
    3. ' for' → logprob: -6.41188383102417
    4. 'invert' → logprob: -11.536884307861328
    5. 'bits' → logprob: -12.786884307861328
    6. 'com' → logprob: -13.786884307861328
    7. '   ' → logprob: -14.286884307861328
    8. '           ' → logprob: -14.536884307861328
    9. '	for' → logprob: -15.036884307861328
    10. 'in' → logprob: -15.286884307861328

Token 1828: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.00014084660506341606
    2. ' bits' → logprob: -9.250141143798828
    3. 'func' → logprob: -10.750141143798828
    4. '   ' → logprob: -12.000141143798828
    5. 'orig' → logprob: -12.125141143798828
    6. 'key' → logprob: -12.625141143798828
    7. 'bt' → logprob: -13.000141143798828
    8. '(bits' → logprob: -14.125141143798828
    9. '_bits' → logprob: -14.125141143798828
    10. 'base' → logprob: -14.375141143798828

Token 1829: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4453321397304535
    2. ' in' → logprob: -1.0703321695327759
    3. 'in' → logprob: -4.945332050323486
    4. ' ,' → logprob: -5.445332050323486
    5. '_bits' → logprob: -5.820332050323486
    6. 'bits' → logprob: -7.320332050323486
    7. '       ' → logprob: -7.570332050323486
    8. '_in' → logprob: -8.445332527160645
    9. '   ' → logprob: -8.945332527160645
    10. '           ' → logprob: -9.070332527160645

Token 1830: ' forms' (ID: 11526)
  Prédit: 'forms'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'forms' → logprob: -0.31380221247673035
    2. 'expr' → logprob: -1.3138022422790527
    3. 'form' → logprob: -8.063801765441895
    4. ' expr' → logprob: -9.188801765441895
    5. ' forms' → logprob: -9.438801765441895
    6. '   ' → logprob: -10.938801765441895
    7. '       ' → logprob: -11.438801765441895
    8. 'express' → logprob: -12.563801765441895
    9. 'orig' → logprob: -13.688801765441895
    10. 'str' → logprob: -13.813801765441895

Token 1831: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07912243157625198
    2. 'in' → logprob: -2.579122543334961
    3. '_set' → logprob: -9.704122543334961
    4. 's' → logprob: -9.704122543334961
    5. '_in' → logprob: -10.204122543334961
    6. 'set' → logprob: -10.204122543334961
    7. ',' → logprob: -11.704122543334961
    8. '       ' → logprob: -12.079122543334961
    9. '	in' → logprob: -12.454122543334961
    10. '   ' → logprob: -12.704122543334961

Token 1832: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0016161426901817322
    2. '       ' → logprob: -7.12661600112915
    3. ' self' → logprob: -7.12661600112915
    4. '(self' → logprob: -12.126616477966309
    5. '```' → logprob: -13.876616477966309
    6. '           ' → logprob: -14.501616477966309
    7. '`' → logprob: -15.501616477966309
    8. '[self' → logprob: -15.751616477966309
    9. 'list' → logprob: -15.876616477966309
    10. '
' → logprob: -16.001615524291992

Token 1833: '.cache' (ID: 37175)
  Prédit: '.cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cache' → logprob: -0.018151231110095978
    2. 'cache' → logprob: -4.01815128326416
    3. '.items' → logprob: -14.89315128326416
    4. '.' → logprob: -15.14315128326416
    5. '	cache' → logprob: -15.51815128326416
    6. 'CACHE' → logprob: -15.64315128326416
    7. ' .' → logprob: -16.018150329589844
    8. '_cache' → logprob: -16.143150329589844
    9. ' cache' → logprob: -16.768150329589844
    10. 'items' → logprob: -16.893150329589844

Token 1834: '.items' (ID: 19607)
  Prédit: '.items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.01357475109398365
    2. ' in' → logprob: -5.138574600219727
    3. 'in' → logprob: -5.513574600219727
    4. '.iteritems' → logprob: -6.513574600219727
    5. 'items' → logprob: -7.138574600219727
    6. '.' → logprob: -7.388574600219727
    7. '_items' → logprob: -8.138574600219727
    8. '       ' → logprob: -9.013574600219727
    9. ',' → logprob: -9.388574600219727
    10. '   ' → logprob: -9.763574600219727

Token 1835: '():
' (ID: 8595)
  Prédit: '():
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.00554013904184103
    2. '():' → logprob: -5.630540370941162
    3. '()' → logprob: -6.630540370941162
    4. '       ' → logprob: -7.880540370941162
    5. ':
' → logprob: -9.630539894104004
    6. '()):
' → logprob: -10.005539894104004
    7. ':' → logprob: -10.505539894104004
    8. ' in' → logprob: -10.630539894104004
    9. '(),' → logprob: -10.630539894104004
    10. '():
' → logprob: -11.005539894104004

Token 1836: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.9623810658231378e-05
    2. '       ' → logprob: -11.875020027160645
    3. ',' → logprob: -12.500020027160645
    4. '```' → logprob: -12.625020027160645
    5. 'self' → logprob: -13.875020027160645
    6. 'for' → logprob: -14.000020027160645
    7. 'new' → logprob: -14.250020027160645
    8. ' for' → logprob: -14.375020027160645
    9. '               ' → logprob: -14.750020027160645
    10. '   ' → logprob: -14.750020027160645

Token 1837: ' neg' (ID: 4528)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1034565269947052
    2. 'inv' → logprob: -2.853456497192383
    3. 'neg' (adapté à ' neg') → logprob: -3.853456497192383
    4. 'bits' → logprob: -4.853456497192383
    5. 'in' → logprob: -5.228456497192383
    6. 'com' → logprob: -6.478456497192383
    7. '       ' → logprob: -6.728456497192383
    8. 'inverse' → logprob: -6.978456497192383
    9. 'not' → logprob: -7.228456497192383
    10. 'invert' → logprob: -7.978456497192383

Token 1838: ' =' (ID: 314)
  Prédit: '_bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bits' → logprob: -0.0025529502891004086
    2. 'bits' → logprob: -6.1275529861450195
    3. 'ated' → logprob: -8.50255298614502
    4. '_cache' → logprob: -9.25255298614502
    5. ' =' → logprob: -10.62755298614502
    6. '=' → logprob: -11.50255298614502
    7. 'ation' → logprob: -12.12755298614502
    8. ' bits' → logprob: -12.37755298614502
    9. '       ' → logprob: -12.62755298614502
    10. 'cache' → logprob: -12.75255298614502

Token 1839: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.06456600874662399
    2. '(~' → logprob: -3.314565896987915
    3. '((' → logprob: -4.939566135406494
    4. ' bits' → logprob: -5.439566135406494
    5. '~' → logprob: -5.564566135406494
    6. 'Truth' → logprob: -5.689566135406494
    7. ' (~' → logprob: -6.064566135406494
    8. '(' → logprob: -6.064566135406494
    9. '(bits' → logprob: -6.564566135406494
    10. ' Truth' → logprob: -8.314565658569336

Token 1840: ' ^' (ID: 7602)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.04326510429382324
    2. ' ^' → logprob: -3.1682651042938232
    3. '^(' → logprob: -8.793265342712402
    4. '^{' → logprob: -9.543265342712402
    5. '           ' → logprob: -11.293265342712402
    6. '^^' → logprob: -11.418265342712402
    7. '       ' → logprob: -11.793265342712402
    8. '^\' → logprob: -12.668265342712402
    9. ' ^=' → logprob: -13.293265342712402
    10. '   ' → logprob: -13.918265342712402

Token 1841: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00027706706896424294
    2. '(' → logprob: -8.875277519226074
    3. '655' → logprob: -9.125277519226074
    4. '((' → logprob: -10.625277519226074
    5. '   ' → logprob: -12.625277519226074
    6. ' ' → logprob: -14.625277519226074
    7. ' (' → logprob: -17.750276565551758
    8. '```' → logprob: -18.000276565551758
    9. '  ' → logprob: -18.125276565551758
    10. '(((' → logprob: -18.125276565551758

Token 1842: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006341627449728549
    2. '(' → logprob: -8.25063419342041
    3. '655' → logprob: -8.25063419342041
    4. '((' → logprob: -9.12563419342041
    5. '   ' → logprob: -13.00063419342041
    6. ' ' → logprob: -15.25063419342041
    7. '(((' → logprob: -16.375633239746094
    8. '```' → logprob: -17.375633239746094
    9. ' (' → logprob: -17.500633239746094
    10. '65' → logprob: -17.500633239746094

Token 1843: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.011066683568060398
    2. 'xffff' → logprob: -4.511066913604736
    3. 'FFFF' → logprob: -11.011066436767578
    4. '655' → logprob: -13.886066436767578
    5. '   ' → logprob: -14.261066436767578
    6. '0' → logprob: -15.136066436767578
    7. 'b' → logprob: -15.136066436767578
    8. 'xffffffff' → logprob: -15.511066436767578
    9. 'ffff' → logprob: -15.761066436767578
    10. '(' → logprob: -17.511066436767578

Token 1844: 'FFFF' (ID: 14573)
  Prédit: 'FFFF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'FFFF' → logprob: -3.070975071750581e-05
    2. 'ffff' → logprob: -10.500030517578125
    3. 'FFFFFFFF' → logprob: -12.875030517578125
    4. '000' → logprob: -14.625030517578125
    5. '```' → logprob: -17.875030517578125
    6. '111' → logprob: -18.000030517578125
    7. 'xffff' → logprob: -18.125030517578125
    8. '0' → logprob: -18.625030517578125
    9. '   ' → logprob: -19.000030517578125
    10. '`' → logprob: -19.125030517578125

Token 1845: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2209666669368744
    2. '           ' → logprob: -1.8459666967391968
    3. '       ' → logprob: -3.9709665775299072
    4. ':' → logprob: -4.345966815948486
    5. ':
' → logprob: -5.095966815948486
    6. '<|end|>' → logprob: -7.095966815948486
    7. '
' → logprob: -7.970966815948486
    8. '<|end|>' → logprob: -8.220966339111328
    9. ',' → logprob: -8.595966339111328
    10. ',
' → logprob: -8.720966339111328

Token 1846: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5779834985733032
    2. '
' → logprob: -0.8279834985733032
    3. '       ' → logprob: -7.702983379364014
    4. '
' → logprob: -7.952983379364014
    5. ',' → logprob: -8.452983856201172
    6. '<|end|>' → logprob: -8.452983856201172
    7. ',
' → logprob: -8.827983856201172
    8. ':
' → logprob: -8.827983856201172
    9. ':' → logprob: -9.202983856201172
    10. '  
' → logprob: -9.327983856201172

Token 1847: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006793115753680468
    2. '655' → logprob: -7.8756794929504395
    3. '           ' → logprob: -8.375679016113281
    4. '(' → logprob: -10.125679016113281
    5. '       ' → logprob: -11.000679016113281
    6. '   ' → logprob: -12.250679016113281
    7. '               ' → logprob: -12.500679016113281
    8. '((' → logprob: -13.750679016113281
    9. ' ' → logprob: -14.375679016113281
    10. '```' → logprob: -15.000679016113281

Token 1848: '16' (ID: 1125)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06202874332666397
    2. '655' → logprob: -2.812028646469116
    3. '(' → logprob: -10.562028884887695
    4. '111' → logprob: -11.562028884887695
    5. '((' → logprob: -12.187028884887695
    6. '   ' → logprob: -12.312028884887695
    7. '```' → logprob: -12.312028884887695
    8. 'bits' → logprob: -12.812028884887695
    9. 'FFFF' → logprob: -12.812028884887695
    10. '`' → logprob: -13.312028884887695

Token 1849: ' bits' (ID: 18189)
  Prédit: 'FFFF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'FFFF' → logprob: -0.28611481189727783
    2. 'ffff' → logprob: -1.7861148118972778
    3. 'xffff' → logprob: -3.6611146926879883
    4. ')' → logprob: -4.036114692687988
    5. '111' → logprob: -4.411114692687988
    6. '```' → logprob: -4.911114692687988
    7. 'bits' → logprob: -5.286114692687988
    8. '   ' → logprob: -5.661114692687988
    9. ' bits' → logprob: -5.786114692687988
    10. '^^^^' → logprob: -6.036114692687988

Token 1850: ' all' (ID: 722)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12950365245342255
    2. '       ' → logprob: -2.1295037269592285
    3. '           ' → logprob: -7.6295037269592285
    4. '
' → logprob: -8.00450325012207
    5. '^' → logprob: -8.25450325012207
    6. '        
' → logprob: -8.25450325012207
    7. '<<' → logprob: -8.62950325012207
    8. ':' → logprob: -8.75450325012207
    9. ':
' → logprob: -8.87950325012207
    10. ')' → logprob: -9.12950325012207

Token 1851: ' ones' (ID: 8104)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0224709864705801
    2. '111' → logprob: -4.022470951080322
    3. ' ones' → logprob: -5.647470951080322
    4. '   ' → logprob: -8.77247142791748
    5. '=' → logprob: -8.89747142791748
    6. '       ' → logprob: -9.14747142791748
    7. 'ffff' → logprob: -9.64747142791748
    8. 'ones' → logprob: -9.64747142791748
    9. '```' → logprob: -9.77247142791748
    10. 'FFFF' → logprob: -10.02247142791748

Token 1852: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018318621441721916
    2. '
' → logprob: -4.0183186531066895
    3. '       ' → logprob: -9.393318176269531
    4. ':
' → logprob: -10.893318176269531
    5. '```' → logprob: -11.393318176269531
    6. ',' → logprob: -11.518318176269531
    7. '
' → logprob: -11.643318176269531
    8. ',
' → logprob: -11.893318176269531
    9. '               ' → logprob: -11.893318176269531
    10. ':' → logprob: -12.018318176269531

Token 1853: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.3319124011322856e-05
    2. 'new' → logprob: -11.500022888183594
    3. '       ' → logprob: -12.125022888183594
    4. 'for' → logprob: -12.875022888183594
    5. '               ' → logprob: -13.500022888183594
    6. ' for' → logprob: -13.750022888183594
    7. ',' → logprob: -14.125022888183594
    8. ' new' → logprob: -14.125022888183594
    9. '```' → logprob: -14.750022888183594
    10. '   ' → logprob: -15.750022888183594

Token 1854: ' neg' (ID: 4528)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7049257159233093
    2. 'for' → logprob: -1.079925775527954
    3. 'if' → logprob: -2.079925775527954
    4. 'new' → logprob: -3.954925775527954
    5. 'forms' → logprob: -5.079925537109375
    6. ' for' → logprob: -5.454925537109375
    7. 'neg' (adapté à ' neg') → logprob: -5.829925537109375
    8. ' if' → logprob: -5.829925537109375
    9. '       ' → logprob: -5.954925537109375
    10. 'existing' → logprob: -6.704925537109375

Token 1855: '_forms' (ID: 176505)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4555046558380127
    2. '_forms' → logprob: -1.3305046558380127
    3. 'forms' → logprob: -2.4555046558380127
    4. ' =' → logprob: -4.705504417419434
    5. '|' → logprob: -7.080504417419434
    6. 'new' → logprob: -7.080504417419434
    7. '_new' → logprob: -7.580504417419434
    8. ' |=' → logprob: -7.830504417419434
    9. 'existing' → logprob: -7.830504417419434
    10. '=forms' → logprob: -7.955504417419434

Token 1856: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0019975120667368174
    2. ' =' → logprob: -6.501997470855713
    3. '=set' → logprob: -7.626997470855713
    4. '=form' → logprob: -12.251997947692871
    5. '=
' → logprob: -13.751997947692871
    6. '=forms' → logprob: -14.126997947692871
    7. '={' → logprob: -15.376997947692871
    8. 'set' → logprob: -15.626997947692871
    9. 's' → logprob: -16.001996994018555
    10. '=}' → logprob: -16.126996994018555

Token 1857: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.3138927221298218
    2. '{' → logprob: -1.3138927221298218
    3. '{'' → logprob: -8.813892364501953
    4. '{"' → logprob: -8.813892364501953
    5. '{
' → logprob: -9.688892364501953
    6. '{s' → logprob: -9.938892364501953
    7. '       ' → logprob: -10.188892364501953
    8. '{-' → logprob: -10.438892364501953
    9. 'self' → logprob: -10.438892364501953
    10. 'forms' → logprob: -10.688892364501953

Token 1858: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.3865281045436859
    2. '()' → logprob: -1.2615281343460083
    3. '(f' → logprob: -4.011528015136719
    4. '('-' → logprob: -4.261528015136719
    5. '('' → logprob: -5.511528015136719
    6. '       ' → logprob: -8.761528015136719
    7. '{' → logprob: -8.761528015136719
    8. '(' → logprob: -8.761528015136719
    9. '(['' → logprob: -9.261528015136719
    10. '(form' → logprob: -9.386528015136719

Token 1859: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06205720454454422
    2. 'for' → logprob: -2.8120572566986084
    3. ' for' → logprob: -9.562057495117188
    4. '       ' → logprob: -10.937057495117188
    5. '   ' → logprob: -14.062057495117188
    6. '               ' → logprob: -14.937057495117188
    7. '```' → logprob: -15.937057495117188
    8. '	for' → logprob: -16.937057495117188
    9. '                   ' → logprob: -17.437057495117188
    10. '		' → logprob: -17.687057495117188

Token 1860: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0019405345665290952
    2. '           ' → logprob: -6.251940727233887
    3. ' for' → logprob: -11.876940727233887
    4. '       ' → logprob: -12.376940727233887
    5. '               ' → logprob: -14.751940727233887
    6. '   ' → logprob: -15.001940727233887
    7. '                   ' → logprob: -17.75193977355957
    8. '	for' → logprob: -17.87693977355957
    9. '          ' → logprob: -19.75193977355957
    10. '  ' → logprob: -19.75193977355957

Token 1861: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.07946018129587173
    2. 'form' → logprob: -2.5794601440429688
    3. 'expr' → logprob: -7.579460144042969
    4. 'frm' → logprob: -10.454460144042969
    5. 's' → logprob: -10.954460144042969
    6. 'fs' → logprob: -12.704460144042969
    7. ' f' → logprob: -12.704460144042969
    8. 'forms' → logprob: -13.454460144042969
    9. 'sf' → logprob: -13.829460144042969
    10. 'fm' → logprob: -13.829460144042969

Token 1862: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12827852368354797
    2. 'in' → logprob: -2.1282784938812256
    3. 'orm' → logprob: -6.628278732299805
    4. 'n' → logprob: -11.753278732299805
    5. '_in' → logprob: -12.878278732299805
    6. 'or' → logprob: -13.003278732299805
    7. '	in' → logprob: -13.253278732299805
    8. 'r' → logprob: -13.503278732299805
    9. 'orme' → logprob: -13.503278732299805
    10. 'for' → logprob: -13.628278732299805

Token 1863: ' forms' (ID: 11526)
  Prédit: 'forms'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'forms' → logprob: -3.15441757265944e-05
    2. ' forms' → logprob: -10.625031471252441
    3. '   ' → logprob: -12.375031471252441
    4. 'form' → logprob: -14.000031471252441
    5. '{' → logprob: -14.625031471252441
    6. '(forms' → logprob: -15.000031471252441
    7. 'formats' → logprob: -15.375031471252441
    8. '           ' → logprob: -15.500031471252441
    9. '       ' → logprob: -15.500031471252441
    10. ' ' → logprob: -15.625031471252441

Token 1864: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.08382343500852585
    2. '               ' → logprob: -2.7088234424591064
    3. ':' → logprob: -4.333823204040527
    4. '           ' → logprob: -8.083823204040527
    5. '):
' → logprob: -8.333823204040527
    6. ':
' → logprob: -9.708823204040527
    7. ',' → logprob: -10.958823204040527
    8. '():
' → logprob: -11.333823204040527
    9. '                       ' → logprob: -12.083823204040527
    10. '                   ' → logprob: -12.333823204040527

Token 1865: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00145297113340348
    2. 'neg' → logprob: -6.626452922821045
    3. 'new' → logprob: -9.876453399658203
    4. '           ' → logprob: -11.001453399658203
    5. ':' → logprob: -11.001453399658203
    6. ':
' → logprob: -11.376453399658203
    7. '                   ' → logprob: -12.751453399658203
    8. '              ' → logprob: -13.001453399658203
    9. '```' → logprob: -13.001453399658203
    10. '	           ' → logprob: -13.126453399658203

Token 1866: ' #' (ID: 1069)
  Prédit: 'neg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neg' → logprob: -0.11419404298067093
    2. '                   ' → logprob: -2.23919415473938
    3. ' neg' → logprob: -6.739193916320801
    4. '               ' → logprob: -9.1141939163208
    5. '                       ' → logprob: -10.3641939163208
    6. '   ' → logprob: -11.3641939163208
    7. 'if' → logprob: -11.6141939163208
    8. 'new' → logprob: -11.9891939163208
    9. '_neg' → logprob: -12.6141939163208
    10. '           ' → logprob: -12.7391939163208

Token 1867: ' Only' (ID: 12817)
  Prédit: 'neg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neg' → logprob: -0.6378045082092285
    2. 'nf' → logprob: -0.7628045082092285
    3. ' nf' → logprob: -6.1378045082092285
    4. '               ' → logprob: -6.5128045082092285
    5. ' neg' → logprob: -7.5128045082092285
    6. 'if' → logprob: -8.26280403137207
    7. 'n' → logprob: -8.26280403137207
    8. 'new' → logprob: -9.13780403137207
    9. 'form' → logprob: -9.38780403137207
    10. '           ' → logprob: -9.88780403137207

Token 1868: ' add' (ID: 1147)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01956227421760559
    2. 'neg' → logprob: -4.519562244415283
    3. 'f' → logprob: -5.269562244415283
    4. '                   ' → logprob: -6.519562244415283
    5. ' if' → logprob: -7.269562244415283
    6. '#' → logprob: -7.519562244415283
    7. '               ' → logprob: -8.019562721252441
    8. 'form' → logprob: -9.269562721252441
    9. 'add' → logprob: -9.269562721252441
    10. 'forms' → logprob: -11.144562721252441

Token 1869: ' neg' (ID: 4528)
  Prédit: ''-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''-' → logprob: -0.13262242078781128
    2. 'neg' → logprob: -2.382622480392456
    3. '('-' → logprob: -3.757622480392456
    4. 'f' → logprob: -5.257622241973877
    5. '           ' → logprob: -7.007622241973877
    6. 'if' → logprob: -7.132622241973877
    7. '"-' → logprob: -8.257622718811035
    8. 'new' → logprob: -8.507622718811035
    9. '               ' → logprob: -8.507622718811035
    10. '('' → logprob: -8.757622718811035

Token 1870: 'ation' (ID: 387)
  Prédit: ''-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''-' → logprob: -0.2629458010196686
    2. '('-' → logprob: -2.7629458904266357
    3. 'ate' → logprob: -3.5129458904266357
    4. '       ' → logprob: -3.6379458904266357
    5. '           ' → logprob: -3.7629458904266357
    6. '-' → logprob: -3.7629458904266357
    7. ' f' → logprob: -4.012945652008057
    8. ''' → logprob: -4.637945652008057
    9. 'f' → logprob: -5.012945652008057
    10. '               ' → logprob: -5.512945652008057

Token 1871: ' form' (ID: 1625)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6678292155265808
    2. '               ' → logprob: -1.5428292751312256
    3. ' if' → logprob: -1.7928292751312256
    4. '                   ' → logprob: -3.1678292751312256
    5. '('-' → logprob: -3.5428292751312256
    6. '(f' → logprob: -4.6678290367126465
    7. 'neg' → logprob: -5.2928290367126465
    8. 'f' → logprob: -5.4178290367126465
    9. '(' → logprob: -5.6678290367126465
    10. ' forms' → logprob: -5.7928290367126465

Token 1872: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10355734080076218
    2. '                   ' → logprob: -2.4785573482513428
    3. '('-' → logprob: -4.853557109832764
    4. 'neg' → logprob: -6.478557109832764
    5. '(' → logprob: -6.853557109832764
    6. '(f' → logprob: -7.103557109832764
    7. 'if' → logprob: -7.728557109832764
    8. '('' → logprob: -8.228557586669922
    9. ' (' → logprob: -8.228557586669922
    10. ''-' → logprob: -8.353557586669922

Token 1873: ' it' (ID: 480)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.4261597990989685
    2. 'len' → logprob: -1.5511598587036133
    3. 'f' → logprob: -2.0511598587036133
    4. ''-' → logprob: -5.801159858703613
    5. '(not' → logprob: -6.801159858703613
    6. '(len' → logprob: -7.301159858703613
    7. ' not' → logprob: -7.426159858703613
    8. '('-' → logprob: -8.426159858703613
    9. '   ' → logprob: -9.051159858703613
    10. '#' → logprob: -9.051159858703613

Token 1874: ' respects' (ID: 80154)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.6942467093467712
    2. 'not' → logprob: -1.069246768951416
    3. '.startswith' → logprob: -1.944246768951416
    4. 'startswith' → logprob: -5.069246768951416
    5. 'does' → logprob: -5.694246768951416
    6. '!=' → logprob: -6.569246768951416
    7. '[' → logprob: -7.569246768951416
    8. ' !=' → logprob: -7.694246768951416
    9. ' doesn't' → logprob: -7.694246768951416
    10. ' does' → logprob: -7.944246768951416

Token 1875: ' grammar' (ID: 41735)
  Prédit: ''-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''-' → logprob: -0.00484162662178278
    2. 'len' → logprob: -5.8798418045043945
    3. ''' → logprob: -7.2548418045043945
    4. '('-' → logprob: -7.8798418045043945
    5. 'f' → logprob: -8.129841804504395
    6. '1' → logprob: -8.379841804504395
    7. '           ' → logprob: -9.379841804504395
    8. '       ' → logprob: -9.629841804504395
    9. '"-' → logprob: -10.254841804504395
    10. '   ' → logprob: -10.254841804504395

Token 1876: ' as' (ID: 472)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.31734272837638855
    2. 'and' → logprob: -2.192342758178711
    3. 'if' → logprob: -2.442342758178711
    4. ' and' → logprob: -3.067342758178711
    5. ' if' → logprob: -4.317342758178711
    6. '                   ' → logprob: -4.442342758178711
    7. ' (' → logprob: -8.192342758178711
    8. '(f' → logprob: -8.442342758178711
    9. 'with' → logprob: -8.692342758178711
    10. 'for' → logprob: -9.067342758178711

Token 1877: ' minimal' (ID: 19957)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.3136821985244751
    2. ''-' → logprob: -1.688682198524475
    3. 'not' → logprob: -2.5636820793151855
    4. 'len' → logprob: -6.4386820793151855
    5. 'valid' → logprob: -6.6886820793151855
    6. 'True' → logprob: -7.1886820793151855
    7. 'Not' → logprob: -7.3136820793151855
    8. '               ' → logprob: -7.8136820793151855
    9. '           ' → logprob: -8.313682556152344
    10. '('-' → logprob: -8.438682556152344

Token 1878: ' form' (ID: 1625)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.7096025943756104
    2. '('-' → logprob: -1.7096025943756104
    3. ''-' → logprob: -1.8346025943756104
    4. '                   ' → logprob: -1.8346025943756104
    5. ' if' → logprob: -2.2096025943756104
    6. 'if' → logprob: -2.4596025943756104
    7. ' and' → logprob: -3.2096025943756104
    8. '-' → logprob: -3.9596025943756104
    9. ' forms' → logprob: -4.084602355957031
    10. 'neg' → logprob: -4.834602355957031

Token 1879: ' candidates' (ID: 18116)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7173736691474915
    2. '                   ' → logprob: -0.7173736691474915
    3. 'if' → logprob: -4.592373847961426
    4. ' and' → logprob: -5.467373847961426
    5. ' if' → logprob: -6.092373847961426
    6. 'and' → logprob: -6.467373847961426
    7. '                       ' → logprob: -6.842373847961426
    8. '('-' → logprob: -7.592373847961426
    9. ''-' → logprob: -7.967373847961426
    10. 'with' → logprob: -7.967373847961426

Token 1880: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.12479497492313385
    2. '               ' → logprob: -2.7497949600219727
    3. ' and' → logprob: -3.2497949600219727
    4. ':
' → logprob: -5.499794960021973
    5. 'and' → logprob: -5.624794960021973
    6. '                  ' → logprob: -6.749794960021973
    7. 'if' → logprob: -7.249794960021973
    8. '{' → logprob: -7.374794960021973
    9. 'for' → logprob: -7.499794960021973
    10. '                       ' → logprob: -7.749794960021973

Token 1881: '               ' (ID: 506)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.011284190230071545
    2. '               ' → logprob: -4.636284351348877
    3. '                       ' → logprob: -7.386284351348877
    4. '                  ' → logprob: -7.886284351348877
    5. ' f' → logprob: -9.511283874511719
    6. ',' → logprob: -9.761283874511719
    7. 'for' → logprob: -10.011283874511719
    8. '           ' → logprob: -10.136283874511719
    9. '                 ' → logprob: -10.136283874511719
    10. ''' → logprob: -10.761283874511719

Token 1882: ' #' (ID: 1069)
  Prédit: 'neg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neg' → logprob: -0.39233189821243286
    2. '                   ' → logprob: -1.392331838607788
    3. 'if' → logprob: -2.892331838607788
    4. '               ' → logprob: -4.017332077026367
    5. ' if' → logprob: -6.767332077026367
    6. ' neg' → logprob: -7.517332077026367
    7. '                       ' → logprob: -8.642332077026367
    8. '           ' → logprob: -8.642332077026367
    9. 'for' → logprob: -9.142332077026367
    10. '   ' → logprob: -9.392332077026367

Token 1883: ' We' (ID: 1416)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5091004967689514
    2. '               ' → logprob: -1.5091004371643066
    3. 'neg' → logprob: -2.2591004371643066
    4. ' if' → logprob: -2.7591004371643066
    5. 'for' → logprob: -6.009100437164307
    6. '                   ' → logprob: -6.009100437164307
    7. 'form' → logprob: -6.634100437164307
    8. '           ' → logprob: -7.134100437164307
    9. ' neg' → logprob: -7.134100437164307
    10. 'f' → logprob: -7.259100437164307

Token 1884: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.6858585476875305
    2. ' add' → logprob: -1.5608584880828857
    3. 'continue' → logprob: -2.3108584880828857
    4. '           ' → logprob: -3.0608584880828857
    5. '       ' → logprob: -3.5608584880828857
    6. 'do' → logprob: -4.060858726501465
    7. '#' → logprob: -4.060858726501465
    8. ' continue' → logprob: -4.310858726501465
    9. 'can' → logprob: -5.185858726501465
    10. ' can' → logprob: -5.185858726501465

Token 1885: ' '-'' (ID: 59558)
  Prédit: ''-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''-' → logprob: -0.012127915397286415
    2. '{' → logprob: -4.887127876281738
    3. 'f' → logprob: -5.887127876281738
    4. '('-' → logprob: -8.012127876281738
    5. '{'' → logprob: -8.137127876281738
    6. '           ' → logprob: -8.512127876281738
    7. '       ' → logprob: -8.762127876281738
    8. '   ' → logprob: -9.012127876281738
    9. ' '-'' → logprob: -9.137127876281738
    10. ''' → logprob: -9.512127876281738

Token 1886: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6935530304908752
    2. ' +' → logprob: -0.6935530304908752
    3. ' +
' → logprob: -8.81855297088623
    4. '+
' → logprob: -9.06855297088623
    5. ''' → logprob: -10.44355297088623
    6. '<|end|>' → logprob: -10.81855297088623
    7. '                   ' → logprob: -11.06855297088623
    8. ',' → logprob: -11.44355297088623
    9. '           ' → logprob: -11.44355297088623
    10. '-' → logprob: -11.44355297088623

Token 1887: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -5.080963092041202e-06
    2. ' f' → logprob: -12.625004768371582
    3. '{' → logprob: -14.125004768371582
    4. '   ' → logprob: -14.875004768371582
    5. '```' → logprob: -15.000004768371582
    6. '           ' → logprob: -16.1250057220459
    7. ''f' → logprob: -16.1250057220459
    8. '       ' → logprob: -16.2500057220459
    9. '`' → logprob: -17.2500057220459
    10. '                   ' → logprob: -17.3750057220459

Token 1888: ' unless' (ID: 12604)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0051398309879004955
    2. '                   ' → logprob: -5.7551398277282715
    3. '           ' → logprob: -7.6301398277282715
    4. ' if' → logprob: -8.13014030456543
    5. '                ' → logprob: -8.25514030456543
    6. '              ' → logprob: -8.38014030456543
    7. '+' → logprob: -9.38014030456543
    8. ',' → logprob: -9.63014030456543
    9. ' +' → logprob: -9.75514030456543
    10. '                       ' → logprob: -9.88014030456543

Token 1889: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.00031937702442519367
    2. ' f' → logprob: -8.750319480895996
    3. '   ' → logprob: -10.125319480895996
    4. ''' → logprob: -10.250319480895996
    5. 'len' → logprob: -10.625319480895996
    6. ''f' → logprob: -11.250319480895996
    7. ''-' → logprob: -11.875319480895996
    8. '(' → logprob: -12.125319480895996
    9. '       ' → logprob: -12.500319480895996
    10. '           ' → logprob: -12.500319480895996

Token 1890: ' is' (ID: 382)
  Prédit: '.startswith'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.startswith' → logprob: -0.002228287048637867
    2. 'startswith' → logprob: -6.127228260040283
    3. '[' → logprob: -10.252228736877441
    4. '.' → logprob: -12.127228736877441
    5. '==' → logprob: -13.877228736877441
    6. '.endswith' → logprob: -14.877228736877441
    7. ' in' → logprob: -15.127228736877441
    8. '.starts' → logprob: -15.502228736877441
    9. '   ' → logprob: -15.877228736877441
    10. 'starts' → logprob: -16.502227783203125

Token 1891: ' already' (ID: 4279)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.9428929686546326
    2. 'already' → logprob: -1.0678930282592773
    3. ''-' → logprob: -2.0678930282592773
    4. 'Not' → logprob: -2.9428930282592773
    5. 'a' → logprob: -3.8178930282592773
    6. ' already' → logprob: -3.9428930282592773
    7. 'startswith' → logprob: -4.692893028259277
    8. '('-' → logprob: -5.067893028259277
    9. ' f' → logprob: -5.692893028259277
    10. '(' → logprob: -5.817893028259277

Token 1892: ' a' (ID: 261)
  Prédit: ''-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''-' → logprob: -0.4261418282985687
    2. 'startswith' → logprob: -1.8011418581008911
    3. 'starting' → logprob: -2.6761417388916016
    4. 'already' → logprob: -3.1761417388916016
    5. '.startswith' → logprob: -3.4261417388916016
    6. '('-' → logprob: -3.9261417388916016
    7. 'f' → logprob: -4.676141738891602
    8. 'started' → logprob: -5.926141738891602
    9. 'neg' → logprob: -6.301141738891602
    10. 'starts' → logprob: -7.426141738891602

Token 1893: ' neg' (ID: 4528)
  Prédit: 'Not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Not' → logprob: -0.4545537233352661
    2. ''-' → logprob: -1.0795537233352661
    3. '-' → logprob: -4.579553604125977
    4. 'Neg' → logprob: -5.204553604125977
    5. '{' → logprob: -5.579553604125977
    6. '('-' → logprob: -7.204553604125977
    7. '`' → logprob: -7.329553604125977
    8. ''' → logprob: -7.704553604125977
    9. ' Not' → logprob: -7.704553604125977
    10. '"-' → logprob: -7.829553604125977

Token 1894: 'ation' (ID: 387)
  Prédit: ''-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''-' → logprob: -0.636183500289917
    2. '-' → logprob: -1.136183500289917
    3. 'ation' → logprob: -2.011183500289917
    4. '-
' → logprob: -5.136183738708496
    5. 'ated' → logprob: -5.261183738708496
    6. ''' → logprob: -6.511183738708496
    7. '       ' → logprob: -6.761183738708496
    8. '           ' → logprob: -6.886183738708496
    9. 'ate' → logprob: -8.886183738708496
    10. '('-' → logprob: -9.011183738708496

Token 1895: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6632758378982544
    2. '               ' → logprob: -0.9132758378982544
    3. ' and' → logprob: -3.288275718688965
    4. ':
' → logprob: -3.788275718688965
    5. ' if' → logprob: -4.913275718688965
    6. '
' → logprob: -5.788275718688965
    7. ',' → logprob: -5.913275718688965
    8. '                   ' → logprob: -6.038275718688965
    9. ':' → logprob: -6.288275718688965
    10. 'if' → logprob: -6.663275718688965

Token 1896: ' then' (ID: 1815)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' f' → logprob: -1.9252808094024658
    2. ' which' → logprob: -1.9252808094024658
    3. ' continue' → logprob: -2.550280809402466
    4. ''' → logprob: -2.550280809402466
    5. 'f' → logprob: -2.800280809402466
    6. ' continuing' → logprob: -2.800280809402466
    7. '               ' → logprob: -2.925280809402466
    8. ' '' → logprob: -3.175280809402466
    9. ''-' → logprob: -3.175280809402466
    10. ' and' → logprob: -3.300280809402466

Token 1897: ' strip' (ID: 22967)
  Prédit: 'neg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neg' → logprob: -0.023196902126073837
    2. 'f' → logprob: -4.273196697235107
    3. 'forms' → logprob: -5.773196697235107
    4. 'new' → logprob: -5.773196697235107
    5. '               ' → logprob: -6.773196697235107
    6. ' neg' → logprob: -7.523196697235107
    7. ' f' → logprob: -8.023197174072266
    8. ' forms' → logprob: -8.273197174072266
    9. 'we' → logprob: -8.523197174072266
    10. '                   ' → logprob: -9.023197174072266

Token 1898: ' double' (ID: 3503)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.15625473856925964
    2. '-
' → logprob: -2.406254768371582
    3. '           ' → logprob: -3.531254768371582
    4. '               ' → logprob: -4.406254768371582
    5. 'if' → logprob: -5.031254768371582
    6. ' if' → logprob: -6.281254768371582
    7. ''-' → logprob: -6.656254768371582
    8. '       ' → logprob: -7.656254768371582
    9. '('-' → logprob: -7.656254768371582
    10. '{
' → logprob: -7.781254768371582

Token 1899: ' neg' (ID: 4528)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3132692873477936
    2. ''-' → logprob: -1.3132692575454712
    3. '"-' → logprob: -13.06326961517334
    4. ' '-'' → logprob: -13.68826961517334
    5. ''' → logprob: -13.81326961517334
    6. '\-' → logprob: -13.93826961517334
    7. ' -' → logprob: -14.43826961517334
    8. '-'' → logprob: -14.68826961517334
    9. '('-' → logprob: -14.68826961517334
    10. '-
' → logprob: -14.93826961517334

Token 1900: 'ations' (ID: 929)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0881984531879425
    2. 'ation' → logprob: -3.21319842338562
    3. 'ations' → logprob: -3.83819842338562
    4. '--' → logprob: -4.088198661804199
    5. ''-' → logprob: -5.463198661804199
    6. 's' → logprob: -7.838198661804199
    7. ''' → logprob: -8.3381986618042
    8. 'f' → logprob: -8.8381986618042
    9. ' -' → logprob: -9.2131986618042
    10. 'at' → logprob: -9.2131986618042

Token 1901: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.028692428022623062
    2. '           ' → logprob: -4.278692245483398
    3. '
' → logprob: -4.403692245483398
    4. '       ' → logprob: -7.528692245483398
    5. '                   ' → logprob: -7.778692245483398
    6. ':
' → logprob: -8.653692245483398
    7. ',' → logprob: -8.903692245483398
    8. ' for' → logprob: -9.153692245483398
    9. ' and' → logprob: -9.403692245483398
    10. '                
' → logprob: -9.403692245483398

Token 1902: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0021156431175768375
    2. '                   ' → logprob: -6.752115726470947
    3. '           ' → logprob: -7.627115726470947
    4. '       ' → logprob: -9.252115249633789
    5. '                       ' → logprob: -9.252115249633789
    6. ' f' → logprob: -9.627115249633789
    7. '              ' → logprob: -10.002115249633789
    8. ' ' → logprob: -10.252115249633789
    9. '                ' → logprob: -10.377115249633789
    10. '   ' → logprob: -11.502115249633789

Token 1903: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4829346239566803
    2. '               ' → logprob: -0.9829345941543579
    3. ' if' → logprob: -4.857934474945068
    4. '                   ' → logprob: -7.482934474945068
    5. '           ' → logprob: -8.107934951782227
    6. 'for' → logprob: -8.857934951782227
    7. '```' → logprob: -10.607934951782227
    8. '   ' → logprob: -11.982934951782227
    9. '                       ' → logprob: -12.732934951782227
    10. '                ' → logprob: -12.982934951782227

Token 1904: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.15298525989055634
    2. 'not' → logprob: -2.0279853343963623
    3. ' not' → logprob: -5.027985095977783
    4. ' f' → logprob: -5.652985095977783
    5. '   ' → logprob: -8.902985572814941
    6. ''f' → logprob: -11.652985572814941
    7. '       ' → logprob: -12.152985572814941
    8. 'len' → logprob: -12.277985572814941
    9. '	f' → logprob: -12.277985572814941
    10. '(f' → logprob: -12.340485572814941

Token 1905: '.startswith' (ID: 64340)
  Prédit: '.startswith'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.startswith' → logprob: -0.0023673244286328554
    2. 'startswith' → logprob: -6.8773674964904785
    3. '[' → logprob: -7.0023674964904785
    4. '.' → logprob: -8.37736701965332
    5. '!=' → logprob: -9.12736701965332
    6. ' !=' → logprob: -10.25236701965332
    7. '==' → logprob: -10.62736701965332
    8. 'not' → logprob: -12.37736701965332
    9. '!='' → logprob: -12.87736701965332
    10. 'and' → logprob: -12.87736701965332

Token 1906: '('-' (ID: 33343)
  Prédit: ''-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''-' → logprob: -0.048877913504838943
    2. '('-' → logprob: -3.0488779544830322
    3. '-' → logprob: -8.673877716064453
    4. '(' → logprob: -9.423877716064453
    5. '   ' → logprob: -11.923877716064453
    6. ' '-'' → logprob: -11.923877716064453
    7. '       ' → logprob: -12.173877716064453
    8. '"-' → logprob: -12.173877716064453
    9. ' '-' → logprob: -12.923877716064453
    10. ''' → logprob: -12.923877716064453

Token 1907: '')' (ID: 1542)
  Prédit: ''):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''):
' → logprob: -0.0665070116519928
    2. '-' → logprob: -3.94150710105896
    3. '')' → logprob: -4.441506862640381
    4. ''):' → logprob: -4.441506862640381
    5. 'f' → logprob: -4.691506862640381
    6. '('' → logprob: -5.441506862640381
    7. ''' → logprob: -5.816506862640381
    8. ''-' → logprob: -6.816506862640381
    9. ''f' → logprob: -6.816506862640381
    10. '):
' → logprob: -7.066506862640381

Token 1908: ' and' (ID: 326)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.10432364791631699
    2. '                   ' → logprob: -2.979323625564575
    3. ':' → logprob: -3.729323625564575
    4. '           ' → logprob: -4.104323863983154
    5. '               ' → logprob: -5.104323863983154
    6. '):
' → logprob: -7.479323863983154
    7. ' and' → logprob: -8.354323387145996
    8. '                       ' → logprob: -8.354323387145996
    9. '==' → logprob: -8.479323387145996
    10. '=' → logprob: -9.229323387145996

Token 1909: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.36073869466781616
    2. 'f' → logprob: -1.235738754272461
    3. 'True' → logprob: -4.985738754272461
    4. 'False' → logprob: -5.985738754272461
    5. ' len' → logprob: -6.735738754272461
    6. '(len' → logprob: -7.735738754272461
    7. 'not' → logprob: -7.860738754272461
    8. ' f' → logprob: -7.985738754272461
    9. '(' → logprob: -9.610738754272461
    10. ''-' → logprob: -9.985738754272461

Token 1910: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.02975129522383213
    2. 'f' → logprob: -3.5297513008117676
    3. ' f' → logprob: -14.52975082397461
    4. '	f' → logprob: -16.15475082397461
    5. '   ' → logprob: -17.02975082397461
    6. '```' → logprob: -17.40475082397461
    7. '('-' → logprob: -17.52975082397461
    8. '(' → logprob: -17.90475082397461
    9. '[f' → logprob: -18.27975082397461
    10. '(forms' → logprob: -18.40475082397461

Token 1911: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7868943214416504
    2. '>' → logprob: -1.0368943214416504
    3. ' >' → logprob: -1.9118943214416504
    4. ')>' → logprob: -3.5368943214416504
    5. '()' → logprob: -5.16189432144165
    6. '()>' → logprob: -5.66189432144165
    7. '==' → logprob: -6.41189432144165
    8. ' ==' → logprob: -7.16189432144165
    9. '')' → logprob: -8.286893844604492
    10. '```' → logprob: -8.536893844604492

Token 1912: ' >=' (ID: 5064)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.04387350380420685
    2. ' >' → logprob: -3.1688735485076904
    3. '==' → logprob: -7.668873310089111
    4. ')' → logprob: -9.29387378692627
    5. '()>' → logprob: -9.66887378692627
    6. ' ==' → logprob: -9.79387378692627
    7. ')>' → logprob: -10.29387378692627
    8. '1' → logprob: -10.54387378692627
    9. '>=' → logprob: -10.79387378692627
    10. '```' → logprob: -10.91887378692627

Token 1913: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001789881061995402
    2. '3' → logprob: -9.250179290771484
    3. ' ' → logprob: -9.750179290771484
    4. '   ' → logprob: -11.250179290771484
    5. '1' → logprob: -11.875179290771484
    6. '       ' → logprob: -14.375179290771484
    7. '
' → logprob: -14.500179290771484
    8. '  ' → logprob: -14.562679290771484
    9. '```' → logprob: -14.625179290771484
    10. '           ' → logprob: -14.875179290771484

Token 1914: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001519325451226905
    2. '3' → logprob: -9.125151634216309
    3. '1' → logprob: -10.250151634216309
    4. '   ' → logprob: -12.625151634216309
    5. ' ' → logprob: -13.000151634216309
    6. '```' → logprob: -14.937651634216309
    7. 'len' → logprob: -15.000151634216309
    8. '-' → logprob: -15.750151634216309
    9. '  ' → logprob: -15.812651634216309
    10. '
' → logprob: -16.250152587890625

Token 1915: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5365440249443054
    2. '                   ' → logprob: -1.2865440845489502
    3. ' and' → logprob: -3.28654408454895
    4. ':' → logprob: -3.53654408454895
    5. '                       ' → logprob: -3.53654408454895
    6. '               ' → logprob: -3.91154408454895
    7. 'and' → logprob: -4.411543846130371
    8. '                           ' → logprob: -5.286543846130371
    9. '           ' → logprob: -5.411543846130371
    10. ',' → logprob: -8.161543846130371

Token 1916: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.008064248599112034
    2. 'continue' → logprob: -5.133064270019531
    3. 'new' → logprob: -7.133064270019531
    4. 'neg' → logprob: -7.508064270019531
    5. '                       ' → logprob: -8.133064270019531
    6. ' continue' → logprob: -8.508064270019531
    7. '               ' → logprob: -9.633064270019531
    8. 'next' → logprob: -9.758064270019531
    9. ',' → logprob: -10.133064270019531
    10. ' new' → logprob: -10.383064270019531

Token 1917: ' #' (ID: 1069)
  Prédit: 'neg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neg' → logprob: -0.027773654088377953
    2. 'new' → logprob: -3.90277361869812
    3. '                   ' → logprob: -5.652773857116699
    4. 'f' → logprob: -6.777773857116699
    5. ' neg' → logprob: -7.027773857116699
    6. 'continue' → logprob: -7.652773857116699
    7. '               ' → logprob: -8.0277738571167
    8. 'forms' → logprob: -8.2777738571167
    9. '{' → logprob: -8.7777738571167
    10. '                       ' → logprob: -8.9027738571167

Token 1918: ' --' (ID: 2230)
  Prédit: 'neg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neg' → logprob: -0.8036770820617676
    2. '                   ' → logprob: -1.1786770820617676
    3. 'f' → logprob: -1.6786770820617676
    4. 'continue' → logprob: -4.053677082061768
    5. 'new' → logprob: -4.303677082061768
    6. '                       ' → logprob: -4.928677082061768
    7. '               ' → logprob: -5.428677082061768
    8. 'pos' → logprob: -5.928677082061768
    9. ' f' → logprob: -5.928677082061768
    10. 'forms' → logprob: -5.928677082061768

Token 1919: 'x' (ID: 87)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0004216170927975327
    2. ' f' → logprob: -8.625421524047852
    3. '+' → logprob: -9.375421524047852
    4. '-' → logprob: -10.250421524047852
    5. '(f' → logprob: -10.375421524047852
    6. ''f' → logprob: -11.375421524047852
    7. ''' → logprob: -11.625421524047852
    8. '')' → logprob: -11.625421524047852
    9. '<|end|>' → logprob: -11.625421524047852
    10. '<|end|>' → logprob: -12.375421524047852

Token 1920: ' ==' (ID: 951)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04878402128815651
    2. '=' → logprob: -3.673784017562866
    3. ' forms' → logprob: -5.173784255981445
    4. 'f' → logprob: -5.423784255981445
    5. ':' → logprob: -5.673784255981445
    6. ':
' → logprob: -6.423784255981445
    7. '               ' → logprob: -6.548784255981445
    8. '_forms' → logprob: -6.548784255981445
    9. '                   ' → logprob: -6.798784255981445
    10. 'forms' → logprob: -7.048784255981445

Token 1921: ' x' (ID: 1215)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.00012737659562844783
    2. 'x' → logprob: -9.125127792358398
    3. '{' → logprob: -11.625127792358398
    4. ' f' → logprob: -11.625127792358398
    5. ' ' → logprob: -15.500127792358398
    6. '   ' → logprob: -15.500127792358398
    7. '{x' → logprob: -16.6251277923584
    8. '       ' → logprob: -17.6251277923584
    9. '{
' → logprob: -17.7501277923584
    10. '(f' → logprob: -17.8751277923584

Token 1922: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.19831089675426483
    2. '                       ' → logprob: -2.6983108520507812
    3. ':
' → logprob: -2.6983108520507812
    4. 'f' → logprob: -3.9483108520507812
    5. ':' → logprob: -4.948310852050781
    6. '               ' → logprob: -5.448310852050781
    7. ',' → logprob: -5.573310852050781
    8. ' =' → logprob: -5.573310852050781
    9. ' f' → logprob: -5.823310852050781
    10. '):
' → logprob: -6.698310852050781

Token 1923: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07858370989561081
    2. '                       ' → logprob: -3.0785837173461914
    3. ':
' → logprob: -3.9535837173461914
    4. ':' → logprob: -4.828583717346191
    5. '               ' → logprob: -7.328583717346191
    6. ',' → logprob: -7.328583717346191
    7. ' =' → logprob: -7.828583717346191
    8. ' and' → logprob: -9.453583717346191
    9. 'continue' → logprob: -9.578583717346191
    10. '           ' → logprob: -9.703583717346191

Token 1924: ' nf' (ID: 89636)
  Prédit: 'neg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neg' → logprob: -0.2191130816936493
    2. 'new' → logprob: -2.7191131114959717
    3. '                   ' → logprob: -3.0941131114959717
    4. 'continue' → logprob: -3.2191131114959717
    5. 'f' → logprob: -3.9691131114959717
    6. '                       ' → logprob: -4.219112873077393
    7. 'forms' → logprob: -5.719112873077393
    8. ' neg' → logprob: -6.469112873077393
    9. ' new' → logprob: -6.969112873077393
    10. ' continue' → logprob: -7.094112873077393

Token 1925: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6219202876091003
    2. ' =' → logprob: -0.9969202876091003
    3. 'orm' → logprob: -2.371920347213745
    4. 'f' → logprob: -7.871920108795166
    5. '_forms' → logprob: -8.996920585632324
    6. 'forms' → logprob: -9.121920585632324
    7. 's' → logprob: -10.371920585632324
    8. '=forms' → logprob: -10.496920585632324
    9. '=f' → logprob: -10.621920585632324
    10. 'ormat' → logprob: -10.621920585632324

Token 1926: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -4.060365608893335e-05
    2. ' f' → logprob: -10.125041007995605
    3. '   ' → logprob: -15.625041007995605
    4. '	f' → logprob: -15.750041007995605
    5. '{' → logprob: -16.50004005432129
    6. ' ' → logprob: -17.25004005432129
    7. '       ' → logprob: -17.25004005432129
    8. '(f' → logprob: -17.62504005432129
    9. '           ' → logprob: -17.87504005432129
    10. '     ' → logprob: -18.12504005432129

Token 1927: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3425219549390022e-05
    2. 'f' → logprob: -11.87501335144043
    3. '1' → logprob: -13.37501335144043
    4. '   ' → logprob: -13.50001335144043
    5. '=' → logprob: -14.00001335144043
    6. '       ' → logprob: -14.62501335144043
    7. '           ' → logprob: -14.87501335144043
    8. '
' → logprob: -15.37501335144043
    9. '[
' → logprob: -15.50001335144043
    10. ' =' → logprob: -15.75001335144043

Token 1928: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4378848391061183e-05
    2. '2' → logprob: -11.500014305114746
    3. '0' → logprob: -13.500014305114746
    4. '-' → logprob: -13.625014305114746
    5. ' ' → logprob: -14.125014305114746
    6. '   ' → logprob: -14.625014305114746
    7. '```' → logprob: -16.062515258789062
    8. '--' → logprob: -17.062515258789062
    9. '  ' → logprob: -17.375015258789062
    10. 'len' → logprob: -17.437515258789062

Token 1929: ':]
' (ID: 61598)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.023917879909276962
    2. ':]
' → logprob: -3.7739179134368896
    3. ']' → logprob: -7.3989176750183105
    4. '1' → logprob: -10.148918151855469
    5. '2' → logprob: -12.023918151855469
    6. ' :]' → logprob: -12.273918151855469
    7. ':]

' → logprob: -12.648918151855469
    8. ']
' → logprob: -13.398918151855469
    9. ':' → logprob: -13.398918151855469
    10. '0' → logprob: -13.773918151855469

Token 1930: '               ' (ID: 506)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04317822679877281
    2. '               ' → logprob: -3.1681783199310303
    3. '
' → logprob: -9.54317855834961
    4. '           ' → logprob: -9.91817855834961
    5. '                       ' → logprob: -11.04317855834961
    6. '                  ' → logprob: -11.29317855834961
    7. ')' → logprob: -12.29317855834961
    8. 'else' → logprob: -12.41817855834961
    9. '                    
' → logprob: -12.91817855834961
    10. ',' → logprob: -12.91817855834961

Token 1931: ' else' (ID: 1203)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04725402593612671
    2. 'else' (adapté à ' else') → logprob: -3.1722540855407715
    3. '                   ' → logprob: -5.6722540855407715
    4. ' else' → logprob: -7.5472540855407715
    5. '           ' → logprob: -8.797253608703613
    6. '
' → logprob: -10.422253608703613
    7. ':
' → logprob: -11.047253608703613
    8. '                ' → logprob: -11.422253608703613
    9. '              ' → logprob: -11.797253608703613
    10. '       ' → logprob: -11.922253608703613

Token 1932: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04084184393286705
    2. ':' → logprob: -3.790841817855835
    3. ':
' → logprob: -4.165842056274414
    4. '               ' → logprob: -6.540842056274414
    5. '                       ' → logprob: -9.040842056274414
    6. '                  ' → logprob: -9.290842056274414
    7. '=' → logprob: -9.665842056274414
    8. '-' → logprob: -9.665842056274414
    9. '           ' → logprob: -10.665842056274414
    10. ' =' → logprob: -10.790842056274414

Token 1933: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.42961183190345764
    2. '-' → logprob: -1.5546118021011353
    3. ''-' → logprob: -2.429611921310425
    4. '               ' → logprob: -3.304611921310425
    5. '-n' → logprob: -5.554611682891846
    6. '                       ' → logprob: -6.054611682891846
    7. 'f' → logprob: -6.179611682891846
    8. '           ' → logprob: -6.429611682891846
    9. '"-' → logprob: -8.179612159729004
    10. 'neg' → logprob: -8.179612159729004

Token 1934: ' nf' (ID: 89636)
  Prédit: ''-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''-' → logprob: -0.7008883953094482
    2. 'nf' (adapté à ' nf') → logprob: -0.7008883953094482
    3. 'f' → logprob: -5.575888633728027
    4. ' nf' → logprob: -6.325888633728027
    5. '                   ' → logprob: -7.700888633728027
    6. ''n' → logprob: -8.200888633728027
    7. 'neg' → logprob: -8.200888633728027
    8. '               ' → logprob: -8.450888633728027
    9. '           ' → logprob: -8.575888633728027
    10. '_nf' → logprob: -8.700888633728027

Token 1935: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01251812744885683
    2. ' =' → logprob: -4.387517929077148
    3. 'f' → logprob: -12.637517929077148
    4. '='' → logprob: -12.762517929077148
    5. '           ' → logprob: -14.262517929077148
    6. '   ' → logprob: -14.762517929077148
    7. '               ' → logprob: -15.137517929077148
    8. '                   ' → logprob: -15.262517929077148
    9. ' ' → logprob: -15.637517929077148
    10. ''=' → logprob: -15.762517929077148

Token 1936: ' '-'' (ID: 59558)
  Prédit: ''-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''-' → logprob: -8.363617962459102e-05
    2. ' '-'' → logprob: -10.375083923339844
    3. '"-' → logprob: -10.750083923339844
    4. 'f' → logprob: -11.250083923339844
    5. '   ' → logprob: -11.750083923339844
    6. '('-' → logprob: -12.000083923339844
    7. '       ' → logprob: -14.250083923339844
    8. '           ' → logprob: -14.375083923339844
    9. '-' → logprob: -14.875083923339844
    10. ''' → logprob: -14.875083923339844

Token 1937: ' +' (ID: 659)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0026508092414587736
    2. '+' → logprob: -6.002650737762451
    3. ' f' → logprob: -8.87765121459961
    4. ' +' → logprob: -10.25265121459961
    5. '```' → logprob: -16.00265121459961
    6. '	f' → logprob: -16.50265121459961
    7. '`' → logprob: -17.12765121459961
    8. '[f' → logprob: -17.50265121459961
    9. ''f' → logprob: -17.50265121459961
    10. '{' → logprob: -17.87765121459961

Token 1938: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -6.2729995988775045e-06
    2. ' f' → logprob: -12.000006675720215
    3. '	f' → logprob: -19.2500057220459
    4. ''f' → logprob: -20.2500057220459
    5. '```' → logprob: -20.5000057220459
    6. '   ' → logprob: -20.5000057220459
    7. '`' → logprob: -21.8750057220459
    8. '       ' → logprob: -22.3750057220459
    9. '           ' → logprob: -22.5000057220459
    10. 'ф' → logprob: -22.6250057220459

Token 1939: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00017743845819495618
    2. '                   ' → logprob: -9.125177383422852
    3. '<|end|>' → logprob: -10.500177383422852
    4. '
' → logprob: -11.500177383422852
    5. '              ' → logprob: -11.625177383422852
    6. '                
' → logprob: -12.125177383422852
    7. '           ' → logprob: -12.125177383422852
    8. '                ' → logprob: -12.500177383422852
    9. '                       ' → logprob: -13.375177383422852
    10. '<|end|>' → logprob: -13.750177383422852

Token 1940: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -2.999452772201039e-05
    2. '                   ' → logprob: -10.750029563903809
    3. '           ' → logprob: -12.625029563903809
    4. '<|end|>' → logprob: -13.625029563903809
    5. '              ' → logprob: -13.750029563903809
    6. '                
' → logprob: -13.875029563903809
    7. 'new' → logprob: -14.750029563903809
    8. '                ' → logprob: -14.875029563903809
    9. '
' → logprob: -15.000029563903809
    10. '                       ' → logprob: -15.625029563903809

Token 1941: ' neg' (ID: 4528)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002994697540998459
    2. 'neg' (adapté à ' neg') → logprob: -6.002994537353516
    3. 'if' → logprob: -8.127994537353516
    4. 'new' → logprob: -9.002994537353516
    5. '           ' → logprob: -9.627994537353516
    6. '                   ' → logprob: -10.627994537353516
    7. ' if' → logprob: -11.752994537353516
    8. ' neg' → logprob: -14.252994537353516
    9. '                       ' → logprob: -14.627994537353516
    10. ' new' → logprob: -14.627994537353516

Token 1942: '_forms' (ID: 176505)
  Prédit: '_forms'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_forms' → logprob: -8.327856630785391e-05
    2. '=' → logprob: -10.750082969665527
    3. '_' → logprob: -10.875082969665527
    4. 's' → logprob: -11.000082969665527
    5. '_form' → logprob: -11.750082969665527
    6. '=_' → logprob: -12.500082969665527
    7. ' =' → logprob: -12.500082969665527
    8. '_entries' → logprob: -13.250082969665527
    9. 'forms' → logprob: -13.750082969665527
    10. 'f' → logprob: -13.750082969665527

Token 1943: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0011791547294706106
    2. '.' → logprob: -6.751179218292236
    3. ' .' → logprob: -12.376178741455078
    4. 'add' → logprob: -12.501178741455078
    5. '.update' → logprob: -14.251178741455078
    6. '.setdefault' → logprob: -16.376178741455078
    7. '           ' → logprob: -16.626178741455078
    8. '=' → logprob: -17.751178741455078
    9. '                   ' → logprob: -18.251178741455078
    10. '   ' → logprob: -18.376178741455078

Token 1944: '(n' (ID: 2406)
  Prédit: 'nf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nf' → logprob: -0.05309097468852997
    2. '(n' → logprob: -3.053091049194336
    3. ' nf' → logprob: -5.428091049194336
    4. 'n' → logprob: -9.428091049194336
    5. '_nf' → logprob: -11.178091049194336
    6. ' (' → logprob: -12.678091049194336
    7. '{' → logprob: -12.928091049194336
    8. '(' → logprob: -14.053091049194336
    9. 'f' → logprob: -15.428091049194336
    10. '	n' → logprob: -15.553091049194336

Token 1945: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -2.7133641196996905e-05
    2. 'nf' → logprob: -11.12502670288086
    3. '_nf' → logprob: -12.00002670288086
    4. ''f' → logprob: -13.25002670288086
    5. '```' → logprob: -14.50002670288086
    6. ')' → logprob: -14.87502670288086
    7. '_f' → logprob: -15.00002670288086
    8. '	f' → logprob: -15.00002670288086
    9. '
' → logprob: -15.12502670288086
    10. '**' → logprob: -15.62502670288086

Token 1946: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5736081004142761
    2. '       ' → logprob: -1.698608160018921
    3. '           ' → logprob: -1.948608160018921
    4. ')' → logprob: -2.198608160018921
    5. ')
' → logprob: -9.6986083984375
    6. '               ' → logprob: -10.1986083984375
    7. '   ' → logprob: -11.6986083984375
    8. '')
' → logprob: -11.9486083984375
    9. '          ' → logprob: -12.1986083984375
    10. '
' → logprob: -12.3236083984375

Token 1947: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.652451464906335e-05
    2. 'new' → logprob: -11.500016212463379
    3. '       ' → logprob: -12.625016212463379
    4. '               ' → logprob: -14.125016212463379
    5. 'import' → logprob: -14.250016212463379
    6. '```' → logprob: -14.375016212463379
    7. 'from' → logprob: -15.875016212463379
    8. '            
' → logprob: -16.000017166137695
    9. '          ' → logprob: -16.000017166137695
    10. '
' → logprob: -16.125017166137695

Token 1948: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02207985147833824
    2. 'new' → logprob: -3.8970799446105957
    3. '       ' → logprob: -6.772079944610596
    4. 'if' (adapté à ' if') → logprob: -8.522079467773438
    5. 'for' → logprob: -9.272079467773438
    6. ' new' → logprob: -10.147079467773438
    7. '               ' → logprob: -10.647079467773438
    8. '
' → logprob: -10.647079467773438
    9. '   ' → logprob: -11.772079467773438
    10. ' if' → logprob: -14.022079467773438

Token 1949: ' neg' (ID: 4528)
  Prédit: 'neg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neg' → logprob: -0.000286364956991747
    2. ' neg' → logprob: -8.375286102294922
    3. 'new' → logprob: -10.000286102294922
    4. '   ' → logprob: -12.125286102294922
    5. '(' → logprob: -13.125286102294922
    6. 'len' → logprob: -14.375286102294922
    7. 'not' → logprob: -14.500286102294922
    8. ' ' → logprob: -15.000286102294922
    9. '           ' → logprob: -15.125286102294922
    10. '
' → logprob: -15.250286102294922

Token 1950: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.1076684519648552
    2. '_forms' → logprob: -2.732668399810791
    3. 'neg' → logprob: -3.732668399810791
    4. ' not' → logprob: -4.982668399810791
    5. 'in' → logprob: -6.482668399810791
    6. '           ' → logprob: -6.732668399810791
    7. '               ' → logprob: -6.982668399810791
    8. '       ' → logprob: -7.107668399810791
    9. '=' → logprob: -7.857668399810791
    10. '                   ' → logprob: -8.73266887664795

Token 1951: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.01832798309624195
    2. ' in' → logprob: -4.0183281898498535
    3. 'not' → logprob: -9.018327713012695
    4. 'new' → logprob: -10.143327713012695
    5. '   ' → logprob: -11.893327713012695
    6. ' not' → logprob: -12.643327713012695
    7. '	in' → logprob: -13.518327713012695
    8. '_in' → logprob: -13.893327713012695
    9. ' new' → logprob: -14.643327713012695
    10. '       ' → logprob: -14.643327713012695

Token 1952: ' self' (ID: 1051)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0006708591827191412
    2. 'self' → logprob: -7.375670909881592
    3. ' new' → logprob: -10.250670433044434
    4. 'neg' → logprob: -11.750670433044434
    5. '(new' → logprob: -15.250670433044434
    6. '   ' → logprob: -15.500670433044434
    7. '	new' → logprob: -15.625670433044434
    8. '[new' → logprob: -16.37567138671875
    9. '```' → logprob: -16.62567138671875
    10. ' self' → logprob: -16.87567138671875

Token 1953: '.cache' (ID: 37175)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cache' → logprob: -0.018251201137900352
    2. '.cache' → logprob: -4.018251419067383
    3. '_cache' → logprob: -10.393251419067383
    4. 'ache' → logprob: -10.768251419067383
    5. ' cache' → logprob: -11.518251419067383
    6. '	cache' → logprob: -11.518251419067383
    7. '       ' → logprob: -11.768251419067383
    8. '   ' → logprob: -12.018251419067383
    9. 'keys' → logprob: -12.643251419067383
    10. '.keys' → logprob: -13.143251419067383

Token 1954: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1531987339258194
    2. ':
' → logprob: -2.028198719024658
    3. '           ' → logprob: -5.528198719024658
    4. ' and' → logprob: -6.028198719024658
    5. '               ' → logprob: -7.028198719024658
    6. '<|end|>' → logprob: -7.778198719024658
    7. '       ' → logprob: -7.903198719024658
    8. ' or' → logprob: -7.903198719024658
    9. ']:' → logprob: -8.028199195861816
    10. 'and' → logprob: -8.028199195861816

Token 1955: '               ' (ID: 506)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04121290519833565
    2. '=' → logprob: -4.041213035583496
    3. ' =' → logprob: -4.416213035583496
    4. ':
' → logprob: -4.916213035583496
    5. '           ' → logprob: -6.791213035583496
    6. '               ' → logprob: -6.791213035583496
    7. ' :' → logprob: -7.791213035583496
    8. ' and' → logprob: -8.791213035583496
    9. '):' → logprob: -8.791213035583496
    10. ',' → logprob: -9.791213035583496

Token 1956: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.1587817668914795
    2. '           ' → logprob: -2.2837817668914795
    3. '               ' → logprob: -3.5337817668914795
    4. ' new' → logprob: -4.533782005310059
    5. '                   ' → logprob: -5.408782005310059
    6. '```' → logprob: -8.408782005310059
    7. '   ' → logprob: -8.783782005310059
    8. '                       ' → logprob: -10.158782005310059
    9. '[new' → logprob: -10.533782005310059
    10. '       ' → logprob: -10.908782005310059

Token 1957: '_entries' (ID: 63162)
  Prédit: '_entries'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_entries' → logprob: -0.000634639582131058
    2. '_forms' → logprob: -7.500634670257568
    3. 'entries' → logprob: -9.75063419342041
    4. '.entries' → logprob: -12.62563419342041
    5. 'cache' → logprob: -13.12563419342041
    6. '```' → logprob: -13.12563419342041
    7. '       ' → logprob: -13.25063419342041
    8. '   ' → logprob: -13.87563419342041
    9. '[' → logprob: -13.87563419342041
    10. '                   ' → logprob: -14.00063419342041

Token 1958: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.822646693966817e-06
    2. '[new' → logprob: -12.750007629394531
    3. ' [' → logprob: -13.250007629394531
    4. '\[' → logprob: -13.875007629394531
    5. '```' → logprob: -13.875007629394531
    6. '                   ' → logprob: -15.000007629394531
    7. '               ' → logprob: -15.500007629394531
    8. '           ' → logprob: -16.00000762939453
    9. '   ' → logprob: -16.12500762939453
    10. '       ' → logprob: -16.37500762939453

Token 1959: 'neg' (ID: 18775)
  Prédit: 'neg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neg' → logprob: -0.10024042427539825
    2. '{' → logprob: -2.350240468978882
    3. '[' → logprob: -10.725240707397461
    4. 'new' → logprob: -12.225240707397461
    5. ' neg' → logprob: -12.975240707397461
    6. '{
' → logprob: -13.475240707397461
    7. ' {' → logprob: -13.475240707397461
    8. '(' → logprob: -14.475240707397461
    9. '   ' → logprob: -14.975240707397461
    10. '-neg' → logprob: -15.600240707397461

Token 1960: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6186732053756714
    2. ']' → logprob: -1.1186732053756714
    3. ' =' → logprob: -2.118673324584961
    4. ']=' → logprob: -4.243673324584961
    5. '   ' → logprob: -10.618673324584961
    6. ' ]' → logprob: -11.118673324584961
    7. '=new' → logprob: -11.868673324584961
    8. 'new' → logprob: -11.868673324584961
    9. ')' → logprob: -12.368673324584961
    10. '=f' → logprob: -12.493673324584961

Token 1961: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00861468818038702
    2. ' =' → logprob: -4.758614540100098
    3. ']=' → logprob: -16.633615493774414
    4. '=new' → logprob: -16.633615493774414
    5. ']' → logprob: -17.383615493774414
    6. '   ' → logprob: -17.508615493774414
    7. '=set' → logprob: -18.383615493774414
    8. '={' → logprob: -18.633615493774414
    9. ')' → logprob: -20.258615493774414
    10. ')=' → logprob: -20.383615493774414

Token 1962: ' neg' (ID: 4528)
  Prédit: 'neg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neg' → logprob: -0.0001105762057704851
    2. ' neg' → logprob: -9.875110626220703
    3. '           ' → logprob: -10.375110626220703
    4. 'set' → logprob: -11.625110626220703
    5. '               ' → logprob: -12.125110626220703
    6. '{' → logprob: -12.125110626220703
    7. '                   ' → logprob: -12.750110626220703
    8. '   ' → logprob: -13.250110626220703
    9. '       ' → logprob: -13.250110626220703
    10. '            ' → logprob: -15.500110626220703

Token 1963: '_forms' (ID: 176505)
  Prédit: '_forms'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_forms' → logprob: -1.6240566083070007e-06
    2. '_entries' → logprob: -13.750001907348633
    3. 'forms' → logprob: -14.750001907348633
    4. '_form' → logprob: -16.750001907348633
    5. '_formats' → logprob: -17.500001907348633
    6. '
' → logprob: -18.375001907348633
    7. 'Forms' → logprob: -18.875001907348633
    8. 'new' → logprob: -19.500001907348633
    9. '```' → logprob: -19.750001907348633
    10. '   ' → logprob: -20.250001907348633

Token 1964: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029937345534563065
    2. '<|end|>' → logprob: -4.154937267303467
    3. '
' → logprob: -4.904937267303467
    4. '        
' → logprob: -5.404937267303467
    5. '```' → logprob: -7.029937267303467
    6. ')' → logprob: -8.779937744140625
    7. '  
' → logprob: -9.154937744140625
    8. '           ' → logprob: -9.154937744140625
    9. '    
' → logprob: -9.529937744140625
    10. '        ' → logprob: -9.779937744140625

Token 1965: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.130576806142926e-05
    2. '```' → logprob: -11.250031471252441
    3. '<|end|>' → logprob: -11.625031471252441
    4. '           ' → logprob: -12.625031471252441
    5. '
' → logprob: -13.500031471252441
    6. '        
' → logprob: -13.875031471252441
    7. '   ' → logprob: -14.625031471252441
    8. '               ' → logprob: -14.875031471252441
    9. '      ' → logprob: -15.000031471252441
    10. ')' → logprob: -15.500031471252441

Token 1966: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006477446295320988
    2. 'for' → logprob: -8.00064754486084
    3. 'self' → logprob: -8.62564754486084
    4. '
' → logprob: -9.12564754486084
    5. '           ' → logprob: -11.37564754486084
    6. '```' → logprob: -12.12564754486084
    7. '   ' → logprob: -12.87564754486084
    8. '#' → logprob: -13.75064754486084
    9. 'else' (adapté à ' else') → logprob: -14.00064754486084
    10. ' for' → logprob: -14.25064754486084

Token 1967: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.0609432458877563
    2. '               ' → logprob: -1.3109432458877563
    3. '           ' → logprob: -1.5609432458877563
    4. ':' → logprob: -1.9359432458877563
    5. 'continue' → logprob: -3.810943126678467
    6. ' continue' → logprob: -5.685943126678467
    7. 'if' → logprob: -7.060943126678467
    8. ' and' → logprob: -7.185943126678467
    9. ' if' → logprob: -7.310943126678467
    10. 'and' → logprob: -7.810943126678467

Token 1968: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005367395002394915
    2. '           ' → logprob: -5.505367279052734
    3. 'for' → logprob: -7.255367279052734
    4. 'new' → logprob: -8.130367279052734
    5. 'if' → logprob: -8.630367279052734
    6. 'self' → logprob: -10.005367279052734
    7. '       ' → logprob: -10.380367279052734
    8. '#' → logprob: -11.630367279052734
    9. '   ' → logprob: -12.005367279052734
    10. '
' → logprob: -12.755367279052734

Token 1969: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.19120252132415771
    2. 'new' → logprob: -2.1912026405334473
    3. 'if' → logprob: -3.1912026405334473
    4. '               ' → logprob: -4.191202640533447
    5. 'existing' → logprob: -5.816202640533447
    6. '           ' → logprob: -6.566202640533447
    7. '#' (adapté à ' #') → logprob: -7.691202640533447
    8. 'for' → logprob: -8.191202163696289
    9. '                   ' → logprob: -8.316202163696289
    10. 'current' → logprob: -8.441202163696289

Token 1970: ' Merge' (ID: 71009)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0726604461669922
    2. 'existing' → logprob: -1.9476604461669922
    3. 'self' → logprob: -2.072660446166992
    4. 'new' → logprob: -2.197660446166992
    5. '           ' → logprob: -2.447660446166992
    6. 'neg' → logprob: -2.697660446166992
    7. 'for' → logprob: -2.822660446166992
    8. '#' → logprob: -2.947660446166992
    9. '               ' → logprob: -5.697660446166992
    10. '       ' → logprob: -5.947660446166992

Token 1971: ' and' (ID: 326)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.523478090763092
    2. '               ' → logprob: -2.0234780311584473
    3. 'new' → logprob: -2.0234780311584473
    4. '           ' → logprob: -2.2734780311584473
    5. 'neg' → logprob: -3.6484780311584473
    6. '       ' → logprob: -5.273478031158447
    7. '                   ' → logprob: -5.523478031158447
    8. '[new' → logprob: -6.398478031158447
    9. '[self' → logprob: -6.648478031158447
    10. '   ' → logprob: -7.398478031158447

Token 1972: ' keep' (ID: 3357)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.039257798343896866
    2. ' update' → logprob: -4.039258003234863
    3. 'keep' → logprob: -5.164258003234863
    4. 'add' → logprob: -5.539258003234863
    5. 'possibly' → logprob: -5.789258003234863
    6. 'if' → logprob: -6.289258003234863
    7. ' possibly' → logprob: -6.664258003234863
    8. 'replace' → logprob: -6.914258003234863
    9. '
' → logprob: -7.664258003234863
    10. 'new' → logprob: -7.914258003234863

Token 1973: ' minimal' (ID: 19957)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.012683751061558723
    2. 'neg' → logprob: -4.887683868408203
    3. 'self' → logprob: -5.387683868408203
    4. '       ' → logprob: -9.012683868408203
    5. ' new' → logprob: -9.137683868408203
    6. '           ' → logprob: -9.262683868408203
    7. '                   ' → logprob: -10.012683868408203
    8. '
' → logprob: -10.137683868408203
    9. '   ' → logprob: -10.387683868408203
    10. 'forms' → logprob: -10.762683868408203

Token 1974: ' length' (ID: 5517)
  Prédit: '_entries'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_entries' → logprob: -0.055285848677158356
    2. 'entries' → logprob: -3.430285930633545
    3. '_forms' → logprob: -4.055285930633545
    4. 'forms' → logprob: -6.055285930633545
    5. 'new' → logprob: -7.055285930633545
    6. 'length' → logprob: -8.180285453796387
    7. 'express' → logprob: -8.430285453796387
    8. 'neg' → logprob: -8.555285453796387
    9. 'if' → logprob: -10.305285453796387
    10. '
' → logprob: -10.430285453796387

Token 1975: ' forms' (ID: 11526)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7663702964782715
    2. '               ' → logprob: -1.8913702964782715
    3. 'new' → logprob: -2.3913702964782715
    4. 'neg' → logprob: -2.8913702964782715
    5. '[new' → logprob: -3.0163702964782715
    6. '
' → logprob: -3.3913702964782715
    7. '       ' → logprob: -3.5163702964782715
    8. 'if' → logprob: -3.5163702964782715
    9. '(new' → logprob: -4.0163702964782715
    10. '                   ' → logprob: -4.1413702964782715

Token 1976: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.13308052718639374
    2. '           ' → logprob: -2.13308048248291
    3. '       ' → logprob: -6.13308048248291
    4. ',' → logprob: -7.00808048248291
    5. '
' → logprob: -7.38308048248291
    6. '```' → logprob: -7.50808048248291
    7. 'for' → logprob: -7.50808048248291
    8. 'new' → logprob: -8.13308048248291
    9. 'with' → logprob: -8.88308048248291
    10. ' =' → logprob: -9.00808048248291

Token 1977: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.018887057900428772
    2. '           ' → logprob: -4.018887042999268
    3. '                   ' → logprob: -8.893887519836426
    4. ',' → logprob: -9.268887519836426
    5. ' and' → logprob: -9.268887519836426
    6. '       ' → logprob: -9.393887519836426
    7. ' =' → logprob: -9.768887519836426
    8. '|' → logprob: -9.893887519836426
    9. '```' → logprob: -10.143887519836426
    10. ' for' → logprob: -10.518887519836426

Token 1978: ' current' (ID: 2208)
  Prédit: 'existing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'existing' → logprob: -0.1992437243461609
    2. 'if' → logprob: -2.3242437839508057
    3. '               ' → logprob: -3.5742437839508057
    4. '                   ' → logprob: -3.6992437839508057
    5. 'old' → logprob: -3.9492437839508057
    6. 'current' (adapté à ' current') → logprob: -5.574243545532227
    7. 'for' → logprob: -5.949243545532227
    8. 'new' → logprob: -6.074243545532227
    9. 'self' → logprob: -7.074243545532227
    10. ' existing' → logprob: -7.824243545532227

Token 1979: ' =' (ID: 314)
  Prédit: '_forms'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_forms' → logprob: -0.06449593603610992
    2. '=' → logprob: -3.1894960403442383
    3. ' =' → logprob: -4.814496040344238
    4. 'forms' → logprob: -5.314496040344238
    5. '_len' → logprob: -5.814496040344238
    6. '           ' → logprob: -5.814496040344238
    7. '               ' → logprob: -7.564496040344238
    8. '_length' → logprob: -7.939496040344238
    9. 'length' → logprob: -8.189496040344238
    10. '   ' → logprob: -8.314496040344238

Token 1980: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.009979184716939926
    2. '{' → logprob: -4.634979248046875
    3. '{
' → logprob: -9.634979248046875
    4. 'new' → logprob: -9.759979248046875
    5. 'neg' → logprob: -10.384979248046875
    6. ' self' → logprob: -10.509979248046875
    7. 'set' → logprob: -11.009979248046875
    8. '(self' → logprob: -12.259979248046875
    9. ' {' → logprob: -12.384979248046875
    10. '   ' → logprob: -12.384979248046875

Token 1981: '.cache' (ID: 37175)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cache' → logprob: -0.021934079006314278
    2. '.cache' → logprob: -4.1469340324401855
    3. '_cache' → logprob: -5.3969340324401855
    4. '[' → logprob: -7.1469340324401855
    5. 'neg' → logprob: -7.6469340324401855
    6. 'new' → logprob: -10.646934509277344
    7. '{' → logprob: -10.771934509277344
    8. ' cache' → logprob: -11.646934509277344
    9. '.' → logprob: -12.146934509277344
    10. '.neg' → logprob: -12.146934509277344

Token 1982: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.5776860184123507e-06
    2. '           ' → logprob: -14.25000286102295
    3. '       ' → logprob: -14.62500286102295
    4. '                   ' → logprob: -15.12500286102295
    5. '               ' → logprob: -15.12500286102295
    6. '.pop' → logprob: -15.75000286102295
    7. '```' → logprob: -15.87500286102295
    8. '.setdefault' → logprob: -16.000001907348633
    9. '.get' → logprob: -16.375001907348633
    10. '   ' → logprob: -16.625001907348633

Token 1983: 'neg' (ID: 18775)
  Prédit: 'neg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neg' → logprob: -1.1472419600977446e-06
    2. '[' → logprob: -14.875000953674316
    3. ' neg' → logprob: -15.250000953674316
    4. '   ' → logprob: -15.625000953674316
    5. '           ' → logprob: -16.000001907348633
    6. '                   ' → logprob: -16.750001907348633
    7. '               ' → logprob: -17.000001907348633
    8. 'bits' → logprob: -17.125001907348633
    9. 'keys' → logprob: -17.125001907348633
    10. '```' → logprob: -17.375001907348633

Token 1984: ']
' (ID: 1592)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -1.0361887216567993
    2. '           ' → logprob: -1.1611887216567993
    3. '               ' → logprob: -2.1611886024475098
    4. '.union' → logprob: -2.1611886024475098
    5. '].' → logprob: -2.6611886024475098
    6. ']' → logprob: -4.28618860244751
    7. '.' → logprob: -5.16118860244751
    8. '                   ' → logprob: -5.66118860244751
    9. ']
' → logprob: -6.66118860244751
    10. ' |' → logprob: -6.91118860244751

Token 1985: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002844576956704259
    2. 'current' → logprob: -8.625284194946289
    3. '           ' → logprob: -10.375284194946289
    4. 'new' → logprob: -10.875284194946289
    5. ' =' → logprob: -11.000284194946289
    6. 'if' → logprob: -11.750284194946289
    7. ' current' → logprob: -12.000284194946289
    8. '                   ' → logprob: -12.625284194946289
    9. 'merged' → logprob: -13.125284194946289
    10. 'for' → logprob: -13.250284194946289

Token 1986: ' merged' (ID: 49536)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6881258487701416
    2. 'for' → logprob: -1.1881258487701416
    3. 'min' → logprob: -2.5631258487701416
    4. '               ' → logprob: -3.0631258487701416
    5. 'filtered' → logprob: -3.4381258487701416
    6. 'current' → logprob: -4.4381256103515625
    7. 'new' → logprob: -5.0631256103515625
    8. 'merged' (adapté à ' merged') → logprob: -5.3131256103515625
    9. 'short' → logprob: -5.6881256103515625
    10. 'combined' → logprob: -6.0631256103515625

Token 1987: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7838660478591919
    2. '|' → logprob: -0.7838660478591919
    3. ' =' → logprob: -3.1588659286499023
    4. '.update' → logprob: -3.2838659286499023
    5. ' |=' → logprob: -5.783865928649902
    6. '               ' → logprob: -6.533865928649902
    7. '           ' → logprob: -7.408865928649902
    8. '.' → logprob: -7.533865928649902
    9. '                   ' → logprob: -7.658865928649902
    10. '   ' → logprob: -8.658865928649902

Token 1988: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.22648276388645172
    2. '{' → logprob: -1.6014827489852905
    3. 'set' → logprob: -8.226482391357422
    4. 'new' → logprob: -8.851482391357422
    5. ' current' → logprob: -9.101482391357422
    6. 'min' → logprob: -9.226482391357422
    7. 'nf' → logprob: -9.226482391357422
    8. 'f' → logprob: -9.351482391357422
    9. '   ' → logprob: -9.601482391357422
    10. '{
' → logprob: -9.976482391357422

Token 1989: ' |' (ID: 1022)
  Prédit: '.union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.union' → logprob: -0.03898793086409569
    2. '               ' → logprob: -4.28898811340332
    3. '|' → logprob: -4.53898811340332
    4. '.' → logprob: -5.28898811340332
    5. '.inter' → logprob: -5.53898811340332
    6. '                   ' → logprob: -5.66398811340332
    7. ' |' → logprob: -7.28898811340332
    8. '           ' → logprob: -8.41398811340332
    9. 'union' → logprob: -8.41398811340332
    10. '                       ' → logprob: -8.53898811340332

Token 1990: ' neg' (ID: 4528)
  Prédit: 'neg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neg' → logprob: -5.228561349213123e-05
    2. 'forms' → logprob: -10.875052452087402
    3. '           ' → logprob: -11.250052452087402
    4. 'new' → logprob: -11.375052452087402
    5. ' neg' → logprob: -12.625052452087402
    6. '                   ' → logprob: -13.125052452087402
    7. '               ' → logprob: -13.250052452087402
    8. '       ' → logprob: -14.125052452087402
    9. '   ' → logprob: -14.625052452087402
    10. '                       ' → logprob: -16.625051498413086

Token 1991: '_forms' (ID: 176505)
  Prédit: '_forms'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_forms' → logprob: -0.0001426346570951864
    2. '_' → logprob: -9.250143051147461
    3. '_entries' → logprob: -10.625143051147461
    4. 'forms' → logprob: -13.000143051147461
    5. '```' → logprob: -13.000143051147461
    6. '
' → logprob: -13.250143051147461
    7. 'Forms' → logprob: -13.375143051147461
    8. '_formats' → logprob: -13.500143051147461
    9. '`' → logprob: -13.875143051147461
    10. 'new' → logprob: -14.000143051147461

Token 1992: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.30072733759880066
    2. '           ' → logprob: -2.050727367401123
    3. '<|end|>' → logprob: -2.300727367401123
    4. '       ' → logprob: -4.300727367401123
    5. '
' → logprob: -4.675727367401123
    6. '<|end|>' → logprob: -5.300727367401123
    7. 'new' → logprob: -6.925727367401123
    8. ',' → logprob: -7.800727367401123
    9. '.' → logprob: -8.800726890563965
    10. ' =' → logprob: -9.175726890563965

Token 1993: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009089935570955276
    2. '<|end|>' → logprob: -5.134089946746826
    3. '           ' → logprob: -6.259089946746826
    4. '       ' → logprob: -7.384089946746826
    5. '```' → logprob: -8.009089469909668
    6. '<|end|>' → logprob: -9.884089469909668
    7. ',' → logprob: -9.884089469909668
    8. '              ' → logprob: -10.384089469909668
    9. 'new' → logprob: -10.509089469909668
    10. '                   ' → logprob: -10.884089469909668

Token 1994: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.45864421129226685
    2. '               ' → logprob: -1.458644151687622
    3. 'new' → logprob: -2.958644151687622
    4. '           ' → logprob: -3.083644151687622
    5. 'min' → logprob: -4.083644390106201
    6. '#' (adapté à ' #') → logprob: -4.833644390106201
    7. 'for' → logprob: -5.208644390106201
    8. 'self' → logprob: -5.833644390106201
    9. 'filtered' → logprob: -6.458644390106201
    10. ' if' → logprob: -7.083644390106201

Token 1995: ' Keep' (ID: 16835)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7406365275382996
    2. 'min' → logprob: -0.8656365275382996
    3. '#' → logprob: -3.3656365871429443
    4. 'minimal' → logprob: -4.365636348724365
    5. '               ' → logprob: -4.490636348724365
    6. 'filtered' → logprob: -4.615636348724365
    7. 'self' → logprob: -4.740636348724365
    8. 'if' → logprob: -4.740636348724365
    9. 'short' → logprob: -4.990636348724365
    10. ' for' → logprob: -6.240636348724365

Token 1996: ' only' (ID: 1606)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.44659045338630676
    2. 'min' → logprob: -1.1965904235839844
    3. '{
' → logprob: -4.071590423583984
    4. 'f' → logprob: -5.071590423583984
    5. '{k' → logprob: -5.196590423583984
    6. '{x' → logprob: -5.321590423583984
    7. 'minimal' → logprob: -5.696590423583984
    8. 'token' → logprob: -5.821590423583984
    9. '   ' → logprob: -5.946590423583984
    10. 'm' → logprob: -5.946590423583984

Token 1997: ' minimal' (ID: 19957)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.23247304558753967
    2. 'min' → logprob: -2.232473134994507
    3. '{
' → logprob: -2.982473134994507
    4. '{s' → logprob: -3.982473134994507
    5. 's' → logprob: -4.107472896575928
    6. '{x' → logprob: -5.232472896575928
    7. 'f' → logprob: -5.857472896575928
    8. 'minimal' → logprob: -6.732472896575928
    9. 'm' → logprob: -6.857472896575928
    10. 'mf' → logprob: -6.982472896575928

Token 1998: ' length' (ID: 5517)
  Prédit: 'merged'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'merged' → logprob: -0.5346784591674805
    2. 'length' → logprob: -1.1596784591674805
    3. 'len' → logprob: -3.5346784591674805
    4. '{' → logprob: -3.7846784591674805
    5. '_length' → logprob: -4.2846784591674805
    6. ' =' → logprob: -5.0346784591674805
    7. '_forms' → logprob: -5.4096784591674805
    8. '=' → logprob: -5.4096784591674805
    9. 'filtered' → logprob: -5.7846784591674805
    10. '{
' → logprob: -6.1596784591674805

Token 1999: ' forms' (ID: 11526)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3047057092189789
    2. '=' → logprob: -1.5547057390213013
    3. 'forms' → logprob: -4.304705619812012
    4. '               ' → logprob: -5.054705619812012
    5. '_forms' → logprob: -5.054705619812012
    6. '={' → logprob: -5.179705619812012
    7. 'merged' → logprob: -5.804705619812012
    8. 's' → logprob: -5.804705619812012
    9. 'filtered' → logprob: -5.929705619812012
    10. '=min' → logprob: -6.054705619812012

Token 2000: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06875746697187424
    2. ' =' → logprob: -2.9437575340270996
    3. '=' → logprob: -4.9437575340271
    4. '       ' → logprob: -5.3187575340271
    5. '           ' → logprob: -7.6937575340271
    6. 'merged' → logprob: -8.443757057189941
    7. 'current' → logprob: -8.443757057189941
    8. ',' → logprob: -8.568757057189941
    9. '=min' → logprob: -9.318757057189941
    10. 'filtered' → logprob: -9.443757057189941

Token 2001: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -5.037835580878891e-05
    2. '           ' → logprob: -10.62505054473877
    3. '       ' → logprob: -11.37505054473877
    4. ' =' → logprob: -11.62505054473877
    5. '=' → logprob: -12.87505054473877
    6. 'import' → logprob: -14.12505054473877
    7. '                   ' → logprob: -14.75005054473877
    8. ',' → logprob: -14.75005054473877
    9. 'with' → logprob: -15.12505054473877
    10. '              ' → logprob: -15.25005054473877

Token 2002: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.46603286266326904
    2. '{' → logprob: -1.341032862663269
    3. 'minimal' → logprob: -2.9660329818725586
    4. 'merged' → logprob: -3.3410329818725586
    5. '{
' → logprob: -4.716032981872559
    6. 'filtered' → logprob: -5.341032981872559
    7. '               ' → logprob: -5.466032981872559
    8. '                   ' → logprob: -6.966032981872559
    9. '           ' → logprob: -7.216032981872559
    10. '   ' → logprob: -7.341032981872559

Token 2003: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.09225568175315857
    2. '_length' → logprob: -2.5922555923461914
    3. 'len' → logprob: -4.342255592346191
    4. 'length' → logprob: -8.342255592346191
    5. '_l' → logprob: -11.092255592346191
    6. 'Len' → logprob: -12.217255592346191
    7. '_size' → logprob: -12.217255592346191
    8. '_forms' → logprob: -12.592255592346191
    9. 'l' → logprob: -14.217255592346191
    10. '```' → logprob: -14.717255592346191

Token 2004: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5763006806373596
    2. '=' → logprob: -0.8263006806373596
    3. '=min' → logprob: -9.076300621032715
    4. '   ' → logprob: -9.201300621032715
    5. '               ' → logprob: -10.076300621032715
    6. '=len' → logprob: -10.201300621032715
    7. '           ' → logprob: -10.951300621032715
    8. '       ' → logprob: -11.201300621032715
    9. '                   ' → logprob: -11.951300621032715
    10. '_len' → logprob: -12.076300621032715

Token 2005: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0001105762057704851
    2. ' min' → logprob: -9.125110626220703
    3. 'len' → logprob: -14.000110626220703
    4. '   ' → logprob: -15.250110626220703
    5. 'minimum' → logprob: -15.625110626220703
    6. 'max' → logprob: -16.125110626220703
    7. '	min' → logprob: -16.250110626220703
    8. 'minimal' → logprob: -16.750110626220703
    9. '(min' → logprob: -17.125110626220703
    10. '           ' → logprob: -17.625110626220703

Token 2006: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.0027233255095779896
    2. 'len' → logprob: -6.002723217010498
    3. '(' → logprob: -8.877723693847656
    4. '{' → logprob: -10.252723693847656
    5. '[len' → logprob: -10.502723693847656
    6. '({' → logprob: -10.752723693847656
    7. '(map' → logprob: -10.877723693847656
    8. '(
' → logprob: -13.252723693847656
    9. '([' → logprob: -13.502723693847656
    10. '((' → logprob: -15.002723693847656

Token 2007: '(x' (ID: 4061)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.5843828916549683
    2. '(form' → logprob: -1.8343828916549683
    3. 'f' → logprob: -2.584383010864258
    4. '(' → logprob: -2.834383010864258
    5. '(s' → logprob: -3.209383010864258
    6. 'merged' → logprob: -3.459383010864258
    7. '(current' → logprob: -3.959383010864258
    8. '(m' → logprob: -3.959383010864258
    9. 'form' → logprob: -4.084383010864258
    10. 's' → logprob: -4.709383010864258

Token 2008: ')' (ID: 8)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.062331993132829666
    2. ' for' → logprob: -2.8123319149017334
    3. ')' → logprob: -8.562332153320312
    4. 'form' → logprob: -9.437332153320312
    5. 's' → logprob: -10.312332153320312
    6. '   ' → logprob: -10.812332153320312
    7. '(x' → logprob: -11.312332153320312
    8. ' ' → logprob: -12.187332153320312
    9. '(s' → logprob: -12.312332153320312
    10. 'x' → logprob: -12.437332153320312

Token 2009: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31346413493156433
    2. ' for' → logprob: -1.3134641647338867
    3. '               ' → logprob: -9.938464164733887
    4. '                   ' → logprob: -9.938464164733887
    5. ')' → logprob: -10.313464164733887
    6. '                       ' → logprob: -10.938464164733887
    7. '           ' → logprob: -11.563464164733887
    8. '       ' → logprob: -12.313464164733887
    9. '   ' → logprob: -12.688464164733887
    10. 's' → logprob: -12.688464164733887

Token 2010: ' x' (ID: 1215)
  Prédit: 'merged'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'merged' → logprob: -1.8624639324116288e-06
    2. ' merged' → logprob: -13.500001907348633
    3. 'x' → logprob: -15.125001907348633
    4. '   ' → logprob: -17.625001907348633
    5. '(' → logprob: -17.750001907348633
    6. '
' → logprob: -18.250001907348633
    7. '[' → logprob: -18.250001907348633
    8. 'mer' → logprob: -19.000001907348633
    9. 'current' → logprob: -19.375001907348633
    10. '{' → logprob: -19.875001907348633

Token 2011: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.578495442867279
    2. ' in' → logprob: -0.828495442867279
    3. 'merged' → logprob: -6.078495502471924
    4. ' merged' → logprob: -9.703495025634766
    5. 'x' → logprob: -9.953495025634766
    6. 'for' → logprob: -10.578495025634766
    7. 'import' → logprob: -10.828495025634766
    8. '=' → logprob: -10.953495025634766
    9. '               ' → logprob: -11.703495025634766
    10. ',' → logprob: -11.828495025634766

Token 2012: ' merged' (ID: 49536)
  Prédit: 'merged'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'merged' → logprob: -2.45848218582978e-06
    2. ' merged' → logprob: -13.12500286102295
    3. '
' → logprob: -15.37500286102295
    4. '   ' → logprob: -15.75000286102295
    5. 'current' → logprob: -16.875001907348633
    6. '(' → logprob: -17.500001907348633
    7. '[' → logprob: -17.625001907348633
    8. '       ' → logprob: -18.250001907348633
    9. 'm' → logprob: -18.750001907348633
    10. '           ' → logprob: -18.750001907348633

Token 2013: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.04483526200056076
    2. ')' → logprob: -3.294835329055786
    3. '               ' → logprob: -5.044835090637207
    4. ' if' → logprob: -9.294835090637207
    5. '       ' → logprob: -9.544835090637207
    6. '           ' → logprob: -9.669835090637207
    7. '                   ' → logprob: -9.794835090637207
    8. '                       ' → logprob: -11.544835090637207
    9. ')
' → logprob: -12.294835090637207
    10. ' )
' → logprob: -12.544835090637207

Token 2014: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002624086628202349
    2. 'self' → logprob: -8.625262260437012
    3. '       ' → logprob: -10.000262260437012
    4. 'merged' → logprob: -10.875262260437012
    5. 'filtered' → logprob: -12.375262260437012
    6. '```' → logprob: -12.375262260437012
    7. '           ' → logprob: -12.750262260437012
    8. 'new' → logprob: -13.000262260437012
    9. ' self' → logprob: -13.250262260437012
    10. '                   ' → logprob: -14.000262260437012

Token 2015: ' minimal' (ID: 19957)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.36007726192474365
    2. '               ' → logprob: -1.7350772619247437
    3. 'merged' → logprob: -2.360077381134033
    4. 'filtered' → logprob: -4.360077381134033
    5. 'minimal' (adapté à ' minimal') → logprob: -4.735077381134033
    6. 'min' → logprob: -5.485077381134033
    7. 'new' → logprob: -6.235077381134033
    8. '       ' → logprob: -6.235077381134033
    9. ' self' → logprob: -7.110077381134033
    10. '   ' → logprob: -7.610077381134033

Token 2016: ' =' (ID: 314)
  Prédit: '_forms'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_forms' → logprob: -0.09218849241733551
    2. ' =' → logprob: -2.717188596725464
    3. '_set' → logprob: -4.217188358306885
    4. 'forms' → logprob: -5.342188358306885
    5. '=' → logprob: -7.092188358306885
    6. 'set' → logprob: -7.342188358306885
    7. 's' → logprob: -8.217188835144043
    8. '_form' → logprob: -8.467188835144043
    9. '_' → logprob: -8.967188835144043
    10. '   ' → logprob: -9.217188835144043

Token 2017: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.04884692281484604
    2. '{x' → logprob: -3.048846960067749
    3. '{k' → logprob: -9.048847198486328
    4. 'set' → logprob: -9.673847198486328
    5. '{s' → logprob: -10.048847198486328
    6. '{i' → logprob: -10.548847198486328
    7. '   ' → logprob: -12.298847198486328
    8. ' {' → logprob: -13.298847198486328
    9. '{
' → logprob: -13.548847198486328
    10. '{sub' → logprob: -13.923847198486328

Token 2018: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0031508617103099823
    2. 's' → logprob: -6.378150939941406
    3. 'expr' → logprob: -7.128150939941406
    4. 'f' → logprob: -8.003150939941406
    5. 'form' → logprob: -8.753150939941406
    6. 'e' → logprob: -9.753150939941406
    7. 'fs' → logprob: -10.878150939941406
    8. 'm' → logprob: -11.003150939941406
    9. 'xf' → logprob: -11.003150939941406
    10. 'frm' → logprob: -12.003150939941406

Token 2019: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5763197541236877
    2. 'for' → logprob: -0.8263197541236877
    3. '           ' → logprob: -8.451319694519043
    4. '               ' → logprob: -9.451319694519043
    5. '                   ' → logprob: -10.076319694519043
    6. '              ' → logprob: -11.701319694519043
    7. '          ' → logprob: -11.826319694519043
    8. '   ' → logprob: -12.451319694519043
    9. '       ' → logprob: -12.451319694519043
    10. '                       ' → logprob: -12.826319694519043

Token 2020: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0014102356508374214
    2. 'merged' → logprob: -6.626410007476807
    3. ' x' → logprob: -9.876410484313965
    4. 'minimal' → logprob: -10.376410484313965
    5. ' merged' → logprob: -13.876410484313965
    6. '   ' → logprob: -15.626410484313965
    7. '(x' → logprob: -15.751410484313965
    8. ' minimal' → logprob: -16.12640953063965
    9. '{x' → logprob: -16.37640953063965
    10. 'min' → logprob: -16.37640953063965

Token 2021: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.018284207209944725
    2. ' in' → logprob: -4.018284320831299
    3. 'x' → logprob: -9.89328384399414
    4. ' ' → logprob: -10.64328384399414
    5. '
' → logprob: -11.51828384399414
    6. '<|end|>' → logprob: -11.76828384399414
    7. ',' → logprob: -11.89328384399414
    8. 'inx' → logprob: -12.26828384399414
    9. '   ' → logprob: -12.26828384399414
    10. 'n' → logprob: -12.26828384399414

Token 2022: ' merged' (ID: 49536)
  Prédit: 'merged'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'merged' → logprob: -0.00012356207298580557
    2. ' merged' → logprob: -9.000123977661133
    3. 'x' → logprob: -16.500123977661133
    4. '[' → logprob: -18.000123977661133
    5. 'mer' → logprob: -18.875123977661133
    6. '   ' → logprob: -19.375123977661133
    7. 'merge' → logprob: -19.500123977661133
    8. ' ' → logprob: -19.625123977661133
    9. '{' → logprob: -19.750123977661133
    10. 'erged' → logprob: -20.250123977661133

Token 2023: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.31329280138015747
    2. ' if' → logprob: -1.3132927417755127
    3. '                   ' → logprob: -11.313292503356934
    4. '           ' → logprob: -12.313292503356934
    5. '               ' → logprob: -12.813292503356934
    6. '                       ' → logprob: -12.938292503356934
    7. '   ' → logprob: -13.438292503356934
    8. '                  ' → logprob: -14.063292503356934
    9. '          ' → logprob: -14.188292503356934
    10. '                      ' → logprob: -14.313292503356934

Token 2024: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -4.632542913896032e-05
    2. ' len' → logprob: -10.000046730041504
    3. '(len' → logprob: -14.250046730041504
    4. 'length' → logprob: -15.375046730041504
    5. '	len' → logprob: -17.375045776367188
    6. '   ' → logprob: -17.500045776367188
    7. '                   ' → logprob: -17.875045776367188
    8. '                           ' → logprob: -18.625045776367188
    9. '=len' → logprob: -18.875045776367188
    10. '[len' → logprob: -19.250045776367188

Token 2025: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00020413640595506877
    2. 'x' → logprob: -8.500204086303711
    3. '(' → logprob: -14.750204086303711
    4. '==' → logprob: -16.37520408630371
    5. ' (' → logprob: -16.87520408630371
    6. '(
' → logprob: -17.12520408630371
    7. ' x' → logprob: -18.00020408630371
    8. '   ' → logprob: -18.12520408630371
    9. '=x' → logprob: -18.37520408630371
    10. '=' → logprob: -18.62520408630371

Token 2026: ')' (ID: 8)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.10042490810155869
    2. ' ==' → logprob: -2.3504250049591064
    3. ')==' → logprob: -8.725424766540527
    4. '<=' → logprob: -10.475424766540527
    5. '==
' → logprob: -11.225424766540527
    6. ')' → logprob: -12.350424766540527
    7. '```' → logprob: -12.725424766540527
    8. ']==' → logprob: -12.975424766540527
    9. '()==' → logprob: -13.350424766540527
    10. ' <=' → logprob: -13.475424766540527

Token 2027: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0019778802525252104
    2. ' ==' → logprob: -6.251977920532227
    3. '==
' → logprob: -10.001977920532227
    4. '<=' → logprob: -13.001977920532227
    5. ')==' → logprob: -14.376977920532227
    6. '```' → logprob: -14.876977920532227
    7. '=' → logprob: -15.376977920532227
    8. '()==' → logprob: -15.376977920532227
    9. '===' → logprob: -15.876977920532227
    10. ']==' → logprob: -16.251977920532227

Token 2028: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.676292231422849e-05
    2. ' min' → logprob: -11.000017166137695
    3. '   ' → logprob: -19.000017166137695
    4. 'minimal' → logprob: -19.500017166137695
    5. '=min' → logprob: -19.625017166137695
    6. '(min' → logprob: -19.750017166137695
    7. '	min' → logprob: -20.125017166137695
    8. '_min' → logprob: -20.125017166137695
    9. '[min' → logprob: -20.375017166137695
    10. 'max' → logprob: -20.875017166137695

Token 2029: '_len' (ID: 13683)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0014772482682019472
    2. '(min' → logprob: -6.751477241516113
    3. 'len' → logprob: -8.751477241516113
    4. ' min' → logprob: -10.001477241516113
    5. '=min' → logprob: -10.376477241516113
    6. '_min' → logprob: -10.626477241516113
    7. '[min' → logprob: -11.001477241516113
    8. '_len' → logprob: -11.251477241516113
    9. '   ' → logprob: -12.126477241516113
    10. 'x' → logprob: -13.126477241516113

Token 2030: '}
' (ID: 739)
  Prédit: '}
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}
' → logprob: -0.25448310375213623
    2. '               ' → logprob: -1.5044831037521362
    3. '}' → logprob: -6.504483222961426
    4. '           ' → logprob: -7.254483222961426
    5. '                   ' → logprob: -8.879483222961426
    6. '                       ' → logprob: -9.129483222961426
    7. '       ' → logprob: -10.379483222961426
    8. '              ' → logprob: -11.004483222961426
    9. '                 ' → logprob: -11.879483222961426
    10. '                ' → logprob: -11.879483222961426

Token 2031: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003186147892847657
    2. 'new' → logprob: -6.378186225891113
    3. '           ' → logprob: -6.878186225891113
    4. 'self' → logprob: -8.128186225891113
    5. '       ' → logprob: -9.628186225891113
    6. '```' → logprob: -9.628186225891113
    7. ' new' → logprob: -12.003186225891113
    8. '
' → logprob: -12.253186225891113
    9. '                   ' → logprob: -12.628186225891113
    10. 'for' → logprob: -13.128186225891113

Token 2032: ' new' (ID: 620)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7787858843803406
    2. 'self' → logprob: -0.7787858843803406
    3. 'new' (adapté à ' new') → logprob: -2.6537859439849854
    4. '           ' → logprob: -5.153785705566406
    5. ' self' → logprob: -5.653785705566406
    6. ' new' → logprob: -6.278785705566406
    7. '                   ' → logprob: -8.403785705566406
    8. '       ' → logprob: -8.528785705566406
    9. '   ' → logprob: -10.653785705566406
    10. '                       ' → logprob: -10.653785705566406

Token 2033: '_entries' (ID: 63162)
  Prédit: '_entries'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_entries' → logprob: -6.933173426659778e-05
    2. 'entries' → logprob: -11.000069618225098
    3. 'cache' → logprob: -11.250069618225098
    4. '               ' → logprob: -11.500069618225098
    5. '.update' → logprob: -11.625069618225098
    6. '_updates' → logprob: -12.125069618225098
    7. '       ' → logprob: -12.500069618225098
    8. '                   ' → logprob: -12.625069618225098
    9. '.entries' → logprob: -12.625069618225098
    10. '           ' → logprob: -12.875069618225098

Token 2034: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04310892894864082
    2. '.update' → logprob: -3.1681089401245117
    3. 'update' → logprob: -9.793108940124512
    4. '.setdefault' → logprob: -10.918108940124512
    5. '   ' → logprob: -11.543108940124512
    6. '       ' → logprob: -12.418108940124512
    7. '```' → logprob: -12.543108940124512
    8. '           ' → logprob: -12.543108940124512
    9. '.' → logprob: -13.168108940124512
    10. '=' → logprob: -13.168108940124512

Token 2035: 'neg' (ID: 18775)
  Prédit: 'neg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neg' → logprob: -1.3856492842023727e-06
    2. 'new' → logprob: -14.125000953674316
    3. '   ' → logprob: -15.750000953674316
    4. '           ' → logprob: -16.000001907348633
    5. ' neg' → logprob: -16.000001907348633
    6. '       ' → logprob: -16.625001907348633
    7. 'keys' → logprob: -16.875001907348633
    8. '                   ' → logprob: -17.250001907348633
    9. 'nega' → logprob: -17.250001907348633
    10. '[' → logprob: -17.500001907348633

Token 2036: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0954524278640747
    2. '.update' → logprob: -1.8454524278640747
    3. '[' → logprob: -2.095452308654785
    4. ' |=' → logprob: -2.095452308654785
    5. '|' → logprob: -2.470452308654785
    6. ' =' → logprob: -2.595452308654785
    7. ']' → logprob: -3.720452308654785
    8. '           ' → logprob: -3.970452308654785
    9. '       ' → logprob: -4.095452308654785
    10. '               ' → logprob: -4.345452308654785

Token 2037: ' =' (ID: 314)
  Prédit: '.update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.update' → logprob: -0.5873101353645325
    2. '=' → logprob: -0.8373101353645325
    3. '|' → logprob: -5.587310314178467
    4. ' |=' → logprob: -5.712310314178467
    5. ' =' → logprob: -5.837310314178467
    6. 'update' → logprob: -6.962310314178467
    7. '.' → logprob: -8.462309837341309
    8. '               ' → logprob: -10.212309837341309
    9. '           ' → logprob: -10.337309837341309
    10. '.=' → logprob: -10.337309837341309

Token 2038: ' minimal' (ID: 19957)
  Prédit: 'minimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minimal' → logprob: -1.1756367712223437e-05
    2. ' minimal' → logprob: -11.500011444091797
    3. 'min' → logprob: -13.875011444091797
    4. 'new' → logprob: -14.500011444091797
    5. 'minimum' → logprob: -16.500011444091797
    6. 'merged' → logprob: -17.375011444091797
    7. '{' → logprob: -18.125011444091797
    8. '   ' → logprob: -18.375011444091797
    9. '           ' → logprob: -19.500011444091797
    10. '
' → logprob: -19.750011444091797

Token 2039: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005913979839533567
    2. '<|end|>' → logprob: -8.250591278076172
    3. '```' → logprob: -8.625591278076172
    4. '
' → logprob: -10.000591278076172
    5. '           ' → logprob: -10.250591278076172
    6. '        
' → logprob: -10.750591278076172
    7. '   ' → logprob: -11.375591278076172
    8. 'self' → logprob: -11.375591278076172
    9. ')' → logprob: -12.250591278076172
    10. '               ' → logprob: -12.375591278076172

Token 2040: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.3822154111694545e-05
    2. '```' → logprob: -10.750043869018555
    3. '           ' → logprob: -11.375043869018555
    4. '
' → logprob: -12.875043869018555
    5. '               ' → logprob: -13.000043869018555
    6. '   ' → logprob: -13.250043869018555
    7. '        
' → logprob: -13.500043869018555
    8. 'self' → logprob: -13.750043869018555
    9. '<|end|>' → logprob: -15.250043869018555
    10. ')' → logprob: -15.250043869018555

Token 2041: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002386472187936306
    2. 'for' → logprob: -6.627386569976807
    3. 'self' → logprob: -7.002386569976807
    4. '
' → logprob: -9.752386093139648
    5. '```' → logprob: -9.877386093139648
    6. ' for' → logprob: -10.877386093139648
    7. '        
' → logprob: -11.627386093139648
    8. '   ' → logprob: -11.877386093139648
    9. '<|end|>' → logprob: -13.502386093139648
    10. ' self' → logprob: -13.752386093139648

Token 2042: ' Add' (ID: 4063)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.24630707502365112
    2. '       ' → logprob: -1.996307134628296
    3. 'for' → logprob: -2.496307134628296
    4. '   ' → logprob: -9.496307373046875
    5. '#' → logprob: -11.371307373046875
    6. ' self' → logprob: -12.996307373046875
    7. '           ' → logprob: -13.371307373046875
    8. ' for' → logprob: -14.246307373046875
    9. '```' → logprob: -15.121307373046875
    10. '        
' → logprob: -15.246307373046875

Token 2043: ' neg' (ID: 4528)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9826822876930237
    2. 'self' → logprob: -1.107682228088379
    3. 'new' → logprob: -1.232682228088379
    4. ' new' → logprob: -6.357682228088379
    5. '   ' → logprob: -7.732682228088379
    6. '{' → logprob: -7.732682228088379
    7. '           ' → logprob: -8.232682228088379
    8. '**' → logprob: -8.232682228088379
    9. ' self' → logprob: -8.232682228088379
    10. '               ' → logprob: -9.357682228088379

Token 2044: 'ations' (ID: 929)
  Prédit: '_entries'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_entries' → logprob: -0.02285289764404297
    2. '       ' → logprob: -3.897852897644043
    3. 'entries' → logprob: -6.647852897644043
    4. '.update' → logprob: -8.272852897644043
    5. 'try' → logprob: -8.397852897644043
    6. '           ' → logprob: -9.022852897644043
    7. '.entries' → logprob: -9.272852897644043
    8. 'update' → logprob: -9.647852897644043
    9. '
' → logprob: -10.397852897644043
    10. 'ents' → logprob: -10.397852897644043

Token 2045: ' to' (ID: 316)
  Prédit: '.update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.update' → logprob: -0.2581755816936493
    2. '       ' → logprob: -1.5081756114959717
    3. '```' → logprob: -5.633175373077393
    4. 'update' → logprob: -6.633175373077393
    5. '.' → logprob: -7.633175373077393
    6. 'self' → logprob: -7.883175373077393
    7. '
' → logprob: -8.75817584991455
    8. '.
' → logprob: -9.88317584991455
    9. '   ' → logprob: -10.00817584991455
    10. '_update' → logprob: -10.50817584991455

Token 2046: ' cache' (ID: 11956)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0006914667319506407
    2. '{' → logprob: -7.6256914138793945
    3. '       ' → logprob: -9.125691413879395
    4. 'new' → logprob: -9.500691413879395
    5. '```' → logprob: -11.625691413879395
    6. ' self' → logprob: -12.000691413879395
    7. '
' → logprob: -13.375691413879395
    8. '{
' → logprob: -13.500691413879395
    9. '   ' → logprob: -14.000691413879395
    10. '`' → logprob: -15.500691413879395

Token 2047: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006501962896436453
    2. '
' → logprob: -5.381502151489258
    3. '```' → logprob: -6.506502151489258
    4. 'self' → logprob: -8.506502151489258
    5. '.update' → logprob: -9.256502151489258
    6. '        
' → logprob: -10.631502151489258
    7. '   ' → logprob: -11.131502151489258
    8. '`' → logprob: -11.506502151489258
    9. '`
' → logprob: -11.631502151489258
    10. 'update' → logprob: -11.756502151489258

Token 2048: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.857719275401905e-05
    2. 'self' → logprob: -10.250038146972656
    3. '```' → logprob: -13.250038146972656
    4. '
' → logprob: -14.375038146972656
    5. '   ' → logprob: -14.750038146972656
    6. '           ' → logprob: -15.500038146972656
    7. ' self' → logprob: -16.875038146972656
    8. '               ' → logprob: -17.000038146972656
    9. '        
' → logprob: -17.500038146972656
    10. 'update' → logprob: -19.125038146972656

Token 2049: ' for' (ID: 395)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20211949944496155
    2. '       ' → logprob: -1.7021194696426392
    3. 'for' (adapté à ' for') → logprob: -7.57711935043335
    4. '```' → logprob: -8.827119827270508
    5. '   ' → logprob: -10.702119827270508
    6. ' self' → logprob: -11.327119827270508
    7. '           ' → logprob: -12.327119827270508
    8. '
' → logprob: -12.577119827270508
    9. '**' → logprob: -13.452119827270508
    10. '`' → logprob: -13.702119827270508

Token 2050: ' k' (ID: 372)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.15114615857601166
    2. ' bits' → logprob: -2.651146173477173
    3. 'key' → logprob: -3.276146173477173
    4. 'k' → logprob: -3.776146173477173
    5. ' key' → logprob: -4.901145935058594
    6. ' k' → logprob: -6.651145935058594
    7. 'neg' → logprob: -9.151145935058594
    8. 'keys' → logprob: -9.776145935058594
    9. 'b' → logprob: -10.151145935058594
    10. '   ' → logprob: -10.151145935058594

Token 2051: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.43375515937805176
    2. ' in' → logprob: -1.1837551593780518
    3. ',k' → logprob: -3.4337551593780518
    4. 'in' → logprob: -4.683754920959473
    5. ',n' → logprob: -6.683754920959473
    6. ' ,' → logprob: -6.683754920959473
    7. ',new' → logprob: -6.933754920959473
    8. ',v' → logprob: -7.683754920959473
    9. 'new' → logprob: -9.933754920959473
    10. ',value' → logprob: -10.183754920959473

Token 2052: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.0280383548888494e-06
    2. ' v' → logprob: -14.125000953674316
    3. 'forms' → logprob: -15.750000953674316
    4. 'vs' → logprob: -17.875001907348633
    5. '	v' → logprob: -18.375001907348633
    6. '   ' → logprob: -19.500001907348633
    7. 'vl' → logprob: -19.875001907348633
    8. 'vv' → logprob: -20.250001907348633
    9. '       ' → logprob: -21.000001907348633
    10. '```' → logprob: -21.375001907348633

Token 2053: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02646900899708271
    2. 'in' → logprob: -3.7764689922332764
    3. ',' → logprob: -5.7764692306518555
    4. '   ' → logprob: -9.901469230651855
    5. '=' → logprob: -11.276469230651855
    6. '```' → logprob: -11.276469230651855
    7. '       ' → logprob: -11.776469230651855
    8. '.' → logprob: -12.026469230651855
    9. '	in' → logprob: -12.276469230651855
    10. ' ' → logprob: -12.526469230651855

Token 2054: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0043496559374034405
    2. 'v' → logprob: -5.504349708557129
    3. ' new' → logprob: -8.754349708557129
    4. 'self' → logprob: -9.129349708557129
    5. '...' → logprob: -13.754349708557129
    6. 'list' → logprob: -14.254349708557129
    7. 'value' → logprob: -14.629349708557129
    8. ' v' → logprob: -14.754349708557129
    9. 'items' → logprob: -14.879349708557129
    10. 'k' → logprob: -15.004349708557129

Token 2055: '_entries' (ID: 63162)
  Prédit: '_entries'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_entries' → logprob: -0.007544511463493109
    2. 'try' → logprob: -5.25754451751709
    3. 'tries' → logprob: -7.13254451751709
    4. 'ries' → logprob: -7.75754451751709
    5. 'entries' → logprob: -7.88254451751709
    6. '   ' → logprob: -8.25754451751709
    7. '```' → logprob: -8.75754451751709
    8. '_items' → logprob: -9.63254451751709
    9. '.entries' → logprob: -10.00754451751709
    10. '._' → logprob: -10.00754451751709

Token 2056: '.items' (ID: 19607)
  Prédit: '.items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.008036340586841106
    2. '   ' → logprob: -5.133036136627197
    3. '.update' → logprob: -7.008036136627197
    4. '.' → logprob: -8.008036613464355
    5. ' in' → logprob: -8.758036613464355
    6. ':' → logprob: -8.883036613464355
    7. '.iteritems' → logprob: -9.258036613464355
    8. '```' → logprob: -9.258036613464355
    9. ' items' → logprob: -9.383036613464355
    10. ' .' → logprob: -9.633036613464355

Token 2057: '():
' (ID: 8595)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8530646562576294
    2. '=' → logprob: -1.6030646562576294
    3. '():
' → logprob: -2.10306453704834
    4. '()' → logprob: -2.35306453704834
    5. '(),' → logprob: -2.97806453704834
    6. '():' → logprob: -3.10306453704834
    7. '       ' → logprob: -4.47806453704834
    8. ',k' → logprob: -4.72806453704834
    9. '```' → logprob: -4.72806453704834
    10. ':' → logprob: -5.10306453704834

Token 2058: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005087109748274088
    2. '   ' → logprob: -8.000508308410645
    3. '       ' → logprob: -8.875508308410645
    4. ' self' → logprob: -11.625508308410645
    5. '```' → logprob: -11.625508308410645
    6. '	       ' → logprob: -12.125508308410645
    7. 'self' → logprob: -12.250508308410645
    8. '               ' → logprob: -13.125508308410645
    9. '	   ' → logprob: -14.250508308410645
    10. '          ' → logprob: -14.750508308410645

Token 2059: ' if' (ID: 538)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009467111667618155
    2. '           ' → logprob: -7.500946521759033
    3. ' self' → logprob: -7.875946521759033
    4. '               ' → logprob: -11.625946998596191
    5. '   ' → logprob: -12.750946998596191
    6. '	self' → logprob: -13.875946998596191
    7. 'if' (adapté à ' if') → logprob: -14.750946998596191
    8. '       ' → logprob: -16.000946044921875
    9. '```' → logprob: -16.125946044921875
    10. '(self' → logprob: -16.250946044921875

Token 2060: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -4.9424725148128346e-05
    2. '           ' → logprob: -10.000049591064453
    3. '   ' → logprob: -13.750049591064453
    4. '       ' → logprob: -13.875049591064453
    5. ' k' → logprob: -14.000049591064453
    6. '               ' → logprob: -14.875049591064453
    7. '          ' → logprob: -15.375049591064453
    8. '         ' → logprob: -15.875049591064453
    9. '(k' → logprob: -16.000049591064453
    10. '                   ' → logprob: -16.500049591064453

Token 2061: ' in' (ID: 306)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.17557913064956665
    2. ' not' → logprob: -1.9255790710449219
    3. 'in' → logprob: -4.300579071044922
    4. ' in' → logprob: -6.675579071044922
    5. 'k' → logprob: -8.925579071044922
    6. '[k' → logprob: -9.300579071044922
    7. '!=' → logprob: -9.925579071044922
    8. '==' → logprob: -10.050579071044922
    9. '```' → logprob: -10.425579071044922
    10. '=' → logprob: -11.425579071044922

Token 2062: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.553032628493384e-05
    2. ' self' → logprob: -9.500075340270996
    3. '       ' → logprob: -14.750075340270996
    4. '           ' → logprob: -16.125076293945312
    5. '   ' → logprob: -16.500076293945312
    6. '(self' → logprob: -17.875076293945312
    7. '[self' → logprob: -18.250076293945312
    8. '
' → logprob: -18.750076293945312
    9. '	self' → logprob: -19.125076293945312
    10. 'new' → logprob: -19.125076293945312

Token 2063: '.cache' (ID: 37175)
  Prédit: '.cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cache' → logprob: -0.00407923199236393
    2. 'cache' → logprob: -5.504079341888428
    3. '	cache' → logprob: -15.12907886505127
    4. ' cache' → logprob: -15.62907886505127
    5. '_cache' → logprob: -15.75407886505127
    6. '       ' → logprob: -16.254079818725586
    7. '.' → logprob: -16.879079818725586
    8. ' .' → logprob: -17.129079818725586
    9. 'CACHE' → logprob: -17.379079818725586
    10. '   ' → logprob: -17.879079818725586

Token 2064: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.29094403982162476
    2. '               ' → logprob: -1.7909440994262695
    3. ' and' → logprob: -3.1659440994262695
    4. ':' → logprob: -3.2909440994262695
    5. 'and' → logprob: -6.1659440994262695
    6. '):
' → logprob: -6.5409440994262695
    7. '           ' → logprob: -6.7909440994262695
    8. '=' → logprob: -8.29094409942627
    9. ' =' → logprob: -8.54094409942627
    10. ':

' → logprob: -8.79094409942627

Token 2065: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002401816425845027
    2. 'self' → logprob: -6.502401828765869
    3. '           ' → logprob: -7.127401828765869
    4. ' self' → logprob: -11.377401351928711
    5. ':' → logprob: -11.502401351928711
    6. '```' → logprob: -11.627401351928711
    7. ',' → logprob: -11.877401351928711
    8. '.update' → logprob: -11.877401351928711
    9. '[self' → logprob: -12.127401351928711
    10. 'and' → logprob: -12.252401351928711

Token 2066: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0821264386177063
    2. '               ' → logprob: -2.5821263790130615
    3. '           ' → logprob: -6.082126617431641
    4. ' self' → logprob: -7.582126617431641
    5. '```' → logprob: -8.20712661743164
    6. '   ' → logprob: -8.83212661743164
    7. '`' → logprob: -12.20712661743164
    8. '                   ' → logprob: -12.58212661743164
    9. '       ' → logprob: -12.70712661743164
    10. '``' → logprob: -12.83212661743164

Token 2067: '.cache' (ID: 37175)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.16112972795963287
    2. '.cache' → logprob: -1.9111297130584717
    3. 'cache' → logprob: -7.286129951477051
    4. '               ' → logprob: -9.66112995147705
    5. '.k' → logprob: -9.66112995147705
    6. '           ' → logprob: -10.28612995147705
    7. '.' → logprob: -11.03612995147705
    8. '_cache' → logprob: -11.03612995147705
    9. '{k' → logprob: -11.41112995147705
    10. '                   ' → logprob: -12.91112995147705

Token 2068: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -1.9361264946837764e-07
    2. '[key' → logprob: -17.125
    3. 'k' → logprob: -18.0
    4. '
' → logprob: -18.5
    5. '.update' → logprob: -19.375
    6. 'update' → logprob: -19.875
    7. '[' → logprob: -20.0
    8. '   ' → logprob: -20.0
    9. '{k' → logprob: -20.0
    10. '(k' → logprob: -20.375

Token 2069: '].' (ID: 1651)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '|' → logprob: -0.17592842876911163
    2. ' |=' → logprob: -1.9259284734725952
    3. '.update' → logprob: -4.800928592681885
    4. '           ' → logprob: -5.675928592681885
    5. '.' → logprob: -6.050928592681885
    6. '.union' → logprob: -7.175928592681885
    7. '               ' → logprob: -8.300928115844727
    8. '   ' → logprob: -8.675928115844727
    9. '       ' → logprob: -9.175928115844727
    10. '                   ' → logprob: -9.300928115844727

Token 2070: 'update' (ID: 4076)
  Prédit: 'update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -8.137130498653278e-05
    2. '|' → logprob: -9.875081062316895
    3. '.update' → logprob: -10.750081062316895
    4. '_update' → logprob: -12.375081062316895
    5. 'v' → logprob: -13.375081062316895
    6. ' |=' → logprob: -13.875081062316895
    7. ' update' → logprob: -14.125081062316895
    8. 'union' → logprob: -14.750081062316895
    9. '	update' → logprob: -16.37508201599121
    10. 'intersection' → logprob: -16.50008201599121

Token 2071: '(v' (ID: 6932)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -5.512236498361744e-07
    2. '(v' → logprob: -15.125000953674316
    3. ' v' → logprob: -15.250000953674316
    4. '   ' → logprob: -18.5
    5. '       ' → logprob: -19.625
    6. '	v' → logprob: -20.125
    7. ')v' → logprob: -20.375
    8. '           ' → logprob: -21.125
    9. '[v' → logprob: -22.0
    10. '{' → logprob: -22.125

Token 2072: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.043085284531116486
    2. ')
' → logprob: -3.4180853366851807
    3. '           ' → logprob: -4.793085098266602
    4. '())' → logprob: -7.043085098266602
    5. '())
' → logprob: -9.043085098266602
    6. '()' → logprob: -9.793085098266602
    7. '               ' → logprob: -10.793085098266602
    8. ')#' → logprob: -11.543085098266602
    9. '       ' → logprob: -11.793085098266602
    10. ')return' → logprob: -12.668085098266602

Token 2073: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010344763286411762
    2. '               ' → logprob: -7.376034259796143
    3. '       ' → logprob: -8.0010347366333
    4. '<|end|>' → logprob: -10.3760347366333
    5. '```' → logprob: -10.6260347366333
    6. 'continue' → logprob: -12.0010347366333
    7. '   ' → logprob: -12.7510347366333
    8. ' continue' → logprob: -13.1260347366333
    9. '          ' → logprob: -13.5010347366333
    10. '
' → logprob: -14.5010347366333

Token 2074: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002138720825314522
    2. 'else' (adapté à ' else') → logprob: -6.252138614654541
    3. '       ' → logprob: -8.6271390914917
    4. ' else' → logprob: -11.3771390914917
    5. '               ' → logprob: -11.8771390914917
    6. '
' → logprob: -12.7521390914917
    7. '   ' → logprob: -12.7521390914917
    8. '          ' → logprob: -12.8771390914917
    9. '```' → logprob: -14.0021390914917
    10. '		' → logprob: -14.5021390914917

Token 2075: ':
' (ID: 734)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.9148069620132446
    2. '               ' → logprob: -1.0398069620132446
    3. '```' → logprob: -2.789806842803955
    4. ':
' → logprob: -2.914806842803955
    5. '           ' → logprob: -3.039806842803955
    6. '=' → logprob: -3.289806842803955
    7. ' =' → logprob: -4.289806842803955
    8. '=self' → logprob: -4.414806842803955
    9. ' self' → logprob: -4.914806842803955
    10. ':' → logprob: -5.164806842803955

Token 2076: '               ' (ID: 506)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5009760856628418
    2. '           ' → logprob: -1.2509760856628418
    3. '               ' → logprob: -2.250976085662842
    4. ' self' → logprob: -6.125976085662842
    5. '   ' → logprob: -8.1259765625
    6. '       ' → logprob: -10.5009765625
    7. '```' → logprob: -11.0009765625
    8. '	self' → logprob: -12.6259765625
    9. '                   ' → logprob: -13.1259765625
    10. '(self' → logprob: -13.5009765625

Token 2077: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00010676169040380046
    2. ' self' → logprob: -9.250106811523438
    3. '               ' → logprob: -11.500106811523438
    4. '           ' → logprob: -14.750106811523438
    5. '[self' → logprob: -16.875106811523438
    6. '(self' → logprob: -17.125106811523438
    7. '                   ' → logprob: -17.125106811523438
    8. '   ' → logprob: -18.125106811523438
    9. '	self' → logprob: -18.125106811523438
    10. '=self' → logprob: -18.875106811523438

Token 2078: '.cache' (ID: 37175)
  Prédit: '.cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cache' → logprob: -2.5941604690160602e-05
    2. ' .' → logprob: -11.375025749206543
    3. '.update' → logprob: -12.125025749206543
    4. 'cache' → logprob: -12.125025749206543
    5. '	cache' → logprob: -14.125025749206543
    6. '.Cache' → logprob: -14.875025749206543
    7. '_cache' → logprob: -14.875025749206543
    8. '.' → logprob: -14.875025749206543
    9. '       ' → logprob: -15.250025749206543
    10. '[k' → logprob: -15.375025749206543

Token 2079: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -1.3856492842023727e-06
    2. '[' → logprob: -14.250000953674316
    3. '[key' → logprob: -14.500000953674316
    4. '.update' → logprob: -17.250001907348633
    5. '=k' → logprob: -18.250001907348633
    6. '.setdefault' → logprob: -18.500001907348633
    7. 'k' → logprob: -18.500001907348633
    8. '```' → logprob: -18.500001907348633
    9. '[
' → logprob: -18.750001907348633
    10. ' [' → logprob: -19.125001907348633

Token 2080: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.022974882274866104
    2. ']=' → logprob: -3.897974967956543
    3. '=' → logprob: -6.022974967956543
    4. '[' → logprob: -13.272974967956543
    5. ')' → logprob: -13.647974967956543
    6. ']={' → logprob: -13.897974967956543
    7. '[k' → logprob: -14.147974967956543
    8. ']='' → logprob: -14.147974967956543
    9. ' =' → logprob: -14.897974967956543
    10. ' ]' → logprob: -15.022974967956543

Token 2081: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -7.107425062713446e-06
    2. ' =' → logprob: -11.875006675720215
    3. '=
' → logprob: -17.37500762939453
    4. '=k' → logprob: -17.62500762939453
    5. '=

' → logprob: -18.12500762939453
    6. '[' → logprob: -18.62500762939453
    7. '=v' → logprob: -19.12500762939453
    8. ']=' → logprob: -19.12500762939453
    9. '=[' → logprob: -20.25000762939453
    10. '[k' → logprob: -20.25000762939453

Token 2082: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -6.704273118884885e-07
    2. ' v' → logprob: -14.750000953674316
    3. 'set' → logprob: -15.750000953674316
    4. '{' → logprob: -19.125
    5. '           ' → logprob: -19.625
    6. '	v' → logprob: -20.625
    7. '       ' → logprob: -21.125
    8. '   ' → logprob: -22.125
    9. ')v' → logprob: -23.125
    10. '=v' → logprob: -23.25

Token 2083: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2084: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5263630151748657
    2. '<|end|>' → logprob: -1.0263630151748657
    3. '
' → logprob: -3.651362895965576
    4. 'def' → logprob: -4.276362895965576
    5. '<|end|>' → logprob: -4.776362895965576
    6. ' def' → logprob: -7.026362895965576
    7. '       ' → logprob: -7.651362895965576
    8. '```' → logprob: -7.901362895965576
    9. 'import' → logprob: -8.276363372802734
    10. ' ' → logprob: -9.026363372802734

Token 2085: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008684301748871803
    2. 'def' (adapté à ' def') → logprob: -4.758684158325195
    3. '
' → logprob: -10.008684158325195
    4. ' def' → logprob: -11.133684158325195
    5. 'import' → logprob: -12.758684158325195
    6. '    
' → logprob: -12.758684158325195
    7. '       ' → logprob: -13.758684158325195
    8. 'from' → logprob: -14.008684158325195
    9. '```' → logprob: -14.508684158325195
    10. 'class' → logprob: -14.758684158325195

Token 2086: ' minimize' (ID: 41776)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.7841889262199402
    2. 'add' → logprob: -1.659188985824585
    3. 'expand' → logprob: -2.034188985824585
    4. 'update' → logprob: -2.659188985824585
    5. 'try' → logprob: -3.909188985824585
    6. 'get' → logprob: -4.034188747406006
    7. 'minimal' → logprob: -4.159188747406006
    8. 'generate' → logprob: -4.284188747406006
    9. 'ref' → logprob: -4.409188747406006
    10. 'def' → logprob: -4.784188747406006

Token 2087: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.02734212577342987
    2. '(' → logprob: -3.7773420810699463
    3. '_expression' → logprob: -5.777342319488525
    4. '(
' → logprob: -7.402342319488525
    5. '_expr' → logprob: -8.777341842651367
    6. 'self' → logprob: -9.152341842651367
    7. '   ' → logprob: -10.277341842651367
    8. 'expression' → logprob: -11.152341842651367
    9. ' (' → logprob: -11.402341842651367
    10. '(expression' → logprob: -11.527341842651367

Token 2088: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02886803075671196
    2. '(self' → logprob: -3.9038679599761963
    3. 'self' → logprob: -4.903868198394775
    4. '_expr' → logprob: -7.653868198394775
    5. 'expr' → logprob: -8.903867721557617
    6. '(expr' → logprob: -9.903867721557617
    7. '_expression' → logprob: -10.028867721557617
    8. '   ' → logprob: -10.403867721557617
    9. '):
' → logprob: -10.653867721557617
    10. '       ' → logprob: -11.028867721557617

Token 2089: ' expr' (ID: 30206)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.014632927253842354
    2. 'self' → logprob: -4.389632701873779
    3. ' expr' → logprob: -6.514632701873779
    4. '       ' → logprob: -7.514632701873779
    5. '   ' → logprob: -10.014633178710938
    6. ' self' → logprob: -10.389633178710938
    7. 'expression' → logprob: -11.764633178710938
    8. '           ' → logprob: -12.889633178710938
    9. 'express' → logprob: -13.014633178710938
    10. '                   ' → logprob: -13.264633178710938

Token 2090: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.24101686477661133
    2. '):
' → logprob: -1.9910168647766113
    3. '   ' → logprob: -3.6160168647766113
    4. ')' → logprob: -3.7410168647766113
    5. '(self' → logprob: -4.866016864776611
    6. '.' → logprob: -5.241016864776611
    7. '       ' → logprob: -5.616016864776611
    8. ',' → logprob: -5.991016864776611
    9. ':' → logprob: -6.241016864776611
    10. 'self' → logprob: -7.241016864776611

Token 2091: ' Bool' (ID: 28693)
  Prédit: 'Bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Bool' → logprob: -0.0002798087371047586
    2. ' Bool' → logprob: -8.625279426574707
    3. ')' → logprob: -9.500279426574707
    4. 'bool' → logprob: -11.250279426574707
    5. 'self' → logprob: -12.000279426574707
    6. 'Expr' → logprob: -12.625279426574707
    7. '       ' → logprob: -13.750279426574707
    8. '):
' → logprob: -14.625279426574707
    9. '   ' → logprob: -14.750279426574707
    10. '):' → logprob: -15.375279426574707

Token 2092: 'Expr' (ID: 21037)
  Prédit: 'Expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Expr' → logprob: -9.73446003627032e-05
    2. '   ' → logprob: -9.375097274780273
    3. ')' → logprob: -11.500097274780273
    4. '       ' → logprob: -13.625097274780273
    5. '.Expr' → logprob: -15.625097274780273
    6. ' Expr' → logprob: -15.750097274780273
    7. '):' → logprob: -15.875097274780273
    8. '_expr' → logprob: -16.375097274780273
    9. 'Exp' → logprob: -16.500097274780273
    10. '(expr' → logprob: -16.750097274780273

Token 2093: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09098434448242188
    2. '):' → logprob: -3.215984344482422
    3. '):
' → logprob: -3.340984344482422
    4. ',' → logprob: -5.090984344482422
    5. '       ' → logprob: -5.465984344482422
    6. '   ' → logprob: -6.965984344482422
    7. 'self' → logprob: -9.465984344482422
    8. '(self' → logprob: -10.965984344482422
    9. ')->' → logprob: -11.590984344482422
    10. '):

' → logprob: -11.590984344482422

Token 2094: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.045992471277713776
    2. ':
' → logprob: -3.420992374420166
    3. '       ' → logprob: -4.420992374420166
    4. '->' → logprob: -9.920992851257324
    5. '):
' → logprob: -9.920992851257324
    6. '():
' → logprob: -10.170992851257324
    7. ' ->' → logprob: -10.420992851257324
    8. '):' → logprob: -10.920992851257324
    9. '   ' → logprob: -11.170992851257324
    10. ')' → logprob: -11.420992851257324

Token 2095: ' int' (ID: 677)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.1789563000202179
    2. 'Bool' → logprob: -2.3039562702178955
    3. 'str' → logprob: -3.4289562702178955
    4. 'Truth' → logprob: -3.6789562702178955
    5. 'tuple' → logprob: -6.928956508636475
    6. ' set' → logprob: -7.053956508636475
    7. 'Tuple' → logprob: -7.303956508636475
    8. ' Bool' → logprob: -7.303956508636475
    9. '{' → logprob: -7.428956508636475
    10. '(set' → logprob: -7.928956508636475

Token 2096: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06362469494342804
    2. ':
' → logprob: -3.438624620437622
    3. '       ' → logprob: -3.563624620437622
    4. '   ' → logprob: -7.188624858856201
    5. '):' → logprob: -8.938624382019043
    6. '):
' → logprob: -9.813624382019043
    7. '():' → logprob: -9.813624382019043
    8. ',' → logprob: -9.938624382019043
    9. '(self' → logprob: -10.188624382019043
    10. ')' → logprob: -10.313624382019043

Token 2097: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.171581091824919e-05
    2. 'expr' → logprob: -10.25007152557373
    3. 'bits' → logprob: -10.75007152557373
    4. '   ' → logprob: -12.62507152557373
    5. '```' → logprob: -12.62507152557373
    6. '#' → logprob: -13.37507152557373
    7. 'env' → logprob: -13.50007152557373
    8. 'result' → logprob: -14.50007152557373
    9. 'tokens' → logprob: -14.62507152557373
    10. ' bits' → logprob: -14.75007152557373

Token 2098: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8633871674537659
    2. 'tt' → logprob: -0.8633871674537659
    3. 'bits' → logprob: -2.113387107849121
    4. 'expr' → logprob: -3.988387107849121
    5. 'key' → logprob: -4.363387107849121
    6. '#' → logprob: -7.238387107849121
    7. 'target' → logprob: -7.488387107849121
    8. 'table' → logprob: -7.863387107849121
    9. 't' → logprob: -7.988387107849121
    10. 'func' → logprob: -8.113387107849121

Token 2099: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20390373468399048
    2. 'expr' → logprob: -2.3289036750793457
    3. 'bits' → logprob: -2.5789036750793457
    4. 'if' → logprob: -4.703903675079346
    5. '#' → logprob: -6.828903675079346
    6. 'form' → logprob: -8.328904151916504
    7. 'target' → logprob: -9.203904151916504
    8. '   ' → logprob: -9.453904151916504
    9. 'key' → logprob: -9.453904151916504
    10. 'result' → logprob: -9.828904151916504

Token 2100: ' Given' (ID: 29844)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5842071175575256
    2. 'expr' → logprob: -1.0842070579528809
    3. 'bits' → logprob: -3.334207057952881
    4. 'def' → logprob: -4.209207057952881
    5. '#' → logprob: -4.459207057952881
    6. 'if' → logprob: -4.584207057952881
    7. 'key' → logprob: -4.834207057952881
    8. 'target' → logprob: -4.959207057952881
    9. 'forms' → logprob: -5.584207057952881
    10. 'result' → logprob: -5.584207057952881

Token 2101: ' an' (ID: 448)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.196753591299057
    2. 'self' → logprob: -2.19675350189209
    3. ' an' → logprob: -3.44675350189209
    4. ' expr' → logprob: -3.57175350189209
    5. 'an' → logprob: -5.19675350189209
    6. ' self' → logprob: -6.57175350189209
    7. '       ' → logprob: -7.69675350189209
    8. 'the' → logprob: -10.44675350189209
    9. 'a' → logprob: -10.57175350189209
    10. ' a' → logprob: -10.94675350189209

Token 2102: ' expr' (ID: 30206)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.25331082940101624
    2. ' expr' → logprob: -1.5033107995986938
    3. 'expression' → logprob: -7.503310680389404
    4. ' expression' → logprob: -7.628310680389404
    5. '       ' → logprob: -8.753311157226562
    6. ' Bool' → logprob: -10.003311157226562
    7. 'express' → logprob: -10.503311157226562
    8. 'Expr' → logprob: -10.628311157226562
    9. 'Bool' → logprob: -11.003311157226562
    10. ' Expr' → logprob: -11.253311157226562

Token 2103: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.44147226214408875
    2. ':
' → logprob: -1.9414722919464111
    3. '):
' → logprob: -2.566472291946411
    4. '       ' → logprob: -2.691472291946411
    5. ',' → logprob: -3.816472291946411
    6. '.' → logprob: -4.316472053527832
    7. '   ' → logprob: -4.441472053527832
    8. '):' → logprob: -5.316472053527832
    9. '(self' → logprob: -5.566472053527832
    10. ')' → logprob: -5.691472053527832

Token 2104: ' find' (ID: 1646)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3632692098617554
    2. 'bits' → logprob: -1.3632692098617554
    3. 'forms' → logprob: -1.7382692098617554
    4. 'expr' → logprob: -1.7382692098617554
    5. 'tt' → logprob: -2.363269329071045
    6. 'target' → logprob: -3.988269329071045
    7. 'canonical' → logprob: -4.738269329071045
    8. 'cache' → logprob: -6.113269329071045
    9. 'result' → logprob: -6.113269329071045
    10. 'return' → logprob: -6.488269329071045

Token 2105: ' minimal' (ID: 19957)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.34747016429901123
    2. 'the' → logprob: -2.222470283508301
    3. 'self' → logprob: -2.347470283508301
    4. ' minimal' → logprob: -3.097470283508301
    5. ' self' → logprob: -3.722470283508301
    6. 'len' → logprob: -5.222470283508301
    7. 'minimal' → logprob: -5.222470283508301
    8. ' its' → logprob: -5.597470283508301
    9. ' len' → logprob: -6.347470283508301
    10. '       ' → logprob: -6.847470283508301

Token 2106: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.12815049290657043
    2. ' length' → logprob: -2.253150463104248
    3. '_length' → logprob: -4.878150463104248
    4. 'len' → logprob: -6.128150463104248
    5. '       ' → logprob: -6.503150463104248
    6. '-length' → logprob: -7.128150463104248
    7. '   ' → logprob: -7.503150463104248
    8. ' forms' → logprob: -7.878150463104248
    9. 'form' → logprob: -7.878150463104248
    10. ')' → logprob: -8.128150939941406

Token 2107: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6415207386016846
    2. 'expression' → logprob: -1.1415207386016846
    3. 'express' → logprob: -3.6415207386016846
    4. 'form' → logprob: -3.6415207386016846
    5. 'expr' → logprob: -4.1415205001831055
    6. 'forms' → logprob: -4.1415205001831055
    7. '   ' → logprob: -4.6415205001831055
    8. 'possible' → logprob: -4.6415205001831055
    9. '=' → logprob: -5.0165205001831055
    10. ' expression' → logprob: -5.1415205001831055

Token 2108: ' an' (ID: 448)
  Prédit: 'its'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'its' → logprob: -0.4474645256996155
    2. 'self' → logprob: -1.8224644660949707
    3. 'any' → logprob: -2.5724644660949707
    4. ' its' → logprob: -2.5724644660949707
    5. 'the' → logprob: -3.5724644660949707
    6. 'a' → logprob: -5.572464466094971
    7. 'expr' → logprob: -5.572464466094971
    8. 'canonical' → logprob: -5.697464466094971
    9. ' self' → logprob: -6.197464466094971
    10. 'all' → logprob: -6.447464466094971

Token 2109: ' expression' (ID: 12973)
  Prédit: 'expression'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expression' → logprob: -0.48909619450569153
    2. ' equivalent' → logprob: -1.6140961647033691
    3. 'equ' → logprob: -2.114096164703369
    4. ' expression' → logprob: -2.739096164703369
    5. 'expr' → logprob: -6.364096164703369
    6. 'express' → logprob: -8.614096641540527
    7. 'minimal' → logprob: -8.739096641540527
    8. 'optimal' → logprob: -9.739096641540527
    9. 'string' → logprob: -9.864096641540527
    10. ' minimal' → logprob: -10.364096641540527

Token 2110: ' string' (ID: 1621)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5212060213088989
    2. ' that' → logprob: -1.146206021308899
    3. ' for' → logprob: -3.3962059020996094
    4. 'that' → logprob: -4.396205902099609
    5. '(' → logprob: -4.771205902099609
    6. ' representing' → logprob: -5.021205902099609
    7. ' with' → logprob: -5.521205902099609
    8. ' (' → logprob: -5.771205902099609
    9. '(expression' → logprob: -5.896205902099609
    10. '   ' → logprob: -6.021205902099609

Token 2111: ' equivalent' (ID: 23458)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013509237207472324
    2. ' that' → logprob: -4.388509273529053
    3. 'that' → logprob: -8.138508796691895
    4. ',' → logprob: -8.888508796691895
    5. ' with' → logprob: -9.013508796691895
    6. '.' → logprob: -9.388508796691895
    7. ' to' → logprob: -9.763508796691895
    8. ' for' → logprob: -10.013508796691895
    9. 'return' → logprob: -10.138508796691895
    10. ')' → logprob: -10.263508796691895

Token 2112: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.041163936257362366
    2. 'to' → logprob: -3.791163921356201
    3. ' to' → logprob: -4.291163921356201
    4. '(' → logprob: -6.166163921356201
    5. '   ' → logprob: -7.166163921356201
    6. '(self' → logprob: -8.16616439819336
    7. ')' → logprob: -9.04116439819336
    8. '
' → logprob: -9.16616439819336
    9. 'with' → logprob: -9.16616439819336
    10. '(expr' → logprob: -9.29116439819336

Token 2113: ' expr' (ID: 30206)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.006349642761051655
    2. 'self' → logprob: -5.381349563598633
    3. '       ' → logprob: -7.131349563598633
    4. 'the' → logprob: -8.131349563598633
    5. 'it' → logprob: -8.506349563598633
    6. ' expr' → logprob: -8.756349563598633
    7. '   ' → logprob: -9.256349563598633
    8. 'express' → logprob: -9.631349563598633
    9. 'this' → logprob: -11.131349563598633
    10. '
' → logprob: -11.256349563598633

Token 2114: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0063978503458201885
    2. '(self' → logprob: -6.006397724151611
    3. ',' → logprob: -6.131397724151611
    4. '.' → logprob: -6.756397724151611
    5. '(' → logprob: -9.00639820098877
    6. ')' → logprob: -9.38139820098877
    7. ':' → logprob: -9.63139820098877
    8. ' (' → logprob: -9.75639820098877
    9. '
' → logprob: -10.00639820098877
    10. '```' → logprob: -10.13139820098877

Token 2115: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.399378566537052e-05
    2. '```' → logprob: -10.250083923339844
    3. '
' → logprob: -11.375083923339844
    4. '`' → logprob: -12.125083923339844
    5. '        
' → logprob: -12.250083923339844
    6. '"""' → logprob: -12.375083923339844
    7. '   ' → logprob: -12.625083923339844
    8. '"' → logprob: -12.875083923339844
    9. ')' → logprob: -13.000083923339844
    10. '           ' → logprob: -13.125083923339844

Token 2116: ' The' (ID: 623)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006423805025406182
    2. 'env' → logprob: -7.7506422996521
    3. 'expr' → logprob: -8.625642776489258
    4. '```' → logprob: -11.250642776489258
    5. '
' → logprob: -11.625642776489258
    6. 'self' → logprob: -12.750642776489258
    7. '   ' → logprob: -13.125642776489258
    8. ' expr' → logprob: -14.125642776489258
    9. ' env' → logprob: -14.250642776489258
    10. '#' → logprob: -14.875642776489258

Token 2117: ' minimal' (ID: 19957)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1626473665237427
    2. 'expr' → logprob: -1.1626473665237427
    3. 'env' → logprob: -1.9126473665237427
    4. '"""
' → logprob: -2.037647247314453
    5. ' expr' → logprob: -3.412647247314453
    6. ' env' → logprob: -4.537647247314453
    7. '   ' → logprob: -4.537647247314453
    8. 'key' → logprob: -5.162647247314453
    9. ' key' → logprob: -5.287647247314453
    10. 'def' → logprob: -5.537647247314453

Token 2118: ' string' (ID: 1621)
  Prédit: ' length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.23890320956707
    2. '_length' → logprob: -2.113903284072876
    3. 'length' → logprob: -2.613903284072876
    4. ' expression' → logprob: -4.488903045654297
    5. ' forms' → logprob: -6.113903045654297
    6. ' form' → logprob: -7.238903045654297
    7. ' string' → logprob: -7.738903045654297
    8. ' expressions' → logprob: -7.738903045654297
    9. ' lengths' → logprob: -7.988903045654297
    10. '_len' → logprob: -8.113903045654297

Token 2119: ' must' (ID: 2804)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_length' → logprob: -1.0410866737365723
    2. ' length' → logprob: -1.1660866737365723
    3. ' is' → logprob: -2.4160866737365723
    4. ''' → logprob: -2.5410866737365723
    5. 'length' → logprob: -2.6660866737365723
    6. ' can' → logprob: -4.041086673736572
    7. '_' → logprob: -4.416086673736572
    8. ' _' → logprob: -4.541086673736572
    9. '_len' → logprob: -4.541086673736572
    10. ' ' → logprob: -4.791086673736572

Token 2120: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.7737628221511841
    2. 'be' → logprob: -1.148762822151184
    3. 'represent' → logprob: -2.6487627029418945
    4. 'contain' → logprob: -3.1487627029418945
    5. ' respect' → logprob: -3.6487627029418945
    6. 'return' → logprob: -4.1487627029418945
    7. ' represent' → logprob: -4.2737627029418945
    8. ' only' → logprob: -4.6487627029418945
    9. 'respect' → logprob: -4.8987627029418945
    10. ' contain' → logprob: -5.5237627029418945

Token 2121: ' valid' (ID: 4529)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.24136659502983093
    2. 'returned' → logprob: -2.6163666248321533
    3. 'in' → logprob: -3.1163666248321533
    4. 'found' → logprob: -3.8663666248321533
    5. 'the' → logprob: -3.9913666248321533
    6. 'len' → logprob: -4.491366386413574
    7. 'computed' → logprob: -4.616366386413574
    8. 'return' → logprob: -4.616366386413574
    9. ' self' → logprob: -5.866366386413574
    10. 'cached' → logprob: -6.116366386413574

Token 2122: ' under' (ID: 1641)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.843680739402771
    2. ' as' → logprob: -1.718680739402771
    3. ' and' → logprob: -1.968680739402771
    4. 'and' → logprob: -3.3436808586120605
    5. ' expression' → logprob: -3.5936808586120605
    6. 'for' → logprob: -3.7186808586120605
    7. ' in' → logprob: -3.8436808586120605
    8. ' code' → logprob: -3.9686808586120605
    9. '       ' → logprob: -4.2186808586120605
    10. '   ' → logprob: -4.4686808586120605

Token 2123: ' grammar' (ID: 41735)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.015086392872035503
    2. 'self' → logprob: -5.2650861740112305
    3. 'our' → logprob: -5.3900861740112305
    4. 'grammar' → logprob: -5.8900861740112305
    5. 'this' → logprob: -6.5150861740112305
    6. ' the' → logprob: -7.7650861740112305
    7. '       ' → logprob: -8.76508617401123
    8. 'Bool' → logprob: -9.26508617401123
    9. 'canonical' → logprob: -9.64008617401123
    10. '   ' → logprob: -10.01508617401123

Token 2124: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028044573962688446
    2. ',' → logprob: -4.778044700622559
    3. ' and' → logprob: -4.903044700622559
    4. '
' → logprob: -5.528044700622559
    5. '.' → logprob: -6.278044700622559
    6. '   ' → logprob: -7.028044700622559
    7. '(self' → logprob: -7.028044700622559
    8. '(' → logprob: -7.278044700622559
    9. ':
' → logprob: -7.403044700622559
    10. '.
' → logprob: -7.528044700622559

Token 2125: ' evaluate' (ID: 21646)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41814565658569336
    2. 'return' → logprob: -1.7931456565856934
    3. 'consistent' → logprob: -3.0431456565856934
    4. 'represent' → logprob: -3.7931456565856934
    5. 'correct' → logprob: -4.043145656585693
    6. '   ' → logprob: -4.418145656585693
    7. 'canonical' → logprob: -4.793145656585693
    8. ' return' → logprob: -4.793145656585693
    9. 'com' → logprob: -5.043145656585693
    10. ' consistent' → logprob: -5.043145656585693

Token 2126: ' ident' (ID: 3951)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.5806460380554199
    2. 'to' → logprob: -0.9556460380554199
    3. '       ' → logprob: -3.33064603805542
    4. ' correctly' → logprob: -4.70564603805542
    5. 'correct' → logprob: -6.45564603805542
    6. '(self' → logprob: -6.45564603805542
    7. '(expr' → logprob: -6.70564603805542
    8. '```' → logprob: -6.95564603805542
    9. 'equal' → logprob: -7.20564603805542
    10. ' equival' → logprob: -7.45564603805542

Token 2127: 'ically' (ID: 2905)
  Prédit: 'cal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cal' → logprob: -0.0024019356351345778
    2. 'al' → logprob: -6.377401828765869
    3. '
' → logprob: -8.252402305603027
    4. 't' → logprob: -8.377402305603027
    5. 'ical' → logprob: -10.127402305603027
    6. 'ally' → logprob: -10.502402305603027
    7. 'ty' → logprob: -10.627402305603027
    8. 'que' → logprob: -10.752402305603027
    9. '```' → logprob: -11.252402305603027
    10. 'val' → logprob: -11.377402305603027

Token 2128: ' over' (ID: 1072)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08101683109998703
    2. ' to' → logprob: -2.706016778945923
    3. 'to' → logprob: -4.831017017364502
    4. '.' → logprob: -7.331017017364502
    5. '(self' → logprob: -7.331017017364502
    6. '   ' → logprob: -7.456017017364502
    7. ',' → logprob: -7.831017017364502
    8. '(' → logprob: -8.206016540527344
    9. '
' → logprob: -9.331016540527344
    10. ')' → logprob: -9.456016540527344

Token 2129: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.10312443971633911
    2. 'Truth' → logprob: -2.3531243801116943
    3. 'the' → logprob: -6.103124618530273
    4. 'Bool' → logprob: -8.478124618530273
    5. ' all' → logprob: -9.353124618530273
    6. '       ' → logprob: -9.478124618530273
    7. 'truth' → logprob: -9.853124618530273
    8. 'self' → logprob: -9.978124618530273
    9. 'Truthy' → logprob: -9.978124618530273
    10. '4' → logprob: -10.103124618530273

Token 2130: ' environments' (ID: 30392)
  Prédit: 'env'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'env' → logprob: -0.052261196076869965
    2. 'self' → logprob: -4.3022613525390625
    3. ' env' → logprob: -4.4272613525390625
    4. '       ' → logprob: -5.1772613525390625
    5. 'en' → logprob: -5.3022613525390625
    6. 'variables' → logprob: -5.3022613525390625
    7. '   ' → logprob: -5.5522613525390625
    8. ' variables' → logprob: -7.0522613525390625
    9. ' self' → logprob: -7.4272613525390625
    10. ' environments' → logprob: -7.5522613525390625

Token 2131: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008703675703145564
    2. ':' → logprob: -7.750870227813721
    3. ',' → logprob: -8.875870704650879
    4. '.' → logprob: -9.250870704650879
    5. '   ' → logprob: -9.625870704650879
    6. ':
' → logprob: -10.000870704650879
    7. '):
' → logprob: -10.625870704650879
    8. ')' → logprob: -10.750870704650879
    9. '
' → logprob: -11.625870704650879
    10. '```' → logprob: -11.625870704650879

Token 2132: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.036524842376821e-05
    2. '
' → logprob: -10.375040054321289
    3. '```' → logprob: -11.875040054321289
    4. '   ' → logprob: -14.500040054321289
    5. '        
' → logprob: -15.000040054321289
    6. '`' → logprob: -15.125040054321289
    7. '"""' → logprob: -15.125040054321289
    8. ')' → logprob: -15.250040054321289
    9. '           ' → logprob: -15.375040054321289
    10. '`
' → logprob: -16.75004005432129

Token 2133: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.513339445111342e-05
    2. '
' → logprob: -11.125044822692871
    3. '```' → logprob: -11.250044822692871
    4. ')' → logprob: -11.875044822692871
    5. 'expr' → logprob: -12.625044822692871
    6. '   ' → logprob: -12.750044822692871
    7. '        
' → logprob: -14.000044822692871
    8. 'self' → logprob: -14.375044822692871
    9. '):
' → logprob: -14.375044822692871
    10. '`' → logprob: -14.750044822692871

Token 2134: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.999452772201039e-05
    2. '   ' → logprob: -11.500029563903809
    3. '```' → logprob: -11.875029563903809
    4. 'self' → logprob: -12.125029563903809
    5. 'expr' → logprob: -13.125029563903809
    6. 'return' → logprob: -13.750029563903809
    7. 'def' → logprob: -14.375029563903809
    8. '
' → logprob: -14.750029563903809
    9. ')' → logprob: -14.875029563903809
    10. 'e' → logprob: -15.000029563903809

Token 2135: ' #' (ID: 1069)
  Prédit: 'tt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tt' → logprob: -0.2767397165298462
    2. 'bits' → logprob: -1.7767397165298462
    3. '       ' → logprob: -2.7767395973205566
    4. 'expr' → logprob: -5.651739597320557
    5. 'table' → logprob: -6.026739597320557
    6. 'key' → logprob: -6.401739597320557
    7. 'target' → logprob: -7.026739597320557
    8. 'def' → logprob: -7.651739597320557
    9. '@' → logprob: -8.651740074157715
    10. 'env' → logprob: -8.901740074157715

Token 2136: ' We' (ID: 1416)
  Prédit: 'tt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tt' → logprob: -0.1721317619085312
    2. 'bits' → logprob: -2.2971317768096924
    3. 'key' → logprob: -3.9221317768096924
    4. '       ' → logprob: -4.047131538391113
    5. 'expr' → logprob: -4.547131538391113
    6. 'env' → logprob: -6.047131538391113
    7. 'table' → logprob: -6.047131538391113
    8. 'def' → logprob: -6.172131538391113
    9. '   ' → logprob: -6.672131538391113
    10. 'cache' → logprob: -8.297131538391113

Token 2137: ' compute' (ID: 23864)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4037216603755951
    2. 'def' → logprob: -2.153721570968628
    3. ' if' → logprob: -2.528721570968628
    4. 'if' → logprob: -2.653721570968628
    5. ' def' → logprob: -4.278721809387207
    6. '   ' → logprob: -4.528721809387207
    7. 'key' → logprob: -4.653721809387207
    8. 'cache' → logprob: -5.028721809387207
    9. ' key' → logprob: -5.153721809387207
    10. '@' → logprob: -5.403721809387207

Token 2138: ' its' (ID: 1617)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.6604771614074707
    2. 'tt' → logprob: -1.1604771614074707
    3. '       ' → logprob: -2.2854771614074707
    4. 'expr' → logprob: -3.6604771614074707
    5. '   ' → logprob: -4.285477161407471
    6. 'table' → logprob: -5.160477161407471
    7. 'self' → logprob: -5.160477161407471
    8. 'truth' → logprob: -5.285477161407471
    9. 'def' → logprob: -5.910477161407471
    10. 'key' → logprob: -6.035477161407471

Token 2139: ' truth' (ID: 12388)
  Prédit: 'truth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'truth' → logprob: -0.05631234496831894
    2. 'bits' → logprob: -3.181312322616577
    3. 'tt' → logprob: -5.056312561035156
    4. '_truth' → logprob: -5.681312561035156
    5. 'table' → logprob: -6.806312561035156
    6. '_tt' → logprob: -6.931312561035156
    7. '   ' → logprob: -8.056312561035156
    8. ' truth' → logprob: -8.181312561035156
    9. 'tr' → logprob: -8.556312561035156
    10. '_bits' → logprob: -9.431312561035156

Token 2140: ' table' (ID: 3293)
  Prédit: 'Table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Table' → logprob: -0.6918941736221313
    2. '_table' → logprob: -1.3168941736221313
    3. '       ' → logprob: -1.8168941736221313
    4. 'table' → logprob: -2.691894054412842
    5. 'bits' → logprob: -7.691894054412842
    6. ' table' → logprob: -8.69189453125
    7. '   ' → logprob: -8.81689453125
    8. ' Table' → logprob: -8.94189453125
    9. '
' → logprob: -10.31689453125
    10. '           ' → logprob: -10.56689453125

Token 2141: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3675778806209564
    2. ' =' → logprob: -1.2425779104232788
    3. '=' → logprob: -4.367578029632568
    4. 'tt' → logprob: -6.367578029632568
    5. 'table' → logprob: -6.867578029632568
    6. 'bits' → logprob: -6.992578029632568
    7. '   ' → logprob: -7.367578029632568
    8. '(tt' → logprob: -7.492578029632568
    9. 'expr' → logprob: -8.24257755279541
    10. '
' → logprob: -8.61757755279541

Token 2142: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20500095188617706
    2. 'tt' → logprob: -1.7050009965896606
    3. 'table' → logprob: -6.080000877380371
    4. 'bits' → logprob: -7.205000877380371
    5. 'expr' → logprob: -7.955000877380371
    6. 'truth' → logprob: -9.330000877380371
    7. 'tts' → logprob: -9.705000877380371
    8. '   ' → logprob: -11.580000877380371
    9. 'env' → logprob: -11.705000877380371
    10. 't' → logprob: -11.705000877380371

Token 2143: ' tt' (ID: 34181)
  Prédit: 'tt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tt' (adapté à ' tt') → logprob: -0.22757723927497864
    2. '       ' → logprob: -1.7275772094726562
    3. 'table' → logprob: -3.7275772094726562
    4. 'truth' → logprob: -6.727577209472656
    5. 'bits' → logprob: -8.227577209472656
    6. 'key' → logprob: -9.227577209472656
    7. 'tbl' → logprob: -9.727577209472656
    8. '   ' → logprob: -9.977577209472656
    9. 'target' → logprob: -10.352577209472656
    10. 'expr' → logprob: -10.352577209472656

Token 2144: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029952852055430412
    2. '=' → logprob: -3.5299527645111084
    3. '       ' → logprob: -8.529953002929688
    4. '   ' → logprob: -13.154953002929688
    5. ')' → logprob: -14.154953002929688
    6. '        ' → logprob: -14.904953002929688
    7. '           ' → logprob: -15.029953002929688
    8. ' ' → logprob: -15.029953002929688
    9. ' ' → logprob: -15.404953002929688
    10. '    ' → logprob: -15.654953002929688

Token 2145: ' Truth' (ID: 47310)
  Prédit: 'Truth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Truth' → logprob: -5.288163083605468e-05
    2. ' Truth' → logprob: -10.000052452087402
    3. '       ' → logprob: -11.875052452087402
    4. 'Truthy' → logprob: -15.125052452087402
    5. 'truth' → logprob: -16.00005340576172
    6. '_truth' → logprob: -17.25005340576172
    7. ' truth' → logprob: -17.50005340576172
    8. '        ' → logprob: -19.62505340576172
    9. '           ' → logprob: -21.12505340576172
    10. 'Trivia' → logprob: -21.25005340576172

Token 2146: 'Table' (ID: 3429)
  Prédit: 'Table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Table' → logprob: -5.9153885558771435e-06
    2. 'T' → logprob: -12.625005722045898
    3. 'Tab' → logprob: -13.125005722045898
    4. '(Table' → logprob: -15.625005722045898
    5. '<Table' → logprob: -16.0000057220459
    6. '	Table' → logprob: -16.0000057220459
    7. ' Table' → logprob: -16.3750057220459
    8. '@Table' → logprob: -17.1250057220459
    9. '_Table' → logprob: -17.5000057220459
    10. '(T' → logprob: -18.5000057220459

Token 2147: '(expr' (ID: 78746)
  Prédit: '(expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(expr' → logprob: -3.762356209335849e-05
    2. 'expr' → logprob: -10.50003719329834
    3. '(
' → logprob: -12.50003719329834
    4. '(' → logprob: -12.62503719329834
    5. '(tt' → logprob: -14.25003719329834
    6. ',' → logprob: -14.37503719329834
    7. ')' → logprob: -15.00003719329834
    8. '       ' → logprob: -15.25003719329834
    9. '.expr' → logprob: -15.25003719329834
    10. ' expr' → logprob: -15.62503719329834

Token 2148: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16043077409267426
    2. ')
' → logprob: -1.9104307889938354
    3. '       ' → logprob: -8.535430908203125
    4. ')
' → logprob: -12.410430908203125
    5. '   ' → logprob: -13.160430908203125
    6. ')

' → logprob: -13.410430908203125
    7. '
' → logprob: -14.285430908203125
    8. ')return' → logprob: -14.285430908203125
    9. '),' → logprob: -15.160430908203125
    10. ').' → logprob: -15.285430908203125

Token 2149: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008607231429778039
    2. 'if' → logprob: -7.625860691070557
    3. '
' → logprob: -8.125861167907715
    4. 'return' → logprob: -10.750861167907715
    5. ',' → logprob: -11.000861167907715
    6. '        
' → logprob: -11.000861167907715
    7. ' if' → logprob: -11.875861167907715
    8. '   ' → logprob: -12.875861167907715
    9. '```' → logprob: -13.000861167907715
    10. 'tokens' → logprob: -13.125861167907715

Token 2150: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38834628462791443
    2. 'if' → logprob: -1.1383463144302368
    3. 'bits' → logprob: -6.638346195220947
    4. 'key' → logprob: -9.638346672058105
    5. ' if' → logprob: -9.763346672058105
    6. 'existing' → logprob: -11.263346672058105
    7. 'bit' → logprob: -11.888346672058105
    8. 'keys' → logprob: -12.013346672058105
    9. 'cache' → logprob: -12.138346672058105
    10. '   ' → logprob: -12.888346672058105

Token 2151: ' We' (ID: 1416)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00044556602369993925
    2. '       ' → logprob: -7.750445365905762
    3. 'bits' → logprob: -11.375445365905762
    4. 'key' → logprob: -13.500445365905762
    5. ' if' → logprob: -14.250445365905762
    6. 'cache' → logprob: -14.875445365905762
    7. '#' → logprob: -15.250445365905762
    8. 'cached' → logprob: -15.250445365905762
    9. 'forms' → logprob: -15.750445365905762
    10. '   ' → logprob: -15.875445365905762

Token 2152: ' use' (ID: 1199)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16696298122406006
    2. '       ' → logprob: -2.4169631004333496
    3. ' if' → logprob: -2.7919631004333496
    4. 'def' → logprob: -6.66696310043335
    5. ' =' → logprob: -7.41696310043335
    6. '=' → logprob: -7.91696310043335
    7. 'return' → logprob: -8.666962623596191
    8. '   ' → logprob: -9.541962623596191
    9. ')' → logprob: -9.541962623596191
    10. '
' → logprob: -9.666962623596191

Token 2153: ' a' (ID: 261)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3016551733016968
    2. 'tt' → logprob: -1.4266551733016968
    3. '       ' → logprob: -4.301655292510986
    4. 'l' → logprob: -5.426655292510986
    5. 'lf' → logprob: -6.801655292510986
    6. ' self' → logprob: -8.301654815673828
    7. 'if' → logprob: -8.426654815673828
    8. 'len' → logprob: -8.676654815673828
    9. '           ' → logprob: -8.801654815673828
    10. ' tt' → logprob: -9.176654815673828

Token 2154: ' memo' (ID: 46393)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1343679577112198
    2. ' if' → logprob: -2.2593679428100586
    3. '       ' → logprob: -4.259367942810059
    4. 'def' → logprob: -5.384367942810059
    5. '_cache' → logprob: -7.259367942810059
    6. 'cache' → logprob: -7.509367942810059
    7. ':' → logprob: -8.384367942810059
    8. '
' → logprob: -8.509367942810059
    9. ')' → logprob: -8.884367942810059
    10. '           ' → logprob: -9.009367942810059

Token 2155: 'ized' (ID: 2110)
  Prédit: '_cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.5741333961486816
    2. ' =' → logprob: -1.1991333961486816
    3. 'ization' → logprob: -2.5741333961486816
    4. '_' → logprob: -4.199133396148682
    5. '       ' → logprob: -4.324133396148682
    6. '=' → logprob: -4.324133396148682
    7. '   ' → logprob: -5.199133396148682
    8. 'ized' → logprob: -5.699133396148682
    9. 'cache' → logprob: -5.949133396148682
    10. ':' → logprob: -6.449133396148682

Token 2156: ' bottom' (ID: 8725)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.6592522263526917
    2. 'def' → logprob: -1.2842521667480469
    3. 'cache' → logprob: -2.159252166748047
    4. 'l' → logprob: -3.534252166748047
    5. '_cache' → logprob: -3.784252166748047
    6. '
' → logprob: -4.409252166748047
    7. 'self' → logprob: -4.784252166748047
    8. 'get' → logprob: -5.034252166748047
    9. 'cached' → logprob: -5.409252166748047
    10. '@get' → logprob: -6.409252166748047

Token 2157: '-up' (ID: 7288)
  Prédit: '_cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.00612727552652359
    2. 'cache' → logprob: -5.75612735748291
    3. '_' → logprob: -6.00612735748291
    4. '_cached' → logprob: -9.50612735748291
    5. '_
' → logprob: -9.50612735748291
    6. '   ' → logprob: -9.63112735748291
    7. '       ' → logprob: -10.13112735748291
    8. '
' → logprob: -10.13112735748291
    9. '-' → logprob: -10.63112735748291
    10. '_call' → logprob: -11.00612735748291

Token 2158: ' construction' (ID: 9770)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cache' → logprob: -0.7057186365127563
    2. 'lookup' → logprob: -1.2057186365127563
    3. 'def' → logprob: -2.705718517303467
    4. ' approach' → logprob: -3.580718517303467
    5. 'get' → logprob: -3.705718517303467
    6. '_cache' → logprob: -3.705718517303467
    7. 'appro' → logprob: -4.205718517303467
    8. '
' → logprob: -4.330718517303467
    9. '       ' → logprob: -4.455718517303467
    10. '_lookup' → logprob: -5.455718517303467

Token 2159: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015504523180425167
    2. ',' → logprob: -6.876550674438477
    3. '.' → logprob: -9.376550674438477
    4. '<|end|>' → logprob: -9.501550674438477
    5. ' for' → logprob: -9.876550674438477
    6. ' to' → logprob: -10.001550674438477
    7. ' if' → logprob: -10.376550674438477
    8. 'def' → logprob: -10.501550674438477
    9. '<|end|>' → logprob: -10.626550674438477
    10. ' of' → logprob: -11.001550674438477

Token 2160: ' minimal' (ID: 19957)
  Prédit: 'tt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tt' → logprob: -0.0865103155374527
    2. 'expr' → logprob: -3.336510419845581
    3. 'self' → logprob: -3.461510419845581
    4. 'the' → logprob: -4.961510181427002
    5. 'minimal' → logprob: -5.336510181427002
    6. 'forms' → logprob: -6.461510181427002
    7. ' tt' → logprob: -7.836510181427002
    8. 'len' → logprob: -8.21151065826416
    9. '(tt' → logprob: -8.33651065826416
    10. 'express' → logprob: -8.33651065826416

Token 2161: ' forms' (ID: 11526)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.1184842437505722
    2. ' length' → logprob: -2.4934842586517334
    3. '_length' → logprob: -3.9934842586517334
    4. 'express' → logprob: -5.743484020233154
    5. 'expression' → logprob: -6.243484020233154
    6. ' forms' → logprob: -6.368484020233154
    7. 'forms' → logprob: -6.868484020233154
    8. 'form' → logprob: -7.868484020233154
    9. ' lengths' → logprob: -7.868484020233154
    10. '       ' → logprob: -7.993484020233154

Token 2162: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002205828350270167
    2. 'from' → logprob: -9.37522029876709
    3. ',' → logprob: -9.50022029876709
    4. '
' → logprob: -11.37522029876709
    5. ' for' → logprob: -12.00022029876709
    6. ' from' → logprob: -12.12522029876709
    7. 'import' → logprob: -12.25022029876709
    8. ' with' → logprob: -12.50022029876709
    9. 'for' → logprob: -13.00022029876709
    10. ':' → logprob: -13.00022029876709

Token 2163: ' avoid' (ID: 8397)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6500155925750732
    2. 'find' → logprob: -1.5250155925750732
    3. 'avoid' → logprob: -2.7750155925750732
    4. 'expl' → logprob: -3.6500155925750732
    5. 'if' → logprob: -3.6500155925750732
    6. ' avoid' → logprob: -4.150015830993652
    7. 'complete' → logprob: -4.275015830993652
    8. 'continue' → logprob: -4.400015830993652
    9. ' return' → logprob: -4.525015830993652
    10. ' find' → logprob: -4.525015830993652

Token 2164: ' recom' (ID: 19119)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -0.5784985423088074
    2. 'redu' → logprob: -1.3284986019134521
    3. 'rec' → logprob: -2.078498601913452
    4. '       ' → logprob: -4.203498363494873
    5. 'expl' → logprob: -5.953498363494873
    6. 'stack' → logprob: -6.078498363494873
    7. 'comput' → logprob: -6.078498363494873
    8. 'duplicates' → logprob: -6.078498363494873
    9. 'self' → logprob: -6.203498363494873
    10. 'Key' → logprob: -6.328498363494873

Token 2165: 'put' (ID: 772)
  Prédit: 'pute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pute' → logprob: -0.10147752612829208
    2. 'putation' → logprob: -2.72647762298584
    3. 'put' → logprob: -3.47647762298584
    4. 'puted' → logprob: -9.10147762298584
    5. 'puta' → logprob: -11.85147762298584
    6. '_put' → logprob: -12.10147762298584
    7. 'ute' → logprob: -13.35147762298584
    8. 'pose' → logprob: -13.47647762298584
    9. 'putate' → logprob: -13.72647762298584
    10. '_cache' → logprob: -14.35147762298584

Token 2166: 'ations' (ID: 929)
  Prédit: 'ation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.0778680294752121
    2. 'tion' → logprob: -3.5778679847717285
    3. 'ing' → logprob: -4.5778679847717285
    4. 'e' → logprob: -4.7028679847717285
    5. 't' → logprob: -4.7028679847717285
    6. 'ations' → logprob: -4.9528679847717285
    7. '
' → logprob: -5.9528679847717285
    8. 'ion' → logprob: -6.2028679847717285
    9. 'te' → logprob: -6.5778679847717285
    10. '   ' → logprob: -6.5778679847717285

Token 2167: ':

' (ID: 1402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00037859921576455235
    2. ',' → logprob: -8.750378608703613
    3. '
' → logprob: -9.750378608703613
    4. '.' → logprob: -10.000378608703613
    5. '<|end|>' → logprob: -10.625378608703613
    6. ' and' → logprob: -11.125378608703613
    7. '        
' → logprob: -11.125378608703613
    8. 'from' → logprob: -11.750378608703613
    9. '<|end|>' → logprob: -11.875378608703613
    10. ' if' → logprob: -12.000378608703613

Token 2168: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006971109192818403
    2. 'if' → logprob: -5.2569708824157715
    3. '@' → logprob: -6.3819708824157715
    4. ' if' → logprob: -11.00697135925293
    5. '```' → logprob: -11.38197135925293
    6. 'cache' → logprob: -13.00697135925293
    7. '   ' → logprob: -13.13197135925293
    8. 'expr' → logprob: -13.25697135925293
    9. '@if' → logprob: -14.00697135925293
    10. 'env' → logprob: -14.25697135925293

Token 2169: ' @' (ID: 759)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3151089549064636
    2. 'if' → logprob: -1.3151090145111084
    3. 'key' → logprob: -7.315108776092529
    4. '@' (adapté à ' @') → logprob: -7.315108776092529
    5. 'def' → logprob: -8.940109252929688
    6. 'stack' → logprob: -9.315109252929688
    7. ' if' → logprob: -9.440109252929688
    8. '   ' → logprob: -9.815109252929688
    9. 'memo' → logprob: -10.065109252929688
    10. 'visited' → logprob: -10.440109252929688

Token 2170: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.9361264946837764e-07
    2. 'staticmethod' → logprob: -16.125
    3. ' l' → logprob: -20.125
    4. '
' → logprob: -20.5
    5. 'property' → logprob: -20.625
    6. 'classmethod' → logprob: -21.0
    7. '```' → logprob: -23.5
    8. 'lr' → logprob: -23.5
    9. 'lf' → logprob: -23.625
    10. 'cached' → logprob: -23.75

Token 2171: 'ru' (ID: 1942)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.031773220747709274
    2. 'r' → logprob: -3.906773328781128
    3. 'ru' → logprob: -5.031773090362549
    4. 'staticmethod' → logprob: -5.406773090362549
    5. '```' → logprob: -10.406773567199707
    6. 'fun' → logprob: -10.906773567199707
    7. 'classmethod' → logprob: -11.031773567199707
    8. 'property' → logprob: -11.031773567199707
    9. 'cache' → logprob: -11.406773567199707
    10. 'cached' → logprob: -11.656773567199707

Token 2172: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.32706812024116516
    2. 'cache' → logprob: -1.3270680904388428
    3. 'cached' → logprob: -4.327068328857422
    4. '_cached' → logprob: -7.702068328857422
    5. 'max' → logprob: -10.577068328857422
    6. 'c' → logprob: -11.702068328857422
    7. '```' → logprob: -11.702068328857422
    8. 'def' → logprob: -13.577068328857422
    9. '
' → logprob: -13.577068328857422
    10. '(cache' → logprob: -13.702068328857422

Token 2173: '(None' (ID: 65126)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.027968991547822952
    2. '(None' → logprob: -4.152968883514404
    3. '
' → logprob: -4.527968883514404
    4. '       ' → logprob: -7.527968883514404
    5. 'None' → logprob: -8.902969360351562
    6. 'max' → logprob: -9.402969360351562
    7. '        
' → logprob: -9.527969360351562
    8. '   ' → logprob: -9.652969360351562
    9. '(max' → logprob: -10.402969360351562
    10. '()
' → logprob: -10.527969360351562

Token 2174: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7339329123497009
    2. ')
' → logprob: -0.7339329123497009
    3. 'def' → logprob: -3.8589329719543457
    4. '       ' → logprob: -4.108932971954346
    5. '(None' → logprob: -6.733932971954346
    6. '
' → logprob: -7.733932971954346
    7. '   ' → logprob: -8.733932495117188
    8. '):
' → logprob: -9.233932495117188
    9. ' def' → logprob: -9.233932495117188
    10. '           ' → logprob: -9.358932495117188

Token 2175: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38270461559295654
    2. 'def' → logprob: -1.3827046155929565
    3. '
' → logprob: -2.757704734802246
    4. '   ' → logprob: -5.632704734802246
    5. '           ' → logprob: -10.382704734802246
    6. '
' → logprob: -11.882704734802246
    7. '	def' → logprob: -12.007704734802246
    8. '    
' → logprob: -12.007704734802246
    9. '        
' → logprob: -12.007704734802246
    10. '```' → logprob: -12.007704734802246

Token 2176: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.10956548154354095
    2. '
' → logprob: -2.359565496444702
    3. '       ' → logprob: -4.734565258026123
    4. '           ' → logprob: -8.109565734863281
    5. '        
' → logprob: -9.234565734863281
    6. '   ' → logprob: -9.859565734863281
    7. '	def' → logprob: -11.109565734863281
    8. '    
' → logprob: -11.359565734863281
    9. '            
' → logprob: -11.484565734863281
    10. '
' → logprob: -11.984565734863281

Token 2177: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -1.6656655073165894
    2. 'minimal' → logprob: -1.7906655073165894
    3. 'compute' → logprob: -2.040665626525879
    4. 'helper' → logprob: -2.290665626525879
    5. '_min' → logprob: -2.290665626525879
    6. 'get' → logprob: -2.665665626525879
    7. 'min' → logprob: -2.790665626525879
    8. 'solve' → logprob: -2.790665626525879
    9. 'search' → logprob: -3.665665626525879
    10. '_helper' → logprob: -3.665665626525879

Token 2178: '(bits' (ID: 170698)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5360106825828552
    2. '(node' → logprob: -1.4110107421875
    3. '(expr' → logprob: -1.7860107421875
    4. '(' → logprob: -5.9110107421875
    5. '(expression' → logprob: -8.7860107421875
    6. '(e' → logprob: -9.2860107421875
    7. '(d' → logprob: -9.6610107421875
    8. 'def' → logprob: -10.0360107421875
    9. '(obj' → logprob: -10.1610107421875
    10. '(root' → logprob: -10.2860107421875

Token 2179: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6137484312057495
    2. '):
' → logprob: -1.1137484312057495
    3. '(bits' → logprob: -2.363748550415039
    4. ',' → logprob: -3.988748550415039
    5. ')' → logprob: -4.488748550415039
    6. '       ' → logprob: -5.363748550415039
    7. ':' → logprob: -6.863748550415039
    8. '   ' → logprob: -7.988748550415039
    9. '):

' → logprob: -9.363748550415039
    10. '=' → logprob: -9.488748550415039

Token 2180: ' int' (ID: 677)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.9488440155982971
    2. 'int' → logprob: -1.4488439559936523
    3. '
' → logprob: -2.5738439559936523
    4. '):
' → logprob: -2.6988439559936523
    5. ')' → logprob: -2.6988439559936523
    6. '0' → logprob: -3.0738439559936523
    7. '       ' → logprob: -4.198843955993652
    8. ' bits' → logprob: -4.573843955993652
    9. '   ' → logprob: -4.698843955993652
    10. '):' → logprob: -4.698843955993652

Token 2181: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10565030574798584
    2. '):' → logprob: -2.4806504249572754
    3. '):
' → logprob: -4.105650424957275
    4. '       ' → logprob: -10.480649948120117
    5. '   ' → logprob: -10.480649948120117
    6. ')->' → logprob: -11.605649948120117
    7. '):
' → logprob: -11.730649948120117
    8. ',' → logprob: -11.730649948120117
    9. ':' → logprob: -12.105649948120117
    10. '):

' → logprob: -13.355649948120117

Token 2182: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013558330247178674
    2. ' if' → logprob: -7.7513556480407715
    3. '           ' → logprob: -8.25135612487793
    4. '   ' → logprob: -8.37635612487793
    5. ':' → logprob: -9.37635612487793
    6. '        ' → logprob: -9.37635612487793
    7. '    ' → logprob: -9.87635612487793
    8. '        
' → logprob: -10.25135612487793
    9. ')' → logprob: -10.75135612487793
    10. 'if' → logprob: -10.87635612487793

Token 2183: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31441977620124817
    2. 'if' → logprob: -1.6894197463989258
    3. ' if' → logprob: -2.564419746398926
    4. '           ' → logprob: -5.064419746398926
    5. '   ' → logprob: -6.939419746398926
    6. 'return' → logprob: -7.939419746398926
    7. '               ' → logprob: -8.689419746398926
    8. '
' → logprob: -8.939419746398926
    9. '\n' → logprob: -9.439419746398926
    10. '```' → logprob: -10.314419746398926

Token 2184: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24691183865070343
    2. '       ' → logprob: -1.996911883354187
    3. 'if' → logprob: -2.4969117641448975
    4. ' if' → logprob: -7.746912002563477
    5. '   ' → logprob: -8.871912002563477
    6. '               ' → logprob: -8.996912002563477
    7. '```' → logprob: -14.746912002563477
    8. 'return' → logprob: -15.246912002563477
    9. '#' → logprob: -15.246912002563477
    10. '
' → logprob: -15.496912002563477

Token 2185: ' Return' (ID: 6318)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04124859720468521
    2. '       ' → logprob: -3.4162485599517822
    3. 'bits' → logprob: -5.666248798370361
    4. ' if' → logprob: -6.416248798370361
    5. '           ' → logprob: -7.166248798370361
    6. '#' → logprob: -7.166248798370361
    7. '   ' → logprob: -8.166248321533203
    8. '
' → logprob: -8.666248321533203
    9. '               ' → logprob: -8.791248321533203
    10. 'keys' → logprob: -9.291248321533203

Token 2186: ' a' (ID: 261)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.5201815962791443
    2. 'self' → logprob: -1.270181655883789
    3. '{' → logprob: -3.270181655883789
    4. ' self' → logprob: -3.770181655883789
    5. '           ' → logprob: -3.895181655883789
    6. ' set' → logprob: -4.520181655883789
    7. ' {' → logprob: -4.895181655883789
    8. '{
' → logprob: -5.270181655883789
    9. 'forms' → logprob: -5.520181655883789
    10. ' minimal' → logprob: -5.520181655883789

Token 2187: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -7.505351095460355e-05
    2. '
' → logprob: -10.625075340270996
    3. '           ' → logprob: -10.625075340270996
    4. ' set' → logprob: -11.125075340270996
    5. '       ' → logprob: -12.125075340270996
    6. '(set' → logprob: -13.125075340270996
    7. 'Set' → logprob: -14.000075340270996
    8. '   ' → logprob: -14.000075340270996
    9. '```' → logprob: -14.250075340270996
    10. '               ' → logprob: -14.875075340270996

Token 2188: ' of' (ID: 328)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.09386992454528809
    2. '()
' → logprob: -3.218869924545288
    3. '{' → logprob: -4.093870162963867
    4. ' of' → logprob: -4.718870162963867
    5. '(
' → logprob: -5.343870162963867
    6. '           ' → logprob: -5.468870162963867
    7. '[int' → logprob: -5.718870162963867
    8. 'of' → logprob: -6.093870162963867
    9. '(' → logprob: -6.218870162963867
    10. '():' → logprob: -6.343870162963867

Token 2189: ' minimal' (ID: 19957)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.4904727637767792
    2. 'expr' → logprob: -1.7404727935791016
    3. 'expression' → logprob: -2.3654727935791016
    4. 'strings' → logprob: -2.7404727935791016
    5. 'minimal' → logprob: -3.3654727935791016
    6. 'canonical' → logprob: -4.865472793579102
    7. 'express' → logprob: -5.990472793579102
    8. 'forms' → logprob: -6.240472793579102
    9. '(str' → logprob: -6.490472793579102
    10. 'form' → logprob: -6.615472793579102

Token 2190: ' length' (ID: 5517)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.34030482172966003
    2. 'strings' → logprob: -2.0903048515319824
    3. 'forms' → logprob: -2.8403048515319824
    4. 'expression' → logprob: -3.5903048515319824
    5. 'str' → logprob: -3.9653048515319824
    6. 'express' → logprob: -4.090304851531982
    7. 'form' → logprob: -4.965304851531982
    8. ' expr' → logprob: -5.215304851531982
    9. ' forms' → logprob: -5.215304851531982
    10. ' strings' → logprob: -5.340304851531982

Token 2191: ' expression' (ID: 12973)
  Prédit: 'express'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'express' → logprob: -0.5733533501625061
    2. 'forms' → logprob: -1.9483532905578613
    3. '(
' → logprob: -2.6983532905578613
    4. '{
' → logprob: -3.3233532905578613
    5. ' expressions' → logprob: -3.5733532905578613
    6. '{' → logprob: -3.8233532905578613
    7. '()' → logprob: -3.8233532905578613
    8. ' forms' → logprob: -3.9483532905578613
    9. 'expr' → logprob: -4.073353290557861
    10. 'strings' → logprob: -4.198353290557861

Token 2192: ' strings' (ID: 18279)
  Prédit: 'strings'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strings' → logprob: -0.1921512484550476
    2. 's' → logprob: -2.1921513080596924
    3. ' strings' → logprob: -3.4421513080596924
    4. 'forms' → logprob: -4.192151069641113
    5. '_strings' → logprob: -4.817151069641113
    6. ' forms' → logprob: -5.317151069641113
    7. '           ' → logprob: -6.692151069641113
    8. 'str' → logprob: -7.442151069641113
    9. '(strings' → logprob: -7.942151069641113
    10. ')' → logprob: -8.317151069641113

Token 2193: ' representing' (ID: 25389)
  Prédit: '(bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(bits' → logprob: -0.016148271039128304
    2. '           ' → logprob: -4.391148090362549
    3. ' for' → logprob: -6.516148090362549
    4. '(b' → logprob: -7.391148090362549
    5. '(' → logprob: -7.891148090362549
    6. 'for' → logprob: -8.016148567199707
    7. '               ' → logprob: -8.266148567199707
    8. ' (' → logprob: -9.016148567199707
    9. ',' → logprob: -9.141148567199707
    10. '(
' → logprob: -9.766148567199707

Token 2194: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.00027134892297908664
    2. ' bits' → logprob: -8.625271797180176
    3. '           ' → logprob: -9.500271797180176
    4. '(bits' → logprob: -11.375271797180176
    5. 'the' → logprob: -12.875271797180176
    6. '               ' → logprob: -14.125271797180176
    7. '       ' → logprob: -14.125271797180176
    8. '   ' → logprob: -15.125271797180176
    9. '```' → logprob: -15.125271797180176
    10. '
' → logprob: -16.00027084350586

Token 2195: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14293670654296875
    2. '(bits' → logprob: -3.0179367065429688
    3. '):
' → logprob: -3.2679367065429688
    4. ')' → logprob: -4.767936706542969
    5. ':' → logprob: -4.767936706542969
    6. '       ' → logprob: -4.767936706542969
    7. ':
' → logprob: -5.017936706542969
    8. ',' → logprob: -6.017936706542969
    9. '):' → logprob: -6.142936706542969
    10. '(' → logprob: -6.642936706542969

Token 2196: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15278217196464539
    2. '               ' → logprob: -2.4027822017669678
    3. '
' → logprob: -3.5277822017669678
    4. '\n' → logprob: -5.402781963348389
    5. '       ' → logprob: -6.152781963348389
    6. ':' → logprob: -6.277781963348389
    7. '   ' → logprob: -6.402781963348389
    8. '```' → logprob: -6.402781963348389
    9. '            
' → logprob: -6.527781963348389
    10. ' 
' → logprob: -6.652781963348389

Token 2197: ' """
' (ID: 7037)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7416926622390747
    2. '           ' → logprob: -1.3666926622390747
    3. '       ' → logprob: -2.116692543029785
    4. ':' → logprob: -3.116692543029785
    5. '):
' → logprob: -3.991692543029785
    6. ')' → logprob: -3.991692543029785
    7. '):' → logprob: -4.241692543029785
    8. '               ' → logprob: -4.366692543029785
    9. ':
' → logprob: -4.866692543029785
    10. '```' → logprob: -4.991692543029785

Token 2198: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003347986377775669
    2. '           ' → logprob: -6.503347873687744
    3. '        ' → logprob: -7.753347873687744
    4. '        
' → logprob: -7.878347873687744
    5. '   ' → logprob: -8.253348350524902
    6. '               ' → logprob: -9.253348350524902
    7. '    ' → logprob: -9.503348350524902
    8. '\n' → logprob: -9.628348350524902
    9. ' 
' → logprob: -9.628348350524902
    10. ')' → logprob: -10.128348350524902

Token 2199: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16074904799461365
    2. 'if' → logprob: -1.910749077796936
    3. '       ' → logprob: -7.9107489585876465
    4. ' if' → logprob: -8.910749435424805
    5. '   ' → logprob: -11.160749435424805
    6. '#' (adapté à ' #') → logprob: -11.910749435424805
    7. '               ' → logprob: -13.910749435424805
    8. '          ' → logprob: -14.285749435424805
    9. '            
' → logprob: -16.285749435424805
    10. 'If' → logprob: -16.285749435424805

Token 2200: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02997748926281929
    2. '           ' → logprob: -3.529977560043335
    3. ' if' → logprob: -8.904977798461914
    4. '#' → logprob: -9.904977798461914
    5. '       ' → logprob: -10.154977798461914
    6. '```' → logprob: -13.779977798461914
    7. 'If' → logprob: -14.404977798461914
    8. '   ' → logprob: -14.529977798461914
    9. '
' → logprob: -14.779977798461914
    10. '               ' → logprob: -16.904977798461914

Token 2201: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.0019639628008008003
    2. ' bits' → logprob: -6.251964092254639
    3. '           ' → logprob: -10.50196361541748
    4. '       ' → logprob: -12.25196361541748
    5. '   ' → logprob: -13.37696361541748
    6. '               ' → logprob: -14.37696361541748
    7. 'bit' → logprob: -15.12696361541748
    8. '(bits' → logprob: -15.75196361541748
    9. '          ' → logprob: -16.001964569091797
    10. '         ' → logprob: -16.376964569091797

Token 2202: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.38688749074935913
    2. ' in' → logprob: -1.136887550354004
    3. '==' → logprob: -12.011887550354004
    4. '           ' → logprob: -12.761887550354004
    5. ')' → logprob: -13.136887550354004
    6. '_in' → logprob: -13.386887550354004
    7. '       ' → logprob: -14.386887550354004
    8. '
' → logprob: -14.511887550354004
    9. '	in' → logprob: -14.511887550354004
    10. 'In' → logprob: -14.636887550354004

Token 2203: ' cache' (ID: 11956)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -8.590104698669165e-05
    2. ' self' → logprob: -9.500085830688477
    3. '           ' → logprob: -11.750085830688477
    4. 'dfs' → logprob: -13.375085830688477
    5. 'cache' → logprob: -14.250085830688477
    6. '_cache' → logprob: -15.125085830688477
    7. '       ' → logprob: -15.375085830688477
    8. '
' → logprob: -16.500085830688477
    9. '_self' → logprob: -16.875085830688477
    10. '               ' → logprob: -17.125085830688477

Token 2204: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0408635139465332
    2. ':
' → logprob: -1.1658635139465332
    3. 'in' → logprob: -1.9158635139465332
    4. ' in' → logprob: -2.540863513946533
    5. ':' → logprob: -2.665863513946533
    6. '               ' → logprob: -3.415863513946533
    7. ':=' → logprob: -5.915863513946533
    8. '):
' → logprob: -7.040863513946533
    9. ',' → logprob: -7.165863513946533
    10. '==' → logprob: -7.540863513946533

Token 2205: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.10344964265823364
    2. '               ' → logprob: -2.478449583053589
    3. ' return' → logprob: -4.478449821472168
    4. '           ' → logprob: -5.853449821472168
    5. 'if' → logprob: -9.728449821472168
    6. '{return' → logprob: -9.978449821472168
    7. ':return' → logprob: -10.103449821472168
    8. 'tokens' → logprob: -11.603449821472168
    9. '```' → logprob: -12.603449821472168
    10. '{
' → logprob: -12.603449821472168

Token 2206: ' cached' (ID: 39472)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1621071845293045
    2. '           ' → logprob: -1.912107229232788
    3. 'return' → logprob: -6.537106990814209
    4. ' self' → logprob: -7.787106990814209
    5. '               ' → logprob: -11.412107467651367
    6. '(self' → logprob: -13.537107467651367
    7. '       ' → logprob: -13.662107467651367
    8. ' return' → logprob: -13.787107467651367
    9. '   ' → logprob: -14.037107467651367
    10. '{' → logprob: -14.787107467651367

Token 2207: ' forms' (ID: 11526)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.14345261454582214
    2. ':' → logprob: -2.6434526443481445
    3. '           ' → logprob: -3.6434526443481445
    4. '[' → logprob: -4.1434526443481445
    5. '(bits' → logprob: -4.6434526443481445
    6. '               ' → logprob: -6.0184526443481445
    7. '):
' → logprob: -6.3934526443481445
    8. 'bits' → logprob: -6.6434526443481445
    9. '[b' → logprob: -7.0184526443481445
    10. '[key' → logprob: -7.3934526443481445

Token 2208: ' directly' (ID: 8516)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011002069804817438
    2. ':' → logprob: -7.126100063323975
    3. ':
' → logprob: -8.501100540161133
    4. ',' → logprob: -10.376100540161133
    5. '               ' → logprob: -10.751100540161133
    6. ' if' → logprob: -11.376100540161133
    7. '          ' → logprob: -12.001100540161133
    8. 'if' → logprob: -12.251100540161133
    9. '       ' → logprob: -12.376100540161133
    10. '.' → logprob: -12.751100540161133

Token 2209: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.200166469876422e-06
    2. '       ' → logprob: -12.750004768371582
    3. 'if' → logprob: -13.250004768371582
    4. '          ' → logprob: -15.250004768371582
    5. '               ' → logprob: -15.625004768371582
    6. ',' → logprob: -16.7500057220459
    7. ' if' → logprob: -17.0000057220459
    8. ':' → logprob: -18.2500057220459
    9. '                   ' → logprob: -18.3750057220459
    10. '		' → logprob: -18.3750057220459

Token 2210: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.8206473871250637e-05
    2. '       ' → logprob: -10.625028610229492
    3. 'if' → logprob: -12.750028610229492
    4. '               ' → logprob: -14.500028610229492
    5. ' if' → logprob: -15.625028610229492
    6. '          ' → logprob: -15.875028610229492
    7. '```' → logprob: -16.750028610229492
    8. '   ' → logprob: -16.750028610229492
    9. '                   ' → logprob: -18.500028610229492
    10. ',' → logprob: -18.750028610229492

Token 2211: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003186743939295411
    2. 'if' (adapté à ' if') → logprob: -5.7531867027282715
    3. ' if' → logprob: -12.12818717956543
    4. '       ' → logprob: -12.75318717956543
    5. '               ' → logprob: -14.62818717956543
    6. '          ' → logprob: -15.87818717956543
    7. '   ' → logprob: -16.12818717956543
    8. '                   ' → logprob: -17.75318717956543
    9. 'return' → logprob: -17.75318717956543
    10. '         ' → logprob: -19.37818717956543

Token 2212: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.04916587844491005
    2. ' bits' → logprob: -3.049165964126587
    3. '           ' → logprob: -7.549165725708008
    4. '       ' → logprob: -10.924165725708008
    5. '(bits' → logprob: -11.174165725708008
    6. 'self' → logprob: -11.799165725708008
    7. '   ' → logprob: -12.674165725708008
    8. '               ' → logprob: -13.049165725708008
    9. 'b' → logprob: -13.299165725708008
    10. '          ' → logprob: -13.549165725708008

Token 2213: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11400886625051498
    2. 'in' → logprob: -2.239008903503418
    3. '           ' → logprob: -6.989008903503418
    4. ' ==' → logprob: -9.739008903503418
    5. '==' → logprob: -9.864008903503418
    6. ')' → logprob: -10.114008903503418
    7. '   ' → logprob: -10.489008903503418
    8. '       ' → logprob: -10.614008903503418
    9. ' not' → logprob: -11.739008903503418
    10. '               ' → logprob: -12.114008903503418

Token 2214: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0003017385315615684
    2. ' self' → logprob: -8.125301361083984
    3. '           ' → logprob: -12.125301361083984
    4. '
' → logprob: -15.750301361083984
    5. '(self' → logprob: -16.125301361083984
    6. '[self' → logprob: -16.875301361083984
    7. '               ' → logprob: -18.000301361083984
    8. 'Self' → logprob: -18.250301361083984
    9. '=self' → logprob: -18.500301361083984
    10. '_self' → logprob: -19.000301361083984

Token 2215: '.cache' (ID: 37175)
  Prédit: '.cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cache' → logprob: -0.0010334034450352192
    2. 'cache' → logprob: -6.876033306121826
    3. '       ' → logprob: -15.876033782958984
    4. '.' → logprob: -16.126033782958984
    5. '	cache' → logprob: -16.251033782958984
    6. '_cache' → logprob: -16.251033782958984
    7. '
' → logprob: -16.501033782958984
    8. ' cache' → logprob: -16.501033782958984
    9. 'CACHE' → logprob: -16.626033782958984
    10. 'Cache' → logprob: -16.751033782958984

Token 2216: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.37295371294021606
    2. '               ' → logprob: -1.4979536533355713
    3. ':
' → logprob: -2.6229536533355713
    4. '           ' → logprob: -4.37295389175415
    5. ':return' → logprob: -6.37295389175415
    6. '[' → logprob: -8.372953414916992
    7. '):' → logprob: -8.497953414916992
    8. '):
' → logprob: -9.122953414916992
    9. 'return' → logprob: -9.997953414916992
    10. '              ' → logprob: -10.122953414916992

Token 2217: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010153264738619328
    2. ':' → logprob: -4.760153293609619
    3. ':
' → logprob: -7.260153293609619
    4. '           ' → logprob: -7.385153293609619
    5. '              ' → logprob: -9.135152816772461
    6. '            ' → logprob: -10.760152816772461
    7. ':return' → logprob: -10.760152816772461
    8. 'return' → logprob: -11.260152816772461
    9. '                ' → logprob: -11.385152816772461
    10. '[' → logprob: -11.635152816772461

Token 2218: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6935131549835205
    2. 'return' → logprob: -0.6935131549835205
    3. ' return' → logprob: -7.943512916564941
    4. '                   ' → logprob: -12.443512916564941
    5. '{return' → logprob: -12.818512916564941
    6. '   ' → logprob: -13.693512916564941
    7. '           ' → logprob: -13.818512916564941
    8. '       ' → logprob: -14.068512916564941
    9. ':return' → logprob: -14.193512916564941
    10. '              ' → logprob: -15.443512916564941

Token 2219: ' prune' (ID: 140388)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.002502651885151863
    2. '               ' → logprob: -6.00250244140625
    3. ' return' → logprob: -11.00250244140625
    4. '           ' → logprob: -11.62750244140625
    5. '   ' → logprob: -14.25250244140625
    6. '```' → logprob: -15.37750244140625
    7. 'forms' → logprob: -15.87750244140625
    8. '       ' → logprob: -16.50250244140625
    9. '                   ' → logprob: -16.75250244140625
    10. 'if' → logprob: -16.87750244140625

Token 2220: ' to' (ID: 316)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5979849696159363
    2. '{' → logprob: -1.722985029220581
    3. '           ' → logprob: -2.597985029220581
    4. '               ' → logprob: -2.972985029220581
    5. 'self' → logprob: -3.597985029220581
    6. 'return' → logprob: -3.722985029220581
    7. 'minimal' → logprob: -3.847985029220581
    8. '=' → logprob: -4.347984790802002
    9. '=min' → logprob: -4.597984790802002
    10. ' =' → logprob: -4.722984790802002

Token 2221: ' minimal' (ID: 19957)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.6693933010101318
    2. '{' → logprob: -1.4193933010101318
    3. '{x' → logprob: -1.4193933010101318
    4. '{
' → logprob: -6.044393539428711
    5. 'set' → logprob: -6.919393539428711
    6. 'minimal' → logprob: -7.919393539428711
    7. 'x' → logprob: -8.294393539428711
    8. '{k' → logprob: -8.919393539428711
    9. '_min' → logprob: -10.044393539428711
    10. 'minimum' → logprob: -10.169393539428711

Token 2222: ' length' (ID: 5517)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.772704005241394
    2. 'forms' → logprob: -1.897704005241394
    3. '_forms' → logprob: -2.0227041244506836
    4. '_len' → logprob: -2.1477041244506836
    5. 'length' → logprob: -3.0227041244506836
    6. 'len' → logprob: -3.8977041244506836
    7. ' =' → logprob: -4.272704124450684
    8. ' forms' → logprob: -4.397704124450684
    9. ':' → logprob: -4.647704124450684
    10. '_expr' → logprob: -5.522704124450684

Token 2223: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14684385061264038
    2. 'min' → logprob: -2.521843910217285
    3. 'forms' → logprob: -3.896843910217285
    4. 'minimal' → logprob: -4.146843910217285
    5. ' =' → logprob: -5.021843910217285
    6. '           ' → logprob: -5.646843910217285
    7. 'filtered' → logprob: -6.521843910217285
    8. '=' → logprob: -6.521843910217285
    9. ':' → logprob: -6.646843910217285
    10. '=min' → logprob: -6.646843910217285

Token 2224: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.13569191098213196
    2. 'forms' → logprob: -3.5106918811798096
    3. '           ' → logprob: -3.6356918811798096
    4. ' forms' → logprob: -3.7606918811798096
    5. ' =' → logprob: -3.8856918811798096
    6. 'min' → logprob: -5.260692119598389
    7. ':
' → logprob: -5.760692119598389
    8. '=' → logprob: -5.760692119598389
    9. ':' → logprob: -6.135692119598389
    10. '=min' → logprob: -6.135692119598389

Token 2225: ' forms' (ID: 11526)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5222160816192627
    2. '               ' → logprob: -1.1472160816192627
    3. 'forms' (adapté à ' forms') → logprob: -2.8972160816192627
    4. '           ' → logprob: -4.522215843200684
    5. 'minimal' → logprob: -4.522215843200684
    6. 'return' → logprob: -5.897215843200684
    7. ' min' → logprob: -6.147215843200684
    8. 'cached' → logprob: -6.147215843200684
    9. 'mins' → logprob: -6.522215843200684
    10. ' forms' → logprob: -7.522215843200684

Token 2226: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.39245089888572693
    2. ' =' → logprob: -1.1424509286880493
    3. '           ' → logprob: -5.39245080947876
    4. '               ' → logprob: -7.01745080947876
    5. '=
' → logprob: -10.892451286315918
    6. '=min' → logprob: -11.267451286315918
    7. '==' → logprob: -11.642451286315918
    8. '=len' → logprob: -11.892451286315918
    9. '                   ' → logprob: -11.892451286315918
    10. ':' → logprob: -11.892451286315918

Token 2227: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07022807747125626
    2. '{' → logprob: -2.695228099822998
    3. 'set' → logprob: -9.32022762298584
    4. 'min' → logprob: -9.57022762298584
    5. ' self' → logprob: -10.19522762298584
    6. '           ' → logprob: -10.44522762298584
    7. '{
' → logprob: -10.57022762298584
    8. ' {' → logprob: -11.32022762298584
    9. '{x' → logprob: -11.57022762298584
    10. '(self' → logprob: -12.19522762298584

Token 2228: '.cache' (ID: 37175)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cache' → logprob: -0.2847607731819153
    2. '.cache' → logprob: -1.4097607135772705
    3. '[' → logprob: -5.65976095199585
    4. '_cache' → logprob: -9.784760475158691
    5. '.bits' → logprob: -10.409760475158691
    6. 'bits' → logprob: -11.409760475158691
    7. ' cache' → logprob: -12.034760475158691
    8. '	cache' → logprob: -12.534760475158691
    9. 'CACHE' → logprob: -13.409760475158691
    10. '.' → logprob: -13.534760475158691

Token 2229: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.759734732331708e-05
    2. 'bits' → logprob: -11.000017166137695
    3. '[b' → logprob: -15.375017166137695
    4. '   ' → logprob: -15.500017166137695
    5. '
' → logprob: -16.500017166137695
    6. '[
' → logprob: -16.875017166137695
    7. '           ' → logprob: -16.875017166137695
    8. '(bits' → logprob: -16.875017166137695
    9. '       ' → logprob: -17.125017166137695
    10. ' [' → logprob: -17.625017166137695

Token 2230: 'bits' (ID: 24043)
  Prédit: 'bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -1.8624639324116288e-06
    2. '[' → logprob: -13.625001907348633
    3. '(bits' → logprob: -15.000001907348633
    4. ' bits' → logprob: -16.000001907348633
    5. '   ' → logprob: -16.250001907348633
    6. '```' → logprob: -16.875001907348633
    7. '
' → logprob: -17.750001907348633
    8. 'bytes' → logprob: -18.125001907348633
    9. '.bits' → logprob: -18.125001907348633
    10. '           ' → logprob: -18.875001907348633

Token 2231: ']
' (ID: 1592)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4038274586200714
    2. ']
' → logprob: -1.528827428817749
    3. '               ' → logprob: -2.778827428817749
    4. '
' → logprob: -3.278827428817749
    5. ')
' → logprob: -5.028827667236328
    6. ']' → logprob: -5.028827667236328
    7. '                   ' → logprob: -7.653827667236328
    8. '       ' → logprob: -7.903827667236328
    9. ' if' → logprob: -7.903827667236328
    10. 'if' → logprob: -8.028827667236328

Token 2232: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001576044363901019
    2. '           ' → logprob: -6.501575946807861
    3. '
' → logprob: -10.37657642364502
    4. '                   ' → logprob: -11.12657642364502
    5. '       ' → logprob: -12.00157642364502
    6. 'return' → logprob: -12.25157642364502
    7. ' =' → logprob: -12.50157642364502
    8. ',' → logprob: -12.50157642364502
    9. '```' → logprob: -13.37657642364502
    10. '                
' → logprob: -13.62657642364502

Token 2233: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.4347589313983917
    2. '               ' → logprob: -1.0597589015960693
    3. ' min' → logprob: -5.684759140014648
    4. '           ' → logprob: -7.059759140014648
    5. 'minimal' → logprob: -7.309759140014648
    6. 'if' → logprob: -7.684759140014648
    7. 'return' → logprob: -8.684759140014648
    8. '[min' → logprob: -9.559759140014648
    9. 'filtered' → logprob: -9.934759140014648
    10. '=min' → logprob: -9.934759140014648

Token 2234: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.0031262633856385946
    2. '_length' → logprob: -6.37812614440918
    3. '_' → logprob: -7.62812614440918
    4. 'len' → logprob: -8.00312614440918
    5. '_forms' → logprob: -8.00312614440918
    6. 'Len' → logprob: -10.00312614440918
    7. '(len' → logprob: -10.25312614440918
    8. '_size' → logprob: -10.37812614440918
    9. '_lengths' → logprob: -10.50312614440918
    10. '_l' → logprob: -10.62812614440918

Token 2235: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04038352891802788
    2. ' =' → logprob: -3.2903835773468018
    3. '           ' → logprob: -6.915383338928223
    4. '==' → logprob: -7.165383338928223
    5. '               ' → logprob: -8.415383338928223
    6. ')' → logprob: -9.165383338928223
    7. ' ==' → logprob: -9.290383338928223
    8. '   ' → logprob: -10.415383338928223
    9. '                   ' → logprob: -10.540383338928223
    10. '       ' → logprob: -11.040383338928223

Token 2236: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0001584850688232109
    2. ' min' → logprob: -8.750158309936523
    3. 'max' → logprob: -19.250158309936523
    4. 'minimum' → logprob: -19.625158309936523
    5. '(min' → logprob: -20.125158309936523
    6. '	min' → logprob: -20.500158309936523
    7. '   ' → logprob: -20.625158309936523
    8. 'minimal' → logprob: -21.125158309936523
    9. '_min' → logprob: -21.375158309936523
    10. '.min' → logprob: -22.000158309936523

Token 2237: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.00012523093027994037
    2. 'len' → logprob: -9.00012493133545
    3. '[len' → logprob: -13.62512493133545
    4. '(map' → logprob: -15.50012493133545
    5. '(' → logprob: -15.75012493133545
    6. '(length' → logprob: -16.375125885009766
    7. ' len' → logprob: -17.375125885009766
    8. '(forms' → logprob: -18.125125885009766
    9. '([' → logprob: -18.625125885009766
    10. '(
' → logprob: -18.750125885009766

Token 2238: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.16160264611244202
    2. '(f' → logprob: -2.036602735519409
    3. '(forms' → logprob: -4.28660249710083
    4. '(form' → logprob: -6.16160249710083
    5. 'x' → logprob: -6.41160249710083
    6. 'f' → logprob: -7.66160249710083
    7. 'forms' → logprob: -7.66160249710083
    8. 'form' → logprob: -8.786602973937988
    9. '(' → logprob: -9.786602973937988
    10. '(s' → logprob: -10.036602973937988

Token 2239: ')' (ID: 8)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.15323258936405182
    2. 'for' → logprob: -2.1532325744628906
    3. ')' → logprob: -3.6532325744628906
    4. '           ' → logprob: -11.02823257446289
    5. ' ' → logprob: -11.77823257446289
    6. '()' → logprob: -12.02823257446289
    7. '	for' → logprob: -12.77823257446289
    8. ' )' → logprob: -12.90323257446289
    9. '(x' → logprob: -12.90323257446289
    10. '   ' → logprob: -13.02823257446289

Token 2240: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5772804021835327
    2. ' for' → logprob: -0.8272804021835327
    3. ')' → logprob: -6.702280521392822
    4. '           ' → logprob: -9.702280044555664
    5. '               ' → logprob: -10.452280044555664
    6. '   ' → logprob: -11.827280044555664
    7. '                   ' → logprob: -11.952280044555664
    8. '            ' → logprob: -13.952280044555664
    9. ' ' → logprob: -14.077280044555664
    10. '                ' → logprob: -14.077280044555664

Token 2241: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.030228031799197197
    2. 'forms' → logprob: -3.5302281379699707
    3. ' x' → logprob: -8.030227661132812
    4. ' forms' → logprob: -9.280227661132812
    5. '   ' → logprob: -10.155227661132812
    6. '(x' → logprob: -12.905227661132812
    7. '       ' → logprob: -12.905227661132812
    8. '(forms' → logprob: -13.280227661132812
    9. 'form' → logprob: -13.530227661132812
    10. '           ' → logprob: -13.530227661132812

Token 2242: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.41768163442611694
    2. 'in' → logprob: -1.1676816940307617
    3. ')' → logprob: -4.042681694030762
    4. '(x' → logprob: -5.542681694030762
    5. ' forms' → logprob: -5.667681694030762
    6. 'for' → logprob: -6.292681694030762
    7. ' for' → logprob: -6.542681694030762
    8. '[' → logprob: -7.792681694030762
    9. 'forms' → logprob: -8.167681694030762
    10. ' x' → logprob: -8.417681694030762

Token 2243: ' forms' (ID: 11526)
  Prédit: 'forms'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'forms' → logprob: -3.8219583075260743e-05
    2. 'x' → logprob: -10.875038146972656
    3. ' forms' → logprob: -11.250038146972656
    4. '
' → logprob: -12.500038146972656
    5. '   ' → logprob: -14.000038146972656
    6. '(forms' → logprob: -14.125038146972656
    7. 'formats' → logprob: -14.875038146972656
    8. 'form' → logprob: -15.875038146972656
    9. ' ' → logprob: -16.125038146972656
    10. '
' → logprob: -16.875038146972656

Token 2244: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.48312926292419434
    2. '           ' → logprob: -1.2331292629241943
    3. '               ' → logprob: -2.4831292629241943
    4. ':' → logprob: -5.608129501342773
    5. '):' → logprob: -6.608129501342773
    6. '                   ' → logprob: -7.358129501342773
    7. '):
' → logprob: -7.483129501342773
    8. '                           ' → logprob: -7.983129501342773
    9. ')
' → logprob: -8.483129501342773
    10. '                       ' → logprob: -8.608129501342773

Token 2245: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006463141762651503
    2. '           ' → logprob: -8.125646591186523
    3. '                   ' → logprob: -9.000646591186523
    4. ':
' → logprob: -10.625646591186523
    5. '[' → logprob: -10.750646591186523
    6. '       ' → logprob: -11.000646591186523
    7. '                ' → logprob: -11.000646591186523
    8. ':' → logprob: -11.125646591186523
    9. ' return' → logprob: -11.250646591186523
    10. 'return' → logprob: -11.250646591186523

Token 2246: ' return' (ID: 622)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3584969639778137
    2. 'return' (adapté à ' return') → logprob: -1.483496904373169
    3. 'forms' → logprob: -2.608496904373169
    4. ' return' → logprob: -8.35849666595459
    5. ' forms' → logprob: -8.35849666595459
    6. '       ' → logprob: -9.23349666595459
    7. 'filtered' → logprob: -9.85849666595459
    8. '           ' → logprob: -10.10849666595459
    9. 'minimal' → logprob: -10.48349666595459
    10. '                   ' → logprob: -10.60849666595459

Token 2247: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.3869352638721466
    2. '{x' → logprob: -1.1369352340698242
    3. '   ' → logprob: -10.761935234069824
    4. '{k' → logprob: -10.761935234069824
    5. '{i' → logprob: -11.511935234069824
    6. ' {' → logprob: -12.511935234069824
    7. '{s' → logprob: -12.636935234069824
    8. '           ' → logprob: -12.886935234069824
    9. '{sub' → logprob: -13.886935234069824
    10. '{id' → logprob: -14.886935234069824

Token 2248: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -8.895480277715251e-06
    2. 'f' → logprob: -12.125008583068848
    3. ' x' → logprob: -13.625008583068848
    4. '   ' → logprob: -14.500008583068848
    5. '       ' → logprob: -14.500008583068848
    6. 's' → logprob: -14.750008583068848
    7. '               ' → logprob: -14.875008583068848
    8. '           ' → logprob: -15.000008583068848
    9. 'expr' → logprob: -16.500009536743164
    10. '                   ' → logprob: -17.875009536743164

Token 2249: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5767092108726501
    2. ' for' → logprob: -0.8267092108726501
    3. '               ' → logprob: -7.951709270477295
    4. '           ' → logprob: -8.076708793640137
    5. '              ' → logprob: -10.201708793640137
    6. '            ' → logprob: -10.701708793640137
    7. '                   ' → logprob: -10.951708793640137
    8. '                ' → logprob: -11.576708793640137
    9. '          ' → logprob: -11.701708793640137
    10. '                  ' → logprob: -12.451708793640137

Token 2250: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0004884536610916257
    2. ' x' → logprob: -7.62548828125
    3. '               ' → logprob: -16.25048828125
    4. '           ' → logprob: -16.37548828125
    5. '   ' → logprob: -16.62548828125
    6. ' ' → logprob: -17.12548828125
    7. '	x' → logprob: -17.12548828125
    8. '         ' → logprob: -17.75048828125
    9. '       ' → logprob: -18.12548828125
    10. ' ' → logprob: -18.75048828125

Token 2251: ' in' (ID: 306)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.027191441506147385
    2. ' x' → logprob: -4.277191638946533
    3. ' in' → logprob: -4.527191638946533
    4. 'in' → logprob: -6.152191638946533
    5. ' ' → logprob: -14.277191162109375
    6. ',x' → logprob: -14.402191162109375
    7. '(x' → logprob: -14.902191162109375
    8. ',' → logprob: -15.027191162109375
    9. '=x' → logprob: -15.652191162109375
    10. '   ' → logprob: -15.652191162109375

Token 2252: ' forms' (ID: 11526)
  Prédit: 'forms'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'forms' → logprob: -0.006848457269370556
    2. 'x' → logprob: -5.256848335266113
    3. ' forms' → logprob: -6.506848335266113
    4. '   ' → logprob: -10.131848335266113
    5. 'form' → logprob: -10.506848335266113
    6. ' x' → logprob: -11.131848335266113
    7. ' ' → logprob: -11.631848335266113
    8. '       ' → logprob: -12.506848335266113
    9. '(forms' → logprob: -12.756848335266113
    10. 'formats' → logprob: -13.006848335266113

Token 2253: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3146413564682007
    2. 'if' → logprob: -1.3146413564682007
    3. '                   ' → logprob: -7.43964147567749
    4. '               ' → logprob: -7.93964147567749
    5. '                       ' → logprob: -9.189640998840332
    6. '                           ' → logprob: -9.189640998840332
    7. '           ' → logprob: -10.064640998840332
    8. '                               ' → logprob: -10.189640998840332
    9. '                      ' → logprob: -10.439640998840332
    10. '                ' → logprob: -10.939640998840332

Token 2254: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -2.8087270038668066e-05
    2. ' len' → logprob: -10.500027656555176
    3. 'length' → logprob: -15.375027656555176
    4. '(len' → logprob: -15.625027656555176
    5. '                   ' → logprob: -16.250028610229492
    6. '               ' → logprob: -18.000028610229492
    7. '                           ' → logprob: -19.125028610229492
    8. '	len' → logprob: -19.125028610229492
    9. '                       ' → logprob: -19.500028610229492
    10. '   ' → logprob: -20.375028610229492

Token 2255: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00034511767444200814
    2. 'x' → logprob: -8.000345230102539
    3. '(' → logprob: -12.250345230102539
    4. 'len' → logprob: -13.375345230102539
    5. ' (' → logprob: -13.500345230102539
    6. '(len' → logprob: -14.125345230102539
    7. '==' → logprob: -15.000345230102539
    8. '(
' → logprob: -15.375345230102539
    9. '           ' → logprob: -15.625345230102539
    10. '               ' → logprob: -16.25034523010254

Token 2256: ')' (ID: 8)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4909382164478302
    2. ' ==' → logprob: -1.1159381866455078
    3. ')==' → logprob: -3.240938186645508
    4. ')' → logprob: -3.865938186645508
    5. '()==' → logprob: -9.115938186645508
    6. ']==' → logprob: -9.240938186645508
    7. '==
' → logprob: -10.865938186645508
    8. '```' → logprob: -11.990938186645508
    9. '()' → logprob: -12.115938186645508
    10. '=' → logprob: -12.115938186645508

Token 2257: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.38703280687332153
    2. '==' → logprob: -1.1370327472686768
    3. '()==' → logprob: -9.512032508850098
    4. ')==' → logprob: -10.137032508850098
    5. ' <=' → logprob: -11.387032508850098
    6. '==
' → logprob: -11.387032508850098
    7. '<=' → logprob: -11.512032508850098
    8. '()' → logprob: -12.387032508850098
    9. ']==' → logprob: -12.637032508850098
    10. '=' → logprob: -13.012032508850098

Token 2258: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -7.465036105713807e-06
    2. ' min' → logprob: -11.875007629394531
    3. '           ' → logprob: -15.125007629394531
    4. '   ' → logprob: -16.87500762939453
    5. '
' → logprob: -17.00000762939453
    6. '               ' → logprob: -17.37500762939453
    7. '       ' → logprob: -18.25000762939453
    8. 'minimal' → logprob: -18.37500762939453
    9. '                   ' → logprob: -18.87500762939453
    10. 'max' → logprob: -19.37500762939453

Token 2259: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.003842471167445183
    2. 'min' → logprob: -6.128842353820801
    3. 'len' → logprob: -6.628842353820801
    4. '(len' → logprob: -8.8788423538208
    5. '(min' → logprob: -9.0038423538208
    6. '(x' → logprob: -10.6288423538208
    7. 'en' → logprob: -11.3788423538208
    8. '_min' → logprob: -11.5038423538208
    9. 'Len' → logprob: -12.8788423538208
    10. '=len' → logprob: -13.0038423538208

Token 2260: '}

' (ID: 943)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.25349533557891846
    2. '           ' → logprob: -1.5034953355789185
    3. '       ' → logprob: -7.253495216369629
    4. ' }' → logprob: -8.128495216369629
    5. '               ' → logprob: -8.253495216369629
    6. '}
' → logprob: -8.503495216369629
    7. ')' → logprob: -9.628495216369629
    8. '   ' → logprob: -11.378495216369629
    9. '          ' → logprob: -12.753495216369629
    10. '                   ' → logprob: -12.878495216369629

Token 2261: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08680995553731918
    2. '       ' → logprob: -3.0868098735809326
    3. '        
' → logprob: -4.836810111999512
    4. '
' → logprob: -4.836810111999512
    5. ' 
' → logprob: -5.211810111999512
    6. '    
' → logprob: -5.586810111999512
    7. '            
' → logprob: -5.711810111999512
    8. ')' → logprob: -6.211810111999512
    9. '  
' → logprob: -6.461810111999512
    10. ' ' → logprob: -6.961810111999512

Token 2262: ' results' (ID: 4376)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007355424575507641
    2. '       ' → logprob: -5.132355213165283
    3. '#' → logprob: -6.882355213165283
    4. '   ' → logprob: -8.757355690002441
    5. 'if' → logprob: -10.132355690002441
    6. 'result' → logprob: -10.132355690002441
    7. 'length' → logprob: -10.257355690002441
    8. 'forms' → logprob: -10.632355690002441
    9. 'new' → logprob: -10.882355690002441
    10. 'left' → logprob: -11.007355690002441

Token 2263: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5251672863960266
    2. ' =' → logprob: -0.9001672863960266
    3. '           ' → logprob: -6.275167465209961
    4. '       ' → logprob: -10.525167465209961
    5. ':' → logprob: -11.025167465209961
    6. '               ' → logprob: -11.025167465209961
    7. '=[]' → logprob: -11.150167465209961
    8. '=set' → logprob: -11.150167465209961
    9. '   ' → logprob: -11.275167465209961
    10. '()' → logprob: -11.775167465209961

Token 2264: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -4.6087021473795176e-05
    2. ' set' → logprob: -10.000045776367188
    3. '   ' → logprob: -15.000045776367188
    4. '           ' → logprob: -15.750045776367188
    5. '       ' → logprob: -16.125045776367188
    6. '{}' → logprob: -17.250045776367188
    7. '{' → logprob: -18.250045776367188
    8. '=set' → logprob: -19.000045776367188
    9. 'dict' → logprob: -19.000045776367188
    10. 'self' → logprob: -19.125045776367188

Token 2265: '()

' (ID: 5874)
  Prédit: '()
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.4264862835407257
    2. '()' → logprob: -1.1764862537384033
    3. '           ' → logprob: -3.8014862537384033
    4. '       ' → logprob: -4.176486492156982
    5. '()

' → logprob: -8.051486015319824
    6. '
' → logprob: -8.301486015319824
    7. '()\' → logprob: -9.051486015319824
    8. ' =' → logprob: -9.301486015319824
    9. ',' → logprob: -9.301486015319824
    10. '               ' → logprob: -9.926486015319824

Token 2266: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03118341788649559
    2. '           ' → logprob: -3.5311834812164307
    3. '
' → logprob: -7.156183242797852
    4. '   ' → logprob: -8.156183242797852
    5. 'for' → logprob: -9.281183242797852
    6. ' for' → logprob: -9.656183242797852
    7. '        
' → logprob: -9.656183242797852
    8. 'if' → logprob: -10.156183242797852
    9. ' if' → logprob: -10.406183242797852
    10. '               ' → logprob: -10.781183242797852

Token 2267: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.46982479095458984
    2. '           ' → logprob: -1.4698247909545898
    3. '#' (adapté à ' #') → logprob: -2.21982479095459
    4. '       ' → logprob: -3.46982479095459
    5. 'bits' → logprob: -6.21982479095459
    6. 'all' → logprob: -6.34482479095459
    7. '   ' → logprob: -7.34482479095459
    8. 'if' → logprob: -8.21982479095459
    9. ' for' → logprob: -8.71982479095459
    10. '```' → logprob: -9.71982479095459

Token 2268: ' Try' (ID: 14720)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.26871442794799805
    2. '#' → logprob: -1.518714427947998
    3. '           ' → logprob: -4.143714427947998
    4. '       ' → logprob: -8.393714904785156
    5. 'all' → logprob: -8.643714904785156
    6. 'if' → logprob: -9.018714904785156
    7. 'from' → logprob: -9.643714904785156
    8. 'bits' → logprob: -10.018714904785156
    9. '   ' → logprob: -10.143714904785156
    10. 'vars' → logprob: -10.268714904785156

Token 2269: ' neg' (ID: 4528)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.19645795226097107
    2. '           ' → logprob: -2.571457862854004
    3. 'self' → logprob: -3.696457862854004
    4. 'lf' → logprob: -3.696457862854004
    5. ' bits' → logprob: -3.821457862854004
    6. '       ' → logprob: -5.321457862854004
    7. 'left' → logprob: -5.571457862854004
    8. ' lf' → logprob: -5.696457862854004
    9. '(bits' → logprob: -5.821457862854004
    10. '   ' → logprob: -5.946457862854004

Token 2270: 'ation' (ID: 387)
  Prédit: '(bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bits' → logprob: -0.4443081021308899
    2. 'ate' → logprob: -1.9443080425262451
    3. '_cache' → logprob: -2.319308042526245
    4. 'ation' → logprob: -3.319308042526245
    5. '_bits' → logprob: -3.694308042526245
    6. 'bits' → logprob: -3.819308042526245
    7. 'ations' → logprob: -4.694308280944824
    8. '       ' → logprob: -4.944308280944824
    9. '=' → logprob: -5.194308280944824
    10. '           ' → logprob: -5.944308280944824

Token 2271: ' of' (ID: 328)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017640821635723114
    2. 'neg' → logprob: -4.142640590667725
    3. 'bits' → logprob: -6.642640590667725
    4. '       ' → logprob: -9.267641067504883
    5. 'for' → logprob: -10.142641067504883
    6. ',' → logprob: -10.142641067504883
    7. '#' → logprob: -10.642641067504883
    8. '(bits' → logprob: -11.017641067504883
    9. '(' → logprob: -11.142641067504883
    10. 'results' → logprob: -11.642641067504883

Token 2272: ' known' (ID: 5542)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.016601283103227615
    2. '(bits' → logprob: -4.266601085662842
    3. 'results' → logprob: -6.766601085662842
    4. '(~' → logprob: -7.641601085662842
    5. 'dfs' → logprob: -8.5166015625
    6. ' bits' → logprob: -8.6416015625
    7. 'self' → logprob: -9.0166015625
    8. '~' → logprob: -9.5166015625
    9. '(results' → logprob: -9.6416015625
    10. 'bit' → logprob: -9.8916015625

Token 2273: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.002756495028734207
    2. '(bits' → logprob: -6.127756595611572
    3. ' bits' → logprob: -8.127756118774414
    4. 'forms' → logprob: -9.502756118774414
    5. '_bits' → logprob: -10.127756118774414
    6. 'results' → logprob: -10.252756118774414
    7. 'bit' → logprob: -10.502756118774414
    8. 's' → logprob: -10.752756118774414
    9. '```' → logprob: -11.002756118774414
    10. 'functions' → logprob: -11.002756118774414

Token 2274: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0035099145025014877
    2. 'neg' → logprob: -5.753509998321533
    3. '
' → logprob: -9.003509521484375
    4. ' neg' → logprob: -9.503509521484375
    5. '       ' → logprob: -10.128509521484375
    6. ',' → logprob: -10.503509521484375
    7. '               ' → logprob: -11.753509521484375
    8. 'inv' → logprob: -11.878509521484375
    9. '(' → logprob: -12.503509521484375
    10. '		' → logprob: -12.628509521484375

Token 2275: ' we' (ID: 581)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.006011629477143288
    2. '(bits' → logprob: -5.506011486053467
    3. ' bits' → logprob: -6.256011486053467
    4. '(' → logprob: -12.756011962890625
    5. '   ' → logprob: -13.381011962890625
    6. ' (' → logprob: -13.631011962890625
    7. '_bits' → logprob: -13.631011962890625
    8. 'self' → logprob: -13.756011962890625
    9. 'bit' → logprob: -14.131011962890625
    10. '<bits' → logprob: -14.631011962890625

Token 2276: ' have' (ID: 679)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'have' → logprob: -0.7266242504119873
    2. 'bits' → logprob: -1.6016242504119873
    3. '           ' → logprob: -2.3516242504119873
    4. 'already' → logprob: -2.8516242504119873
    5. ' have' → logprob: -3.4766242504119873
    6. 'not' → logprob: -3.4766242504119873
    7. 'in' → logprob: -3.9766242504119873
    8. 'can' → logprob: -4.101624488830566
    9. 'know' → logprob: -4.101624488830566
    10. ' bits' → logprob: -4.851624488830566

Token 2277: ' them' (ID: 1373)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.055475663393735886
    2. ' bits' → logprob: -3.0554757118225098
    3. '(bits' → logprob: -5.05547571182251
    4. '   ' → logprob: -8.430475234985352
    5. ' (' → logprob: -9.555475234985352
    6. '       ' → logprob: -10.180475234985352
    7. '(' → logprob: -10.305475234985352
    8. '_bits' → logprob: -10.430475234985352
    9. 'not' → logprob: -10.930475234985352
    10. '           ' → logprob: -11.180475234985352

Token 2278: ' cached' (ID: 39472)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001968649885384366
    2. ' for' → logprob: -9.25019645690918
    3. ',' → logprob: -10.00019645690918
    4. '               ' → logprob: -11.12519645690918
    5. ':' → logprob: -11.75019645690918
    6. '       ' → logprob: -12.50019645690918
    7. 'for' → logprob: -12.87519645690918
    8. '
' → logprob: -12.87519645690918
    9. '		' → logprob: -13.25019645690918
    10. ' and' → logprob: -13.37519645690918

Token 2279: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001354824344161898
    2. ' for' → logprob: -10.00013542175293
    3. ',' → logprob: -10.12513542175293
    4. 'for' → logprob: -11.00013542175293
    5. '               ' → logprob: -11.12513542175293
    6. '
' → logprob: -12.87513542175293
    7. '       ' → logprob: -13.00013542175293
    8. '		' → logprob: -13.12513542175293
    9. ' (' → logprob: -13.37513542175293
    10. ';' → logprob: -13.87513542175293

Token 2280: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00022880789765622467
    2. '
' → logprob: -9.125228881835938
    3. 'neg' → logprob: -9.625228881835938
    4. '       ' → logprob: -10.500228881835938
    5. '               ' → logprob: -11.375228881835938
    6. '```' → logprob: -12.000228881835938
    7. 'if' → logprob: -12.500228881835938
    8. '   ' → logprob: -13.500228881835938
    9. ' if' → logprob: -13.875228881835938
    10. '``' → logprob: -14.875228881835938

Token 2281: ' neg' (ID: 4528)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.147899329662323
    2. 'neg' (adapté à ' neg') → logprob: -2.1478993892669678
    3. 'for' → logprob: -4.772899150848389
    4. 'inv' → logprob: -4.897899150848389
    5. 'if' → logprob: -6.897899150848389
    6. '   ' → logprob: -7.022899150848389
    7. ' neg' → logprob: -7.272899150848389
    8. '       ' → logprob: -7.397899150848389
    9. ' for' → logprob: -7.647899150848389
    10. 'invert' → logprob: -8.397899627685547

Token 2282: '_bits' (ID: 48415)
  Prédit: '_bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bits' → logprob: -0.05403062701225281
    2. ' =' → logprob: -3.054030656814575
    3. 'bits' → logprob: -5.679030418395996
    4. '=' → logprob: -6.929030418395996
    5. 'ated' → logprob: -7.804030418395996
    6. '_bit' → logprob: -8.679030418395996
    7. '_b' → logprob: -9.429030418395996
    8. '_forms' → logprob: -9.554030418395996
    9. 'ation' → logprob: -10.054030418395996
    10. '_key' → logprob: -10.179030418395996

Token 2283: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687655329704285
    2. ' =' → logprob: -1.1368765830993652
    3. '           ' → logprob: -12.636876106262207
    4. '   ' → logprob: -14.261876106262207
    5. '_bits' → logprob: -14.761876106262207
    6. '=b' → logprob: -14.761876106262207
    7. '       ' → logprob: -15.386876106262207
    8. '=
' → logprob: -15.886876106262207
    9. 'bits' → logprob: -16.011877059936523
    10. '＝' → logprob: -16.511877059936523

Token 2284: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.0010422171326354146
    2. ' bits' → logprob: -6.876042366027832
    3. '   ' → logprob: -12.501042366027832
    4. '(bits' → logprob: -12.501042366027832
    5. '       ' → logprob: -14.501042366027832
    6. '           ' → logprob: -15.126042366027832
    7. 'bit' → logprob: -15.251042366027832
    8. 'bytes' → logprob: -15.376042366027832
    9. '~' → logprob: -15.376042366027832
    10. '(~' → logprob: -16.001041412353516

Token 2285: ' ^' (ID: 7602)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.3509830832481384
    2. '=' → logprob: -1.3509831428527832
    3. ' ^' → logprob: -3.350983142852783
    4. ' =' → logprob: -6.475983142852783
    5. '^(' → logprob: -8.475982666015625
    6. ' ^=' → logprob: -10.100982666015625
    7. '           ' → logprob: -10.225982666015625
    8. '^{' → logprob: -10.225982666015625
    9. '^^' → logprob: -10.350982666015625
    10. '   ' → logprob: -11.350982666015625

Token 2286: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.125000953674316
    3. '   ' → logprob: -16.375
    4. '```' → logprob: -19.125
    5. '655' → logprob: -19.125
    6. '`' → logprob: -19.375
    7. '  ' → logprob: -20.0
    8. '           ' → logprob: -20.375
    9. '(' → logprob: -20.75
    10. '    ' → logprob: -21.125

Token 2287: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '655' → logprob: -18.0
    4. '   ' → logprob: -18.125
    5. '`' → logprob: -19.75
    6. '```' → logprob: -20.0
    7. '(' → logprob: -20.125
    8. '  ' → logprob: -20.75
    9. '
' → logprob: -21.875
    10. '``' → logprob: -22.5

Token 2288: 'x' (ID: 87)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00037800322752445936
    2. 'x' → logprob: -8.250377655029297
    3. 'FFFF' → logprob: -9.125377655029297
    4. 'xffff' → logprob: -12.750377655029297
    5. '655' → logprob: -13.375377655029297
    6. ' ' → logprob: -13.375377655029297
    7. '`' → logprob: -14.000377655029297
    8. '(' → logprob: -14.250377655029297
    9. '   ' → logprob: -15.375377655029297
    10. '```' → logprob: -15.875377655029297

Token 2289: 'FFFF' (ID: 14573)
  Prédit: 'FFFF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'FFFF' → logprob: -1.7432603272027336e-06
    2. 'ffff' → logprob: -13.500001907348633
    3. 'FFF' → logprob: -16.375001907348633
    4. 'FFFFFFFF' → logprob: -16.500001907348633
    5. '000' → logprob: -17.875001907348633
    6. '```' → logprob: -18.625001907348633
    7. 'FF' → logprob: -19.000001907348633
    8. '0' → logprob: -19.375001907348633
    9. 'xffff' → logprob: -20.250001907348633
    10. 'F' → logprob: -21.250001907348633

Token 2290: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009905296377837658
    2. '
' → logprob: -5.1349053382873535
    3. ':' → logprob: -6.7599053382873535
    4. '       ' → logprob: -6.8849053382873535
    5. '<|end|>' → logprob: -7.0099053382873535
    6. '<|end|>' → logprob: -8.259904861450195
    7. ':
' → logprob: -8.509904861450195
    8. '               ' → logprob: -9.259904861450195
    9. ')' → logprob: -9.884904861450195
    10. '            
' → logprob: -10.009904861450195

Token 2291: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00021617230959236622
    2. 'if' → logprob: -8.875216484069824
    3. '       ' → logprob: -10.125216484069824
    4. ' if' → logprob: -11.250216484069824
    5. '
' → logprob: -11.750216484069824
    6. '               ' → logprob: -12.500216484069824
    7. '		' → logprob: -12.625216484069824
    8. '   ' → logprob: -12.875216484069824
    9. '```' → logprob: -13.375216484069824
    10. '	       ' → logprob: -14.125216484069824

Token 2292: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5466993451118469
    2. 'if' (adapté à ' if') → logprob: -0.9216993451118469
    3. 'neg' → logprob: -3.796699285507202
    4. '       ' → logprob: -7.671699523925781
    5. ' if' → logprob: -8.296699523925781
    6. '               ' → logprob: -10.296699523925781
    7. 'results' → logprob: -10.421699523925781
    8. '   ' → logprob: -10.796699523925781
    9. 'res' → logprob: -11.296699523925781
    10. 'pos' → logprob: -11.421699523925781

Token 2293: ' neg' (ID: 4528)
  Prédit: 'neg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neg' → logprob: -2.236549335066229e-05
    2. '           ' → logprob: -10.750021934509277
    3. ' neg' → logprob: -14.250021934509277
    4. '       ' → logprob: -15.750021934509277
    5. '   ' → logprob: -17.500022888183594
    6. '               ' → logprob: -18.000022888183594
    7. '_neg' → logprob: -19.750022888183594
    8. '                   ' → logprob: -19.875022888183594
    9. '
' → logprob: -20.625022888183594
    10. '            
' → logprob: -21.250022888183594

Token 2294: '_bits' (ID: 48415)
  Prédit: '_bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bits' → logprob: -0.005088002886623144
    2. 'in' → logprob: -5.505087852478027
    3. 'bits' → logprob: -7.255087852478027
    4. 'neg' → logprob: -9.130087852478027
    5. ' in' → logprob: -9.630087852478027
    6. 'Bits' → logprob: -10.755087852478027
    7. '   ' → logprob: -11.005087852478027
    8. '_BITS' → logprob: -11.005087852478027
    9. '_neg' → logprob: -11.630087852478027
    10. '_in' → logprob: -11.630087852478027

Token 2295: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12718741595745087
    2. 'in' → logprob: -2.127187490463257
    3. ' not' → logprob: -8.877187728881836
    4. '	in' → logprob: -9.752187728881836
    5. ' !=' → logprob: -10.877187728881836
    6. 'not' → logprob: -11.127187728881836
    7. ')' → logprob: -11.877187728881836
    8. '   ' → logprob: -12.002187728881836
    9. '!=' → logprob: -12.252187728881836
    10. '           ' → logprob: -12.752187728881836

Token 2296: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.735893965815194e-05
    2. ' self' → logprob: -11.250017166137695
    3. '           ' → logprob: -12.375017166137695
    4. '       ' → logprob: -17.500017166137695
    5. '   ' → logprob: -17.750017166137695
    6. '
' → logprob: -17.875017166137695
    7. '(self' → logprob: -18.125017166137695
    8. '[self' → logprob: -18.500017166137695
    9. '               ' → logprob: -19.000017166137695
    10. '	self' → logprob: -19.250017166137695

Token 2297: '.cache' (ID: 37175)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cache' → logprob: -0.1616012305021286
    2. '.cache' → logprob: -1.911601185798645
    3. 'self' → logprob: -6.6616010665893555
    4. '_cache' → logprob: -9.661601066589355
    5. ' cache' → logprob: -11.286601066589355
    6. '
' → logprob: -11.286601066589355
    7. 'Cache' → logprob: -13.036601066589355
    8. '	cache' → logprob: -13.661601066589355
    9. '   ' → logprob: -13.786601066589355
    10. '       ' → logprob: -13.911601066589355

Token 2298: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.21766404807567596
    2. '               ' → logprob: -2.4676640033721924
    3. ':' → logprob: -2.8426640033721924
    4. ':
' → logprob: -3.5926640033721924
    5. '           ' → logprob: -3.9676640033721924
    6. 'and' → logprob: -5.4676642417907715
    7. '            ' → logprob: -7.5926642417907715
    8. '):
' → logprob: -7.8426642417907715
    9. ',' → logprob: -8.342663764953613
    10. ')' → logprob: -8.717663764953613

Token 2299: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0028227046132087708
    2. '           ' → logprob: -6.0028228759765625
    3. 'return' → logprob: -8.377822875976562
    4. '{
' → logprob: -10.127822875976562
    5. '                   ' → logprob: -11.127822875976562
    6. 'self' → logprob: -12.127822875976562
    7. '       ' → logprob: -12.252822875976562
    8. '                
' → logprob: -12.252822875976562
    9. '   ' → logprob: -12.377822875976562
    10. 'if' → logprob: -12.502822875976562

Token 2300: ' neg' (ID: 4528)
  Prédit: 'neg'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neg' (adapté à ' neg') → logprob: -0.3471415340900421
    2. '               ' → logprob: -2.0971415042877197
    3. 'for' → logprob: -2.0971415042877197
    4. 'results' → logprob: -3.2221415042877197
    5. 'forms' → logprob: -6.097141742706299
    6. '           ' → logprob: -6.347141742706299
    7. '                   ' → logprob: -6.472141742706299
    8. 'res' → logprob: -7.847141742706299
    9. 'return' → logprob: -7.972141742706299
    10. ' for' → logprob: -7.972141742706299

Token 2301: '_forms' (ID: 176505)
  Prédit: '_forms'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_forms' → logprob: -0.007932149805128574
    2. '_bits' → logprob: -5.382932186126709
    3. '_results' → logprob: -6.257932186126709
    4. 'forms' → logprob: -7.382932186126709
    5. '_' → logprob: -8.25793170928955
    6. '_form' → logprob: -9.50793170928955
    7. '_cache' → logprob: -10.13293170928955
    8. '_chars' → logprob: -10.25793170928955
    9. ' =' → logprob: -10.38293170928955
    10. '_len' → logprob: -10.50793170928955

Token 2302: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.48104602098464966
    2. ' =' → logprob: -0.9810460209846497
    3. '               ' → logprob: -5.856046199798584
    4. '|' → logprob: -6.481046199798584
    5. '           ' → logprob: -6.856046199798584
    6. '                   ' → logprob: -6.981046199798584
    7. '.update' → logprob: -8.981045722961426
    8. ':' → logprob: -9.481045722961426
    9. '       ' → logprob: -9.981045722961426
    10. ' |=' → logprob: -9.981045722961426

Token 2303: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.43521249294281006
    2. '{' → logprob: -1.18521249294281
    3. '{'' → logprob: -3.1852126121520996
    4. 'dfs' → logprob: -6.0602126121521
    5. 'set' → logprob: -6.5602126121521
    6. '{"' → logprob: -6.9352126121521
    7. '{
' → logprob: -7.4352126121521
    8. '{-' → logprob: -9.435212135314941
    9. ' self' → logprob: -9.685212135314941
    10. '{s' → logprob: -9.685212135314941

Token 2304: '.cache' (ID: 37175)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cache' → logprob: -0.8552365303039551
    2. '.cache' → logprob: -0.8552365303039551
    3. '[' → logprob: -1.980236530303955
    4. 'dfs' → logprob: -5.980236530303955
    5. '_cache' → logprob: -6.230236530303955
    6. 'neg' → logprob: -6.605236530303955
    7. '@' → logprob: -6.605236530303955
    8. '               ' → logprob: -7.480236530303955
    9. 'def' → logprob: -7.605236530303955
    10. '           ' → logprob: -7.605236530303955

Token 2305: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5332478142227046e-05
    2. '           ' → logprob: -11.875015258789062
    3. '               ' → logprob: -12.875015258789062
    4. '                   ' → logprob: -12.875015258789062
    5. 'neg' → logprob: -13.125015258789062
    6. '       ' → logprob: -14.250015258789062
    7. '[
' → logprob: -15.625015258789062
    8. '                       ' → logprob: -16.125015258789062
    9. '   ' → logprob: -16.500015258789062
    10. ' [' → logprob: -17.250015258789062

Token 2306: 'neg' (ID: 18775)
  Prédit: 'neg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neg' → logprob: -1.6240566083070007e-06
    2. 'bits' → logprob: -14.000001907348633
    3. '           ' → logprob: -15.250001907348633
    4. ' neg' → logprob: -15.500001907348633
    5. '   ' → logprob: -15.750001907348633
    6. '                   ' → logprob: -17.125001907348633
    7. '               ' → logprob: -17.250001907348633
    8. '       ' → logprob: -17.875001907348633
    9. '_neg' → logprob: -18.625001907348633
    10. '-neg' → logprob: -18.875001907348633

Token 2307: '_bits' (ID: 48415)
  Prédit: '_bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bits' → logprob: -0.3321591317653656
    2. 'neg' → logprob: -2.2071590423583984
    3. 'its' → logprob: -2.4571590423583984
    4. 'bits' → logprob: -2.4571590423583984
    5. 'Bits' → logprob: -7.082159042358398
    6. '
' → logprob: -9.582159042358398
    7. '_neg' → logprob: -9.707159042358398
    8. '   ' → logprob: -10.207159042358398
    9. 'ots' → logprob: -10.207159042358398
    10. '_BITS' → logprob: -10.582159042358398

Token 2308: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.004745180252939463
    2. '           ' → logprob: -5.879745006561279
    3. '               ' → logprob: -6.879745006561279
    4. ']' → logprob: -7.379745006561279
    5. ')
' → logprob: -8.879745483398438
    6. '].' → logprob: -9.629745483398438
    7. ']:
' → logprob: -10.879745483398438
    8. '                   ' → logprob: -11.254745483398438
    9. ']
' → logprob: -11.254745483398438
    10. '       ' → logprob: -11.504745483398438

Token 2309: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0026805330999195576
    2. ' for' → logprob: -6.50268030166626
    3. '           ' → logprob: -7.50268030166626
    4. 'for' → logprob: -7.87768030166626
    5. '       ' → logprob: -8.627680778503418
    6. '                   ' → logprob: -9.877680778503418
    7. '   ' → logprob: -12.252680778503418
    8. '```' → logprob: -13.377680778503418
    9. '                       ' → logprob: -13.752680778503418
    10. '[' → logprob: -13.752680778503418

Token 2310: ' min' (ID: 1349)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03461621701717377
    2. '               ' → logprob: -3.409616231918335
    3. 'neg' → logprob: -7.659615993499756
    4. '#' → logprob: -8.284616470336914
    5. '           ' → logprob: -8.784616470336914
    6. ' for' → logprob: -10.534616470336914
    7. 'minimal' → logprob: -11.034616470336914
    8. '       ' → logprob: -11.409616470336914
    9. 'min' (adapté à ' min') → logprob: -11.409616470336914
    10. 'new' → logprob: -11.784616470336914

Token 2311: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -4.7159857786027715e-05
    2. 'len' → logprob: -10.750046730041504
    3. '_length' → logprob: -11.375046730041504
    4. '(len' → logprob: -11.500046730041504
    5. '_neg' → logprob: -13.500046730041504
    6. '               ' → logprob: -14.500046730041504
    7. 'Len' → logprob: -15.125046730041504
    8. '[len' → logprob: -15.250046730041504
    9. '_size' → logprob: -15.375046730041504
    10. '           ' → logprob: -15.875046730041504

Token 2312: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1385325938463211
    2. '=' → logprob: -2.3885326385498047
    3. '               ' → logprob: -3.5135326385498047
    4. '                   ' → logprob: -5.138532638549805
    5. '           ' → logprob: -7.513532638549805
    6. '-' → logprob: -7.638532638549805
    7. '                ' → logprob: -7.888532638549805
    8. '=len' → logprob: -9.763532638549805
    9. 'for' → logprob: -9.888532638549805
    10. '                       ' → logprob: -10.013532638549805

Token 2313: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -7.612634362885728e-05
    2. ' min' → logprob: -9.500076293945312
    3. 'float' → logprob: -14.000076293945312
    4. 'max' → logprob: -15.375076293945312
    5. 'None' → logprob: -16.750076293945312
    6. '[min' → logprob: -18.250076293945312
    7. '   ' → logprob: -18.500076293945312
    8. '(min' → logprob: -18.750076293945312
    9. 'len' → logprob: -19.125076293945312
    10. '	min' → logprob: -19.875076293945312

Token 2314: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.0007210109033621848
    2. 'len' → logprob: -7.250720977783203
    3. '[len' → logprob: -11.625720977783203
    4. '(x' → logprob: -13.250720977783203
    5. '(length' → logprob: -15.875720977783203
    6. '=len' → logprob: -16.875720977783203
    7. '_len' → logprob: -17.000720977783203
    8. ' len' → logprob: -17.500720977783203
    9. '	len' → logprob: -17.500720977783203
    10. ',len' → logprob: -17.625720977783203

Token 2315: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0016697037499397993
    2. '(' → logprob: -7.251669883728027
    3. '(f' → logprob: -7.501669883728027
    4. '(min' → logprob: -9.251669883728027
    5. '(
' → logprob: -9.376669883728027
    6. 'x' → logprob: -9.501669883728027
    7. '({' → logprob: -10.126669883728027
    8. '{x' → logprob: -10.251669883728027
    9. '([' → logprob: -10.876669883728027
    10. '(form' → logprob: -11.251669883728027

Token 2316: ')' (ID: 8)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07434112578630447
    2. '(x' → logprob: -2.824341058731079
    3. ' for' → logprob: -4.449341297149658
    4. ')' → logprob: -7.699341297149658
    5. '               ' → logprob: -9.6993408203125
    6. '           ' → logprob: -10.8243408203125
    7. '(for' → logprob: -10.8243408203125
    8. '                   ' → logprob: -10.8243408203125
    9. '+' → logprob: -11.6993408203125
    10. '(f' → logprob: -11.8243408203125

Token 2317: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.545473039150238
    2. ' for' → logprob: -0.920473039150238
    3. '+' → logprob: -4.420473098754883
    4. ')' → logprob: -4.920473098754883
    5. '(x' → logprob: -6.670473098754883
    6. ' +' → logprob: -7.170473098754883
    7. '               ' → logprob: -8.420473098754883
    8. ')+' → logprob: -8.545473098754883
    9. '[' → logprob: -9.545473098754883
    10. '           ' → logprob: -9.795473098754883

Token 2318: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.127333340875339e-06
    2. '(x' → logprob: -12.875003814697266
    3. 'neg' → logprob: -14.375003814697266
    4. ' x' → logprob: -14.375003814697266
    5. '{x' → logprob: -15.125003814697266
    6. '   ' → logprob: -17.875003814697266
    7. '
' → logprob: -17.875003814697266
    8. 'min' → logprob: -18.125003814697266
    9. 'len' → logprob: -18.125003814697266
    10. 'xf' → logprob: -18.125003814697266

Token 2319: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16102226078510284
    2. 'in' → logprob: -1.9110223054885864
    3. 'x' → logprob: -7.161022186279297
    4. ' x' → logprob: -11.036022186279297
    5. 'n' → logprob: -12.536022186279297
    6. ' ' → logprob: -13.911022186279297
    7. '               ' → logprob: -14.911022186279297
    8. '           ' → logprob: -16.036022186279297
    9. 'f' → logprob: -16.411022186279297
    10. '   ' → logprob: -16.536022186279297

Token 2320: ' neg' (ID: 4528)
  Prédit: 'neg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neg' → logprob: -0.1003091111779213
    2. 'x' → logprob: -2.350309133529663
    3. ' neg' → logprob: -9.225309371948242
    4. '(x' → logprob: -13.975309371948242
    5. '
' → logprob: -14.225309371948242
    6. ' x' → logprob: -14.475309371948242
    7. 'min' → logprob: -15.100309371948242
    8. '_neg' → logprob: -15.475309371948242
    9. '{x' → logprob: -15.600309371948242
    10. '[x' → logprob: -15.975309371948242

Token 2321: '_forms' (ID: 176505)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7880803346633911
    2. '_forms' → logprob: -1.0380803346633911
    3. 'forms' → logprob: -2.0380802154541016
    4. '(x' → logprob: -3.1630802154541016
    5. 'f' → logprob: -4.538080215454102
    6. 'Forms' → logprob: -6.163080215454102
    7. 'orm' → logprob: -6.413080215454102
    8. '_form' → logprob: -6.413080215454102
    9. 'form' → logprob: -7.163080215454102
    10. '(forms' → logprob: -8.413080215454102

Token 2322: ')
' (ID: 446)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5566055178642273
    2. '+' → logprob: -1.431605577468872
    3. ' +' → logprob: -2.931605577468872
    4. ')' → logprob: -3.181605577468872
    5. '-' → logprob: -3.431605577468872
    6. ' -' → logprob: -4.056605339050293
    7. '                   ' → logprob: -4.556605339050293
    8. ')+' → logprob: -4.556605339050293
    9. '):
' → logprob: -4.806605339050293
    10. '):' → logprob: -5.556605339050293

Token 2323: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003352259285748005
    2. 'for' → logprob: -5.753352165222168
    3. '                   ' → logprob: -9.378352165222168
    4. ' for' → logprob: -10.003352165222168
    5. '       ' → logprob: -11.128352165222168
    6. 'neg' → logprob: -11.378352165222168
    7. '           ' → logprob: -11.503352165222168
    8. '                       ' → logprob: -12.503352165222168
    9. '```' → logprob: -13.128352165222168
    10. '   ' → logprob: -14.253352165222168

Token 2324: ' candidates' (ID: 18116)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05603059381246567
    2. '               ' → logprob: -3.056030511856079
    3. 'results' → logprob: -5.181030750274658
    4. 'neg' → logprob: -7.181030750274658
    5. '           ' → logprob: -7.431030750274658
    6. ' for' → logprob: -9.0560302734375
    7. '       ' → logprob: -9.4310302734375
    8. 'return' → logprob: -9.8060302734375
    9. '                   ' → logprob: -9.9310302734375
    10. '   ' → logprob: -10.0560302734375

Token 2325: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38740086555480957
    2. ' =' → logprob: -1.1374008655548096
    3. '           ' → logprob: -8.63740062713623
    4. '               ' → logprob: -8.76240062713623
    5. 'for' → logprob: -9.63740062713623
    6. '                   ' → logprob: -9.76240062713623
    7. '|' → logprob: -10.26240062713623
    8. '       ' → logprob: -12.01240062713623
    9. '   ' → logprob: -12.26240062713623
    10. '=set' → logprob: -12.26240062713623

Token 2326: ' {'' (ID: 11881)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.2523861825466156
    2. '{x' → logprob: -1.502386212348938
    3. '{'' → logprob: -8.252386093139648
    4. '{s' → logprob: -9.377386093139648
    5. '{i' → logprob: -9.877386093139648
    6. '{"' → logprob: -11.127386093139648
    7. '{k' → logprob: -11.127386093139648
    8. '   ' → logprob: -11.377386093139648
    9. '       ' → logprob: -12.252386093139648
    10. ' {' → logprob: -12.627386093139648

Token 2327: '-'' (ID: 52594)
  Prédit: ''-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''-' → logprob: -0.04069764167070389
    2. '-'' → logprob: -3.9156975746154785
    3. '-' → logprob: -4.0406975746154785
    4. '-'+' → logprob: -6.6656975746154785
    5. '('-' → logprob: -7.0406975746154785
    6. '"-' → logprob: -9.165698051452637
    7. ' '-'' → logprob: -9.415698051452637
    8. '-(' → logprob: -11.040698051452637
    9. ''' → logprob: -12.540698051452637
    10. '-{' → logprob: -13.415698051452637

Token 2328: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04197357967495918
    2. ' +' → logprob: -3.41697359085083
    3. 'x' → logprob: -5.29197359085083
    4. '+x' → logprob: -6.16697359085083
    5. '{' → logprob: -7.04197359085083
    6. '{x' → logprob: -8.541973114013672
    7. '+c' → logprob: -10.666973114013672
    8. 'for' → logprob: -11.291973114013672
    9. ' x' → logprob: -11.291973114013672
    10. '               ' → logprob: -11.916973114013672

Token 2329: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.8206473871250637e-05
    2. 'c' → logprob: -11.375028610229492
    3. ' x' → logprob: -12.000028610229492
    4. 'f' → logprob: -12.250028610229492
    5. 'min' → logprob: -13.750028610229492
    6. '```' → logprob: -13.875028610229492
    7. '   ' → logprob: -14.375028610229492
    8. 'xf' → logprob: -14.500028610229492
    9. 'candidate' → logprob: -14.875028610229492
    10. 'nf' → logprob: -15.375028610229492

Token 2330: ' if' (ID: 538)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.387847900390625
    2. 'for' → logprob: -1.137847900390625
    3. '           ' → logprob: -7.387847900390625
    4. '               ' → logprob: -8.262847900390625
    5. '       ' → logprob: -10.762847900390625
    6. '	for' → logprob: -11.262847900390625
    7. '                   ' → logprob: -11.512847900390625
    8. ' if' → logprob: -11.637847900390625
    9. '          ' → logprob: -11.887847900390625
    10. '}' → logprob: -12.012847900390625

Token 2331: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.0025194191839545965
    2. 'x' → logprob: -6.627519607543945
    3. ' not' → logprob: -7.002519607543945
    4. '(not' → logprob: -8.252519607543945
    5. 'len' → logprob: -11.252519607543945
    6. '(x' → logprob: -12.377519607543945
    7. '	not' → logprob: -13.377519607543945
    8. '   ' → logprob: -13.627519607543945
    9. '_not' → logprob: -14.627519607543945
    10. '(len' → logprob: -15.127519607543945

Token 2332: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.1008713702030946e-06
    2. ' x' → logprob: -13.375001907348633
    3. '(x' → logprob: -14.625001907348633
    4. '(' → logprob: -17.500001907348633
    5. '   ' → logprob: -20.625001907348633
    6. '{x' → logprob: -21.000001907348633
    7. '	x' → logprob: -21.000001907348633
    8. '(
' → logprob: -21.375001907348633
    9. ' (' → logprob: -21.625001907348633
    10. ')x' → logprob: -21.750001907348633

Token 2333: '.startswith' (ID: 64340)
  Prédit: '.startswith'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.startswith' → logprob: -0.0004605783324223012
    2. '.' → logprob: -8.750460624694824
    3. 'startswith' → logprob: -8.750460624694824
    4. '[' → logprob: -8.875460624694824
    5. '().' → logprob: -13.625460624694824
    6. '       ' → logprob: -14.125460624694824
    7. '           ' → logprob: -14.375460624694824
    8. '   ' → logprob: -15.500460624694824
    9. '.starts' → logprob: -15.500460624694824
    10. ' .' → logprob: -15.500460624694824

Token 2334: '('-' (ID: 33343)
  Prédit: '('-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('-' → logprob: -0.2520177662372589
    2. ''-' → logprob: -1.5020177364349365
    3. '(' → logprob: -10.002017974853516
    4. '-' → logprob: -11.002017974853516
    5. '('' → logprob: -11.127017974853516
    6. '('-',' → logprob: -11.752017974853516
    7. '("-' → logprob: -13.877017974853516
    8. '   ' → logprob: -14.002017974853516
    9. ''' → logprob: -14.127017974853516
    10. ' '-'' → logprob: -14.502017974853516

Token 2335: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02192031592130661
    2. '')' → logprob: -4.146920204162598
    3. '-' → logprob: -6.021920204162598
    4. '-)' → logprob: -6.146920204162598
    5. ''-' → logprob: -6.896920204162598
    6. '   ' → logprob: -9.771920204162598
    7. ' )' → logprob: -9.771920204162598
    8. ')-' → logprob: -10.146920204162598
    9. '('-' → logprob: -10.271920204162598
    10. '(' → logprob: -11.021920204162598

Token 2336: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.47637835144996643
    2. 'else' → logprob: -0.976378321647644
    3. '               ' → logprob: -6.601378440856934
    4. '           ' → logprob: -7.351378440856934
    5. '                ' → logprob: -9.476378440856934
    6. '              ' → logprob: -9.601378440856934
    7. '                   ' → logprob: -10.601378440856934
    8. ' for' → logprob: -10.851378440856934
    9. '                 ' → logprob: -10.976378440856934
    10. '             ' → logprob: -11.101378440856934

Token 2337: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -9.245724504580721e-05
    2. ' x' → logprob: -9.375092506408691
    3. '(x' → logprob: -12.625092506408691
    4. '{x' → logprob: -13.000092506408691
    5. ''x' → logprob: -14.250092506408691
    6. ' ' → logprob: -14.500092506408691
    7. '   ' → logprob: -14.750092506408691
    8. '(' → logprob: -16.625091552734375
    9. '	x' → logprob: -16.750091552734375
    10. '  ' → logprob: -17.000091552734375

Token 2338: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6050925254821777
    2. ' for' → logprob: -1.1050925254821777
    3. 'for' → logprob: -2.1050925254821777
    4. '           ' → logprob: -8.105093002319336
    5. '               ' → logprob: -9.105093002319336
    6. '
' → logprob: -9.480093002319336
    7. '       ' → logprob: -9.980093002319336
    8. ')' → logprob: -9.980093002319336
    9. '   ' → logprob: -9.980093002319336
    10. '}' → logprob: -10.105093002319336

Token 2339: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002851729223039001
    2. ':' → logprob: -8.625285148620605
    3. ':]' → logprob: -10.375285148620605
    4. 'len' → logprob: -10.875285148620605
    5. '0' → logprob: -11.125285148620605
    6. '-' → logprob: -11.625285148620605
    7. '...' → logprob: -11.875285148620605
    8. ':-' → logprob: -12.250285148620605
    9. '::-' → logprob: -12.625285148620605
    10. '```' → logprob: -12.750285148620605

Token 2340: ':]' (ID: 67377)
  Prédit: ':]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.0005639957962557673
    2. ':]
' → logprob: -8.000563621520996
    3. ']' → logprob: -9.000563621520996
    4. ':' → logprob: -9.250563621520996
    5. ':]

' → logprob: -12.250563621520996
    6. '()]' → logprob: -14.250563621520996
    7. '+]' → logprob: -14.375563621520996
    8. ' :]' → logprob: -14.750563621520996
    9. ':].' → logprob: -14.875563621520996
    10. '']' → logprob: -15.000563621520996

Token 2341: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08733595907688141
    2. 'for' → logprob: -2.5873360633850098
    3. '               ' → logprob: -4.96233606338501
    4. '                   ' → logprob: -6.83733606338501
    5. '                ' → logprob: -9.087335586547852
    6. ')' → logprob: -9.337335586547852
    7. '           ' → logprob: -10.087335586547852
    8. '                       ' → logprob: -10.962335586547852
    9. '              ' → logprob: -11.087335586547852
    10. '                  ' → logprob: -11.087335586547852

Token 2342: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.000978147960267961
    2. 'neg' → logprob: -7.250977993011475
    3. 'c' → logprob: -8.375978469848633
    4. ' x' → logprob: -11.000978469848633
    5. '{x' → logprob: -11.500978469848633
    6. 'candidate' → logprob: -12.875978469848633
    7. '   ' → logprob: -13.375978469848633
    8. '(x' → logprob: -14.000978469848633
    9. '[x' → logprob: -14.125978469848633
    10. ' neg' → logprob: -14.500978469848633

Token 2343: ' in' (ID: 306)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.011252476833760738
    2. ' x' → logprob: -4.511252403259277
    3. ' in' → logprob: -8.886252403259277
    4. 'in' → logprob: -9.886252403259277
    5. '           ' → logprob: -12.511252403259277
    6. '               ' → logprob: -12.636252403259277
    7. '                   ' → logprob: -13.136252403259277
    8. '   ' → logprob: -13.136252403259277
    9. '       ' → logprob: -14.136252403259277
    10. '    ' → logprob: -14.511252403259277

Token 2344: ' neg' (ID: 4528)
  Prédit: 'neg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neg' → logprob: -9.729906196298543e-06
    2. ' neg' → logprob: -12.375009536743164
    3. 'x' → logprob: -13.250009536743164
    4. '   ' → logprob: -13.250009536743164
    5. '           ' → logprob: -14.125009536743164
    6. '
' → logprob: -14.500009536743164
    7. '               ' → logprob: -15.375009536743164
    8. '       ' → logprob: -15.500009536743164
    9. '                   ' → logprob: -15.625009536743164
    10. '[' → logprob: -17.250009536743164

Token 2345: '_forms' (ID: 176505)
  Prédit: '_forms'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_forms' → logprob: -0.00025871701654978096
    2. '_bits' → logprob: -9.000258445739746
    3. '_form' → logprob: -9.750258445739746
    4. 'forms' → logprob: -11.000258445739746
    5. 'neg' → logprob: -11.250258445739746
    6. '_formats' → logprob: -12.125258445739746
    7. 'Forms' → logprob: -12.375258445739746
    8. '(forms' → logprob: -12.375258445739746
    9. 'f' → logprob: -13.125258445739746
    10. '_' → logprob: -13.375258445739746

Token 2346: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.030265511944890022
    2. ')' → logprob: -4.5302653312683105
    3. '           ' → logprob: -4.5302653312683105
    4. '}' → logprob: -5.5302653312683105
    5. '                   ' → logprob: -5.9052653312683105
    6. '):' → logprob: -8.155265808105469
    7. '<|end|>' → logprob: -8.280265808105469
    8. ':' → logprob: -8.405265808105469
    9. ' }' → logprob: -8.905265808105469
    10. '<|end|>' → logprob: -9.030265808105469

Token 2347: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.041804730892181396
    2. 'x' → logprob: -3.291804790496826
    3. 'not' → logprob: -6.666804790496826
    4. 'True' → logprob: -6.916804790496826
    5. '(len' → logprob: -7.291804790496826
    6. '   ' → logprob: -8.291804313659668
    7. '           ' → logprob: -8.541804313659668
    8. '(x' → logprob: -9.916804313659668
    9. '       ' → logprob: -9.916804313659668
    10. ' len' → logprob: -10.041804313659668

Token 2348: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00010521204239921644
    2. 'x' → logprob: -9.375104904174805
    3. '(' → logprob: -10.875104904174805
    4. ' (' → logprob: -15.000104904174805
    5. '(len' → logprob: -15.375104904174805
    6. '{x' → logprob: -16.000104904174805
    7. '           ' → logprob: -16.000104904174805
    8. '(
' → logprob: -16.125104904174805
    9. '((' → logprob: -16.250104904174805
    10. '               ' → logprob: -16.750104904174805

Token 2349: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.07334566116333
    2. ' <=' → logprob: -1.69834566116333
    3. ' <' → logprob: -2.32334566116333
    4. '+' → logprob: -2.32334566116333
    5. '==' → logprob: -2.57334566116333
    6. ' ==' → logprob: -2.57334566116333
    7. '<=' → logprob: -2.57334566116333
    8. ' +' → logprob: -3.69834566116333
    9. '<' → logprob: -4.69834566116333
    10. ' !=' → logprob: -4.94834566116333

Token 2350: ' ==' (ID: 951)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.23305770754814148
    2. ' <' → logprob: -1.9830577373504639
    3. '+' → logprob: -3.233057737350464
    4. '==' → logprob: -4.483057498931885
    5. '<=' → logprob: -4.608057498931885
    6. ' ==' → logprob: -5.733057498931885
    7. ' <=' → logprob: -6.358057498931885
    8. '<len' → logprob: -6.483057498931885
    9. ' +' → logprob: -7.233057498931885
    10. '!=' → logprob: -7.608057498931885

Token 2351: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -6.158350151963532e-05
    2. ' min' → logprob: -9.875061988830566
    3. '   ' → logprob: -12.375061988830566
    4. '(min' → logprob: -13.375061988830566
    5. 'neg' → logprob: -13.625061988830566
    6. '           ' → logprob: -13.750061988830566
    7. '       ' → logprob: -14.875061988830566
    8. '1' → logprob: -15.125061988830566
    9. '2' → logprob: -15.250061988830566
    10. '    ' → logprob: -15.500061988830566

Token 2352: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.00556231290102005
    2. 'min' → logprob: -5.6305623054504395
    3. 'len' → logprob: -6.7555623054504395
    4. '_min' → logprob: -7.5055623054504395
    5. '(min' → logprob: -8.505562782287598
    6. '(len' → logprob: -11.255562782287598
    7. 'length' → logprob: -12.380562782287598
    8. 'max' → logprob: -12.505562782287598
    9. ' min' → logprob: -13.130562782287598
    10. '[min' → logprob: -13.380562782287598

Token 2353: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.21233229339122772
    2. '               ' → logprob: -1.9623322486877441
    3. '           ' → logprob: -3.087332248687744
    4. ' }' → logprob: -6.462332248687744
    5. '                   ' → logprob: -6.587332248687744
    6. '}
' → logprob: -6.962332248687744
    7. ':' → logprob: -7.587332248687744
    8. ')' → logprob: -8.712332725524902
    9. '                       ' → logprob: -9.212332725524902
    10. '}:' → logprob: -9.337332725524902

Token 2354: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002243512077257037
    2. '           ' → logprob: -7.127243518829346
    3. 'results' → logprob: -7.377243518829346
    4. 'for' → logprob: -8.002243041992188
    5. ' for' → logprob: -8.627243041992188
    6. '                   ' → logprob: -8.877243041992188
    7. ')' → logprob: -10.252243041992188
    8. '       ' → logprob: -10.627243041992188
    9. ' results' → logprob: -11.002243041992188
    10. '                
' → logprob: -11.127243041992188

Token 2355: ' min' (ID: 1349)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.02326318249106407
    2. '               ' → logprob: -4.148262977600098
    3. '           ' → logprob: -5.523262977600098
    4. ' results' → logprob: -5.773262977600098
    5. '   ' → logprob: -10.023262977600098
    6. '       ' → logprob: -11.023262977600098
    7. '	results' → logprob: -11.773262977600098
    8. '                   ' → logprob: -11.773262977600098
    9. 'for' → logprob: -12.273262977600098
    10. ' ' → logprob: -12.398262977600098

Token 2356: '_c' (ID: 1303)
  Prédit: '_len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.004060590174049139
    2. '_length' → logprob: -6.004060745239258
    3. 'len' → logprob: -6.879060745239258
    4. '_candidates' → logprob: -7.754060745239258
    5. '(len' → logprob: -10.129060745239258
    6. 'Len' → logprob: -10.504060745239258
    7. '_c' → logprob: -11.504060745239258
    8. '_tokens' → logprob: -11.629060745239258
    9. '(c' → logprob: -12.129060745239258
    10. 'c' → logprob: -12.629060745239258

Token 2357: 'and' (ID: 427)
  Prédit: '_len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.8266251087188721
    2. 'andidates' → logprob: -0.8266251087188721
    3. 'and' → logprob: -2.451625108718872
    4. 'len' → logprob: -4.201624870300293
    5. '_length' → logprob: -4.951624870300293
    6. '_candidates' → logprob: -5.076624870300293
    7. 'ands' → logprob: -5.576624870300293
    8. '_c' → logprob: -5.826624870300293
    9. 'c' → logprob: -7.076624870300293
    10. 'andidate' → logprob: -7.451624870300293

Token 2358: '_len' (ID: 13683)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.2004883885383606
    2. 'ates' → logprob: -1.9504883289337158
    3. '           ' → logprob: -4.575488567352295
    4. '               ' → logprob: -4.575488567352295
    5. 'ate' → logprob: -5.200488567352295
    6. 'andidates' → logprob: -5.575488567352295
    7. '_candidates' → logprob: -5.700488567352295
    8. '       ' → logprob: -6.700488567352295
    9. '   ' → logprob: -6.825488567352295
    10. '_len' → logprob: -7.325488567352295

Token 2359: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2817016541957855
    2. '=' → logprob: -1.406701683998108
    3. '               ' → logprob: -8.656702041625977
    4. '=min' → logprob: -9.031702041625977
    5. '           ' → logprob: -9.906702041625977
    6. '                   ' → logprob: -10.281702041625977
    7. ')' → logprob: -10.406702041625977
    8. '<|end|>' → logprob: -10.531702041625977
    9. '                ' → logprob: -11.531702041625977
    10. '=len' → logprob: -11.531702041625977

Token 2360: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.00047071068547666073
    2. 'len' → logprob: -8.750471115112305
    3. 'float' → logprob: -9.250471115112305
    4. '(min' → logprob: -9.500471115112305
    5. 'max' → logprob: -9.500471115112305
    6. ' min' → logprob: -10.125471115112305
    7. '[min' → logprob: -12.375471115112305
    8. '   ' → logprob: -12.625471115112305
    9. 'None' → logprob: -12.750471115112305
    10. '1' → logprob: -13.000471115112305

Token 2361: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.32950061559677124
    2. '(c' → logprob: -1.454500675201416
    3. 'len' → logprob: -3.079500675201416
    4. 'c' → logprob: -7.579500675201416
    5. '[len' → logprob: -8.454500198364258
    6. '(min' → logprob: -8.704500198364258
    7. '(' → logprob: -9.079500198364258
    8. '(x' → logprob: -10.329500198364258
    9. '(candidate' → logprob: -10.329500198364258
    10. '(
' → logprob: -10.454500198364258

Token 2362: '(x' (ID: 4061)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.1375834047794342
    2. 'c' → logprob: -2.1375834941864014
    3. '(x' → logprob: -4.762583255767822
    4. '(' → logprob: -6.762583255767822
    5. 'x' → logprob: -8.13758373260498
    6. ' candidates' → logprob: -8.63758373260498
    7. '(
' → logprob: -8.88758373260498
    8. '_candidates' → logprob: -9.13758373260498
    9. '(candidate' → logprob: -10.01258373260498
    10. 'andidates' → logprob: -10.63758373260498

Token 2363: ')' (ID: 8)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6779830455780029
    2. '(c' → logprob: -1.302983045578003
    3. ' for' → logprob: -2.302983045578003
    4. ')' → logprob: -2.677983045578003
    5. '(x' → logprob: -3.177983045578003
    6. 'c' → logprob: -5.427983283996582
    7. '   ' → logprob: -6.677983283996582
    8. ')c' → logprob: -7.177983283996582
    9. '[' → logprob: -7.677983283996582
    10. '           ' → logprob: -7.802983283996582

Token 2364: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2958492636680603
    2. ' for' → logprob: -1.545849323272705
    3. '(c' → logprob: -3.295849323272705
    4. 'c' → logprob: -5.670849323272705
    5. '(x' → logprob: -7.670849323272705
    6. '   ' → logprob: -7.920849323272705
    7. ')' → logprob: -8.045848846435547
    8. '[c' → logprob: -8.295848846435547
    9. '       ' → logprob: -8.420848846435547
    10. '           ' → logprob: -9.045848846435547

Token 2365: ' x' (ID: 1215)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -7.827200897736475e-05
    2. 'cand' → logprob: -9.625078201293945
    3. 'x' → logprob: -11.750078201293945
    4. ' candidates' → logprob: -13.000078201293945
    5. '_candidates' → logprob: -13.250078201293945
    6. 'candidate' → logprob: -16.125078201293945
    7. ' candidats' → logprob: -17.500078201293945
    8. '	c' → logprob: -18.000078201293945
    9. '
' → logprob: -18.375078201293945
    10. ')c' → logprob: -18.500078201293945

Token 2366: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5768147110939026
    2. ' in' → logprob: -0.8268147110939026
    3. 'x' → logprob: -7.076814651489258
    4. ' x' → logprob: -11.326814651489258
    5. 'c' → logprob: -11.826814651489258
    6. 'cand' → logprob: -12.951814651489258
    7. ' ' → logprob: -13.201814651489258
    8. '
' → logprob: -13.576814651489258
    9. '           ' → logprob: -13.576814651489258
    10. '   ' → logprob: -13.701814651489258

Token 2367: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.27099974633893e-05
    2. ' candidates' → logprob: -11.375012397766113
    3. 'cand' → logprob: -14.000012397766113
    4. '_candidates' → logprob: -16.25001335144043
    5. 'candidate' → logprob: -16.37501335144043
    6. '
' → logprob: -16.75001335144043
    7. '               ' → logprob: -17.25001335144043
    8. '   ' → logprob: -17.50001335144043
    9. '           ' → logprob: -18.50001335144043
    10. '[c' → logprob: -18.62501335144043

Token 2368: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21198421716690063
    2. '               ' → logprob: -1.7119841575622559
    3. '           ' → logprob: -5.086984157562256
    4. ' )' → logprob: -7.211984157562256
    5. '):
' → logprob: -7.336984157562256
    6. '):' → logprob: -7.836984157562256
    7. '       ' → logprob: -7.836984157562256
    8. ')
' → logprob: -7.961984157562256
    9. ' if' → logprob: -7.961984157562256
    10. '                   ' → logprob: -8.836984634399414

Token 2369: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002034988021478057
    2. '           ' → logprob: -6.252035140991211
    3. '       ' → logprob: -9.502035140991211
    4. 'for' → logprob: -11.377035140991211
    5. '                   ' → logprob: -11.627035140991211
    6. ' for' → logprob: -12.502035140991211
    7. '   ' → logprob: -12.752035140991211
    8. '              ' → logprob: -14.252035140991211
    9. '                       ' → logprob: -14.502035140991211
    10. '```' → logprob: -14.752035140991211

Token 2370: ' candidates' (ID: 18116)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1447013020515442
    2. 'if' → logprob: -2.1447012424468994
    3. ' if' → logprob: -4.3947014808654785
    4. '           ' → logprob: -5.2697014808654785
    5. 'for' → logprob: -9.64470100402832
    6. '                   ' → logprob: -11.01970100402832
    7. '       ' → logprob: -11.51970100402832
    8. ' for' → logprob: -11.76970100402832
    9. 'return' → logprob: -12.01970100402832
    10. '   ' → logprob: -12.14470100402832

Token 2371: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2318737506866455
    2. '=' → logprob: -1.6068737506866455
    3. '           ' → logprob: -5.356873512268066
    4. '               ' → logprob: -7.606873512268066
    5. '<|end|>' → logprob: -8.231873512268066
    6. '=set' → logprob: -8.731873512268066
    7. '={' → logprob: -9.356873512268066
    8. '<|end|>' → logprob: -9.606873512268066
    9. '.update' → logprob: -9.856873512268066
    10. ' |=' → logprob: -10.106873512268066

Token 2372: ' {' (ID: 354)
  Prédit: '{x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{x' → logprob: -0.3874841630458832
    2. '{' → logprob: -1.1374841928482056
    3. '{k' → logprob: -8.137484550476074
    4. '{i' → logprob: -8.762484550476074
    5. ' {' → logprob: -9.637484550476074
    6. '{s' → logprob: -10.137484550476074
    7. '           ' → logprob: -10.762484550476074
    8. '   ' → logprob: -10.887484550476074
    9. '               ' → logprob: -11.637484550476074
    10. '                   ' → logprob: -13.012484550476074

Token 2373: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.9146995327901095e-05
    2. 'c' → logprob: -11.250019073486328
    3. '               ' → logprob: -12.625019073486328
    4. ' x' → logprob: -13.375019073486328
    5. '           ' → logprob: -14.375019073486328
    6. '                   ' → logprob: -14.750019073486328
    7. '   ' → logprob: -16.000019073486328
    8. '       ' → logprob: -16.625019073486328
    9. '                       ' → logprob: -16.625019073486328
    10. '{x' → logprob: -17.125019073486328

Token 2374: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5762277245521545
    2. ' for' → logprob: -0.8262277245521545
    3. '               ' → logprob: -8.576228141784668
    4. '           ' → logprob: -9.576228141784668
    5. '                   ' → logprob: -10.701228141784668
    6. '                ' → logprob: -12.951228141784668
    7. '              ' → logprob: -13.451228141784668
    8. '            ' → logprob: -14.326228141784668
    9. '                 ' → logprob: -14.576228141784668
    10. '                  ' → logprob: -14.576228141784668

Token 2375: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.002815455198287964
    2. 'c' → logprob: -5.877815246582031
    3. 'candidate' → logprob: -12.377815246582031
    4. 'cand' → logprob: -12.752815246582031
    5. ' x' → logprob: -12.877815246582031
    6. ' candidates' → logprob: -14.752815246582031
    7. '_candidates' → logprob: -15.127815246582031
    8. '   ' → logprob: -15.877815246582031
    9. ' ' → logprob: -17.50281524658203
    10. 'Candidates' → logprob: -18.00281524658203

Token 2376: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.12728358805179596
    2. ' in' → logprob: -2.1272835731506348
    3. 'x' → logprob: -8.502284049987793
    4. ' ' → logprob: -9.502284049987793
    5. 'c' → logprob: -11.002284049987793
    6. '<|end|>' → logprob: -11.002284049987793
    7. ' x' → logprob: -11.377284049987793
    8. '_candidates' → logprob: -11.627284049987793
    9. '<|end|>' → logprob: -11.627284049987793
    10. '
' → logprob: -12.502284049987793

Token 2377: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -5.157039049663581e-05
    2. ' candidates' → logprob: -9.875051498413086
    3. '_candidates' → logprob: -16.500051498413086
    4. '
' → logprob: -17.250051498413086
    5. 'candidate' → logprob: -18.000051498413086
    6. '   ' → logprob: -18.875051498413086
    7. 'cand' → logprob: -19.000051498413086
    8. 'andidates' → logprob: -19.125051498413086
    9. ' ' → logprob: -19.125051498413086
    10. '[c' → logprob: -19.250051498413086

Token 2378: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.20151041448116302
    2. 'if' → logprob: -1.7015104293823242
    3. '               ' → logprob: -10.451510429382324
    4. '                   ' → logprob: -10.826510429382324
    5. '           ' → logprob: -11.076510429382324
    6. '                       ' → logprob: -12.076510429382324
    7. '                ' → logprob: -12.451510429382324
    8. '                               ' → logprob: -12.951510429382324
    9. '                  ' → logprob: -13.076510429382324
    10. '<|end|>' → logprob: -13.076510429382324

Token 2379: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0002084277366520837
    2. ' len' → logprob: -8.500208854675293
    3. 'length' → logprob: -12.750208854675293
    4. '                   ' → logprob: -13.500208854675293
    5. '(len' → logprob: -15.000208854675293
    6. '               ' → logprob: -15.375208854675293
    7. '   ' → logprob: -16.875207901000977
    8. '           ' → logprob: -17.000207901000977
    9. '	len' → logprob: -17.000207901000977
    10. '                       ' → logprob: -18.375207901000977

Token 2380: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0001825642102630809
    2. 'x' → logprob: -8.625182151794434
    3. '(' → logprob: -13.125182151794434
    4. ' (' → logprob: -14.750182151794434
    5. '(
' → logprob: -15.750182151794434
    6. '==' → logprob: -15.750182151794434
    7. ' x' → logprob: -16.50018310546875
    8. ' ==' → logprob: -17.50018310546875
    9. '=' → logprob: -17.75018310546875
    10. '               ' → logprob: -17.87518310546875

Token 2381: ')' (ID: 8)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6415137052536011
    2. '==' → logprob: -0.7665137052536011
    3. ')' → logprob: -5.141513824462891
    4. ')==' → logprob: -5.891513824462891
    5. ' <=' → logprob: -9.26651382446289
    6. '<=' → logprob: -9.39151382446289
    7. '()' → logprob: -10.89151382446289
    8. '()==' → logprob: -10.89151382446289
    9. '==
' → logprob: -11.51651382446289
    10. ']==' → logprob: -12.01651382446289

Token 2382: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.20228593051433563
    2. ' ==' → logprob: -1.702285885810852
    3. '<=' → logprob: -7.3272857666015625
    4. ' <=' → logprob: -8.702285766601562
    5. '==
' → logprob: -10.077285766601562
    6. ')==' → logprob: -13.077285766601562
    7. '()==' → logprob: -13.202285766601562
    8. ' ==
' → logprob: -14.452285766601562
    9. '==(' → logprob: -14.952285766601562
    10. '```' → logprob: -14.952285766601562

Token 2383: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0005564896273426712
    2. ' min' → logprob: -7.500556468963623
    3. '   ' → logprob: -13.750556945800781
    4. 'max' → logprob: -14.000556945800781
    5. '(min' → logprob: -15.125556945800781
    6. '```' → logprob: -15.250556945800781
    7. '[min' → logprob: -15.250556945800781
    8. '=min' → logprob: -15.625556945800781
    9. '
' → logprob: -15.875556945800781
    10. '           ' → logprob: -16.12555694580078

Token 2384: '_c' (ID: 1303)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.736283540725708
    2. '_c' → logprob: -0.861283540725708
    3. 'cand' → logprob: -2.361283540725708
    4. '_len' → logprob: -6.611283302307129
    5. 'c' → logprob: -7.236283302307129
    6. 'len' → logprob: -7.486283302307129
    7. ' min' → logprob: -7.861283302307129
    8. '(min' → logprob: -7.861283302307129
    9. 'Cand' → logprob: -8.111283302307129
    10. ' cand' → logprob: -8.986283302307129

Token 2385: 'and' (ID: 427)
  Prédit: 'and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.06313216686248779
    2. 'andidates' → logprob: -2.8131322860717773
    3. 'cand' → logprob: -7.938132286071777
    4. 'andidate' → logprob: -8.188132286071777
    5. 'ands' → logprob: -8.938132286071777
    6. 'ength' → logprob: -9.188132286071777
    7. ' candidates' → logprob: -9.563132286071777
    8. 'c' → logprob: -9.938132286071777
    9. '==' → logprob: -10.063132286071777
    10. 'en' → logprob: -10.563132286071777

Token 2386: '_len' (ID: 13683)
  Prédit: 'th'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'th' → logprob: -0.30266058444976807
    2. 'h' → logprob: -1.677660584449768
    3. 'en' → logprob: -3.1776604652404785
    4. ' candidates' → logprob: -4.5526604652404785
    5. 'x' → logprob: -5.0526604652404785
    6. 'ength' → logprob: -5.8026604652404785
    7. 'g' → logprob: -5.9276604652404785
    8. 'ht' → logprob: -6.1776604652404785
    9. '   ' → logprob: -6.4276604652404785
    10. 'and' → logprob: -7.0526604652404785

Token 2387: '}
' (ID: 739)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.054368939250707626
    2. '}' → logprob: -3.5543689727783203
    3. '           ' → logprob: -3.9293689727783203
    4. '                   ' → logprob: -5.80436897277832
    5. '}
' → logprob: -7.30436897277832
    6. ')' → logprob: -8.05436897277832
    7. 'return' → logprob: -9.05436897277832
    8. ':
' → logprob: -9.05436897277832
    9. '       ' → logprob: -9.30436897277832
    10. '   ' → logprob: -9.55436897277832

Token 2388: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5560932755470276
    2. '               ' → logprob: -0.9310932755470276
    3. '       ' → logprob: -3.931093215942383
    4. '<|end|>' → logprob: -4.556093215942383
    5. ' ' → logprob: -7.431093215942383
    6. '                   ' → logprob: -7.556093215942383
    7. '```' → logprob: -8.431093215942383
    8. '	       ' → logprob: -8.556093215942383
    9. '[' → logprob: -8.931093215942383
    10. ')' → logprob: -9.181093215942383

Token 2389: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.5708696246147156
    2. '           ' → logprob: -0.9458696246147156
    3. '               ' → logprob: -3.3208696842193604
    4. 'for' → logprob: -4.820869445800781
    5. ' results' → logprob: -6.570869445800781
    6. '       ' → logprob: -8.195869445800781
    7. 'if' → logprob: -8.320869445800781
    8. ' for' → logprob: -8.945869445800781
    9. '   ' → logprob: -8.945869445800781
    10. 'return' → logprob: -9.445869445800781

Token 2390: '.update' (ID: 8689)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.8012285232543945
    2. '.update' → logprob: -0.8012285232543945
    3. '.' → logprob: -2.6762285232543945
    4. ' |=' → logprob: -3.4262285232543945
    5. '.union' → logprob: -8.426228523254395
    6. '|=
' → logprob: -8.426228523254395
    7. '=' → logprob: -8.676228523254395
    8. '.=' → logprob: -9.051228523254395
    9. '.|' → logprob: -9.301228523254395
    10. ' .' → logprob: -9.676228523254395

Token 2391: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.10022219270467758
    2. 'c' → logprob: -2.350222110748291
    3. '{' → logprob: -11.22522258758545
    4. '(' → logprob: -13.72522258758545
    5. '   ' → logprob: -15.22522258758545
    6. ' candidates' → logprob: -15.85022258758545
    7. '               ' → logprob: -16.100221633911133
    8. 'cand' → logprob: -16.225221633911133
    9. '	c' → logprob: -16.350221633911133
    10. '(
' → logprob: -16.350221633911133

Token 2392: 'andidates' (ID: 38168)
  Prédit: 'andidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'andidates' → logprob: -0.00038932388997636735
    2. '{' → logprob: -7.875389099121094
    3. 'c' → logprob: -12.250389099121094
    4. 'and' → logprob: -13.000389099121094
    5. 'andidate' → logprob: -14.625389099121094
    6. '{'' → logprob: -14.625389099121094
    7. '_candidates' → logprob: -14.875389099121094
    8. '[c' → logprob: -15.875389099121094
    9. '```' → logprob: -16.250389099121094
    10. 'andid' → logprob: -16.375389099121094

Token 2393: ')

' (ID: 1029)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03252898156642914
    2. ')' → logprob: -4.282528877258301
    3. '       ' → logprob: -4.282528877258301
    4. '               ' → logprob: -6.657528877258301
    5. '<|end|>' → logprob: -6.782528877258301
    6. '            
' → logprob: -7.532528877258301
    7. '        
' → logprob: -8.0325288772583
    8. '          ' → logprob: -8.5325288772583
    9. '.' → logprob: -8.7825288772583
    10. '
' → logprob: -8.7825288772583

Token 2394: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09841994941234589
    2. '       ' → logprob: -2.9734199047088623
    3. '
' → logprob: -4.098420143127441
    4. '        
' → logprob: -4.348420143127441
    5. '<|end|>' → logprob: -5.598420143127441
    6. ' 
' → logprob: -5.723420143127441
    7. '```' → logprob: -6.473420143127441
    8. '    
' → logprob: -6.723420143127441
    9. '            
' → logprob: -6.848420143127441
    10. '       
' → logprob: -8.723420143127441

Token 2395: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3290513753890991
    2. 'for' → logprob: -1.3290513753890991
    3. '#' (adapté à ' #') → logprob: -4.954051494598389
    4. '       ' → logprob: -5.579051494598389
    5. 'if' → logprob: -5.829051494598389
    6. 'pairs' → logprob: -7.704051494598389
    7. 'all' → logprob: -7.829051494598389
    8. 'op' → logprob: -8.20405101776123
    9. 'left' → logprob: -8.45405101776123
    10. '            
' → logprob: -8.70405101776123

Token 2396: ' Try' (ID: 14720)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02264593541622162
    2. '#' → logprob: -3.897645950317383
    3. '           ' → logprob: -6.272645950317383
    4. 'max' → logprob: -9.272645950317383
    5. 'MAX' → logprob: -11.022645950317383
    6. 'size' → logprob: -11.147645950317383
    7. 'length' → logprob: -11.147645950317383
    8. 'n' → logprob: -11.272645950317383
    9. 'vars' → logprob: -11.647645950317383
    10. 'all' → logprob: -11.772645950317383

Token 2397: ' binary' (ID: 15600)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.25956255197525024
    2. 'lf' → logprob: -2.6345624923706055
    3. 'pairs' → logprob: -3.0095624923706055
    4. '           ' → logprob: -3.3845624923706055
    5. 'for' → logprob: -3.8845624923706055
    6. 'left' → logprob: -4.7595624923706055
    7. '       ' → logprob: -4.7595624923706055
    8. '#' → logprob: -4.8845624923706055
    9. 'self' → logprob: -5.0095624923706055
    10. '   ' → logprob: -5.7595624923706055

Token 2398: ' ops' (ID: 26973)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.6231874227523804
    2. '(
' → logprob: -2.62318754196167
    3. 'ops' → logprob: -2.62318754196167
    4. '_ops' → logprob: -2.74818754196167
    5. 'operators' → logprob: -3.24818754196167
    6. 'and' → logprob: -3.37318754196167
    7. '_op' → logprob: -3.49818754196167
    8. '   ' → logprob: -3.62318754196167
    9. '       ' → logprob: -3.87318754196167
    10. 'for' → logprob: -4.49818754196167

Token 2399: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003375672735273838
    2. 'for' → logprob: -5.75337553024292
    3. '       ' → logprob: -8.753376007080078
    4. ' for' → logprob: -10.753376007080078
    5. '               ' → logprob: -12.003376007080078
    6. '   ' → logprob: -12.253376007080078
    7. 'left' → logprob: -13.128376007080078
    8. 'from' → logprob: -13.503376007080078
    9. 'bits' → logprob: -13.503376007080078
    10. '```' → logprob: -14.628376007080078

Token 2400: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.022045915946364403
    2. '       ' → logprob: -4.147046089172363
    3. 'for' → logprob: -5.147046089172363
    4. ' for' → logprob: -9.647046089172363
    5. '   ' → logprob: -9.647046089172363
    6. '               ' → logprob: -11.147046089172363
    7. 'left' → logprob: -11.147046089172363
    8. 'bits' → logprob: -11.522046089172363
    9. 'all' → logprob: -12.397046089172363
    10. 'keys' → logprob: -14.397046089172363

Token 2401: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08029673248529434
    2. '           ' → logprob: -2.580296754837036
    3. '       ' → logprob: -6.705296516418457
    4. ' for' → logprob: -9.330296516418457
    5. 'n' → logprob: -10.205296516418457
    6. 'bits' → logprob: -10.955296516418457
    7. '   ' → logprob: -11.080296516418457
    8. '               ' → logprob: -12.205296516418457
    9. '#' (adapté à ' #') → logprob: -12.330296516418457
    10. 'max' → logprob: -12.580296516418457

Token 2402: ' Because' (ID: 13602)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08920325338840485
    2. '           ' → logprob: -2.464203357696533
    3. '       ' → logprob: -9.089202880859375
    4. ' for' → logprob: -9.964202880859375
    5. 'bits' → logprob: -9.964202880859375
    6. '#' → logprob: -11.589202880859375
    7. 'n' → logprob: -11.714202880859375
    8. '   ' → logprob: -11.964202880859375
    9. 'all' → logprob: -11.964202880859375
    10. 'vars' → logprob: -12.714202880859375

Token 2403: ' the' (ID: 290)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.23089781403541565
    2. 'len' → logprob: -2.230897903442383
    3. 'lf' → logprob: -3.480897903442383
    4. 'self' → logprob: -3.605897903442383
    5. ' bits' → logprob: -4.855897903442383
    6. 'left' → logprob: -5.230897903442383
    7. 'for' → logprob: -5.355897903442383
    8. 'True' → logprob: -5.605897903442383
    9. 'x' → logprob: -5.730897903442383
    10. '0' → logprob: -6.230897903442383

Token 2404: ' grammar' (ID: 41735)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.5887033939361572
    2. 'for' → logprob: -1.4637033939361572
    3. 'cache' → logprob: -2.5887033939361572
    4. 'len' → logprob: -3.5887033939361572
    5. 'keys' → logprob: -3.5887033939361572
    6. ' for' → logprob: -3.8387033939361572
    7. 'self' → logprob: -4.588703155517578
    8. 'cached' → logprob: -4.963703155517578
    9. ' bits' → logprob: -5.088703155517578
    10. 'length' → logprob: -5.088703155517578

Token 2405: ' requires' (ID: 10860)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.32229605317115784
    2. 'is' → logprob: -2.697296142578125
    3. ' is' → logprob: -2.822296142578125
    4. 'for' → logprob: -2.822296142578125
    5. ' for' → logprob: -4.072296142578125
    6. ' continues' → logprob: -4.447296142578125
    7. '       ' → logprob: -4.822296142578125
    8. ':' → logprob: -4.947296142578125
    9. 'contin' → logprob: -5.197296142578125
    10. '#' → logprob: -5.322296142578125

Token 2406: ' parentheses' (ID: 180602)
  Prédit: 'lf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lf' → logprob: -0.9911331534385681
    2. 'left' → logprob: -1.241133213043213
    3. 'self' → logprob: -1.741133213043213
    4. '0' → logprob: -3.491133213043213
    5. 'pairs' → logprob: -4.366133213043213
    6. 'True' → logprob: -4.491133213043213
    7. 'bits' → logprob: -4.491133213043213
    8. 'for' → logprob: -4.491133213043213
    9. ' lf' → logprob: -4.616133213043213
    10. 'the' → logprob: -4.741133213043213

Token 2407: ' around' (ID: 2846)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5925948619842529
    2. ' for' → logprob: -1.467594861984253
    3. 'for' → logprob: -1.717594861984253
    4. ',' → logprob: -3.592594861984253
    5. ' and' → logprob: -5.967595100402832
    6. 'and' → logprob: -6.342595100402832
    7. '#' → logprob: -7.092595100402832
    8. ' (' → logprob: -7.092595100402832
    9. ':
' → logprob: -7.592595100402832
    10. '(
' → logprob: -7.717595100402832

Token 2408: ' binary' (ID: 15600)
  Prédit: 'both'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'both' → logprob: -0.8069079518318176
    2. 'left' → logprob: -1.3069078922271729
    3. 'express' → logprob: -2.056907892227173
    4. 'the' → logprob: -3.306907892227173
    5. 'expr' → logprob: -3.431907892227173
    6. 'each' → logprob: -3.681907892227173
    7. 'all' → logprob: -4.056908130645752
    8. 'sub' → logprob: -4.806908130645752
    9. 'any' → logprob: -4.931908130645752
    10. 'binary' → logprob: -5.556908130645752

Token 2409: ' ops' (ID: 26973)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.5652943253517151
    2. 'op' → logprob: -1.3152942657470703
    3. 'express' → logprob: -2.5652942657470703
    4. 'operators' → logprob: -3.3152942657470703
    5. 'operations' → logprob: -3.3152942657470703
    6. 'expr' → logprob: -5.44029426574707
    7. 'operator' → logprob: -5.81529426574707
    8. 'operation' → logprob: -6.81529426574707
    9. '(op' → logprob: -7.69029426574707
    10. ' ops' → logprob: -7.69029426574707

Token 2410: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09362028539180756
    2. ',' → logprob: -3.0936203002929688
    3. 'for' → logprob: -3.3436203002929688
    4. ' for' → logprob: -4.843620300292969
    5. '       ' → logprob: -8.843620300292969
    6. ' (' → logprob: -8.968620300292969
    7. '(' → logprob: -9.468620300292969
    8. '(for' → logprob: -9.593620300292969
    9. 'and' → logprob: -9.718620300292969
    10. '               ' → logprob: -9.968620300292969

Token 2411: ' length' (ID: 5517)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25273650884628296
    2. '           ' → logprob: -1.5027365684509277
    3. ' for' → logprob: -7.502736568450928
    4. '#' → logprob: -9.00273609161377
    5. '               ' → logprob: -9.87773609161377
    6. '   ' → logprob: -10.12773609161377
    7. '       ' → logprob: -11.00273609161377
    8. 'length' → logprob: -12.00273609161377
    9. ' ' → logprob: -12.62773609161377
    10. '          ' → logprob: -13.25273609161377

Token 2412: ' always' (ID: 3324)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.4842371344566345
    2. '=' → logprob: -1.2342371940612793
    3. ' +=' → logprob: -2.8592371940612793
    4. ' =' → logprob: -4.109237194061279
    5. '+' → logprob: -4.484237194061279
    6. 'is' → logprob: -6.234237194061279
    7. 'includes' → logprob: -6.734237194061279
    8. 'for' → logprob: -7.234237194061279
    9. '           ' → logprob: -7.734237194061279
    10. ' is' → logprob: -7.734237194061279

Token 2413: ' at' (ID: 540)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.4239255487918854
    2. '=' → logprob: -1.923925518989563
    3. '+=' → logprob: -2.4239256381988525
    4. '+' → logprob: -2.5489256381988525
    5. '>' → logprob: -3.7989256381988525
    6. 'is' → logprob: -5.798925399780273
    7. '≥' → logprob: -6.048925399780273
    8. ' >=' → logprob: -7.798925399780273
    9. ')' → logprob: -7.923925399780273
    10. '   ' → logprob: -8.048925399780273

Token 2414: ' least' (ID: 5153)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'least' → logprob: -1.580929347255733e-05
    2. ' least' → logprob: -11.750016212463379
    3. 'minimum' → logprob: -12.500016212463379
    4. '
' → logprob: -13.750016212463379
    5. 'at' → logprob: -13.875016212463379
    6. '>' → logprob: -14.000016212463379
    7. '_le' → logprob: -15.750016212463379
    8. 'last' → logprob: -15.750016212463379
    9. '   ' → logprob: -15.750016212463379
    10. '3' → logprob: -16.000015258789062

Token 2415: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.41411593556404114
    2. '5' → logprob: -1.1641159057617188
    3. '4' → logprob: -3.6641159057617188
    4. '6' → logprob: -7.914115905761719
    5. '   ' → logprob: -8.539115905761719
    6. '2' → logprob: -8.789115905761719
    7. '
' → logprob: -9.039115905761719
    8. '1' → logprob: -9.039115905761719
    9. '(' → logprob: -9.164115905761719
    10. '7' → logprob: -9.289115905761719

Token 2416: '5' (ID: 20)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.143153578042984
    2. '5' → logprob: -2.018153667449951
    3. '4' → logprob: -8.143153190612793
    4. '1' → logprob: -9.643153190612793
    5. '7' → logprob: -10.893153190612793
    6. '...' → logprob: -10.893153190612793
    7. '
' → logprob: -11.143153190612793
    8. '(' → logprob: -11.143153190612793
    9. ' ' → logprob: -11.518153190612793
    10. '```' → logprob: -11.518153190612793

Token 2417: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010118496138602495
    2. ' for' → logprob: -7.876011848449707
    3. '       ' → logprob: -8.376011848449707
    4. 'for' → logprob: -8.501011848449707
    5. ',' → logprob: -9.876011848449707
    6. '
' → logprob: -10.126011848449707
    7. '<|end|>' → logprob: -10.376011848449707
    8. '   ' → logprob: -10.501011848449707
    9. '            
' → logprob: -11.251011848449707
    10. '<|end|>' → logprob: -12.376011848449707

Token 2418: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.3676733690081164e-05
    2. '       ' → logprob: -11.12502384185791
    3. '               ' → logprob: -12.12502384185791
    4. '            
' → logprob: -13.62502384185791
    5. ' for' → logprob: -14.75002384185791
    6. '                   ' → logprob: -15.00002384185791
    7. '          ' → logprob: -15.00002384185791
    8. 'for' → logprob: -15.00002384185791
    9. '   ' → logprob: -15.12502384185791
    10. '
' → logprob: -15.75002384185791

Token 2419: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.043668124824762344
    2. 'for' → logprob: -3.168668031692505
    3. '       ' → logprob: -7.793668270111084
    4. ' for' → logprob: -8.418667793273926
    5. '               ' → logprob: -11.043667793273926
    6. '   ' → logprob: -11.418667793273926
    7. '            
' → logprob: -13.168667793273926
    8. '          ' → logprob: -13.918667793273926
    9. '```' → logprob: -14.043667793273926
    10. '                   ' → logprob: -14.168667793273926

Token 2420: ' Enumer' (ID: 56157)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3531445562839508
    2. 'for' → logprob: -1.2281445264816284
    3. ' for' → logprob: -5.978144645690918
    4. '       ' → logprob: -6.228144645690918
    5. '   ' → logprob: -9.228144645690918
    6. '               ' → logprob: -10.853144645690918
    7. '
' → logprob: -11.353144645690918
    8. '```' → logprob: -11.353144645690918
    9. '            
' → logprob: -11.978144645690918
    10. 'length' → logprob: -11.978144645690918

Token 2421: 'ate' (ID: 379)
  Prédit: 'ate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ate' → logprob: -3.416665640543215e-05
    2. '       ' → logprob: -11.00003433227539
    3. 'ates' → logprob: -11.25003433227539
    4. '   ' → logprob: -12.87503433227539
    5. '           ' → logprob: -13.87503433227539
    6. 'ating' → logprob: -14.87503433227539
    7. 'ATE' → logprob: -15.50003433227539
    8. 'rate' → logprob: -16.00003433227539
    9. '        ' → logprob: -16.50003433227539
    10. '    ' → logprob: -16.62503433227539

Token 2422: ' all' (ID: 722)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13369280099868774
    2. ' for' → logprob: -2.758692741394043
    3. 'bits' → logprob: -3.008692741394043
    4. '           ' → logprob: -6.133692741394043
    5. 'range' → logprob: -6.383692741394043
    6. '   ' → logprob: -6.633692741394043
    7. '       ' → logprob: -6.633692741394043
    8. 'all' → logprob: -6.758692741394043
    9. 'left' → logprob: -6.883692741394043
    10. ' bits' → logprob: -6.883692741394043

Token 2423: ' partitions' (ID: 89097)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0744520053267479
    2. '(bits' → logprob: -3.1994519233703613
    3. 'bits' → logprob: -4.074451923370361
    4. 'cached' → logprob: -5.324451923370361
    5. 'keys' → logprob: -5.699451923370361
    6. '       ' → logprob: -6.949451923370361
    7. 'known' → logprob: -7.324451923370361
    8. ' for' → logprob: -7.574451923370361
    9. '   ' → logprob: -7.699451923370361
    10. 'range' → logprob: -7.824451923370361

Token 2424: ' of' (ID: 328)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5904093980789185
    2. ' for' → logprob: -0.8404093980789185
    3. '           ' → logprob: -4.340409278869629
    4. ' in' → logprob: -8.090409278869629
    5. '(' → logprob: -8.340409278869629
    6. ' of' → logprob: -8.590409278869629
    7. 'range' → logprob: -9.465409278869629
    8. 'from' → logprob: -9.715409278869629
    9. 'bits' → logprob: -9.840409278869629
    10. '       ' → logprob: -9.965409278869629

Token 2425: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.010452361777424812
    2. '16' → logprob: -4.8854522705078125
    3. '(bits' → logprob: -7.1354522705078125
    4. '1' → logprob: -7.7604522705078125
    5. '0' → logprob: -8.010452270507812
    6. ' bits' → logprob: -8.760452270507812
    7. '(' → logprob: -8.885452270507812
    8. 'range' → logprob: -9.260452270507812
    9. 'length' → logprob: -9.385452270507812
    10. '#' → logprob: -9.385452270507812

Token 2426: ' into' (ID: 1511)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3081057369709015
    2. ':
' → logprob: -2.808105707168579
    3. '
' → logprob: -3.308105707168579
    4. '           ' → logprob: -3.308105707168579
    5. 'for' → logprob: -3.308105707168579
    6. ' (' → logprob: -3.683105707168579
    7. ':' → logprob: -4.308105945587158
    8. ' in' → logprob: -4.933105945587158
    9. ' <<' → logprob: -5.058105945587158
    10. ' ' → logprob: -5.058105945587158

Token 2427: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.6062428951263428
    2. 'a' → logprob: -1.7312428951263428
    3. 'lhs' → logprob: -2.3562428951263428
    4. 'b' → logprob: -2.6062428951263428
    5. 'bits' → logprob: -3.3562428951263428
    6. 'A' → logprob: -3.9812428951263428
    7. 'first' → logprob: -4.481243133544922
    8. 'mask' → logprob: -4.981243133544922
    9. '2' → logprob: -5.231243133544922
    10. '1' → logprob: -5.356243133544922

Token 2428: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16413375735282898
    2. ' and' → logprob: -2.7891337871551514
    3. ' ,' → logprob: -3.1641337871551514
    4. 'and' → logprob: -3.6641337871551514
    5. '_bits' → logprob: -4.539133548736572
    6. 'bits' → logprob: -5.789133548736572
    7. ')' → logprob: -6.164133548736572
    8. '|' → logprob: -6.914133548736572
    9. '<<' → logprob: -7.664133548736572
    10. '),' → logprob: -7.664133548736572

Token 2429: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -3.643152740551159e-05
    2. ' right' → logprob: -10.250036239624023
    3. '1' → logprob: -14.375036239624023
    4. 'rights' → logprob: -15.375036239624023
    5. '
' → logprob: -15.625036239624023
    6. '	right' → logprob: -17.500036239624023
    7. '2' → logprob: -18.625036239624023
    8. 'rightness' → logprob: -19.125036239624023
    9. '[right' → logprob: -19.250036239624023
    10. '...' → logprob: -19.375036239624023

Token 2430: ' operands' (ID: 126381)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.2218737602233887
    2. ':
' → logprob: -1.5968737602233887
    3. ':' → logprob: -1.8468737602233887
    4. 'for' → logprob: -2.3468737602233887
    5. '           ' → logprob: -2.4718737602233887
    6. ',' → logprob: -2.5968737602233887
    7. ' (' → logprob: -4.596873760223389
    8. '
' → logprob: -4.721873760223389
    9. ' ' → logprob: -4.721873760223389
    10. '       ' → logprob: -4.846873760223389

Token 2431: ' that' (ID: 484)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23996372520923615
    2. ' for' → logprob: -2.3649637699127197
    3. 'for' → logprob: -3.4899637699127197
    4. '.' → logprob: -3.9899637699127197
    5. '       ' → logprob: -4.114963531494141
    6. ',' → logprob: -4.114963531494141
    7. ':' → logprob: -4.864963531494141
    8. ':
' → logprob: -4.864963531494141
    9. '...' → logprob: -5.739963531494141
    10. '(' → logprob: -5.739963531494141

Token 2432: ' could' (ID: 2023)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bits' → logprob: -1.8172022104263306
    2. ' sum' → logprob: -2.067202091217041
    3. 'sum' → logprob: -2.192202091217041
    4. ' have' → logprob: -2.317202091217041
    5. ' bits' → logprob: -2.442202091217041
    6. 'have' → logprob: -3.192202091217041
    7. 'generate' → logprob: -3.317202091217041
    8. ' can' → logprob: -3.442202091217041
    9. ' are' → logprob: -3.442202091217041
    10. 'can' → logprob: -3.567202091217041

Token 2433: ' be' (ID: 413)
  Prédit: 'combine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'combine' → logprob: -0.7119691371917725
    2. 'produce' → logprob: -1.4619691371917725
    3. 'compose' → logprob: -2.3369691371917725
    4. 'yield' → logprob: -2.3369691371917725
    5. 'be' → logprob: -3.2119691371917725
    6. 'represent' → logprob: -4.586969375610352
    7. 'make' → logprob: -4.711969375610352
    8. 'form' → logprob: -5.336969375610352
    9. 'result' → logprob: -5.461969375610352
    10. 'give' → logprob: -5.961969375610352

Token 2434: ' combined' (ID: 15890)
  Prédit: 'combined'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'combined' → logprob: -0.09709390252828598
    2. ' combined' → logprob: -3.5970938205718994
    3. 'bits' → logprob: -4.2220940589904785
    4. 'True' → logprob: -4.3470940589904785
    5. '1' → logprob: -4.8470940589904785
    6. 'used' → logprob: -5.8470940589904785
    7. 'true' → logprob: -6.2220940589904785
    8. 'correct' → logprob: -6.3470940589904785
    9. 'merged' → logprob: -6.4720940589904785
    10. 'valid' → logprob: -6.4720940589904785

Token 2435: ' by' (ID: 656)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01578529179096222
    2. ' for' → logprob: -4.515785217285156
    3. 'for' → logprob: -5.890785217285156
    4. ',' → logprob: -7.265785217285156
    5. '       ' → logprob: -8.015785217285156
    6. '               ' → logprob: -9.140785217285156
    7. '            
' → logprob: -9.390785217285156
    8. ':
' → logprob: -9.390785217285156
    9. '   ' → logprob: -9.640785217285156
    10. ' (' → logprob: -9.765785217285156

Token 2436: ' AND' (ID: 6178)
  Prédit: 'And'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'And' → logprob: -1.1168400049209595
    2. '&' → logprob: -2.24183988571167
    3. 'X' → logprob: -2.36683988571167
    4. ''' → logprob: -2.99183988571167
    5. 'and' → logprob: -2.99183988571167
    6. ''*' → logprob: -3.24183988571167
    7. 'xor' → logprob: -3.49183988571167
    8. '`' → logprob: -3.61683988571167
    9. '^' → logprob: -3.74183988571167
    10. ' And' → logprob: -3.74183988571167

Token 2437: ' or' (ID: 503)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.35574468970298767
    2. 'for' → logprob: -1.60574471950531
    3. ' for' → logprob: -2.7307446002960205
    4. ',' → logprob: -4.4807448387146
    5. ':
' → logprob: -4.9807448387146
    6. ' (' → logprob: -5.8557448387146
    7. ':' → logprob: -6.4807448387146
    8. '
' → logprob: -6.7307448387146
    9. '(' → logprob: -6.8557448387146
    10. ' and' → logprob: -6.9807448387146

Token 2438: ' XOR' (ID: 147209)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0022256681695580482
    2. ' XOR' → logprob: -6.752225875854492
    3. ' X' → logprob: -7.627225875854492
    4. '^' → logprob: -8.002225875854492
    5. 'xor' → logprob: -8.627225875854492
    6. ' ' → logprob: -10.252225875854492
    7. '   ' → logprob: -12.127225875854492
    8. ' ^' → logprob: -12.252225875854492
    9. ' xor' → logprob: -13.127225875854492
    10. '`' → logprob: -13.752225875854492

Token 2439: '

' (ID: 279)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.0526293516159058
    2. '           ' → logprob: -2.3026294708251953
    3. '\n' → logprob: -2.3026294708251953
    4. '
' → logprob: -2.5526294708251953
    5. ' for' → logprob: -2.6776294708251953
    6. ' 
' → logprob: -3.1776294708251953
    7. ':' → logprob: -3.4276294708251953
    8. ',' → logprob: -3.8026294708251953
    9. ',
' → logprob: -3.8026294708251953
    10. 'for' → logprob: -4.177629470825195

Token 2440: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4271128475666046
    2. '           ' → logprob: -1.1771128177642822
    3. '        
' → logprob: -3.9271128177642822
    4. ' 
' → logprob: -5.177113056182861
    5. '
' → logprob: -5.552113056182861
    6. '    
' → logprob: -5.927113056182861
    7. '            
' → logprob: -6.802113056182861
    8. '   ' → logprob: -7.052113056182861
    9. '               ' → logprob: -7.177113056182861
    10. ' for' → logprob: -7.427113056182861

Token 2441: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14674483239650726
    2. 'for' → logprob: -2.021744728088379
    3. '       ' → logprob: -5.771744728088379
    4. ' for' → logprob: -7.146744728088379
    5. '               ' → logprob: -9.771744728088379
    6. '   ' → logprob: -10.271744728088379
    7. '
' → logprob: -11.021744728088379
    8. '            
' → logprob: -11.521744728088379
    9. '#' (adapté à ' #') → logprob: -11.646744728088379
    10. 'from' → logprob: -12.146744728088379

Token 2442: ' We' (ID: 1416)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5020101070404053
    2. '           ' → logprob: -1.0020101070404053
    3. '       ' → logprob: -3.6270101070404053
    4. ' for' → logprob: -8.252010345458984
    5. 'max' → logprob: -8.377010345458984
    6. '#' → logprob: -8.752010345458984
    7. 'bits' → logprob: -9.252010345458984
    8. '   ' → logprob: -9.752010345458984
    9. 'all' → logprob: -10.252010345458984
    10. 'n' → logprob: -10.377010345458984

Token 2443: ' will' (ID: 738)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.344414234161377
    2. '           ' → logprob: -1.344414234161377
    3. ' for' → logprob: -1.469414234161377
    4. 'for' → logprob: -1.469414234161377
    5. ' continue' → logprob: -5.094414234161377
    6. 'continue' → logprob: -5.094414234161377
    7. ' keys' → logprob: -7.094414234161377
    8. 'keys' → logprob: -7.094414234161377
    9. 'import' → logprob: -7.344414234161377
    10. '   ' → logprob: -7.469414234161377

Token 2444: ' try' (ID: 2075)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1092056855559349
    2. '           ' → logprob: -3.609205722808838
    3. ' for' → logprob: -3.984205722808838
    4. '       ' → logprob: -3.984205722808838
    5. 'continue' → logprob: -4.484205722808838
    6. 'bits' → logprob: -5.359205722808838
    7. 'cache' → logprob: -5.609205722808838
    8. '...' → logprob: -5.609205722808838
    9. 'keys' → logprob: -5.984205722808838
    10. 'from' → logprob: -5.984205722808838

Token 2445: ' all' (ID: 722)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.27479061484336853
    2. 'for' → logprob: -1.649790644645691
    3. ' for' → logprob: -4.7747907638549805
    4. 'left' → logprob: -5.0247907638549805
    5. ' bits' → logprob: -5.1497907638549805
    6. 'b' → logprob: -5.3997907638549805
    7. '           ' → logprob: -5.5247907638549805
    8. 'keys' → logprob: -5.7747907638549805
    9. '       ' → logprob: -5.7747907638549805
    10. 'all' → logprob: -6.1497907638549805

Token 2446: ' pairs' (ID: 24702)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.343383252620697
    2. 'for' → logprob: -2.218383312225342
    3. 'left' → logprob: -2.218383312225342
    4. 'possible' → logprob: -3.718383312225342
    5. 'range' → logprob: -3.968383312225342
    6. 'all' → logprob: -4.843383312225342
    7. '(bits' → logprob: -5.343383312225342
    8. 'other' → logprob: -6.468383312225342
    9. '   ' → logprob: -6.468383312225342
    10. '       ' → logprob: -6.593383312225342

Token 2447: ' from' (ID: 591)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.041739560663700104
    2. 'for' → logprob: -4.416739463806152
    3. ' for' → logprob: -4.416739463806152
    4. '       ' → logprob: -5.166739463806152
    5. '(bits' → logprob: -5.666739463806152
    6. '               ' → logprob: -6.416739463806152
    7. ' of' → logprob: -6.666739463806152
    8. '(' → logprob: -6.916739463806152
    9. 'bits' → logprob: -7.041739463806152
    10. ',' → logprob: -7.041739463806152

Token 2448: ' cache' (ID: 11956)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.6334100961685181
    2. 'self' → logprob: -0.7584100961685181
    3. 'bits' → logprob: -8.758410453796387
    4. '[self' → logprob: -8.758410453796387
    5. '(self' → logprob: -8.883410453796387
    6. 'range' → logprob: -9.633410453796387
    7. '[(' → logprob: -9.883410453796387
    8. 'sorted' → logprob: -10.008410453796387
    9. ' list' → logprob: -10.258410453796387
    10. ' self' → logprob: -10.383410453796387

Token 2449: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00010425841173855588
    2. '       ' → logprob: -9.875103950500488
    3. 'for' → logprob: -10.375103950500488
    4. ',' → logprob: -11.875103950500488
    5. '               ' → logprob: -11.875103950500488
    6. ' for' → logprob: -13.125103950500488
    7. 'keys' → logprob: -13.750103950500488
    8. '          ' → logprob: -14.125103950500488
    9. '            
' → logprob: -14.250103950500488
    10. 'import' → logprob: -14.625103950500488

Token 2450: ' but' (ID: 889)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009645807440392673
    2. 'for' → logprob: -7.125964641571045
    3. '       ' → logprob: -9.625964164733887
    4. ' for' → logprob: -9.875964164733887
    5. '               ' → logprob: -11.000964164733887
    6. 'tokens' → logprob: -12.000964164733887
    7. '          ' → logprob: -12.250964164733887
    8. 'keys' → logprob: -12.625964164733887
    9. '            
' → logprob: -13.125964164733887
    10. '            ' → logprob: -13.375964164733887

Token 2451: ' that' (ID: 484)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0974707305431366
    2. '...' → logprob: -2.972470760345459
    3. ' for' → logprob: -4.097470760345459
    4. '#' → logprob: -4.597470760345459
    5. '           ' → logprob: -4.722470760345459
    6. 'continue' → logprob: -6.222470760345459
    7. 'list' → logprob: -6.597470760345459
    8. 'keys' → logprob: -7.472470760345459
    9. 'len' → logprob: -7.472470760345459
    10. '```' → logprob: -8.0974702835083

Token 2452: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.56964111328125
    2. '...' → logprob: -2.19464111328125
    3. ' continues' → logprob: -2.56964111328125
    4. '.' → logprob: -2.69464111328125
    5. 'is' → logprob: -2.69464111328125
    6. '.keys' → logprob: -3.06964111328125
    7. ':' → logprob: -3.31964111328125
    8. '       ' → logprob: -3.44464111328125
    9. ' might' → logprob: -3.69464111328125
    10. 'contin' → logprob: -3.81964111328125

Token 2453: ' impossible' (ID: 19786)
  Prédit: 'very'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'very' → logprob: -1.1150996685028076
    2. '       ' → logprob: -1.4900996685028076
    3. 'too' → logprob: -1.7400996685028076
    4. 'exp' → logprob: -2.7400996685028076
    5. ' too' → logprob: -3.3650996685028076
    6. ' very' → logprob: -3.3650996685028076
    7. '...' → logprob: -3.9900996685028076
    8. 'len' → logprob: -4.115099906921387
    9. '           ' → logprob: -4.240099906921387
    10. 'quite' → logprob: -4.740099906921387

Token 2454: ' since' (ID: 3630)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14012977480888367
    2. '.' → logprob: -3.515129804611206
    3. '#' → logprob: -3.640129804611206
    4. ',' → logprob: -4.140129566192627
    5. 'for' → logprob: -4.265129566192627
    6. ':
' → logprob: -4.515129566192627
    7. ' for' → logprob: -4.765129566192627
    8. ':' → logprob: -5.015129566192627
    9. '       ' → logprob: -5.515129566192627
    10. '...' → logprob: -5.640129566192627

Token 2455: ' ' (ID: 220)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.5780319571495056
    2. 'True' → logprob: -1.9530320167541504
    3. '...' → logprob: -2.0780320167541504
    4. '#' → logprob: -2.2030320167541504
    5. 'list' → logprob: -4.32803201675415
    6. ' True' → logprob: -4.45303201675415
    7. 'False' → logprob: -4.57803201675415
    8. ' for' → logprob: -5.07803201675415
    9. 'for' → logprob: -5.45303201675415
    10. '<|end|>' → logprob: -5.70303201675415

Token 2456: '2' (ID: 17)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.15786314010620117
    2. '#' → logprob: -2.532863140106201
    3. 'self' → logprob: -2.907863140106201
    4. 'True' → logprob: -6.032863140106201
    5. 'keys' → logprob: -6.532863140106201
    6. '
' → logprob: -6.782863140106201
    7. ' len' → logprob: -6.907863140106201
    8. 'for' → logprob: -7.157863140106201
    9. 'tokens' → logprob: -7.282863140106201
    10. ' for' → logprob: -7.407863140106201

Token 2457: '^' (ID: 61)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20922820270061493
    2. '4' → logprob: -3.209228277206421
    3. '       ' → logprob: -3.834228277206421
    4. '**' → logprob: -4.334228038787842
    5. '
' → logprob: -4.459228038787842
    6. '^' → logprob: -4.459228038787842
    7. ':' → logprob: -4.709228038787842
    8. '6' → logprob: -4.834228038787842
    9. '   ' → logprob: -4.959228038787842
    10. '           ' → logprob: -5.084228038787842

Token 2458: '16' (ID: 1125)
  Prédit: '16'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '16' → logprob: -2.629921436891891e-05
    2. '(' → logprob: -11.50002670288086
    3. '   ' → logprob: -12.50002670288086
    4. '0' → logprob: -12.75002670288086
    5. '#' → logprob: -13.37502670288086
    6. '           ' → logprob: -13.50002670288086
    7. '
' → logprob: -13.75002670288086
    8. ' ' → logprob: -14.12502670288086
    9. '       ' → logprob: -14.12502670288086
    10. '1' → logprob: -14.62502670288086

Token 2459: ' huge' (ID: 9560)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3064757585525513
    2. ',' → logprob: -1.9314757585525513
    3. ':' → logprob: -1.9314757585525513
    4. '
' → logprob: -2.0564756393432617
    5. '{' → logprob: -3.1814756393432617
    6. '.' → logprob: -3.3064756393432617
    7. ':
' → logprob: -3.6814756393432617
    8. '#' → logprob: -3.6814756393432617
    9. ')' → logprob: -3.8064756393432617
    10. '...' → logprob: -3.9314756393432617

Token 2460: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08160731941461563
    2. '       ' → logprob: -3.0816073417663574
    3. '.' → logprob: -4.456607341766357
    4. '#' → logprob: -4.956607341766357
    5. ',' → logprob: -5.706607341766357
    6. '...' → logprob: -6.081607341766357
    7. ':' → logprob: -6.331607341766357
    8. ':
' → logprob: -6.706607341766357
    9. ',
' → logprob: -7.206607341766357
    10. ' for' → logprob: -7.331607341766357

Token 2461: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010638902895152569
    2. '       ' → logprob: -7.001063823699951
    3. 'for' → logprob: -9.50106430053711
    4. '               ' → logprob: -10.87606430053711
    5. ' for' → logprob: -11.12606430053711
    6. '```' → logprob: -11.75106430053711
    7. 'continue' → logprob: -11.87606430053711
    8. '#' → logprob: -12.12606430053711
    9. '
' → logprob: -12.12606430053711
    10. '            
' → logprob: -12.37606430053711

Token 2462: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.48416441679000854
    2. '       ' → logprob: -0.9841644167900085
    3. '
' → logprob: -5.234164237976074
    4. ' for' → logprob: -6.484164237976074
    5. '        
' → logprob: -7.109164237976074
    6. 'for' → logprob: -7.734164237976074
    7. '#' (adapté à ' #') → logprob: -8.109164237976074
    8. '               ' → logprob: -8.609164237976074
    9. '   ' → logprob: -8.609164237976074
    10. '            
' → logprob: -8.734164237976074

Token 2463: ' Instead' (ID: 21050)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18394134938716888
    2. '           ' → logprob: -1.80894136428833
    3. '#' → logprob: -6.05894136428833
    4. 'for' → logprob: -6.93394136428833
    5. ' for' → logprob: -7.80894136428833
    6. 'return' → logprob: -9.308940887451172
    7. '               ' → logprob: -9.308940887451172
    8. '        
' → logprob: -9.433940887451172
    9. '   ' → logprob: -9.683940887451172
    10. '...' → logprob: -10.808940887451172

Token 2464: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1015479564666748
    2. '       ' → logprob: -2.351547956466675
    3. ',' → logprob: -8.101548194885254
    4. 'continue' → logprob: -8.226548194885254
    5. '...' → logprob: -8.851548194885254
    6. '<|end|>' → logprob: -9.351548194885254
    7. 'we' → logprob: -9.476548194885254
    8. 'return' → logprob: -9.601548194885254
    9. '<|end|>' → logprob: -9.601548194885254
    10. '#' → logprob: -9.726548194885254

Token 2465: ' recursively' (ID: 130266)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03671282157301903
    2. '       ' → logprob: -4.536712646484375
    3. '#' → logprob: -4.661712646484375
    4. 'return' → logprob: -4.911712646484375
    5. 'for' → logprob: -5.036712646484375
    6. ' for' → logprob: -6.786712646484375
    7. '...' → logprob: -7.786712646484375
    8. ' return' → logprob: -8.161712646484375
    9. 'continue' → logprob: -9.911712646484375
    10. '   ' → logprob: -10.286712646484375

Token 2466: ' try' (ID: 2075)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6262756586074829
    2. 'for' → logprob: -1.001275658607483
    3. 'def' → logprob: -4.001275539398193
    4. 'calls' → logprob: -4.001275539398193
    5. 'expand' → logprob: -4.001275539398193
    6. '#' → logprob: -4.126275539398193
    7. 'try' → logprob: -5.376275539398193
    8. '       ' → logprob: -5.376275539398193
    9. 'call' → logprob: -5.626275539398193
    10. 'return' → logprob: -6.251275539398193

Token 2467: ' combinations' (ID: 43835)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12921947240829468
    2. 'bits' → logprob: -2.7542195320129395
    3. '           ' → logprob: -3.5042195320129395
    4. 'cached' → logprob: -4.6292195320129395
    5. ' for' → logprob: -5.7542195320129395
    6. '       ' → logprob: -5.8792195320129395
    7. 'known' → logprob: -6.3792195320129395
    8. 'k' → logprob: -6.3792195320129395
    9. '   ' → logprob: -6.6292195320129395
    10. 'all' → logprob: -6.8792195320129395

Token 2468: ' built' (ID: 8113)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013748762430623174
    2. '       ' → logprob: -6.8763747215271
    3. ' for' → logprob: -8.751375198364258
    4. 'for' → logprob: -9.876375198364258
    5. '               ' → logprob: -9.876375198364258
    6. ',' → logprob: -10.126375198364258
    7. '
' → logprob: -11.876375198364258
    8. '                   ' → logprob: -12.126375198364258
    9. '            
' → logprob: -12.626375198364258
    10. '          ' → logprob: -12.876375198364258

Token 2469: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.13155794143676758
    2. '           ' → logprob: -2.2565579414367676
    3. '               ' → logprob: -4.881557941436768
    4. 'for' → logprob: -5.756557941436768
    5. 'on' → logprob: -6.006557941436768
    6. '                   ' → logprob: -6.756557941436768
    7. 'by' → logprob: -6.881557941436768
    8. 'only' → logprob: -7.006557941436768
    9. '                       ' → logprob: -7.256557941436768
    10. '       ' → logprob: -8.00655746459961

Token 2470: ' smaller' (ID: 13679)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.5356175899505615
    2. 'self' → logprob: -0.9106175899505615
    3. 'bits' → logprob: -4.785617828369141
    4. 'sorted' → logprob: -6.410617828369141
    5. 'next' → logprob: -7.410617828369141
    6. 'range' → logprob: -7.785617828369141
    7. 'the' → logprob: -8.78561782836914
    8. '
' → logprob: -8.91061782836914
    9. '[self' → logprob: -9.16061782836914
    10. '...' → logprob: -9.16061782836914

Token 2471: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.26580628752708435
    2. 'keys' → logprob: -1.8908063173294067
    3. 'length' → logprob: -3.390806198120117
    4. 'cached' → logprob: -4.390806198120117
    5. 'cache' → logprob: -5.015806198120117
    6. 'forms' → logprob: -5.015806198120117
    7. 'for' → logprob: -5.140806198120117
    8. 'express' → logprob: -5.640806198120117
    9. 'results' → logprob: -6.140806198120117
    10. '#' → logprob: -6.515806198120117

Token 2472: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05594729259610176
    2. '<|end|>' → logprob: -3.8059473037719727
    3. '<|end|>' → logprob: -5.055947303771973
    4. '       ' → logprob: -5.305947303771973
    5. ' for' → logprob: -5.555947303771973
    6. '...' → logprob: -5.555947303771973
    7. '.' → logprob: -5.555947303771973
    8. ',' → logprob: -6.180947303771973
    9. ' (' → logprob: -7.180947303771973
    10. '            ' → logprob: -7.555947303771973

Token 2473: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.024638447910547256
    2. '       ' → logprob: -3.8996384143829346
    3. '
' → logprob: -5.524638652801514
    4. '        
' → logprob: -10.149638175964355
    5. '            
' → logprob: -10.649638175964355
    6. '               ' → logprob: -11.274638175964355
    7. 'for' → logprob: -12.024638175964355
    8. '```' → logprob: -12.274638175964355
    9. '    
' → logprob: -12.524638175964355
    10. 'return' → logprob: -12.524638175964355

Token 2474: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00453977333381772
    2. '       ' → logprob: -5.504539966583252
    3. '
' → logprob: -8.004539489746094
    4. '            
' → logprob: -10.379539489746094
    5. '               ' → logprob: -10.504539489746094
    6. '        
' → logprob: -10.754539489746094
    7. 'for' → logprob: -12.129539489746094
    8. ',' → logprob: -12.129539489746094
    9. '```' → logprob: -12.379539489746094
    10. '    
' → logprob: -12.504539489746094

Token 2475: ' But' (ID: 3072)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4666118323802948
    2. '       ' → logprob: -1.4666118621826172
    3. '
' → logprob: -1.9666118621826172
    4. '        
' → logprob: -6.841611862182617
    5. ' for' → logprob: -8.091611862182617
    6. 'for' → logprob: -8.466611862182617
    7. '            
' → logprob: -8.591611862182617
    8. '    
' → logprob: -9.216611862182617
    9. '               ' → logprob: -9.591611862182617
    10. '```' → logprob: -9.591611862182617

Token 2476: ' we' (ID: 581)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017633209004998207
    2. ' for' → logprob: -4.892633438110352
    3. '       ' → logprob: -5.392633438110352
    4. 'for' → logprob: -5.892633438110352
    5. 'return' → logprob: -6.892633438110352
    6. ' return' → logprob: -7.517633438110352
    7. '...' → logprob: -7.892633438110352
    8. '#' → logprob: -8.517633438110352
    9. '   ' → logprob: -8.892633438110352
    10. '               ' → logprob: -9.517633438110352

Token 2477: ' do' (ID: 621)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23070001602172852
    2. ' continue' → logprob: -2.6057000160217285
    3. '   ' → logprob: -2.9807000160217285
    4. '           ' → logprob: -4.1057000160217285
    5. 'continue' → logprob: -4.1057000160217285
    6. ' cannot' → logprob: -4.8557000160217285
    7. ' have' → logprob: -5.1057000160217285
    8. ' need' → logprob: -5.2307000160217285
    9. '    ' → logprob: -5.4807000160217285
    10. ' can' → logprob: -5.7307000160217285

Token 2478: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.07687415927648544
    2. '           ' → logprob: -3.201874256134033
    3. ' not' → logprob: -3.576874256134033
    4. 'continue' → logprob: -5.826874256134033
    5. '       ' → logprob: -6.826874256134033
    6. '               ' → logprob: -7.576874256134033
    7. 'have' → logprob: -8.576873779296875
    8. '   ' → logprob: -8.701873779296875
    9. '```' → logprob: -9.451873779296875
    10. ' continue' → logprob: -9.951873779296875

Token 2479: ' know' (ID: 1761)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4490131139755249
    2. '       ' → logprob: -1.949013113975525
    3. 'return' → logprob: -2.1990132331848145
    4. 'have' → logprob: -3.5740132331848145
    5. ' return' → logprob: -3.6990132331848145
    6. 'continue' → logprob: -3.8240132331848145
    7. ' have' → logprob: -4.3240132331848145
    8. '   ' → logprob: -4.5740132331848145
    9. '               ' → logprob: -5.8240132331848145
    10. ' continue' → logprob: -6.9490132331848145

Token 2480: ' which' (ID: 1118)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.40783482789993286
    2. 'bits' → logprob: -2.407834768295288
    3. 'self' → logprob: -2.782834768295288
    4. ' bits' → logprob: -3.032834768295288
    5. '       ' → logprob: -3.657834768295288
    6. ' self' → logprob: -3.782834768295288
    7. ' the' → logprob: -3.907834768295288
    8. ' how' → logprob: -4.782835006713867
    9. 'the' → logprob: -5.282835006713867
    10. '
' → logprob: -5.407835006713867

Token 2481: ' functions' (ID: 9964)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.06670407950878143
    2. 'sub' → logprob: -4.191704273223877
    3. '#' → logprob: -5.066704273223877
    4. '   ' → logprob: -5.191704273223877
    5. 'parts' → logprob: -5.191704273223877
    6. 'left' → logprob: -5.441704273223877
    7. 'cached' → logprob: -5.691704273223877
    8. ' bits' → logprob: -6.066704273223877
    9. ')' → logprob: -6.191704273223877
    10. 'subset' → logprob: -6.191704273223877

Token 2482: ' compose' (ID: 43360)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2678298056125641
    2. ' to' → logprob: -2.5178298950195312
    3. '#' → logprob: -3.1428298950195312
    4. ',' → logprob: -4.017829895019531
    5. ' can' → logprob: -4.392829895019531
    6. 'to' → logprob: -4.392829895019531
    7. '       ' → logprob: -4.642829895019531
    8. 'continue' → logprob: -4.642829895019531
    9. ' are' → logprob: -5.142829895019531
    10. 'bits' → logprob: -5.392829895019531

Token 2483: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.45754656195640564
    2. '           ' → logprob: -1.707546591758728
    3. ' bits' → logprob: -2.9575464725494385
    4. 'the' → logprob: -3.4575464725494385
    5. ' the' → logprob: -4.082546710968018
    6. '       ' → logprob: -4.332546710968018
    7. '(bits' → logprob: -4.582546710968018
    8. 'self' → logprob: -4.957546710968018
    9. '   ' → logprob: -5.082546710968018
    10. '
' → logprob: -5.332546710968018

Token 2484: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06853653490543365
    2. '.' → logprob: -3.8185365200042725
    3. ',' → logprob: -3.9435365200042725
    4. ':
' → logprob: -4.568536758422852
    5. '<|end|>' → logprob: -5.568536758422852
    6. '<|end|>' → logprob: -6.068536758422852
    7. '
' → logprob: -6.568536758422852
    8. '...' → logprob: -6.943536758422852
    9. '           ' → logprob: -7.193536758422852
    10. ')' → logprob: -7.318536758422852

Token 2485: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014299837872385979
    2. '       ' → logprob: -4.2642998695373535
    3. '
' → logprob: -9.389299392700195
    4. '               ' → logprob: -10.764299392700195
    5. '        
' → logprob: -11.764299392700195
    6. '            
' → logprob: -12.014299392700195
    7. '```' → logprob: -12.639299392700195
    8. 'for' → logprob: -12.764299392700195
    9. ',' → logprob: -12.889299392700195
    10. 'return' → logprob: -13.389299392700195

Token 2486: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.41473543643951416
    2. '
' → logprob: -1.7897354364395142
    3. '       ' → logprob: -1.7897354364395142
    4. '        
' → logprob: -6.039735317230225
    5. '            
' → logprob: -7.289735317230225
    6. '    
' → logprob: -8.164735794067383
    7. ' 
' → logprob: -8.164735794067383
    8. 'return' → logprob: -8.414735794067383
    9. '   ' → logprob: -8.414735794067383
    10. '#' (adapté à ' #') → logprob: -8.539735794067383

Token 2487: ' So' (ID: 2632)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07953427731990814
    2. '
' → logprob: -3.3295342922210693
    3. '       ' → logprob: -3.3295342922210693
    4. 'for' → logprob: -6.20453405380249
    5. 'if' → logprob: -7.32953405380249
    6. ' for' → logprob: -7.70453405380249
    7. '            
' → logprob: -7.70453405380249
    8. '        
' → logprob: -8.329534530639648
    9. ' if' → logprob: -8.454534530639648
    10. '#' → logprob: -8.454534530639648

Token 2488: ' we' (ID: 581)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03736015781760216
    2. ' for' → logprob: -3.537360191345215
    3. '       ' → logprob: -5.662360191345215
    4. 'for' → logprob: -6.037360191345215
    5. '#' → logprob: -6.662360191345215
    6. 'return' → logprob: -9.037360191345215
    7. ' return' → logprob: -9.162360191345215
    8. ' continue' → logprob: -10.162360191345215
    9. ' #' → logprob: -10.287360191345215
    10. 'continue' → logprob: -10.537360191345215

Token 2489: ' memo' (ID: 46393)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.2194312810897827
    2. '       ' → logprob: -1.7194312810897827
    3. 'continue' → logprob: -1.7194312810897827
    4. ' return' → logprob: -2.0944314002990723
    5. ' continue' → logprob: -2.2194314002990723
    6. 'return' → logprob: -2.3444314002990723
    7. ' try' → logprob: -4.719431400299072
    8. 'try' → logprob: -6.469431400299072
    9. '   ' → logprob: -6.469431400299072
    10. 'import' → logprob: -7.219431400299072

Token 2490: 'ize' (ID: 750)
  Prédit: 'ize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.004197355825453997
    2. '       ' → logprob: -6.504197120666504
    3. '           ' → logprob: -7.379197120666504
    4. '          ' → logprob: -7.504197120666504
    5. '_cache' → logprob: -7.879197120666504
    6. '        ' → logprob: -8.879197120666504
    7. 'ized' → logprob: -9.004197120666504
    8. '
' → logprob: -9.129197120666504
    9. '      ' → logprob: -9.254197120666504
    10. '   ' → logprob: -9.379197120666504

Token 2491: ' feasible' (ID: 58866)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16770751774311066
    2. '       ' → logprob: -3.4177074432373047
    3. ' bits' → logprob: -3.7927074432373047
    4. ':' → logprob: -4.042707443237305
    5. ' return' → logprob: -4.417707443237305
    6. '            ' → logprob: -4.792707443237305
    7. ' for' → logprob: -5.167707443237305
    8. ')' → logprob: -5.292707443237305
    9. ' (' → logprob: -5.417707443237305
    10. ':
' → logprob: -5.417707443237305

Token 2492: ' from' (ID: 591)
  Prédit: 'keys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'keys' → logprob: -0.20098178088665009
    2. 'bits' → logprob: -2.825981855392456
    3. 'for' → logprob: -3.450981855392456
    4. 'cache' → logprob: -3.575981855392456
    5. ' keys' → logprob: -4.325981616973877
    6. '_cache' → logprob: -4.575981616973877
    7. 'items' → logprob: -5.075981616973877
    8. ' for' → logprob: -5.075981616973877
    9. '       ' → logprob: -5.200981616973877
    10. '           ' → logprob: -5.450981616973877

Token 2493: ' primitives' (ID: 174906)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5352479815483093
    2. 'bits' → logprob: -1.660248041152954
    3. '0' → logprob: -2.785248041152954
    4. 'dfs' → logprob: -3.160248041152954
    5. '
' → logprob: -3.660248041152954
    6. 'previous' → logprob: -4.535247802734375
    7. 'sm' → logprob: -4.785247802734375
    8. 'cache' → logprob: -4.785247802734375
    9. 'cached' → logprob: -4.785247802734375
    10. 'keys' → logprob: -4.910247802734375

Token 2494: ' and' (ID: 326)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.031466927379369736
    2. '       ' → logprob: -4.281466960906982
    3. ',' → logprob: -5.156466960906982
    4. '
' → logprob: -5.406466960906982
    5. ' and' → logprob: -6.406466960906982
    6. '...' → logprob: -7.531466960906982
    7. ':
' → logprob: -7.531466960906982
    8. ' for' → logprob: -7.781466960906982
    9. ',
' → logprob: -7.906466960906982
    10. '.' → logprob: -7.906466960906982

Token 2495: ' inputs' (ID: 21963)
  Prédit: 'expand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expand' → logprob: -0.3373335301876068
    2. 'continue' → logprob: -3.5873334407806396
    3. 'expl' → logprob: -3.8373334407806396
    4. 'build' → logprob: -3.8373334407806396
    5. 'use' → logprob: -3.9623334407806396
    6. '       ' → logprob: -4.212333679199219
    7. '...' → logprob: -4.337333679199219
    8. 'iterate' → logprob: -4.337333679199219
    9. '           ' → logprob: -4.587333679199219
    10. 'store' → logprob: -4.587333679199219

Token 2496: ' from' (ID: 591)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0235231164842844
    2. '
' → logprob: -4.273523330688477
    3. ',' → logprob: -5.773523330688477
    4. '<|end|>' → logprob: -6.273523330688477
    5. '       ' → logprob: -6.523523330688477
    6. '<|end|>' → logprob: -6.648523330688477
    7. ' and' → logprob: -7.773523330688477
    8. ',
' → logprob: -8.773523330688477
    9. '            
' → logprob: -8.773523330688477
    10. '#' → logprob: -8.898523330688477

Token 2497: ' top' (ID: 2344)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.312028408050537
    2. 'the' → logprob: -1.437028408050537
    3. 'previous' → logprob: -1.687028408050537
    4. 'cache' → logprob: -2.562028408050537
    5. '#' → logprob: -2.562028408050537
    6. 'here' → logprob: -3.687028408050537
    7. 'dfs' → logprob: -3.937028408050537
    8. '...' → logprob: -4.062028408050537
    9. 'bits' → logprob: -4.187028408050537
    10. 'expr' → logprob: -4.562028408050537

Token 2498: '.

' (ID: 364)
  Prédit: 'down'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'down' → logprob: -0.18389512598514557
    2. '_down' → logprob: -3.4338951110839844
    3. '@' → logprob: -3.5588951110839844
    4. '       ' → logprob: -3.8088951110839844
    5. 'bits' → logprob: -4.058895111083984
    6. '-down' → logprob: -4.433895111083984
    7. '```' → logprob: -4.683895111083984
    8. 'cache' → logprob: -4.933895111083984
    9. '_cache' → logprob: -5.183895111083984
    10. ' bits' → logprob: -5.308895111083984

Token 2499: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.021376680582761765
    2. '       ' → logprob: -3.896376609802246
    3. '
' → logprob: -7.146376609802246
    4. '```' → logprob: -11.271376609802246
    5. '               ' → logprob: -11.896376609802246
    6. '        
' → logprob: -12.146376609802246
    7. 'for' → logprob: -12.271376609802246
    8. '            
' → logprob: -12.271376609802246
    9. 'return' → logprob: -12.646376609802246
    10. '   ' → logprob: -12.771376609802246

Token 2500: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03684588521718979
    2. '       ' → logprob: -3.5368459224700928
    3. '
' → logprob: -5.536845684051514
    4. 'return' → logprob: -6.411845684051514
    5. '        
' → logprob: -7.911845684051514
    6. '            
' → logprob: -8.536846160888672
    7. '#' (adapté à ' #') → logprob: -8.786846160888672
    8. '   ' → logprob: -9.286846160888672
    9. '    
' → logprob: -9.536846160888672
    10. '<|end|>' → logprob: -9.786846160888672

Token 2501: ' To' (ID: 2514)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016667410731315613
    2. '#' → logprob: -5.016667366027832
    3. '       ' → logprob: -5.016667366027832
    4. 'for' → logprob: -6.266667366027832
    5. 'if' → logprob: -7.516667366027832
    6. ' for' → logprob: -8.016667366027832
    7. ' if' → logprob: -8.891667366027832
    8. 'return' → logprob: -9.391667366027832
    9. '
' → logprob: -9.516667366027832
    10. '            
' → logprob: -10.141667366027832

Token 2502: ' avoid' (ID: 8397)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3449942469596863
    2. '           ' → logprob: -2.969994306564331
    3. 'for' → logprob: -3.094994306564331
    4. 'return' → logprob: -3.469994306564331
    5. 'cache' → logprob: -3.594994306564331
    6. 'try' → logprob: -3.594994306564331
    7. '...' → logprob: -3.969994306564331
    8. 'if' → logprob: -4.094994068145752
    9. '   ' → logprob: -4.469994068145752
    10. '#' → logprob: -4.844994068145752

Token 2503: ' infinite' (ID: 48413)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.7176457047462463
    2. 'bits' → logprob: -1.0926456451416016
    3. ' True' → logprob: -3.2176456451416016
    4. 'False' → logprob: -3.4676456451416016
    5. 'len' → logprob: -3.7176456451416016
    6. '...' → logprob: -4.092645645141602
    7. 'bit' → logprob: -4.092645645141602
    8. '       ' → logprob: -4.592645645141602
    9. 'self' → logprob: -4.967645645141602
    10. '#' → logprob: -5.217645645141602

Token 2504: ' recursion' (ID: 122185)
  Prédit: ' recursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' recursion' → logprob: -0.6182177066802979
    2. 'rec' → logprob: -0.9932177066802979
    3. '           ' → logprob: -3.118217706680298
    4. 'loops' → logprob: -4.118217468261719
    5. 'loop' → logprob: -4.868217468261719
    6. ' loops' → logprob: -4.868217468261719
    7. 'depth' → logprob: -5.368217468261719
    8. '   ' → logprob: -5.993217468261719
    9. '#' → logprob: -6.118217468261719
    10. '       ' → logprob: -6.243217468261719

Token 2505: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13486610352993011
    2. ',' → logprob: -2.2598659992218018
    3. '       ' → logprob: -4.009866237640381
    4. '
' → logprob: -7.259866237640381
    5. ' and' → logprob: -7.634866237640381
    6. ' if' → logprob: -7.884866237640381
    7. 'return' → logprob: -8.259865760803223
    8. ',
' → logprob: -8.384865760803223
    9. ' (' → logprob: -8.509865760803223
    10. ' for' → logprob: -8.634865760803223

Token 2506: ' we' (ID: 581)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06237554922699928
    2. '       ' → logprob: -3.187375545501709
    3. ' return' → logprob: -4.312375545501709
    4. 'return' → logprob: -5.437375545501709
    5. '               ' → logprob: -7.437375545501709
    6. ' if' → logprob: -8.437376022338867
    7. '
' → logprob: -8.687376022338867
    8. '   ' → logprob: -8.937376022338867
    9. '```' → logprob: -9.437376022338867
    10. ' ' → logprob: -9.812376022338867

Token 2507: ' forbid' (ID: 164447)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9432621598243713
    2. '           ' → logprob: -1.3182621002197266
    3. ' return' → logprob: -1.8182621002197266
    4. 'return' → logprob: -2.1932621002197266
    5. ' continue' → logprob: -3.6932621002197266
    6. 'continue' → logprob: -3.9432621002197266
    7. '   ' → logprob: -4.943262100219727
    8. ' try' → logprob: -5.818262100219727
    9. ' add' → logprob: -6.443262100219727
    10. ' check' → logprob: -6.818262100219727

Token 2508: ' direct' (ID: 2823)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.2625718116760254
    2. 'self' → logprob: -2.1375718116760254
    3. 'depth' → logprob: -2.7625718116760254
    4. ' bits' → logprob: -3.7625718116760254
    5. 'dfs' → logprob: -4.887571811676025
    6. 'len' → logprob: -5.262571811676025
    7. ' self' → logprob: -6.137571811676025
    8. '(bits' → logprob: -6.512571811676025
    9. '(depth' → logprob: -6.637571811676025
    10. '   ' → logprob: -6.637571811676025

Token 2509: ' recursion' (ID: 122185)
  Prédit: 'calls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calls' → logprob: -0.3377169072628021
    2. 'bits' → logprob: -2.837716817855835
    3. 'rec' → logprob: -3.087716817855835
    4. ' calls' → logprob: -3.087716817855835
    5. 'self' → logprob: -3.212716817855835
    6. 'cache' → logprob: -3.837716817855835
    7. ' recursion' → logprob: -4.212717056274414
    8. '       ' → logprob: -4.712717056274414
    9. '   ' → logprob: -4.837717056274414
    10. 'dfs' → logprob: -5.087717056274414

Token 2510: ' by' (ID: 656)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08056743443012238
    2. '       ' → logprob: -3.4555673599243164
    3. ',' → logprob: -3.5805673599243164
    4. ':' → logprob: -4.955567359924316
    5. '.' → logprob: -6.330567359924316
    6. ' in' → logprob: -6.830567359924316
    7. ':
' → logprob: -7.080567359924316
    8. ' if' → logprob: -7.080567359924316
    9. ' at' → logprob: -7.080567359924316
    10. '               ' → logprob: -7.455567359924316

Token 2511: ' depth' (ID: 13636)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.22492161393165588
    2. 'passing' → logprob: -2.599921703338623
    3. 'checking' → logprob: -3.724921703338623
    4. 'depth' → logprob: -3.724921703338623
    5. 'calling' → logprob: -4.349921703338623
    6. 'cache' → logprob: -4.474921703338623
    7. 'pass' → logprob: -4.724921703338623
    8. 'dfs' → logprob: -4.974921703338623
    9. 'raising' → logprob: -5.349921703338623
    10. 'bits' → logprob: -5.349921703338623

Token 2512: ' limit' (ID: 5967)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.6273219585418701
    2. ':' → logprob: -1.0023219585418701
    3. '_' → logprob: -3.87732195854187
    4. '           ' → logprob: -4.002322196960449
    5. 'limit' → logprob: -4.127322196960449
    6. ',' → logprob: -4.627322196960449
    7. ':
' → logprob: -5.127322196960449
    8. ' limit' → logprob: -5.377322196960449
    9. '=' → logprob: -5.377322196960449
    10. '_:' → logprob: -5.752322196960449

Token 2513: ' or' (ID: 503)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04167129844427109
    2. ':' → logprob: -4.041671276092529
    3. ',' → logprob: -4.541671276092529
    4. '       ' → logprob: -5.541671276092529
    5. ':
' → logprob: -6.416671276092529
    6. '0' → logprob: -6.791671276092529
    7. '(' → logprob: -6.791671276092529
    8. '               ' → logprob: -7.041671276092529
    9. ' (' → logprob: -7.166671276092529
    10. '=' → logprob: -7.166671276092529

Token 2514: ' caching' (ID: 104247)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -1.0243794918060303
    2. 'return' → logprob: -1.5243794918060303
    3. 'cache' → logprob: -2.0243794918060303
    4. 'depth' → logprob: -3.0243794918060303
    5. 'max' → logprob: -3.1493794918060303
    6. 'size' → logprob: -3.2743794918060303
    7. 'visited' → logprob: -3.3993794918060303
    8. '
' → logprob: -3.5243794918060303
    9. 'memo' → logprob: -3.6493794918060303
    10. 'timeout' → logprob: -3.6493794918060303

Token 2515: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4093949496746063
    2. ':
' → logprob: -1.5343949794769287
    3. '           ' → logprob: -3.0343949794769287
    4. '=' → logprob: -3.4093949794769287
    5. ',' → logprob: -4.28439474105835
    6. '.' → logprob: -5.40939474105835
    7. '_' → logprob: -5.90939474105835
    8. '       ' → logprob: -5.90939474105835
    9. ',
' → logprob: -6.28439474105835
    10. '
' → logprob: -6.28439474105835

Token 2516: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10148365050554276
    2. '           ' → logprob: -2.6014835834503174
    3. '
' → logprob: -3.8514835834503174
    4. '        
' → logprob: -7.8514838218688965
    5. '<|end|>' → logprob: -8.851483345031738
    6. '	' → logprob: -9.226483345031738
    7. '   ' → logprob: -9.601483345031738
    8. 'return' → logprob: -10.101483345031738
    9. '#' → logprob: -10.351483345031738
    10. '    
' → logprob: -10.476483345031738

Token 2517: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07037840783596039
    2. '           ' → logprob: -2.820378303527832
    3. '
' → logprob: -5.070378303527832
    4. '        
' → logprob: -7.195378303527832
    5. '#' (adapté à ' #') → logprob: -8.445378303527832
    6. '   ' → logprob: -8.945378303527832
    7. 'return' → logprob: -9.070378303527832
    8. '        ' → logprob: -9.070378303527832
    9. '               ' → logprob: -9.570378303527832
    10. '...' → logprob: -9.695378303527832

Token 2518: ' Instead' (ID: 21050)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5401595830917358
    2. '       ' → logprob: -0.9151595830917358
    3. '
' → logprob: -4.915159702301025
    4. 'if' → logprob: -5.915159702301025
    5. 'max' → logprob: -6.040159702301025
    6. 'depth' → logprob: -6.415159702301025
    7. '#' → logprob: -7.290159702301025
    8. 'return' → logprob: -7.665159702301025
    9. 'for' → logprob: -7.915159702301025
    10. '               ' → logprob: -8.165159225463867

Token 2519: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2524128556251526
    2. '       ' → logprob: -1.5024127960205078
    3. ',' → logprob: -8.877412796020508
    4. 'return' → logprob: -9.377412796020508
    5. 'continue' → logprob: -10.002412796020508
    6. '               ' → logprob: -10.502412796020508
    7. '   ' → logprob: -10.502412796020508
    8. 'def' → logprob: -10.877412796020508
    9. ':' → logprob: -10.877412796020508
    10. '#' → logprob: -11.377412796020508

Token 2520: ' use' (ID: 1199)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2314697951078415
    2. '       ' → logprob: -2.4814698696136475
    3. 'return' → logprob: -2.6064698696136475
    4. 'for' → logprob: -3.3564698696136475
    5. '#' → logprob: -4.856469631195068
    6. 'if' → logprob: -6.106469631195068
    7. ' for' → logprob: -6.981469631195068
    8. ' return' → logprob: -7.356469631195068
    9. 'def' → logprob: -7.856469631195068
    10. 'raise' → logprob: -8.106470108032227

Token 2521: ' a' (ID: 261)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.47942423820495605
    2. '           ' → logprob: -1.604424238204956
    3. 'self' → logprob: -2.229424238204956
    4. '       ' → logprob: -3.354424238204956
    5. 'stack' → logprob: -5.104424476623535
    6. '               ' → logprob: -5.604424476623535
    7. '                   ' → logprob: -5.979424476623535
    8. 'len' → logprob: -5.979424476623535
    9. 'memo' → logprob: -5.979424476623535
    10. 'a' → logprob: -6.104424476623535

Token 2522: ' memo' (ID: 46393)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9656186699867249
    2. 'for' → logprob: -1.84061861038208
    3. 'depth' → logprob: -2.21561861038208
    4. 'return' → logprob: -2.46561861038208
    5. 'cache' → logprob: -2.71561861038208
    6. 'max' → logprob: -3.09061861038208
    7. 'yield' → logprob: -3.84061861038208
    8. 'stack' → logprob: -3.96561861038208
    9. 'if' → logprob: -4.21561861038208
    10. ')' → logprob: -4.34061861038208

Token 2523: ' and' (ID: 326)
  Prédit: 'ized'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ized' → logprob: -0.5266625285148621
    2. '       ' → logprob: -1.5266625881195068
    3. '           ' → logprob: -2.776662588119507
    4. 'ization' → logprob: -3.276662588119507
    5. '
' → logprob: -3.901662588119507
    6. '_cache' → logprob: -4.276662349700928
    7. '          ' → logprob: -4.401662349700928
    8. '        ' → logprob: -4.776662349700928
    9. '   ' → logprob: -4.901662349700928
    10. ':' → logprob: -5.026662349700928

Token 2524: ' do' (ID: 621)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.040262043476104736
    2. '           ' → logprob: -4.290262222290039
    3. 'depth' → logprob: -4.415262222290039
    4. '       ' → logprob: -5.415262222290039
    5. 'cache' → logprob: -6.540262222290039
    6. '
' → logprob: -6.540262222290039
    7. ' return' → logprob: -7.290262222290039
    8. 'stop' → logprob: -7.415262222290039
    9. 'self' → logprob: -7.540262222290039
    10. 'stack' → logprob: -7.665262222290039

Token 2525: ' a' (ID: 261)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7438292503356934
    2. '           ' → logprob: -1.3688292503356934
    3. 'cache' → logprob: -2.4938292503356934
    4. '       ' → logprob: -2.7438292503356934
    5. 'depth' → logprob: -3.3688292503356934
    6. 'continue' → logprob: -3.4938292503356934
    7. '               ' → logprob: -4.368829250335693
    8. 'pass' → logprob: -4.368829250335693
    9. 'max' → logprob: -4.868829250335693
    10. '...' → logprob: -5.368829250335693

Token 2526: ' iterative' (ID: 167755)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.02403903752565384
    2. 'yield' → logprob: -5.149039268493652
    3. '           ' → logprob: -5.649039268493652
    4. 'continue' → logprob: -5.774039268493652
    5. 'def' → logprob: -5.774039268493652
    6. '       ' → logprob: -6.274039268493652
    7. 'if' → logprob: -6.649039268493652
    8. 'for' → logprob: -6.899039268493652
    9. 'depth' → logprob: -7.524039268493652
    10. ' return' → logprob: -7.524039268493652

Token 2527: ' discovery' (ID: 30465)
  Prédit: ' approach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' approach' → logprob: -0.14247429370880127
    2. ' process' → logprob: -2.7674741744995117
    3. 'process' → logprob: -3.2674741744995117
    4. 'appro' → logprob: -3.5174741744995117
    5. '
' → logprob: -7.892474174499512
    6. 'def' → logprob: -8.017474174499512
    7. ' deep' → logprob: -8.267474174499512
    8. ' ' → logprob: -9.017474174499512
    9. ' implementation' → logprob: -9.017474174499512
    10. '       ' → logprob: -9.142474174499512

Token 2528: ' starting' (ID: 8601)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03513440117239952
    2. '           ' → logprob: -4.535134315490723
    3. ':' → logprob: -5.160134315490723
    4. ',' → logprob: -5.285134315490723
    5. '.' → logprob: -5.410134315490723
    6. '#' → logprob: -6.910134315490723
    7. '   ' → logprob: -6.910134315490723
    8. ':
' → logprob: -7.035134315490723
    9. '
' → logprob: -7.410134315490723
    10. '        
' → logprob: -7.785134315490723

Token 2529: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.021598028019070625
    2. 'with' → logprob: -4.146597862243652
    3. 'at' → logprob: -5.771597862243652
    4. '...' → logprob: -7.646597862243652
    5. 'point' → logprob: -7.771597862243652
    6. ' from' → logprob: -8.146597862243652
    7. 'up' → logprob: -8.271597862243652
    8. 'points' → logprob: -8.396597862243652
    9. '<|end|>' → logprob: -9.271597862243652
    10. 'depth' → logprob: -9.396597862243652

Token 2530: ' primitives' (ID: 174906)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12625819444656372
    2. 'pr' → logprob: -3.501258134841919
    3. 'list' → logprob: -4.126258373260498
    4. 'set' → logprob: -4.251258373260498
    5. 'the' → logprob: -4.751258373260498
    6. '1' → logprob: -4.876258373260498
    7. 'deque' → logprob: -5.001258373260498
    8. '[]' → logprob: -5.126258373260498
    9. '0' → logprob: -5.501258373260498
    10. 'form' → logprob: -5.626258373260498

Token 2531: '.

' (ID: 364)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2532: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005231983028352261
    2. '
' → logprob: -5.505231857299805
    3. '        
' → logprob: -8.255231857299805
    4. '#' → logprob: -8.505231857299805
    5. '<|end|>' → logprob: -8.630231857299805
    6. '           ' → logprob: -8.755231857299805
    7. ')' → logprob: -8.880231857299805
    8. 'return' → logprob: -10.005231857299805
    9. '   ' → logprob: -10.130231857299805
    10. ',' → logprob: -10.505231857299805

Token 2533: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15970878303050995
    2. '           ' → logprob: -2.1597087383270264
    3. '#' (adapté à ' #') → logprob: -4.5347089767456055
    4. 'return' → logprob: -5.2847089767456055
    5. 'raise' → logprob: -5.7847089767456055
    6. 'pass' → logprob: -6.0347089767456055
    7. ')' → logprob: -6.0347089767456055
    8. '...' → logprob: -6.2847089767456055
    9. '   ' → logprob: -7.4097089767456055
    10. '
' → logprob: -7.4097089767456055

Token 2534: ' This' (ID: 1328)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.27492445707321167
    2. '       ' → logprob: -1.5249245166778564
    3. '#' → logprob: -5.024924278259277
    4. 'if' → logprob: -5.274924278259277
    5. 'for' → logprob: -5.774924278259277
    6. 'return' → logprob: -6.149924278259277
    7. 'found' → logprob: -7.149924278259277
    8. '...' → logprob: -7.274924278259277
    9. ' if' → logprob: -7.649924278259277
    10. '
' → logprob: -7.649924278259277

Token 2535: ' is' (ID: 382)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cache' → logprob: -1.250188946723938
    2. 'def' → logprob: -1.500188946723938
    3. '_cache' → logprob: -2.5001888275146484
    4. ' is' → logprob: -2.7501888275146484
    5. '#' → logprob: -2.8751888275146484
    6. '       ' → logprob: -3.0001888275146484
    7. ' code' → logprob: -3.5001888275146484
    8. '   ' → logprob: -3.6251888275146484
    9. 'is' → logprob: -4.000188827514648
    10. ' cache' → logprob: -4.125188827514648

Token 2536: ' complicated' (ID: 25334)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5852457284927368
    2. 'not' → logprob: -2.4602456092834473
    3. 'done' → logprob: -2.7102456092834473
    4. ' incomplete' → logprob: -2.7102456092834473
    5. 'unfinished' → logprob: -3.2102456092834473
    6. '#' → logprob: -3.3352456092834473
    7. '```' → logprob: -3.5852456092834473
    8. '       ' → logprob: -3.8352456092834473
    9. 'only' → logprob: -4.210245609283447
    10. '           ' → logprob: -4.460245609283447

Token 2537: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2538: ' so' (ID: 813)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.29280081391334534
    2. '       ' → logprob: -2.0428009033203125
    3. 'return' → logprob: -2.9178009033203125
    4. '...' → logprob: -3.9178009033203125
    5. '#' → logprob: -4.5428009033203125
    6. ' return' → logprob: -4.5428009033203125
    7. ')' → logprob: -5.1678009033203125
    8. '
' → logprob: -5.4178009033203125
    9. ' so' → logprob: -5.6678009033203125
    10. '<|end|>' → logprob: -6.2928009033203125

Token 2539: ' we' (ID: 581)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7724143266677856
    2. ' return' → logprob: -1.1474143266677856
    3. '       ' → logprob: -1.6474143266677856
    4. '           ' → logprob: -3.897414207458496
    5. ' raise' → logprob: -6.147414207458496
    6. '#' → logprob: -6.272414207458496
    7. 'raise' → logprob: -6.772414207458496
    8. '...' → logprob: -7.022414207458496
    9. 'pass' → logprob: -7.522414207458496
    10. ' pass' → logprob: -8.397414207458496

Token 2540: ' do' (ID: 621)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6130483150482178
    2. 'return' → logprob: -0.8630483150482178
    3. 'continue' → logprob: -3.8630483150482178
    4. '   ' → logprob: -5.488048553466797
    5. '           ' → logprob: -5.488048553466797
    6. ' return' → logprob: -5.738048553466797
    7. 'def' → logprob: -6.988048553466797
    8. '#' → logprob: -7.613048553466797
    9. '```' → logprob: -7.738048553466797
    10. 'stop' → logprob: -7.863048553466797

Token 2541: ' a' (ID: 261)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.16500845551490784
    2. ' not' → logprob: -1.9150084257125854
    3. 'n't' → logprob: -6.415008544921875
    4. 'return' → logprob: -6.665008544921875
    5. ' nothing' → logprob: -7.290008544921875
    6. 'nothing' → logprob: -7.290008544921875
    7. '           ' → logprob: -8.915008544921875
    8. ' return' → logprob: -9.040008544921875
    9. 'n' → logprob: -9.790008544921875
    10. 'def' → logprob: -10.165008544921875

Token 2542: ' heuristic' (ID: 146226)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -1.2351073026657104
    2. 'def' → logprob: -1.6101073026657104
    3. '           ' → logprob: -2.360107421875
    4. ' pass' → logprob: -2.735107421875
    5. 'continue' → logprob: -2.860107421875
    6. 'return' → logprob: -2.860107421875
    7. '       ' → logprob: -3.360107421875
    8. '#' → logprob: -3.485107421875
    9. ' placeholder' → logprob: -3.610107421875
    10. ' def' → logprob: -3.860107421875

Token 2543: ' top' (ID: 2344)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23358014225959778
    2. '...' → logprob: -1.9835801124572754
    3. '<|end|>' → logprob: -3.7335801124572754
    4. ':' → logprob: -4.358580112457275
    5. '<|end|>' → logprob: -4.733580112457275
    6. '#' → logprob: -5.358580112457275
    7. '           ' → logprob: -5.858580112457275
    8. '        ' → logprob: -5.858580112457275
    9. '        
' → logprob: -5.858580112457275
    10. '
' → logprob: -6.108580112457275

Token 2544: '-down' (ID: 26673)
  Prédit: 'down'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'down' → logprob: -0.6864013075828552
    2. 'def' → logprob: -2.1864013671875
    3. '_down' → logprob: -2.3114013671875
    4. '_cache' → logprob: -2.4364013671875
    5. '_level' → logprob: -3.4364013671875
    6. '```' → logprob: -4.0614013671875
    7. 'cache' → logprob: -4.3114013671875
    8. '@' → logprob: -4.4364013671875
    9. '-down' → logprob: -4.4364013671875
    10. '_levels' → logprob: -4.5614013671875

Token 2545: ' approach' (ID: 7139)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.9933108687400818
    2. ':' → logprob: -1.1183109283447266
    3. '       ' → logprob: -2.1183109283447266
    4. '   ' → logprob: -2.9933109283447266
    5. ' approach' → logprob: -3.1183109283447266
    6. ')' → logprob: -3.8683109283447266
    7. 'def' → logprob: -4.243310928344727
    8. '           ' → logprob: -4.243310928344727
    9. '):
' → logprob: -4.868310928344727
    10. ':
' → logprob: -5.118310928344727

Token 2546: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03779391571879387
    2. '           ' → logprob: -4.53779411315918
    3. ':' → logprob: -4.66279411315918
    4. '.' → logprob: -5.28779411315918
    5. '<|end|>' → logprob: -5.28779411315918
    6. '...' → logprob: -6.41279411315918
    7. ',' → logprob: -6.53779411315918
    8. '<|end|>' → logprob: -7.16279411315918
    9. ')' → logprob: -7.41279411315918
    10. '#' → logprob: -7.41279411315918

Token 2547: ' guess' (ID: 11915)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3602607548236847
    2. 'avoid' → logprob: -2.4852607250213623
    3. 'expl' → logprob: -2.7352607250213623
    4. 'expand' → logprob: -3.7352607250213623
    5. 'continue' → logprob: -3.8602607250213623
    6. '           ' → logprob: -3.8602607250213623
    7. 'prevent' → logprob: -3.9852607250213623
    8. 'complete' → logprob: -4.610260963439941
    9. 'find' → logprob: -4.735260963439941
    10. 'limit' → logprob: -4.735260963439941

Token 2548: ' minimal' (ID: 19957)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.139986276626587
    2. 'bits' → logprob: -1.514986276626587
    3. 'possible' → logprob: -1.764986276626587
    4. '           ' → logprob: -2.389986276626587
    5. ' possible' → logprob: -3.514986276626587
    6. '       ' → logprob: -3.639986276626587
    7. ' bits' → logprob: -3.889986276626587
    8. '...' → logprob: -4.139986038208008
    9. 'tokens' → logprob: -4.264986038208008
    10. 'parts' → logprob: -4.514986038208008

Token 2549: ' expressions' (ID: 43578)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2555543184280396
    2. '           ' → logprob: -1.2555543184280396
    3. 'length' → logprob: -2.88055419921875
    4. '_length' → logprob: -3.00555419921875
    5. 'form' → logprob: -3.25555419921875
    6. ')' → logprob: -3.38055419921875
    7. ' forms' → logprob: -3.50555419921875
    8. 'expr' → logprob: -3.75555419921875
    9. 'tokens' → logprob: -3.88055419921875
    10. '_form' → logprob: -4.38055419921875

Token 2550: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31798258423805237
    2. '           ' → logprob: -1.44298255443573
    3. ':' → logprob: -3.8179826736450195
    4. '.' → logprob: -5.6929826736450195
    5. ',' → logprob: -5.8179826736450195
    6. ':
' → logprob: -6.0679826736450195
    7. ')' → logprob: -6.9429826736450195
    8. '
' → logprob: -7.3179826736450195
    9. '               ' → logprob: -7.3179826736450195
    10. '...' → logprob: -7.9429826736450195

Token 2551: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5814891457557678
    2. '           ' → logprob: -0.8314891457557678
    3. ')' → logprob: -5.706489086151123
    4. '<|end|>' → logprob: -7.581489086151123
    5. '   ' → logprob: -7.706489086151123
    6. '               ' → logprob: -8.206489562988281
    7. '
' → logprob: -8.706489562988281
    8. '#' → logprob: -8.956489562988281
    9. '        ' → logprob: -9.456489562988281
    10. '        
' → logprob: -9.831489562988281

Token 2552: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28645360469818115
    2. '           ' → logprob: -1.4114536046981812
    3. '#' (adapté à ' #') → logprob: -6.411453723907471
    4. 'return' → logprob: -6.786453723907471
    5. 'if' → logprob: -7.411453723907471
    6. 'bits' → logprob: -7.786453723907471
    7. '   ' → logprob: -8.536453247070312
    8. '
' → logprob: -8.786453247070312
    9. '               ' → logprob: -9.036453247070312
    10. '        ' → logprob: -9.036453247070312

Token 2553: ' To' (ID: 2514)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7243945598602295
    2. '       ' → logprob: -0.8493945598602295
    3. '#' → logprob: -3.3493945598602295
    4. 'if' → logprob: -3.5993945598602295
    5. '
' → logprob: -4.974394798278809
    6. 'bits' → logprob: -5.099394798278809
    7. 'for' → logprob: -5.349394798278809
    8. ' if' → logprob: -6.099394798278809
    9. 'return' → logprob: -6.974394798278809
    10. ' bits' → logprob: -7.599394798278809

Token 2554: ' attempt' (ID: 8704)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3249983489513397
    2. '           ' → logprob: -2.699998378753662
    3. 'return' → logprob: -2.824998378753662
    4. 'pass' → logprob: -3.199998378753662
    5. 'expl' → logprob: -3.699998378753662
    6. 'def' → logprob: -3.949998378753662
    7. 'opt' → logprob: -4.699998378753662
    8. 'cache' → logprob: -4.824998378753662
    9. 'try' → logprob: -4.949998378753662
    10. '   ' → logprob: -5.199998378753662

Token 2555: ' operations' (ID: 12084)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8502514958381653
    2. '           ' → logprob: -1.1002514362335205
    3. 'bits' → logprob: -2.7252514362335205
    4. '   ' → logprob: -3.3502514362335205
    5. 'continue' → logprob: -3.8502514362335205
    6. 'self' → logprob: -3.8502514362335205
    7. 'expl' → logprob: -4.2252516746521
    8. 'expand' → logprob: -4.6002516746521
    9. 'opt' → logprob: -4.7252516746521
    10. 'the' → logprob: -5.1002516746521

Token 2556: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3625507950782776
    2. '       ' → logprob: -1.6125507354736328
    3. 'for' → logprob: -2.737550735473633
    4. ' for' → logprob: -4.112550735473633
    5. '#' → logprob: -5.112550735473633
    6. ',' → logprob: -5.237550735473633
    7. 'left' → logprob: -5.987550735473633
    8. 'bits' → logprob: -5.987550735473633
    9. 'if' → logprob: -6.487550735473633
    10. ':' → logprob: -6.612550735473633

Token 2557: ' we' (ID: 581)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.48059678077697754
    2. 'for' → logprob: -0.9805967807769775
    3. '#' → logprob: -6.105596542358398
    4. ' for' → logprob: -6.230596542358398
    5. '       ' → logprob: -6.855596542358398
    6. 'all' → logprob: -7.980596542358398
    7. 'bits' → logprob: -8.480596542358398
    8. 'keys' → logprob: -9.105596542358398
    9. 'known' → logprob: -9.230596542358398
    10. '   ' → logprob: -9.230596542358398

Token 2558: ' try' (ID: 2075)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.3613529205322266
    2. 'for' → logprob: -1.3613529205322266
    3. '       ' → logprob: -1.4863529205322266
    4. ' for' → logprob: -2.3613529205322266
    5. 'return' → logprob: -2.7363529205322266
    6. '...' → logprob: -2.9863529205322266
    7. 'continue' → logprob: -3.8613529205322266
    8. 'import' → logprob: -4.236352920532227
    9. '   ' → logprob: -5.361352920532227
    10. ' return' → logprob: -5.736352920532227

Token 2559: ' all' (ID: 722)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.4423387944698334
    2. 'left' → logprob: -1.6923388242721558
    3. 'all' → logprob: -3.317338705062866
    4. 'for' → logprob: -3.317338705062866
    5. '   ' → logprob: -3.567338705062866
    6. 'cached' → logprob: -4.317338943481445
    7. '       ' → logprob: -4.442338943481445
    8. 'lf' → logprob: -4.567338943481445
    9. 'known' → logprob: -5.317338943481445
    10. '           ' → logprob: -5.442338943481445

Token 2560: ' pairs' (ID: 24702)
  Prédit: 'cached'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cached' → logprob: -0.6290806531906128
    2. 'bits' → logprob: -1.3790806531906128
    3. 'k' → logprob: -3.2540807723999023
    4. 'known' → logprob: -3.3790807723999023
    5. 'left' → logprob: -3.6290807723999023
    6. 'key' → logprob: -3.8790807723999023
    7. 'other' → logprob: -4.004080772399902
    8. '(bits' → logprob: -4.379080772399902
    9. 'for' → logprob: -4.629080772399902
    10. 'candidate' → logprob: -4.754080772399902

Token 2561: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.46654245257377625
    2. ':' → logprob: -2.2165424823760986
    3. ',' → logprob: -2.9665424823760986
    4. ':
' → logprob: -3.0915424823760986
    5. ' in' → logprob: -3.2165424823760986
    6. '(' → logprob: -3.7165424823760986
    7. '(bits' → logprob: -3.9665424823760986
    8. 'for' → logprob: -4.5915422439575195
    9. '               ' → logprob: -4.7165422439575195
    10. ' of' → logprob: -4.7165422439575195

Token 2562: 'l' (ID: 75)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.45381608605384827
    2. 'cached' → logprob: -2.4538161754608154
    3. 'left' → logprob: -2.7038161754608154
    4. 'lf' → logprob: -2.8288161754608154
    5. 'self' → logprob: -3.2038161754608154
    6. 'k' → logprob: -3.3288161754608154
    7. 'known' → logprob: -3.9538161754608154
    8. 'key' → logprob: -4.703815937042236
    9. 'l' → logprob: -4.953815937042236
    10. 'keys' → logprob: -5.078815937042236

Token 2563: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1747034788131714
    2. 'bits' → logprob: -1.4247034788131714
    3. '_bits' → logprob: -1.4247034788131714
    4. ')' → logprob: -3.549703598022461
    5. ' bits' → logprob: -3.924703598022461
    6. '           ' → logprob: -3.924703598022461
    7. '       ' → logprob: -4.174703598022461
    8. 'ets' → logprob: -4.299703598022461
    9. 'its' → logprob: -4.674703598022461
    10. '   ' → logprob: -4.674703598022461

Token 2564: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.003482704982161522
    2. 'bits' → logprob: -6.253482818603516
    3. ')' → logprob: -7.128482818603516
    4. '
' → logprob: -8.003482818603516
    5. ' r' → logprob: -9.753482818603516
    6. 'self' → logprob: -9.878482818603516
    7. '```' → logprob: -10.253482818603516
    8. 'b' → logprob: -10.378482818603516
    9. '),' → logprob: -10.378482818603516
    10. ')
' → logprob: -10.878482818603516

Token 2565: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2217804193496704
    2. ')' → logprob: -2.346780300140381
    3. '           ' → logprob: -3.221780300140381
    4. 'bits' → logprob: -4.221780300140381
    5. '               ' → logprob: -4.346780300140381
    6. ' ,' → logprob: -4.596780300140381
    7. '_bits' → logprob: -5.096780300140381
    8. '       ' → logprob: -5.721780300140381
    9. ' in' → logprob: -5.846780300140381
    10. '),' → logprob: -6.346780300140381

Token 2566: ' with' (ID: 483)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.752095103263855
    2. '           ' → logprob: -1.252095103263855
    3. ':' → logprob: -2.5020952224731445
    4. '               ' → logprob: -2.6270952224731445
    5. ' for' → logprob: -3.7520952224731445
    6. ',' → logprob: -3.8770952224731445
    7. 'in' → logprob: -4.1270952224731445
    8. 'for' → logprob: -4.6270952224731445
    9. ':
' → logprob: -5.0020952224731445
    10. '            ' → logprob: -6.1270952224731445

Token 2567: ' l' (ID: 305)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.0747404396533966
    2. 'list' → logprob: -3.449740409851074
    3. 'self' → logprob: -4.574740409851074
    4. 'l' → logprob: -4.699740409851074
    5. 'cached' → logprob: -5.449740409851074
    6. 'keys' → logprob: -5.824740409851074
    7. 'range' → logprob: -5.949740409851074
    8. ' bits' → logprob: -6.449740409851074
    9. 'lf' → logprob: -6.449740409851074
    10. '(bits' → logprob: -6.574740409851074

Token 2568: 'bits' (ID: 24043)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.9891549944877625
    2. ' in' → logprob: -1.1141550540924072
    3. 'bits' → logprob: -1.3641550540924072
    4. '_bits' → logprob: -3.9891550540924072
    5. ' !=' → logprob: -5.114154815673828
    6. ',' → logprob: -5.364154815673828
    7. ' bits' → logprob: -5.739154815673828
    8. '!=' → logprob: -5.739154815673828
    9. '   ' → logprob: -6.489154815673828
    10. ')' → logprob: -6.614154815673828

Token 2569: ' ^' (ID: 7602)
  Prédit: ' &'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' &' → logprob: -1.0007474422454834
    2. ' in' → logprob: -1.1257474422454834
    3. ',' → logprob: -2.1257474422454834
    4. '&' → logprob: -2.7507474422454834
    5. '|' → logprob: -3.2507474422454834
    6. 'in' → logprob: -3.7507474422454834
    7. ' |' → logprob: -4.0007476806640625
    8. '           ' → logprob: -4.1257476806640625
    9. '               ' → logprob: -4.5007476806640625
    10. ' !=' → logprob: -6.0007476806640625

Token 2570: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.010041034780442715
    2. 'bits' → logprob: -4.635041236877441
    3. '(bits' → logprob: -9.260041236877441
    4. '0' → logprob: -9.760041236877441
    5. '(' → logprob: -10.010041236877441
    6. '(r' → logprob: -10.635041236877441
    7. '1' → logprob: -10.635041236877441
    8. '((' → logprob: -11.760041236877441
    9. '...' → logprob: -13.135041236877441
    10. 'b' → logprob: -13.260041236877441

Token 2571: 'bits' (ID: 24043)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.9343910217285156
    2. ' ^' → logprob: -1.6843910217285156
    3. ' &' → logprob: -1.9343910217285156
    4. ')' → logprob: -2.4343910217285156
    5. '_bits' → logprob: -3.4343910217285156
    6. '^' → logprob: -3.5593910217285156
    7. 'bits' → logprob: -3.5593910217285156
    8. ' !=' → logprob: -4.059391021728516
    9. '=' → logprob: -4.184391021728516
    10. '           ' → logprob: -4.559391021728516

Token 2572: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6556745171546936
    2. '==' → logprob: -1.6556744575500488
    3. ' !=' → logprob: -2.780674457550049
    4. ' ^' → logprob: -2.905674457550049
    5. '=' → logprob: -3.155674457550049
    6. '           ' → logprob: -3.655674457550049
    7. ')' → logprob: -3.905674457550049
    8. ' =' → logprob: -4.280674457550049
    9. ' in' → logprob: -4.405674457550049
    10. '               ' → logprob: -4.905674457550049

Token 2573: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.0006272526225075126
    2. '(bits' → logprob: -7.750627040863037
    3. ' bits' → logprob: -9.125627517700195
    4. '0' → logprob: -9.500627517700195
    5. 'bit' → logprob: -13.125627517700195
    6. 'bytes' → logprob: -13.375627517700195
    7. 'Bits' → logprob: -13.750627517700195
    8. '(' → logprob: -13.750627517700195
    9. '```' → logprob: -13.750627517700195
    10. '((' → logprob: -13.875627517700195

Token 2574: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.2129815816879272
    2. ' and' → logprob: -1.3379815816879272
    3. ':
' → logprob: -1.5879815816879272
    4. ':' → logprob: -2.337981700897217
    5. ',' → logprob: -3.337981700897217
    6. '
' → logprob: -3.337981700897217
    7. '               ' → logprob: -4.087981700897217
    8. '       ' → logprob: -4.337981700897217
    9. 'and' → logprob: -5.087981700897217
    10. ' =' → logprob: -5.712981700897217

Token 2575: ' op' (ID: 991)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.2616734206676483
    2. 'l' → logprob: -2.8866734504699707
    3. 'True' → logprob: -2.8866734504699707
    4. 'bits' → logprob: -3.6366734504699707
    5. '(bits' → logprob: -3.8866734504699707
    6. '(True' → logprob: -3.8866734504699707
    7. 'False' → logprob: -4.011673450469971
    8. '((' → logprob: -4.761673450469971
    9. '(False' → logprob: -5.136673450469971
    10. '(r' → logprob: -5.386673450469971

Token 2576: ' is' (ID: 382)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.22537580132484436
    2. '==' → logprob: -2.2253758907318115
    3. ' in' → logprob: -2.9753758907318115
    4. '=' → logprob: -3.8503758907318115
    5. ' !=' → logprob: -4.350375652313232
    6. ' ' → logprob: -6.600375652313232
    7. ' =' → logprob: -6.600375652313232
    8. ' is' → logprob: -6.850375652313232
    9. 's' → logprob: -7.225375652313232
    10. '!=' → logprob: -7.600375652313232

Token 2577: ' XOR' (ID: 147209)
  Prédit: ''^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''^' → logprob: -1.112574815750122
    2. ''*' → logprob: -1.862574815750122
    3. ''' → logprob: -2.112574815750122
    4. 'And' → logprob: -2.237574815750122
    5. 'X' → logprob: -2.362574815750122
    6. '0' → logprob: -2.862574815750122
    7. 'xor' → logprob: -2.987574815750122
    8. '^' → logprob: -3.112574815750122
    9. '*' → logprob: -4.112574577331543
    10. 'and' → logprob: -5.112574577331543

Token 2578: ',
' (ID: 412)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.034072756767273
    2. ' and' → logprob: -1.284072756767273
    3. '           ' → logprob: -1.409072756767273
    4. ':
' → logprob: -2.7840728759765625
    5. ',' → logprob: -4.2840728759765625
    6. '       ' → logprob: -4.4090728759765625
    7. '               ' → logprob: -4.6590728759765625
    8. ' or' → logprob: -5.0340728759765625
    9. 'and' → logprob: -5.2840728759765625
    10. '.' → logprob: -5.7840728759765625

Token 2579: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08428977429866791
    2. ' and' → logprob: -3.334289789199829
    3. '            ' → logprob: -4.20928955078125
    4. 'and' → logprob: -5.08428955078125
    5. ' l' → logprob: -5.70928955078125
    6. ',' → logprob: -5.70928955078125
    7. ')' → logprob: -5.70928955078125
    8. '               ' → logprob: -5.95928955078125
    9. '                   ' → logprob: -6.70928955078125
    10. ' ' → logprob: -6.70928955078125

Token 2580: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.142320454120636
    2. ' l' → logprob: -3.267320394515991
    3. '            ' → logprob: -3.767320394515991
    4. '               ' → logprob: -4.01732063293457
    5. ' and' → logprob: -4.14232063293457
    6. 'and' → logprob: -4.76732063293457
    7. ' ' → logprob: -5.39232063293457
    8. '       ' → logprob: -5.51732063293457
    9. ' ' → logprob: -5.89232063293457
    10. '                   ' → logprob: -5.89232063293457

Token 2581: ' and' (ID: 326)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.007651925086975
    2. ' l' → logprob: -1.132651925086975
    3. ' and' → logprob: -2.5076518058776855
    4. ' #' → logprob: -3.0076518058776855
    5. 'and' → logprob: -3.2576518058776855
    6. '#' → logprob: -3.6326518058776855
    7. '               ' → logprob: -4.3826518058776855
    8. 'bits' → logprob: -4.3826518058776855
    9. ' bits' → logprob: -4.3826518058776855
    10. ' ' → logprob: -4.7576518058776855

Token 2582: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.06930942833423615
    2. ' l' → logprob: -2.9443094730377197
    3. '           ' → logprob: -5.069309234619141
    4. '(l' → logprob: -5.194309234619141
    5. ' (' → logprob: -7.944309234619141
    6. '       ' → logprob: -8.06930923461914
    7. 'for' → logprob: -8.19430923461914
    8. 'bits' → logprob: -8.44430923461914
    9. '         ' → logprob: -8.81930923461914
    10. '          ' → logprob: -9.06930923461914

Token 2583: 'bits' (ID: 24043)
  Prédit: 'bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.00031627772841602564
    2. '=' → logprob: -10.000316619873047
    3. '==' → logprob: -10.250316619873047
    4. '&' → logprob: -10.375316619873047
    5. '|' → logprob: -10.375316619873047
    6. '_bits' → logprob: -10.750316619873047
    7. 'and' → logprob: -11.000316619873047
    8. ' bits' → logprob: -11.125316619873047
    9. '   ' → logprob: -11.500316619873047
    10. ' =' → logprob: -11.500316619873047

Token 2584: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.7729937434196472
    2. '|' → logprob: -0.7729937434196472
    3. ' &' → logprob: -3.022993803024292
    4. ' |' → logprob: -3.772993803024292
    5. '^' → logprob: -5.647993564605713
    6. ' ^' → logprob: -6.647993564605713
    7. '&
' → logprob: -10.272994041442871
    8. 'and' → logprob: -10.647994041442871
    9. ' ' → logprob: -10.647994041442871
    10. '   ' → logprob: -10.772994041442871

Token 2585: ' r' (ID: 428)
  Prédit: 'rb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rb' → logprob: -0.5810393691062927
    2. 'r' → logprob: -0.8310393691062927
    3. ' r' → logprob: -6.0810394287109375
    4. 'rr' → logprob: -6.5810394287109375
    5. 'right' → logprob: -7.8310394287109375
    6. '~' → logprob: -8.206039428710938
    7. '(r' → logprob: -8.581039428710938
    8. 'rights' → logprob: -9.081039428710938
    9. 'rch' → logprob: -9.456039428710938
    10. 'bits' → logprob: -10.081039428710938

Token 2586: 'bits' (ID: 24043)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.025307245552539825
    2. 'bits' → logprob: -4.0253071784973145
    3. ' r' → logprob: -5.6503071784973145
    4. '_bits' → logprob: -6.9003071784973145
    5. '_' → logprob: -7.6503071784973145
    6. '_r' → logprob: -7.6503071784973145
    7. '|' → logprob: -7.9003071784973145
    8. '=' → logprob: -8.400307655334473
    9. '==' → logprob: -8.650307655334473
    10. ' !=' → logprob: -9.400307655334473

Token 2587: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.14448559284210205
    2. ' ==' → logprob: -2.0194854736328125
    3. ' !=' → logprob: -7.5194854736328125
    4. '!=' → logprob: -7.7694854736328125
    5. '&' → logprob: -8.019485473632812
    6. '|' → logprob: -8.894485473632812
    7. '```' → logprob: -9.269485473632812
    8. ')' → logprob: -9.769485473632812
    9. ' &' → logprob: -9.769485473632812
    10. ')==' → logprob: -10.394485473632812

Token 2588: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.001001847442239523
    2. ' bits' → logprob: -7.001001834869385
    3. '(bits' → logprob: -9.501002311706543
    4. 'r' → logprob: -11.876002311706543
    5. '   ' → logprob: -13.501002311706543
    6. 'right' → logprob: -14.001002311706543
    7. 'left' → logprob: -14.126002311706543
    8. '
' → logprob: -14.251002311706543
    9. '(l' → logprob: -14.251002311706543
    10. '0' → logprob: -14.501002311706543

Token 2589: ' if' (ID: 538)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2664763629436493
    2. 'and' → logprob: -2.0164763927459717
    3. '           ' → logprob: -2.8914763927459717
    4. '               ' → logprob: -4.766476154327393
    5. '&' → logprob: -4.891476154327393
    6. ' &' → logprob: -5.141476154327393
    7. ' for' → logprob: -5.141476154327393
    8. ':
' → logprob: -5.266476154327393
    9. ':' → logprob: -5.891476154327393
    10. 'for' → logprob: -6.266476154327393

Token 2590: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.2733921706676483
    2. 'l' → logprob: -2.5233922004699707
    3. 'bits' → logprob: -2.7733922004699707
    4. ' op' → logprob: -3.5233922004699707
    5. ' l' → logprob: -3.6483922004699707
    6. ' bits' → logprob: -3.7733922004699707
    7. 'r' → logprob: -5.273392200469971
    8. '(op' → logprob: -5.773392200469971
    9. '(bits' → logprob: -6.273392200469971
    10. '(l' → logprob: -6.898392200469971

Token 2591: ' is' (ID: 382)
  Prédit: ' &'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.6376713514328003
    2. '&' → logprob: -1.6376713514328003
    3. ' ==' → logprob: -1.8876713514328003
    4. '==' → logprob: -2.13767147064209
    5. '|' → logprob: -6.51267147064209
    6. ' |' → logprob: -6.76267147064209
    7. '   ' → logprob: -6.88767147064209
    8. ' ' → logprob: -7.76267147064209
    9. ' in' → logprob: -7.88767147064209
    10. 'bits' → logprob: -7.88767147064209

Token 2592: ' AND' (ID: 6178)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '&' → logprob: -0.6306779980659485
    2. 'bits' → logprob: -1.3806779384613037
    3. '&r' → logprob: -2.2556779384613037
    4. 'r' → logprob: -2.7556779384613037
    5. 'and' → logprob: -3.5056779384613037
    6. '*' → logprob: -5.880678176879883
    7. ''r' → logprob: -6.505678176879883
    8. '&)' → logprob: -6.505678176879883
    9. 'AND' → logprob: -6.630678176879883
    10. ''' → logprob: -6.630678176879883

Token 2593: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4538950026035309
    2. ':' → logprob: -1.3288949728012085
    3. ':
' → logprob: -2.578895092010498
    4. ',' → logprob: -4.953895092010498
    5. '.' → logprob: -4.953895092010498
    6. '
' → logprob: -5.703895092010498
    7. '       ' → logprob: -6.828895092010498
    8. ',
' → logprob: -6.828895092010498
    9. '               ' → logprob: -7.453895092010498
    10. '...' → logprob: -7.828895092010498

Token 2594: ' but' (ID: 889)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.021081767976284027
    2. '.' → logprob: -5.271081924438477
    3. '       ' → logprob: -5.396081924438477
    4. ' and' → logprob: -6.271081924438477
    5. '            ' → logprob: -6.646081924438477
    6. '            
' → logprob: -7.021081924438477
    7. '...' → logprob: -7.146081924438477
    8. '               ' → logprob: -7.271081924438477
    9. '          ' → logprob: -7.271081924438477
    10. ',' → logprob: -7.396081924438477

Token 2595: ' that's' (ID: 10954)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.3521815538406372
    2. '           ' → logprob: -2.1021814346313477
    3. 'l' → logprob: -2.4771814346313477
    4. 'not' → logprob: -2.4771814346313477
    5. 'bits' → logprob: -2.6021814346313477
    6. ' not' → logprob: -2.7271814346313477
    7. ' bits' → logprob: -2.7271814346313477
    8. '       ' → logprob: -3.2271814346313477
    9. 'the' → logprob: -3.6021814346313477
    10. 'we' → logprob: -3.7271814346313477

Token 2596: ' complicated' (ID: 25334)
  Prédit: 'too'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'too' → logprob: -0.6611657738685608
    2. 'not' → logprob: -1.661165714263916
    3. 'im' → logprob: -2.661165714263916
    4. 'very' → logprob: -2.786165714263916
    5. 'comput' → logprob: -3.161165714263916
    6. 'in' → logprob: -3.661165714263916
    7. ' too' → logprob: -4.161165714263916
    8. 'complex' → logprob: -4.286165714263916
    9. 'ext' → logprob: -4.411165714263916
    10. ' computational' → logprob: -4.536165714263916

Token 2597: '.
' (ID: 558)
  Prédit: '...'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '...' → logprob: -0.921608567237854
    2. '.' → logprob: -1.046608567237854
    3. '           ' → logprob: -1.671608567237854
    4. ',' → logprob: -3.4216084480285645
    5. ':' → logprob: -4.4216084480285645
    6. '#' → logprob: -5.5466084480285645
    7. '       ' → logprob: -5.9216084480285645
    8. '<|end|>' → logprob: -6.1716084480285645
    9. '...
' → logprob: -6.4216084480285645
    10. '               ' → logprob: -6.7966084480285645

Token 2598: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.045417290180921555
    2. '       ' → logprob: -3.295417308807373
    3. '<|end|>' → logprob: -5.295417308807373
    4. '            ' → logprob: -7.420417308807373
    5. '<|end|>' → logprob: -8.045416831970215
    6. '        ' → logprob: -8.545416831970215
    7. '               ' → logprob: -8.545416831970215
    8. '[' → logprob: -8.670416831970215
    9. '.' → logprob: -9.045416831970215
    10. ',' → logprob: -9.420416831970215

Token 2599: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01310846395790577
    2. '       ' → logprob: -4.763108253479004
    3. '
' → logprob: -5.638108253479004
    4. '#' (adapté à ' #') → logprob: -7.888108253479004
    5. '               ' → logprob: -9.388108253479004
    6. '            
' → logprob: -9.388108253479004
    7. '<|end|>' → logprob: -9.388108253479004
    8. '        
' → logprob: -9.638108253479004
    9. 'return' → logprob: -9.763108253479004
    10. ')' → logprob: -10.888108253479004

Token 2600: ' We'll' (ID: 46830)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003951236605644226
    2. '       ' → logprob: -5.878951072692871
    3. '
' → logprob: -7.378951072692871
    4. '#' → logprob: -8.128951072692871
    5. '               ' → logprob: -9.378951072692871
    6. 'return' → logprob: -10.378951072692871
    7. '            
' → logprob: -10.378951072692871
    8. 'for' → logprob: -10.628951072692871
    9. 'from' → logprob: -11.878951072692871
    10. 'import' → logprob: -12.253951072692871

Token 2601: ' do' (ID: 621)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.15215156972408295
    2. '       ' → logprob: -2.777151584625244
    3. 'continue' → logprob: -3.402151584625244
    4. '           ' → logprob: -4.027151584625244
    5. '...' → logprob: -4.277151584625244
    6. 'pass' → logprob: -5.777151584625244
    7. 'import' → logprob: -5.902151584625244
    8. ' return' → logprob: -5.902151584625244
    9. '#' → logprob: -6.652151584625244
    10. '   ' → logprob: -7.277151584625244

Token 2602: ' a' (ID: 261)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20377014577388763
    2. '...' → logprob: -2.328770160675049
    3. 'pass' → logprob: -3.828770160675049
    4. '#' → logprob: -4.078770160675049
    5. '                   ' → logprob: -4.203770160675049
    6. '```' → logprob: -5.078770160675049
    7. 'return' → logprob: -5.203770160675049
    8. 'continue' → logprob: -5.453770160675049
    9. 'for' → logprob: -5.578770160675049
    10. '               ' → logprob: -5.828770160675049

Token 2603: ' loop' (ID: 11453)
  Prédit: '...'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '...' → logprob: -1.3784295320510864
    2. 'pass' → logprob: -1.8784295320510864
    3. 'cache' → logprob: -2.253429412841797
    4. 'def' → logprob: -2.503429412841797
    5. 'return' → logprob: -2.503429412841797
    6. '#' → logprob: -3.003429412841797
    7. 'continue' → logprob: -3.378429412841797
    8. 'cached' → logprob: -3.503429412841797
    9. 'placeholder' → logprob: -3.628429412841797
    10. 'for' → logprob: -3.753429412841797

Token 2604: ' over' (ID: 1072)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1748664826154709
    2. ' for' → logprob: -2.6748664379119873
    3. '...' → logprob: -3.7998664379119873
    4. ':' → logprob: -4.424866676330566
    5. 'for' → logprob: -4.424866676330566
    6. '            ' → logprob: -4.424866676330566
    7. '       ' → logprob: -5.049866676330566
    8. ':
' → logprob: -5.674866676330566
    9. '.' → logprob: -6.049866676330566
    10. '               ' → logprob: -6.299866676330566

Token 2605: ' cached' (ID: 39472)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.32969269156455994
    2. 'self' → logprob: -1.4546927213668823
    3. 'bits' → logprob: -3.8296926021575928
    4. 'range' → logprob: -4.954692840576172
    5. 'cached' → logprob: -5.204692840576172
    6. 'k' → logprob: -5.954692840576172
    7. 'len' → logprob: -6.079692840576172
    8. 'all' → logprob: -6.579692840576172
    9. 'bit' → logprob: -6.829692840576172
    10. 'i' → logprob: -7.079692840576172

Token 2606: ' keys' (ID: 12994)
  Prédit: 'keys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'keys' → logprob: -0.4971182346343994
    2. 'bits' → logprob: -0.9971182346343994
    3. 'items' → logprob: -4.37211799621582
    4. '.keys' → logprob: -5.24711799621582
    5. 'self' → logprob: -6.24711799621582
    6. '_bits' → logprob: -6.24711799621582
    7. '_keys' → logprob: -8.24711799621582
    8. '
' → logprob: -8.99711799621582
    9. 'forms' → logprob: -9.12211799621582
    10. '       ' → logprob: -9.12211799621582

Token 2607: ' and' (ID: 326)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05141998082399368
    2. '.keys' → logprob: -3.551419973373413
    3. '       ' → logprob: -4.926420211791992
    4. 'for' → logprob: -5.176420211791992
    5. 'keys' → logprob: -6.051420211791992
    6. ' for' → logprob: -6.676420211791992
    7. '.items' → logprob: -6.801420211791992
    8. 'items' → logprob: -7.176420211791992
    9. '.' → logprob: -7.301420211791992
    10. '               ' → logprob: -7.301420211791992

Token 2608: ' try' (ID: 2075)
  Prédit: '...'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '...' → logprob: -1.1302980184555054
    2. 'for' → logprob: -1.6302980184555054
    3. ' for' → logprob: -2.130298137664795
    4. 'bits' → logprob: -2.130298137664795
    5. '           ' → logprob: -2.630298137664795
    6. 'cache' → logprob: -3.505298137664795
    7. 'continue' → logprob: -3.630298137664795
    8. ' bits' → logprob: -3.630298137664795
    9. '       ' → logprob: -3.755298137664795
    10. 'len' → logprob: -4.755298137664795

Token 2609: ' AND' (ID: 6178)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.7053380012512207
    2. '           ' → logprob: -2.2053380012512207
    3. 'for' → logprob: -2.4553380012512207
    4. 'k' → logprob: -2.5803380012512207
    5. 'keys' → logprob: -2.7053380012512207
    6. 'cached' → logprob: -2.9553380012512207
    7. ' for' → logprob: -3.4553380012512207
    8. ' bits' → logprob: -3.8303380012512207
    9. ' cached' → logprob: -4.580338001251221
    10. 'key' → logprob: -4.705338001251221

Token 2610: ' and' (ID: 326)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8680570721626282
    2. ',' → logprob: -1.8680570125579834
    3. '       ' → logprob: -2.2430570125579834
    4. ':' → logprob: -3.1180570125579834
    5. '.keys' → logprob: -3.2430570125579834
    6. 'for' → logprob: -3.3680570125579834
    7. 'keys' → logprob: -3.3680570125579834
    8. ' and' → logprob: -3.4930570125579834
    9. '               ' → logprob: -3.6180570125579834
    10. 'and' → logprob: -3.9930570125579834

Token 2611: ' XOR' (ID: 147209)
  Prédit: 'cached'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cached' → logprob: -0.12843570113182068
    2. 'xor' → logprob: -2.7534356117248535
    3. 'cache' → logprob: -4.7534356117248535
    4. ' cached' → logprob: -4.7534356117248535
    5. 'keys' → logprob: -5.0034356117248535
    6. 'r' → logprob: -5.0034356117248535
    7. '|' → logprob: -5.0034356117248535
    8. 'X' → logprob: -5.5034356117248535
    9. '   ' → logprob: -5.5034356117248535
    10. 'or' → logprob: -6.0034356117248535

Token 2612: ':

' (ID: 1402)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3830270767211914
    2. '.keys' → logprob: -2.6330270767211914
    3. ':
' → logprob: -2.7580270767211914
    4. ':' → logprob: -2.8830270767211914
    5. '       ' → logprob: -3.3830270767211914
    6. '.' → logprob: -3.7580270767211914
    7. ',' → logprob: -3.8830270767211914
    8. ' for' → logprob: -3.8830270767211914
    9. 'for' → logprob: -4.758027076721191
    10. '(keys' → logprob: -6.008027076721191

Token 2613: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0042243050411343575
    2. '       ' → logprob: -5.5042243003845215
    3. 'for' → logprob: -9.00422477722168
    4. ' for' → logprob: -11.37922477722168
    5. '               ' → logprob: -12.25422477722168
    6. '
' → logprob: -12.25422477722168
    7. '```' → logprob: -15.00422477722168
    8. 'import' → logprob: -15.25422477722168
    9. '   ' → logprob: -15.37922477722168
    10. '          ' → logprob: -15.62922477722168

Token 2614: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22163133323192596
    2. 'for' → logprob: -2.2216312885284424
    3. '       ' → logprob: -2.5966312885284424
    4. ' for' → logprob: -4.5966315269470215
    5. 'keys' → logprob: -5.3466315269470215
    6. ' keys' → logprob: -7.3466315269470215
    7. 'cached' → logprob: -9.221631050109863
    8. '   ' → logprob: -9.346631050109863
    9. '               ' → logprob: -9.721631050109863
    10. 'cache' → logprob: -10.471631050109863

Token 2615: ' We' (ID: 1416)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.026808179914951324
    2. '       ' → logprob: -4.151808261871338
    3. ' for' → logprob: -5.526808261871338
    4. 'for' → logprob: -5.526808261871338
    5. 'keys' → logprob: -6.401808261871338
    6. ' keys' → logprob: -7.026808261871338
    7. '               ' → logprob: -10.27680778503418
    8. '   ' → logprob: -10.52680778503418
    9. 'cached' → logprob: -10.65180778503418
    10. '#' → logprob: -10.65180778503418

Token 2616: ' trust' (ID: 8501)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cache' → logprob: -1.1419962644577026
    2. 'for' → logprob: -1.2669962644577026
    3. 'keys' → logprob: -1.3919962644577026
    4. '           ' → logprob: -2.516996383666992
    5. '.keys' → logprob: -4.266996383666992
    6. '       ' → logprob: -4.391996383666992
    7. ' for' → logprob: -4.766996383666992
    8. 'continue' → logprob: -5.016996383666992
    9. '_cache' → logprob: -5.016996383666992
    10. 'cached' → logprob: -5.016996383666992

Token 2617: ' the' (ID: 290)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.2615697979927063
    2. '           ' → logprob: -2.1365697383880615
    3. 'self' → logprob: -2.8865697383880615
    4. 'len' → logprob: -3.7615697383880615
    5. 'keys' → logprob: -4.011569976806641
    6. 'bits' → logprob: -5.136569976806641
    7. '               ' → logprob: -6.011569976806641
    8. 'True' → logprob: -6.761569976806641
    9. '       ' → logprob: -6.886569976806641
    10. 'cached' → logprob: -6.886569976806641

Token 2618: ' current' (ID: 2208)
  Prédit: 'keys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'keys' → logprob: -0.9669674634933472
    2. 'cache' → logprob: -1.0919674634933472
    3. 'for' → logprob: -2.0919675827026367
    4. 'list' → logprob: -2.8419675827026367
    5. 'len' → logprob: -3.3419675827026367
    6. 'cached' → logprob: -3.5919675827026367
    7. 'self' → logprob: -4.466967582702637
    8. 'bits' → logprob: -4.966967582702637
    9. ' keys' → logprob: -5.716967582702637
    10. '   ' → logprob: -5.716967582702637

Token 2619: ' cache' (ID: 11956)
  Prédit: '.cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.cache' → logprob: -0.6280001401901245
    2. 'cache' → logprob: -0.8780001401901245
    3. '.keys' → logprob: -3.503000259399414
    4. '           ' → logprob: -5.253000259399414
    5. 'keys' → logprob: -5.253000259399414
    6. 'for' → logprob: -5.753000259399414
    7. '       ' → logprob: -5.878000259399414
    8. 'cached' → logprob: -7.128000259399414
    9. '_cache' → logprob: -7.253000259399414
    10. '   ' → logprob: -7.753000259399414

Token 2620: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3835866153240204
    2. '.keys' → logprob: -1.2585866451263428
    3. '       ' → logprob: -3.8835866451263428
    4. '.update' → logprob: -5.508586406707764
    5. 'keys' → logprob: -6.008586406707764
    6. ':' → logprob: -6.008586406707764
    7. '.' → logprob: -6.758586406707764
    8. '.items' → logprob: -6.758586406707764
    9. '               ' → logprob: -7.383586406707764
    10. ' =' → logprob: -8.258586883544922

Token 2621: ' contain' (ID: 10232)
  Prédit: 'keys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'keys' → logprob: -0.3115905225276947
    2. 'items' → logprob: -2.1865904331207275
    3. 'list' → logprob: -2.4365904331207275
    4. 'cache' → logprob: -4.061590671539307
    5. 'expand' → logprob: -4.186590671539307
    6. 'for' → logprob: -4.936590671539307
    7. 'continue' → logprob: -5.061590671539307
    8. '           ' → logprob: -5.061590671539307
    9. '       ' → logprob: -5.561590671539307
    10. ' keys' → logprob: -5.936590671539307

Token 2622: ' some' (ID: 1236)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.43007174134254456
    2. 'bits' → logprob: -2.1800718307495117
    3. 'keys' → logprob: -2.4300718307495117
    4. 'k' → logprob: -2.9300718307495117
    5. 'self' → logprob: -3.4300718307495117
    6. 'key' → logprob: -3.5550718307495117
    7. '           ' → logprob: -4.305071830749512
    8. '       ' → logprob: -4.805071830749512
    9. 'len' → logprob: -5.805071830749512
    10. 'all' → logprob: -6.305071830749512

Token 2623: ' expressions' (ID: 43578)
  Prédit: 'keys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'keys' → logprob: -0.08294057101011276
    2. 'bits' → logprob: -3.3329405784606934
    3. '           ' → logprob: -4.082940578460693
    4. '.keys' → logprob: -5.332940578460693
    5. 'cache' → logprob: -5.332940578460693
    6. '       ' → logprob: -5.457940578460693
    7. '               ' → logprob: -5.457940578460693
    8. ' keys' → logprob: -5.832940578460693
    9. 'key' → logprob: -6.332940578460693
    10. 'k' → logprob: -7.082940578460693

Token 2624: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0021778582595288754
    2. 'for' → logprob: -6.627177715301514
    3. '       ' → logprob: -7.502177715301514
    4. ' for' → logprob: -8.877178192138672
    5. ',' → logprob: -9.502178192138672
    6. 'keys' → logprob: -10.377178192138672
    7. '.keys' → logprob: -11.252178192138672
    8. '               ' → logprob: -11.252178192138672
    9. 'and' → logprob: -12.127178192138672
    10. ';' → logprob: -12.627178192138672

Token 2625: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008333598263561726
    2. '       ' → logprob: -4.883333683013916
    3. 'for' → logprob: -7.258333683013916
    4. ' for' → logprob: -10.883333206176758
    5. '
' → logprob: -13.133333206176758
    6. '   ' → logprob: -14.133333206176758
    7. '               ' → logprob: -14.258333206176758
    8. 'import' → logprob: -15.133333206176758
    9. '          ' → logprob: -16.508333206176758
    10. 'keys' → logprob: -16.508333206176758

Token 2626: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18131473660469055
    2. '       ' → logprob: -1.8063147068023682
    3. 'for' (adapté à ' for') → logprob: -6.556314945220947
    4. ' for' → logprob: -9.556314468383789
    5. 'keys' → logprob: -10.306314468383789
    6. '
' → logprob: -10.556314468383789
    7. '               ' → logprob: -11.806314468383789
    8. '   ' → logprob: -12.181314468383789
    9. '          ' → logprob: -14.181314468383789
    10. ' keys' → logprob: -14.181314468383789

Token 2627: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.670515239238739
    2. 'left' → logprob: -1.1705152988433838
    3. 'bits' → logprob: -2.670515298843384
    4. 'cached' → logprob: -3.170515298843384
    5. 'k' → logprob: -4.045515060424805
    6. 'key' → logprob: -4.295515060424805
    7. 'lhs' → logprob: -4.670515060424805
    8. 'lk' → logprob: -5.295515060424805
    9. 'lb' → logprob: -5.420515060424805
    10. 'existing' → logprob: -6.045515060424805

Token 2628: 'bits' (ID: 24043)
  Prédit: 'bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.09967734664678574
    2. '_bits' → logprob: -2.849677324295044
    3. 'its' → logprob: -3.849677324295044
    4. ' bits' → logprob: -5.849677562713623
    5. 'key' → logprob: -5.849677562713623
    6. 'keys' → logprob: -5.974677562713623
    7. ' in' → logprob: -6.349677562713623
    8. 'it' → logprob: -6.474677562713623
    9. 'in' → logprob: -6.974677562713623
    10. ',' → logprob: -7.099677562713623

Token 2629: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.17323468625545502
    2. ',' → logprob: -2.423234701156616
    3. 'in' → logprob: -2.673234701156616
    4. '           ' → logprob: -7.048234462738037
    5. ',in' → logprob: -8.798234939575195
    6. ' ,' → logprob: -9.423234939575195
    7. '       ' → logprob: -9.673234939575195
    8. ',l' → logprob: -9.923234939575195
    9. '            ' → logprob: -10.548234939575195
    10. '               ' → logprob: -10.548234939575195

Token 2630: ' list' (ID: 1562)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3484932482242584
    2. 'list' → logprob: -1.223493218421936
    3. 'tuple' → logprob: -10.598493576049805
    4. ' list' → logprob: -11.848493576049805
    5. ' self' → logprob: -12.098493576049805
    6. 'set' → logprob: -12.598493576049805
    7. '[self' → logprob: -12.973493576049805
    8. '   ' → logprob: -13.223493576049805
    9. '(self' → logprob: -13.598493576049805
    10. '       ' → logprob: -14.598493576049805

Token 2631: '(self' (ID: 2402)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5763017535209656
    2. '(self' → logprob: -0.8263017535209656
    3. '           ' → logprob: -8.076301574707031
    4. '       ' → logprob: -10.951301574707031
    5. ' self' → logprob: -11.326301574707031
    6. '
' → logprob: -11.701301574707031
    7. '=self' → logprob: -12.451301574707031
    8. '[self' → logprob: -12.826301574707031
    9. 'keys' → logprob: -13.451301574707031
    10. '   ' → logprob: -13.826301574707031

Token 2632: '.cache' (ID: 37175)
  Prédit: '.cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cache' → logprob: -0.00017231269157491624
    2. 'cache' → logprob: -8.75017261505127
    3. 'self' → logprob: -11.37517261505127
    4. '.cached' → logprob: -13.37517261505127
    5. '	cache' → logprob: -15.87517261505127
    6. ' .' → logprob: -15.87517261505127
    7. '_cache' → logprob: -16.375171661376953
    8. '
' → logprob: -16.750171661376953
    9. 'CACHE' → logprob: -16.750171661376953
    10. '(cache' → logprob: -17.375171661376953

Token 2633: '.keys' (ID: 18392)
  Prédit: '.keys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.keys' → logprob: -0.64984130859375
    2. '):
' → logprob: -0.89984130859375
    3. '):' → logprob: -2.64984130859375
    4. '       ' → logprob: -8.27484130859375
    5. 'keys' → logprob: -9.14984130859375
    6. ')' → logprob: -9.39984130859375
    7. '           ' → logprob: -9.52484130859375
    8. '):

' → logprob: -11.14984130859375
    9. '   ' → logprob: -11.52484130859375
    10. '()):
' → logprob: -12.02484130859375

Token 2634: '()):
' (ID: 83536)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6463406085968018
    2. '()):
' → logprob: -0.7713406085968018
    3. '()' → logprob: -4.771340370178223
    4. '):' → logprob: -5.896340370178223
    5. '           ' → logprob: -7.021340370178223
    6. '():
' → logprob: -7.271340370178223
    7. '       ' → logprob: -7.396340370178223
    8. ')' → logprob: -8.896340370178223
    9. '               ' → logprob: -10.271340370178223
    10. '):

' → logprob: -11.271340370178223

Token 2635: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1625630408525467
    2. '               ' → logprob: -1.9125630855560303
    3. ' for' → logprob: -6.162562847137451
    4. 'for' → logprob: -8.78756332397461
    5. '   ' → logprob: -10.78756332397461
    6. '            ' → logprob: -11.53756332397461
    7. '       ' → logprob: -11.53756332397461
    8. ' ' → logprob: -12.03756332397461
    9. '                   ' → logprob: -12.41256332397461
    10. '```' → logprob: -12.66256332397461

Token 2636: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7836344838142395
    2. 'for' (adapté à ' for') → logprob: -1.2836344242095947
    3. '               ' → logprob: -2.0336344242095947
    4. '           ' → logprob: -2.0336344242095947
    5. '                   ' → logprob: -5.658634662628174
    6. '   ' → logprob: -7.783634662628174
    7. 'r' → logprob: -8.533634185791016
    8. 'if' → logprob: -9.658634185791016
    9. ' ' → logprob: -9.658634185791016
    10. ' ' → logprob: -9.908634185791016

Token 2637: ' r' (ID: 428)
  Prédit: 'rb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rb' → logprob: -0.0016057939501479268
    2. 'r' → logprob: -7.001605987548828
    3. '   ' → logprob: -7.501605987548828
    4. '       ' → logprob: -9.626605987548828
    5. ' r' → logprob: -11.126605987548828
    6. 'k' → logprob: -11.251605987548828
    7. '_r' → logprob: -12.001605987548828
    8. '           ' → logprob: -12.001605987548828
    9. ' ' → logprob: -12.376605987548828
    10. 'R' → logprob: -12.501605987548828

Token 2638: 'bits' (ID: 24043)
  Prédit: 'bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.00023560250701848418
    2. '_bits' → logprob: -8.375235557556152
    3. 'b' → logprob: -13.250235557556152
    4. ' bits' → logprob: -13.375235557556152
    5. 'bit' → logprob: -14.875235557556152
    6. '.bits' → logprob: -15.250235557556152
    7. '(bits' → logprob: -15.500235557556152
    8. '
' → logprob: -16.12523651123047
    9. 'Bits' → logprob: -16.37523651123047
    10. '```' → logprob: -16.50023651123047

Token 2639: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016044223681092262
    2. 'in' → logprob: -4.1410441398620605
    3. '	in' → logprob: -13.141044616699219
    4. '                ' → logprob: -13.391044616699219
    5. ')' → logprob: -13.516044616699219
    6. ' ' → logprob: -14.016044616699219
    7. '               ' → logprob: -14.141044616699219
    8. '                   ' → logprob: -14.266044616699219
    9. '                    ' → logprob: -14.516044616699219
    10. ' ' → logprob: -14.766044616699219

Token 2640: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.06198953464627266
    2. 'self' → logprob: -2.8119895458221436
    3. ' list' → logprob: -10.811989784240723
    4. ' self' → logprob: -14.061989784240723
    5. '[self' → logprob: -14.311989784240723
    6. '   ' → logprob: -16.186988830566406
    7. '(self' → logprob: -16.311988830566406
    8. '       ' → logprob: -16.686988830566406
    9. '
' → logprob: -16.936988830566406
    10. '           ' → logprob: -16.936988830566406

Token 2641: '(self' (ID: 2402)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.31388992071151733
    2. '(self' → logprob: -1.313889980316162
    3. '[self' → logprob: -8.063889503479004
    4. ' self' → logprob: -9.188889503479004
    5. '               ' → logprob: -9.438889503479004
    6. '           ' → logprob: -9.563889503479004
    7. '=self' → logprob: -10.563889503479004
    8. '
' → logprob: -11.563889503479004
    9. '                   ' → logprob: -11.813889503479004
    10. '       ' → logprob: -12.188889503479004

Token 2642: '.cache' (ID: 37175)
  Prédit: '.cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cache' → logprob: -0.001932205050252378
    2. 'cache' → logprob: -6.251932144165039
    3. '_cache' → logprob: -13.751932144165039
    4. '	cache' → logprob: -14.001932144165039
    5. '
' → logprob: -14.751932144165039
    6. '.cached' → logprob: -15.001932144165039
    7. ' cache' → logprob: -15.501932144165039
    8. '.keys' → logprob: -16.12693214416504
    9. 'CACHE' → logprob: -16.12693214416504
    10. '.' → logprob: -16.37693214416504

Token 2643: '.keys' (ID: 18392)
  Prédit: '.keys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.keys' → logprob: -9.610702363715973e-06
    2. '):
' → logprob: -13.125009536743164
    3. '.' → logprob: -13.375009536743164
    4. 'keys' → logprob: -13.375009536743164
    5. ')' → logprob: -13.500009536743164
    6. ':
' → logprob: -14.125009536743164
    7. '	keys' → logprob: -14.250009536743164
    8. 's' → logprob: -14.875009536743164
    9. '   ' → logprob: -15.125009536743164
    10. ':' → logprob: -15.125009536743164

Token 2644: '()):
' (ID: 83536)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.30344057083129883
    2. '()):
' → logprob: -1.6784405708312988
    3. '):' → logprob: -3.678440570831299
    4. '()' → logprob: -3.678440570831299
    5. '               ' → logprob: -4.428440570831299
    6. '():
' → logprob: -4.553440570831299
    7. '                   ' → logprob: -7.178440570831299
    8. ')' → logprob: -7.178440570831299
    9. '():' → logprob: -8.42844009399414
    10. '           ' → logprob: -9.80344009399414

Token 2645: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0003012617235071957
    2. '                       ' → logprob: -8.500301361083984
    3. '               ' → logprob: -9.750301361083984
    4. '                           ' → logprob: -10.750301361083984
    5. '           ' → logprob: -12.625301361083984
    6. '                  ' → logprob: -13.250301361083984
    7. '		           ' → logprob: -13.250301361083984
    8. '```' → logprob: -13.375301361083984
    9. '                    ' → logprob: -13.500301361083984
    10. '                               ' → logprob: -13.500301361083984

Token 2646: ' #' (ID: 1069)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.016893647611141205
    2. 'if' → logprob: -4.5168938636779785
    3. '                   ' → logprob: -5.6418938636779785
    4. ' if' → logprob: -6.3918938636779785
    5. '                           ' → logprob: -8.51689338684082
    6. '               ' → logprob: -9.26689338684082
    7. '#' (adapté à ' #') → logprob: -9.51689338684082
    8. '           ' → logprob: -10.39189338684082
    9. '   ' → logprob: -10.39189338684082
    10. 'for' → logprob: -10.51689338684082

Token 2647: ' Try' (ID: 14720)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7565461993217468
    2. '                   ' → logprob: -1.0065462589263916
    3. '                       ' → logprob: -2.1315462589263916
    4. 'bits' → logprob: -3.5065462589263916
    5. 'for' → logprob: -5.7565460205078125
    6. '               ' → logprob: -5.7565460205078125
    7. ' if' → logprob: -6.0065460205078125
    8. '           ' → logprob: -6.3815460205078125
    9. '(bits' → logprob: -6.6315460205078125
    10. '#' → logprob: -6.7565460205078125

Token 2648: ' AND' (ID: 6178)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.0207600593566895
    2. '(l' → logprob: -1.3957600593566895
    3. '(bits' → logprob: -1.5207600593566895
    4. 'op' → logprob: -3.0207600593566895
    5. 'bits' → logprob: -3.2707600593566895
    6. '(op' → logprob: -3.7707600593566895
    7. 'and' → logprob: -4.3957600593566895
    8. '#' → logprob: -4.7707600593566895
    9. '(' → logprob: -5.0207600593566895
    10. '                   ' → logprob: -5.1457600593566895

Token 2649: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02440882846713066
    2. 'if' → logprob: -3.8994088172912598
    3. 'and' → logprob: -6.39940881729126
    4. ' if' → logprob: -7.02440881729126
    5. '&' → logprob: -7.77440881729126
    6. '                       ' → logprob: -8.899409294128418
    7. ':' → logprob: -8.899409294128418
    8. '               ' → logprob: -9.024409294128418
    9. ' and' → logprob: -9.149409294128418
    10. ',' → logprob: -9.524409294128418

Token 2650: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.003395990701392293
    2. 'if' → logprob: -6.128396034240723
    3. '                       ' → logprob: -8.003396034240723
    4. 'and' → logprob: -8.628396034240723
    5. ' if' → logprob: -8.753396034240723
    6. '               ' → logprob: -9.003396034240723
    7. 'bits' → logprob: -9.753396034240723
    8. '&' → logprob: -10.128396034240723
    9. ':
' → logprob: -10.128396034240723
    10. '           ' → logprob: -10.128396034240723

Token 2651: ' and' (ID: 326)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.23732298612594604
    2. '                   ' → logprob: -1.6123230457305908
    3. '                       ' → logprob: -5.237322807312012
    4. 'combined' → logprob: -6.112322807312012
    5. ' if' → logprob: -6.487322807312012
    6. '               ' → logprob: -7.237322807312012
    7. 'and' (adapté à ' and') → logprob: -7.362322807312012
    8. 'bits' → logprob: -7.612322807312012
    9. '           ' → logprob: -8.362322807312012
    10. '(bits' → logprob: -8.987322807312012

Token 2652: '_bits' (ID: 48415)
  Prédit: '_bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bits' → logprob: -0.025563150644302368
    2. 'bits' → logprob: -4.4005632400512695
    3. 'if' → logprob: -4.6505632400512695
    4. ' =' → logprob: -7.1505632400512695
    5. ' if' → logprob: -7.7755632400512695
    6. '_result' → logprob: -7.7755632400512695
    7. 'result' → logprob: -7.9005632400512695
    8. '_results' → logprob: -8.90056324005127
    9. '==' → logprob: -9.02556324005127
    10. '   ' → logprob: -9.27556324005127

Token 2653: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34939002990722656
    2. ' =' → logprob: -1.2243900299072266
    3. '                   ' → logprob: -7.349390029907227
    4. '=(' → logprob: -8.724390029907227
    5. '==' → logprob: -9.474390029907227
    6. ' ==' → logprob: -10.974390029907227
    7. '                       ' → logprob: -11.474390029907227
    8. '=((' → logprob: -11.849390029907227
    9. '               ' → logprob: -12.474390029907227
    10. '           ' → logprob: -12.849390029907227

Token 2654: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0006028342177160084
    2. '                   ' → logprob: -8.000602722167969
    3. ' l' → logprob: -9.125602722167969
    4. '(l' → logprob: -9.375602722167969
    5. 'bits' → logprob: -10.375602722167969
    6. '                       ' → logprob: -10.625602722167969
    7. '                    ' → logprob: -12.750602722167969
    8. '           ' → logprob: -12.875602722167969
    9. '               ' → logprob: -13.000602722167969
    10. '                     ' → logprob: -13.125602722167969

Token 2655: 'bits' (ID: 24043)
  Prédit: 'bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.1990957260131836
    2. 'l' → logprob: -2.0740957260131836
    3. '(l' → logprob: -3.3240957260131836
    4. '               ' → logprob: -4.949095726013184
    5. '(bits' → logprob: -5.574095726013184
    6. '                   ' → logprob: -6.449095726013184
    7. '           ' → logprob: -6.574095726013184
    8. '       ' → logprob: -7.199095726013184
    9. '_bits' → logprob: -7.574095726013184
    10. 'b' → logprob: -7.699095726013184

Token 2656: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.3162740170955658
    2. ' &' → logprob: -1.3162740468978882
    3. '&amp' → logprob: -6.316274166107178
    4. '                   ' → logprob: -7.441274166107178
    5. '&nbsp' → logprob: -8.19127368927002
    6. '&r' → logprob: -9.31627368927002
    7. '&B' → logprob: -9.94127368927002
    8. '                       ' → logprob: -10.19127368927002
    9. '&
' → logprob: -10.81627368927002
    10. '&p' → logprob: -11.06627368927002

Token 2657: ' r' (ID: 428)
  Prédit: 'rb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rb' → logprob: -1.0325924449716695e-05
    2. ' r' → logprob: -11.75001049041748
    3. ' rb' → logprob: -13.12501049041748
    4. 'r' → logprob: -14.87501049041748
    5. '	r' → logprob: -20.750009536743164
    6. ' ' → logprob: -21.000009536743164
    7. 'rgb' → logprob: -21.250009536743164
    8. '   ' → logprob: -21.375009536743164
    9. 'RB' → logprob: -21.375009536743164
    10. 'rib' → logprob: -21.625009536743164

Token 2658: 'bits' (ID: 24043)
  Prédit: 'rb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rb' → logprob: -8.2994620242971e-06
    2. 'r' → logprob: -12.125008583068848
    3. 'bits' → logprob: -13.250008583068848
    4. ' r' → logprob: -14.375008583068848
    5. ' rb' → logprob: -15.000008583068848
    6. '   ' → logprob: -19.25000762939453
    7. 'rr' → logprob: -19.87500762939453
    8. ' ' → logprob: -20.12500762939453
    9. '	r' → logprob: -20.50000762939453
    10. '```' → logprob: -20.62500762939453

Token 2659: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00026646157493814826
    2. ':' → logprob: -9.750266075134277
    3. ',' → logprob: -10.375266075134277
    4. ':
' → logprob: -10.500266075134277
    5. '<|end|>' → logprob: -10.625266075134277
    6. '               ' → logprob: -10.750266075134277
    7. '                       ' → logprob: -11.125266075134277
    8. '				' → logprob: -11.500266075134277
    9. '                  ' → logprob: -11.625266075134277
    10. '           ' → logprob: -11.625266075134277

Token 2660: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -5.097437315271236e-05
    2. '                       ' → logprob: -10.75005054473877
    3. '				' → logprob: -11.75005054473877
    4. '               ' → logprob: -12.00005054473877
    5. 'if' → logprob: -12.25005054473877
    6. ',' → logprob: -12.87505054473877
    7. '                  ' → logprob: -13.75005054473877
    8. '           ' → logprob: -13.75005054473877
    9. ' if' → logprob: -13.87505054473877
    10. ':' → logprob: -14.12505054473877

Token 2661: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.012939968146383762
    2. 'if' (adapté à ' if') → logprob: -4.387939929962158
    3. ' if' → logprob: -8.137940406799316
    4. '                       ' → logprob: -9.887940406799316
    5. '           ' → logprob: -10.262940406799316
    6. '               ' → logprob: -10.387940406799316
    7. '				' → logprob: -12.012940406799316
    8. 'continue' → logprob: -12.512940406799316
    9. '                    ' → logprob: -13.262940406799316
    10. '                  ' → logprob: -13.512940406799316

Token 2662: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.05507500842213631
    2. ' and' → logprob: -2.93007493019104
    3. '                   ' → logprob: -9.180074691772461
    4. '           ' → logprob: -10.805074691772461
    5. '               ' → logprob: -10.930074691772461
    6. '   ' → logprob: -11.305074691772461
    7. '                       ' → logprob: -11.930074691772461
    8. '(and' → logprob: -11.930074691772461
    9. '       ' → logprob: -12.805074691772461
    10. 'ands' → logprob: -13.055074691772461

Token 2663: '_bits' (ID: 48415)
  Prédit: '_bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bits' → logprob: -0.08243583887815475
    2. 'bits' → logprob: -2.5824358463287354
    3. 'and' → logprob: -5.707435607910156
    4. ' and' → logprob: -9.957435607910156
    5. '   ' → logprob: -10.207435607910156
    6. '```' → logprob: -10.707435607910156
    7. '_BITS' → logprob: -11.207435607910156
    8. 'ands' → logprob: -11.207435607910156
    9. '==' → logprob: -11.332435607910156
    10. '
' → logprob: -11.957435607910156

Token 2664: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.38699135184288025
    2. ' ==' → logprob: -1.1369913816452026
    3. ' !=' → logprob: -10.386991500854492
    4. ')==' → logprob: -10.636991500854492
    5. '!=' → logprob: -10.761991500854492
    6. '==
' → logprob: -11.136991500854492
    7. '                   ' → logprob: -11.761991500854492
    8. '                       ' → logprob: -12.136991500854492
    9. '==(' → logprob: -12.636991500854492
    10. '           ' → logprob: -12.886991500854492

Token 2665: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.012554745189845562
    2. ' bits' → logprob: -4.38755464553833
    3. '           ' → logprob: -10.512555122375488
    4. '       ' → logprob: -11.887555122375488
    5. '               ' → logprob: -12.512555122375488
    6. '   ' → logprob: -12.512555122375488
    7. '(bits' → logprob: -13.512555122375488
    8. '                   ' → logprob: -14.512555122375488
    9. '          ' → logprob: -14.887555122375488
    10. '.bits' → logprob: -15.262555122375488

Token 2666: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.057359833270311356
    2. ':' → logprob: -3.5573599338531494
    3. ' and' → logprob: -3.9323599338531494
    4. ':
' → logprob: -5.05735969543457
    5. '                   ' → logprob: -7.05735969543457
    6. 'and' → logprob: -8.30735969543457
    7. '                           ' → logprob: -9.68235969543457
    8. '                        ' → logprob: -10.55735969543457
    9. '                      ' → logprob: -11.05735969543457
    10. '                        
' → logprob: -11.30735969543457

Token 2667: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.00018744789122138172
    2. '                           ' → logprob: -9.625187873840332
    3. ':' → logprob: -10.250187873840332
    4. ' and' → logprob: -10.500187873840332
    5. 'continue' → logprob: -11.000187873840332
    6. '                   ' → logprob: -11.250187873840332
    7. '                               ' → logprob: -11.500187873840332
    8. 'if' → logprob: -12.000187873840332
    9. '                      ' → logprob: -13.125187873840332
    10. '                        ' → logprob: -13.125187873840332

Token 2668: ' #' (ID: 1069)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.43589943647384644
    2. 'left' → logprob: -1.5608994960784912
    3. 'if' → logprob: -3.310899496078491
    4. 'l' → logprob: -3.560899496078491
    5. 'for' → logprob: -3.560899496078491
    6. '                           ' → logprob: -3.935899496078491
    7. 'forms' → logprob: -4.560899257659912
    8. ' left' → logprob: -5.060899257659912
    9. 'lf' → logprob: -5.810899257659912
    10. 'lhs' → logprob: -5.935899257659912

Token 2669: ' Compose' (ID: 183887)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.23865516483783722
    2. '                       ' → logprob: -2.7386550903320312
    3. 'l' → logprob: -2.8636550903320312
    4. 'for' → logprob: -3.1136550903320312
    5. 'if' → logprob: -3.7386550903320312
    6. 'lf' → logprob: -4.863655090332031
    7. '                           ' → logprob: -5.363655090332031
    8. 'lhs' → logprob: -5.863655090332031
    9. ' left' → logprob: -6.613655090332031
    10. 'len' → logprob: -6.738655090332031

Token 2670: ' forms' (ID: 11526)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1310856342315674
    2. 'lf' → logprob: -1.2560856342315674
    3. 'l' → logprob: -1.6310856342315674
    4. 'left' → logprob: -2.3810856342315674
    5. 'forms' → logprob: -3.3810856342315674
    6. '                       ' → logprob: -3.3810856342315674
    7. '                           ' → logprob: -4.506085395812988
    8. 'lhs' → logprob: -4.756085395812988
    9. 'expr' → logprob: -6.006085395812988
    10. ' for' → logprob: -6.131085395812988

Token 2671: ' from' (ID: 591)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.10375658422708511
    2. '                           ' → logprob: -2.6037566661834717
    3. 'for' → logprob: -3.9787566661834717
    4. ' for' → logprob: -5.478756427764893
    5. '                   ' → logprob: -7.603756427764893
    6. 'left' → logprob: -8.10375690460205
    7. 'l' → logprob: -8.60375690460205
    8. ':' → logprob: -8.72875690460205
    9. ',' → logprob: -9.35375690460205
    10. ' l' → logprob: -9.60375690460205

Token 2672: ' left' (ID: 3561)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16212543845176697
    2. 'l' → logprob: -1.9121254682540894
    3. '                   ' → logprob: -7.162125587463379
    4. '                       ' → logprob: -7.287125587463379
    5. ' self' → logprob: -8.912125587463379
    6. 'cache' → logprob: -9.037125587463379
    7. '                           ' → logprob: -9.662125587463379
    8. ' l' → logprob: -10.787125587463379
    9. '[self' → logprob: -10.787125587463379
    10. '[l' → logprob: -11.412125587463379

Token 2673: ' and' (ID: 326)
  Prédit: 'forms'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'forms' → logprob: -0.749939501285553
    2. '                       ' → logprob: -1.8749394416809082
    3. '_forms' → logprob: -2.499939441680908
    4. 'for' → logprob: -2.624939441680908
    5. '                   ' → logprob: -2.749939441680908
    6. ',' → logprob: -3.249939441680908
    7. ' and' → logprob: -3.249939441680908
    8. 'and' → logprob: -3.999939441680908
    9. 'bits' → logprob: -4.249939441680908
    10. 'l' → logprob: -4.874939441680908

Token 2674: ' right' (ID: 1849)
  Prédit: 'rb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rb' → logprob: -0.002524649491533637
    2. 'right' → logprob: -6.0025248527526855
    3. 'r' → logprob: -11.752524375915527
    4. '   ' → logprob: -11.752524375915527
    5. '           ' → logprob: -12.377524375915527
    6. 'self' → logprob: -12.377524375915527
    7. 'rights' → logprob: -12.502524375915527
    8. '               ' → logprob: -12.627524375915527
    9. '       ' → logprob: -12.627524375915527
    10. ' rb' → logprob: -12.877524375915527

Token 2675: ' minimal' (ID: 19957)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.35029301047325134
    2. 'for' → logprob: -2.225292921066284
    3. 'left' → logprob: -2.475292921066284
    4. '                           ' → logprob: -3.475292921066284
    5. 'forms' → logprob: -4.100293159484863
    6. '_forms' → logprob: -4.350293159484863
    7. '                   ' → logprob: -4.600293159484863
    8. ' for' → logprob: -5.475293159484863
    9. '(left' → logprob: -5.475293159484863
    10. ':' → logprob: -5.600293159484863

Token 2676: ':
' (ID: 734)
  Prédit: 'forms'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'forms' → logprob: -0.01005047932267189
    2. '_forms' → logprob: -5.635050296783447
    3. 'for' → logprob: -6.260050296783447
    4. '                       ' → logprob: -6.260050296783447
    5. 'length' → logprob: -7.385050296783447
    6. '                   ' → logprob: -7.510050296783447
    7. ' forms' → logprob: -7.760050296783447
    8. 'len' → logprob: -8.135050773620605
    9. 'form' → logprob: -8.135050773620605
    10. '                           ' → logprob: -9.135050773620605

Token 2677: '                       ' (ID: 968)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.6248300671577454
    2. '                       ' → logprob: -0.8748300671577454
    3. 'left' → logprob: -3.4998300075531006
    4. 'for' → logprob: -4.24983024597168
    5. '                               ' → logprob: -6.74983024597168
    6. '                   ' → logprob: -7.74983024597168
    7. ' left' → logprob: -7.87483024597168
    8. ' for' → logprob: -8.12483024597168
    9. 'l' → logprob: -8.37483024597168
    10. '                                   ' → logprob: -9.24983024597168

Token 2678: ' for' (ID: 395)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.7051964998245239
    2. 'for' (adapté à ' for') → logprob: -1.080196499824524
    3. '                       ' → logprob: -1.955196499824524
    4. 'l' → logprob: -4.080196380615234
    5. '                           ' → logprob: -5.455196380615234
    6. ' left' → logprob: -6.455196380615234
    7. ' for' → logprob: -7.330196380615234
    8. 'lf' → logprob: -8.080196380615234
    9. 'lhs' → logprob: -8.080196380615234
    10. '                   ' → logprob: -8.455196380615234

Token 2679: ' lf' (ID: 131463)
  Prédit: 'lf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lf' → logprob: -0.0005045388825237751
    2. ' lf' → logprob: -8.250504493713379
    3. 'left' → logprob: -8.875504493713379
    4. 'l' → logprob: -9.375504493713379
    5. 'lx' → logprob: -11.750504493713379
    6. 'lef' → logprob: -12.875504493713379
    7. '   ' → logprob: -13.500504493713379
    8. 'Lf' → logprob: -13.625504493713379
    9. 'lc' → logprob: -14.125504493713379
    10. 'lhs' → logprob: -14.250504493713379

Token 2680: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.060734886676073074
    2. 'in' → logprob: -2.935734987258911
    3. 'orm' → logprob: -5.435734748840332
    4. '_forms' → logprob: -7.310734748840332
    5. 'forms' → logprob: -7.935734748840332
    6. ' forms' → logprob: -8.685734748840332
    7. ',' → logprob: -9.310734748840332
    8. 'form' → logprob: -9.810734748840332
    9. '_form' → logprob: -9.935734748840332
    10. '_in' → logprob: -10.060734748840332

Token 2681: ' dfs' (ID: 51252)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0036763211246579885
    2. 'dfs' → logprob: -5.628676414489746
    3. 'list' → logprob: -10.503676414489746
    4. ' self' → logprob: -10.503676414489746
    5. '[self' → logprob: -12.128676414489746
    6. '   ' → logprob: -13.003676414489746
    7. '(self' → logprob: -13.253676414489746
    8. 'sorted' → logprob: -13.253676414489746
    9. 'df' → logprob: -13.503676414489746
    10. '           ' → logprob: -13.753676414489746

Token 2682: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.03811470419168472
    2. 'l' → logprob: -3.2881147861480713
    3. '                   ' → logprob: -10.663114547729492
    4. '(' → logprob: -11.163114547729492
    5. '           ' → logprob: -11.663114547729492
    6. '               ' → logprob: -12.038114547729492
    7. '(bits' → logprob: -12.163114547729492
    8. 'bits' → logprob: -12.663114547729492
    9. ' l' → logprob: -13.288114547729492
    10. '```' → logprob: -13.413114547729492

Token 2683: 'bits' (ID: 24043)
  Prédit: 'bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.001448214054107666
    2. 'l' → logprob: -7.501448154449463
    3. 'b' → logprob: -8.001448631286621
    4. '(l' → logprob: -9.376448631286621
    5. 'its' → logprob: -9.501448631286621
    6. '(bits' → logprob: -9.501448631286621
    7. '   ' → logprob: -10.376448631286621
    8. ' bits' → logprob: -10.501448631286621
    9. ' l' → logprob: -10.626448631286621
    10. ')' → logprob: -10.626448631286621

Token 2684: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.008541285991668701
    2. '):' → logprob: -5.258541107177734
    3. '()):
' → logprob: -6.383541107177734
    4. '                           ' → logprob: -6.883541107177734
    5. '                       ' → logprob: -8.758541107177734
    6. ')' → logprob: -9.008541107177734
    7. '                               ' → logprob: -9.258541107177734
    8. '):
' → logprob: -9.633541107177734
    9. '():
' → logprob: -10.633541107177734
    10. '()' → logprob: -10.758541107177734

Token 2685: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.007940547540783882
    2. '                               ' → logprob: -5.007940769195557
    3. ' for' → logprob: -7.507940769195557
    4. 'for' → logprob: -8.007940292358398
    5. '                            ' → logprob: -8.882940292358398
    6. '                             ' → logprob: -9.882940292358398
    7. '                                   ' → logprob: -10.382940292358398
    8. '           ' → logprob: -10.507940292358398
    9. '```' → logprob: -11.257940292358398
    10. '   ' → logprob: -11.382940292358398

Token 2686: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.7267362475395203
    2. '                               ' → logprob: -0.9767362475395203
    3. ' for' → logprob: -1.976736307144165
    4. '                                   ' → logprob: -7.476736068725586
    5. '                           ' → logprob: -7.726736068725586
    6. '   ' → logprob: -8.976736068725586
    7. ' ' → logprob: -9.476736068725586
    8. '                                ' → logprob: -9.976736068725586
    9. '           ' → logprob: -10.101736068725586
    10. '                                       ' → logprob: -10.851736068725586

Token 2687: ' rf' (ID: 76208)
  Prédit: 'rf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rf' → logprob: -0.002485169330611825
    2. ' rf' → logprob: -6.002485275268555
    3. '           ' → logprob: -12.502485275268555
    4. '   ' → logprob: -13.502485275268555
    5. '               ' → logprob: -13.752485275268555
    6. '                   ' → logprob: -14.002485275268555
    7. '    ' → logprob: -14.502485275268555
    8. '       ' → logprob: -14.752485275268555
    9. ' ' → logprob: -15.127485275268555
    10. ''' → logprob: -15.252485275268555

Token 2688: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06308470666408539
    2. 'in' → logprob: -2.938084602355957
    3. '                               ' → logprob: -5.688084602355957
    4. ')' → logprob: -6.313084602355957
    5. '<|end|>' → logprob: -6.813084602355957
    6. '<|end|>' → logprob: -7.438084602355957
    7. '                           ' → logprob: -8.063084602355957
    8. ' (' → logprob: -8.563084602355957
    9. ':' → logprob: -9.563084602355957
    10. ',' → logprob: -9.688084602355957

Token 2689: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.0011749862460419536
    2. ' dfs' → logprob: -6.7511749267578125
    3. 'df' → logprob: -12.751174926757812
    4. 'dfa' → logprob: -13.751174926757812
    5. 'd' → logprob: -15.376174926757812
    6. '   ' → logprob: -15.751174926757812
    7. '           ' → logprob: -16.126174926757812
    8. '
' → logprob: -16.376174926757812
    9. ' ' → logprob: -16.626174926757812
    10. '               ' → logprob: -17.001174926757812

Token 2690: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.10176924616098404
    2. '(rb' → logprob: -2.351769208908081
    3. 'rb' → logprob: -6.47676944732666
    4. '   ' → logprob: -11.60176944732666
    5. '```' → logprob: -12.47676944732666
    6. ')' → logprob: -12.85176944732666
    7. '
' → logprob: -13.47676944732666
    8. '(
' → logprob: -13.72676944732666
    9. '(rgb' → logprob: -14.10176944732666
    10. ' (' → logprob: -14.47676944732666

Token 2691: 'bits' (ID: 24043)
  Prédit: 'rb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rb' → logprob: -0.046317681670188904
    2. 'bits' → logprob: -3.4213175773620605
    3. 'r' → logprob: -4.4213175773620605
    4. ' rb' → logprob: -8.546318054199219
    5. '(r' → logprob: -8.796318054199219
    6. '(rb' → logprob: -9.296318054199219
    7. ' r' → logprob: -9.546318054199219
    8. '```' → logprob: -11.546318054199219
    9. 'cb' → logprob: -11.796318054199219
    10. ')' → logprob: -11.921318054199219

Token 2692: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4083077907562256
    2. '                               ' → logprob: -1.5333077907562256
    3. '):' → logprob: -2.1583077907562256
    4. '                           ' → logprob: -6.408308029174805
    5. ')' → logprob: -6.908308029174805
    6. '):
' → logprob: -8.158308029174805
    7. '                                   ' → logprob: -8.533308029174805
    8. ':
' → logprob: -8.658308029174805
    9. ''):
' → logprob: -9.033308029174805
    10. ':' → logprob: -9.283308029174805

Token 2693: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.0005023968406021595
    2. '                                   ' → logprob: -8.250502586364746
    3. '							' → logprob: -9.875502586364746
    4. '                                       ' → logprob: -10.000502586364746
    5. '                           ' → logprob: -10.375502586364746
    6. ''' → logprob: -10.500502586364746
    7. '"' → logprob: -10.750502586364746
    8. 'if' → logprob: -11.375502586364746
    9. '                                
' → logprob: -11.750502586364746
    10. '                              ' → logprob: -12.125502586364746

Token 2694: ' #' (ID: 1069)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.17750492691993713
    2. '                                   ' → logprob: -2.0525050163269043
    3. '                               ' → logprob: -4.427505016326904
    4. ' expr' → logprob: -5.427505016326904
    5. 'if' → logprob: -5.552505016326904
    6. 'form' → logprob: -5.677505016326904
    7. '                                       ' → logprob: -6.552505016326904
    8. '   ' → logprob: -6.802505016326904
    9. 'res' → logprob: -7.052505016326904
    10. 'ex' → logprob: -7.052505016326904

Token 2695: ' produce' (ID: 10635)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.1469927728176117
    2. 'if' → logprob: -3.1469926834106445
    3. 'form' → logprob: -3.1469926834106445
    4. 'candidate' → logprob: -3.5219926834106445
    5. '                               ' → logprob: -4.7719926834106445
    6. '                                   ' → logprob: -5.5219926834106445
    7. '#' → logprob: -6.0219926834106445
    8. 's' → logprob: -6.5219926834106445
    9. 'cand' → logprob: -7.1469926834106445
    10. 'f' → logprob: -7.5219926834106445

Token 2696: ' normalized' (ID: 59625)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.20363450050354004
    2. ''' → logprob: -1.95363450050354
    3. 'expr' → logprob: -3.32863450050354
    4. ' '('' → logprob: -6.703634262084961
    5. ' f' → logprob: -6.828634262084961
    6. 'form' → logprob: -7.203634262084961
    7. '('' → logprob: -7.328634262084961
    8. '"' → logprob: -7.578634262084961
    9. 'forms' → logprob: -7.828634262084961
    10. '       ' → logprob: -8.453634262084961

Token 2697: ' form' (ID: 1625)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.4413835108280182
    2. 'f' → logprob: -1.3163834810256958
    3. ''' → logprob: -3.4413836002349854
    4. 'form' → logprob: -3.8163836002349854
    5. 'forms' → logprob: -4.066383361816406
    6. '('' → logprob: -4.816383361816406
    7. 'lf' → logprob: -5.816383361816406
    8. ' '('' → logprob: -7.066383361816406
    9. 'expression' → logprob: -7.066383361816406
    10. '(f' → logprob: -7.566383361816406

Token 2698: ' (' (ID: 350)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.856398344039917
    2. ''' → logprob: -1.356398344039917
    3. '                                   ' → logprob: -2.231398344039917
    4. '                               ' → logprob: -2.606398344039917
    5. '"' → logprob: -2.981398344039917
    6. 'if' → logprob: -3.856398344039917
    7. 'f' → logprob: -4.231398582458496
    8. ' (' → logprob: -5.106398582458496
    9. '(f' → logprob: -5.106398582458496
    10. 'form' → logprob: -5.356398582458496

Token 2699: 'order' (ID: 2143)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4523718059062958
    2. 'f' → logprob: -1.2023718357086182
    3. 'if' → logprob: -4.202371597290039
    4. ' '('' → logprob: -4.452371597290039
    5. 'lf' → logprob: -4.452371597290039
    6. '('' → logprob: -5.077371597290039
    7. 'min' → logprob: -5.577371597290039
    8. ' f' → logprob: -6.202371597290039
    9. '(f' → logprob: -6.327371597290039
    10. '                               ' → logprob: -6.577371597290039

Token 2700: ' lex' (ID: 37772)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1241399496793747
    2. '                               ' → logprob: -2.8741400241851807
    3. ' =' → logprob: -3.6241400241851807
    4. '                                   ' → logprob: -3.9991400241851807
    5. '='' → logprob: -4.999139785766602
    6. 'sorted' → logprob: -6.999139785766602
    7. '=f' → logprob: -7.249139785766602
    8. '                                       ' → logprob: -7.374139785766602
    9. '```' → logprob: -7.499139785766602
    10. '=min' → logprob: -7.624139785766602

Token 2701: ' for' (ID: 395)
  Prédit: 'ic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.5132481455802917
    2. '                               ' → logprob: -1.6382482051849365
    3. ')' → logprob: -2.5132482051849365
    4. 'ical' → logprob: -2.7632482051849365
    5. 'ically' → logprob: -4.263247966766357
    6. '                           ' → logprob: -4.513247966766357
    7. 'lf' → logprob: -4.888247966766357
    8. '                                   ' → logprob: -5.388247966766357
    9. '(' → logprob: -6.013247966766357
    10. ':' → logprob: -6.388247966766357

Token 2702: ' comm' (ID: 1394)
  Prédit: 'lf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lf' → logprob: -0.004455043468624353
    2. 'And' → logprob: -6.254455089569092
    3. ' lf' → logprob: -6.504455089569092
    4. 'str' → logprob: -7.879455089569092
    5. '   ' → logprob: -9.379454612731934
    6. ''' → logprob: -9.504454612731934
    7. 'Lf' → logprob: -9.754454612731934
    8. 'lt' → logprob: -9.754454612731934
    9. 'left' → logprob: -10.504454612731934
    10. '(l' → logprob: -10.504454612731934

Token 2703: 'ut' (ID: 339)
  Prédit: 'ical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ical' → logprob: -0.9611180424690247
    2. 'ic' → logprob: -1.5861179828643799
    3. ')' → logprob: -1.7111179828643799
    4. '                               ' → logprob: -1.8361179828643799
    5. '                           ' → logprob: -4.336118221282959
    6. '           ' → logprob: -4.836118221282959
    7. '               ' → logprob: -4.961118221282959
    8. '       ' → logprob: -5.086118221282959
    9. 'ically' → logprob: -5.461118221282959
    10. '')' → logprob: -5.586118221282959

Token 2704: 'ative' (ID: 1799)
  Prédit: 'ical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ical' → logprob: -1.187247395515442
    2. 'ative' → logprob: -1.312247395515442
    3. 'ic' → logprob: -1.437247395515442
    4. 'ity' → logprob: -3.1872472763061523
    5. 'ativity' → logprob: -3.5622472763061523
    6. 'al' → logprob: -3.6872472763061523
    7. 'icity' → logprob: -4.062247276306152
    8. ')' → logprob: -4.312247276306152
    9. 'at' → logprob: -4.687247276306152
    10. 'ated' → logprob: -4.812247276306152

Token 2705: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1505382061004639
    2. '')' → logprob: -1.2755382061004639
    3. ''' → logprob: -1.9005382061004639
    4. ')
' → logprob: -3.150538206100464
    5. '                               ' → logprob: -3.400538206100464
    6. '('' → logprob: -3.775538206100464
    7. '',' → logprob: -3.900538206100464
    8. '(
' → logprob: -4.150538444519043
    9. '):
' → logprob: -4.275538444519043
    10. 'operators' → logprob: -4.525538444519043

Token 2706: '                               ' (ID: 2419)
  Prédit: '                                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                                   ' → logprob: -0.022342411801218987
    2. '                               ' → logprob: -4.147342205047607
    3. '                                       ' → logprob: -5.897342205047607
    4. 'if' → logprob: -6.772342205047607
    5. ' if' → logprob: -6.772342205047607
    6. '```' → logprob: -8.397342681884766
    7. '                                  ' → logprob: -8.897342681884766
    8. '                                                               ' → logprob: -9.147342681884766
    9. '"' → logprob: -9.397342681884766
    10. ' (' → logprob: -9.522342681884766

Token 2707: ' a' (ID: 261)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.21664699912071228
    2. '                               ' → logprob: -2.341646909713745
    3. 'lf' → logprob: -2.966646909713745
    4. '                                   ' → logprob: -3.466646909713745
    5. ' if' → logprob: -5.341647148132324
    6. '                                       ' → logprob: -6.216647148132324
    7. '(f' → logprob: -6.591647148132324
    8. ' lf' → logprob: -6.716647148132324
    9. '```' → logprob: -6.966647148132324
    10. '(l' → logprob: -7.091647148132324

Token 2708: ',' (ID: 11)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3905487358570099
    2. ' =' → logprob: -1.8905487060546875
    3. '                               ' → logprob: -2.5155487060546875
    4. '=' → logprob: -3.6405487060546875
    5. 'b' → logprob: -4.0155487060546875
    6. ' if' → logprob: -4.0155487060546875
    7. '                           ' → logprob: -5.3905487060546875
    8. '               ' → logprob: -5.6405487060546875
    9. '           ' → logprob: -5.8905487060546875
    10. '                                   ' → logprob: -6.1405487060546875

Token 2709: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -3.8889261304575484e-06
    2. ' b' → logprob: -12.500003814697266
    3. '   ' → logprob: -17.500003814697266
    4. '                                   ' → logprob: -17.625003814697266
    5. '                               ' → logprob: -18.500003814697266
    6. '       ' → logprob: -19.125003814697266
    7. '	b' → logprob: -19.250003814697266
    8. ' =' → logprob: -19.750003814697266
    9. '(b' → logprob: -19.875003814697266
    10. '           ' → logprob: -19.875003814697266

Token 2710: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002207474084571004
    2. ' =' → logprob: -6.127207279205322
    3. ',' → logprob: -11.12720775604248
    4. '=a' → logprob: -13.62720775604248
    5. ')' → logprob: -13.75220775604248
    6. '=f' → logprob: -14.12720775604248
    7. '                               ' → logprob: -14.37720775604248
    8. '<|end|>' → logprob: -14.37720775604248
    9. '=b' → logprob: -14.50220775604248
    10. '=min' → logprob: -15.12720775604248

Token 2711: ' sorted' (ID: 20099)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.0377533920109272
    2. '(min' → logprob: -3.5377533435821533
    3. '(sorted' → logprob: -5.162753582000732
    4. ' (' → logprob: -6.537753582000732
    5. 'sorted' → logprob: -8.537753105163574
    6. '   ' → logprob: -9.287753105163574
    7. '(tuple' → logprob: -9.287753105163574
    8. '(f' → logprob: -9.412753105163574
    9. ' ' → logprob: -9.787753105163574
    10. 'min' → logprob: -9.912753105163574

Token 2712: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.002917803591117263
    2. '(l' → logprob: -6.002917766571045
    3. '[' → logprob: -8.002918243408203
    4. '((' → logprob: -9.377918243408203
    5. '[l' → logprob: -10.877918243408203
    6. '({' → logprob: -13.627918243408203
    7. '(' → logprob: -13.627918243408203
    8. '   ' → logprob: -14.377918243408203
    9. '{' → logprob: -14.627918243408203
    10. '[(' → logprob: -15.377918243408203

Token 2713: 'lf' (ID: 12632)
  Prédit: 'lf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lf' → logprob: -3.4121114822482923e-06
    2. ' lf' → logprob: -13.000003814697266
    3. '[' → logprob: -14.250003814697266
    4. '   ' → logprob: -15.125003814697266
    5. '           ' → logprob: -16.750003814697266
    6. '(l' → logprob: -17.125003814697266
    7. '       ' → logprob: -18.500003814697266
    8. '(' → logprob: -19.250003814697266
    9. '                           ' → logprob: -19.375003814697266
    10. '               ' → logprob: -19.375003814697266

Token 2714: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017177811823785305
    2. ' ,' → logprob: -6.501717567443848
    3. ',r' → logprob: -8.626717567443848
    4. ',
' → logprob: -10.751717567443848
    5. '                               ' → logprob: -12.126717567443848
    6. 'rf' → logprob: -12.751717567443848
    7. ',s' → logprob: -13.251717567443848
    8. '                                   ' → logprob: -14.251717567443848
    9. ',b' → logprob: -14.751717567443848
    10. ',f' → logprob: -15.001717567443848

Token 2715: ' rf' (ID: 76208)
  Prédit: 'rf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rf' → logprob: -8.061054359131958e-06
    2. ' rf' → logprob: -11.750007629394531
    3. '   ' → logprob: -16.50000762939453
    4. ' ' → logprob: -19.12500762939453
    5. '.rf' → logprob: -19.25000762939453
    6. '    ' → logprob: -19.62500762939453
    7. '_rf' → logprob: -19.62500762939453
    8. '           ' → logprob: -20.12500762939453
    9. '       ' → logprob: -20.75000762939453
    10. '                                                                ' → logprob: -21.37500762939453

Token 2716: '])
' (ID: 5169)
  Prédit: '])
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])
' → logprob: -0.01562440488487482
    2. '])' → logprob: -4.265624523162842
    3. '[' → logprob: -7.515624523162842
    4. '                               ' → logprob: -7.890624523162842
    5. ',' → logprob: -8.765624046325684
    6. ']):
' → logprob: -8.765624046325684
    7. '],' → logprob: -9.640624046325684
    8. '                                   ' → logprob: -10.015624046325684
    9. '])
' → logprob: -10.015624046325684
    10. '])

' → logprob: -11.515624046325684

Token 2717: '                               ' (ID: 2419)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2721426486968994
    2. '                               ' → logprob: -1.7721426486968994
    3. '                                   ' → logprob: -3.1471426486968994
    4. '                                       ' → logprob: -4.39714241027832
    5. '')' → logprob: -6.02214241027832
    6. '',' → logprob: -6.02214241027832
    7. ''(' → logprob: -6.52214241027832
    8. '('' → logprob: -7.02214241027832
    9. ' '('' → logprob: -7.27214241027832
    10. 'f' → logprob: -7.27214241027832

Token 2718: ' cand' (ID: 31771)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.058618057519197464
    2. 'f' → logprob: -3.3086180686950684
    3. ''(' → logprob: -4.433618068695068
    4. '                               ' → logprob: -5.933618068695068
    5. 'expr' → logprob: -6.308618068695068
    6. ' '('' → logprob: -6.808618068695068
    7. '                                   ' → logprob: -7.183618068695068
    8. '')' → logprob: -7.683618068695068
    9. '"' → logprob: -7.933618068695068
    10. '('' → logprob: -8.55861759185791

Token 2719: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1609320342540741
    2. '=' → logprob: -1.9109320640563965
    3. 'expr' → logprob: -8.410931587219238
    4. '           ' → logprob: -9.660931587219238
    5. '       ' → logprob: -9.660931587219238
    6. '_expr' → logprob: -9.660931587219238
    7. '='' → logprob: -10.035931587219238
    8. '=c' → logprob: -10.410931587219238
    9. '          ' → logprob: -10.785931587219238
    10. '=('' → logprob: -10.910931587219238

Token 2720: ' '('' (ID: 87284)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.023916946724057198
    2. ''' → logprob: -3.7739169597625732
    3. '                               ' → logprob: -8.148917198181152
    4. ' f' → logprob: -8.273917198181152
    5. '(f' → logprob: -9.898917198181152
    6. '                                   ' → logprob: -10.398917198181152
    7. ''(' → logprob: -11.398917198181152
    8. ' '('' → logprob: -11.523917198181152
    9. '"' → logprob: -11.898917198181152
    10. ''f' → logprob: -12.273917198181152

Token 2721: ' +' (ID: 659)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0003434488025959581
    2. 'f' → logprob: -8.000343322753906
    3. '{' → logprob: -12.875343322753906
    4. ' a' → logprob: -13.125343322753906
    5. ''a' → logprob: -13.500343322753906
    6. '{}' → logprob: -13.875343322753906
    7. '+' → logprob: -14.875343322753906
    8. '   ' → logprob: -15.625343322753906
    9. 'c' → logprob: -16.250343322753906
    10. '+a' → logprob: -16.250343322753906

Token 2722: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -3.173704271830502e-06
    2. ' a' → logprob: -12.87500286102295
    3. 'f' → logprob: -14.87500286102295
    4. ''a' → logprob: -16.000003814697266
    5. '   ' → logprob: -17.500003814697266
    6. '(a' → logprob: -17.875003814697266
    7. '	a' → logprob: -18.125003814697266
    8. ' ' → logprob: -19.375003814697266
    9. '*a' → logprob: -20.250003814697266
    10. 'а' → logprob: -20.375003814697266

Token 2723: ' +' (ID: 659)
  Prédit: ''*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''*' → logprob: -0.5208079814910889
    2. '+' → logprob: -1.0208079814910889
    3. '*' → logprob: -4.020808219909668
    4. ' +' → logprob: -4.145808219909668
    5. '+'' → logprob: -4.645808219909668
    6. ''' → logprob: -7.270808219909668
    7. '+
' → logprob: -8.270808219909668
    8. '`' → logprob: -8.395808219909668
    9. ' '*'' → logprob: -8.395808219909668
    10. '"*' → logprob: -8.770808219909668

Token 2724: ' '*'' (ID: 89603)
  Prédit: ''*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''*' → logprob: -1.7954958821064793e-05
    2. ''' → logprob: -12.250018119812012
    3. '`' → logprob: -12.375018119812012
    4. ' '*'' → logprob: -12.500018119812012
    5. '"*' → logprob: -13.125018119812012
    6. '"' → logprob: -13.375018119812012
    7. '('*' → logprob: -13.750018119812012
    8. '*' → logprob: -15.500018119812012
    9. '')' → logprob: -16.375017166137695
    10. '   ' → logprob: -17.000017166137695

Token 2725: ' +' (ID: 659)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -2.5776860184123507e-06
    2. ' b' → logprob: -13.00000286102295
    3. '+b' → logprob: -15.87500286102295
    4. '+' → logprob: -16.375001907348633
    5. ' +' → logprob: -18.500001907348633
    6. '	b' → logprob: -20.000001907348633
    7. ')b' → logprob: -20.750001907348633
    8. '<b' → logprob: -21.000001907348633
    9. '                                   ' → logprob: -22.250001907348633
    10. '                               ' → logprob: -22.375001907348633

Token 2726: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.9361264946837764e-07
    2. ' b' → logprob: -16.0
    3. ')b' → logprob: -19.0
    4. ''b' → logprob: -20.375
    5. '	b' → logprob: -22.5
    6. '   ' → logprob: -23.5
    7. '$b' → logprob: -24.125
    8. '           ' → logprob: -24.375
    9. '<b' → logprob: -24.75
    10. '>b' → logprob: -24.875

Token 2727: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1153453588485718
    2. '')' → logprob: -1.2403453588485718
    3. '+')' → logprob: -1.4903453588485718
    4. '+' → logprob: -1.8653453588485718
    5. ' +' → logprob: -6.365345478057861
    6. '                               ' → logprob: -7.365345478057861
    7. '+")' → logprob: -9.240345001220703
    8. '}')' → logprob: -9.740345001220703
    9. '+)' → logprob: -9.865345001220703
    10. '                                   ' → logprob: -10.240345001220703

Token 2728: ' ')' (ID: 35910)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -4.723352049040841e-06
    2. ')'' → logprob: -12.875004768371582
    3. ')' → logprob: -13.625004768371582
    4. '')"' → logprob: -14.375004768371582
    5. ' ')'' → logprob: -15.375004768371582
    6. '")' → logprob: -16.375003814697266
    7. ''' → logprob: -17.875003814697266
    8. '+')' → logprob: -18.125003814697266
    9. ' ')' → logprob: -18.250003814697266
    10. '')</' → logprob: -18.375003814697266

Token 2729: ''
' (ID: 2207)
  Prédit: ')''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')'' → logprob: -0.08307848125696182
    2. ')'
' → logprob: -2.833078384399414
    3. ')' → logprob: -4.333078384399414
    4. '')' → logprob: -5.458078384399414
    5. ''' → logprob: -6.208078384399414
    6. '                               ' → logprob: -6.583078384399414
    7. ')')
' → logprob: -9.458078384399414
    8. ''
' → logprob: -12.208078384399414
    9. '       ' → logprob: -12.458078384399414
    10. '                           ' → logprob: -12.833078384399414

Token 2730: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.018672963604331017
    2. ')' → logprob: -4.018672943115234
    3. '                                   ' → logprob: -8.143672943115234
    4. '')' → logprob: -9.268672943115234
    5. '                           ' → logprob: -9.893672943115234
    6. '                                ' → logprob: -11.143672943115234
    7. '                       ' → logprob: -11.393672943115234
    8. '                              ' → logprob: -11.768672943115234
    9. '                                       ' → logprob: -11.768672943115234
    10. '							' → logprob: -11.893672943115234

Token 2731: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.11990053206682205
    2. 'if' → logprob: -2.4949004650115967
    3. '                               ' → logprob: -3.6199004650115967
    4. '                                   ' → logprob: -6.119900703430176
    5. ' results' → logprob: -7.494900703430176
    6. '                                       ' → logprob: -7.744900703430176
    7. ' if' → logprob: -8.244900703430176
    8. '                           ' → logprob: -10.119900703430176
    9. '
' → logprob: -10.369900703430176
    10. '                                           ' → logprob: -10.744900703430176

Token 2732: '.add' (ID: 1950)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5772075057029724
    2. '.add' → logprob: -0.8272075057029724
    3. '.update' → logprob: -7.077207565307617
    4. '                                   ' → logprob: -8.702207565307617
    5. '                               ' → logprob: -9.202207565307617
    6. '.setdefault' → logprob: -9.577207565307617
    7. ' .' → logprob: -10.577207565307617
    8. '.append' → logprob: -11.077207565307617
    9. '.insert' → logprob: -11.827207565307617
    10. '                                       ' → logprob: -11.952207565307617

Token 2733: '(c' (ID: 2410)
  Prédit: 'cand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cand' → logprob: -0.003975697327405214
    2. '(c' → logprob: -6.003975868225098
    3. 'c' → logprob: -6.503975868225098
    4. ' cand' → logprob: -13.628975868225098
    5. 'cad' → logprob: -15.878975868225098
    6. 'cant' → logprob: -16.37897491455078
    7. '   ' → logprob: -17.25397491455078
    8. '	c' → logprob: -17.87897491455078
    9. 'Cand' → logprob: -18.62897491455078
    10. '(' → logprob: -18.75397491455078

Token 2734: 'and' (ID: 427)
  Prédit: 'and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.0011028258595615625
    2. 'cand' → logprob: -7.501102924346924
    3. ''' → logprob: -7.626102924346924
    4. ')' → logprob: -11.501102447509766
    5. '(c' → logprob: -12.001102447509766
    6. '   ' → logprob: -12.126102447509766
    7. '')' → logprob: -12.251102447509766
    8. '`' → logprob: -12.376102447509766
    9. ' cand' → logprob: -12.751102447509766
    10. '```' → logprob: -13.001102447509766

Token 2735: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008415495976805687
    2. '                               ' → logprob: -7.5008416175842285
    3. '<|end|>' → logprob: -8.62584114074707
    4. ')
' → logprob: -10.75084114074707
    5. ')return' → logprob: -11.25084114074707
    6. '                           ' → logprob: -11.37584114074707
    7. ')}' → logprob: -11.62584114074707
    8. '<|end|>' → logprob: -12.00084114074707
    9. '')' → logprob: -12.12584114074707
    10. '               ' → logprob: -12.25084114074707

Token 2736: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.1516834497451782
    2. '                               ' → logprob: -1.2766834497451782
    3. '           ' → logprob: -2.6516833305358887
    4. '
' → logprob: -2.6516833305358887
    5. '                           ' → logprob: -2.6516833305358887
    6. '<|end|>' → logprob: -3.0266833305358887
    7. '       ' → logprob: -3.1516833305358887
    8. '                       ' → logprob: -3.4016833305358887
    9. '               ' → logprob: -3.4016833305358887
    10. '```' → logprob: -5.151683330535889

Token 2737: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01762477308511734
    2. 'for' → logprob: -4.892624855041504
    3. '           ' → logprob: -5.517624855041504
    4. '               ' → logprob: -5.892624855041504
    5. '
' → logprob: -6.017624855041504
    6. '       ' → logprob: -8.142624855041504
    7. '                       ' → logprob: -8.767624855041504
    8. '                    
' → logprob: -9.142624855041504
    9. ' for' → logprob: -9.892624855041504
    10. '                    ' → logprob: -10.642624855041504

Token 2738: ' Try' (ID: 14720)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.0774267166852951
    2. '#' → logprob: -2.8274266719818115
    3. '                   ' → logprob: -4.452426910400391
    4. '               ' → logprob: -6.452426910400391
    5. '           ' → logprob: -6.702426910400391
    6. '       ' → logprob: -7.827426910400391
    7. ' xor' → logprob: -9.07742691040039
    8. '   ' → logprob: -9.20242691040039
    9. '                       ' → logprob: -9.45242691040039
    10. 'try' → logprob: -9.82742691040039

Token 2739: ' XOR' (ID: 147209)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.00025001514586620033
    2. ' xor' → logprob: -8.875249862670898
    3. '   ' → logprob: -9.625249862670898
    4. '^' → logprob: -10.875249862670898
    5. '#' → logprob: -11.875249862670898
    6. 'or' → logprob: -12.250249862670898
    7. '       ' → logprob: -12.625249862670898
    8. ' ' → logprob: -12.750249862670898
    9. '  ' → logprob: -13.250249862670898
    10. 'l' → logprob: -14.000249862670898

Token 2740: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2863323986530304
    2. ' =' → logprob: -2.161332368850708
    3. '=' → logprob: -2.286332368850708
    4. '_bits' → logprob: -3.911332368850708
    5. '           ' → logprob: -6.036332607269287
    6. ':' → logprob: -6.036332607269287
    7. '
' → logprob: -6.161332607269287
    8. '```' → logprob: -6.661332607269287
    9. '               ' → logprob: -6.911332607269287
    10. '==' → logprob: -7.161332607269287

Token 2741: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.10603593289852142
    2. '=' → logprob: -2.9810359477996826
    3. ' =' → logprob: -3.1060359477996826
    4. '           ' → logprob: -6.4810357093811035
    5. '               ' → logprob: -6.4810357093811035
    6. '==' → logprob: -7.4810357093811035
    7. '                       ' → logprob: -7.9810357093811035
    8. '
' → logprob: -8.481036186218262
    9. '       ' → logprob: -8.731036186218262
    10. '                    ' → logprob: -9.106036186218262

Token 2742: ' xor' (ID: 106402)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' (adapté à ' xor') → logprob: -0.01624784804880619
    2. 'if' → logprob: -5.266247749328613
    3. '                   ' → logprob: -5.516247749328613
    4. '           ' → logprob: -5.516247749328613
    5. '               ' → logprob: -6.641247749328613
    6. '   ' → logprob: -6.891247749328613
    7. '       ' → logprob: -7.891247749328613
    8. '                       ' → logprob: -9.266247749328613
    9. ' xor' → logprob: -10.016247749328613
    10. 'for' → logprob: -10.391247749328613

Token 2743: '_bits' (ID: 48415)
  Prédit: '_bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bits' → logprob: -1.0683535037969705e-05
    2. ' =' → logprob: -13.37501049041748
    3. 'bits' → logprob: -13.37501049041748
    4. '=_' → logprob: -13.62501049041748
    5. '_BITS' → logprob: -13.62501049041748
    6. '   ' → logprob: -13.75001049041748
    7. '=' → logprob: -14.37501049041748
    8. '_b' → logprob: -14.50001049041748
    9. '```' → logprob: -14.50001049041748
    10. '_bit' → logprob: -14.87501049041748

Token 2744: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687217235565186
    2. ' =' → logprob: -1.1368721723556519
    3. '                   ' → logprob: -15.011872291564941
    4. '           ' → logprob: -15.761872291564941
    5. '==' → logprob: -16.011871337890625
    6. '=x' → logprob: -16.011871337890625
    7. '   ' → logprob: -16.386871337890625
    8. ' ' → logprob: -16.886871337890625
    9. '       ' → logprob: -17.136871337890625
    10. '               ' → logprob: -17.136871337890625

Token 2745: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00010342398309148848
    2. ' l' → logprob: -9.875102996826172
    3. '                   ' → logprob: -10.375102996826172
    4. '(l' → logprob: -11.000102996826172
    5. '           ' → logprob: -13.500102996826172
    6. '               ' → logprob: -14.000102996826172
    7. '	l' → logprob: -14.750102996826172
    8. '                       ' → logprob: -14.875102996826172
    9. '   ' → logprob: -15.750102996826172
    10. '       ' → logprob: -15.750102996826172

Token 2746: 'bits' (ID: 24043)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.24449479579925537
    2. 'bits' → logprob: -1.7444947957992554
    3. '(l' → logprob: -3.244494915008545
    4. ' l' → logprob: -7.119494915008545
    5. '[l' → logprob: -7.369494915008545
    6. 'lb' → logprob: -7.494494915008545
    7. 'b' → logprob: -7.994494915008545
    8. 'bit' → logprob: -8.494494438171387
    9. 'lbs' → logprob: -8.744494438171387
    10. '(bits' → logprob: -9.369494438171387

Token 2747: ' ^' (ID: 7602)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.02329578995704651
    2. ' ^' → logprob: -3.7732958793640137
    3. '   ' → logprob: -11.398295402526855
    4. '^^' → logprob: -11.898295402526855
    5. '=' → logprob: -12.648295402526855
    6. ' ^
' → logprob: -12.648295402526855
    7. ')' → logprob: -12.773295402526855
    8. '\x' → logprob: -13.023295402526855
    9. ' xor' → logprob: -13.148295402526855
    10. 'xor' → logprob: -13.148295402526855

Token 2748: ' r' (ID: 428)
  Prédit: 'rb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rb' → logprob: 0.0
    2. ' rb' → logprob: -17.25
    3. ' r' → logprob: -17.875
    4. '   ' → logprob: -18.25
    5. 'r' → logprob: -18.875
    6. '```' → logprob: -20.5
    7. ' ' → logprob: -21.25
    8. '(rb' → logprob: -21.375
    9. 'rub' → logprob: -22.125
    10. '`' → logprob: -22.25

Token 2749: 'bits' (ID: 24043)
  Prédit: 'rb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rb' → logprob: -1.2664456789934775e-06
    2. 'r' → logprob: -13.750000953674316
    3. 'bits' → logprob: -16.625001907348633
    4. ' r' → logprob: -17.250001907348633
    5. ' rb' → logprob: -17.500001907348633
    6. '   ' → logprob: -17.625001907348633
    7. '```' → logprob: -18.875001907348633
    8. '(r' → logprob: -19.500001907348633
    9. ' ' → logprob: -19.500001907348633
    10. 'rgb' → logprob: -19.875001907348633

Token 2750: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.016824383288621902
    2. ' ==' → logprob: -4.766824245452881
    3. '==' → logprob: -5.641824245452881
    4. '<|end|>' → logprob: -5.891824245452881
    5. ' =' → logprob: -7.766824245452881
    6. '=' → logprob: -8.141824722290039
    7. '               ' → logprob: -8.641824722290039
    8. '<|end|>' → logprob: -8.766824722290039
    9. '				' → logprob: -9.016824722290039
    10. ' if' → logprob: -9.391824722290039

Token 2751: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -7.696077227592468e-05
    2. '=' → logprob: -11.000077247619629
    3. '```' → logprob: -11.750077247619629
    4. '                    ' → logprob: -11.875077247619629
    5. '                  ' → logprob: -12.000077247619629
    6. '==' → logprob: -12.000077247619629
    7. '                       ' → logprob: -12.250077247619629
    8. '				' → logprob: -12.250077247619629
    9. '<|end|>' → logprob: -12.250077247619629
    10. ' =' → logprob: -12.750077247619629

Token 2752: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0030630340334028006
    2. 'if' (adapté à ' if') → logprob: -5.878063201904297
    3. ' if' → logprob: -9.128063201904297
    4. '                       ' → logprob: -9.378063201904297
    5. '=' → logprob: -10.628063201904297
    6. '               ' → logprob: -11.253063201904297
    7. '                    ' → logprob: -12.253063201904297
    8. ' =' → logprob: -12.378063201904297
    9. '                  ' → logprob: -12.503063201904297
    10. ':' → logprob: -13.128063201904297

Token 2753: ' xor' (ID: 106402)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.001528194174170494
    2. ' xor' → logprob: -6.501528263092041
    3. '```' → logprob: -11.251527786254883
    4. '   ' → logprob: -12.876527786254883
    5. '`' → logprob: -13.251527786254883
    6. '``' → logprob: -13.376527786254883
    7. '       ' → logprob: -13.501527786254883
    8. '=' → logprob: -14.126527786254883
    9. '==' → logprob: -14.126527786254883
    10. ' ' → logprob: -14.626527786254883

Token 2754: '_bits' (ID: 48415)
  Prédit: '_bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bits' → logprob: -0.0036088628694415092
    2. 'xor' → logprob: -6.003608703613281
    3. '==' → logprob: -7.378608703613281
    4. '```' → logprob: -8.128608703613281
    5. ' ==' → logprob: -9.628608703613281
    6. 'bits' → logprob: -10.003608703613281
    7. ' xor' → logprob: -11.128608703613281
    8. '   ' → logprob: -11.378608703613281
    9. '_BITS' → logprob: -11.378608703613281
    10. '_tokens' → logprob: -11.503608703613281

Token 2755: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07889595627784729
    2. '==' → logprob: -2.5788960456848145
    3. ')==' → logprob: -12.578895568847656
    4. '```' → logprob: -14.203895568847656
    5. '===' → logprob: -14.828895568847656
    6. '()==' → logprob: -15.328895568847656
    7. '==
' → logprob: -15.453895568847656
    8. ']==' → logprob: -15.453895568847656
    9. '==(' → logprob: -15.453895568847656
    10. '                   ' → logprob: -15.953895568847656

Token 2756: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.03804241120815277
    2. ' bits' → logprob: -3.2880423069000244
    3. '(bits' → logprob: -15.038042068481445
    4. 'bytes' → logprob: -15.413042068481445
    5. 'b' → logprob: -16.413042068481445
    6. 'bit' → logprob: -16.788042068481445
    7. '   ' → logprob: -16.913042068481445
    8. '           ' → logprob: -16.913042068481445
    9. '```' → logprob: -17.413042068481445
    10. '       ' → logprob: -17.663042068481445

Token 2757: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.3733105957508087
    2. ':' → logprob: -1.4983105659484863
    3. ':
' → logprob: -2.6233105659484863
    4. '                               ' → logprob: -4.623310565948486
    5. '                           ' → logprob: -6.248310565948486
    6. '                   ' → logprob: -6.498310565948486
    7. '<|end|>' → logprob: -7.248310565948486
    8. '):
' → logprob: -8.623311042785645
    9. '):' → logprob: -8.748311042785645
    10. '                        ' → logprob: -9.373311042785645

Token 2758: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0037134999874979258
    2. '                               ' → logprob: -5.628713607788086
    3. '                           ' → logprob: -9.253713607788086
    4. 'for' → logprob: -11.753713607788086
    5. '                   ' → logprob: -12.253713607788086
    6. '                                   ' → logprob: -14.003713607788086
    7. '```' → logprob: -14.003713607788086
    8. '#' → logprob: -14.253713607788086
    9. '                      ' → logprob: -14.253713607788086
    10. '                        ' → logprob: -14.378713607788086

Token 2759: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.014651489444077015
    2. '                               ' → logprob: -4.514651298522949
    3. '                           ' → logprob: -5.889651298522949
    4. '                       ' → logprob: -7.639651298522949
    5. ' for' → logprob: -8.13965129852295
    6. '#' → logprob: -11.13965129852295
    7. '                                   ' → logprob: -11.63965129852295
    8. '                   ' → logprob: -11.88965129852295
    9. '                            ' → logprob: -12.38965129852295
    10. '           ' → logprob: -12.51465129852295

Token 2760: ' lf' (ID: 131463)
  Prédit: 'lf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lf' → logprob: -1.9361264946837764e-07
    2. ' lf' → logprob: -16.0
    3. 'l' → logprob: -21.875
    4. 'Lf' → logprob: -22.5
    5. 'lef' → logprob: -23.375
    6. '```' → logprob: -23.375
    7. '           ' → logprob: -23.5
    8. 'lt' → logprob: -23.625
    9. 'laf' → logprob: -23.75
    10. 'rf' → logprob: -24.125

Token 2761: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.47457069158554077
    2. 'in' → logprob: -0.9745706915855408
    3. '                           ' → logprob: -7.7245707511901855
    4. '                               ' → logprob: -10.599570274353027
    5. ',' → logprob: -12.349570274353027
    6. '                          ' → logprob: -12.474570274353027
    7. '                       ' → logprob: -12.599570274353027
    8. '                            ' → logprob: -12.724570274353027
    9. 'for' → logprob: -13.099570274353027
    10. '                             ' → logprob: -13.099570274353027

Token 2762: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -6.670925358776003e-05
    2. 'lf' → logprob: -10.750066757202148
    3. ' dfs' → logprob: -10.875066757202148
    4. '           ' → logprob: -12.000066757202148
    5. 'dfa' → logprob: -12.500066757202148
    6. 'df' → logprob: -12.625066757202148
    7. '                   ' → logprob: -12.750066757202148
    8. '               ' → logprob: -12.875066757202148
    9. '                       ' → logprob: -13.500066757202148
    10. '       ' → logprob: -14.000066757202148

Token 2763: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.00023846338444855064
    2. 'l' → logprob: -8.500238418579102
    3. '(lb' → logprob: -10.875238418579102
    4. '(' → logprob: -12.125238418579102
    5. '(rb' → logprob: -12.750238418579102
    6. 'rb' → logprob: -13.125238418579102
    7. 'lb' → logprob: -13.250238418579102
    8. '```' → logprob: -13.875238418579102
    9. 'bits' → logprob: -14.500238418579102
    10. '(r' → logprob: -14.500238418579102

Token 2764: 'bits' (ID: 24043)
  Prédit: 'bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -8.97155623533763e-05
    2. 'l' → logprob: -10.250089645385742
    3. '(bits' → logprob: -11.250089645385742
    4. 'its' → logprob: -11.500089645385742
    5. '(l' → logprob: -11.625089645385742
    6. 'b' → logprob: -11.750089645385742
    7. 'r' → logprob: -13.000089645385742
    8. 'rb' → logprob: -13.250089645385742
    9. '(r' → logprob: -13.500089645385742
    10. 'Bits' → logprob: -13.625089645385742

Token 2765: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.117189921438694
    2. '                           ' → logprob: -2.742189884185791
    3. '):' → logprob: -3.117189884185791
    4. '                               ' → logprob: -6.992189884185791
    5. '):
' → logprob: -7.367189884185791
    6. ''):
' → logprob: -8.99219036102295
    7. '                       ' → logprob: -9.86719036102295
    8. ')' → logprob: -10.24219036102295
    9. '):

' → logprob: -10.86719036102295
    10. '           ' → logprob: -11.11719036102295

Token 2766: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.22360257804393768
    2. '                               ' → logprob: -1.723602533340454
    3. 'for' → logprob: -3.848602533340454
    4. '                                   ' → logprob: -8.098602294921875
    5. ' for' → logprob: -9.348602294921875
    6. '   ' → logprob: -9.598602294921875
    7. '                             ' → logprob: -10.098602294921875
    8. '                       ' → logprob: -10.098602294921875
    9. '```' → logprob: -10.973602294921875
    10. '                                       ' → logprob: -11.473602294921875

Token 2767: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.009323452599346638
    2. '                               ' → logprob: -4.759323596954346
    3. ' for' → logprob: -7.634323596954346
    4. '                                   ' → logprob: -8.759323120117188
    5. '                           ' → logprob: -10.634323120117188
    6. '   ' → logprob: -11.759323120117188
    7. ' ' → logprob: -12.009323120117188
    8. '                                ' → logprob: -12.009323120117188
    9. '                                       ' → logprob: -12.009323120117188
    10. '                                 ' → logprob: -12.509323120117188

Token 2768: ' rf' (ID: 76208)
  Prédit: 'rf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rf' → logprob: -0.0005530327325686812
    2. ' rf' → logprob: -7.500553131103516
    3. '.rf' → logprob: -17.250553131103516
    4. '_rf' → logprob: -19.750553131103516
    5. '                               ' → logprob: -20.500553131103516
    6. 'r' → logprob: -21.250553131103516
    7. '               ' → logprob: -21.500553131103516
    8. '                   ' → logprob: -21.625553131103516
    9. '                           ' → logprob: -21.625553131103516
    10. 'RF' → logprob: -21.750553131103516

Token 2769: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5624053478240967
    2. 'in' → logprob: -1.0624053478240967
    3. '(r' → logprob: -3.4374053478240967
    4. 'dfs' → logprob: -4.312405586242676
    5. 'd' → logprob: -4.562405586242676
    6. '(d' → logprob: -4.812405586242676
    7. '(l' → logprob: -5.812405586242676
    8. '[r' → logprob: -5.937405586242676
    9. '[' → logprob: -5.937405586242676
    10. ')' → logprob: -6.312405586242676

Token 2770: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.00020568605395965278
    2. ' dfs' → logprob: -8.500205993652344
    3. 'df' → logprob: -14.125205993652344
    4. '   ' → logprob: -15.000205993652344
    5. 'dfa' → logprob: -15.625205993652344
    6. '(d' → logprob: -15.750205993652344
    7. ' ' → logprob: -15.750205993652344
    8. 'd' → logprob: -15.875205993652344
    9. 'dx' → logprob: -16.875205993652344
    10. '       ' → logprob: -16.875205993652344

Token 2771: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.2521964907646179
    2. '(rb' → logprob: -1.5021965503692627
    3. 'rb' → logprob: -8.252196311950684
    4. '```' → logprob: -12.627196311950684
    5. '(x' → logprob: -14.002196311950684
    6. '(rgb' → logprob: -14.002196311950684
    7. '   ' → logprob: -15.002196311950684
    8. '(' → logprob: -15.127196311950684
    9. '1' → logprob: -16.127197265625
    10. '0' → logprob: -16.252197265625

Token 2772: 'bits' (ID: 24043)
  Prédit: 'bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.0009575550211593509
    2. 'rb' → logprob: -7.000957489013672
    3. 'b' → logprob: -11.000957489013672
    4. '(r' → logprob: -11.625957489013672
    5. '(bits' → logprob: -11.750957489013672
    6. '(rb' → logprob: -12.750957489013672
    7. '_bits' → logprob: -13.250957489013672
    8. 'r' → logprob: -13.500957489013672
    9. 'cb' → logprob: -13.875957489013672
    10. ' rb' → logprob: -14.125957489013672

Token 2773: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6877143383026123
    2. '                               ' → logprob: -1.0627143383026123
    3. ')' → logprob: -3.3127143383026123
    4. ''):
' → logprob: -3.3127143383026123
    5. '):' → logprob: -3.6877143383026123
    6. '<|end|>' → logprob: -4.437714576721191
    7. ':' → logprob: -4.687714576721191
    8. ':
' → logprob: -4.812714576721191
    9. '                           ' → logprob: -4.937714576721191
    10. '():
' → logprob: -6.062714576721191

Token 2774: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.0016311476938426495
    2. '                                   ' → logprob: -7.501631259918213
    3. '                           ' → logprob: -7.751631259918213
    4. '```' → logprob: -8.501630783081055
    5. '                                       ' → logprob: -10.001630783081055
    6. '                             ' → logprob: -10.251630783081055
    7. '   ' → logprob: -10.501630783081055
    8. ''' → logprob: -10.501630783081055
    9. '(' → logprob: -10.501630783081055
    10. '                              ' → logprob: -10.626630783081055

Token 2775: ' a' (ID: 261)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.07541898638010025
    2. '                               ' → logprob: -3.7004189491271973
    3. ''a' → logprob: -4.450418949127197
    4. '                                   ' → logprob: -4.450418949127197
    5. 'a' (adapté à ' a') → logprob: -5.575418949127197
    6. '(' → logprob: -5.575418949127197
    7. ''s' → logprob: -5.825418949127197
    8. '"' → logprob: -6.325418949127197
    9. '`' → logprob: -6.450418949127197
    10. 'f' → logprob: -6.825418949127197

Token 2776: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005998577689751983
    2. 'a' → logprob: -8.25059986114502
    3. '=' → logprob: -9.12559986114502
    4. ',a' → logprob: -9.37559986114502
    5. ',b' → logprob: -10.12559986114502
    6. ' ,' → logprob: -10.25059986114502
    7. '<|end|>' → logprob: -10.62559986114502
    8. ' =' → logprob: -11.37559986114502
    9. ',c' → logprob: -11.87559986114502
    10. '',' → logprob: -12.12559986114502

Token 2777: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.008277907967567444
    2. ''' → logprob: -5.008277893066406
    3. ' b' → logprob: -6.508277893066406
    4. ''b' → logprob: -9.758277893066406
    5. ' '' → logprob: -12.258277893066406
    6. '`' → logprob: -12.633277893066406
    7. '"' → logprob: -13.508277893066406
    8. ''s' → logprob: -13.883277893066406
    9. ' ' → logprob: -14.383277893066406
    10. ' 
' → logprob: -15.258277893066406

Token 2778: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011051355861127377
    2. ' =' → logprob: -4.511051177978516
    3. ',' → logprob: -13.511051177978516
    4. '                               ' → logprob: -14.011051177978516
    5. ')' → logprob: -14.386051177978516
    6. '```' → logprob: -14.886051177978516
    7. '<|end|>' → logprob: -15.136051177978516
    8. ')=' → logprob: -16.886051177978516
    9. '                                   ' → logprob: -17.511051177978516
    10. ' ' → logprob: -17.761051177978516

Token 2779: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -1.8908587662735954e-05
    2. ' sorted' → logprob: -11.000019073486328
    3. '(sorted' → logprob: -13.125019073486328
    4. '                           ' → logprob: -16.750019073486328
    5. '.sorted' → logprob: -17.375019073486328
    6. '[' → logprob: -18.250019073486328
    7. '                               ' → logprob: -18.500019073486328
    8. '                       ' → logprob: -18.875019073486328
    9. '   ' → logprob: -19.000019073486328
    10. '_sorted' → logprob: -19.875019073486328

Token 2780: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.07899080216884613
    2. '[' → logprob: -2.5789906978607178
    3. '[l' → logprob: -9.328990936279297
    4. '(l' → logprob: -11.328990936279297
    5. '{' → logprob: -16.578990936279297
    6. '   ' → logprob: -16.828990936279297
    7. '```' → logprob: -17.578990936279297
    8. ' [' → logprob: -17.703990936279297
    9. '       ' → logprob: -18.203990936279297
    10. '[
' → logprob: -18.453990936279297

Token 2781: 'lf' (ID: 12632)
  Prédit: 'lf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lf' → logprob: -3.643152740551159e-05
    2. '[' → logprob: -10.250036239624023
    3. ' lf' → logprob: -14.000036239624023
    4. '   ' → logprob: -16.500036239624023
    5. ' ' → logprob: -18.750036239624023
    6. 'rf' → logprob: -18.875036239624023
    7. '[l' → logprob: -19.625036239624023
    8. '           ' → logprob: -19.750036239624023
    9. '     ' → logprob: -19.875036239624023
    10. '       ' → logprob: -20.000036239624023

Token 2782: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.027225754223764e-05
    2. ',r' → logprob: -10.000060081481934
    3. ' ,' → logprob: -12.000060081481934
    4. '                               ' → logprob: -12.125060081481934
    5. '<|end|>' → logprob: -14.375060081481934
    6. ',
' → logprob: -14.625060081481934
    7. ',s' → logprob: -15.125060081481934
    8. '',' → logprob: -15.250060081481934
    9. '_,' → logprob: -15.500060081481934
    10. '[' → logprob: -15.625060081481934

Token 2783: ' rf' (ID: 76208)
  Prédit: 'rf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rf' → logprob: -0.00020401719666551799
    2. ' rf' → logprob: -8.500204086303711
    3. '.rf' → logprob: -16.00020408630371
    4. '_rf' → logprob: -16.25020408630371
    5. '                               ' → logprob: -16.37520408630371
    6. '   ' → logprob: -17.87520408630371
    7. '                                ' → logprob: -18.00020408630371
    8. '                                                                ' → logprob: -18.37520408630371
    9. '                           ' → logprob: -18.50020408630371
    10. '                                       ' → logprob: -18.62520408630371

Token 2784: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.5389821529388428
    2. '])
' → logprob: -0.9139821529388428
    3. '                               ' → logprob: -4.163982391357422
    4. '                           ' → logprob: -9.163982391357422
    5. '                       ' → logprob: -11.288982391357422
    6. '])
' → logprob: -11.413982391357422
    7. ']);' → logprob: -11.913982391357422
    8. '       ' → logprob: -12.413982391357422
    9. ''])' → logprob: -12.413982391357422
    10. '                                   ' → logprob: -12.538982391357422

Token 2785: '                               ' (ID: 2419)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.1510889530181885
    2. '                               ' → logprob: -1.1510889530181885
    3. '(c' → logprob: -1.6510889530181885
    4. '                                   ' → logprob: -1.9010889530181885
    5. '                                       ' → logprob: -5.026088714599609
    6. '')' → logprob: -5.026088714599609
    7. ''(' → logprob: -5.276088714599609
    8. '(' → logprob: -5.901088714599609
    9. 'c' → logprob: -6.776088714599609
    10. '(
' → logprob: -7.151088714599609

Token 2786: ' cand' (ID: 31771)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.153601735830307
    2. 'cand' (adapté à ' cand') → logprob: -2.52860164642334
    3. ''^' → logprob: -2.90360164642334
    4. ''(' → logprob: -5.77860164642334
    5. '')' → logprob: -6.77860164642334
    6. ' '('' → logprob: -7.27860164642334
    7. '                                   ' → logprob: -7.65360164642334
    8. '                               ' → logprob: -7.77860164642334
    9. 'c' → logprob: -8.02860164642334
    10. '                                       ' → logprob: -8.40360164642334

Token 2787: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31327852606773376
    2. ' =' → logprob: -1.3132785558700562
    3. '                               ' → logprob: -11.813278198242188
    4. '                                   ' → logprob: -12.563278198242188
    5. '='' → logprob: -12.688278198242188
    6. '                                       ' → logprob: -14.938278198242188
    7. ')' → logprob: -14.938278198242188
    8. '=c' → logprob: -15.063278198242188
    9. ''' → logprob: -15.688278198242188
    10. '                                ' → logprob: -16.063278198242188

Token 2788: ' '('' (ID: 87284)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -5.550411151489243e-05
    2. ' '('' → logprob: -9.875055313110352
    3. ''(' → logprob: -13.625055313110352
    4. '"' → logprob: -13.875055313110352
    5. '           ' → logprob: -14.500055313110352
    6. 'f' → logprob: -15.125055313110352
    7. '       ' → logprob: -15.125055313110352
    8. '   ' → logprob: -15.375055313110352
    9. ' ' → logprob: -15.750055313110352
    10. ''a' → logprob: -16.00005531311035

Token 2789: ' +' (ID: 659)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1472419600977446e-06
    2. ' a' → logprob: -13.875000953674316
    3. '+' → logprob: -16.375001907348633
    4. ''a' → logprob: -17.000001907348633
    5. '+a' → logprob: -17.750001907348633
    6. ' +' → logprob: -19.000001907348633
    7. '                               ' → logprob: -19.125001907348633
    8. '```' → logprob: -20.000001907348633
    9. '(a' → logprob: -20.625001907348633
    10. '[a' → logprob: -20.625001907348633

Token 2790: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -4.842555426876061e-06
    2. ' a' → logprob: -12.250004768371582
    3. ''a' → logprob: -17.0000057220459
    4. '"a' → logprob: -18.7500057220459
    5. '	a' → logprob: -19.3750057220459
    6. '(a' → logprob: -19.5000057220459
    7. '>a' → logprob: -20.2500057220459
    8. '#a' → logprob: -20.6250057220459
    9. '[a' → logprob: -20.8750057220459
    10. '```' → logprob: -21.1250057220459

Token 2791: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.013037985190749168
    2. ' +' → logprob: -4.638038158416748
    3. ''^' → logprob: -6.263038158416748
    4. '+'' → logprob: -7.013038158416748
    5. '^' → logprob: -7.888038158416748
    6. ''' → logprob: -10.13803768157959
    7. '+
' → logprob: -11.26303768157959
    8. '+c' → logprob: -11.38803768157959
    9. ' '^' → logprob: -11.88803768157959
    10. '+')' → logprob: -12.76303768157959

Token 2792: ' '^' (ID: 117788)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.06218177080154419
    2. ''^' → logprob: -2.8121817111968994
    3. ''' → logprob: -9.06218147277832
    4. '^' → logprob: -10.18718147277832
    5. ''b' → logprob: -10.31218147277832
    6. ' '^' → logprob: -11.43718147277832
    7. 'rf' → logprob: -12.31218147277832
    8. ' b' → logprob: -12.81218147277832
    9. '"' → logprob: -13.43718147277832
    10. '   ' → logprob: -13.43718147277832

Token 2793: ''' (ID: 6)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -2.1008713702030946e-06
    2. ' b' → logprob: -13.125001907348633
    3. '                               ' → logprob: -17.000001907348633
    4. '                                   ' → logprob: -18.000001907348633
    5. ')b' → logprob: -19.125001907348633
    6. 'rf' → logprob: -19.250001907348633
    7. '                                ' → logprob: -21.125001907348633
    8. 'bf' → logprob: -21.250001907348633
    9. '                           ' → logprob: -21.375001907348633
    10. '                                 ' → logprob: -21.375001907348633

Token 2794: ' +' (ID: 659)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.1472419600977446e-06
    2. ' b' → logprob: -13.750000953674316
    3. '+b' → logprob: -17.250001907348633
    4. '+' → logprob: -18.625001907348633
    5. 'rf' → logprob: -18.625001907348633
    6. '                               ' → logprob: -19.750001907348633
    7. ')b' → logprob: -20.125001907348633
    8. '>b' → logprob: -20.375001907348633
    9. '                                   ' → logprob: -21.000001907348633
    10. '_b' → logprob: -21.500001907348633

Token 2795: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -6.2729995988775045e-06
    2. ' b' → logprob: -12.000006675720215
    3. '                               ' → logprob: -18.1250057220459
    4. ')b' → logprob: -19.2500057220459
    5. '+b' → logprob: -21.3750057220459
    6. ''b' → logprob: -21.3750057220459
    7. '                                   ' → logprob: -21.7500057220459
    8. '	b' → logprob: -22.2500057220459
    9. 'B' → logprob: -22.2500057220459
    10. '                   ' → logprob: -22.2500057220459

Token 2796: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16628031432628632
    2. '+')' → logprob: -1.9162802696228027
    3. ' +' → logprob: -5.541280269622803
    4. '')' → logprob: -6.416280269622803
    5. ')' → logprob: -8.166280746459961
    6. '                               ' → logprob: -9.541280746459961
    7. '+)' → logprob: -9.791280746459961
    8. '+b' → logprob: -10.291280746459961
    9. '+")' → logprob: -11.416280746459961
    10. '+c' → logprob: -12.166280746459961

Token 2797: ' ')' (ID: 35910)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0001967457792488858
    2. '')' → logprob: -8.62519645690918
    3. ')' → logprob: -11.37519645690918
    4. ' b' → logprob: -12.25019645690918
    5. ')b' → logprob: -15.00019645690918
    6. '                               ' → logprob: -15.37519645690918
    7. '+')' → logprob: -16.12519645690918
    8. ''b' → logprob: -17.37519645690918
    9. '                                   ' → logprob: -17.37519645690918
    10. '+' → logprob: -17.37519645690918

Token 2798: ''
' (ID: 2207)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.3548543453216553
    2. ')'' → logprob: -1.3548543453216553
    3. ')' → logprob: -3.3548543453216553
    4. '                               ' → logprob: -5.604854583740234
    5. ''' → logprob: -6.854854583740234
    6. ')'
' → logprob: -7.104854583740234
    7. ')')
' → logprob: -9.229854583740234
    8. '}')' → logprob: -9.604854583740234
    9. '')
' → logprob: -9.979854583740234
    10. '')"' → logprob: -11.104854583740234

Token 2799: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.6660382151603699
    2. ')' → logprob: -1.4160382747650146
    3. '')' → logprob: -1.4160382747650146
    4. '       ' → logprob: -8.166038513183594
    5. '                           ' → logprob: -8.916038513183594
    6. ')
' → logprob: -9.916038513183594
    7. '                                   ' → logprob: -10.041038513183594
    8. ')'' → logprob: -10.166038513183594
    9. '}')' → logprob: -10.291038513183594
    10. '')
' → logprob: -10.291038513183594

Token 2800: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.0004665385349653661
    2. '                               ' → logprob: -8.000466346740723
    3. ')' → logprob: -10.125466346740723
    4. ' results' → logprob: -10.625466346740723
    5. 'c' → logprob: -11.125466346740723
    6. ')
' → logprob: -11.250466346740723
    7. '                                   ' → logprob: -11.750466346740723
    8. 'cand' → logprob: -11.750466346740723
    9. '.results' → logprob: -12.250466346740723
    10. '(results' → logprob: -12.375466346740723

Token 2801: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0016785101033747196
    2. '.' → logprob: -6.501678466796875
    3. '                               ' → logprob: -9.001678466796875
    4. 'add' → logprob: -11.001678466796875
    5. '                                   ' → logprob: -11.126678466796875
    6. '.setdefault' → logprob: -12.251678466796875
    7. '.append' → logprob: -12.626678466796875
    8. '                           ' → logprob: -12.876678466796875
    9. '.update' → logprob: -12.876678466796875
    10. ').' → logprob: -12.876678466796875

Token 2802: '(c' (ID: 2410)
  Prédit: 'cand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cand' → logprob: -0.0026362957432866096
    2. '(c' → logprob: -6.002636432647705
    3. 'c' → logprob: -8.752635955810547
    4. ' cand' → logprob: -13.127635955810547
    5. '                               ' → logprob: -15.627635955810547
    6. 'cant' → logprob: -16.127635955810547
    7. '                                       ' → logprob: -16.377635955810547
    8. '                                   ' → logprob: -16.752635955810547
    9. ')c' → logprob: -17.252635955810547
    10. 'cad' → logprob: -17.627635955810547

Token 2803: 'and' (ID: 427)
  Prédit: 'and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.011926020495593548
    2. '(a' → logprob: -5.011926174163818
    3. 'a' → logprob: -5.636926174163818
    4. 'cand' → logprob: -6.886926174163818
    5. '(c' → logprob: -8.76192569732666
    6. ''' → logprob: -9.01192569732666
    7. 'at' → logprob: -9.26192569732666
    8. '(' → logprob: -9.76192569732666
    9. '[a' → logprob: -10.01192569732666
    10. ')' → logprob: -10.76192569732666

Token 2804: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015197417233139277
    2. '                               ' → logprob: -7.376519680023193
    3. '<|end|>' → logprob: -7.376519680023193
    4. '')' → logprob: -9.251520156860352
    5. ')}' → logprob: -10.251520156860352
    6. ')return' → logprob: -10.626520156860352
    7. '                           ' → logprob: -10.876520156860352
    8. '<|end|>' → logprob: -11.001520156860352
    9. '       ' → logprob: -11.376520156860352
    10. ')}}' → logprob: -11.626520156860352

Token 2805: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06581790000200272
    2. '       ' → logprob: -3.0658178329467773
    3. '                               ' → logprob: -4.440817832946777
    4. '               ' → logprob: -5.440817832946777
    5. '                   ' → logprob: -7.690817832946777
    6. '                                   ' → logprob: -8.940817832946777
    7. '                           ' → logprob: -9.690817832946777
    8. '                       ' → logprob: -9.940817832946777
    9. '
' → logprob: -9.940817832946777
    10. '                                           ' → logprob: -10.190817832946777

Token 2806: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002715873415581882
    2. '       ' → logprob: -8.875271797180176
    3. 'return' → logprob: -9.125271797180176
    4. '               ' → logprob: -11.000271797180176
    5. '                   ' → logprob: -13.750271797180176
    6. '   ' → logprob: -13.750271797180176
    7. 'if' → logprob: -14.000271797180176
    8. '
' → logprob: -14.250271797180176
    9. ' return' → logprob: -14.250271797180176
    10. '            
' → logprob: -14.625271797180176

Token 2807: ' Also' (ID: 8820)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5474820733070374
    2. 'if' → logprob: -1.2974820137023926
    3. '#' → logprob: -1.9224820137023926
    4. '           ' → logprob: -7.047482013702393
    5. '       ' → logprob: -7.922482013702393
    6. 'results' → logprob: -8.17248249053955
    7. 'minimal' → logprob: -8.92248249053955
    8. ' min' → logprob: -9.17248249053955
    9. ' if' → logprob: -9.17248249053955
    10. '
' → logprob: -9.92248249053955

Token 2808: ' try' (ID: 2075)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9974674582481384
    2. '#' → logprob: -1.7474675178527832
    3. 'if' → logprob: -1.8724675178527832
    4. '
' → logprob: -1.9974675178527832
    5. '       ' → logprob: -2.622467517852783
    6. '   ' → logprob: -2.997467517852783
    7. 'keep' → logprob: -4.497467517852783
    8. 'min' → logprob: -4.747467517852783
    9. 'filter' → logprob: -5.122467517852783
    10. ' if' → logprob: -5.122467517852783

Token 2809: ' not' (ID: 625)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.564357578754425
    2. '           ' → logprob: -2.1893575191497803
    3. 'results' → logprob: -2.4393575191497803
    4. '       ' → logprob: -2.6893575191497803
    5. '#' → logprob: -3.3143575191497803
    6. 'Not' → logprob: -3.6893575191497803
    7. 'Const' → logprob: -3.6893575191497803
    8. 'for' → logprob: -3.9393575191497803
    9. 'const' → logprob: -4.564357757568359
    10. 'neg' → logprob: -4.689357757568359

Token 2810: ' to' (ID: 316)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.6462962031364441
    2. ' results' → logprob: -1.3962962627410889
    3. '           ' → logprob: -2.646296262741089
    4. '_results' → logprob: -2.771296262741089
    5. 'self' → logprob: -3.271296262741089
    6. '       ' → logprob: -4.27129602432251
    7. '               ' → logprob: -5.14629602432251
    8. ' self' → logprob: -5.27129602432251
    9. ' #' → logprob: -6.14629602432251
    10. 'for' → logprob: -6.14629602432251

Token 2811: ' forget' (ID: 13814)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.9485028982162476
    2. 'results' → logprob: -1.0735028982162476
    3. 'self' → logprob: -3.198503017425537
    4. 'not' → logprob: -3.448503017425537
    5. 'discard' → logprob: -3.698503017425537
    6. 'return' → logprob: -3.823503017425537
    7. 'forget' → logprob: -3.948503017425537
    8. 'if' → logprob: -4.323503017425537
    9. 'skip' → logprob: -4.448503017425537
    10. '(results' → logprob: -4.448503017425537

Token 2812: ' look' (ID: 1631)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1307635307312012
    2. 'self' → logprob: -1.8807635307312012
    3. 'if' → logprob: -2.130763530731201
    4. '#' → logprob: -2.130763530731201
    5. 'results' → logprob: -2.130763530731201
    6. '       ' → logprob: -2.380763530731201
    7. 'return' → logprob: -3.005763530731201
    8. 'for' → logprob: -4.630763530731201
    9. 'the' → logprob: -5.505763530731201
    10. 'to' → logprob: -5.755763530731201

Token 2813: ' up' (ID: 869)
  Prédit: 'up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'up' → logprob: -0.45199695229530334
    2. '           ' → logprob: -1.201996922492981
    3. 'ups' → logprob: -2.9519970417022705
    4. '       ' → logprob: -5.076996803283691
    5. '
' → logprob: -6.826996803283691
    6. '               ' → logprob: -7.451996803283691
    7. 'like' → logprob: -7.576996803283691
    8. 'at' → logprob: -7.576996803283691
    9. '          ' → logprob: -8.076996803283691
    10. 'for' → logprob: -8.076996803283691

Token 2814: ' primitives' (ID: 174906)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.5922505259513855
    2. '           ' → logprob: -1.8422505855560303
    3. 'if' → logprob: -2.2172505855560303
    4. 'self' → logprob: -2.5922505855560303
    5. '       ' → logprob: -2.8422505855560303
    6. 'in' → logprob: -4.467250347137451
    7. ' bits' → logprob: -4.592250347137451
    8. 'for' → logprob: -4.842250347137451
    9. ' if' → logprob: -5.092250347137451
    10. '(bits' → logprob: -6.092250347137451

Token 2815: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07313338667154312
    2. '       ' → logprob: -2.9481334686279297
    3. ' if' → logprob: -4.69813346862793
    4. 'if' → logprob: -5.57313346862793
    5. ',' → logprob: -6.82313346862793
    6. ' and' → logprob: -6.94813346862793
    7. 'for' → logprob: -7.07313346862793
    8. ' for' → logprob: -7.82313346862793
    9. '.' → logprob: -7.94813346862793
    10. '               ' → logprob: -8.19813346862793

Token 2816: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.033034611493349075
    2. '       ' → logprob: -3.533034563064575
    3. 'if' → logprob: -6.033034801483154
    4. ' if' → logprob: -7.533034801483154
    5. 'return' → logprob: -8.658034324645996
    6. '               ' → logprob: -9.408034324645996
    7. ',' → logprob: -10.658034324645996
    8. '```' → logprob: -10.908034324645996
    9. '   ' → logprob: -11.033034324645996
    10. '
' → logprob: -11.533034324645996

Token 2817: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1307508945465088
    2. 'if' (adapté à ' if') → logprob: -2.255750894546509
    3. '       ' → logprob: -4.75575065612793
    4. 'return' → logprob: -5.38075065612793
    5. 'pr' → logprob: -6.13075065612793
    6. ' if' → logprob: -7.00575065612793
    7. 'forms' → logprob: -7.50575065612793
    8. 'for' → logprob: -8.00575065612793
    9. 'results' → logprob: -8.00575065612793
    10. '   ' → logprob: -9.75575065612793

Token 2818: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.000555416801944375
    2. ' bits' → logprob: -7.500555515289307
    3. '   ' → logprob: -13.875555038452148
    4. 'results' → logprob: -14.750555038452148
    5. '(bits' → logprob: -15.000555038452148
    6. 'bytes' → logprob: -15.250555038452148
    7. '       ' → logprob: -15.375555038452148
    8. 'bit' → logprob: -16.62555503845215
    9. '           ' → logprob: -17.12555503845215
    10. 'b' → logprob: -17.12555503845215

Token 2819: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.048898570239543915
    2. 'in' → logprob: -3.048898458480835
    3. ' not' → logprob: -8.173898696899414
    4. '	in' → logprob: -11.423898696899414
    5. 'not' → logprob: -11.798898696899414
    6. '   ' → logprob: -12.548898696899414
    7. ' ' → logprob: -13.298898696899414
    8. '_in' → logprob: -13.673898696899414
    9. ')' → logprob: -13.923898696899414
    10. '           ' → logprob: -14.048898696899414

Token 2820: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.2524021157296374e-05
    2. ' self' → logprob: -10.250052452087402
    3. '           ' → logprob: -11.000052452087402
    4. '               ' → logprob: -15.750052452087402
    5. '(self' → logprob: -16.00005340576172
    6. '[self' → logprob: -16.75005340576172
    7. '       ' → logprob: -17.12505340576172
    8. '
' → logprob: -17.37505340576172
    9. '```' → logprob: -17.75005340576172
    10. '                   ' → logprob: -18.50005340576172

Token 2821: '.cache' (ID: 37175)
  Prédit: '.cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cache' → logprob: -0.0019300628919154406
    2. 'cache' → logprob: -6.251930236816406
    3. '.' → logprob: -15.126930236816406
    4. '       ' → logprob: -15.126930236816406
    5. '	cache' → logprob: -15.251930236816406
    6. ' cache' → logprob: -15.376930236816406
    7. '_cache' → logprob: -15.751930236816406
    8. ' .' → logprob: -16.126930236816406
    9. '   ' → logprob: -16.376930236816406
    10. 'CACHE' → logprob: -16.376930236816406

Token 2822: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3728238046169281
    2. ':
' → logprob: -1.3728238344192505
    3. '               ' → logprob: -3.747823715209961
    4. '           ' → logprob: -3.747823715209961
    5. ' and' → logprob: -5.122823715209961
    6. '.keys' → logprob: -6.747823715209961
    7. '.' → logprob: -6.747823715209961
    8. ':return' → logprob: -7.122823715209961
    9. 'and' → logprob: -7.622823715209961
    10. '{
' → logprob: -8.372823715209961

Token 2823: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0048840963281691074
    2. '           ' → logprob: -5.879884243011475
    3. 'return' → logprob: -6.629884243011475
    4. ':
' → logprob: -7.504884243011475
    5. ':' → logprob: -9.129883766174316
    6. ':return' → logprob: -10.129883766174316
    7. '```' → logprob: -10.504883766174316
    8. ' return' → logprob: -10.879883766174316
    9. '       ' → logprob: -12.879883766174316
    10. '   ' → logprob: -13.504883766174316

Token 2824: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.03913238272070885
    2. '               ' → logprob: -3.2891323566436768
    3. ' results' → logprob: -7.664132595062256
    4. '       ' → logprob: -8.414132118225098
    5. '   ' → logprob: -8.789132118225098
    6. '           ' → logprob: -9.414132118225098
    7. 'forms' → logprob: -9.539132118225098
    8. '                   ' → logprob: -10.289132118225098
    9. 'return' → logprob: -11.039132118225098
    10. '	results' → logprob: -11.664132118225098

Token 2825: '.update' (ID: 8689)
  Prédit: '.update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.update' → logprob: -0.03485168516635895
    2. '.' → logprob: -3.7848517894744873
    3. '               ' → logprob: -4.909851551055908
    4. '|' → logprob: -6.659851551055908
    5. '           ' → logprob: -6.909851551055908
    6. ' |=' → logprob: -7.034851551055908
    7. ' =' → logprob: -8.034852027893066
    8. '.union' → logprob: -8.534852027893066
    9. '                   ' → logprob: -8.784852027893066
    10. '=' → logprob: -9.159852027893066

Token 2826: '(self' (ID: 2402)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.885492621222511e-05
    2. '{' → logprob: -10.250068664550781
    3. '(self' → logprob: -10.875068664550781
    4. '{x' → logprob: -11.875068664550781
    5. ' self' → logprob: -12.000068664550781
    6. '           ' → logprob: -14.375068664550781
    7. '{
' → logprob: -14.500068664550781
    8. '               ' → logprob: -15.375068664550781
    9. '[self' → logprob: -16.62506866455078
    10. 'x' → logprob: -16.87506866455078

Token 2827: '.cache' (ID: 37175)
  Prédit: '.cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cache' → logprob: -5.1689596148207784e-05
    2. 'cache' → logprob: -9.875051498413086
    3. '.cached' → logprob: -16.375051498413086
    4. '	cache' → logprob: -16.750051498413086
    5. 'CACHE' → logprob: -18.500051498413086
    6. '.' → logprob: -18.625051498413086
    7. '.c' → logprob: -18.625051498413086
    8. ' cache' → logprob: -18.750051498413086
    9. ' .' → logprob: -19.375051498413086
    10. '_cache' → logprob: -19.500051498413086

Token 2828: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.4849443838757e-06
    2. 'bits' → logprob: -12.375004768371582
    3. '[
' → logprob: -16.625003814697266
    4. ')[' → logprob: -17.250003814697266
    5. '   ' → logprob: -17.500003814697266
    6. '[b' → logprob: -17.750003814697266
    7. ')' → logprob: -18.500003814697266
    8. '.get' → logprob: -18.875003814697266
    9. '(bits' → logprob: -18.875003814697266
    10. '
' → logprob: -19.000003814697266

Token 2829: 'bits' (ID: 24043)
  Prédit: 'bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.0019298245897516608
    2. '[' → logprob: -6.251929759979248
    3. ' bits' → logprob: -14.251930236816406
    4. '(bits' → logprob: -15.501930236816406
    5. '{' → logprob: -16.001930236816406
    6. '   ' → logprob: -16.501930236816406
    7. '.bits' → logprob: -16.876930236816406
    8. '           ' → logprob: -17.376930236816406
    9. '[b' → logprob: -17.626930236816406
    10. '       ' → logprob: -17.876930236816406

Token 2830: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.010488691739737988
    2. '])
' → logprob: -5.010488510131836
    3. '           ' → logprob: -6.135488510131836
    4. '[' → logprob: -6.760488510131836
    5. '       ' → logprob: -8.135488510131836
    6. '               ' → logprob: -9.510488510131836
    7. '])

' → logprob: -11.010488510131836
    8. '[b' → logprob: -11.385488510131836
    9. '])
' → logprob: -11.760488510131836
    10. ')' → logprob: -11.885488510131836

Token 2831: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10844217985868454
    2. '
' → logprob: -2.3584420680999756
    3. '       ' → logprob: -4.983442306518555
    4. 'return' → logprob: -7.108442306518555
    5. '            
' → logprob: -8.733442306518555
    6. '        
' → logprob: -9.108442306518555
    7. '```' → logprob: -9.108442306518555
    8. '    
' → logprob: -10.233442306518555
    9. '               ' → logprob: -10.233442306518555
    10. '  
' → logprob: -10.733442306518555

Token 2832: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4697684645652771
    2. '       ' → logprob: -1.3447685241699219
    3. 'min' → logprob: -2.594768524169922
    4. 'if' → logprob: -3.594768524169922
    5. 'return' → logprob: -4.594768524169922
    6. '
' → logprob: -6.969768524169922
    7. ' if' → logprob: -7.594768524169922
    8. '   ' → logprob: -8.344768524169922
    9. ' min' → logprob: -8.719768524169922
    10. 'length' → logprob: -9.594768524169922

Token 2833: ' Choose' (ID: 25151)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.7006229162216187
    2. 'if' → logprob: -0.8256229162216187
    3. '       ' → logprob: -3.325623035430908
    4. '#' → logprob: -4.075623035430908
    5. 'return' → logprob: -4.950623035430908
    6. '           ' → logprob: -6.200623035430908
    7. '
' → logprob: -6.825623035430908
    8. ' if' → logprob: -7.200623035430908
    9. 'results' → logprob: -7.450623035430908
    10. ' min' → logprob: -7.825623035430908

Token 2834: ' minimal' (ID: 19957)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.2652365267276764
    2. 'minimal' → logprob: -2.0152366161346436
    3. ' minimal' → logprob: -3.6402366161346436
    4. '{' → logprob: -3.7652366161346436
    5. '{x' → logprob: -4.0152363777160645
    6. 'x' → logprob: -4.5152363777160645
    7. ' min' → logprob: -4.5152363777160645
    8. 'the' → logprob: -5.8902363777160645
    9. '   ' → logprob: -6.0152363777160645
    10. ' x' → logprob: -7.3902363777160645

Token 2835: ' length' (ID: 5517)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.6123329401016235
    2. 'length' → logprob: -0.8623329401016235
    3. '_len' → logprob: -3.362332820892334
    4. 'len' → logprob: -7.362332820892334
    5. ' length' → logprob: -8.112333297729492
    6. '_size' → logprob: -9.987333297729492
    7. '-length' → logprob: -10.987333297729492
    8. 'forms' → logprob: -11.362333297729492
    9. '   ' → logprob: -11.487333297729492
    10. 'size' → logprob: -11.737333297729492

Token 2836: ' expressions' (ID: 43578)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7377877235412598
    2. 'forms' → logprob: -1.4877877235412598
    3. ' =' → logprob: -1.6127877235412598
    4. '           ' → logprob: -2.6127877235412598
    5. 'results' → logprob: -5.11278772354126
    6. '       ' → logprob: -5.36278772354126
    7. '_forms' → logprob: -5.86278772354126
    8. 'expr' → logprob: -6.36278772354126
    9. '_length' → logprob: -6.98778772354126
    10. 'result' → logprob: -7.11278772354126

Token 2837: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03774065151810646
    2. '       ' → logprob: -4.162740707397461
    3. ' =' → logprob: -4.662740707397461
    4. '=' → logprob: -5.037740707397461
    5. 'min' → logprob: -6.412740707397461
    6. 'return' → logprob: -7.287740707397461
    7. 'length' → logprob: -7.412740707397461
    8. 'tokens' → logprob: -7.412740707397461
    9. '=min' → logprob: -7.912740707397461
    10. ',' → logprob: -8.287740707397461

Token 2838: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.32763853669166565
    2. ' =' → logprob: -2.077638626098633
    3. '       ' → logprob: -2.202638626098633
    4. '=' → logprob: -3.327638626098633
    5. '
' → logprob: -5.827638626098633
    6. 'for' → logprob: -6.952638626098633
    7. 'return' → logprob: -7.452638626098633
    8. ' forms' → logprob: -7.952638626098633
    9. 'with' → logprob: -7.952638626098633
    10. 'tokens' → logprob: -8.202638626098633

Token 2839: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7336583137512207
    2. 'min' → logprob: -0.8586583137512207
    3. 'if' (adapté à ' if') → logprob: -2.8586583137512207
    4. '           ' → logprob: -3.4836583137512207
    5. ' if' → logprob: -5.608658313751221
    6. ' min' → logprob: -6.858658313751221
    7. 'len' → logprob: -7.108658313751221
    8. 'length' → logprob: -7.233658313751221
    9. '=min' → logprob: -7.858658313751221
    10. '   ' → logprob: -7.983658313751221

Token 2840: ' not' (ID: 625)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.00045902872807346284
    2. ' results' → logprob: -8.250458717346191
    3. 'not' → logprob: -8.750458717346191
    4. 'len' → logprob: -10.375458717346191
    5. '   ' → logprob: -12.375458717346191
    6. ' not' → logprob: -12.875458717346191
    7. '       ' → logprob: -14.250458717346191
    8. '(results' → logprob: -14.625458717346191
    9. 'result' → logprob: -15.125458717346191
    10. '	results' → logprob: -16.750459671020508

Token 2841: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.001170460251159966
    2. ' results' → logprob: -6.751170635223389
    3. 'result' → logprob: -15.62617015838623
    4. '(results' → logprob: -16.501171112060547
    5. '
' → logprob: -18.501171112060547
    6. 'self' → logprob: -18.751171112060547
    7. '	results' → logprob: -19.251171112060547
    8. '_results' → logprob: -19.501171112060547
    9. '   ' → logprob: -20.626171112060547
    10. '.results' → logprob: -21.001171112060547

Token 2842: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.25311020016670227
    2. ':' → logprob: -1.5031101703643799
    3. '           ' → logprob: -6.878110408782959
    4. '       ' → logprob: -10.0031099319458
    5. '               ' → logprob: -10.5031099319458
    6. '   ' → logprob: -10.7531099319458
    7. ':return' → logprob: -10.7531099319458
    8. '.' → logprob: -11.2531099319458
    9. ':
' → logprob: -12.3781099319458
    10. '=' → logprob: -12.3781099319458

Token 2843: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03267943114042282
    2. 'return' → logprob: -3.532679319381714
    3. ' return' → logprob: -6.407679557800293
    4. '       ' → logprob: -7.032679557800293
    5. '   ' → logprob: -8.907679557800293
    6. '               ' → logprob: -9.032679557800293
    7. '{return' → logprob: -9.907679557800293
    8. '```' → logprob: -10.532679557800293
    9. '
' → logprob: -10.782679557800293
    10. '{
' → logprob: -11.532679557800293

Token 2844: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.20706096291542053
    2. '           ' → logprob: -1.7070609331130981
    3. ' return' → logprob: -5.332060813903809
    4. 'raise' → logprob: -7.332060813903809
    5. '               ' → logprob: -9.582060813903809
    6. ' raise' → logprob: -10.707060813903809
    7. '   ' → logprob: -10.832060813903809
    8. '                   ' → logprob: -10.957060813903809
    9. '       ' → logprob: -12.207060813903809
    10. '{return' → logprob: -12.207060813903809

Token 2845: ' Should' (ID: 18057)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.010916120372712612
    2. '           ' → logprob: -4.760916233062744
    3. 'raise' → logprob: -6.260916233062744
    4. ' return' → logprob: -8.510915756225586
    5. '               ' → logprob: -8.760915756225586
    6. '                   ' → logprob: -11.385915756225586
    7. '   ' → logprob: -12.385915756225586
    8. ' raise' → logprob: -12.510915756225586
    9. '       ' → logprob: -12.635915756225586
    10. '0' → logprob: -12.885915756225586

Token 2846: ' never' (ID: 3779)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.115186907351017
    2. ' raise' → logprob: -2.615186929702759
    3. 'return' → logprob: -3.615186929702759
    4. '           ' → logprob: -5.11518669128418
    5. ' return' → logprob: -6.61518669128418
    6. '               ' → logprob: -7.11518669128418
    7. '                   ' → logprob: -8.49018669128418
    8. '                ' → logprob: -8.86518669128418
    9. '
' → logprob: -9.49018669128418
    10. '   ' → logprob: -9.86518669128418

Token 2847: ' happen' (ID: 5659)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.34082457423210144
    2. 'raise' → logprob: -1.3408246040344238
    3. ' return' → logprob: -4.340824604034424
    4. ' raise' → logprob: -4.590824604034424
    5. '           ' → logprob: -6.715824604034424
    6. ' be' → logprob: -7.215824604034424
    7. 'be' → logprob: -7.590824604034424
    8. '       ' → logprob: -7.840824604034424
    9. 'None' → logprob: -8.090824127197266
    10. '
' → logprob: -8.215824127197266

Token 2848: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04490648955106735
    2. '               ' → logprob: -3.5449063777923584
    3. 'raise' → logprob: -5.1699066162109375
    4. ' raise' → logprob: -5.4199066162109375
    5. 'return' → logprob: -6.0449066162109375
    6. '                   ' → logprob: -7.5449066162109375
    7. '   ' → logprob: -7.5449066162109375
    8. ' return' → logprob: -7.5449066162109375
    9. '       ' → logprob: -8.294906616210938
    10. '\n' → logprob: -8.669906616210938

Token 2849: ' primitives' (ID: 174906)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.28831762075424194
    2. 'False' → logprob: -2.1633176803588867
    3. 'True' → logprob: -2.6633176803588867
    4. 'bits' → logprob: -3.2883176803588867
    5. 'results' → logprob: -3.9133176803588867
    6. 'len' → logprob: -5.163317680358887
    7. ' self' → logprob: -7.288317680358887
    8. 'expr' → logprob: -7.788317680358887
    9. ' False' → logprob: -7.913317680358887
    10. ' True' → logprob: -7.913317680358887

Token 2850: ' are' (ID: 553)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.840904176235199
    2. 'return' → logprob: -1.2159042358398438
    3. '               ' → logprob: -2.3409042358398438
    4. '           ' → logprob: -2.4659042358398438
    5. ':' → logprob: -2.8409042358398438
    6. ' return' → logprob: -4.090904235839844
    7. ':return' → logprob: -4.965904235839844
    8. 'continue' → logprob: -5.715904235839844
    9. 'raise' → logprob: -6.590904235839844
    10. ' or' → logprob: -7.590904235839844

Token 2851: ' included' (ID: 7360)
  Prédit: 'present'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'present' → logprob: -0.5818365216255188
    2. 'covered' → logprob: -1.456836462020874
    3. 'correct' → logprob: -2.206836462020874
    4. 'found' → logprob: -3.706836462020874
    5. 'filled' → logprob: -4.456836700439453
    6. 'available' → logprob: -4.581836700439453
    7. 'handled' → logprob: -4.706836700439453
    8. 'complete' → logprob: -4.831836700439453
    9. 'provided' → logprob: -5.206836700439453
    10. 'defined' → logprob: -5.331836700439453

Token 2852: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0642235279083252
    2. '               ' → logprob: -3.064223527908325
    3. 'return' → logprob: -4.689223289489746
    4. ' return' → logprob: -5.814223289489746
    5. '
' → logprob: -6.939223289489746
    6. ' raise' → logprob: -7.064223289489746
    7. 'raise' → logprob: -7.564223289489746
    8. '       ' → logprob: -7.939223289489746
    9. '```' → logprob: -8.564223289489746
    10. ',' → logprob: -9.064223289489746

Token 2853: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.044112369418144226
    2. '               ' → logprob: -3.16911244392395
    3. 'return' → logprob: -7.294112205505371
    4. '   ' → logprob: -8.544112205505371
    5. 'raise' → logprob: -9.044112205505371
    6. '       ' → logprob: -10.169112205505371
    7. '                   ' → logprob: -10.544112205505371
    8. ' return' → logprob: -10.794112205505371
    9. ' raise' → logprob: -11.169112205505371
    10. '
' → logprob: -11.669112205505371

Token 2854: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.6344269514083862
    2. 'raise' → logprob: -0.8844269514083862
    3. '                   ' → logprob: -3.384427070617676
    4. '               ' → logprob: -4.384427070617676
    5. '           ' → logprob: -4.759427070617676
    6. ' raise' → logprob: -7.134427070617676
    7. '0' → logprob: -7.759427070617676
    8. ' return' → logprob: -8.509427070617676
    9. '   ' → logprob: -8.759427070617676
    10. '                       ' → logprob: -9.509427070617676

Token 2855: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.018240900710225105
    2. '{' → logprob: -4.393240928649902
    3. '{}' → logprob: -5.518240928649902
    4. 'results' → logprob: -6.643240928649902
    5. 'self' → logprob: -8.643240928649902
    6. ' set' → logprob: -9.268240928649902
    7. 'forms' → logprob: -9.518240928649902
    8. 'fro' → logprob: -11.018240928649902
    9. 'form' → logprob: -11.143240928649902
    10. '{'' → logprob: -11.893240928649902

Token 2856: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.006737750489264727
    2. '()
' → logprob: -5.00673770904541
    3. '()\' → logprob: -12.13173770904541
    4. '()`' → logprob: -12.25673770904541
    5. '{' → logprob: -12.38173770904541
    6. '()
' → logprob: -13.25673770904541
    7. '())' → logprob: -13.38173770904541
    8. '()}' → logprob: -13.75673770904541
    9. '()

' → logprob: -14.13173770904541
    10. '{}' → logprob: -14.25673770904541

Token 2857: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.49241480231285095
    2. '       ' → logprob: -1.4924148321151733
    3. '
' → logprob: -1.8674148321151733
    4. '        
' → logprob: -5.617414951324463
    5. '   ' → logprob: -6.492414951324463
    6. '            
' → logprob: -6.617414951324463
    7. '    
' → logprob: -6.742414951324463
    8. 'min' → logprob: -7.742414951324463
    9. ' 
' → logprob: -8.242414474487305
    10. '  
' → logprob: -8.617414474487305

Token 2858: ' min' (ID: 1349)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.540244996547699
    2. 'min' (adapté à ' min') → logprob: -1.0402450561523438
    3. '           ' → logprob: -2.7902450561523438
    4. ' min' → logprob: -6.290245056152344
    5. '   ' → logprob: -7.540245056152344
    6. 'return' → logprob: -9.040245056152344
    7. '_min' → logprob: -10.165245056152344
    8. '[min' → logprob: -11.290245056152344
    9. 'max' → logprob: -11.540245056152344
    10. '
' → logprob: -11.665245056152344

Token 2859: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.0016487567918375134
    2. '_length' → logprob: -6.626648902893066
    3. 'len' → logprob: -8.251648902893066
    4. '(len' → logprob: -10.001648902893066
    5. 'length' → logprob: -11.251648902893066
    6. '_' → logprob: -13.876648902893066
    7. '_size' → logprob: -14.376648902893066
    8. 'Len' → logprob: -14.501648902893066
    9. '_l' → logprob: -15.501648902893066
    10. 's' → logprob: -15.626648902893066

Token 2860: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16130748391151428
    2. ' =' → logprob: -1.911307454109192
    3. '=len' → logprob: -7.411307334899902
    4. '=min' → logprob: -7.786307334899902
    5. '(len' → logprob: -10.536307334899902
    6. '           ' → logprob: -11.786307334899902
    7. '(' → logprob: -12.286307334899902
    8. 'len' → logprob: -12.411307334899902
    9. '(min' → logprob: -12.786307334899902
    10. '   ' → logprob: -13.036307334899902

Token 2861: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.00020354038861114532
    2. ' min' → logprob: -8.500203132629395
    3. '(min' → logprob: -17.25020408630371
    4. '=min' → logprob: -18.62520408630371
    5. 'max' → logprob: -18.87520408630371
    6. '[min' → logprob: -20.00020408630371
    7. '	min' → logprob: -20.00020408630371
    8. '   ' → logprob: -20.50020408630371
    9. '_min' → logprob: -20.75020408630371
    10. 'len' → logprob: -21.00020408630371

Token 2862: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.0002678920282050967
    2. 'len' → logprob: -8.25026798248291
    3. '(x' → logprob: -12.50026798248291
    4. '[len' → logprob: -12.75026798248291
    5. '=len' → logprob: -18.000267028808594
    6. ' len' → logprob: -18.750267028808594
    7. '(length' → logprob: -19.375267028808594
    8. ',len' → logprob: -19.500267028808594
    9. '	len' → logprob: -19.625267028808594
    10. '<len' → logprob: -20.125267028808594

Token 2863: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.025912858545780182
    2. '(results' → logprob: -3.7759127616882324
    3. 'x' → logprob: -6.150912761688232
    4. 'results' → logprob: -7.900912761688232
    5. '{x' → logprob: -8.90091323852539
    6. '(' → logprob: -11.27591323852539
    7. '([' → logprob: -12.02591323852539
    8. '(result' → logprob: -12.90091323852539
    9. '[x' → logprob: -13.40091323852539
    10. '{' → logprob: -13.65091323852539

Token 2864: ')' (ID: 8)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7034014463424683
    2. ' for' → logprob: -1.2034014463424683
    3. '(x' → logprob: -1.7034014463424683
    4. ')' → logprob: -3.828401565551758
    5. '   ' → logprob: -8.453401565551758
    6. '(' → logprob: -8.828401565551758
    7. 'x' → logprob: -9.203401565551758
    8. '[' → logprob: -9.328401565551758
    9. '[x' → logprob: -9.328401565551758
    10. ' ' → logprob: -9.328401565551758

Token 2865: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15200874209403992
    2. ' for' → logprob: -2.2770087718963623
    3. '(x' → logprob: -3.2770087718963623
    4. ')' → logprob: -7.652008533477783
    5. 'x' → logprob: -9.027009010314941
    6. '[x' → logprob: -10.902009010314941
    7. '(min' → logprob: -11.027009010314941
    8. '       ' → logprob: -11.777009010314941
    9. '{x' → logprob: -11.777009010314941
    10. '           ' → logprob: -11.902009010314941

Token 2866: ' x' (ID: 1215)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.005333959124982357
    2. 'x' → logprob: -5.25533390045166
    3. '(results' → logprob: -9.25533390045166
    4. ' results' → logprob: -12.63033390045166
    5. '(x' → logprob: -13.75533390045166
    6. 'result' → logprob: -16.380334854125977
    7. '	results' → logprob: -17.255334854125977
    8. '_results' → logprob: -17.505334854125977
    9. '{x' → logprob: -17.630334854125977
    10. '.results' → logprob: -17.755334854125977

Token 2867: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.45057910680770874
    2. 'in' → logprob: -1.5755791664123535
    3. '(x' → logprob: -2.3255791664123535
    4. '=' → logprob: -4.0755791664123535
    5. 'for' → logprob: -4.3255791664123535
    6. ' for' → logprob: -4.3255791664123535
    7. '(' → logprob: -5.5755791664123535
    8. '   ' → logprob: -5.8255791664123535
    9. 'x' → logprob: -6.2005791664123535
    10. ')' → logprob: -6.4505791664123535

Token 2868: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -4.246537173457909e-06
    2. 'x' → logprob: -13.250003814697266
    3. ' results' → logprob: -13.375003814697266
    4. '(results' → logprob: -14.000003814697266
    5. '	results' → logprob: -18.375003814697266
    6. 'result' → logprob: -18.875003814697266
    7. '_results' → logprob: -19.875003814697266
    8. '.results' → logprob: -20.125003814697266
    9. '
' → logprob: -20.375003814697266
    10. 'Results' → logprob: -21.125003814697266

Token 2869: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2810131013393402
    2. ')' → logprob: -1.5310131311416626
    3. '       ' → logprob: -3.906013011932373
    4. '
' → logprob: -5.281013011932373
    5. ')
' → logprob: -6.781013011932373
    6. '<|end|>' → logprob: -6.906013011932373
    7. '               ' → logprob: -8.281013488769531
    8. 'return' → logprob: -8.656013488769531
    9. '```' → logprob: -8.781013488769531
    10. '<|end|>' → logprob: -9.031013488769531

Token 2870: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6951653361320496
    2. 'return' → logprob: -0.6951653361320496
    3. '       ' → logprob: -7.195165157318115
    4. 'minimal' → logprob: -7.570165157318115
    5. ' return' → logprob: -7.695165157318115
    6. 'min' → logprob: -9.195165634155273
    7. '```' → logprob: -9.320165634155273
    8. '   ' → logprob: -9.445165634155273
    9. 'result' → logprob: -11.320165634155273
    10. '{return' → logprob: -12.945165634155273

Token 2871: ' minimal' (ID: 19957)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1380283683538437
    2. '           ' → logprob: -2.513028383255005
    3. 'minimal' (adapté à ' minimal') → logprob: -3.138028383255005
    4. '       ' → logprob: -6.638028144836426
    5. 'results' → logprob: -6.638028144836426
    6. ' return' → logprob: -7.138028144836426
    7. 'result' → logprob: -7.388028144836426
    8. 'min' → logprob: -8.513028144836426
    9. '   ' → logprob: -8.763028144836426
    10. ' minimal' → logprob: -9.138028144836426

Token 2872: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07936416566371918
    2. ' =' → logprob: -2.579364061355591
    3. '_forms' → logprob: -8.579363822937012
    4. '={' → logprob: -9.079363822937012
    5. '{' → logprob: -9.829363822937012
    6. 's' → logprob: -10.329363822937012
    7. '=set' → logprob: -10.454363822937012
    8. '   ' → logprob: -11.329363822937012
    9. '_set' → logprob: -11.954363822937012
    10. ' forms' → logprob: -12.079363822937012

Token 2873: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.1271589696407318
    2. '{x' → logprob: -2.1271588802337646
    3. ' {' → logprob: -8.377159118652344
    4. '{k' → logprob: -15.002159118652344
    5. '   ' → logprob: -15.377159118652344
    6. '{s' → logprob: -16.002159118652344
    7. '{i' → logprob: -16.127159118652344
    8. '{return' → logprob: -17.752159118652344
    9. '{name' → logprob: -17.877159118652344
    10. '           ' → logprob: -18.252159118652344

Token 2874: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.320199877838604e-07
    2. '   ' → logprob: -15.625
    3. ' x' → logprob: -15.625
    4. '               ' → logprob: -16.75
    5. '           ' → logprob: -17.5
    6. '       ' → logprob: -17.5
    7. '{x' → logprob: -20.0
    8. '```' → logprob: -20.25
    9. '                   ' → logprob: -20.5
    10. '(x' → logprob: -20.875

Token 2875: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.47577592730522156
    2. ' for' → logprob: -0.975775957107544
    3. '           ' → logprob: -7.100775718688965
    4. '               ' → logprob: -7.100775718688965
    5. '       ' → logprob: -11.475775718688965
    6. '   ' → logprob: -11.725775718688965
    7. '                   ' → logprob: -11.850775718688965
    8. '            ' → logprob: -12.725775718688965
    9. '              ' → logprob: -12.850775718688965
    10. '         ' → logprob: -12.975775718688965

Token 2876: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.2842308680992573e-05
    2. 'results' → logprob: -11.125022888183594
    3. ' x' → logprob: -11.750022888183594
    4. 'minimal' → logprob: -16.875022888183594
    5. '(x' → logprob: -17.625022888183594
    6. '   ' → logprob: -18.750022888183594
    7. ' results' → logprob: -19.000022888183594
    8. 'result' → logprob: -19.125022888183594
    9. 'xmin' → logprob: -20.000022888183594
    10. 'res' → logprob: -20.750022888183594

Token 2877: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.05009913071990013
    2. ' in' → logprob: -3.3000991344451904
    3. 'x' → logprob: -4.425098896026611
    4. '   ' → logprob: -12.67509937286377
    5. '(x' → logprob: -12.92509937286377
    6. ' ' → logprob: -13.17509937286377
    7. ' x' → logprob: -13.55009937286377
    8. '       ' → logprob: -14.80009937286377
    9. 'minimal' → logprob: -15.05009937286377
    10. '           ' → logprob: -15.17509937286377

Token 2878: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -7.219262624857947e-05
    2. ' results' → logprob: -9.625072479248047
    3. 'x' → logprob: -12.375072479248047
    4. '(results' → logprob: -14.250072479248047
    5. 'minimal' → logprob: -14.500072479248047
    6. 'result' → logprob: -15.000072479248047
    7. '	results' → logprob: -16.500072479248047
    8. '_results' → logprob: -16.875072479248047
    9. '
' → logprob: -18.000072479248047
    10. '   ' → logprob: -18.125072479248047

Token 2879: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02981170266866684
    2. ' if' → logprob: -3.5298116207122803
    3. '           ' → logprob: -10.27981185913086
    4. '               ' → logprob: -10.90481185913086
    5. '       ' → logprob: -13.27981185913086
    6. '          ' → logprob: -13.40481185913086
    7. '                   ' → logprob: -13.40481185913086
    8. '            ' → logprob: -13.90481185913086
    9. '              ' → logprob: -14.02981185913086
    10. '   ' → logprob: -14.40481185913086

Token 2880: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -2.248469718324486e-05
    2. ' len' → logprob: -10.750022888183594
    3. '           ' → logprob: -14.500022888183594
    4. 'length' → logprob: -15.250022888183594
    5. '(len' → logprob: -15.875022888183594
    6. '   ' → logprob: -16.500022888183594
    7. '	len' → logprob: -17.750022888183594
    8. '               ' → logprob: -18.375022888183594
    9. '[len' → logprob: -19.750022888183594
    10. '          ' → logprob: -19.875022888183594

Token 2881: '(x' (ID: 4061)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.029859134927392006
    2. 'x' → logprob: -3.5298590660095215
    3. '(len' → logprob: -9.77985954284668
    4. '(x' → logprob: -10.15485954284668
    5. ' len' → logprob: -11.52985954284668
    6. '   ' → logprob: -13.27985954284668
    7. ' x' → logprob: -14.40485954284668
    8. '=len' → logprob: -14.90485954284668
    9. 'length' → logprob: -15.27985954284668
    10. '  ' → logprob: -16.52985954284668

Token 2882: ')' (ID: 8)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.38697585463523865
    2. ' ==' → logprob: -1.136975884437561
    3. ')' → logprob: -9.88697624206543
    4. ')==' → logprob: -10.01197624206543
    5. '=' → logprob: -12.76197624206543
    6. ']==' → logprob: -13.13697624206543
    7. 'len' → logprob: -13.38697624206543
    8. '==
' → logprob: -14.38697624206543
    9. ' ' → logprob: -14.63697624206543
    10. 'x' → logprob: -14.88697624206543

Token 2883: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0789024606347084
    2. ' ==' → logprob: -2.57890248298645
    3. '==
' → logprob: -12.203902244567871
    4. '<=' → logprob: -12.328902244567871
    5. '=' → logprob: -14.203902244567871
    6. ')==' → logprob: -14.328902244567871
    7. ']==' → logprob: -14.453902244567871
    8. '()==' → logprob: -14.703902244567871
    9. '```' → logprob: -14.703902244567871
    10. ' ==
' → logprob: -15.703902244567871

Token 2884: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.9361264946837764e-07
    2. ' min' → logprob: -15.75
    3. '_min' → logprob: -20.25
    4. 'max' → logprob: -21.75
    5. '   ' → logprob: -22.625
    6. '(min' → logprob: -23.125
    7. '
' → logprob: -23.75
    8. '	min' → logprob: -23.875
    9. 'minimal' → logprob: -23.875
    10. '[min' → logprob: -24.125

Token 2885: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.00012332366895861924
    2. 'len' → logprob: -10.000123023986816
    3. '(len' → logprob: -10.250123023986816
    4. '(x' → logprob: -10.375123023986816
    5. 'min' → logprob: -13.000123023986816
    6. 'Len' → logprob: -13.375123023986816
    7. 'length' → logprob: -13.500123023986816
    8. 'th' → logprob: -13.625123023986816
    9. '(min' → logprob: -13.875123023986816
    10. 'imal' → logprob: -14.125123023986816

Token 2886: '}

' (ID: 943)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011948170140385628
    2. '}' → logprob: -5.011948108673096
    3. '}
' → logprob: -5.511948108673096
    4. '       ' → logprob: -6.886948108673096
    5. 'return' → logprob: -9.386948585510254
    6. '               ' → logprob: -11.261948585510254
    7. '   ' → logprob: -11.261948585510254
    8. ')' → logprob: -11.261948585510254
    9. ')
' → logprob: -11.636948585510254
    10. '		' → logprob: -11.761948585510254

Token 2887: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001804415020160377
    2. '       ' → logprob: -6.376804351806641
    3. 'return' → logprob: -9.25180435180664
    4. '```' → logprob: -13.00180435180664
    5. '   ' → logprob: -13.25180435180664
    6. '               ' → logprob: -13.87680435180664
    7. '<|end|>' → logprob: -14.50180435180664
    8. '{return' → logprob: -15.25180435180664
    9. '          ' → logprob: -15.50180435180664
    10. ' return' → logprob: -15.87680435180664

Token 2888: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014256121590733528
    2. 'return' → logprob: -4.264256000518799
    3. '       ' → logprob: -9.389256477355957
    4. 'self' → logprob: -12.014256477355957
    5. ' return' → logprob: -13.389256477355957
    6. '   ' → logprob: -14.014256477355957
    7. '               ' → logprob: -15.264256477355957
    8. '          ' → logprob: -16.13925552368164
    9. '```' → logprob: -16.38925552368164
    10. '
' → logprob: -17.13925552368164

Token 2889: ' Cache' (ID: 35118)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7048345804214478
    2. 'self' → logprob: -0.7048345804214478
    3. 'return' → logprob: -4.579834461212158
    4. '       ' → logprob: -6.704834461212158
    5. 'for' → logprob: -9.704834938049316
    6. '   ' → logprob: -9.954834938049316
    7. '#' → logprob: -11.079834938049316
    8. ' self' → logprob: -11.579834938049316
    9. '               ' → logprob: -13.329834938049316
    10. '          ' → logprob: -13.829834938049316

Token 2890: ' this' (ID: 495)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20051784813404083
    2. '       ' → logprob: -1.9505178928375244
    3. 'self' → logprob: -3.3255178928375244
    4. '[self' → logprob: -5.825517654418945
    5. '[' → logprob: -7.575517654418945
    6. '               ' → logprob: -10.825517654418945
    7. '   ' → logprob: -11.450517654418945
    8. ' self' → logprob: -11.575517654418945
    9. '[key' → logprob: -12.325517654418945
    10. '```' → logprob: -12.575517654418945

Token 2891: ' minimal' (ID: 19957)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.29400429129600525
    2. 'self' → logprob: -1.9190043210983276
    3. '       ' → logprob: -2.919004201889038
    4. '[self' → logprob: -3.044004201889038
    5. '[' → logprob: -5.169004440307617
    6. '   ' → logprob: -8.294004440307617
    7. '```' → logprob: -9.294004440307617
    8. '               ' → logprob: -9.794004440307617
    9. '[key' → logprob: -10.169004440307617
    10. ' self' → logprob: -10.419004440307617

Token 2892: ' set' (ID: 920)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.017014482989907265
    2. '           ' → logprob: -4.517014503479004
    3. '[min' → logprob: -5.767014503479004
    4. '[key' → logprob: -7.142014503479004
    5. 'express' → logprob: -7.767014503479004
    6. '[b' → logprob: -7.767014503479004
    7. '       ' → logprob: -8.142014503479004
    8. 'minimal' → logprob: -8.267014503479004
    9. '[line' → logprob: -9.642014503479004
    10. '[self' → logprob: -9.892014503479004

Token 2893: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20151644945144653
    2. '       ' → logprob: -1.7015163898468018
    3. 'self' → logprob: -9.451516151428223
    4. '               ' → logprob: -11.576516151428223
    5. '```' → logprob: -12.076516151428223
    6. '   ' → logprob: -13.076516151428223
    7. ',' → logprob: -13.326516151428223
    8. '[' → logprob: -13.451516151428223
    9. '[self' → logprob: -13.451516151428223
    10. '                   ' → logprob: -13.826516151428223

Token 2894: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6933974027633667
    2. '           ' → logprob: -0.6933974027633667
    3. '```' → logprob: -9.068397521972656
    4. 'self' → logprob: -9.193397521972656
    5. '               ' → logprob: -11.193397521972656
    6. '   ' → logprob: -11.943397521972656
    7. ',' → logprob: -12.693397521972656
    8. ' =' → logprob: -13.068397521972656
    9. '=' → logprob: -13.318397521972656
    10. ' self' → logprob: -13.818397521972656

Token 2895: ' self' (ID: 1051)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11411596834659576
    2. '       ' → logprob: -2.6141159534454346
    3. 'self' (adapté à ' self') → logprob: -3.3641159534454346
    4. '   ' → logprob: -11.864115715026855
    5. '               ' → logprob: -11.989115715026855
    6. ' self' → logprob: -12.239115715026855
    7. '```' → logprob: -13.364115715026855
    8. '                   ' → logprob: -15.614115715026855
    9. 'return' → logprob: -15.864115715026855
    10. '          ' → logprob: -16.114116668701172

Token 2896: '.cache' (ID: 37175)
  Prédit: '.cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cache' → logprob: -5.512236498361744e-07
    2. '       ' → logprob: -15.750000953674316
    3. '._' → logprob: -16.0
    4. ' .' → logprob: -16.375
    5. 'cache' → logprob: -17.25
    6. '.' → logprob: -17.375
    7. '           ' → logprob: -17.875
    8. '	cache' → logprob: -17.875
    9. '_cache' → logprob: -18.0
    10. '.c' → logprob: -18.625

Token 2897: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00016599490481894463
    2. '[b' → logprob: -8.875165939331055
    3. '[self' → logprob: -11.000165939331055
    4. '       ' → logprob: -12.750165939331055
    5. '           ' → logprob: -12.750165939331055
    6. '[key' → logprob: -14.250165939331055
    7. '
' → logprob: -14.750165939331055
    8. '[
' → logprob: -14.875165939331055
    9. '```' → logprob: -15.000165939331055
    10. '   ' → logprob: -15.250165939331055

Token 2898: 'bits' (ID: 24043)
  Prédit: 'bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -5.512236498361744e-07
    2. '(bits' → logprob: -15.375000953674316
    3. ' bits' → logprob: -16.25
    4. '   ' → logprob: -17.0
    5. 'bytes' → logprob: -17.75
    6. '[' → logprob: -18.125
    7. '       ' → logprob: -18.25
    8. '           ' → logprob: -18.875
    9. '```' → logprob: -19.125
    10. 'b' → logprob: -19.25

Token 2899: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.029058748856186867
    2. '[' → logprob: -3.9040586948394775
    3. ']=' → logprob: -5.029058933258057
    4. '           ' → logprob: -6.654058933258057
    5. '][' → logprob: -8.279058456420898
    6. '=' → logprob: -8.779058456420898
    7. '               ' → logprob: -9.279058456420898
    8. '       ' → logprob: -9.529058456420898
    9. '   ' → logprob: -11.029058456420898
    10. '                   ' → logprob: -11.529058456420898

Token 2900: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006436233874410391
    2. '           ' → logprob: -5.756436347961426
    3. ' =' → logprob: -6.506436347961426
    4. '.update' → logprob: -6.881436347961426
    5. '       ' → logprob: -7.756436347961426
    6. '   ' → logprob: -9.256436347961426
    7. '               ' → logprob: -9.756436347961426
    8. '.' → logprob: -10.506436347961426
    9. '```' → logprob: -10.631436347961426
    10. '[' → logprob: -10.881436347961426

Token 2901: ' minimal' (ID: 19957)
  Prédit: 'minimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minimal' → logprob: -3.7697225252486533e-06
    2. ' minimal' → logprob: -12.500003814697266
    3. 'min' → logprob: -21.125003814697266
    4. 'minimum' → logprob: -21.125003814697266
    5. '
' → logprob: -23.750003814697266
    6. '   ' → logprob: -24.000003814697266
    7. 'Minimal' → logprob: -24.875003814697266
    8. '           ' → logprob: -25.250003814697266
    9. '```' → logprob: -26.000003814697266
    10. ' миним' → logprob: -26.375003814697266

Token 2902: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0024364276323467493
    2. '       ' → logprob: -6.127436637878418
    3. 'return' → logprob: -8.377436637878418
    4. '   ' → logprob: -11.752436637878418
    5. ' return' → logprob: -12.627436637878418
    6. '
' → logprob: -12.752436637878418
    7. '```' → logprob: -13.127436637878418
    8. '               ' → logprob: -13.252436637878418
    9. '		' → logprob: -13.877436637878418
    10. '<|end|>' → logprob: -14.002436637878418

Token 2903: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06273578852415085
    2. '       ' → logprob: -2.8127357959747314
    3. '   ' → logprob: -7.437735557556152
    4. 'return' → logprob: -8.687735557556152
    5. ' return' → logprob: -12.812735557556152
    6. '               ' → logprob: -12.937735557556152
    7. '		' → logprob: -13.187735557556152
    8. '	return' → logprob: -13.937735557556152
    9. '```' → logprob: -14.562735557556152
    10. '	       ' → logprob: -14.687735557556152

Token 2904: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10086977481842041
    2. 'return' → logprob: -2.350869655609131
    3. '       ' → logprob: -7.350869655609131
    4. ' return' → logprob: -11.100870132446289
    5. '   ' → logprob: -12.225870132446289
    6. '               ' → logprob: -15.225870132446289
    7. '{return' → logprob: -15.225870132446289
    8. '```' → logprob: -15.350870132446289
    9. '          ' → logprob: -15.975870132446289
    10. ':return' → logprob: -16.35087013244629

Token 2905: ' For' (ID: 2214)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.009297704324126244
    2. '           ' → logprob: -5.259297847747803
    3. '       ' → logprob: -5.509297847747803
    4. ' return' → logprob: -12.134297370910645
    5. '   ' → logprob: -13.884297370910645
    6. '               ' → logprob: -15.509297370910645
    7. '	return' → logprob: -17.50929832458496
    8. '```' → logprob: -17.75929832458496
    9. '{return' → logprob: -17.88429832458496
    10. ':return' → logprob: -18.38429832458496

Token 2906: ' neg' (ID: 4528)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6931532025337219
    2. ' x' → logprob: -1.9431531429290771
    3. 'bits' → logprob: -2.068153142929077
    4. 'f' → logprob: -2.443153142929077
    5. ' bits' → logprob: -3.193153142929077
    6. 'return' → logprob: -3.693153142929077
    7. ' form' → logprob: -3.943153142929077
    8. 'bit' → logprob: -4.818153381347656
    9. ' return' → logprob: -4.818153381347656
    10. 'b' → logprob: -4.943153381347656

Token 2907: 'ation' (ID: 387)
  Prédit: 'ations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -0.12504643201828003
    2. 'ation' → logprob: -2.250046491622925
    3. '       ' → logprob: -5.625046253204346
    4. '           ' → logprob: -5.875046253204346
    5. '   ' → logprob: -6.125046253204346
    6. 's' → logprob: -6.875046253204346
    7. '_cache' → logprob: -6.875046253204346
    8. 'ated' → logprob: -7.375046253204346
    9. '#' → logprob: -7.500046253204346
    10. 'ate' → logprob: -9.875046730041504

Token 2908: ' cache' (ID: 11956)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16017435491085052
    2. '       ' → logprob: -2.0351743698120117
    3. '#' → logprob: -6.285174369812012
    4. ':' → logprob: -6.285174369812012
    5. ',' → logprob: -6.410174369812012
    6. 'return' → logprob: -6.410174369812012
    7. ':
' → logprob: -6.410174369812012
    8. '
' → logprob: -6.535174369812012
    9. 'bits' → logprob: -6.535174369812012
    10. 'for' → logprob: -6.660174369812012

Token 2909: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.28899356722831726
    2. '       ' → logprob: -1.4139935970306396
    3. 'return' → logprob: -5.2889933586120605
    4. '
' → logprob: -6.2889933586120605
    5. ' return' → logprob: -7.1639933586120605
    6. ',' → logprob: -9.663993835449219
    7. '```' → logprob: -11.538993835449219
    8. '               ' → logprob: -11.913993835449219
    9. '_return' → logprob: -12.163993835449219
    10. '   ' → logprob: -12.288993835449219

Token 2910: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.428956001996994
    2. '           ' → logprob: -1.0539560317993164
    3. '```' → logprob: -8.428956031799316
    4. '   ' → logprob: -11.803956031799316
    5. '               ' → logprob: -11.928956031799316
    6. 'return' → logprob: -12.553956031799316
    7. '<|end|>' → logprob: -12.678956031799316
    8. 'self' → logprob: -12.803956031799316
    9. ' if' → logprob: -13.178956031799316
    10. ' for' → logprob: -13.303956031799316

Token 2911: ' neg' (ID: 4528)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2530367076396942
    2. '           ' → logprob: -1.5030367374420166
    3. 'self' → logprob: -7.2530364990234375
    4. 'for' → logprob: -8.503036499023438
    5. '```' → logprob: -9.878036499023438
    6. ' for' → logprob: -9.878036499023438
    7. '   ' → logprob: -10.128036499023438
    8. ' self' → logprob: -10.253036499023438
    9. 'if' → logprob: -12.003036499023438
    10. 'return' → logprob: -12.003036499023438

Token 2912: '_bits' (ID: 48415)
  Prédit: '_bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bits' → logprob: -0.0010584142291918397
    2. 'bits' → logprob: -7.001058578491211
    3. '_cache' → logprob: -9.126058578491211
    4. ' =' → logprob: -10.876058578491211
    5. 'cache' → logprob: -11.876058578491211
    6. '=' → logprob: -13.376058578491211
    7. '```' → logprob: -13.376058578491211
    8. '_BITS' → logprob: -13.501058578491211
    9. '   ' → logprob: -13.751058578491211
    10. ' bits' → logprob: -14.376058578491211

Token 2913: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47438845038414
    2. ' =' → logprob: -0.9743884801864624
    3. '           ' → logprob: -8.974388122558594
    4. ' ^=' → logprob: -9.474388122558594
    5. '   ' → logprob: -9.974388122558594
    6. '       ' → logprob: -10.599388122558594
    7. '_bits' → logprob: -11.099388122558594
    8. ' ^' → logprob: -12.099388122558594
    9. ' ' → logprob: -12.599388122558594
    10. '^' → logprob: -12.599388122558594

Token 2914: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.2519455850124359
    2. ' bits' → logprob: -1.5019456148147583
    3. '(bits' → logprob: -11.251945495605469
    4. '   ' → logprob: -13.251945495605469
    5. '       ' → logprob: -14.126945495605469
    6. '           ' → logprob: -15.001945495605469
    7. '.bits' → logprob: -15.376945495605469
    8. 'self' → logprob: -16.50194549560547
    9. 'bit' → logprob: -16.62694549560547
    10. ' (' → logprob: -16.62694549560547

Token 2915: ' ^' (ID: 7602)
  Prédit: ' ^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ^' → logprob: -0.18502241373062134
    2. '^' → logprob: -2.3100223541259766
    3. ' ^=' → logprob: -2.6850223541259766
    4. '=' → logprob: -6.935022354125977
    5. ' =' → logprob: -7.935022354125977
    6. '   ' → logprob: -10.560022354125977
    7. ' ' → logprob: -11.060022354125977
    8. ' ' → logprob: -11.185022354125977
    9. '^^' → logprob: -12.060022354125977
    10. '^{' → logprob: -12.060022354125977

Token 2916: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.125
    3. '   ' → logprob: -16.75
    4. '(' → logprob: -17.125
    5. '`' → logprob: -19.0
    6. '           ' → logprob: -19.625
    7. '```' → logprob: -19.625
    8. '655' → logprob: -20.25
    9. '  ' → logprob: -20.375
    10. '       ' → logprob: -20.75

Token 2917: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. '655' → logprob: -14.750000953674316
    3. '(' → logprob: -15.375000953674316
    4. ' ' → logprob: -16.125
    5. '   ' → logprob: -16.25
    6. '`' → logprob: -17.75
    7. '```' → logprob: -18.5
    8. '           ' → logprob: -18.75
    9. '``' → logprob: -19.25
    10. '       ' → logprob: -19.75

Token 2918: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.39072877168655396
    2. '0' → logprob: -1.5157287120819092
    3. 'FFFF' → logprob: -2.265728712081909
    4. 'xffff' → logprob: -11.265728950500488
    5. '`' → logprob: -11.390728950500488
    6. '   ' → logprob: -13.015728950500488
    7. '```' → logprob: -13.265728950500488
    8. ' ' → logprob: -13.765728950500488
    9. '#' → logprob: -14.515728950500488
    10. 'XXXX' → logprob: -14.765728950500488

Token 2919: 'FFFF' (ID: 14573)
  Prédit: 'FFFF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'FFFF' → logprob: -1.1472419600977446e-06
    2. 'ffff' → logprob: -14.125000953674316
    3. 'FFFFFFFF' → logprob: -15.125000953674316
    4. 'FFF' → logprob: -16.625001907348633
    5. 'FF' → logprob: -17.000001907348633
    6. '0' → logprob: -18.000001907348633
    7. '```' → logprob: -18.125001907348633
    8. '000' → logprob: -18.750001907348633
    9. 'xffff' → logprob: -20.500001907348633
    10. 'F' → logprob: -20.625001907348633

Token 2920: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011897159740328789
    2. '
' → logprob: -5.011897087097168
    3. '       ' → logprob: -5.386897087097168
    4. 'if' → logprob: -8.386897087097168
    5. ' if' → logprob: -8.886897087097168
    6. ',' → logprob: -9.511897087097168
    7. '   ' → logprob: -10.136897087097168
    8. ':' → logprob: -11.136897087097168
    9. ':
' → logprob: -11.386897087097168
    10. '
' → logprob: -11.636897087097168

Token 2921: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00044008632539771497
    2. '       ' → logprob: -8.375439643859863
    3. 'if' → logprob: -8.500439643859863
    4. 'self' → logprob: -12.750439643859863
    5. ' if' → logprob: -13.500439643859863
    6. '```' → logprob: -14.375439643859863
    7. '               ' → logprob: -14.500439643859863
    8. '   ' → logprob: -14.875439643859863
    9. 'for' → logprob: -16.37544059753418
    10. 'return' → logprob: -16.87544059753418

Token 2922: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6972213983535767
    2. 'if' (adapté à ' if') → logprob: -0.6972213983535767
    3. 'self' → logprob: -5.572221279144287
    4. '       ' → logprob: -8.822221755981445
    5. 'neg' → logprob: -9.322221755981445
    6. 'for' → logprob: -11.447221755981445
    7. ' if' → logprob: -11.697221755981445
    8. '   ' → logprob: -11.947221755981445
    9. '               ' → logprob: -14.447221755981445
    10. '```' → logprob: -15.197221755981445

Token 2923: ' neg' (ID: 4528)
  Prédit: 'neg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neg' → logprob: -0.009301131591200829
    2. 'bits' → logprob: -4.88430118560791
    3. ' neg' → logprob: -6.63430118560791
    4. ' bits' → logprob: -8.50930118560791
    5. '   ' → logprob: -9.25930118560791
    6. 'not' → logprob: -10.13430118560791
    7. 'min' → logprob: -11.25930118560791
    8. '       ' → logprob: -11.25930118560791
    9. 'len' → logprob: -12.38430118560791
    10. '           ' → logprob: -12.63430118560791

Token 2924: '_bits' (ID: 48415)
  Prédit: '_bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bits' → logprob: -0.05730310454964638
    2. 'in' → logprob: -3.8073031902313232
    3. 'not' → logprob: -3.8073031902313232
    4. 'bits' → logprob: -4.932302951812744
    5. 'neg' → logprob: -6.432302951812744
    6. ' in' → logprob: -6.807302951812744
    7. '   ' → logprob: -7.932302951812744
    8. ' not' → logprob: -7.932302951812744
    9. 'Bits' → logprob: -8.682303428649902
    10. '       ' → logprob: -9.807303428649902

Token 2925: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.20602023601531982
    2. 'not' → logprob: -1.9560202360153198
    3. 'in' → logprob: -3.5810203552246094
    4. ' in' → logprob: -4.081020355224609
    5. ')' → logprob: -11.83102035522461
    6. '!=' → logprob: -11.95602035522461
    7. '	not' → logprob: -12.20602035522461
    8. '==' → logprob: -12.70602035522461
    9. ' !=' → logprob: -12.95602035522461
    10. '   ' → logprob: -14.33102035522461

Token 2926: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.25218960642814636
    2. ' in' → logprob: -1.5021896362304688
    3. 'not' → logprob: -9.002189636230469
    4. ' not' → logprob: -9.502189636230469
    5. '           ' → logprob: -10.502189636230469
    6. '   ' → logprob: -10.877189636230469
    7. 'self' → logprob: -12.127189636230469
    8. '       ' → logprob: -12.877189636230469
    9. ')' → logprob: -13.627189636230469
    10. '[in' → logprob: -13.627189636230469

Token 2927: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.718606891809031e-05
    2. ' self' → logprob: -9.625066757202148
    3. '           ' → logprob: -13.875066757202148
    4. '[self' → logprob: -17.37506675720215
    5. '(self' → logprob: -18.00006675720215
    6. '   ' → logprob: -18.00006675720215
    7. '       ' → logprob: -18.12506675720215
    8. '```' → logprob: -18.87506675720215
    9. '=self' → logprob: -19.37506675720215
    10. '               ' → logprob: -19.50006675720215

Token 2928: '.cache' (ID: 37175)
  Prédit: '.cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cache' → logprob: -0.001342254807241261
    2. 'cache' → logprob: -6.626342296600342
    3. '_cache' → logprob: -11.126341819763184
    4. '	cache' → logprob: -14.501341819763184
    5. '.cached' → logprob: -15.001341819763184
    6. ' cache' → logprob: -15.626341819763184
    7. 'CACHE' → logprob: -15.626341819763184
    8. '.' → logprob: -16.0013427734375
    9. ' .' → logprob: -16.3763427734375
    10. 'Cache' → logprob: -16.6263427734375

Token 2929: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15754936635494232
    2. ':
' → logprob: -2.2825493812561035
    3. ' and' → logprob: -3.4075493812561035
    4. '           ' → logprob: -5.4075493812561035
    5. ':' → logprob: -5.5325493812561035
    6. ' or' → logprob: -6.6575493812561035
    7. 'and' → logprob: -7.4075493812561035
    8. '):
' → logprob: -9.032548904418945
    9. ',' → logprob: -9.657548904418945
    10. '       ' → logprob: -10.282548904418945

Token 2930: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02638182044029236
    2. '           ' → logprob: -3.651381731033325
    3. '       ' → logprob: -10.526381492614746
    4. '   ' → logprob: -10.901381492614746
    5. '```' → logprob: -11.276381492614746
    6. '                   ' → logprob: -11.401381492614746
    7. 'self' → logprob: -11.651381492614746
    8. '                       ' → logprob: -13.026381492614746
    9. ' self' → logprob: -15.401381492614746
    10. ':' → logprob: -15.651381492614746

Token 2931: ' self' (ID: 1051)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.044254034757614136
    2. '               ' → logprob: -3.1692540645599365
    3. 'self' (adapté à ' self') → logprob: -7.044253826141357
    4. '                   ' → logprob: -8.669254302978516
    5. '       ' → logprob: -9.169254302978516
    6. ' self' → logprob: -9.669254302978516
    7. '   ' → logprob: -10.544254302978516
    8. '                       ' → logprob: -12.169254302978516
    9. '```' → logprob: -13.294254302978516
    10. '#' → logprob: -13.419254302978516

Token 2932: '.cache' (ID: 37175)
  Prédit: '.cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cache' → logprob: -0.007814108394086361
    2. '.neg' → logprob: -5.257813930511475
    3. 'cache' → logprob: -6.257813930511475
    4. '.pos' → logprob: -8.507814407348633
    5. 'neg' → logprob: -8.757814407348633
    6. '           ' → logprob: -9.382814407348633
    7. '       ' → logprob: -9.757814407348633
    8. '   ' → logprob: -9.882814407348633
    9. '               ' → logprob: -10.382814407348633
    10. '.' → logprob: -11.257814407348633

Token 2933: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.856408536899835e-05
    2. '           ' → logprob: -11.500028610229492
    3. '                   ' → logprob: -11.500028610229492
    4. '               ' → logprob: -12.125028610229492
    5. '   ' → logprob: -13.500028610229492
    6. '       ' → logprob: -14.250028610229492
    7. 'bits' → logprob: -15.000028610229492
    8. '[
' → logprob: -16.250028610229492
    9. '=' → logprob: -16.750028610229492
    10. '```' → logprob: -16.875028610229492

Token 2934: 'neg' (ID: 18775)
  Prédit: 'neg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neg' → logprob: -0.00012082771718269214
    2. 'bits' → logprob: -9.125121116638184
    3. '{' → logprob: -11.625121116638184
    4. '[' → logprob: -14.000121116638184
    5. ' neg' → logprob: -14.250121116638184
    6. '   ' → logprob: -14.375121116638184
    7. 'keys' → logprob: -15.000121116638184
    8. '```' → logprob: -16.625120162963867
    9. '-neg' → logprob: -16.750120162963867
    10. '           ' → logprob: -16.750120162963867

Token 2935: '_bits' (ID: 48415)
  Prédit: '_bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bits' → logprob: -0.15815292298793793
    2. 'neg' → logprob: -2.0331528186798096
    3. '[' → logprob: -5.033153057098389
    4. '_neg' → logprob: -5.533153057098389
    5. 'bits' → logprob: -6.283153057098389
    6. ']' → logprob: -6.783153057098389
    7. 'its' → logprob: -7.408153057098389
    8. 'Bits' → logprob: -8.78315258026123
    9. 'ots' → logprob: -8.78315258026123
    10. 's' → logprob: -8.90815258026123

Token 2936: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3027394115924835
    2. ' =' → logprob: -1.5527393817901611
    3. '                   ' → logprob: -3.677739381790161
    4. ']' → logprob: -4.17773962020874
    5. '               ' → logprob: -5.55273962020874
    6. ')' → logprob: -6.30273962020874
    7. ']=' → logprob: -6.42773962020874
    8. '           ' → logprob: -6.92773962020874
    9. '   ' → logprob: -8.552739143371582
    10. ' |=' → logprob: -8.927739143371582

Token 2937: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00408397801220417
    2. ' =' → logprob: -5.62908411026001
    3. '                   ' → logprob: -8.129083633422852
    4. '           ' → logprob: -9.629083633422852
    5. '               ' → logprob: -9.879083633422852
    6. '   ' → logprob: -10.129083633422852
    7. '=
' → logprob: -10.879083633422852
    8. '[' → logprob: -12.879083633422852
    9. ' |=' → logprob: -13.254083633422852
    10. '|' → logprob: -13.504083633422852

Token 2938: ' {' (ID: 354)
  Prédit: 'minimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'minimal' → logprob: -0.5798596143722534
    2. 'self' → logprob: -1.4548596143722534
    3. '{' → logprob: -1.9548596143722534
    4. 'set' → logprob: -2.954859733581543
    5. '{'' → logprob: -4.454859733581543
    6. '{-' → logprob: -7.829859733581543
    7. 'min' → logprob: -8.454859733581543
    8. 'results' → logprob: -8.579859733581543
    9. '{}' → logprob: -8.954859733581543
    10. 'dfs' → logprob: -9.579859733581543

Token 2939: '('-' (ID: 33343)
  Prédit: ''-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''-' → logprob: -0.005534692667424679
    2. 'f' → logprob: -6.005534648895264
    3. 'x' → logprob: -6.630534648895264
    4. '('-' → logprob: -7.255534648895264
    5. ''' → logprob: -8.130535125732422
    6. ' '-'' → logprob: -8.755535125732422
    7. ''x' → logprob: -8.880535125732422
    8. '"-' → logprob: -9.005535125732422
    9. '{' → logprob: -9.755535125732422
    10. '''' → logprob: -9.755535125732422

Token 2940: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6930722594261169
    2. '-' → logprob: -1.1930723190307617
    3. 'x' → logprob: -2.8180723190307617
    4. '-'' → logprob: -2.8180723190307617
    5. ''-' → logprob: -4.068072319030762
    6. '')' → logprob: -4.068072319030762
    7. '0' → logprob: -4.443072319030762
    8. '1' → logprob: -4.818072319030762
    9. ''+' → logprob: -5.193072319030762
    10. '-'+' → logprob: -5.193072319030762

Token 2941: ' +' (ID: 659)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.35123902559280396
    2. 'x' → logprob: -2.601238965988159
    3. 'min' → logprob: -2.601238965988159
    4. '+' → logprob: -2.976238965988159
    5. 'list' → logprob: -2.976238965988159
    6. '+x' → logprob: -3.476238965988159
    7. ' +' → logprob: -4.976239204406738
    8. '   ' → logprob: -6.226239204406738
    9. ' next' → logprob: -6.976239204406738
    10. '[next' → logprob: -7.101239204406738

Token 2942: ' x' (ID: 1215)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.3509446680545807
    2. 'list' → logprob: -1.4759446382522583
    3. 'min' → logprob: -2.725944757461548
    4. 'x' → logprob: -6.850944519042969
    5. '(next' → logprob: -8.350944519042969
    6. ' next' → logprob: -8.475944519042969
    7. 'minimal' → logprob: -8.600944519042969
    8. '[next' → logprob: -8.975944519042969
    9. '[min' → logprob: -10.350944519042969
    10. ' list' → logprob: -10.600944519042969

Token 2943: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08467355370521545
    2. ' for' → logprob: -2.8346736431121826
    3. ')' → logprob: -3.8346736431121826
    4. '           ' → logprob: -8.084673881530762
    5. '               ' → logprob: -8.584673881530762
    6. 'if' → logprob: -8.584673881530762
    7. ' if' → logprob: -9.834673881530762
    8. '              ' → logprob: -10.459673881530762
    9. '       ' → logprob: -11.334673881530762
    10. '                ' → logprob: -11.584673881530762

Token 2944: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.00011152983643114567
    2. ' not' → logprob: -9.25011157989502
    3. '(not' → logprob: -11.25011157989502
    4. 'x' → logprob: -13.12511157989502
    5. '	not' → logprob: -15.87511157989502
    6. '   ' → logprob: -16.125110626220703
    7. '
' → logprob: -16.750110626220703
    8. 'len' → logprob: -16.750110626220703
    9. '           ' → logprob: -17.875110626220703
    10. '!' → logprob: -18.750110626220703

Token 2945: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -7.896309739408025e-07
    2. ' x' → logprob: -14.375000953674316
    3. '(x' → logprob: -16.875
    4. ''x' → logprob: -18.5
    5. '   ' → logprob: -19.25
    6. 'not' → logprob: -19.75
    7. ')x' → logprob: -20.125
    8. '"x' → logprob: -20.25
    9. '(' → logprob: -20.5
    10. '
' → logprob: -20.875

Token 2946: '.startswith' (ID: 64340)
  Prédit: '.startswith'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.startswith' → logprob: -0.00022976152831688523
    2. 'startswith' → logprob: -9.125229835510254
    3. 'x' → logprob: -9.375229835510254
    4. '[' → logprob: -10.750229835510254
    5. '.' → logprob: -11.625229835510254
    6. '.x' → logprob: -12.875229835510254
    7. ' .' → logprob: -13.375229835510254
    8. '.starts' → logprob: -14.625229835510254
    9. '.endswith' → logprob: -15.375229835510254
    10. '   ' → logprob: -15.500229835510254

Token 2947: '('-' (ID: 33343)
  Prédit: ''-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''-' → logprob: -0.0010883049108088017
    2. '('-' → logprob: -7.0010881423950195
    3. 'x' → logprob: -9.12608814239502
    4. ' '-')' → logprob: -10.37608814239502
    5. '-' → logprob: -11.00108814239502
    6. ''x' → logprob: -12.12608814239502
    7. '   ' → logprob: -12.25108814239502
    8. '       ' → logprob: -12.50108814239502
    9. '(x' → logprob: -13.25108814239502
    10. '(' → logprob: -14.00108814239502

Token 2948: '')' (ID: 1542)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.002792753279209137
    2. ''-' → logprob: -6.627792835235596
    3. ' x' → logprob: -7.877792835235596
    4. ''x' → logprob: -8.127792358398438
    5. ')' → logprob: -8.377792358398438
    6. '')' → logprob: -8.752792358398438
    7. '           ' → logprob: -9.127792358398438
    8. '-' → logprob: -9.627792358398438
    9. '   ' → logprob: -9.752792358398438
    10. ''' → logprob: -10.127792358398438

Token 2949: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.021734170615673065
    2. ' else' → logprob: -4.146734237670898
    3. ')' → logprob: -5.896734237670898
    4. '               ' → logprob: -6.271734237670898
    5. '           ' → logprob: -7.271734237670898
    6. '                   ' → logprob: -9.396734237670898
    7. 'x' → logprob: -9.396734237670898
    8. '       ' → logprob: -10.021734237670898
    9. '   ' → logprob: -10.271734237670898
    10. '              ' → logprob: -10.771734237670898

Token 2950: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0007142199319787323
    2. ' x' → logprob: -7.250714302062988
    3. ''x' → logprob: -12.375714302062988
    4. '(x' → logprob: -16.750713348388672
    5. '   ' → logprob: -17.625713348388672
    6. ' ' → logprob: -17.750713348388672
    7. '"x' → logprob: -17.875713348388672
    8. '	x' → logprob: -17.875713348388672
    9. ''' → logprob: -18.500713348388672
    10. ')x' → logprob: -18.500713348388672

Token 2951: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.60414821645827e-06
    2. 'x' → logprob: -14.125004768371582
    3. '1' → logprob: -14.250004768371582
    4. '   ' → logprob: -14.375004768371582
    5. '
' → logprob: -14.750004768371582
    6. '#' → logprob: -15.000004768371582
    7. '```' → logprob: -15.250004768371582
    8. ''[' → logprob: -15.750004768371582
    9. 's' → logprob: -16.000003814697266
    10. '=' → logprob: -16.125003814697266

Token 2952: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00043674863991327584
    2. '[' → logprob: -7.750436782836914
    3. '
' → logprob: -13.000436782836914
    4. '0' → logprob: -13.375436782836914
    5. ' ' → logprob: -14.875436782836914
    6. '   ' → logprob: -15.125436782836914
    7. 's' → logprob: -15.375436782836914
    8. '```' → logprob: -15.625436782836914
    9. '#' → logprob: -15.875436782836914
    10. '2' → logprob: -15.875436782836914

Token 2953: ':' (ID: 25)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.11591979116201401
    2. ':' → logprob: -2.240919828414917
    3. ']' → logprob: -6.115919589996338
    4. '])' → logprob: -7.615919589996338
    5. ':]
' → logprob: -8.490920066833496
    6. ':)' → logprob: -9.365920066833496
    7. ':])
' → logprob: -9.365920066833496
    8. ')' → logprob: -12.615920066833496
    9. ':]

' → logprob: -12.990920066833496
    10. ':].' → logprob: -13.240920066833496

Token 2954: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.33408570289611816
    2. ')' → logprob: -2.084085702896118
    3. 'x' → logprob: -2.709085702896118
    4. ']' → logprob: -2.834085702896118
    5. ':' → logprob: -3.959085702896118
    6. '1' → logprob: -4.834085464477539
    7. ':]' → logprob: -6.334085464477539
    8. ''])' → logprob: -6.959085464477539
    9. 'for' → logprob: -7.084085464477539
    10. '0' → logprob: -7.584085464477539

Token 2955: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11291313916444778
    2. ' for' → logprob: -2.362913131713867
    3. '               ' → logprob: -5.362913131713867
    4. '                  ' → logprob: -6.862913131713867
    5. '                   ' → logprob: -6.987913131713867
    6. '                ' → logprob: -7.112913131713867
    7. '           ' → logprob: -7.112913131713867
    8. '                      ' → logprob: -7.237913131713867
    9. '                     ' → logprob: -7.362913131713867
    10. '              ' → logprob: -7.612913131713867

Token 2956: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.141186450899113e-05
    2. ' x' → logprob: -11.000020980834961
    3. 'minimal' → logprob: -12.625020980834961
    4. '   ' → logprob: -14.500020980834961
    5. '           ' → logprob: -15.000020980834961
    6. '       ' → logprob: -15.500020980834961
    7. '               ' → logprob: -16.12502098083496
    8. '                   ' → logprob: -16.50002098083496
    9. '  ' → logprob: -17.50002098083496
    10. '     ' → logprob: -17.75002098083496

Token 2957: ' in' (ID: 306)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0016632776241749525
    2. 'in' → logprob: -7.1266632080078125
    3. ' x' → logprob: -7.5016632080078125
    4. ' in' → logprob: -8.126663208007812
    5. '           ' → logprob: -12.626663208007812
    6. '                   ' → logprob: -12.876663208007812
    7. '               ' → logprob: -13.001663208007812
    8. ' ' → logprob: -14.126663208007812
    9. '   ' → logprob: -14.126663208007812
    10. '       ' → logprob: -15.251663208007812

Token 2958: ' minimal' (ID: 19957)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3489939272403717
    2. 'minimal' → logprob: -1.2239938974380493
    3. ' minimal' → logprob: -8.473994255065918
    4. ' self' → logprob: -8.473994255065918
    5. 'min' → logprob: -9.223994255065918
    6. 'x' → logprob: -10.723994255065918
    7. '
' → logprob: -12.598994255065918
    8. '(self' → logprob: -13.473994255065918
    9. '   ' → logprob: -13.723994255065918
    10. 'v' → logprob: -14.098994255065918

Token 2959: '}

' (ID: 943)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.03286771476268768
    2. '           ' → logprob: -3.782867670059204
    3. '}
' → logprob: -4.657867908477783
    4. '               ' → logprob: -10.157867431640625
    5. '}

' → logprob: -11.032867431640625
    6. '       ' → logprob: -11.657867431640625
    7. ')' → logprob: -12.282867431640625
    8. '}
' → logprob: -12.657867431640625
    9. '.' → logprob: -12.907867431640625
    10. '                   ' → logprob: -13.282867431640625

Token 2960: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18020763993263245
    2. '           ' → logprob: -1.80520761013031
    3. 'return' → logprob: -8.305207252502441
    4. '```' → logprob: -9.055207252502441
    5. '<|end|>' → logprob: -9.555207252502441
    6. '   ' → logprob: -11.680207252502441
    7. '               ' → logprob: -11.680207252502441
    8. ' return' → logprob: -12.555207252502441
    9. '
' → logprob: -12.555207252502441
    10. '`' → logprob: -14.305207252502441

Token 2961: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5760220885276794
    2. '           ' → logprob: -0.8260220885276794
    3. 'return' (adapté à ' return') → logprob: -9.576022148132324
    4. '               ' → logprob: -11.826022148132324
    5. '   ' → logprob: -12.951022148132324
    6. '```' → logprob: -13.326022148132324
    7. '          ' → logprob: -14.701022148132324
    8. '         ' → logprob: -15.201022148132324
    9. ' return' → logprob: -15.326022148132324
    10. '                   ' → logprob: -15.451022148132324

Token 2962: ' minimal' (ID: 19957)
  Prédit: 'minimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minimal' → logprob: -1.8624639324116288e-06
    2. ' minimal' → logprob: -13.250001907348633
    3. 'min' → logprob: -17.500001907348633
    4. 'minimum' → logprob: -19.750001907348633
    5. '   ' → logprob: -20.875001907348633
    6. '           ' → logprob: -21.500001907348633
    7. 'Minimal' → logprob: -23.375001907348633
    8. '       ' → logprob: -23.500001907348633
    9. '  ' → logprob: -24.875001907348633
    10. ' миним' → logprob: -25.000001907348633

Token 2963: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2964: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00023739055905025452
    2. '           ' → logprob: -9.750237464904785
    3. '   ' → logprob: -10.125237464904785
    4. '      ' → logprob: -10.375237464904785
    5. 'return' → logprob: -10.500237464904785
    6. ' return' → logprob: -11.375237464904785
    7. '        
' → logprob: -11.625237464904785
    8. '        ' → logprob: -11.750237464904785
    9. ')' → logprob: -12.125237464904785
    10. '(' → logprob: -12.125237464904785

Token 2965: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3520277738571167
    2. 'return' → logprob: -1.2270277738571167
    3. 'bits' → logprob: -6.227027893066406
    4. ' return' → logprob: -6.852027893066406
    5. 'expr' → logprob: -8.227027893066406
    6. 'result' → logprob: -8.977027893066406
    7. '   ' → logprob: -10.227027893066406
    8. 'tokens' → logprob: -10.602027893066406
    9. ' bits' → logprob: -11.102027893066406
    10. '{return' → logprob: -11.727027893066406

Token 2966: ' Just' (ID: 6214)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4686073362827301
    2. 'forms' → logprob: -1.7186073064804077
    3. 'return' → logprob: -1.8436073064804077
    4. 'result' → logprob: -4.218607425689697
    5. 'minimal' → logprob: -4.593607425689697
    6. 'results' → logprob: -4.718607425689697
    7. 'res' → logprob: -6.593607425689697
    8. 'min' → logprob: -7.343607425689697
    9. 'expr' → logprob: -8.718606948852539
    10. '   ' → logprob: -9.218606948852539

Token 2967: ' call' (ID: 2421)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1251668632030487
    2. 'forms' → logprob: -3.125166893005371
    3. '       ' → logprob: -3.375166893005371
    4. 'result' → logprob: -4.000166893005371
    5. ' return' → logprob: -4.875166893005371
    6. 'minimal' → logprob: -5.000166893005371
    7. 'expr' → logprob: -6.500166893005371
    8. '_forms' → logprob: -6.875166893005371
    9. ' minimal' → logprob: -7.000166893005371
    10. 'res' → logprob: -7.250166893005371

Token 2968: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.012899836525321007
    2. ' dfs' → logprob: -4.387899875640869
    3. '       ' → logprob: -7.887899875640869
    4. 'df' → logprob: -12.137899398803711
    5. '   ' → logprob: -13.012899398803711
    6. 'd' → logprob: -13.512899398803711
    7. 'dfa' → logprob: -13.887899398803711
    8. '(d' → logprob: -14.012899398803711
    9. 'expr' → logprob: -14.137899398803711
    10. '      ' → logprob: -14.387899398803711

Token 2969: ' on' (ID: 402)
  Prédit: '(tt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(tt' → logprob: -0.2778785228729248
    2. '(expr' → logprob: -1.6528785228729248
    3. '(bits' → logprob: -3.027878522872925
    4. '(d' → logprob: -6.527878761291504
    5. '(' → logprob: -7.402878761291504
    6. '       ' → logprob: -8.777878761291504
    7. '(self' → logprob: -9.027878761291504
    8. 'return' → logprob: -9.902878761291504
    9. '(expression' → logprob: -9.902878761291504
    10. '(return' → logprob: -10.527878761291504

Token 2970: ' this' (ID: 495)
  Prédit: 'tt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tt' → logprob: -0.0019446993246674538
    2. ' tt' → logprob: -6.251944541931152
    3. '(tt' → logprob: -11.751944541931152
    4. 'tts' → logprob: -13.251944541931152
    5. 'truth' → logprob: -13.251944541931152
    6. '   ' → logprob: -13.876944541931152
    7. '       ' → logprob: -14.251944541931152
    8. 'bits' → logprob: -14.376944541931152
    9. 'ttl' → logprob: -14.501944541931152
    10. 'ttp' → logprob: -14.876944541931152

Token 2971: ' expr' (ID: 30206)
  Prédit: 'tt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tt' → logprob: -0.11931659281253815
    2. '(tt' → logprob: -2.619316577911377
    3. 'bits' → logprob: -3.994316577911377
    4. '(bits' → logprob: -4.494316577911377
    5. 'expr' → logprob: -4.869316577911377
    6. '(expr' → logprob: -6.369316577911377
    7. ' tt' → logprob: -7.994316577911377
    8. '       ' → logprob: -9.494317054748535
    9. ' bits' → logprob: -10.119317054748535
    10. '   ' → logprob: -10.369317054748535

Token 2972: ''s' (ID: 885)
  Prédit: '(expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(expr' → logprob: -0.35977739095687866
    2. '(tt' → logprob: -1.2347774505615234
    3. '(bits' → logprob: -4.609777450561523
    4. 'return' → logprob: -7.734777450561523
    5. 'bits' → logprob: -8.484777450561523
    6. 'expr' → logprob: -8.984777450561523
    7. '       ' → logprob: -9.109777450561523
    8. ' =' → logprob: -9.359777450561523
    9. '_bits' → logprob: -9.859777450561523
    10. '(return' → logprob: -10.484777450561523

Token 2973: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.04902025684714317
    2. 'tt' → logprob: -3.174020290374756
    3. '.bits' → logprob: -6.174020290374756
    4. 'truth' → logprob: -6.674020290374756
    5. ' bits' → logprob: -6.799020290374756
    6. '(bits' → logprob: -8.299019813537598
    7. ' tt' → logprob: -8.424019813537598
    8. '   ' → logprob: -8.674019813537598
    9. '.tt' → logprob: -9.174019813537598
    10. 'tts' → logprob: -9.174019813537598

Token 2974: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.608293354511261
    2. '(tt' → logprob: -0.983293354511261
    3. 'return' → logprob: -3.483293294906616
    4. '(bits' → logprob: -3.733293294906616
    5. '(expr' → logprob: -4.233293533325195
    6. 'expr' → logprob: -5.608293533325195
    7. '(' → logprob: -5.733293533325195
    8. '   ' → logprob: -6.358293533325195
    9. 'bits' → logprob: -6.358293533325195
    10. 'result' → logprob: -7.733293533325195

Token 2975: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.004874608013778925
    2. '       ' → logprob: -5.7548747062683105
    3. ' return' → logprob: -6.6298747062683105
    4. 'forms' → logprob: -9.254874229431152
    5. 'result' → logprob: -9.379874229431152
    6. 'next' → logprob: -10.129874229431152
    7. 'results' → logprob: -10.379874229431152
    8. '   ' → logprob: -10.504874229431152
    9. 'min' → logprob: -10.504874229431152
    10. '           ' → logprob: -11.254874229431152

Token 2976: ' minimal' (ID: 19957)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.029796889051795006
    2. 'min' → logprob: -3.529796838760376
    3. 'next' → logprob: -11.279796600341797
    4. ' len' → logprob: -11.279796600341797
    5. '   ' → logprob: -11.529796600341797
    6. ' min' → logprob: -11.779796600341797
    7. '       ' → logprob: -14.029796600341797
    8. 'length' → logprob: -14.029796600341797
    9. '(len' → logprob: -14.404796600341797
    10. '```' → logprob: -14.904796600341797

Token 2977: ' length' (ID: 5517)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.12240669876337051
    2. 'length' → logprob: -2.2474067211151123
    3. '_length' → logprob: -5.747406482696533
    4. '(len' → logprob: -6.122406482696533
    5. '_len' → logprob: -6.872406482696533
    6. 'next' → logprob: -7.497406482696533
    7. 'min' → logprob: -7.622406482696533
    8. '```' → logprob: -8.122406959533691
    9. 'forms' → logprob: -8.372406959533691
    10. ' len' → logprob: -8.497406959533691

Token 2978: ' of' (ID: 328)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.08175388723611832
    2. '       ' → logprob: -3.331753969192505
    3. '(min' → logprob: -4.456753730773926
    4. 'next' → logprob: -4.706753730773926
    5. '(next' → logprob: -4.956753730773926
    6. '```' → logprob: -5.706753730773926
    7. 'min' → logprob: -5.956753730773926
    8. '(len' → logprob: -5.956753730773926
    9. ' return' → logprob: -5.956753730773926
    10. '   ' → logprob: -6.831753730773926

Token 2979: ' any' (ID: 1062)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.30438217520713806
    2. 'min' → logprob: -1.8043822050094604
    3. ' next' → logprob: -2.429382085800171
    4. '(next' → logprob: -5.80438232421875
    5. ' min' → logprob: -5.92938232421875
    6. 'dfs' → logprob: -6.17938232421875
    7. 'minimal' → logprob: -6.92938232421875
    8. '(min' → logprob: -7.17938232421875
    9. ' minimal' → logprob: -9.55438232421875
    10. 'list' → logprob: -9.55438232421875

Token 2980: ' form' (ID: 1625)
  Prédit: '(next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(next' → logprob: -0.08943796157836914
    2. '(min' → logprob: -2.714437961578369
    3. '(x' → logprob: -5.714437961578369
    4. '(list' → logprob: -5.714437961578369
    5. '(expr' → logprob: -5.839437961578369
    6. '(d' → logprob: -5.964437961578369
    7. 'next' → logprob: -6.339437961578369
    8. '({' → logprob: -6.964437961578369
    9. '(' → logprob: -7.089437961578369
    10. 'min' → logprob: -7.214437961578369

Token 2981: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6315287947654724
    2. '(next' → logprob: -1.7565288543701172
    3. '(min' → logprob: -1.7565288543701172
    4. 'return' → logprob: -2.756528854370117
    5. 'next' → logprob: -3.756528854370117
    6. '(len' → logprob: -4.631528854370117
    7. 'min' → logprob: -4.881528854370117
    8. '(' → logprob: -5.881528854370117
    9. ' next' → logprob: -6.006528854370117
    10. '(return' → logprob: -6.006528854370117

Token 2982: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006094926968216896
    2. 'return' → logprob: -5.256094932556152
    3. 'tokens' → logprob: -8.381094932556152
    4. '```' → logprob: -8.631094932556152
    5. ' return' → logprob: -8.756094932556152
    6. 'result' → logprob: -9.381094932556152
    7. '   ' → logprob: -9.631094932556152
    8. 'bits' → logprob: -9.756094932556152
    9. '
' → logprob: -10.881094932556152
    10. '[' → logprob: -11.756094932556152

Token 2983: ' minimal' (ID: 19957)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.32195666432380676
    2. 'next' → logprob: -1.3219566345214844
    3. 'min' → logprob: -5.071956634521484
    4. '   ' → logprob: -6.821956634521484
    5. '       ' → logprob: -8.071956634521484
    6. ' next' → logprob: -8.071956634521484
    7. '```' → logprob: -8.321956634521484
    8. 'list' → logprob: -8.446956634521484
    9. ' return' → logprob: -9.071956634521484
    10. 'result' → logprob: -10.696956634521484

Token 2984: '_forms' (ID: 176505)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -1.0328211784362793
    2. '(bits' → logprob: -1.0328211784362793
    3. '(next' → logprob: -2.9078211784362793
    4. '(' → logprob: -3.2828211784362793
    5. ' =' → logprob: -3.4078211784362793
    6. '(forms' → logprob: -3.6578211784362793
    7. '(len' → logprob: -3.7828211784362793
    8. '(expr' → logprob: -3.9078211784362793
    9. '.pop' → logprob: -4.032821178436279
    10. '_forms' → logprob: -4.407821178436279

Token 2985: ' =' (ID: 314)
  Prédit: '(bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bits' → logprob: -0.35595473647117615
    2. '(' → logprob: -2.230954647064209
    3. '(min' → logprob: -3.105954647064209
    4. '=' → logprob: -3.230954647064209
    5. ' =' → logprob: -3.355954647064209
    6. '(tokens' → logprob: -3.855954647064209
    7. '(
' → logprob: -4.230954647064209
    8. '[' → logprob: -4.605954647064209
    9. '(expr' → logprob: -4.605954647064209
    10. '(next' → logprob: -6.355954647064209

Token 2986: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.0019330393988639116
    2. ' dfs' → logprob: -6.2519330978393555
    3. '       ' → logprob: -13.001933097839355
    4. 'df' → logprob: -13.876933097839355
    5. 'dfa' → logprob: -15.126933097839355
    6. 'd' → logprob: -15.251933097839355
    7. 'self' → logprob: -15.626933097839355
    8. '           ' → logprob: -16.00193214416504
    9. 'DFS' → logprob: -16.37693214416504
    10. '```' → logprob: -16.87693214416504

Token 2987: '(tt' (ID: 90971)
  Prédit: '(tt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tt' → logprob: -0.14294539391994476
    2. 'tt' → logprob: -2.0179452896118164
    3. 'Truth' → logprob: -8.892945289611816
    4. '(expr' → logprob: -10.017945289611816
    5. ' tt' → logprob: -10.642945289611816
    6. '(' → logprob: -10.642945289611816
    7. 'expr' → logprob: -11.392945289611816
    8. 'truth' → logprob: -11.642945289611816
    9. '(t' → logprob: -11.767945289611816
    10. '_tt' → logprob: -12.642945289611816

Token 2988: '.bits' (ID: 89914)
  Prédit: '.bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bits' → logprob: -7.3458322731312364e-06
    2. ').' → logprob: -13.375007629394531
    3. ' .' → logprob: -13.500007629394531
    4. '.' → logprob: -13.625007629394531
    5. 'bits' → logprob: -13.875007629394531
    6. '.b' → logprob: -14.000007629394531
    7. '(bits' → logprob: -14.125007629394531
    8. ')' → logprob: -15.000007629394531
    9. '.bit' → logprob: -15.375007629394531
    10. '   ' → logprob: -17.12500762939453

Token 2989: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010502384044229984
    2. ')
' → logprob: -4.635502338409424
    3. ')[' → logprob: -8.010502815246582
    4. '[' → logprob: -8.135502815246582
    5. ',' → logprob: -10.260502815246582
    6. ')`' → logprob: -11.135502815246582
    7. '.pop' → logprob: -11.260502815246582
    8. '))' → logprob: -11.510502815246582
    9. ').' → logprob: -11.760502815246582
    10. '       ' → logprob: -12.010502815246582

Token 2990: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47463589906692505
    2. 'return' → logprob: -0.974635899066925
    3. ' return' → logprob: -7.599636077880859
    4. '   ' → logprob: -10.97463607788086
    5. '```' → logprob: -11.47463607788086
    6. '[' → logprob: -11.72463607788086
    7. ':return' → logprob: -12.59963607788086
    8. '_return' → logprob: -12.72463607788086
    9. '{return' → logprob: -12.84963607788086
    10. ')return' → logprob: -13.22463607788086

Token 2991: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.000442351185483858
    2. 'min' → logprob: -8.000442504882812
    3. '       ' → logprob: -9.250442504882812
    4. ' return' → logprob: -11.750442504882812
    5. '   ' → logprob: -13.125442504882812
    6. '```' → logprob: -14.375442504882812
    7. '`' → logprob: -16.875442504882812
    8. 'len' → logprob: -17.250442504882812
    9. 'max' → logprob: -17.250442504882812
    10. 'next' → logprob: -17.375442504882812

Token 2992: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -2.339278580620885e-06
    2. 'len' → logprob: -13.250001907348633
    3. ' min' → logprob: -14.500001907348633
    4. '(min' → logprob: -20.750001907348633
    5. 'max' → logprob: -21.500001907348633
    6. 'minimal' → logprob: -21.500001907348633
    7. 'minimum' → logprob: -22.375001907348633
    8. '	min' → logprob: -22.625001907348633
    9. '[min' → logprob: -23.125001907348633
    10. '_min' → logprob: -23.625001907348633

Token 2993: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -5.1689596148207784e-05
    2. 'len' → logprob: -10.250051498413086
    3. '(min' → logprob: -11.250051498413086
    4. '(map' → logprob: -13.000051498413086
    5. '[len' → logprob: -13.875051498413086
    6. '(length' → logprob: -17.500051498413086
    7. 'map' → logprob: -18.625051498413086
    8. '=len' → logprob: -18.625051498413086
    9. ' len' → logprob: -18.750051498413086
    10. '	len' → logprob: -18.875051498413086

Token 2994: '(f' (ID: 1526)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.0005439769593067467
    2. 'minimal' → logprob: -8.000543594360352
    3. '(x' → logprob: -8.625543594360352
    4. 'min' → logprob: -10.750543594360352
    5. 'x' → logprob: -12.500543594360352
    6. '[min' → logprob: -12.875543594360352
    7. ' minimal' → logprob: -15.375543594360352
    8. '(list' → logprob: -15.750543594360352
    9. 'Minimal' → logprob: -15.875543594360352
    10. '	min' → logprob: -16.00054359436035

Token 2995: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2320568561553955
    2. 'or' → logprob: -1.7320568561553955
    3. 'orm' → logprob: -3.6070568561553955
    4. 'for' → logprob: -6.482056617736816
    5. '(f' → logprob: -6.982056617736816
    6. '(x' → logprob: -8.857056617736816
    7. 'x' → logprob: -9.107056617736816
    8. 's' → logprob: -9.482056617736816
    9. ')
' → logprob: -10.357056617736816
    10. ' for' → logprob: -10.357056617736816

Token 2996: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.028454003855586052
    2. ' for' → logprob: -4.028453826904297
    3. '(min' → logprob: -4.903453826904297
    4. ')' → logprob: -6.153453826904297
    5. '(f' → logprob: -7.528453826904297
    6. 'min' → logprob: -9.153453826904297
    7. 'minimal' → logprob: -11.028453826904297
    8. 'f' → logprob: -11.153453826904297
    9. '()' → logprob: -12.028453826904297
    10. '(for' → logprob: -12.153453826904297

Token 2997: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.676292231422849e-05
    2. ' f' → logprob: -11.000017166137695
    3. '	f' → logprob: -18.500017166137695
    4. '_f' → logprob: -19.375017166137695
    5. '$f' → logprob: -19.375017166137695
    6. ' in' → logprob: -19.500017166137695
    7. '<f' → logprob: -20.125017166137695
    8. ' ' → logprob: -20.250017166137695
    9. '
' → logprob: -20.750017166137695
    10. 'in' → logprob: -20.875017166137695

Token 2998: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01452050544321537
    2. 'in' → logprob: -4.264520645141602
    3. 'f' → logprob: -8.014520645141602
    4. 'n' → logprob: -11.389520645141602
    5. ' f' → logprob: -11.514520645141602
    6. ' ' → logprob: -13.514520645141602
    7. 'i' → logprob: -13.764520645141602
    8. ' ' → logprob: -14.014520645141602
    9. 's' → logprob: -15.139520645141602
    10. '_' → logprob: -15.139520645141602

Token 2999: ' minimal' (ID: 19957)
  Prédit: 'minimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minimal' → logprob: -2.7610454708337784e-05
    2. ' minimal' → logprob: -10.500027656555176
    3. 'min' → logprob: -17.62502670288086
    4. 'm' → logprob: -20.00002670288086
    5. '
' → logprob: -20.50002670288086
    6. '```' → logprob: -20.75002670288086
    7. '   ' → logprob: -21.00002670288086
    8. 'f' → logprob: -21.75002670288086
    9. 'Minimal' → logprob: -22.12502670288086
    10. '`' → logprob: -22.37502670288086

Token 3000: '_forms' (ID: 176505)
  Prédit: '_forms'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_forms' → logprob: -1.0280383548888494e-06
    2. '_form' → logprob: -14.250000953674316
    3. 'forms' → logprob: -16.125001907348633
    4. '_formats' → logprob: -16.500001907348633
    5. '_' → logprob: -17.375001907348633
    6. 's' → logprob: -17.375001907348633
    7. '(forms' → logprob: -18.500001907348633
    8. '```' → logprob: -18.500001907348633
    9. '\' → logprob: -18.875001907348633
    10. '_models' → logprob: -19.000001907348633

Token 3001: ')


' (ID: 7861)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3002: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.649868369102478
    2. 'def' → logprob: -1.149868369102478
    3. '<|end|>' → logprob: -2.0248684883117676
    4. ')' → logprob: -4.149868488311768
    5. '.' → logprob: -4.899868488311768
    6. '```' → logprob: -6.649868488311768
    7. '   ' → logprob: -6.774868488311768
    8. ' def' → logprob: -7.399868488311768
    9. '<|end|>' → logprob: -7.399868488311768
    10. '
' → logprob: -8.27486801147461

Token 3003: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.062019217759370804
    2. 'main' → logprob: -2.937019109725952
    3. ' test' → logprob: -5.937019348144531
    4. '__' → logprob: -6.937019348144531
    5. ' run' → logprob: -7.062019348144531
    6. ' parse' → logprob: -7.187019348144531
    7. ' compress' → logprob: -7.312019348144531
    8. ' solve' → logprob: -8.062019348144531
    9. 'compress' → logprob: -8.437019348144531
    10. 'run' → logprob: -8.812019348144531

Token 3004: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.002192137064412236
    2. '():
' → logprob: -6.12719202041626
    3. '()' → logprob: -12.502192497253418
    4. ' ():' → logprob: -13.377192497253418
    5. ':' → logprob: -14.127192497253418
    6. '():
' → logprob: -14.252192497253418
    7. '():

' → logprob: -16.1271915435791
    8. 'def' → logprob: -16.2521915435791
    9. '(' → logprob: -16.3771915435791
    10. '().' → logprob: -17.1271915435791

Token 3005: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005741186905652285
    2. 'import' → logprob: -5.255741119384766
    3. '```' → logprob: -8.005741119384766
    4. 's' → logprob: -9.255741119384766
    5. 'input' → logprob: -10.255741119384766
    6. ' import' → logprob: -11.380741119384766
    7. '   ' → logprob: -11.630741119384766
    8. 'def' → logprob: -11.755741119384766
    9. '       ' → logprob: -13.255741119384766
    10. '(' → logprob: -13.630741119384766

Token 3006: ' compressor' (ID: 78102)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.05599498376250267
    2. '   ' → logprob: -3.055994987487793
    3. ' import' → logprob: -4.930994987487793
    4. 'n' → logprob: -9.180994987487793
    5. 't' → logprob: -11.430994987487793
    6. '```' → logprob: -11.430994987487793
    7. 'for' → logprob: -11.555994987487793
    8. ' n' → logprob: -11.930994987487793
    9. '	import' → logprob: -12.180994987487793
    10. 's' → logprob: -12.430994987487793

Token 3007: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1003129854798317
    2. '.com' → logprob: -2.6003129482269287
    3. '.compress' → logprob: -4.350313186645508
    4. '   ' → logprob: -6.475313186645508
    5. '.Com' → logprob: -6.725313186645508
    6. '(com' → logprob: -7.350313186645508
    7. '.mainloop' → logprob: -7.350313186645508
    8. '().' → logprob: -7.350313186645508
    9. '.min' → logprob: -7.475313186645508
    10. '.comp' → logprob: -7.600313186645508

Token 3008: ' Compressor' (ID: 186511)
  Prédit: 'Com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Com' → logprob: -2.451116051815916e-05
    2. ' Compressor' → logprob: -11.125024795532227
    3. 'Compress' → logprob: -12.000024795532227
    4. 'Compressed' → logprob: -13.375024795532227
    5. ' Com' → logprob: -14.125024795532227
    6. '_Com' → logprob: -14.375024795532227
    7. 'Compression' → logprob: -15.000024795532227
    8. '`' → logprob: -15.875024795532227
    9. 'compress' → logprob: -15.875024795532227
    10. 'Comp' → logprob: -17.375024795532227

Token 3009: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005530327325686812
    2. '
' → logprob: -8.500553131103516
    3. '```' → logprob: -8.875553131103516
    4. 'while' → logprob: -9.500553131103516
    5. 'input' → logprob: -10.125553131103516
    6. 'import' → logprob: -10.250553131103516
    7. 'for' → logprob: -11.125553131103516
    8. '    
' → logprob: -11.250553131103516
    9. 's' → logprob: -11.625553131103516
    10. ' while' → logprob: -11.875553131103516

Token 3010: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03851430490612984
    2. 'import' → logprob: -3.2885143756866455
    3. 'while' → logprob: -8.163514137268066
    4. ' import' → logprob: -9.538514137268066
    5. '```' → logprob: -9.538514137268066
    6. ' while' → logprob: -10.788514137268066
    7. 'for' → logprob: -11.038514137268066
    8. ' for' → logprob: -12.788514137268066
    9. 'input' → logprob: -13.538514137268066
    10. 's' → logprob: -14.413514137268066

Token 3011: ' while' (ID: 2049)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.007254838477820158
    2. '   ' → logprob: -5.007254600524902
    3. 'for' → logprob: -7.757254600524902
    4. 'while' (adapté à ' while') → logprob: -9.257254600524902
    5. ' import' → logprob: -11.632254600524902
    6. '```' → logprob: -12.132254600524902
    7. 'n' → logprob: -14.507254600524902
    8. 'try' → logprob: -14.632254600524902
    9. 'expr' → logprob: -15.007254600524902
    10. 'from' → logprob: -15.632254600524902

Token 3012: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.12726037204265594
    2. ' True' → logprob: -2.127260446548462
    3. '   ' → logprob: -8.752260208129883
    4. '(True' → logprob: -8.752260208129883
    5. 'line' → logprob: -11.377260208129883
    6. ' line' → logprob: -13.377260208129883
    7. '1' → logprob: -13.502260208129883
    8. 'true' → logprob: -14.127260208129883
    9. '
' → logprob: -14.627260208129883
    10. ' ' → logprob: -15.502260208129883

Token 3013: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012714005075395107
    2. ':' → logprob: -5.01271390914917
    3. ':
' → logprob: -5.38771390914917
    4. '():
' → logprob: -7.26271390914917
    5. '():' → logprob: -7.76271390914917
    6. '```' → logprob: -9.762714385986328
    7. '(' → logprob: -9.887714385986328
    8. '   ' → logprob: -10.012714385986328
    9. ',' → logprob: -10.512714385986328
    10. '(line' → logprob: -10.887714385986328

Token 3014: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.76628842484206e-05
    2. 'try' → logprob: -10.125067710876465
    3. '   ' → logprob: -10.750067710876465
    4. '           ' → logprob: -13.125067710876465
    5. ' try' → logprob: -13.125067710876465
    6. '```' → logprob: -13.250067710876465
    7. ' line' → logprob: -15.875067710876465
    8. '	try' → logprob: -16.62506675720215
    9. '	   ' → logprob: -17.00006675720215
    10. 'line' → logprob: -17.12506675720215

Token 3015: ' line' (ID: 2543)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.26300370693206787
    2. '   ' → logprob: -1.5130037069320679
    3. '       ' → logprob: -4.513003826141357
    4. 'line' (adapté à ' line') → logprob: -10.3880033493042
    5. ' try' → logprob: -11.5130033493042
    6. '           ' → logprob: -12.1380033493042
    7. '```' → logprob: -13.8880033493042
    8. '	try' → logprob: -14.3880033493042
    9. 's' → logprob: -15.3880033493042
    10. 'Try' → logprob: -16.263004302978516

Token 3016: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007662582211196423
    2. '=' → logprob: -4.882662773132324
    3. '       ' → logprob: -10.507662773132324
    4. '()' → logprob: -11.757662773132324
    5. '=line' → logprob: -11.757662773132324
    6. '   ' → logprob: -12.132662773132324
    7. ' ==' → logprob: -12.757662773132324
    8. '=input' → logprob: -13.507662773132324
    9. '           ' → logprob: -14.007662773132324
    10. '==' → logprob: -14.132662773132324

Token 3017: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06199973449110985
    2. ' input' → logprob: -2.811999797821045
    3. '(input' → logprob: -10.686999320983887
    4. '       ' → logprob: -11.936999320983887
    5. '=input' → logprob: -13.561999320983887
    6. '   ' → logprob: -15.061999320983887
    7. '```' → logprob: -15.686999320983887
    8. 'import' → logprob: -15.686999320983887
    9. 'inp' → logprob: -15.811999320983887
    10. '
' → logprob: -16.187000274658203

Token 3018: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1036648154258728
    2. '().' → logprob: -2.4786648750305176
    3. '()
' → logprob: -4.228664875030518
    4. '(' → logprob: -11.97866439819336
    5. '())' → logprob: -12.10366439819336
    6. '()

' → logprob: -12.22866439819336
    7. '=' → logprob: -12.22866439819336
    8. '('' → logprob: -13.10366439819336
    9. '()\' → logprob: -13.10366439819336
    10. '();' → logprob: -13.22866439819336

Token 3019: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00440483633428812
    2. ' if' → logprob: -5.7544050216674805
    3. 'if' → logprob: -6.7544050216674805
    4. '   ' → logprob: -10.25440502166748
    5. '           ' → logprob: -11.50440502166748
    6. '<|end|>' → logprob: -12.25440502166748
    7. '```' → logprob: -13.12940502166748
    8. '	if' → logprob: -13.50440502166748
    9. '.strip' → logprob: -14.00440502166748
    10. ',' → logprob: -14.12940502166748

Token 3020: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.01770171895623207
    2. '       ' → logprob: -4.517701625823975
    3. ' if' → logprob: -5.017701625823975
    4. 'line' → logprob: -12.017702102661133
    5. '	if' → logprob: -12.142702102661133
    6. '   ' → logprob: -15.267702102661133
    7. ';if' → logprob: -15.767702102661133
    8. 'try' → logprob: -16.392702102661133
    9. '[line' → logprob: -16.392702102661133
    10. '           ' → logprob: -16.892702102661133

Token 3021: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.9469794631004333
    2. ' line' → logprob: -0.9469794631004333
    3. 'line' → logprob: -1.6969795227050781
    4. 'not' → logprob: -3.196979522705078
    5. '   ' → logprob: -10.696979522705078
    6. '#line' → logprob: -10.696979522705078
    7. '(line' → logprob: -12.321979522705078
    8. '	line' → logprob: -12.696979522705078
    9. ' ' → logprob: -12.946979522705078
    10. '[line' → logprob: -14.571979522705078

Token 3022: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4021395444869995
    2. ' ==' → logprob: -1.2771395444869995
    3. '.strip' → logprob: -3.277139663696289
    4. '()==' → logprob: -4.652139663696289
    5. '().' → logprob: -5.777139663696289
    6. '.' → logprob: -7.402139663696289
    7. '()' → logprob: -7.527139663696289
    8. '       ' → logprob: -7.527139663696289
    9. '```' → logprob: -9.902139663696289
    10. '           ' → logprob: -10.527139663696289

Token 3023: ' '.' (ID: 12662)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.21405930817127228
    2. '""' → logprob: -1.9640593528747559
    3. '"' → logprob: -3.714059352874756
    4. ''' → logprob: -3.964059352874756
    5. '"":' → logprob: -4.714059352874756
    6. '''
' → logprob: -10.464058876037598
    7. ''ex' → logprob: -11.089058876037598
    8. ' '':
' → logprob: -11.464058876037598
    9. ' "":
' → logprob: -12.214058876037598
    10. '":' → logprob: -12.464058876037598

Token 3024: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.34484192728996277
    2. '\n' → logprob: -1.4698419570922852
    3. '':' → logprob: -3.719841957092285
    4. ''):
' → logprob: -4.094841957092285
    5. ''' → logprob: -4.219841957092285
    6. '.' → logprob: -6.219841957092285
    7. ''\' → logprob: -6.844841957092285
    8. ''.' → logprob: -7.469841957092285
    9. '''' → logprob: -7.719841957092285
    10. '')' → logprob: -8.094841957092285

Token 3025: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001946844975464046
    2. '       ' → logprob: -6.251946926116943
    3. '		' → logprob: -11.376946449279785
    4. '	       ' → logprob: -13.251946449279785
    5. '               ' → logprob: -13.501946449279785
    6. '   ' → logprob: -13.876946449279785
    7. 'break' → logprob: -14.251946449279785
    8. '	   ' → logprob: -14.626946449279785
    9. '          ' → logprob: -15.251946449279785
    10. ' break' → logprob: -15.376946449279785

Token 3026: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.3180589973926544
    2. '       ' → logprob: -1.818058967590332
    3. '           ' → logprob: -2.318058967590332
    4. '	break' → logprob: -5.193058967590332
    5. ' break' → logprob: -5.318058967590332
    6. '               ' → logprob: -7.068058967590332
    7. '   ' → logprob: -9.443058967590332
    8. '	       ' → logprob: -9.443058967590332
    9. 'return' → logprob: -9.943058967590332
    10. '_break' → logprob: -9.943058967590332

Token 3027: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.019237768370658e-05
    2. '   ' → logprob: -9.625090599060059
    3. '<|end|>' → logprob: -11.375090599060059
    4. '        
' → logprob: -11.875090599060059
    5. '           ' → logprob: -13.000090599060059
    6. '```' → logprob: -13.750090599060059
    7. '
' → logprob: -14.125090599060059
    8. '<|end|>' → logprob: -15.375090599060059
    9. ',' → logprob: -15.500090599060059
    10. '    
' → logprob: -15.625090599060059

Token 3028: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00011081460979767144
    2. '   ' → logprob: -9.125110626220703
    3. '           ' → logprob: -14.000110626220703
    4. '```' → logprob: -14.875110626220703
    5. '<|end|>' → logprob: -15.000110626220703
    6. '        
' → logprob: -16.000110626220703
    7. 'try' → logprob: -17.000110626220703
    8. '
' → logprob: -17.375110626220703
    9. '	' → logprob: -17.500110626220703
    10. ',' → logprob: -17.750110626220703

Token 3029: ' parser' (ID: 14216)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.6476852297782898
    2. '   ' → logprob: -0.8976852297782898
    3. '       ' → logprob: -3.1476852893829346
    4. 'try' → logprob: -3.6476852893829346
    5. ' expr' → logprob: -8.522685050964355
    6. 'parser' (adapté à ' parser') → logprob: -11.522685050964355
    7. 'expression' → logprob: -11.647685050964355
    8. ' try' → logprob: -12.272685050964355
    9. 'parsed' → logprob: -13.147685050964355
    10. '_expr' → logprob: -13.897685050964355

Token 3030: ' =' (ID: 314)
  Prédit: '.parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -0.2708587050437927
    2. '.' → logprob: -1.7708587646484375
    3. ' =' → logprob: -3.8958587646484375
    4. '().' → logprob: -4.6458587646484375
    5. '=' → logprob: -4.7708587646484375
    6. '.parser' → logprob: -5.2708587646484375
    7. '_parser' → logprob: -5.5208587646484375
    8. '(Parser' → logprob: -5.5208587646484375
    9. '.Parser' → logprob: -6.0208587646484375
    10. '=parse' → logprob: -6.2708587646484375

Token 3031: ' Parser' (ID: 44901)
  Prédit: 'Parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -0.0005545823951251805
    2. ' Parser' → logprob: -7.50055456161499
    3. '(Parser' → logprob: -13.500555038452148
    4. '.Parser' → logprob: -15.875555038452148
    5. '   ' → logprob: -17.12555503845215
    6. '_parser' → logprob: -18.50055503845215
    7. ' parser' → logprob: -19.62555503845215
    8. 'parser' → logprob: -20.62555503845215
    9. 'Parsing' → logprob: -21.50055503845215
    10. '       ' → logprob: -22.12555503845215

Token 3032: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -2.868328920158092e-05
    2. 'line' → logprob: -10.625028610229492
    3. '[line' → logprob: -12.750028610229492
    4. '#line' → logprob: -14.625028610229492
    5. '=line' → logprob: -14.625028610229492
    6. ' line' → logprob: -14.875028610229492
    7. '(' → logprob: -16.500028610229492
    8. '       ' → logprob: -16.750028610229492
    9. ',line' → logprob: -17.250028610229492
    10. '(Line' → logprob: -17.500028610229492

Token 3033: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12979505956172943
    2. ')
' → logprob: -2.1297950744628906
    3. '       ' → logprob: -6.129795074462891
    4. ').' → logprob: -8.25479507446289
    5. '.parse' → logprob: -8.50479507446289
    6. '   ' → logprob: -8.75479507446289
    7. ')
' → logprob: -11.00479507446289
    8. '(' → logprob: -12.12979507446289
    9. '(Parser' → logprob: -12.12979507446289
    10. '(line' → logprob: -12.50479507446289

Token 3034: '       ' (ID: 309)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.3869297504425049
    2. '       ' → logprob: -1.1369297504425049
    3. ' expr' → logprob: -10.636929512023926
    4. 'try' → logprob: -11.636929512023926
    5. '   ' → logprob: -11.886929512023926
    6. '_expr' → logprob: -11.886929512023926
    7. '```' → logprob: -11.886929512023926
    8. 'express' → logprob: -13.136929512023926
    9. 'expression' → logprob: -13.761929512023926
    10. '(expr' → logprob: -14.386929512023926

Token 3035: ' expr' (ID: 30206)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' (adapté à ' expr') → logprob: -3.9292415749514475e-05
    2. 'try' → logprob: -10.750039100646973
    3. '       ' → logprob: -11.000039100646973
    4. ' expr' → logprob: -14.250039100646973
    5. 'expression' → logprob: -15.500039100646973
    6. 'express' → logprob: -16.12504005432129
    7. 'ex' → logprob: -16.37504005432129
    8. 'exp' → logprob: -17.87504005432129
    9. 'result' → logprob: -18.12504005432129
    10. '_expr' → logprob: -18.37504005432129

Token 3036: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519332468509674
    2. '=' → logprob: -1.501933217048645
    3. '=parse' → logprob: -12.876933097839355
    4. '   ' → logprob: -13.876933097839355
    5. ')' → logprob: -15.501933097839355
    6. '       ' → logprob: -16.501934051513672
    7. 'parsed' → logprob: -16.876934051513672
    8. '	' → logprob: -17.001934051513672
    9. '    ' → logprob: -17.251934051513672
    10. ' ' → logprob: -17.501934051513672

Token 3037: ' parser' (ID: 14216)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parser' → logprob: -9.627176768844947e-05
    2. ' parser' → logprob: -9.250096321105957
    3. '(parser' → logprob: -16.37509536743164
    4. '	parser' → logprob: -17.62509536743164
    5. '   ' → logprob: -17.75009536743164
    6. 'expr' → logprob: -18.00009536743164
    7. 'parsed' → logprob: -18.37509536743164
    8. 'parse' → logprob: -19.00009536743164
    9. '.parser' → logprob: -19.00009536743164
    10. 'Parser' → logprob: -20.12509536743164

Token 3038: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -0.00016671013145241886
    2. 'parse' → logprob: -8.750166893005371
    3. '_parse' → logprob: -12.625166893005371
    4. '=parse' → logprob: -12.750166893005371
    5. '.' → logprob: -13.250166893005371
    6. '	parse' → logprob: -16.250165939331055
    7. '(parse' → logprob: -17.000165939331055
    8. '.Parse' → logprob: -17.250165939331055
    9. ' parse' → logprob: -18.000165939331055
    10. ' .' → logprob: -19.000165939331055

Token 3039: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003850325592793524
    2. '
' → logprob: -8.375385284423828
    3. '   ' → logprob: -10.000385284423828
    4. 'minimal' → logprob: -10.500385284423828
    5. 'com' → logprob: -10.875385284423828
    6. ' minimal' → logprob: -11.250385284423828
    7. 'compressed' → logprob: -11.375385284423828
    8. ',' → logprob: -11.500385284423828
    9. 'min' → logprob: -11.625385284423828
    10. '        
' → logprob: -12.250385284423828

Token 3040: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12782764434814453
    2. '   ' → logprob: -2.3778276443481445
    3. 'length' → logprob: -3.8778276443481445
    4. 'print' → logprob: -5.2528276443481445
    5. ' length' → logprob: -7.3778276443481445
    6. '```' → logprob: -8.252827644348145
    7. 'result' → logprob: -8.752827644348145
    8. 'len' → logprob: -9.002827644348145
    9. ' print' → logprob: -10.002827644348145
    10. 'size' → logprob: -10.002827644348145

Token 3041: ' result' (ID: 1534)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.19138476252555847
    2. 'length' → logprob: -1.9413847923278809
    3. 'res' → logprob: -4.566384792327881
    4. 'min' → logprob: -4.566384792327881
    5. 'result' (adapté à ' result') → logprob: -5.191384792327881
    6. '       ' → logprob: -6.191384792327881
    7. 'ans' → logprob: -6.941384792327881
    8. 'minimal' → logprob: -7.191384792327881
    9. 'size' → logprob: -8.566384315490723
    10. ' print' → logprob: -9.191384315490723

Token 3042: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10519104450941086
    2. '=' → logprob: -2.3551909923553467
    3. '_length' → logprob: -6.105191230773926
    4. '_len' → logprob: -7.105191230773926
    5. '=result' → logprob: -7.605191230773926
    6. '_result' → logprob: -7.855191230773926
    7. '       ' → logprob: -7.980191230773926
    8. '   ' → logprob: -8.480191230773926
    9. '_lengths' → logprob: -8.855191230773926
    10. '=len' → logprob: -9.230191230773926

Token 3043: ' compressor' (ID: 78102)
  Prédit: 'compress'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compress' → logprob: -0.001936485292389989
    2. ' compressor' → logprob: -6.251936435699463
    3. ' compress' → logprob: -12.001936912536621
    4. 'com' → logprob: -13.751936912536621
    5. '   ' → logprob: -14.751936912536621
    6. 'compressed' → logprob: -15.251936912536621
    7. ' compressors' → logprob: -17.251935958862305
    8. 'compl' → logprob: -17.751935958862305
    9. 'compression' → logprob: -18.376935958862305
    10. '       ' → logprob: -18.501935958862305

Token 3044: '.min' (ID: 8649)
  Prédit: '.min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.min' → logprob: -0.00014454191841650754
    2. 'min' → logprob: -8.875144958496094
    3. '_min' → logprob: -13.625144958496094
    4. ',min' → logprob: -14.250144958496094
    5. '	min' → logprob: -14.625144958496094
    6. '=min' → logprob: -14.625144958496094
    7. ' .' → logprob: -14.750144958496094
    8. '   ' → logprob: -14.875144958496094
    9. ':min' → logprob: -15.375144958496094
    10. '.m' → logprob: -15.500144958496094

Token 3045: 'imize' (ID: 16368)
  Prédit: 'imize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imize' → logprob: -8.41866585687967e-06
    2. 'ize' → logprob: -12.125008583068848
    3. '```' → logprob: -13.500008583068848
    4. '``' → logprob: -14.625008583068848
    5. 'imized' → logprob: -14.750008583068848
    6. 'm' → logprob: -16.00000762939453
    7. '   ' → logprob: -16.12500762939453
    8. 'imal' → logprob: -16.25000762939453
    9. 'im' → logprob: -16.87500762939453
    10. '_' → logprob: -16.87500762939453

Token 3046: '(expr' (ID: 78746)
  Prédit: '(expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(expr' → logprob: -1.9361264946837764e-07
    2. '(expression' → logprob: -15.875
    3. 'expr' → logprob: -17.625
    4. '(express' → logprob: -17.625
    5. ' (' → logprob: -18.0
    6. '(result' → logprob: -18.25
    7. '(' → logprob: -19.375
    8. '(exc' → logprob: -19.5
    9. '(EXPR' → logprob: -19.5
    10. '(obj' → logprob: -19.625

Token 3047: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.7374718189239502
    2. ')' → logprob: -0.9874718189239502
    3. '       ' → logprob: -2.61247181892395
    4. '())
' → logprob: -3.48747181892395
    5. '()
' → logprob: -3.61247181892395
    6. '())' → logprob: -4.737471580505371
    7. '()' → logprob: -4.737471580505371
    8. '   ' → logprob: -8.362471580505371
    9. '(len' → logprob: -8.737471580505371
    10. ' )
' → logprob: -8.862471580505371

Token 3048: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023558272048830986
    2. 'print' → logprob: -3.7735583782196045
    3. '   ' → logprob: -8.148558616638184
    4. '```' → logprob: -11.273558616638184
    5. ' print' → logprob: -11.523558616638184
    6. '<|end|>' → logprob: -14.773558616638184
    7. '           ' → logprob: -15.773558616638184
    8. '	print' → logprob: -16.273557662963867
    9. ' ' → logprob: -16.648557662963867
    10. '
' → logprob: -16.773557662963867

Token 3049: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: 0.0
    2. ' print' → logprob: -17.75
    3. '       ' → logprob: -19.25
    4. '```' → logprob: -22.375
    5. '
' → logprob: -23.75
    6. '   ' → logprob: -24.5
    7. '``' → logprob: -25.125
    8. '#print' → logprob: -25.5
    9. '	print' → logprob: -26.125
    10. '.print' → logprob: -26.625

Token 3050: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.001170225441455841
    2. 'result' → logprob: -6.7511701583862305
    3. '(f' → logprob: -17.376171112060547
    4. ' result' → logprob: -19.001171112060547
    5. '[result' → logprob: -19.001171112060547
    6. '(len' → logprob: -19.251171112060547
    7. '=result' → logprob: -19.251171112060547
    8. '(' → logprob: -19.376171112060547
    9. '```' → logprob: -20.001171112060547
    10. '(res' → logprob: -20.376171112060547

Token 3051: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.137130498653278e-05
    2. '   ' → logprob: -10.000081062316895
    3. '       ' → logprob: -11.250081062316895
    4. '())' → logprob: -11.250081062316895
    5. '`)' → logprob: -12.875081062316895
    6. '()' → logprob: -13.000081062316895
    7. ')
' → logprob: -13.125081062316895
    8. '')' → logprob: -13.500081062316895
    9. ')`' → logprob: -13.875081062316895
    10. '")' → logprob: -14.875081062316895

Token 3052: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3053: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.048590436577796936
    2. ' __' → logprob: -3.0485904216766357
    3. 'name' → logprob: -13.048590660095215
    4. '_name' → logprob: -15.048590660095215
    5. 'True' → logprob: -15.423590660095215
    6. '___' → logprob: -15.798590660095215
    7. '```' → logprob: -16.2985897064209
    8. ' True' → logprob: -16.7985897064209
    9. ' name' → logprob: -17.2985897064209
    10. '_' → logprob: -17.9235897064209

Token 3054: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2921736240386963
    2. '==' → logprob: -1.4171736240386963
    3. ' ==' → logprob: -4.667173385620117
    4. '=="' → logprob: -7.292173385620117
    5. '=='' → logprob: -7.917173385620117
    6. 'if' → logprob: -8.292173385620117
    7. '```' → logprob: -9.167173385620117
    8. 'name' → logprob: -9.542173385620117
    9. '==
' → logprob: -10.292173385620117
    10. '=' → logprob: -11.292173385620117

Token 3055: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.002701566321775317
    2. '==' → logprob: -6.002701759338379
    3. '__.__' → logprob: -9.127701759338379
    4. ' ==' → logprob: -10.002701759338379
    5. '=="' → logprob: -10.502701759338379
    6. '=='' → logprob: -10.752701759338379
    7. '```' → logprob: -11.752701759338379
    8. '__":
' → logprob: -13.127701759338379
    9. '__
' → logprob: -13.127701759338379
    10. '__':
' → logprob: -13.252701759338379

Token 3056: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.11573059111833572
    2. '=='' → logprob: -2.9907305240631104
    3. ' ==' → logprob: -3.4907305240631104
    4. '__' → logprob: -3.9907305240631104
    5. '=="' → logprob: -4.6157307624816895
    6. '==
' → logprob: -9.240730285644531
    7. '```' → logprob: -10.990730285644531
    8. '.__' → logprob: -11.115730285644531
    9. '['' → logprob: -11.490730285644531
    10. '==='' → logprob: -11.865730285644531

Token 3057: ' "__' (ID: 27367)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.16028830409049988
    2. '"' → logprob: -1.9102883338928223
    3. '__' → logprob: -9.660287857055664
    4. ' '__' → logprob: -15.910287857055664
    5. ' "__' → logprob: -16.410287857055664
    6. '`' → logprob: -16.535287857055664
    7. ''name' → logprob: -17.285287857055664
    8. 'main' → logprob: -17.535287857055664
    9. ''m' → logprob: -18.035287857055664
    10. '('__' → logprob: -18.035287857055664

Token 3058: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.3157227337360382
    2. '__' → logprob: -1.5657227039337158
    3. ''' → logprob: -3.065722703933716
    4. '"' → logprob: -4.190722942352295
    5. 'python' → logprob: -10.815722465515137
    6. ''m' → logprob: -11.690722465515137
    7. ' '__' → logprob: -12.190722465515137
    8. '_main' → logprob: -13.065722465515137
    9. ' "__' → logprob: -13.065722465515137
    10. ' main' → logprob: -13.440722465515137

Token 3059: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.016983304172754288
    2. '__' → logprob: -4.516983509063721
    3. '__':
' → logprob: -5.141983509063721
    4. '==' → logprob: -11.016983032226562
    5. '__:' → logprob: -11.266983032226562
    6. '():
' → logprob: -11.766983032226562
    7. ':' → logprob: -12.016983032226562
    8. '_' → logprob: -12.266983032226562
    9. ':
' → logprob: -12.516983032226562
    10. '.' → logprob: -12.516983032226562

Token 3060: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2994166612625122
    2. '	main' → logprob: -1.4244166612625122
    3. 'main' → logprob: -4.049416542053223
    4. '   ' → logprob: -7.674416542053223
    5. ' main' → logprob: -8.924416542053223
    6. ' ' → logprob: -10.924416542053223
    7. '_main' → logprob: -11.299416542053223
    8. '\t' → logprob: -11.424416542053223
    9. '	Main' → logprob: -11.674416542053223
    10. '   ' → logprob: -11.924416542053223

Token 3061: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -3.547789674485102e-05
    2. 'import' → logprob: -10.250035285949707
    3. ' main' → logprob: -17.750036239624023
    4. '   ' → logprob: -18.500036239624023
    5. '	main' → logprob: -19.375036239624023
    6. 'try' → logprob: -21.375036239624023
    7. '(main' → logprob: -21.625036239624023
    8. 'from' → logprob: -21.750036239624023
    9. '```' → logprob: -22.000036239624023
    10. '_main' → logprob: -22.625036239624023

Token 3062: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 3060
Tokens correctement prédits (1ère position, stricte): 937
Tokens correctement prédits (1ère position, avec adaptation): 1059
Tokens correctement prédits (top 10): 2230
Précision stricte (1ère position): 30.62%
Précision adaptée (1ère position): 34.61%
Précision (top 10): 72.88%
================================================================================
