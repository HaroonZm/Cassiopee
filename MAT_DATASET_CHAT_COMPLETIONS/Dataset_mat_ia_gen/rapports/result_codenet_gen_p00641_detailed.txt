================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:57:58
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)

MOD = 10007

# Fonction pour calculer x^y % mod en log(y)
def mod_pow(x, y, mod):
    result = 1
    base = x % mod
    while y > 0:
        if y & 1:
            result = (result * base) % mod
        base = (base * base) % mod
        y >>= 1
    return result

# Classe pour trouver et union des composantes connexes (Union-Find)
class UnionFind:
    def __init__(self, n):
        self.parent = list(range(n))
        self.rank = [0]*n
        self.size = [1]*n

    def find(self, x):
        while self.parent[x] != x:
            self.parent[x] = self.parent[self.parent[x]]
            x = self.parent[x]
        return x

    def unite(self, x, y):
        x = self.find(x)
        y = self.find(y)
        if x == y:
            return False
        if self.rank[x] < self.rank[y]:
            x, y = y, x
        self.parent[y] = x
        self.size[x] += self.size[y]
        if self.rank[x] == self.rank[y]:
            self.rank[x] += 1
        return True

    def same(self, x, y):
        return self.find(x) == self.find(y)

def solve():
    while True:
        n = int(sys.stdin.readline())
        if n == 0:
            break

        # Lecture des données d'entrée pour chaque famille (les partenaires et couts)
        # On construit la liste des arêtes avec (cout, u, v)
        edges = []
        # Pour vérifier la cohérence des arêtes, on ajoute l'arête entre i et b repeated from i's input
        # Attention indices dans l'entrée semblent 0-based, à vérifier sur exemples

        for i in range(n):
            b0, f0, b1, f1 = map(int, sys.stdin.readline().split())
            edges.append((f0, i, b0))
            edges.append((f1, i, b1))

        # Le graphe est construit via edges
        # On doit trouver les composantes connexes induites par toutes les arêtes
        uf = UnionFind(n)
        for cost, u, v in edges:
            uf.unite(u, v)

        # Découpage du graphe en composantes connexes
        comp_map = {}
        comp_count = 0
        for i in range(n):
            root = uf.find(i)
            if root not in comp_map:
                comp_map[root] = comp_count
                comp_count += 1

        # Collectionner les sommets par composante
        comps = [[] for _ in range(comp_count)]
        for i in range(n):
            comps[comp_map[uf.find(i)]].append(i)

        # Regrouper les arêtes par composante
        # On ne garde que les arêtes internes à une composante
        adj_comp = [[] for _ in range(comp_count)]
        # On construit aussi une structure par composante listant edges : (cost, u', v')
        # où u', v' indices locaux dans la composante
        comp_edges = [[] for _ in range(comp_count)]
        pos_in_comp = [0]*n
        for cid in range(comp_count):
            for idx, v in enumerate(comps[cid]):
                pos_in_comp[v] = idx

        for cost, u, v in edges:
            cu = comp_map[uf.find(u)]
            cv = comp_map[uf.find(v)]
            if cu == cv:
                u_local = pos_in_comp[u]
                v_local = pos_in_comp[v]
                comp_edges[cu].append((cost, u_local, v_local))

        # On veut calculer pour chaque composante le nombre de MST de poids minimal
        # puis faire le produit modulo 10007
        res = 1

        # Fonction pour calculer le nombre de MST dans une composante via MST count algorithm
        # Approche:
        # On utilise l'algorithme de Kruskal modifié pour compter les MST minimal de toute la composante
        # https://en.wikipedia.org/wiki/Spanning_tree#Counting_spanning_trees
        # En fait on utilise une méthode basée sur "Kruskal avec comptage"
        # On trie les arêtes par coût croissant
        # On procède en blocs par coût égal, 
        # on calcule le nombre de manières d'intégrer ces arêtes dans l'union-find
        # puis on multiplie le résultat par la taille du nombre de choix dans la phase
        
        from collections import defaultdict

        def count_mst(nc, edges):
            """
            nc : nombre de sommets locale dans la composante
            edges: liste de tuples (cost, u, v)
            """
            edges.sort(key=lambda x:x[0])
            uf_local = UnionFind(nc)
            ans = 1
            i = 0
            m = len(edges)
            while i < m:
                cost = edges[i][0]
                # Sous-liste des arêtes avec même coût
                j = i
                while j < m and edges[j][0] == cost:
                    j += 1
                same_cost_edges = edges[i:j]
                # Graphe induit par ces arêtes
                # On doit compter les MST sur ces arêtes restreints aux composantes courantes dans uf_local
                
                # Regrouper les sommets de ces arêtes qui sont dans composantes différentes dans uf_local
                temp_nodes = set()
                for _, u, v in same_cost_edges:
                    temp_nodes.add(uf_local.find(u))
                    temp_nodes.add(uf_local.find(v))
                # On ne travaille que sur le graphe induit par ces racines dans uf_local
                
                # Map des anciens sommets à 0..k-1
                roots_list = sorted(temp_nodes)
                root_idx = {r: idx for idx, r in enumerate(roots_list)}
                k = len(roots_list)
                if k == 1:
                    # Toutes les arêtes entre même racine, aucune influence sur MST
                    # Juste on unit celles permettant
                    for _, u, v in same_cost_edges:
                        uf_local.unite(u,v)
                    i = j
                    continue

                # Graphe construit sur ces racines
                # Construire la liste d'arêtes entre roots
                graph = [[] for _ in range(k)]
                edge_list = []
                for _, u, v in same_cost_edges:
                    ru = uf_local.find(u)
                    rv = uf_local.find(v)
                    u0 = root_idx[ru]
                    v0 = root_idx[rv]
                    if u0 != v0:
                        graph[u0].append(v0)
                        graph[v0].append(u0)
                        edge_list.append((u0, v0))
                # Enlever les multi-arêtes sur le même couple (u,v)
                # Ici on doit utiliser un set pour edges
                unique_edges = set()
                for u0, v0 in edge_list:
                    if u0 > v0:
                        u0, v0 = v0, u0
                    unique_edges.add((u0, v0))
                unique_edges = list(unique_edges)

                # Le graphe sur racines est non orienté avec k sommets et unique_edges arêtes
                # On cherche le nombre d'arbres couvrants dans ce graphe complet formé par ces arêtes
                # Cela correspond au nombre d'arbres couvrants d'un graphe donné
                # On l'obtient en construisant la matrice de Laplace et calculant son déterminant principal

                # Construire la matrice de Laplace (k x k)
                # L[i][i] = degré de i
                # L[i][j] = -nombre d'arêtes entre i et j (ici 0 ou 1)
                import numpy as np

                L = np.zeros((k,k), dtype=int)
                deg = [0]*k
                for u0,v0 in unique_edges:
                    deg[u0] += 1
                    deg[v0] += 1
                for i_ in range(k):
                    L[i_, i_] = deg[i_]
                for u0,v0 in unique_edges:
                    L[u0,v0] = L[v0,u0] = -1

                # Calcul du déterminant principal (on enlève une ligne et colonne)
                # Ici on ne va garder que la matrice (k-1 x k-1)
                mat = L[1:,1:]

                # Calcul du déterminant modulo MOD
                # NumPy by default does float, on doit faire nous meme le déterminant modulo avec méthode LU

                def determinant_mod(mat, mod):
                    n = mat.shape[0]
                    mat = mat.copy()
                    res = 1
                    for i_ in range(n):
                        pivot = -1
                        for r_ in range(i_, n):
                            if mat[r_, i_] % mod != 0:
                                pivot = r_
                                break
                        if pivot == -1:
                            return 0
                        if pivot != i_:
                            mat[[pivot, i_]] = mat[[i_, pivot]]
                            res = (-res) % mod
                        res = (res * mat[i_, i_]) % mod
                        inv = pow(int(mat[i_, i_]), mod-2, mod)  # inverse modulaire
                        for r_ in range(i_+1, n):
                            if mat[r_, i_] != 0:
                                fac = (mat[r_, i_] * inv) % mod
                                mat[r_, i_] = 0
                                for c_ in range(i_+1, n):
                                    mat[r_, c_] = (mat[r_, c_] - fac * mat[i_, c_]) % mod
                    return res % mod

                count = determinant_mod(mat, MOD)

                # Multiplier le résultat courant
                ans = (ans * count) % MOD

                # Union toutes les arêtes dans uf_local
                for _, u, v in same_cost_edges:
                    uf_local.unite(u, v)

                i = j

            return ans

        for cid in range(comp_count):
            nc = len(comps[cid])
            if nc == 1:
                # Composante singleton, 1 façon de construire clan
                continue
            ways = count_mst(nc, comp_edges[cid])
            res = (res * ways) % MOD

        print(res)


if __name__ == "__main__":
    solve()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29739612340927124
    2. '\n' → logprob: -1.547396183013916
    3. '<|end|>' → logprob: -3.797396183013916
    4. '\' → logprob: -4.922396183013916
    5. 'newline' → logprob: -5.672396183013916
    6. 'import' → logprob: -5.672396183013916
    7. '<|end|>' → logprob: -6.047396183013916
    8. '
' → logprob: -6.922396183013916
    9. '```' → logprob: -6.922396183013916
    10. '' → logprob: -7.547396183013916

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -5.2524021157296374e-05
    2. ' .' → logprob: -10.750052452087402
    3. '[' → logprob: -12.375052452087402
    4. '.user' → logprob: -13.000052452087402
    5. '.​' → logprob: -13.000052452087402
    6. '.`' → logprob: -13.125052452087402
    7. '."""' → logprob: -13.250052452087402
    8. '.[' → logprob: -13.500052452087402
    9. '.import' → logprob: -13.500052452087402
    10. '.readline' → logprob: -13.750052452087402

Token 5: 'rec' (ID: 9285)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trace' → logprob: -0.7549012303352356
    2. 's' → logprob: -1.1299011707305908
    3. 't' → logprob: -3.004901170730591
    4. 'sys' → logprob: -3.254901170730591
    5. 'set' → logprob: -3.629901170730591
    6. 'soft' → logprob: -4.00490140914917
    7. 'default' → logprob: -4.25490140914917
    8. '_' → logprob: -5.00490140914917
    9. 'ex' → logprob: -5.00490140914917
    10. 'suffix' → logprob: -5.12990140914917

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0037562556099146605
    2. 'ursive' → logprob: -6.378756046295166
    3. 'limit' → logprob: -7.003756046295166
    4. 'ur' → logprob: -7.503756046295166
    5. 'urse' → logprob: -9.253756523132324
    6. 'urs' → logprob: -9.503756523132324
    7. '_limit' → logprob: -9.628756523132324
    8. 'ut' → logprob: -9.753756523132324
    9. 'u' → logprob: -10.003756523132324
    10. 't' → logprob: -10.128756523132324

Token 7: 'limit' (ID: 19698)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.5320794582366943
    2. 'limit' → logprob: -1.1570794582366943
    3. '_depth' → logprob: -2.4070794582366943
    4. '_' → logprob: -5.907079696655273
    5. 'depth' → logprob: -5.907079696655273
    6. 'error' → logprob: -6.907079696655273
    7. '_error' → logprob: -7.532079696655273
    8. '('_' → logprob: -8.782079696655273
    9. '_limits' → logprob: -8.782079696655273
    10. '_stack' → logprob: -9.157079696655273

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.259079363080673e-05
    2. ' (' → logprob: -11.875012397766113
    3. '(
' → logprob: -12.625012397766113
    4. '(

' → logprob: -13.375012397766113
    5. '("("' → logprob: -15.375012397766113
    6. '((' → logprob: -15.750012397766113
    7. '('' → logprob: -15.875012397766113
    8. '(.' → logprob: -16.75001335144043
    9. '(
' → logprob: -17.12501335144043
    10. '()' → logprob: -17.50001335144043

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.6933095455169678
    2. '100' → logprob: -0.6933095455169678
    3. ' ' → logprob: -9.443309783935547
    4. '500' → logprob: -9.818309783935547
    5. '300' → logprob: -11.443309783935547
    6. '999' → logprob: -12.568309783935547
    7. '1' → logprob: -12.818309783935547
    8. '250' → logprob: -12.818309783935547
    9. '150' → logprob: -12.943309783935547
    10. '200' → logprob: -13.318309783935547

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005634739995002747
    2. '00' → logprob: -6.005634784698486
    3. '000' → logprob: -6.005634784698486
    4. '4' → logprob: -7.505634784698486
    5. '6' → logprob: -9.130634307861328
    6. '5' → logprob: -11.755634307861328
    7. '```' → logprob: -12.255634307861328
    8. ')' → logprob: -12.505634307861328
    9. '3' → logprob: -12.630634307861328
    10. '**' → logprob: -12.630634307861328

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.005893245339393616
    2. '9' → logprob: -5.505893230438232
    3. '6' → logprob: -7.005893230438232
    4. '8' → logprob: -7.005893230438232
    5. '```' → logprob: -16.50589370727539
    6. ' ' → logprob: -17.50589370727539
    7. '``' → logprob: -19.88089370727539
    8. ')' → logprob: -20.50589370727539
    9. '**' → logprob: -20.63089370727539
    10. '(' → logprob: -20.75589370727539

Token 12: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0445127372804563e-05
    2. '))' → logprob: -11.62501049041748
    3. ' )' → logprob: -13.75001049041748
    4. ')
' → logprob: -15.25001049041748
    5. ')))' → logprob: -16.875009536743164
    6. ')`' → logprob: -17.500009536743164
    7. '```' → logprob: -17.875009536743164
    8. '`)' → logprob: -18.000009536743164
    9. ')**' → logprob: -18.125009536743164
    10. ' ' → logprob: -18.125009536743164

Token 13: 'MOD' (ID: 52135)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04651079699397087
    2. '
' → logprob: -3.546510696411133
    3. '

' → logprob: -4.921510696411133
    4. '```' → logprob: -5.296510696411133
    5. '\' → logprob: -6.421510696411133
    6. '
' → logprob: -7.046510696411133
    7. 'class' → logprob: -7.546510696411133
    8. '\n' → logprob: -7.671510696411133
    9. 'import' → logprob: -8.046510696411133
    10. ')' → logprob: -8.921510696411133

Token 14: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34877344965934753
    2. '=' → logprob: -1.22377347946167
    3. ' ' → logprob: -8.973773002624512
    4. ')' → logprob: -9.348773002624512
    5. '_' → logprob: -9.848773002624512
    6. ' =)' → logprob: -10.973773002624512
    7. ' =
' → logprob: -11.723773002624512
    8. '.' → logprob: -11.973773002624512
    9. '<|end|>' → logprob: -12.098773002624512
    10. ' )' → logprob: -12.223773002624512

Token 15: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.16055291891098022
    2. ' ' → logprob: -1.910552978515625
    3. '100' → logprob: -8.035552978515625
    4. '1' → logprob: -12.285552978515625
    5. 'int' → logprob: -15.785552978515625
    6. '998' → logprob: -16.535552978515625
    7. ' ' → logprob: -16.660552978515625
    8. '109' → logprob: -17.160552978515625
    9. '2' → logprob: -17.785552978515625
    10. '(' → logprob: -18.410552978515625

Token 16: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0002755174064077437
    2. '100' → logprob: -8.250275611877441
    3. '1' → logprob: -11.625275611877441
    4. ' ' → logprob: -12.750275611877441
    5. '998' → logprob: -13.000275611877441
    6. 'int' → logprob: -16.000274658203125
    7. '109' → logprob: -18.125274658203125
    8. '(' → logprob: -18.500274658203125
    9. '```' → logprob: -18.875274658203125
    10. '１０' → logprob: -18.875274658203125

Token 17: '07' (ID: 3173)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7166386842727661
    2. '\' → logprob: -0.9666386842727661
    3. '0' → logprob: -2.8416385650634766
    4. '000' → logprob: -3.3416385650634766
    5. '**' → logprob: -4.341638565063477
    6. '```' → logprob: -4.716638565063477
    7. '00' → logprob: -5.091638565063477
    8. '' → logprob: -5.591638565063477
    9. ''\' → logprob: -6.716638565063477
    10. '\r' → logprob: -7.091638565063477

Token 18: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7242441773414612
    2. '\n' → logprob: -1.3492441177368164
    3. '

' → logprob: -2.2242441177368164
    4. 'def' → logprob: -2.8492441177368164
    5. '\' → logprob: -3.3492441177368164
    6. '```' → logprob: -3.5992441177368164
    7. '
' → logprob: -4.349244117736816
    8. '' → logprob: -4.599244117736816
    9. 'import' → logprob: -7.224244117736816
    10. '`' → logprob: -7.724244117736816

Token 19: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008251902647316456
    2. 'n' → logprob: -5.258251667022705
    3. '

' → logprob: -6.258251667022705
    4. '
' → logprob: -7.508251667022705
    5. 'class' → logprob: -8.008252143859863
    6. '
' → logprob: -10.133252143859863
    7. ' def' → logprob: -10.133252143859863
    8. '#' → logprob: -10.508252143859863
    9. '' → logprob: -11.008252143859863
    10. 'a' → logprob: -11.008252143859863

Token 20: ' Fonction' (ID: 189149)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11545703560113907
    2. ' def' → logprob: -2.240457057952881
    3. 'from' → logprob: -6.490457057952881
    4. 'dp' → logprob: -8.240456581115723
    5. 'class' → logprob: -8.615456581115723
    6. 'import' → logprob: -8.740456581115723
    7. ' dp' → logprob: -9.365456581115723
    8. ' class' → logprob: -9.490456581115723
    9. ' from' → logprob: -9.615456581115723
    10. '#' → logprob: -10.115456581115723

Token 21: ' pour' (ID: 1930)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.6562003493309021
    2. ' de' → logprob: -1.4062004089355469
    3. 'def' → logprob: -2.031200408935547
    4. ' ' → logprob: -2.656200408935547
    5. ' d' → logprob: -4.656200408935547
    6. 's' → logprob: -4.906200408935547
    7. ' ' → logprob: -5.281200408935547
    8. '_' → logprob: -5.781200408935547
    9. '<|end|>' → logprob: -6.156200408935547
    10. ' to' → logprob: -6.781200408935547

Token 22: ' calcul' (ID: 7559)
  Prédit: ' calcul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.024391375482082367
    2. 'calcul' → logprob: -4.149391174316406
    3. ' compter' → logprob: -5.649391174316406
    4. ' effectuer' → logprob: -6.774391174316406
    5. ' calc' → logprob: -7.149391174316406
    6. ' le' → logprob: -7.649391174316406
    7. ' calcular' → logprob: -8.024391174316406
    8. 'factor' → logprob: -8.274391174316406
    9. 'cal' → logprob: -8.399391174316406
    10. ' la' → logprob: -8.524391174316406

Token 23: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -8.554343366995454e-05
    2. 'ating' → logprob: -9.625085830688477
    3. 'atrice' → logprob: -12.250085830688477
    4. '#' → logprob: -12.375085830688477
    5. 'ateur' → logprob: -12.625085830688477
    6. 'ate' → logprob: -12.750085830688477
    7. '_' → logprob: -13.875085830688477
    8. 'uler' → logprob: -13.875085830688477
    9. 'r' → logprob: -14.625085830688477
    10. '```' → logprob: -15.125085830688477

Token 24: ' x' (ID: 1215)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.10775044560432434
    2. ' le' → logprob: -2.357750415802002
    3. ' n' → logprob: -5.857750415802002
    4. 'la' → logprob: -6.607750415802002
    5. ' l' → logprob: -7.232750415802002
    6. ' f' → logprob: -7.732750415802002
    7. ' ' → logprob: -7.857750415802002
    8. 'le' → logprob: -7.982750415802002
    9. 'factor' → logprob: -8.10775089263916
    10. '```' → logprob: -8.23275089263916

Token 25: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.27016761898994446
    2. ' **' → logprob: -1.770167589187622
    3. ' ' → logprob: -3.395167589187622
    4. '_' → logprob: -4.520167827606201
    5. '^' → logprob: -4.645167827606201
    6. ' ^' → logprob: -5.770167827606201
    7. '%' → logprob: -6.145167827606201
    8. '*' → logprob: -6.895167827606201
    9. '[' → logprob: -7.020167827606201
    10. ')' → logprob: -7.270167827606201

Token 26: 'y' (ID: 88)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6300222873687744
    2. ' ' → logprob: -1.1300222873687744
    3. ' n' → logprob: -2.3800222873687744
    4. '2' → logprob: -3.6300222873687744
    5. 'y' → logprob: -4.505022048950195
    6. 'pow' → logprob: -5.130022048950195
    7. ' y' → logprob: -6.630022048950195
    8. 'k' → logprob: -6.755022048950195
    9. 'i' → logprob: -7.005022048950195
    10. '  ' → logprob: -7.130022048950195

Token 27: ' %' (ID: 1851)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.27784082293510437
    2. ' ' → logprob: -2.6528408527374268
    3. ' def' → logprob: -2.9028408527374268
    4. '**' → logprob: -2.9028408527374268
    5. '(' → logprob: -4.277840614318848
    6. ' (' → logprob: -4.402840614318848
    7. '```' → logprob: -4.652840614318848
    8. ' **' → logprob: -4.777840614318848
    9. '_' → logprob: -5.402840614318848
    10. '`' → logprob: -5.402840614318848

Token 28: ' mod' (ID: 1812)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.23107267916202545
    2. ' MOD' → logprob: -1.6060726642608643
    3. ' ' → logprob: -5.606072902679443
    4. ' ' → logprob: -7.231072902679443
    5. 'mod' → logprob: -7.481072902679443
    6. '_MOD' → logprob: -8.481072425842285
    7. ' mod' → logprob: -8.856072425842285
    8. '```' → logprob: -9.856072425842285
    9. 'M' → logprob: -10.231072425842285
    10. '(' → logprob: -10.356072425842285

Token 29: ' en' (ID: 469)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006529803387820721
    2. '
' → logprob: -5.881529808044434
    3. ' def' → logprob: -6.381529808044434
    4. '\' → logprob: -6.756529808044434
    5. ' de' → logprob: -7.881529808044434
    6. 'de' → logprob: -8.131529808044434
    7. '\n' → logprob: -9.256529808044434
    8. 'd' → logprob: -10.881529808044434
    9. '```' → logprob: -11.131529808044434
    10. '
' → logprob: -11.256529808044434

Token 30: ' log' (ID: 2142)
  Prédit: ' pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pow' → logprob: -1.1961169242858887
    2. ' Python' → logprob: -1.6961169242858887
    3. ' python' → logprob: -2.3211169242858887
    4. ' utilisant' → logprob: -2.3211169242858887
    5. ' recursive' → logprob: -2.8211169242858887
    6. 'pow' → logprob: -2.9461169242858887
    7. 'python' → logprob: -3.0711169242858887
    8. ' exponent' → logprob: -3.8211169242858887
    9. ' continu' → logprob: -3.9461169242858887
    10. '```' → logprob: -4.196116924285889

Token 31: '(y' (ID: 14684)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0029510781168937683
    2. '2' → logprob: -6.377951145172119
    3. 'arith' → logprob: -7.252951145172119
    4. ' _' → logprob: -8.127950668334961
    5. ' ' → logprob: -9.752950668334961
    6. '10' → logprob: -10.377950668334961
    7. '_space' → logprob: -10.627950668334961
    8. '_

' → logprob: -10.752950668334961
    9. '(' → logprob: -11.002950668334961
    10. 'space' → logprob: -11.127950668334961

Token 32: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014938898384571075
    2. '_' → logprob: -4.764938831329346
    3. ' )' → logprob: -5.389938831329346
    4. '_)' → logprob: -6.889938831329346
    5. '(' → logprob: -7.889938831329346
    6. '2' → logprob: -8.764939308166504
    7. '10' → logprob: -10.389939308166504
    8. 'arith' → logprob: -10.389939308166504
    9. '1' → logprob: -11.264939308166504
    10. '^)' → logprob: -11.514939308166504

Token 33: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00036834771162830293
    2. ' def' → logprob: -8.625368118286133
    3. '
' → logprob: -9.375368118286133
    4. 'de' → logprob: -10.000368118286133
    5. '```' → logprob: -10.625368118286133
    6. '\' → logprob: -11.250368118286133
    7. ' de' → logprob: -12.125368118286133
    8. 'd' → logprob: -12.125368118286133
    9. ':def' → logprob: -12.250368118286133
    10. '\n' → logprob: -13.000368118286133

Token 34: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.022094184532761574
    2. 'mod' → logprob: -4.522094249725342
    3. ' pow' → logprob: -5.022094249725342
    4. 'pow' → logprob: -5.897094249725342
    5. ' power' → logprob: -6.772094249725342
    6. ' modular' → logprob: -8.272093772888184
    7. ' ' → logprob: -9.397093772888184
    8. ' fast' → logprob: -10.147093772888184
    9. '```' → logprob: -10.272093772888184
    10. '

' → logprob: -10.647093772888184

Token 35: '_pow' (ID: 160965)
  Prédit: '_pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pow' → logprob: -0.01565362885594368
    2. 'pow' → logprob: -4.265653610229492
    3. '_exp' → logprob: -6.765653610229492
    4. '_ex' → logprob: -8.515653610229492
    5. '_power' → logprob: -9.390653610229492
    6. 'ular' → logprob: -10.390653610229492
    7. 'exp' → logprob: -10.890653610229492
    8. '_' → logprob: -13.515653610229492
    9. '_mul' → logprob: -14.515653610229492
    10. 'expo' → logprob: -15.015653610229492

Token 36: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009827041067183018
    2. '(x' → logprob: -4.634827136993408
    3. ' (' → logprob: -10.13482666015625
    4. '(base' → logprob: -11.63482666015625
    5. '(
' → logprob: -12.13482666015625
    6. '(a' → logprob: -12.25982666015625
    7. '(n' → logprob: -12.63482666015625
    8. '(

' → logprob: -13.00982666015625
    9. '(user' → logprob: -14.25982666015625
    10. '```' → logprob: -14.25982666015625

Token 37: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005940204137004912
    2. ' ,' → logprob: -7.500594139099121
    3. ',y' → logprob: -10.750594139099121
    4. ',x' → logprob: -11.250594139099121
    5. ',n' → logprob: -13.375594139099121
    6. ',
' → logprob: -13.625594139099121
    7. ',

' → logprob: -14.500594139099121
    8. ' ' → logprob: -14.625594139099121
    9. ',num' → logprob: -14.750594139099121
    10. ',p' → logprob: -14.875594139099121

Token 38: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.25193315744400024
    2. ' y' → logprob: -1.5019330978393555
    3. ' ' → logprob: -13.251933097839355
    4. '	y' → logprob: -13.251933097839355
    5. '  ' → logprob: -15.626933097839355
    6. '<|end|>' → logprob: -15.626933097839355
    7. ')y' → logprob: -16.626934051513672
    8. ')' → logprob: -17.251934051513672
    9. '    ' → logprob: -17.251934051513672
    10. '   ' → logprob: -17.376934051513672

Token 39: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030919011682271957
    2. '):' → logprob: -3.530919075012207
    3. ' ,' → logprob: -6.905919075012207
    4. ')' → logprob: -9.280919075012207
    5. ' ):' → logprob: -10.280919075012207
    6. ':' → logprob: -11.030919075012207
    7. ',y' → logprob: -12.655919075012207
    8. ',
' → logprob: -12.905919075012207
    9. '):
' → logprob: -13.030919075012207
    10. '),' → logprob: -13.655919075012207

Token 40: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.577974259853363
    2. ' mod' → logprob: -0.827974259853363
    3. 'MOD' → logprob: -6.577974319458008
    4. ' MOD' → logprob: -7.452974319458008
    5. '	mod' → logprob: -10.577974319458008
    6. 'm' → logprob: -11.202974319458008
    7. ' m' → logprob: -12.202974319458008
    8. ' modulus' → logprob: -12.577974319458008
    9. ' modulo' → logprob: -12.827974319458008
    10. '_mod' → logprob: -13.202974319458008

Token 41: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00045783669338561594
    2. ')' → logprob: -7.750457763671875
    3. ' ):' → logprob: -11.125457763671875
    4. ':' → logprob: -11.500457763671875
    5. '):
' → logprob: -13.375457763671875
    6. ',' → logprob: -15.250457763671875
    7. '=' → logprob: -15.875457763671875
    8. ')：' → logprob: -17.000457763671875
    9. '):
' → logprob: -17.250457763671875
    10. ' :' → logprob: -17.375457763671875

Token 42: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023926613852381706
    2. '):' → logprob: -4.023926734924316
    3. '   ' → logprob: -5.273926734924316
    4. ' :' → logprob: -7.523926734924316
    5. ':**' → logprob: -10.398926734924316
    6. '():' → logprob: -10.523926734924316
    7. ':
' → logprob: -11.898926734924316
    8. ')' → logprob: -12.148926734924316
    9. ':def' → logprob: -12.273926734924316
    10. ' ' → logprob: -12.273926734924316

Token 43: ' result' (ID: 1534)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7591237425804138
    2. ' if' → logprob: -1.5091238021850586
    3. 'result' (adapté à ' result') → logprob: -2.0091238021850586
    4. ' result' → logprob: -2.2591238021850586
    5. 'if' → logprob: -2.7591238021850586
    6. ' res' → logprob: -5.009123802185059
    7. 'res' → logprob: -6.509123802185059
    8. '    ' → logprob: -8.509123802185059
    9. '```' → logprob: -9.134123802185059
    10. '    
' → logprob: -9.509123802185059

Token 44: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07000623643398285
    2. '=' → logprob: -2.6950061321258545
    3. ' ' → logprob: -9.945006370544434
    4. ')' → logprob: -11.945006370544434
    5. '<|end|>' → logprob: -12.570006370544434
    6. ',' → logprob: -12.945006370544434
    7. '  ' → logprob: -13.320006370544434
    8. ' =)' → logprob: -13.695006370544434
    9. ' +=' → logprob: -13.820006370544434
    10. '.' → logprob: -14.320006370544434

Token 45: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016034720465540886
    2. ' ' → logprob: -4.1410346031188965
    3. 'pow' → logprob: -15.516035079956055
    4. '   ' → logprob: -15.766035079956055
    5. ' ' → logprob: -17.016035079956055
    6. '۱' → logprob: -17.703535079956055
    7. '```' → logprob: -18.016035079956055
    8. '  ' → logprob: -18.141035079956055
    9. ' pow' → logprob: -18.203535079956055
    10. '0' → logprob: -18.828535079956055

Token 46: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '   ' → logprob: -20.0
    4. '```' → logprob: -20.0
    5. 'pow' → logprob: -20.25
    6. '۱' → logprob: -21.5
    7. '１' → logprob: -22.0
    8. '' → logprob: -23.25
    9. '`' → logprob: -23.25
    10. '১' → logprob: -23.5

Token 47: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7756015062332153
    2. ' ' → logprob: -1.4006015062332153
    3. '<|end|>' → logprob: -2.275601387023926
    4. '    ' → logprob: -3.150601387023926
    5. ' while' → logprob: -3.525601387023926
    6. '  ' → logprob: -3.900601387023926
    7. ')' → logprob: -3.900601387023926
    8. '*' → logprob: -4.025601387023926
    9. ' for' → logprob: -4.400601387023926
    10. 'while' → logprob: -4.400601387023926

Token 49: ' base' (ID: 3611)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9693560600280762
    2. ' while' → logprob: -1.7193560600280762
    3. '    ' → logprob: -2.344356060028076
    4. ' ' → logprob: -2.594356060028076
    5. '=' → logprob: -2.844356060028076
    6. 'while' → logprob: -3.469356060028076
    7. ',' → logprob: -3.594356060028076
    8. '    
' → logprob: -3.594356060028076
    9. ':' → logprob: -3.594356060028076
    10. '*' → logprob: -3.969356060028076

Token 50: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.010988516733050346
    2. ' ' → logprob: -5.010988712310791
    3. '=' → logprob: -5.635988712310791
    4. ' *=' → logprob: -8.385988235473633
    5. ' <<=' → logprob: -8.510988235473633
    6. ',' → logprob: -9.260988235473633
    7. '  ' → logprob: -10.135988235473633
    8. '    ' → logprob: -10.385988235473633
    9. '   ' → logprob: -10.885988235473633
    10. '_' → logprob: -11.135988235473633

Token 51: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.25192955136299133
    2. 'x' → logprob: -1.501929521560669
    3. '	x' → logprob: -15.25192928314209
    4. '   ' → logprob: -16.376930236816406
    5. ' ' → logprob: -16.626930236816406
    6. 'pow' → logprob: -17.001930236816406
    7. '(x' → logprob: -18.001930236816406
    8. '```' → logprob: -18.501930236816406
    9. ' ' → logprob: -18.626930236816406
    10. '1' → logprob: -18.751930236816406

Token 52: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.16085714101791382
    2. '%' → logprob: -1.9108572006225586
    3. '<|end|>' → logprob: -7.785857200622559
    4. '<|end|>' → logprob: -9.285857200622559
    5. '   ' → logprob: -10.535857200622559
    6. '%n' → logprob: -10.910857200622559
    7. ' ' → logprob: -11.160857200622559
    8. '```' → logprob: -11.410857200622559
    9. ' %=' → logprob: -11.660857200622559
    10. '
' → logprob: -11.785857200622559

Token 53: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0002613358374219388
    2. ' mod' → logprob: -8.250261306762695
    3. '	mod' → logprob: -18.625261306762695
    4. '(mod' → logprob: -18.750261306762695
    5. 'MOD' → logprob: -20.125261306762695
    6. ' ' → logprob: -21.375261306762695
    7. 'moder' → logprob: -21.875261306762695
    8. ' мод' → logprob: -22.875261306762695
    9. '_mod' → logprob: -23.250261306762695
    10. '```' → logprob: -23.250261306762695

Token 54: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23245245218276978
    2. '    
' → logprob: -1.857452392578125
    3. '
' → logprob: -3.732452392578125
    4. 'while' → logprob: -5.232452392578125
    5. '<|end|>' → logprob: -5.232452392578125
    6. ' while' → logprob: -5.357452392578125
    7. ' 
' → logprob: -5.732452392578125
    8. '   
' → logprob: -6.357452392578125
    9. '    ' → logprob: -6.607452392578125
    10. '  
' → logprob: -6.732452392578125

Token 55: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5631733536720276
    2. '    
' → logprob: -1.3131732940673828
    3. ' 
' → logprob: -3.063173294067383
    4. '```' → logprob: -3.063173294067383
    5. '<|end|>' → logprob: -4.188173294067383
    6. '  
' → logprob: -4.313173294067383
    7. '\n' → logprob: -4.563173294067383
    8. '   
' → logprob: -4.938173294067383
    9. '
' → logprob: -5.438173294067383
    10. '     
' → logprob: -5.688173294067383

Token 56: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.05574933812022209
    2. 'while' (adapté à ' while') → logprob: -3.9307494163513184
    3. '   ' → logprob: -4.055749416351318
    4. ' 
' → logprob: -4.930749416351318
    5. '```' → logprob: -5.305749416351318
    6. '    
' → logprob: -5.680749416351318
    7. '  
' → logprob: -8.18074893951416
    8. '	while' → logprob: -8.18074893951416
    9. '
' → logprob: -8.30574893951416
    10. ' ' → logprob: -8.43074893951416

Token 57: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.02324605919420719
    2. 'y' → logprob: -3.7732460498809814
    3. '(y' → logprob: -14.398245811462402
    4. ' ' → logprob: -18.14824676513672
    5. '	y' → logprob: -19.27324676513672
    6. ' ' → logprob: -19.64824676513672
    7. '[y' → logprob: -19.64824676513672
    8. ' (' → logprob: -19.64824676513672
    9. '_y' → logprob: -19.64824676513672
    10. '(' → logprob: -21.89824676513672

Token 58: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.38689661026000977
    2. ' >' → logprob: -1.1368966102600098
    3. ':' → logprob: -10.636896133422852
    4. '">' → logprob: -14.761896133422852
    5. ' ' → logprob: -15.136896133422852
    6. '&gt' → logprob: -15.261896133422852
    7. ' ' → logprob: -15.261896133422852
    8. '>:' → logprob: -16.26189613342285
    9. '()>' → logprob: -16.76189613342285
    10. ')>' → logprob: -16.88689613342285

Token 59: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01416350994259119
    2. ' ' → logprob: -4.264163494110107
    3. ' ' → logprob: -18.389163970947266
    4. '۰' → logprob: -18.639163970947266
    5. '>' → logprob: -18.764163970947266
    6. '=' → logprob: -18.889163970947266
    7. '  ' → logprob: -19.889163970947266
    8. '   ' → logprob: -20.014163970947266
    9. '    ' → logprob: -20.139163970947266
    10. '```' → logprob: -20.264163970947266

Token 60: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00029601677670143545
    2. ' ' → logprob: -8.125295639038086
    3. '۰' → logprob: -19.375295639038086
    4. '>' → logprob: -20.250295639038086
    5. '  ' → logprob: -20.375295639038086
    6. ' ' → logprob: -20.500295639038086
    7. '1' → logprob: -20.625295639038086
    8. '```' → logprob: -20.625295639038086
    9. '   ' → logprob: -21.000295639038086
    10. '    ' → logprob: -21.250295639038086

Token 61: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0025366635527461767
    2. ' :' → logprob: -6.127536773681641
    3. ':
' → logprob: -8.12753677368164
    4. '):' → logprob: -10.87753677368164
    5. ',' → logprob: -11.37753677368164
    6. '   ' → logprob: -12.00253677368164
    7. ' and' → logprob: -12.50253677368164
    8. ' :
' → logprob: -12.50253677368164
    9. '       ' → logprob: -12.87753677368164
    10. ':**' → logprob: -13.00253677368164

Token 62: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47814372181892395
    2. ' ' → logprob: -1.3531436920166016
    3. '   ' → logprob: -3.1031436920166016
    4. '    ' → logprob: -3.1031436920166016
    5. ':' → logprob: -5.103143692016602
    6. ' 
' → logprob: -5.103143692016602
    7. '     
' → logprob: -5.228143692016602
    8. '        
' → logprob: -5.853143692016602
    9. ''' → logprob: -6.353143692016602
    10. '```' → logprob: -6.353143692016602

Token 63: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02324407920241356
    2. ' 
' → logprob: -4.1482439041137695
    3. '     
' → logprob: -5.6482439041137695
    4. '    ' → logprob: -7.2732439041137695
    5. ' if' → logprob: -7.3982439041137695
    6. 'if' (adapté à ' if') → logprob: -7.8982439041137695
    7. '<|end|>' → logprob: -7.8982439041137695
    8. '       ' → logprob: -8.52324390411377
    9. '  ' → logprob: -8.77324390411377
    10. '         
' → logprob: -8.89824390411377

Token 64: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.012493413873016834
    2. 'y' → logprob: -4.63749361038208
    3. ' ' → logprob: -6.01249361038208
    4. ' (' → logprob: -8.262493133544922
    5. ' ' → logprob: -11.387493133544922
    6. '	y' → logprob: -12.012493133544922
    7. '(' → logprob: -12.137493133544922
    8. '(y' → logprob: -12.637493133544922
    9. '    ' → logprob: -14.262493133544922
    10. '  ' → logprob: -14.762493133544922

Token 65: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.004771634005010128
    2. '&' → logprob: -5.629771709442139
    3. ' %' → logprob: -6.879771709442139
    4. '%' → logprob: -9.50477123260498
    5. ' ' → logprob: -9.62977123260498
    6. ' ' → logprob: -13.50477123260498
    7. '&nbsp' → logprob: -15.50477123260498
    8. '>' → logprob: -16.004772186279297
    9. ' &
' → logprob: -16.254772186279297
    10. '[' → logprob: -16.504772186279297

Token 66: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.25193002820014954
    2. ' ' → logprob: -1.5019299983978271
    3. ' ' → logprob: -14.376930236816406
    4. 'nbsp' → logprob: -16.251930236816406
    5. 'y' → logprob: -16.501930236816406
    6. '  ' → logprob: -17.376930236816406
    7. '' → logprob: -17.626930236816406
    8. '<|end|>' → logprob: -17.751930236816406
    9. '-' → logprob: -17.876930236816406
    10. '>' → logprob: -17.876930236816406

Token 67: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. 'y' → logprob: -18.000024795532227
    4. '' → logprob: -18.125024795532227
    5. '１' → logprob: -18.750024795532227
    6. '```' → logprob: -19.000024795532227
    7. '۱' → logprob: -19.000024795532227
    8. '   ' → logprob: -19.562524795532227
    9. '-' → logprob: -19.875024795532227
    10. '01' → logprob: -20.062524795532227

Token 68: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003323865123093128
    2. ' :' → logprob: -5.753324031829834
    3. ':
' → logprob: -9.003323554992676
    4. '):' → logprob: -11.753323554992676
    5. '=' → logprob: -12.878323554992676
    6. '       ' → logprob: -13.003323554992676
    7. ':**' → logprob: -13.128323554992676
    8. ' ' → logprob: -13.378323554992676
    9. '   ' → logprob: -13.503323554992676
    10. ' :
' → logprob: -13.628323554992676

Token 69: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.709043562412262
    2. '           ' → logprob: -0.709043562412262
    3. ':
' → logprob: -4.959043502807617
    4. '       ' → logprob: -5.834043502807617
    5. ' :' → logprob: -5.959043502807617
    6. 'result' → logprob: -6.084043502807617
    7. ' result' → logprob: -8.709043502807617
    8. '   ' → logprob: -8.834043502807617
    9. ' =' → logprob: -9.084043502807617
    10. '=' → logprob: -9.334043502807617

Token 70: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.1315622180700302
    2. 'result' (adapté à ' result') → logprob: -2.1315622329711914
    3. ' ' → logprob: -6.131562232971191
    4. '(result' → logprob: -6.631562232971191
    5. ' (' → logprob: -6.881562232971191
    6. ' ' → logprob: -11.256562232971191
    7. '    ' → logprob: -11.631562232971191
    8. '            ' → logprob: -11.631562232971191
    9. '_result' → logprob: -11.631562232971191
    10. '	result' → logprob: -11.756562232971191

Token 71: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6013702750205994
    2. '=' → logprob: -0.9763702750205994
    3. ' *=' → logprob: -3.351370334625244
    4. ' *' → logprob: -3.476370334625244
    5. '*' → logprob: -4.726370334625244
    6. '*=' → logprob: -7.976370334625244
    7. ' ' → logprob: -9.601369857788086
    8. ' ' → logprob: -11.351369857788086
    9. '    ' → logprob: -11.851369857788086
    10. '```' → logprob: -12.351369857788086

Token 72: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.06204733997583389
    2. '(result' → logprob: -2.812047243118286
    3. '(' → logprob: -10.062047004699707
    4. ' result' → logprob: -10.562047004699707
    5. 'result' → logprob: -11.437047004699707
    6. ' ' → logprob: -16.062047958374023
    7. '(res' → logprob: -16.312047958374023
    8. ',result' → logprob: -16.937047958374023
    9. '[result' → logprob: -16.937047958374023
    10. '=result' → logprob: -17.187047958374023

Token 73: 'result' (ID: 2521)
  Prédit: 'result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.2519701421260834
    2. ' result' → logprob: -1.5019701719284058
    3. '(result' → logprob: -10.126970291137695
    4. '	result' → logprob: -15.251970291137695
    5. '[result' → logprob: -15.501970291137695
    6. ' ' → logprob: -15.626970291137695
    7. '=result' → logprob: -16.001970291137695
    8. ',result' → logprob: -16.751970291137695
    9. 'res' → logprob: -17.001970291137695
    10. ' (' → logprob: -17.251970291137695

Token 74: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0019312551012262702
    2. '*' → logprob: -6.251931190490723
    3. ' ' → logprob: -13.001931190490723
    4. ' ' → logprob: -15.626931190490723
    5. ')' → logprob: -15.751931190490723
    6. ' **' → logprob: -18.87693214416504
    7. ' )' → logprob: -19.87693214416504
    8. '*object' → logprob: -20.75193214416504
    9. '1' → logprob: -20.81443214416504
    10. '  ' → logprob: -20.87693214416504

Token 75: ' base' (ID: 3611)
  Prédit: ' base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.1002078503370285
    2. 'base' → logprob: -2.350207805633545
    3. ' ' → logprob: -14.100208282470703
    4. '	base' → logprob: -15.225208282470703
    5. '(base' → logprob: -16.100208282470703
    6. '   ' → logprob: -16.725208282470703
    7. 'bas' → logprob: -17.600208282470703
    8. '_base' → logprob: -17.725208282470703
    9. ' ' → logprob: -17.975208282470703
    10. 'Base' → logprob: -18.350208282470703

Token 76: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00023238400171976537
    2. ' )' → logprob: -8.375232696533203
    3. ')%' → logprob: -13.250232696533203
    4. ' ' → logprob: -18.625232696533203
    5. '%' → logprob: -18.625232696533203
    6. ' %' → logprob: -19.250232696533203
    7. '}' → logprob: -19.375232696533203
    8. '）' → logprob: -19.625232696533203
    9. '   ' → logprob: -19.750232696533203
    10. ']' → logprob: -20.000232696533203

Token 77: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.0006028342177160084
    2. '%' → logprob: -7.500602722167969
    3. ')' → logprob: -10.125602722167969
    4. ' ' → logprob: -11.625602722167969
    5. ')%' → logprob: -15.250602722167969
    6. ' ' → logprob: -15.500602722167969
    7. ' )' → logprob: -15.500602722167969
    8. ' %
' → logprob: -17.37560272216797
    9. ' %=' → logprob: -17.37560272216797
    10. '```' → logprob: -17.50060272216797

Token 78: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.026441730558872223
    2. 'mod' → logprob: -3.651441812515259
    3. '(mod' → logprob: -9.27644157409668
    4. ' ' → logprob: -10.77644157409668
    5. 'MOD' → logprob: -11.52644157409668
    6. ' MOD' → logprob: -11.77644157409668
    7. ' ' → logprob: -12.40144157409668
    8. '	mod' → logprob: -13.02644157409668
    9. '_mod' → logprob: -14.65144157409668
    10. '```' → logprob: -14.77644157409668

Token 79: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.49911731481552124
    2. '       ' → logprob: -1.874117374420166
    3. '        
' → logprob: -2.374117374420166
    4. ' 
' → logprob: -2.749117374420166
    5. '
' → logprob: -3.124117374420166
    6. '    
' → logprob: -4.749117374420166
    7. '  
' → logprob: -4.749117374420166
    8. '' → logprob: -5.374117374420166
    9. '   
' → logprob: -5.624117374420166
    10. '     
' → logprob: -5.999117374420166

Token 80: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06347925961017609
    2. '
' → logprob: -2.93847918510437
    3. '        
' → logprob: -5.563479423522949
    4. ' 
' → logprob: -6.438479423522949
    5. '\n' → logprob: -6.813479423522949
    6. '  
' → logprob: -7.438479423522949
    7. '<|end|>' → logprob: -8.31347942352295
    8. '    
' → logprob: -8.56347942352295
    9. '   
' → logprob: -8.68847942352295
    10. '' → logprob: -8.81347942352295

Token 81: ' base' (ID: 3611)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.46243816614151
    2. 'y' → logprob: -1.7124381065368652
    3. '       ' → logprob: -1.8374381065368652
    4. ' 
' → logprob: -4.212438106536865
    5. ' ' → logprob: -5.087438106536865
    6. '        
' → logprob: -5.837438106536865
    7. '        ' → logprob: -6.087438106536865
    8. '     
' → logprob: -6.962438106536865
    9. '   ' → logprob: -7.587438106536865
    10. ')' → logprob: -7.587438106536865

Token 82: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12694081664085388
    2. '=' → logprob: -2.1269407272338867
    3. ' *=' → logprob: -12.126940727233887
    4. ' ' → logprob: -12.501940727233887
    5. '   ' → logprob: -13.001940727233887
    6. '    ' → logprob: -15.001940727233887
    7. '*' → logprob: -15.126940727233887
    8. '*=' → logprob: -15.251940727233887
    9. '  ' → logprob: -16.001941680908203
    10. '	' → logprob: -16.251941680908203

Token 83: ' (' (ID: 350)
  Prédit: '(base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(base' → logprob: -0.5762172341346741
    2. ' (' → logprob: -0.8262172341346741
    3. '(' → logprob: -8.201217651367188
    4. '(Base' → logprob: -13.451217651367188
    5. ' ' → logprob: -14.201217651367188
    6. '(b' → logprob: -14.951217651367188
    7. '(BASE' → logprob: -15.076217651367188
    8. '(best' → logprob: -16.451217651367188
    9. ';base' → logprob: -16.576217651367188
    10. ' ' → logprob: -17.326217651367188

Token 84: 'base' (ID: 5423)
  Prédit: 'base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.07891424000263214
    2. ' base' → logprob: -2.578914165496826
    3. '(base' → logprob: -10.703914642333984
    4. ' ' → logprob: -13.578914642333984
    5. '	base' → logprob: -14.953914642333984
    6. '   ' → logprob: -16.078914642333984
    7. 'bas' → logprob: -16.578914642333984
    8. ')' → logprob: -17.203914642333984
    9. ' ' → logprob: -17.328914642333984
    10. '/base' → logprob: -17.328914642333984

Token 85: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0052534411661326885
    2. '*' → logprob: -5.255253314971924
    3. ' ' → logprob: -10.880253791809082
    4. '**' → logprob: -14.755253791809082
    5. ' **' → logprob: -15.505253791809082
    6. ' ' → logprob: -16.255252838134766
    7. '2' → logprob: -16.255252838134766
    8. '  ' → logprob: -16.880252838134766
    9. '   ' → logprob: -18.005252838134766
    10. ')' → logprob: -18.255252838134766

Token 86: ' base' (ID: 3611)
  Prédit: ' base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.4740809500217438
    2. 'base' → logprob: -0.9740809202194214
    3. ' ' → logprob: -12.849081039428711
    4. '	base' → logprob: -14.474081039428711
    5. 'bas' → logprob: -15.724081039428711
    6. '_base' → logprob: -15.724081039428711
    7. '(base' → logprob: -15.849081039428711
    8. ' baseline' → logprob: -16.59908103942871
    9. ';base' → logprob: -16.84908103942871
    10. 'Base' → logprob: -16.97408103942871

Token 87: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015514736878685653
    2. ' )' → logprob: -8.875155448913574
    3. ')%' → logprob: -11.125155448913574
    4. '   ' → logprob: -15.250155448913574
    5. ')
' → logprob: -16.625154495239258
    6. '}' → logprob: -16.750154495239258
    7. ',' → logprob: -16.750154495239258
    8. '*' → logprob: -16.875154495239258
    9. ']' → logprob: -17.500154495239258
    10. '）' → logprob: -17.750154495239258

Token 88: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.00341463228687644
    2. '%' → logprob: -5.753414630889893
    3. ' ' → logprob: -8.50341510772705
    4. ')' → logprob: -10.50341510772705
    5. '   ' → logprob: -13.25341510772705
    6. ' ' → logprob: -13.87841510772705
    7. ')%' → logprob: -14.00341510772705
    8. ' %
' → logprob: -14.37841510772705
    9. ' )' → logprob: -14.50341510772705
    10. '  ' → logprob: -15.25341510772705

Token 89: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.4740811586380005
    2. 'mod' → logprob: -0.9740811586380005
    3. '(mod' → logprob: -12.849081039428711
    4. '	mod' → logprob: -13.724081039428711
    5. ' ' → logprob: -15.099081039428711
    6. 'MOD' → logprob: -16.34908103942871
    7. ' ' → logprob: -16.84908103942871
    8. ' мод' → logprob: -17.72408103942871
    9. '_mod' → logprob: -17.84908103942871
    10. '```' → logprob: -18.09908103942871

Token 90: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08578652888536453
    2. ' y' → logprob: -2.7107865810394287
    3. 'y' → logprob: -4.83578634262085
    4. '        
' → logprob: -5.71078634262085
    5. ' 
' → logprob: -6.08578634262085
    6. '\n' → logprob: -7.46078634262085
    7. '\' → logprob: -7.71078634262085
    8. '   ' → logprob: -8.585786819458008
    9. '
' → logprob: -8.710786819458008
    10. '  
' → logprob: -9.085786819458008

Token 91: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05521838739514351
    2. ' y' → logprob: -3.055218458175659
    3. 'y' → logprob: -5.30521821975708
    4. '        
' → logprob: -7.18021821975708
    5. '   ' → logprob: -8.430218696594238
    6. ',' → logprob: -8.805218696594238
    7. '```' → logprob: -8.930218696594238
    8. ' ' → logprob: -9.180218696594238
    9. ' 
' → logprob: -9.555218696594238
    10. ')' → logprob: -9.930218696594238

Token 92: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.01815006136894226
    2. ' y' → logprob: -4.0181498527526855
    3. '       ' → logprob: -16.018150329589844
    4. '	y' → logprob: -17.143150329589844
    5. '   ' → logprob: -18.268150329589844
    6. ' ' → logprob: -19.143150329589844
    7. ' ' → logprob: -19.393150329589844
    8. '    ' → logprob: -20.393150329589844
    9. ' 
' → logprob: -20.768150329589844
    10. '        ' → logprob: -21.018150329589844

Token 93: ' >>=' (ID: 81952)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.5912991762161255
    2. ' >>=' → logprob: -0.9662991762161255
    3. '=' → logprob: -2.841299057006836
    4. '//=' → logprob: -5.466299057006836
    5. '>' → logprob: -6.091299057006836
    6. '//' → logprob: -8.341299057006836
    7. ' ' → logprob: -8.716299057006836
    8. ' =' → logprob: -9.091299057006836
    9. ' >>' → logprob: -9.341299057006836
    10. ' //' → logprob: -9.591299057006836

Token 94: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001398929744027555
    2. ' ' → logprob: -8.875140190124512
    3. ' ' → logprob: -17.625139236450195
    4. '```' → logprob: -17.875139236450195
    5. '   ' → logprob: -18.500139236450195
    6. '１' → logprob: -19.500139236450195
    7. '' → logprob: -19.625139236450195
    8. '0' → logprob: -20.437639236450195
    9. '2' → logprob: -20.562639236450195
    10. '`' → logprob: -20.625139236450195

Token 95: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '```' → logprob: -17.625001907348633
    4. '   ' → logprob: -18.125001907348633
    5. '' → logprob: -19.562501907348633
    6. '１' → logprob: -20.062501907348633
    7. '۱' → logprob: -20.250001907348633
    8. '১' → logprob: -20.687501907348633
    9. '१' → logprob: -20.750001907348633
    10. '0' → logprob: -20.812501907348633

Token 96: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39921149611473083
    2. '
' → logprob: -1.3992115259170532
    3. ' 
' → logprob: -3.7742114067077637
    4. 'return' → logprob: -3.7742114067077637
    5. '    
' → logprob: -4.024211406707764
    6. ' return' → logprob: -4.274211406707764
    7. '  
' → logprob: -6.774211406707764
    8. ' ' → logprob: -6.899211406707764
    9. '   
' → logprob: -7.024211406707764
    10. ':return' → logprob: -8.149211883544922

Token 97: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5331296920776367
    2. '
' → logprob: -2.0331296920776367
    3. ' return' → logprob: -2.0331296920776367
    4. 'return' → logprob: -2.0331296920776367
    5. ' 
' → logprob: -4.783129692077637
    6. '    
' → logprob: -5.533129692077637
    7. ' ' → logprob: -5.783129692077637
    8. '  
' → logprob: -6.408129692077637
    9. '1' → logprob: -7.158129692077637
    10. '   
' → logprob: -7.158129692077637

Token 98: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.44652315974235535
    2. ' return' → logprob: -1.1965231895446777
    3. '   ' → logprob: -2.9465231895446777
    4. ' ' → logprob: -5.946523189544678
    5. ' 
' → logprob: -6.571523189544678
    6. ':return' → logprob: -7.446523189544678
    7. '	return' → logprob: -8.57152271270752
    8. '    
' → logprob: -8.57152271270752
    9. '       ' → logprob: -9.57152271270752
    10. '    ' → logprob: -9.57152271270752

Token 99: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.4740775227546692
    2. ' result' → logprob: -0.9740775227546692
    3. ' ' → logprob: -14.974077224731445
    4. '(result' → logprob: -15.849077224731445
    5. '	result' → logprob: -18.474077224731445
    6. ' ' → logprob: -18.849077224731445
    7. '[result' → logprob: -19.474077224731445
    8. '=result' → logprob: -19.724077224731445
    9. ' resultat' → logprob: -19.849077224731445
    10. '$result' → logprob: -20.474077224731445

Token 100: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.46407443284988403
    2. 'def' → logprob: -2.0890743732452393
    3. '<|end|>' → logprob: -2.0890743732452393
    4. '

' → logprob: -2.3390743732452393
    5. '#' → logprob: -4.714074611663818
    6. '```' → logprob: -4.964074611663818
    7. '\n' → logprob: -4.964074611663818
    8. '' → logprob: -7.339074611663818
    9. '<|end|>' → logprob: -7.464074611663818
    10. '  
' → logprob: -7.589074611663818

Token 101: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01262112520635128
    2. '#' → logprob: -5.26262092590332
    3. 'n' → logprob: -5.76262092590332
    4. '
' → logprob: -5.88762092590332
    5. '```' → logprob: -7.51262092590332
    6. '\n' → logprob: -8.13762092590332
    7. '

' → logprob: -9.38762092590332
    8. '  
' → logprob: -9.38762092590332
    9. '\' → logprob: -9.51262092590332
    10. '' → logprob: -9.76262092590332

Token 102: ' Classe' (ID: 125455)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.025033829733729362
    2. '#' → logprob: -4.650033950805664
    3. 'from' → logprob: -5.150033950805664
    4. ' def' → logprob: -5.400033950805664
    5. 'n' → logprob: -5.900033950805664
    6. 'import' → logprob: -7.025033950805664
    7. ' n' → logprob: -8.275033950805664
    8. 'input' → logprob: -8.400033950805664
    9. 'class' → logprob: -8.650033950805664
    10. ' from' → logprob: -9.025033950805664

Token 103: ' pour' (ID: 1930)
  Prédit: ' class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' class' → logprob: -0.776871919631958
    2. ' Factor' → logprob: -1.026871919631958
    3. 'class' → logprob: -2.401871919631958
    4. ' Modular' → logprob: -3.276871919631958
    5. ' Mod' → logprob: -3.526871919631958
    6. ' Calculator' → logprob: -4.526871681213379
    7. ' ' → logprob: -6.026871681213379
    8. ' Counter' → logprob: -6.401871681213379
    9. 'Factor' → logprob: -6.526871681213379
    10. ' My' → logprob: -6.901871681213379

Token 104: ' trouver' (ID: 23195)
  Prédit: ' gérer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' gérer' → logprob: -0.10123202949762344
    2. ' calcul' → logprob: -2.7262320518493652
    3. ' représ' → logprob: -4.726232051849365
    4. ' mod' → logprob: -5.101232051849365
    5. ' comb' → logprob: -5.351232051849365
    6. ' la' → logprob: -6.476232051849365
    7. ' coder' → logprob: -6.726232051849365
    8. ' l' → logprob: -6.851232051849365
    9. ' represent' → logprob: -7.101232051849365
    10. ' modular' → logprob: -7.226232051849365

Token 105: ' et' (ID: 859)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6202808022499084
    2. ' l' → logprob: -1.4952807426452637
    3. 'class' → logprob: -2.3702807426452637
    4. ' les' → logprob: -3.1202807426452637
    5. ' le' → logprob: -3.3702807426452637
    6. 'la' → logprob: -4.495280742645264
    7. 'l' → logprob: -4.620280742645264
    8. 'les' → logprob: -4.620280742645264
    9. ' class' → logprob: -4.870280742645264
    10. ' des' → logprob: -5.245280742645264

Token 106: ' union' (ID: 22208)
  Prédit: 'union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'union' → logprob: -0.5694372653961182
    2. ' union' → logprob: -0.9444372653961182
    3. ' unir' → logprob: -3.819437265396118
    4. ' gérer' → logprob: -4.069437026977539
    5. ' ' → logprob: -6.194437026977539
    6. 'un' → logprob: -6.444437026977539
    7. '_union' → logprob: -7.569437026977539
    8. '   ' → logprob: -8.069437026977539
    9. ' un' → logprob: -8.194437026977539
    10. '	union' → logprob: -8.444437026977539

Token 107: ' des' (ID: 731)
  Prédit: '-find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-find' → logprob: -0.1431407779455185
    2. 'find' → logprob: -2.2681407928466797
    3. '-F' → logprob: -4.14314079284668
    4. ' find' → logprob: -5.01814079284668
    5. 'Find' → logprob: -5.39314079284668
    6. '_find' → logprob: -6.01814079284668
    7. '-' → logprob: -9.39314079284668
    8. ' Find' → logprob: -9.64314079284668
    9. ' ' → logprob: -9.89314079284668
    10. '/find' → logprob: -10.39314079284668

Token 108: ' compos' (ID: 14635)
  Prédit: ' ensembles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ensembles' → logprob: -0.8834035396575928
    2. 'ense' → logprob: -1.7584035396575928
    3. ' sets' → logprob: -1.7584035396575928
    4. 'sets' → logprob: -2.1334035396575928
    5. ' compos' → logprob: -2.7584035396575928
    6. 's' → logprob: -3.7584035396575928
    7. 'com' → logprob: -5.008403778076172
    8. 'ensemble' → logprob: -5.008403778076172
    9. ' somm' → logprob: -5.383403778076172
    10. 'élé' → logprob: -5.633403778076172

Token 109: 'antes' (ID: 5193)
  Prédit: 'antes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'antes' → logprob: -0.14556758105754852
    2. 'ants' → logprob: -2.1455676555633545
    3. 'ant' → logprob: -4.020567417144775
    4. 'ante' → logprob: -7.895567417144775
    5. 'anten' → logprob: -10.270567893981934
    6. 'n' → logprob: -11.395567893981934
    7. 'pos' → logprob: -11.395567893981934
    8. '{' → logprob: -11.645567893981934
    9. 'ponents' → logprob: -11.645567893981934
    10. '```' → logprob: -11.645567893981934

Token 110: ' connex' (ID: 154480)
  Prédit: ' connex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' connex' → logprob: -0.8742696046829224
    2. 'conn' → logprob: -1.1242696046829224
    3. 'connect' → logprob: -1.7492696046829224
    4. '_conn' → logprob: -3.499269485473633
    5. 'connected' → logprob: -4.499269485473633
    6. 'dis' → logprob: -4.499269485473633
    7. ' dis' → logprob: -5.249269485473633
    8. '```' → logprob: -5.374269485473633
    9. ' connect' → logprob: -5.624269485473633
    10. ' connected' → logprob: -5.749269485473633

Token 111: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.5146213173866272
    2. 'entes' → logprob: -1.2646212577819824
    3. 'ents' → logprob: -2.2646212577819824
    4. 'antes' → logprob: -5.514621257781982
    5. 'ent' → logprob: -5.889621257781982
    6. 'ion' → logprob: -6.139621257781982
    7. 'class' → logprob: -6.889621257781982
    8. 'ions' → logprob: -7.014621257781982
    9. 'e' → logprob: -7.264621257781982
    10. 'ect' → logprob: -7.389621257781982

Token 112: ' (' (ID: 350)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.001207019085995853
    2. '
' → logprob: -6.876206874847412
    3. ' class' → logprob: -8.75120735168457
    4. ':
' → logprob: -11.75120735168457
    5. ':' → logprob: -13.00120735168457
    6. 'c' → logprob: -13.25120735168457
    7. '```' → logprob: -14.25120735168457
    8. 's' → logprob: -14.75120735168457
    9. '(class' → logprob: -14.87620735168457
    10. '"class' → logprob: -15.00120735168457

Token 113: 'Union' (ID: 39222)
  Prédit: ' dis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dis' → logprob: -0.6111304759979248
    2. ' Union' → logprob: -1.7361304759979248
    3. 'dis' → logprob: -2.361130475997925
    4. 'Dis' → logprob: -2.861130475997925
    5. 'Union' → logprob: -2.861130475997925
    6. ' Dis' → logprob: -3.486130475997925
    7. ' les' → logprob: -4.486130714416504
    8. ' la' → logprob: -5.236130714416504
    9. 'l' → logprob: -5.486130714416504
    10. ' l' → logprob: -5.611130714416504

Token 114: '-F' (ID: 8074)
  Prédit: 'Find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Find' → logprob: -0.011849689297378063
    2. '-F' → logprob: -4.511849880218506
    3. ' Find' → logprob: -7.136849880218506
    4. '_Find' → logprob: -13.136849403381348
    5. '-' → logprob: -13.261849403381348
    6. '–' → logprob: -14.636849403381348
    7. ' find' → logprob: -14.636849403381348
    8. ' -' → logprob: -14.761849403381348
    9. '-find' → logprob: -15.136849403381348
    10. 'F' → logprob: -15.136849403381348

Token 115: 'ind' (ID: 521)
  Prédit: 'ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.018747732043266296
    2. 'Find' → logprob: -4.018747806549072
    3. 'id' → logprob: -8.893747329711914
    4. 'find' → logprob: -8.893747329711914
    5. '```' → logprob: -9.268747329711914
    6. 'inder' → logprob: -9.393747329711914
    7. 'Ind' → logprob: -10.518747329711914
    8. 'I' → logprob: -10.643747329711914
    9. 'Set' → logprob: -11.518747329711914
    10. '   ' → logprob: -11.643747329711914

Token 116: ')
' (ID: 446)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.8183673024177551
    2. ')' → logprob: -1.3183672428131104
    3. '):' → logprob: -1.5683672428131104
    4. 'class' → logprob: -2.6933672428131104
    5. ')
' → logprob: -4.4433674812316895
    6. ' class' → logprob: -6.5683674812316895
    7. '):

' → logprob: -6.5683674812316895
    8. '):
' → logprob: -7.8183674812316895
    9. ':
' → logprob: -9.318367004394531
    10. ':' → logprob: -10.193367004394531

Token 117: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0041142539121210575
    2. '
' → logprob: -5.504114151000977
    3. ' class' → logprob: -10.254114151000977
    4. '```' → logprob: -15.129114151000977
    5. '

' → logprob: -16.254114151000977
    6. '
' → logprob: -16.629114151000977
    7. 'clas' → logprob: -17.004114151000977
    8. ' 
' → logprob: -17.379114151000977
    9. '  
' → logprob: -17.379114151000977
    10. ',class' → logprob: -17.879114151000977

Token 118: ' Union' (ID: 14746)
  Prédit: ' Union'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Union' → logprob: -0.01882307417690754
    2. 'Union' → logprob: -4.018823146820068
    3. ' Dis' → logprob: -7.518823146820068
    4. 'Dis' → logprob: -9.76882266998291
    5. ' DS' → logprob: -9.76882266998291
    6. 'DS' → logprob: -11.89382266998291
    7. ' UF' → logprob: -12.39382266998291
    8. ' ' → logprob: -13.51882266998291
    9. '_union' → logprob: -13.51882266998291
    10. 'union' → logprob: -14.26882266998291

Token 119: 'Find' (ID: 11437)
  Prédit: 'Find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Find' → logprob: -7.822646693966817e-06
    2. '-F' → logprob: -12.000007629394531
    3. '-' → logprob: -13.500007629394531
    4. ' Find' → logprob: -16.00000762939453
    5. '_Find' → logprob: -17.00000762939453
    6. ' -' → logprob: -17.12500762939453
    7. 'F' → logprob: -17.25000762939453
    8. 'Finder' → logprob: -17.87500762939453
    9. '-find' → logprob: -18.00000762939453
    10. 'Fin' → logprob: -18.25000762939453

Token 120: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008888294687494636
    2. ':
' → logprob: -7.250888824462891
    3. ' :' → logprob: -9.25088882446289
    4. '():' → logprob: -9.75088882446289
    5. '):' → logprob: -11.37588882446289
    6. '(object' → logprob: -11.75088882446289
    7. '(' → logprob: -13.62588882446289
    8. ':**' → logprob: -13.62588882446289
    9. ':

' → logprob: -14.37588882446289
    10. ' :
' → logprob: -14.50088882446289

Token 121: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.34967494010925293
    2. '   ' → logprob: -1.349674940109253
    3. ':
' → logprob: -3.724674940109253
    4. ' def' → logprob: -5.224675178527832
    5. 'def' → logprob: -5.849675178527832
    6. ':def' → logprob: -7.099675178527832
    7. '
' → logprob: -7.474675178527832
    8. '    
' → logprob: -7.599675178527832
    9. '  
' → logprob: -7.849675178527832
    10. ' ' → logprob: -8.599675178527832

Token 122: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.47492241859436035
    2. ' def' → logprob: -0.9749224185943604
    3. '   ' → logprob: -7.099922180175781
    4. '	def' → logprob: -10.974922180175781
    5. ' ' → logprob: -13.349922180175781
    6. '
' → logprob: -15.224922180175781
    7. '  ' → logprob: -15.349922180175781
    8. ' 
' → logprob: -15.474922180175781
    9. ':def' → logprob: -15.599922180175781
    10. '    ' → logprob: -15.974922180175781

Token 123: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.04581758379936218
    2. 'init' → logprob: -3.6708176136016846
    3. '__' → logprob: -4.1708173751831055
    4. '_init' → logprob: -6.1708173751831055
    5. ' init' → logprob: -6.5458173751831055
    6. ' _' → logprob: -8.045817375183105
    7. ' ' → logprob: -10.670817375183105
    8. '_' → logprob: -11.670817375183105
    9. ' def' → logprob: -13.170817375183105
    10. 'nit' → logprob: -13.170817375183105

Token 124: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -4.320199877838604e-07
    2. 'ini' → logprob: -15.5
    3. 'i' → logprob: -17.0
    4. ' init' → logprob: -17.875
    5. 'innit' → logprob: -18.125
    6. 'in' → logprob: -18.25
    7. 'inite' → logprob: -18.375
    8. '	init' → logprob: -18.375
    9. 'int' → logprob: -18.375
    10. '_init' → logprob: -19.125

Token 125: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.07893925160169601
    2. '__' → logprob: -2.578939199447632
    3. '__((' → logprob: -10.328939437866211
    4. '__(
' → logprob: -11.453939437866211
    5. '__('' → logprob: -12.328939437866211
    6. '___' → logprob: -14.578939437866211
    7. '__(*' → logprob: -14.703939437866211
    8. '__("' → logprob: -14.953939437866211
    9. '_' → logprob: -15.328939437866211
    10. '____' → logprob: -16.45393943786621

Token 126: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.9623810658231378e-05
    2. ' self' → logprob: -10.875020027160645
    3. 'n' → logprob: -14.375020027160645
    4. ',' → logprob: -16.875019073486328
    5. '(self' → logprob: -18.500019073486328
    6. '	self' → logprob: -18.500019073486328
    7. ',self' → logprob: -18.500019073486328
    8. ')' → logprob: -18.750019073486328
    9. '
' → logprob: -18.750019073486328
    10. '   ' → logprob: -19.500019073486328

Token 127: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01053482387214899
    2. 'self' → logprob: -5.010534763336182
    3. '(self' → logprob: -6.010534763336182
    4. ' ,' → logprob: -7.010534763336182
    5. '(' → logprob: -9.13553524017334
    6. ',self' → logprob: -9.26053524017334
    7. ' (' → logprob: -9.38553524017334
    8. ')(' → logprob: -9.38553524017334
    9. ')' → logprob: -10.13553524017334
    10. ' self' → logprob: -10.88553524017334

Token 128: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.008670472539961338
    2. ' n' → logprob: -4.758670330047607
    3. 'self' → logprob: -10.133670806884766
    4. 'size' → logprob: -11.883670806884766
    5. '   ' → logprob: -12.508670806884766
    6. ' self' → logprob: -13.508670806884766
    7. ' size' → logprob: -13.508670806884766
    8. ' ' → logprob: -13.508670806884766
    9. '	n' → logprob: -14.258670806884766
    10. ')' → logprob: -15.133670806884766

Token 129: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0047265528701245785
    2. '):
' → logprob: -5.379726409912109
    3. ')' → logprob: -9.37972640991211
    4. ' ):' → logprob: -10.87972640991211
    5. '):
' → logprob: -13.12972640991211
    6. ':' → logprob: -14.12972640991211
    7. '   ' → logprob: -16.62972640991211
    8. ',' → logprob: -16.87972640991211
    9. ' ):
' → logprob: -16.87972640991211
    10. ' )' → logprob: -17.00472640991211

Token 130: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006459566066041589
    2. 'self' → logprob: -7.750646114349365
    3. '   ' → logprob: -9.000645637512207
    4. ' self' → logprob: -9.625645637512207
    5. 'n' → logprob: -11.375645637512207
    6. '     ' → logprob: -12.875645637512207
    7. '<|end|>' → logprob: -13.250645637512207
    8. '	self' → logprob: -13.375645637512207
    9. '    ' → logprob: -13.500645637512207
    10. '	   ' → logprob: -13.500645637512207

Token 131: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.006844787858426571
    2. ' self' → logprob: -5.756844997406006
    3. '   ' → logprob: -6.006844997406006
    4. '       ' → logprob: -6.756844997406006
    5. 'parent' → logprob: -11.006844520568848
    6. '	self' → logprob: -11.006844520568848
    7. '    ' → logprob: -14.006844520568848
    8. ' ' → logprob: -14.381844520568848
    9. ' parent' → logprob: -15.006844520568848
    10. '  ' → logprob: -15.381844520568848

Token 132: '.parent' (ID: 17454)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7453711628913879
    2. '.parent' → logprob: -0.8703711628913879
    3. 'parent' → logprob: -2.995371103286743
    4. '._' → logprob: -3.870371103286743
    5. '=' → logprob: -4.245371341705322
    6. '_parent' → logprob: -4.620371341705322
    7. ' =' → logprob: -6.120371341705322
    8. '.parents' → logprob: -6.120371341705322
    9. '.size' → logprob: -6.995371341705322
    10. '.rank' → logprob: -7.120371341705322

Token 133: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020806640386581
    2. ' =' → logprob: -2.350208044052124
    3. '=[' → logprob: -15.100208282470703
    4. '   ' → logprob: -15.225208282470703
    5. '[' → logprob: -15.725208282470703
    6. '=[]' → logprob: -15.975208282470703
    7. ' =[' → logprob: -15.975208282470703
    8. 's' → logprob: -16.600208282470703
    9. '=

' → logprob: -16.600208282470703
    10. '＝' → logprob: -16.600208282470703

Token 134: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.16893243789672852
    2. '[list' → logprob: -1.9189324378967285
    3. ' list' → logprob: -5.4189324378967285
    4. '[' → logprob: -5.9189324378967285
    5. '[-' → logprob: -6.6689324378967285
    6. ' [' → logprob: -8.54393196105957
    7. '[n' → logprob: -9.79393196105957
    8. '[node' → logprob: -11.54393196105957
    9. '[parent' → logprob: -12.41893196105957
    10. '[List' → logprob: -12.66893196105957

Token 135: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -4.127333340875339e-06
    2. 'range' → logprob: -12.625003814697266
    3. '(' → logprob: -14.250003814697266
    4. ' range' → logprob: -16.875003814697266
    5. '	range' → logprob: -17.750003814697266
    6. '

' → logprob: -20.625003814697266
    7. '(map' → logprob: -20.875003814697266
    8. '=' → logprob: -21.000003814697266
    9. '(r' → logprob: -21.250003814697266
    10. '(
' → logprob: -21.375003814697266

Token 136: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.6405310816480778e-05
    2. '(' → logprob: -11.125016212463379
    3. 'n' → logprob: -13.500016212463379
    4. ')(' → logprob: -16.250017166137695
    5. ')n' → logprob: -16.500017166137695
    6. ')' → logprob: -17.750017166137695
    7. ' (' → logprob: -20.000017166137695
    8. ' n' → logprob: -20.500017166137695
    9. '	n' → logprob: -20.500017166137695
    10. ',n' → logprob: -20.750017166137695

Token 137: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.11288268864154816
    2. '))
' → logprob: -2.237882614135742
    3. '))
' → logprob: -10.362882614135742
    4. '))

' → logprob: -10.987882614135742
    5. ' ))' → logprob: -12.362882614135742
    6. ' ))
' → logprob: -12.862882614135742
    7. ')' → logprob: -13.112882614135742
    8. ')))' → logprob: -13.737882614135742
    9. '(n' → logprob: -15.362882614135742
    10. ')),' → logprob: -15.487882614135742

Token 138: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0949196144938469
    2. '
' → logprob: -2.4699196815490723
    3. '<|end|>' → logprob: -6.094919681549072
    4. '   ' → logprob: -6.469919681549072
    5. 'self' → logprob: -7.094919681549072
    6. '        
' → logprob: -7.844919681549072
    7. ' 
' → logprob: -8.594919204711914
    8. ' ' → logprob: -8.719919204711914
    9. '  
' → logprob: -8.719919204711914
    10. ' self' → logprob: -8.844919204711914

Token 139: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.001833442016504705
    2. '       ' → logprob: -6.876833438873291
    3. ' self' → logprob: -7.626833438873291
    4. '   ' → logprob: -8.12683391571045
    5. ' ' → logprob: -11.75183391571045
    6. '
' → logprob: -12.62683391571045
    7. '  ' → logprob: -13.37683391571045
    8. 's' → logprob: -13.50183391571045
    9. '    ' → logprob: -14.37683391571045
    10. '     ' → logprob: -14.50183391571045

Token 140: '.rank' (ID: 96793)
  Prédit: '.rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rank' → logprob: -0.04893319681286812
    2. '.size' → logprob: -3.048933267593384
    3. 'size' → logprob: -9.048933029174805
    4. '.' → logprob: -9.423933029174805
    5. '.parent' → logprob: -9.798933029174805
    6. 'rank' → logprob: -10.173933029174805
    7. '.sz' → logprob: -10.673933029174805
    8. ' .' → logprob: -11.548933029174805
    9. 'sizes' → logprob: -12.548933029174805
    10. ' size' → logprob: -12.673933029174805

Token 141: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07900369167327881
    2. '=' → logprob: -2.5790038108825684
    3. 's' → logprob: -9.57900333404541
    4. '   ' → logprob: -10.82900333404541
    5. ' ' → logprob: -11.57900333404541
    6. '[' → logprob: -11.95400333404541
    7. '  ' → logprob: -12.57900333404541
    8. '<|end|>' → logprob: -13.07900333404541
    9. '=[]' → logprob: -14.07900333404541
    10. '	' → logprob: -14.32900333404541

Token 142: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.006724249105900526
    2. ' [' → logprob: -5.0067243576049805
    3. '[n' → logprob: -11.63172435760498
    4. ' ' → logprob: -17.506723403930664
    5. '0' → logprob: -17.756723403930664
    6. '   ' → logprob: -17.881723403930664
    7. '([' → logprob: -18.006723403930664
    8. 'n' → logprob: -18.631723403930664
    9. ' ' → logprob: -19.131723403930664
    10. '	' → logprob: -20.256723403930664

Token 143: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '1' → logprob: -16.625
    4. '۰' → logprob: -23.25
    5. '   ' → logprob: -24.75
    6. '(' → logprob: -25.375
    7. '０' → logprob: -25.5
    8. '  ' → logprob: -25.625
    9. ')' → logprob: -25.75
    10. '```' → logprob: -26.375

Token 144: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0037264458369463682
    2. ']*' → logprob: -5.628726482391357
    3. ' ]' → logprob: -9.3787260055542
    4. ' for' → logprob: -10.5037260055542
    5. ')' → logprob: -11.7537260055542
    6. ']*(' → logprob: -12.1287260055542
    7. 'for' → logprob: -14.5037260055542
    8. ',' → logprob: -15.3787260055542
    9. ')]' → logprob: -15.5037260055542
    10. '   ' → logprob: -16.128726959228516

Token 145: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.9361264946837764e-07
    2. ' n' → logprob: -16.0
    3. '(n' → logprob: -17.125
    4. '	n' → logprob: -20.375
    5. '(' → logprob: -21.125
    6. ')n' → logprob: -23.625
    7. '   ' → logprob: -23.875
    8. 'н' → logprob: -24.375
    9. '_n' → logprob: -24.375
    10. ' (' → logprob: -24.875

Token 146: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 147: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4954218566417694
    2. '<|end|>' → logprob: -0.9954218864440918
    3. '    
' → logprob: -4.745421886444092
    4. '       ' → logprob: -5.870421886444092
    5. '   ' → logprob: -5.870421886444092
    6. 'def' → logprob: -6.245421886444092
    7. '<|end|>' → logprob: -6.370421886444092
    8. '        
' → logprob: -6.620421886444092
    9. '  
' → logprob: -7.745421886444092
    10. '

' → logprob: -7.870421886444092

Token 148: ' self' (ID: 1051)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 149: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -0.0027213026769459248
    2. 'size' → logprob: -7.127721309661865
    3. '.parent' → logprob: -7.377721309661865
    4. '.rank' → logprob: -7.502721309661865
    5. '.count' → logprob: -7.627721309661865
    6. '.sz' → logprob: -9.002720832824707
    7. '.' → logprob: -9.752720832824707
    8. '.s' → logprob: -10.127720832824707
    9. 'sizes' → logprob: -11.752720832824707
    10. '_size' → logprob: -12.877720832824707

Token 150: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.252080500125885
    2. ' =' → logprob: -1.5020804405212402
    3. '[' → logprob: -9.502080917358398
    4. 's' → logprob: -9.752080917358398
    5. ' ' → logprob: -11.877080917358398
    6. '   ' → logprob: -11.877080917358398
    7. ']' → logprob: -13.877080917358398
    8. '=[' → logprob: -14.127080917358398
    9. ' =[' → logprob: -14.502080917358398
    10. '  ' → logprob: -14.627080917358398

Token 151: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001577236340381205
    2. ' [' → logprob: -6.501577377319336
    3. '[n' → logprob: -9.501577377319336
    4. '1' → logprob: -16.876577377319336
    5. ' ' → logprob: -17.001577377319336
    6. '   ' → logprob: -17.376577377319336
    7. 'n' → logprob: -17.626577377319336
    8. '[len' → logprob: -18.376577377319336
    9. '[size' → logprob: -19.126577377319336
    10. '[self' → logprob: -19.126577377319336

Token 152: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '   ' → logprob: -17.250003814697266
    4. '
' → logprob: -18.000003814697266
    5. '0' → logprob: -18.875003814697266
    6. '  ' → logprob: -19.375003814697266
    7. ']' → logprob: -19.375003814697266
    8. '[' → logprob: -19.375003814697266
    9. '۱' → logprob: -19.500003814697266
    10. ' [' → logprob: -19.750003814697266

Token 153: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.02326248399913311
    2. ']' → logprob: -3.7732625007629395
    3. ' ]' → logprob: -12.148262023925781
    4. ' for' → logprob: -12.398262023925781
    5. ']+' → logprob: -13.273262023925781
    6. '*n' → logprob: -13.648262023925781
    7. ')*' → logprob: -13.773262023925781
    8. ']*(' → logprob: -13.898262023925781
    9. '*' → logprob: -14.273262023925781
    10. ',' → logprob: -14.398262023925781

Token 154: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.320199877838604e-07
    2. ' n' → logprob: -14.75
    3. '<|end|>' → logprob: -19.0
    4. '(n' → logprob: -19.125
    5. '	n' → logprob: -19.25
    6. '   ' → logprob: -19.625
    7. '
' → logprob: -19.75
    8. ')n' → logprob: -20.125
    9. '```' → logprob: -20.125
    10. '_n' → logprob: -20.25

Token 155: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21236352622509003
    2. '<|end|>' → logprob: -1.8373634815216064
    3. 'def' → logprob: -3.7123634815216064
    4. '   ' → logprob: -6.2123637199401855
    5. '<|end|>' → logprob: -6.3373637199401855
    6. '    
' → logprob: -6.5873637199401855
    7. ' def' → logprob: -6.8373637199401855
    8. '	def' → logprob: -7.9623637199401855
    9. '

' → logprob: -8.087363243103027
    10. '  
' → logprob: -8.837363243103027

Token 156: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13177967071533203
    2. '<|end|>' → logprob: -2.381779670715332
    3. 'def' → logprob: -4.256779670715332
    4. '   ' → logprob: -4.756779670715332
    5. '    
' → logprob: -5.381779670715332
    6. '<|end|>' → logprob: -6.881779670715332
    7. '  
' → logprob: -7.256779670715332
    8. '

' → logprob: -7.631779670715332
    9. '	def' → logprob: -7.631779670715332
    10. '
' → logprob: -8.506779670715332

Token 157: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00011415231710998341
    2. ' def' → logprob: -9.625114440917969
    3. '
' → logprob: -10.000114440917969
    4. '   ' → logprob: -13.250114440917969
    5. '

' → logprob: -14.750114440917969
    6. '	def' → logprob: -15.000114440917969
    7. '    
' → logprob: -16.25011444091797
    8. 'de' → logprob: -17.00011444091797
    9. '
' → logprob: -17.25011444091797
    10. ' 
' → logprob: -18.87511444091797

Token 158: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.10021474957466125
    2. 'find' → logprob: -2.350214719772339
    3. ' ' → logprob: -12.100214958190918
    4. '	find' → logprob: -13.725214958190918
    5. '_find' → logprob: -14.100214958190918
    6. '   ' → logprob: -15.850214958190918
    7. '.find' → logprob: -15.975214958190918
    8. '  ' → logprob: -15.975214958190918
    9. 'fin' → logprob: -16.8502140045166
    10. 'f' → logprob: -17.1002140045166

Token 159: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5764472484588623
    2. '(self' → logprob: -0.8264472484588623
    3. ' (' → logprob: -7.951447486877441
    4. '(x' → logprob: -9.201447486877441
    5. '(u' → logprob: -11.201447486877441
    6. 'self' → logprob: -11.701447486877441
    7. '(s' → logprob: -11.701447486877441
    8. '(a' → logprob: -12.076447486877441
    9. '(node' → logprob: -12.326447486877441
    10. '(i' → logprob: -12.701447486877441

Token 160: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.741495668888092
    2. '(x' → logprob: -1.8664956092834473
    3. ',' → logprob: -1.9914956092834473
    4. '(' → logprob: -2.1164956092834473
    5. '(u' → logprob: -2.7414956092834473
    6. 'self' → logprob: -3.3664956092834473
    7. '(i' → logprob: -4.991495609283447
    8. ')' → logprob: -6.366495609283447
    9. '(node' → logprob: -6.491495609283447
    10. ' (' → logprob: -7.241495609283447

Token 161: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0010429323883727193
    2. 'self' → logprob: -7.25104284286499
    3. ' x' → logprob: -8.251043319702148
    4. 'u' → logprob: -9.751043319702148
    5. 'i' → logprob: -12.001043319702148
    6. 'a' → logprob: -12.501043319702148
    7. 'parent' → logprob: -13.126043319702148
    8. ' self' → logprob: -13.626043319702148
    9. 'p' → logprob: -14.751043319702148
    10. ' u' → logprob: -15.751043319702148

Token 162: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0002888682356569916
    2. '):
' → logprob: -8.750288963317871
    3. ')' → logprob: -9.000288963317871
    4. ' ):' → logprob: -12.625288963317871
    5. ':' → logprob: -12.750288963317871
    6. '   ' → logprob: -15.125288963317871
    7. '):
' → logprob: -15.250288963317871
    8. '():' → logprob: -15.750288963317871
    9. '):

' → logprob: -16.625288009643555
    10. '       ' → logprob: -17.000288009643555

Token 163: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1504858136177063
    2. '
' → logprob: -2.0254857540130615
    3. ':' → logprob: -5.900485992431641
    4. '        
' → logprob: -6.525485992431641
    5. '<|end|>' → logprob: -7.025485992431641
    6. '  
' → logprob: -7.650485992431641
    7. ' 
' → logprob: -7.775485992431641
    8. '   ' → logprob: -8.02548599243164
    9. '):
' → logprob: -8.15048599243164
    10. '):' → logprob: -8.27548599243164

Token 164: ' while' (ID: 2049)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3891094923019409
    2. 'if' → logprob: -1.139109492301941
    3. '       ' → logprob: -6.1391096115112305
    4. '
' → logprob: -10.13910961151123
    5. ' while' → logprob: -10.88910961151123
    6. 'while' (adapté à ' while') → logprob: -11.51410961151123
    7. '	if' → logprob: -12.01410961151123
    8. '   ' → logprob: -13.13910961151123
    9. '        
' → logprob: -13.63910961151123
    10. ' 
' → logprob: -14.13910961151123

Token 165: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014320391230285168
    2. 'x' → logprob: -4.264320373535156
    3. ' self' → logprob: -8.764320373535156
    4. ' x' → logprob: -14.139320373535156
    5. '	self' → logprob: -17.139320373535156
    6. '(self' → logprob: -18.014320373535156
    7. '   ' → logprob: -19.764320373535156
    8. ' ' → logprob: -20.389320373535156
    9. 'Self' → logprob: -21.139320373535156
    10. 'parent' → logprob: -21.264320373535156

Token 166: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -2.47495681833243e-05
    2. 'parent' → logprob: -10.875024795532227
    3. ' .' → logprob: -13.000024795532227
    4. '.' → logprob: -13.250024795532227
    5. ' !=' → logprob: -14.250024795532227
    6. '[parent' → logprob: -14.875024795532227
    7. '!=' → logprob: -15.500024795532227
    8. '	parent' → logprob: -16.125024795532227
    9. '_parent' → logprob: -16.375024795532227
    10. '.self' → logprob: -16.500024795532227

Token 167: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -1.1756367712223437e-05
    2. 'x' → logprob: -11.500011444091797
    3. '[self' → logprob: -14.125011444091797
    4. '[' → logprob: -14.125011444091797
    5. '[
' → logprob: -16.750011444091797
    6. ' [' → logprob: -17.750011444091797
    7. ' x' → logprob: -18.125011444091797
    8. '(x' → logprob: -18.500011444091797
    9. '{x' → logprob: -18.625011444091797
    10. '[int' → logprob: -19.875011444091797

Token 168: ']' (ID: 60)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.34246891736984253
    2. ']' → logprob: -1.7174689769744873
    3. ']!=' → logprob: -2.2174689769744873
    4. ' !=' → logprob: -6.592468738555908
    5. ')!=' → logprob: -9.342469215393066
    6. '()!=' → logprob: -9.717469215393066
    7. 'x' → logprob: -10.092469215393066
    8. '!==' → logprob: -12.217469215393066
    9. '!=(' → logprob: -12.967469215393066
    10. ' ]' → logprob: -13.217469215393066

Token 169: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.0017625248292461038
    2. ' !=' → logprob: -6.501762390136719
    3. ']!=' → logprob: -8.376762390136719
    4. '()!=' → logprob: -11.376762390136719
    5. ')!=' → logprob: -11.626762390136719
    6. 'x' → logprob: -12.251762390136719
    7. '!==' → logprob: -12.876762390136719
    8. '!=-' → logprob: -14.001762390136719
    9. 'is' → logprob: -14.626762390136719
    10. ']' → logprob: -14.876762390136719

Token 170: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0005530327325686812
    2. ' x' → logprob: -7.500553131103516
    3. '	x' → logprob: -18.625553131103516
    4. ')x' → logprob: -21.625553131103516
    5. '   ' → logprob: -23.625553131103516
    6. 'self' → logprob: -23.750553131103516
    7. '{x' → logprob: -24.000553131103516
    8. '
' → logprob: -24.250553131103516
    9. '$x' → logprob: -24.250553131103516
    10. '(x' → logprob: -24.500553131103516

Token 171: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07889936864376068
    2. ':
' → logprob: -2.578899383544922
    3. '):
' → logprob: -12.953899383544922
    4. ':x' → logprob: -13.328899383544922
    5. '       ' → logprob: -13.453899383544922
    6. ',' → logprob: -13.953899383544922
    7. ':
' → logprob: -14.203899383544922
    8. '):' → logprob: -14.453899383544922
    9. ' :' → logprob: -14.453899383544922
    10. '           ' → logprob: -14.953899383544922

Token 172: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15919654071331024
    2. '       ' → logprob: -2.034196615219116
    3. ':
' → logprob: -5.034196376800537
    4. ' x' → logprob: -5.409196376800537
    5. ':' → logprob: -5.784196376800537
    6. 'x' → logprob: -6.784196376800537
    7. '   ' → logprob: -7.784196376800537
    8. ' self' → logprob: -8.409196853637695
    9. 'self' → logprob: -8.659196853637695
    10. '
' → logprob: -9.284196853637695

Token 173: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0859668180346489
    2. ' self' → logprob: -2.7109668254852295
    3. '           ' → logprob: -4.21096658706665
    4. 'x' → logprob: -6.96096658706665
    5. '   ' → logprob: -9.960967063903809
    6. '
' → logprob: -10.585967063903809
    7. '               ' → logprob: -10.960967063903809
    8. '	self' → logprob: -11.335967063903809
    9. ' x' → logprob: -11.585967063903809
    10. '       ' → logprob: -13.335967063903809

Token 174: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.2529072165489197
    2. 'parent' → logprob: -1.5029072761535645
    3. '=' → logprob: -7.3779072761535645
    4. ' =' → logprob: -9.002906799316406
    5. '_parent' → logprob: -9.377906799316406
    6. '[parent' → logprob: -9.877906799316406
    7. 'x' → logprob: -11.127906799316406
    8. ' parent' → logprob: -11.252906799316406
    9. 'self' → logprob: -11.252906799316406
    10. '	parent' → logprob: -11.377906799316406

Token 175: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0005657802103087306
    2. 'x' → logprob: -7.500566005706787
    3. '[' → logprob: -11.375565528869629
    4. ' x' → logprob: -14.625565528869629
    5. ' [' → logprob: -15.250565528869629
    6. '[self' → logprob: -15.500565528869629
    7. '[
' → logprob: -16.375566482543945
    8. '	x' → logprob: -16.500566482543945
    9. '[parent' → logprob: -17.000566482543945
    10. '   ' → logprob: -17.125566482543945

Token 176: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3553055226802826
    2. ']' → logprob: -1.355305552482605
    3. ' =' → logprob: -3.2303054332733154
    4. ']=' → logprob: -6.6053056716918945
    5. '[x' → logprob: -8.855305671691895
    6. ' ]' → logprob: -9.730305671691895
    7. 'x' → logprob: -9.855305671691895
    8. '[' → logprob: -11.480305671691895
    9. ')' → logprob: -12.105305671691895
    10. '=x' → logprob: -14.105305671691895

Token 177: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687121868133545
    2. ' =' → logprob: -1.1368712186813354
    3. ' ' → logprob: -17.011871337890625
    4. '=x' → logprob: -17.011871337890625
    5. ']' → logprob: -17.136871337890625
    6. 'x' → logprob: -18.011871337890625
    7. ']=' → logprob: -18.636871337890625
    8. '＝' → logprob: -18.886871337890625
    9. ')' → logprob: -19.136871337890625
    10. '[' → logprob: -19.386871337890625

Token 178: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01416350994259119
    2. ' self' → logprob: -4.264163494110107
    3. '(self' → logprob: -17.639163970947266
    4. '	self' → logprob: -18.514163970947266
    5. '           ' → logprob: -18.639163970947266
    6. '       ' → logprob: -18.889163970947266
    7. '   ' → logprob: -18.889163970947266
    8. '[self' → logprob: -19.764163970947266
    9. ' ' → logprob: -21.264163970947266
    10. '    ' → logprob: -21.514163970947266

Token 179: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -1.7835754988482222e-05
    2. 'parent' → logprob: -11.000018119812012
    3. '.' → logprob: -14.750018119812012
    4. '[parent' → logprob: -15.000018119812012
    5. '.find' → logprob: -15.500018119812012
    6. ' .' → logprob: -15.875018119812012
    7. '_parent' → logprob: -17.625017166137695
    8. 'self' → logprob: -17.875017166137695
    9. '	parent' → logprob: -18.000017166137695
    10. ' parent' → logprob: -18.375017166137695

Token 180: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -2.4987974029500037e-05
    2. '[' → logprob: -11.000024795532227
    3. 'self' → logprob: -11.750024795532227
    4. '[
' → logprob: -15.625024795532227
    5. '(self' → logprob: -16.750024795532227
    6. '[x' → logprob: -17.875024795532227
    7. '[s' → logprob: -18.375024795532227
    8. ' self' → logprob: -18.500024795532227
    9. '[parent' → logprob: -18.875024795532227
    10. '	self' → logprob: -20.000024795532227

Token 181: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.0002512071805540472
    2. '[x' → logprob: -9.000250816345215
    3. 'parent' → logprob: -9.250250816345215
    4. '[parent' → logprob: -10.500250816345215
    5. '.' → logprob: -13.625250816345215
    6. '.find' → logprob: -14.125250816345215
    7. '.Parent' → logprob: -14.375250816345215
    8. '.x' → logprob: -14.875250816345215
    9. ' parent' → logprob: -15.125250816345215
    10. ' .' → logprob: -15.250250816345215

Token 182: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0010428131790831685
    2. 'x' → logprob: -6.87604284286499
    3. '[self' → logprob: -12.626042366027832
    4. '[' → logprob: -12.626042366027832
    5. ']' → logprob: -13.376042366027832
    6. '[
' → logprob: -14.001042366027832
    7. ' x' → logprob: -15.376042366027832
    8. '][' → logprob: -15.376042366027832
    9. '```' → logprob: -15.626042366027832
    10. '	x' → logprob: -16.12604331970215

Token 183: ']]
' (ID: 29446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0016935078892856836
    2. ']]' → logprob: -6.5016937255859375
    3. '[x' → logprob: -8.876693725585938
    4. ' ]' → logprob: -11.251693725585938
    5. '])' → logprob: -11.376693725585938
    6. ']
' → logprob: -11.751693725585938
    7. ')]' → logprob: -11.876693725585938
    8. 'x' → logprob: -11.876693725585938
    9. ']}' → logprob: -12.751693725585938
    10. ']>' → logprob: -14.501693725585938

Token 184: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00915986206382513
    2. 'x' → logprob: -4.884160041809082
    3. ' x' → logprob: -6.509160041809082
    4. '   ' → logprob: -10.634160041809082
    5. '       ' → logprob: -11.134160041809082
    6. '	x' → logprob: -11.384160041809082
    7. '
' → logprob: -12.259160041809082
    8. '		' → logprob: -12.384160041809082
    9. '	       ' → logprob: -13.759160041809082
    10. '	   ' → logprob: -14.009160041809082

Token 185: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.0009119403548538685
    2. ' x' → logprob: -7.000911712646484
    3. '           ' → logprob: -14.625911712646484
    4. '   ' → logprob: -17.125911712646484
    5. '	x' → logprob: -18.250911712646484
    6. '       ' → logprob: -18.875911712646484
    7. '
' → logprob: -22.125911712646484
    8. ' ' → logprob: -22.500911712646484
    9. '               ' → logprob: -22.750911712646484
    10. ')x' → logprob: -23.375911712646484

Token 186: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.474077969789505
    2. '=' → logprob: -0.9740779399871826
    3. ' ' → logprob: -14.224078178405762
    4. ' +=' → logprob: -15.349078178405762
    5. '+=' → logprob: -17.099077224731445
    6. '.=' → logprob: -17.224077224731445
    7. '＝' → logprob: -18.474077224731445
    8. ' |=' → logprob: -18.724077224731445
    9. ' =)' → logprob: -18.849077224731445
    10. ' ^=' → logprob: -18.974077224731445

Token 187: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12692894041538239
    2. ' self' → logprob: -2.1269290447235107
    3. '   ' → logprob: -14.75192928314209
    4. '	self' → logprob: -15.37692928314209
    5. '           ' → logprob: -16.501928329467773
    6. ' ' → logprob: -16.751928329467773
    7. '       ' → logprob: -17.126928329467773
    8. '(self' → logprob: -17.251928329467773
    9. '[self' → logprob: -17.626928329467773
    10. '    ' → logprob: -18.126928329467773

Token 188: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -3.0948158382670954e-05
    2. 'parent' → logprob: -10.625030517578125
    3. '.' → logprob: -12.000030517578125
    4. ' .' → logprob: -15.500030517578125
    5. '[parent' → logprob: -16.000030517578125
    6. ' parent' → logprob: -16.625030517578125
    7. '	parent' → logprob: -17.250030517578125
    8. '.Parent' → logprob: -18.250030517578125
    9. ',parent' → logprob: -18.250030517578125
    10. '_parent' → logprob: -18.750030517578125

Token 189: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -4.0126840758603066e-05
    2. '[' → logprob: -10.250040054321289
    3. 'x' → logprob: -12.500040054321289
    4. '[self' → logprob: -14.500040054321289
    5. '[
' → logprob: -15.250040054321289
    6. ' [' → logprob: -16.12504005432129
    7. '```' → logprob: -16.25004005432129
    8. ' x' → logprob: -16.87504005432129
    9. '(x' → logprob: -17.12504005432129
    10. '[parent' → logprob: -17.62504005432129

Token 190: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0036146817728877068
    2. ')
' → logprob: -5.878614902496338
    3. ']' → logprob: -7.378614902496338
    4. '       ' → logprob: -9.00361442565918
    5. ')return' → logprob: -10.37861442565918
    6. '}' → logprob: -11.87861442565918
    7. '<|end|>' → logprob: -11.87861442565918
    8. ' )' → logprob: -12.87861442565918
    9. ']
' → logprob: -12.87861442565918
    10. '   ' → logprob: -13.00361442565918

Token 191: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00017159747949335724
    2. 'return' → logprob: -9.375171661376953
    3. ' return' → logprob: -10.125171661376953
    4. '   ' → logprob: -10.375171661376953
    5. '
' → logprob: -11.375171661376953
    6. '           ' → logprob: -14.375171661376953
    7. '        
' → logprob: -14.625171661376953
    8. '      ' → logprob: -14.750171661376953
    9. ',' → logprob: -15.250171661376953
    10. '    
' → logprob: -15.250171661376953

Token 192: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.04348357394337654
    2. '       ' → logprob: -3.7934834957122803
    3. ' return' → logprob: -4.043483734130859
    4. '   ' → logprob: -6.043483734130859
    5. '    ' → logprob: -10.04348373413086
    6. ' ' → logprob: -10.41848373413086
    7. 'x' → logprob: -10.91848373413086
    8. ' 
' → logprob: -12.41848373413086
    9. '	return' → logprob: -12.41848373413086
    10. ':return' → logprob: -12.41848373413086

Token 193: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1602245420217514
    2. ' x' → logprob: -1.9102245569229126
    3. 'self' → logprob: -15.285224914550781
    4. '	x' → logprob: -16.28522491455078
    5. ' self' → logprob: -16.91022491455078
    6. ' ' → logprob: -17.91022491455078
    7. ' ' → logprob: -19.16022491455078
    8. ')x' → logprob: -19.41022491455078
    9. '(x' → logprob: -20.03522491455078
    10. '_x' → logprob: -20.03522491455078

Token 194: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5469284653663635
    2. '<|end|>' → logprob: -1.4219284057617188
    3. '   ' → logprob: -2.0469284057617188
    4. '    
' → logprob: -3.4219284057617188
    5. '

' → logprob: -4.921928405761719
    6. ' 
' → logprob: -5.796928405761719
    7. '  
' → logprob: -5.796928405761719
    8. '```' → logprob: -6.671928405761719
    9. '<|end|>' → logprob: -6.796928405761719
    10. 'def' → logprob: -7.296928405761719

Token 195: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12080515176057816
    2. 'def' → logprob: -2.245805263519287
    3. '
' → logprob: -5.620805263519287
    4. ' def' → logprob: -6.370805263519287
    5. '    
' → logprob: -6.495805263519287
    6. '<|end|>' → logprob: -7.245805263519287
    7. '	def' → logprob: -9.120804786682129
    8. '  
' → logprob: -9.870804786682129
    9. '<|end|>' → logprob: -9.870804786682129
    10. '```' → logprob: -9.995804786682129

Token 196: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -4.179569077678025e-05
    2. ' def' → logprob: -10.250041961669922
    3. '   ' → logprob: -12.000041961669922
    4. '
' → logprob: -16.125041961669922
    5. '	def' → logprob: -17.125041961669922
    6. '    
' → logprob: -18.000041961669922
    7. ' ' → logprob: -19.000041961669922
    8. '       ' → logprob: -20.375041961669922
    9. '  ' → logprob: -20.750041961669922
    10. 'de' → logprob: -20.875041961669922

Token 197: ' unite' (ID: 96146)
  Prédit: 'union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'union' → logprob: -0.00213657901622355
    2. ' union' → logprob: -6.252136707305908
    3. 'un' → logprob: -8.50213623046875
    4. ' unite' → logprob: -12.25213623046875
    5. '_union' → logprob: -16.12713623046875
    6. '.union' → logprob: -16.75213623046875
    7. 'unit' → logprob: -17.62713623046875
    8. '	union' → logprob: -18.12713623046875
    9. 'uni' → logprob: -18.50213623046875
    10. 'merge' → logprob: -19.25213623046875

Token 198: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0009122979827225208
    2. '(' → logprob: -7.000912189483643
    3. '(s' → logprob: -14.7509126663208
    4. 'self' → logprob: -16.375911712646484
    5. ' (' → logprob: -16.625911712646484
    6. '(
' → logprob: -16.875911712646484
    7. '(x' → logprob: -17.000911712646484
    8. '(sel' → logprob: -18.125911712646484
    9. '(this' → logprob: -18.250911712646484
    10. '(Self' → logprob: -18.500911712646484

Token 199: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.08024216443300247
    2. ',' → logprob: -2.580242156982422
    3. '(' → logprob: -6.705242156982422
    4. 'self' → logprob: -9.955242156982422
    5. ')' → logprob: -10.455242156982422
    6. ',self' → logprob: -10.580242156982422
    7. '(x' → logprob: -11.205242156982422
    8. ' (' → logprob: -12.205242156982422
    9. ' ,' → logprob: -12.830242156982422
    10. ')(' → logprob: -13.830242156982422

Token 200: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.008702974766492844
    2. ' x' → logprob: -4.758702754974365
    3. 'self' → logprob: -9.758703231811523
    4. 'a' → logprob: -10.508703231811523
    5. ' self' → logprob: -13.008703231811523
    6. 'u' → logprob: -14.133703231811523
    7. ' a' → logprob: -15.258703231811523
    8. ' ' → logprob: -17.133703231811523
    9. ')x' → logprob: -17.883703231811523
    10. ' u' → logprob: -18.258703231811523

Token 201: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.547789674485102e-05
    2. ' ,' → logprob: -10.250035285949707
    3. ',x' → logprob: -17.750036239624023
    4. ',
' → logprob: -18.375036239624023
    5. '‌,' → logprob: -18.375036239624023
    6. ',y' → logprob: -19.625036239624023
    7. ',b' → logprob: -21.000036239624023
    8. '_,' → logprob: -21.625036239624023
    9. ',int' → logprob: -21.875036239624023
    10. '،' → logprob: -21.875036239624023

Token 202: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.2519293427467346
    2. ' y' → logprob: -1.5019292831420898
    3. ' ' → logprob: -16.001930236816406
    4. '	y' → logprob: -16.251930236816406
    5. '   ' → logprob: -16.876930236816406
    6. '    ' → logprob: -17.751930236816406
    7. ' ' → logprob: -18.126930236816406
    8. '<|end|>' → logprob: -18.501930236816406
    9. '  ' → logprob: -18.626930236816406
    10. ',' → logprob: -18.751930236816406

Token 203: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0004558175278361887
    2. '):
' → logprob: -7.750455856323242
    3. ')' → logprob: -10.750455856323242
    4. ' ):' → logprob: -12.625455856323242
    5. '):
' → logprob: -15.625455856323242
    6. ':' → logprob: -16.250455856323242
    7. '):

' → logprob: -17.250455856323242
    8. ')：' → logprob: -17.625455856323242
    9. '   ' → logprob: -17.875455856323242
    10. ' ' → logprob: -18.750455856323242

Token 204: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04437422752380371
    2. 'x' → logprob: -3.6693742275238037
    3. ' x' → logprob: -4.669374465942383
    4. '   ' → logprob: -5.169374465942383
    5. 'root' → logprob: -6.919374465942383
    6. '<|end|>' → logprob: -7.544374465942383
    7. ')' → logprob: -8.544374465942383
    8. ',' → logprob: -8.919374465942383
    9. ')x' → logprob: -9.044374465942383
    10. '	x' → logprob: -9.169374465942383

Token 205: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -4.763666947837919e-05
    2. ' x' → logprob: -10.25004768371582
    3. 'root' → logprob: -11.87504768371582
    4. '   ' → logprob: -12.75004768371582
    5. 'rx' → logprob: -13.12504768371582
    6. 'px' → logprob: -15.50004768371582
    7. '	x' → logprob: -17.00004768371582
    8. '```' → logprob: -17.50004768371582
    9. 'xr' → logprob: -17.87504768371582
    10. '       ' → logprob: -17.87504768371582

Token 206: ' =' (ID: 314)
  Prédit: '_root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -0.685607373714447
    2. 'root' → logprob: -0.935607373714447
    3. ' =' → logprob: -2.560607433319092
    4. '=' → logprob: -3.685607433319092
    5. 'r' → logprob: -7.810607433319092
    6. 'Root' → logprob: -8.060606956481934
    7. '_parent' → logprob: -8.310606956481934
    8. '=root' → logprob: -8.560606956481934
    9. '_' → logprob: -8.935606956481934
    10. 'p' → logprob: -9.810606956481934

Token 207: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.306760805164231e-05
    2. ' self' → logprob: -11.25001335144043
    3. '(self' → logprob: -19.62501335144043
    4. '   ' → logprob: -20.50001335144043
    5. 'union' → logprob: -21.00001335144043
    6. '	self' → logprob: -21.62501335144043
    7. '=self' → logprob: -21.75001335144043
    8. '[self' → logprob: -22.00001335144043
    9. 'this' → logprob: -22.87501335144043
    10. '       ' → logprob: -23.00001335144043

Token 208: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.007754622492939234
    2. 'find' → logprob: -4.882754802703857
    3. '.' → logprob: -9.8827543258667
    4. '.findall' → logprob: -10.0077543258667
    5. '.un' → logprob: -11.2577543258667
    6. '.union' → logprob: -11.3827543258667
    7. '_find' → logprob: -11.5077543258667
    8. '=find' → logprob: -12.6327543258667
    9. 'un' → logprob: -12.6327543258667
    10. ' find' → logprob: -12.8827543258667

Token 209: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.02975083328783512
    2. '(' → logprob: -3.5297508239746094
    3. '(
' → logprob: -15.52975082397461
    4. 'x' → logprob: -16.90475082397461
    5. ' (' → logprob: -17.02975082397461
    6. '(y' → logprob: -18.15475082397461
    7. ')' → logprob: -18.15475082397461
    8. '()' → logprob: -19.40475082397461
    9. '(

' → logprob: -19.40475082397461
    10. ',' → logprob: -20.27975082397461

Token 210: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.47413578629493713
    2. ')' → logprob: -0.9741357564926147
    3. ' )
' → logprob: -10.349135398864746
    4. ')
' → logprob: -11.224135398864746
    5. ')y' → logprob: -11.474135398864746
    6. ' )' → logprob: -13.099135398864746
    7. ')

' → logprob: -14.724135398864746
    8. ')x' → logprob: -15.474135398864746
    9. '),' → logprob: -16.349136352539062
    10. '       ' → logprob: -16.349136352539062

Token 211: '       ' (ID: 309)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.5656023025512695
    2. '       ' → logprob: -1.9406023025512695
    3. 'y' → logprob: -2.0656023025512695
    4. '
' → logprob: -2.0656023025512695
    5. ' if' → logprob: -4.9406023025512695
    6. ',y' → logprob: -5.0656023025512695
    7. '        
' → logprob: -5.8156023025512695
    8. ' ' → logprob: -5.9406023025512695
    9. ',' → logprob: -6.0656023025512695
    10. ' 
' → logprob: -6.3156023025512695

Token 212: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.000553151941858232
    2. ' y' → logprob: -7.500553131103516
    3. '       ' → logprob: -15.875553131103516
    4. '(y' → logprob: -18.000553131103516
    5. '   ' → logprob: -18.375553131103516
    6. '	y' → logprob: -18.500553131103516
    7. '
' → logprob: -19.625553131103516
    8. ',y' → logprob: -20.625553131103516
    9. ')y' → logprob: -20.625553131103516
    10. '    ' → logprob: -20.875553131103516

Token 213: ' =' (ID: 314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05600602552294731
    2. '<|end|>' → logprob: -3.1810059547424316
    3. ' )' → logprob: -4.931005954742432
    4. ' =' → logprob: -5.681005954742432
    5. '<|end|>' → logprob: -7.306005954742432
    6. '=' → logprob: -7.431005954742432
    7. ' ' → logprob: -7.556005954742432
    8. '(x' → logprob: -9.55600643157959
    9. ' x' → logprob: -9.55600643157959
    10. ' ==' → logprob: -10.05600643157959

Token 214: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1006903350353241
    2. ' self' → logprob: -2.3506903648376465
    3. '(self' → logprob: -7.8506903648376465
    4. 'y' → logprob: -9.600689888000488
    5. ' y' → logprob: -11.100689888000488
    6. '[self' → logprob: -11.975689888000488
    7. 'find' → logprob: -13.475689888000488
    8. '	self' → logprob: -13.850689888000488
    9. '<|end|>' → logprob: -14.225689888000488
    10. '=self' → logprob: -14.850689888000488

Token 215: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.0032080153468996286
    2. 'find' → logprob: -5.753208160400391
    3. '.' → logprob: -10.62820816040039
    4. '(find' → logprob: -13.12820816040039
    5. '.findall' → logprob: -13.37820816040039
    6. ' .' → logprob: -13.50320816040039
    7. ' find' → logprob: -15.00320816040039
    8. ').' → logprob: -15.25320816040039
    9. '=find' → logprob: -16.00320816040039
    10. '	find' → logprob: -16.00320816040039

Token 216: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.0002457238151691854
    2. 'y' → logprob: -8.750246047973633
    3. ')' → logprob: -9.750246047973633
    4. '(' → logprob: -10.875246047973633
    5. '(x' → logprob: -11.875246047973633
    6. ')y' → logprob: -13.375246047973633
    7. ' y' → logprob: -14.250246047973633
    8. ')(' → logprob: -15.000246047973633
    9. '[y' → logprob: -15.125246047973633
    10. '	y' → logprob: -16.625246047973633

Token 217: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38689061999320984
    2. ')
' → logprob: -1.1368906497955322
    3. ')
' → logprob: -11.386890411376953
    4. ' )
' → logprob: -13.386890411376953
    5. '):
' → logprob: -13.386890411376953
    6. '
' → logprob: -14.011890411376953
    7. ' )' → logprob: -14.136890411376953
    8. '       ' → logprob: -14.511890411376953
    9. ')

' → logprob: -14.511890411376953
    10. 'if' → logprob: -14.636890411376953

Token 218: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2717617154121399
    2. ' if' → logprob: -1.8967616558074951
    3. '       ' → logprob: -2.521761655807495
    4. '   ' → logprob: -5.521761894226074
    5. '
' → logprob: -5.896761894226074
    6. '	if' → logprob: -8.021761894226074
    7. '<|end|>' → logprob: -8.896761894226074
    8. ';if' → logprob: -9.396761894226074
    9. ')' → logprob: -9.521761894226074
    10. ' ' → logprob: -10.021761894226074

Token 219: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.161148801445961
    2. ' if' → logprob: -1.9111487865447998
    3. '   ' → logprob: -7.536149024963379
    4. '       ' → logprob: -8.036149024963379
    5. '
' → logprob: -10.786149024963379
    6. '    
' → logprob: -11.411149024963379
    7. '	if' → logprob: -11.911149024963379
    8. '        
' → logprob: -12.161149024963379
    9. ' 
' → logprob: -12.411149024963379
    10. ' ' → logprob: -12.536149024963379

Token 220: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.25192928314208984
    2. ' x' → logprob: -1.5019292831420898
    3. ' ' → logprob: -16.251930236816406
    4. '	x' → logprob: -16.501930236816406
    5. '(x' → logprob: -18.501930236816406
    6. '   ' → logprob: -18.751930236816406
    7. '  ' → logprob: -21.001930236816406
    8. ')x' → logprob: -22.251930236816406
    9. '    ' → logprob: -22.626930236816406
    10. '(' → logprob: -22.626930236816406

Token 221: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0122673399746418
    2. '!=' → logprob: -4.637267112731934
    3. ' ==' → logprob: -6.012267112731934
    4. ' !=' → logprob: -10.137267112731934
    5. '=' → logprob: -10.887267112731934
    6. '==
' → logprob: -14.512267112731934
    7. ']==' → logprob: -15.012267112731934
    8. '===' → logprob: -15.387267112731934
    9. '==-' → logprob: -16.26226806640625
    10. ' ' → logprob: -16.88726806640625

Token 222: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.004078639671206474
    2. ' y' → logprob: -5.5040788650512695
    3. '	y' → logprob: -15.75407886505127
    4. ' ' → logprob: -17.254077911376953
    5. '   ' → logprob: -18.379077911376953
    6. ''y' → logprob: -18.879077911376953
    7. '  ' → logprob: -19.879077911376953
    8. '    ' → logprob: -20.004077911376953
    9. 'x' → logprob: -20.129077911376953
    10. 'y's' → logprob: -20.504077911376953

Token 223: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011960632400587201
    2. ':return' → logprob: -6.876195907592773
    3. ':
' → logprob: -9.001195907592773
    4. ' :' → logprob: -10.126195907592773
    5. ' :
' → logprob: -17.751195907592773
    6. 'return' → logprob: -18.251195907592773
    7. ')' → logprob: -18.626195907592773
    8. ' return' → logprob: -18.751195907592773
    9. '):' → logprob: -18.751195907592773
    10. '=' → logprob: -18.751195907592773

Token 224: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21514324843883514
    2. ' return' → logprob: -2.2151432037353516
    3. '           ' → logprob: -3.5901432037353516
    4. ':return' → logprob: -3.8401432037353516
    5. 'return' → logprob: -4.215143203735352
    6. '   ' → logprob: -4.715143203735352
    7. '
' → logprob: -4.965143203735352
    8. '	return' → logprob: -5.965143203735352
    9. ':' → logprob: -6.590143203735352
    10. ':
' → logprob: -7.840143203735352

Token 225: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.21175166964530945
    2. ' return' → logprob: -1.7117516994476318
    3. '       ' → logprob: -4.961751461029053
    4. '           ' → logprob: -6.461751461029053
    5. '
' → logprob: -6.586751461029053
    6. '   ' → logprob: -8.211751937866211
    7. '	return' → logprob: -9.836751937866211
    8. ':return' → logprob: -12.086751937866211
    9. 'False' → logprob: -12.836751937866211
    10. '0' → logprob: -13.086751937866211

Token 226: ' False' (ID: 7983)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0035291595850139856
    2. ' 
' → logprob: -6.753529071807861
    3. '        
' → logprob: -7.003529071807861
    4. '    
' → logprob: -7.503529071807861
    5. '       ' → logprob: -7.878529071807861
    6. '  
' → logprob: -8.00352954864502
    7. '
' → logprob: -10.37852954864502
    8. 'self' → logprob: -10.50352954864502
    9. 'True' → logprob: -11.00352954864502
    10. '   
' → logprob: -11.00352954864502

Token 227: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19714058935642242
    2. '       ' → logprob: -2.322140693664551
    3. '<|end|>' → logprob: -2.572140693664551
    4. '  
' → logprob: -6.572140693664551
    5. '        
' → logprob: -6.697140693664551
    6. '    
' → logprob: -7.572140693664551
    7. '<|end|>' → logprob: -8.32214069366455
    8. ' 
' → logprob: -8.32214069366455
    9. '\n' → logprob: -8.44714069366455
    10. '   ' → logprob: -8.69714069366455

Token 228: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.583248496055603
    2. '       ' → logprob: -1.083248496055603
    3. '<|end|>' → logprob: -2.9582486152648926
    4. '  
' → logprob: -4.083248615264893
    5. '    
' → logprob: -4.458248615264893
    6. '        
' → logprob: -4.583248615264893
    7. '   ' → logprob: -4.958248615264893
    8. ' 
' → logprob: -5.958248615264893
    9. '   
' → logprob: -7.583248615264893
    10. '    ' → logprob: -7.583248615264893

Token 229: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.08218374848365784
    2. '       ' → logprob: -2.832183837890625
    3. 'if' (adapté à ' if') → logprob: -4.082183837890625
    4. '<|end|>' → logprob: -6.332183837890625
    5. '        ' → logprob: -7.707183837890625
    6. '    ' → logprob: -8.332183837890625
    7. '   ' → logprob: -8.582183837890625
    8. ' ' → logprob: -8.582183837890625
    9. '	if' → logprob: -9.207183837890625
    10. ' 
' → logprob: -9.457183837890625

Token 230: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1602315455675125
    2. ' self' → logprob: -1.910231590270996
    3. '(self' → logprob: -12.535231590270996
    4. '	self' → logprob: -13.410231590270996
    5. '   ' → logprob: -14.285231590270996
    6. 's' → logprob: -14.410231590270996
    7. '[self' → logprob: -15.160231590270996
    8. ' ' → logprob: -15.410231590270996
    9. 'elf' → logprob: -15.410231590270996
    10. ':self' → logprob: -16.53523063659668

Token 231: '.rank' (ID: 96793)
  Prédit: '.rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rank' → logprob: 0.0
    2. '.' → logprob: -17.625
    3. 'rank' → logprob: -17.625
    4. ' .' → logprob: -18.375
    5. '.r' → logprob: -18.75
    6. ' rank' → logprob: -20.75
    7. '_rank' → logprob: -21.25
    8. '.score' → logprob: -21.5
    9. '.rate' → logprob: -21.625
    10. '.role' → logprob: -22.25

Token 232: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -4.008129963040119e-06
    2. '[' → logprob: -13.000003814697266
    3. 'x' → logprob: -13.500003814697266
    4. ' [' → logprob: -15.375003814697266
    5. ' x' → logprob: -16.250003814697266
    6. '[self' → logprob: -17.750003814697266
    7. '<x' → logprob: -17.875003814697266
    8. '[
' → logprob: -18.375003814697266
    9. '[int' → logprob: -18.625003814697266
    10. '(x' → logprob: -19.000003814697266

Token 233: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.11284701526165009
    2. '<' → logprob: -2.237847089767456
    3. ' ' → logprob: -11.737847328186035
    4. '<x' → logprob: -11.737847328186035
    5. '[' → logprob: -12.737847328186035
    6. ']' → logprob: -13.362847328186035
    7. ')' → logprob: -13.487847328186035
    8. ']<' → logprob: -14.237847328186035
    9. ')<' → logprob: -14.987847328186035
    10. '   ' → logprob: -15.237847328186035

Token 234: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.1602364182472229
    2. '<' → logprob: -1.9102363586425781
    3. '<x' → logprob: -11.785236358642578
    4. ' ' → logprob: -13.035236358642578
    5. '[' → logprob: -14.160236358642578
    6. '<size' → logprob: -15.035236358642578
    7. '<int' → logprob: -15.160236358642578
    8. '<class' → logprob: -15.410236358642578
    9. '<n' → logprob: -15.785236358642578
    10. '   ' → logprob: -16.285236358642578

Token 235: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3868729770183563
    2. ' self' → logprob: -1.1368730068206787
    3. '   ' → logprob: -14.511873245239258
    4. '	self' → logprob: -14.511873245239258
    5. ' ' → logprob: -14.761873245239258
    6. '    ' → logprob: -16.011873245239258
    7. '       ' → logprob: -16.011873245239258
    8. '=self' → logprob: -16.261873245239258
    9. '[self' → logprob: -16.761873245239258
    10. '
' → logprob: -16.761873245239258

Token 236: '.rank' (ID: 96793)
  Prédit: 'rank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rank' → logprob: -0.12826667726039886
    2. '.rank' → logprob: -2.1282665729522705
    3. '_rank' → logprob: -7.25326681137085
    4. ' rank' → logprob: -7.37826681137085
    5. 'y' → logprob: -13.378266334533691
    6. 'Rank' → logprob: -13.503266334533691
    7. 'ank' → logprob: -13.878266334533691
    8. '(rank' → logprob: -14.753266334533691
    9. '.' → logprob: -15.503266334533691
    10. ' ' → logprob: -15.878266334533691

Token 237: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.018212223425507545
    2. '[x' → logprob: -4.01821231842041
    3. '[' → logprob: -9.76821231842041
    4. 'y' → logprob: -12.51821231842041
    5. ' y' → logprob: -14.14321231842041
    6. ' [' → logprob: -15.39321231842041
    7. '[self' → logprob: -16.268211364746094
    8. 'x' → logprob: -16.393211364746094
    9. '(y' → logprob: -16.768211364746094
    10. '```' → logprob: -17.018211364746094

Token 238: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023683900013566017
    2. '):' → logprob: -3.898683786392212
    3. ']:' → logprob: -6.273684024810791
    4. ':
' → logprob: -7.398684024810791
    5. '):
' → logprob: -8.023683547973633
    6. ' :' → logprob: -8.523683547973633
    7. '>:' → logprob: -10.398683547973633
    8. '}:' → logprob: -10.523683547973633
    9. ']:
' → logprob: -11.148683547973633
    10. '<|end|>' → logprob: -11.273683547973633

Token 239: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29823312163352966
    2. '<|end|>' → logprob: -1.673233151435852
    3. ':' → logprob: -3.7982330322265625
    4. '           ' → logprob: -4.0482330322265625
    5. ' x' → logprob: -4.2982330322265625
    6. ')' → logprob: -5.7982330322265625
    7. '   ' → logprob: -5.9232330322265625
    8. ',' → logprob: -6.2982330322265625
    9. 'x' → logprob: -6.4232330322265625
    10. '<|end|>' → logprob: -6.4232330322265625

Token 240: ' x' (ID: 1215)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.0033996105194092
    2. ' self' → logprob: -1.1283996105194092
    3. 'x' (adapté à ' x') → logprob: -1.8783996105194092
    4. ' x' → logprob: -1.8783996105194092
    5. '           ' → logprob: -5.503399848937988
    6. '	self' → logprob: -10.753399848937988
    7. '       ' → logprob: -11.503399848937988
    8. '   ' → logprob: -12.003399848937988
    9. '	x' → logprob: -12.003399848937988
    10. ',x' → logprob: -12.253399848937988

Token 241: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0023410427384078503
    2. ' ,' → logprob: -6.377341270446777
    3. ',y' → logprob: -7.502341270446777
    4. ',self' → logprob: -9.877341270446777
    5. ',x' → logprob: -10.877341270446777
    6. ',parent' → logprob: -12.252341270446777
    7. '],' → logprob: -12.752341270446777
    8. 'self' → logprob: -12.877341270446777
    9. ' ' → logprob: -13.002341270446777
    10. ',s' → logprob: -14.127341270446777

Token 242: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.1269339919090271
    2. ' y' → logprob: -2.126934051513672
    3. '<|end|>' → logprob: -12.501934051513672
    4. '	y' → logprob: -13.501934051513672
    5. '    ' → logprob: -15.126934051513672
    6. '        ' → logprob: -15.251934051513672
    7. ' ' → logprob: -16.626934051513672
    8. ')y' → logprob: -16.751934051513672
    9. ',y' → logprob: -17.126934051513672
    10. '‘y' → logprob: -17.626934051513672

Token 243: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759633779525757
    2. ' =' → logprob: -0.8259633779525757
    3. ',' → logprob: -11.575963020324707
    4. ' ' → logprob: -12.075963020324707
    5. '=x' → logprob: -12.450963020324707
    6. '<|end|>' → logprob: -13.325963020324707
    7. '=y' → logprob: -13.450963020324707
    8. 'x' → logprob: -15.075963020324707
    9. '=user' → logprob: -15.200963020324707
    10. '=s' → logprob: -16.200963973999023

Token 244: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.0619712732732296
    2. 'y' → logprob: -2.8119711875915527
    3. '	y' → logprob: -12.936971664428711
    4. '    ' → logprob: -13.936971664428711
    5. ' ' → logprob: -16.56197166442871
    6. ' ' → logprob: -16.68697166442871
    7. ',y' → logprob: -16.81197166442871
    8. '   ' → logprob: -18.18697166442871
    9. '_y' → logprob: -18.81197166442871
    10. ')y' → logprob: -19.43697166442871

Token 245: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002509070560336113
    2. ',x' → logprob: -6.252509117126465
    3. ' ,' → logprob: -8.002509117126465
    4. ' x' → logprob: -8.752509117126465
    5. '<|end|>' → logprob: -10.002509117126465
    6. ',
' → logprob: -10.877509117126465
    7. ' ' → logprob: -11.252509117126465
    8. 'x' → logprob: -11.877509117126465
    9. '	x' → logprob: -15.065009117126465
    10. ',y' → logprob: -15.065009117126465

Token 246: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.25192907452583313
    2. 'x' → logprob: -1.5019290447235107
    3. '	x' → logprob: -17.001928329467773
    4. ' ' → logprob: -20.501928329467773
    5. ' ' → logprob: -22.251928329467773
    6. ')x' → logprob: -22.501928329467773
    7. '(x' → logprob: -23.501928329467773
    8. '    ' → logprob: -24.001928329467773
    9. ',x' → logprob: -24.126928329467773
    10. '_x' → logprob: -24.876928329467773

Token 247: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.004472370259463787
    2. '       ' → logprob: -5.629472255706787
    3. '        
' → logprob: -8.004472732543945
    4. ' 
' → logprob: -8.379472732543945
    5. '  
' → logprob: -9.129472732543945
    6. '
' → logprob: -9.129472732543945
    7. '<|end|>' → logprob: -10.004472732543945
    8. '    
' → logprob: -11.129472732543945
    9. '' → logprob: -11.379472732543945
    10. '        ' → logprob: -11.879472732543945

Token 248: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18899290263652802
    2. '
' → logprob: -1.8139928579330444
    3. '        
' → logprob: -5.313992977142334
    4. ' 
' → logprob: -6.063992977142334
    5. '  
' → logprob: -6.813992977142334
    6. '<|end|>' → logprob: -7.813992977142334
    7. '\n' → logprob: -8.938992500305176
    8. '
' → logprob: -9.813992500305176
    9. '    
' → logprob: -10.063992500305176
    10. '        ' → logprob: -10.188992500305176

Token 249: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.47672906517982483
    2. ' self' → logprob: -0.9767290353775024
    3. '       ' → logprob: -5.976728916168213
    4. '
' → logprob: -9.351729393005371
    5. '	self' → logprob: -11.726729393005371
    6. '        
' → logprob: -12.351729393005371
    7. ' 
' → logprob: -12.851729393005371
    8. '   ' → logprob: -12.976729393005371
    9. '           ' → logprob: -12.976729393005371
    10. '```' → logprob: -13.851729393005371

Token 250: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.011065510101616383
    2. '.rank' → logprob: -4.511065483093262
    3. 'parent' → logprob: -11.511065483093262
    4. '.' → logprob: -12.011065483093262
    5. ' .' → logprob: -14.386065483093262
    6. 'rank' → logprob: -15.011065483093262
    7. '.parents' → logprob: -15.636065483093262
    8. '[parent' → logprob: -15.636065483093262
    9. '.user' → logprob: -16.386066436767578
    10. '_parent' → logprob: -16.886066436767578

Token 251: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -9.610702363715973e-06
    2. '[' → logprob: -12.000009536743164
    3. '[x' → logprob: -12.625009536743164
    4. ' [' → logprob: -17.000009536743164
    5. '[s' → logprob: -17.000009536743164
    6. 'y' → logprob: -17.500009536743164
    7. '[self' → logprob: -20.125009536743164
    8. '[a' → logprob: -20.250009536743164
    9. '[j' → logprob: -20.375009536743164
    10. '[m' → logprob: -20.625009536743164

Token 252: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47483378648757935
    2. '=' → logprob: -0.9748337864875793
    3. ']' → logprob: -7.224833965301514
    4. ')' → logprob: -11.099833488464355
    5. ']=' → logprob: -11.724833488464355
    6. ' ]' → logprob: -12.974833488464355
    7. '=x' → logprob: -13.599833488464355
    8. ' ' → logprob: -14.349833488464355
    9. '=y' → logprob: -15.099833488464355
    10. ')=' → logprob: -15.349833488464355

Token 253: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687217235565186
    2. '=' → logprob: -1.1368721723556519
    3. '=x' → logprob: -14.011872291564941
    4. ' ' → logprob: -15.386872291564941
    5. '=y' → logprob: -17.011871337890625
    6. ')' → logprob: -17.761871337890625
    7. '=s' → logprob: -17.761871337890625
    8. '＝' → logprob: -18.136871337890625
    9. 'x' → logprob: -18.636871337890625
    10. ']' → logprob: -19.011871337890625

Token 254: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07888978719711304
    2. ' x' → logprob: -2.578889846801758
    3. '	x' → logprob: -19.203889846801758
    4. '"x' → logprob: -23.453889846801758
    5. '$x' → logprob: -23.578889846801758
    6. ')x' → logprob: -23.953889846801758
    7. ''x' → logprob: -24.328889846801758
    8. '(x' → logprob: -25.203889846801758
    9. '{x' → logprob: -25.453889846801758
    10. '[x' → logprob: -25.703889846801758

Token 255: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005041390657424927
    2. ' if' → logprob: -5.630041599273682
    3. 'if' → logprob: -6.630041599273682
    4. '
' → logprob: -9.630041122436523
    5. '<|end|>' → logprob: -10.380041122436523
    6. '        
' → logprob: -12.130041122436523
    7. '​' → logprob: -12.255041122436523
    8. ',' → logprob: -12.505041122436523
    9. '	if' → logprob: -13.005041122436523
    10. '   ' → logprob: -13.255041122436523

Token 256: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0024170377291738987
    2. '<|end|>' → logprob: -6.752417087554932
    3. ' if' → logprob: -7.252417087554932
    4. '        
' → logprob: -8.252416610717773
    5. 'if' → logprob: -9.127416610717773
    6. '
' → logprob: -9.752416610717773
    7. '   ' → logprob: -10.627416610717773
    8. '```' → logprob: -10.752416610717773
    9. '​' → logprob: -11.627416610717773
    10. '           ' → logprob: -11.627416610717773

Token 257: ' self' (ID: 1051)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01949131116271019
    2. ' if' → logprob: -4.019491195678711
    3. '       ' → logprob: -6.644491195678711
    4. 'self' (adapté à ' self') → logprob: -10.394491195678711
    5. '
' → logprob: -12.019491195678711
    6. '        
' → logprob: -13.644491195678711
    7. '	if' → logprob: -14.894491195678711
    8. 'If' → logprob: -15.144491195678711
    9. '   ' → logprob: -15.394491195678711
    10. '           ' → logprob: -15.519491195678711

Token 258: '.size' (ID: 4463)
  Prédit: '.rank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rank' → logprob: -0.0001146291324403137
    2. 'rank' → logprob: -9.250114440917969
    3. '_rank' → logprob: -11.625114440917969
    4. ' rank' → logprob: -13.375114440917969
    5. '.' → logprob: -13.500114440917969
    6. '.size' → logprob: -13.625114440917969
    7. 'ank' → logprob: -13.750114440917969
    8. '.parent' → logprob: -14.000114440917969
    9. '
' → logprob: -14.125114440917969
    10. '(rank' → logprob: -14.750114440917969

Token 259: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: 0.0
    2. '[' → logprob: -17.375
    3. 'x' → logprob: -17.75
    4. '```' → logprob: -19.125
    5. ' [' → logprob: -20.125
    6. '[self' → logprob: -20.5
    7. '   ' → logprob: -21.375
    8. '(x' → logprob: -21.5
    9. '[int' → logprob: -21.625
    10. '	x' → logprob: -21.625

Token 260: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.22645655274391174
    2. ']+=' → logprob: -1.7264565229415894
    3. '+=' → logprob: -4.101456642150879
    4. ' +=' → logprob: -4.976456642150879
    5. ' ]' → logprob: -6.851456642150879
    6. ')' → logprob: -8.976456642150879
    7. ']+' → logprob: -9.726456642150879
    8. '[' → logprob: -10.851456642150879
    9. '}' → logprob: -11.976456642150879
    10. '+' → logprob: -12.351456642150879

Token 261: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.048603612929582596
    2. ' +=' → logprob: -3.0486035346984863
    3. ']+=' → logprob: -11.298604011535645
    4. '+' → logprob: -13.173604011535645
    5. '=' → logprob: -13.923604011535645
    6. '+=(' → logprob: -14.173604011535645
    7. '   ' → logprob: -15.673604011535645
    8. ' ' → logprob: -16.673603057861328
    9. '	' → logprob: -17.048603057861328
    10. '+='' → logprob: -17.173603057861328

Token 262: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00317783304490149
    2. ' self' → logprob: -5.753177642822266
    3. '	self' → logprob: -16.378177642822266
    4. '   ' → logprob: -17.503177642822266
    5. ' ' → logprob: -17.878177642822266
    6. '(self' → logprob: -18.128177642822266
    7. '[self' → logprob: -19.628177642822266
    8. '       ' → logprob: -19.878177642822266
    9. '```' → logprob: -20.253177642822266
    10. '=self' → logprob: -20.378177642822266

Token 263: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -0.00014060820103622973
    2. 'size' → logprob: -8.875140190124512
    3. '.' → logprob: -14.750140190124512
    4. ' size' → logprob: -16.250141143798828
    5. '	size' → logprob: -16.750141143798828
    6. '<size' → logprob: -17.125141143798828
    7. ' .' → logprob: -17.500141143798828
    8. '[size' → logprob: -17.750141143798828
    9. ':size' → logprob: -18.125141143798828
    10. '=size' → logprob: -19.125141143798828

Token 264: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -1.9361264946837764e-07
    2. 'y' → logprob: -16.625
    3. '[' → logprob: -17.125
    4. '[x' → logprob: -19.375
    5. ' [' → logprob: -19.875
    6. '(y' → logprob: -21.375
    7. '[s' → logprob: -22.25
    8. '[user' → logprob: -22.25
    9. '[u' → logprob: -23.0
    10. '[self' → logprob: -23.0

Token 265: ']
' (ID: 1592)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02054235339164734
    2. '
' → logprob: -4.145542144775391
    3. '<|end|>' → logprob: -5.520542144775391
    4. '   ' → logprob: -8.39554214477539
    5. 'if' → logprob: -9.39554214477539
    6. '           ' → logprob: -10.02054214477539
    7. '<|end|>' → logprob: -10.64554214477539
    8. ')' → logprob: -10.77054214477539
    9. ')
' → logprob: -11.02054214477539
    10. '        
' → logprob: -11.14554214477539

Token 266: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29555845260620117
    2. 'if' → logprob: -2.045558452606201
    3. '   ' → logprob: -2.420558452606201
    4. ' if' → logprob: -3.295558452606201
    5. '	if' → logprob: -8.04555892944336
    6. ' ' → logprob: -8.92055892944336
    7. '```' → logprob: -10.17055892944336
    8. '
' → logprob: -10.29555892944336
    9. '        
' → logprob: -10.67055892944336
    10. '    ' → logprob: -10.92055892944336

Token 267: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -7.338466093642637e-05
    2. '       ' → logprob: -10.000073432922363
    3. ' if' → logprob: -10.500073432922363
    4. '   ' → logprob: -15.000073432922363
    5. '```' → logprob: -16.750072479248047
    6. '	if' → logprob: -17.750072479248047
    7. 'If' → logprob: -19.250072479248047
    8. '           ' → logprob: -20.500072479248047
    9. '        
' → logprob: -21.500072479248047
    10. '
' → logprob: -21.500072479248047

Token 268: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0067161982879042625
    2. ' self' → logprob: -5.006716251373291
    3. '(self' → logprob: -14.256715774536133
    4. '   ' → logprob: -16.006715774536133
    5. '	self' → logprob: -17.506715774536133
    6. '[self' → logprob: -17.756715774536133
    7. 's' → logprob: -19.881715774536133
    8. 'rank' → logprob: -20.256715774536133
    9. '
' → logprob: -20.381715774536133
    10. '       ' → logprob: -20.381715774536133

Token 269: '.rank' (ID: 96793)
  Prédit: '.rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rank' → logprob: -6.704273118884885e-07
    2. 'rank' → logprob: -14.250000953674316
    3. '_rank' → logprob: -18.5
    4. ' rank' → logprob: -18.875
    5. 'ank' → logprob: -20.0
    6. '(rank' → logprob: -21.25
    7. 'Rank' → logprob: -21.375
    8. '.' → logprob: -21.875
    9. ' .' → logprob: -22.0
    10. '.parent' → logprob: -22.375

Token 270: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -5.512236498361744e-07
    2. 'x' → logprob: -14.750000953674316
    3. '[' → logprob: -17.0
    4. '[self' → logprob: -19.625
    5. ' x' → logprob: -19.875
    6. ' [' → logprob: -20.5
    7. '[
' → logprob: -20.5
    8. '	x' → logprob: -21.125
    9. '[s' → logprob: -21.375
    10. '(x' → logprob: -21.75

Token 271: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.023340050131082535
    2. ' ==' → logprob: -3.7733399868011475
    3. '=' → logprob: -9.898340225219727
    4. ']==' → logprob: -10.398340225219727
    5. '==
' → logprob: -11.648340225219727
    6. '===' → logprob: -13.148340225219727
    7. ')==' → logprob: -13.398340225219727
    8. '()==' → logprob: -14.148340225219727
    9. ']' → logprob: -15.148340225219727
    10. ')' → logprob: -15.773340225219727

Token 272: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.002581128152087331
    2. ' ==' → logprob: -6.0025811195373535
    3. '=' → logprob: -9.252581596374512
    4. '==
' → logprob: -12.627581596374512
    5. '===' → logprob: -12.752581596374512
    6. ']==' → logprob: -12.877581596374512
    7. '()==' → logprob: -14.752581596374512
    8. ')==' → logprob: -15.877581596374512
    9. '====' → logprob: -16.377580642700195
    10. ' =' → logprob: -16.627580642700195

Token 273: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0008066523587331176
    2. ' self' → logprob: -7.12580680847168
    3. '[self' → logprob: -13.75080680847168
    4. '   ' → logprob: -15.12580680847168
    5. '
' → logprob: -15.37580680847168
    6. '	self' → logprob: -15.62580680847168
    7. ' ' → logprob: -16.00080680847168
    8. '(self' → logprob: -16.25080680847168
    9. '  ' → logprob: -16.37580680847168
    10. '<|end|>' → logprob: -17.25080680847168

Token 274: '.rank' (ID: 96793)
  Prédit: 'rank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rank' → logprob: -0.017005573958158493
    2. '_rank' → logprob: -4.517005443572998
    3. '.rank' → logprob: -5.392005443572998
    4. ' rank' → logprob: -6.767005443572998
    5. 'Rank' → logprob: -8.767005920410156
    6. '(rank' → logprob: -10.142005920410156
    7. 'self' → logprob: -10.267005920410156
    8. '[self' → logprob: -12.267005920410156
    9. 'y' → logprob: -14.642005920410156
    10. '[' → logprob: -15.142005920410156

Token 275: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.00034237600630149245
    2. 'y' → logprob: -8.00034236907959
    3. '[x' → logprob: -12.25034236907959
    4. '[' → logprob: -13.25034236907959
    5. '   ' → logprob: -16.125343322753906
    6. ' y' → logprob: -16.250343322753906
    7. '(y' → logprob: -16.750343322753906
    8. '	y' → logprob: -17.375343322753906
    9. '```' → logprob: -18.750343322753906
    10. '[
' → logprob: -19.375343322753906

Token 276: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02056477777659893
    2. ':
' → logprob: -3.8955647945404053
    3. '):
' → logprob: -12.020565032958984
    4. '):' → logprob: -12.020565032958984
    5. ' :' → logprob: -12.145565032958984
    6. '   ' → logprob: -13.020565032958984
    7. ']:' → logprob: -13.895565032958984
    8. '<|end|>' → logprob: -14.770565032958984
    9. ' :
' → logprob: -14.895565032958984
    10. ',' → logprob: -15.395565032958984

Token 277: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04686439409852028
    2. '       ' → logprob: -3.2968645095825195
    3. '   ' → logprob: -4.7968645095825195
    4. ' self' → logprob: -8.17186450958252
    5. 'self' → logprob: -9.67186450958252
    6. '	       ' → logprob: -9.92186450958252
    7. '               ' → logprob: -10.79686450958252
    8. ',' → logprob: -10.92186450958252
    9. '	   ' → logprob: -11.04686450958252
    10. '<|end|>' → logprob: -11.29686450958252

Token 278: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.3161911964416504
    2. ' self' → logprob: -1.5661911964416504
    3. '           ' → logprob: -2.8161911964416504
    4. '   ' → logprob: -6.19119119644165
    5. '       ' → logprob: -8.191190719604492
    6. '               ' → logprob: -10.191190719604492
    7. '	self' → logprob: -10.566190719604492
    8. ' ' → logprob: -11.941190719604492
    9. '
' → logprob: -12.066190719604492
    10. '  ' → logprob: -12.566190719604492

Token 279: '.rank' (ID: 96793)
  Prédit: '.rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rank' → logprob: -0.03229401633143425
    2. 'rank' → logprob: -3.7822940349578857
    3. '_rank' → logprob: -4.782293796539307
    4. ' rank' → logprob: -7.657293796539307
    5. 'Rank' → logprob: -9.032294273376465
    6. 'ank' → logprob: -10.282294273376465
    7. '.' → logprob: -13.657294273376465
    8. '[x' → logprob: -13.782294273376465
    9. '
' → logprob: -14.657294273376465
    10. ' Rank' → logprob: -14.657294273376465

Token 280: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -5.512236498361744e-07
    2. 'x' → logprob: -15.000000953674316
    3. '[' → logprob: -15.375000953674316
    4. ' x' → logprob: -18.75
    5. ' [' → logprob: -19.25
    6. '	x' → logprob: -19.25
    7. '[self' → logprob: -19.625
    8. '(x' → logprob: -20.25
    9. '   ' → logprob: -20.25
    10. '[
' → logprob: -21.0

Token 281: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.06211791932582855
    2. ' +=' → logprob: -2.8121178150177
    3. ']+=' → logprob: -8.812117576599121
    4. '+' → logprob: -14.187117576599121
    5. '=' → logprob: -15.312117576599121
    6. '   ' → logprob: -15.437117576599121
    7. '+='' → logprob: -16.687118530273438
    8. ')' → logprob: -17.437118530273438
    9. ']' → logprob: -17.437118530273438
    10. '+="' → logprob: -17.687118530273438

Token 282: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0007189844618551433
    2. ' +=' → logprob: -7.25071907043457
    3. ']+=' → logprob: -11.62571907043457
    4. '+' → logprob: -18.00071907043457
    5. '=' → logprob: -18.12571907043457
    6. '+="' → logprob: -19.12571907043457
    7. '+='' → logprob: -19.37571907043457
    8. '+=(' → logprob: -20.87571907043457
    9. '   ' → logprob: -22.25071907043457
    10. '[' → logprob: -22.25071907043457

Token 283: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -19.250009536743164
    4. '  ' → logprob: -23.250009536743164
    5. '```' → logprob: -23.750009536743164
    6. '
' → logprob: -24.000009536743164
    7. '       ' → logprob: -24.625009536743164
    8. '１' → logprob: -25.000009536743164
    9. '[' → logprob: -25.250009536743164
    10. ' ' → logprob: -25.375009536743164

Token 284: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '   ' → logprob: -19.5
    4. '  ' → logprob: -22.375
    5. '
' → logprob: -22.375
    6. '```' → logprob: -23.0
    7. '１' → logprob: -23.5
    8. '       ' → logprob: -24.5
    9. '१' → logprob: -24.5
    10. '۱' → logprob: -24.625

Token 285: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 286: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03227011859416962
    2. '<|end|>' → logprob: -3.6572701930999756
    3. '   ' → logprob: -5.9072699546813965
    4. '
' → logprob: -6.9072699546813965
    5. 'return' → logprob: -7.1572699546813965
    6. '	' → logprob: -7.2822699546813965
    7. '	return' → logprob: -8.157270431518555
    8. ' return' → logprob: -8.657270431518555
    9. '           ' → logprob: -9.532270431518555
    10. '<|end|>' → logprob: -10.407270431518555

Token 287: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.059929344803094864
    2. ' return' → logprob: -3.434929370880127
    3. '       ' → logprob: -4.309929370880127
    4. '<|end|>' → logprob: -5.184929370880127
    5. '
' → logprob: -6.059929370880127
    6. ':return' → logprob: -6.309929370880127
    7. '   ' → logprob: -6.559929370880127
    8. '	return' → logprob: -6.934929370880127
    9. '```' → logprob: -9.684928894042969
    10. ' 
' → logprob: -9.684928894042969

Token 288: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0004306692280806601
    2. ' True' → logprob: -7.750430583953857
    3. '(True' → logprob: -20.500431060791016
    4. 'true' → logprob: -22.875431060791016
    5. 'None' → logprob: -22.875431060791016
    6. '=True' → logprob: -23.625431060791016
    7. 'False' → logprob: -23.750431060791016
    8. '_true' → logprob: -24.625431060791016
    9. 'TRUE' → logprob: -25.500431060791016
    10. 'Tr' → logprob: -25.625431060791016

Token 289: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7853865623474121
    2. '<|end|>' → logprob: -1.160386562347412
    3. '   ' → logprob: -2.035386562347412
    4. 'def' → logprob: -3.035386562347412
    5. '    
' → logprob: -3.410386562347412
    6. '#' → logprob: -5.160386562347412
    7. '```' → logprob: -5.285386562347412
    8. '<|end|>' → logprob: -6.160386562347412
    9. '

' → logprob: -6.535386562347412
    10. 'class' → logprob: -6.535386562347412

Token 290: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04260207340121269
    2. '   ' → logprob: -3.917602062225342
    3. '
' → logprob: -4.542602062225342
    4. '#' → logprob: -5.292602062225342
    5. '    
' → logprob: -6.292602062225342
    6. 'n' → logprob: -6.667602062225342
    7. '<|end|>' → logprob: -6.667602062225342
    8. '```' → logprob: -6.917602062225342
    9. '  
' → logprob: -8.7926025390625
    10. 'class' → logprob: -9.0426025390625

Token 291: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -7.93448489275761e-05
    2. '   ' → logprob: -10.375079154968262
    3. ' def' → logprob: -10.500079154968262
    4. '#' → logprob: -10.875079154968262
    5. '    
' → logprob: -14.500079154968262
    6. '
' → logprob: -14.875079154968262
    7. '	def' → logprob: -15.250079154968262
    8. 'n' → logprob: -16.375080108642578
    9. 'class' → logprob: -16.500080108642578
    10. '```' → logprob: -16.750080108642578

Token 292: ' same' (ID: 2684)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.14599013328552246
    2. ' get' → logprob: -2.1459901332855225
    3. 'same' → logprob: -4.770990371704102
    4. 'is' → logprob: -5.645990371704102
    5. 'component' → logprob: -6.520990371704102
    6. ' iss' → logprob: -6.645990371704102
    7. ' same' → logprob: -6.895990371704102
    8. 'iss' → logprob: -7.020990371704102
    9. 'size' → logprob: -7.145990371704102
    10. ' is' → logprob: -8.020990371704102

Token 293: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.018198054283857346
    2. '(' → logprob: -4.018198013305664
    3. '(x' → logprob: -10.143198013305664
    4. ' (' → logprob: -12.893198013305664
    5. '(u' → logprob: -13.518198013305664
    6. '(a' → logprob: -13.643198013305664
    7. 'self' → logprob: -13.768198013305664
    8. '(int' → logprob: -14.518198013305664
    9. '(s' → logprob: -14.643198013305664
    10. '(i' → logprob: -15.018198013305664

Token 294: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0055406163446605206
    2. '(' → logprob: -5.25554084777832
    3. ')' → logprob: -8.88054084777832
    4. '(x' → logprob: -9.13054084777832
    5. ')(' → logprob: -10.75554084777832
    6. ' (' → logprob: -10.88054084777832
    7. 'self' → logprob: -11.50554084777832
    8. '(s' → logprob: -12.50554084777832
    9. '   ' → logprob: -14.00554084777832
    10. '(a' → logprob: -14.25554084777832

Token 295: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.01416738796979189
    2. ' x' → logprob: -4.264167308807373
    3. 'a' → logprob: -12.514167785644531
    4. ' ' → logprob: -17.26416778564453
    5. ' a' → logprob: -17.38916778564453
    6. '	x' → logprob: -17.63916778564453
    7. '   ' → logprob: -18.76416778564453
    8. ')x' → logprob: -20.51416778564453
    9. '  ' → logprob: -20.63916778564453
    10. 'u' → logprob: -21.13916778564453

Token 296: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.836499985889532e-05
    2. ' ,' → logprob: -9.7500581741333
    3. ',y' → logprob: -16.750059127807617
    4. ',x' → logprob: -17.000059127807617
    5. '   ' → logprob: -19.875059127807617
    6. ',
' → logprob: -21.125059127807617
    7. '_,' → logprob: -21.500059127807617
    8. ',int' → logprob: -21.750059127807617
    9. '，' → logprob: -22.000059127807617
    10. '‌,' → logprob: -22.125059127807617

Token 297: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0007099286303855479
    2. ' y' → logprob: -7.2507100105285645
    3. '   ' → logprob: -19.000709533691406
    4. '	y' → logprob: -20.750709533691406
    5. ' ' → logprob: -20.875709533691406
    6. '  ' → logprob: -22.500709533691406
    7. '    ' → logprob: -22.625709533691406
    8. 'x' → logprob: -23.750709533691406
    9. ')y' → logprob: -23.750709533691406
    10. ''y' → logprob: -23.750709533691406

Token 298: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0001617035741219297
    2. ')' → logprob: -9.000162124633789
    3. '):
' → logprob: -10.750162124633789
    4. ' ):' → logprob: -11.000162124633789
    5. ':' → logprob: -16.87516212463379
    6. '):
' → logprob: -17.37516212463379
    7. ')：' → logprob: -18.25016212463379
    8. '   ' → logprob: -18.62516212463379
    9. ' )' → logprob: -18.62516212463379
    10. '):

' → logprob: -18.75016212463379

Token 299: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.851026177406311
    2. '       ' → logprob: -0.976026177406311
    3. '):' → logprob: -1.726026177406311
    4. ')' → logprob: -4.9760260581970215
    5. '   ' → logprob: -5.4760260581970215
    6. '):
' → logprob: -6.2260260581970215
    7. ',' → logprob: -6.4760260581970215
    8. ':return' → logprob: -7.2260260581970215
    9. '():' → logprob: -7.2260260581970215
    10. '(self' → logprob: -7.4760260581970215

Token 300: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.005333012901246548
    2. ' return' → logprob: -5.755332946777344
    3. '
' → logprob: -6.255332946777344
    4. '       ' → logprob: -8.755332946777344
    5. 'self' → logprob: -9.880332946777344
    6. '   ' → logprob: -10.755332946777344
    7. '{return' → logprob: -13.755332946777344
    8. '	return' → logprob: -14.505332946777344
    9. '        
' → logprob: -14.880332946777344
    10. ':return' → logprob: -15.380332946777344

Token 301: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0019289902411401272
    2. ' self' → logprob: -6.251928806304932
    3. '(self' → logprob: -15.25192928314209
    4. '   ' → logprob: -17.001928329467773
    5. '[self' → logprob: -17.876928329467773
    6. '	self' → logprob: -19.001928329467773
    7. '
' → logprob: -20.001928329467773
    8. 'Self' → logprob: -20.501928329467773
    9. '=self' → logprob: -21.876928329467773
    10. ':self' → logprob: -22.001928329467773

Token 302: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.0001266613689949736
    2. '.' → logprob: -9.000126838684082
    3. '.parent' → logprob: -12.875126838684082
    4. 'find' → logprob: -14.875126838684082
    5. ' .' → logprob: -15.875126838684082
    6. '.same' → logprob: -16.750125885009766
    7. '.findall' → logprob: -17.250125885009766
    8. ').' → logprob: -17.625125885009766
    9. '.Find' → logprob: -18.250125885009766
    10. '=find' → logprob: -19.625125885009766

Token 303: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0019287518225610256
    2. '(' → logprob: -6.251928806304932
    3. '(
' → logprob: -16.501928329467773
    4. ' (' → logprob: -17.501928329467773
    5. '(y' → logprob: -17.751928329467773
    6. '(s' → logprob: -19.376928329467773
    7. '((' → logprob: -19.626928329467773
    8. '()' → logprob: -19.626928329467773
    9. '(user' → logprob: -20.001928329467773
    10. '(

' → logprob: -20.001928329467773

Token 304: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030609508976340294
    2. '(x' → logprob: -3.530609607696533
    3. '(' → logprob: -7.280609607696533
    4. ')==' → logprob: -8.780609130859375
    5. ' )' → logprob: -11.530609130859375
    6. 'x' → logprob: -12.905609130859375
    7. '==' → logprob: -13.280609130859375
    8. '(y' → logprob: -14.155609130859375
    9. ']' → logprob: -14.780609130859375
    10. ',' → logprob: -15.030609130859375

Token 305: ' ==' (ID: 951)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7256238460540771
    2. '(x' → logprob: -0.7256238460540771
    3. '==' → logprob: -3.725623846054077
    4. ' ==' → logprob: -5.100624084472656
    5. '(y' → logprob: -6.975624084472656
    6. 'x' → logprob: -7.475624084472656
    7. ')' → logprob: -9.225624084472656
    8. '=' → logprob: -9.600624084472656
    9. ' (' → logprob: -10.225624084472656
    10. 'y' → logprob: -10.725624084472656

Token 306: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.018216200172901154
    2. ' self' → logprob: -4.018216133117676
    3. 'y' → logprob: -10.393216133117676
    4. '   ' → logprob: -10.393216133117676
    5. '       ' → logprob: -13.393216133117676
    6. '(self' → logprob: -13.393216133117676
    7. ' y' → logprob: -14.268216133117676
    8. '	self' → logprob: -14.643216133117676
    9. '    ' → logprob: -14.768216133117676
    10. '  ' → logprob: -15.643216133117676

Token 307: '.find' (ID: 4231)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.0006774079520255327
    2. '.find' → logprob: -7.375677585601807
    3. 'y' → logprob: -10.500677108764648
    4. '.' → logprob: -11.375677108764648
    5. ' find' → logprob: -11.875677108764648
    6. '(find' → logprob: -13.375677108764648
    7. '(y' → logprob: -14.000677108764648
    8. ' y' → logprob: -14.625677108764648
    9. '	find' → logprob: -14.750677108764648
    10. ')' → logprob: -14.750677108764648

Token 308: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -1.3902033970225602e-05
    2. 'y' → logprob: -11.250014305114746
    3. '(' → logprob: -14.000014305114746
    4. '(x' → logprob: -18.37501335144043
    5. ' (' → logprob: -19.87501335144043
    6. ' y' → logprob: -20.00001335144043
    7. '(
' → logprob: -20.75001335144043
    8. '   ' → logprob: -21.00001335144043
    9. '	y' → logprob: -21.12501335144043
    10. 'def' → logprob: -21.62501335144043

Token 309: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.226628895296017e-06
    2. ')
' → logprob: -11.875007629394531
    3. ' )' → logprob: -15.875007629394531
    4. '}' → logprob: -17.37500762939453
    5. '<|end|>' → logprob: -17.37500762939453
    6. ')

' → logprob: -17.75000762939453
    7. ')return' → logprob: -17.87500762939453
    8. '   ' → logprob: -18.25000762939453
    9. '))' → logprob: -18.50000762939453
    10. '）' → logprob: -19.12500762939453

Token 310: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.019720658659934998
    2. '
' → logprob: -4.019720554351807
    3. '   ' → logprob: -7.144720554351807
    4. '#' → logprob: -8.019721031188965
    5. '<|end|>' → logprob: -8.769721031188965
    6. '```' → logprob: -9.769721031188965
    7. '    
' → logprob: -9.894721031188965
    8. 'n' → logprob: -10.019721031188965
    9. '

' → logprob: -10.144721031188965
    10. ' def' → logprob: -10.519721031188965

Token 311: ' solve' (ID: 17722)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0003290288441348821
    2. ' solve' → logprob: -8.25032901763916
    3. 'main' → logprob: -9.75032901763916
    4. ' count' → logprob: -12.25032901763916
    5. '	main' → logprob: -13.12532901763916
    6. ' input' → logprob: -14.50032901763916
    7. ' ' → logprob: -14.75032901763916
    8. ' calculate' → logprob: -14.75032901763916
    9. ' read' → logprob: -14.75032901763916
    10. ' dfs' → logprob: -15.12532901763916

Token 312: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -7.994086627149954e-05
    2. ' ():' → logprob: -9.750080108642578
    3. '()' → logprob: -11.000080108642578
    4. '():
' → logprob: -12.625080108642578
    5. '(n' → logprob: -14.000080108642578
    6. '(' → logprob: -14.500080108642578
    7. '(N' → logprob: -16.375080108642578
    8. '(a' → logprob: -16.750080108642578
    9. '(":' → logprob: -17.375080108642578
    10. '(x' → logprob: -18.000080108642578

Token 313: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2901092767715454
    2. ' n' → logprob: -1.5401092767715454
    3. 'n' → logprob: -3.290109157562256
    4. '	n' → logprob: -9.415109634399414
    5. ' import' → logprob: -9.665109634399414
    6. 'import' → logprob: -9.915109634399414
    7. '   ' → logprob: -11.165109634399414
    8. '   ' → logprob: -13.790109634399414
    9. ',n' → logprob: -14.790109634399414
    10. '```' → logprob: -15.540109634399414

Token 314: ' while' (ID: 2049)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.088923878967762
    2. ' n' → logprob: -2.838923931121826
    3. '   ' → logprob: -3.838923931121826
    4. 'import' → logprob: -5.838923931121826
    5. 'N' → logprob: -6.338923931121826
    6. ' import' → logprob: -8.213923454284668
    7. ' N' → logprob: -9.213923454284668
    8. 'input' → logprob: -11.463923454284668
    9. ' input' → logprob: -11.588923454284668
    10. '	n' → logprob: -11.713923454284668

Token 315: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.0141702089458704
    2. 'True' → logprob: -4.264170169830322
    3. '(True' → logprob: -12.13917064666748
    4. ' ' → logprob: -14.38917064666748
    5. '1' → logprob: -14.63917064666748
    6. '=True' → logprob: -15.38917064666748
    7. ' ' → logprob: -16.264169692993164
    8. ':' → logprob: -18.014169692993164
    9. '  ' → logprob: -18.139169692993164
    10. '   ' → logprob: -18.264169692993164

Token 316: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003328264458104968
    2. ':
' → logprob: -5.753328323364258
    3. '       ' → logprob: -9.128328323364258
    4. ' :' → logprob: -11.003328323364258
    5. '():' → logprob: -11.628328323364258
    6. ',' → logprob: -11.878328323364258
    7. '   ' → logprob: -12.128328323364258
    8. '):' → logprob: -13.003328323364258
    9. '):
' → logprob: -14.753328323364258
    10. ' :
' → logprob: -15.003328323364258

Token 317: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009579946286976337
    2. ' try' → logprob: -5.259580135345459
    3. '   ' → logprob: -6.134580135345459
    4. 'try' → logprob: -6.384580135345459
    5. 'n' → logprob: -8.2595796585083
    6. ' n' → logprob: -9.2595796585083
    7. ' line' → logprob: -9.6345796585083
    8. '    ' → logprob: -10.6345796585083
    9. '      ' → logprob: -11.8845796585083
    10. ',' → logprob: -12.1345796585083

Token 318: ' n' (ID: 297)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.7720305323600769
    2. '   ' → logprob: -1.7720305919647217
    3. ' n' → logprob: -2.0220305919647217
    4. 'n' (adapté à ' n') → logprob: -2.2720305919647217
    5. ' try' → logprob: -2.5220305919647217
    6. 'line' → logprob: -3.6470305919647217
    7. 'try' → logprob: -3.7720305919647217
    8. '       ' → logprob: -6.897030353546143
    9. 'N' → logprob: -7.647030353546143
    10. 'l' → logprob: -8.1470308303833

Token 319: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02582899108529091
    2. ' =' → logprob: -4.275828838348389
    3. ',m' → logprob: -5.025828838348389
    4. '=' → logprob: -5.400828838348389
    5. ',k' → logprob: -8.150829315185547
    6. 'm' → logprob: -8.900829315185547
    7. ',s' → logprob: -10.025829315185547
    8. ' ,' → logprob: -11.525829315185547
    9. 's' → logprob: -11.900829315185547
    10. ',M' → logprob: -12.525829315185547

Token 320: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.014168089255690575
    2. ' int' → logprob: -4.2641682624816895
    3. 'input' → logprob: -12.389167785644531
    4. ' input' → logprob: -14.889167785644531
    5. ' ' → logprob: -18.01416778564453
    6. 'sys' → logprob: -18.13916778564453
    7. '=int' → logprob: -18.13916778564453
    8. '(int' → logprob: -18.38916778564453
    9. 'len' → logprob: -18.51416778564453
    10. ' sys' → logprob: -19.01416778564453

Token 321: '(sys' (ID: 41042)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.013649648986756802
    2. '(sys' → logprob: -4.5136494636535645
    3. 'input' → logprob: -6.0136494636535645
    4. '()' → logprob: -9.388649940490723
    5. '(' → logprob: -9.763649940490723
    6. ' input' → logprob: -11.763649940490723
    7. 'sys' → logprob: -12.638649940490723
    8. '=input' → logprob: -14.888649940490723
    9. ' (' → logprob: -16.013648986816406
    10. '	input' → logprob: -16.513648986816406

Token 322: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00012511172099038959
    2. '.readline' → logprob: -9.12512493133545
    3. '.' → logprob: -11.37512493133545
    4. '.stdout' → logprob: -13.37512493133545
    5. 'stdin' → logprob: -13.50012493133545
    6. '().' → logprob: -14.25012493133545
    7. '.argv' → logprob: -14.50012493133545
    8. '(stdin' → logprob: -14.87512493133545
    9. ' .' → logprob: -16.250125885009766
    10. '.std' → logprob: -16.500125885009766

Token 323: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -4.320199877838604e-07
    2. '.' → logprob: -14.75
    3. ' readline' → logprob: -18.25
    4. '.stdin' → logprob: -19.125
    5. '().' → logprob: -20.375
    6. '.read' → logprob: -20.625
    7. ' .' → logprob: -21.25
    8. '.buffer' → logprob: -21.875
    9. '.readlines' → logprob: -23.125
    10. 'read' → logprob: -23.875

Token 324: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.03846015781164169
    2. '().' → logprob: -3.2884602546691895
    3. '()' → logprob: -7.7884602546691895
    4. '())
' → logprob: -12.788459777832031
    5. ' ())' → logprob: -14.538459777832031
    6. ')' → logprob: -15.288459777832031
    7. '()
' → logprob: -15.663459777832031
    8. '(' → logprob: -15.788459777832031
    9. '();)' → logprob: -16.41345977783203
    10. '())

' → logprob: -16.91345977783203

Token 325: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010049767792224884
    2. ' if' → logprob: -5.260049819946289
    3. '   ' → logprob: -5.760049819946289
    4. '<|end|>' → logprob: -7.010049819946289
    5. ' ' → logprob: -7.510049819946289
    6. 'if' → logprob: -9.885049819946289
    7. '    ' → logprob: -10.385049819946289
    8. ')' → logprob: -10.510049819946289
    9. '      ' → logprob: -11.010049819946289
    10. '        ' → logprob: -11.010049819946289

Token 326: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5792858600616455
    2. ' if' → logprob: -0.8292858600616455
    3. '       ' → logprob: -5.704285621643066
    4. '   ' → logprob: -12.579285621643066
    5. '	if' → logprob: -12.579285621643066
    6. ' ' → logprob: -13.829285621643066
    7. '        ' → logprob: -14.829285621643066
    8. '    ' → logprob: -15.204285621643066
    9. '	' → logprob: -15.454285621643066
    10. ' ' → logprob: -16.329286575317383

Token 327: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.10094284266233444
    2. 'n' → logprob: -2.350942850112915
    3. ' not' → logprob: -7.225942611694336
    4. 'not' → logprob: -11.725942611694336
    5. '	n' → logprob: -14.850942611694336
    6. ' ' → logprob: -16.350942611694336
    7. 'n't' → logprob: -16.850942611694336
    8. ' ' → logprob: -17.350942611694336
    9. '(n' → logprob: -17.350942611694336
    10. '_n' → logprob: -19.225942611694336

Token 328: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07016216963529587
    2. '==' → logprob: -2.695162057876587
    3. ' <=' → logprob: -8.695161819458008
    4. '<=' → logprob: -9.945161819458008
    5. '=' → logprob: -12.570161819458008
    6. ')' → logprob: -12.820161819458008
    7. ')==' → logprob: -13.195161819458008
    8. ' =' → logprob: -14.570161819458008
    9. ' ' → logprob: -14.570161819458008
    10. '===' → logprob: -15.195161819458008

Token 329: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004620353225618601
    2. ' ' → logprob: -5.379620552062988
    3. ' -' → logprob: -16.754619598388672
    4. '-' → logprob: -17.004619598388672
    5. '  ' → logprob: -17.254619598388672
    6. '   ' → logprob: -17.379619598388672
    7. ' ' → logprob: -17.504619598388672
    8. '    ' → logprob: -18.254619598388672
    9. '=' → logprob: -19.004619598388672
    10. '```' → logprob: -20.004619598388672

Token 330: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -17.875003814697266
    4. '-' → logprob: -18.375003814697266
    5. '  ' → logprob: -20.750003814697266
    6. '=' → logprob: -21.125003814697266
    7. '    ' → logprob: -21.125003814697266
    8. ')' → logprob: -21.500003814697266
    9. '```' → logprob: -22.375003814697266
    10. '00' → logprob: -22.500003814697266

Token 331: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02327599748969078
    2. ':
' → logprob: -3.7732760906219482
    3. '           ' → logprob: -11.273276329040527
    4. '       ' → logprob: -11.523276329040527
    5. ':return' → logprob: -12.523276329040527
    6. ' :' → logprob: -13.273276329040527
    7. ':
' → logprob: -13.523276329040527
    8. '   ' → logprob: -14.148276329040527
    9. ' :
' → logprob: -15.898276329040527
    10. ':

' → logprob: -16.52327537536621

Token 332: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002153378736693412
    2. '       ' → logprob: -8.500215530395508
    3. '   ' → logprob: -12.375215530395508
    4. ' break' → logprob: -12.500215530395508
    5. 'break' → logprob: -13.375215530395508
    6. '		' → logprob: -14.000215530395508
    7. '          ' → logprob: -14.250215530395508
    8. '               ' → logprob: -15.375215530395508
    9. '	       ' → logprob: -15.500215530395508
    10. '         ' → logprob: -15.750215530395508

Token 333: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.0988619402050972
    2. ' break' → logprob: -2.8488619327545166
    3. 'return' → logprob: -3.3488619327545166
    4. ' return' → logprob: -7.848862171173096
    5. '           ' → logprob: -7.973862171173096
    6. '       ' → logprob: -7.973862171173096
    7. '	break' → logprob: -11.098861694335938
    8. '               ' → logprob: -13.473861694335938
    9. '   ' → logprob: -14.098861694335938
    10. '_break' → logprob: -14.223861694335938

Token 334: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002657343400642276
    2. '        
' → logprob: -6.377657413482666
    3. '<|end|>' → logprob: -8.002656936645508
    4. '   ' → logprob: -8.127656936645508
    5. 'n' → logprob: -9.877656936645508
    6. '
' → logprob: -10.002656936645508
    7. '	' → logprob: -10.127656936645508
    8. ',' → logprob: -10.377656936645508
    9. '    
' → logprob: -10.877656936645508
    10. ' n' → logprob: -11.502656936645508

Token 335: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9719228744506836
    2. ' edges' → logprob: -1.2219228744506836
    3. '   ' → logprob: -1.8469228744506836
    4. 'edges' → logprob: -2.5969228744506836
    5. ' graph' → logprob: -3.2219228744506836
    6. 'graph' → logprob: -3.9719228744506836
    7. 'm' → logprob: -4.471922874450684
    8. ' m' → logprob: -5.596922874450684
    9. '        
' → logprob: -6.221922874450684
    10. '    
' → logprob: -6.596922874450684

Token 336: ' #' (ID: 1069)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.4264686405658722
    2. 'uf' → logprob: -1.3014686107635498
    3. 'adj' → logprob: -3.67646861076355
    4. 'graph' → logprob: -4.301468849182129
    5. 'points' → logprob: -5.551468849182129
    6. 'm' → logprob: -6.301468849182129
    7. 'A' → logprob: -6.301468849182129
    8. 'edge' → logprob: -6.426468849182129
    9. 'G' → logprob: -6.426468849182129
    10. 'ans' → logprob: -6.801468849182129

Token 337: ' Lecture' (ID: 106534)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.179068922996521
    2. 'adj' → logprob: -2.8040690422058105
    3. 'graph' → logprob: -3.0540690422058105
    4. ' edges' → logprob: -4.9290690422058105
    5. 'uf' → logprob: -5.0540690422058105
    6. 'parents' → logprob: -5.1790690422058105
    7. 'ans' → logprob: -5.5540690422058105
    8. 'm' → logprob: -5.6790690422058105
    9. 'parent' → logprob: -5.8040690422058105
    10. ' graph' → logprob: -6.5540690422058105

Token 338: ' des' (ID: 731)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18459302186965942
    2. ' edges' → logprob: -2.8095929622650146
    3. ' des' → logprob: -3.0595929622650146
    4. 'edges' → logprob: -3.3095929622650146
    5. 'm' → logprob: -5.559593200683594
    6. ' d' → logprob: -5.809593200683594
    7. ' of' → logprob: -5.934593200683594
    8. ' m' → logprob: -5.934593200683594
    9. '(edges' → logprob: -6.059593200683594
    10. ' de' → logprob: -6.184593200683594

Token 339: ' données' (ID: 30580)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.45365598797798157
    2. 'ar' → logprob: -1.5786559581756592
    3. 'graph' → logprob: -3.328655958175659
    4. 'are' → logprob: -3.828655958175659
    5. 'gr' → logprob: -4.078656196594238
    6. 'a' → logprob: -4.078656196594238
    7. ' edges' → logprob: -4.328656196594238
    8. 'm' → logprob: -4.328656196594238
    9. 'data' → logprob: -5.078656196594238
    10. '```' → logprob: -5.828656196594238

Token 340: ' d' (ID: 272)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10914497077465057
    2. ' edges' → logprob: -2.609144926071167
    3. 'edges' → logprob: -3.984144926071167
    4. '(edges' → logprob: -5.984145164489746
    5. ' for' → logprob: -6.359145164489746
    6. ' graph' → logprob: -7.359145164489746
    7. '        
' → logprob: -7.734145164489746
    8. ',' → logprob: -7.734145164489746
    9. 'm' → logprob: -7.734145164489746
    10. 'graph' → logprob: -7.859145164489746

Token 341: ''entrée' (ID: 115820)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.45115968585014343
    2. ''entrée' → logprob: -1.5761597156524658
    3. 'es' → logprob: -1.9511597156524658
    4. 'u' → logprob: -5.701159477233887
    5. 'entrée' → logprob: -6.576159477233887
    6. 'escription' → logprob: -6.701159477233887
    7. 'onnées' → logprob: -6.951159477233887
    8. ''' → logprob: -6.951159477233887
    9. 'input' → logprob: -7.326159477233887
    10. 'i' → logprob: -7.701159477233887

Token 342: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20647494494915009
    2. ' edges' → logprob: -2.081475019454956
    3. ' m' → logprob: -3.956475019454956
    4. 'm' → logprob: -4.331474781036377
    5. 'edges' → logprob: -4.581474781036377
    6. ' graph' → logprob: -5.331474781036377
    7. '
' → logprob: -6.081474781036377
    8. ' for' → logprob: -6.206474781036377
    9. ',' → logprob: -6.206474781036377
    10. '        
' → logprob: -6.581474781036377

Token 343: ' chaque' (ID: 21194)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -1.2402909994125366
    2. 'les' → logprob: -1.3652909994125366
    3. 'n' → logprob: -2.240291118621826
    4. ' chaque' → logprob: -2.365291118621826
    5. 'l' → logprob: -2.990291118621826
    6. ' edges' → logprob: -3.365291118621826
    7. 'edges' → logprob: -3.490291118621826
    8. ' n' → logprob: -3.740291118621826
    9. ' la' → logprob: -3.740291118621826
    10. 'le' → logprob: -4.240291118621826

Token 344: ' famille' (ID: 30487)
  Prédit: 'cas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cas' → logprob: -0.46102267503738403
    2. 'test' → logprob: -2.4610226154327393
    3. 'gr' → logprob: -2.5860226154327393
    4. 'n' → logprob: -2.9610226154327393
    5. 'graph' → logprob: -3.0860226154327393
    6. 'case' → logprob: -3.8360226154327393
    7. ' cas' → logprob: -4.211022853851318
    8. ' test' → logprob: -4.336022853851318
    9. ' grap' → logprob: -4.711022853851318
    10. 't' → logprob: -4.836022853851318

Token 345: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07522915303707123
    2. ' families' → logprob: -3.5752291679382324
    3. '
' → logprob: -4.950229167938232
    4. 'famil' → logprob: -5.075229167938232
    5. ' familles' → logprob: -5.575229167938232
    6. ' family' → logprob: -5.575229167938232
    7. '        
' → logprob: -5.700229167938232
    8. ' famille' → logprob: -5.950229167938232
    9. 'm' → logprob: -6.075229167938232
    10. 'n' → logprob: -6.200229167938232

Token 346: 'les' (ID: 1032)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.875326931476593
    2. 'famil' → logprob: -1.7503268718719482
    3. 'edges' → logprob: -2.2503268718719482
    4. 'for' → logprob: -2.7503268718719482
    5. 'k' → logprob: -3.1253268718719482
    6. 'f' → logprob: -3.2503268718719482
    7. 'm' → logprob: -3.7503268718719482
    8. 'family' → logprob: -3.8753268718719482
    9. ' )' → logprob: -4.125327110290527
    10. ' edges' → logprob: -4.250327110290527

Token 347: ' partenaires' (ID: 77043)
  Prédit: ' familles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' familles' → logprob: -1.4523019790649414
    2. ' membres' → logprob: -1.9523019790649414
    3. 'parents' → logprob: -2.0773019790649414
    4. 'n' → logprob: -2.7023019790649414
    5. ' parents' → logprob: -2.7023019790649414
    6. 'edges' → logprob: -3.0773019790649414
    7. ' edges' → logprob: -3.7023019790649414
    8. ' n' → logprob: -4.077301979064941
    9. 'f' → logprob: -4.077301979064941
    10. ')' → logprob: -4.077301979064941

Token 348: ' et' (ID: 859)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2115396410226822
    2. ' et' → logprob: -2.5865397453308105
    3. ',' → logprob: -2.7115397453308105
    4. 'et' → logprob: -4.3365397453308105
    5. ' =' → logprob: -5.0865397453308105
    6. ' )' → logprob: -5.2115397453308105
    7. '):' → logprob: -5.3365397453308105
    8. ' and' → logprob: -5.8365397453308105
    9. '       ' → logprob: -5.8365397453308105
    10. ' ,' → logprob: -6.5865397453308105

Token 349: ' cout' (ID: 10504)
  Prédit: 'leurs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'leurs' → logprob: -0.9300879836082458
    2. 'les' → logprob: -1.3050880432128906
    3. 'leur' → logprob: -1.9300880432128906
    4. ' leurs' → logprob: -2.3050880432128906
    5. 'le' → logprob: -3.0550880432128906
    6. 'l' → logprob: -4.805088043212891
    7. ' leur' → logprob: -5.180088043212891
    8. 'la' → logprob: -5.430088043212891
    9. ' les' → logprob: -5.430088043212891
    10. ')' → logprob: -5.555088043212891

Token 350: 's' (ID: 82)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39245378971099854
    2. 's' → logprob: -1.1424537897109985
    3. ' )' → logprob: -5.767453670501709
    4. ' des' → logprob: -7.142453670501709
    5. ')
' → logprob: -7.267453670501709
    6. ' de' → logprob: -8.642454147338867
    7. ')s' → logprob: -9.142454147338867
    8. ' =' → logprob: -9.392454147338867
    9. '_' → logprob: -9.517454147338867
    10. '=' → logprob: -9.642454147338867

Token 351: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0521228201687336
    2. '):' → logprob: -3.3021228313446045
    3. ' des' → logprob: -5.177122592926025
    4. ' )' → logprob: -6.302122592926025
    5. ',' → logprob: -6.302122592926025
    6. '       ' → logprob: -6.677122592926025
    7. ' =' → logprob: -6.677122592926025
    8. '   ' → logprob: -7.677122592926025
    9. ' de' → logprob: -7.802122592926025
    10. '):
' → logprob: -7.927122592926025

Token 352: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013684460893273354
    2. ' partners' → logprob: -5.388684272766113
    3. ' families' → logprob: -6.388684272766113
    4. 'partners' → logprob: -6.388684272766113
    5. '        
' → logprob: -6.638684272766113
    6. ' family' → logprob: -6.763684272766113
    7. ' pairs' → logprob: -8.013684272766113
    8. ' couples' → logprob: -8.013684272766113
    9. '
' → logprob: -8.013684272766113
    10. ' partenaires' → logprob: -8.388684272766113

Token 353: ' #' (ID: 1069)
  Prédit: 'famil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'famil' → logprob: -0.8525064587593079
    2. 'edges' → logprob: -1.602506399154663
    3. 'partners' → logprob: -1.852506399154663
    4. ' edges' → logprob: -3.352506399154663
    5. 'cost' → logprob: -3.852506399154663
    6. ' families' → logprob: -3.852506399154663
    7. 'for' → logprob: -3.977506399154663
    8. 'family' → logprob: -3.977506399154663
    9. ' partners' → logprob: -4.727506637573242
    10. 'pairs' → logprob: -4.977506637573242

Token 354: ' On' (ID: 2160)
  Prédit: 'famil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'famil' → logprob: -1.1539722681045532
    2. 'partners' → logprob: -1.1539722681045532
    3. 'edges' → logprob: -2.1539721488952637
    4. ' families' → logprob: -3.5289721488952637
    5. ' edges' → logprob: -3.5289721488952637
    6. 'cost' → logprob: -3.5289721488952637
    7. ' partners' → logprob: -3.5289721488952637
    8. 'family' → logprob: -3.6539721488952637
    9. '   ' → logprob: -4.528972148895264
    10. 'partner' → logprob: -4.778972148895264

Token 355: ' construit' (ID: 119882)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.587492823600769
    2. 'for' → logprob: -1.962492823600769
    3. ' continue' → logprob: -2.4624929428100586
    4. '=' → logprob: -2.4624929428100586
    5. ' =' → logprob: -2.5874929428100586
    6. 'continue' → logprob: -2.7124929428100586
    7. ' partners' → logprob: -3.5874929428100586
    8. ' for' → logprob: -3.5874929428100586
    9. '_' → logprob: -3.7124929428100586
    10. 'partners' → logprob: -3.8374929428100586

Token 356: ' la' (ID: 557)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.5197575688362122
    2. ' graph' → logprob: -1.7697575092315674
    3. 'graph' → logprob: -2.5197575092315674
    4. ' edges' → logprob: -3.5197575092315674
    5. '   ' → logprob: -3.6447575092315674
    6. ' les' → logprob: -4.0197577476501465
    7. ' le' → logprob: -4.1447577476501465
    8. ' l' → logprob: -4.1447577476501465
    9. ' une' → logprob: -4.5197577476501465
    10. ' a' → logprob: -5.0197577476501465

Token 357: ' liste' (ID: 31719)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.022571342065930367
    2. 'edges' → logprob: -4.772571563720703
    3. 'adj' → logprob: -5.522571563720703
    4. ' graph' → logprob: -5.772571563720703
    5. 'gr' → logprob: -5.897571563720703
    6. 'g' → logprob: -7.272571563720703
    7. 'partners' → logprob: -7.647571563720703
    8. 'graphs' → logprob: -7.772571563720703
    9. 'cost' → logprob: -7.897571563720703
    10. 'G' → logprob: -8.022571563720703

Token 358: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.8074060678482056
    2. '_edges' → logprob: -0.9324060678482056
    3. 'des' → logprob: -2.557405948638916
    4. '_des' → logprob: -3.307405948638916
    5. 'edges' → logprob: -3.932405948638916
    6. '(edges' → logprob: -5.307405948638916
    7. '_' → logprob: -5.432405948638916
    8. ' edges' → logprob: -5.682405948638916
    9. 'adj' → logprob: -6.307405948638916
    10. ' =' → logprob: -6.432405948638916

Token 359: ' ar' (ID: 646)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.6980382800102234
    2. ' edges' → logprob: -1.1980383396148682
    3. ' couples' → logprob: -2.698038339614868
    4. ' partenaires' → logprob: -2.823038339614868
    5. ' familles' → logprob: -4.573038101196289
    6. 'ar' → logprob: -4.698038101196289
    7. 'graph' → logprob: -4.823038101196289
    8. 'part' → logprob: -5.323038101196289
    9. ' graph' → logprob: -5.323038101196289
    10. 'partners' → logprob: -5.448038101196289

Token 360: 'êtes' (ID: 23720)
  Prédit: 'cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cs' → logprob: -0.042664784938097
    2. 'êtes' → logprob: -3.7926647663116455
    3. 'etes' → logprob: -4.292665004730225
    4. 'e' → logprob: -6.292665004730225
    5. 'gs' → logprob: -6.542665004730225
    6. 'tes' → logprob: -7.292665004730225
    7. 'r' → logprob: -7.667665004730225
    8. 'c' → logprob: -7.792665004730225
    9. 'ches' → logprob: -8.792664527893066
    10. 'es' → logprob: -8.792664527893066

Token 361: ' avec' (ID: 3937)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.5363958477973938
    2. ' edges' → logprob: -1.536395788192749
    3. '       ' → logprob: -1.661395788192749
    4. '(edges' → logprob: -4.786396026611328
    5. 'graph' → logprob: -7.911396026611328
    6. ',' → logprob: -8.411396026611328
    7. 'm' → logprob: -8.536396026611328
    8. '   ' → logprob: -9.036396026611328
    9. '_edges' → logprob: -9.036396026611328
    10. '.edges' → logprob: -9.036396026611328

Token 362: ' (' (ID: 350)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.01691029593348503
    2. 'cost' → logprob: -5.516910076141357
    3. 'n' → logprob: -5.891910076141357
    4. '[u' → logprob: -6.141910076141357
    5. 'weights' → logprob: -6.391910076141357
    6. 'u' → logprob: -6.891910076141357
    7. 'edges' → logprob: -6.891910076141357
    8. ' leurs' → logprob: -7.391910076141357
    9. ' []' → logprob: -7.391910076141357
    10. '[' → logprob: -8.016910552978516

Token 363: 'cout' (ID: 13620)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.42439743876457214
    2. 'cost' → logprob: -1.2993974685668945
    3. ')' → logprob: -3.7993974685668945
    4. 'c' → logprob: -4.1743974685668945
    5. '   ' → logprob: -4.2993974685668945
    6. ' u' → logprob: -5.4243974685668945
    7. ',' → logprob: -5.9243974685668945
    8. 'co' → logprob: -6.0493974685668945
    9. ' cost' → logprob: -6.1743974685668945
    10. 'x' → logprob: -6.2993974685668945

Token 364: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00039111197111196816
    2. ')' → logprob: -8.875391006469727
    3. ' ,' → logprob: -8.875391006469727
    4. '),' → logprob: -10.625391006469727
    5. '   ' → logprob: -10.875391006469727
    6. ',
' → logprob: -11.125391006469727
    7. '       ' → logprob: -11.250391006469727
    8. 'import' → logprob: -11.750391006469727
    9. ',n' → logprob: -12.500391006469727
    10. ',)' → logprob: -12.500391006469727

Token 365: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.206491619348526
    2. ' u' → logprob: -2.331491708755493
    3. ' partenaire' → logprob: -3.581491708755493
    4. 'a' → logprob: -3.706491708755493
    5. 'from' → logprob: -4.831491470336914
    6. 'node' → logprob: -4.956491470336914
    7. 'partner' → logprob: -5.331491470336914
    8. ' node' → logprob: -5.706491470336914
    9. ' a' → logprob: -6.206491470336914
    10. 'part' → logprob: -6.331491470336914

Token 366: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.6550729419104755e-05
    2. ' ,' → logprob: -10.500036239624023
    3. ')' → logprob: -12.375036239624023
    4. ',v' → logprob: -12.625036239624023
    5. ',u' → logprob: -14.625036239624023
    6. ',
' → logprob: -15.375036239624023
    7. '),' → logprob: -15.875036239624023
    8. 'u' → logprob: -16.125036239624023
    9. '‌,' → logprob: -16.125036239624023
    10. 'v' → logprob: -16.500036239624023

Token 367: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0007205340662039816
    2. ' v' → logprob: -7.250720500946045
    3. ')' → logprob: -12.250720977783203
    4. 'u' → logprob: -13.375720977783203
    5. '   ' → logprob: -13.750720977783203
    6. ')v' → logprob: -13.750720977783203
    7. '	v' → logprob: -14.625720977783203
    8. '```' → logprob: -14.750720977783203
    9. ' ' → logprob: -14.875720977783203
    10. '  ' → logprob: -15.875720977783203

Token 368: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011880126112373546
    2. ')
' → logprob: -9.25011920928955
    3. '       ' → logprob: -11.12511920928955
    4. ' )' → logprob: -12.12511920928955
    5. '   ' → logprob: -13.75011920928955
    6. '),' → logprob: -14.50011920928955
    7. ')
' → logprob: -15.12511920928955
    8. ')

' → logprob: -15.62511920928955
    9. ',' → logprob: -16.000118255615234
    10. ')`' → logprob: -16.125118255615234

Token 369: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01812419295310974
    2. ' edges' → logprob: -4.518124103546143
    3. 'edges' → logprob: -5.143124103546143
    4. ',' → logprob: -7.768124103546143
    5. '        
' → logprob: -8.3931245803833
    6. '(edges' → logprob: -8.6431245803833
    7. '   ' → logprob: -9.0181245803833
    8. '_edges' → logprob: -9.7681245803833
    9. '
' → logprob: -10.6431245803833
    10. 'n' → logprob: -10.8931245803833

Token 370: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' (adapté à ' edges') → logprob: -0.24275167286396027
    2. ' edges' → logprob: -1.6177517175674438
    3. 'm' → logprob: -4.617751598358154
    4. '       ' → logprob: -5.117751598358154
    5. ' m' → logprob: -6.742751598358154
    6. 'graph' → logprob: -10.242752075195312
    7. 'edge' → logprob: -10.617752075195312
    8. 'E' → logprob: -10.992752075195312
    9. '.edges' → logprob: -11.367752075195312
    10. '   ' → logprob: -11.492752075195312

Token 371: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07890003174543381
    2. '=' → logprob: -2.578900098800659
    3. '=[]' → logprob: -11.828900337219238
    4. '   ' → logprob: -13.078900337219238
    5. ',' → logprob: -15.078900337219238
    6. ' ' → logprob: -15.578900337219238
    7. '    ' → logprob: -15.578900337219238
    8. '[]' → logprob: -16.453899383544922
    9. '＝' → logprob: -17.203899383544922
    10. ':' → logprob: -17.328899383544922

Token 372: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0005892522749491036
    2. ' []' → logprob: -7.500589370727539
    3. '[]
' → logprob: -10.375589370727539
    4. '[' → logprob: -12.375589370727539
    5. '[]}' → logprob: -14.875589370727539
    6. '[]>' → logprob: -15.625589370727539
    7. '[],' → logprob: -15.750589370727539
    8. '[]

' → logprob: -15.875589370727539
    9. '[])' → logprob: -16.25058937072754
    10. '[]=' → logprob: -17.62558937072754

Token 373: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02636869251728058
    2. ' for' → logprob: -4.026368618011475
    3. 'for' → logprob: -5.276368618011475
    4. '<|end|>' → logprob: -6.776368618011475
    5. '        
' → logprob: -7.276368618011475
    6. '
' → logprob: -7.901368618011475
    7. '	' → logprob: -8.276369094848633
    8. '	for' → logprob: -8.776369094848633
    9. '   ' → logprob: -9.151369094848633
    10. 'n' → logprob: -9.776369094848633

Token 374: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11864782869815826
    2. ' for' → logprob: -2.243647813796997
    3. 'm' → logprob: -5.618648052215576
    4. 'n' → logprob: -7.118648052215576
    5. '       ' → logprob: -7.118648052215576
    6. ' m' → logprob: -9.243647575378418
    7. 'f' → logprob: -9.743647575378418
    8. 'family' → logprob: -9.868647575378418
    9. 'partners' → logprob: -9.868647575378418
    10. 'partner' → logprob: -10.118647575378418

Token 375: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1535339504480362
    2. ' for' → logprob: -2.153533935546875
    3. 'm' → logprob: -4.528533935546875
    4. 'family' → logprob: -5.653533935546875
    5. 'partners' → logprob: -6.778533935546875
    6. 'n' → logprob: -6.903533935546875
    7. 'partner' → logprob: -6.903533935546875
    8. 'famil' → logprob: -7.153533935546875
    9. 'fam' → logprob: -7.278533935546875
    10. 'u' → logprob: -7.278533935546875

Token 376: ' vérifier' (ID: 93671)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.8333132863044739
    2. '_' → logprob: -1.208313226699829
    3. ' _' → logprob: -1.458313226699829
    4. 'i' → logprob: -3.458313226699829
    5. '_i' → logprob: -6.083313465118408
    6. '_f' → logprob: -9.08331298828125
    7. ' famille' → logprob: -9.95831298828125
    8. ' ' → logprob: -10.83331298828125
    9. ' each' → logprob: -11.20831298828125
    10. ' family' → logprob: -11.33331298828125

Token 377: ' la' (ID: 557)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.121992588043213
    2. ' n' → logprob: -2.121992588043213
    3. '_' → logprob: -2.371992588043213
    4. 'n' → logprob: -2.621992588043213
    5. ' _' → logprob: -2.621992588043213
    6. ' i' → logprob: -2.871992588043213
    7. ' la' → logprob: -3.246992588043213
    8. ' ' → logprob: -3.621992588043213
    9. '   ' → logprob: -3.621992588043213
    10. ' u' → logprob: -3.871992588043213

Token 378: ' coh' (ID: 85287)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4401753842830658
    2. 'range' → logprob: -2.0651752948760986
    3. 'for' → logprob: -2.6901752948760986
    4. 'i' → logprob: -2.9401752948760986
    5. ' range' → logprob: -3.1901752948760986
    6. '_f' → logprob: -4.065175533294678
    7. ' for' → logprob: -4.815175533294678
    8. ' _' → logprob: -4.815175533294678
    9. 'len' → logprob: -5.440175533294678
    10. ' i' → logprob: -5.940175533294678

Token 379: 'érence' (ID: 65256)
  Prédit: 'érence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érence' → logprob: -0.006113297306001186
    2. 'ésion' → logprob: -5.506113529205322
    3. 'r' → logprob: -7.631113529205322
    4. 'érences' → logprob: -7.756113529205322
    5. 'érent' → logprob: -8.381113052368164
    6. 'er' → logprob: -8.506113052368164
    7. '#' → logprob: -9.131113052368164
    8. 'rence' → logprob: -9.131113052368164
    9. 'érance' → logprob: -9.131113052368164
    10. 'ér' → logprob: -10.006113052368164

Token 380: ' des' (ID: 731)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1642961502075195
    2. ' n' → logprob: -1.2892961502075195
    3. ' for' → logprob: -1.6642961502075195
    4. 'n' → logprob: -2.2892961502075195
    5. ',' → logprob: -3.5392961502075195
    6. ' with' → logprob: -4.1642961502075195
    7. '   ' → logprob: -4.2892961502075195
    8. ' et' → logprob: -5.2892961502075195
    9. ' and' → logprob: -5.4142961502075195
    10. ' i' → logprob: -5.5392961502075195

Token 381: ' ar' (ID: 646)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.8352817296981812
    2. ' partenaires' → logprob: -1.9602817296981812
    3. 'fam' → logprob: -1.9602817296981812
    4. ' couples' → logprob: -2.5852818489074707
    5. ' données' → logprob: -3.3352818489074707
    6. 'd' → logprob: -3.7102818489074707
    7. ' familles' → logprob: -3.8352818489074707
    8. 'cou' → logprob: -4.460281848907471
    9. 'relations' → logprob: -4.835281848907471
    10. 'data' → logprob: -4.960281848907471

Token 382: 'êtes' (ID: 23720)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.4453376233577728
    2. 'g' → logprob: -1.3203376531600952
    3. 'gs' → logprob: -2.5703375339508057
    4. 'êtes' → logprob: -5.445337772369385
    5. 'rg' → logprob: -5.570337772369385
    6. 'cs' → logprob: -5.945337772369385
    7. 'ges' → logprob: -6.070337772369385
    8. 'tes' → logprob: -7.195337772369385
    9. 'c' → logprob: -8.195337295532227
    10. 't' → logprob: -8.445337295532227

Token 383: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05690746381878853
    2. ',' → logprob: -3.1819074153900146
    3. ' for' → logprob: -5.431907653808594
    4. '        
' → logprob: -5.931907653808594
    5. '   ' → logprob: -6.681907653808594
    6. 'n' → logprob: -6.806907653808594
    7. ' ,' → logprob: -7.181907653808594
    8. ' n' → logprob: -7.806907653808594
    9. '	' → logprob: -8.056907653808594
    10. 'for' → logprob: -8.306907653808594

Token 384: ' on' (ID: 402)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.1388887166976929
    2. ' parents' → logprob: -2.2638888359069824
    3. ' m' → logprob: -2.5138888359069824
    4. '       ' → logprob: -2.6388888359069824
    5. ' partners' → logprob: -2.8888888359069824
    6. ' n' → logprob: -3.1388888359069824
    7. ' family' → logprob: -3.1388888359069824
    8. ' visited' → logprob: -3.3888888359069824
    9. ' families' → logprob: -3.7638888359069824
    10. ' partner' → logprob: -3.7638888359069824

Token 385: ' ajoute' (ID: 91611)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.42753729224205017
    2. ' for' → logprob: -2.427537202835083
    3. 'continue' → logprob: -2.552537202835083
    4. ' continue' → logprob: -2.802537202835083
    5. '       ' → logprob: -3.052537202835083
    6. 'visited' → logprob: -3.802537202835083
    7. 'contin' → logprob: -5.427537441253662
    8. ' visited' → logprob: -5.802537441253662
    9. ' reads' → logprob: -5.802537441253662
    10. 'size' → logprob: -5.927537441253662

Token 386: ' l' (ID: 305)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.8861070871353149
    2. ' une' → logprob: -1.011107087135315
    3. '   ' → logprob: -2.8861069679260254
    4. ' les' → logprob: -3.5111069679260254
    5. '       ' → logprob: -3.7611069679260254
    6. 'for' → logprob: -4.261106967926025
    7. 'un' → logprob: -4.386106967926025
    8. ' for' → logprob: -4.511106967926025
    9. ' des' → logprob: -4.636106967926025
    10. 'n' → logprob: -4.886106967926025

Token 387: ''ar' (ID: 54307)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.3795224130153656
    2. 'a' → logprob: -2.3795223236083984
    3. 'ine' → logprob: -2.7545223236083984
    4. 'ines' → logprob: -3.3795223236083984
    5. 'es' → logprob: -3.5045223236083984
    6. 'n' → logprob: -4.379522323608398
    7. '   ' → logprob: -4.379522323608398
    8. 'en' → logprob: -4.504522323608398
    9. 'ignes' → logprob: -5.004522323608398
    10. ''' → logprob: -5.254522323608398

Token 388: 'ête' (ID: 16808)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.0581843852996826
    2. 'gs' → logprob: -1.5581843852996826
    3. 'cs' → logprob: -1.9331843852996826
    4. 'e' → logprob: -2.0581843852996826
    5. 'es' → logprob: -3.0581843852996826
    6. 'êtes' → logprob: -3.1831843852996826
    7. 'g' → logprob: -3.3081843852996826
    8. 'etes' → logprob: -4.683184623718262
    9. 'c' → logprob: -5.308184623718262
    10. 'bres' → logprob: -5.433184623718262

Token 389: ' entre' (ID: 3853)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.9280023574829102
    2. 's' → logprob: -2.55300235748291
    3. ' for' → logprob: -2.80300235748291
    4. '(' → logprob: -3.05300235748291
    5. ' entre' → logprob: -3.05300235748291
    6. '       ' → logprob: -3.17800235748291
    7. '(u' → logprob: -3.17800235748291
    8. 'for' → logprob: -3.17800235748291
    9. ' if' → logprob: -3.67800235748291
    10. '(n' → logprob: -4.17800235748291

Token 390: ' i' (ID: 575)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.36981746554374695
    2. 'i' → logprob: -1.6198174953460693
    3. 'u' → logprob: -3.2448174953460693
    4. ' i' → logprob: -3.7448174953460693
    5. 'n' → logprob: -4.24481725692749
    6. ' ' → logprob: -4.36981725692749
    7. ' u' → logprob: -5.24481725692749
    8. '1' → logprob: -5.36981725692749
    9. ' n' → logprob: -5.49481725692749
    10. '   ' → logprob: -5.86981725692749

Token 391: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5508926510810852
    2. ' et' → logprob: -1.6758925914764404
    3. ' and' → logprob: -1.8008925914764404
    4. ' ,' → logprob: -2.9258925914764404
    5. '+' → logprob: -4.9258928298950195
    6. 'and' → logprob: -5.8008928298950195
    7. 's' → logprob: -6.3008928298950195
    8. ' ' → logprob: -6.4258928298950195
    9. ' i' → logprob: -7.0508928298950195
    10. '   ' → logprob: -7.5508928298950195

Token 392: ' b' (ID: 287)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.48196184635162354
    2. ' i' → logprob: -1.6069618463516235
    3. 'j' → logprob: -2.981961727142334
    4. '0' → logprob: -3.231961727142334
    5. '(i' → logprob: -3.356961727142334
    6. ' (' → logprob: -3.606961727142334
    7. ' j' → logprob: -4.106961727142334
    8. ' ' → logprob: -5.481961727142334
    9. '(n' → logprob: -5.856961727142334
    10. '(' → logprob: -6.606961727142334

Token 393: ' repeated' (ID: 24161)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6265397071838379
    2. '[i' → logprob: -1.001539707183838
    3. ' ,' → logprob: -3.626539707183838
    4. '[' → logprob: -4.001539707183838
    5. 'i' → logprob: -4.251539707183838
    6. '_i' → logprob: -5.001539707183838
    7. 'f' → logprob: -5.126539707183838
    8. 'efore' → logprob: -5.376539707183838
    9. 'e' → logprob: -5.751539707183838
    10. ',i' → logprob: -5.876539707183838

Token 394: ' from' (ID: 591)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.9090971946716309
    2. 'y' → logprob: -1.4090971946716309
    3. ',' → logprob: -2.659097194671631
    4. 'for' → logprob: -2.784097194671631
    5. '[' → logprob: -3.659097194671631
    6. '+' → logprob: -3.659097194671631
    7. 'f' → logprob: -4.034097194671631
    8. 'e' → logprob: -4.284097194671631
    9. ']' → logprob: -4.534097194671631
    10. 'efore' → logprob: -4.534097194671631

Token 395: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3710807263851166
    2. ' i' → logprob: -1.996080756187439
    3. '0' → logprob: -2.1210806369781494
    4. ' ' → logprob: -4.3710808753967285
    5. '1' → logprob: -4.3710808753967285
    6. 'n' → logprob: -5.1210808753967285
    7. 'range' → logprob: -5.3710808753967285
    8. '_' → logprob: -6.1210808753967285
    9. ' range' → logprob: -6.2460808753967285
    10. '   ' → logprob: -6.3710808753967285

Token 396: ''s' (ID: 885)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.9519506096839905
    2. '+' → logprob: -1.5769505500793457
    3. ',' → logprob: -2.4519505500793457
    4. 'i' → logprob: -2.5769505500793457
    5. ']' → logprob: -3.0769505500793457
    6. 'y' → logprob: -3.5769505500793457
    7. 'for' → logprob: -3.7019505500793457
    8. ' i' → logprob: -4.076950550079346
    9. '-' → logprob: -4.201950550079346
    10. '_i' → logprob: -4.326950550079346

Token 397: ' input' (ID: 3422)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.4729297161102295
    2. ',' → logprob: -1.8479297161102295
    3. '_partner' → logprob: -2.0979297161102295
    4. '_i' → logprob: -3.0979297161102295
    5. 'partner' → logprob: -3.3479297161102295
    6. 'partners' → logprob: -3.5979297161102295
    7. '_' → logprob: -3.9729297161102295
    8. '[i' → logprob: -3.9729297161102295
    9. 'f' → logprob: -3.9729297161102295
    10. '```' → logprob: -3.9729297161102295

Token 398: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3390771746635437
    2. ' =' → logprob: -2.2140772342681885
    3. ' for' → logprob: -2.2140772342681885
    4. ',' → logprob: -4.089076995849609
    5. '   ' → logprob: -4.214076995849609
    6. '[i' → logprob: -4.589076995849609
    7. '=' → logprob: -5.089076995849609
    8. '[' → logprob: -5.464076995849609
    9. 's' → logprob: -6.214076995849609
    10. 'f' → logprob: -6.339076995849609

Token 399: '       ' (ID: 309)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7565988302230835
    2. 'for' → logprob: -1.5065988302230835
    3. '       ' → logprob: -1.8815988302230835
    4. '   ' → logprob: -2.756598949432373
    5. ' for' → logprob: -3.256598949432373
    6. '=' → logprob: -4.506598949432373
    7. '    ' → logprob: -4.881598949432373
    8. '[i' → logprob: -5.006598949432373
    9. '[' → logprob: -5.381598949432373
    10. '        ' → logprob: -5.631598949432373

Token 400: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5902107954025269
    2. '       ' → logprob: -1.7152107954025269
    3. ' for' → logprob: -1.8402107954025269
    4. ' =' → logprob: -2.8402109146118164
    5. '   ' → logprob: -3.8402109146118164
    6. '=' → logprob: -4.465210914611816
    7. 'n' → logprob: -5.590210914611816
    8. 'or' → logprob: -6.340210914611816
    9. '    ' → logprob: -6.590210914611816
    10. '        ' → logprob: -6.715210914611816

Token 401: ' Attention' (ID: 81932)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7133209705352783
    2. ' for' → logprob: -0.9633209705352783
    3. 'for' → logprob: -2.5883209705352783
    4. '   ' → logprob: -3.7133209705352783
    5. ' =' → logprob: -4.713320732116699
    6. '
' → logprob: -5.588320732116699
    7. '        
' → logprob: -5.963320732116699
    8. '\t' → logprob: -6.213320732116699
    9. 'n' → logprob: -6.338320732116699
    10. '	for' → logprob: -6.338320732116699

Token 402: ' indices' (ID: 30378)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9184049963951111
    2. ':' → logprob: -1.1684050559997559
    3. ' to' → logprob: -2.543405055999756
    4. '       ' → logprob: -2.918405055999756
    5. ' ' → logprob: -2.918405055999756
    6. ' :' → logprob: -3.543405055999756
    7. ' for' → logprob: -3.918405055999756
    8. ',' → logprob: -4.043405055999756
    9. ' aux' → logprob: -4.918405055999756
    10. '    ' → logprob: -5.043405055999756

Token 403: ' dans' (ID: 2671)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05464719980955124
    2. '=' → logprob: -3.804647207260132
    3. ' des' → logprob: -4.929646968841553
    4. ' ' → logprob: -5.054646968841553
    5. '   ' → logprob: -5.679646968841553
    6. ',' → logprob: -6.554646968841553
    7. '    ' → logprob: -6.679646968841553
    8. ' i' → logprob: -6.679646968841553
    9. ' :' → logprob: -6.804646968841553
    10. ' +=' → logprob: -6.804646968841553

Token 404: ' l' (ID: 305)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.22873671352863312
    2. ' range' → logprob: -2.353736639022827
    3. '0' → logprob: -3.103736639022827
    4. 'les' → logprob: -4.478736877441406
    5. 'la' → logprob: -4.478736877441406
    6. ' edges' → logprob: -4.853736877441406
    7. 'le' → logprob: -4.978736877441406
    8. ' la' → logprob: -5.603736877441406
    9. 'edges' → logprob: -5.728736877441406
    10. '   ' → logprob: -5.853736877441406

Token 405: ''entrée' (ID: 115820)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.47681817412376404
    2. 'range' → logprob: -1.8518182039260864
    3. 'input' → logprob: -2.601818084716797
    4. ' range' → logprob: -3.601818084716797
    5. '0' → logprob: -3.851818084716797
    6. '[' → logprob: -3.976818084716797
    7. ''entrée' → logprob: -3.976818084716797
    8. 'es' → logprob: -4.726818084716797
    9. 'entrée' → logprob: -5.226818084716797
    10. ''' → logprob: -5.351818084716797

Token 406: ' semblent' (ID: 139125)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3663194477558136
    2. '       ' → logprob: -1.7413194179534912
    3. '   ' → logprob: -3.116319417953491
    4. ' for' → logprob: -3.616319417953491
    5. ':' → logprob: -3.866319417953491
    6. '=' → logprob: -4.36631965637207
    7. ',' → logprob: -5.36631965637207
    8. '[i' → logprob: -6.36631965637207
    9. ' :' → logprob: -6.36631965637207
    10. ' +=' → logprob: -6.36631965637207

Token 407: ' ' (ID: 220)
  Prédit: ' commencer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' commencer' → logprob: -1.0313605070114136
    2. ' partir' → logprob: -2.156360626220703
    3. '0' → logprob: -2.406360626220703
    4. ' être' → logprob: -2.406360626220703
    5. 'd' → logprob: -2.781360626220703
    6. '1' → logprob: -3.031360626220703
    7. 'starting' → logprob: -3.156360626220703
    8. 'comm' → logprob: -3.531360626220703
    9. 'être' → logprob: -3.656360626220703
    10. 'from' → logprob: -3.656360626220703

Token 408: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4300639629364014
    2. ' commencer' → logprob: -1.4300639629364014
    3. '-' → logprob: -1.8050639629364014
    4. ' partir' → logprob: -2.3050639629364014
    5. '0' → logprob: -2.5550639629364014
    6. ' être' → logprob: -2.9300639629364014
    7. 'd' → logprob: -3.1800639629364014
    8. ' ' → logprob: -3.4300639629364014
    9. 'être' → logprob: -4.6800642013549805
    10. ' à' → logprob: -4.9300642013549805

Token 409: '-based' (ID: 8235)
  Prédit: '-based'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-based' → logprob: -0.04696745425462723
    2. 'based' → logprob: -3.1719675064086914
    3. '-' → logprob: -6.546967506408691
    4. ' based' → logprob: -6.546967506408691
    5. '-index' → logprob: -7.671967506408691
    6. ' -' → logprob: -8.546967506408691
    7. ' or' → logprob: -9.546967506408691
    8. '_based' → logprob: -9.671967506408691
    9. 'indexed' → logprob: -10.046967506408691
    10. '...' → logprob: -10.171967506408691

Token 410: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03939921408891678
    2. ' for' → logprob: -4.039399147033691
    3. '
' → logprob: -4.914399147033691
    4. '        
' → logprob: -5.414399147033691
    5. ',' → logprob: -5.539399147033691
    6. '	' → logprob: -6.789399147033691
    7. 'for' → logprob: -7.039399147033691
    8. '   ' → logprob: -7.289399147033691
    9. '<|end|>' → logprob: -7.789399147033691
    10. '		
' → logprob: -8.414399147033691

Token 411: ' à' (ID: 1221)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32191476225852966
    2. ' continue' → logprob: -2.8219146728515625
    3. ' so' → logprob: -2.8219146728515625
    4. ' for' → logprob: -3.4469146728515625
    5. '        
' → logprob: -3.4469146728515625
    6. 'continue' → logprob: -4.3219146728515625
    7. ' but' → logprob: -4.4469146728515625
    8. ' on' → logprob: -4.5719146728515625
    9. ' mais' → logprob: -4.9469146728515625
    10. ' n' → logprob: -4.9469146728515625

Token 412: ' vérifier' (ID: 93671)
  Prédit: 'adjust'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adjust' → logprob: -1.7453174591064453
    2. ' ajust' → logprob: -1.9953174591064453
    3. 'contin' → logprob: -2.4953174591064453
    4. 'v' → logprob: -2.6203174591064453
    5. 'aj' → logprob: -2.7453174591064453
    6. ' confirmer' → logprob: -2.7453174591064453
    7. 'dé' → logprob: -2.8703174591064453
    8. ' continuer' → logprob: -3.1203174591064453
    9. ' vérifier' → logprob: -3.3703174591064453
    10. 'comp' → logprob: -3.7453174591064453

Token 413: ' sur' (ID: 1512)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015296317636966705
    2. '
' → logprob: -4.890296459197998
    3. '        
' → logprob: -5.765296459197998
    4. '   ' → logprob: -6.515296459197998
    5. ' for' → logprob: -6.890296459197998
    6. '	' → logprob: -7.265296459197998
    7. '<|end|>' → logprob: -8.01529598236084
    8. '    
' → logprob: -8.89029598236084
    9. ',' → logprob: -9.01529598236084
    10. '		
' → logprob: -9.14029598236084

Token 414: ' exemples' (ID: 105138)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.71796053647995
    2. ' la' → logprob: -1.4679605960845947
    3. 'l' → logprob: -2.2179605960845947
    4. 'les' → logprob: -3.0929605960845947
    5. 'len' → logprob: -3.7179605960845947
    6. ' les' → logprob: -3.8429605960845947
    7. ' chaque' → logprob: -3.9679605960845947
    8. ' ' → logprob: -4.092960357666016
    9. 'le' → logprob: -4.842960357666016
    10. ' le' → logprob: -5.342960357666016

Token 415: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03740355744957924
    2. '        
' → logprob: -4.287403583526611
    3. '
' → logprob: -4.662403583526611
    4. ' for' → logprob: -5.162403583526611
    5. '   ' → logprob: -5.912403583526611
    6. '\t' → logprob: -6.787403583526611
    7. 'for' → logprob: -6.912403583526611
    8. '	' → logprob: -7.287403583526611
    9. '    
' → logprob: -8.037403106689453
    10. ',' → logprob: -8.162403106689453

Token 416: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11107814311981201
    2. ' for' → logprob: -2.4860782623291016
    3. 'for' → logprob: -4.611078262329102
    4. 'n' → logprob: -4.861078262329102
    5. '   ' → logprob: -6.111078262329102
    6. ' n' → logprob: -6.986078262329102
    7. '        
' → logprob: -7.736078262329102
    8. '
' → logprob: -8.861078262329102
    9. '    
' → logprob: -9.486078262329102
    10. '	for' → logprob: -9.986078262329102

Token 417: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5617372989654541
    2. 'for' (adapté à ' for') → logprob: -0.9367372989654541
    3. '       ' → logprob: -3.436737298965454
    4. 'n' → logprob: -7.186737060546875
    5. 'partners' → logprob: -7.436737060546875
    6. ' edges' → logprob: -7.686737060546875
    7. 'family' → logprob: -7.811737060546875
    8. ' partners' → logprob: -7.811737060546875
    9. ' family' → logprob: -7.936737060546875
    10. 'm' → logprob: -7.936737060546875

Token 418: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0616680271923542
    2. ' _' → logprob: -3.4366679191589355
    3. 'i' → logprob: -3.6866679191589355
    4. '_' → logprob: -6.0616679191589355
    5. '_i' → logprob: -8.436668395996094
    6. ' ' → logprob: -11.061668395996094
    7. '   ' → logprob: -12.061668395996094
    8. '	i' → logprob: -12.186668395996094
    9. ' ' → logprob: -13.311668395996094
    10. '  ' → logprob: -14.436668395996094

Token 419: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008719408884644508
    2. 'in' → logprob: -4.758719444274902
    3. ' ' → logprob: -9.758719444274902
    4. ',' → logprob: -10.883719444274902
    5. ' ,' → logprob: -11.633719444274902
    6. '_' → logprob: -11.883719444274902
    7. ' _' → logprob: -12.258719444274902
    8. '	in' → logprob: -13.133719444274902
    9. ' ' → logprob: -13.508719444274902
    10. '_in' → logprob: -13.883719444274902

Token 420: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01416750717908144
    2. ' range' → logprob: -4.264167308807373
    3. '   ' → logprob: -13.514167785644531
    4. ' ' → logprob: -13.639167785644531
    5. 'ange' → logprob: -14.514167785644531
    6. '  ' → logprob: -15.014167785644531
    7. '	range' → logprob: -15.514167785644531
    8. 'rang' → logprob: -16.01416778564453
    9. '    ' → logprob: -16.38916778564453
    10. '(range' → logprob: -16.38916778564453

Token 421: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00019245444855187088
    2. '(' → logprob: -8.750192642211914
    3. ' n' → logprob: -10.500192642211914
    4. ' (' → logprob: -12.375192642211914
    5. 'n' → logprob: -13.125192642211914
    6. ',' → logprob: -16.375192642211914
    7. ',n' → logprob: -16.875192642211914
    8. '	n' → logprob: -17.250192642211914
    9. '(
' → logprob: -18.000192642211914
    10. '   ' → logprob: -18.375192642211914

Token 422: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20198196172714233
    2. '):' → logprob: -1.701982021331787
    3. '):
' → logprob: -7.826982021331787
    4. '   ' → logprob: -9.326981544494629
    5. '       ' → logprob: -9.951981544494629
    6. ' ):
' → logprob: -11.576981544494629
    7. ' ):' → logprob: -11.951981544494629
    8. ')' → logprob: -12.326981544494629
    9. ':' → logprob: -12.451981544494629
    10. '():
' → logprob: -13.076981544494629

Token 423: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02569654770195484
    2. ' parts' → logprob: -4.400696754455566
    3. '       ' → logprob: -5.525696754455566
    4. ' line' → logprob: -5.650696754455566
    5. ',' → logprob: -5.900696754455566
    6. '   ' → logprob: -6.775696754455566
    7. ' lines' → logprob: -8.150696754455566
    8. '	       ' → logprob: -8.150696754455566
    9. '            
' → logprob: -9.275696754455566
    10. ':' → logprob: -9.525696754455566

Token 424: ' b' (ID: 287)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4210819005966187
    2. 'data' → logprob: -1.4210819005966187
    3. ' data' → logprob: -1.9210819005966187
    4. ' line' → logprob: -1.9210819005966187
    5. 'line' → logprob: -2.421082019805908
    6. '           ' → logprob: -2.796082019805908
    7. ' parts' → logprob: -4.171082019805908
    8. 'parts' → logprob: -4.421082019805908
    9. 'k' → logprob: -4.671082019805908
    10. 'a' → logprob: -4.796082019805908

Token 425: '0' (ID: 15)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009794592624530196
    2. ',c' → logprob: -7.750979423522949
    3. ' ,' → logprob: -8.37597942352295
    4. ' =' → logprob: -9.50097942352295
    5. '=' → logprob: -9.87597942352295
    6. ',k' → logprob: -10.00097942352295
    7. '_,' → logprob: -10.50097942352295
    8. ',n' → logprob: -11.12597942352295
    9. ',b' → logprob: -11.25097942352295
    10. ',s' → logprob: -11.25097942352295

Token 426: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18504856526851654
    2. ' =' → logprob: -2.0600485801696777
    3. '=' → logprob: -3.3100485801696777
    4. ',b' → logprob: -6.685048580169678
    5. '   ' → logprob: -7.060048580169678
    6. 'b' → logprob: -7.810048580169678
    7. ',c' → logprob: -8.18504810333252
    8. ',n' → logprob: -8.18504810333252
    9. ',k' → logprob: -8.18504810333252
    10. ' ,' → logprob: -8.68504810333252

Token 427: ' f' (ID: 285)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.08922319859266281
    2. 'b' → logprob: -2.9642231464385986
    3. ' c' → logprob: -4.589223384857178
    4. 'w' → logprob: -5.214223384857178
    5. 'cost' → logprob: -5.214223384857178
    6. 'k' → logprob: -5.714223384857178
    7. 'p' → logprob: -6.464223384857178
    8. ' b' → logprob: -6.839223384857178
    9. 'd' → logprob: -7.089223384857178
    10. 'a' → logprob: -7.276723384857178

Token 428: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.18667158484458923
    2. ' =' → logprob: -2.811671495437622
    3. ',' → logprob: -3.061671495437622
    4. '=' → logprob: -4.061671733856201
    5. 'cost' → logprob: -4.061671733856201
    6. 'c' → logprob: -4.561671733856201
    7. '1' → logprob: -4.811671733856201
    8. '_cost' → logprob: -5.561671733856201
    9. 'b' → logprob: -6.686671733856201
    10. ' ' → logprob: -7.186671733856201

Token 429: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2751615047454834
    2. '=' → logprob: -1.9001615047454834
    3. ' =' → logprob: -2.4001615047454834
    4. ' ,' → logprob: -8.650161743164062
    5. ' ' → logprob: -10.525161743164062
    6. '   ' → logprob: -11.025161743164062
    7. ',b' → logprob: -11.650161743164062
    8. ')' → logprob: -11.650161743164062
    9. 'b' → logprob: -11.837661743164062
    10. ')=' → logprob: -12.212661743164062

Token 430: ' b' (ID: 287)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.1863827407360077
    2. ' c' → logprob: -2.93638277053833
    3. ' =' → logprob: -3.81138277053833
    4. 'b' → logprob: -4.31138277053833
    5. 'd' → logprob: -4.43638277053833
    6. 'f' → logprob: -4.81138277053833
    7. '*' → logprob: -4.93638277053833
    8. 'p' → logprob: -4.93638277053833
    9. 'k' → logprob: -5.06138277053833
    10. 's' → logprob: -5.43638277053833

Token 431: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3770143985748291
    2. '0' → logprob: -2.127014398574829
    3. ' =' → logprob: -2.627014398574829
    4. ',' → logprob: -2.877014398574829
    5. '=' → logprob: -3.502014398574829
    6. 'cost' → logprob: -3.627014398574829
    7. 'c' → logprob: -5.62701416015625
    8. '2' → logprob: -6.50201416015625
    9. '_cost' → logprob: -6.75201416015625
    10. 'f' → logprob: -7.93951416015625

Token 432: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002232809318229556
    2. '=' → logprob: -6.252233028411865
    3. ' =' → logprob: -8.252232551574707
    4. ',f' → logprob: -10.877232551574707
    5. ' ,' → logprob: -10.877232551574707
    6. '0' → logprob: -13.627232551574707
    7. '<|end|>' → logprob: -14.252232551574707
    8. ' ' → logprob: -14.877232551574707
    9. ',b' → logprob: -15.002232551574707
    10. ')' → logprob: -15.064732551574707

Token 433: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.31336504220962524
    2. ' f' → logprob: -1.3133649826049805
    3. ' ' → logprob: -10.43836498260498
    4. ',' → logprob: -11.43836498260498
    5. 'c' → logprob: -11.56336498260498
    6. '   ' → logprob: -11.56336498260498
    7. 's' → logprob: -12.06336498260498
    8. ' =' → logprob: -12.12586498260498
    9. '  ' → logprob: -12.56336498260498
    10. '=' → logprob: -13.00086498260498

Token 434: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003380068577826023
    2. '0' → logprob: -5.753380298614502
    3. ',' → logprob: -9.378379821777344
    4. ' =' → logprob: -9.878379821777344
    5. '=' → logprob: -10.003379821777344
    6. ' ' → logprob: -11.878379821777344
    7. ')' → logprob: -12.253379821777344
    8. '<|end|>' → logprob: -13.253379821777344
    9. '2' → logprob: -13.378379821777344
    10. '   ' → logprob: -13.940879821777344

Token 435: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31338265538215637
    2. '=' → logprob: -1.313382625579834
    3. ',' → logprob: -9.188383102416992
    4. ' ' → logprob: -11.563383102416992
    5. '   ' → logprob: -12.688383102416992
    6. '=sys' → logprob: -13.813383102416992
    7. ')=' → logprob: -14.063383102416992
    8. '    ' → logprob: -14.188383102416992
    9. ')' → logprob: -14.188383102416992
    10. ' ' → logprob: -14.313383102416992

Token 436: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.04858941584825516
    2. ' map' → logprob: -3.0485894680023193
    3. '	map' → logprob: -14.423589706420898
    4. ' ' → logprob: -14.798589706420898
    5. 'list' → logprob: -14.798589706420898
    6. 'sys' → logprob: -15.048589706420898
    7. '(map' → logprob: -15.298589706420898
    8. '   ' → logprob: -16.4235897064209
    9. '[' → logprob: -16.4235897064209
    10. '  ' → logprob: -17.0485897064209

Token 437: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -1.1875571544806007e-05
    2. '(' → logprob: -11.625011444091797
    3. 'int' → logprob: -13.000011444091797
    4. '(str' → logprob: -14.875011444091797
    5. '(list' → logprob: -16.375011444091797
    6. '[int' → logprob: -16.625011444091797
    7. '=int' → logprob: -17.125011444091797
    8. '<int' → logprob: -17.750011444091797
    9. ',int' → logprob: -18.250011444091797
    10. ' int' → logprob: -18.375011444091797

Token 438: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007459024200215936
    2. '(sys' → logprob: -7.25074577331543
    3. 'sys' → logprob: -10.37574577331543
    4. '=sys' → logprob: -13.25074577331543
    5. ' sys' → logprob: -13.37574577331543
    6. ' ,' → logprob: -13.87574577331543
    7. '	sys' → logprob: -15.62574577331543
    8. '(),' → logprob: -15.75074577331543
    9. ',
' → logprob: -16.37574577331543
    10. '   ' → logprob: -16.87574577331543

Token 439: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -4.56102097814437e-05
    2. ' sys' → logprob: -10.000045776367188
    3. ')' → logprob: -16.750045776367188
    4. '(sys' → logprob: -17.000045776367188
    5. '=sys' → logprob: -18.375045776367188
    6. '   ' → logprob: -18.625045776367188
    7. '	sys' → logprob: -19.375045776367188
    8. '
' → logprob: -20.500045776367188
    9. ' ' → logprob: -21.500045776367188
    10. '.sys' → logprob: -21.500045776367188

Token 440: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -7.896309739408025e-07
    2. '.readline' → logprob: -14.750000953674316
    3. 'stdin' → logprob: -15.250000953674316
    4. '.' → logprob: -16.875
    5. '.stdout' → logprob: -16.875
    6. '(stdin' → logprob: -17.875
    7. '.argv' → logprob: -18.625
    8. '.std' → logprob: -19.0
    9. '   ' → logprob: -20.0
    10. '.stderr' → logprob: -20.625

Token 441: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.3856492842023727e-06
    2. '.stdin' → logprob: -13.750000953674316
    3. '.' → logprob: -15.750000953674316
    4. '().' → logprob: -16.500001907348633
    5. ' readline' → logprob: -20.875001907348633
    6. '.readlines' → logprob: -21.250001907348633
    7. ' .' → logprob: -21.625001907348633
    8. '(stdin' → logprob: -21.750001907348633
    9. '.read' → logprob: -21.875001907348633
    10. '   ' → logprob: -22.375001907348633

Token 442: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.0325924449716695e-05
    2. '()' → logprob: -11.50001049041748
    3. '(' → logprob: -16.750009536743164
    4. ' ().' → logprob: -17.500009536743164
    5. '()
' → logprob: -17.875009536743164
    6. '   ' → logprob: -18.250009536743164
    7. '())' → logprob: -19.000009536743164
    8. '.strip' → logprob: -19.375009536743164
    9. '.readline' → logprob: -19.750009536743164
    10. '.split' → logprob: -20.125009536743164

Token 443: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.008620012551546097
    2. 'strip' → logprob: -4.758619785308838
    3. 'rstrip' → logprob: -12.258620262145996
    4. ' split' → logprob: -14.383620262145996
    5. '(split' → logprob: -16.50861930847168
    6. 'spl' → logprob: -16.63361930847168
    7. 's' → logprob: -18.88361930847168
    8. '.split' → logprob: -19.25861930847168
    9. ' strip' → logprob: -19.38361930847168
    10. 'sp' → logprob: -21.63361930847168

Token 444: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.18282954394817352
    2. ')' → logprob: -1.80782949924469
    3. '()' → logprob: -5.9328293800354
    4. '())
' → logprob: -8.057829856872559
    5. '(' → logprob: -9.557829856872559
    6. ')
' → logprob: -11.182829856872559
    7. '())
' → logprob: -11.432829856872559
    8. ' )' → logprob: -12.182829856872559
    9. ' ())' → logprob: -13.057829856872559
    10. '))' → logprob: -13.557829856872559

Token 445: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00842533353716135
    2. ')' → logprob: -6.133425235748291
    3. ' edges' → logprob: -6.383425235748291
    4. '<|end|>' → logprob: -6.633425235748291
    5. '
' → logprob: -6.758425235748291
    6. '       ' → logprob: -7.133425235748291
    7. 'edges' → logprob: -7.758425235748291
    8. '   ' → logprob: -8.00842571258545
    9. ',' → logprob: -8.75842571258545
    10. '<|end|>' → logprob: -9.00842571258545

Token 446: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.21840570867061615
    2. '       ' → logprob: -2.3434057235717773
    3. 'edges' (adapté à ' edges') → logprob: -3.0934057235717773
    4. '           ' → logprob: -3.2184057235717773
    5. ' cost' → logprob: -4.843405723571777
    6. 'cost' → logprob: -6.593405723571777
    7. ' if' → logprob: -6.593405723571777
    8. '
' → logprob: -7.468405723571777
    9. ' u' → logprob: -7.718405723571777
    10. '   ' → logprob: -7.718405723571777

Token 447: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0009140860638581216
    2. '.' → logprob: -7.000914096832275
    3. '.extend' → logprob: -13.250913619995117
    4. ' .' → logprob: -14.625913619995117
    5. '.ap' → logprob: -15.375913619995117
    6. '.app' → logprob: -15.750913619995117
    7. 'append' → logprob: -16.500913619995117
    8. '   ' → logprob: -18.750913619995117
    9. ' +=' → logprob: -18.750913619995117
    10. ').' → logprob: -19.125913619995117

Token 448: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.050998322665691376
    2. '(' → logprob: -3.0509982109069824
    3. '(f' → logprob: -6.175998210906982
    4. '(b' → logprob: -8.05099868774414
    5. '   ' → logprob: -12.42599868774414
    6. '(((' → logprob: -12.55099868774414
    7. ' (' → logprob: -14.17599868774414
    8. '(c' → logprob: -15.17599868774414
    9. ' ' → logprob: -15.17599868774414
    10. '(cost' → logprob: -15.55099868774414

Token 449: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.019225072115659714
    2. 'b' → logprob: -4.019225120544434
    3. ' f' → logprob: -7.144225120544434
    4. '(f' → logprob: -9.394225120544434
    5. '   ' → logprob: -9.769225120544434
    6. ')' → logprob: -10.144225120544434
    7. ' b' → logprob: -10.269225120544434
    8. ' ' → logprob: -11.394225120544434
    9. 'min' → logprob: -11.519225120544434
    10. '0' → logprob: -11.894225120544434

Token 450: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.317247167928144e-05
    2. ',' → logprob: -10.000093460083008
    3. '1' → logprob: -10.500093460083008
    4. ' ' → logprob: -11.750093460083008
    5. '[' → logprob: -13.000093460083008
    6. ')' → logprob: -13.125093460083008
    7. 'b' → logprob: -13.500093460083008
    8. ' ,' → logprob: -13.625093460083008
    9. 'f' → logprob: -14.187593460083008
    10. '
' → logprob: -14.312593460083008

Token 451: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017747845267876983
    2. ' ,' → logprob: -6.376774787902832
    3. ',i' → logprob: -9.626774787902832
    4. ',b' → logprob: -12.501774787902832
    5. '   ' → logprob: -13.626774787902832
    6. ' ' → logprob: -14.251774787902832
    7. ',
' → logprob: -15.251774787902832
    8. ',u' → logprob: -15.376774787902832
    9. 'b' → logprob: -15.751774787902832
    10. ')' → logprob: -16.126773834228516

Token 452: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00020091790065634996
    2. ' i' → logprob: -8.625201225280762
    3. '0' → logprob: -12.125201225280762
    4. 'b' → logprob: -12.250201225280762
    5. ')' → logprob: -12.375201225280762
    6. '   ' → logprob: -12.875201225280762
    7. '           ' → logprob: -13.250201225280762
    8. ' ' → logprob: -14.250201225280762
    9. ')i' → logprob: -14.750201225280762
    10. '       ' → logprob: -15.625201225280762

Token 453: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008355968166142702
    2. ' ,' → logprob: -7.500835418701172
    3. ',b' → logprob: -8.250835418701172
    4. 'b' → logprob: -11.500835418701172
    5. '   ' → logprob: -12.000835418701172
    6. ' ' → logprob: -13.500835418701172
    7. '+' → logprob: -13.625835418701172
    8. ',
' → logprob: -14.250835418701172
    9. ')' → logprob: -14.750835418701172
    10. '),' → logprob: -15.000835418701172

Token 454: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00020509003661572933
    2. ' b' → logprob: -8.500205039978027
    3. '   ' → logprob: -14.375205039978027
    4. '(b' → logprob: -14.875205039978027
    5. ' ' → logprob: -15.250205039978027
    6. '	b' → logprob: -16.375205993652344
    7. '     ' → logprob: -16.625205993652344
    8. '    ' → logprob: -16.875205993652344
    9. '       ' → logprob: -16.875205993652344
    10. '  ' → logprob: -17.000205993652344

Token 455: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.375001907348633
    3. ')' → logprob: -15.250001907348633
    4. '[' → logprob: -15.875001907348633
    5. '1' → logprob: -17.125001907348633
    6. '   ' → logprob: -17.187501907348633
    7. 'o' → logprob: -17.437501907348633
    8. '_' → logprob: -17.750001907348633
    9. '۰' → logprob: -17.750001907348633
    10. ',' → logprob: -18.250001907348633

Token 456: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.03854138031601906
    2. '))
' → logprob: -3.288541316986084
    3. ' ))' → logprob: -7.788541316986084
    4. '))
' → logprob: -10.038541793823242
    5. ' ))
' → logprob: -11.038541793823242
    6. '))

' → logprob: -11.538541793823242
    7. ')' → logprob: -11.788541793823242
    8. '       ' → logprob: -12.913541793823242
    9. '           ' → logprob: -13.538541793823242
    10. '));' → logprob: -13.538541793823242

Token 457: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1002572551369667
    2. ')' → logprob: -3.100257158279419
    3. 'edges' → logprob: -4.100257396697998
    4. ')
' → logprob: -4.225257396697998
    5. '           ' → logprob: -4.850257396697998
    6. ' edges' → logprob: -5.475257396697998
    7. '
' → logprob: -5.600257396697998
    8. '(edges' → logprob: -6.100257396697998
    9. '.edges' → logprob: -7.600257396697998
    10. '<|end|>' → logprob: -8.22525691986084

Token 458: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' (adapté à ' edges') → logprob: -0.023433679714798927
    2. ' edges' → logprob: -4.023433685302734
    3. '           ' → logprob: -5.398433685302734
    4. '       ' → logprob: -7.898433685302734
    5. '(edges' → logprob: -8.398433685302734
    6. '.edges' → logprob: -9.898433685302734
    7. ')
' → logprob: -10.023433685302734
    8. '
' → logprob: -11.523433685302734
    9. '               ' → logprob: -11.773433685302734
    10. ')' → logprob: -12.148433685302734

Token 459: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0008440529345534742
    2. '.' → logprob: -7.1258440017700195
    3. 'append' → logprob: -10.25084400177002
    4. ').' → logprob: -13.62584400177002
    5. '.app' → logprob: -13.87584400177002
    6. ' .' → logprob: -14.25084400177002
    7. '.extend' → logprob: -14.87584400177002
    8. '.Append' → logprob: -15.87584400177002
    9. '].' → logprob: -16.000844955444336
    10. 'Append' → logprob: -16.250844955444336

Token 460: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00035846480750478804
    2. '(' → logprob: -8.000358581542969
    3. '(f' → logprob: -11.125358581542969
    4. ' (' → logprob: -12.750358581542969
    5. ' ' → logprob: -13.000358581542969
    6. ' ((' → logprob: -13.500358581542969
    7. ',' → logprob: -13.875358581542969
    8. '(
' → logprob: -14.625358581542969
    9. '   ' → logprob: -15.625358581542969
    10. '  ' → logprob: -16.25035858154297

Token 461: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.001332382787950337
    2. ' f' → logprob: -6.6263322830200195
    3. '   ' → logprob: -13.12633228302002
    4. '(f' → logprob: -13.37633228302002
    5. ' ' → logprob: -13.62633228302002
    6. ')' → logprob: -14.37633228302002
    7. '    ' → logprob: -15.62633228302002
    8. '  ' → logprob: -15.75133228302002
    9. ' (' → logprob: -15.87633228302002
    10. ',' → logprob: -16.251333236694336

Token 462: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003254527400713414
    2. 'f' → logprob: -8.125325202941895
    3. ' f' → logprob: -11.625325202941895
    4. ' ' → logprob: -12.125325202941895
    5. ',' → logprob: -12.375325202941895
    6. '   ' → logprob: -12.750325202941895
    7. ')' → logprob: -13.000325202941895
    8. '0' → logprob: -13.375325202941895
    9. '
' → logprob: -14.375325202941895
    10. '[' → logprob: -14.625325202941895

Token 463: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012582694762386382
    2. ' ,' → logprob: -9.125125885009766
    3. ',f' → logprob: -11.500125885009766
    4. 'f' → logprob: -13.375125885009766
    5. ',i' → logprob: -13.625125885009766
    6. ',
' → logprob: -13.750125885009766
    7. ')' → logprob: -14.750125885009766
    8. '[' → logprob: -14.750125885009766
    9. '),' → logprob: -14.875125885009766
    10. '‌,' → logprob: -15.125125885009766

Token 464: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02630714885890484
    2. ' i' → logprob: -3.6513071060180664
    3. ' ' → logprob: -13.401307106018066
    4. ',' → logprob: -13.651307106018066
    5. ')' → logprob: -13.651307106018066
    6. '   ' → logprob: -13.901307106018066
    7. ',i' → logprob: -14.401307106018066
    8. ')i' → logprob: -14.526307106018066
    9. '	i' → logprob: -14.776307106018066
    10. '
' → logprob: -16.151308059692383

Token 465: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020830852736253291
    2. ' ,' → logprob: -8.500207901000977
    3. ',f' → logprob: -12.375207901000977
    4. ',
' → logprob: -14.750207901000977
    5. ',b' → logprob: -15.750207901000977
    6. ' ' → logprob: -17.375207901000977
    7. ' f' → logprob: -17.625207901000977
    8. '),' → logprob: -17.875207901000977
    9. 'f' → logprob: -18.375207901000977
    10. ')' → logprob: -18.500207901000977

Token 466: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.008616345934569836
    2. ' b' → logprob: -4.7586164474487305
    3. ' ' → logprob: -14.25861644744873
    4. '   ' → logprob: -14.50861644744873
    5. '       ' → logprob: -15.63361644744873
    6. ')b' → logprob: -16.383615493774414
    7. ')' → logprob: -16.508615493774414
    8. '    ' → logprob: -16.508615493774414
    9. '	b' → logprob: -16.758615493774414
    10. '     ' → logprob: -17.008615493774414

Token 467: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ')' → logprob: -14.750000953674316
    3. '0' → logprob: -15.250000953674316
    4. '))' → logprob: -15.625000953674316
    5. '])' → logprob: -16.375001907348633
    6. ' ' → logprob: -17.500001907348633
    7. '   ' → logprob: -18.125001907348633
    8. ')]' → logprob: -18.875001907348633
    9. '```' → logprob: -19.000001907348633
    10. ')])' → logprob: -19.125001907348633

Token 468: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0028665661811828613
    2. ')' → logprob: -5.877866744995117
    3. '       ' → logprob: -10.252866744995117
    4. '))
' → logprob: -10.627866744995117
    5. ' ))' → logprob: -14.502866744995117
    6. '           ' → logprob: -14.627866744995117
    7. ')))' → logprob: -14.627866744995117
    8. '   ' → logprob: -15.002866744995117
    9. ')
' → logprob: -15.127866744995117
    10. ')}' → logprob: -16.377866744995117

Token 469: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17509925365447998
    2. '   ' → logprob: -2.1750993728637695
    3. '
' → logprob: -4.1750993728637695
    4. 'edges' → logprob: -4.6750993728637695
    5. ' edges' → logprob: -4.8000993728637695
    6. '    
' → logprob: -5.1750993728637695
    7. '        
' → logprob: -5.3000993728637695
    8. '<|end|>' → logprob: -6.3000993728637695
    9. '```' → logprob: -7.8000993728637695
    10. '  
' → logprob: -8.67509937286377

Token 470: ' #' (ID: 1069)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.09143658727407455
    2. ' edges' → logprob: -2.9664366245269775
    3. '       ' → logprob: -4.091436386108398
    4. '   ' → logprob: -4.716436386108398
    5. '#' (adapté à ' #') → logprob: -5.091436386108398
    6. 'uf' → logprob: -5.841436386108398
    7. 'mst' → logprob: -7.841436386108398
    8. '
' → logprob: -8.466436386108398
    9. '        
' → logprob: -8.841436386108398
    10. '.edges' → logprob: -9.091436386108398

Token 471: ' Le' (ID: 2018)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.09170559793710709
    2. 'edges' → logprob: -2.466705560684204
    3. '#' → logprob: -5.966705799102783
    4. ' uf' → logprob: -9.716705322265625
    5. '   ' → logprob: -9.966705322265625
    6. ' edges' → logprob: -10.341705322265625
    7. 'ufs' → logprob: -11.091705322265625
    8. '       ' → logprob: -11.591705322265625
    9. 'UF' → logprob: -12.341705322265625
    10. '```' → logprob: -12.591705322265625

Token 472: ' grap' (ID: 60955)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.03993268311023712
    2. 'edges' → logprob: -3.6649327278137207
    3. ' uf' → logprob: -4.789932727813721
    4. '#' → logprob: -5.789932727813721
    5. ' edges' → logprob: -6.289932727813721
    6. '   ' → logprob: -9.039932250976562
    7. ' #' → logprob: -9.789932250976562
    8. 'ufs' → logprob: -10.664932250976562
    9. '
' → logprob: -10.914932250976562
    10. ' ' → logprob: -11.414932250976562

Token 473: 'he' (ID: 273)
  Prédit: 'he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.30400773882865906
    2. 'h' → logprob: -1.4290077686309814
    3. 'ph' → logprob: -4.429007530212402
    4. 'phe' → logprob: -5.304007530212402
    5. 'hes' → logprob: -5.804007530212402
    6. '   ' → logprob: -7.179007530212402
    7. 'aphe' → logprob: -7.554007530212402
    8. 'phes' → logprob: -8.054007530212402
    9. '#' → logprob: -8.304007530212402
    10. '=' → logprob: -9.054007530212402

Token 474: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -1.487277626991272
    2. '#' → logprob: -2.1122775077819824
    3. 'est' → logprob: -2.1122775077819824
    4. 'edges' → logprob: -2.2372775077819824
    5. ' n' → logprob: -2.3622775077819824
    6. ' =' → logprob: -2.7372775077819824
    7. 'n' → logprob: -2.8622775077819824
    8. '=' → logprob: -3.3622775077819824
    9. ' is' → logprob: -3.3622775077819824
    10. ' edges' → logprob: -3.3622775077819824

Token 475: ' construit' (ID: 119882)
  Prédit: ' complet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' complet' → logprob: -0.7503634691238403
    2. '   ' → logprob: -2.375363349914551
    3. 'com' → logprob: -2.500363349914551
    4. '[]' → logprob: -2.875363349914551
    5. 'conn' → logprob: -3.000363349914551
    6. '#' → logprob: -3.375363349914551
    7. 'n' → logprob: -3.750363349914551
    8. ' construit' → logprob: -3.750363349914551
    9. 'und' → logprob: -4.125363349914551
    10. 'compl' → logprob: -4.250363349914551

Token 476: ' via' (ID: 4493)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49305760860443115
    2. ',' → logprob: -1.1180576086044312
    3. '   ' → logprob: -4.118057727813721
    4. '
' → logprob: -4.243057727813721
    5. '.' → logprob: -4.743057727813721
    6. ';' → logprob: -4.868057727813721
    7. '        
' → logprob: -5.618057727813721
    8. '#' → logprob: -5.868057727813721
    9. 'edges' → logprob: -6.243057727813721
    10. ',
' → logprob: -6.868057727813721

Token 477: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -1.0842359066009521
    2. ' edges' → logprob: -1.2092359066009521
    3. 'les' → logprob: -1.3342359066009521
    4. ' les' → logprob: -2.584235906600952
    5. 'kr' → logprob: -5.459236145019531
    6. 'l' → logprob: -5.584236145019531
    7. ' l' → logprob: -5.959236145019531
    8. ' Kr' → logprob: -6.209236145019531
    9. 'K' → logprob: -6.584236145019531
    10. 'la' → logprob: -6.709236145019531

Token 478: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08476302772760391
    2. 'edges' → logprob: -3.4597630500793457
    3. ' edges' → logprob: -3.8347630500793457
    4. '   ' → logprob: -4.334763050079346
    5. ',' → logprob: -4.959763050079346
    6. '
' → logprob: -5.834763050079346
    7. '        
' → logprob: -6.084763050079346
    8. '(edges' → logprob: -7.209763050079346
    9. '    
' → logprob: -7.709763050079346
    10. '.edges' → logprob: -8.084762573242188

Token 479: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8477759957313538
    2. '   ' → logprob: -0.9727759957313538
    3. 'edges' → logprob: -2.472775936126709
    4. ' edges' → logprob: -2.722775936126709
    5. ',' → logprob: -3.972775936126709
    6. '
' → logprob: -4.597775936126709
    7. '    
' → logprob: -5.222775936126709
    8. '        
' → logprob: -5.722775936126709
    9. '(edges' → logprob: -6.597775936126709
    10. '.edges' → logprob: -6.847775936126709

Token 480: ' #' (ID: 1069)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.29871702194213867
    2. 'edges' → logprob: -2.2987170219421387
    3. '   ' → logprob: -2.5487170219421387
    4. ' uf' → logprob: -3.1737170219421387
    5. ' edges' → logprob: -3.2987170219421387
    6. '       ' → logprob: -7.673717021942139
    7. '#' (adapté à ' #') → logprob: -8.548717498779297
    8. '
' → logprob: -10.173717498779297
    9. '    
' → logprob: -10.423717498779297
    10. ' ' → logprob: -10.923717498779297

Token 481: ' On' (ID: 2160)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.32987794280052185
    2. 'edges' → logprob: -1.3298779726028442
    3. ' edges' → logprob: -4.954877853393555
    4. '   ' → logprob: -5.454877853393555
    5. ' uf' → logprob: -5.829877853393555
    6. '#' → logprob: -6.454877853393555
    7. '       ' → logprob: -7.704877853393555
    8. 'ufs' → logprob: -10.204877853393555
    9. '
' → logprob: -11.079877853393555
    10. ' #' → logprob: -11.204877853393555

Token 482: ' doit' (ID: 21822)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.04107653349637985
    2. ' edges' → logprob: -3.291076421737671
    3. '       ' → logprob: -6.91607666015625
    4. '#' → logprob: -7.41607666015625
    5. '.edges' → logprob: -7.79107666015625
    6. 'sort' → logprob: -7.91607666015625
    7. '   ' → logprob: -8.29107666015625
    8. '.sort' → logprob: -9.29107666015625
    9. '_edges' → logprob: -9.91607666015625
    10. '(edges' → logprob: -9.91607666015625

Token 483: ' trouver' (ID: 23195)
  Prédit: ' tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tr' → logprob: -0.12864378094673157
    2. 'tr' → logprob: -2.128643751144409
    3. ' tri' → logprob: -7.878643989562988
    4. '#' → logprob: -8.253643989562988
    5. '   ' → logprob: -8.503643989562988
    6. 'tri' → logprob: -8.503643989562988
    7. 'sort' → logprob: -9.128643989562988
    8. ' trie' → logprob: -9.253643989562988
    9. ' Trier' → logprob: -9.503643989562988
    10. ' edges' → logprob: -9.878643989562988

Token 484: ' les' (ID: 1341)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.0290449857711792
    2. 'le' → logprob: -1.1540449857711792
    3. 'la' → logprob: -1.6540449857711792
    4. 'une' → logprob: -3.1540451049804688
    5. 'un' → logprob: -3.5290451049804688
    6. ' l' → logprob: -3.6540451049804688
    7. ' la' → logprob: -4.904045104980469
    8. ' un' → logprob: -5.029045104980469
    9. ' le' → logprob: -5.154045104980469
    10. '   ' → logprob: -5.404045104980469

Token 485: ' compos' (ID: 14635)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -1.4675607681274414
    2. 'edges' → logprob: -1.7175607681274414
    3. ' edges' → logprob: -2.5925607681274414
    4. ' arbres' → logprob: -2.7175607681274414
    5. 'minimum' → logprob: -3.0925607681274414
    6. ' compos' → logprob: -3.0925607681274414
    7. ' minimum' → logprob: -3.2175607681274414
    8. ' MST' → logprob: -3.2175607681274414
    9. 'com' → logprob: -3.5925607681274414
    10. ' coûts' → logprob: -3.8425607681274414

Token 486: 'antes' (ID: 5193)
  Prédit: 'antes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'antes' → logprob: -0.057143356651067734
    2. 'conn' → logprob: -3.932143449783325
    3. 'ants' → logprob: -4.307143211364746
    4. 'pos' → logprob: -5.182143211364746
    5. 'ponents' → logprob: -5.432143211364746
    6. 'connected' → logprob: -6.182143211364746
    7. 'ant' → logprob: -6.682143211364746
    8. 'pon' → logprob: -6.682143211364746
    9. 'n' → logprob: -7.182143211364746
    10. 'ponent' → logprob: -7.307143211364746

Token 487: ' connex' (ID: 154480)
  Prédit: 'conn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'conn' → logprob: -0.10777848213911057
    2. ' connex' → logprob: -2.482778549194336
    3. 'connect' → logprob: -4.857778549194336
    4. '   ' → logprob: -5.482778549194336
    5. 'con' → logprob: -6.107778549194336
    6. '_conn' → logprob: -6.357778549194336
    7. ' conn' → logprob: -7.357778549194336
    8. '       ' → logprob: -7.732778549194336
    9. ' conex' → logprob: -8.232778549194336
    10. '(conn' → logprob: -8.357778549194336

Token 488: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.07716630399227142
    2. 'entes' → logprob: -3.7021663188934326
    3. 'conn' → logprob: -4.0771660804748535
    4. 'tes' → logprob: -4.4521660804748535
    5. 'ents' → logprob: -4.7021660804748535
    6. 'antes' → logprob: -5.3271660804748535
    7. 'ces' → logprob: -6.4521660804748535
    8. 'ects' → logprob: -6.9521660804748535
    9. 'ct' → logprob: -7.2021660804748535
    10. 's' → logprob: -8.077166557312012

Token 489: ' indu' (ID: 34592)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18376104533672333
    2. ',' → logprob: -2.8087611198425293
    3. ' edges' → logprob: -3.6837611198425293
    4. ' et' → logprob: -4.058761119842529
    5. 'edges' → logprob: -4.308761119842529
    6. '.' → logprob: -4.308761119842529
    7. '   ' → logprob: -4.683761119842529
    8. '(edges' → logprob: -4.808761119842529
    9. ' en' → logprob: -5.558761119842529
    10. 'et' → logprob: -5.558761119842529

Token 490: 'ites' (ID: 3915)
  Prédit: 'ites'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ites' → logprob: -0.00301086506806314
    2. 'it' → logprob: -6.0030107498168945
    3. 'es' → logprob: -8.253010749816895
    4. 'ite' → logprob: -9.003010749816895
    5. 'its' → logprob: -10.128010749816895
    6. '#' → logprob: -10.503010749816895
    7. '```' → logprob: -11.378010749816895
    8. 'ited' → logprob: -11.628010749816895
    9. '``' → logprob: -12.003010749816895
    10. '
' → logprob: -12.128010749816895

Token 491: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.6066352725028992
    2. '       ' → logprob: -1.106635332107544
    3. 'par' → logprob: -2.731635332107544
    4. ' by' → logprob: -3.856635332107544
    5. '   ' → logprob: -3.981635332107544
    6. ',' → logprob: -4.731635093688965
    7. 'by' → logprob: -5.231635093688965
    8. ' et' → logprob: -6.731635093688965
    9. '#' → logprob: -6.981635093688965
    10. 'et' → logprob: -7.106635093688965

Token 492: ' toutes' (ID: 17502)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.5556360483169556
    2. 'les' → logprob: -1.4306360483169556
    3. ' edges' → logprob: -2.555635929107666
    4. ' l' → logprob: -3.180635929107666
    5. 'l' → logprob: -3.555635929107666
    6. 'edges' → logprob: -4.305635929107666
    7. '#' → logprob: -5.055635929107666
    8. ' la' → logprob: -5.680635929107666
    9. ' the' → logprob: -5.930635929107666
    10. ' ces' → logprob: -6.180635929107666

Token 493: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.19659946858882904
    2. 'les' → logprob: -2.3215994834899902
    3. ' edges' → logprob: -2.8215994834899902
    4. 'edges' → logprob: -4.19659948348999
    5. '(edges' → logprob: -5.82159948348999
    6. ' the' → logprob: -6.69659948348999
    7. '_edges' → logprob: -7.57159948348999
    8. 'l' → logprob: -7.94659948348999
    9. ' l' → logprob: -8.321599006652832
    10. ' des' → logprob: -9.071599006652832

Token 494: ' ar' (ID: 646)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.36232295632362366
    2. ' ar' → logprob: -1.2373229265213013
    3. 'edges' → logprob: -4.737322807312012
    4. ' edges' → logprob: -6.362322807312012
    5. 'arr' → logprob: -7.237322807312012
    6. ' are' → logprob: -7.237322807312012
    7. 'are' → logprob: -7.362322807312012
    8. 'arest' → logprob: -7.487322807312012
    9. 'aré' → logprob: -7.987322807312012
    10. ' arr' → logprob: -9.362322807312012

Token 495: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.0008591734222136438
    2. 'tes' → logprob: -7.625859260559082
    3. 'ê' → logprob: -9.125859260559082
    4. 'ètes' → logprob: -9.125859260559082
    5. 'etes' → logprob: -9.375859260559082
    6. 'edges' → logprob: -10.875859260559082
    7. 'êts' → logprob: -11.375859260559082
    8. 'ên' → logprob: -12.250859260559082
    9. 'ête' → logprob: -12.250859260559082
    10. 'êtres' → logprob: -12.750859260559082

Token 496: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.046526387333869934
    2. ' edges' → logprob: -3.9215264320373535
    3. '   ' → logprob: -4.5465264320373535
    4. ',' → logprob: -4.9215264320373535
    5. 'edges' → logprob: -5.4215264320373535
    6. '(edges' → logprob: -6.7965264320373535
    7. '.' → logprob: -7.5465264320373535
    8. '
' → logprob: -7.9215264320373535
    9. ' et' → logprob: -7.9215264320373535
    10. '        
' → logprob: -8.421525955200195

Token 497: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008988694287836552
    2. '   ' → logprob: -4.883988857269287
    3. 'uf' → logprob: -7.633988857269287
    4. ' edges' → logprob: -8.383988380432129
    5. 'edges' → logprob: -8.383988380432129
    6. '        
' → logprob: -8.758988380432129
    7. ',' → logprob: -8.883988380432129
    8. ' uf' → logprob: -10.258988380432129
    9. '    
' → logprob: -10.383988380432129
    10. '
' → logprob: -10.758988380432129

Token 498: ' uf' (ID: 35772)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' (adapté à ' uf') → logprob: -0.0782020092010498
    2. ' uf' → logprob: -3.07820200920105
    3. '   ' → logprob: -3.57820200920105
    4. '       ' → logprob: -7.953202247619629
    5. ' edges' → logprob: -8.203202247619629
    6. 'edges' → logprob: -8.453202247619629
    7. '    
' → logprob: -9.578202247619629
    8. 'UF' → logprob: -9.578202247619629
    9. '
' → logprob: -9.703202247619629
    10. '.uf' → logprob: -10.078202247619629

Token 499: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.100382961332798
    2. '=' → logprob: -2.3503830432891846
    3. '.un' → logprob: -8.725382804870605
    4. '.' → logprob: -11.725382804870605
    5. 'un' → logprob: -12.600382804870605
    6. '.=' → logprob: -13.850382804870605
    7. '   ' → logprob: -14.725382804870605
    8. '_un' → logprob: -15.850382804870605
    9. '.union' → logprob: -15.975382804870605
    10. '(un' → logprob: -15.975382804870605

Token 500: ' Union' (ID: 14746)
  Prédit: 'Union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Union' → logprob: -1.306760805164231e-05
    2. ' Union' → logprob: -11.25001335144043
    3. '   ' → logprob: -19.50001335144043
    4. 'union' → logprob: -20.25001335144043
    5. ''Union' → logprob: -22.00001335144043
    6. 'Un' → logprob: -22.37501335144043
    7. 'Uni' → logprob: -22.37501335144043
    8. '_union' → logprob: -22.50001335144043
    9. 'Unity' → logprob: -22.62501335144043
    10. 'Unit' → logprob: -23.00001335144043

Token 501: 'Find' (ID: 11437)
  Prédit: 'Find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Find' → logprob: -1.9361264946837764e-07
    2. 'Fill' → logprob: -16.5
    3. 'F' → logprob: -17.125
    4. '   ' → logprob: -17.25
    5. 'Union' → logprob: -17.5
    6. ' Find' → logprob: -18.0
    7. 'Fold' → logprob: -18.375
    8. 'Fin' → logprob: -19.0
    9. '(' → logprob: -19.125
    10. 'Fi' → logprob: -19.25

Token 502: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00012606535165105015
    2. 'n' → logprob: -9.000125885009766
    3. '(' → logprob: -12.875125885009766
    4. '(
' → logprob: -17.500125885009766
    5. ' n' → logprob: -18.250125885009766
    6. ' (' → logprob: -18.500125885009766
    7. '(len' → logprob: -19.875125885009766
    8. '[n' → logprob: -20.375125885009766
    9. '
' → logprob: -20.750125885009766
    10. '	n' → logprob: -20.875125885009766

Token 503: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1007109209895134
    2. ')
' → logprob: -2.350710868835449
    3. ')
' → logprob: -7.850710868835449
    4. ')

' → logprob: -9.97571086883545
    5. '+' → logprob: -10.35071086883545
    6. ')n' → logprob: -11.35071086883545
    7. ' )' → logprob: -11.85071086883545
    8. '+n' → logprob: -11.85071086883545
    9. '*' → logprob: -13.22571086883545
    10. ' +' → logprob: -13.72571086883545

Token 504: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10378323495388031
    2. ' for' → logprob: -3.103783130645752
    3. 'for' → logprob: -3.603783130645752
    4. 'edges' → logprob: -3.978783130645752
    5. ' edges' → logprob: -4.978783130645752
    6. '   ' → logprob: -8.35378360748291
    7. ')' → logprob: -8.72878360748291
    8. '<|end|>' → logprob: -8.97878360748291
    9. '        
' → logprob: -9.10378360748291
    10. '
' → logprob: -9.47878360748291

Token 505: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.15045206248760223
    2. 'edges' → logprob: -2.025452136993408
    3. '       ' → logprob: -5.650452136993408
    4. ' for' → logprob: -6.025452136993408
    5. ' edges' → logprob: -6.775452136993408
    6. '#' → logprob: -8.40045166015625
    7. 'n' → logprob: -9.27545166015625
    8. 'sorted' → logprob: -9.65045166015625
    9. '
' → logprob: -10.27545166015625
    10. 'all' → logprob: -10.40045166015625

Token 506: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.28818535804748535
    2. ' cost' → logprob: -2.1631853580474854
    3. '_,' → logprob: -2.5381853580474854
    4. 'f' → logprob: -3.6631853580474854
    5. 'c' → logprob: -4.288185119628906
    6. ' _,' → logprob: -4.913185119628906
    7. '_cost' → logprob: -6.038185119628906
    8. ' f' → logprob: -6.288185119628906
    9. 'w' → logprob: -6.288185119628906
    10. '   ' → logprob: -6.538185119628906

Token 507: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015908108616713434
    2. ' ,' → logprob: -9.25015926361084
    3. ' in' → logprob: -10.37515926361084
    4. ',c' → logprob: -11.00015926361084
    5. ',
' → logprob: -13.12515926361084
    6. ',e' → logprob: -13.62515926361084
    7. '_,' → logprob: -13.75015926361084
    8. ')' → logprob: -14.12515926361084
    9. ',(' → logprob: -14.12515926361084
    10. ',node' → logprob: -14.25015926361084

Token 508: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.00010449681576574221
    2. ' u' → logprob: -9.375104904174805
    3. '_,' → logprob: -11.125104904174805
    4. '_u' → logprob: -12.625104904174805
    5. '   ' → logprob: -14.500104904174805
    6. '	u' → logprob: -14.625104904174805
    7. '```' → logprob: -15.375104904174805
    8. ',u' → logprob: -15.375104904174805
    9. 'a' → logprob: -16.375104904174805
    10. '(u' → logprob: -16.750104904174805

Token 509: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014084475114941597
    2. ',v' → logprob: -6.876408576965332
    3. ',u' → logprob: -8.126408576965332
    4. ' ,' → logprob: -9.501408576965332
    5. '_,' → logprob: -12.751408576965332
    6. ',user' → logprob: -14.626408576965332
    7. 'u' → logprob: -14.876408576965332
    8. 'v' → logprob: -15.001408576965332
    9. ',y' → logprob: -15.001408576965332
    10. ' in' → logprob: -15.126408576965332

Token 510: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -7.584239938296378e-06
    2. ' v' → logprob: -11.875007629394531
    3. 'u' → logprob: -15.375007629394531
    4. '	v' → logprob: -15.500007629394531
    5. 'w' → logprob: -17.12500762939453
    6. 'vv' → logprob: -17.50000762939453
    7. '   ' → logprob: -18.25000762939453
    8. '
' → logprob: -18.75000762939453
    9. 'vj' → logprob: -18.75000762939453
    10. 'vres' → logprob: -18.87500762939453

Token 511: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0016002024058252573
    2. ':' → logprob: -6.75160026550293
    3. 'in' → logprob: -7.87660026550293
    4. ':
' → logprob: -11.25160026550293
    5. ')' → logprob: -11.37660026550293
    6. '   ' → logprob: -12.00160026550293
    7. ',' → logprob: -12.12660026550293
    8. '):' → logprob: -12.25160026550293
    9. '.' → logprob: -12.87660026550293
    10. '):
' → logprob: -13.12660026550293

Token 512: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.016073433682322502
    2. ' edges' → logprob: -4.141073226928711
    3. '(edges' → logprob: -10.641073226928711
    4. '.edges' → logprob: -12.391073226928711
    5. '[' → logprob: -12.641073226928711
    6. '   ' → logprob: -12.641073226928711
    7. '
' → logprob: -14.016073226928711
    8. '_edges' → logprob: -14.016073226928711
    9. ' ' → logprob: -14.391073226928711
    10. ')' → logprob: -15.266073226928711

Token 513: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14510513842105865
    2. ':
' → logprob: -2.0201051235198975
    3. '):
' → logprob: -6.895105361938477
    4. '):' → logprob: -7.520105361938477
    5. '       ' → logprob: -7.895105361938477
    6. '   ' → logprob: -7.895105361938477
    7. '           ' → logprob: -9.895105361938477
    8. ':
' → logprob: -10.270105361938477
    9. ')' → logprob: -11.395105361938477
    10. ',' → logprob: -11.645105361938477

Token 514: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5231881141662598
    2. '       ' → logprob: -1.2731881141662598
    3. ' if' → logprob: -2.2731881141662598
    4. 'uf' → logprob: -4.77318811416626
    5. '   ' → logprob: -5.14818811416626
    6. ' uf' → logprob: -5.27318811416626
    7. 'if' → logprob: -5.52318811416626
    8. '        
' → logprob: -8.273187637329102
    9. '            
' → logprob: -8.523187637329102
    10. '	       ' → logprob: -9.148187637329102

Token 515: ' uf' (ID: 35772)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' (adapté à ' uf') → logprob: -0.3214989900588989
    2. 'if' → logprob: -1.571498990058899
    3. ' uf' → logprob: -3.3214988708496094
    4. ' if' → logprob: -4.196498870849609
    5. '   ' → logprob: -4.696498870849609
    6. '       ' → logprob: -5.446498870849609
    7. '           ' → logprob: -6.071498870849609
    8. '               ' → logprob: -10.13399887084961
    9. 'ufs' → logprob: -10.25899887084961
    10. 'ufi' → logprob: -10.69649887084961

Token 516: '.un' (ID: 11508)
  Prédit: '.un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.un' → logprob: -2.339278580620885e-06
    2. ' .' → logprob: -13.500001907348633
    3. '.' → logprob: -14.375001907348633
    4. '.u' → logprob: -15.625001907348633
    5. '.union' → logprob: -16.875001907348633
    6. 'un' → logprob: -17.250001907348633
    7. '.Un' → logprob: -17.500001907348633
    8. ').' → logprob: -18.000001907348633
    9. '.same' → logprob: -18.000001907348633
    10. '   ' → logprob: -18.125001907348633

Token 517: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -7.896309739408025e-07
    2. 'it' → logprob: -15.000000953674316
    3. ' ite' → logprob: -16.125
    4. '#' → logprob: -16.25
    5. '(' → logprob: -16.75
    6. 'ate' → logprob: -17.625
    7. '
' → logprob: -18.25
    8. 'ion' → logprob: -18.375
    9. '```' → logprob: -18.5
    10. '**' → logprob: -18.75

Token 518: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -1.4498052223643754e-05
    2. 'u' → logprob: -11.750014305114746
    3. '(' → logprob: -12.375014305114746
    4. '(v' → logprob: -13.000014305114746
    5. '[u' → logprob: -18.000015258789062
    6. ' u' → logprob: -18.375015258789062
    7. ' (' → logprob: -19.125015258789062
    8. '(
' → logprob: -19.125015258789062
    9. '()' → logprob: -19.250015258789062
    10. '	u' → logprob: -19.375015258789062

Token 519: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.482821431243792e-05
    2. ',v' → logprob: -9.62508487701416
    3. ' ,' → logprob: -11.00008487701416
    4. 'v' → logprob: -13.25008487701416
    5. ',
' → logprob: -15.37508487701416
    6. ')' → logprob: -16.625083923339844
    7. ' v' → logprob: -17.750083923339844
    8. '           ' → logprob: -18.500083923339844
    9. ',u' → logprob: -18.750083923339844
    10. 's' → logprob: -19.750083923339844

Token 520: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.676292231422849e-05
    2. ' v' → logprob: -11.000017166137695
    3. ')v' → logprob: -19.375017166137695
    4. '	v' → logprob: -19.625017166137695
    5. '   ' → logprob: -19.875017166137695
    6. ')' → logprob: -20.125017166137695
    7. '
' → logprob: -21.750017166137695
    8. 'vj' → logprob: -22.625017166137695
    9. ' ' → logprob: -22.750017166137695
    10. '(v' → logprob: -22.875017166137695

Token 521: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.868328920158092e-05
    2. ')
' → logprob: -10.500028610229492
    3. '       ' → logprob: -14.375028610229492
    4. ')

' → logprob: -15.125028610229492
    5. ' )' → logprob: -16.250028610229492
    6. ')
' → logprob: -16.875028610229492
    7. '<|end|>' → logprob: -17.125028610229492
    8. ')return' → logprob: -17.750028610229492
    9. '   ' → logprob: -17.750028610229492
    10. '))' → logprob: -17.875028610229492

Token 522: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26282453536987305
    2. '<|end|>' → logprob: -1.637824535369873
    3. '
' → logprob: -4.512824535369873
    4. '   ' → logprob: -4.887824535369873
    5. '#' → logprob: -5.637824535369873
    6. 'edges' → logprob: -6.262824535369873
    7. ')' → logprob: -6.387824535369873
    8. 'indices' → logprob: -6.637824535369873
    9. 'total' → logprob: -6.762824535369873
    10. 'max' → logprob: -6.762824535369873

Token 523: ' #' (ID: 1069)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.4416542649269104
    2. 'components' → logprob: -2.8166542053222656
    3. '#' (adapté à ' #') → logprob: -2.9416542053222656
    4. 'counts' → logprob: -2.9416542053222656
    5. 'cnt' → logprob: -3.4416542053222656
    6. '       ' → logprob: -3.5666542053222656
    7. 'comp' → logprob: -3.6916542053222656
    8. 'max' → logprob: -4.316654205322266
    9. 'component' → logprob: -4.441654205322266
    10. 'valid' → logprob: -4.566654205322266

Token 524: ' Déc' (ID: 56995)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'components' → logprob: -1.2959245443344116
    2. '#' → logprob: -1.6709245443344116
    3. 'count' → logprob: -1.9209245443344116
    4. 'comp' → logprob: -2.920924663543701
    5. 'component' → logprob: -2.920924663543701
    6. 'counts' → logprob: -2.920924663543701
    7. 'cnt' → logprob: -3.170924663543701
    8. 'cost' → logprob: -3.420924663543701
    9. 'connected' → logprob: -3.795924663543701
    10. 'max' → logprob: -3.920924663543701

Token 525: 'ou' (ID: 283)
  Prédit: 'omp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'omp' → logprob: -0.41128382086753845
    2. 'om' → logprob: -1.1612838506698608
    3. 'ide' → logprob: -5.41128396987915
    4. 'ouvrir' → logprob: -5.91128396987915
    5. 'on' → logprob: -6.03628396987915
    6. 'ider' → logprob: -6.16128396987915
    7. 'omm' → logprob: -6.28628396987915
    8. 'ount' → logprob: -6.41128396987915
    9. 'onter' → logprob: -6.41128396987915
    10. '#' → logprob: -6.91128396987915

Token 526: 'page' (ID: 5342)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.15418584644794464
    2. 'page' → logprob: -2.0291857719421387
    3. 'pe' → logprob: -5.154185771942139
    4. 'p' → logprob: -6.029185771942139
    5. 'perate' → logprob: -8.029186248779297
    6. 'pler' → logprob: -8.279186248779297
    7. 'pr' → logprob: -8.404186248779297
    8. 'uper' → logprob: -8.779186248779297
    9. '#' → logprob: -8.904186248779297
    10. 'pte' → logprob: -9.154186248779297

Token 527: ' du' (ID: 1462)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'components' → logprob: -0.7353312373161316
    2. '       ' → logprob: -2.2353312969207764
    3. '#' → logprob: -2.8603312969207764
    4. ' components' → logprob: -2.9853312969207764
    5. ' des' → logprob: -3.3603312969207764
    6. 'connected' → logprob: -3.7353312969207764
    7. '        
' → logprob: -3.9853312969207764
    8. ' comp' → logprob: -4.110331058502197
    9. 'comp' → logprob: -4.235331058502197
    10. ' of' → logprob: -4.360331058502197

Token 528: ' grap' (ID: 60955)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'components' → logprob: -0.8967917561531067
    2. 'com' → logprob: -1.396791696548462
    3. 'count' → logprob: -2.896791696548462
    4. 'comp' → logprob: -3.021791696548462
    5. '#' → logprob: -3.146791696548462
    6. 'cnt' → logprob: -4.271791934967041
    7. ' comps' → logprob: -4.271791934967041
    8. 'component' → logprob: -4.396791934967041
    9. 'counts' → logprob: -4.521791934967041
    10. ' components' → logprob: -4.521791934967041

Token 529: 'he' (ID: 273)
  Prédit: 'he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.04787296801805496
    2. 'h' → logprob: -3.172873020172119
    3. 'aphe' → logprob: -6.172873020172119
    4. 'ph' → logprob: -6.297873020172119
    5. 'phe' → logprob: -8.297872543334961
    6. 'hé' → logprob: -9.297872543334961
    7. 'hes' → logprob: -9.547872543334961
    8. 'p' → logprob: -9.547872543334961
    9. 'aph' → logprob: -9.922872543334961
    10. 'raph' → logprob: -9.922872543334961

Token 530: ' en' (ID: 469)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'components' → logprob: -1.1479957103729248
    2. ' par' → logprob: -1.8979957103729248
    3. '#' → logprob: -2.272995710372925
    4. '       ' → logprob: -2.647995710372925
    5. ' components' → logprob: -3.147995710372925
    6. ' by' → logprob: -3.397995710372925
    7. ',' → logprob: -3.647995710372925
    8. '
' → logprob: -3.647995710372925
    9. 'component' → logprob: -3.647995710372925
    10. 'comp' → logprob: -4.022995948791504

Token 531: ' compos' (ID: 14635)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.44847193360328674
    2. 'components' → logprob: -1.1984719038009644
    3. ' composants' → logprob: -3.573472023010254
    4. ' compos' → logprob: -4.573472023010254
    5. 'component' → logprob: -5.573472023010254
    6. 'connected' → logprob: -5.573472023010254
    7. ' components' → logprob: -5.823472023010254
    8. '[]' → logprob: -6.073472023010254
    9. '{}' → logprob: -6.198472023010254
    10. 'collections' → logprob: -6.448472023010254

Token 532: 'antes' (ID: 5193)
  Prédit: 'antes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'antes' → logprob: -0.0035443592350929976
    2. 'es' → logprob: -7.253544330596924
    3. 'tes' → logprob: -7.378544330596924
    4. 't' → logprob: -7.503544330596924
    5. 'conn' → logprob: -8.003544807434082
    6. 'pon' → logprob: -8.378544807434082
    7. 'entes' → logprob: -8.503544807434082
    8. 'n' → logprob: -8.753544807434082
    9. 'ants' → logprob: -8.878544807434082
    10. 'on' → logprob: -9.128544807434082

Token 533: ' connex' (ID: 154480)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08639290183782578
    2. '   ' → logprob: -4.086392879486084
    3. '=' → logprob: -4.211392879486084
    4. 'conn' → logprob: -4.211392879486084
    5. 's' → logprob: -4.711392879486084
    6. 'components' → logprob: -4.961392879486084
    7. '_components' → logprob: -5.211392879486084
    8. '       ' → logprob: -5.711392879486084
    9. '_conn' → logprob: -6.086392879486084
    10. 'com' → logprob: -6.711392879486084

Token 534: 'es' (ID: 268)
  Prédit: 'tes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tes' → logprob: -0.1459236741065979
    2. 'es' → logprob: -2.020923614501953
    3. 't' → logprob: -6.395923614501953
    4. 'entes' → logprob: -6.895923614501953
    5. 'etes' → logprob: -8.645923614501953
    6. 'utes' → logprob: -9.270923614501953
    7. 'ues' → logprob: -9.270923614501953
    8. 'ents' → logprob: -10.020923614501953
    9. '#' → logprob: -10.395923614501953
    10. 'ves' → logprob: -10.645923614501953

Token 535: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8143793344497681
    2. 'components' → logprob: -1.189379334449768
    3. '
' → logprob: -1.689379334449768
    4. ' components' → logprob: -3.5643792152404785
    5. '        
' → logprob: -3.8143792152404785
    6. 'comp' → logprob: -5.8143792152404785
    7. ',' → logprob: -5.8143792152404785
    8. ' comps' → logprob: -6.0643792152404785
    9. ' comp' → logprob: -6.8143792152404785
    10. ':' → logprob: -6.9393792152404785

Token 536: '       ' (ID: 309)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'components' → logprob: -0.6361223459243774
    2. '       ' → logprob: -1.3861223459243774
    3. '
' → logprob: -2.511122226715088
    4. ' components' → logprob: -3.011122226715088
    5. ' comps' → logprob: -3.761122226715088
    6. '        
' → logprob: -4.261122226715088
    7. 'comp' → logprob: -4.261122226715088
    8. 'component' → logprob: -4.386122226715088
    9. ' comp' → logprob: -4.511122226715088
    10. 'com' → logprob: -5.761122226715088

Token 537: ' comp' (ID: 1050)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'components' → logprob: -0.7573539018630981
    2. ' comps' → logprob: -1.7573539018630981
    3. 'comp' (adapté à ' comp') → logprob: -1.8823539018630981
    4. ' comp' → logprob: -2.8823537826538086
    5. 'component' → logprob: -3.0073537826538086
    6. 'com' → logprob: -3.1323537826538086
    7. '       ' → logprob: -3.8823537826538086
    8. 'from' → logprob: -4.507353782653809
    9. ' components' → logprob: -4.882353782653809
    10. 'groups' → logprob: -5.132353782653809

Token 538: '_map' (ID: 11824)
  Prédit: '_sizes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sizes' → logprob: -0.37979617714881897
    2. 's' → logprob: -1.7547961473464966
    3. 'on' → logprob: -2.879796266555786
    4. 'sizes' → logprob: -2.879796266555786
    5. ' =' → logprob: -4.004796028137207
    6. '_map' → logprob: -5.879796028137207
    7. '_size' → logprob: -6.129796028137207
    8. 'onent' → logprob: -6.254796028137207
    9. '_dict' → logprob: -6.754796028137207
    10. '_count' → logprob: -6.879796028137207

Token 539: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020839422941208
    2. '=' → logprob: -2.350208282470703
    3. '={}' → logprob: -14.475208282470703
    4. ',' → logprob: -14.725208282470703
    5. ' ' → logprob: -15.475208282470703
    6. ')' → logprob: -15.475208282470703
    7. '   ' → logprob: -15.725208282470703
    8. '[' → logprob: -16.475208282470703
    9. ':' → logprob: -16.475208282470703
    10. 's' → logprob: -16.600208282470703

Token 540: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -7.219262624857947e-05
    2. 'dict' → logprob: -10.250072479248047
    3. '{}
' → logprob: -10.250072479248047
    4. '{' → logprob: -14.375072479248047
    5. '{}

' → logprob: -15.125072479248047
    6. 'default' → logprob: -15.125072479248047
    7. ' {}' → logprob: -15.250072479248047
    8. '{})' → logprob: -17.875072479248047
    9. '{}\' → logprob: -18.625072479248047
    10. ' dict' → logprob: -18.875072479248047

Token 541: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41419896483421326
    2. 'for' → logprob: -1.6641989946365356
    3. ' for' → logprob: -1.9141989946365356
    4. '   ' → logprob: -7.414198875427246
    5. 'count' → logprob: -8.039198875427246
    6. '
' → logprob: -8.164198875427246
    7. '```' → logprob: -8.539198875427246
    8. ' =' → logprob: -8.539198875427246
    9. '=' → logprob: -9.039198875427246
    10. ':' → logprob: -9.039198875427246

Token 542: ' comp' (ID: 1050)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005426656571216881
    2. 'comp' (adapté à ' comp') → logprob: -8.000542640686035
    3. '       ' → logprob: -8.500542640686035
    4. ' for' → logprob: -13.375542640686035
    5. 'count' → logprob: -14.125542640686035
    6. 'component' → logprob: -14.375542640686035
    7. '   ' → logprob: -15.000542640686035
    8. 'counter' → logprob: -15.875542640686035
    9. 'idx' → logprob: -16.25054359436035
    10. 'index' → logprob: -16.50054359436035

Token 543: '_count' (ID: 7536)
  Prédit: '_id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.21730352938175201
    2. '_count' → logprob: -2.717303514480591
    3. '_sizes' → logprob: -2.717303514480591
    4. '_idx' → logprob: -4.21730375289917
    5. '_index' → logprob: -4.71730375289917
    6. ' =' → logprob: -4.84230375289917
    7. '_counts' → logprob: -5.34230375289917
    8. '_map' → logprob: -5.34230375289917
    9. '_size' → logprob: -5.46730375289917
    10. '=' → logprob: -5.59230375289917

Token 544: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17977748811244965
    2. ' =' → logprob: -1.8047775030136108
    3. '   ' → logprob: -10.554777145385742
    4. ' ' → logprob: -13.554777145385742
    5. '={}' → logprob: -13.804777145385742
    6. ')' → logprob: -13.929777145385742
    7. '[' → logprob: -14.179777145385742
    8. '  ' → logprob: -14.804777145385742
    9. ',' → logprob: -14.804777145385742
    10. '    ' → logprob: -14.929777145385742

Token 545: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012374957092106342
    2. '{}' → logprob: -4.6373748779296875
    3. ' ' → logprob: -6.0123748779296875
    4. '{}
' → logprob: -8.887374877929688
    5. ' {}' → logprob: -10.762374877929688
    6. ' {}
' → logprob: -12.512374877929688
    7. '   ' → logprob: -13.137374877929688
    8. '{' → logprob: -14.012374877929688
    9. '{}

' → logprob: -14.762374877929688
    10. '[' → logprob: -15.012374877929688

Token 546: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003754829056560993
    2. '{}' → logprob: -5.628754615783691
    3. ' ' → logprob: -9.253754615783691
    4. '{}
' → logprob: -9.878754615783691
    5. '[' → logprob: -13.003754615783691
    6. 'default' → logprob: -13.253754615783691
    7. '[]' → logprob: -13.878754615783691
    8. ' {}' → logprob: -13.878754615783691
    9. '   ' → logprob: -14.753754615783691
    10. '{' → logprob: -15.128754615783691

Token 547: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.29942646622657776
    2. '       ' → logprob: -1.5494264364242554
    3. ' for' → logprob: -3.549426555633545
    4. 'for' → logprob: -4.299426555633545
    5. '   ' → logprob: -6.799426555633545
    6. '        
' → logprob: -6.924426555633545
    7. ' 
' → logprob: -7.424426555633545
    8. '<|end|>' → logprob: -7.924426555633545
    9. '  
' → logprob: -8.174426078796387
    10. '    
' → logprob: -8.549426078796387

Token 548: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03409754857420921
    2. ' for' → logprob: -4.034097671508789
    3. 'for' → logprob: -4.159097671508789
    4. '        
' → logprob: -10.409097671508789
    5. 'nodes' → logprob: -10.409097671508789
    6. '<|end|>' → logprob: -10.909097671508789
    7. 'components' → logprob: -11.034097671508789
    8. '
' → logprob: -11.159097671508789
    9. 'node' → logprob: -11.284097671508789
    10. 'comp' → logprob: -11.409097671508789

Token 549: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.007715109270066023
    2. 'comp' → logprob: -5.257715225219727
    3. '       ' → logprob: -6.757715225219727
    4. 'component' → logprob: -7.507715225219727
    5. 'node' → logprob: -7.507715225219727
    6. 'components' → logprob: -9.382715225219727
    7. ' for' → logprob: -9.382715225219727
    8. '   ' → logprob: -11.507715225219727
    9. 'nodes' → logprob: -11.507715225219727
    10. 'parent' → logprob: -12.007715225219727

Token 550: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00033034008811227977
    2. 'v' → logprob: -8.250329971313477
    3. ' i' → logprob: -10.250329971313477
    4. 'node' → logprob: -10.625329971313477
    5. 'u' → logprob: -11.750329971313477
    6. 'x' → logprob: -13.625329971313477
    7. 'vertex' → logprob: -15.750329971313477
    8. ' node' → logprob: -16.625329971313477
    9. '   ' → logprob: -17.000329971313477
    10. ' v' → logprob: -17.625329971313477

Token 551: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012519309297204018
    2. 'in' → logprob: -4.387519359588623
    3. 'n' → logprob: -12.887518882751465
    4. ' ' → logprob: -13.262518882751465
    5. '	in' → logprob: -13.512518882751465
    6. ',' → logprob: -14.137518882751465
    7. '   ' → logprob: -14.512518882751465
    8. 'd' → logprob: -14.762518882751465
    9. 'In' → logprob: -15.012518882751465
    10. 'i' → logprob: -15.512518882751465

Token 552: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -9.615255839889869e-05
    2. ' range' → logprob: -9.250096321105957
    3. '(range' → logprob: -18.62509536743164
    4. '   ' → logprob: -19.12509536743164
    5. '	range' → logprob: -19.87509536743164
    6. 'rang' → logprob: -20.75009536743164
    7. ' ' → logprob: -20.87509536743164
    8. 'n' → logprob: -21.00009536743164
    9. '```' → logprob: -21.00009536743164
    10. 'in' → logprob: -21.25009536743164

Token 553: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.5941604690160602e-05
    2. 'n' → logprob: -11.000025749206543
    3. '(' → logprob: -11.625025749206543
    4. ' (' → logprob: -16.12502670288086
    5. ' n' → logprob: -16.25002670288086
    6. '(
' → logprob: -18.50002670288086
    7. '(len' → logprob: -18.75002670288086
    8. '   ' → logprob: -19.12502670288086
    9. ')' → logprob: -19.87502670288086
    10. '(N' → logprob: -19.87502670288086

Token 554: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.014177266508340836
    2. '):' → logprob: -4.264177322387695
    3. '):
' → logprob: -11.639177322387695
    4. ':
' → logprob: -13.389177322387695
    5. '       ' → logprob: -13.514177322387695
    6. '   ' → logprob: -14.139177322387695
    7. '():
' → logprob: -14.639177322387695
    8. ':' → logprob: -15.014177322387695
    9. ')' → logprob: -15.264177322387695
    10. ' ):
' → logprob: -15.514177322387695

Token 555: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006644918117672205
    2. ':' → logprob: -6.0066447257995605
    3. '   ' → logprob: -6.1316447257995605
    4. '           ' → logprob: -8.006645202636719
    5. ' if' → logprob: -8.256645202636719
    6. ':
' → logprob: -8.256645202636719
    7. ',' → logprob: -8.256645202636719
    8. ' root' → logprob: -8.756645202636719
    9. '):
' → logprob: -9.256645202636719
    10. ' =' → logprob: -9.256645202636719

Token 556: ' root' (ID: 6577)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' (adapté à ' root') → logprob: -0.27406999468803406
    2. 'p' → logprob: -2.0240700244903564
    3. 'r' → logprob: -2.5240700244903564
    4. ' root' → logprob: -4.024069786071777
    5. ' p' → logprob: -5.149069786071777
    6. 'comp' → logprob: -6.899069786071777
    7. ' comp' → logprob: -7.149069786071777
    8. 'rep' → logprob: -7.274069786071777
    9. 'c' → logprob: -7.399069786071777
    10. ' r' → logprob: -8.024069786071777

Token 557: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931583285331726
    2. ' =' → logprob: -0.6931583285331726
    3. '=i' → logprob: -11.943158149719238
    4. '=root' → logprob: -12.818158149719238
    5. ')' → logprob: -14.568158149719238
    6. ']' → logprob: -15.943158149719238
    7. '```' → logprob: -16.068159103393555
    8. '   ' → logprob: -16.193159103393555
    9. '＝' → logprob: -16.193159103393555
    10. '=find' → logprob: -16.193159103393555

Token 558: ' uf' (ID: 35772)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.002477796748280525
    2. ' uf' → logprob: -6.002477645874023
    3. '   ' → logprob: -14.002477645874023
    4. 'ufs' → logprob: -14.377477645874023
    5. '           ' → logprob: -15.252477645874023
    6. '       ' → logprob: -15.377477645874023
    7. 'ufi' → logprob: -16.127477645874023
    8. '    ' → logprob: -17.502477645874023
    9. 'uff' → logprob: -17.752477645874023
    10. ' ' → logprob: -18.002477645874023

Token 559: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -6.623244553338736e-05
    2. '.' → logprob: -10.250065803527832
    3. 'find' → logprob: -10.625065803527832
    4. '.findall' → logprob: -12.250065803527832
    5. '.parent' → logprob: -13.375065803527832
    6. ').' → logprob: -15.875065803527832
    7. '=find' → logprob: -17.62506675720215
    8. 'parent' → logprob: -17.62506675720215
    9. '.
' → logprob: -18.00006675720215
    10. ' .' → logprob: -18.00006675720215

Token 560: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: 0.0
    2. '(' → logprob: -17.0
    3. 'i' → logprob: -19.5
    4. '[i' → logprob: -19.875
    5. ')' → logprob: -20.625
    6. ')i' → logprob: -20.625
    7. ' (' → logprob: -21.375
    8. '(
' → logprob: -21.375
    9. '(x' → logprob: -21.875
    10. '(I' → logprob: -21.875

Token 561: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.011074705049395561
    2. ')' → logprob: -4.511074542999268
    3. ')
' → logprob: -10.636075019836426
    4. '           ' → logprob: -13.011075019836426
    5. '       ' → logprob: -14.761075019836426
    6. ')

' → logprob: -15.636075019836426
    7. ' )
' → logprob: -17.38607406616211
    8. '   ' → logprob: -17.88607406616211
    9. ')`
' → logprob: -18.01107406616211
    10. ']
' → logprob: -18.76107406616211

Token 562: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09462598711252213
    2. '       ' → logprob: -2.969625949859619
    3. ' if' → logprob: -3.344625949859619
    4. '
' → logprob: -7.094625949859619
    5. '```' → logprob: -7.344625949859619
    6. 'if' → logprob: -7.469625949859619
    7. '<|end|>' → logprob: -7.469625949859619
    8. '   ' → logprob: -7.969625949859619
    9. ':' → logprob: -9.219626426696777
    10. ')' → logprob: -9.219626426696777

Token 563: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00044651966891251504
    2. ' if' → logprob: -8.500446319580078
    3. '           ' → logprob: -8.500446319580078
    4. 'comp' → logprob: -10.250446319580078
    5. '       ' → logprob: -12.375446319580078
    6. '   ' → logprob: -18.250446319580078
    7. ' comp' → logprob: -18.250446319580078
    8. '	if' → logprob: -18.875446319580078
    9. '```' → logprob: -19.125446319580078
    10. '               ' → logprob: -20.000446319580078

Token 564: ' root' (ID: 6577)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -4.5491004129871726e-05
    2. ' root' → logprob: -10.000045776367188
    3. 'not' → logprob: -16.875045776367188
    4. '	root' → logprob: -18.875045776367188
    5. '(root' → logprob: -19.250045776367188
    6. ' ' → logprob: -19.250045776367188
    7. '   ' → logprob: -20.000045776367188
    8. '
' → logprob: -20.875045776367188
    9. '[root' → logprob: -21.125045776367188
    10. '=root' → logprob: -21.250045776367188

Token 565: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.25194844603538513
    2. 'not' → logprob: -1.5019484758377075
    3. ')' → logprob: -11.001948356628418
    4. '	not' → logprob: -14.001948356628418
    5. ']' → logprob: -14.251948356628418
    6. '==' → logprob: -15.251948356628418
    7. 'in' → logprob: -15.501948356628418
    8. ':not' → logprob: -15.876948356628418
    9. 'no' → logprob: -16.126949310302734
    10. 'n't' → logprob: -16.876949310302734

Token 566: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01815134845674038
    2. 'in' → logprob: -4.01815128326416
    3. 'comp' → logprob: -14.01815128326416
    4. ')' → logprob: -15.26815128326416
    5. ' comp' → logprob: -16.393152236938477
    6. '(comp' → logprob: -16.518152236938477
    7. '       ' → logprob: -17.518152236938477
    8. ' в' → logprob: -17.643152236938477
    9. ']' → logprob: -17.643152236938477
    10. '   ' → logprob: -17.893152236938477

Token 567: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -2.7610454708337784e-05
    2. ' comp' → logprob: -10.500027656555176
    3. '	comp' → logprob: -17.62502670288086
    4. '   ' → logprob: -19.00002670288086
    5. 'com' → logprob: -20.50002670288086
    6. '(comp' → logprob: -20.62502670288086
    7. '.comp' → logprob: -20.75002670288086
    8. '
' → logprob: -21.62502670288086
    9. '       ' → logprob: -21.87502670288086
    10. ' ' → logprob: -22.37502670288086

Token 568: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -7.584239938296378e-06
    2. '_count' → logprob: -11.875007629394531
    3. 'count' → logprob: -15.750007629394531
    4. '_comp' → logprob: -16.25000762939453
    5. 'map' → logprob: -16.50000762939453
    6. '_' → logprob: -17.37500762939453
    7. 'comp' → logprob: -17.50000762939453
    8. '\' → logprob: -17.87500762939453
    9. 's' → logprob: -17.87500762939453
    10. '_counts' → logprob: -18.12500762939453

Token 569: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018190911039710045
    2. ':
' → logprob: -4.018190860748291
    3. '=' → logprob: -11.26819133758545
    4. '):' → logprob: -11.76819133758545
    5. '           ' → logprob: -11.89319133758545
    6. '       ' → logprob: -12.64319133758545
    7. ' :' → logprob: -12.89319133758545
    8. ' =' → logprob: -13.14319133758545
    9. '):
' → logprob: -13.14319133758545
    10. ':
' → logprob: -13.89319133758545

Token 570: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2697885036468506
    2. ' =' → logprob: -2.3947885036468506
    3. '           ' → logprob: -2.3947885036468506
    4. ':' → logprob: -3.2697885036468506
    5. ':
' → logprob: -5.26978874206543
    6. '=' → logprob: -5.26978874206543
    7. ' comp' → logprob: -5.64478874206543
    8. '(comp' → logprob: -7.26978874206543
    9. ' :' → logprob: -7.51978874206543
    10. 'comp' → logprob: -7.76978874206543

Token 571: ' comp' (ID: 1050)
  Prédit: ' comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' comp' → logprob: -0.14616236090660095
    2. '               ' → logprob: -2.396162271499634
    3. 'comp' (adapté à ' comp') → logprob: -3.146162271499634
    4. '           ' → logprob: -6.396162509918213
    5. '                   ' → logprob: -8.646162033081055
    6. '	comp' → logprob: -11.021162033081055
    7. '(comp' → logprob: -11.021162033081055
    8. '       ' → logprob: -12.021162033081055
    9. '_comp' → logprob: -12.396162033081055
    10. '   ' → logprob: -12.521162033081055

Token 572: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -1.9361264946837764e-07
    2. '_count' → logprob: -16.75
    3. '_mapping' → logprob: -16.875
    4. '_maps' → logprob: -17.75
    5. '_MAP' → logprob: -18.625
    6. 'emap' → logprob: -19.25
    7. '_' → logprob: -19.625
    8. '   ' → logprob: -20.125
    9. '\' → logprob: -20.375
    10. 'map' → logprob: -20.375

Token 573: '[root' (ID: 185287)
  Prédit: '[root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[root' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -14.250000953674316
    3. ' [' → logprob: -19.625
    4. '=root' → logprob: -20.25
    5. '
' → logprob: -20.75
    6. 'root' → logprob: -20.875
    7. '```' → logprob: -21.75
    8. '[parent' → logprob: -21.875
    9. '   ' → logprob: -22.125
    10. '[tmp' → logprob: -22.375

Token 574: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.522638169466518e-05
    2. ']=' → logprob: -10.750024795532227
    3. '=' → logprob: -13.000024795532227
    4. ' =' → logprob: -14.125024795532227
    5. ')' → logprob: -15.000024795532227
    6. ' ]' → logprob: -15.125024795532227
    7. '   ' → logprob: -16.875024795532227
    8. '']' → logprob: -18.500024795532227
    9. '"]' → logprob: -19.125024795532227
    10. '}' → logprob: -19.375024795532227

Token 575: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005233763717114925
    2. ' =' → logprob: -5.2552337646484375
    3. ']' → logprob: -18.380233764648438
    4. ')' → logprob: -19.630233764648438
    5. ']=' → logprob: -19.755233764648438
    6. '=
' → logprob: -20.005233764648438
    7. '   ' → logprob: -21.005233764648438
    8. ')=' → logprob: -21.630233764648438
    9. '＝' → logprob: -21.630233764648438
    10. '=}' → logprob: -21.755233764648438

Token 576: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.0001584850688232109
    2. ' comp' → logprob: -8.750158309936523
    3. '	comp' → logprob: -18.625158309936523
    4. '   ' → logprob: -20.875158309936523
    5. 'com' → logprob: -21.375158309936523
    6. '(comp' → logprob: -22.375158309936523
    7. '.comp' → logprob: -23.250158309936523
    8. ' ' → logprob: -24.000158309936523
    9. 'len' → logprob: -24.375158309936523
    10. '       ' → logprob: -24.625158309936523

Token 577: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.07047773897647858
    2. 'count' → logprob: -3.1954777240753174
    3. 'unt' → logprob: -4.4454779624938965
    4. 'nt' → logprob: -5.1954779624938965
    5. 'ount' → logprob: -5.6954779624938965
    6. 't' → logprob: -6.0704779624938965
    7. 'ent' → logprob: -6.0704779624938965
    8. '+' → logprob: -7.4454779624938965
    9. '       ' → logprob: -8.445477485656738
    10. 'cnt' → logprob: -8.945477485656738

Token 578: '
' (ID: 198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.745503842830658
    2. '               ' → logprob: -0.870503842830658
    3. ' =' → logprob: -2.4955039024353027
    4. '           ' → logprob: -4.495503902435303
    5. ' +=' → logprob: -5.245503902435303
    6. '                   ' → logprob: -5.495503902435303
    7. '+=' → logprob: -6.495503902435303
    8. '       ' → logprob: -6.870503902435303
    9. ',' → logprob: -7.995503902435303
    10. '                ' → logprob: -8.870503425598145

Token 579: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0013266648165881634
    2. '           ' → logprob: -7.251326560974121
    3. '                   ' → logprob: -7.876326560974121
    4. '
' → logprob: -9.751326560974121
    5. '                
' → logprob: -10.126326560974121
    6. '                ' → logprob: -10.626326560974121
    7. '       ' → logprob: -10.751326560974121
    8. 'comp' → logprob: -11.626326560974121
    9. '\n' → logprob: -11.626326560974121
    10. ' =' → logprob: -11.626326560974121

Token 580: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' (adapté à ' comp') → logprob: -0.001885326812043786
    2. ' comp' → logprob: -6.751885414123535
    3. '               ' → logprob: -7.251885414123535
    4. '           ' → logprob: -12.501885414123535
    5. '	comp' → logprob: -14.001885414123535
    6. '                   ' → logprob: -14.126885414123535
    7. '   ' → logprob: -15.251885414123535
    8. 'com' → logprob: -15.626885414123535
    9. '++' → logprob: -16.12688446044922
    10. '       ' → logprob: -16.62688446044922

Token 581: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.4974866644479334e-05
    2. 'count' → logprob: -11.500015258789062
    3. '_map' → logprob: -12.875015258789062
    4. 'ount' → logprob: -13.375015258789062
    5. '_comp' → logprob: -14.875015258789062
    6. 'comp' → logprob: -16.250015258789062
    7. '_' → logprob: -17.125015258789062
    8. 'onent' → logprob: -17.375015258789062
    9. 'import' → logprob: -17.500015258789062
    10. '_counts' → logprob: -17.625015258789062

Token 582: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0380479171872139
    2. ' +=' → logprob: -3.288048028945923
    3. '=' → logprob: -12.413047790527344
    4. ']+=' → logprob: -13.288047790527344
    5. '+' → logprob: -14.538047790527344
    6. '   ' → logprob: -16.038047790527344
    7. '+='' → logprob: -17.538047790527344
    8. '```' → logprob: -17.663047790527344
    9. '+="' → logprob: -18.163047790527344
    10. '<|end|>' → logprob: -18.163047790527344

Token 583: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '   ' → logprob: -19.25
    4. '```' → logprob: -19.5
    5. '<|end|>' → logprob: -20.625
    6. '１' → logprob: -21.25
    7. '۱' → logprob: -21.5
    8. '১' → logprob: -22.0625
    9. '
' → logprob: -22.125
    10. '१' → logprob: -22.25

Token 584: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '```' → logprob: -20.75
    4. '   ' → logprob: -21.0
    5. '１' → logprob: -21.125
    6. '۱' → logprob: -21.375
    7. '<|end|>' → logprob: -21.5625
    8. '১' → logprob: -21.875
    9. '१' → logprob: -22.1875
    10. '
' → logprob: -23.6875

Token 585: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 586: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0692335367202759
    2. 'components' → logprob: -1.4442335367202759
    3. '
' → logprob: -1.5692335367202759
    4. '   ' → logprob: -3.5692334175109863
    5. '#' → logprob: -3.6942334175109863
    6. '        
' → logprob: -3.9442334175109863
    7. ' components' → logprob: -4.069233417510986
    8. 'edges' → logprob: -4.069233417510986
    9. '<|end|>' → logprob: -4.319233417510986
    10. 'nodes' → logprob: -4.444233417510986

Token 587: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7504249215126038
    2. 'comp' → logprob: -1.375424861907959
    3. 'components' → logprob: -2.500424861907959
    4. '#' (adapté à ' #') → logprob: -2.875424861907959
    5. 'component' → logprob: -3.250424861907959
    6. 'count' → logprob: -4.875424861907959
    7. '       ' → logprob: -5.000424861907959
    8. 'counts' → logprob: -5.000424861907959
    9. 'group' → logprob: -5.125424861907959
    10. 'print' → logprob: -5.250424861907959

Token 588: ' Collection' (ID: 13102)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -1.1027631759643555
    2. 'components' → logprob: -1.1027631759643555
    3. 'component' → logprob: -1.6027631759643555
    4. 'com' → logprob: -3.1027631759643555
    5. '#' → logprob: -3.7277631759643555
    6. 'dp' → logprob: -3.8527631759643555
    7. 'groups' → logprob: -4.9777631759643555
    8. 'group' → logprob: -5.2277631759643555
    9. 'colors' → logprob: -5.3527631759643555
    10. 'color' → logprob: -5.8527631759643555

Token 589: 'ner' (ID: 1247)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6080965399742126
    2. '=' → logprob: -0.9830965399742126
    3. 'of' → logprob: -2.9830965995788574
    4. 'comp' → logprob: -4.358096599578857
    5. 'com' → logprob: -5.483096599578857
    6. '_of' → logprob: -5.608096599578857
    7. 'components' → logprob: -5.733096599578857
    8. ' of' → logprob: -5.858096599578857
    9. 'edges' → logprob: -7.233096599578857
    10. '   ' → logprob: -7.983096599578857

Token 590: ' les' (ID: 1341)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.16315825283527374
    2. ' comps' → logprob: -3.1631581783294678
    3. ' comp' → logprob: -3.2881581783294678
    4. 'com' → logprob: -3.4131581783294678
    5. 'components' → logprob: -4.288158416748047
    6. 'component' → logprob: -4.788158416748047
    7. 'sizes' → logprob: -5.288158416748047
    8. 'counts' → logprob: -5.413158416748047
    9. 'count' → logprob: -5.788158416748047
    10. 'nodes' → logprob: -6.538158416748047

Token 591: ' somm' (ID: 44830)
  Prédit: 'sizes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sizes' → logprob: -0.6229325532913208
    2. 'com' → logprob: -1.1229325532913208
    3. 'components' → logprob: -2.7479324340820312
    4. 'comp' → logprob: -4.122932434082031
    5. 'nodes' → logprob: -4.497932434082031
    6. 'tails' → logprob: -4.747932434082031
    7. 'edges' → logprob: -4.872932434082031
    8. 'component' → logprob: -4.997932434082031
    9. 'tail' → logprob: -5.122932434082031
    10. 'counts' → logprob: -5.622932434082031

Token 592: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.0008073674980551004
    2. 'es' → logprob: -7.875807285308838
    3. 'et' → logprob: -8.375807762145996
    4. 'etes' → logprob: -8.625807762145996
    5. 'ettes' → logprob: -11.375807762145996
    6. 'ites' → logprob: -12.875807762145996
    7. 'ètes' → logprob: -13.500807762145996
    8. '#' → logprob: -14.250807762145996
    9. 'mes' → logprob: -14.750807762145996
    10. 'ates' → logprob: -15.375807762145996

Token 593: ' par' (ID: 686)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.9339800477027893
    2. '=' → logprob: -1.4339799880981445
    3. ' =' → logprob: -1.9339799880981445
    4. 'by' → logprob: -2.5589799880981445
    5. 'per' → logprob: -3.3089799880981445
    6. 'for' → logprob: -4.0589799880981445
    7. '_by' → logprob: -4.3089799880981445
    8. '_comp' → logprob: -4.5589799880981445
    9. 'in' → logprob: -4.6839799880981445
    10. 'of' → logprob: -4.8089799880981445

Token 594: ' compos' (ID: 14635)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.2505054473876953
    2. 'component' → logprob: -2.0005054473876953
    3. 'comp' → logprob: -2.5005054473876953
    4. 'components' → logprob: -6.125505447387695
    5. ' compos' → logprob: -6.375505447387695
    6. 'composition' → logprob: -8.875505447387695
    7. 'cluster' → logprob: -10.125505447387695
    8. ' composants' → logprob: -10.500505447387695
    9. 'classe' → logprob: -10.875505447387695
    10. ' comp' → logprob: -11.125505447387695

Token 595: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.06312858313322067
    2. 'ponent' → logprob: -3.5631284713745117
    3. 'antes' → logprob: -4.063128471374512
    4. 'ent' → logprob: -5.313128471374512
    5. 'ents' → logprob: -5.938128471374512
    6. 'ente' → logprob: -5.938128471374512
    7. 'ponents' → logprob: -6.688128471374512
    8. 'ant' → logprob: -6.813128471374512
    9. 'entes' → logprob: -7.313128471374512
    10. 'pos' → logprob: -7.688128471374512

Token 596: '
' (ID: 198)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'components' → logprob: -0.6182762980461121
    2. '       ' → logprob: -1.4932763576507568
    3. 'comp' → logprob: -2.243276357650757
    4. ' comps' → logprob: -3.493276357650757
    5. 'nodes' → logprob: -3.743276357650757
    6. 'com' → logprob: -3.743276357650757
    7. 'vertices' → logprob: -3.868276357650757
    8. ' components' → logprob: -5.118276119232178
    9. '=' → logprob: -5.118276119232178
    10. ' =' → logprob: -5.118276119232178

Token 597: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5118198394775391
    2. 'components' → logprob: -1.636819839477539
    3. 'comp' → logprob: -2.136819839477539
    4. ' comps' → logprob: -3.386819839477539
    5. ' components' → logprob: -4.261819839477539
    6. 'vertices' → logprob: -4.886819839477539
    7. ' comp' → logprob: -4.886819839477539
    8. ' =' → logprob: -5.386819839477539
    9. ',' → logprob: -5.761819839477539
    10. ' vertices' → logprob: -5.886819839477539

Token 598: ' comps' (ID: 174219)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'components' → logprob: -0.34513142704963684
    2. 'comp' → logprob: -1.5951313972473145
    3. 'com' → logprob: -2.8451313972473145
    4. ' comps' → logprob: -3.7201313972473145
    5. 'component' → logprob: -5.5951313972473145
    6. ' components' → logprob: -6.0951313972473145
    7. ' comp' → logprob: -7.8451313972473145
    8. 'from' → logprob: -9.720131874084473
    9. '   ' → logprob: -9.720131874084473
    10. '       ' → logprob: -10.345131874084473

Token 599: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17977368831634521
    2. '=' → logprob: -1.8047736883163452
    3. 's' → logprob: -12.054773330688477
    4. '   ' → logprob: -12.554773330688477
    5. '=[]' → logprob: -12.679773330688477
    6. '={}' → logprob: -12.679773330688477
    7. '       ' → logprob: -13.304773330688477
    8. '_' → logprob: -13.929773330688477
    9. '=[' → logprob: -13.929773330688477
    10. '[]' → logprob: -13.929773330688477

Token 600: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00043341092532500625
    2. ' [[]' → logprob: -7.750433444976807
    3. '{' → logprob: -13.000432968139648
    4. '[[' → logprob: -15.625432968139648
    5. '{}' → logprob: -15.875432968139648
    6. 'collections' → logprob: -16.50043296813965
    7. ' [' → logprob: -16.62543296813965
    8. 'default' → logprob: -17.62543296813965
    9. '{}
' → logprob: -18.87543296813965
    10. '[]' → logprob: -19.37543296813965

Token 601: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15970899164676666
    2. ']' → logprob: -2.1597089767456055
    3. ' for' → logprob: -3.6597089767456055
    4. ',' → logprob: -5.9097089767456055
    5. ')' → logprob: -6.4097089767456055
    6. '()' → logprob: -6.9097089767456055
    7. ']
' → logprob: -7.4097089767456055
    8. '       ' → logprob: -9.034708976745605
    9. '.append' → logprob: -9.659708976745605
    10. 'comp' → logprob: -9.784708976745605

Token 602: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00032724079210311174
    2. ' _' → logprob: -9.750327110290527
    3. 'in' → logprob: -9.875327110290527
    4. ' range' → logprob: -10.000327110290527
    5. '_range' → logprob: -10.000327110290527
    6. 'range' → logprob: -10.125327110290527
    7. '_comp' → logprob: -10.125327110290527
    8. ' in' → logprob: -10.250327110290527
    9. 'i' → logprob: -12.125327110290527
    10. '_in' → logprob: -13.000327110290527

Token 603: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.026395509019494057
    2. '_' → logprob: -3.776395559310913
    3. 'range' → logprob: -6.401395320892334
    4. ' in' → logprob: -6.526395320892334
    5. 'i' → logprob: -11.526395797729492
    6. ' _' → logprob: -12.901395797729492
    7. ' range' → logprob: -13.401395797729492
    8. ' ' → logprob: -13.651395797729492
    9. 'comp' → logprob: -13.651395797729492
    10. '_in' → logprob: -13.651395797729492

Token 604: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00015860427811276168
    2. ' range' → logprob: -8.750158309936523
    3. '_range' → logprob: -17.000158309936523
    4. '_' → logprob: -18.000158309936523
    5. '
' → logprob: -20.000158309936523
    6. '   ' → logprob: -20.375158309936523
    7. '	range' → logprob: -20.625158309936523
    8. ' ' → logprob: -20.750158309936523
    9. '(range' → logprob: -21.000158309936523
    10. 'rang' → logprob: -21.000158309936523

Token 605: '(comp' (ID: 60272)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.0019287518225610256
    2. '(comp' → logprob: -6.251928806304932
    3. ' comp' → logprob: -16.501928329467773
    4. '	comp' → logprob: -18.751928329467773
    5. '(' → logprob: -20.751928329467773
    6. 'compl' → logprob: -21.126928329467773
    7. 'com' → logprob: -21.876928329467773
    8. '.comp' → logprob: -22.376928329467773
    9. 'len' → logprob: -23.251928329467773
    10. '   ' → logprob: -23.751928329467773

Token 606: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -6.289473822107539e-05
    2. 'count' → logprob: -10.000062942504883
    3. '_map' → logprob: -11.375062942504883
    4. 'ount' → logprob: -12.375062942504883
    5. '_comp' → logprob: -13.625062942504883
    6. '_' → logprob: -15.250062942504883
    7. '	count' → logprob: -17.250062942504883
    8. 'comp' → logprob: -17.375062942504883
    9. '   ' → logprob: -17.375062942504883
    10. ' count' → logprob: -17.500062942504883

Token 607: ')]
' (ID: 11587)
  Prédit: ']
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.9264387488365173
    2. ']' → logprob: -1.176438808441162
    3. ')]
' → logprob: -1.926438808441162
    4. ')]' → logprob: -1.926438808441162
    5. ')' → logprob: -5.551438808441162
    6. ')
' → logprob: -8.176438331604004
    7. ']
' → logprob: -9.176438331604004
    8. ')]
' → logprob: -10.426438331604004
    9. ']

' → logprob: -11.426438331604004
    10. ' ]
' → logprob: -11.926438331604004

Token 608: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04611837863922119
    2. ' for' → logprob: -3.2961182594299316
    3. 'for' → logprob: -4.921118259429932
    4. 'com' → logprob: -8.29611873626709
    5. '   ' → logprob: -8.54611873626709
    6. '<|end|>' → logprob: -9.29611873626709
    7. '        
' → logprob: -10.04611873626709
    8. '```' → logprob: -10.04611873626709
    9. '
' → logprob: -10.54611873626709
    10. '	for' → logprob: -10.67111873626709

Token 609: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.07291851937770844
    2. '       ' → logprob: -3.07291841506958
    3. ' for' → logprob: -3.82291841506958
    4. 'com' → logprob: -6.19791841506958
    5. '```' → logprob: -9.572918891906738
    6. '   ' → logprob: -9.822918891906738
    7. '	for' → logprob: -11.822918891906738
    8. ' comps' → logprob: -12.197918891906738
    9. 'comp' → logprob: -13.822918891906738
    10. ' ' → logprob: -14.447918891906738

Token 610: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0015035520773380995
    2. ' i' → logprob: -6.5015034675598145
    3. 'v' → logprob: -13.876503944396973
    4. 'u' → logprob: -16.001502990722656
    5. 'node' → logprob: -16.501502990722656
    6. 'idx' → logprob: -17.376502990722656
    7. 'x' → logprob: -17.626502990722656
    8. '   ' → logprob: -17.751502990722656
    9. ' ' → logprob: -18.251502990722656
    10. ' v' → logprob: -18.501502990722656

Token 611: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02071261964738369
    2. 'in' → logprob: -3.8957126140594482
    3. ',' → logprob: -8.770712852478027
    4. 'import' → logprob: -12.520712852478027
    5. ')' → logprob: -12.645712852478027
    6. 'n' → logprob: -13.145712852478027
    7. '   ' → logprob: -13.395712852478027
    8. '       ' → logprob: -14.145712852478027
    9. ' ' → logprob: -14.395712852478027
    10. '(' → logprob: -14.395712852478027

Token 612: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -3.547789674485102e-05
    2. ' range' → logprob: -10.250035285949707
    3. '(range' → logprob: -18.000036239624023
    4. 'n' → logprob: -19.875036239624023
    5. 'in' → logprob: -19.875036239624023
    6. 'com' → logprob: -20.875036239624023
    7. 'rang' → logprob: -21.000036239624023
    8. ' ' → logprob: -21.000036239624023
    9. 'comp' → logprob: -21.250036239624023
    10. '	range' → logprob: -21.250036239624023

Token 613: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0089031420648098
    2. 'n' → logprob: -4.7589030265808105
    3. 'range' → logprob: -8.258903503417969
    4. '(' → logprob: -10.758903503417969
    5. '(range' → logprob: -11.883903503417969
    6. ' range' → logprob: -15.008903503417969
    7. '[n' → logprob: -15.133903503417969
    8. ' n' → logprob: -15.758903503417969
    9. ')' → logprob: -16.13390350341797
    10. ' (' → logprob: -16.38390350341797

Token 614: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.011688868515193462
    2. '):' → logprob: -4.511688709259033
    3. ']:
' → logprob: -8.636689186096191
    4. '):
' → logprob: -8.886689186096191
    5. ')]' → logprob: -9.011689186096191
    6. ')' → logprob: -9.886689186096191
    7. '       ' → logprob: -10.261689186096191
    8. ':
' → logprob: -10.511689186096191
    9. ']):
' → logprob: -10.636689186096191
    10. ',' → logprob: -10.636689186096191

Token 615: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6879931688308716
    2. 'com' → logprob: -1.3129931688308716
    3. ' comps' → logprob: -2.062993049621582
    4. '   ' → logprob: -2.687993049621582
    5. '           ' → logprob: -3.437993049621582
    6. '(com' → logprob: -8.187993049621582
    7. '```' → logprob: -8.187993049621582
    8. ' com' → logprob: -8.437993049621582
    9. '	com' → logprob: -8.562993049621582
    10. '	   ' → logprob: -10.312993049621582

Token 616: ' comps' (ID: 174219)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.006117198616266251
    2. ' comps' → logprob: -5.131117343902588
    3. '       ' → logprob: -8.88111686706543
    4. '           ' → logprob: -10.25611686706543
    5. 'comp' → logprob: -12.50611686706543
    6. '	com' → logprob: -12.88111686706543
    7. ' com' → logprob: -13.50611686706543
    8. 'Com' → logprob: -13.50611686706543
    9. '   ' → logprob: -13.50611686706543
    10. '_com' → logprob: -13.63111686706543

Token 617: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.518582762917504e-05
    2. '][' → logprob: -10.50008487701416
    3. '[
' → logprob: -11.25008487701416
    4. '=' → logprob: -11.37508487701416
    5. 'comp' → logprob: -12.00008487701416
    6. ')[' → logprob: -12.25008487701416
    7. ']' → logprob: -12.37508487701416
    8. ' [' → logprob: -13.00008487701416
    9. '   ' → logprob: -13.12508487701416
    10. ' =' → logprob: -13.12508487701416

Token 618: 'comp' (ID: 3697)
  Prédit: 'comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.0013332172529771924
    2. ' comp' → logprob: -6.626333236694336
    3. 'uf' → logprob: -12.876333236694336
    4. '(comp' → logprob: -13.126333236694336
    5. 'i' → logprob: -14.501333236694336
    6. '[' → logprob: -14.626333236694336
    7. 'com' → logprob: -14.876333236694336
    8. 'cmp' → logprob: -15.001333236694336
    9. '	comp' → logprob: -15.376333236694336
    10. ' ' → logprob: -15.876333236694336

Token 619: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.005418615881353617
    2. '_count' → logprob: -6.00541877746582
    3. '[i' → logprob: -6.25541877746582
    4. '(i' → logprob: -7.88041877746582
    5. 'i' → logprob: -8.38041877746582
    6. 'map' → logprob: -9.00541877746582
    7. 'count' → logprob: -9.25541877746582
    8. ']' → logprob: -9.63041877746582
    9. '_comp' → logprob: -11.00541877746582
    10. '_i' → logprob: -11.13041877746582

Token 620: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00022988072305452079
    2. '[root' → logprob: -8.875229835510254
    3. '(' → logprob: -9.500229835510254
    4. '][' → logprob: -11.875229835510254
    5. 'uf' → logprob: -12.500229835510254
    6. 'root' → logprob: -13.125229835510254
    7. '(root' → logprob: -14.000229835510254
    8. ']' → logprob: -14.750229835510254
    9. '[
' → logprob: -15.000229835510254
    10. '[u' → logprob: -15.875229835510254

Token 621: 'uf' (ID: 1427)
  Prédit: 'uf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -2.4034345187828876e-05
    2. '(' → logprob: -11.37502384185791
    3. 'ufs' → logprob: -12.00002384185791
    4. ' uf' → logprob: -12.50002384185791
    5. 'root' → logprob: -13.25002384185791
    6. '[' → logprob: -14.50002384185791
    7. 'ufi' → logprob: -15.87502384185791
    8. '.uf' → logprob: -16.500024795532227
    9. 'uff' → logprob: -17.625024795532227
    10. 'ufe' → logprob: -18.125024795532227

Token 622: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.000194361709873192
    2. 'find' → logprob: -9.125194549560547
    3. '.' → logprob: -9.500194549560547
    4. '].' → logprob: -13.125194549560547
    5. '.parent' → logprob: -13.250194549560547
    6. ' .' → logprob: -13.250194549560547
    7. '.findall' → logprob: -14.250194549560547
    8. 'parent' → logprob: -14.375194549560547
    9. '.
' → logprob: -14.625194549560547
    10. '.get' → logprob: -14.750194549560547

Token 623: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -2.696889623621246e-06
    2. '(' → logprob: -13.25000286102295
    3. 'i' → logprob: -14.62500286102295
    4. ' (' → logprob: -15.12500286102295
    5. '(
' → logprob: -16.250001907348633
    6. '[i' → logprob: -16.375001907348633
    7. ']' → logprob: -17.000001907348633
    8. '
' → logprob: -17.875001907348633
    9. '](' → logprob: -18.000001907348633
    10. '```' → logprob: -18.750001907348633

Token 624: ')]' (ID: 15710)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.40032896399497986
    2. '[i' → logprob: -1.1503289937973022
    3. ')]' → logprob: -4.525329113006592
    4. ')' → logprob: -6.275329113006592
    5. ')].' → logprob: -8.650328636169434
    6. ')])' → logprob: -9.150328636169434
    7. '())' → logprob: -9.650328636169434
    8. 'i' → logprob: -10.025328636169434
    9. ')][' → logprob: -10.025328636169434
    10. '])]' → logprob: -10.025328636169434

Token 625: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -3.440506407059729e-05
    2. '.append' → logprob: -10.50003433227539
    3. ' ].' → logprob: -12.75003433227539
    4. ']' → logprob: -12.87503433227539
    5. '.' → logprob: -14.37503433227539
    6. ').' → logprob: -14.50003433227539
    7. '()].' → logprob: -16.00003433227539
    8. 'append' → logprob: -17.00003433227539
    9. ''].' → logprob: -17.50003433227539
    10. '.app' → logprob: -17.62503433227539

Token 626: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.9361264946837764e-07
    2. '.append' → logprob: -16.25
    3. ' append' → logprob: -18.0
    4. 'app' → logprob: -18.75
    5. 'appen' → logprob: -19.25
    6. '_append' → logprob: -21.875
    7. '	append' → logprob: -22.5
    8. 'Append' → logprob: -23.0
    9. 'appe' → logprob: -23.625
    10. 'ap' → logprob: -24.75

Token 627: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.5048530030981055e-06
    2. 'i' → logprob: -13.500001907348633
    3. '(' → logprob: -18.500001907348633
    4. ' i' → logprob: -21.250001907348633
    5. '(
' → logprob: -21.750001907348633
    6. ')i' → logprob: -22.375001907348633
    7. ' (' → logprob: -22.625001907348633
    8. ')' → logprob: -22.875001907348633
    9. '=i' → logprob: -23.000001907348633
    10. '	i' → logprob: -23.125001907348633

Token 628: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2233183042553719e-05
    2. ')
' → logprob: -11.375012397766113
    3. '       ' → logprob: -14.750012397766113
    4. ' )' → logprob: -16.625011444091797
    5. '))' → logprob: -17.250011444091797
    6. ')

' → logprob: -17.375011444091797
    7. '   ' → logprob: -17.875011444091797
    8. ')
' → logprob: -18.125011444091797
    9. ')`' → logprob: -18.125011444091797
    10. ')return' → logprob: -18.250011444091797

Token 629: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09005769342184067
    2. '
' → logprob: -3.090057611465454
    3. '   ' → logprob: -4.090057849884033
    4. 'edges' → logprob: -5.215057849884033
    5. '#' → logprob: -5.340057849884033
    6. '        
' → logprob: -5.465057849884033
    7. '<|end|>' → logprob: -5.715057849884033
    8. '```' → logprob: -6.340057849884033
    9. 'total' → logprob: -6.965057849884033
    10. ' edges' → logprob: -7.215057849884033

Token 630: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4347807466983795
    2. '#' (adapté à ' #') → logprob: -1.8097807168960571
    3. '       ' → logprob: -3.6847808361053467
    4. 'edges' → logprob: -3.9347808361053467
    5. 'color' → logprob: -4.059780597686768
    6. 'colors' → logprob: -4.184780597686768
    7. 'for' → logprob: -4.309780597686768
    8. 'm' → logprob: -4.934780597686768
    9. 'total' → logprob: -4.934780597686768
    10. 'k' → logprob: -5.059780597686768

Token 631: ' Reg' (ID: 3955)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7790844440460205
    2. '#' → logprob: -1.0290844440460205
    3. 'res' → logprob: -3.1540844440460205
    4. 'comp' → logprob: -4.154084205627441
    5. 'total' → logprob: -4.154084205627441
    6. 'answer' → logprob: -4.404084205627441
    7. 'ans' → logprob: -4.529084205627441
    8. '       ' → logprob: -4.529084205627441
    9. 'result' → logprob: -4.529084205627441
    10. 'for' → logprob: -4.654084205627441

Token 632: 'rou' (ID: 691)
  Prédit: 'ions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ions' → logprob: -0.5916264653205872
    2. 'arder' → logprob: -1.4666264057159424
    3. 'ion' → logprob: -2.4666264057159424
    4. 'roup' → logprob: -2.8416264057159424
    5. 'ards' → logprob: -3.3416264057159424
    6. 'ard' → logprob: -4.7166266441345215
    7. 'arding' → logprob: -5.2166266441345215
    8. 'def' → logprob: -5.2166266441345215
    9. 'enerate' → logprob: -5.4666266441345215
    10. 'arde' → logprob: -6.0916266441345215

Token 633: 'per' (ID: 543)
  Prédit: 'ner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ner' → logprob: -0.024753360077738762
    2. 'er' → logprob: -4.274753570556641
    3. 'per' → logprob: -5.524753570556641
    4. '   ' → logprob: -6.774753570556641
    5. '       ' → logprob: -6.899753570556641
    6. 'érer' → logprob: -7.024753570556641
    7. 'n' → logprob: -7.149753570556641
    8. 'uer' → logprob: -7.774753570556641
    9. 'enerate' → logprob: -8.02475357055664
    10. 'r' → logprob: -8.52475357055664

Token 634: ' les' (ID: 1341)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.7481668591499329
    2. 'les' → logprob: -1.373166799545288
    3. '#' → logprob: -2.873166799545288
    4. 'par' → logprob: -3.373166799545288
    5. 'edge' → logprob: -3.373166799545288
    6. ' edges' → logprob: -3.748166799545288
    7. 'comp' → logprob: -3.873166799545288
    8. ' les' → logprob: -3.998166799545288
    9. 'com' → logprob: -3.998166799545288
    10. 'by' → logprob: -4.498167037963867

Token 635: ' ar' (ID: 646)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.20983482897281647
    2. 'cost' → logprob: -2.8348348140716553
    3. 'comp' → logprob: -3.5848348140716553
    4. 'com' → logprob: -3.5848348140716553
    5. 'edge' → logprob: -4.084835052490234
    6. '#' → logprob: -4.209835052490234
    7. 'for' → logprob: -4.209835052490234
    8. 'dp' → logprob: -5.459835052490234
    9. 'ar' → logprob: -5.959835052490234
    10. 'count' → logprob: -6.209835052490234

Token 636: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.018391534686088562
    2. 'edges' → logprob: -4.3933916091918945
    3. 'ches' → logprob: -5.8933916091918945
    4. 'cs' → logprob: -6.2683916091918945
    5. 'e' → logprob: -7.8933916091918945
    6. 'es' → logprob: -8.018391609191895
    7. 'etes' → logprob: -8.643391609191895
    8. 'r' → logprob: -9.768391609191895
    9. 'ê' → logprob: -10.143391609191895
    10. 'gs' → logprob: -10.268391609191895

Token 637: ' par' (ID: 686)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.31602418422698975
    2. 'par' → logprob: -1.6910241842269897
    3. 'comp' → logprob: -3.0660243034362793
    4. 'per' → logprob: -3.5660243034362793
    5. '_by' → logprob: -5.441024303436279
    6. 'edges' → logprob: -5.941024303436279
    7. 'in' → logprob: -7.066024303436279
    8. ' by' → logprob: -7.316024303436279
    9. '=' → logprob: -7.441024303436279
    10. 'component' → logprob: -8.066023826599121

Token 638: ' compos' (ID: 14635)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.07069601118564606
    2. 'component' → logprob: -2.8206961154937744
    3. 'com' → logprob: -4.945695877075195
    4. 'cost' → logprob: -6.570695877075195
    5. 'components' → logprob: -9.820695877075195
    6. 'root' → logprob: -10.070695877075195
    7. '=' → logprob: -10.945695877075195
    8. ' comp' → logprob: -11.320695877075195
    9. 'connected' → logprob: -11.320695877075195
    10. 'lambda' → logprob: -11.445695877075195

Token 639: 'ante' (ID: 2116)
  Prédit: 'ponent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ponent' → logprob: -0.47805726528167725
    2. 'p' → logprob: -2.228057384490967
    3. 'pon' → logprob: -2.603057384490967
    4. 'on' → logprob: -2.978057384490967
    5. 'ponente' → logprob: -3.103057384490967
    6. 'pos' → logprob: -3.603057384490967
    7. 'ponents' → logprob: -3.603057384490967
    8. 'onte' → logprob: -3.853057384490967
    9. 'pone' → logprob: -4.978057384490967
    10. 'pont' → logprob: -5.603057384490967

Token 640: '
' (ID: 198)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.3619680106639862
    2. 'component' → logprob: -1.7369680404663086
    3. 'edges' → logprob: -2.4869680404663086
    4. 'components' → logprob: -3.8619680404663086
    5. '       ' → logprob: -4.486968040466309
    6. 'com' → logprob: -5.111968040466309
    7. '        
' → logprob: -6.361968040466309
    8. 'edge' → logprob: -6.986968040466309
    9. '
' → logprob: -6.986968040466309
    10. ' edges' → logprob: -7.611968040466309

Token 641: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5864384174346924
    2. 'edges' → logprob: -0.9614384174346924
    3. ' edges' → logprob: -3.5864384174346924
    4. '        
' → logprob: -4.461438179016113
    5. 'comp' → logprob: -4.836438179016113
    6. 'components' → logprob: -4.836438179016113
    7. ',' → logprob: -6.836438179016113
    8. 'component' → logprob: -6.836438179016113
    9. 'from' → logprob: -7.461438179016113
    10. '(edges' → logprob: -7.461438179016113

Token 642: ' #' (ID: 1069)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.020220793783664703
    2. 'edges' → logprob: -4.395220756530762
    3. 'com' → logprob: -5.645220756530762
    4. 'component' → logprob: -5.895220756530762
    5. 'components' → logprob: -7.145220756530762
    6. 'edge' → logprob: -7.645220756530762
    7. '       ' → logprob: -9.770220756530762
    8. 'from' → logprob: -11.145220756530762
    9. ' comp' → logprob: -11.395220756530762
    10. ' comps' → logprob: -11.770220756530762

Token 643: ' On' (ID: 2160)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.024849532172083855
    2. 'edges' → logprob: -4.1498494148254395
    3. 'com' → logprob: -5.2748494148254395
    4. 'component' → logprob: -6.2748494148254395
    5. 'edge' → logprob: -6.6498494148254395
    6. 'components' → logprob: -8.274849891662598
    7. 'from' → logprob: -9.024849891662598
    8. '   ' → logprob: -10.399849891662598
    9. ' comp' → logprob: -10.649849891662598
    10. '       ' → logprob: -10.899849891662598

Token 644: ' ne' (ID: 453)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.46078288555145264
    2. 'for' → logprob: -1.9607828855514526
    3. 'edges' → logprob: -1.9607828855514526
    4. 'component' → logprob: -3.585783004760742
    5. 'edge' → logprob: -3.835783004760742
    6. 'com' → logprob: -4.210783004760742
    7. 'components' → logprob: -4.335783004760742
    8. 'cost' → logprob: -4.960783004760742
    9. '#' → logprob: -6.710783004760742
    10. 'from' → logprob: -7.585783004760742

Token 645: ' garde' (ID: 65309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13821983337402344
    2. 'continue' → logprob: -2.3882198333740234
    3. 'reg' → logprob: -4.013219833374023
    4. '#' → logprob: -5.763219833374023
    5. 'need' → logprob: -6.013219833374023
    6. 'fil' → logprob: -6.388219833374023
    7. 'contin' → logprob: -6.388219833374023
    8. 'filter' → logprob: -6.638219833374023
    9. 'edges' → logprob: -7.138219833374023
    10. 'consider' → logprob: -7.138219833374023

Token 646: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.5499691367149353
    2. ' que' → logprob: -1.54996919631958
    3. 'les' → logprob: -3.17496919631958
    4. '{}' → logprob: -3.29996919631958
    5. 'pas' → logprob: -3.54996919631958
    6. 'only' → logprob: -3.54996919631958
    7. 'edges' → logprob: -3.67496919631958
    8. '       ' → logprob: -5.04996919631958
    9. '[]' → logprob: -5.17496919631958
    10. 'for' → logprob: -5.17496919631958

Token 647: ' les' (ID: 1341)
  Prédit: ' celles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' celles' → logprob: -0.3089326024055481
    2. 'les' → logprob: -1.6839325428009033
    3. 'edges' → logprob: -2.9339325428009033
    4. '[' → logprob: -4.808932781219482
    5. '[(' → logprob: -5.308932781219482
    6. ' les' → logprob: -5.683932781219482
    7. 'celle' → logprob: -6.183932781219482
    8. 'comp' → logprob: -6.558932781219482
    9. 'c' → logprob: -6.683932781219482
    10. '[]' → logprob: -6.933932781219482

Token 648: ' ar' (ID: 646)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.4398072361946106
    2. 'ar' → logprob: -1.8148071765899658
    3. ' edges' → logprob: -2.939807176589966
    4. 'e' → logprob: -3.439807176589966
    5. '[(' → logprob: -3.814807176589966
    6. '[u' → logprob: -4.189807415008545
    7. 'cost' → logprob: -4.189807415008545
    8. 'c' → logprob: -4.314807415008545
    9. 'edge' → logprob: -5.064807415008545
    10. ' ar' → logprob: -5.564807415008545

Token 649: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.07951490581035614
    2. 'ches' → logprob: -2.829514980316162
    3. 'edges' → logprob: -5.329514980316162
    4. 'r' → logprob: -5.579514980316162
    5. 'e' → logprob: -5.704514980316162
    6. 'cs' → logprob: -6.204514980316162
    7. 'es' → logprob: -7.454514980316162
    8. 'tes' → logprob: -7.454514980316162
    9. 'ges' → logprob: -7.829514980316162
    10. 't' → logprob: -7.954514980316162

Token 650: ' internes' (ID: 183434)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6458048224449158
    2. ' =' → logprob: -1.3958048820495605
    3. 'for' → logprob: -3.1458048820495605
    4. 'in' → logprob: -3.8958048820495605
    5. 'that' → logprob: -3.8958048820495605
    6. 'with' → logprob: -3.8958048820495605
    7. '[
' → logprob: -3.8958048820495605
    8. 'per' → logprob: -4.0208048820495605
    9. '[' → logprob: -4.0208048820495605
    10. '_by' → logprob: -4.1458048820495605

Token 651: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1698814034461975
    2. '=' → logprob: -1.9198813438415527
    3. '_edges' → logprob: -6.044881343841553
    4. 'edges' → logprob: -6.169881343841553
    5. '_in' → logprob: -7.044881343841553
    6. 'internal' → logprob: -7.419881343841553
    7. '_filtered' → logprob: -7.419881343841553
    8. '_internal' → logprob: -7.794881343841553
    9. ':' → logprob: -7.919881343841553
    10. '_to' → logprob: -7.919881343841553

Token 652: ' une' (ID: 2463)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.26572385430336
    2. 'comp' → logprob: -1.7657238245010376
    3. 'com' → logprob: -3.265723943710327
    4. 'c' → logprob: -4.515723705291748
    5. 'each' → logprob: -5.515723705291748
    6. ' la' → logprob: -6.015723705291748
    7. 'leur' → logprob: -6.265723705291748
    8. 'une' → logprob: -6.640723705291748
    9. 'ch' → logprob: -7.140723705291748
    10. ' chaque' → logprob: -7.515723705291748

Token 653: ' compos' (ID: 14635)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.18510928750038147
    2. 'comp' → logprob: -2.0601093769073486
    3. ' compos' → logprob: -3.3101093769073486
    4. ' comp' → logprob: -6.0601091384887695
    5. 'component' → logprob: -6.4351091384887695
    6. '```' → logprob: -8.68510913848877
    7. '#' → logprob: -8.93510913848877
    8. ' la' → logprob: -9.43510913848877
    9. '[' → logprob: -9.43510913848877
    10. 'la' → logprob: -9.56010913848877

Token 654: 'ante' (ID: 2116)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.0272417850792408
    2. 'onent' → logprob: -5.1522417068481445
    3. 'onte' → logprob: -5.4022417068481445
    4. 'ponent' → logprob: -5.6522417068481445
    5. 'ponente' → logprob: -5.7772417068481445
    6. 'ont' → logprob: -6.0272417068481445
    7. 'onn' → logprob: -6.0272417068481445
    8. 'pon' → logprob: -6.7772417068481445
    9. 'ente' → logprob: -7.0272417068481445
    10. 'ante' → logprob: -7.0272417068481445

Token 655: '
' (ID: 198)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.801395058631897
    2. 'edges' → logprob: -1.551395058631897
    3. 'component' → logprob: -1.926395058631897
    4. '       ' → logprob: -2.1763949394226074
    5. 'components' → logprob: -3.3013949394226074
    6. 'internal' → logprob: -3.8013949394226074
    7. 'com' → logprob: -4.801394939422607
    8. 'edge' → logprob: -5.676394939422607
    9. '        
' → logprob: -6.551394939422607
    10. '
' → logprob: -6.801394939422607

Token 656: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42063403129577637
    2. 'internal' → logprob: -1.4206340312957764
    3. 'edges' → logprob: -2.6706340312957764
    4. 'components' → logprob: -4.9206342697143555
    5. 'component' → logprob: -5.2956342697143555
    6. '        
' → logprob: -5.4206342697143555
    7. 'for' → logprob: -5.5456342697143555
    8. 'comp' → logprob: -5.6706342697143555
    9. 'filtered' → logprob: -5.6706342697143555
    10. ' edges' → logprob: -7.5456342697143555

Token 657: ' adj' (ID: 20251)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.5519059300422668
    2. 'component' → logprob: -2.051905870437622
    3. 'com' → logprob: -2.301905870437622
    4. 'edges' → logprob: -2.551905870437622
    5. 'internal' → logprob: -2.676905870437622
    6. 'components' → logprob: -3.676905870437622
    7. 'edge' → logprob: -4.801906108856201
    8. '       ' → logprob: -4.926906108856201
    9. 'in' → logprob: -6.176906108856201
    10. 'filtered' → logprob: -6.426906108856201

Token 658: '_comp' (ID: 34754)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08897697925567627
    2. '=' → logprob: -2.4639768600463867
    3. 's' → logprob: -11.713976860046387
    4. 'acency' → logprob: -11.838976860046387
    5. '=[]' → logprob: -12.588976860046387
    6. '=[' → logprob: -12.713976860046387
    7. '   ' → logprob: -12.838976860046387
    8. 'acent' → logprob: -12.838976860046387
    9. 'ects' → logprob: -13.463976860046387
    10. '[' → logprob: -13.463976860046387

Token 659: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07398572564125061
    2. '=' → logprob: -2.6989858150482178
    3. '[' → logprob: -6.323985576629639
    4. '=[' → logprob: -7.073985576629639
    5. '=[]' → logprob: -7.448985576629639
    6. 'acent' → logprob: -8.073986053466797
    7. '=[[' → logprob: -8.698986053466797
    8. 'acency' → logprob: -9.323986053466797
    9. '   ' → logprob: -9.823986053466797
    10. '=[]
' → logprob: -9.948986053466797

Token 660: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.722539834911004e-05
    2. ' [[]' → logprob: -9.250097274780273
    3. '{' → logprob: -13.875097274780273
    4. '[[' → logprob: -16.750097274780273
    5. '[{' → logprob: -17.625097274780273
    6. '[len' → logprob: -17.750097274780273
    7. '   ' → logprob: -17.875097274780273
    8. ' [' → logprob: -18.000097274780273
    9. 'default' → logprob: -18.625097274780273
    10. 'collections' → logprob: -19.125097274780273

Token 661: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006745093036442995
    2. ' for' → logprob: -5.006744861602783
    3. 'comp' → logprob: -10.631745338439941
    4. '   ' → logprob: -12.881745338439941
    5. '(comp' → logprob: -13.381745338439941
    6. '       ' → logprob: -15.131745338439941
    7. '[' → logprob: -15.256745338439941
    8. '           ' → logprob: -15.381745338439941
    9. ' ' → logprob: -15.881745338439941
    10. '=' → logprob: -16.006744384765625

Token 662: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.024524342268705368
    2. 'range' → logprob: -4.149524211883545
    3. '_comp' → logprob: -5.524524211883545
    4. ' range' → logprob: -5.774524211883545
    5. '_range' → logprob: -6.899524211883545
    6. 'comp' → logprob: -8.274524688720703
    7. ' _' → logprob: -10.024524688720703
    8. '(range' → logprob: -11.274524688720703
    9. '(comp' → logprob: -11.649524688720703
    10. '_i' → logprob: -11.899524688720703

Token 663: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007470945129171014
    2. ' range' → logprob: -7.250747203826904
    3. 'comp' → logprob: -10.750746726989746
    4. 'in' → logprob: -11.125746726989746
    5. '(range' → logprob: -14.250746726989746
    6. '_' → logprob: -16.125747680664062
    7. '_range' → logprob: -16.250747680664062
    8. ' in' → logprob: -16.500747680664062
    9. '	range' → logprob: -18.625747680664062
    10. '   ' → logprob: -18.625747680664062

Token 664: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.0100624169572257e-05
    2. ' range' → logprob: -11.250020027160645
    3. 'comp' → logprob: -11.875020027160645
    4. '(range' → logprob: -16.50002098083496
    5. '
' → logprob: -19.50002098083496
    6. 'rang' → logprob: -19.87502098083496
    7. 'com' → logprob: -20.00002098083496
    8. '(comp' → logprob: -20.75002098083496
    9. '	range' → logprob: -20.87502098083496
    10. 'Range' → logprob: -21.00002098083496

Token 665: '(comp' (ID: 60272)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.00012558852904476225
    2. '(comp' → logprob: -9.000125885009766
    3. ' comp' → logprob: -13.125125885009766
    4. '(' → logprob: -16.875125885009766
    5. '	comp' → logprob: -17.000125885009766
    6. '
' → logprob: -18.250125885009766
    7. '   ' → logprob: -18.875125885009766
    8. 'com' → logprob: -19.375125885009766
    9. 'c' → logprob: -20.125125885009766
    10. 'compl' → logprob: -20.375125885009766

Token 666: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -6.301394023466855e-05
    2. 'ount' → logprob: -9.750062942504883
    3. 'count' → logprob: -12.875062942504883
    4. 'unt' → logprob: -13.750062942504883
    5. '_map' → logprob: -14.875062942504883
    6. '_comp' → logprob: -15.125062942504883
    7. 'ent' → logprob: -16.250062942504883
    8. 'oint' → logprob: -16.500062942504883
    9. '_' → logprob: -16.500062942504883
    10. 'ont' → logprob: -16.750062942504883

Token 667: ')]
' (ID: 11587)
  Prédit: ')]
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]
' → logprob: -0.3332098424434662
    2. ')]' → logprob: -1.7082098722457886
    3. ']
' → logprob: -2.833209753036499
    4. ']' → logprob: -3.208209753036499
    5. ')' → logprob: -6.583209991455078
    6. ')]
' → logprob: -7.208209991455078
    7. '       ' → logprob: -8.208209991455078
    8. ']
' → logprob: -8.333209991455078
    9. ')]

' → logprob: -8.833209991455078
    10. ')
' → logprob: -9.083209991455078

Token 668: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43823763728141785
    2. 'for' → logprob: -1.0632376670837402
    3. ' for' → logprob: -4.68823766708374
    4. '   ' → logprob: -9.063237190246582
    5. '	for' → logprob: -9.438237190246582
    6. '        
' → logprob: -10.313237190246582
    7. '<|end|>' → logprob: -10.438237190246582
    8. '```' → logprob: -11.188237190246582
    9. '
' → logprob: -12.563237190246582
    10. ')' → logprob: -13.188237190246582

Token 669: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003619217313826084
    2. '       ' → logprob: -8.250362396240234
    3. ' for' → logprob: -9.250362396240234
    4. '
' → logprob: -13.125362396240234
    5. '```' → logprob: -13.875362396240234
    6. '        
' → logprob: -14.125362396240234
    7. '   ' → logprob: -14.750362396240234
    8. '	for' → logprob: -14.750362396240234
    9. '``' → logprob: -17.750362396240234
    10. ' 
' → logprob: -17.750362396240234

Token 670: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -9.412610233994201e-05
    2. '       ' → logprob: -9.375094413757324
    3. ' for' → logprob: -12.125094413757324
    4. 'from' → logprob: -14.000094413757324
    5. 'edge' → logprob: -14.125094413757324
    6. 'edges' → logprob: -14.125094413757324
    7. '   ' → logprob: -14.500094413757324
    8. '
' → logprob: -14.625094413757324
    9. '```' → logprob: -15.375094413757324
    10. '        
' → logprob: -15.750094413757324

Token 671: ' construit' (ID: 119882)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004893350414931774
    2. ' for' → logprob: -6.0048933029174805
    3. 'continue' → logprob: -7.0048933029174805
    4. '       ' → logprob: -7.2548933029174805
    5. '=' → logprob: -7.7548933029174805
    6. '#' → logprob: -9.12989330291748
    7. '   ' → logprob: -10.50489330291748
    8. ' =' → logprob: -10.62989330291748
    9. '
' → logprob: -10.75489330291748
    10. '...' → logprob: -11.00489330291748

Token 672: ' aussi' (ID: 9894)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1747646927833557
    2. 'a' → logprob: -2.549764633178711
    3. ' for' → logprob: -3.174764633178711
    4. ' a' → logprob: -4.424764633178711
    5. '       ' → logprob: -4.674764633178711
    6. 'adj' → logprob: -4.799764633178711
    7. '{}' → logprob: -6.424764633178711
    8. '{' → logprob: -6.799764633178711
    9. 'edges' → logprob: -7.049764633178711
    10. 'edge' → logprob: -7.424764633178711

Token 673: ' une' (ID: 2463)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7860952019691467
    2. 'for' → logprob: -1.661095142364502
    3. 'adj' → logprob: -2.161095142364502
    4. 'edge' → logprob: -2.786095142364502
    5. ' a' → logprob: -2.786095142364502
    6. 'comp' → logprob: -3.536095142364502
    7. 'edges' → logprob: -3.911095142364502
    8. 'cost' → logprob: -4.161095142364502
    9. ' for' → logprob: -4.536095142364502
    10. 'default' → logprob: -4.536095142364502

Token 674: ' structure' (ID: 8866)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.6387136578559875
    2. 'set' → logprob: -2.2637135982513428
    3. 'adj' → logprob: -2.5137135982513428
    4. 'for' → logprob: -2.6387135982513428
    5. 'edge' → logprob: -2.6387135982513428
    6. 'comp' → logprob: -3.3887135982513428
    7. 'edges' → logprob: -3.7637135982513428
    8. 'dict' → logprob: -3.8887135982513428
    9. 'degree' → logprob: -4.013713836669922
    10. 'deg' → logprob: -4.513713836669922

Token 675: ' par' (ID: 686)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.3249267339706421
    2. 'de' → logprob: -2.4499268531799316
    3. 'pour' → logprob: -2.5749268531799316
    4. 'd' → logprob: -2.9499268531799316
    5. 'for' → logprob: -2.9499268531799316
    6. 'qui' → logprob: -5.949926853179932
    7. 'edges' → logprob: -6.574926853179932
    8. 'des' → logprob: -6.574926853179932
    9. 'default' → logprob: -6.949926853179932
    10. 'par' → logprob: -7.574926853179932

Token 676: ' compos' (ID: 14635)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.29940474033355713
    2. 'com' → logprob: -1.4244047403335571
    3. 'component' → logprob: -4.049404621124268
    4. 'u' → logprob: -9.299405097961426
    5. 'for' → logprob: -9.299405097961426
    6. 'index' → logprob: -9.424405097961426
    7. 'adj' → logprob: -9.799405097961426
    8. 'components' → logprob: -10.549405097961426
    9. 'import' → logprob: -10.549405097961426
    10. 'edge' → logprob: -10.674405097961426

Token 677: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.4869821071624756
    2. 'ente' → logprob: -1.3619821071624756
    3. 'ent' → logprob: -3.1119821071624756
    4. 'ponente' → logprob: -3.9869821071624756
    5. 'ponent' → logprob: -4.361982345581055
    6. '#' → logprob: -4.361982345581055
    7. 'p' → logprob: -4.736982345581055
    8. 'on' → logprob: -5.111982345581055
    9. 'onte' → logprob: -5.361982345581055
    10. 'pon' → logprob: -5.361982345581055

Token 678: ' list' (ID: 1562)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6196625828742981
    2. ' for' → logprob: -1.2446625232696533
    3. '
' → logprob: -2.4946625232696533
    4. 'edges' → logprob: -3.1196625232696533
    5. '       ' → logprob: -3.8696625232696533
    6. 'edge' → logprob: -4.744662761688232
    7. ' edges' → logprob: -5.744662761688232
    8. ' =' → logprob: -5.869662761688232
    9. 'comp' → logprob: -5.869662761688232
    10. '_edges' → logprob: -6.619662761688232

Token 679: 'ant' (ID: 493)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9534087181091309
    2. 'es' → logprob: -1.2034087181091309
    3. 'of' → logprob: -2.578408718109131
    4. '_edges' → logprob: -3.078408718109131
    5. '[]' → logprob: -3.578408718109131
    6. ' =' → logprob: -3.828408718109131
    7. 'for' → logprob: -3.828408718109131
    8. '_of' → logprob: -3.953408718109131
    9. '
' → logprob: -4.078408718109131
    10. 'e' → logprob: -4.078408718109131

Token 680: ' edges' (ID: 22569)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.09502888470888138
    2. 'for' → logprob: -3.595028877258301
    3. ' les' → logprob: -4.470028877258301
    4. 'edges' → logprob: -4.595028877258301
    5. 'des' → logprob: -4.845028877258301
    6. 'len' → logprob: -5.470028877258301
    7. 'pour' → logprob: -5.470028877258301
    8. 't' → logprob: -5.720028877258301
    9. '   ' → logprob: -5.845028877258301
    10. '       ' → logprob: -5.970028877258301

Token 681: ' :' (ID: 712)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7924655675888062
    2. 'for' → logprob: -1.1674655675888062
    3. '=' → logprob: -2.2924656867980957
    4. '=[]' → logprob: -3.4174656867980957
    5. '=[]
' → logprob: -3.9174656867980957
    6. '_comp' → logprob: -4.042465686798096
    7. '[]' → logprob: -4.542465686798096
    8. 's' → logprob: -4.917465686798096
    9. '_edges' → logprob: -4.917465686798096
    10. 'comp' → logprob: -5.042465686798096

Token 682: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.704220712184906
    2. ' for' → logprob: -0.829220712184906
    3. 'edges' → logprob: -3.704220771789551
    4. 'comp' → logprob: -4.454220771789551
    5. '       ' → logprob: -4.704220771789551
    6. ' edges' → logprob: -4.829220771789551
    7. 'edge' → logprob: -4.954220771789551
    8. ' comp' → logprob: -5.954220771789551
    9. 'com' → logprob: -6.704220771789551
    10. ' edge' → logprob: -6.829220771789551

Token 683: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0035621810238808393
    2. 'u' → logprob: -7.003561973571777
    3. '(cost' → logprob: -7.128561973571777
    4. ' cost' → logprob: -7.628561973571777
    5. ')' → logprob: -7.753561973571777
    6. 'co' → logprob: -9.003561973571777
    7. '(u' → logprob: -9.003561973571777
    8. '   ' → logprob: -9.253561973571777
    9. 'c' → logprob: -9.503561973571777
    10. '
' → logprob: -9.503561973571777

Token 684: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.219262624857947e-05
    2. ' ,' → logprob: -10.500072479248047
    3. ',u' → logprob: -10.625072479248047
    4. ')' → logprob: -12.500072479248047
    5. ',
' → logprob: -12.625072479248047
    6. 's' → logprob: -12.625072479248047
    7. '   ' → logprob: -14.125072479248047
    8. 'u' → logprob: -14.250072479248047
    9. ',user' → logprob: -14.250072479248047
    10. ',index' → logprob: -14.250072479248047

Token 685: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.030118614435195923
    2. ' u' → logprob: -3.530118703842163
    3. ')' → logprob: -8.780118942260742
    4. '   ' → logprob: -9.155118942260742
    5. ',' → logprob: -10.155118942260742
    6. ',u' → logprob: -11.280118942260742
    7. '       ' → logprob: -11.780118942260742
    8. '	u' → logprob: -11.780118942260742
    9. 'adj' → logprob: -12.655118942260742
    10. '_,' → logprob: -12.717618942260742

Token 686: '',' (ID: 787)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006214152672328055
    2. ',v' → logprob: -8.125621795654297
    3. ' ,' → logprob: -9.000621795654297
    4. ')' → logprob: -9.125621795654297
    5. 'v' → logprob: -10.000621795654297
    6. '),' → logprob: -11.250621795654297
    7. ',u' → logprob: -11.375621795654297
    8. ',
' → logprob: -12.000621795654297
    9. '       ' → logprob: -12.500621795654297
    10. 'u' → logprob: -13.250621795654297

Token 687: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.03027499094605446
    2. ' v' → logprob: -3.5302751064300537
    3. 'u' → logprob: -7.780274868011475
    4. ' u' → logprob: -10.405275344848633
    5. ')' → logprob: -11.280275344848633
    6. '   ' → logprob: -11.530275344848633
    7. ',' → logprob: -11.530275344848633
    8. ',v' → logprob: -12.217775344848633
    9. '	v' → logprob: -12.217775344848633
    10. 'idx' → logprob: -12.530275344848633

Token 688: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02043209969997406
    2. ')
' → logprob: -4.020431995391846
    3. ',' → logprob: -6.270431995391846
    4. '),' → logprob: -9.145432472229004
    5. '):
' → logprob: -9.270432472229004
    6. 'x' → logprob: -10.645432472229004
    7. 's' → logprob: -10.895432472229004
    8. 'e' → logprob: -11.270432472229004
    9. ' )' → logprob: -11.270432472229004
    10. ')

' → logprob: -11.770432472229004

Token 689: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6052505970001221
    2. ' for' → logprob: -1.480250597000122
    3. 'for' → logprob: -1.605250597000122
    4. '
' → logprob: -3.855250597000122
    5. ')' → logprob: -6.605250358581543
    6. ',' → logprob: -6.855250358581543
    7. '        
' → logprob: -7.230250358581543
    8. '   ' → logprob: -7.855250358581543
    9. ')
' → logprob: -7.980250358581543
    10. '<|end|>' → logprob: -8.855250358581543

Token 690: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3114478588104248
    2. ' for' → logprob: -1.5614478588104248
    3. '       ' → logprob: -3.061447858810425
    4. 'edges' → logprob: -4.811448097229004
    5. '        
' → logprob: -7.561448097229004
    6. ' edges' → logprob: -7.686448097229004
    7. '```' → logprob: -7.936448097229004
    8. '
' → logprob: -8.061448097229004
    9. '[
' → logprob: -8.686448097229004
    10. '   ' → logprob: -8.936448097229004

Token 691: ' où' (ID: 15113)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31394386291503906
    2. 'comp' → logprob: -2.063943862915039
    3. 'edges' → logprob: -2.188943862915039
    4. 'edge' → logprob: -3.813943862915039
    5. '       ' → logprob: -5.438943862915039
    6. 'component' → logprob: -6.438943862915039
    7. ' for' → logprob: -7.063943862915039
    8. 'com' → logprob: -8.188943862915039
    9. '   ' → logprob: -8.313943862915039
    10. 'internal' → logprob: -8.438943862915039

Token 692: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.06251643598079681
    2. 'comp' → logprob: -3.687516450881958
    3. '(u' → logprob: -4.187516212463379
    4. ' u' → logprob: -4.687516212463379
    5. 'for' → logprob: -6.187516212463379
    6. 'cost' → logprob: -6.687516212463379
    7. ' comp' → logprob: -6.937516212463379
    8. ' (' → logprob: -7.187516212463379
    9. 'adj' → logprob: -7.437516212463379
    10. 'idx' → logprob: -7.687516212463379

Token 693: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.583519697189331
    2. ',' → logprob: -1.458519697189331
    3. '_comp' → logprob: -2.958519697189331
    4. ''' → logprob: -2.958519697189331
    5. '_,' → logprob: -2.958519697189331
    6. ''_' → logprob: -4.08351993560791
    7. '_adj' → logprob: -4.20851993560791
    8. '_prime' → logprob: -5.08351993560791
    9. 'comp' → logprob: -5.58351993560791
    10. 'n' → logprob: -6.45851993560791

Token 694: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.28188037872314453
    2. ' v' → logprob: -1.4068803787231445
    3. ' u' → logprob: -8.531880378723145
    4. 'u' → logprob: -8.906880378723145
    5. ',' → logprob: -9.156880378723145
    6. '
' → logprob: -9.656880378723145
    7. ',v' → logprob: -10.031880378723145
    8. '=' → logprob: -10.281880378723145
    9. ' =' → logprob: -10.781880378723145
    10. '#' → logprob: -10.906880378723145

Token 695: ''' (ID: 6)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9296249747276306
    2. '',' → logprob: -0.9296249747276306
    3. ''' → logprob: -1.6796250343322754
    4. ')' → logprob: -5.304625034332275
    5. ' =' → logprob: -5.679625034332275
    6. '=' → logprob: -5.929625034332275
    7. '')' → logprob: -5.929625034332275
    8. '_comp' → logprob: -6.179625034332275
    9. '_' → logprob: -6.679625034332275
    10. '_,' → logprob: -6.929625034332275

Token 696: ' indices' (ID: 30378)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6084924340248108
    2. ',' → logprob: -1.358492374420166
    3. '=' → logprob: -2.233492374420166
    4. ' sont' → logprob: -3.358492374420166
    5. ' are' → logprob: -3.608492374420166
    6. ' and' → logprob: -4.233492374420166
    7. ' et' → logprob: -5.608492374420166
    8. 'et' → logprob: -6.108492374420166
    9. 's' → logprob: -6.233492374420166
    10. 'are' → logprob: -6.983492374420166

Token 697: ' locaux' (ID: 76277)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -1.464433193206787
    2. ' =' → logprob: -1.964433193206787
    3. 'intern' → logprob: -2.089433193206787
    4. 'dans' → logprob: -2.089433193206787
    5. '=' → logprob: -3.089433193206787
    6. 'local' → logprob: -3.339433193206787
    7. ' dans' → logprob: -3.339433193206787
    8. '_comp' → logprob: -3.589433193206787
    9. 'u' → logprob: -3.589433193206787
    10. 'inter' → logprob: -3.964433193206787

Token 698: ' dans' (ID: 2671)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6356161832809448
    2. 'for' → logprob: -1.6356161832809448
    3. '=' → logprob: -2.2606163024902344
    4. ' for' → logprob: -3.1356163024902344
    5. ' in' → logprob: -3.5106163024902344
    6. 'in' → logprob: -3.5106163024902344
    7. '_edges' → logprob: -4.135616302490234
    8. ')' → logprob: -4.510616302490234
    9. ',' → logprob: -4.635616302490234
    10. '   ' → logprob: -4.885616302490234

Token 699: ' la' (ID: 557)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.061972279101610184
    2. 'la' → logprob: -3.3119723796844482
    3. 'comp' → logprob: -4.186972141265869
    4. ' comps' → logprob: -5.561972141265869
    5. ' la' → logprob: -6.936972141265869
    6. 'adj' → logprob: -7.061972141265869
    7. 'the' → logprob: -7.186972141265869
    8. 'l' → logprob: -7.561972141265869
    9. 'c' → logprob: -7.686972141265869
    10. '   ' → logprob: -8.311972618103027

Token 700: ' compos' (ID: 14635)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.017495574429631233
    2. 'comp' → logprob: -4.267495632171631
    3. 'component' → logprob: -6.267495632171631
    4. 'range' → logprob: -7.642495632171631
    5. '   ' → logprob: -8.392495155334473
    6. ' compos' → logprob: -8.767495155334473
    7. 'composition' → logprob: -9.017495155334473
    8. '
' → logprob: -9.517495155334473
    9. '       ' → logprob: -9.642495155334473
    10. 'for' → logprob: -9.767495155334473

Token 701: 'ante' (ID: 2116)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.2794070541858673
    2. 'ante' → logprob: -2.779407024383545
    3. 'ponent' → logprob: -3.529407024383545
    4. 'ponente' → logprob: -3.779407024383545
    5. 'pos' → logprob: -3.904407024383545
    6. 'nte' → logprob: -4.154407024383545
    7. 'pte' → logprob: -4.529407024383545
    8. 'ps' → logprob: -4.779407024383545
    9. 'ents' → logprob: -4.779407024383545
    10. 'ponents' → logprob: -5.029407024383545

Token 702: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22758883237838745
    2. 'for' → logprob: -1.9775888919830322
    3. ' for' → logprob: -2.8525888919830322
    4. '   ' → logprob: -5.602588653564453
    5. '
' → logprob: -6.352588653564453
    6. '        
' → logprob: -7.977588653564453
    7. ',' → logprob: -7.977588653564453
    8. 'edges' → logprob: -7.977588653564453
    9. ' edges' → logprob: -8.477588653564453
    10. ',
' → logprob: -9.602588653564453

Token 703: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17319709062576294
    2. ' for' → logprob: -2.173197031021118
    3. 'for' → logprob: -3.298197031021118
    4. '   ' → logprob: -5.548197269439697
    5. '        
' → logprob: -6.173197269439697
    6. '    
' → logprob: -7.548197269439697
    7. '  
' → logprob: -8.048196792602539
    8. '
' → logprob: -8.298196792602539
    9. ' 
' → logprob: -8.548196792602539
    10. '<|end|>' → logprob: -8.673196792602539

Token 704: ' comp' (ID: 1050)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08948679268360138
    2. 'local' → logprob: -3.464486837387085
    3. 'comp' (adapté à ' comp') → logprob: -3.464486837387085
    4. 'edge' → logprob: -4.714486598968506
    5. 'global' → logprob: -5.464486598968506
    6. '       ' → logprob: -5.464486598968506
    7. 'edges' → logprob: -5.964486598968506
    8. 'index' → logprob: -7.214486598968506
    9. '   ' → logprob: -7.589486598968506
    10. ' for' → logprob: -7.714486598968506

Token 705: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.0027618412859737873
    2. '_edge' → logprob: -6.1277618408203125
    3. 'edges' → logprob: -8.002761840820312
    4. '_sizes' → logprob: -10.377761840820312
    5. '_' → logprob: -10.627761840820312
    6. '_indices' → logprob: -10.627761840820312
    7. '_to' → logprob: -10.877761840820312
    8. 'd' → logprob: -11.002761840820312
    9. 'edge' → logprob: -11.252761840820312
    10. '
' → logprob: -11.377761840820312

Token 706: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25198349356651306
    2. ' =' → logprob: -1.5019835233688354
    3. '=[]' → logprob: -10.001983642578125
    4. '[' → logprob: -12.251983642578125
    5. 's' → logprob: -13.751983642578125
    6. '=[' → logprob: -13.876983642578125
    7. '   ' → logprob: -14.626983642578125
    8. '.append' → logprob: -14.626983642578125
    9. '=[]
' → logprob: -14.876983642578125
    10. ',' → logprob: -15.501983642578125

Token 707: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0004311460361350328
    2. ' [[]' → logprob: -7.750431060791016
    3. '[[' → logprob: -14.625431060791016
    4. ' [' → logprob: -17.375431060791016
    5. '   ' → logprob: -18.125431060791016
    6. '[len' → logprob: -19.250431060791016
    7. '[]' → logprob: -19.250431060791016
    8. '[s' → logprob: -19.875431060791016
    9. '[['' → logprob: -21.250431060791016
    10. '{' → logprob: -21.500431060791016

Token 708: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04859338700771332
    2. ' for' → logprob: -3.048593282699585
    3. '[' → logprob: -13.048593521118164
    4. ']' → logprob: -13.673593521118164
    5. '(comp' → logprob: -14.423593521118164
    6. ')' → logprob: -14.798593521118164
    7. '
' → logprob: -14.923593521118164
    8. '   ' → logprob: -15.173593521118164
    9. '	for' → logprob: -15.173593521118164
    10. 'comp' → logprob: -15.423593521118164

Token 709: ' _' (ID: 1175)
  Prédit: '(comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(comp' → logprob: -0.033140599727630615
    2. 'range' → logprob: -3.5331406593322754
    3. 'comp' → logprob: -6.283140659332275
    4. ' range' → logprob: -7.408140659332275
    5. ' (' → logprob: -7.658140659332275
    6. '(range' → logprob: -8.283140182495117
    7. '(len' → logprob: -8.783140182495117
    8. 'len' → logprob: -11.158140182495117
    9. '(' → logprob: -11.658140182495117
    10. ' comp' → logprob: -12.283140182495117

Token 710: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002680771518498659
    2. ' range' → logprob: -6.002680778503418
    3. 'in' → logprob: -9.127680778503418
    4. '(range' → logprob: -9.627680778503418
    5. 'comp' → logprob: -10.502680778503418
    6. ' in' → logprob: -13.502680778503418
    7. '(comp' → logprob: -14.127680778503418
    8. '(' → logprob: -15.002680778503418
    9. '
' → logprob: -15.752680778503418
    10. 'ange' → logprob: -16.0026798248291

Token 711: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -9.674858301877975e-05
    2. ' range' → logprob: -9.250096321105957
    3. 'comp' → logprob: -14.375096321105957
    4. '(range' → logprob: -17.375097274780273
    5. '
' → logprob: -19.125097274780273
    6. 'rang' → logprob: -19.875097274780273
    7. '   ' → logprob: -20.000097274780273
    8. 'count' → logprob: -20.750097274780273
    9. '	range' → logprob: -21.000097274780273
    10. '       ' → logprob: -21.125097274780273

Token 712: '(comp' (ID: 60272)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -1.4498052223643754e-05
    2. '(comp' → logprob: -11.250014305114746
    3. ' comp' → logprob: -13.500014305114746
    4. '	comp' → logprob: -19.000015258789062
    5. '(' → logprob: -19.625015258789062
    6. '   ' → logprob: -19.750015258789062
    7. '
' → logprob: -19.750015258789062
    8. 'range' → logprob: -21.250015258789062
    9. 'len' → logprob: -21.750015258789062
    10. '       ' → logprob: -21.875015258789062

Token 713: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.00018947436183225363
    2. 'count' → logprob: -8.625189781188965
    3. 'ount' → logprob: -12.125189781188965
    4. 's' → logprob: -12.875189781188965
    5. '_comp' → logprob: -14.500189781188965
    6. '_COUNT' → logprob: -14.750189781188965
    7. 'Count' → logprob: -15.375189781188965
    8. ')' → logprob: -16.25018882751465
    9. '	count' → logprob: -16.37518882751465
    10. ' count' → logprob: -16.37518882751465

Token 714: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04776136577129364
    2. ']
' → logprob: -3.7977614402770996
    3. ')]' → logprob: -4.2977614402771
    4. ']

' → logprob: -4.7977614402771
    5. ')' → logprob: -6.1727614402771
    6. ']
' → logprob: -8.922760963439941
    7. '   ' → logprob: -10.172760963439941
    8. ']

' → logprob: -10.547760963439941
    9. ')]
' → logprob: -10.672760963439941
    10. ')]

' → logprob: -10.672760963439941

Token 715: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5718157291412354
    2. '       ' → logprob: -0.9468157291412354
    3. ' for' → logprob: -3.0718157291412354
    4. '   ' → logprob: -8.321815490722656
    5. '        
' → logprob: -8.321815490722656
    6. '<|end|>' → logprob: -8.321815490722656
    7. '```' → logprob: -8.946815490722656
    8. '	for' → logprob: -9.446815490722656
    9. '
' → logprob: -9.446815490722656
    10. ')' → logprob: -9.571815490722656

Token 716: ' pos' (ID: 1253)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0050155287608504295
    2. '       ' → logprob: -5.3800153732299805
    3. ' for' → logprob: -8.25501537322998
    4. 'index' → logprob: -9.50501537322998
    5. 'edge' → logprob: -11.00501537322998
    6. 'node' → logprob: -11.75501537322998
    7. '```' → logprob: -11.88001537322998
    8. 'idx' → logprob: -12.00501537322998
    9. 'local' → logprob: -12.13001537322998
    10. 'edges' → logprob: -12.63001537322998

Token 717: '_in' (ID: 2267)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8028320670127869
    2. '=' → logprob: -1.8028321266174316
    3. 't' → logprob: -2.0528321266174316
    4. '_edges' → logprob: -2.1778321266174316
    5. 'ition' → logprob: -3.1778321266174316
    6. 's' → logprob: -3.1778321266174316
    7. 'itions' → logprob: -3.3028321266174316
    8. 'sible' → logprob: -4.177832126617432
    9. 'edges' → logprob: -5.802832126617432
    10. 'tion' → logprob: -7.052832126617432

Token 718: '_comp' (ID: 34754)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.35779687762260437
    2. 'com' → logprob: -1.2327969074249268
    3. '[' → logprob: -6.107796669006348
    4. '_comp' → logprob: -6.357796669006348
    5. 'component' → logprob: -6.482796669006348
    6. ' comps' → logprob: -7.232796669006348
    7. ' =' → logprob: -7.357796669006348
    8. '=' → logprob: -7.357796669006348
    9. '_com' → logprob: -7.482796669006348
    10. '=com' → logprob: -8.357796669006348

Token 719: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12694227695465088
    2. ' =' → logprob: -2.1269421577453613
    3. '=[' → logprob: -11.87694263458252
    4. '[' → logprob: -12.50194263458252
    5. '=[]' → logprob: -13.25194263458252
    6. 's' → logprob: -14.25194263458252
    7. ')' → logprob: -15.37694263458252
    8. '   ' → logprob: -15.75194263458252
    9. '＝' → logprob: -16.001941680908203
    10. ']' → logprob: -16.001941680908203

Token 720: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00023476807109545916
    2. '[{' → logprob: -8.750234603881836
    3. ' [{}' → logprob: -9.750234603881836
    4. ' [' → logprob: -11.250234603881836
    5. '[[' → logprob: -12.500234603881836
    6. '[i' → logprob: -15.000234603881836
    7. '[-' → logprob: -15.125234603881836
    8. ' [[]' → logprob: -15.125234603881836
    9. '[]' → logprob: -16.750234603881836
    10. '[s' → logprob: -17.000234603881836

Token 721: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06593431532382965
    2. '[-' → logprob: -3.440934419631958
    3. '0' → logprob: -3.690934419631958
    4. 'None' → logprob: -5.440934181213379
    5. '[' → logprob: -6.440934181213379
    6. '{}' → logprob: -7.190934181213379
    7. ' -' → logprob: -9.565934181213379
    8. ' [' → logprob: -11.565934181213379
    9. '[]' → logprob: -11.565934181213379
    10. '(-' → logprob: -11.690934181213379

Token 722: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7830034494400024
    2. ']*' → logprob: -1.2830034494400024
    3. ' for' → logprob: -2.033003330230713
    4. 'for' → logprob: -2.033003330230713
    5. ']*(' → logprob: -5.783003330230713
    6. '0' → logprob: -8.533003807067871
    7. ')' → logprob: -9.283003807067871
    8. '   ' → logprob: -9.408003807067871
    9. ' ]' → logprob: -9.533003807067871
    10. '(n' → logprob: -9.908003807067871

Token 723: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -7.584239938296378e-06
    2. ' n' → logprob: -13.125007629394531
    3. '   ' → logprob: -13.250007629394531
    4. '```' → logprob: -13.625007629394531
    5. '(n' → logprob: -13.750007629394531
    6. '
' → logprob: -14.000007629394531
    7. 'len' → logprob: -16.00000762939453
    8. '       ' → logprob: -16.37500762939453
    9. ' ' → logprob: -16.62500762939453
    10. '	n' → logprob: -16.87500762939453

Token 724: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4606764018535614
    2. ' for' → logprob: -1.2106764316558838
    3. '
' → logprob: -2.710676431655884
    4. '       ' → logprob: -5.585676193237305
    5. '	for' → logprob: -7.960676193237305
    6. '   ' → logprob: -8.460676193237305
    7. '<|end|>' → logprob: -8.960676193237305
    8. ' 
' → logprob: -9.585676193237305
    9. '        
' → logprob: -10.710676193237305
    10. '[' → logprob: -11.085676193237305

Token 725: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5978754758834839
    2. ' for' → logprob: -0.8478754758834839
    3. '       ' → logprob: -4.597875595092773
    4. '<|end|>' → logprob: -4.722875595092773
    5. '	for' → logprob: -6.472875595092773
    6. '   ' → logprob: -7.222875595092773
    7. '
' → logprob: -8.847875595092773
    8. ')' → logprob: -8.972875595092773
    9. ' 
' → logprob: -9.597875595092773
    10. '<|end|>' → logprob: -10.097875595092773

Token 726: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0012422556756064296
    2. '       ' → logprob: -6.876242160797119
    3. ' for' → logprob: -8.501242637634277
    4. 'i' → logprob: -13.376242637634277
    5. '   ' → logprob: -13.501242637634277
    6. 'idx' → logprob: -13.751242637634277
    7. '	for' → logprob: -14.126242637634277
    8. 'pos' → logprob: -15.001242637634277
    9. 'index' → logprob: -15.126242637634277
    10. 'counter' → logprob: -15.251242637634277

Token 727: ' cid' (ID: 55379)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1551254391670227
    2. 'c' → logprob: -2.655125379562378
    3. 'comp' → logprob: -2.780125379562378
    4. 'idx' → logprob: -4.780125617980957
    5. 'cid' → logprob: -5.905125617980957
    6. 'ci' → logprob: -9.280125617980957
    7. 'cc' → logprob: -9.655125617980957
    8. ' i' → logprob: -10.030125617980957
    9. ' comp' → logprob: -11.030125617980957
    10. ' c' → logprob: -11.780125617980957

Token 728: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.48619750142097473
    2. 'in' → logprob: -1.7361974716186523
    3. ',' → logprob: -2.2361974716186523
    4. '[i' → logprob: -2.6111974716186523
    5. 'i' → logprob: -4.486197471618652
    6. '[' → logprob: -4.611197471618652
    7. '[c' → logprob: -6.111197471618652
    8. ' i' → logprob: -6.736197471618652
    9. '=' → logprob: -7.486197471618652
    10. '   ' → logprob: -7.611197471618652

Token 729: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005912677384912968
    2. ' range' → logprob: -5.630912780761719
    3. 'com' → logprob: -6.255912780761719
    4. 'comp' → logprob: -7.880912780761719
    5. '[' → logprob: -12.380912780761719
    6. 'edges' → logprob: -13.005912780761719
    7. 'c' → logprob: -14.130912780761719
    8. 'in' → logprob: -14.255912780761719
    9. ' ' → logprob: -14.380912780761719
    10. 'for' → logprob: -14.380912780761719

Token 730: '(comp' (ID: 60272)
  Prédit: '(comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(comp' → logprob: -0.06217953562736511
    2. 'comp' → logprob: -2.8121795654296875
    3. 'len' → logprob: -9.187179565429688
    4. ' comp' → logprob: -9.437179565429688
    5. '(len' → logprob: -10.562179565429688
    6. '(' → logprob: -13.312179565429688
    7. ' (' → logprob: -13.562179565429688
    8. '	comp' → logprob: -14.812179565429688
    9. '   ' → logprob: -15.687179565429688
    10. '(c' → logprob: -15.937179565429688

Token 731: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.00036084887688048184
    2. '_comp' → logprob: -9.000360488891602
    3. 'unt' → logprob: -9.125360488891602
    4. 'ount' → logprob: -9.500360488891602
    5. 'count' → logprob: -10.625360488891602
    6. '   ' → logprob: -11.875360488891602
    7. '       ' → logprob: -11.875360488891602
    8. 't' → logprob: -13.000360488891602
    9. '(comp' → logprob: -13.125360488891602
    10. 'comp' → logprob: -13.250360488891602

Token 732: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.05895749479532242
    2. ':
' → logprob: -3.808957576751709
    3. '):' → logprob: -4.058957576751709
    4. '       ' → logprob: -4.808957576751709
    5. ':' → logprob: -4.933957576751709
    6. '   ' → logprob: -6.933957576751709
    7. '           ' → logprob: -7.183957576751709
    8. ']:
' → logprob: -8.05895709991455
    9. ',' → logprob: -8.55895709991455
    10. ')' → logprob: -10.18395709991455

Token 733: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.30035635828971863
    2. '   ' → logprob: -1.425356388092041
    3. ' for' → logprob: -4.425356388092041
    4. '       ' → logprob: -5.050356388092041
    5. '	   ' → logprob: -7.675356388092041
    6. 'for' → logprob: -9.425355911254883
    7. '	       ' → logprob: -9.675355911254883
    8. '	for' → logprob: -12.050355911254883
    9. '               ' → logprob: -12.300355911254883
    10. '    ' → logprob: -12.425355911254883

Token 734: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1320623755455017
    2. ' for' → logprob: -2.1320624351501465
    3. '           ' → logprob: -6.1320624351501465
    4. '   ' → logprob: -6.2570624351501465
    5. '       ' → logprob: -7.3820624351501465
    6. 'pos' → logprob: -8.132061958312988
    7. 'idx' → logprob: -11.007061958312988
    8. 'com' → logprob: -11.132061958312988
    9. '	for' → logprob: -11.257061958312988
    10. 'count' → logprob: -11.257061958312988

Token 735: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.05470454320311546
    2. 'i' → logprob: -3.304704427719116
    3. 'j' → logprob: -4.304704666137695
    4. 'index' → logprob: -5.929704666137695
    5. ' idx' → logprob: -8.304704666137695
    6. 'ind' → logprob: -9.804704666137695
    7. 'k' → logprob: -11.179704666137695
    8. 'ix' → logprob: -11.554704666137695
    9. 'pos' → logprob: -11.929704666137695
    10. '
' → logprob: -11.929704666137695

Token 736: ',' (ID: 11)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.08516182005405426
    2. ' in' → logprob: -2.5851619243621826
    3. ',' → logprob: -5.0851616859436035
    4. 'i' → logprob: -10.710162162780762
    5. '   ' → logprob: -11.710162162780762
    6. ' ,' → logprob: -11.835162162780762
    7. '_in' → logprob: -12.460162162780762
    8. ' ' → logprob: -12.460162162780762
    9. ',in' → logprob: -12.835162162780762
    10. ' i' → logprob: -12.960162162780762

Token 737: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0636424794793129
    2. 'node' → logprob: -2.8136425018310547
    3. ' v' → logprob: -7.563642501831055
    4. 'u' → logprob: -7.563642501831055
    5. ' node' → logprob: -8.063642501831055
    6. 'vertex' → logprob: -8.063642501831055
    7. 'x' → logprob: -12.688642501831055
    8. ' vertex' → logprob: -13.313642501831055
    9. ' u' → logprob: -14.313642501831055
    10. 'vert' → logprob: -15.438642501831055

Token 738: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2813040614128113
    2. ' in' → logprob: -1.406304121017456
    3. ',' → logprob: -9.781304359436035
    4. ' ' → logprob: -10.281304359436035
    5. '	in' → logprob: -11.156304359436035
    6. 'v' → logprob: -11.906304359436035
    7. '   ' → logprob: -12.156304359436035
    8. '=' → logprob: -12.406304359436035
    9. 'i' → logprob: -12.656304359436035
    10. ',v' → logprob: -12.781304359436035

Token 739: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.011048054322600365
    2. ' enumerate' → logprob: -4.511047840118408
    3. '
' → logprob: -16.26104736328125
    4. 'enum' → logprob: -16.76104736328125
    5. '.enumer' → logprob: -17.63604736328125
    6. 'en' → logprob: -18.13604736328125
    7. 'enqueue' → logprob: -18.63604736328125
    8. '

' → logprob: -19.26104736328125
    9. '```' → logprob: -19.26104736328125
    10. 'Enumer' → logprob: -19.51104736328125

Token 740: '(com' (ID: 27868)
  Prédit: '(com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(com' → logprob: -0.004090393427759409
    2. 'com' → logprob: -5.504090309143066
    3. '(' → logprob: -11.629090309143066
    4. ' (' → logprob: -13.754090309143066
    5. '<com' → logprob: -14.254090309143066
    6. '   ' → logprob: -14.379090309143066
    7. '(
' → logprob: -14.879090309143066
    8. '(comp' → logprob: -16.629091262817383
    9. '       ' → logprob: -16.754091262817383
    10. '	com' → logprob: -17.004091262817383

Token 741: 'ps' (ID: 947)
  Prédit: 'ps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ps' → logprob: -5.676981345459353e-06
    2. '[' → logprob: -13.625005722045898
    3. 'pts' → logprob: -13.625005722045898
    4. 's' → logprob: -13.875005722045898
    5. 'p' → logprob: -14.375005722045898
    6. 'psc' → logprob: -15.000005722045898
    7. 'pcs' → logprob: -15.500005722045898
    8. 'com' → logprob: -15.875005722045898
    9. 'pske' → logprob: -16.0000057220459
    10. '```' → logprob: -16.0000057220459

Token 742: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -3.128163257315464e-07
    2. '(cid' → logprob: -16.375
    3. 'cid' → logprob: -17.5
    4. '   ' → logprob: -17.5
    5. '       ' → logprob: -18.125
    6. '[' → logprob: -18.25
    7. '
' → logprob: -18.75
    8. ')[' → logprob: -18.875
    9. '[
' → logprob: -19.0
    10. ')' → logprob: -19.25

Token 743: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.28130438923835754
    2. 'cid' → logprob: -1.5313043594360352
    3. 'd' → logprob: -3.781304359436035
    4. 'comp' → logprob: -6.781304359436035
    5. '(cid' → logprob: -6.906304359436035
    6. 'pid' → logprob: -7.156304359436035
    7. '_id' → logprob: -7.156304359436035
    8. '[id' → logprob: -7.281304359436035
    9. '[c' → logprob: -7.656304359436035
    10. '[' → logprob: -8.531304359436035

Token 744: ']):
' (ID: 51989)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1854885369539261
    2. '):' → logprob: -1.8104885816574097
    3. ']):' → logprob: -5.810488700866699
    4. ']):
' → logprob: -6.310488700866699
    5. ')' → logprob: -8.0604887008667
    6. '       ' → logprob: -8.4354887008667
    7. '           ' → logprob: -8.6854887008667
    8. ')]' → logprob: -9.5604887008667
    9. '):
' → logprob: -10.0604887008667
    10. '   ' → logprob: -10.5604887008667

Token 745: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0019621781539171934
    2. '           ' → logprob: -6.251962184906006
    3. '                   ' → logprob: -11.626961708068848
    4. '       ' → logprob: -12.001961708068848
    5. '	           ' → logprob: -12.376961708068848
    6. '   ' → logprob: -13.001961708068848
    7. '<|end|>' → logprob: -13.251961708068848
    8. '              ' → logprob: -13.251961708068848
    9. '		       ' → logprob: -13.501961708068848
    10. '
' → logprob: -13.626961708068848

Token 746: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.018159663304686546
    2. ' pos' → logprob: -4.768159866333008
    3. '               ' → logprob: -4.893159866333008
    4. '           ' → logprob: -6.518159866333008
    5. '                   ' → logprob: -7.893159866333008
    6. '   ' → logprob: -8.893159866333008
    7. 'v' → logprob: -11.643159866333008
    8. '[pos' → logprob: -13.393159866333008
    9. '       ' → logprob: -13.643159866333008
    10. '	pos' → logprob: -13.893159866333008

Token 747: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.0005612540990114212
    2. 'in' → logprob: -8.250561714172363
    3. '[c' → logprob: -9.375561714172363
    4. '[' → logprob: -9.375561714172363
    5. '[in' → logprob: -9.750561714172363
    6. '[v' → logprob: -10.875561714172363
    7. 'In' → logprob: -12.000561714172363
    8. 'cid' → logprob: -12.313061714172363
    9. '[id' → logprob: -12.500561714172363
    10. '[i' → logprob: -12.500561714172363

Token 748: '_comp' (ID: 34754)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.18047191202640533
    2. '_comp' → logprob: -1.8054718971252441
    3. '[v' → logprob: -7.805471897125244
    4. 'v' → logprob: -8.805472373962402
    5. ' comp' → logprob: -9.680472373962402
    6. '	comp' → logprob: -10.305472373962402
    7. '[' → logprob: -10.680472373962402
    8. 'com' → logprob: -10.930472373962402
    9. 'c' → logprob: -11.930472373962402
    10. '(comp' → logprob: -12.180472373962402

Token 749: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.00042543161544017494
    2. '[' → logprob: -8.375425338745117
    3. '[c' → logprob: -8.750425338745117
    4. '[pos' → logprob: -10.500425338745117
    5. '=v' → logprob: -13.375425338745117
    6. '[
' → logprob: -13.375425338745117
    7. '[val' → logprob: -13.375425338745117
    8. '=' → logprob: -13.875425338745117
    9. '[var' → logprob: -14.125425338745117
    10. ' [' → logprob: -14.375425338745117

Token 750: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0024801772087812424
    2. ' =' → logprob: -6.0024800300598145
    3. ']=' → logprob: -12.877480506896973
    4. ']' → logprob: -13.877480506896973
    5. '=
' → logprob: -14.377480506896973
    6. '=v' → logprob: -15.502480506896973
    7. ')=' → logprob: -15.877480506896973
    8. ')' → logprob: -17.002479553222656
    9. '=

' → logprob: -17.252479553222656
    10. '＝' → logprob: -18.002479553222656

Token 751: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00317783304490149
    2. ' =' → logprob: -5.753177642822266
    3. '=
' → logprob: -16.503177642822266
    4. ')=' → logprob: -18.503177642822266
    5. '=int' → logprob: -18.628177642822266
    6. '=v' → logprob: -19.003177642822266
    7. '＝' → logprob: -19.503177642822266
    8. ')' → logprob: -19.628177642822266
    9. '=end' → logprob: -19.753177642822266
    10. '=

' → logprob: -19.753177642822266

Token 752: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0015023599844425917
    2. ' idx' → logprob: -6.501502513885498
    3. '	idx' → logprob: -17.251502990722656
    4. '[idx' → logprob: -18.126502990722656
    5. '(idx' → logprob: -18.626502990722656
    6. 'index' → logprob: -18.876502990722656
    7. '   ' → logprob: -19.626502990722656
    8. ' ' → logprob: -20.251502990722656
    9. '_idx' → logprob: -21.626502990722656
    10. '
' → logprob: -21.751502990722656

Token 753: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6317970752716064
    2. '<|end|>' → logprob: -1.3817970752716064
    3. '
' → logprob: -1.6317970752716064
    4. '<|end|>' → logprob: -4.756796836853027
    5. ' for' → logprob: -4.881796836853027
    6. 'for' → logprob: -5.631796836853027
    7. '        
' → logprob: -7.256796836853027
    8. '	for' → logprob: -8.506796836853027
    9. '   ' → logprob: -8.631796836853027
    10. '           ' → logprob: -9.131796836853027

Token 754: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005298742558807135
    2. 'for' → logprob: -6.005298614501953
    3. ' for' → logprob: -6.130298614501953
    4. '<|end|>' → logprob: -7.630298614501953
    5. '```' → logprob: -9.505298614501953
    6. '   ' → logprob: -10.130298614501953
    7. '           ' → logprob: -11.255298614501953
    8. '<|end|>' → logprob: -11.255298614501953
    9. ')' → logprob: -13.005298614501953
    10. '
' → logprob: -13.255298614501953

Token 755: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.10027308762073517
    2. '       ' → logprob: -2.3502731323242188
    3. ' for' → logprob: -9.725273132324219
    4. '   ' → logprob: -13.100273132324219
    5. '        
' → logprob: -13.225273132324219
    6. '	for' → logprob: -13.600273132324219
    7. 'from' → logprob: -14.975273132324219
    8. '
' → logprob: -14.975273132324219
    9. '```' → logprob: -15.100273132324219
    10. '#' → logprob: -15.225273132324219

Token 756: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.002884402871131897
    2. ' cost' → logprob: -6.002884387969971
    3. '(cost' → logprob: -8.127884864807129
    4. 'c' → logprob: -10.252884864807129
    5. 'cid' → logprob: -10.377884864807129
    6. '_,' → logprob: -10.502884864807129
    7. '   ' → logprob: -12.002884864807129
    8. 'f' → logprob: -12.502884864807129
    9. '_cost' → logprob: -12.877884864807129
    10. ' (' → logprob: -13.627884864807129

Token 757: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010604646377032623
    2. ' ,' → logprob: -9.500105857849121
    3. ',v' → logprob: -11.500105857849121
    4. ',c' → logprob: -11.625105857849121
    5. ',u' → logprob: -13.125105857849121
    6. ',user' → logprob: -13.125105857849121
    7. ',
' → logprob: -13.625105857849121
    8. ' in' → logprob: -14.500105857849121
    9. 'in' → logprob: -14.500105857849121
    10. ',in' → logprob: -14.750105857849121

Token 758: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0009117019944824278
    2. ' u' → logprob: -7.000911712646484
    3. '	u' → logprob: -16.500911712646484
    4. '   ' → logprob: -17.125911712646484
    5. ' ' → logprob: -17.750911712646484
    6. '(u' → logprob: -18.500911712646484
    7. ',u' → logprob: -18.750911712646484
    8. ',' → logprob: -18.875911712646484
    9. '_u' → logprob: -19.750911712646484
    10. '    ' → logprob: -20.375911712646484

Token 759: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020926215802319348
    2. ' ,' → logprob: -8.625208854675293
    3. ',v' → logprob: -11.125208854675293
    4. ',u' → logprob: -11.250208854675293
    5. '<|end|>' → logprob: -14.625208854675293
    6. '           ' → logprob: -15.250208854675293
    7. ',
' → logprob: -15.250208854675293
    8. '_,' → logprob: -15.375208854675293
    9. ',user' → logprob: -15.500208854675293
    10. ' in' → logprob: -16.25020980834961

Token 760: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0024756586644798517
    2. ' v' → logprob: -6.002475738525391
    3. 'u' → logprob: -17.62747573852539
    4. '	v' → logprob: -19.00247573852539
    5. ',v' → logprob: -19.87747573852539
    6. '   ' → logprob: -20.62747573852539
    7. ' ' → logprob: -21.12747573852539
    8. '
' → logprob: -21.25247573852539
    9. ')v' → logprob: -21.62747573852539
    10. 'w' → logprob: -21.62747573852539

Token 761: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016120703890919685
    2. 'in' → logprob: -4.141120910644531
    3. ',' → logprob: -10.391120910644531
    4. '   ' → logprob: -10.516120910644531
    5. '           ' → logprob: -11.766120910644531
    6. '	in' → logprob: -12.141120910644531
    7. '       ' → logprob: -12.516120910644531
    8. ':' → logprob: -12.641120910644531
    9. ' ' → logprob: -13.016120910644531
    10. ':
' → logprob: -13.641120910644531

Token 762: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.0007105246186256409
    2. ' edges' → logprob: -7.250710487365723
    3. '(edges' → logprob: -14.750710487365723
    4. '.edges' → logprob: -16.75071144104004
    5. '   ' → logprob: -17.00071144104004
    6. '_edges' → logprob: -17.75071144104004
    7. 'edge' → logprob: -18.00071144104004
    8. ' ' → logprob: -18.00071144104004
    9. 'enumer' → logprob: -18.37571144104004
    10. 'ed' → logprob: -18.87571144104004

Token 763: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22859589755535126
    2. ':
' → logprob: -1.6035958528518677
    3. ' if' → logprob: -7.103595733642578
    4. ',' → logprob: -7.478595733642578
    5. '           ' → logprob: -7.603595733642578
    6. '<|end|>' → logprob: -8.228595733642578
    7. '):
' → logprob: -8.353595733642578
    8. ' in' → logprob: -8.978595733642578
    9. '       ' → logprob: -9.228595733642578
    10. '   ' → logprob: -9.353595733642578

Token 764: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010491237044334412
    2. ' if' → logprob: -7.126049041748047
    3. '<|end|>' → logprob: -9.251049041748047
    4. '<|end|>' → logprob: -10.501049041748047
    5. '   ' → logprob: -10.626049041748047
    6. '	       ' → logprob: -11.251049041748047
    7. ',' → logprob: -11.251049041748047
    8. 'if' → logprob: -11.251049041748047
    9. '            
' → logprob: -11.501049041748047
    10. '       ' → logprob: -11.501049041748047

Token 765: ' cu' (ID: 2862)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4818783402442932
    2. ' cu' → logprob: -1.6068782806396484
    3. 'if' → logprob: -2.9818782806396484
    4. 'cu' (adapté à ' cu') → logprob: -2.9818782806396484
    5. ' cid' → logprob: -3.6068782806396484
    6. ' c' → logprob: -3.7318782806396484
    7. '       ' → logprob: -3.8568782806396484
    8. 'c' → logprob: -5.481878280639648
    9. 'cid' → logprob: -6.231878280639648
    10. '           ' → logprob: -7.981878280639648

Token 766: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3499591052532196
    2. ' =' → logprob: -1.224959135055542
    3. 'mp' → logprob: -7.224958896636963
    4. 'p' → logprob: -7.724958896636963
    5. '   ' → logprob: -9.599959373474121
    6. 't' → logprob: -9.849959373474121
    7. 'm' → logprob: -10.099959373474121
    8. '_comp' → logprob: -10.099959373474121
    9. 'st' → logprob: -10.599959373474121
    10. ',' → logprob: -10.724959373474121

Token 767: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.00013131031300872564
    2. ' comp' → logprob: -9.000131607055664
    3. 'pos' → logprob: -11.750131607055664
    4. '	comp' → logprob: -17.000131607055664
    5. '(comp' → logprob: -18.750131607055664
    6. 'cmp' → logprob: -19.250131607055664
    7. 'com' → logprob: -19.625131607055664
    8. '           ' → logprob: -19.750131607055664
    9. '   ' → logprob: -19.875131607055664
    10. '.comp' → logprob: -20.000131607055664

Token 768: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -9.968312951968983e-06
    2. 't' → logprob: -12.625009536743164
    3. 'p' → logprob: -13.250009536743164
    4. 'Map' → logprob: -13.750009536743164
    5. '_comp' → logprob: -13.875009536743164
    6. '_MAP' → logprob: -14.000009536743164
    7. 'mp' → logprob: -14.625009536743164
    8. 'pos' → logprob: -14.750009536743164
    9. 'omp' → logprob: -15.125009536743164
    10. '_pos' → logprob: -15.125009536743164

Token 769: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.813969957875088e-05
    2. 'uf' → logprob: -9.625067710876465
    3. 'ufs' → logprob: -14.625067710876465
    4. '[
' → logprob: -14.625067710876465
    5. ' uf' → logprob: -15.250067710876465
    6. ' [' → logprob: -15.500067710876465
    7. '[u' → logprob: -16.25006866455078
    8. '(' → logprob: -16.37506866455078
    9. '```' → logprob: -16.50006866455078
    10. '[[' → logprob: -16.62506866455078

Token 770: 'uf' (ID: 1427)
  Prédit: 'uf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -4.4849443838757e-06
    2. ' uf' → logprob: -12.500004768371582
    3. 'ufs' → logprob: -15.000004768371582
    4. 'u' → logprob: -15.750004768371582
    5. '[u' → logprob: -16.125003814697266
    6. '[' → logprob: -16.125003814697266
    7. 'ufi' → logprob: -17.000003814697266
    8. 'uff' → logprob: -18.750003814697266
    9. 'uft' → logprob: -19.125003814697266
    10. '.uf' → logprob: -19.125003814697266

Token 771: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.001530693843960762
    2. 'find' → logprob: -6.501530647277832
    3. '.' → logprob: -10.876530647277832
    4. 'u' → logprob: -12.876530647277832
    5. '[u' → logprob: -13.501530647277832
    6. '.findall' → logprob: -13.626530647277832
    7. ' .' → logprob: -14.251530647277832
    8. '].' → logprob: -14.626530647277832
    9. ']' → logprob: -14.751530647277832
    10. '```' → logprob: -14.876530647277832

Token 772: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.07892405241727829
    2. 'u' → logprob: -2.5789239406585693
    3. ']' → logprob: -10.828924179077148
    4. '(' → logprob: -11.953924179077148
    5. '[u' → logprob: -12.578924179077148
    6. ' u' → logprob: -13.453924179077148
    7. '(v' → logprob: -14.203924179077148
    8. ')' → logprob: -14.453924179077148
    9. '	u' → logprob: -14.703924179077148
    10. '(
' → logprob: -14.953924179077148

Token 773: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.043199460953474045
    2. ')]
' → logprob: -3.1681995391845703
    3. ']' → logprob: -9.04319953918457
    4. ')][' → logprob: -10.04319953918457
    5. ')]
' → logprob: -11.29319953918457
    6. ']
' → logprob: -11.41819953918457
    7. ')' → logprob: -12.04319953918457
    8. '           ' → logprob: -12.66819953918457
    9. '       ' → logprob: -14.04319953918457
    10. ')]

' → logprob: -14.04319953918457

Token 774: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.056857794523239136
    2. ' if' → logprob: -2.9318578243255615
    3. 'if' → logprob: -7.806857585906982
    4. ' 
' → logprob: -7.931857585906982
    5. '<|end|>' → logprob: -8.05685806274414
    6. '            
' → logprob: -8.18185806274414
    7. ',' → logprob: -8.80685806274414
    8. '       ' → logprob: -9.18185806274414
    9. '   ' → logprob: -9.55685806274414
    10. '
' → logprob: -9.55685806274414

Token 775: ' cv' (ID: 12142)
  Prédit: 'cv'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cv' (adapté à ' cv') → logprob: -0.012563572265207767
    2. ' cv' → logprob: -4.762563705444336
    3. 'if' → logprob: -5.762563705444336
    4. ' if' → logprob: -7.137563705444336
    5. '
' → logprob: -13.887563705444336
    6. '   ' → logprob: -14.012563705444336
    7. ' ' → logprob: -14.512563705444336
    8. '	cv' → logprob: -15.137563705444336
    9. '       ' → logprob: -15.762563705444336
    10. '    
' → logprob: -16.012563705444336

Token 776: ' =' (ID: 314)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2332661896944046
    2. ' =' → logprob: -2.4832661151885986
    3. '==' → logprob: -2.6082661151885986
    4. '=' → logprob: -2.9832661151885986
    5. '[' → logprob: -8.85826587677002
    6. ')' → logprob: -9.85826587677002
    7. '=cv' → logprob: -10.98326587677002
    8. ',' → logprob: -11.35826587677002
    9. ' if' → logprob: -11.35826587677002
    10. '           ' → logprob: -11.60826587677002

Token 777: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.038181375712156296
    2. 'cu' → logprob: -3.2881813049316406
    3. ' comp' → logprob: -9.03818130493164
    4. ' cu' → logprob: -11.41318130493164
    5. 'com' → logprob: -12.53818130493164
    6. 'cv' → logprob: -13.41318130493164
    7. 'c' → logprob: -13.53818130493164
    8. '	comp' → logprob: -13.66318130493164
    9. 'cup' → logprob: -14.16318130493164
    10. '(comp' → logprob: -14.53818130493164

Token 778: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.0013611861504614353
    2. '_comp' → logprob: -6.87636137008667
    3. 'comp' → logprob: -8.626360893249512
    4. 'u' → logprob: -9.251360893249512
    5. 'omp' → logprob: -11.126360893249512
    6. '[' → logprob: -11.501360893249512
    7. '[u' → logprob: -11.751360893249512
    8. 'map' → logprob: -12.251360893249512
    9. 'cv' → logprob: -12.751360893249512
    10. 'mp' → logprob: -12.876360893249512

Token 779: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03244808316230774
    2. '(comp' → logprob: -3.7824480533599854
    3. '(' → logprob: -4.7824482917785645
    4. '(c' → logprob: -7.5324482917785645
    5. '(cv' → logprob: -8.657447814941406
    6. '[c' → logprob: -10.407447814941406
    7. 'comp' → logprob: -10.657447814941406
    8. '(cf' → logprob: -12.407447814941406
    9. '[u' → logprob: -12.532447814941406
    10. '(u' → logprob: -12.532447814941406

Token 780: 'uf' (ID: 1427)
  Prédit: 'uf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -3.128163257315464e-07
    2. ' uf' → logprob: -16.625
    3. '[u' → logprob: -17.25
    4. '[' → logprob: -17.5
    5. '(' → logprob: -19.375
    6. 'u' → logprob: -19.875
    7. 'uff' → logprob: -20.25
    8. 'ufs' → logprob: -20.25
    9. '.uf' → logprob: -21.0
    10. '(u' → logprob: -21.25

Token 781: '.find' (ID: 4231)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.14509256184101105
    2. '.find' → logprob: -2.020092487335205
    3. '[' → logprob: -7.395092487335205
    4. '[u' → logprob: -7.520092487335205
    5. '(find' → logprob: -7.645092487335205
    6. '[v' → logprob: -8.645092964172363
    7. 'v' → logprob: -8.645092964172363
    8. '_find' → logprob: -8.770092964172363
    9. '(u' → logprob: -9.770092964172363
    10. 'u' → logprob: -9.895092964172363

Token 782: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.12707561254501343
    2. 'v' → logprob: -2.127075672149658
    3. '(u' → logprob: -8.8770751953125
    4. 'u' → logprob: -12.1270751953125
    5. '[v' → logprob: -13.3770751953125
    6. ' v' → logprob: -15.2520751953125
    7. '(' → logprob: -15.8770751953125
    8. '	v' → logprob: -16.0020751953125
    9. ')v' → logprob: -16.1270751953125
    10. ']' → logprob: -16.5020751953125

Token 783: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.024512477219104767
    2. ']
' → logprob: -3.899512529373169
    3. ')]' → logprob: -5.77451229095459
    4. ')' → logprob: -7.27451229095459
    5. '])' → logprob: -9.39951229095459
    6. ')]
' → logprob: -10.77451229095459
    7. '           ' → logprob: -11.02451229095459
    8. ' ]' → logprob: -11.52451229095459
    9. ']==' → logprob: -11.52451229095459
    10. ']
' → logprob: -12.02451229095459

Token 784: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10728069394826889
    2. ' if' → logprob: -2.357280731201172
    3. '       ' → logprob: -5.857280731201172
    4. '   ' → logprob: -6.607280731201172
    5. '<|end|>' → logprob: -7.357280731201172
    6. 'if' → logprob: -7.482280731201172
    7. '            ' → logprob: -7.732280731201172
    8. ' ' → logprob: -8.357280731201172
    9. '          ' → logprob: -8.482280731201172
    10. '        ' → logprob: -9.107280731201172

Token 785: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.16099821031093597
    2. 'if' (adapté à ' if') → logprob: -2.1609981060028076
    3. '           ' → logprob: -3.4109981060028076
    4. '   ' → logprob: -8.160998344421387
    5. '       ' → logprob: -8.785998344421387
    6. ' ' → logprob: -11.160998344421387
    7. '	if' → logprob: -11.410998344421387
    8. '<|end|>' → logprob: -12.160998344421387
    9. '            ' → logprob: -12.660998344421387
    10. '    ' → logprob: -12.910998344421387

Token 786: ' cu' (ID: 2862)
  Prédit: 'cu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cu' → logprob: -0.02324547804892063
    2. ' cu' → logprob: -3.7732455730438232
    3. '   ' → logprob: -17.398244857788086
    4. ' ' → logprob: -18.523244857788086
    5. ' ' → logprob: -18.898244857788086
    6. '/cu' → logprob: -19.898244857788086
    7. 'c' → logprob: -20.273244857788086
    8. 'cur' → logprob: -20.648244857788086
    9. 'cup' → logprob: -20.648244857788086
    10. '-cu' → logprob: -20.898244857788086

Token 787: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3868769407272339
    2. '==' → logprob: -1.1368769407272339
    3. '=' → logprob: -12.136877059936523
    4. '===' → logprob: -16.261877059936523
    5. ' =' → logprob: -16.386877059936523
    6. ']==' → logprob: -16.386877059936523
    7. '[' → logprob: -16.636877059936523
    8. ')==' → logprob: -16.761877059936523
    9. '==
' → logprob: -16.761877059936523
    10. ' ' → logprob: -17.011877059936523

Token 788: ' cv' (ID: 12142)
  Prédit: 'cv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cv' → logprob: -0.0001584850688232109
    2. ' cv' → logprob: -8.750158309936523
    3. 'cu' → logprob: -18.875158309936523
    4. '=cv' → logprob: -19.000158309936523
    5. '	cv' → logprob: -19.500158309936523
    6. '(cv' → logprob: -20.625158309936523
    7. ' ' → logprob: -20.750158309936523
    8. '
' → logprob: -21.375158309936523
    9. '<cv' → logprob: -22.125158309936523
    10. 'cov' → logprob: -22.125158309936523

Token 789: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.46204066276550293
    2. ':' → logprob: -1.087040662765503
    3. ' and' → logprob: -3.587040662765503
    4. '               ' → logprob: -5.962040901184082
    5. '           ' → logprob: -6.337040901184082
    6. '):
' → logprob: -7.837040901184082
    7. '       ' → logprob: -9.212040901184082
    8. ',' → logprob: -9.587040901184082
    9. '<|end|>' → logprob: -9.837040901184082
    10. 'and' → logprob: -10.337040901184082

Token 790: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005761472275480628
    2. '           ' → logprob: -8.00057601928711
    3. ':
' → logprob: -9.87557601928711
    4. ' ' → logprob: -10.00057601928711
    5. '                
' → logprob: -10.75057601928711
    6. ',' → logprob: -10.75057601928711
    7. '                   ' → logprob: -10.87557601928711
    8. ' and' → logprob: -11.12557601928711
    9. ':' → logprob: -11.12557601928711
    10. '                               ' → logprob: -11.37557601928711

Token 791: ' u' (ID: 337)
  Prédit: ' comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' comp' → logprob: -0.4831845760345459
    2. 'comp' → logprob: -0.9831845760345459
    3. '               ' → logprob: -4.733184814453125
    4. '                   ' → logprob: -8.733184814453125
    5. '   ' → logprob: -9.858184814453125
    6. '	comp' → logprob: -10.108184814453125
    7. '(comp' → logprob: -12.483184814453125
    8. '           ' → logprob: -12.608184814453125
    9. '_comp' → logprob: -13.233184814453125
    10. '.comp' → logprob: -13.858184814453125

Token 792: '_local' (ID: 29253)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2539288401603699
    2. ' =' → logprob: -1.6289288997650146
    3. 'pos' → logprob: -4.5039286613464355
    4. '_pos' → logprob: -4.6289286613464355
    5. ',' → logprob: -5.1289286613464355
    6. 's' → logprob: -7.7539286613464355
    7. 'n' → logprob: -9.128929138183594
    8. ',pos' → logprob: -9.378929138183594
    9. '_local' → logprob: -9.503929138183594
    10. '_idx' → logprob: -9.503929138183594

Token 793: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25570106506347656
    2. ' =' → logprob: -1.7557010650634766
    3. ',' → logprob: -3.0057010650634766
    4. '[u' → logprob: -6.505701065063477
    5. '_pos' → logprob: -7.130701065063477
    6. '[pos' → logprob: -7.630701065063477
    7. ')' → logprob: -9.130701065063477
    8. ',pos' → logprob: -9.630701065063477
    9. '=u' → logprob: -9.755701065063477
    10. '[' → logprob: -9.880701065063477

Token 794: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0001584850688232109
    2. ' pos' → logprob: -8.750158309936523
    3. '           ' → logprob: -21.625158309936523
    4. '               ' → logprob: -21.625158309936523
    5. '                   ' → logprob: -23.750158309936523
    6. '(pos' → logprob: -23.750158309936523
    7. '	pos' → logprob: -23.750158309936523
    8. '[pos' → logprob: -24.250158309936523
    9. '   ' → logprob: -25.625158309936523
    10. '_pos' → logprob: -25.875158309936523

Token 795: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -8.537868779967539e-06
    2. '_comp' → logprob: -12.250008583068848
    3. '[u' → logprob: -13.250008583068848
    4. 'in' → logprob: -13.625008583068848
    5. '[in' → logprob: -15.375008583068848
    6. '[' → logprob: -15.500008583068848
    7. 'In' → logprob: -16.12500762939453
    8. 'comp' → logprob: -16.50000762939453
    9. '_com' → logprob: -17.50000762939453
    10. '[_' → logprob: -17.75000762939453

Token 796: '_comp' (ID: 34754)
  Prédit: '_comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_comp' → logprob: -0.12713241577148438
    2. 'comp' → logprob: -2.1271324157714844
    3. '[u' → logprob: -8.627132415771484
    4. 'u' → logprob: -10.877132415771484
    5. '	comp' → logprob: -13.252132415771484
    6. '_com' → logprob: -13.877132415771484
    7. '[' → logprob: -14.127132415771484
    8. 'c' → logprob: -14.377132415771484
    9. ' comp' → logprob: -14.377132415771484
    10. '(comp' → logprob: -14.752132415771484

Token 797: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.006719282828271389
    2. 'u' → logprob: -5.00671911239624
    3. '[' → logprob: -13.131719589233398
    4. '(u' → logprob: -14.756719589233398
    5. '[v' → logprob: -14.881719589233398
    6. '[
' → logprob: -14.881719589233398
    7. ' u' → logprob: -14.881719589233398
    8. '	u' → logprob: -16.0067195892334
    9. '   ' → logprob: -16.1317195892334
    10. '
' → logprob: -16.1317195892334

Token 798: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1463061273097992
    2. ')' → logprob: -2.396306037902832
    3. '+' → logprob: -4.146306037902832
    4. '               ' → logprob: -4.271306037902832
    5. ']
' → logprob: -5.521306037902832
    6. ' +' → logprob: -6.146306037902832
    7. '<|end|>' → logprob: -6.146306037902832
    8. ']+' → logprob: -6.396306037902832
    9. '<|end|>' → logprob: -6.646306037902832
    10. '[u' → logprob: -7.146306037902832

Token 799: '               ' (ID: 506)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.616072416305542
    2. '               ' → logprob: -0.866072416305542
    3. 'v' → logprob: -3.366072416305542
    4. ',v' → logprob: -5.866072654724121
    5. ',' → logprob: -6.991072654724121
    6. '                ' → logprob: -8.491072654724121
    7. '	v' → logprob: -8.741072654724121
    8. '                   ' → logprob: -9.241072654724121
    9. '
' → logprob: -9.241072654724121
    10. ' u' → logprob: -9.366072654724121

Token 800: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.002476724097505212
    2. ' v' → logprob: -6.002476692199707
    3. '	v' → logprob: -14.627476692199707
    4. '               ' → logprob: -15.252476692199707
    5. '                   ' → logprob: -15.377476692199707
    6. ',v' → logprob: -16.752477645874023
    7. '                ' → logprob: -18.877477645874023
    8. '_v' → logprob: -19.127477645874023
    9. ')v' → logprob: -19.877477645874023
    10. '(v' → logprob: -20.002477645874023

Token 801: '_local' (ID: 29253)
  Prédit: '_local'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_local' → logprob: -0.005383637733757496
    2. '_' → logprob: -5.255383491516113
    3. '[' → logprob: -10.005383491516113
    4. '_LOCAL' → logprob: -10.380383491516113
    5. ' _' → logprob: -10.755383491516113
    6. ' local' → logprob: -11.880383491516113
    7. '+' → logprob: -12.005383491516113
    8. '_Local' → logprob: -12.005383491516113
    9. 'Local' → logprob: -12.130383491516113
    10. 'local' → logprob: -12.130383491516113

Token 802: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6053194403648376
    2. '=' → logprob: -1.1053194999694824
    3. ')' → logprob: -2.2303194999694824
    4. '<|end|>' → logprob: -4.605319499969482
    5. ' v' → logprob: -6.355319499969482
    6. ',' → logprob: -6.355319499969482
    7. ' ' → logprob: -7.855319499969482
    8. ']' → logprob: -8.605319023132324
    9. '<|end|>' → logprob: -8.730319023132324
    10. '               ' → logprob: -8.855319023132324

Token 803: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.10020667314529419
    2. ' pos' → logprob: -2.3502066135406494
    3. 'v' → logprob: -17.97520637512207
    4. ' v' → logprob: -17.97520637512207
    5. '	pos' → logprob: -19.10020637512207
    6. '(pos' → logprob: -19.60020637512207
    7. '           ' → logprob: -19.97520637512207
    8. '[pos' → logprob: -20.60020637512207
    9. '               ' → logprob: -20.97520637512207
    10. '_pos' → logprob: -21.60020637512207

Token 804: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.06202280893921852
    2. '_comp' → logprob: -2.8120229244232178
    3. 'comp' → logprob: -9.937023162841797
    4. '_pos' → logprob: -12.687023162841797
    5. 'in' → logprob: -13.937023162841797
    6. '_com' → logprob: -13.937023162841797
    7. 'pos' → logprob: -14.687023162841797
    8. '[v' → logprob: -15.062023162841797
    9. '_local' → logprob: -15.062023162841797
    10. ' comp' → logprob: -16.187023162841797

Token 805: '_comp' (ID: 34754)
  Prédit: '_comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_comp' → logprob: -0.576880156993866
    2. 'comp' → logprob: -0.826880156993866
    3. 'pos' → logprob: -7.201879978179932
    4. ' comp' → logprob: -8.82688045501709
    5. 'v' → logprob: -10.45188045501709
    6. '_pos' → logprob: -12.07688045501709
    7. 'c' → logprob: -12.32688045501709
    8. '[v' → logprob: -12.70188045501709
    9. '	comp' → logprob: -13.07688045501709
    10. 'u' → logprob: -13.32688045501709

Token 806: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -7.588793960167095e-05
    2. 'v' → logprob: -9.500076293945312
    3. '[u' → logprob: -15.250076293945312
    4. '[' → logprob: -15.750076293945312
    5. '(v' → logprob: -16.000076293945312
    6. '[
' → logprob: -16.375076293945312
    7. ' v' → logprob: -16.500076293945312
    8. ' [' → logprob: -16.750076293945312
    9. '<v' → logprob: -16.750076293945312
    10. '```' → logprob: -17.000076293945312

Token 807: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7030550241470337
    2. ']' → logprob: -0.7030550241470337
    3. '               ' → logprob: -5.078054904937744
    4. '<|end|>' → logprob: -5.828054904937744
    5. ']
' → logprob: -8.703055381774902
    6. ')
' → logprob: -8.828055381774902
    7. '<|end|>' → logprob: -8.953055381774902
    8. '           ' → logprob: -9.328055381774902
    9. '}' → logprob: -10.203055381774902
    10. ' ]' → logprob: -11.203055381774902

Token 808: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.4140441635390744e-05
    2. '           ' → logprob: -12.250014305114746
    3. '                   ' → logprob: -13.125014305114746
    4. ' comp' → logprob: -13.250014305114746
    5. ',' → logprob: -13.500014305114746
    6. 'comp' → logprob: -13.875014305114746
    7. '       ' → logprob: -14.000014305114746
    8. '   ' → logprob: -14.375014305114746
    9. '```' → logprob: -15.125014305114746
    10. '                
' → logprob: -15.250014305114746

Token 809: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' (adapté à ' comp') → logprob: -0.4328896999359131
    2. ' comp' → logprob: -1.432889699935913
    3. '               ' → logprob: -2.182889699935913
    4. '   ' → logprob: -11.557889938354492
    5. '                   ' → logprob: -11.807889938354492
    6. '           ' → logprob: -12.057889938354492
    7. '	comp' → logprob: -12.057889938354492
    8. '(comp' → logprob: -12.932889938354492
    9. '_comp' → logprob: -14.182889938354492
    10. '.comp' → logprob: -14.557889938354492

Token 810: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -1.1472419600977446e-06
    2. 'edges' → logprob: -14.750000953674316
    3. '_edge' → logprob: -15.625000953674316
    4. '_' → logprob: -16.000001907348633
    5. '_ed' → logprob: -16.000001907348633
    6. 'Edges' → logprob: -16.750001907348633
    7. '[_' → logprob: -16.750001907348633
    8. '_errors' → logprob: -16.750001907348633
    9. '_faces' → logprob: -19.250001907348633
    10. ' edges' → logprob: -19.250001907348633

Token 811: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.008129963040119e-06
    2. '[c' → logprob: -13.000003814697266
    3. '```' → logprob: -14.875003814697266
    4. ' [' → logprob: -15.125003814697266
    5. '[u' → logprob: -15.500003814697266
    6. '[
' → logprob: -15.500003814697266
    7. 'cu' → logprob: -15.750003814697266
    8. '[cur' → logprob: -16.000003814697266
    9. '   ' → logprob: -16.500003814697266
    10. '
' → logprob: -16.500003814697266

Token 812: 'cu' (ID: 7719)
  Prédit: 'cu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cu' → logprob: -2.176947600673884e-05
    2. ' cu' → logprob: -10.875021934509277
    3. '[' → logprob: -13.250021934509277
    4. 'c' → logprob: -15.125021934509277
    5. 'cv' → logprob: -15.750021934509277
    6. '[c' → logprob: -16.00002098083496
    7. '   ' → logprob: -16.25002098083496
    8. '
' → logprob: -16.37502098083496
    9. ']' → logprob: -16.75002098083496
    10. 'u' → logprob: -17.25002098083496

Token 813: '].' (ID: 1651)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0051973480731248856
    2. '].' → logprob: -5.505197525024414
    3. '.append' → logprob: -6.880197525024414
    4. '[c' → logprob: -10.255197525024414
    5. '.' → logprob: -10.630197525024414
    6. '[].' → logprob: -11.755197525024414
    7. 'append' → logprob: -12.005197525024414
    8. ').' → logprob: -12.130197525024414
    9. 'cu' → logprob: -12.255197525024414
    10. '][' → logprob: -12.505197525024414

Token 814: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -4.320199877838604e-07
    2. '.append' → logprob: -15.0
    3. ' append' → logprob: -17.0
    4. 'app' → logprob: -18.375
    5. '_append' → logprob: -19.375
    6. 'Append' → logprob: -20.125
    7. 'appen' → logprob: -20.625
    8. '	append' → logprob: -22.375
    9. '```' → logprob: -24.125
    10. 'add' → logprob: -24.875

Token 815: '((' (ID: 2054)
  Prédit: '(cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cost' → logprob: -0.023279372602701187
    2. '((' → logprob: -3.7732794284820557
    3. '(' → logprob: -10.398279190063477
    4. ' (' → logprob: -12.898279190063477
    5. '   ' → logprob: -14.773279190063477
    6. '(c' → logprob: -15.523279190063477
    7. '(C' → logprob: -16.148279190063477
    8. '[(' → logprob: -17.273279190063477
    9. '```' → logprob: -17.648279190063477
    10. '(comp' → logprob: -17.648279190063477

Token 816: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -7.941850526549388e-06
    2. ' cost' → logprob: -11.750007629394531
    3. '(cost' → logprob: -18.62500762939453
    4. '   ' → logprob: -19.62500762939453
    5. '
' → logprob: -22.00000762939453
    6. 'c' → logprob: -22.37500762939453
    7. 'Cost' → logprob: -22.37500762939453
    8. ')' → logprob: -22.50000762939453
    9. '_cost' → logprob: -22.87500762939453
    10. 'co' → logprob: -23.00000762939453

Token 817: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.85104202805087e-05
    2. ' ,' → logprob: -10.250078201293945
    3. ',u' → logprob: -10.375078201293945
    4. ',
' → logprob: -12.500078201293945
    5. '               ' → logprob: -12.625078201293945
    6. '                   ' → logprob: -13.250078201293945
    7. '),' → logprob: -13.875078201293945
    8. ')' → logprob: -14.750078201293945
    9. ',v' → logprob: -14.750078201293945
    10. '',' → logprob: -15.375078201293945

Token 818: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.00033558503491804004
    2. ' u' → logprob: -8.000335693359375
    3. '	u' → logprob: -16.125335693359375
    4. '   ' → logprob: -17.125335693359375
    5. '(u' → logprob: -18.750335693359375
    6. '[u' → logprob: -18.750335693359375
    7. ')' → logprob: -19.500335693359375
    8. '               ' → logprob: -19.625335693359375
    9. '                   ' → logprob: -20.125335693359375
    10. 'min' → logprob: -20.125335693359375

Token 819: '_local' (ID: 29253)
  Prédit: '_local'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_local' → logprob: -9.341087570646778e-05
    2. 'local' → logprob: -9.500093460083008
    3. ',' → logprob: -11.625093460083008
    4. '_,' → logprob: -12.750093460083008
    5. '_LOCAL' → logprob: -13.375093460083008
    6. 'Local' → logprob: -13.500093460083008
    7. ',_' → logprob: -13.750093460083008
    8. 'ocal' → logprob: -14.125093460083008
    9. ')_' → logprob: -14.750093460083008
    10. ''_' → logprob: -15.125093460083008

Token 820: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00036156410351395607
    2. ',v' → logprob: -8.000361442565918
    3. ' ,' → logprob: -10.750361442565918
    4. ',
' → logprob: -12.500361442565918
    5. ')' → logprob: -14.625361442565918
    6. 'v' → logprob: -15.500361442565918
    7. '               ' → logprob: -16.000362396240234
    8. '<|end|>' → logprob: -17.000362396240234
    9. ',u' → logprob: -17.250362396240234
    10. '),' → logprob: -17.625362396240234

Token 821: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -3.15441757265944e-05
    2. ' v' → logprob: -10.375031471252441
    3. '               ' → logprob: -15.875031471252441
    4. '                   ' → logprob: -16.000032424926758
    5. '	v' → logprob: -18.250032424926758
    6. '                ' → logprob: -18.750032424926758
    7. '           ' → logprob: -19.375032424926758
    8. ')v' → logprob: -19.500032424926758
    9. '   ' → logprob: -19.625032424926758
    10. '              ' → logprob: -20.125032424926758

Token 822: '_local' (ID: 29253)
  Prédit: '_local'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_local' → logprob: -0.0002989968634210527
    2. 'local' → logprob: -8.125299453735352
    3. 'ocal' → logprob: -12.875299453735352
    4. 'Local' → logprob: -16.00029945373535
    5. ' local' → logprob: -16.12529945373535
    6. '_lo' → logprob: -16.12529945373535
    7. '_LOCAL' → logprob: -16.25029945373535
    8. '_l' → logprob: -16.87529945373535
    9. '_' → logprob: -17.37529945373535
    10. '_loc' → logprob: -17.75029945373535

Token 823: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.038075923919677734
    2. '))' → logprob: -3.2880759239196777
    3. ')
' → logprob: -10.413076400756836
    4. '))
' → logprob: -12.913076400756836
    5. ' )' → logprob: -14.538076400756836
    6. ')}' → logprob: -14.788076400756836
    7. ')))' → logprob: -15.288076400756836
    8. '       ' → logprob: -15.538076400756836
    9. '               ' → logprob: -15.788076400756836
    10. '           ' → logprob: -16.288076400756836

Token 824: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 825: ' #' (ID: 1069)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.6220424175262451
    2. 'answer' → logprob: -1.8720424175262451
    3. 'result' → logprob: -2.372042417526245
    4. 'ans' → logprob: -2.372042417526245
    5. 'dp' → logprob: -2.747042417526245
    6. 'answers' → logprob: -3.872042417526245
    7. 'results' → logprob: -4.622042655944824
    8. '   ' → logprob: -4.872042655944824
    9. 'ways' → logprob: -4.872042655944824
    10. '#' (adapté à ' #') → logprob: -5.747042655944824

Token 826: ' On' (ID: 2160)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.8677356243133545
    2. 'answer' → logprob: -1.6177356243133545
    3. 'ans' → logprob: -2.2427356243133545
    4. 'total' → logprob: -2.4927356243133545
    5. 'result' → logprob: -2.6177356243133545
    6. 'dp' → logprob: -3.3677356243133545
    7. '#' → logprob: -3.9927356243133545
    8. 'answers' → logprob: -4.367735862731934
    9. 'results' → logprob: -4.617735862731934
    10. 'num' → logprob: -4.992735862731934

Token 827: ' veut' (ID: 41653)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.5636564493179321
    2. 'def' → logprob: -1.6886564493179321
    3. 'continue' → logprob: -1.9386564493179321
    4. '#' → logprob: -2.0636563301086426
    5. 'for' → logprob: -2.3136563301086426
    6. 'result' → logprob: -3.4386563301086426
    7. 'import' → logprob: -3.8136563301086426
    8. 'calcul' → logprob: -4.188656330108643
    9. 'contin' → logprob: -4.313656330108643
    10. ' continue' → logprob: -4.438656330108643

Token 828: ' calcul' (ID: 7559)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8857367634773254
    2. '       ' → logprob: -1.2607367038726807
    3. 'calcul' → logprob: -2.3857367038726807
    4. '#' → logprob: -3.2607367038726807
    5. 'total' → logprob: -3.2607367038726807
    6. ' calcul' → logprob: -3.7607367038726807
    7. 'count' → logprob: -4.13573694229126
    8. 'ans' → logprob: -4.51073694229126
    9. 'result' → logprob: -4.76073694229126
    10. 'res' → logprob: -4.88573694229126

Token 829: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -1.5048530030981055e-06
    2. '#' → logprob: -14.125001907348633
    3. 'uler' → logprob: -16.000001907348633
    4. 'r' → logprob: -16.125001907348633
    5. 'ler' → logprob: -16.125001907348633
    6. '   ' → logprob: -16.250001907348633
    7. 'rer' → logprob: -16.625001907348633
    8. '       ' → logprob: -16.750001907348633
    9. '
' → logprob: -16.750001907348633
    10. 'e' → logprob: -17.625001907348633

Token 830: ' pour' (ID: 1930)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.2801672220230103
    2. 'ans' → logprob: -1.5301672220230103
    3. 'res' → logprob: -1.6551672220230103
    4. 'total' → logprob: -2.1551671028137207
    5. 'result' → logprob: -2.5301671028137207
    6. 'answer' → logprob: -3.4051671028137207
    7. '#' → logprob: -3.9051671028137207
    8. ',' → logprob: -4.905167102813721
    9. 'la' → logprob: -5.030167102813721
    10. ' ans' → logprob: -5.155167102813721

Token 831: ' chaque' (ID: 21194)
  Prédit: 'cid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cid' → logprob: -0.7726987600326538
    2. ' chaque' → logprob: -1.2726987600326538
    3. 'cha' → logprob: -1.8976987600326538
    4. 'each' → logprob: -3.0226988792419434
    5. 'ch' → logprob: -3.3976988792419434
    6. 'comp' → logprob: -4.772698879241943
    7. 'c' → logprob: -5.397698879241943
    8. '#' → logprob: -5.772698879241943
    9. ' cid' → logprob: -5.772698879241943
    10. 'la' → logprob: -6.147698879241943

Token 832: ' compos' (ID: 14635)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.11713563650846481
    2. 'comp' → logprob: -2.742135524749756
    3. ' compos' → logprob: -3.117135524749756
    4. 'component' → logprob: -7.617135524749756
    5. '#' → logprob: -8.242136001586914
    6. ' comp' → logprob: -8.242136001586914
    7. 'c' → logprob: -8.742136001586914
    8. 'composition' → logprob: -8.867136001586914
    9. 'compl' → logprob: -9.742136001586914
    10. 'compose' → logprob: -9.992136001586914

Token 833: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.0015527134528383613
    2. 'ponente' → logprob: -7.376552581787109
    3. 'pon' → logprob: -7.501552581787109
    4. 'p' → logprob: -8.62655258178711
    5. 'ponent' → logprob: -10.00155258178711
    6. 'pos' → logprob: -10.12655258178711
    7. '#' → logprob: -10.37655258178711
    8. 'ente' → logprob: -11.00155258178711
    9. 'ant' → logprob: -11.25155258178711
    10. 'on' → logprob: -11.50155258178711

Token 834: ' le' (ID: 505)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8577925562858582
    2. '       ' → logprob: -2.107792615890503
    3. 'la' → logprob: -2.232792615890503
    4. 'le' → logprob: -2.357792615890503
    5. ' la' → logprob: -2.357792615890503
    6. ',' → logprob: -2.982792615890503
    7. ':' → logprob: -3.732792615890503
    8. ' #' → logprob: -3.857792615890503
    9. ' le' → logprob: -4.232792377471924
    10. 'l' → logprob: -4.857792377471924

Token 835: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.33552688360214233
    2. '#' → logprob: -1.710526943206787
    3. 'total' → logprob: -2.960526943206787
    4. 'nb' → logprob: -4.335526943206787
    5. 'res' → logprob: -4.460526943206787
    6. 'minimum' → logprob: -4.710526943206787
    7. 'result' → logprob: -5.335526943206787
    8. 'rés' → logprob: -5.835526943206787
    9. ' nombre' → logprob: -6.335526943206787
    10. 'mst' → logprob: -6.585526943206787

Token 836: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45552605390548706
    2. '#' → logprob: -2.455526113510132
    3. ' de' → logprob: -2.705526113510132
    4. 'de' → logprob: -2.705526113510132
    5. 'd' → logprob: -3.080526113510132
    6. 'total' → logprob: -3.580526113510132
    7. '_total' → logprob: -4.455525875091553
    8. ' d' → logprob: -4.455525875091553
    9. '_de' → logprob: -4.830525875091553
    10. '   ' → logprob: -5.330525875091553

Token 837: ' MST' (ID: 123058)
  Prédit: 'sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sp' → logprob: -1.0623469352722168
    2. 'arb' → logprob: -1.0623469352722168
    3. 'ar' → logprob: -1.5623469352722168
    4. 'ways' → logprob: -3.062346935272217
    5. 'man' → logprob: -4.187346935272217
    6. 's' → logprob: -4.937346935272217
    7. 'mst' → logprob: -5.187346935272217
    8. '#' → logprob: -5.312346935272217
    9. ' MST' → logprob: -5.687346935272217
    10. 'fa' → logprob: -5.812346935272217

Token 838: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8212249279022217
    2. 'result' → logprob: -1.3212249279022217
    3. 'ans' → logprob: -2.9462249279022217
    4. 'answer' → logprob: -3.0712249279022217
    5. '   ' → logprob: -3.5712249279022217
    6. 'total' → logprob: -3.5712249279022217
    7. 'res' → logprob: -3.9462249279022217
    8. '
' → logprob: -3.9462249279022217
    9. 'results' → logprob: -3.9462249279022217
    10. 'def' → logprob: -4.821225166320801

Token 839: ' poids' (ID: 56058)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7610428333282471
    2. 'c' → logprob: -1.261042833328247
    3. 'la' → logprob: -3.386042833328247
    4. ' cette' → logprob: -3.636042833328247
    5. 'cha' → logprob: -3.636042833328247
    6. 'ces' → logprob: -3.636042833328247
    7. 'celle' → logprob: -4.011042594909668
    8. 'l' → logprob: -4.136042594909668
    9. 'com' → logprob: -4.386042594909668
    10. '(s' → logprob: -4.761042594909668

Token 840: ' minimal' (ID: 19957)
  Prédit: 'minimum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minimum' → logprob: -0.3157884180545807
    2. 'minimal' → logprob: -1.6907883882522583
    3. 'exact' → logprob: -3.815788507461548
    4. ' minimal' → logprob: -3.940788507461548
    5. 'total' → logprob: -4.065788269042969
    6. ' minimum' → logprob: -4.315788269042969
    7. 'égal' → logprob: -5.440788269042969
    8. 'min' → logprob: -5.565788269042969
    9. '=' → logprob: -5.940788269042969
    10. ' égal' → logprob: -7.565788269042969

Token 841: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.036619048565626144
    2. '        
' → logprob: -4.286619186401367
    3. '
' → logprob: -4.661619186401367
    4. ',' → logprob: -5.161619186401367
    5. 'result' → logprob: -6.161619186401367
    6. '   ' → logprob: -7.536619186401367
    7. 'for' → logprob: -7.661619186401367
    8. ' result' → logprob: -7.786619186401367
    9. ' for' → logprob: -7.911619186401367
    10. 'results' → logprob: -7.911619186401367

Token 842: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015641386853531003
    2. '   ' → logprob: -7.001564025878906
    3. '#' → logprob: -8.626564025878906
    4. '        
' → logprob: -8.626564025878906
    5. '
' → logprob: -9.001564025878906
    6. ',' → logprob: -9.626564025878906
    7. 'def' → logprob: -10.126564025878906
    8. 'total' → logprob: -11.001564025878906
    9. '           ' → logprob: -11.751564025878906
    10. 'for' → logprob: -12.376564025878906

Token 843: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.344808578491211
    2. 'def' → logprob: -1.594808578491211
    3. 'result' → logprob: -1.969808578491211
    4. 'res' → logprob: -2.094808578491211
    5. '   ' → logprob: -2.844808578491211
    6. 'total' → logprob: -2.969808578491211
    7. 'import' → logprob: -3.594808578491211
    8. 'dp' → logprob: -3.594808578491211
    9. 'from' → logprob: -3.844808578491211
    10. 'count' → logprob: -3.969808578491211

Token 844: ' puis' (ID: 18766)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.6067637205123901
    2. 'def' → logprob: -0.9817637205123901
    3. '   ' → logprob: -3.8567638397216797
    4. 'result' → logprob: -4.23176383972168
    5. 'results' → logprob: -4.85676383972168
    6. 'dp' → logprob: -4.98176383972168
    7. 'ans' → logprob: -4.98176383972168
    8. '       ' → logprob: -5.60676383972168
    9. 'import' → logprob: -5.60676383972168
    10. 'total' → logprob: -5.98176383972168

Token 845: ' faire' (ID: 8119)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.3244725167751312
    2. 'res' → logprob: -2.074472427368164
    3. 'result' → logprob: -2.574472427368164
    4. 'ans' → logprob: -2.949472427368164
    5. 'answer' → logprob: -4.449472427368164
    6. '#' → logprob: -5.574472427368164
    7. 'count' → logprob: -6.074472427368164
    8. 'cnt' → logprob: -6.824472427368164
    9. ' total' → logprob: -7.199472427368164
    10. 'for' → logprob: -7.199472427368164

Token 846: ' le' (ID: 505)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.7981201410293579
    2. 'ans' → logprob: -2.0481200218200684
    3. 'result' → logprob: -2.2981200218200684
    4. '
' → logprob: -2.4231200218200684
    5. '   ' → logprob: -2.9231200218200684
    6. 'res' → logprob: -3.0481200218200684
    7. ' res' → logprob: -3.5481200218200684
    8. ' total' → logprob: -3.6731200218200684
    9. 'for' → logprob: -4.548120021820068
    10. 'answer' → logprob: -4.548120021820068

Token 847: ' produit' (ID: 29429)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.4574410915374756
    2. ' produit' → logprob: -2.2074410915374756
    3. 'total' → logprob: -2.8324410915374756
    4. 'produ' → logprob: -2.8324410915374756
    5. 'prod' → logprob: -3.2074410915374756
    6. 'import' → logprob: -3.5824410915374756
    7. 'multip' → logprob: -4.082441329956055
    8. ' product' → logprob: -4.457441329956055
    9. 'pow' → logprob: -5.207441329956055
    10. 'acc' → logprob: -5.457441329956055

Token 848: ' modulo' (ID: 112372)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.30145636200904846
    2. '       ' → logprob: -1.926456332206726
    3. 'answer' → logprob: -3.4264564514160156
    4. 'ans' → logprob: -3.5514564514160156
    5. ' result' → logprob: -4.426456451416016
    6. 'count' → logprob: -4.676456451416016
    7. '   ' → logprob: -4.926456451416016
    8. 'total' → logprob: -5.176456451416016
    9. 'res' → logprob: -5.301456451416016
    10. '
' → logprob: -5.926456451416016

Token 849: ' ' (ID: 220)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.532379150390625
    2. '       ' → logprob: -1.657379150390625
    3. 'answer' → logprob: -2.532379150390625
    4. 'ans' → logprob: -2.907379150390625
    5. 'total' → logprob: -3.157379150390625
    6. 'res' → logprob: -4.032379150390625
    7. ' result' → logprob: -5.407379150390625
    8. '   ' → logprob: -5.407379150390625
    9. 'count' → logprob: -5.532379150390625
    10. '
' → logprob: -5.532379150390625

Token 850: '100' (ID: 1353)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0086202472448349
    2. '_MOD' → logprob: -6.633620262145996
    3. '\' → logprob: -6.758620262145996
    4. ' MOD' → logprob: -7.008620262145996
    5. '(
' → logprob: -7.383620262145996
    6. 'for' → logprob: -7.633620262145996
    7. '100' → logprob: -7.758620262145996
    8. '(' → logprob: -7.758620262145996
    9. '`' → logprob: -8.008620262145996
    10. '
' → logprob: -8.133620262145996

Token 851: '07' (ID: 3173)
  Prédit: '07'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '07' → logprob: -8.93579563125968e-05
    2. '7' → logprob: -9.750089645385742
    3. '00' → logprob: -11.750089645385742
    4. 'MOD' → logprob: -11.875089645385742
    5. '007' → logprob: -12.375089645385742
    6. '
' → logprob: -12.625089645385742
    7. '```' → logprob: -12.875089645385742
    8. 'mod' → logprob: -13.500089645385742
    9. '03' → logprob: -13.625089645385742
    10. '000' → logprob: -13.875089645385742

Token 852: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1991671472787857
    2. 'result' → logprob: -2.574167251586914
    3. '
' → logprob: -3.324167251586914
    4. 'def' → logprob: -3.949167251586914
    5. '    
' → logprob: -3.949167251586914
    6. 'res' → logprob: -4.449167251586914
    7. '       ' → logprob: -5.199167251586914
    8. 'answer' → logprob: -5.574167251586914
    9. 'count' → logprob: -6.199167251586914
    10. '        
' → logprob: -6.324167251586914

Token 853: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5964351296424866
    2. 'result' → logprob: -1.2214350700378418
    3. 'res' → logprob: -3.096435070037842
    4. '       ' → logprob: -3.346435070037842
    5. 'answer' → logprob: -3.346435070037842
    6. 'ans' → logprob: -4.346435070037842
    7. '    
' → logprob: -4.846435070037842
    8. '
' → logprob: -5.346435070037842
    9. 'total' → logprob: -5.846435070037842
    10. ' result' → logprob: -6.221435070037842

Token 854: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.6854734420776367
    2. 'result' → logprob: -1.3104734420776367
    3. 'ans' → logprob: -2.4354734420776367
    4. 'answer' → logprob: -2.6854734420776367
    5. '   ' → logprob: -3.1854734420776367
    6. 'total' → logprob: -4.185473442077637
    7. '       ' → logprob: -4.810473442077637
    8. 'count' → logprob: -6.435473442077637
    9. 'def' → logprob: -6.935473442077637
    10. '
' → logprob: -7.435473442077637

Token 855: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14372646808624268
    2. '=' → logprob: -2.018726348876953
    3. '_' → logprob: -6.893726348876953
    4. ' ' → logprob: -10.893726348876953
    5. ',' → logprob: -12.143726348876953
    6. '   ' → logprob: -12.518726348876953
    7. ' _' → logprob: -12.518726348876953
    8. '_=' → logprob: -13.643726348876953
    9. 's' → logprob: -14.268726348876953
    10. ' *=' → logprob: -14.643726348876953

Token 856: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000249061529757455
    2. ' ' → logprob: -8.500248908996582
    3. '   ' → logprob: -10.000248908996582
    4. '       ' → logprob: -16.5002498626709
    5. '```' → logprob: -16.7502498626709
    6. '  ' → logprob: -17.0002498626709
    7. 'mod' → logprob: -17.5002498626709
    8. '    ' → logprob: -18.7502498626709
    9. ' ' → logprob: -19.1877498626709
    10. '۱' → logprob: -19.5627498626709

Token 857: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.625000953674316
    3. '```' → logprob: -16.375
    4. '   ' → logprob: -18.125
    5. '
' → logprob: -18.375
    6. 'pow' → logprob: -18.625
    7. 'res' → logprob: -19.375
    8. 'mod' → logprob: -19.375
    9. '１' → logprob: -20.1875
    10. '``' → logprob: -20.375

Token 858: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02469637617468834
    2. '
' → logprob: -3.7746963500976562
    3. '        
' → logprob: -7.274696350097656
    4. '
' → logprob: -8.649696350097656
    5. ',' → logprob: -8.649696350097656
    6. '   ' → logprob: -9.399696350097656
    7. ' for' → logprob: -9.524696350097656
    8. '    
' → logprob: -10.024696350097656
    9. '  
' → logprob: -10.399696350097656
    10. '' → logprob: -10.774696350097656

Token 859: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01891712285578251
    2. '   ' → logprob: -4.768917083740234
    3. ' for' → logprob: -6.018917083740234
    4. '```' → logprob: -6.393917083740234
    5. 'for' → logprob: -6.518917083740234
    6. '    
' → logprob: -6.768917083740234
    7. '
' → logprob: -7.018917083740234
    8. '        
' → logprob: -7.018917083740234
    9. ',' → logprob: -8.268917083740234
    10. '   
' → logprob: -8.393917083740234

Token 860: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.049222275614738464
    2. '       ' → logprob: -3.299222230911255
    3. 'from' → logprob: -5.174222469329834
    4. '   ' → logprob: -5.799222469329834
    5. 'import' → logprob: -6.299222469329834
    6. ' for' → logprob: -8.174221992492676
    7. 'def' → logprob: -8.924221992492676
    8. '```' → logprob: -9.799221992492676
    9. 'edges' → logprob: -9.799221992492676
    10. '
' → logprob: -11.299221992492676

Token 861: ' Fonction' (ID: 189149)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06331076472997665
    2. 'from' → logprob: -3.3133108615875244
    3. 'import' → logprob: -3.9383108615875244
    4. '       ' → logprob: -6.063310623168945
    5. '   ' → logprob: -6.563310623168945
    6. ' for' → logprob: -7.313310623168945
    7. 'comp' → logprob: -7.938310623168945
    8. 'def' → logprob: -8.563310623168945
    9. '
' → logprob: -8.938310623168945
    10. 'edges' → logprob: -9.188310623168945

Token 862: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00934128649532795
    2. '   ' → logprob: -5.259341239929199
    3. '=' → logprob: -6.134341239929199
    4. ' def' → logprob: -7.634341239929199
    5. ' =' → logprob: -7.759341239929199
    6. '
' → logprob: -8.1343412399292
    7. 'dfs' → logprob: -8.5093412399292
    8. 'to' → logprob: -8.7593412399292
    9. '       ' → logprob: -9.5093412399292
    10. ' to' → logprob: -9.7593412399292

Token 863: ' calcul' (ID: 7559)
  Prédit: 'kr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'kr' → logprob: -0.31282839179039
    2. 'def' → logprob: -1.8128284215927124
    3. 'count' → logprob: -2.687828302383423
    4. 'compute' → logprob: -4.437828540802002
    5. 'dfs' → logprob: -5.187828540802002
    6. 'calculate' → logprob: -5.812828540802002
    7. 'merge' → logprob: -5.937828540802002
    8. 'union' → logprob: -5.937828540802002
    9. 'solve' → logprob: -6.062828540802002
    10. 'calc' → logprob: -6.437828540802002

Token 864: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.34722471237182617
    2. 'def' → logprob: -1.3472247123718262
    3. 'te' → logprob: -4.722224712371826
    4. 'ate' → logprob: -5.472224712371826
    5. '#' → logprob: -5.722224712371826
    6. 'r' → logprob: -5.847224712371826
    7. 'tion' → logprob: -5.972224712371826
    8. '   ' → logprob: -6.347224712371826
    9. 't' → logprob: -6.597224712371826
    10. 'on' → logprob: -6.597224712371826

Token 865: ' le' (ID: 505)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.056602902710437775
    2. 'count' → logprob: -3.181602954864502
    3. 'kr' → logprob: -5.306602954864502
    4. '#' → logprob: -5.306602954864502
    5. 'dfs' → logprob: -6.681602954864502
    6. '   ' → logprob: -7.306602954864502
    7. 'number' → logprob: -8.431602478027344
    8. '(count' → logprob: -8.556602478027344
    9. 'cnt' → logprob: -8.806602478027344
    10. 'num' → logprob: -9.056602478027344

Token 866: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.0029791255947202444
    2. 'nb' → logprob: -7.377979278564453
    3. ' nombre' → logprob: -7.377979278564453
    4. 'next' → logprob: -7.377979278564453
    5. 'minimum' → logprob: -8.377979278564453
    6. '#' → logprob: -8.502979278564453
    7. 'count' → logprob: -8.752979278564453
    8. 'def' → logprob: -9.127979278564453
    9. 'mod' → logprob: -9.627979278564453
    10. 'M' → logprob: -9.627979278564453

Token 867: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08184900879859924
    2. '   ' → logprob: -3.4568490982055664
    3. 'de' → logprob: -4.331849098205566
    4. '       ' → logprob: -4.331849098205566
    5. 'import' → logprob: -4.831849098205566
    6. ' de' → logprob: -5.206849098205566
    7. '#' → logprob: -5.456849098205566
    8. 'from' → logprob: -6.706849098205566
    9. 'd' → logprob: -7.456849098205566
    10. '_de' → logprob: -8.206849098205566

Token 868: ' MST' (ID: 123058)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.08309954404830933
    2. 'sp' → logprob: -3.083099603652954
    3. 'ar' → logprob: -4.458099365234375
    4. 'mst' → logprob: -5.083099365234375
    5. 'ways' → logprob: -5.333099365234375
    6. ' MST' → logprob: -5.458099365234375
    7. 'arb' → logprob: -5.958099365234375
    8. ' spanning' → logprob: -7.208099365234375
    9. 'm' → logprob: -7.333099365234375
    10. 'com' → logprob: -7.583099365234375

Token 869: ' dans' (ID: 2671)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14834514260292053
    2. '_count' → logprob: -2.6483452320098877
    3. '(
' → logprob: -4.523344993591309
    4. '_d' → logprob: -5.148344993591309
    5. '_def' → logprob: -5.273344993591309
    6. '_' → logprob: -5.523344993591309
    7. '_de' → logprob: -5.773344993591309
    8. '_of' → logprob: -6.023344993591309
    9. '_token' → logprob: -6.273344993591309
    10. '_counts' → logprob: -6.273344993591309

Token 870: ' une' (ID: 2463)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11390824615955353
    2. 'une' → logprob: -3.113908290863037
    3. '#' → logprob: -3.488908290863037
    4. 'la' → logprob: -4.488908290863037
    5. 'com' → logprob: -5.113908290863037
    6. 'comp' → logprob: -5.363908290863037
    7. 'a' → logprob: -5.738908290863037
    8. 'un' → logprob: -6.238908290863037
    9. ' une' → logprob: -6.988908290863037
    10. ' def' → logprob: -7.363908290863037

Token 871: ' compos' (ID: 14635)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.057302314788103104
    2. 'com' → logprob: -3.682302236557007
    3. '#' → logprob: -4.182302474975586
    4. 'import' → logprob: -5.557302474975586
    5. 'from' → logprob: -5.682302474975586
    6. 'component' → logprob: -5.932302474975586
    7. 'comp' → logprob: -5.932302474975586
    8. '   ' → logprob: -7.682302474975586
    9. '       ' → logprob: -7.807302474975586
    10. 'for' → logprob: -8.182302474975586

Token 872: 'ante' (ID: 2116)
  Prédit: 'ponent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ponent' → logprob: -0.064752958714962
    2. 'pon' → logprob: -3.6897530555725098
    3. 'ponente' → logprob: -4.68975305557251
    4. 'p' → logprob: -4.81475305557251
    5. 'pos' → logprob: -5.06475305557251
    6. 'def' → logprob: -5.93975305557251
    7. 'pont' → logprob: -6.31475305557251
    8. 'ont' → logprob: -6.68975305557251
    9. '#' → logprob: -6.93975305557251
    10. 'on' → logprob: -7.06475305557251

Token 873: ' via' (ID: 4493)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3583906888961792
    2. '   ' → logprob: -1.4833906888961792
    3. '       ' → logprob: -2.7333908081054688
    4. '
' → logprob: -5.483390808105469
    5. ' def' → logprob: -5.983390808105469
    6. 'import' → logprob: -7.233390808105469
    7. 'from' → logprob: -7.483390808105469
    8. '(' → logprob: -7.858390808105469
    9. ' (' → logprob: -8.983390808105469
    10. '(
' → logprob: -8.983390808105469

Token 874: ' MST' (ID: 123058)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7501471638679504
    2. '#' → logprob: -1.3751471042633057
    3. 'K' → logprob: -1.5001471042633057
    4. 'kr' → logprob: -4.250147342681885
    5. 'la' → logprob: -4.375147342681885
    6. 'import' → logprob: -4.625147342681885
    7. 'Kr' → logprob: -6.000147342681885
    8. 'l' → logprob: -6.250147342681885
    9. 'Union' → logprob: -6.625147342681885
    10. ' def' → logprob: -6.750147342681885

Token 875: ' count' (ID: 3605)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14799782633781433
    2. '_' → logprob: -2.8979978561401367
    3. '_d' → logprob: -4.397997856140137
    4. 'K' → logprob: -4.522997856140137
    5. '_count' → logprob: -4.647997856140137
    6. '_weight' → logprob: -5.397997856140137
    7. '_K' → logprob: -5.397997856140137
    8. '_util' → logprob: -5.522997856140137
    9. '(n' → logprob: -5.647997856140137
    10. ' def' → logprob: -6.022997856140137

Token 876: ' algorithm' (ID: 22184)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.027753010392189026
    2. '   ' → logprob: -4.277752876281738
    3. ' def' → logprob: -4.777752876281738
    4. '(n' → logprob: -7.277752876281738
    5. ':' → logprob: -7.402752876281738
    6. '
' → logprob: -7.652752876281738
    7. '       ' → logprob: -7.777752876281738
    8. '_' → logprob: -7.777752876281738
    9. '(
' → logprob: -8.027752876281738
    10. '#' → logprob: -8.527752876281738

Token 877: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5502504110336304
    2. '       ' → logprob: -1.0502504110336304
    3. '   ' → logprob: -2.67525053024292
    4. '
' → logprob: -6.42525053024292
    5. ' def' → logprob: -6.80025053024292
    6. '(' → logprob: -7.67525053024292
    7. 'import' → logprob: -8.175250053405762
    8. ' (' → logprob: -8.675250053405762
    9. '(def' → logprob: -8.800250053405762
    10. ':' → logprob: -9.175250053405762

Token 878: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5177620649337769
    2. '   ' → logprob: -1.3927620649337769
    3. 'def' → logprob: -1.8927620649337769
    4. ' def' → logprob: -5.642762184143066
    5. '
' → logprob: -7.267762184143066
    6. 'import' → logprob: -7.642762184143066
    7. 'from' → logprob: -9.642762184143066
    8. ':' → logprob: -9.767762184143066
    9. ')' → logprob: -10.392762184143066
    10. '           ' → logprob: -10.392762184143066

Token 879: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.020462989807129
    2. '   ' → logprob: -1.145462989807129
    3. '       ' → logprob: -1.270462989807129
    4. '
' → logprob: -3.645462989807129
    5. ' def' → logprob: -4.395462989807129
    6. 'import' → logprob: -6.520462989807129
    7. '```' → logprob: -8.020462989807129
    8. 'from' → logprob: -8.395462989807129
    9. '    
' → logprob: -9.395462989807129
    10. '	def' → logprob: -9.645462989807129

Token 880: ' Appro' (ID: 24145)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1455639749765396
    2. '   ' → logprob: -2.395564079284668
    3. 'import' → logprob: -4.145564079284668
    4. '
' → logprob: -4.520564079284668
    5. '       ' → logprob: -4.770564079284668
    6. 'from' → logprob: -4.770564079284668
    7. ' def' → logprob: -7.645564079284668
    8. '#' → logprob: -9.020564079284668
    9. '	def' → logprob: -10.395564079284668
    10. ' from' → logprob: -11.395564079284668

Token 881: 'che' (ID: 926)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5733669996261597
    2. 'def' → logprob: -1.0733669996261597
    3. 'ach' → logprob: -3.073367118835449
    4. 'xim' → logprob: -4.073367118835449
    5. '#' → logprob: -4.323367118835449
    6. 'priate' → logprob: -5.323367118835449
    7. 'aching' → logprob: -5.823367118835449
    8. 'ch' → logprob: -6.073367118835449
    9. 'ximately' → logprob: -6.698367118835449
    10. 'ches' → logprob: -6.823367118835449

Token 882: ':
' (ID: 734)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0640607550740242
    2. '       ' → logprob: -3.439060688018799
    3. 'import' → logprob: -4.189060688018799
    4. 'from' → logprob: -5.064060688018799
    5. ':' → logprob: -5.939060688018799
    6. '#' → logprob: -6.189060688018799
    7. ' def' → logprob: -6.439060688018799
    8. '```' → logprob: -7.814060688018799
    9. '   ' → logprob: -8.064061164855957
    10. ' from' → logprob: -8.564061164855957

Token 883: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04058581590652466
    2. 'def' → logprob: -3.41558575630188
    3. 'import' → logprob: -6.040585994720459
    4. '#' → logprob: -6.165585994720459
    5. '   ' → logprob: -6.790585994720459
    6. 'from' → logprob: -7.290585994720459
    7. '
' → logprob: -8.1655855178833
    8. ' def' → logprob: -8.4155855178833
    9. '```' → logprob: -9.9155855178833
    10. ' from' → logprob: -10.2905855178833

Token 884: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9951301217079163
    2. 'def' → logprob: -1.3701300621032715
    3. '#' (adapté à ' #') → logprob: -1.4951300621032715
    4. '   ' → logprob: -1.9951300621032715
    5. ' def' → logprob: -5.3701300621032715
    6. 'import' → logprob: -5.6201300621032715
    7. 'from' → logprob: -5.7451300621032715
    8. ' #' → logprob: -5.7451300621032715
    9. '
' → logprob: -8.12013053894043
    10. ' from' → logprob: -8.24513053894043

Token 885: ' On' (ID: 2160)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6573112607002258
    2. 'from' → logprob: -1.282311201095581
    3. '#' → logprob: -2.282311201095581
    4. 'import' → logprob: -3.032311201095581
    5. '       ' → logprob: -3.157311201095581
    6. '   ' → logprob: -5.15731143951416
    7. '"""
' → logprob: -6.90731143951416
    8. 'class' → logprob: -7.28231143951416
    9. 'for' → logprob: -7.28231143951416
    10. '```' → logprob: -7.40731143951416

Token 886: ' utilise' (ID: 70283)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7716639637947083
    2. '       ' → logprob: -0.8966639637947083
    3. 'import' → logprob: -3.0216639041900635
    4. '   ' → logprob: -3.3966639041900635
    5. 'continue' → logprob: -3.5216639041900635
    6. 'from' → logprob: -5.771664142608643
    7. ' continue' → logprob: -5.771664142608643
    8. 'contin' → logprob: -5.771664142608643
    9. '#' → logprob: -6.146664142608643
    10. '=' → logprob: -6.521664142608643

Token 887: ' l' (ID: 305)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.6775514483451843
    2. 'une' → logprob: -1.427551507949829
    3. 'un' → logprob: -2.677551507949829
    4. 'la' → logprob: -2.802551507949829
    5. 'le' → logprob: -3.427551507949829
    6. 'import' → logprob: -3.677551507949829
    7. 'l' → logprob: -4.05255126953125
    8. 'les' → logprob: -4.17755126953125
    9. 'Kr' → logprob: -4.80255126953125
    10. 'des' → logprob: -5.42755126953125

Token 888: ''' (ID: 6)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7962818145751953
    2. 'import' → logprob: -1.5462818145751953
    3. 'def' → logprob: -1.7962818145751953
    4. '#' → logprob: -2.6712818145751953
    5. 'edges' → logprob: -3.0462818145751953
    6. ' edges' → logprob: -5.171281814575195
    7. 'e' → logprob: -5.171281814575195
    8. 'd' → logprob: -5.296281814575195
    9. 'ambda' → logprob: -5.546281814575195
    10. 'collections' → logprob: -5.796281814575195

Token 889: 'alg' (ID: 15258)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5013309717178345
    2. 'def' → logprob: -1.8763309717178345
    3. 'import' → logprob: -2.501330852508545
    4. '#' → logprob: -3.126330852508545
    5. 'edges' → logprob: -3.501330852508545
    6. 'collections' → logprob: -4.376330852508545
    7. 'union' → logprob: -4.501330852508545
    8. '       ' → logprob: -4.501330852508545
    9. 'Union' → logprob: -4.626330852508545
    10. 'Counter' → logprob: -4.626330852508545

Token 890: 'orith' (ID: 9996)
  Prédit: 'orith'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orith' → logprob: -0.010607490316033363
    2. 'orithm' → logprob: -4.885607719421387
    3. '=' → logprob: -6.635607719421387
    4. '   ' → logprob: -7.635607719421387
    5. 'def' → logprob: -7.885607719421387
    6. '#' → logprob: -8.010607719421387
    7. 'or' → logprob: -9.135607719421387
    8. 'o' → logprob: -9.385607719421387
    9. 'import' → logprob: -9.885607719421387
    10. 'orit' → logprob: -10.010607719421387

Token 891: 'me' (ID: 1047)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.049459438771009445
    2. 'me' → logprob: -3.049459457397461
    3. '   ' → logprob: -8.049459457397461
    4. '=' → logprob: -8.674459457397461
    5. '       ' → logprob: -8.924459457397461
    6. '#' → logprob: -10.049459457397461
    7. 'ms' → logprob: -10.674459457397461
    8. 'n' → logprob: -10.799459457397461
    9. ' ' → logprob: -11.049459457397461
    10. '```' → logprob: -11.174459457397461

Token 892: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.17679844796657562
    2. ' de' → logprob: -3.1767983436584473
    3. 'def' → logprob: -3.1767983436584473
    4. '#' → logprob: -3.5517983436584473
    5. 'kr' → logprob: -3.8017983436584473
    6. '       ' → logprob: -4.551798343658447
    7. '   ' → logprob: -4.801798343658447
    8. 'import' → logprob: -6.176798343658447
    9. 'class' → logprob: -6.926798343658447
    10. '
' → logprob: -7.051798343658447

Token 893: ' Kr' (ID: 11317)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.006764279678463936
    2. 'kr' → logprob: -5.1317644119262695
    3. 'Kr' → logprob: -7.2567644119262695
    4. 'Kir' → logprob: -9.88176441192627
    5. '
' → logprob: -10.75676441192627
    6. '	K' → logprob: -11.75676441192627
    7. 'prim' → logprob: -12.00676441192627
    8. 'count' → logprob: -12.00676441192627
    9. '_K' → logprob: -12.25676441192627
    10. '#' → logprob: -12.38176441192627

Token 894: 'us' (ID: 385)
  Prédit: 'us'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.0003037650021724403
    2. 'usk' → logprob: -9.250304222106934
    3. '#' → logprob: -9.625304222106934
    4. 'usz' → logprob: -10.250304222106934
    5. '
' → logprob: -10.500304222106934
    6. 'ush' → logprob: -11.125304222106934
    7. '```' → logprob: -11.250304222106934
    8. '       ' → logprob: -11.875304222106934
    9. 'uss' → logprob: -11.875304222106934
    10. 'ус' → logprob: -12.125304222106934

Token 895: 'kal' (ID: 23466)
  Prédit: 'us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.029599938541650772
    2. 'usk' → logprob: -5.029600143432617
    3. 'k' → logprob: -5.529600143432617
    4. 'uk' → logprob: -5.779600143432617
    5. '```' → logprob: -5.904600143432617
    6. 'kal' → logprob: -6.029600143432617
    7. 'sk' → logprob: -6.029600143432617
    8. 'al' → logprob: -6.404600143432617
    9. 'skal' → logprob: -6.404600143432617
    10. 'ks' → logprob: -6.654600143432617

Token 896: ' mod' (ID: 1812)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08303821086883545
    2. 'def' → logprob: -3.333038330078125
    3. '#' → logprob: -4.083038330078125
    4. '   ' → logprob: -4.708038330078125
    5. '
' → logprob: -4.833038330078125
    6. 'import' → logprob: -5.708038330078125
    7. ',' → logprob: -5.958038330078125
    8. '           ' → logprob: -7.458038330078125
    9. 'from' → logprob: -7.458038330078125
    10. '        
' → logprob: -7.833038330078125

Token 897: 'ifié' (ID: 49927)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4716681241989136
    2. 'ulaire' → logprob: -1.5966681241989136
    3. 'ule' → logprob: -1.8466681241989136
    4. '\' → logprob: -2.721668243408203
    5. '```' → logprob: -2.846668243408203
    6. 'ifié' → logprob: -2.971668243408203
    7. 'ular' → logprob: -3.221668243408203
    8. 'ifiée' → logprob: -3.346668243408203
    9. 'e' → logprob: -3.971668243408203
    10. '       ' → logprob: -4.096668243408203

Token 898: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03183084353804588
    2. '   ' → logprob: -4.281830787658691
    3. 'def' → logprob: -4.656830787658691
    4. ',' → logprob: -6.031830787658691
    5. ':' → logprob: -6.781830787658691
    6. 'import' → logprob: -6.906830787658691
    7. 'from' → logprob: -7.156830787658691
    8. '```' → logprob: -7.406830787658691
    9. '
' → logprob: -8.156830787658691
    10. ' (' → logprob: -8.531830787658691

Token 899: ' compter' (ID: 81694)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.10233845561742783
    2. 'tr' → logprob: -2.9773385524749756
    3. 'calcul' → logprob: -4.1023383140563965
    4. 'g' → logprob: -4.4773383140563965
    5. 'com' → logprob: -5.6023383140563965
    6. ' compter' → logprob: -5.7273383140563965
    7. 'dé' → logprob: -5.9773383140563965
    8. 'count' → logprob: -6.4773383140563965
    9. '#' → logprob: -6.6023383140563965
    10. '   ' → logprob: -6.8523383140563965

Token 900: ' les' (ID: 1341)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.696553647518158
    2. ' le' → logprob: -1.6965537071228027
    3. ' les' → logprob: -2.1965537071228027
    4. 'les' → logprob: -2.3215537071228027
    5. '       ' → logprob: -3.1965537071228027
    6. '   ' → logprob: -4.571553707122803
    7. '_le' → logprob: -5.196553707122803
    8. ' ' → logprob: -5.196553707122803
    9. ',' → logprob: -5.446553707122803
    10. 'the' → logprob: -5.446553707122803

Token 901: ' MST' (ID: 123058)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.18308448791503906
    2. ' nombres' → logprob: -2.933084487915039
    3. '#' → logprob: -3.683084487915039
    4. 'multip' → logprob: -3.808084487915039
    5. 'ar' → logprob: -3.933084487915039
    6. ' nombre' → logprob: -4.183084487915039
    7. ' ways' → logprob: -4.933084487915039
    8. 'diff' → logprob: -4.933084487915039
    9. 'arb' → logprob: -5.933084487915039
    10. 'ways' → logprob: -5.933084487915039

Token 902: ' minimal' (ID: 19957)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017232561483979225
    2. '   ' → logprob: -5.017232418060303
    3. '
' → logprob: -5.267232418060303
    4. '        
' → logprob: -6.642232418060303
    5. 'def' → logprob: -6.892232418060303
    6. 'import' → logprob: -7.017232418060303
    7. ',' → logprob: -7.517232418060303
    8. ':' → logprob: -8.017232894897461
    9. 'from' → logprob: -8.517232894897461
    10. '    
' → logprob: -8.767232894897461

Token 903: ' de' (ID: 334)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_edges' → logprob: -1.20257568359375
    2. 'def' → logprob: -1.70257568359375
    3. '   ' → logprob: -1.82757568359375
    4. '       ' → logprob: -2.32757568359375
    5. 'edges' → logprob: -2.32757568359375
    6. ' edges' → logprob: -3.07757568359375
    7. 'e' → logprob: -3.70257568359375
    8. 'aires' → logprob: -4.20257568359375
    9. '(edges' → logprob: -4.82757568359375
    10. ',' → logprob: -4.82757568359375

Token 904: ' toute' (ID: 16825)
  Prédit: 'po'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'po' → logprob: -0.21762214601039886
    2. 'cha' → logprob: -1.96762216091156
    3. 'l' → logprob: -3.9676220417022705
    4. ' poids' → logprob: -4.21762228012085
    5. 'la' → logprob: -5.71762228012085
    6. '#' → logprob: -5.84262228012085
    7. 'nombre' → logprob: -6.21762228012085
    8. 'pond' → logprob: -6.21762228012085
    9. 'le' → logprob: -6.59262228012085
    10. '```' → logprob: -6.84262228012085

Token 905: ' la' (ID: 557)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.4209774136543274
    2. '#' → logprob: -2.0459773540496826
    3. 'po' → logprob: -2.6709773540496826
    4. 'l' → logprob: -2.7959773540496826
    5. 'la' → logprob: -2.9209773540496826
    6. '   ' → logprob: -4.545977592468262
    7. 'le' → logprob: -5.295977592468262
    8. '       ' → logprob: -5.795977592468262
    9. 'fa' → logprob: -6.795977592468262
    10. 'c' → logprob: -6.795977592468262

Token 906: ' compos' (ID: 14635)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.006426052190363407
    2. 'part' → logprob: -6.756425857543945
    3. 'comp' → logprob: -6.756425857543945
    4. 'graph' → logprob: -7.006425857543945
    5. 'component' → logprob: -7.131425857543945
    6. ' compos' → logprob: -7.506425857543945
    7. 'ligne' → logprob: -7.756425857543945
    8. 'import' → logprob: -8.506425857543945
    9. 'def' → logprob: -8.756425857543945
    10. 'fonction' → logprob: -8.756425857543945

Token 907: 'ante' (ID: 2116)
  Prédit: 'te'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'te' → logprob: -0.7833120226860046
    2. 'nte' → logprob: -1.1583120822906494
    3. 't' → logprob: -2.5333120822906494
    4. 'té' → logprob: -3.0333120822906494
    5. '#' → logprob: -3.4083120822906494
    6. 'pte' → logprob: -4.15831184387207
    7. 'nt' → logprob: -4.53331184387207
    8. 'p' → logprob: -4.53331184387207
    9. 'import' → logprob: -5.53331184387207
    10. 'pt' → logprob: -5.90831184387207

Token 908: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10711158066987991
    2. '
' → logprob: -2.982111692428589
    3. '   ' → logprob: -3.357111692428589
    4. '        
' → logprob: -4.60711145401001
    5. '    
' → logprob: -5.85711145401001
    6. 'import' → logprob: -6.98211145401001
    7. '  
' → logprob: -7.85711145401001
    8. ',' → logprob: -8.357111930847168
    9. 'def' → logprob: -8.607111930847168
    10. '<|end|>' → logprob: -8.607111930847168

Token 909: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012669390998780727
    2. '   ' → logprob: -4.637669563293457
    3. '        
' → logprob: -6.262669563293457
    4. '
' → logprob: -7.762669563293457
    5. '    
' → logprob: -8.012669563293457
    6. 'def' → logprob: -9.887669563293457
    7. '           ' → logprob: -10.512669563293457
    8. ',' → logprob: -10.762669563293457
    9. ')' → logprob: -10.887669563293457
    10. 'import' → logprob: -11.012669563293457

Token 910: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03302792087197304
    2. 'def' → logprob: -4.1580281257629395
    3. '
' → logprob: -4.5330281257629395
    4. '   ' → logprob: -6.0330281257629395
    5. 'from' → logprob: -6.4080281257629395
    6. 'import' → logprob: -6.9080281257629395
    7. '#' (adapté à ' #') → logprob: -7.7830281257629395
    8. '        
' → logprob: -8.408027648925781
    9. 'class' → logprob: -8.533027648925781
    10. ' from' → logprob: -9.908027648925781

Token 911: ' https' (ID: 5918)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4533878564834595
    2. '   ' → logprob: -1.7033878564834595
    3. 'def' → logprob: -2.20338773727417
    4. '
' → logprob: -2.82838773727417
    5. 'from' → logprob: -5.07838773727417
    6. 'import' → logprob: -5.82838773727417
    7. '        
' → logprob: -7.20338773727417
    8. '    
' → logprob: -7.70338773727417
    9. ' def' → logprob: -7.82838773727417
    10. ' from' → logprob: -8.078388214111328

Token 912: '://' (ID: 1684)
  Prédit: '://'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '://' → logprob: -0.04543130472302437
    2. ':' → logprob: -3.17043137550354
    3. '#' → logprob: -6.420431137084961
    4. 'def' → logprob: -7.670431137084961
    5. 'import' → logprob: -9.670431137084961
    6. ' :' → logprob: -9.795431137084961
    7. ':
' → logprob: -10.045431137084961
    8. '[:]' → logprob: -10.170431137084961
    9. 'from' → logprob: -10.420431137084961
    10. ':#' → logprob: -10.670431137084961

Token 913: 'en' (ID: 262)
  Prédit: 'paste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'paste' → logprob: -1.3010623455047607
    2. '#' → logprob: -1.9260623455047607
    3. '//' → logprob: -2.0510623455047607
    4. 'en' → logprob: -2.3010623455047607
    5. 'py' → logprob: -2.8010623455047607
    6. 'w' → logprob: -3.1760623455047607
    7. 'cp' → logprob: -3.5510623455047607
    8. 'at' → logprob: -4.05106258392334
    9. 'leetcode' → logprob: -4.05106258392334
    10. 'judge' → logprob: -4.17606258392334

Token 914: '.wikipedia' (ID: 61012)
  Prédit: '.wikipedia'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.wikipedia' → logprob: -0.01724533922970295
    2. 'wiki' → logprob: -5.017245292663574
    3. 'w' → logprob: -5.767245292663574
    4. '.w' → logprob: -5.767245292663574
    5. '```' → logprob: -6.517245292663574
    6. '.wik' → logprob: -7.767245292663574
    7. '-w' → logprob: -7.892245292663574
    8. '#' → logprob: -8.017245292663574
    9. 'wik' → logprob: -8.267245292663574
    10. 'Wikipedia' → logprob: -8.267245292663574

Token 915: '.org' (ID: 4519)
  Prédit: '.org'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.org' → logprob: -0.9855024814605713
    2. '://' → logprob: -1.2355024814605713
    3. '/wiki' → logprob: -1.4855024814605713
    4. '#' → logprob: -2.3605024814605713
    5. ':' → logprob: -4.610502243041992
    6. '.wikipedia' → logprob: -5.985502243041992
    7. '.' → logprob: -6.985502243041992
    8. '/' → logprob: -8.110502243041992
    9. ':///' → logprob: -8.235502243041992
    10. '.com' → logprob: -8.360502243041992

Token 916: '/wiki' (ID: 51621)
  Prédit: '.org'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.org' → logprob: -0.4755767583847046
    2. '/wiki' → logprob: -0.9755767583847046
    3. '.wikipedia' → logprob: -7.850576877593994
    4. '/org' → logprob: -7.975576877593994
    5. '/python' → logprob: -8.725576400756836
    6. '/w' → logprob: -9.225576400756836
    7. '/' → logprob: -9.600576400756836
    8. '.net' → logprob: -9.725576400756836
    9. '://' → logprob: -9.725576400756836
    10. ':' → logprob: -9.975576400756836

Token 917: '/' (ID: 14)
  Prédit: '/K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/K' → logprob: -0.07273940742015839
    2. '.wikipedia' → logprob: -3.072739362716675
    3. '/wiki' → logprob: -4.322739601135254
    4. '/W' → logprob: -5.572739601135254
    5. '.org' → logprob: -6.072739601135254
    6. 'wiki' → logprob: -6.447739601135254
    7. '://' → logprob: -7.072739601135254
    8. '/' → logprob: -7.447739601135254
    9. 'K' → logprob: -7.822739601135254
    10. '/M' → logprob: -8.197739601135254

Token 918: 'Sp' (ID: 4916)
  Prédit: 'Minimum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Minimum' → logprob: -0.8354417681694031
    2. 'Kir' → logprob: -1.4604418277740479
    3. 'minimum' → logprob: -1.8354418277740479
    4. 'K' → logprob: -2.210441827774048
    5. 'Counting' → logprob: -3.710441827774048
    6. 'Mat' → logprob: -4.710441589355469
    7. 'kir' → logprob: -5.085441589355469
    8. 'kr' → logprob: -5.210441589355469
    9. 'mat' → logprob: -5.335441589355469
    10. 'count' → logprob: -5.835441589355469

Token 919: 'anning' (ID: 6674)
  Prédit: 'anning'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anning' → logprob: -0.044631343334913254
    2. 'an' → logprob: -3.794631242752075
    3. 'r' → logprob: -4.544631481170654
    4. 'rim' → logprob: -5.419631481170654
    5. '#' → logprob: -6.169631481170654
    6. 'anned' → logprob: -7.044631481170654
    7. 'ec' → logprob: -7.044631481170654
    8. 'ann' → logprob: -7.919631481170654
    9. '://' → logprob: -8.044631004333496
    10. '
' → logprob: -8.794631004333496

Token 920: '_tree' (ID: 27118)
  Prédit: '_tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -0.02111491560935974
    2. 'tree' → logprob: -3.8961148262023926
    3. '_' → logprob: -8.52111530303955
    4. '_t' → logprob: -8.77111530303955
    5. 'Tree' → logprob: -9.77111530303955
    6. 'forest' → logprob: -10.02111530303955
    7. '#' → logprob: -10.02111530303955
    8. '
' → logprob: -10.89611530303955
    9. 'tre' → logprob: -11.89611530303955
    10. 'trees' → logprob: -12.02111530303955

Token 921: '#' (ID: 2)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.6572010517120361
    2. '#' → logprob: -1.6572010517120361
    3. '/' → logprob: -2.157201051712036
    4. '_pro' → logprob: -3.532201051712036
    5. '_algorithm' → logprob: -3.782201051712036
    6. '_counts' → logprob: -4.032200813293457
    7. '_list' → logprob: -4.157200813293457
    8. '_' → logprob: -4.157200813293457
    9. '_method' → logprob: -4.907200813293457
    10. '_max' → logprob: -5.657200813293457

Token 922: 'Counting' (ID: 180254)
  Prédit: 'Counting'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counting' → logprob: -0.7421999573707581
    2. 'count' → logprob: -1.4921998977661133
    3. 'Kir' → logprob: -1.4921998977661133
    4. 'Minimum' → logprob: -3.9921998977661133
    5. 'K' → logprob: -4.117199897766113
    6. '#' → logprob: -4.867199897766113
    7. 'minimum' → logprob: -5.117199897766113
    8. 'enumer' → logprob: -5.367199897766113
    9. 'kir' → logprob: -5.617199897766113
    10. 'Matrix' → logprob: -5.992199897766113

Token 923: '_sp' (ID: 18491)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12489061802625656
    2. '#' → logprob: -3.2498905658721924
    3. '       ' → logprob: -3.3748905658721924
    4. 'for' → logprob: -3.9998905658721924
    5. 'from' → logprob: -4.2498908042907715
    6. '   ' → logprob: -4.9998908042907715
    7. '_count' → logprob: -6.7498908042907715
    8. 'import' → logprob: -7.3748908042907715
    9. '```' → logprob: -7.6248908042907715
    10. '        
' → logprob: -8.124890327453613

Token 924: 'anning' (ID: 6674)
  Prédit: 'anning'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anning' → logprob: -0.048458367586135864
    2. 'an' → logprob: -3.1734583377838135
    3. 'ans' → logprob: -5.548458576202393
    4. 'ann' → logprob: -7.923458576202393
    5. '```' → logprob: -8.173458099365234
    6. '#' → logprob: -8.298458099365234
    7. '##' → logprob: -8.798458099365234
    8. 'anned' → logprob: -9.673458099365234
    9. '{
' → logprob: -9.673458099365234
    10. 'n' → logprob: -9.923458099365234

Token 925: '_t' (ID: 838)
  Prédit: 'trees'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trees' → logprob: -0.009530345909297466
    2. '_t' → logprob: -4.759530544281006
    3. 'tree' → logprob: -7.884530544281006
    4. 't' → logprob: -8.259530067443848
    5. ' trees' → logprob: -9.259530067443848
    6. '_tree' → logprob: -9.384530067443848
    7. 'tre' → logprob: -10.384530067443848
    8. 'fore' → logprob: -10.509530067443848
    9. 'forest' → logprob: -11.134530067443848
    10. 's' → logprob: -11.759530067443848

Token 926: 'rees' (ID: 12339)
  Prédit: 'rees'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rees' → logprob: -0.22806857526302338
    2. 'ree' → logprob: -1.6030685901641846
    3. '#' → logprob: -7.3530683517456055
    4. 'ees' → logprob: -7.6030683517456055
    5. 'ress' → logprob: -7.9780683517456055
    6. 'ee' → logprob: -8.228068351745605
    7. 'r' → logprob: -8.478068351745605
    8. 're' → logprob: -8.728068351745605
    9. 'trees' → logprob: -9.853068351745605
    10. '>' → logprob: -9.978068351745605

Token 927: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.49599695205688477
    2. '       ' → logprob: -1.2459969520568848
    3. 'def' → logprob: -3.1209969520568848
    4. 'import' → logprob: -4.370996952056885
    5. '        
' → logprob: -4.370996952056885
    6. 'from' → logprob: -4.620996952056885
    7. '   ' → logprob: -4.745996952056885
    8. '<|end|>' → logprob: -4.870996952056885
    9. '#' → logprob: -6.495996952056885
    10. '    
' → logprob: -6.745996952056885

Token 928: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08516346663236618
    2. '        
' → logprob: -3.3351633548736572
    3. '
' → logprob: -3.4601633548736572
    4. 'from' → logprob: -5.335163593292236
    5. '   ' → logprob: -5.710163593292236
    6. '    
' → logprob: -6.335163593292236
    7. 'import' → logprob: -6.460163593292236
    8. 'def' → logprob: -6.585163593292236
    9. '#' → logprob: -7.460163593292236
    10. '  
' → logprob: -8.210163116455078

Token 929: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020238321274518967
    2. '        
' → logprob: -4.645238399505615
    3. '
' → logprob: -5.395238399505615
    4. 'def' → logprob: -5.895238399505615
    5. 'from' → logprob: -6.895238399505615
    6. '   ' → logprob: -7.145238399505615
    7. 'import' → logprob: -8.020237922668457
    8. '    
' → logprob: -8.145237922668457
    9. '#' (adapté à ' #') → logprob: -8.770237922668457
    10. '```' → logprob: -9.270237922668457

Token 930: ' En' (ID: 2130)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49328306317329407
    2. 'def' → logprob: -1.9932830333709717
    3. 'from' → logprob: -2.1182830333709717
    4. '   ' → logprob: -2.1182830333709717
    5. 'import' → logprob: -4.743283271789551
    6. '
' → logprob: -5.993283271789551
    7. '#' → logprob: -7.618283271789551
    8. ' from' → logprob: -7.868283271789551
    9. '```' → logprob: -8.49328327178955
    10. 'edges' → logprob: -8.99328327178955

Token 931: ' fait' (ID: 7473)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08173642307519913
    2. 'from' → logprob: -3.0817363262176514
    3. 'import' → logprob: -4.0817365646362305
    4. 'collections' → logprob: -5.7067365646362305
    5. '
' → logprob: -5.8317365646362305
    6. '#' → logprob: -6.0817365646362305
    7. '   ' → logprob: -6.4567365646362305
    8. 'suite' → logprob: -6.7067365646362305
    9. '```' → logprob: -7.3317365646362305
    10. '       ' → logprob: -7.4567365646362305

Token 932: ' on' (ID: 402)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0523256063461304
    2. '       ' → logprob: -1.3023256063461304
    3. 'import' → logprob: -1.5523256063461304
    4. '#' → logprob: -2.55232572555542
    5. 'from' → logprob: -3.55232572555542
    6. '   ' → logprob: -3.67732572555542
    7. '
' → logprob: -4.05232572555542
    8. ' on' → logprob: -4.55232572555542
    9. 'on' → logprob: -6.80232572555542
    10. ' def' → logprob: -6.92732572555542

Token 933: ' utilise' (ID: 70283)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.32265084981918335
    2. 'continue' → logprob: -1.5726509094238281
    3. 'import' → logprob: -4.072650909423828
    4. '   ' → logprob: -4.197650909423828
    5. '#' → logprob: -4.197650909423828
    6. '       ' → logprob: -4.822650909423828
    7. 'sort' → logprob: -5.822650909423828
    8. ' continue' → logprob: -5.947650909423828
    9. 'contin' → logprob: -5.947650909423828
    10. 'from' → logprob: -6.822650909423828

Token 934: ' une' (ID: 2463)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.38905033469200134
    2. 'import' → logprob: -1.8890503644943237
    3. 'from' → logprob: -2.139050245285034
    4. 'Union' → logprob: -4.264050483703613
    5. 'K' → logprob: -5.139050483703613
    6. '       ' → logprob: -5.389050483703613
    7. 'the' → logprob: -5.514050483703613
    8. 'union' → logprob: -5.889050483703613
    9. 'class' → logprob: -6.014050483703613
    10. '
' → logprob: -6.014050483703613

Token 935: ' méthode' (ID: 71490)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16321556270122528
    2. 'from' → logprob: -2.0382156372070312
    3. 'import' → logprob: -4.413215637207031
    4. '#' → logprob: -5.913215637207031
    5. 'dis' → logprob: -6.413215637207031
    6. 'class' → logprob: -6.538215637207031
    7. 'union' → logprob: -7.038215637207031
    8. 'Union' → logprob: -7.288215637207031
    9. ' def' → logprob: -8.663215637207031
    10. ' from' → logprob: -9.038215637207031

Token 936: ' basée' (ID: 153941)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7515968680381775
    2. 'def' → logprob: -0.7515968680381775
    3. '#' → logprob: -4.126596927642822
    4. 'from' → logprob: -4.501596927642822
    5. ' de' → logprob: -5.376596927642822
    6. '   ' → logprob: -5.626596927642822
    7. 'de' → logprob: -5.876596927642822
    8. '       ' → logprob: -6.001596927642822
    9. ' #' → logprob: -6.501596927642822
    10. ' def' → logprob: -6.501596927642822

Token 937: ' sur' (ID: 1512)
  Prédit: 'sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sur' → logprob: -0.06687881797552109
    2. ' sur' → logprob: -3.1918787956237793
    3. 'import' → logprob: -4.566878795623779
    4. '#' → logprob: -5.066878795623779
    5. 'def' → logprob: -5.566878795623779
    6. '   ' → logprob: -6.691878795623779
    7. '       ' → logprob: -7.441878795623779
    8. '=' → logprob: -7.691878795623779
    9. '_sur' → logprob: -8.566879272460938
    10. 'on' → logprob: -8.941879272460938

Token 938: ' "' (ID: 392)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.79425048828125
    2. 'la' → logprob: -1.04425048828125
    3. 'le' → logprob: -2.79425048828125
    4. 'les' → logprob: -4.04425048828125
    5. 'Union' → logprob: -4.16925048828125
    6. '#' → logprob: -4.16925048828125
    7. 'mat' → logprob: -4.41925048828125
    8. 'com' → logprob: -4.54425048828125
    9. 'Kir' → logprob: -4.54425048828125
    10. 'des' → logprob: -4.66925048828125

Token 939: 'K' (ID: 42)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -1.2131553888320923
    2. 'K' → logprob: -1.8381553888320923
    3. 'l' → logprob: -1.8381553888320923
    4. 'les' → logprob: -2.2131552696228027
    5. 'le' → logprob: -2.4631552696228027
    6. 'Kir' → logprob: -2.5881552696228027
    7. 'import' → logprob: -3.7131552696228027
    8. 'mat' → logprob: -4.088155269622803
    9. 'union' → logprob: -4.338155269622803
    10. 'Union' → logprob: -4.463155269622803

Token 940: 'rus' (ID: 28116)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5799838900566101
    2. 'rus' → logprob: -0.8299838900566101
    3. '_r' → logprob: -6.954983711242676
    4. '
' → logprob: -7.204983711242676
    5. 'ru' → logprob: -7.704983711242676
    6. '_' → logprob: -8.329983711242676
    7. '"' → logprob: -8.579983711242676
    8. '```' → logprob: -8.829983711242676
    9. 'rush' → logprob: -9.079983711242676
    10. '	r' → logprob: -9.079983711242676

Token 941: 'kal' (ID: 23466)
  Prédit: 'us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.0677822157740593
    2. 'al' → logprob: -2.942782163619995
    3. 'kal' → logprob: -5.192782402038574
    4. 'u' → logprob: -6.567782402038574
    5. 'uk' → logprob: -6.817782402038574
    6. '```' → logprob: -6.817782402038574
    7. 'ush' → logprob: -7.067782402038574
    8. 'usk' → logprob: -7.817782402038574
    9. 'ul' → logprob: -8.067782402038574
    10. '#' → logprob: -8.442782402038574

Token 942: ' avec' (ID: 3937)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3373181819915771
    2. '()' → logprob: -1.3373181819915771
    3. 'algorithm' → logprob: -1.5873181819915771
    4. ''s' → logprob: -2.462318181991577
    5. ' algorithm' → logprob: -2.962318181991577
    6. '()
' → logprob: -3.462318181991577
    7. '       ' → logprob: -3.587318181991577
    8. '
' → logprob: -4.462318420410156
    9. '```' → logprob: -4.837318420410156
    10. 'for' → logprob: -5.462318420410156

Token 943: ' compt' (ID: 39238)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.3540380895137787
    2. 'union' → logprob: -1.979038119316101
    3. 'group' → logprob: -3.1040380001068115
    4. 'compression' → logprob: -3.6040380001068115
    5. 'des' → logprob: -4.854038238525391
    6. 'Union' → logprob: -4.979038238525391
    7. 'dé' → logprob: -4.979038238525391
    8. 'comp' → logprob: -5.229038238525391
    9. 'un' → logprob: -5.354038238525391
    10. 'division' → logprob: -5.604038238525391

Token 944: 'age' (ID: 477)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7610797882080078
    2. 'age' → logprob: -1.3860797882080078
    3. 'inue' → logprob: -2.511079788208008
    4. 'in' → logprob: -2.761079788208008
    5. 'ation' → logprob: -2.886079788208008
    6. 'é' → logprob: -3.261079788208008
    7. 'inu' → logprob: -4.636079788208008
    8. 'count' → logprob: -5.386079788208008
    9. 'eur' → logprob: -5.636079788208008
    10. '#' → logprob: -5.761079788208008

Token 945: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.8407419323921204
    2. ' des' → logprob: -0.9657419323921204
    3. 'des' → logprob: -2.8407418727874756
    4. ' spanning' → logprob: -4.090742111206055
    5. '",' → logprob: -4.590742111206055
    6. '_edges' → logprob: -4.965742111206055
    7. '_count' → logprob: -5.090742111206055
    8. 'de' → logprob: -5.215742111206055
    9. ' de' → logprob: -5.340742111206055
    10. '}"' → logprob: -5.715742111206055

Token 946: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017544424161314964
    2. '
' → logprob: -4.517544269561768
    3. '   ' → logprob: -5.892544269561768
    4. '        
' → logprob: -6.017544269561768
    5. 'def' → logprob: -7.642544269561768
    6. 'from' → logprob: -8.017544746398926
    7. '    
' → logprob: -8.392544746398926
    8. 'import' → logprob: -9.267544746398926
    9. ' from' → logprob: -10.517544746398926
    10. '```' → logprob: -10.642544746398926

Token 947: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02211786061525345
    2. '
' → logprob: -4.397118091583252
    3. '   ' → logprob: -5.147118091583252
    4. '        
' → logprob: -6.147118091583252
    5. 'from' → logprob: -7.647118091583252
    6. 'def' → logprob: -7.772118091583252
    7. '    
' → logprob: -8.022117614746094
    8. 'import' → logprob: -9.272117614746094
    9. ' from' → logprob: -9.772117614746094
    10. ' 
' → logprob: -10.022117614746094

Token 948: ' On' (ID: 2160)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04991837590932846
    2. '   ' → logprob: -3.7999184131622314
    3. 'from' → logprob: -4.799918174743652
    4. '
' → logprob: -4.924918174743652
    5. 'def' → logprob: -5.049918174743652
    6. 'import' → logprob: -5.674918174743652
    7. 'edges' → logprob: -8.299918174743652
    8. '        
' → logprob: -8.424918174743652
    9. 'i' → logprob: -9.174918174743652
    10. ' from' → logprob: -9.799918174743652

Token 949: ' trie' (ID: 139428)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.9060906171798706
    2. '       ' → logprob: -1.9060906171798706
    3. ' edges' → logprob: -2.15609073638916
    4. '   ' → logprob: -2.28109073638916
    5. 'def' → logprob: -2.90609073638916
    6. '
' → logprob: -2.90609073638916
    7. '#' → logprob: -3.03109073638916
    8. 'import' → logprob: -3.15609073638916
    9. '_edges' → logprob: -4.78109073638916
    10. 'sort' → logprob: -5.65609073638916

Token 950: ' les' (ID: 1341)
  Prédit: '(comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(comp' → logprob: -0.1668379008769989
    2. 'comp' → logprob: -1.9168379306793213
    3. '(' → logprob: -6.041837692260742
    4. '(edges' → logprob: -6.041837692260742
    5. 'edges' → logprob: -6.541837692260742
    6. ' comp' → logprob: -9.166837692260742
    7. '(
' → logprob: -10.291837692260742
    8. '(com' → logprob: -10.291837692260742
    9. '	comp' → logprob: -10.541837692260742
    10. ' edges' → logprob: -10.666837692260742

Token 951: ' ar' (ID: 646)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.0033772189635783434
    2. ' comp' → logprob: -6.503377437591553
    3. 'edges' → logprob: -6.628377437591553
    4. '(comp' → logprob: -8.378376960754395
    5. 'cost' → logprob: -8.628376960754395
    6. ' edges' → logprob: -9.003376960754395
    7. 'key' → logprob: -11.878376960754395
    8. '	comp' → logprob: -12.878376960754395
    9. '(edges' → logprob: -12.878376960754395
    10. 'sorted' → logprob: -13.628376960754395

Token 952: 'êtes' (ID: 23720)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.17055165767669678
    2. 'g' → logprob: -3.0455517768859863
    3. 'r' → logprob: -3.6705517768859863
    4. 'gs' → logprob: -3.7955517768859863
    5. '_edges' → logprob: -3.7955517768859863
    6. 'ges' → logprob: -4.670551776885986
    7. ' edges' → logprob: -5.295551776885986
    8. '[' → logprob: -5.420551776885986
    9. 'cs' → logprob: -5.420551776885986
    10. 'e' → logprob: -5.795551776885986

Token 953: ' par' (ID: 686)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.558315098285675
    2. '       ' → logprob: -1.5583150386810303
    3. 'edges' → logprob: -3.0583150386810303
    4. '   ' → logprob: -3.0583150386810303
    5. '(comp' → logprob: -3.1833150386810303
    6. '(edges' → logprob: -3.6833150386810303
    7. '=' → logprob: -4.308315277099609
    8. ' =' → logprob: -4.558315277099609
    9. 'by' → logprob: -4.933315277099609
    10. 'par' → logprob: -5.183315277099609

Token 954: ' coût' (ID: 73109)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0011066367151215672
    2. 'weight' → logprob: -7.0011067390441895
    3. 'lambda' → logprob: -9.626106262207031
    4. ' cost' → logprob: -10.001106262207031
    5. '   ' → logprob: -10.501106262207031
    6. 'co' → logprob: -10.626106262207031
    7. 'key' → logprob: -10.876106262207031
    8. '#' → logprob: -13.376106262207031
    9. '_cost' → logprob: -13.626106262207031
    10. ' ' → logprob: -13.751106262207031

Token 955: ' cro' (ID: 11270)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2970491647720337
    2. '   ' → logprob: -2.047049045562744
    3. 'comp' → logprob: -2.047049045562744
    4. 'edges' → logprob: -2.172049045562744
    5. ',
' → logprob: -2.422049045562744
    6. ',' → logprob: -3.047049045562744
    7. '.
' → logprob: -3.172049045562744
    8. '.sort' → logprob: -3.422049045562744
    9. '=' → logprob: -3.797049045562744
    10. '.' → logprob: -3.797049045562744

Token 956: 'issant' (ID: 31359)
  Prédit: 'issante'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issante' → logprob: -0.07056728005409241
    2. 'issant' → logprob: -2.9455673694610596
    3. 'issance' → logprob: -4.3205671310424805
    4. 'is' → logprob: -7.8205671310424805
    5. 'iss' → logprob: -8.44556713104248
    6. 'i' → logprob: -8.44556713104248
    7. 'ût' → logprob: -8.44556713104248
    8. 'ss' → logprob: -8.82056713104248
    9. 'ite' → logprob: -8.82056713104248
    10. 'issement' → logprob: -9.07056713104248

Token 957: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05767755210399628
    2. '   ' → logprob: -3.5576775074005127
    3. 'edges' → logprob: -4.932677745819092
    4. '.' → logprob: -5.307677745819092
    5. ',' → logprob: -5.432677745819092
    6. '
' → logprob: -6.432677745819092
    7. ' edges' → logprob: -6.432677745819092
    8. ',
' → logprob: -6.557677745819092
    9. '(edges' → logprob: -6.557677745819092
    10. '.
' → logprob: -7.057677745819092

Token 958: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02572152204811573
    2. '   ' → logprob: -4.025721549987793
    3. '
' → logprob: -5.900721549987793
    4. 'edges' → logprob: -6.775721549987793
    5. '        
' → logprob: -6.900721549987793
    6. ',' → logprob: -7.150721549987793
    7. ',
' → logprob: -7.525721549987793
    8. ' edges' → logprob: -7.650721549987793
    9. '    
' → logprob: -8.275721549987793
    10. '           ' → logprob: -9.525721549987793

Token 959: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025380469858646393
    2. '   ' → logprob: -4.025380611419678
    3. 'edges' → logprob: -5.400380611419678
    4. '
' → logprob: -6.650380611419678
    5. ' edges' → logprob: -7.150380611419678
    6. 'comp' → logprob: -7.900380611419678
    7. '        
' → logprob: -9.27538013458252
    8. 'def' → logprob: -10.52538013458252
    9. '    
' → logprob: -11.02538013458252
    10. '           ' → logprob: -11.02538013458252

Token 960: ' On' (ID: 2160)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2945254147052765
    2. '   ' → logprob: -1.544525384902954
    3. 'comp' → logprob: -3.544525384902954
    4. 'edges' → logprob: -4.794525623321533
    5. ' edges' → logprob: -6.044525623321533
    6. ' comp' → logprob: -6.669525623321533
    7. '
' → logprob: -8.044525146484375
    8. '        
' → logprob: -8.919525146484375
    9. '	comp' → logprob: -9.419525146484375
    10. 'com' → logprob: -9.544525146484375

Token 961: ' proc' (ID: 14550)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.24349382519721985
    2. 'edges' → logprob: -2.3684937953948975
    3. 'def' → logprob: -2.9934937953948975
    4. '       ' → logprob: -3.9934937953948975
    5. '   ' → logprob: -4.493494033813477
    6. '#' → logprob: -4.493494033813477
    7. '.sort' → logprob: -4.743494033813477
    8. '=' → logprob: -5.493494033813477
    9. ' edges' → logprob: -5.868494033813477
    10. 'continue' → logprob: -5.868494033813477

Token 962: 'ède' (ID: 48404)
  Prédit: 'ède'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ède' → logprob: -0.8717018365859985
    2. 'ceed' → logprob: -1.4967018365859985
    3. 'ceeds' → logprob: -1.4967018365859985
    4. 'ess' → logprob: -3.496701717376709
    5. 'c' → logprob: -3.621701717376709
    6. 'édé' → logprob: -3.621701717376709
    7. 'é' → logprob: -5.246701717376709
    8. 'eed' → logprob: -5.246701717376709
    9. 'cess' → logprob: -5.371701717376709
    10. 'éd' → logprob: -5.496701717376709

Token 963: ' en' (ID: 469)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.7532535195350647
    2. '       ' → logprob: -1.62825345993042
    3. ' à' → logprob: -1.62825345993042
    4. '   ' → logprob: -2.75325345993042
    5. 'par' → logprob: -3.00325345993042
    6. '           ' → logprob: -4.50325345993042
    7. ' par' → logprob: -5.62825345993042
    8. 'avec' → logprob: -6.62825345993042
    9. ' ' → logprob: -7.00325345993042
    10. '#' → logprob: -7.00325345993042

Token 964: ' blocs' (ID: 182599)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.025840837508440018
    2. 'g' → logprob: -5.150840759277344
    3. 'groups' → logprob: -5.525840759277344
    4. 'reg' → logprob: -5.775840759277344
    5. ' group' → logprob: -5.900840759277344
    6. 'i' → logprob: -6.150840759277344
    7. '#' → logprob: -6.275840759277344
    8. 'batch' → logprob: -6.525840759277344
    9. 'tr' → logprob: -7.275840759277344
    10. '   ' → logprob: -7.525840759277344

Token 965: ' par' (ID: 686)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06284360587596893
    2. '   ' → logprob: -3.1878435611724854
    3. 'd' → logprob: -5.6878437995910645
    4. 'def' → logprob: -6.0628437995910645
    5. ' de' → logprob: -6.3128437995910645
    6. 'de' → logprob: -6.4378437995910645
    7. 'edges' → logprob: -6.4378437995910645
    8. '           ' → logprob: -6.8128437995910645
    9. ',' → logprob: -6.8128437995910645
    10. ' of' → logprob: -7.0628437995910645

Token 966: ' coût' (ID: 73109)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.05208287760615349
    2. ' coût' → logprob: -3.8020827770233154
    3. 'cout' → logprob: -3.9270827770233154
    4. 'val' → logprob: -5.3020830154418945
    5. 'po' → logprob: -6.5520830154418945
    6. ' poids' → logprob: -7.5520830154418945
    7. 'c' → logprob: -8.052083015441895
    8. ' coûts' → logprob: -8.302083015441895
    9. ' cout' → logprob: -8.427083015441895
    10. 'lot' → logprob: -8.927083015441895

Token 967: ' égal' (ID: 15059)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4738914966583252
    2. '   ' → logprob: -1.4738914966583252
    3. ':' → logprob: -2.348891496658325
    4. ':
' → logprob: -3.973891496658325
    5. ' =' → logprob: -4.223891258239746
    6. ' :' → logprob: -5.223891258239746
    7. ',' → logprob: -5.848891258239746
    8. '=' → logprob: -6.098891258239746
    9. ' :
' → logprob: -6.223891258239746
    10. '.' → logprob: -6.473891258239746

Token 968: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.041024480015039444
    2. '
' → logprob: -3.5410244464874268
    3. '   ' → logprob: -5.541024684906006
    4. ',' → logprob: -6.041024684906006
    5. '        
' → logprob: -6.166024684906006
    6. ',
' → logprob: -7.041024684906006
    7. ':' → logprob: -8.041024208068848
    8. '    
' → logprob: -8.041024208068848
    9. '           ' → logprob: -8.416024208068848
    10. '  
' → logprob: -8.791024208068848

Token 969: ' 
' (ID: 793)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1144758090376854
    2. 'i' → logprob: -3.239475727081299
    3. 'edges' → logprob: -3.489475727081299
    4. '           ' → logprob: -4.364475727081299
    5. ' edges' → logprob: -4.614475727081299
    6. '   ' → logprob: -4.989475727081299
    7. ' i' → logprob: -6.114475727081299
    8. 'idx' → logprob: -6.239475727081299
    9. 'index' → logprob: -7.114475727081299
    10. '```' → logprob: -7.114475727081299

Token 970: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010153976269066334
    2. '   ' → logprob: -4.885153770446777
    3. '#' → logprob: -6.510153770446777
    4. '           ' → logprob: -7.510153770446777
    5. '        
' → logprob: -9.010153770446777
    6. ',' → logprob: -9.135153770446777
    7. '
' → logprob: -9.510153770446777
    8. ' #' → logprob: -10.010153770446777
    9. ' et' → logprob: -10.885153770446777
    10. ' puis' → logprob: -11.260153770446777

Token 971: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01231667771935463
    2. '   ' → logprob: -5.387316703796387
    3. '#' (adapté à ' #') → logprob: -5.637316703796387
    4. '           ' → logprob: -6.012316703796387
    5. ' et' → logprob: -8.387316703796387
    6. 'i' → logprob: -8.512316703796387
    7. '        
' → logprob: -8.887316703796387
    8. 'et' → logprob: -9.137316703796387
    9. ' puis' → logprob: -9.137316703796387
    10. ' i' → logprob: -9.637316703796387

Token 972: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11878501623868942
    2. 'i' → logprob: -3.3687849044799805
    3. '   ' → logprob: -3.3687849044799805
    4. 'edges' → logprob: -3.8687849044799805
    5. '#' → logprob: -4.9937849044799805
    6. 'def' → logprob: -5.6187849044799805
    7. 'sorted' → logprob: -6.2437849044799805
    8. ' edges' → logprob: -6.3687849044799805
    9. '           ' → logprob: -6.4937849044799805
    10. '
' → logprob: -6.8687849044799805

Token 973: ' calc' (ID: 25691)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3308877944946289
    2. '   ' → logprob: -2.455887794494629
    3. 'i' → logprob: -2.955887794494629
    4. ' i' → logprob: -3.330887794494629
    5. 'def' → logprob: -3.830887794494629
    6. '#' → logprob: -4.455887794494629
    7. ' edges' → logprob: -4.455887794494629
    8. 'sort' → logprob: -4.705887794494629
    9. 'edges' → logprob: -4.830887794494629
    10. ' =' → logprob: -4.830887794494629

Token 974: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.052662890404462814
    2. 'ède' → logprob: -3.0526628494262695
    3. 'ute' → logprob: -7.1776628494262695
    4. 'ète' → logprob: -7.4276628494262695
    5. 'èle' → logprob: -7.5526628494262695
    6. 'ul' → logprob: -7.9276628494262695
    7. 'ure' → logprob: -8.30266284942627
    8. 'ère' → logprob: -8.42766284942627
    9. 'ulate' → logprob: -9.17766284942627
    10. 'ulé' → logprob: -9.17766284942627

Token 975: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.296988844871521
    2. ' le' → logprob: -2.5469889640808105
    3. 'la' → logprob: -3.1719889640808105
    4. ' combien' → logprob: -3.5469889640808105
    5. ' la' → logprob: -3.7969889640808105
    6. ',' → logprob: -3.7969889640808105
    7. 'l' → logprob: -4.1719889640808105
    8. 'les' → logprob: -4.4219889640808105
    9. 'pour' → logprob: -4.6719889640808105
    10. ' pour' → logprob: -5.2969889640808105

Token 976: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.02618405781686306
    2. ' nombre' → logprob: -4.15118408203125
    3. 'nb' → logprob: -5.65118408203125
    4. 'count' → logprob: -6.27618408203125
    5. 'minimum' → logprob: -6.65118408203125
    6. 'number' → logprob: -6.90118408203125
    7. 'cnt' → logprob: -7.65118408203125
    8. 'size' → logprob: -7.77618408203125
    9. 'num' → logprob: -8.02618408203125
    10. '#' → logprob: -8.40118408203125

Token 977: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3401036858558655
    2. '           ' → logprob: -2.2151036262512207
    3. '   ' → logprob: -2.4651036262512207
    4. ' de' → logprob: -4.090103626251221
    5. ' d' → logprob: -4.590103626251221
    6. 'd' → logprob: -4.590103626251221
    7. 'de' → logprob: -4.715103626251221
    8. '=' → logprob: -4.840103626251221
    9. '_edges' → logprob: -5.215103626251221
    10. '               ' → logprob: -5.340103626251221

Token 978: ' man' (ID: 873)
  Prédit: 'sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sp' → logprob: -0.828008770942688
    2. 'M' → logprob: -1.578008770942688
    3. 'man' → logprob: -1.953008770942688
    4. 'ways' → logprob: -2.5780086517333984
    5. 'arb' → logprob: -3.3280086517333984
    6. 'fa' → logprob: -3.7030086517333984
    7. ' façons' → logprob: -4.078008651733398
    8. 'com' → logprob: -4.453008651733398
    9. 'mst' → logprob: -4.703008651733398
    10. 's' → logprob: -4.703008651733398

Token 979: 'ières' (ID: 44864)
  Prédit: 'ières'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ières' → logprob: -0.033817317336797714
    2. 'ière' → logprob: -3.4088172912597656
    3. 'ner' → logprob: -9.783817291259766
    4. 'i' → logprob: -10.283817291259766
    5. 'nées' → logprob: -10.908817291259766
    6. 's' → logprob: -11.908817291259766
    7. 'œ' → logprob: -11.908817291259766
    8. 'né' → logprob: -12.283817291259766
    9. '#' → logprob: -12.283817291259766
    10. 'ié' → logprob: -12.533817291259766

Token 980: ' d' (ID: 272)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.1532171368598938
    2. 'd' → logprob: -2.153217077255249
    3. ' de' → logprob: -4.403217315673828
    4. '#' → logprob: -4.653217315673828
    5. '   ' → logprob: -6.653217315673828
    6. ' d' → logprob: -7.403217315673828
    7. '       ' → logprob: -7.778217315673828
    8. ' ' → logprob: -7.903217315673828
    9. 'dont' → logprob: -8.153217315673828
    10. ',' → logprob: -8.403217315673828

Token 981: ''intégr' (ID: 166771)
  Prédit: ''aj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''aj' → logprob: -0.22526274621486664
    2. 'e' → logprob: -2.6002626419067383
    3. 'aj' → logprob: -3.7252626419067383
    4. ''utiliser' → logprob: -3.8502626419067383
    5. 'ier' → logprob: -4.475262641906738
    6. '’aj' → logprob: -4.600262641906738
    7. 'rel' → logprob: -4.850262641906738
    8. 'é' → logprob: -5.100262641906738
    9. 'assembler' → logprob: -5.225262641906738
    10. 'u' → logprob: -5.725262641906738

Token 982: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.00456636119633913
    2. 'rer' → logprob: -5.754566192626953
    3. 'r' → logprob: -8.129566192626953
    4. 'érer' → logprob: -8.629566192626953
    5. 'e' → logprob: -8.754566192626953
    6. 'uer' → logprob: -8.754566192626953
    7. 'é' → logprob: -9.254566192626953
    8. 'ver' → logprob: -10.004566192626953
    9. 'al' → logprob: -10.004566192626953
    10. 'ér' → logprob: -10.129566192626953

Token 983: ' ces' (ID: 10532)
  Prédit: ' ces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ces' → logprob: -0.2807007431983948
    2. 'ces' → logprob: -1.53070068359375
    3. ' ce' → logprob: -4.78070068359375
    4. 'les' → logprob: -4.78070068359375
    5. ' les' → logprob: -5.40570068359375
    6. 'ce' → logprob: -5.90570068359375
    7. ' chaque' → logprob: -6.28070068359375
    8. 'cet' → logprob: -7.40570068359375
    9. ' cette' → logprob: -7.90570068359375
    10. 'c' → logprob: -8.15570068359375

Token 984: ' ar' (ID: 646)
  Prédit: ' ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ar' → logprob: -0.22668692469596863
    2. 'ar' → logprob: -1.601686954498291
    3. ' edges' → logprob: -7.226686954498291
    4. '_edges' → logprob: -9.226686477661133
    5. 'are' → logprob: -9.601686477661133
    6. 'edges' → logprob: -9.851686477661133
    7. ' are' → logprob: -9.851686477661133
    8. 'arest' → logprob: -9.976686477661133
    9. '_' → logprob: -10.226686477661133
    10. '_ar' → logprob: -10.226686477661133

Token 985: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.0030670762062072754
    2. 'cs' → logprob: -7.1280670166015625
    3. 'tes' → logprob: -7.1280670166015625
    4. 'ches' → logprob: -8.128067016601562
    5. 't' → logprob: -8.503067016601562
    6. 'r' → logprob: -8.753067016601562
    7. 'ç' → logprob: -8.878067016601562
    8. 'ê' → logprob: -9.128067016601562
    9. 'ête' → logprob: -9.378067016601562
    10. 'c' → logprob: -9.378067016601562

Token 986: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3249224424362183
    2. ' dans' → logprob: -1.4499224424362183
    3. ' à' → logprob: -1.5749224424362183
    4. ',' → logprob: -1.9499224424362183
    5. 'dans' → logprob: -3.074922561645508
    6. 's' → logprob: -3.699922561645508
    7. ' ,' → logprob: -3.699922561645508
    8. '       ' → logprob: -4.824922561645508
    9. ' en' → logprob: -5.449922561645508
    10. ' ' → logprob: -5.449922561645508

Token 987: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7166759371757507
    2. 'le' → logprob: -0.8416759371757507
    3. 'la' → logprob: -3.2166759967803955
    4. 'les' → logprob: -3.3416759967803955
    5. ' l' → logprob: -6.466675758361816
    6. ' le' → logprob: -6.466675758361816
    7. ' la' → logprob: -7.716675758361816
    8. 'leur' → logprob: -7.966675758361816
    9. 'une' → logprob: -8.091675758361816
    10. 'un' → logprob: -8.216675758361816

Token 988: ''un' (ID: 9788)
  Prédit: ''ensemble'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''ensemble' → logprob: -0.6325997710227966
    2. ''ar' → logprob: -1.0075998306274414
    3. 'a' → logprob: -3.1325998306274414
    4. ''' → logprob: -3.8825998306274414
    5. 'e' → logprob: -4.007599830627441
    6. 'ar' → logprob: -4.882599830627441
    7. 'M' → logprob: -5.882599830627441
    8. ''é' → logprob: -6.382599830627441
    9. 'es' → logprob: -6.757599830627441
    10. ''intégr' → logprob: -6.882599830627441

Token 989: 'ion' (ID: 294)
  Prédit: 'ion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ion' → logprob: -0.011981155723333359
    2. 'ité' → logprob: -5.261981010437012
    3. 'ite' → logprob: -6.136981010437012
    4. '   ' → logprob: -6.886981010437012
    5. 'ione' → logprob: -7.011981010437012
    6. '#' → logprob: -7.386981010437012
    7. 'i' → logprob: -7.886981010437012
    8. 'it' → logprob: -8.011981010437012
    9. 'io' → logprob: -9.136981010437012
    10. 'e' → logprob: -9.136981010437012

Token 990: '-find' (ID: 168817)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.16706538200378418
    2. '-find' → logprob: -2.417065382003784
    3. 'Find' → logprob: -2.917065382003784
    4. '_find' → logprob: -4.792065620422363
    5. '   ' → logprob: -6.417065620422363
    6. '    
' → logprob: -8.042065620422363
    7. '       ' → logprob: -9.417065620422363
    8. '
' → logprob: -10.042065620422363
    9. ' find' → logprob: -10.292065620422363
    10. '        
' → logprob: -10.667065620422363

Token 991: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6631343960762024
    2. '       ' → logprob: -0.9131343960762024
    3. '
' → logprob: -3.6631343364715576
    4. ':' → logprob: -3.7881343364715576
    5. 'def' → logprob: -3.7881343364715576
    6. ',' → logprob: -5.913134574890137
    7. ':
' → logprob: -6.413134574890137
    8. '    
' → logprob: -6.663134574890137
    9. '        
' → logprob: -7.163134574890137
    10. ' def' → logprob: -7.288134574890137

Token 992: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4522266387939453
    2. '   ' → logprob: -1.0772266387939453
    3. ':' → logprob: -4.327226638793945
    4. ',' → logprob: -5.827226638793945
    5. '
' → logprob: -6.452226638793945
    6. '.' → logprob: -6.827226638793945
    7. '           ' → logprob: -7.327226638793945
    8. ' :' → logprob: -7.452226638793945
    9. '    
' → logprob: -7.952226638793945
    10. ':
' → logprob: -7.952226638793945

Token 993: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03638342767953873
    2. '   ' → logprob: -3.9113833904266357
    3. '
' → logprob: -4.661383628845215
    4. '        
' → logprob: -5.911383628845215
    5. '    
' → logprob: -6.911383628845215
    6. ',' → logprob: -7.036383628845215
    7. ':' → logprob: -8.286383628845215
    8. ',
' → logprob: -8.286383628845215
    9. '#' (adapté à ' #') → logprob: -8.661383628845215
    10. '           ' → logprob: -8.786383628845215

Token 994: ' puis' (ID: 18766)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33055955171585083
    2. '   ' → logprob: -1.455559492111206
    3. '
' → logprob: -3.330559492111206
    4. 'def' → logprob: -5.205559730529785
    5. ' edges' → logprob: -5.705559730529785
    6. 'edges' → logprob: -6.580559730529785
    7. '        
' → logprob: -7.330559730529785
    8. '    
' → logprob: -7.330559730529785
    9. '#' → logprob: -8.705559730529785
    10. 'import' → logprob: -8.955559730529785

Token 995: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16747300326824188
    2. 'on' → logprob: -2.167473077774048
    3. ' on' → logprob: -3.792473077774048
    4. '   ' → logprob: -5.042472839355469
    5. '#' → logprob: -5.792472839355469
    6. 'def' → logprob: -5.917472839355469
    7. '           ' → logprob: -6.292472839355469
    8. '
' → logprob: -7.292472839355469
    9. 'continue' → logprob: -7.667472839355469
    10. 'for' → logprob: -8.167472839355469

Token 996: ' multipl' (ID: 44269)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.4558589458465576
    2. 'continue' → logprob: -1.4558589458465576
    3. '       ' → logprob: -1.5808589458465576
    4. '   ' → logprob: -1.8308589458465576
    5. 'process' → logprob: -3.2058589458465576
    6. 'contin' → logprob: -3.3308589458465576
    7. ' continue' → logprob: -3.8308589458465576
    8. ' def' → logprob: -4.705859184265137
    9. '#' → logprob: -4.705859184265137
    10. 'merge' → logprob: -4.705859184265137

Token 997: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.0454898439347744
    2. 'ique' → logprob: -4.29548978805542
    3. '       ' → logprob: -4.54548978805542
    4. 'ipl' → logprob: -5.04548978805542
    5. 'ies' → logprob: -5.79548978805542
    6. '   ' → logprob: -6.54548978805542
    7. 'iez' → logprob: -6.92048978805542
    8. 'ier' → logprob: -7.04548978805542
    9. 'e' → logprob: -7.04548978805542
    10. 'plique' → logprob: -7.17048978805542

Token 998: ' le' (ID: 505)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4035630524158478
    2. 'res' → logprob: -1.2785630226135254
    3. '   ' → logprob: -3.6535630226135254
    4. ' res' → logprob: -4.528563022613525
    5. '(res' → logprob: -4.903563022613525
    6. '           ' → logprob: -5.778563022613525
    7. ' par' → logprob: -6.528563022613525
    8. '(
' → logprob: -6.528563022613525
    9. 'par' → logprob: -6.903563022613525
    10. ')' → logprob: -7.403563022613525

Token 999: ' résultat' (ID: 62556)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.6103144288063049
    2. ' res' → logprob: -0.8603144288063049
    3. 'result' → logprob: -4.36031436920166
    4. ' result' → logprob: -4.73531436920166
    5. 'def' → logprob: -4.98531436920166
    6. '   ' → logprob: -6.61031436920166
    7. '```' → logprob: -7.11031436920166
    8. ' def' → logprob: -7.73531436920166
    9. 'count' → logprob: -7.73531436920166
    10. 'factor' → logprob: -8.36031436920166

Token 1000: ' par' (ID: 686)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04099095240235329
    2. 'def' → logprob: -3.4159910678863525
    3. '   ' → logprob: -5.665990829467773
    4. 'import' → logprob: -6.040990829467773
    5. ' =' → logprob: -7.915990829467773
    6. '           ' → logprob: -8.415990829467773
    7. ',' → logprob: -8.665990829467773
    8. '
' → logprob: -9.040990829467773
    9. ' def' → logprob: -9.165990829467773
    10. ' par' → logprob: -9.415990829467773

Token 1001: ' la' (ID: 557)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.2673171758651733
    2. ' le' → logprob: -1.6423171758651733
    3. 'le' → logprob: -2.142317295074463
    4. ' res' → logprob: -2.517317295074463
    5. ' the' → logprob: -2.642317295074463
    6. 'the' → logprob: -2.767317295074463
    7. ' comp' → logprob: -3.392317295074463
    8. 'res' → logprob: -3.517317295074463
    9. ' la' → logprob: -3.767317295074463
    10. 'comp' → logprob: -3.892317295074463

Token 1002: ' taille' (ID: 41644)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.46571195125579834
    2. 'res' → logprob: -2.215712070465088
    3. 'mod' → logprob: -2.840712070465088
    4. ' result' → logprob: -3.965712070465088
    5. '```' → logprob: -4.215712070465088
    6. 'def' → logprob: -4.340712070465088
    7. 'MOD' → logprob: -4.340712070465088
    8. ' mod' → logprob: -4.590712070465088
    9. '   ' → logprob: -4.590712070465088
    10. ' def' → logprob: -4.590712070465088

Token 1003: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6118144989013672
    2. '       ' → logprob: -1.4868144989013672
    3. '=' → logprob: -2.486814498901367
    4. ' =' → logprob: -2.986814498901367
    5. '_' → logprob: -4.611814498901367
    6. '(res' → logprob: -4.611814498901367
    7. ':' → logprob: -4.861814498901367
    8. 'def' → logprob: -4.861814498901367
    9. 'res' → logprob: -4.861814498901367
    10. 'of' → logprob: -5.111814498901367

Token 1004: ' nombre' (ID: 9733)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.6828978061676025
    2. 'bloc' → logprob: -0.9328978061676025
    3. ' bloc' → logprob: -2.9328978061676025
    4. 'block' → logprob: -4.182897567749023
    5. ' comp' → logprob: -4.557897567749023
    6. 'res' → logprob: -4.932897567749023
    7. 'com' → logprob: -6.182897567749023
    8. 'result' → logprob: -6.182897567749023
    9. '"' → logprob: -6.307897567749023
    10. '   ' → logprob: -6.432897567749023

Token 1005: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2452417612075806
    2. ' de' → logprob: -1.4952417612075806
    3. 'de' → logprob: -1.8702417612075806
    4. 'd' → logprob: -2.870241641998291
    5. '   ' → logprob: -2.995241641998291
    6. '_' → logprob: -3.495241641998291
    7. 'def' → logprob: -3.870241641998291
    8. ' d' → logprob: -3.870241641998291
    9. '           ' → logprob: -3.870241641998291
    10. '_result' → logprob: -4.245241641998291

Token 1006: ' choix' (ID: 28642)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.09159127622842789
    2. 'ways' → logprob: -3.0915913581848145
    3. ' compos' → logprob: -4.3415913581848145
    4. 'comp' → logprob: -4.9665913581848145
    5. 'sets' → logprob: -5.0915913581848145
    6. 'sp' → logprob: -5.3415913581848145
    7. ' ways' → logprob: -6.2165913581848145
    8. 'components' → logprob: -6.3415913581848145
    9. 'M' → logprob: -6.8415913581848145
    10. 'ar' → logprob: -7.3415913581848145

Token 1007: ' dans' (ID: 2671)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03852061554789543
    2. '
' → logprob: -3.788520574569702
    3. '        
' → logprob: -5.038520812988281
    4. '   ' → logprob: -5.288520812988281
    5. 'def' → logprob: -6.163520812988281
    6. 'import' → logprob: -7.913520812988281
    7. '    
' → logprob: -8.038520812988281
    8. ',' → logprob: -8.788520812988281
    9. '
' → logprob: -9.288520812988281
    10. '           ' → logprob: -9.413520812988281

Token 1008: ' la' (ID: 557)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.9269680976867676
    2. 'la' → logprob: -0.9269680976867676
    3. 'l' → logprob: -2.3019680976867676
    4. 'les' → logprob: -3.1769680976867676
    5. 'range' → logprob: -4.801968097686768
    6. 'res' → logprob: -5.051968097686768
    7. 'each' → logprob: -5.051968097686768
    8. '   ' → logprob: -5.176968097686768
    9. 'cha' → logprob: -5.176968097686768
    10. 'len' → logprob: -5.176968097686768

Token 1009: ' phase' (ID: 15222)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.8783627152442932
    2. 'union' → logprob: -1.7533626556396484
    3. 'block' → logprob: -2.3783626556396484
    4. 'bloc' → logprob: -2.5033626556396484
    5. 'for' → logprob: -3.2533626556396484
    6. 'while' → logprob: -3.3783626556396484
    7. 'bl' → logprob: -3.6283626556396484
    8. 'comp' → logprob: -3.8783626556396484
    9. '#' → logprob: -4.128362655639648
    10. 'comb' → logprob: -4.378362655639648

Token 1010: '
        
' (ID: 20417)
  Prédit: ' suivante'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' suivante' → logprob: -0.8153207898139954
    2. '       ' → logprob: -1.8153207302093506
    3. 'def' → logprob: -1.8153207302093506
    4. 'su' → logprob: -1.8153207302093506
    5. '   ' → logprob: -2.9403207302093506
    6. 'import' → logprob: -5.31532096862793
    7. 'de' → logprob: -5.69032096862793
    8. 'for' → logprob: -6.56532096862793
    9. 's' → logprob: -6.94032096862793
    10. ':' → logprob: -7.06532096862793

Token 1011: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05888950824737549
    2. '   ' → logprob: -3.308889389038086
    3. '
' → logprob: -4.058889389038086
    4. '        
' → logprob: -5.933889389038086
    5. '    
' → logprob: -7.558889389038086
    6. 'import' → logprob: -9.433889389038086
    7. '           ' → logprob: -11.058889389038086
    8. 'def' → logprob: -11.308889389038086
    9. ' 
' → logprob: -11.558889389038086
    10. ' edges' → logprob: -11.808889389038086

Token 1012: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05768565461039543
    2. '       ' → logprob: -3.557685613632202
    3. 'def' → logprob: -4.057685852050781
    4. 'edges' → logprob: -4.807685852050781
    5. 'from' (adapté à ' from') → logprob: -7.432685852050781
    6. '
' → logprob: -7.432685852050781
    7. ' edges' → logprob: -7.682685852050781
    8. 'import' → logprob: -8.432685852050781
    9. 'comp' → logprob: -8.682685852050781
    10. '#' → logprob: -11.182685852050781

Token 1013: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.0020905425772070885
    2. 'math' → logprob: -6.2520904541015625
    3. ' collections' → logprob: -8.752090454101562
    4. 'heap' → logprob: -13.002090454101562
    5. ' math' → logprob: -14.002090454101562
    6. 'operator' → logprob: -14.127090454101562
    7. 'copy' → logprob: -17.127090454101562
    8. 'sys' → logprob: -17.752090454101562
    9. ' itertools' → logprob: -18.377090454101562
    10. 'fra' → logprob: -18.502090454101562

Token 1014: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.0004647504829335958
    2. ' import' → logprob: -8.12546443939209
    3. 'from' → logprob: -10.12546443939209
    4. 't' → logprob: -10.12546443939209
    5. 'ounter' → logprob: -11.25046443939209
    6. '.Counter' → logprob: -11.37546443939209
    7. 'default' → logprob: -11.50046443939209
    8. 'ertools' → logprob: -11.75046443939209
    9. 'imports' → logprob: -12.37546443939209
    10. '#import' → logprob: -12.50046443939209

Token 1015: ' defaultdict' (ID: 107098)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.0041742026805877686
    2. 'deque' → logprob: -5.50417423248291
    3. ' defaultdict' → logprob: -9.25417423248291
    4. ' deque' → logprob: -16.504173278808594
    5. 'named' → logprob: -17.004173278808594
    6. 'collections' → logprob: -18.629173278808594
    7. '.default' → logprob: -19.379173278808594
    8. '(default' → logprob: -19.629173278808594
    9. 'counter' → logprob: -19.754173278808594
    10. 'Counter' → logprob: -20.004173278808594

Token 1016: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13940197229385376
    2. 'def' → logprob: -2.514401912689209
    3. '

' → logprob: -4.264401912689209
    4. '   ' → logprob: -4.639401912689209
    5. 'import' → logprob: -4.764401912689209
    6. '        
' → logprob: -5.389401912689209
    7. '    
' → logprob: -5.514401912689209
    8. ',' → logprob: -6.014401912689209
    9. '       ' → logprob: -6.014401912689209
    10. ' def' → logprob: -7.139401912689209

Token 1017: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16867466270923615
    2. '       ' → logprob: -3.0436747074127197
    3. '   ' → logprob: -3.0436747074127197
    4. 'def' → logprob: -3.1686747074127197
    5. 'import' → logprob: -4.668674468994141
    6. '    
' → logprob: -5.793674468994141
    7. '        
' → logprob: -5.793674468994141
    8. 'edges' → logprob: -7.168674468994141
    9. '```' → logprob: -7.668674468994141
    10. ' edges' → logprob: -7.668674468994141

Token 1018: ' def' (ID: 1056)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5637474656105042
    2. 'def' (adapté à ' def') → logprob: -1.0637474060058594
    3. '       ' → logprob: -2.9387474060058594
    4. '   ' → logprob: -3.9387474060058594
    5. 'res' → logprob: -4.938747406005859
    6. 'result' → logprob: -6.813747406005859
    7. 'n' → logprob: -6.813747406005859
    8. 'class' → logprob: -6.938747406005859
    9. 'edges' → logprob: -7.188747406005859
    10. '
' → logprob: -7.563747406005859

Token 1019: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.5320393443107605
    2. ' count' → logprob: -1.0320394039154053
    3. ' kr' → logprob: -3.5320394039154053
    4. 'kr' → logprob: -3.6570394039154053
    5. ' mst' → logprob: -7.282039165496826
    6. ' counting' → logprob: -9.157039642333984
    7. 'mst' → logprob: -9.157039642333984
    8. 'k' → logprob: -9.282039642333984
    9. ' calc' → logprob: -10.032039642333984
    10. ' solve' → logprob: -10.282039642333984

Token 1020: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.24281761050224304
    2. '_' → logprob: -1.8678176403045654
    3. '_sp' → logprob: -3.4928176403045654
    4. '_edges' → logprob: -3.8678176403045654
    5. '_M' → logprob: -6.117817401885986
    6. '_t' → logprob: -6.242817401885986
    7. '_union' → logprob: -7.242817401885986
    8. '_span' → logprob: -7.367817401885986
    9. '(' → logprob: -7.492817401885986
    10. '_next' → logprob: -8.117817878723145

Token 1021: 'st' (ID: 302)
  Prédit: 'st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.000318065780447796
    2. 'ST' → logprob: -8.37531852722168
    3. 's' → logprob: -9.87531852722168
    4. 'sp' → logprob: -10.62531852722168
    5. 'sts' → logprob: -11.75031852722168
    6. '_st' → logprob: -13.00031852722168
    7. 'stw' → logprob: -15.00031852722168
    8. '_' → logprob: -15.25031852722168
    9. 'stk' → logprob: -15.75031852722168
    10. '_s' → logprob: -15.75031852722168

Token 1022: '(n' (ID: 2406)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.7362779974937439
    2. '_' → logprob: -1.3612780570983887
    3. '(' → logprob: -1.6112780570983887
    4. '_nodes' → logprob: -4.111278057098389
    5. '(
' → logprob: -4.361278057098389
    6. '_count' → logprob: -4.986278057098389
    7. '_edge' → logprob: -5.736278057098389
    8. 's' → logprob: -5.861278057098389
    9. '_tokens' → logprob: -5.861278057098389
    10. '(_' → logprob: -5.986278057098389

Token 1023: 'c' (ID: 66)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002028327202424407
    2. '):' → logprob: -6.252028465270996
    3. ' ,' → logprob: -9.627028465270996
    4. '):
' → logprob: -11.127028465270996
    5. ',
' → logprob: -11.877028465270996
    6. ')' → logprob: -12.002028465270996
    7. '   ' → logprob: -13.502028465270996
    8. '‌,' → logprob: -13.877028465270996
    9. ',n' → logprob: -14.252028465270996
    10. '_,' → logprob: -14.627028465270996

Token 1024: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6865657567977905
    2. '):' → logprob: -1.6865657567977905
    3. '):
' → logprob: -1.6865657567977905
    4. ')' → logprob: -2.31156587600708
    5. '_' → logprob: -3.93656587600708
    6. '),' → logprob: -6.93656587600708
    7. '_,' → logprob: -7.18656587600708
    8. ' ,' → logprob: -7.43656587600708
    9. ')_' → logprob: -7.43656587600708
    10. '):

' → logprob: -7.56156587600708

Token 1025: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.009019993245601654
    2. ' edges' → logprob: -4.75901985168457
    3. 'edge' → logprob: -8.25901985168457
    4. 'comp' → logprob: -9.25901985168457
    5. 'ed' → logprob: -10.38401985168457
    6. '   ' → logprob: -12.50901985168457
    7. ' comp' → logprob: -12.50901985168457
    8. 'eds' → logprob: -12.63401985168457
    9. '(edges' → logprob: -13.13401985168457
    10. 'es' → logprob: -13.25901985168457

Token 1026: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04310150444507599
    2. '):
' → logprob: -3.1681015491485596
    3. ',' → logprob: -10.66810131072998
    4. '):
' → logprob: -10.79310131072998
    5. ':' → logprob: -11.16810131072998
    6. ')' → logprob: -11.16810131072998
    7. '[]):' → logprob: -11.29310131072998
    8. ' ):' → logprob: -12.41810131072998
    9. '):

' → logprob: -12.54310131072998
    10. '   ' → logprob: -12.79310131072998

Token 1027: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04316851869225502
    2. '   ' → logprob: -3.418168544769287
    3. ':
' → logprob: -5.418168544769287
    4. '       ' → logprob: -6.293168544769287
    5. ' :' → logprob: -6.668168544769287
    6. '    
' → logprob: -8.168168067932129
    7. ',' → logprob: -8.543168067932129
    8. '<|end|>' → logprob: -8.543168067932129
    9. '):' → logprob: -8.793168067932129
    10. '(' → logprob: -8.918168067932129

Token 1028: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48603278398513794
    2. '   ' → logprob: -1.2360327243804932
    3. ' edges' → logprob: -3.361032724380493
    4. 'edges' → logprob: -4.111032962799072
    5. ' 
' → logprob: -5.361032962799072
    6. '    
' → logprob: -5.736032962799072
    7. '
' → logprob: -6.111032962799072
    8. ' res' → logprob: -6.236032962799072
    9. 'd' → logprob: -6.236032962799072
    10. 'uf' → logprob: -6.361032962799072

Token 1029: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3528900444507599
    2. '       ' → logprob: -1.6028900146484375
    3. ' 
' → logprob: -3.3528900146484375
    4. '    ' → logprob: -3.7278900146484375
    5. '
' → logprob: -5.2278900146484375
    6. ' ' → logprob: -5.6028900146484375
    7. ' u' → logprob: -5.7278900146484375
    8. '	' → logprob: -6.1028900146484375
    9. ' _' → logprob: -6.3528900146484375
    10. '           ' → logprob: -6.3528900146484375

Token 1030: ' nc' (ID: 39841)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7958664894104004
    2. '   ' → logprob: -2.0458664894104004
    3. 'def' → logprob: -2.5458664894104004
    4. ' 
' → logprob: -2.6708664894104004
    5. 'n' → logprob: -3.0458664894104004
    6. '\n' → logprob: -3.0458664894104004
    7. ' n' → logprob: -3.5458664894104004
    8. '"""' → logprob: -3.5458664894104004
    9. ' def' → logprob: -3.7958664894104004
    10. ' """' → logprob: -4.2958664894104

Token 1031: ' :' (ID: 712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13721008598804474
    2. ')' → logprob: -2.5122101306915283
    3. '=' → logprob: -4.137209892272949
    4. '):' → logprob: -4.637209892272949
    5. ':' → logprob: -5.137209892272949
    6. '<|end|>' → logprob: -5.512209892272949
    7. '   ' → logprob: -6.137209892272949
    8. ' ,' → logprob: -6.262209892272949
    9. ',
' → logprob: -6.262209892272949
    10. ' =' → logprob: -6.762209892272949

Token 1032: ' nombre' (ID: 9733)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.005443519912660122
    2. ' int' → logprob: -5.630443572998047
    3. 'n' → logprob: -6.630443572998047
    4. 'number' → logprob: -8.880443572998047
    5. '<|end|>' → logprob: -9.130443572998047
    6. '[int' → logprob: -9.505443572998047
    7. '<int' → logprob: -10.630443572998047
    8. ' n' → logprob: -10.630443572998047
    9. '=int' → logprob: -10.755443572998047
    10. ']int' → logprob: -11.005443572998047

Token 1033: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.45366668701171875
    2. ')' → logprob: -1.8286666870117188
    3. '   ' → logprob: -2.8286666870117188
    4. '_tokens' → logprob: -3.3286666870117188
    5. '_token' → logprob: -3.5786666870117188
    6. '=' → logprob: -3.8286666870117188
    7. ',
' → logprob: -4.703666687011719
    8. '<|end|>' → logprob: -4.828666687011719
    9. '
' → logprob: -4.953666687011719
    10. '_' → logprob: -5.453666687011719

Token 1034: ' somm' (ID: 44830)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.7232373356819153
    2. 's' → logprob: -0.9732373356819153
    3. ' somm' → logprob: -3.2232372760772705
    4. 'n' → logprob: -3.4732372760772705
    5. ' noe' → logprob: -3.4732372760772705
    6. ' nodes' → logprob: -3.7232372760772705
    7. 'vertices' → logprob: -5.59823751449585
    8. 'som' → logprob: -5.84823751449585
    9. ' vertices' → logprob: -6.84823751449585
    10. ' sommet' → logprob: -7.34823751449585

Token 1035: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.05998232588171959
    2. 'et' → logprob: -3.8099822998046875
    3. 'es' → logprob: -5.0599822998046875
    4. 'ettes' → logprob: -5.4349822998046875
    5. 'ts' → logprob: -5.6849822998046875
    6. 't' → logprob: -5.6849822998046875
    7. '`' → logprob: -6.1849822998046875
    8. 'è' → logprob: -6.1849822998046875
    9. 'ètes' → logprob: -6.1849822998046875
    10. 's' → logprob: -6.6849822998046875

Token 1036: ' locale' (ID: 28442)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0604194402694702
    2. ')' → logprob: -1.1854194402694702
    3. '
' → logprob: -2.0604195594787598
    4. ',
' → logprob: -2.5604195594787598
    5. '           ' → logprob: -3.0604195594787598
    6. '<|end|>' → logprob: -3.1854195594787598
    7. '=' → logprob: -4.18541955947876
    8. '   ' → logprob: -4.31041955947876
    9. '<|end|>' → logprob: -5.31041955947876
    10. ':' → logprob: -6.06041955947876

Token 1037: ' dans' (ID: 2671)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2327970564365387
    2. ',
' → logprob: -1.8577970266342163
    3. '
' → logprob: -3.357797145843506
    4. ')' → logprob: -4.982797145843506
    5. '<|end|>' → logprob: -5.357797145843506
    6. '           ' → logprob: -6.357797145843506
    7. ' ,' → logprob: -7.607797145843506
    8. '\n' → logprob: -7.732797145843506
    9. '<|end|>' → logprob: -7.982797145843506
    10. '   ' → logprob: -8.107796669006348

Token 1038: ' la' (ID: 557)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -1.1372928619384766
    2. 'la' → logprob: -1.3872928619384766
    3. ' comp' → logprob: -1.8872928619384766
    4. ' la' → logprob: -2.2622928619384766
    5. 'nc' → logprob: -2.7622928619384766
    6. 'com' → logprob: -2.8872928619384766
    7. 'l' → logprob: -4.137292861938477
    8. 'le' → logprob: -4.887292861938477
    9. 'the' → logprob: -5.137292861938477
    10. 'n' → logprob: -5.262292861938477

Token 1039: ' compos' (ID: 14635)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.5327050089836121
    2. ' compos' → logprob: -1.7827050685882568
    3. 'comp' → logprob: -2.032705068588257
    4. 'component' → logprob: -2.282705068588257
    5. 'graph' → logprob: -5.782704830169678
    6. '"""' → logprob: -6.032704830169678
    7. ')' → logprob: -6.407704830169678
    8. ' comp' → logprob: -7.157704830169678
    9. 'composition' → logprob: -7.157704830169678
    10. 'def' → logprob: -7.657704830169678

Token 1040: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.2712368667125702
    2. 'nte' → logprob: -2.6462368965148926
    3. 'pon' → logprob: -2.7712368965148926
    4. 'n' → logprob: -3.3962368965148926
    5. 'te' → logprob: -4.271236896514893
    6. 'ente' → logprob: -4.896236896514893
    7. '
' → logprob: -5.146236896514893
    8. 'ponent' → logprob: -5.271236896514893
    9. ')
' → logprob: -5.271236896514893
    10. 'p' → logprob: -5.521236896514893

Token 1041: '
' (ID: 198)
  Prédit: ',
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',
' → logprob: -0.6643413305282593
    2. ',' → logprob: -1.7893413305282593
    3. '
' → logprob: -2.289341449737549
    4. ')' → logprob: -2.414341449737549
    5. '):
' → logprob: -2.914341449737549
    6. '\n' → logprob: -3.539341449737549
    7. ')
' → logprob: -4.289341449737549
    8. '           ' → logprob: -4.664341449737549
    9. '   ' → logprob: -5.039341449737549
    10. '):' → logprob: -5.414341449737549

Token 1042: '           ' (ID: 352)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0368205308914185
    2. '           ' → logprob: -1.2868205308914185
    3. ',' → logprob: -1.5368205308914185
    4. '):' → logprob: -3.286820411682129
    5. '):
' → logprob: -3.411820411682129
    6. '   ' → logprob: -3.661820411682129
    7. ',
' → logprob: -4.161820411682129
    8. ':' → logprob: -4.286820411682129
    9. '
' → logprob: -5.036820411682129
    10. '               ' → logprob: -5.911820411682129

Token 1043: ' edges' (ID: 22569)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.49886688590049744
    2. ' edges' → logprob: -1.3738669157028198
    3. '   ' → logprob: -2.7488667964935303
    4. ' ,' → logprob: -3.6238667964935303
    5. 'edges' (adapté à ' edges') → logprob: -4.498867034912109
    6. '           ' → logprob: -5.248867034912109
    7. ',
' → logprob: -5.373867034912109
    8. '):
' → logprob: -5.498867034912109
    9. '):' → logprob: -5.498867034912109
    10. ')' → logprob: -5.748867034912109

Token 1044: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -1.0025051832199097
    2. ':' → logprob: -1.2525051832199097
    3. ',' → logprob: -1.6275051832199097
    4. ' =' → logprob: -2.877505302429199
    5. ')' → logprob: -3.377505302429199
    6. '):
' → logprob: -4.252505302429199
    7. '=' → logprob: -4.377505302429199
    8. '.sort' → logprob: -4.877505302429199
    9. '<|end|>' → logprob: -4.877505302429199
    10. '<|end|>' → logprob: -5.002505302429199

Token 1045: ' liste' (ID: 31719)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.1270002126693726
    2. 'List' → logprob: -1.5020002126693726
    3. '[
' → logprob: -1.7520002126693726
    4. '[List' → logprob: -2.627000331878662
    5. 'list' → logprob: -2.877000331878662
    6. '[(' → logprob: -3.252000331878662
    7. '[' → logprob: -3.252000331878662
    8. ' list' → logprob: -3.502000331878662
    9. ' List' → logprob: -3.502000331878662
    10. '[]' → logprob: -5.752000331878662

Token 1046: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1945326328277588
    2. ')' → logprob: -2.194532632827759
    3. '           ' → logprob: -2.444532632827759
    4. '(
' → logprob: -2.694532632827759
    5. '[' → logprob: -2.819532632827759
    6. '   ' → logprob: -3.069532632827759
    7. '(' → logprob: -3.069532632827759
    8. ' (' → logprob: -3.444532632827759
    9. ' ,' → logprob: -3.694532632827759
    10. '.' → logprob: -3.694532632827759

Token 1047: ' tuples' (ID: 112464)
  Prédit: ' tuples'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tuples' → logprob: -0.3531172275543213
    2. '(c' → logprob: -1.8531172275543213
    3. '(cost' → logprob: -2.8531172275543213
    4. ' (' → logprob: -3.8531172275543213
    5. 'tu' → logprob: -4.103116989135742
    6. '(int' → logprob: -4.353116989135742
    7. '(tuple' → logprob: -4.478116989135742
    8. 'tuple' → logprob: -4.978116989135742
    9. '(' → logprob: -5.103116989135742
    10. '(co' → logprob: -5.728116989135742

Token 1048: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17093737423419952
    2. '(n' → logprob: -2.2959372997283936
    3. '(cost' → logprob: -3.6709372997283936
    4. ' (' → logprob: -4.045937538146973
    5. '(
' → logprob: -5.670937538146973
    6. '           ' → logprob: -5.795937538146973
    7. '=' → logprob: -5.920937538146973
    8. '   ' → logprob: -7.545937538146973
    9. '=(' → logprob: -7.795937538146973
    10. ',' → logprob: -7.920937538146973

Token 1049: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0004360334132798016
    2. ' cost' → logprob: -8.250435829162598
    3. '(cost' → logprob: -9.375435829162598
    4. 'int' → logprob: -10.250435829162598
    5. '   ' → logprob: -10.875435829162598
    6. ')' → logprob: -11.125435829162598
    7. 'co' → logprob: -11.500435829162598
    8. 'cout' → logprob: -12.500435829162598
    9. ',' → logprob: -13.250435829162598
    10. 'c' → logprob: -13.625435829162598

Token 1050: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018149138486478478
    2. ',
' → logprob: -9.500181198120117
    3. ')' → logprob: -10.500181198120117
    4. '[' → logprob: -10.750181198120117
    5. ' ,' → logprob: -10.875181198120117
    6. '           ' → logprob: -11.500181198120117
    7. ',n' → logprob: -12.625181198120117
    8. '   ' → logprob: -12.875181198120117
    9. '
' → logprob: -13.125181198120117
    10. ',int' → logprob: -13.375181198120117

Token 1051: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.002013932913541794
    2. ' u' → logprob: -6.25201416015625
    3. '   ' → logprob: -9.62701416015625
    4. ')' → logprob: -11.87701416015625
    5. ' ' → logprob: -13.25201416015625
    6. '    
' → logprob: -13.50201416015625
    7. '    ' → logprob: -13.50201416015625
    8. '	u' → logprob: -13.87701416015625
    9. ',' → logprob: -14.00201416015625
    10. 'uc' → logprob: -14.12701416015625

Token 1052: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002457106951624155
    2. '_local' → logprob: -7.002457141876221
    3. '_,' → logprob: -7.502457141876221
    4. ' ,' → logprob: -7.877457141876221
    5. '',' → logprob: -8.002456665039062
    6. ')' → logprob: -8.877456665039062
    7. '),' → logprob: -10.502456665039062
    8. ',
' → logprob: -10.502456665039062
    9. '`,' → logprob: -11.127456665039062
    10. ',_' → logprob: -11.502456665039062

Token 1053: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.306760805164231e-05
    2. ' v' → logprob: -11.25001335144043
    3. '	v' → logprob: -22.00001335144043
    4. ')v' → logprob: -23.50001335144043
    5. ',v' → logprob: -23.87501335144043
    6. '   ' → logprob: -24.00001335144043
    7. '_v' → logprob: -25.25001335144043
    8. 'b' → logprob: -25.37501335144043
    9. '(v' → logprob: -25.62501335144043
    10. 'u' → logprob: -25.75001335144043

Token 1054: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.028373707085847855
    2. '):' → logprob: -3.7783737182617188
    3. '):
' → logprob: -5.778373718261719
    4. '),' → logprob: -6.528373718261719
    5. ')
' → logprob: -8.153373718261719
    6. ',' → logprob: -8.778373718261719
    7. ')`' → logprob: -10.528373718261719
    8. '           ' → logprob: -10.653373718261719
    9. '   ' → logprob: -11.153373718261719
    10. ')\' → logprob: -11.778373718261719

Token 1055: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27432870864868164
    2. ':' → logprob: -2.0243287086486816
    3. '):' → logprob: -3.2743287086486816
    4. '
' → logprob: -3.7743287086486816
    5. ')' → logprob: -4.149328708648682
    6. '):
' → logprob: -4.399328708648682
    7. '    
' → logprob: -5.274328708648682
    8. ':
' → logprob: -5.274328708648682
    9. '       ' → logprob: -6.399328708648682
    10. '           ' → logprob: -6.399328708648682

Token 1056: ' """
' (ID: 7037)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -1.212196946144104
    2. '   ' → logprob: -1.712196946144104
    3. '):' → logprob: -2.0871968269348145
    4. ')' → logprob: -2.0871968269348145
    5. ':' → logprob: -2.3371968269348145
    6. '
' → logprob: -2.4621968269348145
    7. ':
' → logprob: -2.8371968269348145
    8. '           ' → logprob: -4.4621968269348145
    9. '\n' → logprob: -5.5871968269348145
    10. '    
' → logprob: -5.8371968269348145

Token 1057: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0076276883482933044
    2. '    
' → logprob: -5.132627487182617
    3. '
' → logprob: -6.632627487182617
    4. ' 
' → logprob: -9.257627487182617
    5. '    ' → logprob: -9.382627487182617
    6. '       ' → logprob: -9.882627487182617
    7. '           ' → logprob: -10.757627487182617
    8. ' def' → logprob: -11.132627487182617
    9. '    
    
' → logprob: -11.382627487182617
    10. '   
' → logprob: -11.507627487182617

Token 1058: ' edges' (ID: 22569)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.2019304484128952
    2. '   ' → logprob: -2.326930522918701
    3. '       ' → logprob: -3.451930522918701
    4. 'edges' (adapté à ' edges') → logprob: -3.951930522918701
    5. ' uf' → logprob: -4.326930522918701
    6. 'ds' → logprob: -5.201930522918701
    7. 'parent' → logprob: -5.201930522918701
    8. '           ' → logprob: -5.826930522918701
    9. 'ans' → logprob: -7.076930522918701
    10. 'd' → logprob: -7.076930522918701

Token 1059: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.00040576665196567774
    2. '=' → logprob: -8.000405311584473
    3. '.' → logprob: -9.750405311584473
    4. 'sort' → logprob: -11.750405311584473
    5. ' =' → logprob: -12.500405311584473
    6. '_sorted' → logprob: -15.625405311584473
    7. '.append' → logprob: -16.50040626525879
    8. ' sort' → logprob: -16.62540626525879
    9. 'sorted' → logprob: -16.62540626525879
    10. '	sort' → logprob: -17.12540626525879

Token 1060: '(key' (ID: 8932)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06739770621061325
    2. '[' → logprob: -3.1923975944519043
    3. '(' → logprob: -3.9423975944519043
    4. '()[' → logprob: -6.817397594451904
    5. '   ' → logprob: -7.317397594451904
    6. '[]' → logprob: -7.817397594451904
    7. '(lambda' → logprob: -8.067398071289062
    8. '[:]' → logprob: -8.067398071289062
    9. '[(' → logprob: -8.192398071289062
    10. '(
' → logprob: -8.192398071289062

Token 1061: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.011057372204959393
    2. '=' → logprob: -4.511057376861572
    3. '(lambda' → logprob: -12.511056900024414
    4. 'lambda' → logprob: -12.761056900024414
    5. '=(' → logprob: -13.386056900024414
    6. '=
' → logprob: -14.136056900024414
    7. ' =' → logprob: -16.261056900024414
    8. ')' → logprob: -16.261056900024414
    9. '=item' → logprob: -16.261056900024414
    10. '=('' → logprob: -16.261056900024414

Token 1062: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.17841827869415283
    2. 'e' → logprob: -1.9284182786941528
    3. 'cost' → logprob: -4.553418159484863
    4. 't' → logprob: -5.928418159484863
    5. ' x' → logprob: -6.303418159484863
    6. 'c' → logprob: -6.678418159484863
    7. 'edge' → logprob: -6.928418159484863
    8. ':' → logprob: -8.178418159484863
    9. ' e' → logprob: -8.678418159484863
    10. ' cost' → logprob: -9.553418159484863

Token 1063: ':x' (ID: 73587)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012351145269349217
    2. ':x' → logprob: -7.126235008239746
    3. 'x' → logprob: -8.001235008239746
    4. ' :' → logprob: -9.626235008239746
    5. ' x' → logprob: -11.001235008239746
    6. '0' → logprob: -12.251235008239746
    7. '   ' → logprob: -13.126235008239746
    8. '[' → logprob: -13.376235008239746
    9. '(' → logprob: -13.751235008239746
    10. '(x' → logprob: -13.876235008239746

Token 1064: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.42881354689598083
    2. '0' → logprob: -1.0538135766983032
    3. ' ' → logprob: -9.303813934326172
    4. ':' → logprob: -11.928813934326172
    5. 'cost' → logprob: -12.053813934326172
    6. ' [' → logprob: -12.803813934326172
    7. '
' → logprob: -12.803813934326172
    8. '1' → logprob: -14.178813934326172
    9. '   ' → logprob: -14.303813934326172
    10. ')' → logprob: -14.553813934326172

Token 1065: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.5776860184123507e-06
    2. '[' → logprob: -13.50000286102295
    3. ' ' → logprob: -13.87500286102295
    4. 'cost' → logprob: -16.312501907348633
    5. '
' → logprob: -17.625001907348633
    6. '1' → logprob: -17.687501907348633
    7. '۰' → logprob: -18.250001907348633
    8. '```' → logprob: -18.250001907348633
    9. '   ' → logprob: -18.375001907348633
    10. '#' → logprob: -18.687501907348633

Token 1066: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03617074713110924
    2. '])' → logprob: -3.411170721054077
    3. ')
' → logprob: -7.536170959472656
    4. ')[' → logprob: -7.786170959472656
    5. '))' → logprob: -8.161170959472656
    6. '[' → logprob: -8.286170959472656
    7. ')]' → logprob: -8.411170959472656
    8. '),' → logprob: -8.411170959472656
    9. '           ' → logprob: -8.786170959472656
    10. ' )' → logprob: -9.036170959472656

Token 1067: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5940106511116028
    2. '
' → logprob: -1.344010591506958
    3. '   ' → logprob: -2.344010591506958
    4. '    
' → logprob: -3.469010591506958
    5. '            
' → logprob: -4.219010829925537
    6. ' 
' → logprob: -4.344010829925537
    7. '  
' → logprob: -4.844010829925537
    8. '       ' → logprob: -5.469010829925537
    9. ' uf' → logprob: -5.969010829925537
    10. '   
' → logprob: -6.469010829925537

Token 1068: ' uf' (ID: 35772)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' (adapté à ' uf') → logprob: -0.010572804138064384
    2. ' uf' → logprob: -5.385572910308838
    3. '   ' → logprob: -5.635572910308838
    4. '           ' → logprob: -6.885572910308838
    5. '       ' → logprob: -7.135572910308838
    6. 'ans' → logprob: -9.26057243347168
    7. 'res' → logprob: -9.26057243347168
    8. 'ufs' → logprob: -10.01057243347168
    9. 'result' → logprob: -10.26057243347168
    10. 'ds' → logprob: -10.38557243347168

Token 1069: '_local' (ID: 29253)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868750035762787
    2. '=' → logprob: -1.136875033378601
    3. '   ' → logprob: -13.13687515258789
    4. '    ' → logprob: -14.51187515258789
    5. ' ' → logprob: -14.63687515258789
    6. '  ' → logprob: -15.26187515258789
    7. '=n' → logprob: -15.63687515258789
    8. '           ' → logprob: -16.01187515258789
    9. '	' → logprob: -16.13687515258789
    10. '=new' → logprob: -16.88687515258789

Token 1070: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759490728378296
    2. ' =' → logprob: -0.8259490728378296
    3. '   ' → logprob: -11.950948715209961
    4. ' ' → logprob: -13.700948715209961
    5. '  ' → logprob: -14.325948715209961
    6. ',' → logprob: -14.950948715209961
    7. '    ' → logprob: -15.450948715209961
    8. '=
' → logprob: -15.700948715209961
    9. '=n' → logprob: -16.57594871520996
    10. ' ' → logprob: -16.95094871520996

Token 1071: ' Union' (ID: 14746)
  Prédit: 'Union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Union' → logprob: -1.676292231422849e-05
    2. ' Union' → logprob: -11.000017166137695
    3. '   ' → logprob: -17.125017166137695
    4. 'union' → logprob: -17.875017166137695
    5. '_union' → logprob: -19.750017166137695
    6. ''Union' → logprob: -20.250017166137695
    7. 'Un' → logprob: -20.625017166137695
    8. 'Unity' → logprob: -20.750017166137695
    9. '           ' → logprob: -20.750017166137695
    10. 'Uni' → logprob: -21.375017166137695

Token 1072: 'Find' (ID: 11437)
  Prédit: 'Find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Find' → logprob: -4.320199877838604e-07
    2. '           ' → logprob: -16.375
    3. '_find' → logprob: -16.625
    4. 'F' → logprob: -16.75
    5. ' Find' → logprob: -16.875
    6. 'find' → logprob: -17.625
    7. '[int' → logprob: -17.75
    8. '[' → logprob: -18.75
    9. '   ' → logprob: -18.75
    10. '(' → logprob: -19.25

Token 1073: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0015640194760635495
    2. 'nc' → logprob: -6.501564025878906
    3. '           ' → logprob: -10.001564025878906
    4. 'n' → logprob: -11.751564025878906
    5. '
' → logprob: -13.001564025878906
    6. ' nc' → logprob: -13.001564025878906
    7. '_nc' → logprob: -13.376564025878906
    8. '(' → logprob: -14.501564025878906
    9. '(
' → logprob: -14.876564025878906
    10. '               ' → logprob: -15.251564025878906

Token 1074: 'c' (ID: 66)
  Prédit: 'nc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -0.002506697317585349
    2. '(n' → logprob: -6.377506732940674
    3. 'c' → logprob: -7.752506732940674
    4. ' nc' → logprob: -8.127506256103516
    5. '           ' → logprob: -10.502506256103516
    6. '_nc' → logprob: -10.627506256103516
    7. 'n' → logprob: -11.502506256103516
    8. ')' → logprob: -11.627506256103516
    9. '
' → logprob: -12.502506256103516
    10. '       ' → logprob: -13.502506256103516

Token 1075: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.927930654550437e-05
    2. ')
' → logprob: -10.500029563903809
    3. '           ' → logprob: -13.500029563903809
    4. '       ' → logprob: -16.375028610229492
    5. ' )' → logprob: -16.875028610229492
    6. '<|end|>' → logprob: -17.125028610229492
    7. '),' → logprob: -17.500028610229492
    8. ')return' → logprob: -17.625028610229492
    9. '   ' → logprob: -17.875028610229492
    10. ')
' → logprob: -18.125028610229492

Token 1076: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5404947400093079
    2. '   ' → logprob: -1.165494680404663
    3. ' i' → logprob: -3.290494680404663
    4. 'i' → logprob: -3.415494680404663
    5. '       ' → logprob: -3.665494680404663
    6. '    
' → logprob: -6.290494918823242
    7. '    ' → logprob: -6.665494918823242
    8. ' 
' → logprob: -6.915494918823242
    9. ' idx' → logprob: -7.415494918823242
    10. ' ' → logprob: -7.540494918823242

Token 1077: ' ans' (ID: 3345)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.9778615236282349
    2. 'ans' (adapté à ' ans') → logprob: -1.2278615236282349
    3. 'res' → logprob: -1.7278615236282349
    4. 'total' → logprob: -2.9778614044189453
    5. 'answer' → logprob: -2.9778614044189453
    6. 'result' → logprob: -3.3528614044189453
    7. 'cnt' → logprob: -4.852861404418945
    8. 'ways' → logprob: -4.977861404418945
    9. '   ' → logprob: -7.352861404418945
    10. 'mst' → logprob: -7.852861404418945

Token 1078: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2522500157356262
    2. '=' → logprob: -1.5022499561309814
    3. ' *=' → logprob: -8.502249717712402
    4. ',' → logprob: -10.627249717712402
    5. ' ' → logprob: -11.127249717712402
    6. '   ' → logprob: -11.252249717712402
    7. ' +=' → logprob: -11.502249717712402
    8. ')' → logprob: -11.627249717712402
    9. 'import' → logprob: -11.877249717712402
    10. '*=' → logprob: -12.002249717712402

Token 1079: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.226628895296017e-06
    2. ' ' → logprob: -11.875007629394531
    3. '   ' → logprob: -15.625007629394531
    4. '           ' → logprob: -17.25000762939453
    5. '```' → logprob: -17.62500762939453
    6. '       ' → logprob: -18.00000762939453
    7. '
' → logprob: -19.87500762939453
    8. '                   ' → logprob: -20.37500762939453
    9. '     ' → logprob: -20.37500762939453
    10. '  ' → logprob: -20.37500762939453

Token 1080: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. 'mod' → logprob: -18.375
    4. '```' → logprob: -18.625
    5. '   ' → logprob: -19.0
    6. '(' → logprob: -20.125
    7. '0' → logprob: -20.5625
    8. '۱' → logprob: -21.0
    9. '
' → logprob: -21.0625
    10. '`' → logprob: -21.1875

Token 1081: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09797053039073944
    2. '
' → logprob: -2.472970485687256
    3. '   ' → logprob: -5.972970485687256
    4. '       ' → logprob: -6.097970485687256
    5. '    
' → logprob: -6.347970485687256
    6. '            
' → logprob: -7.722970485687256
    7. ',' → logprob: -7.972970485687256
    8. '  
' → logprob: -8.222970962524414
    9. '<|end|>' → logprob: -8.347970962524414
    10. '        
' → logprob: -8.347970962524414

Token 1082: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.32585060596466064
    2. '   ' → logprob: -2.575850486755371
    3. '    
' → logprob: -2.950850486755371
    4. '
' → logprob: -2.950850486755371
    5. '       ' → logprob: -3.075850486755371
    6. ' 
' → logprob: -4.075850486755371
    7. '        
' → logprob: -4.575850486755371
    8. ' i' → logprob: -5.575850486755371
    9. '            
' → logprob: -5.700850486755371
    10. '  
' → logprob: -5.700850486755371

Token 1083: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.010999719612300396
    2. '   ' → logprob: -5.01099967956543
    3. 'idx' → logprob: -5.51099967956543
    4. '       ' → logprob: -9.38599967956543
    5. ' i' → logprob: -9.38599967956543
    6. 'index' → logprob: -10.51099967956543
    7. 'e' → logprob: -11.26099967956543
    8. 'pos' → logprob: -11.26099967956543
    9. '           ' → logprob: -12.88599967956543
    10. 'cur' → logprob: -13.01099967956543

Token 1084: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08354243636131287
    2. ' =' → logprob: -2.9585423469543457
    3. ' +=' → logprob: -3.8335423469543457
    4. '+=' → logprob: -5.208542346954346
    5. '+' → logprob: -7.458542346954346
    6. ' ' → logprob: -7.833542346954346
    7. '0' → logprob: -9.833542823791504
    8. ',' → logprob: -10.708542823791504
    9. '[' → logprob: -10.833542823791504
    10. ')' → logprob: -11.208542823791504

Token 1085: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010902655776590109
    2. ' ' → logprob: -9.12510871887207
    3. '   ' → logprob: -18.62510871887207
    4. '1' → logprob: -21.12510871887207
    5. '۰' → logprob: -21.12510871887207
    6. '  ' → logprob: -21.25010871887207
    7. ' ' → logprob: -21.37510871887207
    8. '       ' → logprob: -21.37510871887207
    9. '           ' → logprob: -21.75010871887207
    10. '         ' → logprob: -22.25010871887207

Token 1086: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '   ' → logprob: -20.125
    4. '       ' → logprob: -22.0
    5. '۰' → logprob: -22.0
    6. 'len' → logprob: -22.125
    7. '[' → logprob: -22.375
    8. '1' → logprob: -23.25
    9. '<|end|>' → logprob: -23.25
    10. '           ' → logprob: -23.5

Token 1087: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04642977938055992
    2. ' 
' → logprob: -3.6714298725128174
    3. '           ' → logprob: -5.421429634094238
    4. '<|end|>' → logprob: -5.671429634094238
    5. '  
' → logprob: -6.171429634094238
    6. '       ' → logprob: -6.546429634094238
    7. '    
' → logprob: -6.796429634094238
    8. 'while' → logprob: -6.796429634094238
    9. '   ' → logprob: -7.046429634094238
    10. ' ' → logprob: -7.421429634094238

Token 1088: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13016822934150696
    2. ':
' → logprob: -3.8801681995391846
    3. ' 
' → logprob: -4.130168437957764
    4. '   ' → logprob: -4.130168437957764
    5. ' ' → logprob: -4.380168437957764
    6. ':' → logprob: -4.380168437957764
    7. '       ' → logprob: -4.755168437957764
    8. '\n' → logprob: -4.755168437957764
    9. '```' → logprob: -5.005168437957764
    10. 'while' → logprob: -5.880168437957764

Token 1089: ' m' (ID: 284)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.2741752862930298
    2. 'n' → logprob: -2.3991751670837402
    3. '
' → logprob: -2.3991751670837402
    4. ' while' → logprob: -3.1491751670837402
    5. ' 
' → logprob: -5.77417516708374
    6. '   ' → logprob: -5.89917516708374
    7. '           ' → logprob: -5.89917516708374
    8. '       ' → logprob: -6.02417516708374
    9. '\n' → logprob: -7.14917516708374
    10. '  
' → logprob: -7.64917516708374

Token 1090: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13364481925964355
    2. ' =' → logprob: -2.1336448192596436
    3. '=len' → logprob: -6.008645057678223
    4. '[' → logprob: -6.758645057678223
    5. 'n' → logprob: -7.883645057678223
    6. '<|end|>' → logprob: -7.883645057678223
    7. ' +=' → logprob: -8.383645057678223
    8. '+' → logprob: -8.508645057678223
    9. '<len' → logprob: -8.758645057678223
    10. '>' → logprob: -9.008645057678223

Token 1091: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0004307884373702109
    2. ' len' → logprob: -7.750430583953857
    3. '(len' → logprob: -16.250431060791016
    4. '[len' → logprob: -17.125431060791016
    5. '=len' → logprob: -17.375431060791016
    6. '	len' → logprob: -18.250431060791016
    7. ',len' → logprob: -19.250431060791016
    8. '<len' → logprob: -20.250431060791016
    9. '           ' → logprob: -20.375431060791016
    10. '   ' → logprob: -20.375431060791016

Token 1092: '(edges' (ID: 185298)
  Prédit: '(edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edges' → logprob: -0.0019457722082734108
    2. 'edges' → logprob: -6.251945972442627
    3. ' edges' → logprob: -11.126945495605469
    4. '(' → logprob: -13.501945495605469
    5. '(
' → logprob: -14.126945495605469
    6. 'Edges' → logprob: -16.50194549560547
    7. ' (' → logprob: -16.75194549560547
    8. '_edges' → logprob: -16.75194549560547
    9. '.edges' → logprob: -17.62694549560547
    10. '(edge' → logprob: -18.12694549560547

Token 1093: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006640645442530513
    2. ')
' → logprob: -7.375664234161377
    3. '   ' → logprob: -11.875663757324219
    4. '<|end|>' → logprob: -11.875663757324219
    5. ' )' → logprob: -12.625663757324219
    6. '           ' → logprob: -12.750663757324219
    7. '<|end|>' → logprob: -13.000663757324219
    8. '       ' → logprob: -13.125663757324219
    9. ')i' → logprob: -13.125663757324219
    10. '
' → logprob: -13.250663757324219

Token 1094: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.41514331102371216
    2. '
' → logprob: -2.1651432514190674
    3. '   ' → logprob: -2.4151432514190674
    4. ' 
' → logprob: -3.6651432514190674
    5. '       ' → logprob: -3.7901432514190674
    6. '    
' → logprob: -3.9151432514190674
    7. '            
' → logprob: -4.4151434898376465
    8. '```' → logprob: -4.5401434898376465
    9. '  
' → logprob: -4.9151434898376465
    10. ' ' → logprob: -5.1651434898376465

Token 1095: ' while' (ID: 2049)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8229364156723022
    2. ' 
' → logprob: -1.4479364156723022
    3. '\n' → logprob: -1.5729364156723022
    4. 'while' (adapté à ' while') → logprob: -3.822936534881592
    5. ' while' → logprob: -3.822936534881592
    6. '   ' → logprob: -4.197936534881592
    7. '       ' → logprob: -4.197936534881592
    8. '    
' → logprob: -4.822936534881592
    9. '           ' → logprob: -4.947936534881592
    10. ' ' → logprob: -5.197936534881592

Token 1096: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03804677724838257
    2. ' i' → logprob: -3.2880468368530273
    3. ' ' → logprob: -12.663046836853027
    4. '   ' → logprob: -13.788046836853027
    5. 'True' → logprob: -14.788046836853027
    6. ' True' → logprob: -15.288046836853027
    7. '	i' → logprob: -15.788046836853027
    8. '  ' → logprob: -15.913046836853027
    9. '(i' → logprob: -16.28804588317871
    10. '     ' → logprob: -16.53804588317871

Token 1097: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.46586382389068604
    2. ' <' → logprob: -1.090863823890686
    3. '[' → logprob: -4.3408637046813965
    4. '<len' → logprob: -4.7158637046813965
    5. '+' → logprob: -5.4658637046813965
    6. '=' → logprob: -5.7158637046813965
    7. '<
' → logprob: -6.5908637046813965
    8. '<n' → logprob: -6.9658637046813965
    9. '<=' → logprob: -7.0908637046813965
    10. ' ' → logprob: -7.5908637046813965

Token 1098: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.306760805164231e-05
    2. ' m' → logprob: -11.25001335144043
    3. '
' → logprob: -17.62501335144043
    4. '	m' → logprob: -19.37501335144043
    5. '           ' → logprob: -20.12501335144043
    6. 'len' → logprob: -20.75001335144043
    7. ')m' → logprob: -21.00001335144043
    8. '```' → logprob: -21.50001335144043
    9. '<m' → logprob: -21.87501335144043
    10. '[m' → logprob: -21.87501335144043

Token 1099: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4999305307865143
    2. ':' → logprob: -0.9999305009841919
    3. '           ' → logprob: -4.374930381774902
    4. '               ' → logprob: -4.874930381774902
    5. '       ' → logprob: -5.999930381774902
    6. ' :
' → logprob: -7.249930381774902
    7. ',' → logprob: -7.999930381774902
    8. '                   ' → logprob: -8.249930381774902
    9. '=' → logprob: -8.249930381774902
    10. '   ' → logprob: -8.374930381774902

Token 1100: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2521863877773285
    2. 'j' → logprob: -1.6271864175796509
    3. '               ' → logprob: -3.7521862983703613
    4. ' j' → logprob: -6.252186298370361
    5. '   ' → logprob: -8.12718677520752
    6. 'cost' → logprob: -8.50218677520752
    7. '	j' → logprob: -9.25218677520752
    8. '       ' → logprob: -9.25218677520752
    9. '            
' → logprob: -9.50218677520752
    10. '
' → logprob: -10.00218677520752

Token 1101: ' cost' (ID: 3097)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0005762664368376136
    2. ' j' → logprob: -8.12557601928711
    3. '               ' → logprob: -8.50057601928711
    4. 'cost' (adapté à ' cost') → logprob: -10.25057601928711
    5. '   ' → logprob: -10.62557601928711
    6. '	j' → logprob: -12.12557601928711
    7. '                   ' → logprob: -12.50057601928711
    8. 'c' → logprob: -12.87557601928711
    9. '                
' → logprob: -13.87557601928711
    10. '
' → logprob: -14.00057601928711

Token 1102: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07986989617347717
    2. ' =' → logprob: -3.5798699855804443
    3. '_' → logprob: -3.8298699855804443
    4. '==' → logprob: -4.954869747161865
    5. '_=' → logprob: -5.454869747161865
    6. ',' → logprob: -5.704869747161865
    7. '_idx' → logprob: -5.829869747161865
    8. '_i' → logprob: -5.954869747161865
    9. '_edges' → logprob: -6.329869747161865
    10. ' ==' → logprob: -6.704869747161865

Token 1103: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.011049470864236355
    2. ' edges' → logprob: -4.511049270629883
    3. '               ' → logprob: -14.011049270629883
    4. '(edges' → logprob: -14.261049270629883
    5. '.edges' → logprob: -16.511049270629883
    6. '           ' → logprob: -16.636049270629883
    7. '                   ' → logprob: -17.261049270629883
    8. '   ' → logprob: -17.636049270629883
    9. '_edges' → logprob: -18.136049270629883
    10. 'Edges' → logprob: -20.136049270629883

Token 1104: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00015836587408557534
    2. '               ' → logprob: -10.125158309936523
    3. '[' → logprob: -10.375158309936523
    4. 'i' → logprob: -10.625158309936523
    5. '][' → logprob: -10.875158309936523
    6. ')[' → logprob: -11.375158309936523
    7. '                   ' → logprob: -11.875158309936523
    8. '           ' → logprob: -12.000158309936523
    9. '[
' → logprob: -12.125158309936523
    10. ' [' → logprob: -12.375158309936523

Token 1105: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3881451487541199
    2. '][' → logprob: -1.1381452083587646
    3. ')[' → logprob: -7.8881449699401855
    4. ',' → logprob: -7.8881449699401855
    5. ' ][' → logprob: -9.013145446777344
    6. ']' → logprob: -9.138145446777344
    7. '   ' → logprob: -9.388145446777344
    8. '[
' → logprob: -9.513145446777344
    9. ',
' → logprob: -10.138145446777344
    10. '
' → logprob: -11.513145446777344

Token 1106: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.531315314830863e-06
    2. '
' → logprob: -13.125003814697266
    3. '[' → logprob: -14.875003814697266
    4. '   ' → logprob: -15.125003814697266
    5. ' ' → logprob: -15.250003814697266
    6. '```' → logprob: -16.062503814697266
    7. '1' → logprob: -16.250003814697266
    8. ':' → logprob: -16.687503814697266
    9. '][' → logprob: -16.875003814697266
    10. 'cost' → logprob: -17.125003814697266

Token 1107: ']
' (ID: 1592)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07983006536960602
    2. '
' → logprob: -3.3298301696777344
    3. ')' → logprob: -3.4548301696777344
    4. ')
' → logprob: -5.829830169677734
    5. ',' → logprob: -6.204830169677734
    6. '                   ' → logprob: -6.954830169677734
    7. '                
' → logprob: -7.079830169677734
    8. '           ' → logprob: -7.204830169677734
    9. ']' → logprob: -7.704830169677734
    10. ',
' → logprob: -8.704830169677734

Token 1108: '               ' (ID: 506)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.01657068356871605
    2. '               ' → logprob: -4.266570568084717
    3. ' j' → logprob: -6.391570568084717
    4. '                   ' → logprob: -7.516570568084717
    5. ',j' → logprob: -10.141571044921875
    6. '	j' → logprob: -10.516571044921875
    7. '```' → logprob: -10.641571044921875
    8. '                
' → logprob: -10.891571044921875
    9. '   ' → logprob: -11.016571044921875
    10. '_j' → logprob: -11.891571044921875

Token 1109: ' #' (ID: 1069)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.727905979962088e-05
    2. '               ' → logprob: -10.25004768371582
    3. '   ' → logprob: -12.50004768371582
    4. '                   ' → logprob: -12.50004768371582
    5. ' j' → logprob: -12.75004768371582
    6. '	j' → logprob: -14.87504768371582
    7. '           ' → logprob: -15.37504768371582
    8. '                
' → logprob: -15.50004768371582
    9. '#' (adapté à ' #') → logprob: -16.12504768371582
    10. '```' → logprob: -16.12504768371582

Token 1110: ' Sous' (ID: 88031)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.8206473871250637e-05
    2. '   ' → logprob: -11.000028610229492
    3. '               ' → logprob: -11.750028610229492
    4. '#' → logprob: -13.750028610229492
    5. ' j' → logprob: -14.250028610229492
    6. '
' → logprob: -14.375028610229492
    7. '                   ' → logprob: -14.625028610229492
    8. '           ' → logprob: -15.250028610229492
    9. '	j' → logprob: -15.375028610229492
    10. '                
' → logprob: -16.250028610229492

Token 1111: '-l' (ID: 2887)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0006547740194946527
    2. '   ' → logprob: -8.000655174255371
    3. 'i' → logprob: -9.000655174255371
    4. '
' → logprob: -10.250655174255371
    5. '```' → logprob: -10.375655174255371
    6. '_j' → logprob: -10.625655174255371
    7. '       ' → logprob: -10.750655174255371
    8. ' j' → logprob: -11.000655174255371
    9. 'e' → logprob: -11.000655174255371
    10. '``' → logprob: -11.625655174255371

Token 1112: 'iste' (ID: 4872)
  Prédit: 'oop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oop' → logprob: -0.6703893542289734
    2. 'ist' → logprob: -0.9203893542289734
    3. 'iste' → logprob: -2.545389413833618
    4. 'i' → logprob: -5.670389175415039
    5. 'e' → logprob: -6.045389175415039
    6. 'op' → logprob: -6.420389175415039
    7. 'en' → logprob: -7.045389175415039
    8. '#' → logprob: -7.920389175415039
    9. 'o' → logprob: -7.920389175415039
    10. 'ope' → logprob: -8.670389175415039

Token 1113: ' des' (ID: 731)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.058709558099508286
    2. '               ' → logprob: -3.6837096214294434
    3. ' j' → logprob: -3.8087096214294434
    4. '_j' → logprob: -5.308709621429443
    5. '[j' → logprob: -7.058709621429443
    6. 'b' → logprob: -7.433709621429443
    7. ' =' → logprob: -7.558709621429443
    8. '                   ' → logprob: -7.808709621429443
    9. 'end' → logprob: -8.183709144592285
    10. 'token' → logprob: -8.183709144592285

Token 1114: ' ar' (ID: 646)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5566901564598083
    2. 'edges' → logprob: -1.4316902160644531
    3. 'i' → logprob: -1.6816902160644531
    4. ' edges' → logprob: -6.931690216064453
    5. ' j' → logprob: -7.681690216064453
    6. '```' → logprob: -9.306690216064453
    7. '(edges' → logprob: -9.431690216064453
    8. ' i' → logprob: -9.931690216064453
    9. '#' → logprob: -9.931690216064453
    10. 'while' → logprob: -10.556690216064453

Token 1115: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.6263321042060852
    2. 'ches' → logprob: -1.3763320446014404
    3. 'r' → logprob: -2.5013320446014404
    4. 'cs' → logprob: -3.7513320446014404
    5. '_edges' → logprob: -3.7513320446014404
    6. 'i' → logprob: -4.2513322830200195
    7. '(i' → logprob: -4.6263322830200195
    8. '[i' → logprob: -4.7513322830200195
    9. 'edges' → logprob: -4.8763322830200195
    10. 'g' → logprob: -5.1263322830200195

Token 1116: ' avec' (ID: 3937)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.18851487338542938
    2. ' j' → logprob: -2.4385149478912354
    3. '[j' → logprob: -2.8135149478912354
    4. '               ' → logprob: -4.188514709472656
    5. 'while' → logprob: -6.813514709472656
    6. 'with' → logprob: -6.938514709472656
    7. '                   ' → logprob: -7.438514709472656
    8. '[' → logprob: -7.438514709472656
    9. '[token' → logprob: -7.563514709472656
    10. 'edges' → logprob: -7.688514709472656

Token 1117: ' même' (ID: 9679)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0006191504653543234
    2. 'co' → logprob: -8.250618934631348
    3. 'cout' → logprob: -9.125618934631348
    4. ' cost' → logprob: -9.375618934631348
    5. 'le' → logprob: -10.250618934631348
    6. 'c' → logprob: -10.750618934631348
    7. '```' → logprob: -10.875618934631348
    8. '   ' → logprob: -11.125618934631348
    9. '
' → logprob: -11.125618934631348
    10. ' coût' → logprob: -11.250618934631348

Token 1118: ' coût' (ID: 73109)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.028583649545907974
    2. 'co' → logprob: -3.6535837650299072
    3. 'cout' → logprob: -6.403583526611328
    4. ' cost' → logprob: -7.778583526611328
    5. '   ' → logprob: -10.278583526611328
    6. ' coût' → logprob: -10.403583526611328
    7. 'c' → logprob: -10.528583526611328
    8. '  ' → logprob: -10.653583526611328
    9. ' ' → logprob: -10.778583526611328
    10. '
' → logprob: -10.903583526611328

Token 1119: '
' (ID: 198)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.058031387627124786
    2. '               ' → logprob: -3.4330313205718994
    3. ' j' → logprob: -3.8080313205718994
    4. ',' → logprob: -7.4330315589904785
    5. ',j' → logprob: -7.4330315589904785
    6. '                   ' → logprob: -8.93303108215332
    7. '	j' → logprob: -9.18303108215332
    8. '[j' → logprob: -9.55803108215332
    9. '_j' → logprob: -9.55803108215332
    10. '
' → logprob: -9.93303108215332

Token 1120: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.019497385248541832
    2. 'j' → logprob: -4.269497394561768
    3. ' j' → logprob: -5.894497394561768
    4. '```' → logprob: -7.019497394561768
    5. '                
' → logprob: -7.269497394561768
    6. 'tokens' → logprob: -8.26949691772461
    7. '                   ' → logprob: -8.39449691772461
    8. 'token' → logprob: -9.39449691772461
    9. 'i' → logprob: -9.89449691772461
    10. '	j' → logprob: -10.51949691772461

Token 1121: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.024345774203538895
    2. ' j' → logprob: -3.774345874786377
    3. '               ' → logprob: -7.274345874786377
    4. '                   ' → logprob: -8.274345397949219
    5. '   ' → logprob: -10.274345397949219
    6. '	j' → logprob: -10.399345397949219
    7. '```' → logprob: -10.524345397949219
    8. 'edges' → logprob: -10.774345397949219
    9. 'end' → logprob: -12.024345397949219
    10. '=j' → logprob: -12.399345397949219

Token 1122: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3491671681404114
    2. ' =' → logprob: -1.2241671085357666
    3. '=i' → logprob: -7.349167346954346
    4. '+=' → logprob: -10.349166870117188
    5. '=j' → logprob: -10.349166870117188
    6. ' +=' → logprob: -11.599166870117188
    7. '=int' → logprob: -13.849166870117188
    8. '   ' → logprob: -14.474166870117188
    9. '=k' → logprob: -14.724166870117188
    10. '=
' → logprob: -15.099166870117188

Token 1123: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -7.107425062713446e-06
    2. ' i' → logprob: -11.875006675720215
    3. '   ' → logprob: -16.25000762939453
    4. '	i' → logprob: -16.87500762939453
    5. '{i' → logprob: -19.00000762939453
    6. '                   ' → logprob: -19.50000762939453
    7. '=i' → logprob: -19.87500762939453
    8. 'j' → logprob: -20.00000762939453
    9. '_i' → logprob: -20.12500762939453
    10. '               ' → logprob: -20.37500762939453

Token 1124: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.009140022099018097
    2. ' +' → logprob: -5.1341400146484375
    3. '
' → logprob: -5.8841400146484375
    4. 'while' → logprob: -8.384140014648438
    5. '1' → logprob: -9.634140014648438
    6. '+
' → logprob: -9.759140014648438
    7. '+j' → logprob: -10.259140014648438
    8. ' while' → logprob: -12.009140014648438
    9. '<|end|>' → logprob: -12.384140014648438
    10. 'While' → logprob: -12.634140014648438

Token 1125: '               ' (ID: 506)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.055385772138834
    2. '
' → logprob: -3.6803858280181885
    3. '               ' → logprob: -5.430385589599609
    4. '+
' → logprob: -5.555385589599609
    5. 'while' → logprob: -5.555385589599609
    6. '<|end|>' → logprob: -5.680385589599609
    7. ' +' → logprob: -6.055385589599609
    8. '                   ' → logprob: -6.180385589599609
    9. 'j' → logprob: -6.555385589599609
    10. '<|end|>' → logprob: -6.680385589599609

Token 1126: ' while' (ID: 2049)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5612176060676575
    2. 'while' (adapté à ' while') → logprob: -1.0612175464630127
    3. ' while' → logprob: -2.6862175464630127
    4. ' j' → logprob: -4.811217784881592
    5. '               ' → logprob: -5.061217784881592
    6. '
' → logprob: -8.061217308044434
    7. '                   ' → logprob: -8.561217308044434
    8. 'While' → logprob: -9.186217308044434
    9. '+' → logprob: -9.561217308044434
    10. '                ' → logprob: -9.936217308044434

Token 1127: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -5.3120038501219824e-05
    2. ' j' → logprob: -9.875053405761719
    3. '   ' → logprob: -14.500053405761719
    4. '(j' → logprob: -14.625053405761719
    5. '	j' → logprob: -14.750053405761719
    6. 'edges' → logprob: -16.62505340576172
    7. '$j' → logprob: -16.62505340576172
    8. ' ' → logprob: -17.75005340576172
    9. '(' → logprob: -18.37505340576172
    10. '[j' → logprob: -18.87505340576172

Token 1128: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.1434984654188156
    2. ' <' → logprob: -2.143498420715332
    3. '+' → logprob: -4.393498420715332
    4. ' +' → logprob: -6.018498420715332
    5. '[' → logprob: -7.018498420715332
    6. '<len' → logprob: -8.268498420715332
    7. '<n' → logprob: -8.643498420715332
    8. ' ' → logprob: -9.518498420715332
    9. '<m' → logprob: -9.768498420715332
    10. 'and' → logprob: -11.018498420715332

Token 1129: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: 0.0
    2. ' m' → logprob: -17.625
    3. 'j' → logprob: -20.875
    4. '
' → logprob: -21.875
    5. 'i' → logprob: -22.625
    6. '   ' → logprob: -22.625
    7. '	m' → logprob: -22.75
    8. '           ' → logprob: -23.75
    9. '               ' → logprob: -23.75
    10. 'м' → logprob: -25.125

Token 1130: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3869030177593231
    2. 'and' → logprob: -1.1369030475616455
    3. '	and' → logprob: -11.136902809143066
    4. '+' → logprob: -12.636902809143066
    5. ' ' → logprob: -12.886902809143066
    6. ' и' → logprob: -13.261902809143066
    7. '           ' → logprob: -13.386902809143066
    8. '   ' → logprob: -13.761902809143066
    9. ' or' → logprob: -14.011902809143066
    10. ' và' → logprob: -14.386902809143066

Token 1131: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.006716317031532526
    2. ' edges' → logprob: -5.006716251373291
    3. '(edges' → logprob: -14.63171672821045
    4. '   ' → logprob: -15.25671672821045
    5. '           ' → logprob: -16.256715774536133
    6. '.edges' → logprob: -16.631715774536133
    7. '
' → logprob: -17.256715774536133
    8. '               ' → logprob: -17.756715774536133
    9. '       ' → logprob: -18.381715774536133
    10. '_edges' → logprob: -19.256715774536133

Token 1132: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -7.465036105713807e-06
    2. '[' → logprob: -12.375007629394531
    3. '[
' → logprob: -13.875007629394531
    4. 'j' → logprob: -14.250007629394531
    5. '```' → logprob: -14.875007629394531
    6. ')[' → logprob: -15.250007629394531
    7. '
' → logprob: -15.625007629394531
    8. '[i' → logprob: -15.750007629394531
    9. '][' → logprob: -15.875007629394531
    10. '   ' → logprob: -16.25000762939453

Token 1133: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4771074652671814
    2. '][' → logprob: -0.9771074652671814
    3. '<|end|>' → logprob: -7.352107524871826
    4. '<|end|>' → logprob: -7.477107524871826
    5. '[j' → logprob: -7.727107524871826
    6. ']' → logprob: -7.852107524871826
    7. '==' → logprob: -8.102107048034668
    8. '[][' → logprob: -9.227107048034668
    9. ']==' → logprob: -9.352107048034668
    10. '```' → logprob: -9.352107048034668

Token 1134: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00048238897579722106
    2. 'j' → logprob: -7.750482559204102
    3. 'i' → logprob: -11.125482559204102
    4. '][' → logprob: -11.375482559204102
    5. '1' → logprob: -12.125482559204102
    6. '<|end|>' → logprob: -12.250482559204102
    7. ' ' → logprob: -13.312982559204102
    8. '   ' → logprob: -13.375482559204102
    9. '```' → logprob: -13.375482559204102
    10. '[' → logprob: -13.500482559204102

Token 1135: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.31204313039779663
    2. '==' → logprob: -1.6870431900024414
    3. ']==' → logprob: -2.5620431900024414
    4. ']' → logprob: -5.312043190002441
    5. ')==' → logprob: -7.812043190002441
    6. '[' → logprob: -8.562043190002441
    7. '']==' → logprob: -8.937043190002441
    8. ')' → logprob: -9.812043190002441
    9. '==
' → logprob: -10.937043190002441
    10. '()==' → logprob: -11.312043190002441

Token 1136: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3868865668773651
    2. '==' → logprob: -1.1368865966796875
    3. ']==' → logprob: -12.511886596679688
    4. '==
' → logprob: -12.511886596679688
    5. ')==' → logprob: -12.511886596679688
    6. '[' → logprob: -12.886886596679688
    7. '=' → logprob: -14.011886596679688
    8. '===' → logprob: -14.761886596679688
    9. '()==' → logprob: -15.511886596679688
    10. ' ' → logprob: -16.011886596679688

Token 1137: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.001170225441455841
    2. ' cost' → logprob: -6.7511701583862305
    3. '(cost' → logprob: -18.376171112060547
    4. 'Cost' → logprob: -19.126171112060547
    5. '   ' → logprob: -19.626171112060547
    6. '_cost' → logprob: -19.876171112060547
    7. 'co' → logprob: -20.501171112060547
    8. ' ' → logprob: -21.126171112060547
    9. 'cos' → logprob: -21.751171112060547
    10. 'code' → logprob: -21.751171112060547

Token 1138: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5599348545074463
    2. ':' → logprob: -1.1849348545074463
    3. '                   ' → logprob: -2.5599348545074463
    4. ' and' → logprob: -3.8099348545074463
    5. '               ' → logprob: -5.184934616088867
    6. 'and' → logprob: -5.184934616088867
    7. 'j' → logprob: -5.434934616088867
    8. '<|end|>' → logprob: -6.559934616088867
    9. ':j' → logprob: -6.559934616088867
    10. '                       ' → logprob: -7.059934616088867

Token 1139: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0071099670603871346
    2. 'j' → logprob: -5.382110118865967
    3. '                       ' → logprob: -7.132110118865967
    4. ' j' → logprob: -7.757110118865967
    5. '               ' → logprob: -8.132109642028809
    6. '
' → logprob: -8.632109642028809
    7. '                           ' → logprob: -9.132109642028809
    8. '           ' → logprob: -9.382109642028809
    9. '```' → logprob: -9.632109642028809
    10. '   ' → logprob: -9.882109642028809

Token 1140: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.014344729483127594
    2. ' j' → logprob: -4.639344692230225
    3. '                   ' → logprob: -5.389344692230225
    4. '	j' → logprob: -12.139345169067383
    5. '   ' → logprob: -13.139345169067383
    6. '                       ' → logprob: -13.264345169067383
    7. '               ' → logprob: -13.264345169067383
    8. ' ' → logprob: -14.389345169067383
    9. '                    ' → logprob: -15.389345169067383
    10. '$j' → logprob: -15.514345169067383

Token 1141: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.6326612234115601
    2. ' +=' → logprob: -0.7576612234115601
    3. '=' → logprob: -10.632660865783691
    4. '+' → logprob: -10.757660865783691
    5. ')' → logprob: -12.257660865783691
    6. ']+=' → logprob: -12.757660865783691
    7. ' +' → logprob: -13.257660865783691
    8. ' =' → logprob: -13.632660865783691
    9. '.' → logprob: -13.882660865783691
    10. '<|end|>' → logprob: -14.382660865783691

Token 1142: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -17.625045776367188
    4. '
' → logprob: -19.250045776367188
    5. '```' → logprob: -21.250045776367188
    6. '  ' → logprob: -21.625045776367188
    7. '۱' → logprob: -21.625045776367188
    8. '           ' → logprob: -21.750045776367188
    9. '                   ' → logprob: -21.875045776367188
    10. '１' → logprob: -22.125045776367188

Token 1143: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '   ' → logprob: -19.75
    4. '```' → logprob: -20.75
    5. '۱' → logprob: -22.1875
    6. '
' → logprob: -22.3125
    7. '１' → logprob: -22.625
    8. '১' → logprob: -22.9375
    9. '१' → logprob: -22.9375
    10. '`' → logprob: -23.75

Token 1144: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12998412549495697
    2. '               ' → logprob: -3.129984140396118
    3. '
                
' → logprob: -3.379984140396118
    4. '                
' → logprob: -3.629984140396118
    5. '  
' → logprob: -5.129983901977539
    6. '<|end|>' → logprob: -5.629983901977539
    7. '                
                
' → logprob: -6.004983901977539
    8. '

' → logprob: -6.379983901977539
    9. '    
' → logprob: -7.004983901977539
    10. '
' → logprob: -7.879983901977539

Token 1145: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12887246906757355
    2. '                
' → logprob: -3.0038723945617676
    3. '
' → logprob: -3.7538723945617676
    4. '        
' → logprob: -4.003872394561768
    5. '    
' → logprob: -4.878872394561768
    6. '       ' → logprob: -5.253872394561768
    7. ' edges' → logprob: -6.253872394561768
    8. '  
' → logprob: -6.253872394561768
    9. 'edges' → logprob: -6.753872394561768
    10. ',' → logprob: -6.753872394561768

Token 1146: ' same' (ID: 2684)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.1661059856414795
    2. 'edges' → logprob: -1.6661059856414795
    3. 'subset' → logprob: -1.9161059856414795
    4. '#' → logprob: -1.9161059856414795
    5. ' edges' → logprob: -3.4161059856414795
    6. 'batch' → logprob: -3.6661059856414795
    7. ' subset' → logprob: -3.6661059856414795
    8. 'group' → logprob: -3.6661059856414795
    9. 'cur' → logprob: -4.291106224060059
    10. ' #' → logprob: -4.541106224060059

Token 1147: '_cost' (ID: 36820)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.034814149141311646
    2. '_cost' → logprob: -3.4098141193389893
    3. '_group' → logprob: -7.534814357757568
    4. '_block' → logprob: -7.784814357757568
    5. '_' → logprob: -9.78481388092041
    6. '_batch' → logprob: -9.90981388092041
    7. '_edge' → logprob: -10.90981388092041
    8. 'cost' → logprob: -11.53481388092041
    9. '_set' → logprob: -11.53481388092041
    10. '_weight' → logprob: -11.53481388092041

Token 1148: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.00023226479243021458
    2. '=' → logprob: -8.750232696533203
    3. ' =' → logprob: -10.000232696533203
    4. '_' → logprob: -11.750232696533203
    5. 'edges' → logprob: -12.000232696533203
    6. '=_' → logprob: -12.000232696533203
    7. '   ' → logprob: -12.625232696533203
    8. 'Edges' → logprob: -13.875232696533203
    9. '_ed' → logprob: -14.000232696533203
    10. '_edge' → logprob: -14.625232696533203

Token 1149: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931484341621399
    2. ' =' → logprob: -0.6931484341621399
    3. '   ' → logprob: -15.068148612976074
    4. 's' → logprob: -15.068148612976074
    5. '_subset' → logprob: -16.068147659301758
    6. ',' → logprob: -16.193147659301758
    7. '=s' → logprob: -16.193147659301758
    8. ' ' → logprob: -16.943147659301758
    9. '=
' → logprob: -17.068147659301758
    10. '=sub' → logprob: -17.193147659301758

Token 1150: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.0004884536610916257
    2. ' edges' → logprob: -7.62548828125
    3. '   ' → logprob: -15.12548828125
    4. '[' → logprob: -16.50048828125
    5. 'edge' → logprob: -17.00048828125
    6. '(edges' → logprob: -17.12548828125
    7. 'Edges' → logprob: -17.37548828125
    8. '.edges' → logprob: -18.00048828125
    9. '       ' → logprob: -18.87548828125
    10. '_edges' → logprob: -19.00048828125

Token 1151: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.098748053773306e-05
    2. '[' → logprob: -10.50006103515625
    3. '                   ' → logprob: -11.87506103515625
    4. 'i' → logprob: -11.87506103515625
    5. '[
' → logprob: -12.25006103515625
    6. '```' → logprob: -12.50006103515625
    7. '[I' → logprob: -12.87506103515625
    8. '               ' → logprob: -13.25006103515625
    9. ' [' → logprob: -13.37506103515625
    10. '   ' → logprob: -13.75006103515625

Token 1152: ':j' (ID: 123557)
  Prédit: ':j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':j' → logprob: -0.00976801197975874
    2. ':' → logprob: -4.634768009185791
    3. '[j' → logprob: -12.50976848602295
    4. 'j' → logprob: -12.50976848602295
    5. ' :' → logprob: -13.25976848602295
    6. '   ' → logprob: -14.00976848602295
    7. '	j' → logprob: -14.13476848602295
    8. ';j' → logprob: -15.38476848602295
    9. '
' → logprob: -15.50976848602295
    10. ']' → logprob: -15.75976848602295

Token 1153: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16111764311790466
    2. ']
' → logprob: -1.911117672920227
    3. '               ' → logprob: -7.4111175537109375
    4. ']
' → logprob: -8.536117553710938
    5. ']

' → logprob: -9.411117553710938
    6. '
' → logprob: -12.286117553710938
    7. '           ' → logprob: -13.286117553710938
    8. ']

' → logprob: -13.536117553710938
    9. ' ]' → logprob: -14.036117553710938
    10. ')' → logprob: -14.661117553710938

Token 1154: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6644578576087952
    2. '
' → logprob: -0.9144578576087952
    3. '                
' → logprob: -2.6644577980041504
    4. '```' → logprob: -5.28945779800415
    5. '  
' → logprob: -5.91445779800415
    6. '        
' → logprob: -6.66445779800415
    7. ' 
' → logprob: -7.16445779800415
    8. '    
' → logprob: -7.16445779800415
    9. '       ' → logprob: -7.16445779800415
    10. '            
' → logprob: -7.41445779800415

Token 1155: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03812549263238907
    2. '                
' → logprob: -4.038125514984131
    3. '#' (adapté à ' #') → logprob: -4.288125514984131
    4. '
' → logprob: -5.913125514984131
    5. 'components' → logprob: -6.788125514984131
    6. 'import' → logprob: -7.663125514984131
    7. 'uf' → logprob: -7.913125514984131
    8. 'from' → logprob: -8.163125038146973
    9. '        
' → logprob: -8.663125038146973
    10. 'mst' → logprob: -9.413125038146973

Token 1156: ' Grap' (ID: 129442)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8289880752563477
    2. 'components' → logprob: -1.9539880752563477
    3. 'uf' → logprob: -2.2039880752563477
    4. 'comp' → logprob: -2.8289880752563477
    5. 'used' → logprob: -3.2039880752563477
    6. 'sub' → logprob: -3.8289880752563477
    7. 'subset' → logprob: -3.8289880752563477
    8. 'sets' → logprob: -4.328988075256348
    9. 'groups' → logprob: -4.328988075256348
    10. 'selected' → logprob: -4.453988075256348

Token 1157: 'he' (ID: 273)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.13539919257164001
    2. 'he' → logprob: -2.260399103164673
    3. 'hé' → logprob: -4.385399341583252
    4. '       ' → logprob: -6.385399341583252
    5. '#' → logprob: -6.635399341583252
    6. 'aphe' → logprob: -6.635399341583252
    7. 'ph' → logprob: -6.760399341583252
    8. 'hs' → logprob: -7.385399341583252
    9. 'phe' → logprob: -7.510399341583252
    10. '           ' → logprob: -7.885399341583252

Token 1158: ' indu' (ID: 34592)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24888749420642853
    2. '               ' → logprob: -3.248887538909912
    3. '_tmp' → logprob: -3.623887538909912
    4. '=' → logprob: -3.998887538909912
    5. 'local' → logprob: -3.998887538909912
    6. '_edges' → logprob: -3.998887538909912
    7. 'tmp' → logprob: -4.248887538909912
    8. '_temp' → logprob: -4.248887538909912
    9. 'temp' → logprob: -4.373887538909912
    10. '_nodes' → logprob: -4.373887538909912

Token 1159: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.05847582593560219
    2. 'ced' → logprob: -3.0584757328033447
    3. 'cé' → logprob: -4.808475971221924
    4. 'ce' → logprob: -6.683475971221924
    5. '
' → logprob: -9.433475494384766
    6. 'cit' → logprob: -9.808475494384766
    7. 'its' → logprob: -10.183475494384766
    8. 'ite' → logprob: -10.433475494384766
    9. 'ct' → logprob: -10.683475494384766
    10. '\
' → logprob: -10.808475494384766

Token 1160: ' par' (ID: 686)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.022648151963949203
    2. ' =' → logprob: -3.8976480960845947
    3. ',' → logprob: -7.272648334503174
    4. '=' → logprob: -7.522648334503174
    5. '                
' → logprob: -8.022647857666016
    6. '                ' → logprob: -8.772647857666016
    7. '                   ' → logprob: -8.897647857666016
    8. ' by' → logprob: -9.772647857666016
    9. ':' → logprob: -10.397647857666016
    10. '           ' → logprob: -10.772647857666016

Token 1161: ' ces' (ID: 10532)
  Prédit: 'same'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'same' → logprob: -0.06243010610342026
    2. 'cost' → logprob: -3.4374301433563232
    3. 'the' → logprob: -5.062429904937744
    4. ' same' → logprob: -5.187429904937744
    5. 'edges' → logprob: -5.812429904937744
    6. 'le' → logprob: -5.812429904937744
    7. '
' → logprob: -6.437429904937744
    8. ' edges' → logprob: -6.562429904937744
    9. 'default' → logprob: -6.812429904937744
    10. 'les' → logprob: -7.312429904937744

Token 1162: ' ar' (ID: 646)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.30402934551239014
    2. ' edges' → logprob: -2.0540294647216797
    3. 'ar' → logprob: -2.3040294647216797
    4. 'same' → logprob: -4.05402946472168
    5. '_edges' → logprob: -5.05402946472168
    6. ' same' → logprob: -5.92902946472168
    7. ' mêmes' → logprob: -6.30402946472168
    8. '(edges' → logprob: -6.30402946472168
    9. ' ar' → logprob: -6.42902946472168
    10. '#' → logprob: -7.92902946472168

Token 1163: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.0008707251981832087
    2. 'etes' → logprob: -8.250870704650879
    3. 'ètes' → logprob: -8.625870704650879
    4. 'tes' → logprob: -8.750870704650879
    5. 'cs' → logprob: -8.750870704650879
    6. 'edges' → logprob: -10.125870704650879
    7. 'ê' → logprob: -11.000870704650879
    8. 'ches' → logprob: -11.125870704650879
    9. 'êts' → logprob: -11.625870704650879
    10. 'c' → logprob: -11.750870704650879

Token 1164: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.13575156033039093
    2. '                
' → logprob: -2.635751485824585
    3. '
' → logprob: -3.760751485824585
    4. ',' → logprob: -4.635751724243164
    5. ':' → logprob: -4.760751724243164
    6. ':
' → logprob: -5.635751724243164
    7. '  
' → logprob: -5.760751724243164
    8. ' edges' → logprob: -6.885751724243164
    9. '
                
' → logprob: -7.135751724243164
    10. ',
' → logprob: -7.260751724243164

Token 1165: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.034304920583963394
    2. '
' → logprob: -3.7843048572540283
    3. '                
' → logprob: -4.659305095672607
    4. '```' → logprob: -7.284305095672607
    5. '  
' → logprob: -9.15930461883545
    6. ',' → logprob: -9.15930461883545
    7. '                
                
' → logprob: -9.15930461883545
    8. '               
' → logprob: -9.53430461883545
    9. '    
' → logprob: -9.78430461883545
    10. '                

' → logprob: -10.15930461883545

Token 1166: ' #' (ID: 1069)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -1.0370718240737915
    2. '               ' → logprob: -1.2870718240737915
    3. 'from' → logprob: -1.7870718240737915
    4. '#' (adapté à ' #') → logprob: -2.537071704864502
    5. 'graph' → logprob: -3.287071704864502
    6. 'import' → logprob: -4.037071704864502
    7. ' nodes' → logprob: -4.537071704864502
    8. 'vertices' → logprob: -4.912071704864502
    9. ' from' → logprob: -5.287071704864502
    10. 'local' → logprob: -5.412071704864502

Token 1167: ' On' (ID: 2160)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4251609742641449
    2. 'nodes' → logprob: -2.3001608848571777
    3. ' nodes' → logprob: -3.1751608848571777
    4. '#' → logprob: -3.3001608848571777
    5. 'from' → logprob: -3.4251608848571777
    6. ' #' → logprob: -3.5501608848571777
    7. ' from' → logprob: -4.175160884857178
    8. '                
' → logprob: -4.550160884857178
    9. ' sub' → logprob: -4.550160884857178
    10. '
' → logprob: -4.675160884857178

Token 1168: ' doit' (ID: 21822)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -1.3643150329589844
    2. 'components' → logprob: -1.6143150329589844
    3. 'from' → logprob: -1.7393150329589844
    4. '#' → logprob: -2.2393150329589844
    5. 'visited' → logprob: -2.2393150329589844
    6. 'comp' → logprob: -3.4893150329589844
    7. 'uf' → logprob: -3.9893150329589844
    8. 'edges' → logprob: -4.114315032958984
    9. '           ' → logprob: -4.364315032958984
    10. 'vertices' → logprob: -4.864315032958984

Token 1169: ' compter' (ID: 81694)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.3273397982120514
    2. '       ' → logprob: -2.7023398876190186
    3. 'com' → logprob: -2.8273398876190186
    4. 'tr' → logprob: -2.9523398876190186
    5. 'count' → logprob: -3.4523398876190186
    6. '   ' → logprob: -3.8273398876190186
    7. ' compter' → logprob: -4.5773396492004395
    8. 'union' → logprob: -5.2023396492004395
    9. 'calcul' → logprob: -5.4523396492004395
    10. '               ' → logprob: -5.5773396492004395

Token 1170: ' les' (ID: 1341)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.714727520942688
    2. ' le' → logprob: -1.214727520942688
    3. 'les' → logprob: -2.2147274017333984
    4. ' les' → logprob: -2.3397274017333984
    5. ',' → logprob: -5.714727401733398
    6. '#' → logprob: -7.214727401733398
    7. '_le' → logprob: -7.714727401733398
    8. ' combien' → logprob: -7.839727401733398
    9. 'comb' → logprob: -7.839727401733398
    10. 'nombre' → logprob: -7.839727401733398

Token 1171: ' MST' (ID: 123058)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.11354958266019821
    2. 'com' → logprob: -3.2385494709014893
    3. 'from' → logprob: -3.8635494709014893
    4. 'man' → logprob: -4.863549709320068
    5. 'comb' → logprob: -5.238549709320068
    6. 'import' → logprob: -5.363549709320068
    7. 'num' → logprob: -5.863549709320068
    8. 'nombre' → logprob: -5.863549709320068
    9. 'choices' → logprob: -6.113549709320068
    10. ' ways' → logprob: -6.113549709320068

Token 1172: ' sur' (ID: 1512)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10291151702404022
    2. ' dans' → logprob: -3.8529114723205566
    3. '                
' → logprob: -3.9779114723205566
    4. '           ' → logprob: -4.852911472320557
    5. '                   ' → logprob: -4.977911472320557
    6. '_count' → logprob: -5.477911472320557
    7. ',' → logprob: -5.602911472320557
    8. ' edges' → logprob: -5.852911472320557
    9. ' =' → logprob: -6.102911472320557
    10. '#' → logprob: -6.102911472320557

Token 1173: ' ces' (ID: 10532)
  Prédit: 'same'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'same' → logprob: -0.7065567374229431
    2. 'ces' → logprob: -1.331556797027588
    3. 'these' → logprob: -2.831556797027588
    4. 'les' → logprob: -2.956556797027588
    5. 'la' → logprob: -3.581556797027588
    6. ' ces' → logprob: -3.581556797027588
    7. 'le' → logprob: -3.581556797027588
    8. 'len' → logprob: -4.581556797027588
    9. 'the' → logprob: -4.956556797027588
    10. ' these' → logprob: -5.081556797027588

Token 1174: ' ar' (ID: 646)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.9300987720489502
    2. ' mêmes' → logprob: -1.0550987720489502
    3. 'edges' → logprob: -2.55509877204895
    4. ' edges' → logprob: -2.80509877204895
    5. ' même' → logprob: -2.93009877204895
    6. ' ar' → logprob: -3.55509877204895
    7. 'same' → logprob: -4.305098533630371
    8. 'are' → logprob: -4.805098533630371
    9. ' same' → logprob: -5.680098533630371
    10. 'm' → logprob: -6.055098533630371

Token 1175: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.01786508783698082
    2. 'cs' → logprob: -4.267865180969238
    3. 'tes' → logprob: -6.767865180969238
    4. 'etes' → logprob: -6.767865180969238
    5. 'ê' → logprob: -7.392865180969238
    6. 'ètes' → logprob: -8.392865180969238
    7. 'ches' → logprob: -9.017865180969238
    8. 'êts' → logprob: -9.642865180969238
    9. 'î' → logprob: -10.142865180969238
    10. '�' → logprob: -10.267865180969238

Token 1176: ' rest' (ID: 2867)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03008749894797802
    2. '                
' → logprob: -4.155087471008301
    3. '
' → logprob: -5.030087471008301
    4. ',' → logprob: -5.780087471008301
    5. '                ' → logprob: -6.780087471008301
    6. '                   ' → logprob: -7.405087471008301
    7. '  
' → logprob: -7.780087471008301
    8. '               
' → logprob: -7.905087471008301
    9. '                    
' → logprob: -8.2800874710083
    10. ' 
' → logprob: -8.6550874710083

Token 1177: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.05600602552294731
    2. 'icted' → logprob: -4.181005954742432
    3. 'raints' → logprob: -4.681005954742432
    4. 'r' → logprob: -4.806005954742432
    5. 'riction' → logprob: -5.806005954742432
    6. '               ' → logprob: -5.931005954742432
    7. 'ict' → logprob: -6.431005954742432
    8. 'es' → logprob: -6.681005954742432
    9. '       ' → logprob: -6.681005954742432
    10. '   ' → logprob: -6.806005954742432

Token 1178: 'ints' (ID: 20448)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.8232191801071167
    2. '               ' → logprob: -2.3232192993164062
    3. 'icted' → logprob: -2.3232192993164062
    4. '       ' → logprob: -2.8232192993164062
    5. 'ict' → logprob: -2.9482192993164062
    6. 'riction' → logprob: -3.5732192993164062
    7. 'ints' → logprob: -3.6982192993164062
    8. 'ring' → logprob: -3.6982192993164062
    9. 'r' → logprob: -3.6982192993164062
    10. 'tr' → logprob: -3.8232192993164062

Token 1179: ' aux' (ID: 5850)
  Prédit: ' aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' aux' → logprob: -0.11976846307516098
    2. '               ' → logprob: -2.6197683811187744
    3. ' à' → logprob: -3.9947683811187744
    4. 'à' → logprob: -5.1197686195373535
    5. 'aux' → logprob: -5.2447686195373535
    6. '                   ' → logprob: -5.7447686195373535
    7. ' au' → logprob: -6.2447686195373535
    8. ',' → logprob: -6.3697686195373535
    9. ' to' → logprob: -6.9947686195373535
    10. '```' → logprob: -7.6197686195373535

Token 1180: ' compos' (ID: 14635)
  Prédit: 'same'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'same' → logprob: -0.07650715857744217
    2. 'vertices' → logprob: -4.451507091522217
    3. 'nodes' → logprob: -4.576507091522217
    4. '{' → logprob: -4.701507091522217
    5. '[u' → logprob: -5.076507091522217
    6. ' same' → logprob: -5.451507091522217
    7. '[' → logprob: -5.576507091522217
    8. 'com' → logprob: -5.701507091522217
    9. '[s' → logprob: -5.951507091522217
    10. 'u' → logprob: -6.076507091522217

Token 1181: 'antes' (ID: 5193)
  Prédit: 'antes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'antes' → logprob: -0.07003946602344513
    2. 'ante' → logprob: -2.8200395107269287
    3. 'pos' → logprob: -6.32003927230835
    4. 'ponent' → logprob: -6.44503927230835
    5. 'p' → logprob: -6.69503927230835
    6. 'pon' → logprob: -6.94503927230835
    7. 'ponents' → logprob: -7.32003927230835
    8. 'ant' → logprob: -8.320039749145508
    9. 'entes' → logprob: -8.570039749145508
    10. '#' → logprob: -8.820039749145508

Token 1182: ' cour' (ID: 2871)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4061763286590576
    2. ',' → logprob: -3.2811763286590576
    3. '                   ' → logprob: -3.2811763286590576
    4. '
' → logprob: -3.4061763286590576
    5. 'local' → logprob: -3.6561763286590576
    6. ' des' → logprob: -3.7811763286590576
    7. ',
' → logprob: -4.156176567077637
    8. ' =' → logprob: -4.281176567077637
    9. '                
' → logprob: -4.406176567077637
    10. '       ' → logprob: -4.531176567077637

Token 1183: 'antes' (ID: 5193)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2859439551830292
    2. 'u' → logprob: -1.6609439849853516
    3. '       ' → logprob: -3.5359439849853516
    4. 'uent' → logprob: -5.160943984985352
    5. 'entes' → logprob: -5.160943984985352
    6. '           ' → logprob: -5.535943984985352
    7. 'ues' → logprob: -5.535943984985352
    8. '```' → logprob: -6.785943984985352
    9. '                   ' → logprob: -7.285943984985352
    10. '[i' → logprob: -7.535943984985352

Token 1184: ' dans' (ID: 2671)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03608405590057373
    2. '
' → logprob: -3.7860841751098633
    3. '                
' → logprob: -4.661084175109863
    4. ',' → logprob: -7.036084175109863
    5. '                ' → logprob: -7.661084175109863
    6. '       ' → logprob: -8.036084175109863
    7. '
' → logprob: -8.161084175109863
    8. '                   ' → logprob: -8.911084175109863
    9. '        
' → logprob: -9.036084175109863
    10. '  
' → logprob: -9.161084175109863

Token 1185: ' uf' (ID: 35772)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.02342342957854271
    2. 'same' → logprob: -4.898423194885254
    3. 'la' → logprob: -5.648423194885254
    4. 'the' → logprob: -6.023423194885254
    5. '   ' → logprob: -6.148423194885254
    6. 'ufs' → logprob: -6.773423194885254
    7. '           ' → logprob: -6.898423194885254
    8. 'union' → logprob: -7.148423194885254
    9. ' uf' → logprob: -7.273423194885254
    10. 'this' → logprob: -7.523423194885254

Token 1186: '_local' (ID: 29253)
  Prédit: '_local'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_local' → logprob: -0.008105400949716568
    2. '               ' → logprob: -4.883105278015137
    3. 'local' → logprob: -8.258105278015137
    4. '                   ' → logprob: -9.883105278015137
    5. '           ' → logprob: -10.008105278015137
    6. '                
' → logprob: -10.258105278015137
    7. '(local' → logprob: -10.758105278015137
    8. '
' → logprob: -11.258105278015137
    9. '_LOCAL' → logprob: -11.383105278015137
    10. 'Local' → logprob: -11.633105278015137

Token 1187: '
                
' (ID: 84151)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3733293116092682
    2. '
' → logprob: -1.6233292818069458
    3. '                
' → logprob: -2.2483294010162354
    4. ',' → logprob: -6.373329162597656
    5. '<|end|>' → logprob: -6.623329162597656
    6. '  
' → logprob: -6.748329162597656
    7. '                
                
' → logprob: -7.373329162597656
    8. '
' → logprob: -7.498329162597656
    9. '
                
' → logprob: -7.748329162597656
    10. '               
' → logprob: -7.873329162597656

Token 1188: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.013262701220810413
    2. '                
' → logprob: -4.513262748718262
    3. '
' → logprob: -7.513262748718262
    4. '  
' → logprob: -7.763262748718262
    5. ' 
' → logprob: -8.638262748718262
    6. ' ' → logprob: -8.638262748718262
    7. '    
' → logprob: -8.763262748718262
    8. '```' → logprob: -8.763262748718262
    9. '       ' → logprob: -9.138262748718262
    10. '        
' → logprob: -9.763262748718262

Token 1189: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09990067034959793
    2. '                
' → logprob: -3.224900722503662
    3. '
' → logprob: -3.349900722503662
    4. '#' (adapté à ' #') → logprob: -4.599900722503662
    5. 'components' → logprob: -5.599900722503662
    6. ' components' → logprob: -6.599900722503662
    7. ' #' → logprob: -6.974900722503662
    8. '  
' → logprob: -7.349900722503662
    9. 'from' → logprob: -7.724900722503662
    10. 'import' → logprob: -7.849900722503662

Token 1190: ' Reg' (ID: 3955)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'components' → logprob: -1.2232003211975098
    2. '               ' → logprob: -1.4732003211975098
    3. '#' → logprob: -1.5982003211975098
    4. 'from' → logprob: -1.9732003211975098
    5. 'comp' → logprob: -3.2232003211975098
    6. 'nodes' → logprob: -3.5982003211975098
    7. 'import' → logprob: -4.09820032119751
    8. 'component' → logprob: -4.34820032119751
    9. 'groups' → logprob: -4.84820032119751
    10. 'uf' → logprob: -5.34820032119751

Token 1191: 'rou' (ID: 691)
  Prédit: 'roup'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'roup' → logprob: -0.152816042304039
    2. 'ions' → logprob: -2.4028160572052
    3. 'rou' → logprob: -4.277815818786621
    4. '               ' → logprob: -4.402815818786621
    5. 'roups' → logprob: -4.652815818786621
    6. 'raph' → logprob: -5.527815818786621
    7. ' =' → logprob: -6.277815818786621
    8. 'arder' → logprob: -6.277815818786621
    9. 'roupe' → logprob: -6.652815818786621
    10. 'def' → logprob: -6.902815818786621

Token 1192: 'per' (ID: 543)
  Prédit: 'oup'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oup' → logprob: -0.12229014188051224
    2. 'per' → logprob: -2.4972901344299316
    3. 'uper' → logprob: -4.997290134429932
    4. '           ' → logprob: -5.122290134429932
    5. 'outer' → logprob: -5.497290134429932
    6. 'oupe' → logprob: -5.747290134429932
    7. '       ' → logprob: -6.122290134429932
    8. 'up' → logprob: -6.247290134429932
    9. '               ' → logprob: -6.372290134429932
    10. 'oper' → logprob: -6.622290134429932

Token 1193: ' les' (ID: 1341)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'par' → logprob: -1.139509677886963
    2. 'by' → logprob: -1.264509677886963
    3. 'components' → logprob: -1.639509677886963
    4. 'same' → logprob: -3.014509677886963
    5. 'edges' → logprob: -3.014509677886963
    6. 'uf' → logprob: -3.389509677886963
    7. 'nodes' → logprob: -4.514509677886963
    8. 'default' → logprob: -4.514509677886963
    9. 'les' → logprob: -5.014509677886963
    10. '=' → logprob: -5.264509677886963

Token 1194: ' somm' (ID: 44830)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.8444433808326721
    2. 'components' → logprob: -1.3444433212280273
    3. 'parent' → logprob: -3.0944433212280273
    4. 'comp' → logprob: -3.3444433212280273
    5. 'same' → logprob: -3.3444433212280273
    6. 'com' → logprob: -3.4694433212280273
    7. 'vertices' → logprob: -3.5944433212280273
    8. 'sets' → logprob: -3.8444433212280273
    9. 'edges' → logprob: -4.344443321228027
    10. 'component' → logprob: -4.344443321228027

Token 1195: 'ets' (ID: 1719)
  Prédit: 'aires'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aires' → logprob: -0.4874595105648041
    2. 'ets' → logprob: -2.487459421157837
    3. 'ites' → logprob: -2.487459421157837
    4. 'etes' → logprob: -3.112459421157837
    5. 'aries' → logprob: -3.487459421157837
    6. 'ar' → logprob: -3.612459421157837
    7. 'edges' → logprob: -3.862459421157837
    8. 'et' → logprob: -3.987459421157837
    9. 'entes' → logprob: -4.362459659576416
    10. 'es' → logprob: -4.612459659576416

Token 1196: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09076185524463654
    2. '               ' → logprob: -2.96576189994812
    3. '=' → logprob: -4.340761661529541
    4. 'by' → logprob: -5.465761661529541
    5. '_by' → logprob: -5.590761661529541
    6. 'par' → logprob: -5.965761661529541
    7. '=set' → logprob: -6.590761661529541
    8. '_in' → logprob: -6.840761661529541
    9. 'vertices' → logprob: -6.965761661529541
    10. '                   ' → logprob: -6.965761661529541

Token 1197: ' ces' (ID: 10532)
  Prédit: 'same'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'same' → logprob: -0.029927050694823265
    2. 'la' → logprob: -4.9049272537231445
    3. 'les' → logprob: -5.1549272537231445
    4. 'l' → logprob: -5.5299272537231445
    5. 'edges' → logprob: -6.6549272537231445
    6. '{' → logprob: -6.6549272537231445
    7. 'union' → logprob: -6.7799272537231445
    8. ' même' → logprob: -6.9049272537231445
    9. '```' → logprob: -7.0299272537231445
    10. 'even' → logprob: -7.1549272537231445

Token 1198: ' ar' (ID: 646)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' edges' → logprob: -1.0251522064208984
    2. 'edges' → logprob: -1.0251522064208984
    3. 'ar' → logprob: -2.4001522064208984
    4. '_edges' → logprob: -2.5251522064208984
    5. 'same' → logprob: -3.6501522064208984
    6. '(edges' → logprob: -4.025152206420898
    7. ' same' → logprob: -4.525152206420898
    8. '_same' → logprob: -4.900152206420898
    9. 'are' → logprob: -5.025152206420898
    10. ' (' → logprob: -5.275152206420898

Token 1199: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.003165360540151596
    2. 'etes' → logprob: -6.628165245056152
    3. 'ètes' → logprob: -6.628165245056152
    4. 'êts' → logprob: -8.628165245056152
    5. 'es' → logprob: -9.253165245056152
    6. 'êtres' → logprob: -10.753165245056152
    7. 'ête' → logprob: -11.003165245056152
    8. '�' → logprob: -11.128165245056152
    9. 'tes' → logprob: -11.128165245056152
    10. 'ées' → logprob: -11.128165245056152

Token 1200: ' qui' (ID: 2780)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.24236921966075897
    2. 'vertices' → logprob: -2.8673691749572754
    3. '                
' → logprob: -3.1173691749572754
    4. 'nodes' → logprob: -3.2423691749572754
    5. ':' → logprob: -3.6173691749572754
    6. ' vertices' → logprob: -3.7423691749572754
    7. ' nodes' → logprob: -5.367369174957275
    8. ' by' → logprob: -6.242369174957275
    9. ' =' → logprob: -6.367369174957275
    10. ':
' → logprob: -6.367369174957275

Token 1201: ' sont' (ID: 5242)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0858619213104248
    2. ' sont' → logprob: -1.8358619213104248
    3. ' are' → logprob: -1.8358619213104248
    4. ' =' → logprob: -1.9608619213104248
    5. 'are' → logprob: -3.460861921310425
    6. 'ont' → logprob: -3.710861921310425
    7. 's' → logprob: -4.085862159729004
    8. '#' → logprob: -4.960862159729004
    9. '               ' → logprob: -4.960862159729004
    10. ':' → logprob: -4.960862159729004

Token 1202: ' dans' (ID: 2671)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dans' → logprob: -0.9718536138534546
    2. 'prés' → logprob: -1.8468536138534546
    3. 'set' → logprob: -2.346853733062744
    4. 'in' → logprob: -2.596853733062744
    5. 'ensemble' → logprob: -2.721853733062744
    6. 'present' → logprob: -2.971853733062744
    7. 'connect' → logprob: -3.971853733062744
    8. 'util' → logprob: -4.096853733062744
    9. 'union' → logprob: -4.346853733062744
    10. 'not' → logprob: -4.471853733062744

Token 1203: ' compos' (ID: 14635)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.5360243320465088
    2. 'same' → logprob: -1.1610243320465088
    3. 'set' → logprob: -2.536024332046509
    4. 'union' → logprob: -5.28602409362793
    5. 'range' → logprob: -6.28602409362793
    6. '{}' → logprob: -6.41102409362793
    7. ' defaultdict' → logprob: -6.41102409362793
    8. '{' → logprob: -6.66102409362793
    9. 'la' → logprob: -6.66102409362793
    10. 'sam' → logprob: -7.03602409362793

Token 1204: 'antes' (ID: 5193)
  Prédit: 'ents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ents' → logprob: -0.8377729058265686
    2. 'ent' → logprob: -1.0877728462219238
    3. '               ' → logprob: -1.9627728462219238
    4. 'ected' → logprob: -3.712772846221924
    5. 'e' → logprob: -3.962772846221924
    6. 'ed' → logprob: -4.462772846221924
    7. 'ections' → logprob: -5.212772846221924
    8. '                   ' → logprob: -5.212772846221924
    9. 'ection' → logprob: -5.462772846221924
    10. 'ect' → logprob: -6.212772846221924

Token 1205: ' différentes' (ID: 41398)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.29863354563713074
    2. '               ' → logprob: -2.048633575439453
    3. 'local' → logprob: -3.923633575439453
    4. ' defaultdict' → logprob: -3.923633575439453
    5. '=' → logprob: -4.298633575439453
    6. 's' → logprob: -4.673633575439453
    7. '                
' → logprob: -5.048633575439453
    8. 'connected' → logprob: -5.048633575439453
    9. '={}' → logprob: -5.048633575439453
    10. ' local' → logprob: -5.423633575439453

Token 1206: ' dans' (ID: 2671)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.18039895594120026
    2. '                
' → logprob: -2.555398941040039
    3. ':' → logprob: -2.805398941040039
    4. ':
' → logprob: -4.805398941040039
    5. ' =' → logprob: -5.430398941040039
    6. ',' → logprob: -5.430398941040039
    7. ' :' → logprob: -6.305398941040039
    8. '```' → logprob: -6.680398941040039
    9. ' :
' → logprob: -7.180398941040039
    10. '
' → logprob: -7.680398941040039

Token 1207: ' uf' (ID: 35772)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.12134980410337448
    2. 'default' → logprob: -2.246349811553955
    3. 'same' → logprob: -5.121349811553955
    4. 'union' → logprob: -7.246349811553955
    5. ' uf' → logprob: -7.621349811553955
    6. 'ufs' → logprob: -7.871349811553955
    7. ' defaultdict' → logprob: -8.246349334716797
    8. 'Union' → logprob: -9.246349334716797
    9. 'UF' → logprob: -9.621349334716797
    10. '{' → logprob: -9.996349334716797

Token 1208: '_local' (ID: 29253)
  Prédit: '_local'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_local' → logprob: -7.398067828034982e-05
    2. 'local' → logprob: -9.75007438659668
    3. '_LOCAL' → logprob: -12.37507438659668
    4. '_' → logprob: -13.00007438659668
    5. 'Local' → logprob: -13.12507438659668
    6. '```' → logprob: -13.87507438659668
    7. '               ' → logprob: -14.25007438659668
    8. '(local' → logprob: -14.37507438659668
    9. '           ' → logprob: -14.87507438659668
    10. '	local' → logprob: -14.87507438659668

Token 1209: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.20345690846443176
    2. '                
' → logprob: -1.8284568786621094
    3. '
' → logprob: -4.703456878662109
    4. ',' → logprob: -5.703456878662109
    5. '  
' → logprob: -5.953456878662109
    6. '```' → logprob: -6.203456878662109
    7. '                
                
' → logprob: -6.828456878662109
    8. '               
' → logprob: -6.953456878662109
    9. ':' → logprob: -7.078456878662109
    10. ' 
' → logprob: -7.328456878662109

Token 1210: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3999468982219696
    2. '                
' → logprob: -1.149946928024292
    3. '
' → logprob: -4.899946689605713
    4. '```' → logprob: -5.774946689605713
    5. '               
' → logprob: -7.274946689605713
    6. '  
' → logprob: -7.899946689605713
    7. '                
                
' → logprob: -8.149947166442871
    8. '                 
' → logprob: -8.399947166442871
    9. '    
' → logprob: -9.149947166442871
    10. '                ' → logprob: -9.274947166442871

Token 1211: ' temp' (ID: 5484)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04787546023726463
    2. 'nodes' → logprob: -4.29787540435791
    3. '                
' → logprob: -4.67287540435791
    4. 'components' → logprob: -4.92287540435791
    5. ' nodes' → logprob: -5.42287540435791
    6. 'vertices' → logprob: -5.67287540435791
    7. ' vertices' → logprob: -6.54787540435791
    8. ' components' → logprob: -6.67287540435791
    9. 'node' → logprob: -7.04787540435791
    10. '
' → logprob: -7.67287540435791

Token 1212: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.7698097825050354
    2. '_' → logprob: -1.1448097229003906
    3. '_vertices' → logprob: -2.2698097229003906
    4. ' =' → logprob: -3.2698097229003906
    5. '_comp' → logprob: -4.019809722900391
    6. '_edges' → logprob: -4.269809722900391
    7. '_graph' → logprob: -4.769809722900391
    8. '_union' → logprob: -4.769809722900391
    9. '_components' → logprob: -5.394809722900391
    10. '_com' → logprob: -5.519809722900391

Token 1213: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.387029230594635
    2. ' =' → logprob: -1.1370291709899902
    3. '=set' → logprob: -9.637029647827148
    4. '_set' → logprob: -10.387029647827148
    5. 's' → logprob: -11.012029647827148
    6. '   ' → logprob: -11.137029647827148
    7. ',' → logprob: -11.762029647827148
    8. ')' → logprob: -12.387029647827148
    9. '_' → logprob: -12.762029647827148
    10. '_map' → logprob: -13.012029647827148

Token 1214: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.17585982382297516
    2. '{}' → logprob: -1.925859808921814
    3. 'default' → logprob: -4.6758599281311035
    4. ' set' → logprob: -5.4258599281311035
    5. '[]' → logprob: -6.9258599281311035
    6. ' defaultdict' → logprob: -7.8008599281311035
    7. '{}
' → logprob: -8.800859451293945
    8. 'dict' → logprob: -9.175859451293945
    9. ' {}' → logprob: -9.425859451293945
    10. ' []' → logprob: -10.175859451293945

Token 1215: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.011847922578454018
    2. '()
' → logprob: -4.636847972869873
    3. '(s' → logprob: -7.511847972869873
    4. '(
' → logprob: -7.761847972869873
    5. '([' → logprob: -8.011847496032715
    6. '(' → logprob: -8.136847496032715
    7. '((' → logprob: -9.011847496032715
    8. '(u' → logprob: -9.261847496032715
    9. '(edge' → logprob: -9.636847496032715
    10. '(edges' → logprob: -9.761847496032715

Token 1216: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06890324503183365
    2. 'for' → logprob: -3.5689032077789307
    3. ' for' → logprob: -3.6939032077789307
    4. ',' → logprob: -5.81890344619751
    5. '                   ' → logprob: -5.81890344619751
    6. '                ' → logprob: -6.31890344619751
    7. '<|end|>' → logprob: -7.19390344619751
    8. ')' → logprob: -7.56890344619751
    9. ' 
' → logprob: -7.69390344619751
    10. '       ' → logprob: -7.81890344619751

Token 1217: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1004457175731659
    2. ' for' → logprob: -2.4754457473754883
    3. '               ' → logprob: -4.475445747375488
    4. '	for' → logprob: -10.850445747375488
    5. '                   ' → logprob: -11.975445747375488
    6. '                
' → logprob: -11.975445747375488
    7. '
' → logprob: -12.475445747375488
    8. 'edges' → logprob: -12.475445747375488
    9. '       ' → logprob: -12.975445747375488
    10. '                ' → logprob: -12.975445747375488

Token 1218: ' _,' (ID: 18042)
  Prédit: '_,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_,' → logprob: -0.49971887469291687
    2. 'cost' → logprob: -1.3747189044952393
    3. 'c' → logprob: -2.3747189044952393
    4. 'e' → logprob: -3.3747189044952393
    5. ' _,' → logprob: -5.24971866607666
    6. 'edge' → logprob: -5.74971866607666
    7. 'ce' → logprob: -6.62471866607666
    8. 'ec' → logprob: -6.74971866607666
    9. '   ' → logprob: -6.99971866607666
    10. ' cost' → logprob: -8.12471866607666

Token 1219: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.37720099091529846
    2. '_,' → logprob: -1.252200961112976
    3. 'cost' → logprob: -4.627201080322266
    4. '_u' → logprob: -4.752201080322266
    5. 'c' → logprob: -5.377201080322266
    6. '__,' → logprob: -6.127201080322266
    7. '_c' → logprob: -7.252201080322266
    8. '__' → logprob: -7.252201080322266
    9. '_' → logprob: -7.502201080322266
    10. '_cost' → logprob: -7.877201080322266

Token 1220: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00801777932792902
    2. ',u' → logprob: -5.5080180168151855
    3. ' ,' → logprob: -6.2580180168151855
    4. ',v' → logprob: -6.3830180168151855
    5. '_,' → logprob: -8.758017539978027
    6. ',user' → logprob: -9.258017539978027
    7. ' in' → logprob: -10.758017539978027
    8. ',_' → logprob: -12.133017539978027
    9. ',w' → logprob: -12.383017539978027
    10. 'u' → logprob: -12.508017539978027

Token 1221: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.3856492842023727e-06
    2. ' v' → logprob: -13.750000953674316
    3. 'u' → logprob: -15.625000953674316
    4. '	v' → logprob: -16.000001907348633
    5. '_v' → logprob: -17.125001907348633
    6. '   ' → logprob: -19.375001907348633
    7. '(v' → logprob: -19.750001907348633
    8. 'vv' → logprob: -19.750001907348633
    9. 'w' → logprob: -20.250001907348633
    10. ')v' → logprob: -20.500001907348633

Token 1222: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.010087055154144764
    2. 'in' → logprob: -4.635087013244629
    3. 'temp' → logprob: -9.510087013244629
    4. ':
' → logprob: -9.760087013244629
    5. '   ' → logprob: -9.760087013244629
    6. '               ' → logprob: -10.510087013244629
    7. '                   ' → logprob: -10.510087013244629
    8. ' ' → logprob: -10.885087013244629
    9. ':' → logprob: -11.135087013244629
    10. '	in' → logprob: -11.260087013244629

Token 1223: ' same' (ID: 2684)
  Prédit: 'same'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'same' → logprob: -0.0037625478580594063
    2. '_' → logprob: -6.503762722015381
    3. ' same' → logprob: -6.628762722015381
    4. '_same' → logprob: -7.378762722015381
    5. 'temp' → logprob: -8.753762245178223
    6. '_,' → logprob: -9.253762245178223
    7. 'edges' → logprob: -11.128762245178223
    8. '(_,' → logprob: -12.003762245178223
    9. 'sam' → logprob: -12.253762245178223
    10. '_
' → logprob: -12.503762245178223

Token 1224: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.01859656162559986
    2. '_' → logprob: -4.768596649169922
    3. '[' → logprob: -5.018596649169922
    4. '_edges' → logprob: -6.643596649169922
    5. '_nodes' → logprob: -7.393596649169922
    6. ',' → logprob: -7.893596649169922
    7. ' _' → logprob: -8.643596649169922
    8. '   ' → logprob: -8.893596649169922
    9. '[u' → logprob: -9.143596649169922
    10. '_COST' → logprob: -9.143596649169922

Token 1225: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.0007594806957058609
    2. 'edges' → logprob: -8.00075912475586
    3. '_nodes' → logprob: -8.25075912475586
    4. '_cost' → logprob: -10.12575912475586
    5. '[u' → logprob: -10.62575912475586
    6. '   ' → logprob: -10.75075912475586
    7. 'u' → logprob: -11.25075912475586
    8. '_' → logprob: -11.50075912475586
    9. 'cost' → logprob: -11.50075912475586
    10. ' edges' → logprob: -12.12575912475586

Token 1226: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5182679891586304
    2. ':' → logprob: -1.5182679891586304
    3. ':
' → logprob: -2.14326810836792
    4. ',' → logprob: -3.39326810836792
    5. '               ' → logprob: -4.01826810836792
    6. '                       ' → logprob: -4.64326810836792
    7. '                           ' → logprob: -7.14326810836792
    8. ' temp' → logprob: -7.39326810836792
    9. '                               ' → logprob: -7.51826810836792
    10. '                ' → logprob: -7.51826810836792

Token 1227: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.002326055895537138
    2. '               ' → logprob: -7.252326011657715
    3. '                ' → logprob: -7.377326011657715
    4. '                       ' → logprob: -8.252326011657715
    5. ' 
' → logprob: -8.377326011657715
    6. '                    ' → logprob: -8.752326011657715
    7. '                  ' → logprob: -9.627326011657715
    8. ' ' → logprob: -9.752326011657715
    9. ' ' → logprob: -9.877326011657715
    10. '                    
' → logprob: -10.002326011657715

Token 1228: ' temp' (ID: 5484)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.8536699414253235
    2. ' temp' → logprob: -1.1036698818206787
    3. 'temp' (adapté à ' temp') → logprob: -1.4786698818206787
    4. '                       ' → logprob: -5.228670120239258
    5. '       ' → logprob: -5.353670120239258
    6. '   ' → logprob: -5.978670120239258
    7. '           ' → logprob: -8.228670120239258
    8. '	               ' → logprob: -8.353670120239258
    9. '	temp' → logprob: -8.603670120239258
    10. '    ' → logprob: -8.853670120239258

Token 1229: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.00015181333583313972
    2. '_tokens' → logprob: -9.125151634216309
    3. '.' → logprob: -11.000151634216309
    4. '.add' → logprob: -11.375151634216309
    5. '._' → logprob: -12.250151634216309
    6. '   ' → logprob: -12.750151634216309
    7. '.append' → logprob: -13.875151634216309
    8. ' .' → logprob: -14.125151634216309
    9. '_users' → logprob: -14.250151634216309
    10. 'nodes' → logprob: -14.375151634216309

Token 1230: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.008721405640244484
    2. '.' → logprob: -4.758721351623535
    3. '.update' → logprob: -9.258721351623535
    4. ' .' → logprob: -12.258721351623535
    5. 'add' → logprob: -12.383721351623535
    6. '
' → logprob: -14.008721351623535
    7. '.
' → logprob: -14.383721351623535
    8. '.union' → logprob: -14.883721351623535
    9. '.dis' → logprob: -15.133721351623535
    10. '   ' → logprob: -15.758721351623535

Token 1231: '(' (ID: 7)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.6177108287811279
    2. 'u' → logprob: -1.242710828781128
    3. '(' → logprob: -2.242710828781128
    4. 'uf' → logprob: -2.742710828781128
    5. ' u' → logprob: -6.617711067199707
    6. ' uf' → logprob: -8.367711067199707
    7. 'ufs' → logprob: -10.617711067199707
    8. ' (' → logprob: -11.492711067199707
    9. '[u' → logprob: -12.117711067199707
    10. '((' → logprob: -12.117711067199707

Token 1232: 'uf' (ID: 1427)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.005225813947618008
    2. 'uf' → logprob: -5.380225658416748
    3. ' u' → logprob: -7.505225658416748
    4. '(u' → logprob: -11.130226135253906
    5. ' uf' → logprob: -11.505226135253906
    6. 'ufs' → logprob: -12.005226135253906
    7. '   ' → logprob: -12.255226135253906
    8. '	u' → logprob: -13.192726135253906
    9. 'v' → logprob: -13.567726135253906
    10. 'ud' → logprob: -13.692726135253906

Token 1233: '_local' (ID: 29253)
  Prédit: '_local'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_local' → logprob: -0.005261749029159546
    2. 'local' → logprob: -5.2552618980407715
    3. '.local' → logprob: -11.630261421203613
    4. '[u' → logprob: -12.755261421203613
    5. 'Local' → logprob: -13.005261421203613
    6. 'u' → logprob: -13.505261421203613
    7. '_LOCAL' → logprob: -13.505261421203613
    8. '_un' → logprob: -13.630261421203613
    9. ' local' → logprob: -13.755261421203613
    10. 'find' → logprob: -13.755261421203613

Token 1234: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.001740508945658803
    2. 'find' → logprob: -6.751740455627441
    3. '.parent' → logprob: -7.876740455627441
    4. '.' → logprob: -9.376740455627441
    5. 'u' → logprob: -10.376740455627441
    6. 'parent' → logprob: -10.876740455627441
    7. ').' → logprob: -11.376740455627441
    8. '(u' → logprob: -11.501740455627441
    9. '.un' → logprob: -11.876740455627441
    10. '.u' → logprob: -12.251740455627441

Token 1235: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.0017143317963927984
    2. 'u' → logprob: -6.37671422958374
    3. ')' → logprob: -12.126714706420898
    4. '(' → logprob: -12.126714706420898
    5. '[u' → logprob: -14.501714706420898
    6. ' u' → logprob: -15.001714706420898
    7. ')(' → logprob: -15.876714706420898
    8. '	u' → logprob: -15.876714706420898
    9. '(v' → logprob: -16.7517147064209
    10. '((' → logprob: -17.3767147064209

Token 1236: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03367140144109726
    2. ')
' → logprob: -3.4086713790893555
    3. ' )' → logprob: -11.158671379089355
    4. ' )
' → logprob: -12.783671379089355
    5. ')
' → logprob: -12.908671379089355
    6. '())' → logprob: -13.533671379089355
    7. '())
' → logprob: -14.158671379089355
    8. ')#' → logprob: -14.283671379089355
    9. '),' → logprob: -14.908671379089355
    10. ')

' → logprob: -14.908671379089355

Token 1237: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9591838717460632
    2. '                   ' → logprob: -1.459183931350708
    3. '                ' → logprob: -2.209183931350708
    4. ')' → logprob: -2.709183931350708
    5. ' ' → logprob: -2.834183931350708
    6. '                    ' → logprob: -3.459183931350708
    7. '<|end|>' → logprob: -3.584183931350708
    8. ',' → logprob: -3.709183931350708
    9. ' ' → logprob: -4.209183692932129
    10. ' )' → logprob: -4.959183692932129

Token 1238: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' (adapté à ' temp') → logprob: -0.7547913193702698
    2. ' temp' → logprob: -1.129791259765625
    3. '                   ' → logprob: -1.629791259765625
    4. ' ' → logprob: -5.879791259765625
    5. '                    ' → logprob: -5.879791259765625
    6. '               ' → logprob: -6.504791259765625
    7. ')' → logprob: -7.129791259765625
    8. ' ' → logprob: -8.004791259765625
    9. '                    
' → logprob: -8.004791259765625
    10. ' for' → logprob: -8.254791259765625

Token 1239: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.003995411563664675
    2. '_tokens' → logprob: -5.753995418548584
    3. '_local' → logprob: -7.753995418548584
    4. '._' → logprob: -8.503994941711426
    5. '   ' → logprob: -10.253994941711426
    6. 'local' → logprob: -10.878994941711426
    7. '```' → logprob: -11.128994941711426
    8. 'nodes' → logprob: -11.753994941711426
    9. 'Nodes' → logprob: -11.753994941711426
    10. '_users' → logprob: -12.003994941711426

Token 1240: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.006072541233152151
    2. '.' → logprob: -5.256072521209717
    3. 'add' → logprob: -7.381072521209717
    4. ' .' → logprob: -9.256072998046875
    5. '.update' → logprob: -10.006072998046875
    6. ',' → logprob: -11.006072998046875
    7. '.union' → logprob: -11.506072998046875
    8. '
' → logprob: -11.631072998046875
    9. '<|end|>' → logprob: -11.631072998046875
    10. '   ' → logprob: -11.881072998046875

Token 1241: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00012356207298580557
    2. 'uf' → logprob: -9.000123977661133
    3. ' uf' → logprob: -17.625123977661133
    4. '(
' → logprob: -17.750123977661133
    5. '(u' → logprob: -17.750123977661133
    6. ' (' → logprob: -17.875123977661133
    7. '((' → logprob: -18.000123977661133
    8. 'uff' → logprob: -18.125123977661133
    9. 'ur' → logprob: -18.375123977661133
    10. 'ufs' → logprob: -19.125123977661133

Token 1242: 'uf' (ID: 1427)
  Prédit: 'uf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -4.723352049040841e-06
    2. ' uf' → logprob: -12.375004768371582
    3. '   ' → logprob: -15.625004768371582
    4. 'ufs' → logprob: -16.625003814697266
    5. 'u' → logprob: -16.875003814697266
    6. 'uff' → logprob: -17.250003814697266
    7. '               ' → logprob: -17.625003814697266
    8. '(' → logprob: -17.750003814697266
    9. '           ' → logprob: -18.250003814697266
    10. 'ufi' → logprob: -18.375003814697266

Token 1243: '_local' (ID: 29253)
  Prédit: '_local'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_local' → logprob: -0.0001249925117008388
    2. 'local' → logprob: -9.00012493133545
    3. '_LOCAL' → logprob: -14.62512493133545
    4. 'v' → logprob: -14.87512493133545
    5. 'Local' → logprob: -15.00012493133545
    6. 'u' → logprob: -15.50012493133545
    7. '_internal' → logprob: -17.125125885009766
    8. '[v' → logprob: -17.500125885009766
    9. '-local' → logprob: -17.625125885009766
    10. '_global' → logprob: -17.750125885009766

Token 1244: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -5.514650183613412e-05
    2. 'find' → logprob: -10.375055313110352
    3. '.' → logprob: -11.625055313110352
    4. '.findall' → logprob: -11.750055313110352
    5. ').' → logprob: -12.500055313110352
    6. ' .' → logprob: -13.875055313110352
    7. ')' → logprob: -13.875055313110352
    8. '   ' → logprob: -14.750055313110352
    9. ')find' → logprob: -15.750055313110352
    10. '.get' → logprob: -15.750055313110352

Token 1245: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.004130168817937374
    2. 'v' → logprob: -5.5041303634643555
    3. '(u' → logprob: -10.879130363464355
    4. '[v' → logprob: -11.254130363464355
    5. '(' → logprob: -12.004130363464355
    6. ')' → logprob: -12.379130363464355
    7. '
' → logprob: -12.754130363464355
    8. ')v' → logprob: -13.879130363464355
    9. ' v' → logprob: -14.004130363464355
    10. '(
' → logprob: -14.379130363464355

Token 1246: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.5716304410016164e-05
    2. ')
' → logprob: -10.750035285949707
    3. '                   ' → logprob: -11.500035285949707
    4. '               ' → logprob: -13.000035285949707
    5. '')' → logprob: -14.125035285949707
    6. ' )' → logprob: -15.375035285949707
    7. '<|end|>' → logprob: -15.500035285949707
    8. ')\
' → logprob: -16.250036239624023
    9. '`)' → logprob: -16.500036239624023
    10. '),' → logprob: -16.750036239624023

Token 1247: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00875838939100504
    2. '                   ' → logprob: -5.633758544921875
    3. ')' → logprob: -6.383758544921875
    4. '```' → logprob: -7.383758544921875
    5. '                ' → logprob: -7.508758544921875
    6. '       ' → logprob: -7.508758544921875
    7. ',' → logprob: -7.883758544921875
    8. '                
' → logprob: -8.133758544921875
    9. '           ' → logprob: -8.258758544921875
    10. '\' → logprob: -9.258758544921875

Token 1248: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5353150963783264
    2. '
' → logprob: -1.9103150367736816
    3. '                
' → logprob: -2.2853150367736816
    4. ' 
' → logprob: -2.6603150367736816
    5. '  
' → logprob: -2.7853150367736816
    6. '    
' → logprob: -5.285315036773682
    7. '\n' → logprob: -5.410315036773682
    8. '\' → logprob: -5.910315036773682
    9. '                 
' → logprob: -6.160315036773682
    10. '                ' → logprob: -6.160315036773682

Token 1249: ' On' (ID: 2160)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8455857634544373
    2. 'temp' → logprob: -1.595585823059082
    3. 'nodes' → logprob: -1.595585823059082
    4. 'node' → logprob: -3.220585823059082
    5. '#' → logprob: -3.595585823059082
    6. 'tmp' → logprob: -4.095585823059082
    7. 'components' → logprob: -4.345585823059082
    8. 'sub' → logprob: -4.845585823059082
    9. ' nodes' → logprob: -4.845585823059082
    10. 'ids' → logprob: -4.970585823059082

Token 1250: ' ne' (ID: 453)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.8250544667243958
    2. '=' → logprob: -1.700054407119751
    3. ' =' → logprob: -2.075054407119751
    4. '#' → logprob: -3.075054407119751
    5. 'nodes' → logprob: -3.325054407119751
    6. 'list' → logprob: -3.700054407119751
    7. '_nodes' → logprob: -4.20005464553833
    8. '               ' → logprob: -4.20005464553833
    9. 'mapping' → logprob: -4.45005464553833
    10. 'tmp' → logprob: -4.57505464553833

Token 1251: ' travaille' (ID: 92596)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.16988280415534973
    2. 'temp' → logprob: -2.7948827743530273
    3. 'contin' → logprob: -3.4198827743530273
    4. 'if' → logprob: -4.419882774353027
    5. '=' → logprob: -4.544882774353027
    6. '#' → logprob: -4.919882774353027
    7. ' continue' → logprob: -5.669882774353027
    8. 'tmp' → logprob: -5.919882774353027
    9. '           ' → logprob: -6.044882774353027
    10. 'remove' → logprob: -6.544882774353027

Token 1252: ' que' (ID: 661)
  Prédit: 'qu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qu' → logprob: -1.1592618227005005
    2. 'que' → logprob: -1.1592618227005005
    3. 'pas' → logprob: -1.4092618227005005
    4. ' qu' → logprob: -2.534261703491211
    5. ' que' → logprob: -3.534261703491211
    6. '               ' → logprob: -5.034261703491211
    7. '           ' → logprob: -5.284261703491211
    8. ' pas' → logprob: -5.409261703491211
    9. 'plus' → logprob: -6.534261703491211
    10. 'sur' → logprob: -7.409261703491211

Token 1253: ' sur' (ID: 1512)
  Prédit: 'sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sur' → logprob: -0.082195945084095
    2. 'avec' → logprob: -2.832195997238159
    3. ' sur' → logprob: -4.08219575881958
    4. ' avec' → logprob: -6.45719575881958
    5. 'que' → logprob: -7.45719575881958
    6. 'qu' → logprob: -7.83219575881958
    7. 'dans' → logprob: -8.707196235656738
    8. 'with' → logprob: -9.082196235656738
    9. 'à' → logprob: -9.957196235656738
    10. ' with' → logprob: -10.207196235656738

Token 1254: ' le' (ID: 505)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.05732820928096771
    2. 'list' → logprob: -3.307328224182129
    3. 'la' → logprob: -4.557328224182129
    4. 'les' → logprob: -5.182328224182129
    5. 'le' → logprob: -6.932328224182129
    6. ' temp' → logprob: -8.182328224182129
    7. 'tmp' → logprob: -8.307328224182129
    8. 'the' → logprob: -8.307328224182129
    9. 'liste' → logprob: -8.682328224182129
    10. 'len' → logprob: -8.807328224182129

Token 1255: ' grap' (ID: 60955)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.11446166783571243
    2. ' temp' → logprob: -2.989461660385132
    3. 'subset' → logprob: -4.114461898803711
    4. 'sub' → logprob: -4.489461898803711
    5. ' subset' → logprob: -4.739461898803711
    6. 'list' → logprob: -4.864461898803711
    7. ' list' → logprob: -5.614461898803711
    8. 'nodes' → logprob: -5.864461898803711
    9. ' sub' → logprob: -6.239461898803711
    10. 'len' → logprob: -7.364461898803711

Token 1256: 'he' (ID: 273)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.6554368734359741
    2. 'he' → logprob: -0.7804368734359741
    3. 'aphe' → logprob: -4.280436992645264
    4. 'phe' → logprob: -5.280436992645264
    5. 'hé' → logprob: -6.280436992645264
    6. 'ph' → logprob: -7.155436992645264
    7. 'raph' → logprob: -7.780436992645264
    8. 'heme' → logprob: -9.530436515808105
    9. 'hap' → logprob: -9.655436515808105
    10. '<h' → logprob: -9.780436515808105

Token 1257: ' indu' (ID: 34592)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.03821338713169098
    2. 'temp' → logprob: -4.28821325302124
    3. 'form' → logprob: -5.16321325302124
    4. ' induced' → logprob: -5.53821325302124
    5. 'des' → logprob: -5.53821325302124
    6. ' des' → logprob: -6.28821325302124
    7. ' indu' → logprob: -6.41321325302124
    8. 'rest' → logprob: -6.53821325302124
    9. 'indu' → logprob: -6.66321325302124
    10. '[ind' → logprob: -7.66321325302124

Token 1258: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.04213324934244156
    2. 'uit' → logprob: -4.292133331298828
    3. 'zit' → logprob: -4.792133331298828
    4. 'cé' → logprob: -5.917133331298828
    5. 'ent' → logprob: -6.167133331298828
    6. 'ite' → logprob: -6.167133331298828
    7. 'int' → logprob: -6.167133331298828
    8. 'vit' → logprob: -6.417133331298828
    9. 'duit' → logprob: -6.667133331298828
    10. 'i' → logprob: -6.917133331298828

Token 1259: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.12468300759792328
    2. '               ' → logprob: -2.749682903289795
    3. 'par' → logprob: -3.499682903289795
    4. ',' → logprob: -4.624682903289795
    5. '.' → logprob: -5.124682903289795
    6. ' by' → logprob: -6.249682903289795
    7. ' =' → logprob: -6.874682903289795
    8. ' des' → logprob: -6.999682903289795
    9. '_par' → logprob: -7.749682903289795
    10. 'by' → logprob: -7.874682903289795

Token 1260: ' ces' (ID: 10532)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.0012585645308718085
    2. 'same' → logprob: -7.126258373260498
    3. 'les' → logprob: -8.876258850097656
    4. ' temp' → logprob: -8.876258850097656
    5. 'list' → logprob: -9.751258850097656
    6. 'ces' → logprob: -10.376258850097656
    7. 'tmp' → logprob: -11.126258850097656
    8. 'these' → logprob: -11.126258850097656
    9. 'la' → logprob: -11.501258850097656
    10. 'temps' → logprob: -11.876258850097656

Token 1261: ' rac' (ID: 12334)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.16870073974132538
    2. '_nodes' → logprob: -2.043700695037842
    3. 'nodes' → logprob: -4.293700695037842
    4. ' temp' → logprob: -5.293700695037842
    5. '_temp' → logprob: -5.793700695037842
    6. '_' → logprob: -6.168700695037842
    7. '_no' → logprob: -8.418701171875
    8. 'n' → logprob: -8.543701171875
    9. '```' → logprob: -8.543701171875
    10. '_n' → logprob: -9.168701171875

Token 1262: 'ines' (ID: 2028)
  Prédit: 'ces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ces' → logprob: -0.5395088195800781
    2. '```' → logprob: -2.289508819580078
    3. '``' → logprob: -2.789508819580078
    4. 'ines' → logprob: -3.039508819580078
    5. 'tes' → logprob: -3.539508819580078
    6. 'zes' → logprob: -3.914508819580078
    7. 'pts' → logprob: -4.414508819580078
    8. ')' → logprob: -4.664508819580078
    9. 'ts' → logprob: -4.664508819580078
    10. '}' → logprob: -4.664508819580078

Token 1263: ' dans' (ID: 2671)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06895565986633301
    2. ',' → logprob: -3.818955659866333
    3. '
' → logprob: -3.943955659866333
    4. '                
' → logprob: -4.568955421447754
    5. '.' → logprob: -5.318955421447754
    6. ',
' → logprob: -6.443955421447754
    7. ':' → logprob: -6.443955421447754
    8. '                ' → logprob: -6.568955421447754
    9. ':
' → logprob: -7.068955421447754
    10. ' 
' → logprob: -7.318955421447754

Token 1264: ' uf' (ID: 35772)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.00037490393151529133
    2. 'uf' → logprob: -8.000374794006348
    3. ' temp' → logprob: -10.750374794006348
    4. '
' → logprob: -12.375374794006348
    5. 'tmp' → logprob: -12.375374794006348
    6. 'ufs' → logprob: -13.000374794006348
    7. '```' → logprob: -13.500374794006348
    8. 'temps' → logprob: -14.375374794006348
    9. 'set' → logprob: -14.375374794006348
    10. '   ' → logprob: -14.750374794006348

Token 1265: '_local' (ID: 29253)
  Prédit: '_local'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_local' → logprob: -0.00043805985478684306
    2. 'local' → logprob: -7.750438213348389
    3. '_temp' → logprob: -13.12543773651123
    4. '_' → logprob: -13.12543773651123
    5. '_LOCAL' → logprob: -13.62543773651123
    6. 'Local' → logprob: -14.62543773651123
    7. 'temp' → logprob: -14.75043773651123
    8. '_nodes' → logprob: -14.75043773651123
    9. ' local' → logprob: -15.75043773651123
    10. 'ocal' → logprob: -15.87543773651123

Token 1266: '
                
' (ID: 84151)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04729996249079704
    2. '                
' → logprob: -3.672299861907959
    3. '
' → logprob: -4.297299861907959
    4. ',' → logprob: -5.922299861907959
    5. '  
' → logprob: -7.297299861907959
    6. '                ' → logprob: -7.422299861907959
    7. ')' → logprob: -8.172300338745117
    8. '    
' → logprob: -8.172300338745117
    9. ' 
' → logprob: -8.297300338745117
    10. '               
' → logprob: -8.547300338745117

Token 1267: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08892638236284256
    2. '                
' → logprob: -2.713926315307617
    3. ' 
' → logprob: -4.838926315307617
    4. '  
' → logprob: -5.338926315307617
    5. '
' → logprob: -6.088926315307617
    6. '                ' → logprob: -7.338926315307617
    7. '    
' → logprob: -7.963926315307617
    8. ' ' → logprob: -7.963926315307617
    9. '                
                
' → logprob: -8.088926315307617
    10. ',' → logprob: -8.338926315307617

Token 1268: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.20865991711616516
    2. '                
' → logprob: -1.9586598873138428
    3. ' 
' → logprob: -4.458660125732422
    4. '  
' → logprob: -4.833660125732422
    5. '
' → logprob: -5.208660125732422
    6. '#' (adapté à ' #') → logprob: -5.583660125732422
    7. '    
' → logprob: -5.708660125732422
    8. 'graph' → logprob: -7.208660125732422
    9. 'components' → logprob: -7.208660125732422
    10. '               
' → logprob: -7.333660125732422

Token 1269: ' Map' (ID: 7343)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07130073010921478
    2. '                
' → logprob: -3.321300745010376
    3. '#' → logprob: -4.946300506591797
    4. '
' → logprob: -5.071300506591797
    5. 'import' → logprob: -5.446300506591797
    6. 'from' → logprob: -5.821300506591797
    7. 'nodes' → logprob: -5.821300506591797
    8. ' #' → logprob: -6.821300506591797
    9. 'components' → logprob: -6.821300506591797
    10. ' nodes' → logprob: -7.071300506591797

Token 1270: ' des' (ID: 731)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'root' → logprob: -1.2748756408691406
    2. 'ping' → logprob: -1.3998756408691406
    3. 'temp' → logprob: -1.5248756408691406
    4. 'roots' → logprob: -2.5248756408691406
    5. '_temp' → logprob: -2.6498756408691406
    6. '_root' → logprob: -3.2748756408691406
    7. ' =' → logprob: -4.149875640869141
    8. 'tmp' → logprob: -5.024875640869141
    9. '_nodes' → logprob: -5.024875640869141
    10. 'p' → logprob: -5.149875640869141

Token 1271: ' anciens' (ID: 105125)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.5266810059547424
    2. 'old' → logprob: -1.5266809463500977
    3. 'node' → logprob: -2.2766809463500977
    4. 'temp' → logprob: -3.5266809463500977
    5. 'roots' → logprob: -4.026680946350098
    6. 'comp' → logprob: -4.401680946350098
    7. 'nodes' → logprob: -4.776680946350098
    8. 'id' → logprob: -4.901680946350098
    9. 'rac' → logprob: -4.901680946350098
    10. 'r' → logprob: -6.401680946350098

Token 1272: ' somm' (ID: 44830)
  Prédit: 'roots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'roots' → logprob: -0.47065550088882446
    2. 'nodes' → logprob: -1.3456554412841797
    3. 'root' → logprob: -3.7206554412841797
    4. ' rac' → logprob: -3.8456554412841797
    5. ' nodes' → logprob: -4.09565544128418
    6. 'rac' → logprob: -4.34565544128418
    7. ' roots' → logprob: -4.47065544128418
    8. 'r' → logprob: -5.47065544128418
    9. 'node' → logprob: -5.72065544128418
    10. 'id' → logprob: -5.84565544128418

Token 1273: 'ets' (ID: 1719)
  Prédit: '_nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.5729506015777588
    2. 'roots' → logprob: -1.6979506015777588
    3. '               ' → logprob: -2.822950601577759
    4. 'nodes' → logprob: -3.572950601577759
    5. 'ette' → logprob: -3.947950601577759
    6. 'root' → logprob: -3.947950601577759
    7. '{' → logprob: -4.07295036315918
    8. 'ett' → logprob: -4.32295036315918
    9. 'ettes' → logprob: -4.44795036315918
    10. 'aires' → logprob: -4.69795036315918

Token 1274: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8336799144744873
    2. ' =' → logprob: -0.8336799144744873
    3. '               ' → logprob: -3.2086799144744873
    4. 'root' → logprob: -3.8336799144744873
    5. 'temp' → logprob: -3.8336799144744873
    6. 'old' → logprob: -4.083680152893066
    7. 'to' → logprob: -4.833680152893066
    8. '_old' → logprob: -5.833680152893066
    9. 'tmp' → logprob: -6.083680152893066
    10. '_to' → logprob: -6.083680152893066

Token 1275: ' ' (ID: 220)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.7780181765556335
    2. '{' → logprob: -1.4030182361602783
    3. 'list' → logprob: -1.9030182361602783
    4. 'index' → logprob: -3.0280182361602783
    5. 'temp' → logprob: -4.528017997741699
    6. 'range' → logprob: -4.653017997741699
    7. 'new' → logprob: -4.778017997741699
    8. 'enumer' → logprob: -4.778017997741699
    9. 'indexes' → logprob: -5.028017997741699
    10. 'local' → logprob: -5.028017997741699

Token 1276: '0' (ID: 15)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.5038623809814453
    2. 'indices' → logprob: -2.0038623809814453
    3. '{}' → logprob: -2.5038623809814453
    4. 'list' → logprob: -2.8788623809814453
    5. 'dict' → logprob: -3.0038623809814453
    6. 'range' → logprob: -3.1288623809814453
    7. 'index' → logprob: -4.878862380981445
    8. 'enumer' → logprob: -4.878862380981445
    9. 'idx' → logprob: -6.378862380981445
    10. 'temp' → logprob: -6.503862380981445

Token 1277: '..' (ID: 485)
  Prédit: 'based'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'based' → logprob: -0.24071666598320007
    2. '-based' → logprob: -1.9907166957855225
    3. '_based' → logprob: -3.3657166957855225
    4. ',' → logprob: -3.8657166957855225
    5. ':' → logprob: -4.865716457366943
    6. 'indexed' → logprob: -6.240716457366943
    7. ' ,' → logprob: -6.615716457366943
    8. '
' → logprob: -6.740716457366943
    9. '...' → logprob: -6.740716457366943
    10. ' :' → logprob: -6.865716457366943

Token 1278: 'k' (ID: 74)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.009229680523276329
    2. 'temp' → logprob: -6.25922966003418
    3. '(len' → logprob: -6.38422966003418
    4. 'k' → logprob: -6.75922966003418
    5. 'cnt' → logprob: -6.88422966003418
    6. 'tmp' → logprob: -7.00922966003418
    7. 'num' → logprob: -7.13422966003418
    8. 'n' → logprob: -7.38422966003418
    9. 'cur' → logprob: -8.75922966003418
    10. 'curr' → logprob: -8.88422966003418

Token 1279: '-' (ID: 12)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -1.0725058317184448
    2. '{
' → logprob: -1.0725058317184448
    3. ' =' → logprob: -1.8225058317184448
    4. '=' → logprob: -2.9475059509277344
    5. '_to' → logprob: -3.4475059509277344
    6. '={' → logprob: -4.572505950927734
    7. '_' → logprob: -4.822505950927734
    8. '={
' → logprob: -5.197505950927734
    9. '_ids' → logprob: -5.197505950927734
    10. ':
' → logprob: -5.572505950927734

Token 1280: '1' (ID: 16)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.4512215256690979
    2. '1' → logprob: -1.7012214660644531
    3. '(len' → logprob: -3.076221466064453
    4. 'temp' → logprob: -3.076221466064453
    5. 'based' → logprob: -3.576221466064453
    6. 'n' → logprob: -3.826221466064453
    7. '-' → logprob: -4.201221466064453
    8. '{' → logprob: -5.701221466064453
    9. '(temp' → logprob: -6.076221466064453
    10. '_' → logprob: -6.201221466064453

Token 1281: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2909550964832306
    2. '=' → logprob: -1.6659550666809082
    3. '               ' → logprob: -3.040955066680908
    4. 'temp' → logprob: -4.790955066680908
    5. ':' → logprob: -6.040955066680908
    6. 'tmp' → logprob: -6.915955066680908
    7. ' temp' → logprob: -7.540955066680908
    8. '=
' → logprob: -7.790955066680908
    9. ' =
' → logprob: -8.165955543518066
    10. ',' → logprob: -8.290955543518066

Token 1282: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03823794797062874
    2. '{
' → logprob: -4.163238048553467
    3. 'temp' → logprob: -5.413238048553467
    4. 'nodes' → logprob: -5.663238048553467
    5. '{' → logprob: -5.788238048553467
    6. '                
' → logprob: -6.413238048553467
    7. ' nodes' → logprob: -6.538238048553467
    8. ' {' → logprob: -6.663238048553467
    9. 'mapping' → logprob: -7.038238048553467
    10. 'node' → logprob: -7.163238048553467

Token 1283: ' roots' (ID: 29895)
  Prédit: 'mapping'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mapping' → logprob: -0.623981773853302
    2. 'temp' → logprob: -1.6239817142486572
    3. 'tmp' → logprob: -2.7489817142486572
    4. 'node' → logprob: -2.7489817142486572
    5. 'map' → logprob: -3.1239817142486572
    6. 'comp' → logprob: -3.8739817142486572
    7. 'mapper' → logprob: -3.8739817142486572
    8. 'idx' → logprob: -4.248981952667236
    9. 'mp' → logprob: -4.748981952667236
    10. 'index' → logprob: -4.873981952667236

Token 1284: '_list' (ID: 4162)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029753033071756363
    2. ' =' → logprob: -3.5297529697418213
    3. '={}' → logprob: -14.029752731323242
    4. '={' → logprob: -14.529752731323242
    5. '={}
' → logprob: -15.529752731323242
    6. '[root' → logprob: -15.779752731323242
    7. '=
' → logprob: -15.904752731323242
    8. '   ' → logprob: -16.029752731323242
    9. '_map' → logprob: -16.529752731323242
    10. '=dict' → logprob: -16.654752731323242

Token 1285: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0009126556105911732
    2. ' =' → logprob: -7.000912666320801
    3. '=list' → logprob: -13.8759126663208
    4. '   ' → logprob: -16.000911712646484
    5. '=
' → logprob: -17.125911712646484
    6. '＝' → logprob: -17.500911712646484
    7. ',' → logprob: -17.750911712646484
    8. '=[' → logprob: -18.250911712646484
    9. '=

' → logprob: -18.750911712646484
    10. '	' → logprob: -18.875911712646484

Token 1286: ' sorted' (ID: 20099)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.48724350333213806
    2. '{' → logprob: -0.9872435331344604
    3. '{}' → logprob: -4.48724365234375
    4. 'dict' → logprob: -6.61224365234375
    5. '{}
' → logprob: -8.36224365234375
    6. 'sorted' → logprob: -9.11224365234375
    7. '[list' → logprob: -9.23724365234375
    8. ' list' → logprob: -10.73724365234375
    9. ' {' → logprob: -12.23724365234375
    10. '[' → logprob: -12.36224365234375

Token 1287: '(temp' (ID: 19094)
  Prédit: '(list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.21697954833507538
    2. '(temp' → logprob: -1.8419795036315918
    3. 'temp' → logprob: -3.841979503631592
    4. 'list' → logprob: -4.216979503631592
    5. '(' → logprob: -9.09197998046875
    6. '(set' → logprob: -9.34197998046875
    7. '[temp' → logprob: -10.46697998046875
    8. '([' → logprob: -10.96697998046875
    9. '(root' → logprob: -10.96697998046875
    10. '{' → logprob: -10.96697998046875

Token 1288: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.00015669701679144055
    2. '(list' → logprob: -9.50015640258789
    3. '_list' → logprob: -10.12515640258789
    4. '_tokens' → logprob: -11.37515640258789
    5. '(
' → logprob: -11.62515640258789
    6. '(' → logprob: -12.37515640258789
    7. 'nodes' → logprob: -12.62515640258789
    8. 'Nodes' → logprob: -12.87515640258789
    9. '(nodes' → logprob: -13.12515640258789
    10. '(_' → logprob: -13.37515640258789

Token 1289: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.09875902533531189
    2. ')' → logprob: -2.4737589359283447
    3. '               ' → logprob: -4.848759174346924
    4. ',' → logprob: -7.223759174346924
    5. '
' → logprob: -8.223758697509766
    6. '                   ' → logprob: -8.598758697509766
    7. '{
' → logprob: -9.098758697509766
    8. ',
' → logprob: -9.098758697509766
    9. '}
' → logprob: -9.348758697509766
    10. '```' → logprob: -9.348758697509766

Token 1290: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.1621639728546143
    2. 'roots' → logprob: -1.6621639728546143
    3. '```' → logprob: -2.1621639728546143
    4. 'mapping' → logprob: -2.2871639728546143
    5. 'map' → logprob: -2.7871639728546143
    6. 'root' → logprob: -3.0371639728546143
    7. ' roots' → logprob: -3.0371639728546143
    8. 'mapper' → logprob: -3.7871639728546143
    9. 'token' → logprob: -3.7871639728546143
    10. '_map' → logprob: -4.662163734436035

Token 1291: ' root' (ID: 6577)
  Prédit: 'mapping'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mapping' → logprob: -0.2900475561618805
    2. 'map' → logprob: -2.4150476455688477
    3. 'root' (adapté à ' root') → logprob: -2.4150476455688477
    4. 'idx' → logprob: -4.165047645568848
    5. 'mapper' → logprob: -4.290047645568848
    6. 'roots' → logprob: -4.540047645568848
    7. 'node' → logprob: -4.665047645568848
    8. 'index' → logprob: -5.165047645568848
    9. ' mapping' → logprob: -5.290047645568848
    10. 'tmp' → logprob: -6.290047645568848

Token 1292: '_idx' (ID: 15257)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.19307030737400055
    2. '_map' → logprob: -1.8180702924728394
    3. '_index' → logprob: -5.193070411682129
    4. '_id' → logprob: -5.943070411682129
    5. 'to' → logprob: -6.443070411682129
    6. '_mapping' → logprob: -6.568070411682129
    7. '_idx' → logprob: -7.068070411682129
    8. '_indices' → logprob: -7.943070411682129
    9. '2' → logprob: -8.068070411682129
    10. '_pos' → logprob: -8.318070411682129

Token 1293: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008739731274545193
    2. ' =' → logprob: -4.758739948272705
    3. '[' → logprob: -9.383739471435547
    4. '[root' → logprob: -11.008739471435547
    5. 's' → logprob: -11.633739471435547
    6. '{' → logprob: -11.883739471435547
    7. '=
' → logprob: -13.008739471435547
    8. '   ' → logprob: -13.633739471435547
    9. '={' → logprob: -13.883739471435547
    10. '={
' → logprob: -14.133739471435547

Token 1294: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.004634353332221508
    2. '{}
' → logprob: -5.504634380340576
    3. '{}' → logprob: -7.504634380340576
    4. 'dict' → logprob: -12.504633903503418
    5. '{}

' → logprob: -14.504633903503418
    6. ' {' → logprob: -14.629633903503418
    7. '{id' → logprob: -15.254633903503418
    8. '{-' → logprob: -16.504634857177734
    9. '{i' → logprob: -16.629634857177734
    10. '{k' → logprob: -17.129634857177734

Token 1295: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.10273297131061554
    2. 'root' → logprob: -2.3527328968048096
    3. 'x' → logprob: -6.102733135223389
    4. 'node' → logprob: -9.10273265838623
    5. 'v' → logprob: -9.35273265838623
    6. 'rt' → logprob: -10.10273265838623
    7. 'rk' → logprob: -11.60273265838623
    8. ' r' → logprob: -11.72773265838623
    9. 'roots' → logprob: -11.97773265838623
    10. 'rid' → logprob: -12.22773265838623

Token 1296: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0924312099814415
    2. ':r' → logprob: -2.4674313068389893
    3. 'r' → logprob: -6.46743106842041
    4. ' :' → logprob: -7.46743106842041
    5. 'root' → logprob: -7.46743106842041
    6. '[root' → logprob: -7.59243106842041
    7. ':i' → logprob: -9.34243106842041
    8. '   ' → logprob: -10.21743106842041
    9. 'roots' → logprob: -10.21743106842041
    10. '[r' → logprob: -10.46743106842041

Token 1297: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.3578190505504608
    2. 'i' → logprob: -1.2328190803527832
    3. 'k' → logprob: -4.982819080352783
    4. ' idx' → logprob: -6.607819080352783
    5. 'r' → logprob: -7.857819080352783
    6. 'index' → logprob: -7.857819080352783
    7. 'x' → logprob: -8.982818603515625
    8. ' i' → logprob: -9.857818603515625
    9. 'v' → logprob: -10.482818603515625
    10. 'len' → logprob: -10.482818603515625

Token 1298: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6692376136779785
    2. ' for' → logprob: -0.7942376136779785
    3. ':' → logprob: -3.4192376136779785
    4. '   ' → logprob: -7.0442376136779785
    5. '               ' → logprob: -7.2942376136779785
    6. '           ' → logprob: -7.6692376136779785
    7. '       ' → logprob: -7.7942376136779785
    8. ':i' → logprob: -8.04423713684082
    9. '                   ' → logprob: -9.04423713684082
    10. ' :' → logprob: -9.54423713684082

Token 1299: ' idx' (ID: 14016)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.2822980582714081
    2. 'idx' → logprob: -1.4072980880737305
    3. ' idx' → logprob: -6.9072980880737305
    4. 'root' → logprob: -9.78229808807373
    5. ' r' → logprob: -9.78229808807373
    6. '	idx' → logprob: -11.28229808807373
    7. '(idx' → logprob: -12.03229808807373
    8. '_' → logprob: -12.53229808807373
    9. '
' → logprob: -12.90729808807373
    10. '(' → logprob: -13.65729808807373

Token 1300: ',' (ID: 11)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.012286413460969925
    2. 'in' → logprob: -5.137286186218262
    3. 'idx' → logprob: -5.387286186218262
    4. ' in' → logprob: -6.637286186218262
    5. ' r' → logprob: -8.512286186218262
    6. 'root' → logprob: -9.137286186218262
    7. ' idx' → logprob: -9.262286186218262
    8. ',' → logprob: -11.137286186218262
    9. '   ' → logprob: -12.137286186218262
    10. '
' → logprob: -12.387286186218262

Token 1301: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.9361264946837764e-07
    2. ' r' → logprob: -16.0
    3. '
' → logprob: -18.125
    4. '(r' → logprob: -18.375
    5. '(' → logprob: -18.5
    6. '_r' → logprob: -19.25
    7. 'in' → logprob: -19.875
    8. '```' → logprob: -20.375
    9. '	r' → logprob: -21.0
    10. 'root' → logprob: -21.125

Token 1302: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3868766129016876
    2. ' in' → logprob: -1.1368765830993652
    3. ' ' → logprob: -13.761877059936523
    4. ',' → logprob: -14.011877059936523
    5. '
' → logprob: -14.386877059936523
    6. 'In' → logprob: -14.511877059936523
    7. 'n' → logprob: -14.511877059936523
    8. ' 
' → logprob: -14.886877059936523
    9. 'r' → logprob: -15.011877059936523
    10. 'import' → logprob: -15.636877059936523

Token 1303: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.0007366081699728966
    2. ' enumerate' → logprob: -7.250736713409424
    3. 'root' → logprob: -10.875736236572266
    4. 'range' → logprob: -12.000736236572266
    5. '
' → logprob: -14.125736236572266
    6. 'roots' → logprob: -14.375736236572266
    7. 'r' → logprob: -15.750736236572266
    8. 'enum' → logprob: -16.875736236572266
    9. '{' → logprob: -16.875736236572266
    10. '```' → logprob: -17.500736236572266

Token 1304: '(' (ID: 7)
  Prédit: 'roots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'roots' → logprob: -3.047134305234067e-05
    2. ' roots' → logprob: -10.500030517578125
    3. '(' → logprob: -13.750030517578125
    4. 'root' → logprob: -14.250030517578125
    5. 'r' → logprob: -14.250030517578125
    6. '
' → logprob: -14.625030517578125
    7. '[' → logprob: -18.000030517578125
    8. 'temp' → logprob: -18.500030517578125
    9. '[(' → logprob: -18.625030517578125
    10. '(
' → logprob: -18.875030517578125

Token 1305: 'roots' (ID: 83507)
  Prédit: 'roots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'roots' → logprob: -2.7610454708337784e-05
    2. ' roots' → logprob: -10.500027656555176
    3. 'root' → logprob: -17.00002670288086
    4. '
' → logprob: -17.50002670288086
    5. 'range' → logprob: -20.50002670288086
    6. 'r' → logprob: -20.87502670288086
    7. '   ' → logprob: -21.00002670288086
    8. ' ' → logprob: -22.12502670288086
    9. 'Roots' → logprob: -22.87502670288086
    10. 'rows' → logprob: -23.00002670288086

Token 1306: '_list' (ID: 4162)
  Prédit: '_nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.994140625
    2. '(temp' → logprob: -1.244140625
    3. 'temp' → logprob: -1.744140625
    4. 'r' → logprob: -2.494140625
    5. ')' → logprob: -4.244140625
    6. 's' → logprob: -4.369140625
    7. '_tokens' → logprob: -4.619140625
    8. '[temp' → logprob: -4.744140625
    9. '(r' → logprob: -4.994140625
    10. 'root' → logprob: -5.119140625

Token 1307: ')}
' (ID: 19324)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.0015640194760635495
    2. '}
' → logprob: -6.501564025878906
    3. '               ' → logprob: -10.001564025878906
    4. ' }' → logprob: -12.501564025878906
    5. '                   ' → logprob: -12.751564025878906
    6. '}
' → logprob: -12.751564025878906
    7. ',' → logprob: -13.126564025878906
    8. '   ' → logprob: -13.251564025878906
    9. '           ' → logprob: -13.501564025878906
    10. '       ' → logprob: -13.751564025878906

Token 1308: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03050881437957287
    2. '                   ' → logprob: -4.030508995056152
    3. '                
' → logprob: -5.530508995056152
    4. '                ' → logprob: -6.655508995056152
    5. '           ' → logprob: -6.780508995056152
    6. '```' → logprob: -7.280508995056152
    7. '  
' → logprob: -7.405508995056152
    8. ' 
' → logprob: -7.905508995056152
    9. '       ' → logprob: -8.030508995056152
    10. '    
' → logprob: -8.155508995056152

Token 1309: ' k' (ID: 372)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.43671172857284546
    2. 'k' (adapté à ' k') → logprob: -2.1867117881774902
    3. 'graph' → logprob: -2.3117117881774902
    4. 'n' → logprob: -3.0617117881774902
    5. '                   ' → logprob: -3.5617117881774902
    6. 'token' → logprob: -4.31171178817749
    7. 'temp' → logprob: -4.43671178817749
    8. '#' → logprob: -5.31171178817749
    9. 'edges' → logprob: -5.56171178817749
    10. '```' → logprob: -5.68671178817749

Token 1310: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17985646426677704
    2. ' =' → logprob: -1.8048564195632935
    3. ')' → logprob: -10.429856300354004
    4. '=k' → logprob: -10.554856300354004
    5. ',' → logprob: -11.679856300354004
    6. '<|end|>' → logprob: -11.804856300354004
    7. 'k' → logprob: -12.054856300354004
    8. '               ' → logprob: -12.304856300354004
    9. '[' → logprob: -12.429856300354004
    10. ' ' → logprob: -12.429856300354004

Token 1311: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.5451681974809617e-05
    2. ' len' → logprob: -11.250015258789062
    3. '(len' → logprob: -13.750015258789062
    4. 'k' → logprob: -14.125015258789062
    5. 'root' → logprob: -14.500015258789062
    6. '[len' → logprob: -16.500015258789062
    7. '=len' → logprob: -18.875015258789062
    8. '{' → logprob: -19.250015258789062
    9. '	len' → logprob: -19.625015258789062
    10. '<len' → logprob: -19.750015258789062

Token 1312: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8887573480606079
    2. '(root' → logprob: -0.8887573480606079
    3. 'roots' → logprob: -1.888757348060608
    4. 'root' → logprob: -3.6387572288513184
    5. '(temp' → logprob: -9.888757705688477
    6. ' roots' → logprob: -10.263757705688477
    7. '[root' → logprob: -10.763757705688477
    8. '(
' → logprob: -12.638757705688477
    9. '(k' → logprob: -12.888757705688477
    10. 'temp' → logprob: -13.138757705688477

Token 1313: 'roots' (ID: 83507)
  Prédit: 'roots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'roots' → logprob: -0.04859691113233566
    2. 'root' → logprob: -3.0485968589782715
    3. ' roots' → logprob: -12.42359733581543
    4. '(root' → logprob: -12.54859733581543
    5. 'temp' → logprob: -14.29859733581543
    6. '(' → logprob: -14.79859733581543
    7. 'rows' → logprob: -15.42359733581543
    8. '[root' → logprob: -15.67359733581543
    9. 'Roots' → logprob: -16.67359733581543
    10. 'ro' → logprob: -16.67359733581543

Token 1314: '_list' (ID: 4162)
  Prédit: '_idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.02597837708890438
    2. '_list' → logprob: -3.7759783267974854
    3. ')' → logprob: -6.6509785652160645
    4. 'idx' → logprob: -7.7759785652160645
    5. ')
' → logprob: -8.025978088378906
    6. 's' → logprob: -9.150978088378906
    7. '   ' → logprob: -9.150978088378906
    8. '_nodes' → logprob: -10.275978088378906
    9. 'root' → logprob: -10.275978088378906
    10. '{
' → logprob: -10.525978088378906

Token 1315: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004612935590557754
    2. ')
' → logprob: -8.00046157836914
    3. '               ' → logprob: -9.62546157836914
    4. '<|end|>' → logprob: -10.12546157836914
    5. '
' → logprob: -11.62546157836914
    6. '<|end|>' → logprob: -13.37546157836914
    7. ' )' → logprob: -13.87546157836914
    8. '```' → logprob: -14.00046157836914
    9. '')' → logprob: -14.00046157836914
    10. '}' → logprob: -14.12546157836914

Token 1316: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.13778233528137207
    2. '
' → logprob: -3.512782335281372
    3. '                   ' → logprob: -4.512782096862793
    4. ' 
' → logprob: -4.512782096862793
    5. '                
' → logprob: -4.637782096862793
    6. '  
' → logprob: -4.762782096862793
    7. 'edges' → logprob: -5.012782096862793
    8. '<|end|>' → logprob: -5.012782096862793
    9. '    
' → logprob: -5.137782096862793
    10. '   ' → logprob: -5.387782096862793

Token 1317: ' if' (ID: 538)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.13428528606891632
    2. 'edge' → logprob: -3.6342852115631104
    3. 'edges' → logprob: -3.6342852115631104
    4. 'adj' → logprob: -4.1342854499816895
    5. '               ' → logprob: -4.2592854499816895
    6. 'matrix' → logprob: -4.2592854499816895
    7. 'import' → logprob: -4.7592854499816895
    8. 'token' → logprob: -5.8842854499816895
    9. '                   ' → logprob: -5.8842854499816895
    10. 'temp' → logprob: -6.1342854499816895

Token 1318: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0006392885115928948
    2. ' k' → logprob: -7.37563943862915
    3. '   ' → logprob: -12.250638961791992
    4. 'cost' → logprob: -13.375638961791992
    5. 'not' → logprob: -13.750638961791992
    6. 'i' → logprob: -14.250638961791992
    7. '           ' → logprob: -14.375638961791992
    8. 'j' → logprob: -14.500638961791992
    9. '               ' → logprob: -14.500638961791992
    10. '                   ' → logprob: -14.625638961791992

Token 1319: ' ==' (ID: 951)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.4847087562084198
    2. '==' → logprob: -1.7347087860107422
    3. ' >' → logprob: -2.484708786010742
    4. ' ==' → logprob: -2.734708786010742
    5. '<' → logprob: -3.609708786010742
    6. ' <' → logprob: -3.734708786010742
    7. ':' → logprob: -5.359708786010742
    8. '<=' → logprob: -6.359708786010742
    9. ' <=' → logprob: -7.484708786010742
    10. '{' → logprob: -7.859708786010742

Token 1320: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023265164345502853
    2. '0' → logprob: -3.7732651233673096
    3. 'k' → logprob: -11.27326488494873
    4. '
' → logprob: -12.77326488494873
    5. ' ' → logprob: -13.39826488494873
    6. '2' → logprob: -14.52326488494873
    7. '   ' → logprob: -14.77326488494873
    8. '=' → logprob: -15.14826488494873
    9. '(' → logprob: -15.39826488494873
    10. '(k' → logprob: -15.52326488494873

Token 1321: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5231673717498779
    2. '1' → logprob: -0.8981673717498779
    3. 'k' → logprob: -10.773167610168457
    4. '
' → logprob: -11.773167610168457
    5. '2' → logprob: -12.523167610168457
    6. 'len' → logprob: -12.773167610168457
    7. '#' → logprob: -13.710667610168457
    8. '```' → logprob: -13.835667610168457
    9. ' ' → logprob: -13.898167610168457
    10. '   ' → logprob: -14.023167610168457

Token 1322: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5777943134307861
    2. ':' → logprob: -0.8277943134307861
    3. '                   ' → logprob: -6.577794075012207
    4. '               ' → logprob: -7.827794075012207
    5. ':return' → logprob: -10.452794075012207
    6. '                       ' → logprob: -11.827794075012207
    7. '           ' → logprob: -11.827794075012207
    8. ':

' → logprob: -12.702794075012207
    9. ',' → logprob: -12.952794075012207
    10. '):
' → logprob: -13.077794075012207

Token 1323: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0331859216094017
    2. ':
' → logprob: -4.283185958862305
    3. '               ' → logprob: -5.033185958862305
    4. ':' → logprob: -5.408185958862305
    5. '\n' → logprob: -6.033185958862305
    6. '                       ' → logprob: -6.033185958862305
    7. '
' → logprob: -7.533185958862305
    8. ' 
' → logprob: -7.783185958862305
    9. '                    
' → logprob: -8.033185958862305
    10. '           ' → logprob: -8.283185958862305

Token 1324: ' #' (ID: 1069)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.37583082914352417
    2. '                   ' → logprob: -1.250830888748169
    3. '                       ' → logprob: -4.25083065032959
    4. ' i' → logprob: -4.87583065032959
    5. '   ' → logprob: -6.12583065032959
    6. '               ' → logprob: -6.50083065032959
    7. '       ' → logprob: -8.00083065032959
    8. '```' → logprob: -8.12583065032959
    9. '           ' → logprob: -8.37583065032959
    10. '
' → logprob: -9.12583065032959

Token 1325: ' Toutes' (ID: 117422)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0022204378619790077
    2. '                   ' → logprob: -6.752220630645752
    3. '               ' → logprob: -7.127220630645752
    4. '```' → logprob: -9.377220153808594
    5. ' i' → logprob: -9.502220153808594
    6. 'for' → logprob: -10.627220153808594
    7. 'while' → logprob: -10.877220153808594
    8. '                       ' → logprob: -11.252220153808594
    9. '           ' → logprob: -11.377220153808594
    10. '#' → logprob: -12.002220153808594

Token 1326: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.05457574874162674
    2. ' les' → logprob: -3.0545756816864014
    3. '   ' → logprob: -5.6795759201049805
    4. 'i' → logprob: -7.4295759201049805
    5. ' ' → logprob: -7.4295759201049805
    6. ' i' → logprob: -8.67957592010498
    7. ' edges' → logprob: -8.80457592010498
    8. 'edges' → logprob: -8.80457592010498
    9. 'le' → logprob: -9.05457592010498
    10. 'un' → logprob: -9.30457592010498

Token 1327: ' ar' (ID: 646)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.08222229778766632
    2. 'un' → logprob: -2.9572222232818604
    3. 'are' → logprob: -3.8322222232818604
    4. 'edges' → logprob: -6.7072224617004395
    5. 'arest' → logprob: -7.0822224617004395
    6. 'aré' → logprob: -7.4572224617004395
    7. 'union' → logprob: -7.5822224617004395
    8. 'com' → logprob: -7.8322224617004395
    9. ' ar' → logprob: -8.207221984863281
    10. ' are' → logprob: -8.582221984863281

Token 1328: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.024819884449243546
    2. 'ê' → logprob: -5.024819850921631
    3. 't' → logprob: -5.274819850921631
    4. 'r' → logprob: -5.524819850921631
    5. 'î' → logprob: -6.774819850921631
    6. 'tes' → logprob: -7.149819850921631
    7. 'ètes' → logprob: -7.274819850921631
    8. 'êts' → logprob: -7.524819850921631
    9. '_' → logprob: -7.649819850921631
    10. '{' → logprob: -8.024820327758789

Token 1329: ' entre' (ID: 3853)
  Prédit: ' sont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sont' → logprob: -0.7112790942192078
    2. 's' → logprob: -2.3362791538238525
    3. '                   ' → logprob: -2.7112791538238525
    4. '               ' → logprob: -2.9612791538238525
    5. ' un' → logprob: -3.0862791538238525
    6. 'un' → logprob: -3.3362791538238525
    7. ' =' → logprob: -3.4612791538238525
    8. 'ont' → logprob: -3.9612791538238525
    9. ',' → logprob: -4.211278915405273
    10. ' ont' → logprob: -4.336278915405273

Token 1330: ' même' (ID: 9679)
  Prédit: 'ces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ces' → logprob: -0.29468026757240295
    2. 'les' → logprob: -1.6696802377700806
    3. 'm' → logprob: -2.79468035697937
    4. 'c' → logprob: -6.169680118560791
    5. 'de' → logprob: -7.044680118560791
    6. 'la' → logprob: -7.544680118560791
    7. 'k' → logprob: -7.919680118560791
    8. 'le' → logprob: -8.04468059539795
    9. 'ce' → logprob: -8.29468059539795
    10. 'rac' → logprob: -8.41968059539795

Token 1331: ' rac' (ID: 12334)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.603614866733551
    2. ' compos' → logprob: -0.978614866733551
    3. 'comp' → logprob: -3.9786148071289062
    4. 'components' → logprob: -4.228614807128906
    5. ' composants' → logprob: -4.978614807128906
    6. '   ' → logprob: -5.103614807128906
    7. 'rac' → logprob: -5.103614807128906
    8. 's' → logprob: -5.478614807128906
    9. ' ' → logprob: -6.353614807128906
    10. 'nodes' → logprob: -6.478614807128906

Token 1332: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -1.97181236743927
    2. '   ' → logprob: -2.4718122482299805
    3. 'ines' → logprob: -2.4718122482299805
    4. 'ce' → logprob: -2.7218122482299805
    5. 'c' → logprob: -2.7218122482299805
    6. 'ôte' → logprob: -2.7218122482299805
    7. '```' → logprob: -2.9718122482299805
    8. 'ote' → logprob: -2.9718122482299805
    9. 'oot' → logprob: -3.0968122482299805
    10. 'aces' → logprob: -3.2218122482299805

Token 1333: ',' (ID: 11)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7212051153182983
    2. ':' → logprob: -1.3462051153182983
    3. '               ' → logprob: -2.346205234527588
    4. '                   ' → logprob: -2.346205234527588
    5. ' continue' → logprob: -4.346205234527588
    6. ',' → logprob: -4.346205234527588
    7. 's' → logprob: -5.221205234527588
    8. 'continue' → logprob: -5.221205234527588
    9. ' continu' → logprob: -5.971205234527588
    10. '                       ' → logprob: -6.096205234527588

Token 1334: ' aucune' (ID: 51173)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.35019657015800476
    2. ' i' → logprob: -1.3501965999603271
    3. '                   ' → logprob: -3.475196599960327
    4. '                       ' → logprob: -5.850196361541748
    5. '               ' → logprob: -7.100196361541748
    6. '   ' → logprob: -7.350196361541748
    7. '```' → logprob: -7.600196361541748
    8. '           ' → logprob: -9.600196838378906
    9. '#' → logprob: -9.600196838378906
    10. '       ' → logprob: -9.725196838378906

Token 1335: ' influence' (ID: 16044)
  Prédit: 'action'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'action' → logprob: -0.6698603630065918
    2. 'union' → logprob: -1.4198603630065918
    3. ' action' → logprob: -2.669860363006592
    4. '   ' → logprob: -3.169860363006592
    5. 'edge' → logprob: -3.794860363006592
    6. '
' → logprob: -4.044860363006592
    7. 'un' → logprob: -4.294860363006592
    8. 'à' → logprob: -4.669860363006592
    9. '               ' → logprob: -4.669860363006592
    10. ' ' → logprob: -5.169860363006592

Token 1336: ' sur' (ID: 1512)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10324840247631073
    2. '
' → logprob: -2.978248357772827
    3. '                   ' → logprob: -3.353248357772827
    4. 'i' → logprob: -5.728248596191406
    5. '                
' → logprob: -6.103248596191406
    6. '           ' → logprob: -6.228248596191406
    7. '\n' → logprob: -6.853248596191406
    8. ',
' → logprob: -7.353248596191406
    9. ':
' → logprob: -7.353248596191406
    10. ',' → logprob: -7.728248596191406

Token 1337: ' MST' (ID: 123058)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.2204285860061646
    2. 'ans' → logprob: -1.3454285860061646
    3. 'la' → logprob: -1.5954285860061646
    4. 'le' → logprob: -2.095428466796875
    5. 'i' → logprob: -2.720428466796875
    6. 'res' → logprob: -3.720428466796875
    7. 'result' → logprob: -5.345428466796875
    8. 'union' → logprob: -5.345428466796875
    9. 'count' → logprob: -5.595428466796875
    10. 'answer' → logprob: -5.845428466796875

Token 1338: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.5699551105499268
    2. '                   ' → logprob: -2.0699551105499268
    3. ':
' → logprob: -2.3199551105499268
    4. '
' → logprob: -2.3199551105499268
    5. '\n' → logprob: -2.4449551105499268
    6. ',' → logprob: -2.5699551105499268
    7. ',
' → logprob: -2.5699551105499268
    8. '.' → logprob: -3.3199551105499268
    9. ':' → logprob: -3.8199551105499268
    10. '  
' → logprob: -3.9449551105499268

Token 1339: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.05016239732503891
    2. '               ' → logprob: -3.8001623153686523
    3. '                       ' → logprob: -4.800162315368652
    4. ':
' → logprob: -4.925162315368652
    5. '
' → logprob: -5.550162315368652
    6. ':' → logprob: -6.300162315368652
    7. '\n' → logprob: -6.800162315368652
    8. '           ' → logprob: -6.925162315368652
    9. '       ' → logprob: -7.300162315368652
    10. '   ' → logprob: -7.800162315368652

Token 1340: ' #' (ID: 1069)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.018772771582007408
    2. '                   ' → logprob: -4.018772602081299
    3. ' i' → logprob: -8.643773078918457
    4. '               ' → logprob: -8.768773078918457
    5. '   ' → logprob: -8.893773078918457
    6. '                       ' → logprob: -9.393773078918457
    7. '           ' → logprob: -10.143773078918457
    8. '       ' → logprob: -10.893773078918457
    9. '```' → logprob: -12.018773078918457
    10. '
' → logprob: -12.893773078918457

Token 1341: ' Just' (ID: 6214)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10466543585062027
    2. '                   ' → logprob: -2.354665517807007
    3. '               ' → logprob: -5.604665279388428
    4. '                       ' → logprob: -8.354665756225586
    5. ' i' → logprob: -8.479665756225586
    6. '           ' → logprob: -8.729665756225586
    7. '   ' → logprob: -9.479665756225586
    8. '       ' → logprob: -10.354665756225586
    9. '
' → logprob: -10.729665756225586
    10. '```' → logprob: -10.729665756225586

Token 1342: 'e' (ID: 68)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03210228681564331
    2. '               ' → logprob: -3.907102346420288
    3. '                   ' → logprob: -5.282102108001709
    4. ' i' → logprob: -6.282102108001709
    5. '=i' → logprob: -6.907102108001709
    6. '```' → logprob: -6.907102108001709
    7. '[i' → logprob: -7.032102108001709
    8. '
' → logprob: -7.907102108001709
    9. '           ' → logprob: -7.907102108001709
    10. ':i' → logprob: -8.157102584838867

Token 1343: ' on' (ID: 402)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.11668799072504044
    2. 'for' → logprob: -3.6166880130767822
    3. '   ' → logprob: -3.7416880130767822
    4. ' i' → logprob: -4.116687774658203
    5. '                   ' → logprob: -4.116687774658203
    6. '               ' → logprob: -4.866687774658203
    7. '
' → logprob: -4.991687774658203
    8. ' for' → logprob: -5.366687774658203
    9. 'pass' → logprob: -5.616687774658203
    10. '           ' → logprob: -6.241687774658203

Token 1344: ' unit' (ID: 7670)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.24802879989147186
    2. 'for' → logprob: -1.9980287551879883
    3. 'continue' → logprob: -3.7480287551879883
    4. '           ' → logprob: -4.123028755187988
    5. ' i' → logprob: -4.498028755187988
    6. 'un' → logprob: -4.623028755187988
    7. '               ' → logprob: -5.123028755187988
    8. ' for' → logprob: -5.373028755187988
    9. '   ' → logprob: -5.998028755187988
    10. '                   ' → logprob: -6.123028755187988

Token 1345: ' celles' (ID: 57573)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -1.790258526802063
    2. 'i' → logprob: -2.0402584075927734
    3. '(u' → logprob: -2.2902584075927734
    4. '(
' → logprob: -2.7902584075927734
    5. 'u' → logprob: -2.7902584075927734
    6. 'for' → logprob: -2.9152584075927734
    7. 'the' → logprob: -2.9152584075927734
    8. 'x' → logprob: -3.1652584075927734
    9. '(i' → logprob: -3.4152584075927734
    10. 'same' → logprob: -3.4152584075927734

Token 1346: ' permettant' (ID: 61092)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.6909279823303223
    2. '[' → logprob: -1.8159279823303223
    3. '[i' → logprob: -1.9409279823303223
    4. 'edges' → logprob: -2.3159279823303223
    5. '(edges' → logprob: -3.0659279823303223
    6. '                   ' → logprob: -3.3159279823303223
    7. ' edges' → logprob: -3.4409279823303223
    8. 'des' → logprob: -3.5659279823303223
    9. '               ' → logprob: -3.8159279823303223
    10. '[j' → logprob: -3.8159279823303223

Token 1347: '
' (ID: 198)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.11357247084379196
    2. 'de' → logprob: -2.238572359085083
    3. 'la' → logprob: -8.488572120666504
    4. ' d' → logprob: -8.488572120666504
    5. ' de' → logprob: -8.613572120666504
    6. 'le' → logprob: -9.488572120666504
    7. 'l' → logprob: -10.238572120666504
    8. '   ' → logprob: -11.738572120666504
    9. '_d' → logprob: -11.863572120666504
    10. 't' → logprob: -12.238572120666504

Token 1348: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6129394769668579
    2. '                   ' → logprob: -1.237939476966858
    3. 'for' → logprob: -2.4879393577575684
    4. ' for' → logprob: -2.6129393577575684
    5. '                       ' → logprob: -5.862939357757568
    6. ' i' → logprob: -7.237939357757568
    7. '                
' → logprob: -7.362939357757568
    8. '\n' → logprob: -7.487939357757568
    9. '           ' → logprob: -7.612939357757568
    10. '\' → logprob: -7.612939357757568

Token 1349: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1839836835861206
    2. 'i' → logprob: -2.55898380279541
    3. '               ' → logprob: -3.05898380279541
    4. '                   ' → logprob: -3.55898380279541
    5. ' for' → logprob: -4.68398380279541
    6. '           ' → logprob: -6.18398380279541
    7. 'while' → logprob: -6.68398380279541
    8. 'j' → logprob: -7.55898380279541
    9. '       ' → logprob: -7.68398380279541
    10. '   ' → logprob: -7.80898380279541

Token 1350: ' _,' (ID: 18042)
  Prédit: '_,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_,' → logprob: -0.03973987698554993
    2. 'cost' → logprob: -3.2897398471832275
    3. '   ' → logprob: -7.414740085601807
    4. '__,' → logprob: -7.789740085601807
    5. 'c' → logprob: -8.414739608764648
    6. '_cost' → logprob: -8.664739608764648
    7. '_' → logprob: -9.414739608764648
    8. ' _,' → logprob: -9.414739608764648
    9. '(_,' → logprob: -9.914739608764648
    10. '_c' → logprob: -11.414739608764648

Token 1351: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.00020663968462031335
    2. ' u' → logprob: -8.50020694732666
    3. '   ' → logprob: -12.87520694732666
    4. '_,' → logprob: -15.62520694732666
    5. '	u' → logprob: -15.87520694732666
    6. '_u' → logprob: -16.125205993652344
    7. '```' → logprob: -17.375205993652344
    8. ' ' → logprob: -17.500205993652344
    9. '       ' → logprob: -17.625205993652344
    10. '    ' → logprob: -17.625205993652344

Token 1352: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0038650394417345524
    2. 'in' → logprob: -5.7538652420043945
    3. ' in' → logprob: -8.128865242004395
    4. '_,' → logprob: -8.878865242004395
    5. ' ,' → logprob: -9.003865242004395
    6. ',u' → logprob: -9.878865242004395
    7. ',v' → logprob: -10.503865242004395
    8. 'u' → logprob: -10.753865242004395
    9. ',_' → logprob: -11.378865242004395
    10. '_local' → logprob: -12.753865242004395

Token 1353: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0001114106344175525
    2. ' v' → logprob: -9.12511157989502
    3. 'u' → logprob: -13.00011157989502
    4. '	v' → logprob: -16.625110626220703
    5. '_v' → logprob: -17.875110626220703
    6. '   ' → logprob: -17.875110626220703
    7. '(v' → logprob: -18.625110626220703
    8. ' ' → logprob: -19.250110626220703
    9. '```' → logprob: -19.375110626220703
    10. ',v' → logprob: -19.500110626220703

Token 1354: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006993249990046024
    2. 'in' → logprob: -6.131993293762207
    3. '                   ' → logprob: -6.256993293762207
    4. '               ' → logprob: -6.381993293762207
    5. ':' → logprob: -7.756993293762207
    6. ':
' → logprob: -8.006993293762207
    7. '           ' → logprob: -8.631993293762207
    8. '   ' → logprob: -9.756993293762207
    9. '                       ' → logprob: -10.381993293762207
    10. ' :' → logprob: -10.881993293762207

Token 1355: ' same' (ID: 2684)
  Prédit: 'same'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'same' → logprob: -0.001517834491096437
    2. ' same' → logprob: -6.6265177726745605
    3. 'edges' → logprob: -8.876518249511719
    4. 'uf' → logprob: -10.626518249511719
    5. '   ' → logprob: -11.251518249511719
    6. 'comp' → logprob: -12.751518249511719
    7. 'sam' → logprob: -13.126518249511719
    8. ' edges' → logprob: -13.251518249511719
    9. '_same' → logprob: -13.251518249511719
    10. 'range' → logprob: -13.751518249511719

Token 1356: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.0006485754274763167
    2. 'cost' → logprob: -8.000648498535156
    3. '_edges' → logprob: -8.125648498535156
    4. '_' → logprob: -11.500648498535156
    5. 'Cost' → logprob: -12.875648498535156
    6. '_nodes' → logprob: -13.250648498535156
    7. '_COST' → logprob: -14.375648498535156
    8. 'const' → logprob: -14.500648498535156
    9. 'edges' → logprob: -15.125648498535156
    10. '```' → logprob: -15.250648498535156

Token 1357: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.0032034965697675943
    2. 'edges' → logprob: -5.753203392028809
    3. '_cost' → logprob: -11.253203392028809
    4. 'Edges' → logprob: -12.628203392028809
    5. 'cost' → logprob: -13.253203392028809
    6. ' edges' → logprob: -13.503203392028809
    7. '_edge' → logprob: -13.628203392028809
    8. '```' → logprob: -13.753203392028809
    9. '
' → logprob: -14.253203392028809
    10. '   ' → logprob: -14.378203392028809

Token 1358: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.13487057387828827
    2. ':' → logprob: -2.2598705291748047
    3. '                       ' → logprob: -4.009870529174805
    4. '                   ' → logprob: -5.759870529174805
    5. '               ' → logprob: -8.009870529174805
    6. '       ' → logprob: -9.884870529174805
    7. '           ' → logprob: -10.384870529174805
    8. ',' → logprob: -10.884870529174805
    9. '):
' → logprob: -10.884870529174805
    10. '                           ' → logprob: -11.009870529174805

Token 1359: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.006293614394962788
    2. ' if' → logprob: -5.631293773651123
    3. '                   ' → logprob: -6.256293773651123
    4. '       ' → logprob: -8.631293296813965
    5. '           ' → logprob: -9.256293296813965
    6. '                           ' → logprob: -9.381293296813965
    7. 'if' → logprob: -9.506293296813965
    8. '                        
' → logprob: -9.506293296813965
    9. '               ' → logprob: -9.756293296813965
    10. '                        ' → logprob: -10.006293296813965

Token 1360: ' uf' (ID: 35772)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' (adapté à ' uf') → logprob: -0.20391172170639038
    2. ' uf' → logprob: -1.7039117813110352
    3. '                       ' → logprob: -6.578911781311035
    4. '                   ' → logprob: -7.578911781311035
    5. '                           ' → logprob: -8.453911781311035
    6. 'if' → logprob: -8.578911781311035
    7. ' if' → logprob: -9.828911781311035
    8. '               ' → logprob: -10.453911781311035
    9. 'ufs' → logprob: -10.453911781311035
    10. '                               ' → logprob: -11.078911781311035

Token 1361: '_local' (ID: 29253)
  Prédit: '_local'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_local' → logprob: -5.796184723294573e-06
    2. 'local' → logprob: -13.000005722045898
    3. 'Local' → logprob: -13.000005722045898
    4. '_LOCAL' → logprob: -14.625005722045898
    5. '_un' → logprob: -15.000005722045898
    6. '.local' → logprob: -16.3750057220459
    7. '._' → logprob: -16.8750057220459
    8. '```' → logprob: -16.8750057220459
    9. '_Local' → logprob: -16.8750057220459
    10. ' лок' → logprob: -17.8750057220459

Token 1362: '.un' (ID: 11508)
  Prédit: '.un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.un' → logprob: -0.00034583290107548237
    2. '.' → logprob: -8.625346183776855
    3. 'un' → logprob: -9.375346183776855
    4. '```' → logprob: -10.125346183776855
    5. '   ' → logprob: -10.625346183776855
    6. ' .' → logprob: -12.375346183776855
    7. '       ' → logprob: -12.750346183776855
    8. '.union' → logprob: -13.250346183776855
    9. ').' → logprob: -13.375346183776855
    10. '           ' → logprob: -13.500346183776855

Token 1363: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -9.088346359931165e-07
    2. 'i' → logprob: -15.000000953674316
    3. 'it' → logprob: -16.125
    4. ' ite' → logprob: -16.5
    5. 'itte' → logprob: -16.75
    6. 'ate' → logprob: -17.0
    7. 'iste' → logprob: -17.25
    8. '```' → logprob: -17.375
    9. 'ites' → logprob: -17.875
    10. 'nite' → logprob: -18.0

Token 1364: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.0014861776726320386
    2. 'u' → logprob: -6.751486301422119
    3. '(' → logprob: -8.126485824584961
    4. ' u' → logprob: -11.001485824584961
    5. ' (' → logprob: -13.626485824584961
    6. '(
' → logprob: -14.126485824584961
    7. '[u' → logprob: -14.626485824584961
    8. '((' → logprob: -15.501485824584961
    9. 'uf' → logprob: -15.501485824584961
    10. '	u' → logprob: -15.751485824584961

Token 1365: ',v' (ID: 30680)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008721556514501572
    2. ',v' → logprob: -7.2508721351623535
    3. ' ,' → logprob: -8.750872611999512
    4. ',
' → logprob: -14.000872611999512
    5. '<|end|>' → logprob: -14.375872611999512
    6. '_,' → logprob: -15.125872611999512
    7. '‌,' → logprob: -15.250872611999512
    8. ',y' → logprob: -15.375872611999512
    9. ',u' → logprob: -15.375872611999512
    10. 'v' → logprob: -15.500872611999512

Token 1366: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017996503738686442
    2. ')
' → logprob: -6.376799583435059
    3. '                   ' → logprob: -10.001799583435059
    4. '                       ' → logprob: -10.251799583435059
    5. '               ' → logprob: -11.376799583435059
    6. '           ' → logprob: -12.876799583435059
    7. ' )' → logprob: -14.001799583435059
    8. ')return' → logprob: -14.876799583435059
    9. '                           ' → logprob: -15.126799583435059
    10. '       ' → logprob: -15.126799583435059

Token 1367: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3893493711948395
    2. '               ' → logprob: -1.264349341392517
    3. '
' → logprob: -3.5143494606018066
    4. '                       ' → logprob: -5.264349460601807
    5. '```' → logprob: -5.764349460601807
    6. '<|end|>' → logprob: -7.264349460601807
    7. '           ' → logprob: -8.514348983764648
    8. '\n' → logprob: -9.014348983764648
    9. '  
' → logprob: -9.264348983764648
    10. '                        
' → logprob: -9.264348983764648

Token 1368: ' i' (ID: 575)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.19029483199119568
    2. 'i' (adapté à ' i') → logprob: -1.940294861793518
    3. '
' → logprob: -4.1902947425842285
    4. '                   ' → logprob: -5.0652947425842285
    5. '```' → logprob: -5.3152947425842285
    6. 'else' → logprob: -6.5652947425842285
    7. ' i' → logprob: -6.5652947425842285
    8. '           ' → logprob: -9.190295219421387
    9. '                       ' → logprob: -9.315295219421387
    10. '   ' → logprob: -9.815295219421387

Token 1369: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0010512693552300334
    2. ' =' → logprob: -7.501051425933838
    3. '+=' → logprob: -7.626051425933838
    4. ' +=' → logprob: -11.50105094909668
    5. '=i' → logprob: -15.50105094909668
    6. '=j' → logprob: -15.75105094909668
    7. '=
' → logprob: -15.87605094909668
    8. ' ' → logprob: -17.62605094909668
    9. '+' → logprob: -17.87605094909668
    10. '=}' → logprob: -18.75105094909668

Token 1370: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -9.639096970204264e-05
    2. ' j' → logprob: -9.250096321105957
    3. '   ' → logprob: -15.625096321105957
    4. '	j' → logprob: -17.500097274780273
    5. '$j' → logprob: -18.750097274780273
    6. '```' → logprob: -20.125097274780273
    7. 'i' → logprob: -20.625097274780273
    8. ':j' → logprob: -21.125097274780273
    9. '0' → logprob: -21.250097274780273
    10. '=j' → logprob: -21.250097274780273

Token 1371: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.18276847898960114
    2. '                   ' → logprob: -1.93276846408844
    3. '<|end|>' → logprob: -4.93276834487915
    4. '           ' → logprob: -5.05776834487915
    5. '<|end|>' → logprob: -5.80776834487915
    6. 'continue' → logprob: -6.30776834487915
    7. '       ' → logprob: -7.18276834487915
    8. '   ' → logprob: -7.55776834487915
    9. '                ' → logprob: -8.182768821716309
    10. '                       ' → logprob: -8.307768821716309

Token 1372: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04406743124127388
    2. '               ' → logprob: -3.1690673828125
    3. '           ' → logprob: -7.5440673828125
    4. 'continue' → logprob: -8.7940673828125
    5. '                       ' → logprob: -9.4190673828125
    6. '	               ' → logprob: -9.9190673828125
    7. '	continue' → logprob: -10.0440673828125
    8. '   ' → logprob: -10.5440673828125
    9. '       ' → logprob: -10.6690673828125
    10. '```' → logprob: -10.7940673828125

Token 1373: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.0002777822664938867
    2. '                   ' → logprob: -8.625277519226074
    3. '               ' → logprob: -10.125277519226074
    4. '           ' → logprob: -10.500277519226074
    5. ' continue' → logprob: -11.250277519226074
    6. 'contin' → logprob: -12.125277519226074
    7. '   ' → logprob: -12.250277519226074
    8. '	continue' → logprob: -12.625277519226074
    9. '```' → logprob: -13.500277519226074
    10. '                       ' → logprob: -14.250277519226074

Token 1374: '

' (ID: 279)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05528855323791504
    2. '                
' → logprob: -3.305288553237915
    3. '
' → logprob: -5.055288314819336
    4. '```' → logprob: -5.680288314819336
    5. 'for' → logprob: -6.555288314819336
    6. 'i' → logprob: -6.555288314819336
    7. '                   ' → logprob: -7.180288314819336
    8. '  
' → logprob: -7.180288314819336
    9. '                    
' → logprob: -7.305288314819336
    10. '                ' → logprob: -7.805288314819336

Token 1375: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4130711257457733
    2. '                
' → logprob: -1.2880711555480957
    3. '
' → logprob: -2.9130711555480957
    4. '    
' → logprob: -5.788071155548096
    5. '```' → logprob: -7.163071155548096
    6. '        
' → logprob: -7.413071155548096
    7. '  
' → logprob: -7.538071155548096
    8. '#' → logprob: -7.788071155548096
    9. '                
                
' → logprob: -7.788071155548096
    10. '               
' → logprob: -7.913071155548096

Token 1376: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8765924572944641
    2. 'import' → logprob: -1.2515923976898193
    3. '#' (adapté à ' #') → logprob: -1.7515923976898193
    4. 'from' → logprob: -2.2515923976898193
    5. '                
' → logprob: -4.501592636108398
    6. 'graph' → logprob: -5.501592636108398
    7. '
' → logprob: -6.001592636108398
    8. 'edges' → logprob: -7.251592636108398
    9. 'nodes' → logprob: -9.376592636108398
    10. 'adj' → logprob: -9.376592636108398

Token 1377: ' Grap' (ID: 129442)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.4313793480396271
    2. 'from' → logprob: -1.8063793182373047
    3. '#' → logprob: -1.9313793182373047
    4. 'graph' → logprob: -3.6813793182373047
    5. '               ' → logprob: -5.181379318237305
    6. 'adj' → logprob: -5.306379318237305
    7. 'edges' → logprob: -6.056379318237305
    8. 'mat' → logprob: -7.306379318237305
    9. 'g' → logprob: -7.556379318237305
    10. 'matrix' → logprob: -8.056379318237305

Token 1378: 'he' (ID: 273)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.5778889656066895
    2. 'ph' → logprob: -1.9528889656066895
    3. 'aphe' → logprob: -1.9528889656066895
    4. 'phe' → logprob: -2.5778889656066895
    5. 'he' → logprob: -2.8278889656066895
    6. '               ' → logprob: -4.7028889656066895
    7. 'aph' → logprob: -5.5778889656066895
    8. '#' → logprob: -6.3278889656066895
    9. 'p' → logprob: -6.7028889656066895
    10. '           ' → logprob: -7.2028889656066895

Token 1379: ' construit' (ID: 119882)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23743250966072083
    2. '_nodes' → logprob: -2.4874324798583984
    3. '=' → logprob: -2.8624324798583984
    4. '_local' → logprob: -4.362432479858398
    5. '               ' → logprob: -4.737432479858398
    6. 'ind' → logprob: -4.737432479858398
    7. '_edges' → logprob: -4.987432479858398
    8. 'adj' → logprob: -5.112432479858398
    9. 'nodes' → logprob: -5.487432479858398
    10. '_temp' → logprob: -5.612432479858398

Token 1380: ' sur' (ID: 1512)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4650528132915497
    2. '               ' → logprob: -1.215052843093872
    3. '=' → logprob: -2.840052843093872
    4. '                   ' → logprob: -4.840052604675293
    5. ':' → logprob: -5.715052604675293
    6. 'adj' → logprob: -7.340052604675293
    7. '```' → logprob: -7.715052604675293
    8. ',' → logprob: -7.965052604675293
    9. 'b' → logprob: -8.215052604675293
    10. '                
' → logprob: -8.215052604675293

Token 1381: ' ces' (ID: 10532)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.06249695271253586
    2. 'roots' → logprob: -2.8124969005584717
    3. 'root' → logprob: -8.68749713897705
    4. 'range' → logprob: -9.06249713897705
    5. 'the' → logprob: -9.93749713897705
    6. 'la' → logprob: -10.31249713897705
    7. ' roots' → logprob: -10.43749713897705
    8. 'les' → logprob: -10.56249713897705
    9. ' k' → logprob: -11.18749713897705
    10. 'le' → logprob: -11.43749713897705

Token 1382: ' rac' (ID: 12334)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.26553064584732056
    2. 'roots' → logprob: -1.6405305862426758
    3. ' k' → logprob: -4.265530586242676
    4. 'rac' → logprob: -4.515530586242676
    5. 'nodes' → logprob: -5.515530586242676
    6. 'root' → logprob: -5.765530586242676
    7. ' rac' → logprob: -6.015530586242676
    8. ' roots' → logprob: -6.265530586242676
    9. 'r' → logprob: -6.515530586242676
    10. 'vertices' → logprob: -7.515530586242676

Token 1383: 'ines' (ID: 2028)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3564172387123108
    2. 'ces' → logprob: -1.981417179107666
    3. 'ines' → logprob: -3.231417179107666
    4. 'tes' → logprob: -3.481417179107666
    5. '\xc2' → logprob: -4.356417179107666
    6. '```' → logprob: -4.356417179107666
    7. 'cles' → logprob: -5.481417179107666
    8. 'í' → logprob: -5.606417179107666
    9. '``' → logprob: -5.606417179107666
    10. 'nes' → logprob: -5.606417179107666

Token 1384: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4318161606788635
    2. 'adj' → logprob: -2.3068161010742188
    3. 'nodes' → logprob: -2.9318161010742188
    4. 'n' → logprob: -3.3068161010742188
    5. ':' → logprob: -3.6818161010742188
    6. 'graph' → logprob: -3.6818161010742188
    7. ' =' → logprob: -3.8068161010742188
    8. 'edges' → logprob: -4.306816101074219
    9. 'node' → logprob: -4.556816101074219
    10. ',' → logprob: -5.306816101074219

Token 1385: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009844626300036907
    2. '```' → logprob: -5.884844779968262
    3. ',' → logprob: -6.509844779968262
    4. ':' → logprob: -6.884844779968262
    5. '{
' → logprob: -7.009844779968262
    6. 'edges' → logprob: -7.259844779968262
    7. '                
' → logprob: -7.884844779968262
    8. ':
' → logprob: -8.009844779968262
    9. 'adj' → logprob: -8.259844779968262
    10. ' edges' → logprob: -8.384844779968262

Token 1386: ' #' (ID: 1069)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.8657317757606506
    2. 'from' → logprob: -1.4907317161560059
    3. 'adj' → logprob: -1.9907317161560059
    4. 'import' → logprob: -2.615731716156006
    5. 'edges' → logprob: -2.865731716156006
    6. '               ' → logprob: -2.990731716156006
    7. 'matrix' → logprob: -4.740731716156006
    8. 'g' → logprob: -4.865731716156006
    9. '#' (adapté à ' #') → logprob: -5.615731716156006
    10. 'edge' → logprob: -5.615731716156006

Token 1387: ' Constru' (ID: 98396)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -1.0590863227844238
    2. 'graph' → logprob: -1.5590863227844238
    3. 'from' → logprob: -1.6840863227844238
    4. 'import' → logprob: -2.434086322784424
    5. '               ' → logprob: -2.434086322784424
    6. 'edges' → logprob: -3.309086322784424
    7. '#' → logprob: -4.434086322784424
    8. 'g' → logprob: -5.184086322784424
    9. 'edge' → logprob: -5.309086322784424
    10. 'n' → logprob: -5.434086322784424

Token 1388: 'ire' (ID: 594)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.22102132439613342
    2. 'ction' → logprob: -2.3460214138031006
    3. 'ire' → logprob: -2.4710214138031006
    4. 'ite' → logprob: -5.4710211753845215
    5. 'it' → logprob: -5.7210211753845215
    6. 'cts' → logprob: -5.8460211753845215
    7. 'ir' → logprob: -6.3460211753845215
    8. 'cter' → logprob: -6.8460211753845215
    9. 'ctions' → logprob: -7.0960211753845215
    10. '               ' → logprob: -7.4710211753845215

Token 1389: ' la' (ID: 557)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.6112042665481567
    2. 'graph' → logprob: -1.1112042665481567
    3. 'lap' → logprob: -2.611204147338867
    4. 'edges' → logprob: -3.986204147338867
    5. 'import' → logprob: -4.236204147338867
    6. '   ' → logprob: -5.111204147338867
    7. 'g' → logprob: -5.486204147338867
    8. 'from' → logprob: -5.986204147338867
    9. 'edge' → logprob: -6.111204147338867
    10. '       ' → logprob: -6.861204147338867

Token 1390: ' liste' (ID: 31719)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.6321135759353638
    2. 'graph' → logprob: -1.3821135759353638
    3. 'from' → logprob: -2.632113456726074
    4. 'import' → logprob: -3.007113456726074
    5. 'edges' → logprob: -3.132113456726074
    6. 'mat' → logprob: -3.632113456726074
    7. 'matrix' → logprob: -4.257113456726074
    8. 'lap' → logprob: -5.757113456726074
    9. 'g' → logprob: -6.007113456726074
    10. 'G' → logprob: -6.507113456726074

Token 1391: ' d' (ID: 272)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8056595325469971
    2. ' of' → logprob: -1.680659532546997
    3. 'd' → logprob: -1.805659532546997
    4. 'of' → logprob: -2.930659532546997
    5. 'des' → logprob: -3.430659532546997
    6. 'edges' → logprob: -3.805659532546997
    7. 'adj' → logprob: -4.055659294128418
    8. 'de' → logprob: -4.305659294128418
    9. ' =' → logprob: -4.305659294128418
    10. ' des' → logprob: -4.805659294128418

Token 1392: ''ar' (ID: 54307)
  Prédit: ''ad'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ad' → logprob: -0.5110135078430176
    2. 'adj' → logprob: -1.7610135078430176
    3. 'es' → logprob: -2.6360135078430176
    4. ''ar' → logprob: -2.7610135078430176
    5. '(adj' → logprob: -4.136013507843018
    6. ''' → logprob: -4.636013507843018
    7. 'e' → logprob: -4.636013507843018
    8. '_edges' → logprob: -4.636013507843018
    9. 'edges' → logprob: -4.886013507843018
    10. ' adjacency' → logprob: -5.261013507843018

Token 1393: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.005436050705611706
    2. 'cs' → logprob: -5.380435943603516
    3. 'c' → logprob: -8.255435943603516
    4. 'ètes' → logprob: -9.130435943603516
    5. 'ê' → logprob: -9.255435943603516
    6. 'etes' → logprob: -9.630435943603516
    7. 'tes' → logprob: -9.880435943603516
    8. '```' → logprob: -10.130435943603516
    9. 'êts' → logprob: -10.880435943603516
    10. 'ches' → logprob: -11.130435943603516

Token 1394: ' entre' (ID: 3853)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.7045668363571167
    2. 'graph' → logprob: -2.0795669555664062
    3. '               ' → logprob: -2.2045669555664062
    4. '[]' → logprob: -2.3295669555664062
    5. ' =' → logprob: -2.9545669555664062
    6. 'edge' → logprob: -3.3295669555664062
    7. '=' → logprob: -3.7045669555664062
    8. '=[]' → logprob: -4.329566955566406
    9. 'tmp' → logprob: -4.829566955566406
    10. '[]
' → logprob: -4.829566955566406

Token 1395: ' roots' (ID: 29895)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.8220526576042175
    2. 'roots' → logprob: -1.8220527172088623
    3. 'ces' → logprob: -2.0720527172088623
    4. 'les' → logprob: -2.4470527172088623
    5. 'nodes' → logprob: -3.4470527172088623
    6. 'k' → logprob: -3.5720527172088623
    7. 'u' → logprob: -4.072052478790283
    8. 'these' → logprob: -4.072052478790283
    9. 'rac' → logprob: -4.197052478790283
    10. 'pairs' → logprob: -4.197052478790283

Token 1396: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1024460569024086
    2. 'edges' → logprob: -2.9774460792541504
    3. 'graph' → logprob: -3.7274460792541504
    4. 'g' → logprob: -5.22744607925415
    5. '                
' → logprob: -6.47744607925415
    6. 'new' → logprob: -6.72744607925415
    7. '(edges' → logprob: -6.72744607925415
    8. 'es' → logprob: -6.85244607925415
    9. 'edge' → logprob: -6.97744607925415
    10. '                   ' → logprob: -7.10244607925415

Token 1397: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11532925814390182
    2. 'edges' → logprob: -3.4903292655944824
    3. '(edges' → logprob: -3.9903292655944824
    4. '[
' → logprob: -4.115329265594482
    5. ' =' → logprob: -4.365329265594482
    6. '                   ' → logprob: -4.990329265594482
    7. '[' → logprob: -5.490329265594482
    8. ' (' → logprob: -5.615329265594482
    9. ' edges' → logprob: -5.740329265594482
    10. ':' → logprob: -6.240329265594482

Token 1398: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.6671022772789001
    2. 'edges' → logprob: -1.042102336883545
    3. '               ' → logprob: -2.667102336883545
    4. 'g' → logprob: -3.417102336883545
    5. 'temp' → logprob: -4.917102336883545
    6. 'edge' → logprob: -5.042102336883545
    7. 'new' → logprob: -5.292102336883545
    8. 'tmp' → logprob: -5.292102336883545
    9. 'gr' → logprob: -6.917102336883545
    10. '                   ' → logprob: -7.042102336883545

Token 1399: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4782610237598419
    2. ' =' → logprob: -0.9782609939575195
    3. '_edges' → logprob: -6.1032609939575195
    4. '=[]' → logprob: -7.2282609939575195
    5. '               ' → logprob: -7.4782609939575195
    6. '   ' → logprob: -9.10326099395752
    7. '           ' → logprob: -9.47826099395752
    8. '_' → logprob: -9.47826099395752
    9. '_nodes' → logprob: -9.47826099395752
    10. '=[]
' → logprob: -9.85326099395752

Token 1400: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5777893662452698
    2. 'default' → logprob: -0.8277893662452698
    3. '[]' → logprob: -6.577789306640625
    4. ' [[]' → logprob: -8.577789306640625
    5. '[[' → logprob: -8.702789306640625
    6. '{' → logprob: -9.952789306640625
    7. '[]
' → logprob: -10.827789306640625
    8. ' defaultdict' → logprob: -11.077789306640625
    9. '(default' → logprob: -11.577789306640625
    10. '[{' → logprob: -12.952789306640625

Token 1401: ' for' (ID: 395)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6699836254119873
    2. 'for' → logprob: -1.1699836254119873
    3. ',' → logprob: -2.5449836254119873
    4. ']' → logprob: -2.7949836254119873
    5. ']
' → logprob: -4.794983863830566
    6. '(k' → logprob: -4.919983863830566
    7. ',k' → logprob: -5.544983863830566
    8. '                   ' → logprob: -5.669983863830566
    9. ' for' → logprob: -5.919983863830566
    10. '][' → logprob: -6.044983863830566

Token 1402: ' _' (ID: 1175)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01628807745873928
    2. '(k' → logprob: -4.8912882804870605
    3. 'k' → logprob: -5.1412882804870605
    4. ' range' → logprob: -6.0162882804870605
    5. '(range' → logprob: -8.641287803649902
    6. 'root' → logprob: -9.016287803649902
    7. 'i' → logprob: -10.391287803649902
    8. '_k' → logprob: -12.016287803649902
    9. '(' → logprob: -12.141287803649902
    10. 'in' → logprob: -12.891287803649902

Token 1403: ' in' (ID: 306)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0015925843035802245
    2. 'range' → logprob: -6.501592636108398
    3. '(k' → logprob: -9.501592636108398
    4. ' range' → logprob: -11.626592636108398
    5. ' k' → logprob: -12.001592636108398
    6. '(range' → logprob: -16.1265926361084
    7. '(' → logprob: -16.5015926361084
    8. ' (' → logprob: -16.7515926361084
    9. 'in' → logprob: -17.0015926361084
    10. '_k' → logprob: -17.1265926361084

Token 1404: ' range' (ID: 3352)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00046200878568924963
    2. 'range' → logprob: -7.750462055206299
    3. '(k' → logprob: -10.75046157836914
    4. ' k' → logprob: -12.00046157836914
    5. ' range' → logprob: -12.50046157836914
    6. '[k' → logprob: -18.87546157836914
    7. '{k' → logprob: -19.00046157836914
    8. '(range' → logprob: -19.25046157836914
    9. ' (' → logprob: -19.75046157836914
    10. '(' → logprob: -20.00046157836914

Token 1405: '(k' (ID: 12125)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -7.3458322731312364e-06
    2. '(k' → logprob: -12.000007629394531
    3. ' k' → logprob: -13.750007629394531
    4. '{k' → logprob: -16.62500762939453
    5. '[k' → logprob: -18.00000762939453
    6. '=k' → logprob: -18.62500762939453
    7. 'kx' → logprob: -19.75000762939453
    8. '	k' → logprob: -20.00000762939453
    9. ',k' → logprob: -20.00000762939453
    10. '(' → logprob: -20.25000762939453

Token 1406: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.49087342619895935
    2. ']
' → logprob: -0.9908734560012817
    3. ')]' → logprob: -4.490873336791992
    4. ')]
' → logprob: -5.240873336791992
    5. ']
' → logprob: -9.490873336791992
    6. '               ' → logprob: -9.865873336791992
    7. ')' → logprob: -12.240873336791992
    8. ']

' → logprob: -12.490873336791992
    9. '()]
' → logprob: -13.240873336791992
    10. ')]
' → logprob: -13.240873336791992

Token 1407: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5468891263008118
    2. 'for' → logprob: -0.9218891263008118
    3. ' for' → logprob: -4.921889305114746
    4. '                   ' → logprob: -4.921889305114746
    5. 'token' → logprob: -5.421889305114746
    6. 'tokens' → logprob: -7.046889305114746
    7. '```' → logprob: -7.171889305114746
    8. '   ' → logprob: -7.296889305114746
    9. '           ' → logprob: -7.796889305114746
    10. '       ' → logprob: -7.921889305114746

Token 1408: ' edge' (ID: 11165)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01280580647289753
    2. '               ' → logprob: -5.012805938720703
    3. ' for' → logprob: -5.762805938720703
    4. '                   ' → logprob: -7.262805938720703
    5. 'edge' (adapté à ' edge') → logprob: -7.387805938720703
    6. 'idx' → logprob: -7.887805938720703
    7. 'cost' → logprob: -8.137805938720703
    8. 'u' → logprob: -8.262805938720703
    9. '   ' → logprob: -8.762805938720703
    10. '       ' → logprob: -9.262805938720703

Token 1409: '_list' (ID: 4162)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.19740267097949982
    2. '_list' → logprob: -1.8224027156829834
    3. 'list' → logprob: -5.822402477264404
    4. 'for' → logprob: -6.072402477264404
    5. '_count' → logprob: -6.197402477264404
    6. 'set' → logprob: -6.697402477264404
    7. ' =' → logprob: -6.697402477264404
    8. '_idx' → logprob: -6.822402477264404
    9. 'count' → logprob: -6.822402477264404
    10. '_set' → logprob: -6.947402477264404

Token 1410: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7649364471435547
    2. '=' → logprob: -0.8899364471435547
    3. '.append' → logprob: -2.1399364471435547
    4. '.' → logprob: -5.764936447143555
    5. '=[]' → logprob: -7.014936447143555
    6. '.extend' → logprob: -7.139936447143555
    7. ')' → logprob: -7.389936447143555
    8. '<|end|>' → logprob: -8.014936447143555
    9. ' .' → logprob: -8.639936447143555
    10. '+=' → logprob: -9.639936447143555

Token 1411: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00028731857310049236
    2. '[]
' → logprob: -8.250287055969238
    3. ' []' → logprob: -11.000287055969238
    4. '[(' → logprob: -12.625287055969238
    5. 'same' → logprob: -12.625287055969238
    6. '[]

' → logprob: -14.000287055969238
    7. '[]}' → logprob: -14.125287055969238
    8. '[' → logprob: -14.125287055969238
    9. '[])' → logprob: -16.000288009643555
    10. '[](' → logprob: -16.375288009643555

Token 1412: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05943714454770088
    2. ' for' → logprob: -3.0594370365142822
    3. 'for' → logprob: -4.809437274932861
    4. '                   ' → logprob: -6.559437274932861
    5. '           ' → logprob: -8.559436798095703
    6. ' (' → logprob: -8.934436798095703
    7. '   ' → logprob: -8.934436798095703
    8. '```' → logprob: -9.184436798095703
    9. '       ' → logprob: -9.309436798095703
    10. '                ' → logprob: -9.809436798095703

Token 1413: ' for' (ID: 395)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8282262086868286
    2. 'for' (adapté à ' for') → logprob: -1.3282262086868286
    3. ' for' → logprob: -2.328226089477539
    4. ' (' → logprob: -2.703226089477539
    5. '   ' → logprob: -3.578226089477539
    6. '                   ' → logprob: -3.703226089477539
    7. '(' → logprob: -4.078226089477539
    8. '_' → logprob: -4.328226089477539
    9. '           ' → logprob: -4.953226089477539
    10. 'cost' → logprob: -5.078226089477539

Token 1414: ' _,' (ID: 18042)
  Prédit: '_,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_,' → logprob: -0.022533580660820007
    2. 'cost' → logprob: -3.897533655166626
    3. 'c' → logprob: -6.897533416748047
    4. ' _,' → logprob: -7.897533416748047
    5. '   ' → logprob: -8.772533416748047
    6. '__,' → logprob: -9.272533416748047
    7. '_' → logprob: -9.272533416748047
    8. '_cost' → logprob: -9.522533416748047
    9. 'idx' → logprob: -10.147533416748047
    10. '(_,' → logprob: -10.522533416748047

Token 1415: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.021945970132946968
    2. 'cost' → logprob: -4.271945953369141
    3. '_,' → logprob: -5.021945953369141
    4. ' u' → logprob: -7.146945953369141
    5. 'c' → logprob: -9.02194595336914
    6. '_u' → logprob: -9.02194595336914
    7. ' cost' → logprob: -10.14694595336914
    8. ' _,' → logprob: -10.27194595336914
    9. '_cost' → logprob: -10.64694595336914
    10. '   ' → logprob: -11.77194595336914

Token 1416: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2555915117263794
    2. ',u' → logprob: -1.5055915117263794
    3. ',v' → logprob: -6.25559139251709
    4. ' ,' → logprob: -6.75559139251709
    5. ',user' → logprob: -8.50559139251709
    6. ',w' → logprob: -9.25559139251709
    7. 'u' → logprob: -9.38059139251709
    8. '_,' → logprob: -9.63059139251709
    9. '               ' → logprob: -11.13059139251709
    10. ',p' → logprob: -11.38059139251709

Token 1417: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00023119196703191847
    2. ' v' → logprob: -8.37523078918457
    3. 'u' → logprob: -14.50023078918457
    4. '	v' → logprob: -17.75023078918457
    5. '(v' → logprob: -18.37523078918457
    6. '[v' → logprob: -18.62523078918457
    7. '
' → logprob: -18.62523078918457
    8. 'vj' → logprob: -18.87523078918457
    9. ',v' → logprob: -19.12523078918457
    10. '...' → logprob: -19.50023078918457

Token 1418: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.48027855157852173
    2. 'in' → logprob: -0.9802785515785217
    3. '                   ' → logprob: -5.355278491973877
    4. ',' → logprob: -7.480278491973877
    5. '               ' → logprob: -7.605278491973877
    6. '                ' → logprob: -8.855278968811035
    7. '                    ' → logprob: -8.980278968811035
    8. '   ' → logprob: -10.355278968811035
    9. '                       ' → logprob: -10.480278968811035
    10. '                  ' → logprob: -11.605278968811035

Token 1419: ' same' (ID: 2684)
  Prédit: 'same'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'same' → logprob: -0.00225635664537549
    2. ' same' → logprob: -6.127256393432617
    3. '_same' → logprob: -10.502256393432617
    4. '_,' → logprob: -11.002256393432617
    5. '   ' → logprob: -11.502256393432617
    6. '
' → logprob: -12.377256393432617
    7. 'edges' → logprob: -12.752256393432617
    8. 'cost' → logprob: -13.127256393432617
    9. '               ' → logprob: -13.627256393432617
    10. '_' → logprob: -13.877256393432617

Token 1420: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.03368016332387924
    2. 'cost' → logprob: -3.4086802005767822
    3. 'const' → logprob: -11.658679962158203
    4. '   ' → logprob: -12.658679962158203
    5. '_co' → logprob: -13.158679962158203
    6. '#' → logprob: -13.158679962158203
    7. '(cost' → logprob: -13.158679962158203
    8. '
' → logprob: -13.408679962158203
    9. '[' → logprob: -13.408679962158203
    10. '_c' → logprob: -13.533679962158203

Token 1421: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.0034495643340051174
    2. '_cost' → logprob: -6.253449440002441
    3. 'edges' → logprob: -7.128449440002441
    4. 'cost' → logprob: -7.253449440002441
    5. '[' → logprob: -13.378449440002441
    6. 'Edges' → logprob: -13.503449440002441
    7. '```' → logprob: -14.128449440002441
    8. '_edge' → logprob: -14.253449440002441
    9. '(edges' → logprob: -14.753449440002441
    10. '#' → logprob: -14.753449440002441

Token 1422: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6289233565330505
    2. ',' → logprob: -1.7539234161376953
    3. ':' → logprob: -1.8789234161376953
    4. ':
' → logprob: -2.1289234161376953
    5. '               ' → logprob: -4.878923416137695
    6. '   ' → logprob: -5.753923416137695
    7. '.append' → logprob: -6.128923416137695
    8. ' in' → logprob: -6.253923416137695
    9. '                       ' → logprob: -6.753923416137695
    10. '       ' → logprob: -7.128923416137695

Token 1423: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0011864188127219677
    2. '                ' → logprob: -8.00118637084961
    3. '   ' → logprob: -8.25118637084961
    4. '               ' → logprob: -8.87618637084961
    5. '                    ' → logprob: -8.87618637084961
    6. '    ' → logprob: -9.37618637084961
    7. '                       ' → logprob: -10.00118637084961
    8. '           ' → logprob: -10.12618637084961
    9. '                  ' → logprob: -10.12618637084961
    10. '       ' → logprob: -10.62618637084961

Token 1424: ' ru' (ID: 7225)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.6558696627616882
    2. 'edge' → logprob: -1.030869722366333
    3. '                   ' → logprob: -3.280869722366333
    4. ' edge' → logprob: -3.405869722366333
    5. ' graph' → logprob: -3.655869722366333
    6. ' u' → logprob: -4.530869483947754
    7. 'u' → logprob: -4.655869483947754
    8. '   ' → logprob: -6.030869483947754
    9. 'cost' → logprob: -6.405869483947754
    10. '               ' → logprob: -7.405869483947754

Token 1425: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03823966160416603
    2. ' =' → logprob: -3.2882397174835205
    3. ',' → logprob: -8.663239479064941
    4. '=root' → logprob: -11.038239479064941
    5. '=
' → logprob: -11.788239479064941
    6. ' =
' → logprob: -15.038239479064941
    7. '=u' → logprob: -15.038239479064941
    8. '=edge' → logprob: -15.413239479064941
    9. ']' → logprob: -15.663239479064941
    10. '=user' → logprob: -15.913239479064941

Token 1426: ' uf' (ID: 35772)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.029758475720882416
    2. ' root' → logprob: -3.5297584533691406
    3. 'uf' → logprob: -12.40475845336914
    4. '[root' → logprob: -13.52975845336914
    5. '(root' → logprob: -13.77975845336914
    6. ' uf' → logprob: -15.27975845336914
    7. 'mod' → logprob: -15.27975845336914
    8. '	root' → logprob: -15.52975845336914
    9. '   ' → logprob: -15.90475845336914
    10. '                   ' → logprob: -15.90475845336914

Token 1427: '_local' (ID: 29253)
  Prédit: '_local'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_local' → logprob: -3.5716304410016164e-05
    2. 'local' → logprob: -10.250035285949707
    3. '_LOCAL' → logprob: -15.250035285949707
    4. ' лок' → logprob: -17.375036239624023
    5. 'Local' → logprob: -17.500036239624023
    6. '_root' → logprob: -17.625036239624023
    7. '_loc' → logprob: -18.500036239624023
    8. 'u' → logprob: -19.125036239624023
    9. '	local' → logprob: -19.125036239624023
    10. ' local' → logprob: -19.250036239624023

Token 1428: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.010156338103115559
    2. 'find' → logprob: -4.635156154632568
    3. '.' → logprob: -8.010156631469727
    4. 'u' → logprob: -10.385156631469727
    5. '.u' → logprob: -11.760156631469727
    6. '```' → logprob: -12.510156631469727
    7. 'root' → logprob: -12.635156631469727
    8. '=find' → logprob: -12.760156631469727
    9. '_find' → logprob: -12.885156631469727
    10. '	find' → logprob: -13.510156631469727

Token 1429: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -5.931863051955588e-05
    2. 'u' → logprob: -9.750059127807617
    3. '[u' → logprob: -14.250059127807617
    4. '(' → logprob: -15.375059127807617
    5. '(
' → logprob: -16.375059127807617
    6. '	u' → logprob: -17.375059127807617
    7. ' u' → logprob: -17.500059127807617
    8. '(user' → logprob: -18.625059127807617
    9. ')' → logprob: -18.875059127807617
    10. ',u' → logprob: -19.000059127807617

Token 1430: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5768725275993347
    2. ')' → logprob: -0.8268725275993347
    3. '                   ' → logprob: -7.0768723487854
    4. '),' → logprob: -9.951872825622559
    5. ')
' → logprob: -11.201872825622559
    6. ');' → logprob: -12.701872825622559
    7. '               ' → logprob: -12.826872825622559
    8. ',' → logprob: -12.826872825622559
    9. '),
' → logprob: -12.826872825622559
    10. ' )
' → logprob: -12.951872825622559

Token 1431: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.015882911160588264
    2. '                    ' → logprob: -4.765882968902588
    3. 'edge' → logprob: -5.515882968902588
    4. ' edge' → logprob: -7.015882968902588
    5. ',' → logprob: -7.765882968902588
    6. ' ,' → logprob: -7.890882968902588
    7. ' v' → logprob: -8.39088249206543
    8. '                    
' → logprob: -8.39088249206543
    9. 'v' → logprob: -9.14088249206543
    10. '                ' → logprob: -9.14088249206543

Token 1432: ' rv' (ID: 37141)
  Prédit: 'rv'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rv' (adapté à ' rv') → logprob: -1.1875571544806007e-05
    2. ' rv' → logprob: -11.750011444091797
    3. 'cv' → logprob: -12.625011444091797
    4. 'v' → logprob: -15.250011444091797
    5. 'vv' → logprob: -15.625011444091797
    6. '(rv' → logprob: -16.375011444091797
    7. '   ' → logprob: -17.000011444091797
    8. '               ' → logprob: -17.875011444091797
    9. '
' → logprob: -18.000011444091797
    10. '       ' → logprob: -18.125011444091797

Token 1433: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.24783214926719666
    2. ' =' → logprob: -1.747832179069519
    3. ',' → logprob: -3.8728320598602295
    4. '                   ' → logprob: -4.997832298278809
    5. ')' → logprob: -5.247832298278809
    6. 'root' → logprob: -5.747832298278809
    7. '),' → logprob: -6.497832298278809
    8. '=root' → logprob: -6.622832298278809
    9. '(root' → logprob: -6.622832298278809
    10. '[root' → logprob: -6.747832298278809

Token 1434: ' uf' (ID: 35772)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.001972053898498416
    2. 'root' → logprob: -6.251972198486328
    3. ' uf' → logprob: -10.876972198486328
    4. 'ru' → logprob: -11.876972198486328
    5. 'rf' → logprob: -12.876972198486328
    6. 'ub' → logprob: -12.876972198486328
    7. 'ufs' → logprob: -13.376972198486328
    8. 'ufi' → logprob: -13.626972198486328
    9. 'ur' → logprob: -14.001972198486328
    10. 'uff' → logprob: -14.126972198486328

Token 1435: '_local' (ID: 29253)
  Prédit: '_local'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_local' → logprob: -0.002215561456978321
    2. 'local' → logprob: -6.127215385437012
    3. 'ocal' → logprob: -10.627215385437012
    4. 'Local' → logprob: -13.127215385437012
    5. '_LOCAL' → logprob: -13.752215385437012
    6. '_loc' → logprob: -14.877215385437012
    7. 'loc' → logprob: -15.127215385437012
    8. ' лок' → logprob: -15.252215385437012
    9. 'rv' → logprob: -15.377215385437012
    10. '_root' → logprob: -15.377215385437012

Token 1436: '.find' (ID: 4231)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.0379536934196949
    2. '.find' → logprob: -3.4129536151885986
    3. '
' → logprob: -6.537953853607178
    4. 'if' → logprob: -7.037953853607178
    5. '_find' → logprob: -8.41295337677002
    6. 'root' → logprob: -8.66295337677002
    7. '                   ' → logprob: -8.78795337677002
    8. '               ' → logprob: -8.78795337677002
    9. ')
' → logprob: -8.91295337677002
    10. 'r' → logprob: -8.91295337677002

Token 1437: '(v' (ID: 6932)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.47426798939704895
    2. '(v' → logprob: -0.9742679595947266
    3. '(rv' → logprob: -9.474267959594727
    4. '(u' → logprob: -10.099267959594727
    5. 'rv' → logprob: -10.224267959594727
    6. 'root' → logprob: -10.849267959594727
    7. ' v' → logprob: -12.224267959594727
    8. 'u' → logprob: -12.599267959594727
    9. '(root' → logprob: -12.724267959594727
    10. '[v' → logprob: -12.849267959594727

Token 1438: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.7217094898223877
    2. '                   ' → logprob: -1.0967094898223877
    3. ')' → logprob: -1.7217094898223877
    4. '')
' → logprob: -7.846709251403809
    5. '')' → logprob: -8.096709251403809
    6. '):
' → logprob: -8.471709251403809
    7. '               ' → logprob: -8.596709251403809
    8. '),' → logprob: -9.971709251403809
    9. ' )
' → logprob: -10.596709251403809
    10. '                       ' → logprob: -10.721709251403809

Token 1439: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.006021703127771616
    2. '               ' → logprob: -6.381021499633789
    3. '                    ' → logprob: -6.631021499633789
    4. '                  ' → logprob: -7.631021499633789
    5. ')' → logprob: -7.756021499633789
    6. '[' → logprob: -8.131021499633789
    7. '                ' → logprob: -8.631021499633789
    8. ' if' → logprob: -8.756021499633789
    9. '           ' → logprob: -8.881021499633789
    10. '                    
' → logprob: -8.881021499633789

Token 1440: ' u' (ID: 337)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5906796455383301
    2. ' if' → logprob: -1.09067964553833
    3. 'if' → logprob: -2.21567964553833
    4. 'edge' → logprob: -7.96567964553833
    5. ' edge' → logprob: -8.715679168701172
    6. '               ' → logprob: -9.090679168701172
    7. '                       ' → logprob: -9.590679168701172
    8. '                    ' → logprob: -9.840679168701172
    9. '           ' → logprob: -10.465679168701172
    10. 'graph' → logprob: -10.840679168701172

Token 1441: '0' (ID: 15)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006396073382347822
    2. ' =' → logprob: -5.131396293640137
    3. ',' → logprob: -8.756396293640137
    4. '_idx' → logprob: -8.756396293640137
    5. '=edge' → logprob: -9.256396293640137
    6. '=u' → logprob: -11.131396293640137
    7. '=
' → logprob: -11.756396293640137
    8. 'u' → logprob: -12.006396293640137
    9. ')' → logprob: -12.006396293640137
    10. ']' → logprob: -12.006396293640137

Token 1442: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18442402780056
    2. '=' → logprob: -1.8094240427017212
    3. ')' → logprob: -5.809423923492432
    4. ',' → logprob: -7.559423923492432
    5. '=u' → logprob: -7.809423923492432
    6. 'u' → logprob: -8.05942440032959
    7. ' u' → logprob: -8.93442440032959
    8. '=root' → logprob: -10.30942440032959
    9. ']' → logprob: -10.43442440032959
    10. ',u' → logprob: -10.68442440032959

Token 1443: ' root' (ID: 6577)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -7.493430894101039e-05
    2. ' root' → logprob: -9.500075340270996
    3. '(root' → logprob: -20.12507438659668
    4. '[root' → logprob: -21.12507438659668
    5. 'row' → logprob: -22.25007438659668
    6. '   ' → logprob: -22.50007438659668
    7. '	root' → logprob: -22.87507438659668
    8. 'edge' → logprob: -23.25007438659668
    9. '=root' → logprob: -23.37507438659668
    10. '
' → logprob: -24.00007438659668

Token 1444: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.00019412329129409045
    2. 'idx' → logprob: -9.500194549560547
    3. 's' → logprob: -10.375194549560547
    4. '[u' → logprob: -10.375194549560547
    5. 'u' → logprob: -10.875194549560547
    6. 'Idx' → logprob: -11.875194549560547
    7. '_' → logprob: -11.875194549560547
    8. '[' → logprob: -12.000194549560547
    9. '[idx' → logprob: -12.750194549560547
    10. '_index' → logprob: -13.250194549560547

Token 1445: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0013360745506361127
    2. '(' → logprob: -6.626336097717285
    3. 'ru' → logprob: -11.876336097717285
    4. '[u' → logprob: -13.001336097717285
    5. '[
' → logprob: -14.126336097717285
    6. 'u' → logprob: -16.87633514404297
    7. '[(' → logprob: -17.12633514404297
    8. '{' → logprob: -17.25133514404297
    9. '[r' → logprob: -17.75133514404297
    10. '   ' → logprob: -17.87633514404297

Token 1446: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -6.704273118884885e-07
    2. ' ru' → logprob: -15.500000953674316
    3. 'ру' → logprob: -16.875
    4. 'u' → logprob: -17.25
    5. 'rum' → logprob: -17.25
    6. '_ru' → logprob: -17.25
    7. '   ' → logprob: -17.75
    8. 'ro' → logprob: -18.25
    9. '```' → logprob: -18.25
    10. '(' → logprob: -18.5

Token 1447: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.019060879945755005
    2. ']' → logprob: -4.019061088562012
    3. '                   ' → logprob: -7.394061088562012
    4. ')
' → logprob: -8.269061088562012
    5. ')' → logprob: -11.144061088562012
    6. '               ' → logprob: -11.894061088562012
    7. ']
' → logprob: -12.019061088562012
    8. ' ]
' → logprob: -12.394061088562012
    9. 'u' → logprob: -13.519061088562012
    10. '           ' → logprob: -14.394061088562012

Token 1448: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1814907342195511
    2. 'v' → logprob: -2.431490659713745
    3. ' v' → logprob: -2.681490659713745
    4. '<|end|>' → logprob: -5.681490898132324
    5. ' 
' → logprob: -6.306490898132324
    6. '               ' → logprob: -7.431490898132324
    7. '                    ' → logprob: -7.556490898132324
    8. ',' → logprob: -7.931490898132324
    9. '                    
' → logprob: -7.931490898132324
    10. ' ' → logprob: -8.056490898132324

Token 1449: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -8.554343366995454e-05
    2. '                   ' → logprob: -9.500085830688477
    3. ' v' → logprob: -11.500085830688477
    4. '                    ' → logprob: -15.000085830688477
    5. '                  ' → logprob: -17.500085830688477
    6. '               ' → logprob: -17.750085830688477
    7. '	v' → logprob: -17.875085830688477
    8. '                       ' → logprob: -18.125085830688477
    9. '   ' → logprob: -18.250085830688477
    10. '                 ' → logprob: -18.875085830688477

Token 1450: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09987413883209229
    2. '[u' → logprob: -2.7248740196228027
    3. '[v' → logprob: -3.8498740196228027
    4. '[' → logprob: -5.599874019622803
    5. ' =' → logprob: -6.349874019622803
    6. '=' → logprob: -7.099874019622803
    7. '_' → logprob: -7.724874019622803
    8. ' v' → logprob: -7.849874019622803
    9. ' u' → logprob: -8.224874496459961
    10. 'u' → logprob: -8.724874496459961

Token 1451: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8590068817138672
    2. ' =' → logprob: -0.8590068817138672
    3. ' u' → logprob: -3.234006881713867
    4. '[' → logprob: -3.359006881713867
    5. ' v' → logprob: -3.359006881713867
    6. ')' → logprob: -4.109006881713867
    7. '[u' → logprob: -4.484006881713867
    8. ']' → logprob: -4.734006881713867
    9. '(u' → logprob: -6.484006881713867
    10. '=u' → logprob: -6.484006881713867

Token 1452: ' root' (ID: 6577)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.00012403888104017824
    2. ' root' → logprob: -9.000123977661133
    3. 'u' → logprob: -14.250123977661133
    4. '(root' → logprob: -19.625123977661133
    5. '[root' → logprob: -19.750123977661133
    6. ' u' → logprob: -20.000123977661133
    7. '	root' → logprob: -21.375123977661133
    8. 'rv' → logprob: -21.500123977661133
    9. ' ' → logprob: -22.000123977661133
    10. '=root' → logprob: -22.625123977661133

Token 1453: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.0011872532777488232
    2. 'idx' → logprob: -7.251187324523926
    3. '[u' → logprob: -7.751187324523926
    4. '[' → logprob: -10.876187324523926
    5. '[v' → logprob: -11.376187324523926
    6. 'Idx' → logprob: -12.126187324523926
    7. 'u' → logprob: -12.376187324523926
    8. '[root' → logprob: -12.501187324523926
    9. '[idx' → logprob: -13.376187324523926
    10. '[r' → logprob: -14.501187324523926

Token 1454: '[' (ID: 58)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.0009205120149999857
    2. '[v' → logprob: -7.250920295715332
    3. '[' → logprob: -8.500920295715332
    4. 'u' → logprob: -11.875920295715332
    5. '(u' → logprob: -16.37592124938965
    6. '[
' → logprob: -16.50092124938965
    7. ' u' → logprob: -17.37592124938965
    8. '```' → logprob: -17.75092124938965
    9. '[r' → logprob: -18.00092124938965
    10. '	u' → logprob: -18.00092124938965

Token 1455: 'rv' (ID: 17030)
  Prédit: 'rv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rv' → logprob: -0.00021998681768309325
    2. 'ru' → logprob: -8.50022029876709
    3. 'u' → logprob: -12.00022029876709
    4. 'uv' → logprob: -12.25022029876709
    5. ' rv' → logprob: -13.12522029876709
    6. '(rv' → logprob: -13.62522029876709
    7. 'root' → logprob: -13.75022029876709
    8. 'vu' → logprob: -15.00022029876709
    9. 'v' → logprob: -15.12522029876709
    10. '[' → logprob: -15.87522029876709

Token 1456: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06032523885369301
    2. ')' → logprob: -2.9353251457214355
    3. '<|end|>' → logprob: -5.5603251457214355
    4. ']
' → logprob: -7.6853251457214355
    5. '               ' → logprob: -7.8103251457214355
    6. '                   ' → logprob: -8.185325622558594
    7. ' ]' → logprob: -9.185325622558594
    8. ')]' → logprob: -9.810325622558594
    9. '<|end|>' → logprob: -9.935325622558594
    10. '])' → logprob: -10.185325622558594

Token 1457: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.016665415838360786
    2. '               ' → logprob: -5.516665458679199
    3. '                    ' → logprob: -5.516665458679199
    4. '                    
' → logprob: -6.266665458679199
    5. ' 
' → logprob: -7.141665458679199
    6. '           ' → logprob: -7.391665458679199
    7. ''' → logprob: -7.516665458679199
    8. ',' → logprob: -7.641665458679199
    9. '[' → logprob: -7.891665458679199
    10. '                       ' → logprob: -7.891665458679199

Token 1458: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3614272475242615
    2. 'edge' → logprob: -1.8614273071289062
    3. ' edge' → logprob: -2.8614273071289062
    4. 'graph' → logprob: -3.3614273071289062
    5. ' if' → logprob: -3.4864273071289062
    6. ' graph' → logprob: -4.236427307128906
    7. 'if' (adapté à ' if') → logprob: -4.986427307128906
    8. '               ' → logprob: -5.861427307128906
    9. '                    ' → logprob: -8.361427307128906
    10. '                       ' → logprob: -8.736427307128906

Token 1459: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.00012713817704934627
    2. ' u' → logprob: -9.000126838684082
    3. '	u' → logprob: -13.250126838684082
    4. '   ' → logprob: -13.625126838684082
    5. '(u' → logprob: -14.750126838684082
    6. '[u' → logprob: -15.750126838684082
    7. '                   ' → logprob: -17.1251277923584
    8. '    ' → logprob: -17.7501277923584
    9. '
' → logprob: -17.7501277923584
    10. ' ' → logprob: -17.8751277923584

Token 1460: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006129555404186249
    2. ' !=' → logprob: -8.12561321258545
    3. '!=' → logprob: -8.37561321258545
    4. '_' → logprob: -9.37561321258545
    5. '```' → logprob: -15.00061321258545
    6. '()!=' → logprob: -15.50061321258545
    7. ')!=' → logprob: -15.75061321258545
    8. ']!=' → logprob: -16.000612258911133
    9. 'u' → logprob: -16.125612258911133
    10. ' ' → logprob: -16.250612258911133

Token 1461: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.5296846032142639
    2. '!=' → logprob: -0.9046846032142639
    3. '<' → logprob: -5.529684543609619
    4. ' <' → logprob: -6.154684543609619
    5. '<v' → logprob: -8.904685020446777
    6. '>' → logprob: -9.279685020446777
    7. '<u' → logprob: -9.404685020446777
    8. '<>' → logprob: -10.279685020446777
    9. ' >' → logprob: -10.404685020446777
    10. ')!=' → logprob: -11.654685020446777

Token 1462: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -7.493430894101039e-05
    2. ' v' → logprob: -9.500075340270996
    3. '	v' → logprob: -20.62507438659668
    4. ')v' → logprob: -22.25007438659668
    5. 'u' → logprob: -23.12507438659668
    6. '   ' → logprob: -23.50007438659668
    7. 'vq' → logprob: -23.75007438659668
    8. ' ' → logprob: -23.75007438659668
    9. '                   ' → logprob: -24.75007438659668
    10. '[v' → logprob: -24.87507438659668

Token 1463: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.650518920039758e-06
    2. 'v' → logprob: -13.250003814697266
    3. ' ' → logprob: -14.000003814697266
    4. 'u' → logprob: -15.250003814697266
    5. '1' → logprob: -15.750003814697266
    6. '```' → logprob: -15.875003814697266
    7. '   ' → logprob: -16.125003814697266
    8. ' v' → logprob: -16.625003814697266
    9. 'o' → logprob: -16.750003814697266
    10. '                   ' → logprob: -17.250003814697266

Token 1464: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.3127802610397339
    2. ':' → logprob: -1.8127802610397339
    3. ':
' → logprob: -3.0627803802490234
    4. ' and' → logprob: -3.4377803802490234
    5. '                   ' → logprob: -3.9377803802490234
    6. '):
' → logprob: -6.312780380249023
    7. ')' → logprob: -6.562780380249023
    8. '                           ' → logprob: -6.937780380249023
    9. ',' → logprob: -7.812780380249023
    10. ' :' → logprob: -7.937780380249023

Token 1465: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.03329949826002121
    2. '                   ' → logprob: -3.533299446105957
    3. '                    ' → logprob: -6.908299446105957
    4. ' and' → logprob: -7.033299446105957
    5. '                        ' → logprob: -7.783299446105957
    6. '                           ' → logprob: -7.908299446105957
    7. ''' → logprob: -8.658299446105957
    8. '                               ' → logprob: -8.783299446105957
    9. '                        
' → logprob: -9.783299446105957
    10. ':
' → logprob: -9.908299446105957

Token 1466: ' graph' (ID: 7465)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.10687197744846344
    2. ' edge' → logprob: -2.731872081756592
    3. 'graph' (adapté à ' graph') → logprob: -3.606872081756592
    4. '                           ' → logprob: -5.231872081756592
    5. '                       ' → logprob: -6.231872081756592
    6. ' graph' → logprob: -6.606872081756592
    7. '                   ' → logprob: -8.481871604919434
    8. '(edge' → logprob: -8.856871604919434
    9. '                               ' → logprob: -10.231871604919434
    10. ' (' → logprob: -11.106871604919434

Token 1467: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -14.000000953674316
    3. 'u' → logprob: -16.75
    4. '                   ' → logprob: -17.75
    5. '[user' → logprob: -17.75
    6. '[v' → logprob: -18.0
    7. ' [' → logprob: -18.5
    8. '```' → logprob: -18.75
    9. '][' → logprob: -19.0
    10. '=u' → logprob: -19.125

Token 1468: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001640876434976235
    2. '[u' → logprob: -9.125164031982422
    3. '][' → logprob: -10.875164031982422
    4. '_' → logprob: -11.625164031982422
    5. ']' → logprob: -12.000164031982422
    6. '```' → logprob: -12.375164031982422
    7. '
' → logprob: -12.750164031982422
    8. '[' → logprob: -13.500164031982422
    9. '=' → logprob: -13.500164031982422
    10. 'u' → logprob: -13.625164031982422

Token 1469: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.035993319004774094
    2. '.append' → logprob: -3.4109933376312256
    3. '.' → logprob: -7.1609930992126465
    4. '                       ' → logprob: -7.1609930992126465
    5. '.setdefault' → logprob: -7.7859930992126465
    6. '                           ' → logprob: -9.285993576049805
    7. '[' → logprob: -9.660993576049805
    8. '           ' → logprob: -10.160993576049805
    9. '                   ' → logprob: -10.285993576049805
    10. ').' → logprob: -10.785993576049805

Token 1470: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -9.088346359931165e-07
    2. ' append' → logprob: -14.250000953674316
    3. '.append' → logprob: -15.625000953674316
    4. '_append' → logprob: -17.25
    5. '	append' → logprob: -17.875
    6. 'Append' → logprob: -18.75
    7. 'app' → logprob: -19.25
    8. 'appen' → logprob: -19.875
    9. 'add' → logprob: -20.5
    10. 'extend' → logprob: -21.125

Token 1471: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.005336693488061428
    2. '(' → logprob: -5.255336761474609
    3. '((' → logprob: -9.50533676147461
    4. '(u' → logprob: -10.88033676147461
    5. ' (' → logprob: -11.88033676147461
    6. 'v' → logprob: -13.50533676147461
    7. '(None' → logprob: -14.63033676147461
    8. '(True' → logprob: -15.50533676147461
    9. '   ' → logprob: -15.75533676147461
    10. '(
' → logprob: -16.00533676147461

Token 1472: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010032298043370247
    2. '_' → logprob: -5.2600321769714355
    3. '[u' → logprob: -6.1350321769714355
    4. ')' → logprob: -6.2600321769714355
    5. '_)' → logprob: -8.010032653808594
    6. 'u' → logprob: -8.885032653808594
    7. '[' → logprob: -9.135032653808594
    8. ')_' → logprob: -9.885032653808594
    9. '(u' → logprob: -11.135032653808594
    10. '```' → logprob: -11.510032653808594

Token 1473: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20485295355319977
    2. ')
' → logprob: -1.8298529386520386
    3. '                       ' → logprob: -3.704853057861328
    4. '<|end|>' → logprob: -9.704853057861328
    5. '),' → logprob: -10.204853057861328
    6. '                           ' → logprob: -10.579853057861328
    7. '                   ' → logprob: -10.579853057861328
    8. '')' → logprob: -12.329853057861328
    9. ',' → logprob: -12.579853057861328
    10. ')
' → logprob: -12.704853057861328

Token 1474: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.010745828039944172
    2. '<|end|>' → logprob: -5.260746002197266
    3. '                           ' → logprob: -7.010746002197266
    4. '                   ' → logprob: -7.010746002197266
    5. '                        ' → logprob: -7.510746002197266
    6. '               ' → logprob: -7.510746002197266
    7. ')' → logprob: -7.510746002197266
    8. '                        
' → logprob: -7.635746002197266
    9. ' ' → logprob: -8.010746002197266
    10. ',' → logprob: -8.135746002197266

Token 1475: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.5761348009109497
    2. 'graph' (adapté à ' graph') → logprob: -0.8261348009109497
    3. '                       ' → logprob: -9.32613468170166
    4. '	graph' → logprob: -9.32613468170166
    5. ' ' → logprob: -12.20113468170166
    6. '                        ' → logprob: -12.82613468170166
    7. '(graph' → logprob: -13.57613468170166
    8. '                           ' → logprob: -13.57613468170166
    9. '```' → logprob: -13.70113468170166
    10. 'Graph' → logprob: -13.82613468170166

Token 1476: '[v' (ID: 36561)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -5.383526149671525e-05
    2. '[' → logprob: -9.875053405761719
    3. 'u' → logprob: -13.375053405761719
    4. '.append' → logprob: -14.625053405761719
    5. '[v' → logprob: -15.750053405761719
    6. '[user' → logprob: -16.62505340576172
    7. '[
' → logprob: -16.75005340576172
    8. '(u' → logprob: -17.00005340576172
    9. '   ' → logprob: -17.50005340576172
    10. '[]' → logprob: -17.87505340576172

Token 1477: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.7120533811976202e-05
    2. 'u' → logprob: -11.375017166137695
    3. '[' → logprob: -12.750017166137695
    4. '[u' → logprob: -13.125017166137695
    5. '1' → logprob: -15.625017166137695
    6. 'v' → logprob: -16.250017166137695
    7. '۰' → logprob: -16.250017166137695
    8. '   ' → logprob: -16.500017166137695
    9. '```' → logprob: -16.750017166137695
    10. 'o' → logprob: -17.375017166137695

Token 1478: '].' (ID: 1651)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.02980499155819416
    2. ').' → logprob: -3.9048049449920654
    3. '].' → logprob: -5.5298051834106445
    4. '.' → logprob: -5.6548051834106445
    5. ' .' → logprob: -6.4048051834106445
    6. '.setdefault' → logprob: -10.404805183410645
    7. '.app' → logprob: -11.029805183410645
    8. ')' → logprob: -11.529805183410645
    9. '}.' → logprob: -12.154805183410645
    10. '>.' → logprob: -12.279805183410645

Token 1479: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.0280383548888494e-06
    2. ' append' → logprob: -14.000000953674316
    3. '.append' → logprob: -16.125001907348633
    4. '	append' → logprob: -17.250001907348633
    5. 'appen' → logprob: -18.000001907348633
    6. 'app' → logprob: -20.125001907348633
    7. '_append' → logprob: -20.250001907348633
    8. 'Append' → logprob: -21.750001907348633
    9. '```' → logprob: -22.625001907348633
    10. '0' → logprob: -23.625001907348633

Token 1480: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -7.107425062713446e-06
    2. 'u' → logprob: -11.875006675720215
    3. '(' → logprob: -16.00000762939453
    4. '[u' → logprob: -17.00000762939453
    5. '(
' → logprob: -18.12500762939453
    6. '	u' → logprob: -19.87500762939453
    7. ' (' → logprob: -19.87500762939453
    8. ' u' → logprob: -20.00000762939453
    9. '(v' → logprob: -20.12500762939453
    10. '   ' → logprob: -20.87500762939453

Token 1481: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001783475512638688
    2. 'u' → logprob: -6.37678337097168
    3. ')' → logprob: -10.12678337097168
    4. '(u' → logprob: -11.12678337097168
    5. '[u' → logprob: -11.25178337097168
    6. '1' → logprob: -12.00178337097168
    7. ' u' → logprob: -12.50178337097168
    8. 'v' → logprob: -14.00178337097168
    9. '=u' → logprob: -14.00178337097168
    10. '[' → logprob: -14.25178337097168

Token 1482: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009299000725150108
    2. '                       ' → logprob: -4.759298801422119
    3. '<|end|>' → logprob: -7.884298801422119
    4. '                   ' → logprob: -8.884299278259277
    5. '               ' → logprob: -10.259299278259277
    6. ',' → logprob: -10.634299278259277
    7. ')
' → logprob: -11.009299278259277
    8. '()' → logprob: -11.509299278259277
    9. '                           ' → logprob: -11.509299278259277
    10. '```' → logprob: -11.634299278259277

Token 1483: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.07836570590734482
    2. ')' → logprob: -3.3283658027648926
    3. '<|end|>' → logprob: -4.078365802764893
    4. '               ' → logprob: -5.078365802764893
    5. '                   ' → logprob: -5.203365802764893
    6. ',' → logprob: -5.703365802764893
    7. '```' → logprob: -5.703365802764893
    8. '                        
' → logprob: -6.453365802764893
    9. '                           ' → logprob: -7.203365802764893
    10. '       ' → logprob: -7.578365802764893

Token 1484: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' (adapté à ' edge') → logprob: -0.005950959865003824
    2. ' edge' → logprob: -5.130950927734375
    3. '(edge' → logprob: -10.880950927734375
    4. 'e' → logprob: -13.505950927734375
    5. '                   ' → logprob: -14.755950927734375
    6. ' (' → logprob: -14.880950927734375
    7. '(' → logprob: -15.505950927734375
    8. '('' → logprob: -15.755950927734375
    9. 'cost' → logprob: -15.880950927734375
    10. '       ' → logprob: -15.880950927734375

Token 1485: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -7.588793960167095e-05
    2. 's' → logprob: -9.625076293945312
    3. '_count' → logprob: -12.625076293945312
    4. 'list' → logprob: -13.000076293945312
    5. ' =' → logprob: -13.750076293945312
    6. 'List' → logprob: -14.625076293945312
    7. 'cost' → logprob: -14.750076293945312
    8. '_cost' → logprob: -14.875076293945312
    9. '_id' → logprob: -15.000076293945312
    10. '_' → logprob: -15.125076293945312

Token 1486: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.011174675077199936
    2. '.' → logprob: -4.51117467880249
    3. ' .' → logprob: -9.386174201965332
    4. ').' → logprob: -10.761174201965332
    5. 'append' → logprob: -12.261174201965332
    6. ',' → logprob: -12.261174201965332
    7. '.app' → logprob: -12.761174201965332
    8. ')' → logprob: -13.511174201965332
    9. 'Append' → logprob: -13.511174201965332
    10. '.Append' → logprob: -13.886174201965332

Token 1487: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.13259370625019073
    2. '(' → logprob: -2.1325936317443848
    3. '(u' → logprob: -5.757593631744385
    4. '(_,' → logprob: -6.132593631744385
    5. '(cost' → logprob: -8.632594108581543
    6. '(c' → logprob: -9.507594108581543
    7. '(_)' → logprob: -10.257594108581543
    8. '((_' → logprob: -11.007594108581543
    9. '([' → logprob: -12.132594108581543
    10. '(None' → logprob: -13.257594108581543

Token 1488: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.11170350760221481
    2. '1' → logprob: -2.486703395843506
    3. '0' → logprob: -3.986703395843506
    4. '(u' → logprob: -5.986703395843506
    5. 'cost' → logprob: -7.361703395843506
    6. '(' → logprob: -7.861703395843506
    7. ')' → logprob: -8.486703872680664
    8. 'c' → logprob: -10.111703872680664
    9. ' u' → logprob: -10.861703872680664
    10. '(cost' → logprob: -10.861703872680664

Token 1489: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008593888953328133
    2. ',' → logprob: -4.883594036102295
    3. 'cost' → logprob: -8.258593559265137
    4. '_cost' → logprob: -8.508593559265137
    5. ' ,' → logprob: -9.258593559265137
    6. '_,' → logprob: -9.633593559265137
    7. '[' → logprob: -9.758593559265137
    8. ')' → logprob: -9.883593559265137
    9. ',v' → logprob: -10.383593559265137
    10. '',' → logprob: -10.508593559265137

Token 1490: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014220185112208128
    2. ',v' → logprob: -6.626421928405762
    3. ',
' → logprob: -10.126421928405762
    4. ' ,' → logprob: -10.251421928405762
    5. '<|end|>' → logprob: -11.751421928405762
    6. ',u' → logprob: -12.626421928405762
    7. ')' → logprob: -13.126421928405762
    8. ',user' → logprob: -13.626421928405762
    9. '),' → logprob: -13.751421928405762
    10. '',' → logprob: -14.126421928405762

Token 1491: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -2.339278580620885e-06
    2. ' v' → logprob: -13.000001907348633
    3. ')v' → logprob: -17.000001907348633
    4. '                   ' → logprob: -19.875001907348633
    5. '	v' → logprob: -20.375001907348633
    6. 'u' → logprob: -20.625001907348633
    7. '(v' → logprob: -20.875001907348633
    8. '
' → logprob: -21.375001907348633
    9. ')' → logprob: -21.500001907348633
    10. 've' → logprob: -21.875001907348633

Token 1492: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019393461989238858
    2. '1' → logprob: -6.251939296722412
    3. 'v' → logprob: -12.00193977355957
    4. '_' → logprob: -13.50193977355957
    5. ')' → logprob: -14.25193977355957
    6. 'o' → logprob: -14.50193977355957
    7. '_list' → logprob: -14.62693977355957
    8. 'u' → logprob: -14.87693977355957
    9. ',' → logprob: -14.87693977355957
    10. '```' → logprob: -16.12693977355957

Token 1493: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00043710620957426727
    2. ',' → logprob: -8.500436782836914
    3. '))' → logprob: -8.625436782836914
    4. '),' → logprob: -10.500436782836914
    5. ')
' → logprob: -11.750436782836914
    6. ')}' → logprob: -12.500436782836914
    7. ',)' → logprob: -12.625436782836914
    8. '<|end|>' → logprob: -12.625436782836914
    9. ')]' → logprob: -13.625436782836914
    10. ')))' → logprob: -13.750436782836914

Token 1494: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9318121671676636
    2. '<|end|>' → logprob: -0.9318121671676636
    3. ')' → logprob: -2.431812286376953
    4. '                        
' → logprob: -3.556812286376953
    5. '                       ' → logprob: -3.556812286376953
    6. '                   ' → logprob: -4.181812286376953
    7. ',' → logprob: -4.431812286376953
    8. '<|end|>' → logprob: -5.431812286376953
    9. '       ' → logprob: -5.806812286376953
    10. '```' → logprob: -5.806812286376953

Token 1495: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7619981169700623
    2. '
' → logprob: -1.261998176574707
    3. 'import' → logprob: -1.886998176574707
    4. '                
' → logprob: -3.136998176574707
    5. '#' (adapté à ' #') → logprob: -3.636998176574707
    6. 'from' → logprob: -4.386998176574707
    7. '\n' → logprob: -5.886998176574707
    8. '        
' → logprob: -6.511998176574707
    9. '  
' → logprob: -6.636998176574707
    10. '\
' → logprob: -6.761998176574707

Token 1496: ' En' (ID: 2130)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.49225085973739624
    2. 'from' → logprob: -1.492250919342041
    3. '#' → logprob: -2.492250919342041
    4. '               ' → logprob: -2.617250919342041
    5. '
' → logprob: -5.617250919342041
    6. '                
' → logprob: -6.492250919342041
    7. ' from' → logprob: -7.242250919342041
    8. 'n' → logprob: -7.742250919342041
    9. 'def' → logprob: -8.117250442504883
    10. 'count' → logprob: -8.242250442504883

Token 1497: 'lever' (ID: 43558)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5259541869163513
    2. '#' → logprob: -1.900954246520996
    3. 'import' → logprob: -1.900954246520996
    4. 'suite' → logprob: -2.900954246520996
    5. 'fait' → logprob: -4.900954246520996
    6. 'continue' → logprob: -5.025954246520996
    7. 'continu' → logprob: -5.275954246520996
    8. '```' → logprob: -5.400954246520996
    9. 'for' → logprob: -5.525954246520996
    10. 'pass' → logprob: -5.900954246520996

Token 1498: ' les' (ID: 1341)
  Prédit: 'duplicates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'duplicates' → logprob: -0.09169916808605194
    2. ' duplicates' → logprob: -2.8416991233825684
    3. '_duplicates' → logprob: -4.591699123382568
    4. 'duplicate' → logprob: -4.966699123382568
    5. 'du' → logprob: -5.716699123382568
    6. '#' → logprob: -5.966699123382568
    7. 'duplic' → logprob: -6.591699123382568
    8. 'd' → logprob: -6.716699123382568
    9. 'edges' → logprob: -6.841699123382568
    10. '               ' → logprob: -6.841699123382568

Token 1499: ' multi' (ID: 12151)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.03331219032406807
    2. 'duplicates' → logprob: -4.4083123207092285
    3. 'd' → logprob: -4.7833123207092285
    4. 'ar' → logprob: -5.2833123207092285
    5. 'double' → logprob: -5.9083123207092285
    6. 'du' → logprob: -5.9083123207092285
    7. 'duplic' → logprob: -7.5333123207092285
    8. 'dup' → logprob: -7.6583123207092285
    9. ' doubl' → logprob: -8.78331184387207
    10. 'duplicate' → logprob: -9.03331184387207

Token 1500: '-ar' (ID: 31325)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.44800806045532227
    2. 'graph' → logprob: -1.5730080604553223
    3. 'ples' → logprob: -2.3230080604553223
    4. 'ar' → logprob: -3.5730080604553223
    5. 'graphs' → logprob: -4.448008060455322
    6. '-' → logprob: -4.948008060455322
    7. 'ple' → logprob: -6.073008060455322
    8. '-ar' → logprob: -6.198008060455322
    9. '_edges' → logprob: -7.198008060455322
    10. 'pl' → logprob: -7.573008060455322

Token 1501: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.04362908750772476
    2. 'cs' → logprob: -3.2936291694641113
    3. 'tes' → logprob: -6.293629169464111
    4. 'c' → logprob: -6.543629169464111
    5. 'r' → logprob: -7.168629169464111
    6. 'etes' → logprob: -7.293629169464111
    7. 'ètes' → logprob: -8.418628692626953
    8. '^' → logprob: -9.043628692626953
    9. 'ê' → logprob: -9.418628692626953
    10. '�' → logprob: -10.043628692626953

Token 1502: ' sur' (ID: 1512)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011207208037376404
    2. '                
' → logprob: -5.261207103729248
    3. ',' → logprob: -5.761207103729248
    4. 'edges' → logprob: -7.261207103729248
    5. 'edge' → logprob: -7.386207103729248
    6. '#' → logprob: -8.511207580566406
    7. ' (' → logprob: -9.011207580566406
    8. ' and' → logprob: -9.261207580566406
    9. '```' → logprob: -9.511207580566406
    10. '[]' → logprob: -9.511207580566406

Token 1503: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.6200956106185913
    2. 'graph' → logprob: -1.7450956106185913
    3. 'edges' → logprob: -1.8700956106185913
    4. 'les' → logprob: -2.120095729827881
    5. 'u' → logprob: -2.495095729827881
    6. 'each' → logprob: -2.620095729827881
    7. 'the' → logprob: -2.745095729827881
    8. 'edge' → logprob: -3.995095729827881
    9. 'set' → logprob: -3.995095729827881
    10. ' edges' → logprob: -4.370095729827881

Token 1504: ' même' (ID: 9679)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.3749754726886749
    2. 'same' → logprob: -1.7499754428863525
    3. 'u' → logprob: -2.7499754428863525
    4. 'gr' → logprob: -3.4999754428863525
    5. ' même' → logprob: -3.9999754428863525
    6. 'ar' → logprob: -4.874975681304932
    7. 'm' → logprob: -5.249975681304932
    8. 'edges' → logprob: -5.874975681304932
    9. 'und' → logprob: -6.249975681304932
    10. 'edge' → logprob: -6.749975681304932

Token 1505: ' couple' (ID: 7167)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.7291815280914307
    2. 'u' → logprob: -0.9791815280914307
    3. 'ar' → logprob: -2.6041815280914307
    4. 'edge' → logprob: -3.1041815280914307
    5. ' (' → logprob: -5.479181289672852
    6. '
' → logprob: -6.104181289672852
    7. 'are' → logprob: -6.229181289672852
    8. '0' → logprob: -6.479181289672852
    9. 'ligne' → logprob: -6.604181289672852
    10. '(s' → logprob: -6.729181289672852

Token 1506: ' (' (ID: 350)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2345608025789261
    2. ' (' → logprob: -2.10956072807312
    3. '(s' → logprob: -3.85956072807312
    4. ',' → logprob: -3.98456072807312
    5. '<|end|>' → logprob: -4.359560966491699
    6. '               ' → logprob: -5.109560966491699
    7. ' if' → logprob: -5.234560966491699
    8. 'if' → logprob: -5.734560966491699
    9. '.' → logprob: -5.984560966491699
    10. ' s' → logprob: -6.609560966491699

Token 1507: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.4321289658546448
    2. '(u' → logprob: -2.18212890625
    3. ' u' → logprob: -2.18212890625
    4. ')
' → logprob: -3.05712890625
    5. ')' → logprob: -3.30712890625
    6. ',' → logprob: -4.43212890625
    7. ' (' → logprob: -5.18212890625
    8. '[u' → logprob: -5.80712890625
    9. ',u' → logprob: -5.93212890625
    10. '
' → logprob: -5.93212890625

Token 1508: ',v' (ID: 30680)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3930126428604126
    2. ',v' → logprob: -1.2680126428604126
    3. '0' → logprob: -3.143012523651123
    4. ' ,' → logprob: -8.768013000488281
    5. ',u' → logprob: -9.268013000488281
    6. 'v' → logprob: -10.018013000488281
    7. ',s' → logprob: -10.143013000488281
    8. '_,' → logprob: -10.393013000488281
    9. 's' → logprob: -10.518013000488281
    10. ',n' → logprob: -11.643013000488281

Token 1509: ')
' (ID: 446)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.607661247253418
    2. ')' → logprob: -1.482661247253418
    3. ',' → logprob: -2.482661247253418
    4. 's' → logprob: -2.732661247253418
    5. ')
' → logprob: -3.732661247253418
    6. '                   ' → logprob: -4.107661247253418
    7. '),' → logprob: -4.732661247253418
    8. ' (' → logprob: -5.107661247253418
    9. '
' → logprob: -5.857661247253418
    10. '                
' → logprob: -5.857661247253418

Token 1510: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0018473666859790683
    2. '                
' → logprob: -6.626847267150879
    3. '
' → logprob: -8.501847267150879
    4. 'edges' → logprob: -9.626847267150879
    5. ',' → logprob: -9.876847267150879
    6. '```' → logprob: -9.876847267150879
    7. 'edge' → logprob: -10.251847267150879
    8. ' edges' → logprob: -11.376847267150879
    9. '``' → logprob: -11.501847267150879
    10. ' 
' → logprob: -11.626847267150879

Token 1511: ' #' (ID: 1069)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.11957713216543198
    2. '               ' → logprob: -3.244577169418335
    3. 'edges' → logprob: -3.619577169418335
    4. 'seen' → logprob: -3.619577169418335
    5. ' edge' → logprob: -4.369576930999756
    6. 'unique' → logprob: -6.494576930999756
    7. 'simple' → logprob: -6.744576930999756
    8. 'new' → logprob: -6.869576930999756
    9. ' edges' → logprob: -6.994576930999756
    10. ' seen' → logprob: -7.119576930999756

Token 1512: ' Ici' (ID: 145754)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.14287222921848297
    2. 'seen' → logprob: -2.8928723335266113
    3. 'edges' → logprob: -3.1428723335266113
    4. '               ' → logprob: -3.6428723335266113
    5. ' edge' → logprob: -6.642872333526611
    6. 'new' → logprob: -6.642872333526611
    7. 'simple' → logprob: -6.642872333526611
    8. ' seen' → logprob: -7.267872333526611
    9. 'unique' → logprob: -7.267872333526611
    10. 'used' → logprob: -7.892872333526611

Token 1513: ' on' (ID: 402)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.24221980571746826
    2. 'edges' → logprob: -2.742219924926758
    3. 'seen' → logprob: -2.742219924926758
    4. '               ' → logprob: -3.867219924926758
    5. ' edge' → logprob: -4.242219924926758
    6. 'unique' → logprob: -4.367219924926758
    7. ' seen' → logprob: -4.742219924926758
    8. 'new' → logprob: -4.742219924926758
    9. ' edges' → logprob: -5.617219924926758
    10. 'visited' → logprob: -5.992219924926758

Token 1514: ' doit' (ID: 21822)
  Prédit: 'convert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'convert' → logprob: -0.7688740491867065
    2. ' convert' → logprob: -1.8938740491867065
    3. ' =' → logprob: -2.518874168395996
    4. '               ' → logprob: -2.893874168395996
    5. '           ' → logprob: -3.143874168395996
    6. '                   ' → logprob: -3.268874168395996
    7. 'continue' → logprob: -3.893874168395996
    8. ' can' → logprob: -4.018874168395996
    9. 'def' → logprob: -4.518874168395996
    10. 'can' → logprob: -4.518874168395996

Token 1515: ' utiliser' (ID: 43227)
  Prédit: 'convert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'convert' → logprob: -0.49810394644737244
    2. '               ' → logprob: -2.6231038570404053
    3. ' convertir' → logprob: -2.7481038570404053
    4. 'ded' → logprob: -3.1231038570404053
    5. 'remove' → logprob: -3.2481038570404053
    6. '           ' → logprob: -3.6231038570404053
    7. '                   ' → logprob: -3.9981038570404053
    8. 'unique' → logprob: -4.498104095458984
    9. ' convert' → logprob: -4.498104095458984
    10. 'continue' → logprob: -4.623104095458984

Token 1516: ' un' (ID: 537)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.007688140030950308
    2. 'a' → logprob: -5.007688045501709
    3. ' set' → logprob: -7.632688045501709
    4. 'default' → logprob: -8.882688522338867
    5. 'dict' → logprob: -9.132688522338867
    6. 'sets' → logprob: -9.507688522338867
    7. ' a' → logprob: -9.632688522338867
    8. 'list' → logprob: -10.507688522338867
    9. 'edge' → logprob: -10.507688522338867
    10. '   ' → logprob: -11.757688522338867

Token 1517: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.00027063372544944286
    2. ' set' → logprob: -8.62527084350586
    3. 'et' → logprob: -10.37527084350586
    4. 'seen' → logprob: -10.62527084350586
    5. '=set' → logprob: -10.87527084350586
    6. 'visited' → logprob: -12.75027084350586
    7. ')set' → logprob: -13.00027084350586
    8. '
' → logprob: -13.50027084350586
    9. 's' → logprob: -13.50027084350586
    10. 'default' → logprob: -13.75027084350586

Token 1518: ' pour' (ID: 1930)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.9038693904876709
    2. '()
' → logprob: -1.153869390487671
    3. '(edge' → logprob: -1.403869390487671
    4. 'edge' → logprob: -3.903869390487671
    5. '(edges' → logprob: -5.77886962890625
    6. 'edges' → logprob: -6.27886962890625
    7. '((' → logprob: -6.52886962890625
    8. ',' → logprob: -7.15386962890625
    9. '_edges' → logprob: -7.15386962890625
    10. '(
' → logprob: -7.27886962890625

Token 1519: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.5269044637680054
    2. 'edge' → logprob: -2.151904582977295
    3. 'seen' → logprob: -2.151904582977295
    4. ' edges' → logprob: -2.526904582977295
    5. '(edge' → logprob: -3.526904582977295
    6. '(edges' → logprob: -3.901904582977295
    7. '_edges' → logprob: -5.026904582977295
    8. ' edge' → logprob: -5.151904582977295
    9. 'adj' → logprob: -5.401904582977295
    10. 'unique' → logprob: -5.526904582977295

Token 1520: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28233808279037476
    2. '               ' → logprob: -2.5323381423950195
    3. '(edge' → logprob: -3.1573381423950195
    4. ',' → logprob: -3.6573381423950195
    5. '                   ' → logprob: -3.9073381423950195
    6. '()' → logprob: -4.6573381423950195
    7. '           ' → logprob: -5.0323381423950195
    8. '(
' → logprob: -5.0323381423950195
    9. 'edge' → logprob: -5.2823381423950195
    10. ')' → logprob: -5.2823381423950195

Token 1521: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15097755193710327
    2. 'edges' → logprob: -2.400977611541748
    3. 'edge' → logprob: -4.650977611541748
    4. '                   ' → logprob: -4.775977611541748
    5. '()
' → logprob: -5.275977611541748
    6. ' edges' → logprob: -5.400977611541748
    7. '                
' → logprob: -5.775977611541748
    8. ',' → logprob: -6.275977611541748
    9. '{
' → logprob: -6.275977611541748
    10. '{' → logprob: -6.400977611541748

Token 1522: ' unique' (ID: 5746)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.4040103554725647
    2. '               ' → logprob: -2.27901029586792
    3. 'seen' → logprob: -2.27901029586792
    4. 'edge' → logprob: -2.65401029586792
    5. ' edges' → logprob: -3.15401029586792
    6. ' seen' → logprob: -5.27901029586792
    7. 's' → logprob: -6.27901029586792
    8. ' edge' → logprob: -6.65401029586792
    9. 'set' → logprob: -6.65401029586792
    10. 'se' → logprob: -7.02901029586792

Token 1523: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.003776335157454014
    2. '_edge' → logprob: -5.878776550292969
    3. '_' → logprob: -7.253776550292969
    4. 'edges' → logprob: -9.003776550292969
    5. '_ed' → logprob: -9.628776550292969
    6. '_set' → logprob: -10.878776550292969
    7. 'ed' → logprob: -11.128776550292969
    8. '_e' → logprob: -11.503776550292969
    9. 'e' → logprob: -11.753776550292969
    10. ' =' → logprob: -12.628776550292969

Token 1524: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07928939908742905
    2. '=' → logprob: -2.579289436340332
    3. '=set' → logprob: -7.829289436340332
    4. ' ' → logprob: -15.329289436340332
    5. 'set' → logprob: -15.454289436340332
    6. '   ' → logprob: -15.454289436340332
    7. '_set' → logprob: -15.579289436340332
    8. ')' → logprob: -15.954289436340332
    9. 's' → logprob: -16.079288482666016
    10. '  ' → logprob: -16.704288482666016

Token 1525: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.0002681304467841983
    2. ' set' → logprob: -8.25026798248291
    3. '{' → logprob: -12.50026798248291
    4. '{}' → logprob: -13.50026798248291
    5. '(set' → logprob: -14.12526798248291
    6. 'list' → logprob: -15.00026798248291
    7. '   ' → logprob: -15.12526798248291
    8. '{}
' → logprob: -15.25026798248291
    9. '	set' → logprob: -16.375268936157227
    10. '=set' → logprob: -16.875268936157227

Token 1526: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.09877187013626099
    2. '(edge' → logprob: -2.723771810531616
    3. '()
' → logprob: -3.848771810531616
    4. '((' → logprob: -5.098772048950195
    5. 'edge' → logprob: -7.848772048950195
    6. '([(' → logprob: -7.973772048950195
    7. '()

' → logprob: -9.473772048950195
    8. '())' → logprob: -10.223772048950195
    9. '()
' → logprob: -10.598772048950195
    10. '(((' → logprob: -10.848772048950195

Token 1527: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.28461936116218567
    2. '(
' → logprob: -2.6596193313598633
    3. '()
' → logprob: -2.6596193313598633
    4. '                   ' → logprob: -3.1596193313598633
    5. 'for' → logprob: -4.534619331359863
    6. '(' → logprob: -4.659619331359863
    7. '()' → logprob: -4.784619331359863
    8. '(edge' → logprob: -5.034619331359863
    9. '(u' → logprob: -5.159619331359863
    10. ',' → logprob: -5.159619331359863

Token 1528: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.17948982119560242
    2. '(u' → logprob: -2.054489850997925
    3. ' for' → logprob: -4.304489612579346
    4. 'edge' → logprob: -4.804489612579346
    5. '(edge' → logprob: -4.929489612579346
    6. '               ' → logprob: -5.804489612579346
    7. '()' → logprob: -6.679489612579346
    8. ' (' → logprob: -7.054489612579346
    9. '(' → logprob: -7.804489612579346
    10. '(e' → logprob: -7.929489612579346

Token 1529: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.5576300024986267
    2. 'e' → logprob: -1.3076300621032715
    3. '(u' → logprob: -1.9326300621032715
    4. 'a' → logprob: -5.8076300621032715
    5. '   ' → logprob: -6.0576300621032715
    6. 'x' → logprob: -6.3076300621032715
    7. '(e' → logprob: -6.4326300621032715
    8. 'eu' → logprob: -6.6826300621032715
    9. ' u' → logprob: -7.4326300621032715
    10. 'edge' → logprob: -7.8076300621032715

Token 1530: '0' (ID: 15)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04935288801789284
    2. ',v' → logprob: -3.0493528842926025
    3. '0' → logprob: -7.799353122711182
    4. ' ,' → logprob: -8.549352645874023
    5. 'v' → logprob: -9.049352645874023
    6. '_,' → logprob: -10.674352645874023
    7. ',u' → logprob: -11.549352645874023
    8. ' v' → logprob: -12.424352645874023
    9. '<|end|>' → logprob: -13.174352645874023
    10. 'u' → logprob: -13.549352645874023

Token 1531: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04878981411457062
    2. ',v' → logprob: -3.0487897396087646
    3. ' ,' → logprob: -8.923789978027344
    4. ',u' → logprob: -9.673789978027344
    5. ',
' → logprob: -13.048789978027344
    6. ',n' → logprob: -13.923789978027344
    7. 'v' → logprob: -14.298789978027344
    8. '_,' → logprob: -14.423789978027344
    9. '0' → logprob: -15.298789978027344
    10. ',",' → logprob: -15.423789978027344

Token 1532: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00020354038861114532
    2. ' v' → logprob: -8.500203132629395
    3. '	v' → logprob: -19.87520408630371
    4. 'u' → logprob: -20.62520408630371
    5. ')v' → logprob: -20.62520408630371
    6. ',v' → logprob: -21.87520408630371
    7. 'vq' → logprob: -23.25020408630371
    8. '(v' → logprob: -23.62520408630371
    9. '<v' → logprob: -23.75020408630371
    10. '_v' → logprob: -23.87520408630371

Token 1533: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6286106983898208e-05
    2. ',' → logprob: -11.375016212463379
    3. ' in' → logprob: -13.625016212463379
    4. '(u' → logprob: -14.125016212463379
    5. ',u' → logprob: -14.500016212463379
    6. ' ' → logprob: -14.625016212463379
    7. 'u' → logprob: -14.750016212463379
    8. '   ' → logprob: -14.750016212463379
    9. '_' → logprob: -15.500016212463379
    10. ' u' → logprob: -15.875016212463379

Token 1534: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06775480508804321
    2. 'in' → logprob: -3.0677547454833984
    3. ',' → logprob: -4.317754745483398
    4. '(u' → logprob: -6.067754745483398
    5. '   ' → logprob: -6.942754745483398
    6. ',u' → logprob: -7.067754745483398
    7. ' (' → logprob: -8.317754745483398
    8. ')' → logprob: -8.317754745483398
    9. ' u' → logprob: -8.442754745483398
    10. ' ,' → logprob: -8.692754745483398

Token 1535: ' edge' (ID: 11165)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -1.803731918334961
    2. '(edge' → logprob: -1.803731918334961
    3. 'edge' → logprob: -2.053731918334961
    4. ' (' → logprob: -2.178731918334961
    5. '(unique' → logprob: -2.178731918334961
    6. '(u' → logprob: -2.553731918334961
    7. '(sorted' → logprob: -2.678731918334961
    8. 'unique' → logprob: -2.678731918334961
    9. ' edge' → logprob: -3.678731918334961
    10. ' sorted' → logprob: -3.928731918334961

Token 1536: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0012661826331168413
    2. 'list' → logprob: -7.001266002655029
    3. 'unique' → logprob: -8.876266479492188
    4. '0' → logprob: -9.876266479492188
    5. '(unique' → logprob: -10.376266479492188
    6. 'List' → logprob: -10.751266479492188
    7. '(u' → logprob: -11.126266479492188
    8. 's' → logprob: -11.251266479492188
    9. '_unique' → logprob: -11.376266479492188
    10. 'u' → logprob: -11.751266479492188

Token 1537: ':
' (ID: 734)
  Prédit: '.add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.6666440963745117
    2. '                   ' → logprob: -0.9166440963745117
    3. '                       ' → logprob: -3.7916440963745117
    4. '               ' → logprob: -3.7916440963745117
    5. ':
' → logprob: -4.291644096374512
    6. '   ' → logprob: -4.916644096374512
    7. '           ' → logprob: -5.166644096374512
    8. '.' → logprob: -5.791644096374512
    9. ',' → logprob: -6.166644096374512
    10. '       ' → logprob: -6.416644096374512

Token 1538: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.08213301748037338
    2. ' if' → logprob: -2.9571330547332764
    3. '   ' → logprob: -4.082132816314697
    4. ' unique' → logprob: -5.832132816314697
    5. 'if' → logprob: -5.957132816314697
    6. '               ' → logprob: -6.457132816314697
    7. 'unique' → logprob: -6.832132816314697
    8. '           ' → logprob: -6.957132816314697
    9. '                       ' → logprob: -7.832132816314697
    10. '       ' → logprob: -8.457133293151855

Token 1539: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8438711166381836
    2. ' if' → logprob: -0.8438711166381836
    3. ' unique' → logprob: -2.5938711166381836
    4. 'if' (adapté à ' if') → logprob: -3.0938711166381836
    5. 'unique' → logprob: -4.218871116638184
    6. ' key' → logprob: -6.093871116638184
    7. '                   ' → logprob: -6.093871116638184
    8. 'key' → logprob: -8.218871116638184
    9. ' u' → logprob: -9.718871116638184
    10. 'u' → logprob: -9.968871116638184

Token 1540: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.049555182456970215
    2. '(u' → logprob: -3.1745553016662598
    3. ' u' → logprob: -5.04955530166626
    4. ' (' → logprob: -9.424554824829102
    5. '   ' → logprob: -10.674554824829102
    6. '	u' → logprob: -11.299554824829102
    7. 'min' → logprob: -13.174554824829102
    8. '(' → logprob: -13.549554824829102
    9. '(min' → logprob: -13.924554824829102
    10. '(v' → logprob: -14.674554824829102

Token 1541: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. 'u' → logprob: -15.375
    3. '<u' → logprob: -16.25
    4. '<' → logprob: -18.0
    5. '!=' → logprob: -18.25
    6. 'not' → logprob: -19.0
    7. '>' → logprob: -19.0
    8. '<=' → logprob: -19.375
    9. ' <' → logprob: -19.625
    10. '```' → logprob: -19.75

Token 1542: ' >' (ID: 1424)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.42566290497779846
    2. '<v' → logprob: -1.425662875175476
    3. ' <' → logprob: -2.4256629943847656
    4. '<u' → logprob: -4.800662994384766
    5. '>' → logprob: -5.050662994384766
    6. '!=' → logprob: -6.300662994384766
    7. ' >' → logprob: -7.425662994384766
    8. ' !=' → logprob: -7.550662994384766
    9. '<=' → logprob: -9.175662994384766
    10. ',' → logprob: -10.425662994384766

Token 1543: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0006045030895620584
    2. ' v' → logprob: -7.500604629516602
    3. 'u' → logprob: -9.875604629516602
    4. ' u' → logprob: -16.6256046295166
    5. '	v' → logprob: -18.5006046295166
    6. ',v' → logprob: -19.7506046295166
    7. '<v' → logprob: -19.8756046295166
    8. '```' → logprob: -20.2506046295166
    9. '=' → logprob: -20.3756046295166
    10. '=v' → logprob: -20.5006046295166

Token 1544: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6407508254051208
    2. 'v' → logprob: -1.0157508850097656
    3. '1' → logprob: -2.2657508850097656
    4. 'u' → logprob: -5.890750885009766
    5. '=' → logprob: -6.640750885009766
    6. '   ' → logprob: -7.515750885009766
    7. '```' → logprob: -7.640750885009766
    8. ' v' → logprob: -8.140750885009766
    9. 's' → logprob: -8.390750885009766
    10. 'k' → logprob: -8.515750885009766

Token 1545: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4233565628528595
    2. ',u' → logprob: -1.173356533050537
    3. '(u' → logprob: -4.298356533050537
    4. '                       ' → logprob: -5.298356533050537
    5. ',v' → logprob: -5.798356533050537
    6. ':
' → logprob: -5.923356533050537
    7. ' ,' → logprob: -5.923356533050537
    8. ':' → logprob: -6.298356533050537
    9. ' u' → logprob: -6.423356533050537
    10. ',
' → logprob: -6.673356533050537

Token 1546: '                       ' (ID: 968)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.4172486662864685
    2. ',' → logprob: -2.5422487258911133
    3. '(v' → logprob: -2.5422487258911133
    4. ' u' → logprob: -2.5422487258911133
    5. ' (' → logprob: -3.4172487258911133
    6. ',v' → logprob: -4.042248725891113
    7. ',u' → logprob: -4.042248725891113
    8. ' v' → logprob: -4.417248725891113
    9. 'u' → logprob: -4.542248725891113
    10. '                       ' → logprob: -5.042248725891113

Token 1547: ' u' (ID: 337)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.12360755354166031
    2. 'v' → logprob: -2.873607635498047
    3. '(u' → logprob: -3.123607635498047
    4. ' (' → logprob: -4.248607635498047
    5. ' v' → logprob: -6.998607635498047
    6. 'u' (adapté à ' u') → logprob: -7.498607635498047
    7. '(' → logprob: -10.873607635498047
    8. ' u' → logprob: -12.248607635498047
    9. '   ' → logprob: -12.998607635498047
    10. '(
' → logprob: -13.748607635498047

Token 1548: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0021583528723567724
    2. ',' → logprob: -6.252158164978027
    3. ',v' → logprob: -8.627158164978027
    4. '_,' → logprob: -10.377158164978027
    5. ' ,' → logprob: -11.002158164978027
    6. ',u' → logprob: -13.252158164978027
    7. 'u' → logprob: -15.377158164978027
    8. ' ' → logprob: -16.377159118652344
    9. 'v' → logprob: -16.377159118652344
    10. '_' → logprob: -16.502159118652344

Token 1549: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.054995570331811905
    2. ',v' → logprob: -2.929995536804199
    3. ',u' → logprob: -9.5549955368042
    4. ' ,' → logprob: -10.4299955368042
    5. 'v' → logprob: -12.1799955368042
    6. ',
' → logprob: -12.5549955368042
    7. '=' → logprob: -13.8049955368042
    8. 'u' → logprob: -14.1799955368042
    9. ' v' → logprob: -14.8049955368042
    10. '0' → logprob: -14.9299955368042

Token 1550: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0040785204619169235
    2. ' v' → logprob: -5.504078388214111
    3. '	v' → logprob: -16.629077911376953
    4. '=v' → logprob: -19.379077911376953
    5. 'u' → logprob: -19.504077911376953
    6. '<|end|>' → logprob: -20.629077911376953
    7. ')v' → logprob: -20.629077911376953
    8. ',v' → logprob: -20.754077911376953
    9. '
' → logprob: -21.129077911376953
    10. '=' → logprob: -21.254077911376953

Token 1551: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007197081111371517
    2. '=' → logprob: -5.75719690322876
    3. 'v' → logprob: -6.13219690322876
    4. '=v' → logprob: -6.75719690322876
    5. ',v' → logprob: -7.88219690322876
    6. '<v' → logprob: -8.882197380065918
    7. ' v' → logprob: -10.132197380065918
    8. ',' → logprob: -10.632197380065918
    9. '```' → logprob: -10.757197380065918
    10. '1' → logprob: -11.382197380065918

Token 1552: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001321073155850172
    2. ',' → logprob: -7.251320838928223
    3. ' =' → logprob: -7.876320838928223
    4. '=u' → logprob: -8.501320838928223
    5. ',u' → logprob: -11.001320838928223
    6. 'u' → logprob: -11.751320838928223
    7. '=
' → logprob: -13.626320838928223
    8. ' u' → logprob: -14.376320838928223
    9. '                           ' → logprob: -15.126320838928223
    10. '==' → logprob: -15.751320838928223

Token 1553: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0002639582962729037
    2. ' v' → logprob: -8.250264167785645
    3. 'u' → logprob: -13.000264167785645
    4. '(v' → logprob: -14.875264167785645
    5. '	v' → logprob: -17.000263214111328
    6. ' u' → logprob: -19.500263214111328
    7. '[v' → logprob: -20.625263214111328
    8. ',v' → logprob: -20.750263214111328
    9. '                   ' → logprob: -21.125263214111328
    10. '_v' → logprob: -21.250263214111328

Token 1554: '0' (ID: 15)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.195058673620224
    2. 'u' → logprob: -2.070058584213257
    3. '0' → logprob: -3.070058584213257
    4. '(v' → logprob: -6.320058822631836
    5. '(u' → logprob: -6.570058822631836
    6. ' v' → logprob: -6.945058822631836
    7. ' u' → logprob: -8.320058822631836
    8. ',v' → logprob: -9.070058822631836
    9. '<v' → logprob: -10.695058822631836
    10. '=v' → logprob: -11.070058822631836

Token 1555: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.050301048904657364
    2. ',u' → logprob: -3.1753010749816895
    3. 'u' → logprob: -5.0503010749816895
    4. ',
' → logprob: -8.175300598144531
    5. ' u' → logprob: -8.550300598144531
    6. '0' → logprob: -8.800300598144531
    7. ',v' → logprob: -9.175300598144531
    8. '_,' → logprob: -10.550300598144531
    9. ' ,' → logprob: -10.675300598144531
    10. '<|end|>' → logprob: -10.925300598144531

Token 1556: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -7.941850526549388e-06
    2. ' u' → logprob: -11.750007629394531
    3. '	u' → logprob: -20.50000762939453
    4. '   ' → logprob: -23.37500762939453
    5. '(u' → logprob: -25.25000762939453
    6. '_u' → logprob: -25.50000762939453
    7. '=u' → logprob: -25.50000762939453
    8. '[u' → logprob: -25.87500762939453
    9. '<u' → logprob: -26.75000762939453
    10. '0' → logprob: -26.75000762939453

Token 1557: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '   ' → logprob: -19.5
    3. ' ' → logprob: -20.625
    4. '       ' → logprob: -20.75
    5. '_' → logprob: -21.125
    6. '```' → logprob: -21.125
    7. 'o' → logprob: -21.375
    8. '
' → logprob: -21.625
    9. '    ' → logprob: -21.625
    10. 'u' → logprob: -21.625

Token 1558: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.023632680997252464
    2. ')' → logprob: -4.023632526397705
    3. '               ' → logprob: -6.148632526397705
    4. '                       ' → logprob: -7.148632526397705
    5. ',' → logprob: -7.273632526397705
    6. ')
' → logprob: -7.773632526397705
    7. '                    
' → logprob: -8.148633003234863
    8. '(' → logprob: -8.773633003234863
    9. '           ' → logprob: -8.898633003234863
    10. ' (' → logprob: -9.148633003234863

Token 1559: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00047368707600980997
    2. ',' → logprob: -8.750473976135254
    3. '               ' → logprob: -9.000473976135254
    4. ')' → logprob: -9.500473976135254
    5. '                       ' → logprob: -10.625473976135254
    6. 'unique' → logprob: -11.000473976135254
    7. ' unique' → logprob: -11.250473976135254
    8. '   ' → logprob: -11.375473976135254
    9. '(unique' → logprob: -11.375473976135254
    10. ',
' → logprob: -12.125473976135254

Token 1560: ' unique' (ID: 5746)
  Prédit: 'unique'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unique' (adapté à ' unique') → logprob: -0.008768199943006039
    2. ' unique' → logprob: -4.758768081665039
    3. 'if' → logprob: -8.883768081665039
    4. '                   ' → logprob: -12.008768081665039
    5. ' if' → logprob: -12.258768081665039
    6. '(unique' → logprob: -12.633768081665039
    7. '                       ' → logprob: -15.258768081665039
    8. '   ' → logprob: -15.383768081665039
    9. '(' → logprob: -15.758768081665039
    10. 'edge' → logprob: -16.00876808166504

Token 1561: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -5.319370302458992e-06
    2. 'edges' → logprob: -12.500005722045898
    3. '_edge' → logprob: -13.750005722045898
    4. '_pairs' → logprob: -16.6250057220459
    5. '
' → logprob: -16.7500057220459
    6. ',' → logprob: -16.8750057220459
    7. '   ' → logprob: -16.8750057220459
    8. '```' → logprob: -17.2500057220459
    9. ',_' → logprob: -17.3750057220459
    10. 'Edges' → logprob: -17.5000057220459

Token 1562: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.004707799293100834
    2. '.' → logprob: -5.3797078132629395
    3. ' .' → logprob: -9.504707336425781
    4. ',' → logprob: -12.504707336425781
    5. '.update' → logprob: -12.629707336425781
    6. 'add' → logprob: -13.254707336425781
    7. '=' → logprob: -13.629707336425781
    8. '.Add' → logprob: -14.379707336425781
    9. '_add' → logprob: -14.754707336425781
    10. ' =' → logprob: -14.879707336425781

Token 1563: '((' (ID: 2054)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.04055066779255867
    2. '(' → logprob: -3.540550708770752
    3. ' (' → logprob: -4.790550708770752
    4. '((' → logprob: -6.040550708770752
    5. '   ' → logprob: -9.915550231933594
    6. ' ' → logprob: -14.290550231933594
    7. '(un' → logprob: -14.540550231933594
    8. '(uid' → logprob: -14.665550231933594
    9. '(ui' → logprob: -14.665550231933594
    10. '(U' → logprob: -14.790550231933594

Token 1564: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -2.339278580620885e-06
    2. ' u' → logprob: -13.000001907348633
    3. '   ' → logprob: -17.625001907348633
    4. '	u' → logprob: -18.625001907348633
    5. '                   ' → logprob: -20.625001907348633
    6. '(u' → logprob: -20.750001907348633
    7. '_u' → logprob: -22.250001907348633
    8. ',u' → logprob: -22.250001907348633
    9. '                       ' → logprob: -22.875001907348633
    10. '               ' → logprob: -23.500001907348633

Token 1565: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20150601863861084
    2. 'u' → logprob: -1.7015060186386108
    3. ' u' → logprob: -9.451505661010742
    4. '(u' → logprob: -12.576505661010742
    5. '   ' → logprob: -12.576505661010742
    6. ',' → logprob: -13.076505661010742
    7. '[u' → logprob: -13.451505661010742
    8. ',u' → logprob: -13.576505661010742
    9. '    ' → logprob: -14.951505661010742
    10. '[' → logprob: -15.076505661010742

Token 1566: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017169468337669969
    2. ',v' → logprob: -6.3767170906066895
    3. ',u' → logprob: -11.626716613769531
    4. ' ,' → logprob: -12.626716613769531
    5. ',
' → logprob: -13.001716613769531
    6. 'v' → logprob: -15.251716613769531
    7. ',n' → logprob: -17.50171661376953
    8. ',user' → logprob: -17.62671661376953
    9. '_,' → logprob: -17.87671661376953
    10. 'u' → logprob: -18.12671661376953

Token 1567: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -3.4121114822482923e-06
    2. ' v' → logprob: -13.000003814697266
    3. 'u' → logprob: -13.750003814697266
    4. '   ' → logprob: -18.875003814697266
    5. '	v' → logprob: -19.250003814697266
    6. ')v' → logprob: -20.375003814697266
    7. '
' → logprob: -21.375003814697266
    8. '       ' → logprob: -21.875003814697266
    9. '    ' → logprob: -22.000003814697266
    10. ',v' → logprob: -22.375003814697266

Token 1568: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6508826613426208
    2. '0' → logprob: -1.1508827209472656
    3. 'v' → logprob: -2.0258827209472656
    4. 'u' → logprob: -3.5258827209472656
    5. ',' → logprob: -8.275882720947266
    6. ')' → logprob: -8.900882720947266
    7. ',v' → logprob: -9.150882720947266
    8. '
' → logprob: -9.525882720947266
    9. '   ' → logprob: -9.775882720947266
    10. ' v' → logprob: -11.150882720947266

Token 1569: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.16157466173171997
    2. ')' → logprob: -1.9115746021270752
    3. '))
' → logprob: -6.661574840545654
    4. '                   ' → logprob: -9.911574363708496
    5. ')
' → logprob: -11.661574363708496
    6. '               ' → logprob: -12.661574363708496
    7. ')))' → logprob: -12.786574363708496
    8. '),' → logprob: -13.786574363708496
    9. ')}' → logprob: -13.911574363708496
    10. '))

' → logprob: -14.161574363708496

Token 1570: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0809265747666359
    2. '
' → logprob: -2.8309266567230225
    3. '                
' → logprob: -4.955926418304443
    4. ')
' → logprob: -5.955926418304443
    5. 'edges' → logprob: -6.205926418304443
    6. ')' → logprob: -6.455926418304443
    7. '    
' → logprob: -6.830926418304443
    8. '                    
' → logprob: -7.455926418304443
    9. '                   ' → logprob: -7.830926418304443
    10. '```' → logprob: -7.955926418304443

Token 1571: ' unique' (ID: 5746)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.4259130954742432
    2. '               ' → logprob: -1.4259130954742432
    3. 'import' → logprob: -1.8009130954742432
    4. '#' → logprob: -2.300913095474243
    5. 'edges' → logprob: -2.675913095474243
    6. '                
' → logprob: -3.925913095474243
    7. 'lap' → logprob: -3.925913095474243
    8. '```' → logprob: -4.175912857055664
    9. 'nodes' → logprob: -4.550912857055664
    10. 'from' → logprob: -4.675912857055664

Token 1572: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -5.200166469876422e-06
    2. '_' → logprob: -13.000004768371582
    3. '_edge' → logprob: -14.375004768371582
    4. '
' → logprob: -15.000004768371582
    5. '```' → logprob: -15.000004768371582
    6. ')_' → logprob: -15.125004768371582
    7. '_tokens' → logprob: -15.500004768371582
    8. 'edges' → logprob: -15.625004768371582
    9. '_ed' → logprob: -15.750004768371582
    10. '_
' → logprob: -15.750004768371582

Token 1573: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10123386234045029
    2. '=' → logprob: -2.351233959197998
    3. '<|end|>' → logprob: -7.476233959197998
    4. '.add' → logprob: -8.97623348236084
    5. ')' → logprob: -8.97623348236084
    6. '=list' → logprob: -9.72623348236084
    7. ',' → logprob: -9.85123348236084
    8. '.pop' → logprob: -11.10123348236084
    9. '_list' → logprob: -11.60123348236084
    10. '=set' → logprob: -11.85123348236084

Token 1574: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0009863656014204025
    2. 'sorted' → logprob: -7.000986576080322
    3. 'set' → logprob: -9.500986099243164
    4. ' list' → logprob: -16.875986099243164
    5. '{' → logprob: -18.000986099243164
    6. '[list' → logprob: -18.375986099243164
    7. 'unique' → logprob: -18.750986099243164
    8. '(list' → logprob: -19.750986099243164
    9. '(sorted' → logprob: -21.125986099243164
    10. ' sorted' → logprob: -21.375986099243164

Token 1575: '(unique' (ID: 110064)
  Prédit: '(unique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(unique' → logprob: -9.269565634895116e-05
    2. 'unique' → logprob: -9.375092506408691
    3. '(sorted' → logprob: -12.500092506408691
    4. '(' → logprob: -12.750092506408691
    5. '.unique' → logprob: -14.500092506408691
    6. '((' → logprob: -15.500092506408691
    7. ' unique' → logprob: -15.625092506408691
    8. '_unique' → logprob: -16.000093460083008
    9. '```' → logprob: -17.250093460083008
    10. ' (' → logprob: -17.750093460083008

Token 1576: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.0007125511183403432
    2. '(unique' → logprob: -7.8757123947143555
    3. 'edges' → logprob: -9.250712394714355
    4. 's' → logprob: -9.375712394714355
    5. '(_' → logprob: -10.500712394714355
    6. 'unique' → logprob: -10.500712394714355
    7. '((' → logprob: -10.875712394714355
    8. '_ed' → logprob: -11.500712394714355
    9. '(edges' → logprob: -11.625712394714355
    10. '_unique' → logprob: -11.625712394714355

Token 1577: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013333993032574654
    2. '<|end|>' → logprob: -4.388333797454834
    3. ')
' → logprob: -8.138334274291992
    4. '<|end|>' → logprob: -8.638334274291992
    5. '               ' → logprob: -8.763334274291992
    6. ']' → logprob: -9.763334274291992
    7. ',' → logprob: -10.513334274291992
    8. '       ' → logprob: -11.263334274291992
    9. '[' → logprob: -11.638334274291992
    10. '),' → logprob: -11.888334274291992

Token 1578: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0423540323972702
    2. 'import' → logprob: -4.167354106903076
    3. '```' → logprob: -5.042354106903076
    4. '                
' → logprob: -5.292354106903076
    5. '
' → logprob: -5.417354106903076
    6. 'from' → logprob: -5.667354106903076
    7. '       ' → logprob: -6.542354106903076
    8. '    
' → logprob: -6.667354106903076
    9. '           ' → logprob: -6.917354106903076
    10. '   ' → logprob: -7.542354106903076

Token 1579: ' #' (ID: 1069)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.23088598251342773
    2. 'from' → logprob: -2.3558859825134277
    3. '               ' → logprob: -2.7308859825134277
    4. '#' (adapté à ' #') → logprob: -3.2308859825134277
    5. 'n' → logprob: -5.480885982513428
    6. 'if' → logprob: -6.730885982513428
    7. '```' → logprob: -7.855885982513428
    8. '                
' → logprob: -8.855886459350586
    9. 'def' → logprob: -9.230886459350586
    10. '
' → logprob: -9.230886459350586

Token 1580: ' Le' (ID: 2018)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.14768923819065094
    2. 'from' → logprob: -2.3976893424987793
    3. '#' → logprob: -3.2726893424987793
    4. '               ' → logprob: -5.522689342498779
    5. 'n' → logprob: -6.147689342498779
    6. 'size' → logprob: -6.522689342498779
    7. 'if' → logprob: -8.272688865661621
    8. 'dim' → logprob: -8.647688865661621
    9. 'num' → logprob: -9.647688865661621
    10. 'def' → logprob: -9.772688865661621

Token 1581: ' grap' (ID: 60955)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.2780629098415375
    2. 'from' → logprob: -2.2780628204345703
    3. '#' → logprob: -2.7780628204345703
    4. 'n' → logprob: -3.0280628204345703
    5. 'k' → logprob: -4.02806282043457
    6. 'size' → logprob: -5.77806282043457
    7. ' import' → logprob: -6.15306282043457
    8. 'def' → logprob: -6.27806282043457
    9. 'num' → logprob: -6.65306282043457
    10. 'len' → logprob: -6.77806282043457

Token 1582: 'he' (ID: 273)
  Prédit: 'aphe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aphe' → logprob: -0.13861127197742462
    2. 'phe' → logprob: -2.263611316680908
    3. 'he' → logprob: -3.763611316680908
    4. '#' → logprob: -6.638611316680908
    5. 'ph' → logprob: -7.263611316680908
    6. 'h' → logprob: -9.13861083984375
    7. 'aph' → logprob: -10.01361083984375
    8. 'ophe' → logprob: -11.01361083984375
    9. 'p' → logprob: -11.13861083984375
    10. 'heme' → logprob: -11.51361083984375

Token 1583: ' sur' (ID: 1512)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.141370177268982
    2. ' est' → logprob: -1.641370177268982
    3. 'est' → logprob: -1.891370177268982
    4. 'import' → logprob: -2.2663702964782715
    5. ' is' → logprob: -3.0163702964782715
    6. ' =' → logprob: -3.3913702964782715
    7. 'n' → logprob: -3.7663702964782715
    8. '=' → logprob: -3.7663702964782715
    9. 'is' → logprob: -3.8913702964782715
    10. ' n' → logprob: -4.0163702964782715

Token 1584: ' rac' (ID: 12334)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.15047289431095123
    2. 'unique' → logprob: -2.02547287940979
    3. 'roots' → logprob: -5.025473117828369
    4. '               ' → logprob: -8.400472640991211
    5. ' unique' → logprob: -8.650472640991211
    6. ' k' → logprob: -8.650472640991211
    7. '#' → logprob: -8.900472640991211
    8. '(unique' → logprob: -9.025472640991211
    9. 'le' → logprob: -9.400472640991211
    10. 'range' → logprob: -9.650472640991211

Token 1585: 'ines' (ID: 2028)
  Prédit: 'ces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ces' → logprob: -0.4303141236305237
    2. 'ines' → logprob: -2.555314064025879
    3. 'h' → logprob: -3.180314064025879
    4. 'outes' → logprob: -3.555314064025879
    5. 'tes' → logprob: -3.680314064025879
    6. 'c' → logprob: -3.680314064025879
    7. 'ches' → logprob: -3.930314064025879
    8. 'unes' → logprob: -4.305314064025879
    9. 'ˆ' → logprob: -4.680314064025879
    10. 'ou' → logprob: -4.680314064025879

Token 1586: ' est' (ID: 893)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12537626922130585
    2. 'import' → logprob: -3.1253762245178223
    3. '                
' → logprob: -3.7503762245178223
    4. ' n' → logprob: -4.125376224517822
    5. '#' → logprob: -5.000376224517822
    6. 'n' → logprob: -5.375376224517822
    7. ' est' → logprob: -5.500376224517822
    8. '
' → logprob: -5.500376224517822
    9. ',' → logprob: -5.750376224517822
    10. ':' → logprob: -6.500376224517822

Token 1587: ' non' (ID: 2893)
  Prédit: 'unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'unique' → logprob: -0.09929411858320236
    2. 'k' → logprob: -2.7242941856384277
    3. ' unique' → logprob: -4.349294185638428
    4. '(unique' → logprob: -4.849294185638428
    5. '(k' → logprob: -6.349294185638428
    6. 'une' → logprob: -6.599294185638428
    7. 'und' → logprob: -6.599294185638428
    8. 'un' → logprob: -7.474294185638428
    9. '#' → logprob: -7.474294185638428
    10. 'uni' → logprob: -7.974294185638428

Token 1588: ' orient' (ID: 13198)
  Prédit: 'orient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orient' → logprob: -0.027767622843384743
    2. 'or' → logprob: -3.6527676582336426
    3. 'direct' → logprob: -6.777767658233643
    4. 'dir' → logprob: -8.902767181396484
    5. '   ' → logprob: -9.277767181396484
    6. '       ' → logprob: -10.152767181396484
    7. 'orien' → logprob: -10.652767181396484
    8. 'mult' → logprob: -12.152767181396484
    9. ' orient' → logprob: -12.652767181396484
    10. 'com' → logprob: -12.652767181396484

Token 1589: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -1.27099974633893e-05
    2. 'e' → logprob: -11.625012397766113
    3. 'ée' → logprob: -12.875012397766113
    4. '[' → logprob: -15.250012397766113
    5. 'è' → logprob: -15.375012397766113
    6. 'és' → logprob: -15.625012397766113
    7. 'ed' → logprob: -16.25001335144043
    8. 'É' → logprob: -16.25001335144043
    9. 'né' → logprob: -16.62501335144043
    10. 'éd' → logprob: -16.75001335144043

Token 1590: ' avec' (ID: 3937)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0162891149520874
    2. '               ' → logprob: -1.5162891149520874
    3. ',
' → logprob: -1.6412891149520874
    4. '#' → logprob: -2.141289234161377
    5. 'import' → logprob: -3.016289234161377
    6. '
' → logprob: -3.266289234161377
    7. '.
' → logprob: -5.016289234161377
    8. '                
' → logprob: -5.266289234161377
    9. '.' → logprob: -6.141289234161377
    10. '#
' → logprob: -7.016289234161377

Token 1591: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.016283975914120674
    2. 'unique' → logprob: -4.141283988952637
    3. '(k' → logprob: -9.891283988952637
    4. ' k' → logprob: -10.391283988952637
    5. 'u' → logprob: -10.641283988952637
    6. '[k' → logprob: -10.641283988952637
    7. '(unique' → logprob: -10.641283988952637
    8. 'edges' → logprob: -10.891283988952637
    9. 'nodes' → logprob: -11.266283988952637
    10. ' unique' → logprob: -11.391283988952637

Token 1592: ' somm' (ID: 44830)
  Prédit: 'vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertices' → logprob: -1.0624194145202637
    2. ' vertices' → logprob: -1.5624194145202637
    3. 'nodes' → logprob: -1.8124194145202637
    4. ',' → logprob: -2.1874194145202637
    5. ' nodes' → logprob: -2.4374194145202637
    6. 's' → logprob: -3.9374194145202637
    7. '```' → logprob: -4.062419414520264
    8. ' somm' → logprob: -4.187419414520264
    9. '(nodes' → logprob: -4.937419414520264
    10. ')' → logprob: -5.812419414520264

Token 1593: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.17069299519062042
    2. 'ètes' → logprob: -2.4206929206848145
    3. 'ètres' → logprob: -3.2956929206848145
    4. 'ettes' → logprob: -4.1706929206848145
    5. 'et' → logprob: -5.0456929206848145
    6. 'è' → logprob: -5.6706929206848145
    7. 'êtres' → logprob: -6.5456929206848145
    8. 'etes' → logprob: -6.6706929206848145
    9. 'êts' → logprob: -7.4206929206848145
    10. 'êtes' → logprob: -7.7956929206848145

Token 1594: ' et' (ID: 859)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7519707679748535
    2. '               ' → logprob: -1.8769707679748535
    3. '
' → logprob: -2.0019707679748535
    4. ',' → logprob: -2.1269707679748535
    5. ',
' → logprob: -3.7519707679748535
    6. '#' → logprob: -3.8769707679748535
    7. '   ' → logprob: -4.3769707679748535
    8. '\n' → logprob: -4.6269707679748535
    9. '                
' → logprob: -4.6269707679748535
    10. '```' → logprob: -4.6269707679748535

Token 1595: ' unique' (ID: 5746)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0962238758802414
    2. 'len' → logprob: -2.471223831176758
    3. 'unique' → logprob: -5.221223831176758
    4. ' k' → logprob: -7.221223831176758
    5. ' len' → logprob: -7.596223831176758
    6. ' unique' → logprob: -8.971223831176758
    7. '[k' → logprob: -9.471223831176758
    8. 'e' → logprob: -9.596223831176758
    9. '(len' → logprob: -9.846223831176758
    10. 'edges' → logprob: -9.846223831176758

Token 1596: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.06271810084581375
    2. 'edges' → logprob: -2.937718152999878
    3. 'ar' → logprob: -5.437717914581299
    4. ' edges' → logprob: -6.062717914581299
    5. 'unique' → logprob: -7.937717914581299
    6. '_unique' → logprob: -8.437718391418457
    7. '_' → logprob: -8.687718391418457
    8. '_ar' → logprob: -9.437718391418457
    9. ' ar' → logprob: -9.812718391418457
    10. ' unique' → logprob: -10.187718391418457

Token 1597: ' ar' (ID: 646)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7657945156097412
    2. '
' → logprob: -1.7657945156097412
    3. '                
' → logprob: -1.7657945156097412
    4. 'import' → logprob: -3.265794515609741
    5. '#' → logprob: -3.640794515609741
    6. ',
' → logprob: -3.890794515609741
    7. '  
' → logprob: -3.890794515609741
    8. '    
' → logprob: -4.01579475402832
    9. '<|end|>' → logprob: -4.01579475402832
    10. ',' → logprob: -4.14079475402832

Token 1598: 'êtes' (ID: 23720)
  Prédit: 'cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cs' → logprob: -0.211308553814888
    2. 'êtes' → logprob: -1.7113085985183716
    3. '=' → logprob: -4.961308479309082
    4. 'e' → logprob: -6.836308479309082
    5. 'r' → logprob: -7.961308479309082
    6. 'es' → logprob: -8.461308479309082
    7. 'ches' → logprob: -8.586308479309082
    8. ' =' → logprob: -8.961308479309082
    9. 'bres' → logprob: -9.461308479309082
    10. '```' → logprob: -9.461308479309082

Token 1599: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.45808708667755127
    2. '                
' → logprob: -1.5830870866775513
    3. '
' → logprob: -3.0830869674682617
    4. 'import' → logprob: -3.3330869674682617
    5. ',
' → logprob: -3.5830869674682617
    6. ',' → logprob: -4.333086967468262
    7. '    
' → logprob: -4.958086967468262
    8. '  
' → logprob: -5.208086967468262
    9. '#' → logprob: -5.833086967468262
    10. '\n' → logprob: -5.833086967468262

Token 1600: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1981130987405777
    2. '
' → logprob: -2.073113203048706
    3. '                
' → logprob: -3.198113203048706
    4. '  
' → logprob: -5.948112964630127
    5. '    
' → logprob: -6.073112964630127
    6. 'import' → logprob: -6.448112964630127
    7. '<|end|>' → logprob: -6.573112964630127
    8. ',
' → logprob: -6.948112964630127
    9. ',' → logprob: -7.073112964630127
    10. '\n' → logprob: -7.323112964630127

Token 1601: ' #' (ID: 1069)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7652859687805176
    2. '               ' → logprob: -1.0152859687805176
    3. 'from' → logprob: -2.5152859687805176
    4. '#' (adapté à ' #') → logprob: -3.1402859687805176
    5. '                
' → logprob: -4.265285968780518
    6. 'if' → logprob: -4.265285968780518
    7. '
' → logprob: -5.015285968780518
    8. 'lap' → logprob: -5.515285968780518
    9. 'L' → logprob: -6.140285968780518
    10. 'n' → logprob: -6.390285968780518

Token 1602: ' On' (ID: 2160)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.416618674993515
    2. '               ' → logprob: -1.6666187047958374
    3. '#' → logprob: -2.291618585586548
    4. 'from' → logprob: -3.291618585586548
    5. '                
' → logprob: -5.666618824005127
    6. 'if' → logprob: -6.041618824005127
    7. '
' → logprob: -6.166618824005127
    8. 'n' → logprob: -7.041618824005127
    9. 'matrix' → logprob: -7.041618824005127
    10. 'lap' → logprob: -7.166618824005127

Token 1603: ' cherche' (ID: 52345)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8729638457298279
    2. '#' → logprob: -1.2479639053344727
    3. 'continue' → logprob: -1.4979639053344727
    4. 'build' → logprob: -4.372963905334473
    5. 'def' → logprob: -4.497963905334473
    6. 'contin' → logprob: -5.122963905334473
    7. '               ' → logprob: -5.247963905334473
    8. 'needs' → logprob: -5.372963905334473
    9. 'need' → logprob: -5.622963905334473
    10. '           ' → logprob: -5.622963905334473

Token 1604: ' le' (ID: 505)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.27519628405570984
    2. '#' → logprob: -2.0251963138580322
    3. 'de' → logprob: -2.9001963138580322
    4. '               ' → logprob: -4.025196075439453
    5. 'd' → logprob: -4.400196075439453
    6. ' à' → logprob: -4.775196075439453
    7. ' de' → logprob: -4.900196075439453
    8. 'le' → logprob: -5.775196075439453
    9. 'la' → logprob: -6.900196075439453
    10. '                   ' → logprob: -7.650196075439453

Token 1605: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.06973143666982651
    2. '#' → logprob: -3.5697314739227295
    3. ' nombre' → logprob: -4.31973123550415
    4. 'num' → logprob: -4.44473123550415
    5. 'number' → logprob: -5.19473123550415
    6. 'count' → logprob: -6.31973123550415
    7. 'nb' → logprob: -6.81973123550415
    8. 'lap' → logprob: -6.81973123550415
    9. 'n' → logprob: -7.31973123550415
    10. 'import' → logprob: -7.31973123550415

Token 1606: ' d' (ID: 272)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.8080525994300842
    2. '               ' → logprob: -1.0580525398254395
    3. ' de' → logprob: -2.4330525398254395
    4. '#' → logprob: -2.8080525398254395
    5. 'des' → logprob: -3.9330525398254395
    6. 'd' → logprob: -4.1830525398254395
    7. 'import' → logprob: -4.9330525398254395
    8. 'of' → logprob: -5.8080525398254395
    9. '                   ' → logprob: -5.9330525398254395
    10. '   ' → logprob: -6.3080525398254395

Token 1607: ''' (ID: 6)
  Prédit: 'sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sp' → logprob: -0.6908344030380249
    2. 'arb' → logprob: -1.315834403038025
    3. ' spanning' → logprob: -1.565834403038025
    4. 'ar' → logprob: -4.3158345222473145
    5. ' arbres' → logprob: -5.9408345222473145
    6. 's' → logprob: -6.6908345222473145
    7. 'M' → logprob: -7.0658345222473145
    8. 'ways' → logprob: -7.3158345222473145
    9. '_sp' → logprob: -7.6908345222473145
    10. 'trees' → logprob: -7.9408345222473145

Token 1608: 'arb' (ID: 36740)
  Prédit: 'arb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arb' → logprob: -0.014263524673879147
    2. 'sp' → logprob: -4.63926362991333
    3. 'ar' → logprob: -6.13926362991333
    4. 'trees' → logprob: -6.51426362991333
    5. ' arbres' → logprob: -8.514263153076172
    6. '#' → logprob: -9.264263153076172
    7. 'tree' → logprob: -9.264263153076172
    8. 'acy' → logprob: -9.389263153076172
    9. 'fore' → logprob: -9.639263153076172
    10. ' spanning' → logprob: -10.014263153076172

Token 1609: 'res' (ID: 430)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.6970913410186768
    2. 'res' → logprob: -1.6970913410186768
    3. 'êtes' → logprob: -1.8220913410186768
    4. 'tes' → logprob: -3.1970913410186768
    5. '^{' → logprob: -3.5720913410186768
    6. '̂' → logprob: -3.8220913410186768
    7. 'es' → logprob: -4.072091102600098
    8. '```' → logprob: -4.447091102600098
    9. '#' → logprob: -5.197091102600098
    10. '``' → logprob: -5.822091102600098

Token 1610: ' couvr' (ID: 129883)
  Prédit: 'sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sp' → logprob: -0.1655517965555191
    2. 'de' → logprob: -2.5405519008636475
    3. 'g' → logprob: -3.5405519008636475
    4. 'span' → logprob: -4.415551662445068
    5. 'c' → logprob: -4.790551662445068
    6. ' couvr' → logprob: -4.915551662445068
    7. '_sp' → logprob: -5.290551662445068
    8. 'spann' → logprob: -6.290551662445068
    9. '_c' → logprob: -6.415551662445068
    10. '   ' → logprob: -6.665551662445068

Token 1611: 'ants' (ID: 2027)
  Prédit: 'ant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.31349924206733704
    2. 'ants' → logprob: -1.3134992122650146
    3. 't' → logprob: -9.813499450683594
    4. 'ents' → logprob: -9.938499450683594
    5. 'iant' → logprob: -10.438499450683594
    6. 'u' → logprob: -10.563499450683594
    7. 'ante' → logprob: -11.563499450683594
    8. 'ent' → logprob: -11.813499450683594
    9. 'a' → logprob: -11.938499450683594
    10. '#' → logprob: -12.438499450683594

Token 1612: ' dans' (ID: 2671)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.29895609617233276
    2. 'import' → logprob: -2.1739561557769775
    3. '
' → logprob: -2.5489561557769775
    4. '                
' → logprob: -3.2989561557769775
    5. '#' → logprob: -4.548955917358398
    6. ' 
' → logprob: -6.048955917358398
    7. '  
' → logprob: -6.048955917358398
    8. ',
' → logprob: -6.298955917358398
    9. ',' → logprob: -6.423955917358398
    10. ' (' → logprob: -6.923955917358398

Token 1613: ' ce' (ID: 2357)
  Prédit: 'unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'unique' → logprob: -0.023150324821472168
    2. ' unique' → logprob: -5.273150444030762
    3. 'graph' → logprob: -5.523150444030762
    4. 'la' → logprob: -5.523150444030762
    5. 'k' → logprob: -6.023150444030762
    6. 'le' → logprob: -6.273150444030762
    7. 'the' → logprob: -6.648150444030762
    8. 'G' → logprob: -6.773150444030762
    9. 'this' → logprob: -7.023150444030762
    10. 'un' → logprob: -7.898150444030762

Token 1614: ' grap' (ID: 60955)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.3543623387813568
    2. 'unique' → logprob: -2.3543622493743896
    3. 'graph' → logprob: -2.3543622493743896
    4. 'gr' → logprob: -2.4793622493743896
    5. 's' → logprob: -4.604362487792969
    6. '#' → logprob: -4.854362487792969
    7. 'component' → logprob: -5.729362487792969
    8. 'k' → logprob: -6.604362487792969
    9. 'g' → logprob: -7.104362487792969
    10. 'sub' → logprob: -8.604362487792969

Token 1615: 'he' (ID: 273)
  Prédit: 'aphe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aphe' → logprob: -0.011786310002207756
    2. 'he' → logprob: -4.761786460876465
    3. 'phe' → logprob: -5.886786460876465
    4. 'aph' → logprob: -8.511786460876465
    5. 'ph' → logprob: -9.011786460876465
    6. 'che' → logprob: -10.386786460876465
    7. 'ap' → logprob: -11.136786460876465
    8. '#' → logprob: -12.386786460876465
    9. 'h' → logprob: -12.636786460876465
    10. '`' → logprob: -13.136786460876465

Token 1616: ' complet' (ID: 5127)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.19040167331695557
    2. '                
' → logprob: -2.565401554107666
    3. '
' → logprob: -2.690401554107666
    4. 'import' → logprob: -4.690401554107666
    5. ',' → logprob: -5.815401554107666
    6. ',
' → logprob: -5.940401554107666
    7. '  
' → logprob: -6.190401554107666
    8. '\n' → logprob: -6.315401554107666
    9. ' 
' → logprob: -6.565401554107666
    10. '    
' → logprob: -6.690401554107666

Token 1617: ' form' (ID: 1625)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.782246470451355
    2. '
' → logprob: -1.157246470451355
    3. '                
' → logprob: -2.9072465896606445
    4. ',' → logprob: -3.2822465896606445
    5. '#' → logprob: -3.5322465896606445
    6. ',
' → logprob: -3.7822465896606445
    7. '.
' → logprob: -3.9072465896606445
    8. '  
' → logprob: -4.6572465896606445
    9. 'import' → logprob: -5.1572465896606445
    10. '.' → logprob: -5.1572465896606445

Token 1618: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.033685352653265
    2. 'ée' → logprob: -4.033685207366943
    3. 'ed' → logprob: -4.533685207366943
    4. 'ant' → logprob: -5.908685207366943
    5. 'e' → logprob: -6.533685207366943
    6. 'és' → logprob: -8.408685684204102
    7. 'd' → logprob: -9.783685684204102
    8. '#' → logprob: -10.158685684204102
    9. 'ées' → logprob: -10.408685684204102
    10. 'id' → logprob: -10.533685684204102

Token 1619: ' par' (ID: 686)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.0357047319412231
    2. ' par' → logprob: -1.0357047319412231
    3. 'par' → logprob: -1.4107047319412231
    4. ',' → logprob: -4.410704612731934
    5. 'de' → logprob: -5.160704612731934
    6. '                   ' → logprob: -5.285704612731934
    7. 'by' → logprob: -5.410704612731934
    8. '.' → logprob: -5.660704612731934
    9. ' =' → logprob: -5.910704612731934
    10. '=' → logprob: -6.535704612731934

Token 1620: ' ces' (ID: 10532)
  Prédit: 'unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unique' → logprob: -0.29093146324157715
    2. ' unique' → logprob: -2.290931463241577
    3. ' ces' → logprob: -3.165931463241577
    4. 'l' → logprob: -3.540931463241577
    5. 'les' → logprob: -3.790931463241577
    6. 'these' → logprob: -4.540931701660156
    7. 'le' → logprob: -4.665931701660156
    8. ' les' → logprob: -4.915931701660156
    9. 'ces' → logprob: -5.040931701660156
    10. ' these' → logprob: -5.290931701660156

Token 1621: ' ar' (ID: 646)
  Prédit: 'rac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rac' → logprob: -0.9014487862586975
    2. 'ar' → logprob: -1.1514487266540527
    3. 'unique' → logprob: -2.1514487266540527
    4. 'edges' → logprob: -2.2764487266540527
    5. ' rac' → logprob: -3.7764487266540527
    6. 's' → logprob: -4.776448726654053
    7. 'are' → logprob: -5.151448726654053
    8. 'roots' → logprob: -5.651448726654053
    9. ' edges' → logprob: -6.026448726654053
    10. ' unique' → logprob: -6.026448726654053

Token 1622: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.06248227879405022
    2. 'tes' → logprob: -2.9374823570251465
    3. '^' → logprob: -6.3124823570251465
    4. 'cs' → logprob: -6.5624823570251465
    5. '(' → logprob: -6.9374823570251465
    6. 'c' → logprob: -7.4374823570251465
    7. 'ètes' → logprob: -7.9374823570251465
    8. 'ê' → logprob: -8.562481880187988
    9. '(s' → logprob: -8.812481880187988
    10. 'etes' → logprob: -8.937481880187988

Token 1623: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.13060256838798523
    2. '                
' → logprob: -2.6306025981903076
    3. '
' → logprob: -3.2556025981903076
    4. ',
' → logprob: -6.3806023597717285
    5. 'import' → logprob: -6.5056023597717285
    6. '#' → logprob: -6.6306023597717285
    7. ',' → logprob: -7.1306023597717285
    8. '#
' → logprob: -7.3806023597717285
    9. '  
' → logprob: -7.6306023597717285
    10. '
' → logprob: -7.7556023597717285

Token 1624: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0012402292340993881
    2. '                
' → logprob: -7.751240253448486
    3. '```' → logprob: -8.251239776611328
    4. '#' → logprob: -8.751239776611328
    5. 'import' → logprob: -9.376239776611328
    6. ',' → logprob: -9.626239776611328
    7. '<|end|>' → logprob: -10.251239776611328
    8. '`' → logprob: -10.376239776611328
    9. '       ' → logprob: -10.376239776611328
    10. '
' → logprob: -10.501239776611328

Token 1625: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0608862079679966
    2. '
' → logprob: -3.5608861446380615
    3. '                
' → logprob: -4.685886383056641
    4. 'import' → logprob: -4.935886383056641
    5. '#' (adapté à ' #') → logprob: -5.935886383056641
    6. ' 
' → logprob: -6.560886383056641
    7. '    
' → logprob: -6.560886383056641
    8. '  
' → logprob: -6.685886383056641
    9. '\n' → logprob: -6.810886383056641
    10. 'n' → logprob: -7.060886383056641

Token 1626: ' Cela' (ID: 44403)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4145183265209198
    2. 'import' → logprob: -1.7895183563232422
    3. '               ' → logprob: -1.9145183563232422
    4. 'from' → logprob: -4.539518356323242
    5. 'n' → logprob: -5.289518356323242
    6. 'lap' → logprob: -5.914518356323242
    7. '                
' → logprob: -6.664518356323242
    8. 'if' → logprob: -6.664518356323242
    9. 'L' → logprob: -7.039518356323242
    10. 'Lap' → logprob: -7.164518356323242

Token 1627: ' correspond' (ID: 11095)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3008483946323395
    2. 'est' → logprob: -2.4258484840393066
    3. '           ' → logprob: -3.8008484840393066
    4. 'requires' → logprob: -3.8008484840393066
    5. ' nécessite' → logprob: -4.175848484039307
    6. ' =' → logprob: -4.300848484039307
    7. '               ' → logprob: -4.300848484039307
    8. 'requ' → logprob: -4.425848484039307
    9. '       ' → logprob: -4.925848484039307
    10. ' #' → logprob: -4.925848484039307

Token 1628: ' au' (ID: 2791)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.2611195743083954
    2. ' à' → logprob: -1.5111196041107178
    3. '#' → logprob: -5.136119365692139
    4. 'au' → logprob: -6.636119365692139
    5. ' au' → logprob: -6.886119365692139
    6. ' #' → logprob: -8.136119842529297
    7. ''à' → logprob: -8.886119842529297
    8. ' to' → logprob: -9.136119842529297
    9. '   ' → logprob: -9.136119842529297
    10. 'to' → logprob: -9.636119842529297

Token 1629: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.036539748311042786
    2. '#' → logprob: -3.7865397930145264
    3. 'k' → logprob: -5.786539554595947
    4. 'len' → logprob: -6.786539554595947
    5. 'lap' → logprob: -6.911539554595947
    6. 'import' → logprob: -7.036539554595947
    7. ' nombre' → logprob: -7.161539554595947
    8. 'from' → logprob: -7.161539554595947
    9. 'count' → logprob: -7.161539554595947
    10. 'mat' → logprob: -7.286539554595947

Token 1630: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.9746978282928467
    2. 'de' → logprob: -1.3496978282928467
    3. '#' → logprob: -2.2246978282928467
    4. 'd' → logprob: -2.4746978282928467
    5. '_d' → logprob: -2.7246978282928467
    6. ' d' → logprob: -2.9746978282928467
    7. '_de' → logprob: -3.5996978282928467
    8. 'des' → logprob: -5.474698066711426
    9. '=' → logprob: -5.599698066711426
    10. ' des' → logprob: -5.724698066711426

Token 1631: ''' (ID: 6)
  Prédit: 'arb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arb' → logprob: -0.3047158122062683
    2. 'sp' → logprob: -1.429715871810913
    3. 'ar' → logprob: -4.304715633392334
    4. ''ar' → logprob: -5.804715633392334
    5. 'M' → logprob: -6.679715633392334
    6. ' spanning' → logprob: -6.679715633392334
    7. ''esp' → logprob: -7.054715633392334
    8. 'ways' → logprob: -7.429715633392334
    9. '#' → logprob: -7.679715633392334
    10. 'arith' → logprob: -8.179716110229492

Token 1632: 'arb' (ID: 36740)
  Prédit: 'arb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arb' → logprob: -0.031666629016399384
    2. 'sp' → logprob: -3.6566665172576904
    3. 'ar' → logprob: -5.5316667556762695
    4. 'trees' → logprob: -7.7816667556762695
    5. ' arbres' → logprob: -8.40666675567627
    6. 'M' → logprob: -8.40666675567627
    7. ' spanning' → logprob: -8.78166675567627
    8. 'K' → logprob: -9.78166675567627
    9. '#' → logprob: -10.53166675567627
    10. 'arith' → logprob: -10.65666675567627

Token 1633: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.06916370242834091
    2. 'es' → logprob: -3.8191637992858887
    3. 'bres' → logprob: -3.8191637992858887
    4. 'tes' → logprob: -4.444163799285889
    5. '^' → logprob: -5.444163799285889
    6. 'êtes' → logprob: -6.694163799285889
    7. 's' → logprob: -7.069163799285889
    8. '^{' → logprob: -7.444163799285889
    9. '```' → logprob: -7.444163799285889
    10. 'trees' → logprob: -7.694163799285889

Token 1634: ' couvr' (ID: 129883)
  Prédit: 'sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sp' → logprob: -0.3064756393432617
    2. ' couvr' → logprob: -1.9314756393432617
    3. 'c' → logprob: -2.8064756393432617
    4. '_c' → logprob: -4.306475639343262
    5. '   ' → logprob: -4.431475639343262
    6. '_sp' → logprob: -5.056475639343262
    7. '       ' → logprob: -5.431475639343262
    8. 'de' → logprob: -5.806475639343262
    9. 'spann' → logprob: -6.056475639343262
    10. 'span' → logprob: -6.056475639343262

Token 1635: 'ants' (ID: 2027)
  Prédit: 'ants'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ants' → logprob: -0.006007717456668615
    2. 'ant' → logprob: -5.506007671356201
    3. 't' → logprob: -7.756007671356201
    4. '#' → logprob: -7.881007671356201
    5. 'g' → logprob: -8.38100814819336
    6. 'ents' → logprob: -8.63100814819336
    7. 's' → logprob: -8.88100814819336
    8. '{' → logprob: -9.63100814819336
    9. 'angs' → logprob: -9.75600814819336
    10. 'ans' → logprob: -9.88100814819336

Token 1636: ' d' (ID: 272)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dans' → logprob: -0.6993536353111267
    2. 'du' → logprob: -1.8243536949157715
    3. 'com' → logprob: -3.0743536949157715
    4. ' dans' → logprob: -3.3243536949157715
    5. 'sur' → logprob: -3.4493536949157715
    6. 'de' → logprob: -3.4493536949157715
    7. 'sp' → logprob: -3.8243536949157715
    8. 'pond' → logprob: -3.9493536949157715
    9. '(com' → logprob: -4.0743536949157715
    10. ',' → logprob: -4.1993536949157715

Token 1637: ''un' (ID: 9788)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.9309688210487366
    2. 'e' → logprob: -1.0559687614440918
    3. ''un' → logprob: -1.8059687614440918
    4. 'le' → logprob: -4.305968761444092
    5. '`' → logprob: -4.680968761444092
    6. '```' → logprob: -4.805968761444092
    7. 'unique' → logprob: -4.805968761444092
    8. 'ans' → logprob: -4.930968761444092
    9. 'un' → logprob: -5.180968761444092
    10. 'es' → logprob: -5.430968761444092

Token 1638: ' grap' (ID: 60955)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.27326148748397827
    2. 'graph' → logprob: -1.898261547088623
    3. 'com' → logprob: -3.023261547088623
    4. 'complete' → logprob: -4.148261547088623
    5. ' grap' → logprob: -4.773261547088623
    6. 'G' → logprob: -5.273261547088623
    7. 'g' → logprob: -5.273261547088623
    8. '```' → logprob: -6.148261547088623
    9. 'k' → logprob: -7.648261547088623
    10. 'mult' → logprob: -7.648261547088623

Token 1639: 'he' (ID: 273)
  Prédit: 'he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.25882112979888916
    2. 'aphe' → logprob: -1.5088211297988892
    3. 'rap' → logprob: -5.6338210105896
    4. 'h' → logprob: -6.3838210105896
    5. '#' → logprob: -8.133821487426758
    6. 'raph' → logprob: -8.383821487426758
    7. 'hé' → logprob: -8.508821487426758
    8. 'phe' → logprob: -8.508821487426758
    9. 'r' → logprob: -9.008821487426758
    10. '{' → logprob: -9.383821487426758

Token 1640: ' donné' (ID: 52079)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.7154741883277893
    2. ',' → logprob: -2.0904741287231445
    3. ' complet' → logprob: -2.4654741287231445
    4. 'avec' → logprob: -3.2154741287231445
    5. 'non' → logprob: -3.4654741287231445
    6. 'G' → logprob: -3.4654741287231445
    7. 'dont' → logprob: -3.7154741287231445
    8. 'conn' → logprob: -4.0904741287231445
    9. 'simple' → logprob: -4.2154741287231445
    10. 'import' → logprob: -4.3404741287231445

Token 1641: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7056025862693787
    2. '               ' → logprob: -1.0806026458740234
    3. 'import' → logprob: -2.7056026458740234
    4. '                
' → logprob: -3.3306026458740234
    5. '#' → logprob: -3.4556026458740234
    6. ',' → logprob: -4.830602645874023
    7. '\n' → logprob: -5.330602645874023
    8. ',
' → logprob: -5.580602645874023
    9. '\' → logprob: -6.205602645874023
    10. 'from' → logprob: -6.330602645874023

Token 1642: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003953494131565094
    2. '                
' → logprob: -5.753953456878662
    3. '
' → logprob: -9.00395393371582
    4. '       ' → logprob: -9.25395393371582
    5. '```' → logprob: -9.50395393371582
    6. '        
' → logprob: -9.75395393371582
    7. '    
' → logprob: -9.75395393371582
    8. '           ' → logprob: -10.37895393371582
    9. '\n' → logprob: -10.50395393371582
    10. '                   ' → logprob: -10.50395393371582

Token 1643: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.35117852687835693
    2. '               ' → logprob: -1.476178526878357
    3. '                
' → logprob: -3.4761786460876465
    4. 'import' → logprob: -3.7261786460876465
    5. '#' (adapté à ' #') → logprob: -5.8511786460876465
    6. '\n' → logprob: -6.1011786460876465
    7. 'from' → logprob: -6.2261786460876465
    8. ' 
' → logprob: -6.8511786460876465
    9. '    
' → logprob: -6.9761786460876465
    10. '  
' → logprob: -7.6011786460876465

Token 1644: ' On' (ID: 2160)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6376695036888123
    2. '               ' → logprob: -1.262669563293457
    3. 'from' → logprob: -2.637669563293457
    4. '#' → logprob: -3.137669563293457
    5. '
' → logprob: -3.137669563293457
    6. '                
' → logprob: -4.512669563293457
    7. 'def' → logprob: -5.512669563293457
    8. ' from' → logprob: -5.762669563293457
    9. 'n' → logprob: -6.137669563293457
    10. 'if' → logprob: -6.637669563293457

Token 1645: ' l' (ID: 305)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.44143256545066833
    2. 'continue' → logprob: -1.4414325952529907
    3. '#' → logprob: -3.191432476043701
    4. 'build' → logprob: -3.691432476043701
    5. 'contin' → logprob: -4.316432476043701
    6. 'def' → logprob: -4.566432476043701
    7. 'continu' → logprob: -4.816432476043701
    8. 'need' → logprob: -5.191432476043701
    9. 'do' → logprob: -5.816432476043701
    10. 'construct' → logprob: -6.441432476043701

Token 1646: ''ob' (ID: 62273)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.19780877232551575
    2. '#' → logprob: -2.0728087425231934
    3. 'def' → logprob: -3.5728087425231934
    4. 'n' → logprob: -5.572808742523193
    5. 'from' → logprob: -5.572808742523193
    6. 'e' → logprob: -5.822808742523193
    7. ''import' → logprob: -5.947808742523193
    8. ' #' → logprob: -6.322808742523193
    9. 's' → logprob: -6.447808742523193
    10. '[' → logprob: -7.447808742523193

Token 1647: 't' (ID: 83)
  Prédit: 'serve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'serve' → logprob: -0.3675916790962219
    2. 'serv' → logprob: -1.3675916194915771
    3. 'served' → logprob: -3.742591619491577
    4. 'tenir' → logprob: -4.742591857910156
    5. 'server' → logprob: -5.242591857910156
    6. '#' → logprob: -5.617591857910156
    7. 'tain' → logprob: -5.742591857910156
    8. 't' → logprob: -6.492591857910156
    9. 'servable' → logprob: -6.867591857910156
    10. 'ject' → logprob: -6.992591857910156

Token 1648: 'ient' (ID: 773)
  Prédit: 'ient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.331798255443573
    2. 't' → logprob: -2.5817983150482178
    3. 'met' → logprob: -3.2067983150482178
    4. 'ève' → logprob: -3.7067983150482178
    5. 'd' → logprob: -3.8317983150482178
    6. 'ène' → logprob: -4.081798076629639
    7. 'ère' → logprob: -4.206798076629639
    8. 'p' → logprob: -4.831798076629639
    9. 'ab' → logprob: -5.206798076629639
    10. 'vient' → logprob: -5.331798076629639

Token 1649: ' en' (ID: 469)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.6669268608093262
    2. ' par' → logprob: -0.9169268608093262
    3. 'en' → logprob: -3.541926860809326
    4. '=' → logprob: -4.791926860809326
    5. 'by' → logprob: -5.041926860809326
    6. ' =' → logprob: -5.166926860809326
    7. ' en' → logprob: -5.291926860809326
    8. '               ' → logprob: -5.291926860809326
    9. ' via' → logprob: -5.541926860809326
    10. '_par' → logprob: -5.541926860809326

Token 1650: ' constru' (ID: 14218)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.4728705883026123
    2. '#' → logprob: -1.8478705883026123
    3. 'def' → logprob: -2.9728705883026123
    4. 'com' → logprob: -3.2228705883026123
    5. 'construct' → logprob: -3.2228705883026123
    6. ' constru' → logprob: -3.7228705883026123
    7. '```' → logprob: -4.847870826721191
    8. 'build' → logprob: -4.847870826721191
    9. 'mod' → logprob: -5.347870826721191
    10. 'len' → logprob: -5.847870826721191

Token 1651: 'isant' (ID: 56111)
  Prédit: 'ant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -1.0920213460922241
    2. 'rant' → logprob: -1.7170213460922241
    3. 'isant' → logprob: -1.9670213460922241
    4. 'ct' → logprob: -2.4670214653015137
    5. 'vant' → logprob: -3.3420214653015137
    6. 'ivant' → logprob: -3.4670214653015137
    7. 'it' → logprob: -3.4670214653015137
    8. 'itant' → logprob: -3.5920214653015137
    9. 'ction' → logprob: -3.8420214653015137
    10. 'quant' → logprob: -4.092021465301514

Token 1652: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.02978902868926525
    2. 'lap' → logprob: -3.9047889709472656
    3. 'une' → logprob: -5.029788970947266
    4. ' la' → logprob: -6.779788970947266
    5. 'le' → logprob: -7.279788970947266
    6. 'the' → logprob: -8.154788970947266
    7. 'l' → logprob: -8.404788970947266
    8. 'Lap' → logprob: -9.029788970947266
    9. '#' → logprob: -9.904788970947266
    10. 'L' → logprob: -10.529788970947266

Token 1653: ' matr' (ID: 25095)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.02374083548784256
    2. 'lap' → logprob: -4.273740768432617
    3. 'import' → logprob: -5.398740768432617
    4. '#' → logprob: -5.773740768432617
    5. 'n' → logprob: -6.773740768432617
    6. 'from' → logprob: -8.398740768432617
    7. 'matrix' → logprob: -8.773740768432617
    8. 'def' → logprob: -9.148740768432617
    9. '"L' → logprob: -9.273740768432617
    10. 'Lap' → logprob: -9.648740768432617

Token 1654: 'ice' (ID: 603)
  Prédit: 'rice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rice' → logprob: -0.4839196503162384
    2. 'rix' → logprob: -1.233919620513916
    3. 'r' → logprob: -2.483919620513916
    4. 'ix' → logprob: -5.108919620513916
    5. 'rices' → logprob: -6.608919620513916
    6. '[
' → logprob: -7.983919620513916
    7. 'x' → logprob: -8.733920097351074
    8. 'ris' → logprob: -8.858920097351074
    9. '```' → logprob: -8.858920097351074
    10. '[' → logprob: -8.983920097351074

Token 1655: ' de' (ID: 334)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.10149507224559784
    2. 'lap' → logprob: -2.4764950275421143
    3. ' of' → logprob: -5.226495265960693
    4. '[' → logprob: -6.851495265960693
    5. '[
' → logprob: -6.851495265960693
    6. 'Lap' → logprob: -7.101495265960693
    7. 'n' → logprob: -7.226495265960693
    8. 'of' → logprob: -7.351495265960693
    9. ' lap' → logprob: -7.601495265960693
    10. 'l' → logprob: -7.976495265960693

Token 1656: ' Lap' (ID: 58096)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.321455717086792
    2. 'Kir' → logprob: -1.696455717086792
    3. 'Lap' → logprob: -2.446455717086792
    4. 'adj' → logprob: -5.946455955505371
    5. 'lap' → logprob: -6.196455955505371
    6. 'K' → logprob: -9.196455955505371
    7. 'laps' → logprob: -10.446455955505371
    8. ' Lap' → logprob: -10.571455955505371
    9. 'kir' → logprob: -10.696455955505371
    10. 'inc' → logprob: -10.821455955505371

Token 1657: 'lace' (ID: 29578)
  Prédit: 'lac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lac' → logprob: -0.00015705463010817766
    2. 'lace' → logprob: -9.000157356262207
    3. 'plac' → logprob: -11.000157356262207
    4. 'ac' → logprob: -11.500157356262207
    5. 'alc' → logprob: -12.625157356262207
    6. '[[' → logprob: -14.375157356262207
    7. ']' → logprob: -14.625157356262207
    8. '[' → logprob: -14.625157356262207
    9. 'l' → logprob: -14.625157356262207
    10. '[
' → logprob: -15.125157356262207

Token 1658: ' et' (ID: 859)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3814663290977478
    2. '
' → logprob: -1.8814663887023926
    3. '                
' → logprob: -3.7564663887023926
    4. '(n' → logprob: -4.006466388702393
    5. '\' → logprob: -4.006466388702393
    6. '#' → logprob: -4.631466388702393
    7. 'matrix' → logprob: -4.631466388702393
    8. '           ' → logprob: -4.756466388702393
    9. '(
' → logprob: -5.131466388702393
    10. 'import' → logprob: -5.131466388702393

Token 1659: ' calcul' (ID: 7559)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.09774676710367203
    2. ' calcul' → logprob: -2.9727468490600586
    3. 'en' → logprob: -4.097746849060059
    4. 'det' → logprob: -4.847746849060059
    5. '```' → logprob: -5.722746849060059
    6. '#' → logprob: -6.097746849060059
    7. ' en' → logprob: -6.347746849060059
    8. ' calculating' → logprob: -6.347746849060059
    9. ' supprim' → logprob: -6.472746849060059
    10. 'd' → logprob: -7.347746849060059

Token 1660: 'ant' (ID: 493)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.4652087986469269
    2. 'ant' → logprob: -1.3402087688446045
    3. 'ating' → logprob: -2.4652087688446045
    4. '   ' → logprob: -5.090209007263184
    5. 'ante' → logprob: -5.090209007263184
    6. '#' → logprob: -5.215209007263184
    7. '       ' → logprob: -6.340209007263184
    8. '```' → logprob: -7.215209007263184
    9. 'ateur' → logprob: -7.840209007263184
    10. 'ate' → logprob: -7.965209007263184

Token 1661: ' son' (ID: 2391)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.6305564641952515
    2. 'le' → logprob: -1.1305564641952515
    3. 'det' → logprob: -2.880556583404541
    4. 'the' → logprob: -3.255556583404541
    5. '(' → logprob: -4.755556583404541
    6. 'l' → logprob: -5.005556583404541
    7. ' la' → logprob: -5.380556583404541
    8. '(le' → logprob: -5.380556583404541
    9. 'son' → logprob: -5.505556583404541
    10. '(det' → logprob: -5.755556583404541

Token 1662: ' détermin' (ID: 62185)
  Prédit: 'det'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'det' → logprob: -0.020888810977339745
    2. ' determinant' → logprob: -4.020888805389404
    3. 'co' → logprob: -7.020888805389404
    4. ' détermin' → logprob: -7.395888805389404
    5. '```' → logprob: -7.645888805389404
    6. '_det' → logprob: -8.520889282226562
    7. 'dé' → logprob: -8.770889282226562
    8. 'Det' → logprob: -9.020889282226562
    9. 'n' → logprob: -10.520889282226562
    10. 'def' → logprob: -10.645889282226562

Token 1663: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.16040559113025665
    2. 'ante' → logprob: -1.9104056358337402
    3. '#' → logprob: -8.910405158996582
    4. '\' → logprob: -12.035405158996582
    5. '
' → logprob: -12.160405158996582
    6. 'ант' → logprob: -12.160405158996582
    7. '**' → logprob: -12.910405158996582
    8. 'e' → logprob: -13.035405158996582
    9. '[' → logprob: -13.160405158996582
    10. '   ' → logprob: -13.285405158996582

Token 1664: ' principal' (ID: 10589)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6686981916427612
    2. '
' → logprob: -1.0436981916427612
    3. '\' → logprob: -3.168698310852051
    4. '\n' → logprob: -3.168698310852051
    5. 'import' → logprob: -4.418698310852051
    6. '                
' → logprob: -4.668698310852051
    7. '(n' → logprob: -5.668698310852051
    8. '    
' → logprob: -5.918698310852051
    9. ' 
' → logprob: -6.043698310852051
    10. '           ' → logprob: -6.168698310852051

Token 1665: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8338698148727417
    2. '               ' → logprob: -0.8338698148727417
    3. '\n' → logprob: -2.9588699340820312
    4. '\' → logprob: -3.2088699340820312
    5. 'import' → logprob: -4.583869934082031
    6. '                
' → logprob: -4.958869934082031
    7. '           ' → logprob: -5.583869934082031
    8. '(n' → logprob: -5.958869934082031
    9. '```' → logprob: -6.458869934082031
    10. ',' → logprob: -6.833869934082031

Token 1666: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4738781452178955
    2. '
' → logprob: -1.4738781452178955
    3. '                
' → logprob: -2.3488781452178955
    4. '\n' → logprob: -3.8488781452178955
    5. '    
' → logprob: -4.848877906799316
    6. ' 
' → logprob: -5.473877906799316
    7. '\' → logprob: -5.723877906799316
    8. '  
' → logprob: -5.973877906799316
    9. '```' → logprob: -6.473877906799316
    10. 'n' → logprob: -6.598877906799316

Token 1667: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4179108440876007
    2. '
' → logprob: -1.4179108142852783
    3. 'import' → logprob: -2.7929108142852783
    4. 'n' → logprob: -3.6679108142852783
    5. '                
' → logprob: -5.292911052703857
    6. 'size' → logprob: -5.792911052703857
    7. '#' (adapté à ' #') → logprob: -6.667911052703857
    8. 'def' → logprob: -7.417911052703857
    9. 'from' → logprob: -7.792911052703857
    10. '   ' → logprob: -8.0429105758667

Token 1668: ' Constru' (ID: 98396)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.26530298590660095
    2. 'import' → logprob: -2.015302896499634
    3. 'n' → logprob: -3.015302896499634
    4. '
' → logprob: -3.515302896499634
    5. '#' → logprob: -5.015303134918213
    6. 'from' → logprob: -5.640303134918213
    7. '                
' → logprob: -5.640303134918213
    8. '```' → logprob: -6.140303134918213
    9. 'def' → logprob: -7.265303134918213
    10. 'size' → logprob: -7.390303134918213

Token 1669: 'ire' (ID: 594)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.4869527518749237
    2. 'ction' → logprob: -1.361952781677246
    3. 'ire' → logprob: -2.236952781677246
    4. 'cter' → logprob: -5.236952781677246
    5. 'ir' → logprob: -5.611952781677246
    6. '   ' → logprob: -6.111952781677246
    7. 'cte' → logprob: -6.236952781677246
    8. '#' → logprob: -6.486952781677246
    9. 'ite' → logprob: -6.736952781677246
    10. 'er' → logprob: -6.986952781677246

Token 1670: ' la' (ID: 557)
  Prédit: 'lap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lap' → logprob: -0.020980795845389366
    2. 'L' → logprob: -5.0209808349609375
    3. 'n' → logprob: -5.0209808349609375
    4. 'import' → logprob: -5.3959808349609375
    5. 'size' → logprob: -6.0209808349609375
    6. 'mat' → logprob: -8.395980834960938
    7. ' lap' → logprob: -8.895980834960938
    8. 'Lap' → logprob: -9.395980834960938
    9. 'matrix' → logprob: -10.020980834960938
    10. 'from' → logprob: -10.395980834960938

Token 1671: ' matr' (ID: 25095)
  Prédit: 'lap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lap' → logprob: -0.5292739868164062
    2. 'import' → logprob: -1.2792739868164062
    3. 'L' → logprob: -2.2792739868164062
    4. 'n' → logprob: -3.7792739868164062
    5. 'from' → logprob: -5.404273986816406
    6. 'size' → logprob: -6.529273986816406
    7. 'matrix' → logprob: -7.654273986816406
    8. 'degree' → logprob: -7.779273986816406
    9. 'mat' → logprob: -7.904273986816406
    10. '#' → logprob: -9.404273986816406

Token 1672: 'ice' (ID: 603)
  Prédit: 'ce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ce' → logprob: -0.6935374140739441
    2. 'ice' → logprob: -0.6935374140739441
    3. 'ix' → logprob: -8.318537712097168
    4. 'x' → logprob: -10.193537712097168
    5. 'xce' → logprob: -10.693537712097168
    6. '#' → logprob: -11.068537712097168
    7. 'cie' → logprob: -11.193537712097168
    8. 'ic' → logprob: -11.568537712097168
    9. 'e' → logprob: -11.943537712097168
    10. 'rice' → logprob: -12.318537712097168

Token 1673: ' de' (ID: 334)
  Prédit: 'lap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lap' → logprob: -1.354162335395813
    2. 'L' → logprob: -1.479162335395813
    3. 'import' → logprob: -1.729162335395813
    4. ' lap' → logprob: -1.979162335395813
    5. '               ' → logprob: -2.1041622161865234
    6. 'n' → logprob: -3.9791622161865234
    7. ' import' → logprob: -4.354162216186523
    8. 'size' → logprob: -4.479162216186523
    9. ' n' → logprob: -4.604162216186523
    10. ' size' → logprob: -5.104162216186523

Token 1674: ' Lap' (ID: 58096)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.06016990542411804
    2. 'k' → logprob: -4.310169696807861
    3. 'lap' → logprob: -4.435169696807861
    4. 'L' → logprob: -4.435169696807861
    5. '[
' → logprob: -4.935169696807861
    6. ' [[' → logprob: -5.185169696807861
    7. '[' → logprob: -5.310169696807861
    8. 'size' → logprob: -6.560169696807861
    9. '[k' → logprob: -6.935169696807861
    10. 'adj' → logprob: -7.810169696807861

Token 1675: 'lace' (ID: 29578)
  Prédit: 'lace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lace' → logprob: -0.005047556012868881
    2. 'place' → logprob: -5.50504732131958
    3. 'lac' → logprob: -7.13004732131958
    4. 'ace' → logprob: -9.380047798156738
    5. '       ' → logprob: -10.755047798156738
    6. 'e' → logprob: -11.380047798156738
    7. '   ' → logprob: -12.380047798156738
    8. 'ac' → logprob: -12.380047798156738
    9. '               ' → logprob: -12.505047798156738
    10. '                   ' → logprob: -12.880047798156738

Token 1676: ' (' (ID: 350)
  Prédit: 'lap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lap' → logprob: -0.016526712104678154
    2. 'L' → logprob: -5.266526699066162
    3. ' lap' → logprob: -5.641526699066162
    4. '               ' → logprob: -5.641526699066162
    5. 'Lap' → logprob: -6.766526699066162
    6. 'size' → logprob: -7.016526699066162
    7. 'import' → logprob: -7.266526699066162
    8. 'mat' → logprob: -7.766526699066162
    9. 'n' → logprob: -7.891526699066162
    10. ' Lap' → logprob: -8.76652717590332

Token 1677: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.14195457100868225
    2. '[[' → logprob: -3.1419546604156494
    3. '[' → logprob: -3.2669546604156494
    4. '[k' → logprob: -3.7669546604156494
    5. '[
' → logprob: -4.76695442199707
    6. 'import' → logprob: -5.39195442199707
    7. 'L' → logprob: -5.64195442199707
    8. 'size' → logprob: -6.01695442199707
    9. 'lap' → logprob: -6.26695442199707
    10. ' [[' → logprob: -6.51695442199707

Token 1678: ' x' (ID: 1215)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6694371700286865
    2. '-' → logprob: -1.5444371700286865
    3. ',' → logprob: -2.6694371700286865
    4. 'x' → logprob: -2.6694371700286865
    5. ' x' → logprob: -3.2944371700286865
    6. '[
' → logprob: -3.7944371700286865
    7. ' -' → logprob: -4.544437408447266
    8. '
' → logprob: -4.669437408447266
    9. '[' → logprob: -4.794437408447266
    10. 'import' → logprob: -4.919437408447266

Token 1679: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -2.6656825866666622e-05
    2. ' k' → logprob: -10.62502670288086
    3. '(k' → logprob: -13.62502670288086
    4. ')' → logprob: -14.37502670288086
    5. '   ' → logprob: -15.37502670288086
    6. '
' → logprob: -16.00002670288086
    7. '```' → logprob: -16.87502670288086
    8. ' (' → logprob: -17.00002670288086
    9. '_k' → logprob: -17.50002670288086
    10. '[k' → logprob: -17.50002670288086

Token 1680: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.523887574672699
    2. '[
' → logprob: -1.6488876342773438
    3. ')
' → logprob: -2.0238876342773438
    4. '[' → logprob: -3.3988876342773438
    5. ' matrix' → logprob: -3.6488876342773438
    6. 'matrix' → logprob: -4.648887634277344
    7. '               ' → logprob: -6.273887634277344
    8. ',' → logprob: -6.273887634277344
    9. '[[' → logprob: -7.148887634277344
    10. '                   ' → logprob: -7.148887634277344

Token 1681: '               ' (ID: 506)
  Prédit: 'lap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lap' → logprob: -0.3480292856693268
    2. 'L' → logprob: -1.5980292558670044
    3. '               ' → logprob: -2.973029375076294
    4. 'mat' → logprob: -4.223029136657715
    5. 'Lap' → logprob: -4.473029136657715
    6. 'matrix' → logprob: -4.848029136657715
    7. '   ' → logprob: -6.598029136657715
    8. 'import' → logprob: -7.098029136657715
    9. '[
' → logprob: -7.348029136657715
    10. ' lap' → logprob: -7.348029136657715

Token 1682: ' #' (ID: 1069)
  Prédit: 'lap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lap' → logprob: -0.228890061378479
    2. ' lap' → logprob: -2.6038899421691895
    3. '               ' → logprob: -3.4788899421691895
    4. 'L' → logprob: -3.6038899421691895
    5. 'Lap' → logprob: -3.9788899421691895
    6. 'import' → logprob: -4.4788899421691895
    7. 'mat' → logprob: -4.4788899421691895
    8. '
' → logprob: -4.7288899421691895
    9. ' Lap' → logprob: -4.9788899421691895
    10. 'matrix' → logprob: -5.3538899421691895

Token 1683: ' L' (ID: 451)
  Prédit: 'lap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lap' → logprob: -0.2813050448894501
    2. 'L' → logprob: -1.6563050746917725
    3. 'mat' → logprob: -3.9063050746917725
    4. 'import' → logprob: -4.281304836273193
    5. 'Lap' → logprob: -4.656304836273193
    6. '   ' → logprob: -5.656304836273193
    7. 'matrix' → logprob: -6.281304836273193
    8. '               ' → logprob: -6.656304836273193
    9. '           ' → logprob: -7.031304836273193
    10. '       ' → logprob: -7.156304836273193

Token 1684: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4597267806529999
    2. 'ap' → logprob: -1.7097268104553223
    3. '[' → logprob: -2.5847268104553223
    4. 'import' → logprob: -3.5847268104553223
    5. '=' → logprob: -3.9597268104553223
    6. '[
' → logprob: -4.209726810455322
    7. 'k' → logprob: -4.584726810455322
    8. '=[' → logprob: -5.084726810455322
    9. '   ' → logprob: -5.209726810455322
    10. 'apl' → logprob: -5.334726810455322

Token 1685: '][' (ID: 2696)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7884182929992676
    2. '][' → logprob: -1.6634182929992676
    3. ']' → logprob: -2.1634182929992676
    4. '[i' → logprob: -2.6634182929992676
    5. '[
' → logprob: -3.2884182929992676
    6. '=' → logprob: -3.2884182929992676
    7. '[' → logprob: -3.4134182929992676
    8. '   ' → logprob: -3.9134182929992676
    9. 'i' → logprob: -5.913418292999268
    10. 'e' → logprob: -6.038418292999268

Token 1686: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.008547198958694935
    2. ']' → logprob: -5.383547306060791
    3. '][' → logprob: -5.883547306060791
    4. 'k' → logprob: -7.258547306060791
    5. ',' → logprob: -9.383546829223633
    6. '[' → logprob: -9.883546829223633
    7. '   ' → logprob: -9.883546829223633
    8. ' i' → logprob: -10.258546829223633
    9. '[i' → logprob: -10.383546829223633
    10. 'u' → logprob: -10.508546829223633

Token 1687: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.17014430463314056
    2. '[i' → logprob: -2.1701443195343018
    3. ']+=' → logprob: -3.7951443195343018
    4. '][' → logprob: -4.795144081115723
    5. ']=' → logprob: -6.170144081115723
    6. '[' → logprob: -6.295144081115723
    7. '[
' → logprob: -6.420144081115723
    8. '=' → logprob: -6.420144081115723
    9. ' +=' → logprob: -6.795144081115723
    10. '   ' → logprob: -7.295144081115723

Token 1688: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38142579793930054
    2. '+=' → logprob: -2.0064258575439453
    3. ' =' → logprob: -2.1314258575439453
    4. ' +=' → logprob: -2.7564258575439453
    5. '[i' → logprob: -9.381425857543945
    6. '[' → logprob: -9.506425857543945
    7. ']+=' → logprob: -9.756425857543945
    8. '   ' → logprob: -10.131425857543945
    9. '           ' → logprob: -10.881425857543945
    10. '               ' → logprob: -10.881425857543945

Token 1689: ' degré' (ID: 169072)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5196694135665894
    2. 'len' → logprob: -1.2696694135665894
    3. 'sum' → logprob: -2.894669532775879
    4. 'degree' → logprob: -3.144669532775879
    5. 'deg' → logprob: -3.769669532775879
    6. 'degrees' → logprob: -6.144669532775879
    7. '-degree' → logprob: -7.769669532775879
    8. 'adj' → logprob: -9.644669532775879
    9. 'edges' → logprob: -10.144669532775879
    10. '(len' → logprob: -10.519669532775879

Token 1690: ' de' (ID: 334)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.021982472389936447
    2. '[u' → logprob: -4.771982669830322
    3. '[' → logprob: -5.021982669830322
    4. '[
' → logprob: -6.771982669830322
    5. '               ' → logprob: -6.896982669830322
    6. ' =' → logprob: -6.896982669830322
    7. '
' → logprob: -7.521982669830322
    8. '                   ' → logprob: -7.646982669830322
    9. '```' → logprob: -7.896982669830322
    10. ' +=' → logprob: -7.896982669830322

Token 1691: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0004574863996822387
    2. ' i' → logprob: -7.875457286834717
    3. 'u' → logprob: -10.625457763671875
    4. 'l' → logprob: -11.000457763671875
    5. '   ' → logprob: -11.250457763671875
    6. 'graph' → logprob: -11.625457763671875
    7. '[i' → logprob: -11.750457763671875
    8. 'unique' → logprob: -13.125457763671875
    9. 'la' → logprob: -13.750457763671875
    10. 'the' → logprob: -14.375457763671875

Token 1692: '
' (ID: 198)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2405308485031128
    2. '               ' → logprob: -1.3655308485031128
    3. ' =' → logprob: -1.4905308485031128
    4. '
' → logprob: -2.2405309677124023
    5. '=' → logprob: -3.6155309677124023
    6. '[
' → logprob: -3.8655309677124023
    7. '           ' → logprob: -3.9905309677124023
    8. '```' → logprob: -4.240530967712402
    9. '[' → logprob: -4.490530967712402
    10. '       ' → logprob: -5.115530967712402

Token 1693: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0015433111693710089
    2. '                   ' → logprob: -8.126543045043945
    3. '           ' → logprob: -8.376543045043945
    4. 'for' → logprob: -8.626543045043945
    5. 'L' → logprob: -8.751543045043945
    6. '   ' → logprob: -8.876543045043945
    7. '       ' → logprob: -9.126543045043945
    8. '[' → logprob: -9.501543045043945
    9. '#' → logprob: -9.501543045043945
    10. ' L' → logprob: -10.001543045043945

Token 1694: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.13373127579689026
    2. '[' → logprob: -2.3837313652038574
    3. '[
' → logprob: -4.883731365203857
    4. '                   ' → logprob: -5.133731365203857
    5. '           ' → logprob: -5.508731365203857
    6. '   ' → logprob: -6.008731365203857
    7. '```' → logprob: -6.133731365203857
    8. 'for' → logprob: -6.383731365203857
    9. '       ' → logprob: -6.633731365203857
    10. '(' → logprob: -7.008731365203857

Token 1695: ' L' (ID: 451)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.3545961380004883
    2. 'for' → logprob: -1.4795961380004883
    3. '#' → logprob: -1.6045961380004883
    4. 'i' → logprob: -1.7295961380004883
    5. 'L' → logprob: -2.1045961380004883
    6. '                   ' → logprob: -5.479596138000488
    7. '[i' → logprob: -5.979596138000488
    8. '   ' → logprob: -6.229596138000488
    9. '           ' → logprob: -6.729596138000488
    10. 'import' → logprob: -7.354596138000488

Token 1696: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.005381503142416477
    2. '[' → logprob: -5.2553815841674805
    3. '[u' → logprob: -10.13038158416748
    4. '[
' → logprob: -10.38038158416748
    5. ' =' → logprob: -10.88038158416748
    6. '[[' → logprob: -11.63038158416748
    7. '[int' → logprob: -12.00538158416748
    8. '[L' → logprob: -12.25538158416748
    9. ' [' → logprob: -12.38038158416748
    10. '[I' → logprob: -12.38038158416748

Token 1697: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.003893065033480525
    2. '[i' → logprob: -5.62889289855957
    3. ',i' → logprob: -9.12889289855957
    4. 'i' → logprob: -9.37889289855957
    5. '[' → logprob: -10.62889289855957
    6. ']' → logprob: -10.75389289855957
    7. '
' → logprob: -11.62889289855957
    8. ',' → logprob: -11.75389289855957
    9. ' ][' → logprob: -11.75389289855957
    10. '   ' → logprob: -12.50389289855957

Token 1698: 'j' (ID: 73)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0087516784551553e-05
    2. ',i' → logprob: -12.25001049041748
    3. ' i' → logprob: -13.12501049041748
    4. ',' → logprob: -13.87501049041748
    5. ']' → logprob: -14.37501049041748
    6. '[i' → logprob: -14.87501049041748
    7. 'j' → logprob: -15.25001049041748
    8. '
' → logprob: -15.25001049041748
    9. '```' → logprob: -15.50001049041748
    10. ')' → logprob: -15.75001049041748

Token 1699: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5260242819786072
    2. ']' → logprob: -1.151024341583252
    3. '[' → logprob: -2.901024341583252
    4. '][' → logprob: -3.776024341583252
    5. ']=' → logprob: -4.901024341583252
    6. '[j' → logprob: -5.901024341583252
    7. '```' → logprob: -7.401024341583252
    8. '=' → logprob: -7.526024341583252
    9. '[
' → logprob: -7.526024341583252
    10. ' [' → logprob: -7.651024341583252

Token 1700: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2684250771999359
    2. '[i' → logprob: -1.5184251070022583
    3. ' =' → logprob: -4.893424987792969
    4. '=' → logprob: -5.768424987792969
    5. ' [' → logprob: -5.893424987792969
    6. '[u' → logprob: -6.893424987792969
    7. '```' → logprob: -7.893424987792969
    8. '[int' → logprob: -8.268424987792969
    9. '[
' → logprob: -8.268424987792969
    10. '   ' → logprob: -8.643424987792969

Token 1701: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.008019437082111835
    2. ' -' → logprob: -5.13301944732666
    3. '0' → logprob: -7.25801944732666
    4. '-u' → logprob: -8.50801944732666
    5. '-M' → logprob: -8.63301944732666
    6. '-edge' → logprob: -8.75801944732666
    7. '-c' → logprob: -8.88301944732666
    8. '-num' → logprob: -8.88301944732666
    9. '-n' → logprob: -9.50801944732666
    10. '-k' → logprob: -9.63301944732666

Token 1702: 'nombre' (ID: 28576)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4736459888808895e-05
    2. ' ' → logprob: -11.750014305114746
    3. 'unique' → logprob: -12.875014305114746
    4. '(' → logprob: -13.625014305114746
    5. 'len' → logprob: -13.750014305114746
    6. '```' → logprob: -15.250014305114746
    7. 'sum' → logprob: -15.500014305114746
    8. 'edge' → logprob: -15.750014305114746
    9. 'edges' → logprob: -15.750014305114746
    10. 'adj' → logprob: -15.750014305114746

Token 1703: ' d' (ID: 272)
  Prédit: '_of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.5955766439437866
    2. '[i' → logprob: -1.7205766439437866
    3. ' of' → logprob: -2.470576763153076
    4. '_edges' → logprob: -2.845576763153076
    5. 'of' → logprob: -3.470576763153076
    6. '               ' → logprob: -3.970576763153076
    7. '                   ' → logprob: -4.595576763153076
    8. '[' → logprob: -4.595576763153076
    9. '_' → logprob: -4.845576763153076
    10. 'd' → logprob: -5.095576763153076

Token 1704: ''ar' (ID: 54307)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.5962328910827637
    2. 'edges' → logprob: -2.3462328910827637
    3. '1' → logprob: -2.8462328910827637
    4. ' (' → logprob: -3.3462328910827637
    5. '   ' → logprob: -3.4712328910827637
    6. '(' → logprob: -3.4712328910827637
    7. 'ar' → logprob: -3.5962328910827637
    8. ' ' → logprob: -4.221232891082764
    9. ' edges' → logprob: -4.471232891082764
    10. '[' → logprob: -4.471232891082764

Token 1705: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.04079916328191757
    2. 'cs' → logprob: -3.415799140930176
    3. 'c' → logprob: -5.790799140930176
    4. 'tes' → logprob: -6.415799140930176
    5. '[' → logprob: -7.290799140930176
    6. 'ê' → logprob: -7.540799140930176
    7. 'êts' → logprob: -8.540799140930176
    8. 'ètes' → logprob: -9.165799140930176
    9. 'ct' → logprob: -9.540799140930176
    10. '```' → logprob: -9.665799140930176

Token 1706: ' entre' (ID: 3853)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.46530383825302124
    2. '[(' → logprob: -1.090303897857666
    3. '[' → logprob: -4.090303897857666
    4. '[u' → logprob: -5.590303897857666
    5. '                   ' → logprob: -5.965303897857666
    6. '               ' → logprob: -6.090303897857666
    7. ' [(' → logprob: -6.090303897857666
    8. ' [' → logprob: -6.340303897857666
    9. ' (' → logprob: -6.340303897857666
    10. ' between' → logprob: -6.465303897857666

Token 1707: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.14269644021987915
    2. ' i' → logprob: -2.0176963806152344
    3. '   ' → logprob: -11.767696380615234
    4. '[i' → logprob: -12.017696380615234
    5. ' ' → logprob: -12.642696380615234
    6. ' ' → logprob: -13.392696380615234
    7. '	i' → logprob: -13.767696380615234
    8. '```' → logprob: -15.142696380615234
    9. '
' → logprob: -15.267696380615234
    10. '`' → logprob: -15.767696380615234

Token 1708: ' et' (ID: 859)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.4242754876613617
    2. ',' → logprob: -1.174275517463684
    3. '[j' → logprob: -4.0492753982543945
    4. ',i' → logprob: -5.1742753982543945
    5. '[' → logprob: -5.2992753982543945
    6. ',j' → logprob: -5.6742753982543945
    7. '][' → logprob: -6.6742753982543945
    8. ' ,' → logprob: -6.7992753982543945
    9. ',
' → logprob: -7.4242753982543945
    10. 'if' → logprob: -8.049275398254395

Token 1709: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.01105170976370573
    2. ' j' → logprob: -4.511051654815674
    3. '   ' → logprob: -12.636052131652832
    4. '	j' → logprob: -15.136052131652832
    5. ' ' → logprob: -15.886052131652832
    6. 'i' → logprob: -16.136051177978516
    7. ' ' → logprob: -16.636051177978516
    8. '```' → logprob: -16.761051177978516
    9. '    ' → logprob: -17.511051177978516
    10. '  ' → logprob: -18.261051177978516

Token 1710: ' (' (ID: 350)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.017684970051050186
    2. ' =' → logprob: -5.1426849365234375
    3. '   ' → logprob: -5.7676849365234375
    4. '
' → logprob: -6.1426849365234375
    5. '\n' → logprob: -6.6426849365234375
    6. '           ' → logprob: -6.8926849365234375
    7. '[i' → logprob: -7.6426849365234375
    8. ' (' → logprob: -7.8926849365234375
    9. '       ' → logprob: -8.142684936523438
    10. '[' → logprob: -8.142684936523438

Token 1711: 'ici' (ID: 3757)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.26609310507774353
    2. '[i' → logprob: -2.3910930156707764
    3. 'i' → logprob: -3.1410930156707764
    4. ']' → logprob: -3.6410930156707764
    5. ' i' → logprob: -3.8910930156707764
    6. '[j' → logprob: -4.7660932540893555
    7. '[' → logprob: -4.8910932540893555
    8. ' )' → logprob: -5.0160932540893555
    9. ' j' → logprob: -5.5160932540893555
    10. '```' → logprob: -5.6410932540893555

Token 1712: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2233567088842392
    2. ' ' → logprob: -1.7233567237854004
    3. '0' → logprob: -5.3483567237854
    4. '-' → logprob: -6.2233567237854
    5. ' -' → logprob: -6.2233567237854
    6. '   ' → logprob: -6.3483567237854
    7. '=' → logprob: -6.3483567237854
    8. ' =' → logprob: -7.0983567237854
    9. ')' → logprob: -7.3483567237854
    10. ':' → logprob: -7.3483567237854

Token 1713: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01922040618956089
    2. '0' → logprob: -5.019220352172852
    3. '-' → logprob: -5.144220352172852
    4. ' ' → logprob: -6.144220352172852
    5. '=' → logprob: -6.894220352172852
    6. '```' → logprob: -7.269220352172852
    7. ')' → logprob: -7.519220352172852
    8. '+' → logprob: -7.894220352172852
    9. ' -' → logprob: -8.019220352172852
    10. 'abs' → logprob: -8.519220352172852

Token 1714: ' ou' (ID: 2031)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.17480851709842682
    2. ')' → logprob: -1.9248085021972656
    3. 'if' → logprob: -4.549808502197266
    4. ' for' → logprob: -7.174808502197266
    5. ']' → logprob: -7.299808502197266
    6. ' )' → logprob: -7.924808502197266
    7. '<|end|>' → logprob: -8.424808502197266
    8. ' except' → logprob: -8.549808502197266
    9. ')
' → logprob: -8.674808502197266
    10. '               ' → logprob: -8.799808502197266

Token 1715: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002820736262947321
    2. '-' → logprob: -8.375282287597656
    3. ' ' → logprob: -10.125282287597656
    4. ' -' → logprob: -11.500282287597656
    5. '   ' → logprob: -13.750282287597656
    6. '```' → logprob: -16.125282287597656
    7. '0' → logprob: -17.375282287597656
    8. '>' → logprob: -17.500282287597656
    9. ' ' → logprob: -17.500282287597656
    10. '–' → logprob: -17.750282287597656

Token 1716: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012606535165105015
    2. '-' → logprob: -9.000125885009766
    3. ' ' → logprob: -13.750125885009766
    4. ' -' → logprob: -14.000125885009766
    5. '```' → logprob: -15.625125885009766
    6. '   ' → logprob: -16.125125885009766
    7. '-(' → logprob: -16.250125885009766
    8. '0' → logprob: -16.750125885009766
    9. '
' → logprob: -16.750125885009766
    10. '–' → logprob: -17.500125885009766

Token 1717: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -1.1231929063796997
    2. ')' → logprob: -1.2481929063796997
    3. '
' → logprob: -1.2481929063796997
    4. '               ' → logprob: -3.12319278717041
    5. '[i' → logprob: -3.62319278717041
    6. '\n' → logprob: -3.87319278717041
    7. '                   ' → logprob: -6.12319278717041
    8. '[' → logprob: -7.12319278717041
    9. '```' → logprob: -7.12319278717041
    10. ' if' → logprob: -7.12319278717041

Token 1718: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4183253347873688
    2. '[
' → logprob: -2.043325424194336
    3. '\n' → logprob: -2.043325424194336
    4. '[' → logprob: -3.543325424194336
    5. '                   ' → logprob: -4.918325424194336
    6. '```' → logprob: -5.043325424194336
    7. '   ' → logprob: -5.168325424194336
    8. ' for' → logprob: -5.293325424194336
    9. ' =' → logprob: -5.418325424194336
    10. '[i' → logprob: -5.668325424194336

Token 1719: ' import' (ID: 1588)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4115772843360901
    2. '\n' → logprob: -2.5365772247314453
    3. 'L' → logprob: -2.9115772247314453
    4. '[
' → logprob: -3.0365772247314453
    5. '   ' → logprob: -3.6615772247314453
    6. '[' → logprob: -3.9115772247314453
    7. '
' → logprob: -4.036577224731445
    8. ' 
' → logprob: -4.036577224731445
    9. '```' → logprob: -4.161577224731445
    10. '\' → logprob: -4.411577224731445

Token 1720: ' numpy' (ID: 19529)
  Prédit: 'numpy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numpy' → logprob: -0.4832340478897095
    2. 'math' → logprob: -1.2332340478897095
    3. 'sys' → logprob: -2.73323392868042
    4. 'copy' → logprob: -3.73323392868042
    5. 'collections' → logprob: -6.10823392868042
    6. 'operator' → logprob: -7.85823392868042
    7. 'heap' → logprob: -8.608234405517578
    8. 'array' → logprob: -9.858234405517578
    9. ' numpy' → logprob: -10.233234405517578
    10. 'cmath' → logprob: -10.483234405517578

Token 1721: ' as' (ID: 472)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.0922842025756836
    2. '.ndarray' → logprob: -1.0922842025756836
    3. '<|end|>' → logprob: -1.7172842025756836
    4. ' as' → logprob: -2.4672842025756836
    5. '<|end|>' → logprob: -4.342284202575684
    6. '.linalg' → logprob: -4.467284202575684
    7. 'import' → logprob: -4.592284202575684
    8. '.asarray' → logprob: -5.217284202575684
    9. '[' → logprob: -5.217284202575684
    10. ')' → logprob: -5.342284202575684

Token 1722: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.22762520611286163
    2. 'array' → logprob: -1.9776252508163452
    3. 'as' → logprob: -2.9776251316070557
    4. 'numpy' → logprob: -4.852625370025635
    5. ' as' → logprob: -5.852625370025635
    6. ' np' → logprob: -6.227625370025635
    7. '.ndarray' → logprob: -8.227624893188477
    8. '.linalg' → logprob: -8.352624893188477
    9. 'import' → logprob: -8.852624893188477
    10. '
' → logprob: -8.852624893188477

Token 1723: '

' (ID: 279)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4557136297225952
    2. '
' → logprob: -1.5807136297225952
    3. ')' → logprob: -1.8307136297225952
    4. '[
' → logprob: -1.9557136297225952
    5. 'import' → logprob: -2.7057137489318848
    6. '\n' → logprob: -3.4557137489318848
    7. '   ' → logprob: -3.5807137489318848
    8. '```' → logprob: -3.7057137489318848
    9. '(
' → logprob: -4.205713748931885
    10. ',' → logprob: -4.580713748931885

Token 1724: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2283439189195633
    2. '   ' → logprob: -1.7283439636230469
    3. '           ' → logprob: -4.728343963623047
    4. 'import' → logprob: -5.478343963623047
    5. '
' → logprob: -5.853343963623047
    6. '                   ' → logprob: -6.103343963623047
    7. '    
' → logprob: -6.353343963623047
    8. 'L' → logprob: -6.478343963623047
    9. '       ' → logprob: -6.603343963623047
    10. '                
' → logprob: -7.228343963623047

Token 1725: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' (adapté à ' L') → logprob: -0.16335934400558472
    2. '               ' → logprob: -2.1633594036102295
    3. ' L' → logprob: -4.28835916519165
    4. 'lap' → logprob: -5.16335916519165
    5. 'Lap' → logprob: -5.16335916519165
    6. ' lap' → logprob: -5.41335916519165
    7. ' Lap' → logprob: -6.78835916519165
    8. '           ' → logprob: -6.78835916519165
    9. '   ' → logprob: -7.03835916519165
    10. '
' → logprob: -7.41335916519165

Token 1726: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1490141898393631
    2. '=' → logprob: -2.1490142345428467
    3. '[' → logprob: -3.8990142345428467
    4. '=np' → logprob: -8.274014472961426
    5. '[i' → logprob: -8.524014472961426
    6. '   ' → logprob: -8.774014472961426
    7. '=[[' → logprob: -8.774014472961426
    8. '=[' → logprob: -9.024014472961426
    9. '[
' → logprob: -9.024014472961426
    10. 'import' → logprob: -9.274014472961426

Token 1727: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -2.165027217415627e-05
    2. ' np' → logprob: -10.750021934509277
    3. '(np' → logprob: -15.875021934509277
    4. 'numpy' → logprob: -17.50002098083496
    5. '[np' → logprob: -19.50002098083496
    6. '[[' → logprob: -19.75002098083496
    7. '0' → logprob: -19.87502098083496
    8. 'import' → logprob: -20.50002098083496
    9. '=np' → logprob: -20.87502098083496
    10. '```' → logprob: -21.00002098083496

Token 1728: '.zeros' (ID: 29146)
  Prédit: '.zeros'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.zeros' → logprob: -0.0010603178525343537
    2. 'zeros' → logprob: -7.251060485839844
    3. '.eye' → logprob: -8.501060485839844
    4. '.array' → logprob: -9.376060485839844
    5. '.identity' → logprob: -10.501060485839844
    6. ' zeros' → logprob: -10.751060485839844
    7. 'array' → logprob: -11.751060485839844
    8. '.di' → logprob: -13.876060485839844
    9. 'identity' → logprob: -13.876060485839844
    10. '=zeros' → logprob: -14.001060485839844

Token 1729: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00040791230276227
    2. '(' → logprob: -8.250408172607422
    3. '(k' → logprob: -8.875408172607422
    4. '(
' → logprob: -12.125408172607422
    5. '(shape' → logprob: -14.125408172607422
    6. ' ((' → logprob: -15.125408172607422
    7. ' (' → logprob: -16.625408172607422
    8. '(dtype' → logprob: -16.875408172607422
    9. ',' → logprob: -17.250408172607422
    10. '[(' → logprob: -17.375408172607422

Token 1730: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -2.093505099765025e-05
    2. '(k' → logprob: -10.875020980834961
    3. ' k' → logprob: -13.625020980834961
    4. '{k' → logprob: -14.375020980834961
    5. ',k' → logprob: -16.62502098083496
    6. '[k' → logprob: -17.25002098083496
    7. '(' → logprob: -17.75002098083496
    8. '"k' → logprob: -18.25002098083496
    9. '	k' → logprob: -19.37502098083496
    10. '+k' → logprob: -19.62502098083496

Token 1731: ',k' (ID: 35155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5759729146957397
    2. ',k' → logprob: -0.8259729146957397
    3. ' ,' → logprob: -10.575972557067871
    4. ',n' → logprob: -12.950972557067871
    5. ',
' → logprob: -13.450972557067871
    6. ',j' → logprob: -13.575972557067871
    7. ',int' → logprob: -14.575972557067871
    8. ',len' → logprob: -14.700972557067871
    9. '
' → logprob: -15.075972557067871
    10. ',num' → logprob: -15.075972557067871

Token 1732: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009282819926738739
    2. ',' → logprob: -4.75928258895874
    3. ')
' → logprob: -7.75928258895874
    4. '),' → logprob: -8.759283065795898
    5. ',
' → logprob: -10.009283065795898
    6. '               ' → logprob: -11.759283065795898
    7. ',)' → logprob: -11.759283065795898
    8. ' )' → logprob: -12.259283065795898
    9. '))' → logprob: -12.634283065795898
    10. ' ,' → logprob: -12.884283065795898

Token 1733: ' dtype' (ID: 29770)
  Prédit: 'dtype'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dtype' → logprob: -0.005242771934717894
    2. 'int' → logprob: -5.255242824554443
    3. ' dtype' → logprob: -12.255242347717285
    4. 'np' → logprob: -12.630242347717285
    5. 'float' → logprob: -14.755242347717285
    6. '[int' → logprob: -15.505242347717285
    7. '-' → logprob: -16.3802433013916
    8. '(dtype' → logprob: -16.6302433013916
    9. ')' → logprob: -17.3802433013916
    10. '
' → logprob: -17.5052433013916

Token 1734: '=int' (ID: 37431)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.002114927861839533
    2. 'np' → logprob: -6.752114772796631
    3. '=int' → logprob: -7.002114772796631
    4. '=np' → logprob: -11.377115249633789
    5. '[int' → logprob: -11.752115249633789
    6. '(int' → logprob: -12.127115249633789
    7. ''int' → logprob: -12.752115249633789
    8. ',int' → logprob: -13.002115249633789
    9. ' int' → logprob: -13.127115249633789
    10. ':int' → logprob: -13.502115249633789

Token 1735: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31357914209365845
    2. ')
' → logprob: -1.3135790824890137
    3. '               ' → logprob: -8.188579559326172
    4. ')
' → logprob: -10.438579559326172
    5. '           ' → logprob: -12.938579559326172
    6. '       ' → logprob: -13.688579559326172
    7. ')

' → logprob: -13.813579559326172
    8. '+' → logprob: -14.188579559326172
    9. '
' → logprob: -14.563579559326172
    10. '              ' → logprob: -14.813579559326172

Token 1736: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.43987375497817993
    2. 'for' → logprob: -1.0648736953735352
    3. ' for' → logprob: -4.939873695373535
    4. '                   ' → logprob: -6.064873695373535
    5. 'L' → logprob: -7.439873695373535
    6. '       ' → logprob: -7.939873695373535
    7. '           ' → logprob: -8.314873695373535
    8. '   ' → logprob: -8.314873695373535
    9. '                       ' → logprob: -9.689873695373535
    10. ' L' → logprob: -10.189873695373535

Token 1737: ' deg' (ID: 5597)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00035369666875340044
    2. '               ' → logprob: -8.000353813171387
    3. ' for' → logprob: -11.375353813171387
    4. '                   ' → logprob: -13.125353813171387
    5. '           ' → logprob: -13.500353813171387
    6. '```' → logprob: -13.500353813171387
    7. '   ' → logprob: -14.125353813171387
    8. '       ' → logprob: -14.625353813171387
    9. 'from' → logprob: -14.625353813171387
    10. 'import' → logprob: -16.00035285949707

Token 1738: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8916031122207642
    2. '=' → logprob: -1.0166031122207642
    3. '[' → logprob: -2.1416029930114746
    4. 's' → logprob: -3.5166029930114746
    5. '[u' → logprob: -3.6416029930114746
    6. '[L' → logprob: -3.7666029930114746
    7. 'L' → logprob: -4.641602993011475
    8. 'for' → logprob: -4.641602993011475
    9. '_L' → logprob: -6.266602993011475
    10. '[root' → logprob: -6.516602993011475

Token 1739: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07489849627017975
    2. 'default' → logprob: -3.1998984813690186
    3. 'np' → logprob: -3.6998984813690186
    4. '{' → logprob: -6.074898719787598
    5. '0' → logprob: -6.074898719787598
    6. '[np' → logprob: -7.324898719787598
    7. ' [' → logprob: -7.699898719787598
    8. '[k' → logprob: -7.824898719787598
    9. 'k' → logprob: -8.574898719787598
    10. '[len' → logprob: -8.824898719787598

Token 1740: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4378848391061183e-05
    2. 'deg' → logprob: -11.625014305114746
    3. 'len' → logprob: -12.750014305114746
    4. 'sum' → logprob: -13.875014305114746
    5. ' ' → logprob: -14.750014305114746
    6. '(' → logprob: -15.375014305114746
    7. '[' → logprob: -16.250015258789062
    8. 'L' → logprob: -16.312515258789062
    9. 'x' → logprob: -16.312515258789062
    10. 'd' → logprob: -16.500015258789062

Token 1741: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6730492115020752
    2. ')' → logprob: -1.1730492115020752
    3. 'for' → logprob: -2.673049211502075
    4. '+' → logprob: -3.798049211502075
    5. ' for' → logprob: -3.923049211502075
    6. ')
' → logprob: -4.548048973083496
    7. '[i' → logprob: -4.548048973083496
    8. '[u' → logprob: -4.673048973083496
    9. ',' → logprob: -4.798048973083496
    10. '[' → logprob: -5.048048973083496

Token 1742: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.9361264946837764e-07
    2. ' k' → logprob: -16.5
    3. '(k' → logprob: -16.625
    4. 'len' → logprob: -19.5
    5. '   ' → logprob: -19.875
    6. '{k' → logprob: -20.75
    7. '           ' → logprob: -21.25
    8. '               ' → logprob: -22.125
    9. '(' → logprob: -22.625
    10. '	k' → logprob: -23.0

Token 1743: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.17500950396060944
    2. ' for' → logprob: -2.1750094890594482
    3. '               ' → logprob: -3.4250094890594482
    4. ' 
' → logprob: -5.550009727478027
    5. '
' → logprob: -5.675009727478027
    6. ')' → logprob: -6.300009727478027
    7. '                
' → logprob: -6.800009727478027
    8. '<|end|>' → logprob: -6.925009727478027
    9. '[' → logprob: -7.550009727478027
    10. '    
' → logprob: -7.800009727478027

Token 1744: '               ' (ID: 506)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19712190330028534
    2. ' for' → logprob: -2.0721218585968018
    3. '               ' → logprob: -2.9471218585968018
    4. '                   ' → logprob: -8.322121620178223
    5. '	for' → logprob: -9.197121620178223
    6. '```' → logprob: -9.822121620178223
    7. '           ' → logprob: -10.447121620178223
    8. '   ' → logprob: -10.572121620178223
    9. '       ' → logprob: -11.072121620178223
    10. 'token' → logprob: -12.197121620178223

Token 1745: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -4.8828707804204896e-05
    2. '               ' → logprob: -10.375048637390137
    3. ' for' → logprob: -11.000048637390137
    4. '                   ' → logprob: -14.750048637390137
    5. '   ' → logprob: -16.125049591064453
    6. '```' → logprob: -16.125049591064453
    7. '           ' → logprob: -16.250049591064453
    8. '       ' → logprob: -17.375049591064453
    9. '	for' → logprob: -17.750049591064453
    10. '
' → logprob: -18.000049591064453

Token 1746: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.04308071732521057
    2. '(u' → logprob: -3.1680808067321777
    3. '_,' → logprob: -11.16808032989502
    4. '   ' → logprob: -11.16808032989502
    5. ' (' → logprob: -11.29308032989502
    6. 'e' → logprob: -11.41808032989502
    7. ' u' → logprob: -12.04308032989502
    8. '(_,' → logprob: -12.41808032989502
    9. '(' → logprob: -12.66808032989502
    10. '(e' → logprob: -13.04308032989502

Token 1747: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16721022129058838
    2. ',' → logprob: -1.9172102212905884
    3. ' ,' → logprob: -5.292210102081299
    4. ',v' → logprob: -6.792210102081299
    5. '_,' → logprob: -7.917210102081299
    6. ',u' → logprob: -9.667210578918457
    7. ',
' → logprob: -9.917210578918457
    8. ' ' → logprob: -10.292210578918457
    9. '_' → logprob: -10.667210578918457
    10. 'u' → logprob: -10.917210578918457

Token 1748: ',v' (ID: 30680)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3990373909473419
    2. ',u' → logprob: -1.1490373611450195
    3. ',v' → logprob: -4.5240373611450195
    4. ' ,' → logprob: -7.8990373611450195
    5. ',user' → logprob: -8.89903736114502
    6. ',p' → logprob: -9.02403736114502
    7. ',n' → logprob: -9.02403736114502
    8. ',k' → logprob: -9.27403736114502
    9. 'u' → logprob: -9.77403736114502
    10. '_,' → logprob: -10.02403736114502

Token 1749: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13227513432502747
    2. ',' → logprob: -2.257275104522705
    3. ',u' → logprob: -4.132275104522705
    4. '               ' → logprob: -6.757275104522705
    5. ',v' → logprob: -7.007275104522705
    6. ' ,' → logprob: -7.632275104522705
    7. '                   ' → logprob: -8.132275581359863
    8. 'u' → logprob: -9.007275581359863
    9. '           ' → logprob: -10.007275581359863
    10. ' u' → logprob: -10.132275581359863

Token 1750: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.055574677884578705
    2. 'in' → logprob: -3.055574655532837
    3. ',' → logprob: -5.305574893951416
    4. ',u' → logprob: -6.680574893951416
    5. ',v' → logprob: -8.805574417114258
    6. ':
' → logprob: -8.930574417114258
    7. '   ' → logprob: -8.930574417114258
    8. ',in' → logprob: -9.055574417114258
    9. ' ,' → logprob: -9.930574417114258
    10. 'u' → logprob: -10.805574417114258

Token 1751: ' unique' (ID: 5746)
  Prédit: 'unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unique' → logprob: -0.00015872348740231246
    2. ' unique' → logprob: -8.750158309936523
    3. '   ' → logprob: -15.875158309936523
    4. '(unique' → logprob: -16.375158309936523
    5. '.unique' → logprob: -19.500158309936523
    6. ' ' → logprob: -20.125158309936523
    7. '
' → logprob: -20.375158309936523
    8. '               ' → logprob: -21.875158309936523
    9. '  ' → logprob: -21.875158309936523
    10. '       ' → logprob: -21.875158309936523

Token 1752: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.04809021204710007
    2. ',' → logprob: -3.7980902194976807
    3. '_,' → logprob: -4.048089981079102
    4. '0' → logprob: -5.798089981079102
    5. ',_' → logprob: -6.548089981079102
    6. ',
' → logprob: -7.923089981079102
    7. ' ,' → logprob: -8.173089981079102
    8. '[' → logprob: -8.298089981079102
    9. '_' → logprob: -8.423089981079102
    10. 'u' → logprob: -8.548089981079102

Token 1753: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5732485055923462
    2. '[' → logprob: -1.1982485055923462
    3. '   ' → logprob: -3.5732483863830566
    4. ':' → logprob: -3.5732483863830566
    5. '[u' → logprob: -3.6982483863830566
    6. '+=' → logprob: -3.8232483863830566
    7. '                   ' → logprob: -3.9482483863830566
    8. '       ' → logprob: -5.573248386383057
    9. '               ' → logprob: -6.073248386383057
    10. ' +=' → logprob: -6.198248386383057

Token 1754: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.015975836664438248
    2. '                       ' → logprob: -5.2659759521484375
    3. '               ' → logprob: -5.3909759521484375
    4. '   ' → logprob: -5.7659759521484375
    5. 'L' → logprob: -7.1409759521484375
    6. ' L' → logprob: -7.2659759521484375
    7. '```' → logprob: -7.2659759521484375
    8. '       ' → logprob: -7.3909759521484375
    9. '           ' → logprob: -9.140975952148438
    10. '[' → logprob: -11.015975952148438

Token 1755: ' deg' (ID: 5597)
  Prédit: 'deg'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deg' (adapté à ' deg') → logprob: -0.3893406391143799
    2. 'L' → logprob: -1.1393406391143799
    3. '                   ' → logprob: -6.139340400695801
    4. '   ' → logprob: -8.5143404006958
    5. ' deg' → logprob: -9.5143404006958
    6. ' L' → logprob: -11.3893404006958
    7. '               ' → logprob: -11.6393404006958
    8. '           ' → logprob: -12.5143404006958
    9. '       ' → logprob: -12.8893404006958
    10. '                       ' → logprob: -13.0143404006958

Token 1756: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.00012737659562844783
    2. 'u' → logprob: -9.000127792358398
    3. '[' → logprob: -13.125127792358398
    4. '[v' → logprob: -14.000127792358398
    5. '=u' → logprob: -14.000127792358398
    6. '=' → logprob: -16.5001277923584
    7. '[d' → logprob: -16.7501277923584
    8. ' u' → logprob: -17.0001277923584
    9. '[
' → logprob: -17.3751277923584
    10. '	u' → logprob: -17.6251277923584

Token 1757: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.015181610360741615
    2. 'v' → logprob: -4.765181541442871
    3. 'u' → logprob: -5.640181541442871
    4. '[u' → logprob: -6.015181541442871
    5. '=u' → logprob: -8.640181541442871
    6. '(u' → logprob: -8.890181541442871
    7. '[v' → logprob: -9.765181541442871
    8. ' u' → logprob: -10.140181541442871
    9. '```' → logprob: -10.515181541442871
    10. ''u' → logprob: -11.015181541442871

Token 1758: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6141374111175537
    2. ']+=' → logprob: -0.8641374111175537
    3. '+=' → logprob: -3.3641374111175537
    4. ' +=' → logprob: -6.739137649536133
    5. '   ' → logprob: -7.114137649536133
    6. '[' → logprob: -7.239137649536133
    7. ']+' → logprob: -9.739137649536133
    8. '+' → logprob: -10.364137649536133
    9. ')' → logprob: -11.239137649536133
    10. '+]' → logprob: -11.364137649536133

Token 1759: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0007303050952032208
    2. '[' → logprob: -8.000730514526367
    3. ' +=' → logprob: -8.125730514526367
    4. '=' → logprob: -10.375730514526367
    5. ']+=' → logprob: -10.500730514526367
    6. '+' → logprob: -10.625730514526367
    7. '```' → logprob: -11.500730514526367
    8. '-=' → logprob: -13.125730514526367
    9. '   ' → logprob: -13.125730514526367
    10. '[-' → logprob: -14.125730514526367

Token 1760: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '   ' → logprob: -17.875
    4. '```' → logprob: -18.375
    5. '<|end|>' → logprob: -19.0
    6. '+' → logprob: -20.125
    7. '۱' → logprob: -20.875
    8. '  ' → logprob: -21.9375
    9. '１' → logprob: -22.0
    10. '১' → logprob: -22.0

Token 1761: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.625
    3. '```' → logprob: -20.25
    4. '2' → logprob: -20.375
    5. '-' → logprob: -20.5
    6. '+' → logprob: -20.875
    7. '   ' → logprob: -21.625
    8. '<|end|>' → logprob: -22.125
    9. '۱' → logprob: -22.375
    10. '１' → logprob: -23.0

Token 1762: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.006638752296566963
    2. '               ' → logprob: -5.381638526916504
    3. '           ' → logprob: -7.381638526916504
    4. '<|end|>' → logprob: -7.881638526916504
    5. 'deg' → logprob: -8.381638526916504
    6. ' deg' → logprob: -8.881638526916504
    7. '   ' → logprob: -9.006638526916504
    8. '       ' → logprob: -9.256638526916504
    9. ',' → logprob: -9.631638526916504
    10. '                       ' → logprob: -9.881638526916504

Token 1763: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5149266719818115
    2. 'deg' → logprob: -1.0149266719818115
    3. ' deg' → logprob: -3.3899266719818115
    4. '               ' → logprob: -6.014926910400391
    5. '```' → logprob: -6.389926910400391
    6. 'L' → logprob: -7.139926910400391
    7. ' L' → logprob: -7.514926910400391
    8. ' for' → logprob: -8.26492691040039
    9. '   ' → logprob: -8.51492691040039
    10. '           ' → logprob: -8.88992691040039

Token 1764: ' deg' (ID: 5597)
  Prédit: 'deg'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deg' (adapté à ' deg') → logprob: -2.8087270038668066e-05
    2. ' deg' → logprob: -10.500027656555176
    3. '                   ' → logprob: -15.750027656555176
    4. 'v' → logprob: -16.250028610229492
    5. 'u' → logprob: -17.250028610229492
    6. '```' → logprob: -17.750028610229492
    7. 'd' → logprob: -17.875028610229492
    8. '   ' → logprob: -17.875028610229492
    9. '           ' → logprob: -18.125028610229492
    10. '_deg' → logprob: -18.375028610229492

Token 1765: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.00243190536275506
    2. '[u' → logprob: -6.252431869506836
    3. 'v' → logprob: -7.627431869506836
    4. '[' → logprob: -11.127431869506836
    5. '(v' → logprob: -14.752431869506836
    6. '=v' → logprob: -15.002431869506836
    7. ' v' → logprob: -15.127431869506836
    8. ' [' → logprob: -15.252431869506836
    9. 'u' → logprob: -15.752431869506836
    10. '<v' → logprob: -16.752431869506836

Token 1766: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -16.0
    3. '۰' → logprob: -16.5
    4. '<|end|>' → logprob: -16.75
    5. '```' → logprob: -16.875
    6. 'v' → logprob: -17.375
    7. ' ' → logprob: -17.875
    8. 'o' → logprob: -18.25
    9. '০' → logprob: -18.375
    10. '   ' → logprob: -18.375

Token 1767: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4488303065299988
    2. ']+=' → logprob: -1.0738303661346436
    3. '+=' → logprob: -4.5738301277160645
    4. ' +=' → logprob: -4.6988301277160645
    5. '+' → logprob: -8.448830604553223
    6. '```' → logprob: -9.698830604553223
    7. ']+' → logprob: -9.698830604553223
    8. ')' → logprob: -9.948830604553223
    9. '   ' → logprob: -10.448830604553223
    10. '                   ' → logprob: -10.448830604553223

Token 1768: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.4823175072669983
    2. ' +=' → logprob: -0.9823175072669983
    3. '+' → logprob: -4.9823174476623535
    4. ']+=' → logprob: -7.1073174476623535
    5. '=' → logprob: -8.107317924499512
    6. ')' → logprob: -9.482317924499512
    7. '```' → logprob: -10.357317924499512
    8. '[' → logprob: -10.357317924499512
    9. ']' → logprob: -10.732317924499512
    10. ' +' → logprob: -10.857317924499512

Token 1769: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001584850688232109
    2. ' ' → logprob: -8.750158309936523
    3. '   ' → logprob: -19.000158309936523
    4. '-' → logprob: -19.500158309936523
    5. '+' → logprob: -20.750158309936523
    6. '```' → logprob: -20.750158309936523
    7. '  ' → logprob: -21.750158309936523
    8. '2' → logprob: -21.875158309936523
    9. '0' → logprob: -22.562658309936523
    10. ' ' → logprob: -22.625158309936523

Token 1770: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.875000953674316
    3. '2' → logprob: -16.0
    4. '-' → logprob: -18.875
    5. '```' → logprob: -19.25
    6. '   ' → logprob: -19.625
    7. '+' → logprob: -20.5
    8. '１' → logprob: -20.875
    9. '  ' → logprob: -21.6875
    10. '۱' → logprob: -21.6875

Token 1771: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06610248982906342
    2. '                   ' → logprob: -3.0661025047302246
    3. 'L' → logprob: -4.941102504730225
    4. '```' → logprob: -5.441102504730225
    5. ' for' → logprob: -6.066102504730225
    6. '           ' → logprob: -6.816102504730225
    7. 'for' → logprob: -6.941102504730225
    8. '   ' → logprob: -7.316102504730225
    9. ' L' → logprob: -7.941102504730225
    10. '       ' → logprob: -8.316102027893066

Token 1772: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.16153672337532043
    2. '                   ' → logprob: -2.286536693572998
    3. '```' → logprob: -4.161536693572998
    4. 'L' → logprob: -4.661536693572998
    5. ' for' → logprob: -4.661536693572998
    6. 'for' → logprob: -5.786536693572998
    7. '           ' → logprob: -5.911536693572998
    8. '   ' → logprob: -5.911536693572998
    9. '[' → logprob: -6.411536693572998
    10. '``' → logprob: -7.036536693572998

Token 1773: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.014395601116120815
    2. '               ' → logprob: -4.514395713806152
    3. ' for' → logprob: -5.764395713806152
    4. '```' → logprob: -8.764395713806152
    5. '           ' → logprob: -10.639395713806152
    6. '   ' → logprob: -11.264395713806152
    7. '       ' → logprob: -12.014395713806152
    8. '                   ' → logprob: -12.389395713806152
    9. '``' → logprob: -14.264395713806152
    10. '	for' → logprob: -14.764395713806152

Token 1774: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0009588662651367486
    2. 'u' → logprob: -7.0009589195251465
    3. 'idx' → logprob: -10.375958442687988
    4. 'x' → logprob: -11.625958442687988
    5. ' i' → logprob: -12.750958442687988
    6. 'ii' → logprob: -13.625958442687988
    7. 'a' → logprob: -14.250958442687988
    8. '0' → logprob: -14.375958442687988
    9. 't' → logprob: -15.250958442687988
    10. 'k' → logprob: -15.375958442687988

Token 1775: '_' (ID: 62)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009977648966014385
    2. 'in' → logprob: -4.6349778175354
    3. '0' → logprob: -9.134977340698242
    4. ',' → logprob: -10.134977340698242
    5. 'n' → logprob: -11.009977340698242
    6. '   ' → logprob: -11.134977340698242
    7. ' ' → logprob: -11.634977340698242
    8. '=' → logprob: -12.009977340698242
    9. 'i' → logprob: -12.634977340698242
    10. '1' → logprob: -12.884977340698242

Token 1776: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4075719118118286
    2. 'in' → logprob: -1.1575719118118286
    3. '0' → logprob: -4.407571792602539
    4. '_' → logprob: -5.032571792602539
    5. ',' → logprob: -7.157571792602539
    6. 'i' → logprob: -7.782571792602539
    7. ' ' → logprob: -8.282571792602539
    8. 'n' → logprob: -9.282571792602539
    9. '   ' → logprob: -10.032571792602539
    10. ')' → logprob: -10.282571792602539

Token 1777: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001930301426909864
    2. ' range' → logprob: -6.251930236816406
    3. '   ' → logprob: -14.001930236816406
    4. ' ' → logprob: -14.126930236816406
    5. '  ' → logprob: -16.501930236816406
    6. '    ' → logprob: -17.376930236816406
    7. '(range' → logprob: -17.876930236816406
    8. '	range' → logprob: -18.751930236816406
    9. '```' → logprob: -20.001930236816406
    10. 'k' → logprob: -20.376930236816406

Token 1778: '(k' (ID: 12125)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.4855663721391466e-05
    2. '(k' → logprob: -11.125015258789062
    3. ' k' → logprob: -16.500015258789062
    4. '                   ' → logprob: -18.875015258789062
    5. '{k' → logprob: -19.000015258789062
    6. '   ' → logprob: -19.375015258789062
    7. '0' → logprob: -19.375015258789062
    8. ')' → logprob: -19.375015258789062
    9. '	k' → logprob: -19.500015258789062
    10. '               ' → logprob: -19.750015258789062

Token 1779: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.000603668624535203
    2. '):' → logprob: -8.750603675842285
    3. '           ' → logprob: -9.125603675842285
    4. '                   ' → logprob: -9.125603675842285
    5. '               ' → logprob: -9.625603675842285
    6. '   ' → logprob: -10.125603675842285
    7. '       ' → logprob: -10.500603675842285
    8. ' ):
' → logprob: -10.750603675842285
    9. ')' → logprob: -11.000603675842285
    10. ':
' → logprob: -11.250603675842285

Token 1780: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.12049640715122223
    2. '       ' → logprob: -3.3704965114593506
    3. '   ' → logprob: -3.6204965114593506
    4. '           ' → logprob: -3.8704965114593506
    5. '                       ' → logprob: -3.9954965114593506
    6. '               ' → logprob: -4.6204962730407715
    7. '```' → logprob: -6.6204962730407715
    8. ' L' → logprob: -6.9954962730407715
    9. 'L' → logprob: -8.12049674987793
    10. '<|end|>' → logprob: -8.49549674987793

Token 1781: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' (adapté à ' L') → logprob: -0.00031091354321688414
    2. '   ' → logprob: -8.875310897827148
    3. ' L' → logprob: -9.500310897827148
    4. '       ' → logprob: -10.000310897827148
    5. '                   ' → logprob: -10.750310897827148
    6. '           ' → logprob: -11.250310897827148
    7. '                       ' → logprob: -11.875310897827148
    8. '               ' → logprob: -12.750310897827148
    9. '	L' → logprob: -13.000310897827148
    10. '```' → logprob: -13.250310897827148

Token 1782: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00011129142512800172
    2. '[' → logprob: -10.00011157989502
    3. '[L' → logprob: -10.00011157989502
    4. 'i' → logprob: -11.75011157989502
    5. '[
' → logprob: -11.87511157989502
    6. '[I' → logprob: -12.87511157989502
    7. '```' → logprob: -14.00011157989502
    8. ' [' → logprob: -14.37511157989502
    9. 'L' → logprob: -14.62511157989502
    10. '   ' → logprob: -14.62511157989502

Token 1783: '_,' (ID: 14152)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4179312586784363
    2. '][' → logprob: -1.667931318283081
    3. '_,' → logprob: -2.667931318283081
    4. ',i' → logprob: -3.042931318283081
    5. '_]' → logprob: -3.917931318283081
    6. ',' → logprob: -5.292931079864502
    7. '[i' → logprob: -5.667931079864502
    8. 'i' → logprob: -6.167931079864502
    9. '_
' → logprob: -6.542931079864502
    10. '_i' → logprob: -6.917931079864502

Token 1784: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.9361264946837764e-07
    2. ' i' → logprob: -15.875
    3. '   ' → logprob: -18.25
    4. '	i' → logprob: -19.625
    5. ',i' → logprob: -20.0
    6. '[i' → logprob: -20.25
    7. ')i' → logprob: -20.5
    8. 'I' → logprob: -20.625
    9. '_i' → logprob: -20.625
    10. ')' → logprob: -21.0

Token 1785: '_]' (ID: 163385)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0027484113816171885
    2. 'i' → logprob: -6.877748489379883
    3. '_]' → logprob: -6.877748489379883
    4. ']+=' → logprob: -7.627748489379883
    5. '   ' → logprob: -9.877748489379883
    6. ']=' → logprob: -10.002748489379883
    7. '_' → logprob: -10.627748489379883
    8. '_i' → logprob: -10.877748489379883
    9. '[i' → logprob: -11.002748489379883
    10. ',i' → logprob: -12.127748489379883

Token 1786: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011060554534196854
    2. ' =' → logprob: -4.51106071472168
    3. '+=' → logprob: -11.38606071472168
    4. ' +=' → logprob: -13.88606071472168
    5. '=
' → logprob: -15.51106071472168
    6. ']=' → logprob: -16.13606071472168
    7. '.=' → logprob: -16.38606071472168
    8. ']' → logprob: -16.76106071472168
    9. '=int' → logprob: -17.26106071472168
    10. '[' → logprob: -17.76106071472168

Token 1787: ' deg' (ID: 5597)
  Prédit: 'deg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deg' → logprob: -2.339278580620885e-06
    2. ' deg' → logprob: -13.000001907348633
    3. '                   ' → logprob: -18.375001907348633
    4. '               ' → logprob: -20.500001907348633
    5. '_deg' → logprob: -21.125001907348633
    6. 'Deg' → logprob: -21.625001907348633
    7. 'd' → logprob: -21.750001907348633
    8. 'degree' → logprob: -21.875001907348633
    9. '           ' → logprob: -22.250001907348633
    10. '0' → logprob: -22.750001907348633

Token 1788: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.721228368813172e-05
    2. 'i' → logprob: -9.375086784362793
    3. '[' → logprob: -14.125086784362793
    4. '```' → logprob: -14.500086784362793
    5. ' i' → logprob: -14.625086784362793
    6. '_i' → logprob: -15.875086784362793
    7. '(i' → logprob: -16.00008773803711
    8. '{i' → logprob: -16.12508773803711
    9. '[u' → logprob: -16.25008773803711
    10. ' [' → logprob: -17.25008773803711

Token 1789: '_' (ID: 62)
  Prédit: '_]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_]' → logprob: -0.00033784625702537596
    2. '_' → logprob: -8.000337600708008
    3. 'i' → logprob: -13.500337600708008
    4. ']' → logprob: -14.250337600708008
    5. '_i' → logprob: -15.500337600708008
    6. '_
' → logprob: -16.500337600708008
    7. '_
' → logprob: -16.500337600708008
    8. '_)' → logprob: -18.625337600708008
    9. '[i' → logprob: -19.000337600708008
    10. '`]' → logprob: -19.375337600708008

Token 1790: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004215162713080645
    2. '<|end|>' → logprob: -5.754215240478516
    3. ']
' → logprob: -7.504215240478516
    4. ')' → logprob: -8.004215240478516
    5. '<|end|>' → logprob: -9.754215240478516
    6. ' ]' → logprob: -10.754215240478516
    7. '               ' → logprob: -10.879215240478516
    8. '                   ' → logprob: -11.754215240478516
    9. '])' → logprob: -12.004215240478516
    10. ']+' → logprob: -12.129215240478516

Token 1791: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05936962366104126
    2. '                   ' → logprob: -3.0593695640563965
    3. '           ' → logprob: -5.4343695640563965
    4. '       ' → logprob: -6.5593695640563965
    5. ')' → logprob: -6.6843695640563965
    6. ' for' → logprob: -6.6843695640563965
    7. '   ' → logprob: -6.9343695640563965
    8. 'for' → logprob: -8.309370040893555
    9. '<|end|>' → logprob: -8.434370040893555
    10. '                ' → logprob: -8.559370040893555

Token 1792: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5729409456253052
    2. '               ' → logprob: -1.4479409456253052
    3. 'for' (adapté à ' for') → logprob: -1.6979409456253052
    4. '                   ' → logprob: -4.822940826416016
    5. 'L' → logprob: -5.697940826416016
    6. ' L' → logprob: -6.322940826416016
    7. '	for' → logprob: -6.322940826416016
    8. '           ' → logprob: -7.197940826416016
    9. '```' → logprob: -7.197940826416016
    10. '   ' → logprob: -7.697940826416016

Token 1793: ' u' (ID: 337)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.049484286457300186
    2. 'u' → logprob: -3.0494842529296875
    3. '(u' → logprob: -8.049484252929688
    4. '(i' → logprob: -8.174484252929688
    5. ' i' → logprob: -8.299484252929688
    6. '(' → logprob: -11.299484252929688
    7. ' u' → logprob: -11.424484252929688
    8. ' (' → logprob: -11.424484252929688
    9. '0' → logprob: -12.549484252929688
    10. '   ' → logprob: -12.924484252929688

Token 1794: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4439942538738251
    2. ',' → logprob: -1.1939942836761475
    3. '_,' → logprob: -3.1939942836761475
    4. ' ,' → logprob: -4.443994045257568
    5. '_' → logprob: -6.068994045257568
    6. ',v' → logprob: -8.443994522094727
    7. ',_' → logprob: -9.568994522094727
    8. '   ' → logprob: -10.318994522094727
    9. ' ' → logprob: -10.443994522094727
    10. ',
' → logprob: -10.818994522094727

Token 1795: ',v' (ID: 30680)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5257811546325684
    2. ',v' → logprob: -0.9007811546325684
    3. ',u' → logprob: -6.150781154632568
    4. ' ,' → logprob: -7.900781154632568
    5. '0' → logprob: -10.150781631469727
    6. '_,' → logprob: -10.900781631469727
    7. ',user' → logprob: -11.150781631469727
    8. ',j' → logprob: -11.150781631469727
    9. ',i' → logprob: -11.650781631469727
    10. ',k' → logprob: -12.150781631469727

Token 1796: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.1782583391759545e-05
    2. '_' → logprob: -10.625031471252441
    3. ',' → logprob: -12.625031471252441
    4. '_,' → logprob: -13.000031471252441
    5. ' ' → logprob: -13.875031471252441
    6. '   ' → logprob: -15.250031471252441
    7. '[' → logprob: -15.250031471252441
    8. '```' → logprob: -16.375032424926758
    9. 'u' → logprob: -17.000032424926758
    10. '(' → logprob: -17.000032424926758

Token 1797: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15250760316848755
    2. ' in' → logprob: -2.0275075435638428
    3. ' ,' → logprob: -5.277507781982422
    4. '   ' → logprob: -6.277507781982422
    5. ',u' → logprob: -7.027507781982422
    6. ',v' → logprob: -7.152507781982422
    7. 'in' → logprob: -7.527507781982422
    8. ',i' → logprob: -9.277507781982422
    9. ',in' → logprob: -9.402507781982422
    10. ',j' → logprob: -9.902507781982422

Token 1798: ' unique' (ID: 5746)
  Prédit: 'unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unique' → logprob: -0.0005719788023270667
    2. ' unique' → logprob: -7.500572204589844
    3. 'range' → logprob: -11.000572204589844
    4. '(unique' → logprob: -13.625572204589844
    5. '   ' → logprob: -14.125572204589844
    6. '[(' → logprob: -15.625572204589844
    7. '[' → logprob: -16.000572204589844
    8. ' range' → logprob: -16.250572204589844
    9. '(' → logprob: -17.500572204589844
    10. 'u' → logprob: -18.000572204589844

Token 1799: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.775018572807312
    2. '_' → logprob: -1.400018572807312
    3. '0' → logprob: -2.0250186920166016
    4. '_,' → logprob: -2.2750186920166016
    5. ',' → logprob: -3.4000186920166016
    6. ':
' → logprob: -5.150018692016602
    7. '   ' → logprob: -5.400018692016602
    8. '_
' → logprob: -6.400018692016602
    9. '```' → logprob: -6.650018692016602
    10. 'Edges' → logprob: -6.650018692016602

Token 1800: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6248487234115601
    2. '-' → logprob: -1.62484872341156
    3. '   ' → logprob: -1.99984872341156
    4. '[' → logprob: -2.8748488426208496
    5. ':' → logprob: -3.6248488426208496
    6. ' -=' → logprob: -4.12484884262085
    7. ' -' → logprob: -4.87484884262085
    8. ':
' → logprob: -5.12484884262085
    9. '[-' → logprob: -5.62484884262085
    10. '][' → logprob: -5.87484884262085

Token 1801: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01664056070148945
    2. '               ' → logprob: -5.266640663146973
    3. '       ' → logprob: -5.516640663146973
    4. '```' → logprob: -5.516640663146973
    5. '   ' → logprob: -6.391640663146973
    6. '           ' → logprob: -7.266640663146973
    7. ' L' → logprob: -8.016640663146973
    8. '[' → logprob: -8.266640663146973
    9. '                       ' → logprob: -8.391640663146973
    10. '``' → logprob: -10.891640663146973

Token 1802: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' (adapté à ' L') → logprob: -0.002512996783480048
    2. ' L' → logprob: -6.0025129318237305
    3. '   ' → logprob: -10.75251293182373
    4. '                   ' → logprob: -11.12751293182373
    5. '               ' → logprob: -14.75251293182373
    6. '	L' → logprob: -15.00251293182373
    7. '       ' → logprob: -15.50251293182373
    8. ' ' → logprob: -16.252513885498047
    9. 'i' → logprob: -16.502513885498047
    10. '           ' → logprob: -16.877513885498047

Token 1803: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.00418761745095253
    2. '[i' → logprob: -5.75418758392334
    3. '[L' → logprob: -7.00418758392334
    4. '[' → logprob: -9.75418758392334
    5. '[v' → logprob: -11.00418758392334
    6. 'u' → logprob: -11.87918758392334
    7. '[I' → logprob: -12.12918758392334
    8. '[
' → logprob: -12.25418758392334
    9. '[l' → logprob: -13.37918758392334
    10. '   ' → logprob: -13.37918758392334

Token 1804: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003034074034076184
    2. '_,' → logprob: -8.250303268432617
    3. ',' → logprob: -10.500303268432617
    4. '_' → logprob: -11.750303268432617
    5. ',u' → logprob: -12.875303268432617
    6. '   ' → logprob: -14.000303268432617
    7. '[' → logprob: -14.125303268432617
    8. 'u' → logprob: -14.500303268432617
    9. ',_' → logprob: -15.250303268432617
    10. '[u' → logprob: -15.375303268432617

Token 1805: ',v' (ID: 30680)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03761185705661774
    2. ',v' → logprob: -3.662611961364746
    3. ',u' → logprob: -5.287611961364746
    4. '][' → logprob: -5.662611961364746
    5. '[u' → logprob: -6.662611961364746
    6. '[v' → logprob: -7.287611961364746
    7. '[' → logprob: -8.287611961364746
    8. ',i' → logprob: -8.537611961364746
    9. '[i' → logprob: -9.912611961364746
    10. ' ,' → logprob: -10.162611961364746

Token 1806: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.019701261073350906
    2. 'v' → logprob: -4.3947014808654785
    3. 'u' → logprob: -5.0197014808654785
    4. ',v' → logprob: -8.76970100402832
    5. '[u' → logprob: -9.39470100402832
    6. ',u' → logprob: -9.89470100402832
    7. '1' → logprob: -10.01970100402832
    8. '   ' → logprob: -10.39470100402832
    9. 'o' → logprob: -10.39470100402832
    10. '[v' → logprob: -10.51970100402832

Token 1807: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.016020290553569794
    2. ']=' → logprob: -5.14102029800415
    3. '=' → logprob: -5.51602029800415
    4. '-' → logprob: -5.89102029800415
    5. '[' → logprob: -6.89102029800415
    6. ']-' → logprob: -7.01602029800415
    7. ']=-' → logprob: -7.64102029800415
    8. '-=' → logprob: -7.76602029800415
    9. '   ' → logprob: -9.016019821166992
    10. ',' → logprob: -9.641019821166992

Token 1808: ' =' (ID: 314)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.3289601802825928
    2. '=' → logprob: -1.3289601802825928
    3. '-' → logprob: -4.328960418701172
    4. ' -=' → logprob: -6.703960418701172
    5. '[' → logprob: -6.953960418701172
    6. '   ' → logprob: -9.078960418701172
    7. '=-' → logprob: -10.453960418701172
    8. '+=' → logprob: -10.828960418701172
    9. '[-' → logprob: -10.953960418701172
    10. '```' → logprob: -11.203960418701172

Token 1809: ' L' (ID: 451)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00016766376211307943
    2. '-M' → logprob: -9.375167846679688
    3. ' -' → logprob: -9.875167846679688
    4. '-mod' → logprob: -11.125167846679688
    5. '-L' → logprob: -11.375167846679688
    6. '-Mod' → logprob: -12.875167846679688
    7. '-l' → logprob: -13.125167846679688
    8. '-m' → logprob: -15.375167846679688
    9. '0' → logprob: -16.500167846679688
    10. '   ' → logprob: -16.625167846679688

Token 1810: '[v' (ID: 36561)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.022719474509358406
    2. '-' → logprob: -4.147719383239746
    3. '[' → logprob: -5.522719383239746
    4. 'u' → logprob: -6.397719383239746
    5. '-u' → logprob: -7.647719383239746
    6. '0' → logprob: -8.897719383239746
    7. '[i' → logprob: -9.022719383239746
    8. ' -' → logprob: -9.272719383239746
    9. '[
' → logprob: -9.397719383239746
    10. '(u' → logprob: -10.522719383239746

Token 1811: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. '[u' → logprob: -15.375000953674316
    3. 'u' → logprob: -15.750000953674316
    4. ',u' → logprob: -16.0
    5. ',' → logprob: -17.625
    6. '[' → logprob: -18.0
    7. '   ' → logprob: -18.25
    8. '(u' → logprob: -19.125
    9. '_' → logprob: -19.25
    10. '```' → logprob: -19.25

Token 1812: ',u' (ID: 80698)
  Prédit: ',u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',u' → logprob: -0.0002060436672763899
    2. 'u' → logprob: -9.000205993652344
    3. ',' → logprob: -9.500205993652344
    4. '[u' → logprob: -12.375205993652344
    5. ',v' → logprob: -12.750205993652344
    6. '0' → logprob: -15.125205993652344
    7. ',
' → logprob: -16.625205993652344
    8. ',i' → logprob: -16.625205993652344
    9. '[' → logprob: -16.750205993652344
    10. '   ' → logprob: -17.500205993652344

Token 1813: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00029995047952979803
    2. 'u' → logprob: -8.125300407409668
    3. '[u' → logprob: -13.875300407409668
    4. ',u' → logprob: -14.125300407409668
    5. 'o' → logprob: -14.500300407409668
    6. '```' → logprob: -14.500300407409668
    7. '_' → logprob: -15.000300407409668
    8. 'v' → logprob: -15.500300407409668
    9. '[' → logprob: -15.750300407409668
    10. '(u' → logprob: -16.25029945373535

Token 1814: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.009720553644001484
    2. '-' → logprob: -5.009720325469971
    3. '=-' → logprob: -6.384720325469971
    4. ' =' → logprob: -7.384720325469971
    5. ']' → logprob: -8.759720802307129
    6. ']=' → logprob: -9.134720802307129
    7. '                   ' → logprob: -9.134720802307129
    8. '   ' → logprob: -9.259720802307129
    9. ' -' → logprob: -9.509720802307129
    10. ']=-' → logprob: -9.884720802307129

Token 1815: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3556186258792877
    2. '-' → logprob: -1.2306185960769653
    3. '-=' → logprob: -5.355618476867676
    4. '=-' → logprob: -6.230618476867676
    5. ' -' → logprob: -8.105618476867676
    6. ' =' → logprob: -10.105618476867676
    7. '[' → logprob: -10.355618476867676
    8. '[-' → logprob: -10.355618476867676
    9. ' -=' → logprob: -11.105618476867676
    10. '<|end|>' → logprob: -11.980618476867676

Token 1816: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0007400614558719099
    2. '-mod' → logprob: -8.000740051269531
    3. '-M' → logprob: -8.000740051269531
    4. '-Mod' → logprob: -9.625740051269531
    5. ' -' → logprob: -12.750740051269531
    6. '                   ' → logprob: -15.750740051269531
    7. '-m' → logprob: -16.00074005126953
    8. '   ' → logprob: -16.87574005126953
    9. '(Mod' → logprob: -17.75074005126953
    10. 'MOD' → logprob: -17.87574005126953

Token 1817: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '   ' → logprob: -18.125
    4. '۱' → logprob: -19.5
    5. '```' → logprob: -20.0
    6. '  ' → logprob: -21.5
    7. '１' → logprob: -21.5
    8. '+' → logprob: -21.75
    9. '100' → logprob: -21.75
    10. '১' → logprob: -22.1875

Token 1818: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1819: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005159750580787659
    2. '
' → logprob: -6.255159854888916
    3. '<|end|>' → logprob: -6.755159854888916
    4. '```' → logprob: -7.380159854888916
    5. '       ' → logprob: -7.630159854888916
    6. '                
' → logprob: -8.130159378051758
    7. '           ' → logprob: -9.255159378051758
    8. ')' → logprob: -9.255159378051758
    9. '    
' → logprob: -9.255159378051758
    10. '<|end|>' → logprob: -9.380159378051758

Token 1820: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5425506234169006
    2. 'def' → logprob: -1.0425505638122559
    3. 'from' → logprob: -3.167550563812256
    4. '#' (adapté à ' #') → logprob: -4.292550563812256
    5. 'import' → logprob: -5.417550563812256
    6. 'L' → logprob: -6.667550563812256
    7. 'det' → logprob: -7.042550563812256
    8. '
' → logprob: -7.167550563812256
    9. '```' → logprob: -7.167550563812256
    10. ' def' → logprob: -7.417550563812256

Token 1821: ' Calcul' (ID: 57243)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.48474135994911194
    2. '               ' → logprob: -1.7347413301467896
    3. 'det' → logprob: -2.609741449356079
    4. 'from' → logprob: -2.859741449356079
    5. '#' → logprob: -3.109741449356079
    6. ' def' → logprob: -4.2347412109375
    7. 'L' → logprob: -5.1097412109375
    8. '
' → logprob: -5.7347412109375
    9. ' #' → logprob: -6.2347412109375
    10. 'import' → logprob: -6.2347412109375

Token 1822: ' du' (ID: 1462)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.040844712406396866
    2. 'def' → logprob: -3.915844678878784
    3. ' =' → logprob: -5.290844917297363
    4. 'det' → logprob: -5.290844917297363
    5. 'from' → logprob: -6.040844917297363
    6. 'import' → logprob: -6.290844917297363
    7. '           ' → logprob: -6.415844917297363
    8. '=' → logprob: -6.665844917297363
    9. '#' → logprob: -7.540844917297363
    10. ' def' → logprob: -7.915844917297363

Token 1823: ' détermin' (ID: 62185)
  Prédit: 'det'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'det' → logprob: -0.6222939491271973
    2. 'np' → logprob: -0.9972939491271973
    3. '1' → logprob: -3.3722939491271973
    4. '(np' → logprob: -4.122293949127197
    5. 'def' → logprob: -4.122293949127197
    6. 'L' → logprob: -4.747293949127197
    7. '#' → logprob: -5.747293949127197
    8. 're' → logprob: -5.872293949127197
    9. 'ans' → logprob: -6.497293949127197
    10. '2' → logprob: -6.747293949127197

Token 1824: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -1.9981420336989686e-05
    2. 'ante' → logprob: -11.750020027160645
    3. 'L' → logprob: -12.000020027160645
    4. 'nant' → logprob: -13.125020027160645
    5. '#' → logprob: -13.750020027160645
    6. 'in' → logprob: -13.875020027160645
    7. 'ent' → logprob: -14.375020027160645
    8. 'ANT' → logprob: -14.875020027160645
    9. 'Ant' → logprob: -15.875020027160645
    10. 'ант' → logprob: -16.250019073486328

Token 1825: ' principal' (ID: 10589)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6933311223983765
    2. '               ' → logprob: -1.6933311223983765
    3. 'L' → logprob: -2.443331241607666
    4. '(L' → logprob: -2.568331241607666
    5. '=' → logprob: -2.818331241607666
    6. 'np' → logprob: -3.443331241607666
    7. 'det' → logprob: -4.068331241607666
    8. '=L' → logprob: -5.068331241607666
    9. 'of' → logprob: -5.193331241607666
    10. '_L' → logprob: -5.318331241607666

Token 1826: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8031117916107178
    2. '[' → logprob: -1.4281117916107178
    3. '(' → logprob: -2.5531117916107178
    4. 'L' → logprob: -2.5531117916107178
    5. ' (' → logprob: -3.9281117916107178
    6. '(np' → logprob: -3.9281117916107178
    7. '(L' → logprob: -4.053112030029297
    8. '=' → logprob: -4.178112030029297
    9. '
' → logprob: -4.303112030029297
    10. ' L' → logprob: -4.553112030029297

Token 1827: 'on' (ID: 263)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.020199645310640335
    2. '1' → logprob: -4.145199775695801
    3. 'np' → logprob: -6.145199775695801
    4. '0' → logprob: -6.770199775695801
    5. ' L' → logprob: -8.0201997756958
    6. ':' → logprob: -8.7701997756958
    7. '(' → logprob: -9.2701997756958
    8. '   ' → logprob: -9.2701997756958
    9. '[' → logprob: -9.5201997756958
    10. ':L' → logprob: -10.3951997756958

Token 1828: ' enl' (ID: 116494)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.46338164806365967
    2. ' =' → logprob: -1.7133816480636597
    3. '=' → logprob: -2.713381767272949
    4. '[:,' → logprob: -3.588381767272949
    5. '1' → logprob: -3.838381767272949
    6. '[:-' → logprob: -3.963381767272949
    7. 'def' → logprob: -4.463381767272949
    8. '0' → logprob: -4.713381767272949
    9. ')' → logprob: -5.338381767272949
    10. 'import' → logprob: -5.338381767272949

Token 1829: 'ève' (ID: 41151)
  Prédit: 'ève'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ève' → logprob: -0.24073924124240875
    2. 'e' → logprob: -2.115739345550537
    3. 'eve' → logprob: -3.115739345550537
    4. 've' → logprob: -3.615739345550537
    5. 'ev' → logprob: -4.615739345550537
    6. 'ove' → logprob: -5.365739345550537
    7. 'L' → logprob: -5.865739345550537
    8. '0' → logprob: -6.490739345550537
    9. 'ver' → logprob: -7.240739345550537
    10. '#' → logprob: -7.615739345550537

Token 1830: ' une' (ID: 2463)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.5310771465301514
    2. ' la' → logprob: -1.6560771465301514
    3. '0' → logprob: -2.2810771465301514
    4. 'le' → logprob: -2.9060771465301514
    5. 'une' → logprob: -3.4060771465301514
    6. 'the' → logprob: -4.4060773849487305
    7. ' une' → logprob: -5.0310773849487305
    8. '1' → logprob: -5.4060773849487305
    9. 'l' → logprob: -6.0310773849487305
    10. '[' → logprob: -6.7810773849487305

Token 1831: ' ligne' (ID: 19583)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.727859616279602
    2. '1' → logprob: -1.477859616279602
    3. '0' → logprob: -1.602859616279602
    4. '[' → logprob: -3.6028594970703125
    5. 'ligne' → logprob: -3.8528594970703125
    6. ' row' → logprob: -4.2278594970703125
    7. '行' → logprob: -4.9778594970703125
    8. '(' → logprob: -5.4778594970703125
    9. ')' → logprob: -6.3528594970703125
    10. ' ligne' → logprob: -6.6028594970703125

Token 1832: ' et' (ID: 859)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.5920639038085938
    2. '0' → logprob: -1.3420639038085938
    3. ',' → logprob: -1.8420639038085938
    4. '[' → logprob: -4.217063903808594
    5. ' and' → logprob: -4.717063903808594
    6. '1' → logprob: -6.217063903808594
    7. 's' → logprob: -8.092063903808594
    8. '```' → logprob: -8.592063903808594
    9. '(' → logprob: -8.967063903808594
    10. '-' → logprob: -9.217063903808594

Token 1833: ' colonne' (ID: 148275)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.0011449799640104175
    2. 'une' → logprob: -7.376144886016846
    3. 'column' → logprob: -8.251145362854004
    4. ' colonne' → logprob: -8.376145362854004
    5. 'colon' → logprob: -11.001145362854004
    6. 'la' → logprob: -12.501145362854004
    7. '1' → logprob: -13.251145362854004
    8. 'ligne' → logprob: -13.876145362854004
    9. 'colm' → logprob: -14.626145362854004
    10. '```' → logprob: -14.751145362854004

Token 1834: ')
' (ID: 446)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.46016886830329895
    2. '[' → logprob: -1.2101688385009766
    3. '(' → logprob: -3.2101688385009766
    4. ',' → logprob: -3.5851688385009766
    5. '1' → logprob: -7.585168838500977
    6. '               ' → logprob: -7.960168838500977
    7. ' (' → logprob: -7.960168838500977
    8. ':' → logprob: -8.210168838500977
    9. '[:-' → logprob: -8.335168838500977
    10. 's' → logprob: -8.585168838500977

Token 1835: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10503651946783066
    2. '[' → logprob: -2.480036497116089
    3. '(' → logprob: -4.605036735534668
    4. 'L' → logprob: -6.105036735534668
    5. '0' → logprob: -6.730036735534668
    6. ' L' → logprob: -7.355036735534668
    7. '```' → logprob: -7.605036735534668
    8. ' (' → logprob: -8.230036735534668
    9. '[L' → logprob: -8.605036735534668
    10. '`' → logprob: -8.980036735534668

Token 1836: ' #' (ID: 1069)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -1.3983620405197144
    2. '1' → logprob: -1.5233620405197144
    3. '0' → logprob: -1.6483620405197144
    4. 'det' → logprob: -1.8983620405197144
    5. '               ' → logprob: -3.023362159729004
    6. ' L' → logprob: -3.398362159729004
    7. '   ' → logprob: -4.023362159729004
    8. '[' → logprob: -4.148362159729004
    9. ' det' → logprob: -4.273362159729004
    10. 'd' → logprob: -4.273362159729004

Token 1837: ' Ici' (ID: 145754)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7623963952064514
    2. 'L' → logprob: -1.0123963356018066
    3. 'det' → logprob: -2.0123963356018066
    4. '0' → logprob: -4.262396335601807
    5. ' L' → logprob: -5.262396335601807
    6. '(' → logprob: -5.262396335601807
    7. 'return' → logprob: -6.137396335601807
    8. ' det' → logprob: -6.137396335601807
    9. '[' → logprob: -6.637396335601807
    10. 'np' → logprob: -6.762396335601807

Token 1838: ' on' (ID: 402)
  Prédit: ' det'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' det' → logprob: -0.8302334547042847
    2. 'L' → logprob: -1.0802334547042847
    3. ' L' → logprob: -2.330233573913574
    4. 'det' → logprob: -2.705233573913574
    5. 'k' → logprob: -4.455233573913574
    6. ' k' → logprob: -4.830233573913574
    7. ' res' → logprob: -5.205233573913574
    8. ' =' → logprob: -5.455233573913574
    9. 'np' → logprob: -5.705233573913574
    10. 'd' → logprob: -5.705233573913574

Token 1839: ' ne' (ID: 453)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7411579489707947
    2. '=' → logprob: -1.1161580085754395
    3. '[' → logprob: -2.8661580085754395
    4. 'import' → logprob: -3.2411580085754395
    5. '[:,' → logprob: -3.9911580085754395
    6. '0' → logprob: -4.7411580085754395
    7. 'remove' → logprob: -4.9911580085754395
    8. '#' → logprob: -4.9911580085754395
    9. 'L' → logprob: -5.1161580085754395
    10. '=np' → logprob: -5.2411580085754395

Token 1840: ' va' (ID: 3423)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7400727868080139
    2. 'remove' → logprob: -1.1150727272033691
    3. 'delete' → logprob: -2.615072727203369
    4. '[:,' → logprob: -3.365072727203369
    5. 'skip' → logprob: -4.240072727203369
    6. 'compute' → logprob: -4.365072727203369
    7. '=' → logprob: -4.990072727203369
    8. '#' → logprob: -5.240072727203369
    9. 'shape' → logprob: -5.240072727203369
    10. 'cut' → logprob: -6.115072727203369

Token 1841: ' garder' (ID: 63069)
  Prédit: ' compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' compute' → logprob: -1.0697212219238281
    2. 'compute' → logprob: -1.5697212219238281
    3. ' pas' → logprob: -1.6947212219238281
    4. ' take' → logprob: -2.694721221923828
    5. 'import' → logprob: -2.819721221923828
    6. ' remove' → logprob: -3.944721221923828
    7. 'pas' → logprob: -4.194721221923828
    8. ' calculate' → logprob: -4.194721221923828
    9. '0' → logprob: -4.569721221923828
    10. 'remove' → logprob: -4.819721221923828

Token 1842: ' que' (ID: 661)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.278669148683548
    2. 'L' → logprob: -2.6536691188812256
    3. '[' → logprob: -2.9036691188812256
    4. '1' → logprob: -3.5286691188812256
    5. 'k' → logprob: -3.5286691188812256
    6. ':' → logprob: -3.6536691188812256
    7. '   ' → logprob: -4.778669357299805
    8. '(' → logprob: -5.653669357299805
    9. ':k' → logprob: -5.778669357299805
    10. '[k' → logprob: -6.028669357299805

Token 1843: ' la' (ID: 557)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.4763187766075134
    2. 'k' → logprob: -1.4763188362121582
    3. '0' → logprob: -2.726318836212158
    4. 'the' → logprob: -3.601318836212158
    5. ':' → logprob: -3.851318836212158
    6. 'range' → logprob: -5.226318836212158
    7. 'np' → logprob: -5.226318836212158
    8. ':k' → logprob: -5.351318836212158
    9. 'all' → logprob: -5.726318836212158
    10. 'a' → logprob: -5.851318836212158

Token 1844: ' matr' (ID: 25095)
  Prédit: ':k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':k' → logprob: -0.6700329780578613
    2. '0' → logprob: -1.4200329780578613
    3. 'k' → logprob: -2.2950329780578613
    4. '1' → logprob: -3.0450329780578613
    5. ':' → logprob: -3.4200329780578613
    6. '[:-' → logprob: -3.6700329780578613
    7. ':-' → logprob: -4.170032978057861
    8. 'range' → logprob: -5.295032978057861
    9. '(k' → logprob: -5.670032978057861
    10. ':first' → logprob: -5.795032978057861

Token 1845: 'ice' (ID: 603)
  Prédit: 'ix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ix' → logprob: -0.011202018707990646
    2. 'ice' → logprob: -4.636201858520508
    3. 'x' → logprob: -6.886201858520508
    4. 'i' → logprob: -8.136201858520508
    5. 'ic' → logprob: -9.261201858520508
    6. 'L' → logprob: -11.386201858520508
    7. 'ixe' → logprob: -12.136201858520508
    8. '```' → logprob: -12.511201858520508
    9. 'ices' → logprob: -13.011201858520508
    10. '#' → logprob: -13.011201858520508

Token 1846: ' (' (ID: 350)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.12537764012813568
    2. '[:-' → logprob: -2.625377655029297
    3. '[L' → logprob: -4.625377655029297
    4. '[' → logprob: -4.875377655029297
    5. '[:' → logprob: -4.875377655029297
    6. '=L' → logprob: -5.000377655029297
    7. ' =' → logprob: -5.500377655029297
    8. '=' → logprob: -5.500377655029297
    9. '(L' → logprob: -6.875377655029297
    10. ' L' → logprob: -7.125377655029297

Token 1847: 'k' (ID: 74)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.22401635348796844
    2. 'k' → logprob: -2.4740164279937744
    3. '0' → logprob: -3.4740164279937744
    4. ':-' → logprob: -3.4740164279937744
    5. '1' → logprob: -3.9740164279937744
    6. '[:-' → logprob: -4.349016189575195
    7. ':' → logprob: -4.849016189575195
    8. ':L' → logprob: -4.849016189575195
    9. ':k' → logprob: -5.349016189575195
    10. '[' → logprob: -7.349016189575195

Token 1848: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0005773392622359097
    2. ' -' → logprob: -7.500577449798584
    3. ',' → logprob: -11.750576972961426
    4. '1' → logprob: -12.375576972961426
    5. '-
' → logprob: -12.375576972961426
    6. '
' → logprob: -13.250576972961426
    7. '0' → logprob: -13.750576972961426
    8. '−' → logprob: -14.000576972961426
    9. '   ' → logprob: -14.875576972961426
    10. 'k' → logprob: -14.875576972961426

Token 1849: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0012958350125700235
    2. '-' → logprob: -7.251296043395996
    3. 'k' → logprob: -8.001296043395996
    4. '```' → logprob: -9.126296043395996
    5. '0' → logprob: -10.126296043395996
    6. 'x' → logprob: -10.376296043395996
    7. ')' → logprob: -10.751296043395996
    8. ' ' → logprob: -11.126296043395996
    9. ' -' → logprob: -11.876296043395996
    10. '...' → logprob: -11.876296043395996

Token 1850: ' x' (ID: 1215)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.35050082206726074
    2. ',k' → logprob: -1.2255008220672607
    3. ' ,' → logprob: -7.35050106048584
    4. ')' → logprob: -8.10050106048584
    5. '
' → logprob: -8.97550106048584
    6. ',
' → logprob: -9.10050106048584
    7. ')x' → logprob: -9.22550106048584
    8. ',x' → logprob: -9.22550106048584
    9. ':k' → logprob: -9.22550106048584
    10. ':,' → logprob: -9.60050106048584

Token 1851: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.007649579551070929
    2. '(k' → logprob: -4.8826494216918945
    3. ' (' → logprob: -10.257649421691895
    4. ' k' → logprob: -12.507649421691895
    5. '
' → logprob: -13.132649421691895
    6. '{k' → logprob: -13.257649421691895
    7. '1' → logprob: -15.007649421691895
    8. ')' → logprob: -16.00765037536621
    9. '[k' → logprob: -16.38265037536621
    10. ',k' → logprob: -16.38265037536621

Token 1852: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02418636903166771
    2. '1' → logprob: -4.274186134338379
    3. ',' → logprob: -4.649186134338379
    4. ')' → logprob: -8.399186134338379
    5. ' -' → logprob: -9.149186134338379
    6. '```' → logprob: -11.024186134338379
    7. '0' → logprob: -11.274186134338379
    8. '
' → logprob: -12.274186134338379
    9. '_minus' → logprob: -12.399186134338379
    10. ',
' → logprob: -12.399186134338379

Token 1853: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. '-' → logprob: -13.62500286102295
    3. '```' → logprob: -14.00000286102295
    4. ')' → logprob: -15.25000286102295
    5. '
' → logprob: -17.062501907348633
    6. '   ' → logprob: -17.562501907348633
    7. '<|end|>' → logprob: -17.625001907348633
    8. '...' → logprob: -18.000001907348633
    9. '#' → logprob: -18.000001907348633
    10. '<|end|>' → logprob: -18.125001907348633

Token 1854: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1466628909111023
    2. ')
' → logprob: -2.396662950515747
    3. ')[' → logprob: -3.396662950515747
    4. ',' → logprob: -5.146662712097168
    5. ',
' → logprob: -5.771662712097168
    6. '               ' → logprob: -7.021662712097168
    7. '[' → logprob: -8.021662712097168
    8. '
' → logprob: -8.146662712097168
    9. '[
' → logprob: -8.146662712097168
    10. '```' → logprob: -8.146662712097168

Token 1855: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002050812589004636
    2. '[' → logprob: -7.252050876617432
    3. '                
' → logprob: -7.877050876617432
    4. ',' → logprob: -8.502050399780273
    5. '[
' → logprob: -8.502050399780273
    6. '           ' → logprob: -9.752050399780273
    7. '[i' → logprob: -9.877050399780273
    8. '   ' → logprob: -9.877050399780273
    9. '```' → logprob: -10.002050399780273
    10. '
' → logprob: -10.127050399780273

Token 1856: ' mat' (ID: 2450)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2070329487323761
    2. 'L' → logprob: -2.2070329189300537
    3. '[
' → logprob: -3.5820329189300537
    4. '[' → logprob: -3.7070329189300537
    5. ' L' → logprob: -4.957033157348633
    6. 'det' → logprob: -5.207033157348633
    7. '(
' → logprob: -6.207033157348633
    8. '[L' → logprob: -6.582033157348633
    9. '   ' → logprob: -7.207033157348633
    10. ',' → logprob: -7.707033157348633

Token 1857: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3879896402359009
    2. '=' → logprob: -1.1379896402359009
    3. '=k' → logprob: -7.262989521026611
    4. '=np' → logprob: -8.13798999786377
    5. '[' → logprob: -9.63798999786377
    6. '=L' → logprob: -10.63798999786377
    7. '=
' → logprob: -12.01298999786377
    8. '=n' → logprob: -12.76298999786377
    9. '[token' → logprob: -13.01298999786377
    10. '[k' → logprob: -13.13798999786377

Token 1858: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.011052536778151989
    2. ' L' → logprob: -4.51105260848999
    3. 'np' → logprob: -12.386052131652832
    4. '	L' → logprob: -15.886052131652832
    5. ' np' → logprob: -16.26105308532715
    6. '=L' → logprob: -16.63605308532715
    7. '(L' → logprob: -17.26105308532715
    8. '   ' → logprob: -17.38605308532715
    9. '[L' → logprob: -18.01105308532715
    10. '               ' → logprob: -18.13605308532715

Token 1859: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6690707802772522
    2. '[:' → logprob: -1.4190707206726074
    3. '[:-' → logprob: -1.4190707206726074
    4. '[np' → logprob: -5.544070720672607
    5. '[
' → logprob: -11.294071197509766
    6. '[:,' → logprob: -12.044071197509766
    7. '=' → logprob: -13.419071197509766
    8. 'np' → logprob: -13.669071197509766
    9. '[k' → logprob: -13.669071197509766
    10. ' =' → logprob: -14.294071197509766

Token 1860: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6290566325187683
    2. ':' → logprob: -1.254056692123413
    3. ':-' → logprob: -1.879056692123413
    4. '1' → logprob: -3.629056692123413
    5. 'slice' → logprob: -7.004056453704834
    6. '[:-' → logprob: -7.129056453704834
    7. ':s' → logprob: -8.754056930541992
    8. ':(' → logprob: -9.004056930541992
    9. 'np' → logprob: -9.754056930541992
    10. ' :-' → logprob: -9.754056930541992

Token 1861: ':,' (ID: 79923)
  Prédit: ':,'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':,' → logprob: -0.20186741650104523
    2. ':' → logprob: -1.7018674612045288
    3. ':k' → logprob: -8.07686710357666
    4. ':]' → logprob: -9.07686710357666
    5. ':(' → logprob: -11.32686710357666
    6. ':-' → logprob: -12.20186710357666
    7. ':n' → logprob: -12.57686710357666
    8. ':].' → logprob: -12.95186710357666
    9. ':
' → logprob: -13.20186710357666
    10. ':],' → logprob: -14.07686710357666

Token 1862: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ':' → logprob: -13.750001907348633
    3. ':,' → logprob: -14.875001907348633
    4. ' ' → logprob: -16.250001907348633
    5. '   ' → logprob: -17.875001907348633
    6. ':]' → logprob: -18.625001907348633
    7. '
' → logprob: -18.750001907348633
    8. ',' → logprob: -19.375001907348633
    9. '```' → logprob: -19.750001907348633
    10. '0' → logprob: -19.875001907348633

Token 1863: ':]

' (ID: 170549)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018413301557302475
    2. ':,' → logprob: -4.393413066864014
    3. ':' → logprob: -5.518413066864014
    4. ':]' → logprob: -6.393413066864014
    5. '1' → logprob: -8.893413543701172
    6. ']' → logprob: -10.018413543701172
    7. ' ,' → logprob: -12.018413543701172
    8. '   ' → logprob: -12.518413543701172
    9. ',:' → logprob: -13.393413543701172
    10. '...,' → logprob: -13.518413543701172

Token 1864: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011710787191987038
    2. '
' → logprob: -4.7617106437683105
    3. 'det' → logprob: -6.7617106437683105
    4. 'try' → logprob: -6.8867106437683105
    5. '           ' → logprob: -9.011711120605469
    6. '```' → logprob: -9.011711120605469
    7. '                
' → logprob: -9.011711120605469
    8. 'result' → logprob: -9.136711120605469
    9. ',' → logprob: -9.136711120605469
    10. '       ' → logprob: -9.886711120605469

Token 1865: ' #' (ID: 1069)
  Prédit: 'det'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'det' → logprob: -0.10190210491418839
    2. 'def' → logprob: -2.8519020080566406
    3. 'try' → logprob: -3.4769020080566406
    4. '               ' → logprob: -6.101902008056641
    5. 'rank' → logprob: -6.226902008056641
    6. 'from' → logprob: -6.726902008056641
    7. '#' (adapté à ' #') → logprob: -7.226902008056641
    8. 'return' → logprob: -7.476902008056641
    9. 'import' → logprob: -7.726902008056641
    10. 'sign' → logprob: -8.72690200805664

Token 1866: ' Calcul' (ID: 57243)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.984161376953125
    2. 'det' → logprob: -0.984161376953125
    3. 'from' → logprob: -1.484161376953125
    4. '               ' → logprob: -4.859161376953125
    5. 'import' → logprob: -4.984161376953125
    6. '#' → logprob: -5.234161376953125
    7. 'try' → logprob: -6.109161376953125
    8. 'rank' → logprob: -7.234161376953125
    9. 'n' → logprob: -7.359161376953125
    10. 'np' → logprob: -7.484161376953125

Token 1867: ' du' (ID: 1462)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6905781030654907
    2. 'def' → logprob: -1.6905781030654907
    3. 'import' → logprob: -1.9405781030654907
    4. 'det' → logprob: -2.565577983856201
    5. ' =' → logprob: -3.190577983856201
    6. 'np' → logprob: -4.065577983856201
    7. '=np' → logprob: -4.315577983856201
    8. '=' → logprob: -5.190577983856201
    9. 'from' → logprob: -5.315577983856201
    10. 'pow' → logprob: -6.190577983856201

Token 1868: ' détermin' (ID: 62185)
  Prédit: 'det'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'det' → logprob: -0.04587440565228462
    2. 'def' → logprob: -3.1708743572235107
    3. 'mod' → logprob: -7.04587459564209
    4. 'np' → logprob: -7.42087459564209
    5. ' determinant' → logprob: -7.79587459564209
    6. '.linalg' → logprob: -8.17087459564209
    7. 'shape' → logprob: -9.04587459564209
    8. 'ans' → logprob: -9.17087459564209
    9. 'l' → logprob: -9.54587459564209
    10. 'result' → logprob: -9.92087459564209

Token 1869: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -1.771655115589965e-05
    2. 'ante' → logprob: -11.750018119812012
    3. 'ent' → logprob: -12.500018119812012
    4. 'ант' → logprob: -13.625018119812012
    5. '#' → logprob: -13.875018119812012
    6. '```' → logprob: -14.000018119812012
    7. 'mat' → logprob: -14.125018119812012
    8. 'ANT' → logprob: -15.250018119812012
    9. 'antt' → logprob: -15.250018119812012
    10. 'Ant' → logprob: -15.375018119812012

Token 1870: ' modulo' (ID: 112372)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.349610298871994
    2. '=' → logprob: -2.0996103286743164
    3. 'det' → logprob: -3.2246103286743164
    4. '               ' → logprob: -3.4746103286743164
    5. 'def' → logprob: -3.5996103286743164
    6. 'pow' → logprob: -4.599610328674316
    7. 'np' → logprob: -4.849610328674316
    8. 'mod' → logprob: -4.849610328674316
    9. 'result' → logprob: -4.974610328674316
    10. ' modulo' → logprob: -4.974610328674316

Token 1871: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -3.845798710244708e-05
    2. '100' → logprob: -10.750038146972656
    3. ' MOD' → logprob: -11.500038146972656
    4. 'mod' → logprob: -12.375038146972656
    5. 'MAT' → logprob: -13.000038146972656
    6. '_MOD' → logprob: -15.875038146972656
    7. 'mat' → logprob: -17.500038146972656
    8. '```' → logprob: -17.625038146972656
    9. '.MOD' → logprob: -17.625038146972656
    10. '(M' → logprob: -17.750038146972656

Token 1872: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009418285451829433
    2. 'det' → logprob: -5.759418487548828
    3. 'def' → logprob: -6.259418487548828
    4. ' =' → logprob: -6.759418487548828
    5. '
' → logprob: -7.384418487548828
    6. '                
' → logprob: -7.509418487548828
    7. 'result' → logprob: -7.634418487548828
    8. '           ' → logprob: -8.009418487548828
    9. '```' → logprob: -8.134418487548828
    10. ',' → logprob: -8.384418487548828

Token 1873: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4275192618370056
    2. 'def' → logprob: -1.1775193214416504
    3. '
' → logprob: -3.8025193214416504
    4. '                   ' → logprob: -5.42751932144165
    5. 'det' → logprob: -5.67751932144165
    6. '```' → logprob: -5.67751932144165
    7. '           ' → logprob: -5.92751932144165
    8. '   ' → logprob: -6.30251932144165
    9. '                
' → logprob: -7.42751932144165
    10. '       ' → logprob: -7.92751932144165

Token 1874: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.014267751015722752
    2. 'det' → logprob: -4.514267921447754
    3. '               ' → logprob: -5.889267921447754
    4. '   ' → logprob: -8.264267921447754
    5. '
' → logprob: -9.639267921447754
    6. 'n' → logprob: -10.639267921447754
    7. '```' → logprob: -10.639267921447754
    8. '                
' → logprob: -10.764267921447754
    9. '           ' → logprob: -11.014267921447754
    10. '                   ' → logprob: -11.514267921447754

Token 1875: ' Num' (ID: 33827)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05045543983578682
    2. 'det' → logprob: -3.050455331802368
    3. '               ' → logprob: -6.675455570220947
    4. 'n' → logprob: -8.300455093383789
    5. '   ' → logprob: -8.800455093383789
    6. '           ' → logprob: -9.300455093383789
    7. '
' → logprob: -10.800455093383789
    8. 'res' → logprob: -10.925455093383789
    9. '                   ' → logprob: -10.925455093383789
    10. 'ans' → logprob: -11.425455093383789

Token 1876: 'Py' (ID: 37863)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.30520889163017273
    2. 'p' → logprob: -1.4302089214324951
    3. 'import' → logprob: -4.180208683013916
    4. 'def' → logprob: -6.180208683013916
    5. 'ber' → logprob: -6.305208683013916
    6. ' =' → logprob: -7.180208683013916
    7. '```' → logprob: -7.180208683013916
    8. '=' → logprob: -7.430208683013916
    9. 'Py' → logprob: -7.555208683013916
    10. 'pty' → logprob: -7.805208683013916

Token 1877: ' by' (ID: 656)
  Prédit: '.linalg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.linalg' → logprob: -0.09733598679304123
    2. 'def' → logprob: -2.8473360538482666
    3. '.' → logprob: -5.2223358154296875
    4. '.matmul' → logprob: -5.2223358154296875
    5. '_mat' → logprob: -5.5973358154296875
    6. 'mat' → logprob: -5.7223358154296875
    7. 'import' → logprob: -5.8473358154296875
    8. '.ndarray' → logprob: -5.9723358154296875
    9. 'det' → logprob: -6.0973358154296875
    10. ' mat' → logprob: -6.5973358154296875

Token 1878: ' default' (ID: 2787)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.2105463296175003
    2. 'passes' → logprob: -1.8355463743209839
    3. 'pass' → logprob: -3.8355462551116943
    4. 'l' → logprob: -5.585546493530273
    5. 'def' → logprob: -5.960546493530273
    6. 'import' → logprob: -6.710546493530273
    7. 'np' → logprob: -7.960546493530273
    8. ' default' → logprob: -8.960546493530273
    9. 'int' → logprob: -8.960546493530273
    10. 'passed' → logprob: -9.085546493530273

Token 1879: ' does' (ID: 2226)
  Prédit: '.linalg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.linalg' → logprob: -0.006653673015534878
    2. '
' → logprob: -6.631653785705566
    3. '.zeros' → logprob: -6.631653785705566
    4. 'def' → logprob: -7.131653785705566
    5. '.asarray' → logprob: -7.506653785705566
    6. '.matmul' → logprob: -7.631653785705566
    7. '.array' → logprob: -8.006653785705566
    8. 'mod' → logprob: -8.131653785705566
    9. '.ndarray' → logprob: -8.256653785705566
    10. 'array' → logprob: -8.381653785705566

Token 1880: ' float' (ID: 4428)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.00015955790877342224
    2. ' not' → logprob: -9.00015926361084
    3. 'np' → logprob: -11.00015926361084
    4. 'n't' → logprob: -11.87515926361084
    5. '_not' → logprob: -13.12515926361084
    6. 'mat' → logprob: -13.37515926361084
    7. 'nt' → logprob: -13.75015926361084
    8. 'def' → logprob: -13.75015926361084
    9. '```' → logprob: -13.75015926361084
    10. 'int' → logprob: -13.87515926361084

Token 1881: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.37533825635910034
    2. '.' → logprob: -2.250338315963745
    3. 'mat' → logprob: -2.375338315963745
    4. 'def' → logprob: -3.750338315963745
    5. ',' → logprob: -4.375338077545166
    6. ' mat' → logprob: -4.500338077545166
    7. 'import' → logprob: -4.625338077545166
    8. '_' → logprob: -4.750338077545166
    9. '_mat' → logprob: -4.875338077545166
    10. ']' → logprob: -5.500338077545166

Token 1882: ' on' (ID: 402)
  Prédit: 'dtype'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dtype' → logprob: -0.6265799403190613
    2. 'def' → logprob: -0.8765799403190613
    3. '#' → logprob: -4.376579761505127
    4. ')' → logprob: -4.626579761505127
    5. '```' → logprob: -4.751579761505127
    6. '               ' → logprob: -5.251579761505127
    7. 'det' → logprob: -5.626579761505127
    8. 'import' → logprob: -5.751579761505127
    9. '`' → logprob: -7.001579761505127
    10. '           ' → logprob: -7.126579761505127

Token 1883: ' doit' (ID: 21822)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3307493329048157
    2. 'import' → logprob: -1.455749273300171
    3. 'pow' → logprob: -4.83074951171875
    4. '```' → logprob: -4.95574951171875
    5. 'continue' → logprob: -5.70574951171875
    6. 'will' → logprob: -6.08074951171875
    7. 'int' → logprob: -6.20574951171875
    8. ' def' → logprob: -6.20574951171875
    9. 'reshape' → logprob: -6.33074951171875
    10. 'perform' → logprob: -6.58074951171875

Token 1884: ' faire' (ID: 8119)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.020381178706884384
    2. '#' → logprob: -4.895380973815918
    3. 'import' → logprob: -5.395380973815918
    4. '```' → logprob: -5.520380973815918
    5. 'do' → logprob: -7.645380973815918
    6. 'det' → logprob: -7.770380973815918
    7. 'compute' → logprob: -7.770380973815918
    8. 'astype' → logprob: -7.895380973815918
    9. 'mat' → logprob: -8.020380973815918
    10. 'convert' → logprob: -8.395380973815918

Token 1885: ' nous' (ID: 6176)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004249469842761755
    2. 'mat' → logprob: -5.879249572753906
    3. 'mod' → logprob: -7.754249572753906
    4. 'det' → logprob: -8.254249572753906
    5. 'int' → logprob: -8.379249572753906
    6. '#' → logprob: -8.879249572753906
    7. '```' → logprob: -9.004249572753906
    8. 'a' → logprob: -9.379249572753906
    9. 'lambda' → logprob: -9.754249572753906
    10. 'np' → logprob: -10.129249572753906

Token 1886: ' meme' (ID: 54868)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1601524353027344
    2. '@' → logprob: -1.4101524353027344
    3. 'mod' → logprob: -1.7851524353027344
    4. 'mat' → logprob: -2.7851524353027344
    5. '@
' → logprob: -2.9101524353027344
    6. 'np' → logprob: -3.4101524353027344
    7. '```' → logprob: -3.4101524353027344
    8. 'for' → logprob: -4.285152435302734
    9. 'import' → logprob: -4.285152435302734
    10. 'dtype' → logprob: -4.910152435302734

Token 1887: ' le' (ID: 505)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0033390752505511045
    2. ' def' → logprob: -6.5033392906188965
    3. '```' → logprob: -6.6283392906188965
    4. 'n' → logprob: -8.628338813781738
    5. 'import' → logprob: -8.753338813781738
    6. '
' → logprob: -9.253338813781738
    7. '``' → logprob: -10.628338813781738
    8. '#' → logprob: -11.253338813781738
    9. 'from' → logprob: -11.878338813781738
    10. '   ' → logprob: -12.128338813781738

Token 1888: ' détermin' (ID: 62185)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5328201651573181
    2. 'det' → logprob: -0.9078201651573181
    3. 'mod' → logprob: -4.907820224761963
    4. '#' → logprob: -7.782820224761963
    5. 'next' → logprob: -7.907820224761963
    6. '```' → logprob: -7.907820224761963
    7. 'd' → logprob: -8.032819747924805
    8. 'for' → logprob: -9.282819747924805
    9. 'code' → logprob: -9.532819747924805
    10. 'mul' → logprob: -9.657819747924805

Token 1889: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.00019483851792756468
    2. '```' → logprob: -9.750194549560547
    3. '#' → logprob: -10.125194549560547
    4. 'ante' → logprob: -10.625194549560547
    5. 'ант' → logprob: -11.000194549560547
    6. '
' → logprob: -11.375194549560547
    7. 'ent' → logprob: -11.875194549560547
    8. 'a' → logprob: -11.875194549560547
    9. 'antt' → logprob: -12.750194549560547
    10. '``' → logprob: -12.875194549560547

Token 1890: ' modulo' (ID: 112372)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04674289748072624
    2. '
' → logprob: -3.9217429161071777
    3. '               ' → logprob: -5.046742916107178
    4. '\' → logprob: -5.171742916107178
    5. '(
' → logprob: -5.796742916107178
    6. '\n' → logprob: -6.671742916107178
    7. '           ' → logprob: -6.921742916107178
    8. '```' → logprob: -6.921742916107178
    9. ' def' → logprob: -7.171742916107178
    10. '   ' → logprob: -7.296742916107178

Token 1891: ' avec' (ID: 3937)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07906229794025421
    2. ' def' → logprob: -4.329062461853027
    3. '`' → logprob: -4.454062461853027
    4. '```' → logprob: -4.454062461853027
    5. '\' → logprob: -5.204062461853027
    6. 'n' → logprob: -5.829062461853027
    7. '"' → logprob: -5.829062461853027
    8. '   ' → logprob: -5.829062461853027
    9. '
' → logprob: -5.829062461853027
    10. '               ' → logprob: -5.954062461853027

Token 1892: ' méthode' (ID: 71490)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.009550308808684349
    2. '```' → logprob: -5.134550094604492
    3. 'MOD' → logprob: -6.134550094604492
    4. 'int' → logprob: -7.509550094604492
    5. 'pow' → logprob: -7.509550094604492
    6. 'lambda' → logprob: -9.259550094604492
    7. 'mod' → logprob: -9.759550094604492
    8. 'np' → logprob: -10.009550094604492
    9. '`' → logprob: -10.384550094604492
    10. '``' → logprob: -10.509550094604492

Token 1893: ' LU' (ID: 112047)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0015764019917696714
    2. '```' → logprob: -7.3765764236450195
    3. ' def' → logprob: -7.6265764236450195
    4. '``' → logprob: -9.25157642364502
    5. '       ' → logprob: -9.75157642364502
    6. '#' → logprob: -9.87657642364502
    7. '`' → logprob: -10.25157642364502
    8. '               ' → logprob: -10.25157642364502
    9. '"""
' → logprob: -10.25157642364502
    10. '   ' → logprob: -10.50157642364502

Token 1894: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.023537082597613335
    2. '               ' → logprob: -4.0235371589660645
    3. '```' → logprob: -5.6485371589660645
    4. '
' → logprob: -7.6485371589660645
    5. '                   ' → logprob: -8.148536682128906
    6. 'det' → logprob: -8.523536682128906
    7. 'n' → logprob: -8.898536682128906
    8. '#' → logprob: -8.898536682128906
    9. '           ' → logprob: -8.898536682128906
    10. ' def' → logprob: -9.148536682128906

Token 1895: '               ' (ID: 506)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15130315721035004
    2. '               ' → logprob: -2.6513030529022217
    3. '   ' → logprob: -4.276303291320801
    4. 'n' → logprob: -4.401303291320801
    5. '```' → logprob: -4.526303291320801
    6. '       ' → logprob: -4.526303291320801
    7. '           ' → logprob: -4.901303291320801
    8. 'd' → logprob: -5.026303291320801
    9. '                   ' → logprob: -5.526303291320801
    10. ' def' → logprob: -6.776303291320801

Token 1896: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.013554045930504799
    2. '               ' → logprob: -4.513554096221924
    3. '                   ' → logprob: -7.013554096221924
    4. 'n' → logprob: -7.638554096221924
    5. '```' → logprob: -7.763554096221924
    6. '   ' → logprob: -8.763553619384766
    7. '
' → logprob: -8.888553619384766
    8. ' def' → logprob: -9.263553619384766
    9. '           ' → logprob: -9.388553619384766
    10. '``' → logprob: -9.513553619384766

Token 1897: ' determinant' (ID: 174922)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0024178687017410994
    2. 'det' → logprob: -6.252418041229248
    3. 'mat' → logprob: -7.877418041229248
    4. '_mod' → logprob: -9.25241756439209
    5. 'lu' → logprob: -12.00241756439209
    6. 'mul' → logprob: -12.50241756439209
    7. ' mod' → logprob: -13.37741756439209
    8. 'matrix' → logprob: -14.00241756439209
    9. 'pow' → logprob: -14.37741756439209
    10. 'calc' → logprob: -14.62741756439209

Token 1898: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -0.9997955560684204
    2. '(mat' → logprob: -1.3747955560684204
    3. '(matrix' → logprob: -1.9997955560684204
    4. '(M' → logprob: -2.499795436859131
    5. '_(' → logprob: -2.624795436859131
    6. '(L' → logprob: -3.749795436859131
    7. '(A' → logprob: -3.874795436859131
    8. '_' → logprob: -4.124795436859131
    9. '(' → logprob: -4.749795436859131
    10. '(a' → logprob: -5.249795436859131

Token 1899: '(mat' (ID: 83002)
  Prédit: '(mat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mat' → logprob: -0.0607905276119709
    2. '(A' → logprob: -3.310790538787842
    3. '(matrix' → logprob: -4.060790538787842
    4. '(a' → logprob: -6.060790538787842
    5. '(L' → logprob: -6.810790538787842
    6. '(M' → logprob: -6.810790538787842
    7. '(m' → logprob: -8.060790061950684
    8. '(n' → logprob: -8.310790061950684
    9. '(' → logprob: -9.810790061950684
    10. '(arr' → logprob: -9.935790061950684

Token 1900: ',' (ID: 11)
  Prédit: '(mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mat' → logprob: -0.03306621313095093
    2. '(matrix' → logprob: -3.7830662727355957
    3. '):' → logprob: -5.033066272735596
    4. ',' → logprob: -6.158066272735596
    5. '(n' → logprob: -7.908066272735596
    6. '):
' → logprob: -8.533065795898438
    7. ')' → logprob: -8.783065795898438
    8. '(m' → logprob: -8.783065795898438
    9. '(Mat' → logprob: -9.783065795898438
    10. '(M' → logprob: -10.283065795898438

Token 1901: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.03052569180727005
    2. 'MOD' → logprob: -3.5305256843566895
    3. ' mod' → logprob: -8.155526161193848
    4. 'n' → logprob: -8.655526161193848
    5. 'p' → logprob: -8.655526161193848
    6. ' MOD' → logprob: -9.530526161193848
    7. 'm' → logprob: -9.780526161193848
    8. ' modulus' → logprob: -12.905526161193848
    9. 'mat' → logprob: -13.405526161193848
    10. '       ' → logprob: -13.905526161193848

Token 1902: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3486585319042206
    2. '):
' → logprob: -1.223658561706543
    3. ')' → logprob: -9.348658561706543
    4. ',' → logprob: -9.723658561706543
    5. '   ' → logprob: -10.848658561706543
    6. '):
' → logprob: -11.473658561706543
    7. '(mat' → logprob: -11.473658561706543
    8. ':' → logprob: -11.598658561706543
    9. '):

' → logprob: -12.973658561706543
    10. '(token' → logprob: -13.098658561706543

Token 1903: '                   ' (ID: 699)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.201602816581726
    2. '   ' → logprob: -1.576602816581726
    3. ' 
' → logprob: -1.701602816581726
    4. '```' → logprob: -2.3266029357910156
    5. '       ' → logprob: -3.5766029357910156
    6. '\' → logprob: -3.7016029357910156
    7. '\n' → logprob: -3.8266029357910156
    8. '    
' → logprob: -3.9516029357910156
    9. ' def' → logprob: -3.9516029357910156
    10. ' (' → logprob: -4.201602935791016

Token 1904: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.016000932082533836
    2. ' n' → logprob: -4.641000747680664
    3. 'def' → logprob: -5.391000747680664
    4. '                   ' → logprob: -7.141000747680664
    5. '```' → logprob: -8.016000747680664
    6. '       ' → logprob: -8.516000747680664
    7. '   ' → logprob: -8.516000747680664
    8. 'size' → logprob: -10.266000747680664
    9. '                       ' → logprob: -10.766000747680664
    10. '(n' → logprob: -10.891000747680664

Token 1905: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05003528669476509
    2. ' =' → logprob: -3.050035238265991
    3. 'def' → logprob: -8.17503547668457
    4. ',' → logprob: -8.30003547668457
    5. '=int' → logprob: -8.30003547668457
    6. ')' → logprob: -8.42503547668457
    7. '=len' → logprob: -8.92503547668457
    8. '=
' → logprob: -9.05003547668457
    9. '```' → logprob: -10.55003547668457
    10. '   ' → logprob: -10.67503547668457

Token 1906: ' mat' (ID: 2450)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.12719833850860596
    2. 'mat' → logprob: -2.1271982192993164
    3. ' len' → logprob: -8.752198219299316
    4. ' mat' → logprob: -9.127198219299316
    5. '(len' → logprob: -13.502198219299316
    6. '(mat' → logprob: -14.502198219299316
    7. '[len' → logprob: -14.627198219299316
    8. '```' → logprob: -15.002198219299316
    9. '   ' → logprob: -15.377198219299316
    10. 'matrix' → logprob: -15.752198219299316

Token 1907: '.shape' (ID: 14833)
  Prédit: '.shape'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.shape' → logprob: -0.0903724730014801
    2. '[' → logprob: -2.8403725624084473
    3. '[n' → logprob: -4.465372562408447
    4. '.' → logprob: -5.840372562408447
    5. '   ' → logprob: -6.215372562408447
    6. '[token' → logprob: -6.590372562408447
    7. '[i' → logprob: -6.715372562408447
    8. '=' → logprob: -6.715372562408447
    9. '.size' → logprob: -6.840372562408447
    10. ' =' → logprob: -7.215372562408447

Token 1908: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00030900631099939346
    2. '0' → logprob: -8.250308990478516
    3. '[
' → logprob: -10.375308990478516
    4. '```' → logprob: -12.125308990478516
    5. '   ' → logprob: -13.500308990478516
    6. 'n' → logprob: -13.500308990478516
    7. ',' → logprob: -13.875308990478516
    8. '[n' → logprob: -14.000308990478516
    9. '`' → logprob: -14.000308990478516
    10. '1' → logprob: -14.125308990478516

Token 1909: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.180258191714529e-06
    2. '[' → logprob: -11.750008583068848
    3. '(' → logprob: -15.375008583068848
    4. '1' → logprob: -16.87500762939453
    5. '-' → logprob: -18.50000762939453
    6. '```' → logprob: -18.62500762939453
    7. '
' → logprob: -19.75000762939453
    8. '   ' → logprob: -19.87500762939453
    9. '=' → logprob: -20.00000762939453
    10. '۰' → logprob: -20.37500762939453

Token 1910: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.44996657967567444
    2. '                   ' → logprob: -1.449966549873352
    3. '<|end|>' → logprob: -2.9499666690826416
    4. '                       ' → logprob: -3.8249666690826416
    5. ':' → logprob: -4.8249664306640625
    6. '):
' → logprob: -4.9499664306640625
    7. '[' → logprob: -5.1999664306640625
    8. '<|end|>' → logprob: -5.3249664306640625
    9. '
' → logprob: -5.6999664306640625
    10. 'def' → logprob: -6.0749664306640625

Token 1911: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7580463290214539
    2. '   ' → logprob: -1.6330463886260986
    3. 'd' → logprob: -2.1330463886260986
    4. '       ' → logprob: -3.1330463886260986
    5. '                       ' → logprob: -3.1330463886260986
    6. 'i' → logprob: -3.7580463886260986
    7. '```' → logprob: -3.7580463886260986
    8. '
' → logprob: -4.0080461502075195
    9. 'def' → logprob: -4.3830461502075195
    10. ' 
' → logprob: -4.5080461502075195

Token 1912: ' mat' (ID: 2450)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.22508858144283295
    2. 'det' → logprob: -1.9750885963439941
    3. 'result' → logprob: -3.100088596343994
    4. 'd' → logprob: -5.100088596343994
    5. 'ans' → logprob: -5.350088596343994
    6. 'def' → logprob: -5.725088596343994
    7. '```' → logprob: -6.725088596343994
    8. ' res' → logprob: -6.850088596343994
    9. ' det' → logprob: -8.225088119506836
    10. 'i' → logprob: -8.225088119506836

Token 1913: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6743279695510864
    2. ' =' → logprob: -0.9243279695510864
    3. '[' → logprob: -3.049327850341797
    4. '[i' → logprob: -4.674327850341797
    5. '.copy' → logprob: -5.174327850341797
    6. '[
' → logprob: -5.174327850341797
    7. '=np' → logprob: -5.174327850341797
    8. '<|end|>' → logprob: -5.674327850341797
    9. 'def' → logprob: -6.424327850341797
    10. 'import' → logprob: -6.799327850341797

Token 1914: ' mat' (ID: 2450)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mat' → logprob: -1.9623810658231378e-05
    2. 'np' → logprob: -11.000020027160645
    3. ' mat' → logprob: -12.875020027160645
    4. '(mat' → logprob: -15.375020027160645
    5. '	mat' → logprob: -16.250019073486328
    6. '   ' → logprob: -18.125019073486328
    7. '[' → logprob: -18.625019073486328
    8. 'mod' → logprob: -19.625019073486328
    9. 'Mat' → logprob: -19.875019073486328
    10. '[np' → logprob: -20.375019073486328

Token 1915: '.copy' (ID: 22925)
  Prédit: '.copy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.copy' → logprob: -0.0007491135620512068
    2. '.astype' → logprob: -7.250749111175537
    3. '%' → logprob: -10.875749588012695
    4. '.' → logprob: -11.500749588012695
    5. 'copy' → logprob: -13.250749588012695
    6. '.mod' → logprob: -13.750749588012695
    7. '.tolist' → logprob: -13.750749588012695
    8. '.Copy' → logprob: -14.125749588012695
    9. '.mat' → logprob: -14.375749588012695
    10. '%.' → logprob: -14.375749588012695

Token 1916: '()
' (ID: 1234)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1917: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0958666056394577
    2. '       ' → logprob: -3.4708666801452637
    3. ' for' → logprob: -4.220866680145264
    4. '   ' → logprob: -4.595866680145264
    5. '
' → logprob: -4.970866680145264
    6. 'for' → logprob: -5.095866680145264
    7. '               ' → logprob: -5.720866680145264
    8. '           ' → logprob: -5.720866680145264
    9. '                    
' → logprob: -5.720866680145264
    10. '```' → logprob: -5.970866680145264

Token 1918: ' res' (ID: 694)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005586379673331976
    2. 'i' → logprob: -6.25558614730835
    3. '   ' → logprob: -6.38058614730835
    4. ' for' → logprob: -6.75558614730835
    5. '                   ' → logprob: -8.255586624145508
    6. '       ' → logprob: -8.880586624145508
    7. 'res' (adapté à ' res') → logprob: -9.130586624145508
    8. 'ans' → logprob: -9.130586624145508
    9. 'det' → logprob: -10.005586624145508
    10. '```' → logprob: -10.505586624145508

Token 1919: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7484806776046753
    2. ' =' → logprob: -0.7484806776046753
    3. '[' → logprob: -3.748480796813965
    4. '<|end|>' → logprob: -3.998480796813965
    5. 'def' → logprob: -6.123480796813965
    6. '[
' → logprob: -6.123480796813965
    7. '   ' → logprob: -6.373480796813965
    8. '*' → logprob: -6.748480796813965
    9. ' *=' → logprob: -7.123480796813965
    10. '#' → logprob: -7.623480796813965

Token 1920: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.125
    3. '                   ' → logprob: -15.875
    4. '   ' → logprob: -20.25
    5. '```' → logprob: -20.5
    6. '                       ' → logprob: -20.625
    7. '۱' → logprob: -21.625
    8. '(' → logprob: -21.875
    9. '                                           ' → logprob: -22.0
    10. '=' → logprob: -22.125

Token 1921: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -20.375
    3. '```' → logprob: -22.0
    4. '   ' → logprob: -22.625
    5. 'int' → logprob: -23.125
    6. '
' → logprob: -23.75
    7. '１' → logprob: -24.125
    8. '۱' → logprob: -24.5
    9. '=' → logprob: -24.625
    10. '``' → logprob: -25.0

Token 1922: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.019718319177627563
    2. '<|end|>' → logprob: -5.269718170166016
    3. '               ' → logprob: -5.644718170166016
    4. '       ' → logprob: -5.769718170166016
    5. '
' → logprob: -5.894718170166016
    6. '           ' → logprob: -6.144718170166016
    7. '				' → logprob: -7.644718170166016
    8. '                    
' → logprob: -7.894718170166016
    9. '   ' → logprob: -8.019718170166016
    10. '                       ' → logprob: -8.394718170166016

Token 1923: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.13853934407234192
    2. 'for' → logprob: -2.1385393142700195
    3. ' for' → logprob: -4.6385393142700195
    4. '   ' → logprob: -7.6385393142700195
    5. '				' → logprob: -8.26353931427002
    6. '           ' → logprob: -8.51353931427002
    7. '	for' → logprob: -9.01353931427002
    8. '\' → logprob: -9.13853931427002
    9. '                    
' → logprob: -9.51353931427002
    10. '		           ' → logprob: -9.51353931427002

Token 1924: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0024385512806475163
    2. '                   ' → logprob: -6.627438545227051
    3. 'i' → logprob: -7.252438545227051
    4. ' for' → logprob: -8.50243854522705
    5. '   ' → logprob: -8.62743854522705
    6. '           ' → logprob: -11.50243854522705
    7. '	for' → logprob: -12.12743854522705
    8. '               ' → logprob: -13.00243854522705
    9. '       ' → logprob: -13.25243854522705
    10. 'j' → logprob: -14.37743854522705

Token 1925: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0015052208909764886
    2. 'k' → logprob: -6.501505374908447
    3. ' i' → logprob: -12.876504898071289
    4. 'j' → logprob: -16.25150489807129
    5. '	i' → logprob: -16.75150489807129
    6. '0' → logprob: -17.12650489807129
    7. '```' → logprob: -17.12650489807129
    8. 'f' → logprob: -18.37650489807129
    9. '   ' → logprob: -18.50150489807129
    10. 'p' → logprob: -18.87650489807129

Token 1926: '_' (ID: 62)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11515004932880402
    2. 'in' → logprob: -2.365149974822998
    3. '   ' → logprob: -5.615149974822998
    4. '=' → logprob: -5.740149974822998
    5. ',' → logprob: -6.115149974822998
    6. '                   ' → logprob: -7.365149974822998
    7. '    ' → logprob: -7.365149974822998
    8. ':' → logprob: -7.615149974822998
    9. ' ' → logprob: -7.740149974822998
    10. ' :' → logprob: -7.740149974822998

Token 1927: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016961153596639633
    2. 'in' → logprob: -4.141961097717285
    3. '=' → logprob: -8.016961097717285
    4. ',' → logprob: -8.391961097717285
    5. '_' → logprob: -9.641961097717285
    6. ':' → logprob: -9.891961097717285
    7. '   ' → logprob: -10.016961097717285
    8. '<|end|>' → logprob: -10.391961097717285
    9. '[' → logprob: -10.891961097717285
    10. ' =' → logprob: -11.016961097717285

Token 1928: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.003644495503976941
    2. ' range' → logprob: -6.2536444664001465
    3. 'i' → logprob: -6.3786444664001465
    4. '(range' → logprob: -11.628644943237305
    5. '0' → logprob: -12.503644943237305
    6. 'n' → logprob: -13.753644943237305
    7. '	range' → logprob: -13.753644943237305
    8. '   ' → logprob: -14.378644943237305
    9. ' i' → logprob: -14.503644943237305
    10. 'in' → logprob: -14.628644943237305

Token 1929: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.16324280202388763
    2. 'i' → logprob: -1.9132428169250488
    3. '                   ' → logprob: -6.413242816925049
    4. '(n' → logprob: -7.663242816925049
    5. ' n' → logprob: -7.663242816925049
    6. ' i' → logprob: -8.16324234008789
    7. '0' → logprob: -9.41324234008789
    8. '(i' → logprob: -11.03824234008789
    9. '   ' → logprob: -11.78824234008789
    10. '                       ' → logprob: -12.28824234008789

Token 1930: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5467832684516907
    2. ':
' → logprob: -1.671783208847046
    3. '):
' → logprob: -2.546783208847046
    4. '                       ' → logprob: -2.921783208847046
    5. '                   ' → logprob: -3.546783208847046
    6. '       ' → logprob: -3.671783208847046
    7. '):' → logprob: -5.046783447265625
    8. '+' → logprob: -5.171783447265625
    9. ' :
' → logprob: -5.296783447265625
    10. ' :' → logprob: -5.296783447265625

Token 1931: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.03000432811677456
    2. '                   ' → logprob: -4.405004501342773
    3. '```' → logprob: -5.405004501342773
    4. '<|end|>' → logprob: -6.155004501342773
    5. ' ' → logprob: -6.405004501342773
    6. '                    ' → logprob: -6.530004501342773
    7. '                        ' → logprob: -6.655004501342773
    8. '                        
' → logprob: -6.905004501342773
    9. '                           ' → logprob: -7.155004501342773
    10. '               ' → logprob: -7.280004501342773

Token 1932: ' pivot' (ID: 44506)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.48208630084991455
    2. 'pivot' (adapté à ' pivot') → logprob: -1.8570863008499146
    3. 'j' → logprob: -2.232086181640625
    4. 'if' → logprob: -2.607086181640625
    5. '```' → logprob: -3.607086181640625
    6. '                       ' → logprob: -5.232086181640625
    7. '#' → logprob: -5.607086181640625
    8. 'row' → logprob: -6.357086181640625
    9. 'tmp' → logprob: -6.482086181640625
    10. 'k' → logprob: -6.607086181640625

Token 1933: ' =' (ID: 314)
  Prédit: '=i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=i' → logprob: -0.7354359030723572
    2. '=' → logprob: -1.360435962677002
    3. ' =' → logprob: -1.360435962677002
    4. '=j' → logprob: -6.360435962677002
    5. '=index' → logprob: -6.485435962677002
    6. 'i' → logprob: -7.485435962677002
    7. '_index' → logprob: -7.735435962677002
    8. ',' → logprob: -7.860435962677002
    9. '_idx' → logprob: -7.985435962677002
    10. '=None' → logprob: -7.985435962677002

Token 1934: ' -' (ID: 533)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -6.384836888173595e-05
    2. '-' → logprob: -9.8750638961792
    3. '0' → logprob: -12.0000638961792
    4. 'None' → logprob: -12.6250638961792
    5. ' i' → logprob: -13.2500638961792
    6. '-i' → logprob: -14.3750638961792
    7. 'next' → logprob: -16.250062942504883
    8. ' -' → logprob: -16.375062942504883
    9. '
' → logprob: -17.000062942504883
    10. 'mat' → logprob: -17.125062942504883

Token 1935: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04889845848083496
    2. 'i' → logprob: -3.048898458480835
    3. '-' → logprob: -8.923898696899414
    4. '(-' → logprob: -10.423898696899414
    5. '(i' → logprob: -10.423898696899414
    6. ' i' → logprob: -11.048898696899414
    7. '<|end|>' → logprob: -11.048898696899414
    8. '-i' → logprob: -11.173898696899414
    9. ' -' → logprob: -11.173898696899414
    10. '(' → logprob: -11.548898696899414

Token 1936: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3833826780319214
    2. '<|end|>' → logprob: -2.258382797241211
    3. 'for' → logprob: -2.508382797241211
    4. '                       ' → logprob: -2.758382797241211
    5. 'i' → logprob: -4.508382797241211
    6. '```' → logprob: -4.633382797241211
    7. ' i' → logprob: -5.258382797241211
    8. ')' → logprob: -5.258382797241211
    9. '                   ' → logprob: -5.383382797241211
    10. '=' → logprob: -5.383382797241211

Token 1937: '                       ' (ID: 968)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23658068478107452
    2. ' for' → logprob: -1.736580729484558
    3. '                   ' → logprob: -3.9865806102752686
    4. '0' → logprob: -5.236580848693848
    5. '                       ' → logprob: -5.236580848693848
    6. 'i' → logprob: -6.111580848693848
    7. '```' → logprob: -6.986580848693848
    8. '1' → logprob: -7.861580848693848
    9. '
' → logprob: -7.986580848693848
    10. '<|end|>' → logprob: -8.236580848693848

Token 1938: ' for' (ID: 395)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.17287933826446533
    2. 'for' (adapté à ' for') → logprob: -2.172879219055176
    3. ' for' → logprob: -3.422879219055176
    4. ' i' → logprob: -4.422879219055176
    5. '```' → logprob: -9.047879219055176
    6. '<|end|>' → logprob: -10.047879219055176
    7. '                       ' → logprob: -10.547879219055176
    8. '	i' → logprob: -11.297879219055176
    9. 'range' → logprob: -11.672879219055176
    10. '  ' → logprob: -11.797879219055176

Token 1939: ' r' (ID: 428)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.004403651691973209
    2. 'k' → logprob: -6.504403591156006
    3. ' j' → logprob: -6.629403591156006
    4. 'i' → logprob: -7.629403591156006
    5. 'range' → logprob: -7.629403591156006
    6. 't' → logprob: -7.754403591156006
    7. 'r' → logprob: -9.379404067993164
    8. 'idx' → logprob: -10.504404067993164
    9. 'x' → logprob: -11.254404067993164
    10. 'jj' → logprob: -11.379404067993164

Token 1940: '_' (ID: 62)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.017609544098377228
    2. 'in' → logprob: -4.142609596252441
    3. ' i' → logprob: -7.267609596252441
    4. 'i' → logprob: -7.892609596252441
    5. '=' → logprob: -9.392609596252441
    6. '                       ' → logprob: -9.892609596252441
    7. '	                   ' → logprob: -10.017609596252441
    8. 'r' → logprob: -10.142609596252441
    9. ' r' → logprob: -10.267609596252441
    10. '                           ' → logprob: -10.392609596252441

Token 1941: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3940489888191223
    2. 'in' → logprob: -1.1440489292144775
    3. 'i' → logprob: -5.144049167633057
    4. 'r' → logprob: -6.769049167633057
    5. ' i' → logprob: -9.144048690795898
    6. '```' → logprob: -11.144048690795898
    7. '                       ' → logprob: -11.519048690795898
    8. ' r' → logprob: -11.894048690795898
    9. 'range' → logprob: -12.144048690795898
    10. '                           ' → logprob: -12.269048690795898

Token 1942: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0006334475474432111
    2. ' range' → logprob: -7.375633239746094
    3. 'i' → logprob: -12.000633239746094
    4. 'r' → logprob: -14.875633239746094
    5. '	range' → logprob: -15.750633239746094
    6. '(range' → logprob: -16.000633239746094
    7. '`' → logprob: -16.500633239746094
    8. '   ' → logprob: -17.000633239746094
    9. '
' → logprob: -17.375633239746094
    10. '```' → logprob: -18.375633239746094

Token 1943: '(i' (ID: 3649)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0683535037969705e-05
    2. ' i' → logprob: -12.00001049041748
    3. '                       ' → logprob: -12.75001049041748
    4. '                   ' → logprob: -14.87501049041748
    5. '                           ' → logprob: -15.00001049041748
    6. ',' → logprob: -15.62501049041748
    7. '	i' → logprob: -15.75001049041748
    8. 'r' → logprob: -16.125011444091797
    9. '{i' → logprob: -16.375011444091797
    10. '                               ' → logprob: -16.750011444091797

Token 1944: '_,' (ID: 14152)
  Prédit: '_,'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_,' → logprob: -0.8761683106422424
    2. ',' → logprob: -1.1261682510375977
    3. '_' → logprob: -1.3761682510375977
    4. '_,
' → logprob: -5.626168251037598
    5. '                       ' → logprob: -7.001168251037598
    6. ',
' → logprob: -7.751168251037598
    7. 'n' → logprob: -7.751168251037598
    8. '_
' → logprob: -8.126168251037598
    9. ',_' → logprob: -8.626168251037598
    10. '                   ' → logprob: -8.626168251037598

Token 1945: ' n' (ID: 297)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.4129890203475952
    2. 'n' → logprob: -1.1629890203475952
    3. 'i' → logprob: -3.6629891395568848
    4. '                           ' → logprob: -10.537988662719727
    5. '                       ' → logprob: -10.537988662719727
    6. ' r' → logprob: -11.412988662719727
    7. '                                           ' → logprob: -11.537988662719727
    8. '```' → logprob: -11.537988662719727
    9. '                               ' → logprob: -11.912988662719727
    10. ')' → logprob: -12.787988662719727

Token 1946: '):
' (ID: 1883)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.2584855556488037
    2. '):
' → logprob: -2.2584855556488037
    3. ':
' → logprob: -3.1334855556488037
    4. ',' → logprob: -3.7584855556488037
    5. '                       ' → logprob: -3.7584855556488037
    6. '+' → logprob: -4.508485794067383
    7. '                               ' → logprob: -4.758485794067383
    8. '```' → logprob: -5.258485794067383
    9. ':' → logprob: -5.758485794067383
    10. '=' → logprob: -6.883485794067383

Token 1947: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.019701965153217316
    2. '                       ' → logprob: -4.644701957702637
    3. ' if' → logprob: -6.144701957702637
    4. '                               ' → logprob: -6.144701957702637
    5. ':
' → logprob: -6.394701957702637
    6. ' :' → logprob: -6.519701957702637
    7. ':' → logprob: -6.894701957702637
    8. ' =' → logprob: -8.894701957702637
    9. '                            ' → logprob: -8.894701957702637
    10. '                   ' → logprob: -9.144701957702637

Token 1948: ' if' (ID: 538)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.4822109341621399
    2. 'if' (adapté à ' if') → logprob: -1.6072108745574951
    3. ' if' → logprob: -2.232210874557495
    4. ' r' → logprob: -2.982210874557495
    5. '                           ' → logprob: -3.982210874557495
    6. '                               ' → logprob: -6.232211112976074
    7. '```' → logprob: -6.357211112976074
    8. '                       ' → logprob: -6.607211112976074
    9. 'i' → logprob: -9.607211112976074
    10. ' ' → logprob: -9.607211112976074

Token 1949: ' mat' (ID: 2450)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mat' → logprob: -1.27099974633893e-05
    2. ' mat' → logprob: -11.500012397766113
    3. 'abs' → logprob: -13.250012397766113
    4. '(mat' → logprob: -14.750012397766113
    5. '                   ' → logprob: -15.250012397766113
    6. '                           ' → logprob: -16.25001335144043
    7. '                       ' → logprob: -17.37501335144043
    8. '           ' → logprob: -17.62501335144043
    9. '	mat' → logprob: -17.87501335144043
    10. 'np' → logprob: -19.25001335144043

Token 1950: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -1.8908587662735954e-05
    2. '[' → logprob: -11.875019073486328
    3. '[i' → logprob: -12.125019073486328
    4. 'r' → logprob: -12.250019073486328
    5. '[
' → logprob: -14.250019073486328
    6. '(r' → logprob: -15.000019073486328
    7. '[row' → logprob: -15.125019073486328
    8. '```' → logprob: -15.250019073486328
    9. '[t' → logprob: -16.250019073486328
    10. ' r' → logprob: -17.375019073486328

Token 1951: '_,' (ID: 14152)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.9868161678314209
    2. '_' → logprob: -1.236816167831421
    3. '][' → logprob: -1.486816167831421
    4. '[r' → logprob: -3.486816167831421
    5. '[i' → logprob: -4.11181640625
    6. 'i' → logprob: -4.23681640625
    7. '_r' → logprob: -4.36181640625
    8. '_,' → logprob: -4.48681640625
    9. '[' → logprob: -5.23681640625
    10. '```' → logprob: -5.23681640625

Token 1952: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1756367712223437e-05
    2. ' i' → logprob: -11.500011444091797
    3. '                           ' → logprob: -14.625011444091797
    4. '
' → logprob: -14.750011444091797
    5. '                               ' → logprob: -15.375011444091797
    6. '   ' → logprob: -15.500011444091797
    7. '[i' → logprob: -16.375011444091797
    8. '                                   ' → logprob: -16.625011444091797
    9. '                       ' → logprob: -16.875011444091797
    10. '                   ' → logprob: -16.875011444091797

Token 1953: '_]' (ID: 163385)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1954: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6930920481681824
    2. ' !=' → logprob: -1.0680921077728271
    3. ' %' → logprob: -3.068092107772827
    4. ']' → logprob: -3.318092107772827
    5. '!=' → logprob: -3.318092107772827
    6. '                           ' → logprob: -4.318091869354248
    7. '%x' → logprob: -4.943091869354248
    8. '                       ' → logprob: -5.693091869354248
    9. '                               ' → logprob: -6.068091869354248
    10. '%i' → logprob: -6.193091869354248

Token 1955: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -7.636475493200123e-05
    2. 'MOD' → logprob: -9.500076293945312
    3. ' mod' → logprob: -13.500076293945312
    4. '(mod' → logprob: -17.125076293945312
    5. '0' → logprob: -17.375076293945312
    6. 'mat' → logprob: -18.125076293945312
    7. '```' → logprob: -18.375076293945312
    8. '	mod' → logprob: -19.000076293945312
    9. ' MOD' → logprob: -19.625076293945312
    10. '_mod' → logprob: -19.750076293945312

Token 1956: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.1820659190416336
    2. ' !=' → logprob: -1.8070659637451172
    3. '==' → logprob: -6.557065963745117
    4. '                       ' → logprob: -8.557065963745117
    5. '                           ' → logprob: -8.932065963745117
    6. ':' → logprob: -8.932065963745117
    7. '```' → logprob: -8.932065963745117
    8. '                   ' → logprob: -9.682065963745117
    9. ':
' → logprob: -9.932065963745117
    10. '                               ' → logprob: -10.057065963745117

Token 1957: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '                           ' → logprob: -17.000009536743164
    4. '                       ' → logprob: -18.125009536743164
    5. '                               ' → logprob: -20.250009536743164
    6. '
' → logprob: -20.625009536743164
    7. '  ' → logprob: -20.625009536743164
    8. '```' → logprob: -20.750009536743164
    9. '                            ' → logprob: -21.500009536743164
    10. '                                           ' → logprob: -21.500009536743164

Token 1958: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '
' → logprob: -22.625
    4. '۰' → logprob: -23.25
    5. '```' → logprob: -23.5
    6. '  ' → logprob: -23.875
    7. '٠' → logprob: -24.625
    8. 'r' → logprob: -24.875
    9. '০' → logprob: -25.25
    10. '०' → logprob: -25.3125

Token 1959: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.48668211698532104
    2. ':
' → logprob: -0.986682116985321
    3. '                           ' → logprob: -4.611681938171387
    4. '                               ' → logprob: -6.486681938171387
    5. '                       ' → logprob: -7.486681938171387
    6. ':return' → logprob: -9.361681938171387
    7. ' and' → logprob: -9.486681938171387
    8. ' :' → logprob: -9.986681938171387
    9. '```' → logprob: -10.111681938171387
    10. '):
' → logprob: -10.236681938171387

Token 1960: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.6930674314498901
    2. '                           ' → logprob: -1.3180674314498901
    3. ':' → logprob: -2.0680675506591797
    4. ':
' → logprob: -2.4430675506591797
    5. '                       ' → logprob: -4.94306755065918
    6. '```' → logprob: -5.31806755065918
    7. ' :' → logprob: -5.94306755065918
    8. ' and' → logprob: -7.56806755065918
    9. '                             ' → logprob: -7.69306755065918
    10. '):
' → logprob: -7.69306755065918

Token 1961: ' pivot' (ID: 44506)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7561622262001038
    2. '                               ' → logprob: -0.8811622262001038
    3. '                           ' → logprob: -2.381162166595459
    4. '                       ' → logprob: -4.631162166595459
    5. ' r' → logprob: -5.131162166595459
    6. '```' → logprob: -6.131162166595459
    7. '                                   ' → logprob: -6.881162166595459
    8. 'return' → logprob: -7.256162166595459
    9. 'i' → logprob: -7.506162166595459
    10. '               ' → logprob: -7.631162166595459

Token 1962: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00998438149690628
    2. ' =' → logprob: -4.634984493255615
    3. '=r' → logprob: -9.259984016418457
    4. '=i' → logprob: -9.384984016418457
    5. '=
' → logprob: -10.759984016418457
    6. '=int' → logprob: -12.259984016418457
    7. '=p' → logprob: -12.384984016418457
    8. '<|end|>' → logprob: -12.384984016418457
    9. '=n' → logprob: -12.759984016418457
    10. '=user' → logprob: -13.384984016418457

Token 1963: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -4.320199877838604e-07
    2. ' r' → logprob: -14.75
    3. '_r' → logprob: -18.625
    4. '	r' → logprob: -19.75
    5. '                           ' → logprob: -20.0
    6. '                               ' → logprob: -20.5
    7. '$r' → logprob: -20.625
    8. '                       ' → logprob: -21.625
    9. '                                   ' → logprob: -22.375
    10. '*r' → logprob: -22.75

Token 1964: '_
' (ID: 27437)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.010147597640752792
    2. '_r' → logprob: -5.635147571563721
    3. 'i' → logprob: -5.760147571563721
    4. '_' → logprob: -6.385147571563721
    5. ' r' → logprob: -7.510147571563721
    6. '```' → logprob: -7.885147571563721
    7. '                               ' → logprob: -8.885148048400879
    8. '+' → logprob: -9.010148048400879
    9. '                           ' → logprob: -9.010148048400879
    10. '[r' → logprob: -9.760148048400879

Token 1965: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.056012120097875595
    2. '                           ' → logprob: -3.4310121536254883
    3. '<|end|>' → logprob: -4.806012153625488
    4. '                       ' → logprob: -5.306012153625488
    5. '```' → logprob: -6.181012153625488
    6. '                                   ' → logprob: -6.181012153625488
    7. ':
' → logprob: -6.556012153625488
    8. ':' → logprob: -7.556012153625488
    9. '                   ' → logprob: -7.556012153625488
    10. '               ' → logprob: -7.681012153625488

Token 1966: ' break' (ID: 2338)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.6645283102989197
    2. 'break' (adapté à ' break') → logprob: -1.2895283699035645
    3. '                           ' → logprob: -1.9145283699035645
    4. ' break' → logprob: -3.9145283699035645
    5. 'r' → logprob: -5.5395283699035645
    6. 'if' → logprob: -5.5395283699035645
    7. '                       ' → logprob: -5.5395283699035645
    8. '
' → logprob: -5.6645283699035645
    9. '#' → logprob: -5.6645283699035645
    10. 'mat' → logprob: -5.9145283699035645

Token 1967: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.6897602081298828
    2. '                           ' → logprob: -1.0647602081298828
    3. ':
' → logprob: -3.314760208129883
    4. '                               ' → logprob: -3.314760208129883
    5. '<|end|>' → logprob: -3.439760208129883
    6. '                   ' → logprob: -3.814760208129883
    7. ':' → logprob: -5.439760208129883
    8. '                        
' → logprob: -5.564760208129883
    9. '               ' → logprob: -5.564760208129883
    10. '```' → logprob: -5.814760208129883

Token 1968: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.12781275808811188
    2. '                           ' → logprob: -2.7528128623962402
    3. '<|end|>' → logprob: -3.6278128623962402
    4. '                   ' → logprob: -4.00281286239624
    5. '               ' → logprob: -6.00281286239624
    6. '```' → logprob: -6.50281286239624
    7. '                               ' → logprob: -6.50281286239624
    8. '                        
' → logprob: -6.75281286239624
    9. '           ' → logprob: -7.12781286239624
    10. '<|end|>' → logprob: -7.87781286239624

Token 1969: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.08741208910942078
    2. '                       ' → logprob: -3.337412118911743
    3. '                   ' → logprob: -3.712412118911743
    4. ' if' → logprob: -3.837412118911743
    5. '                           ' → logprob: -6.712411880493164
    6. '               ' → logprob: -8.212411880493164
    7. '           ' → logprob: -8.587411880493164
    8. '```' → logprob: -8.712411880493164
    9. 'for' → logprob: -9.087411880493164
    10. '       ' → logprob: -10.337411880493164

Token 1970: ' pivot' (ID: 44506)
  Prédit: 'pivot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pivot' → logprob: -0.11807702481746674
    2. 'i' → logprob: -2.243077039718628
    3. ' pivot' → logprob: -5.493076801300049
    4. '                           ' → logprob: -7.868076801300049
    5. ' i' → logprob: -8.243077278137207
    6. '                       ' → logprob: -8.368077278137207
    7. 'r' → logprob: -9.243077278137207
    8. '-' → logprob: -10.118077278137207
    9. '                   ' → logprob: -10.243077278137207
    10. ' -' → logprob: -11.118077278137207

Token 1971: ' ==' (ID: 951)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.028264092281460762
    2. '==' → logprob: -4.778264045715332
    3. '!=' → logprob: -4.903264045715332
    4. ' =' → logprob: -5.278264045715332
    5. ' ==' → logprob: -6.403264045715332
    6. '                           ' → logprob: -6.528264045715332
    7. ' !=' → logprob: -6.653264045715332
    8. '=i' → logprob: -6.778264045715332
    9. '<|end|>' → logprob: -7.528264045715332
    10. ',' → logprob: -8.278264045715332

Token 1972: ' -' (ID: 533)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.939851037808694e-05
    2. ' i' → logprob: -10.500029563903809
    3. '                           ' → logprob: -14.875029563903809
    4. 'r' → logprob: -15.250029563903809
    5. '-' → logprob: -15.500029563903809
    6. '   ' → logprob: -15.500029563903809
    7. '                   ' → logprob: -15.750029563903809
    8. '	i' → logprob: -16.375028610229492
    9. '
' → logprob: -16.875028610229492
    10. '                                           ' → logprob: -17.125028610229492

Token 1973: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. 'i' → logprob: -14.250000953674316
    3. ' ' → logprob: -15.000000953674316
    4. '```' → logprob: -16.750001907348633
    5. ',' → logprob: -17.750001907348633
    6. ' i' → logprob: -17.875001907348633
    7. '   ' → logprob: -18.000001907348633
    8. '(i' → logprob: -19.500001907348633
    9. '-' → logprob: -19.750001907348633
    10. '
' → logprob: -20.000001907348633

Token 1974: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.8144001364707947
    2. '                           ' → logprob: -0.8144001364707947
    3. ':' → logprob: -2.8144001960754395
    4. '                       ' → logprob: -3.0644001960754395
    5. '<|end|>' → logprob: -6.1894001960754395
    6. '                   ' → logprob: -6.3144001960754395
    7. '                               ' → logprob: -6.5644001960754395
    8. '[' → logprob: -7.8144001960754395
    9. '):
' → logprob: -8.189399719238281
    10. '```' → logprob: -8.439399719238281

Token 1975: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.6338647603988647
    2. '                       ' → logprob: -0.8838647603988647
    3. '                   ' → logprob: -4.133864879608154
    4. '                               ' → logprob: -4.508864879608154
    5. ' ' → logprob: -4.633864879608154
    6. '                        
' → logprob: -5.133864879608154
    7. '<|end|>' → logprob: -6.133864879608154
    8. '#' → logprob: -6.383864879608154
    9. '                        ' → logprob: -7.008864879608154
    10. ' return' → logprob: -7.133864879608154

Token 1976: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.38236504793167114
    2. 'return' (adapté à ' return') → logprob: -1.2573649883270264
    3. 'res' → logprob: -3.6323649883270264
    4. ' return' → logprob: -5.5073652267456055
    5. '                       ' → logprob: -6.8823652267456055
    6. '                           ' → logprob: -7.6323652267456055
    7. ' res' → logprob: -7.7573652267456055
    8. ' ' → logprob: -7.8823652267456055
    9. '                   ' → logprob: -9.132365226745605
    10. 'raise' → logprob: -9.382365226745605

Token 1977: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '
' → logprob: -21.5
    4. '۰' → logprob: -22.0
    5. '```' → logprob: -22.25
    6. '000' → logprob: -23.0
    7. '   ' → logprob: -23.25
    8. ' ' → logprob: -23.5
    9. '  ' → logprob: -24.0
    10. '٠' → logprob: -25.0

Token 1978: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.375
    3. '000' → logprob: -20.0
    4. '۰' → logprob: -20.375
    5. '```' → logprob: -20.625
    6. '  ' → logprob: -21.375
    7. ' ' → logprob: -21.625
    8. '
' → logprob: -22.0
    9. '1' → logprob: -22.125
    10. '"' → logprob: -22.125

Token 1979: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.48094403743743896
    2. '                   ' → logprob: -1.105944037437439
    3. '
' → logprob: -3.4809441566467285
    4. '```' → logprob: -4.6059441566467285
    5. '                        
' → logprob: -5.4809441566467285
    6. '               ' → logprob: -6.2309441566467285
    7. '                           ' → logprob: -6.4809441566467285
    8. '                    
' → logprob: -7.4809441566467285
    9. '\' → logprob: -7.9809441566467285
    10. '           ' → logprob: -8.48094367980957

Token 1980: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.8069491982460022
    2. '                   ' → logprob: -1.1819491386413574
    3. '<|end|>' → logprob: -2.4319491386413574
    4. '```' → logprob: -2.9319491386413574
    5. '                           ' → logprob: -3.6819491386413574
    6. '                        
' → logprob: -4.056949138641357
    7. '
' → logprob: -4.431949138641357
    8. '                               ' → logprob: -4.806949138641357
    9. '[' → logprob: -4.806949138641357
    10. ' 
' → logprob: -4.931949138641357

Token 1981: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7910482287406921
    2. 'mat' → logprob: -0.9160482287406921
    3. '                   ' → logprob: -2.041048288345337
    4. ' if' → logprob: -4.666048049926758
    5. '                       ' → logprob: -5.791048049926758
    6. '```' → logprob: -6.041048049926758
    7. ' mat' → logprob: -7.041048049926758
    8. 'for' → logprob: -8.541048049926758
    9. '	mat' → logprob: -8.666048049926758
    10. '               ' → logprob: -8.791048049926758

Token 1982: ' pivot' (ID: 44506)
  Prédit: 'pivot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pivot' → logprob: -0.04450729489326477
    2. 'i' → logprob: -3.2945072650909424
    3. 'mat' → logprob: -5.9195075035095215
    4. ' pivot' → logprob: -6.4195075035095215
    5. 'r' → logprob: -6.9195075035095215
    6. '                           ' → logprob: -7.1695075035095215
    7. '                       ' → logprob: -8.544507026672363
    8. ' i' → logprob: -9.419507026672363
    9. 'p' → logprob: -10.419507026672363
    10. '                               ' → logprob: -11.544507026672363

Token 1983: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.06317950040102005
    2. ' !=' → logprob: -2.8131794929504395
    3. ',' → logprob: -7.1881794929504395
    4. '[i' → logprob: -9.313179969787598
    5. 'i' → logprob: -9.438179969787598
    6. ',i' → logprob: -9.563179969787598
    7. ')!=' → logprob: -9.938179969787598
    8. ']!=' → logprob: -10.438179969787598
    9. '```' → logprob: -10.438179969787598
    10. '!==' → logprob: -10.688179969787598

Token 1984: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.688212614681106e-05
    2. ' i' → logprob: -11.000017166137695
    3. '                           ' → logprob: -17.250017166137695
    4. '                   ' → logprob: -18.375017166137695
    5. '	i' → logprob: -18.375017166137695
    6. '```' → logprob: -18.500017166137695
    7. '(i' → logprob: -19.000017166137695
    8. '
' → logprob: -19.250017166137695
    9. '   ' → logprob: -19.375017166137695
    10. '                       ' → logprob: -19.375017166137695

Token 1985: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.007308445405215025
    2. '_,' → logprob: -5.132308483123779
    3. ',' → logprob: -6.882308483123779
    4. '_
' → logprob: -8.757308006286621
    5. '_,
' → logprob: -9.132308006286621
    6. ',_' → logprob: -10.757308006286621
    7. '_swap' → logprob: -11.257308006286621
    8. '_
' → logprob: -11.382308006286621
    9. '```' → logprob: -11.882308006286621
    10. '_x' → logprob: -12.257308006286621

Token 1986: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.14786137640476227
    2. '                       ' → logprob: -2.7728614807128906
    3. '                           ' → logprob: -3.1478614807128906
    4. ':' → logprob: -3.8978614807128906
    5. ',' → logprob: -5.772861480712891
    6. '                   ' → logprob: -6.272861480712891
    7. '<|end|>' → logprob: -6.272861480712891
    8. '[' → logprob: -7.147861480712891
    9. '                               ' → logprob: -7.522861480712891
    10. '```' → logprob: -7.772861480712891

Token 1987: '                           ' (ID: 1686)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.1415698379278183
    2. ' mat' → logprob: -2.8915698528289795
    3. '                           ' → logprob: -3.1415698528289795
    4. 'mat' → logprob: -3.7665698528289795
    5. '```' → logprob: -5.2665696144104
    6. '                   ' → logprob: -6.1415696144104
    7. '                               ' → logprob: -7.0165696144104
    8. '                        
' → logprob: -7.1415696144104
    9. '[' → logprob: -8.641570091247559
    10. '#' → logprob: -8.891570091247559

Token 1988: ' mat' (ID: 2450)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mat' (adapté à ' mat') → logprob: -9.05499910004437e-05
    2. '                           ' → logprob: -9.750090599060059
    3. '                       ' → logprob: -11.000090599060059
    4. '(mat' → logprob: -11.750090599060059
    5. ' mat' → logprob: -12.625090599060059
    6. '```' → logprob: -13.750090599060059
    7. '                               ' → logprob: -14.125090599060059
    8. '	mat' → logprob: -14.125090599060059
    9. '                   ' → logprob: -14.875090599060059
    10. 'tmp' → logprob: -15.375090599060059

Token 1989: '[[' (ID: 26245)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.010441874153912067
    2. '[[' → logprob: -5.385441780090332
    3. ',i' → logprob: -6.010441780090332
    4. 'i' → logprob: -6.385441780090332
    5. '[' → logprob: -6.760441780090332
    6. '[
' → logprob: -8.135441780090332
    7. 'swap' → logprob: -9.385441780090332
    8. '[r' → logprob: -10.510441780090332
    9. '_swap' → logprob: -11.510441780090332
    10. ',' → logprob: -11.635441780090332

Token 1990: 'pivot' (ID: 159844)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.320199877838604e-07
    2. 'pivot' → logprob: -15.125
    3. ' i' → logprob: -16.125
    4. '	i' → logprob: -18.0
    5. '
' → logprob: -18.25
    6. '(i' → logprob: -18.625
    7. '[i' → logprob: -18.75
    8. '```' → logprob: -19.25
    9. '   ' → logprob: -19.375
    10. '{i' → logprob: -21.0

Token 1991: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06198270246386528
    2. ',i' → logprob: -2.8119826316833496
    3. ',
' → logprob: -11.811983108520508
    4. ' ,' → logprob: -11.936983108520508
    5. 'i' → logprob: -14.186983108520508
    6. '[i' → logprob: -15.561983108520508
    7. '_,' → logprob: -16.811983108520508
    8. '```' → logprob: -17.186983108520508
    9. '
' → logprob: -17.436983108520508
    10. ',n' → logprob: -18.186983108520508

Token 1992: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.9361264946837764e-07
    2. ' i' → logprob: -15.625
    3. '   ' → logprob: -17.25
    4. '
' → logprob: -18.625
    5. '	i' → logprob: -20.25
    6. '     ' → logprob: -21.125
    7. '```' → logprob: -22.25
    8. '    
' → logprob: -22.25
    9. '
' → logprob: -22.375
    10. '           ' → logprob: -22.375

Token 1993: '_' (ID: 62)
  Prédit: '_,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_,' → logprob: -0.5896743535995483
    2. ',' → logprob: -0.8396743535995483
    3. ',i' → logprob: -4.464674472808838
    4. '_' → logprob: -6.589674472808838
    5. '__,' → logprob: -8.46467399597168
    6. '[i' → logprob: -9.08967399597168
    7. '_i' → logprob: -9.46467399597168
    8. '_,
' → logprob: -9.46467399597168
    9. ',_' → logprob: -9.46467399597168
    10. 'i' → logprob: -9.58967399597168

Token 1994: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.010785577818751335
    2. '],' → logprob: -4.6357855796813965
    3. ',' → logprob: -7.0107855796813965
    4. ']],' → logprob: -10.510785102844238
    5. '```' → logprob: -10.885785102844238
    6. 'i' → logprob: -11.010785102844238
    7. ']]
' → logprob: -11.010785102844238
    8. ',i' → logprob: -11.635785102844238
    9. ']]=' → logprob: -11.885785102844238
    10. '_i' → logprob: -11.885785102844238

Token 1995: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03798836097121239
    2. '[i' → logprob: -4.037988185882568
    3. ' =' → logprob: -4.412988185882568
    4. '=i' → logprob: -5.537988185882568
    5. ',' → logprob: -6.662988185882568
    6. ']=' → logprob: -6.912988185882568
    7. '[' → logprob: -7.537988185882568
    8. '[[' → logprob: -8.037988662719727
    9. ']' → logprob: -8.912988662719727
    10. '=
' → logprob: -10.037988662719727

Token 1996: ' mat' (ID: 2450)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.00026300468016415834
    2. ' mat' → logprob: -8.250263214111328
    3. '	mat' → logprob: -13.500263214111328
    4. '(mat' → logprob: -15.250263214111328
    5. '   ' → logprob: -16.750263214111328
    6. 'i' → logprob: -17.875263214111328
    7. ' ' → logprob: -19.875263214111328
    8. '.mat' → logprob: -20.625263214111328
    9. ' мат' → logprob: -20.625263214111328
    10. '```' → logprob: -20.625263214111328

Token 1997: '[[' (ID: 26245)
  Prédit: '[['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.575945258140564
    2. '[i' → logprob: -0.825945258140564
    3. 'i' → logprob: -13.325944900512695
    4. '[np' → logprob: -13.700944900512695
    5. '[' → logprob: -13.825944900512695
    6. '[
' → logprob: -13.825944900512695
    7. '
' → logprob: -15.325944900512695
    8. '{i' → logprob: -15.575944900512695
    9. '```' → logprob: -15.575944900512695
    10. '[j' → logprob: -15.700944900512695

Token 1998: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -5.080963092041202e-06
    2. 'pivot' → logprob: -13.000004768371582
    3. '   ' → logprob: -13.750004768371582
    4. ' i' → logprob: -14.125004768371582
    5. '(i' → logprob: -15.500004768371582
    6. ' ' → logprob: -15.875004768371582
    7. '	i' → logprob: -16.0000057220459
    8. '```' → logprob: -16.6250057220459
    9. '[i' → logprob: -17.2500057220459
    10. '
' → logprob: -17.2500057220459

Token 1999: '_,' (ID: 14152)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4557943642139435
    2. '_,' → logprob: -1.330794334411621
    3. ',' → logprob: -3.330794334411621
    4. '_' → logprob: -3.455794334411621
    5. '_i' → logprob: -3.830794334411621
    6. ',i' → logprob: -4.455794334411621
    7. ' i' → logprob: -7.580794334411621
    8. '[i' → logprob: -7.955794334411621
    9. '_
' → logprob: -9.580794334411621
    10. '_,
' → logprob: -10.080794334411621

Token 2000: ' pivot' (ID: 44506)
  Prédit: 'pivot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pivot' → logprob: -1.4259644558478612e-05
    2. ' pivot' → logprob: -11.375014305114746
    3. 'i' → logprob: -13.250014305114746
    4. 'r' → logprob: -14.125014305114746
    5. 'p' → logprob: -15.125014305114746
    6. 'pawn' → logprob: -18.12501335144043
    7. 'Pivot' → logprob: -19.25001335144043
    8. ' ' → logprob: -19.25001335144043
    9. 'patch' → logprob: -19.75001335144043
    10. 'pilot' → logprob: -19.75001335144043

Token 2001: ']]
' (ID: 29446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.40952837467193604
    2. ']]
' → logprob: -1.659528374671936
    3. ']]' → logprob: -2.4095282554626465
    4. ']
' → logprob: -2.9095282554626465
    5. '])
' → logprob: -7.6595282554626465
    6. '])' → logprob: -7.6595282554626465
    7. ']])
' → logprob: -8.784528732299805
    8. ']}
' → logprob: -9.284528732299805
    9. ']
' → logprob: -10.159528732299805
    10. ')]' → logprob: -10.534528732299805

Token 2002: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.02861122414469719
    2. '                       ' → logprob: -4.153611183166504
    3. '                   ' → logprob: -4.778611183166504
    4. '           ' → logprob: -6.778611183166504
    5. '                               ' → logprob: -6.778611183166504
    6. '               ' → logprob: -7.028611183166504
    7. '[' → logprob: -8.653611183166504
    8. '                            
' → logprob: -9.028611183166504
    9. '<|end|>' → logprob: -9.403611183166504
    10. ' ' → logprob: -9.778611183166504

Token 2003: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -3.583550642360933e-05
    2. ' res' → logprob: -10.625036239624023
    3. '(res' → logprob: -12.000036239624023
    4. '                           ' → logprob: -13.250036239624023
    5. '-' → logprob: -13.625036239624023
    6. 'ans' → logprob: -14.125036239624023
    7. '-res' → logprob: -14.500036239624023
    8. '```' → logprob: -14.750036239624023
    9. '                   ' → logprob: -15.250036239624023
    10. '                       ' → logprob: -15.250036239624023

Token 2004: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.020041102543473244
    2. '*=' → logprob: -4.520040988922119
    3. ' =' → logprob: -4.770040988922119
    4. '*' → logprob: -7.770040988922119
    5. ' *=' → logprob: -10.145041465759277
    6. '   ' → logprob: -11.895041465759277
    7. '```' → logprob: -13.395041465759277
    8. '	' → logprob: -14.520041465759277
    9. '%=' → logprob: -14.645041465759277
    10. '    ' → logprob: -14.645041465759277

Token 2005: ' (-' (ID: 21382)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.7887609601020813
    2. '(-' → logprob: -1.0387609004974365
    3. '-res' → logprob: -1.6637609004974365
    4. '-mod' → logprob: -6.913761138916016
    5. '-' → logprob: -7.538761138916016
    6. 'res' → logprob: -7.663761138916016
    7. '(mod' → logprob: -9.288761138916016
    8. '(' → logprob: -9.913761138916016
    9. '-M' → logprob: -10.288761138916016
    10. '-m' → logprob: -10.288761138916016

Token 2006: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -6.704273118884885e-07
    2. ' res' → logprob: -14.500000953674316
    3. '1' → logprob: -16.0
    4. '(res' → logprob: -17.625
    5. '	res' → logprob: -21.0
    6. '_res' → logprob: -21.125
    7. '$res' → logprob: -21.125
    8. 'resi' → logprob: -21.125
    9. '                   ' → logprob: -21.25
    10. 'ress' → logprob: -23.0

Token 2007: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15126360952854156
    2. ' *' → logprob: -2.15126371383667
    3. ' %' → logprob: -4.27626371383667
    4. '*' → logprob: -4.90126371383667
    5. '%' → logprob: -6.27626371383667
    6. ')%' → logprob: -7.52626371383667
    7. ' )' → logprob: -8.901263236999512
    8. ' ' → logprob: -9.401263236999512
    9. '<|end|>' → logprob: -11.151263236999512
    10. ',' → logprob: -11.901263236999512

Token 2008: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.429172545671463
    2. '%' → logprob: -1.0541725158691406
    3. ' *' → logprob: -8.42917251586914
    4. '*' → logprob: -8.67917251586914
    5. '                   ' → logprob: -10.55417251586914
    6. ')' → logprob: -10.67917251586914
    7. '                       ' → logprob: -11.67917251586914
    8. ')%' → logprob: -12.30417251586914
    9. '```' → logprob: -12.30417251586914
    10. '%c' → logprob: -13.05417251586914

Token 2009: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.318681188422488e-05
    2. ' mod' → logprob: -11.25001335144043
    3. 'MOD' → logprob: -16.25001335144043
    4. '(mod' → logprob: -18.25001335144043
    5. 'mat' → logprob: -20.25001335144043
    6. '	mod' → logprob: -22.12501335144043
    7. '```' → logprob: -22.50001335144043
    8. 'moder' → logprob: -24.00001335144043
    9. ' MOD' → logprob: -24.12501335144043
    10. '10' → logprob: -24.37501335144043

Token 2010: '
' (ID: 198)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.48814013600349426
    2. '                       ' → logprob: -1.1131401062011719
    3. '                   ' → logprob: -3.363140106201172
    4. '                               ' → logprob: -5.113140106201172
    5. '               ' → logprob: -5.613140106201172
    6. '                        
' → logprob: -5.738140106201172
    7. '                            
' → logprob: -6.238140106201172
    8. '```' → logprob: -6.488140106201172
    9. '<|end|>' → logprob: -6.863140106201172
    10. '*' → logprob: -6.988140106201172

Token 2011: '                       ' (ID: 968)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.491199254989624
    2. '                       ' → logprob: -1.616199254989624
    3. '                   ' → logprob: -2.491199254989624
    4. '```' → logprob: -2.491199254989624
    5. '                               ' → logprob: -5.116199493408203
    6. '               ' → logprob: -5.116199493408203
    7. '[' → logprob: -5.991199493408203
    8. '           ' → logprob: -6.116199493408203
    9. '``' → logprob: -6.866199493408203
    10. '                            ' → logprob: -7.116199493408203

Token 2012: ' res' (ID: 694)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.7589854598045349
    2. '                           ' → logprob: -1.2589855194091797
    3. 'res' (adapté à ' res') → logprob: -2.2589855194091797
    4. '                   ' → logprob: -3.0089855194091797
    5. 'for' → logprob: -3.1339855194091797
    6. ' for' → logprob: -4.50898551940918
    7. ' res' → logprob: -4.63398551940918
    8. '```' → logprob: -4.75898551940918
    9. '                               ' → logprob: -5.50898551940918
    10. '               ' → logprob: -5.63398551940918

Token 2013: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07344943284988403
    2. ' =' → logprob: -2.6984493732452393
    3. '*=' → logprob: -5.823449611663818
    4. '                   ' → logprob: -8.07344913482666
    5. ' *=' → logprob: -9.32344913482666
    6. '*' → logprob: -9.82344913482666
    7. '           ' → logprob: -10.32344913482666
    8. '                       ' → logprob: -10.94844913482666
    9. '```' → logprob: -11.07344913482666
    10. '   ' → logprob: -11.57344913482666

Token 2014: ' (' (ID: 350)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -4.584861744660884e-05
    2. ' (' → logprob: -10.000045776367188
    3. '   ' → logprob: -15.750045776367188
    4. '(' → logprob: -15.875045776367188
    5. 'res' → logprob: -16.500045776367188
    6. '(result' → logprob: -17.750045776367188
    7. '```' → logprob: -18.750045776367188
    8. ' ' → logprob: -19.250045776367188
    9. '
' → logprob: -19.250045776367188
    10. '  ' → logprob: -19.375045776367188

Token 2015: 'res' (ID: 430)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.023247575387358665
    2. 'res' → logprob: -3.773247480392456
    3. ' res' → logprob: -13.898247718811035
    4. ' (' → logprob: -14.273247718811035
    5. '$res' → logprob: -15.273247718811035
    6. '	res' → logprob: -16.27324676513672
    7. '   ' → logprob: -16.77324676513672
    8. ',res' → logprob: -17.14824676513672
    9. '=res' → logprob: -17.27324676513672
    10. '(' → logprob: -18.02324676513672

Token 2016: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.1602286994457245
    2. '*' → logprob: -1.9102287292480469
    3. ' ' → logprob: -13.035228729248047
    4. ' ' → logprob: -13.535228729248047
    5. '**' → logprob: -15.785228729248047
    6. 'res' → logprob: -15.910228729248047
    7. '   ' → logprob: -16.035228729248047
    8. '```' → logprob: -16.535228729248047
    9. '*object' → logprob: -16.660228729248047
    10. '*(' → logprob: -16.660228729248047

Token 2017: ' mat' (ID: 2450)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mat' → logprob: -2.45848218582978e-06
    2. 'int' → logprob: -13.25000286102295
    3. '(mat' → logprob: -14.87500286102295
    4. ' mat' → logprob: -15.37500286102295
    5. 'matrix' → logprob: -17.875001907348633
    6. '   ' → logprob: -18.000001907348633
    7. 'ma' → logprob: -19.750001907348633
    8. 'mod' → logprob: -20.250001907348633
    9. '	mat' → logprob: -20.250001907348633
    10. '
' → logprob: -20.625001907348633

Token 2018: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.9153885558771435e-06
    2. 'i' → logprob: -12.625005722045898
    3. '[r' → logprob: -13.625005722045898
    4. '[
' → logprob: -14.625005722045898
    5. '[...,' → logprob: -14.625005722045898
    6. '[' → logprob: -15.250005722045898
    7. '[[' → logprob: -16.2500057220459
    8. '(i' → logprob: -17.6250057220459
    9. '```' → logprob: -17.8750057220459
    10. '{i' → logprob: -17.8750057220459

Token 2019: '_,' (ID: 14152)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6088544726371765
    2. '_,' → logprob: -0.8588544726371765
    3. '_]' → logprob: -3.7338545322418213
    4. '_[' → logprob: -5.233854293823242
    5. '_i' → logprob: -6.858854293823242
    6. ',' → logprob: -6.858854293823242
    7. 'i' → logprob: -8.483854293823242
    8. ',i' → logprob: -8.483854293823242
    9. '[i' → logprob: -8.608854293823242
    10. '_)' → logprob: -9.108854293823242

Token 2020: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.5776860184123507e-06
    2. ' i' → logprob: -13.00000286102295
    3. '   ' → logprob: -16.125001907348633
    4. '
' → logprob: -16.125001907348633
    5. '(i' → logprob: -17.250001907348633
    6. '[i' → logprob: -17.625001907348633
    7. ',i' → logprob: -19.250001907348633
    8. '	i' → logprob: -19.500001907348633
    9. '```' → logprob: -19.625001907348633
    10. '
' → logprob: -20.125001907348633

Token 2021: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10025627166032791
    2. '_]' → logprob: -2.3502562046051025
    3. '_
' → logprob: -11.100255966186523
    4. '])' → logprob: -11.225255966186523
    5. '_)' → logprob: -11.350255966186523
    6. '_
' → logprob: -12.850255966186523
    7. '_i' → logprob: -12.975255966186523
    8. ']' → logprob: -13.100255966186523
    9. 'i' → logprob: -14.600255966186523
    10. '_[' → logprob: -14.725255966186523

Token 2022: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.3375013470649719
    2. ']' → logprob: -2.087501287460327
    3. '[i' → logprob: -2.712501287460327
    4. ')' → logprob: -2.712501287460327
    5. '%' → logprob: -3.837501287460327
    6. '[' → logprob: -6.212501525878906
    7. '```' → logprob: -6.212501525878906
    8. ']%' → logprob: -6.837501525878906
    9. 'i' → logprob: -7.212501525878906
    10. ' ])' → logprob: -7.837501525878906

Token 2023: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.0627434030175209
    2. ' %' → logprob: -2.8127434253692627
    3. ')' → logprob: -7.812743186950684
    4. '```' → logprob: -8.812743186950684
    5. '                   ' → logprob: -9.062743186950684
    6. ')%' → logprob: -10.687743186950684
    7. '                       ' → logprob: -11.062743186950684
    8. '%n' → logprob: -11.312743186950684
    9. '%i' → logprob: -11.562743186950684
    10. '%
' → logprob: -11.687743186950684

Token 2024: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.003178306156769395
    2. 'MOD' → logprob: -5.753178119659424
    3. '(mod' → logprob: -15.003178596496582
    4. ' mod' → logprob: -15.503178596496582
    5. 'mat' → logprob: -16.253177642822266
    6. ' MOD' → logprob: -17.503177642822266
    7. '```' → logprob: -17.753177642822266
    8. '	mod' → logprob: -19.003177642822266
    9. '10' → logprob: -19.253177642822266
    10. '100' → logprob: -19.378177642822266

Token 2025: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4540373384952545
    2. '                       ' → logprob: -1.3290373086929321
    3. '```' → logprob: -2.5790374279022217
    4. ' for' → logprob: -5.579037189483643
    5. '                        
' → logprob: -5.704037189483643
    6. '               ' → logprob: -5.704037189483643
    7. '<|end|>' → logprob: -5.954037189483643
    8. '           ' → logprob: -6.204037189483643
    9. '                           ' → logprob: -6.454037189483643
    10. '
' → logprob: -6.579037189483643

Token 2026: '                       ' (ID: 968)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8313059210777283
    2. '                   ' → logprob: -1.331305980682373
    3. '                       ' → logprob: -1.706305980682373
    4. '                           ' → logprob: -3.081305980682373
    5. '<|end|>' → logprob: -4.456305980682373
    6. '[' → logprob: -4.706305980682373
    7. '               ' → logprob: -4.706305980682373
    8. '                        
' → logprob: -4.956305980682373
    9. '           ' → logprob: -5.081305980682373
    10. '       ' → logprob: -5.331305980682373

Token 2027: ' inv' (ID: 1827)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0010712771909311414
    2. ' for' → logprob: -7.626071453094482
    3. '```' → logprob: -8.126070976257324
    4. 'mat' → logprob: -8.751070976257324
    5. '                       ' → logprob: -9.876070976257324
    6. '                           ' → logprob: -10.501070976257324
    7. 'x' → logprob: -12.126070976257324
    8. '                   ' → logprob: -12.251070976257324
    9. 'pow' → logprob: -12.376070976257324
    10. '``' → logprob: -12.376070976257324

Token 2028: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25133681297302246
    2. '=' → logprob: -1.6263368129730225
    3. '_token' → logprob: -4.751337051391602
    4. '_i' → logprob: -5.626337051391602
    5. '_val' → logprob: -6.376337051391602
    6. 'token' → logprob: -6.626337051391602
    7. '=np' → logprob: -6.751337051391602
    8. '_' → logprob: -6.876337051391602
    9. 'i' → logprob: -7.501337051391602
    10. 'x' → logprob: -7.501337051391602

Token 2029: ' pow' (ID: 9779)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.029790766537189484
    2. 'pow' → logprob: -3.5297908782958984
    3. ' mod' → logprob: -11.029790878295898
    4. 'det' → logprob: -11.529790878295898
    5. '(mod' → logprob: -12.029790878295898
    6. ' pow' → logprob: -12.529790878295898
    7. '                           ' → logprob: -13.529790878295898
    8. '	mod' → logprob: -13.654790878295898
    9. 'lambda' → logprob: -14.904790878295898
    10. 'd' → logprob: -15.154790878295898

Token 2030: '(int' (ID: 2742)
  Prédit: '(mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mat' → logprob: -0.00012535012501757592
    2. 'mat' → logprob: -9.00012493133545
    3. '(res' → logprob: -14.62512493133545
    4. '(int' → logprob: -14.87512493133545
    5. '	mat' → logprob: -15.12512493133545
    6. '(
' → logprob: -15.50012493133545
    7. '(' → logprob: -15.62512493133545
    8. '(mod' → logprob: -16.125125885009766
    9. 'int' → logprob: -16.250125885009766
    10. '_mat' → logprob: -16.375125885009766

Token 2031: '(mat' (ID: 83002)
  Prédit: '(mat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mat' → logprob: -0.0001242772996192798
    2. 'mat' → logprob: -9.000123977661133
    3. '(int' → logprob: -15.000123977661133
    4. '(mod' → logprob: -15.250123977661133
    5. '(res' → logprob: -16.125123977661133
    6. '	mat' → logprob: -16.375123977661133
    7. '(pow' → logprob: -16.875123977661133
    8. ' mat' → logprob: -17.250123977661133
    9. '(' → logprob: -18.000123977661133
    10. '(
' → logprob: -18.625123977661133

Token 2032: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5048530030981055e-06
    2. '[' → logprob: -14.000001907348633
    3. '[
' → logprob: -15.375001907348633
    4. 'i' → logprob: -15.750001907348633
    5. 'mat' → logprob: -16.750001907348633
    6. '
' → logprob: -17.500001907348633
    7. '(i' → logprob: -17.750001907348633
    8. 'import' → logprob: -17.875001907348633
    9. '```' → logprob: -17.875001907348633
    10. '{i' → logprob: -18.625001907348633

Token 2033: '_,' (ID: 14152)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0004940562648698688
    2. '_[' → logprob: -8.000494003295898
    3. ',i' → logprob: -10.000494003295898
    4. '_' → logprob: -10.000494003295898
    5. 'i' → logprob: -10.375494003295898
    6. '_,' → logprob: -10.500494003295898
    7. '_i' → logprob: -12.125494003295898
    8. '[' → logprob: -13.500494003295898
    9. ',' → logprob: -14.250494003295898
    10. '{i' → logprob: -15.000494003295898

Token 2034: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0006809803890064359
    2. '[i' → logprob: -7.375680923461914
    3. '(i' → logprob: -10.000680923461914
    4. '
' → logprob: -12.625680923461914
    5. '   ' → logprob: -12.875680923461914
    6. 'res' → logprob: -13.625680923461914
    7. ' i' → logprob: -14.750680923461914
    8. '{i' → logprob: -14.750680923461914
    9. '1' → logprob: -15.125680923461914
    10. '```' → logprob: -15.500680923461914

Token 2035: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.019496219232678413
    2. 'i' → logprob: -4.269496440887451
    3. '[i' → logprob: -6.019496440887451
    4. '_i' → logprob: -6.519496440887451
    5. '_]' → logprob: -7.144496440887451
    6. '[' → logprob: -8.519495964050293
    7. '_,' → logprob: -9.394495964050293
    8. ',i' → logprob: -9.519495964050293
    9. '],' → logprob: -9.769495964050293
    10. ',' → logprob: -9.894495964050293

Token 2036: ']),' (ID: 19560)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.2049248218536377
    2. 'i' → logprob: -1.7049248218536377
    3. ',i' → logprob: -6.204924583435059
    4. ',' → logprob: -7.829924583435059
    5. '[' → logprob: -8.329924583435059
    6. '(i' → logprob: -8.454924583435059
    7. '
' → logprob: -9.329924583435059
    8. '],' → logprob: -9.704924583435059
    9. '])' → logprob: -9.829924583435059
    10. '   ' → logprob: -9.954924583435059

Token 2037: ' mod' (ID: 1812)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2824414372444153
    2. 'mod' → logprob: -1.5324413776397705
    3. '-mod' → logprob: -4.03244161605835
    4. 'MOD' → logprob: -4.53244161605835
    5. '(mod' → logprob: -6.78244161605835
    6. '-m' → logprob: -8.282441139221191
    7. '-M' → logprob: -9.782441139221191
    8. ' -' → logprob: -9.782441139221191
    9. '-res' → logprob: -10.407441139221191
    10. 'res' → logprob: -11.157441139221191

Token 2038: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.0564331205387134e-05
    2. ' -' → logprob: -11.50001049041748
    3. '```' → logprob: -15.00001049041748
    4. '−' → logprob: -18.625011444091797
    5. '{-' → logprob: -19.875011444091797
    6. '–' → logprob: -20.500011444091797
    7. '[-' → logprob: -20.625011444091797
    8. '   ' → logprob: -20.625011444091797
    9. '()-' → logprob: -20.875011444091797
    10. '``' → logprob: -21.000011444091797

Token 2039: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -15.875
    3. '-' → logprob: -17.75
    4. ' ' → logprob: -18.375
    5. '1' → logprob: -18.5
    6. '   ' → logprob: -18.625
    7. '۲' → logprob: -18.8125
    8. '
' → logprob: -18.875
    9. '3' → logprob: -19.0
    10. '２' → logprob: -19.0625

Token 2040: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019030551193282008
    2. ')' → logprob: -6.876903057098389
    3. ' ,' → logprob: -7.126903057098389
    4. '                   ' → logprob: -10.50190258026123
    5. ',
' → logprob: -11.62690258026123
    6. '               ' → logprob: -12.00190258026123
    7. ',None' → logprob: -12.62690258026123
    8. '                       ' → logprob: -13.00190258026123
    9. '```' → logprob: -13.00190258026123
    10. '           ' → logprob: -13.37690258026123

Token 2041: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.003180563682690263
    2. 'MOD' → logprob: -5.753180503845215
    3. ' mod' → logprob: -12.878180503845215
    4. '(mod' → logprob: -15.628180503845215
    5. ' MOD' → logprob: -16.50318145751953
    6. '	mod' → logprob: -17.12818145751953
    7. 'mat' → logprob: -17.50318145751953
    8. '```' → logprob: -18.50318145751953
    9. '10' → logprob: -19.12818145751953
    10. '           ' → logprob: -19.25318145751953

Token 2042: ')' (ID: 8)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.20300579071044922
    2. ')' → logprob: -1.7030057907104492
    3. '                   ' → logprob: -6.578005790710449
    4. '                       ' → logprob: -9.32800579071045
    5. ')
' → logprob: -9.95300579071045
    6. '               ' → logprob: -10.20300579071045
    7. '           ' → logprob: -12.07800579071045
    8. '```' → logprob: -12.45300579071045
    9. '                           ' → logprob: -12.82800579071045
    10. '       ' → logprob: -13.07800579071045

Token 2043: ' ' (ID: 220)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.2647010087966919
    2. '                   ' → logprob: -1.514701008796692
    3. '                           ' → logprob: -5.389700889587402
    4. '```' → logprob: -5.889700889587402
    5. '               ' → logprob: -6.639700889587402
    6. ' for' → logprob: -6.639700889587402
    7. '           ' → logprob: -7.389700889587402
    8. '<|end|>' → logprob: -7.514700889587402
    9. '                        
' → logprob: -8.014700889587402
    10. 'for' → logprob: -8.139700889587402

Token 2044: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.17062564194202423
    2. '               ' → logprob: -3.295625686645508
    3. '                       ' → logprob: -3.420625686645508
    4. '                           ' → logprob: -3.795625686645508
    5. '```' → logprob: -4.170625686645508
    6. ',' → logprob: -4.920625686645508
    7. '           ' → logprob: -5.045625686645508
    8. '*' → logprob: -5.295625686645508
    9. ' *' → logprob: -5.670625686645508
    10. ' for' → logprob: -5.795625686645508

Token 2045: ' inverse' (ID: 53743)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0017926320433616638
    2. '                   ' → logprob: -7.0017924308776855
    3. 'inv' → logprob: -7.7517924308776855
    4. ' for' → logprob: -8.751792907714844
    5. '#' → logprob: -9.001792907714844
    6. '                           ' → logprob: -9.751792907714844
    7. '1' → logprob: -10.751792907714844
    8. '                       ' → logprob: -10.876792907714844
    9. '```' → logprob: -11.251792907714844
    10. 'pow' → logprob: -11.251792907714844

Token 2046: ' mod' (ID: 1812)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.2205402851104736
    2. ' =' → logprob: -1.5955402851104736
    3. '                   ' → logprob: -1.7205402851104736
    4. '<|end|>' → logprob: -2.8455402851104736
    5. ')' → logprob: -3.4705402851104736
    6. '_mod' → logprob: -3.7205402851104736
    7. 'mod' → logprob: -3.8455402851104736
    8. '=' → logprob: -3.8455402851104736
    9. '_' → logprob: -4.2205400466918945
    10. ' modulo' → logprob: -4.4705400466918945

Token 2047: 'ulaire' (ID: 48584)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6231940388679504
    2. '                   ' → logprob: -1.2481939792633057
    3. 'i' → logprob: -3.3731939792633057
    4. '(i' → logprob: -3.6231939792633057
    5. ')' → logprob: -3.9981939792633057
    6. '_' → logprob: -4.123194217681885
    7. '                                           ' → logprob: -4.623194217681885
    8. '``' → logprob: -4.873194217681885
    9. '`' → logprob: -5.248194217681885
    10. '=' → logprob: -5.248194217681885

Token 2048: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.18738575279712677
    2. '                       ' → logprob: -2.4373857975006104
    3. '               ' → logprob: -3.5623857975006104
    4. '```' → logprob: -4.187385559082031
    5. '                           ' → logprob: -4.687385559082031
    6. '<|end|>' → logprob: -4.937385559082031
    7. ' for' → logprob: -5.312385559082031
    8. ',' → logprob: -5.312385559082031
    9. '           ' → logprob: -5.437385559082031
    10. '       ' → logprob: -6.812385559082031

Token 2049: '                       ' (ID: 968)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.4956364631652832
    2. '                           ' → logprob: -1.6206364631652832
    3. '                       ' → logprob: -2.245636463165283
    4. '                   ' → logprob: -2.620636463165283
    5. '                               ' → logprob: -5.620636463165283
    6. '               ' → logprob: -5.745636463165283
    7. '           ' → logprob: -6.245636463165283
    8. '``' → logprob: -6.745636463165283
    9. '`' → logprob: -6.870636463165283
    10. '​' → logprob: -7.370636463165283

Token 2050: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0018664064118638635
    2. '```' → logprob: -7.001866340637207
    3. ' for' → logprob: -7.126866340637207
    4. '                   ' → logprob: -9.251866340637207
    5. '                       ' → logprob: -10.626866340637207
    6. '                           ' → logprob: -11.126866340637207
    7. '``' → logprob: -11.876866340637207
    8. '   ' → logprob: -12.626866340637207
    9. '           ' → logprob: -13.626866340637207
    10. 'j' → logprob: -13.626866340637207

Token 2051: ' r' (ID: 428)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0009134899592027068
    2. ' j' → logprob: -7.000913619995117
    3. '   ' → logprob: -13.375913619995117
    4. 'k' → logprob: -15.625913619995117
    5. '	j' → logprob: -15.875913619995117
    6. '```' → logprob: -16.000913619995117
    7. '    ' → logprob: -17.250913619995117
    8. '_j' → logprob: -17.500913619995117
    9. '$j' → logprob: -18.500913619995117
    10. '  ' → logprob: -18.875913619995117

Token 2052: '_' (ID: 62)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5873922109603882
    2. 'i' → logprob: -1.3373922109603882
    3. ' in' → logprob: -1.9623922109603882
    4. ' i' → logprob: -4.337392330169678
    5. ' r' → logprob: -4.837392330169678
    6. '_' → logprob: -4.962392330169678
    7. '=i' → logprob: -6.212392330169678
    8. 'in' → logprob: -6.462392330169678
    9. '(i' → logprob: -6.712392330169678
    10. '[i' → logprob: -6.712392330169678

Token 2053: ' in' (ID: 306)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.33901289105415344
    2. 'in' → logprob: -1.714012861251831
    3. ' in' → logprob: -2.839012861251831
    4. 'r' → logprob: -3.589012861251831
    5. '(i' → logprob: -4.33901309967041
    6. ' i' → logprob: -5.08901309967041
    7. '   ' → logprob: -7.46401309967041
    8. '```' → logprob: -7.96401309967041
    9. 'range' → logprob: -7.96401309967041
    10. '[i' → logprob: -8.21401309967041

Token 2054: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00016432604752480984
    2. ' range' → logprob: -8.750164031982422
    3. 'i' → logprob: -12.750164031982422
    4. '   ' → logprob: -13.000164031982422
    5. '(range' → logprob: -14.625164031982422
    6. '(i' → logprob: -16.000164031982422
    7. ' ' → logprob: -17.250164031982422
    8. '  ' → logprob: -18.125164031982422
    9. '	range' → logprob: -18.125164031982422
    10. 'r' → logprob: -19.250164031982422

Token 2055: '(i' (ID: 3649)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02336881496012211
    2. '(i' → logprob: -3.7733688354492188
    3. '   ' → logprob: -9.398368835449219
    4. ' i' → logprob: -10.523368835449219
    5. '                   ' → logprob: -12.148368835449219
    6. '           ' → logprob: -13.148368835449219
    7. '       ' → logprob: -13.523368835449219
    8. 'r' → logprob: -13.523368835449219
    9. '	i' → logprob: -14.148368835449219
    10. '               ' → logprob: -14.398368835449219

Token 2056: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05509880185127258
    2. '_,' → logprob: -3.18009877204895
    3. '+' → logprob: -4.430099010467529
    4. '```' → logprob: -10.680098533630371
    5. ' +' → logprob: -11.055098533630371
    6. '_
' → logprob: -11.180098533630371
    7. ',' → logprob: -11.180098533630371
    8. 's' → logprob: -11.805098533630371
    9. '_,
' → logprob: -11.805098533630371
    10. '_i' → logprob: -12.305098533630371

Token 2057: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005293288733810186
    2. ' +' → logprob: -5.255293369293213
    3. ',' → logprob: -10.255292892456055
    4. '```' → logprob: -11.380292892456055
    5. '+,' → logprob: -12.755292892456055
    6. '+i' → logprob: -13.505292892456055
    7. '                       ' → logprob: -13.505292892456055
    8. '           ' → logprob: -13.630292892456055
    9. '                           ' → logprob: -13.755292892456055
    10. '()+' → logprob: -14.130292892456055

Token 2058: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.292907877039397e-06
    2. '+' → logprob: -12.75000286102295
    3. '```' → logprob: -15.37500286102295
    4. ' ' → logprob: -17.000003814697266
    5. 'r' → logprob: -17.250003814697266
    6. 'i' → logprob: -17.375003814697266
    7. '
' → logprob: -17.750003814697266
    8. '   ' → logprob: -18.125003814697266
    9. 'n' → logprob: -19.000003814697266
    10. ',' → logprob: -19.000003814697266

Token 2059: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00558021804317832
    2. ',n' → logprob: -5.380580425262451
    3. 'n' → logprob: -7.005580425262451
    4. ' ,' → logprob: -10.255579948425293
    5. '   ' → logprob: -12.130579948425293
    6. '+' → logprob: -12.630579948425293
    7. '```' → logprob: -13.130579948425293
    8. '(n' → logprob: -13.380579948425293
    9. ',
' → logprob: -13.630579948425293
    10. ',r' → logprob: -13.755579948425293

Token 2060: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.7432603272027336e-06
    2. ' n' → logprob: -13.500001907348633
    3. '                   ' → logprob: -15.875001907348633
    4. 'k' → logprob: -16.250001907348633
    5. '	n' → logprob: -16.625001907348633
    6. '                           ' → logprob: -18.125001907348633
    7. '                       ' → logprob: -18.125001907348633
    8. '(n' → logprob: -18.750001907348633
    9. '   ' → logprob: -18.750001907348633
    10. 'r' → logprob: -19.375001907348633

Token 2061: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.08008316904306412
    2. ',' → logprob: -2.705083131790161
    3. '):' → logprob: -5.08008337020874
    4. '                       ' → logprob: -6.83008337020874
    5. '```' → logprob: -7.33008337020874
    6. ':' → logprob: -7.45508337020874
    7. ':
' → logprob: -7.58008337020874
    8. '                           ' → logprob: -7.83008337020874
    9. '                   ' → logprob: -8.205082893371582
    10. '           ' → logprob: -9.705082893371582

Token 2062: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.06762736290693283
    2. '                               ' → logprob: -3.692627429962158
    3. '                       ' → logprob: -4.067627429962158
    4. '```' → logprob: -4.692627429962158
    5. '<|end|>' → logprob: -5.442627429962158
    6. '           ' → logprob: -6.567627429962158
    7. ' ' → logprob: -6.817627429962158
    8. '                   ' → logprob: -7.067627429962158
    9. '`' → logprob: -7.192627429962158
    10. '                            
' → logprob: -7.317627429962158

Token 2063: ' if' (ID: 538)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.03076743707060814
    2. '                               ' → logprob: -3.6557674407958984
    3. 'mat' → logprob: -7.155767440795898
    4. '           ' → logprob: -7.780767440795898
    5. '                            ' → logprob: -7.780767440795898
    6. '```' → logprob: -7.780767440795898
    7. '                       ' → logprob: -7.905767440795898
    8. '   ' → logprob: -8.155767440795898
    9. '                                   ' → logprob: -8.405767440795898
    10. 'mult' → logprob: -8.405767440795898

Token 2064: ' mat' (ID: 2450)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.1567297726869583
    2. 'r' → logprob: -2.9067296981811523
    3. '(mat' → logprob: -2.9067296981811523
    4. ' mat' → logprob: -3.6567296981811523
    5. '                           ' → logprob: -5.281729698181152
    6. ' r' → logprob: -6.406729698181152
    7. '(r' → logprob: -6.906729698181152
    8. 'int' → logprob: -7.281729698181152
    9. ' (' → logprob: -7.281729698181152
    10. '	mat' → logprob: -9.156729698181152

Token 2065: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.011488550342619419
    2. 'r' → logprob: -4.636488437652588
    3. '[i' → logprob: -6.386488437652588
    4. 'i' → logprob: -10.886488914489746
    5. '[' → logprob: -11.261488914489746
    6. ',r' → logprob: -12.761488914489746
    7. ' r' → logprob: -13.261488914489746
    8. '   ' → logprob: -13.261488914489746
    9. '```' → logprob: -13.261488914489746
    10. '(r' → logprob: -13.886488914489746

Token 2066: '_,' (ID: 14152)
  Prédit: '_,'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_,' → logprob: -0.0014396385522559285
    2. ',' → logprob: -6.751439571380615
    3. '_' → logprob: -8.376440048217773
    4. '_,
' → logprob: -11.126440048217773
    5. ',i' → logprob: -11.876440048217773
    6. '_[' → logprob: -11.876440048217773
    7. '```' → logprob: -12.876440048217773
    8. '__,' → logprob: -13.751440048217773
    9. ',_' → logprob: -13.751440048217773
    10. ' ,' → logprob: -13.751440048217773

Token 2067: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00433873338624835
    2. 'r' → logprob: -5.62933874130249
    3. ' i' → logprob: -7.25433874130249
    4. ' r' → logprob: -11.629338264465332
    5. '   ' → logprob: -11.754338264465332
    6. '0' → logprob: -12.129338264465332
    7. '```' → logprob: -13.504338264465332
    8. ' ' → logprob: -13.629338264465332
    9. '(i' → logprob: -13.754338264465332
    10. ']' → logprob: -13.879338264465332

Token 2068: '_]' (ID: 163385)
  Prédit: '_]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_]' → logprob: -0.007951783947646618
    2. '_' → logprob: -4.882951736450195
    3. ']' → logprob: -8.007951736450195
    4. ' ]' → logprob: -12.132951736450195
    5. ']_' → logprob: -13.757951736450195
    6. '`]' → logprob: -14.007951736450195
    7. '   ' → logprob: -14.382951736450195
    8. ']==' → logprob: -14.507951736450195
    9. '+]' → logprob: -14.757951736450195
    10. ' _' → logprob: -15.007951736450195

Token 2069: ' !=' (ID: 1666)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4906340539455414
    2. '=' → logprob: -1.8656340837478638
    3. ' !=' → logprob: -1.9906340837478638
    4. '!=' → logprob: -2.740633964538574
    5. '                           ' → logprob: -4.990633964538574
    6. '                               ' → logprob: -5.240633964538574
    7. ' -=' → logprob: -5.365633964538574
    8. ']' → logprob: -6.115633964538574
    9. ' %=' → logprob: -6.240633964538574
    10. ']=' → logprob: -6.490633964538574

Token 2070: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.596781946020201e-05
    2. ' ' → logprob: -10.000045776367188
    3. '                           ' → logprob: -15.625045776367188
    4. '   ' → logprob: -16.500045776367188
    5. '                                   ' → logprob: -17.000045776367188
    6. '                               ' → logprob: -17.250045776367188
    7. '  ' → logprob: -18.125045776367188
    8. '```' → logprob: -18.125045776367188
    9. '                       ' → logprob: -18.375045776367188
    10. '           ' → logprob: -19.000045776367188

Token 2071: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '                           ' → logprob: -18.625
    4. '```' → logprob: -18.75
    5. '   ' → logprob: -19.0
    6. '           ' → logprob: -19.25
    7. '  ' → logprob: -19.375
    8. 'None' → logprob: -20.0
    9. '                                   ' → logprob: -20.375
    10. '                       ' → logprob: -20.4375

Token 2072: ':
' (ID: 734)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.09112474322319031
    2. ':
' → logprob: -2.5911247730255127
    3. ' and' → logprob: -4.966124534606934
    4. '                           ' → logprob: -5.591124534606934
    5. ':' → logprob: -6.966124534606934
    6. '):
' → logprob: -9.216124534606934
    7. ' :
' → logprob: -9.216124534606934
    8. '                       ' → logprob: -9.341124534606934
    9. '                             ' → logprob: -10.466124534606934
    10. '							' → logprob: -10.591124534606934

Token 2073: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.0014812939334660769
    2. '                           ' → logprob: -7.876481056213379
    3. '<|end|>' → logprob: -8.626481056213379
    4. ' ' → logprob: -9.126481056213379
    5. '                                   ' → logprob: -9.251481056213379
    6. ' :' → logprob: -9.376481056213379
    7. ' =' → logprob: -9.626481056213379
    8. '                                ' → logprob: -9.626481056213379
    9. '```' → logprob: -9.876481056213379
    10. '							' → logprob: -9.876481056213379

Token 2074: ' fac' (ID: 3513)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.8128272294998169
    2. ' (' → logprob: -1.437827229499817
    3. '(mat' → logprob: -2.1878271102905273
    4. ' mat' → logprob: -2.1878271102905273
    5. '                           ' → logprob: -2.8128271102905273
    6. '(' → logprob: -4.812827110290527
    7. '                               ' → logprob: -4.812827110290527
    8. '(int' → logprob: -5.437827110290527
    9. 'int' → logprob: -6.187827110290527
    10. ' int' → logprob: -6.312827110290527

Token 2075: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0232741329818964
    2. '=' → logprob: -3.7732741832733154
    3. '   ' → logprob: -11.648274421691895
    4. '=int' → logprob: -12.523274421691895
    5. 's' → logprob: -12.648274421691895
    6. ' ' → logprob: -12.898274421691895
    7. '  ' → logprob: -13.523274421691895
    8. 'or' → logprob: -13.773274421691895
    9. ')' → logprob: -14.023274421691895
    10. '	' → logprob: -14.398274421691895

Token 2076: ' (' (ID: 350)
  Prédit: '(mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mat' → logprob: -0.13113689422607422
    2. ' (' → logprob: -2.131136894226074
    3. '(int' → logprob: -5.631136894226074
    4. 'mat' → logprob: -8.506136894226074
    5. ' mat' → logprob: -8.881136894226074
    6. '(mod' → logprob: -9.006136894226074
    7. '(pow' → logprob: -9.256136894226074
    8. 'int' → logprob: -10.381136894226074
    9. 'pow' → logprob: -12.131136894226074
    10. ' int' → logprob: -12.131136894226074

Token 2077: 'mat' (ID: 8872)
  Prédit: 'mat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.045249830931425095
    2. '(mat' → logprob: -3.1702499389648438
    3. '-m' → logprob: -6.420249938964844
    4. ' mat' → logprob: -8.045249938964844
    5. 'int' → logprob: -8.420249938964844
    6. ' (' → logprob: -10.795249938964844
    7. '(int' → logprob: -10.920249938964844
    8. '	mat' → logprob: -11.295249938964844
    9. '-' → logprob: -11.670249938964844
    10. '-(' → logprob: -12.295249938964844

Token 2078: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.00925482902675867
    2. 'r' → logprob: -4.7592549324035645
    3. '[i' → logprob: -7.3842549324035645
    4. 'i' → logprob: -11.134254455566406
    5. '[' → logprob: -12.759254455566406
    6. ' r' → logprob: -14.259254455566406
    7. '(r' → logprob: -15.009254455566406
    8. '[
' → logprob: -15.634254455566406
    9. '	r' → logprob: -15.759254455566406
    10. '_r' → logprob: -16.134254455566406

Token 2079: '_,' (ID: 14152)
  Prédit: '_,'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_,' → logprob: -0.013394330628216267
    2. '[r' → logprob: -4.513394355773926
    3. ',r' → logprob: -6.638394355773926
    4. 'r' → logprob: -7.763394355773926
    5. '_[' → logprob: -8.513394355773926
    6. '_r' → logprob: -8.513394355773926
    7. ',' → logprob: -8.638394355773926
    8. '_' → logprob: -11.638394355773926
    9. '_,
' → logprob: -12.388394355773926
    10. 's' → logprob: -12.513394355773926

Token 2080: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00017994173686020076
    2. ' i' → logprob: -8.6251802444458
    3. '   ' → logprob: -14.8751802444458
    4. ' ' → logprob: -17.750179290771484
    5. 'r' → logprob: -17.875179290771484
    6. '```' → logprob: -18.500179290771484
    7. '(i' → logprob: -18.625179290771484
    8. '
' → logprob: -18.625179290771484
    9. '	i' → logprob: -18.625179290771484
    10. ',i' → logprob: -18.625179290771484

Token 2081: '_]' (ID: 163385)
  Prédit: '_]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_]' → logprob: -0.015073594637215137
    2. '_' → logprob: -4.265073776245117
    3. ']' → logprob: -7.015073776245117
    4. '`]' → logprob: -12.640073776245117
    5. ']*' → logprob: -13.515073776245117
    6. '   ' → logprob: -13.640073776245117
    7. '_-' → logprob: -13.890073776245117
    8. ' ]' → logprob: -13.890073776245117
    9. '_[' → logprob: -14.015073776245117
    10. '-' → logprob: -14.265073776245117

Token 2082: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0548911988735199
    2. '*' → logprob: -2.9298911094665527
    3. ')' → logprob: -12.054891586303711
    4. ' ' → logprob: -13.304891586303711
    5. '   ' → logprob: -14.679891586303711
    6. ' -' → logprob: -15.054891586303711
    7. '```' → logprob: -15.429891586303711
    8. '-' → logprob: -15.929891586303711
    9. ',' → logprob: -16.30489158630371
    10. '       ' → logprob: -17.42989158630371

Token 2083: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -2.9875325708417222e-05
    2. ' inv' → logprob: -10.875029563903809
    3. '(inv' → logprob: -11.500029563903809
    4. 'pow' → logprob: -15.250029563903809
    5. '   ' → logprob: -15.750029563903809
    6. '           ' → logprob: -16.750030517578125
    7. '                   ' → logprob: -17.000030517578125
    8. '               ' → logprob: -17.125030517578125
    9. 'inverse' → logprob: -17.250030517578125
    10. ' (' → logprob: -17.500030517578125

Token 2084: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007441143970936537
    2. ')%' → logprob: -7.250744342803955
    3. '                   ' → logprob: -11.125743865966797
    4. ' )' → logprob: -11.250743865966797
    5. '                       ' → logprob: -12.625743865966797
    6. '           ' → logprob: -14.250743865966797
    7. '%' → logprob: -14.375743865966797
    8. '                           ' → logprob: -14.500743865966797
    9. ' %' → logprob: -15.125743865966797
    10. '')' → logprob: -15.250743865966797

Token 2085: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.1879976987838745
    2. '%' → logprob: -1.8129976987838745
    3. ')' → logprob: -4.937997817993164
    4. ')%' → logprob: -7.062997817993164
    5. '                       ' → logprob: -9.812997817993164
    6. '                   ' → logprob: -10.187997817993164
    7. '%i' → logprob: -10.187997817993164
    8. '%n' → logprob: -11.437997817993164
    9. '%d' → logprob: -11.562997817993164
    10. '%s' → logprob: -12.062997817993164

Token 2086: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.13523364067077637
    2. 'mat' → logprob: -2.2602336406707764
    3. '(mod' → logprob: -3.8852336406707764
    4. '(mat' → logprob: -7.5102338790893555
    5. ' mod' → logprob: -7.7602338790893555
    6. 'pow' → logprob: -8.135233879089355
    7. 'int' → logprob: -8.885233879089355
    8. '(int' → logprob: -9.510233879089355
    9. ' mat' → logprob: -9.760233879089355
    10. 'MOD' → logprob: -10.260233879089355

Token 2087: '
' (ID: 198)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.014086281880736351
    2. '                       ' → logprob: -5.0140862464904785
    3. '
' → logprob: -6.0140862464904785
    4. '                   ' → logprob: -6.7640862464904785
    5. '                           ' → logprob: -6.7640862464904785
    6. '                                   ' → logprob: -7.5140862464904785
    7. '                                
' → logprob: -7.7640862464904785
    8. ')' → logprob: -8.014086723327637
    9. '```' → logprob: -8.514086723327637
    10. '               ' → logprob: -8.889086723327637

Token 2088: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.0013065485982224345
    2. '```' → logprob: -7.376306533813477
    3. '                                   ' → logprob: -8.001306533813477
    4. '                           ' → logprob: -9.126306533813477
    5. '                                
' → logprob: -9.251306533813477
    6. '                                ' → logprob: -10.751306533813477
    7. '							' → logprob: -10.876306533813477
    8. '                   ' → logprob: -11.001306533813477
    9. '                       ' → logprob: -11.251306533813477
    10. '``' → logprob: -11.501306533813477

Token 2089: ' mat' (ID: 2450)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6967830657958984
    2. ' for' → logprob: -1.1967830657958984
    3. '                               ' → logprob: -1.8217830657958984
    4. 'mat' (adapté à ' mat') → logprob: -3.8217830657958984
    5. '                                   ' → logprob: -4.946783065795898
    6. '```' → logprob: -5.071783065795898
    7. '                           ' → logprob: -7.071783065795898
    8. ' mat' → logprob: -7.446783065795898
    9. '``' → logprob: -8.946783065795898
    10. '                                       ' → logprob: -9.071783065795898

Token 2090: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.00035143180866725743
    2. 'r' → logprob: -8.375351905822754
    3. '[i' → logprob: -9.125351905822754
    4. '[' → logprob: -12.000351905822754
    5. '[[' → logprob: -12.625351905822754
    6. '[
' → logprob: -14.000351905822754
    7. '(r' → logprob: -14.500351905822754
    8. '```' → logprob: -15.500351905822754
    9. '[row' → logprob: -15.750351905822754
    10. 'i' → logprob: -15.750351905822754

Token 2091: '_,' (ID: 14152)
  Prédit: '_,'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_,' → logprob: -0.0004533142491709441
    2. '[r' → logprob: -8.750452995300293
    3. '_' → logprob: -9.125452995300293
    4. ',' → logprob: -9.125452995300293
    5. '_[' → logprob: -10.000452995300293
    6. ',r' → logprob: -10.625452995300293
    7. '_,
' → logprob: -12.375452995300293
    8. '__,' → logprob: -13.875452995300293
    9. ',[' → logprob: -14.750452995300293
    10. '_r' → logprob: -14.750452995300293

Token 2092: ' i' (ID: 575)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.009005816653370857
    2. 'i' → logprob: -4.759006023406982
    3. ' r' → logprob: -8.134005546569824
    4. '   ' → logprob: -10.259005546569824
    5. 'range' → logprob: -11.009005546569824
    6. '(r' → logprob: -11.009005546569824
    7. '[r' → logprob: -11.384005546569824
    8. ' i' → logprob: -11.759005546569824
    9. '(i' → logprob: -13.009005546569824
    10. '0' → logprob: -13.134005546569824

Token 2093: '_]' (ID: 163385)
  Prédit: '_]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_]' → logprob: -0.003562892321497202
    2. '_' → logprob: -5.753562927246094
    3. ']' → logprob: -7.878562927246094
    4. ' ]' → logprob: -13.753562927246094
    5. '`]' → logprob: -13.878562927246094
    6. '-' → logprob: -13.878562927246094
    7. '   ' → logprob: -14.003562927246094
    8. '_
' → logprob: -14.503562927246094
    9. '_=' → logprob: -14.753562927246094
    10. '_-' → logprob: -15.128562927246094

Token 2094: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04314146190881729
    2. ' =' → logprob: -3.9181413650512695
    3. '-=' → logprob: -4.1681413650512695
    4. ' -=' → logprob: -5.2931413650512695
    5. ']' → logprob: -6.7931413650512695
    6. '-' → logprob: -7.9181413650512695
    7. ']=' → logprob: -9.16814136505127
    8. '           ' → logprob: -9.54314136505127
    9. ' -' → logprob: -10.16814136505127
    10. '       ' → logprob: -10.16814136505127

Token 2095: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.5
    3. '   ' → logprob: -22.5
    4. '۰' → logprob: -23.875
    5. '                           ' → logprob: -25.0
    6. '                                   ' → logprob: -25.0
    7. '  ' → logprob: -25.25
    8. '00' → logprob: -25.625
    9. '(' → logprob: -25.75
    10. '                               ' → logprob: -25.875

Token 2096: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '(' → logprob: -19.625
    4. '000' → logprob: -21.125
    5. '00' → logprob: -21.125
    6. '۰' → logprob: -21.625
    7. '   ' → logprob: -21.875
    8. '  ' → logprob: -23.3125
    9. '=' → logprob: -24.0
    10. '０' → logprob: -24.125

Token 2097: '
' (ID: 198)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.0016495913732796907
    2. '
' → logprob: -7.376649379730225
    3. '                                
' → logprob: -8.376649856567383
    4. '                           ' → logprob: -8.626649856567383
    5. '							' → logprob: -8.876649856567383
    6. '                                   ' → logprob: -9.376649856567383
    7. '\n' → logprob: -9.626649856567383
    8. '                                ' → logprob: -9.751649856567383
    9. ' 
' → logprob: -10.126649856567383
    10. '                   ' → logprob: -10.376649856567383

Token 2098: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.001463692169636488
    2. '```' → logprob: -6.626463890075684
    3. '                                
' → logprob: -9.876463890075684
    4. '                                ' → logprob: -11.001463890075684
    5. '                           ' → logprob: -11.251463890075684
    6. '<|end|>' → logprob: -11.376463890075684
    7. '							' → logprob: -11.501463890075684
    8. ' for' → logprob: -11.626463890075684
    9. '                                   ' → logprob: -12.251463890075684
    10. '
' → logprob: -12.501463890075684

Token 2099: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.41101008653640747
    2. ' for' → logprob: -1.7860100269317627
    3. '                               ' → logprob: -2.6610100269317627
    4. '                           ' → logprob: -2.7860100269317627
    5. '```' → logprob: -3.5360100269317627
    6. 'mat' → logprob: -5.661010265350342
    7. '                                   ' → logprob: -6.661010265350342
    8. '               ' → logprob: -7.161010265350342
    9. '                       ' → logprob: -7.286010265350342
    10. '``' → logprob: -7.536010265350342

Token 2100: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.021355684846639633
    2. 'k' → logprob: -4.646355628967285
    3. ' c' → logprob: -4.896355628967285
    4. 'j' → logprob: -6.146355628967285
    5. 'i' → logprob: -7.146355628967285
    6. 'r' → logprob: -7.396355628967285
    7. 'col' → logprob: -8.021355628967285
    8. 'token' → logprob: -9.771355628967285
    9. ' k' → logprob: -10.146355628967285
    10. ' j' → logprob: -10.646355628967285

Token 2101: '_' (ID: 62)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12164075672626495
    2. 'in' → logprob: -2.496640682220459
    3. 'i' → logprob: -4.496640682220459
    4. 'c' → logprob: -4.746640682220459
    5. ',' → logprob: -5.496640682220459
    6. ' i' → logprob: -5.746640682220459
    7. ' c' → logprob: -6.871640682220459
    8. '_' → logprob: -6.996640682220459
    9. '   ' → logprob: -7.371640682220459
    10. ' ' → logprob: -7.621640682220459

Token 2102: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.15227770805358887
    2. 'in' → logprob: -2.027277708053589
    3. 'c' → logprob: -4.902277946472168
    4. '_' → logprob: -6.902277946472168
    5. 'i' → logprob: -8.152277946472168
    6. ' c' → logprob: -8.402277946472168
    7. '   ' → logprob: -8.652277946472168
    8. ',' → logprob: -8.777277946472168
    9. ',c' → logprob: -9.902277946472168
    10. ' i' → logprob: -10.277277946472168

Token 2103: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009115827269852161
    2. ' range' → logprob: -7.000911712646484
    3. '   ' → logprob: -15.750911712646484
    4. '(range' → logprob: -17.500911712646484
    5. ' ' → logprob: -18.000911712646484
    6. 'i' → logprob: -18.125911712646484
    7. '  ' → logprob: -18.375911712646484
    8. '    ' → logprob: -20.000911712646484
    9. '(i' → logprob: -20.750911712646484
    10. '	range' → logprob: -20.750911712646484

Token 2104: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.577876627445221
    2. 'i' → logprob: -0.827876627445221
    3. 'c' → logprob: -6.577876567840576
    4. ' i' → logprob: -8.577877044677734
    5. '(c' → logprob: -8.827877044677734
    6. '                                   ' → logprob: -9.827877044677734
    7. ' (' → logprob: -9.952877044677734
    8. '                               ' → logprob: -9.952877044677734
    9. '   ' → logprob: -11.202877044677734
    10. '                                       ' → logprob: -11.327877044677734

Token 2105: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.009835069999098778
    2. '+' → logprob: -4.634835243225098
    3. '_,' → logprob: -9.884835243225098
    4. ' +' → logprob: -11.259835243225098
    5. '_
' → logprob: -11.634835243225098
    6. '```' → logprob: -13.259835243225098
    7. '_-' → logprob: -14.009835243225098
    8. '   ' → logprob: -14.259835243225098
    9. '_=' → logprob: -14.384835243225098
    10. '_^(' → logprob: -15.009835243225098

Token 2106: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0007472136639989913
    2. ' +' → logprob: -7.250747203826904
    3. '_' → logprob: -10.500747680664062
    4. '+i' → logprob: -12.625747680664062
    5. '                               ' → logprob: -13.750747680664062
    6. '                                   ' → logprob: -13.875747680664062
    7. '   ' → logprob: -14.250747680664062
    8. ']+' → logprob: -14.625747680664062
    9. '()+' → logprob: -14.750747680664062
    10. '                                       ' → logprob: -15.000747680664062

Token 2107: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001040552044287324
    2. '+' → logprob: -6.876040458679199
    3. ' +' → logprob: -13.1260404586792
    4. '```' → logprob: -13.1260404586792
    5. 'i' → logprob: -13.3760404586792
    6. ' ' → logprob: -13.8760404586792
    7. '   ' → logprob: -14.8760404586792
    8. '(i' → logprob: -15.5010404586792
    9. '
' → logprob: -16.188541412353516
    10. 'c' → logprob: -16.376041412353516

Token 2108: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013532141456380486
    2. '+' → logprob: -6.7513532638549805
    3. ',c' → logprob: -9.12635326385498
    4. ' ,' → logprob: -11.12635326385498
    5. ',n' → logprob: -11.12635326385498
    6. '                               ' → logprob: -11.75135326385498
    7. ',i' → logprob: -11.87635326385498
    8. '```' → logprob: -11.87635326385498
    9. ' +' → logprob: -12.00135326385498
    10. 'c' → logprob: -12.75135326385498

Token 2109: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07035073637962341
    2. 'c' → logprob: -2.6953506469726562
    3. 'i' → logprob: -8.070350646972656
    4. ' n' → logprob: -9.945350646972656
    5. '   ' → logprob: -11.070350646972656
    6. 'k' → logprob: -11.320350646972656
    7. ' c' → logprob: -11.695350646972656
    8. 'mat' → logprob: -12.695350646972656
    9. '
' → logprob: -13.195350646972656
    10. '                               ' → logprob: -13.320350646972656

Token 2110: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13062725961208344
    2. ',c' → logprob: -2.255627155303955
    3. 'c' → logprob: -4.630627155303955
    4. '+' → logprob: -5.255627155303955
    5. '):
' → logprob: -6.505627155303955
    6. ',i' → logprob: -8.130627632141113
    7. '```' → logprob: -8.505627632141113
    8. '                               ' → logprob: -9.380627632141113
    9. '                   ' → logprob: -9.505627632141113
    10. '):' → logprob: -9.755627632141113

Token 2111: '                                   ' (ID: 3523)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.3720448613166809
    2. '                                   ' → logprob: -1.6220448017120361
    3. '```' → logprob: -3.122044801712036
    4. '                           ' → logprob: -3.747044801712036
    5. '                                       ' → logprob: -4.372045040130615
    6. '(mat' → logprob: -5.122045040130615
    7. ' c' → logprob: -5.497045040130615
    8. '                   ' → logprob: -5.497045040130615
    9. '                                           ' → logprob: -5.747045040130615
    10. '                       ' → logprob: -5.997045040130615

Token 2112: ' mat' (ID: 2450)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mat' (adapté à ' mat') → logprob: -0.5226359367370605
    2. ' mat' → logprob: -1.2726359367370605
    3. '                               ' → logprob: -3.3976359367370605
    4. '                           ' → logprob: -3.6476359367370605
    5. '                                   ' → logprob: -3.8976359367370605
    6. ' c' → logprob: -4.0226359367370605
    7. '(mat' → logprob: -5.2726359367370605
    8. '                                       ' → logprob: -5.5226359367370605
    9. '                   ' → logprob: -5.6476359367370605
    10. '                       ' → logprob: -5.8976359367370605

Token 2113: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -2.7014437364414334e-05
    2. '[i' → logprob: -10.62502670288086
    3. '[c' → logprob: -13.50002670288086
    4. '[' → logprob: -14.12502670288086
    5. '[row' → logprob: -16.12502670288086
    6. '[[' → logprob: -16.12502670288086
    7. 'r' → logprob: -16.62502670288086
    8. ' [' → logprob: -16.75002670288086
    9. '[
' → logprob: -16.87502670288086
    10. '```' → logprob: -16.87502670288086

Token 2114: '_,' (ID: 14152)
  Prédit: '_,'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_,' → logprob: -0.00015359772078227252
    2. ',' → logprob: -9.750153541564941
    3. '_' → logprob: -9.750153541564941
    4. '_,
' → logprob: -11.375153541564941
    5. '_[' → logprob: -11.500153541564941
    6. ',r' → logprob: -11.625153541564941
    7. '[r' → logprob: -13.500153541564941
    8. ',_' → logprob: -13.875153541564941
    9. '_
' → logprob: -14.000153541564941
    10. '_
' → logprob: -14.250153541564941

Token 2115: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.0564331205387134e-05
    2. ' c' → logprob: -11.50001049041748
    3. '   ' → logprob: -15.62501049041748
    4. 'r' → logprob: -15.87501049041748
    5. '[c' → logprob: -16.875011444091797
    6. '```' → logprob: -17.250011444091797
    7. '
' → logprob: -17.625011444091797
    8. '	c' → logprob: -17.875011444091797
    9. '_c' → logprob: -18.125011444091797
    10. '
' → logprob: -18.375011444091797

Token 2116: '_]' (ID: 163385)
  Prédit: '_]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_]' → logprob: -0.12813173234462738
    2. '_' → logprob: -2.128131628036499
    3. '_,' → logprob: -7.003131866455078
    4. ']' → logprob: -8.628131866455078
    5. '_
' → logprob: -9.878131866455078
    6. ',' → logprob: -11.003131866455078
    7. '_
' → logprob: -11.003131866455078
    8. '_,
' → logprob: -11.878131866455078
    9. '+' → logprob: -12.253131866455078
    10. '```' → logprob: -12.628131866455078

Token 2117: ' =' (ID: 314)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.7516242861747742
    2. '=' → logprob: -1.126624345779419
    3. '-' → logprob: -1.751624345779419
    4. '[' → logprob: -4.12662410736084
    5. '[c' → logprob: -5.12662410736084
    6. '```' → logprob: -5.75162410736084
    7. ' -=' → logprob: -6.12662410736084
    8. ']' → logprob: -6.62662410736084
    9. '                               ' → logprob: -8.12662410736084
    10. '[r' → logprob: -8.25162410736084

Token 2118: ' (' (ID: 350)
  Prédit: '(mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mat' → logprob: -0.006220401730388403
    2. ' (' → logprob: -5.25622034072876
    3. '(' → logprob: -7.50622034072876
    4. '(int' → logprob: -8.631220817565918
    5. '(mod' → logprob: -8.756220817565918
    6. '(m' → logprob: -10.381220817565918
    7. '(Mat' → logprob: -10.631220817565918
    8. '           ' → logprob: -11.506220817565918
    9. '(M' → logprob: -12.131220817565918
    10. '(ma' → logprob: -12.756220817565918

Token 2119: 'mat' (ID: 8872)
  Prédit: '(mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mat' → logprob: -0.002816766733303666
    2. 'mat' → logprob: -5.877816677093506
    3. ' (' → logprob: -12.127817153930664
    4. '(' → logprob: -13.252817153930664
    5. ' mat' → logprob: -13.377817153930664
    6. '(mod' → logprob: -13.627817153930664
    7. '	mat' → logprob: -14.127817153930664
    8. '           ' → logprob: -15.002817153930664
    9. '(m' → logprob: -15.502817153930664
    10. '   ' → logprob: -15.502817153930664

Token 2120: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -4.596781946020201e-05
    2. 'r' → logprob: -10.000045776367188
    3. '(r' → logprob: -15.000045776367188
    4. '	r' → logprob: -16.375045776367188
    5. '[' → logprob: -17.000045776367188
    6. ',r' → logprob: -17.375045776367188
    7. ' r' → logprob: -18.000045776367188
    8. '[
' → logprob: -18.625045776367188
    9. '   ' → logprob: -19.000045776367188
    10. '=r' → logprob: -19.500045776367188

Token 2121: '_,' (ID: 14152)
  Prédit: '_,'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_,' → logprob: -0.0008621498709544539
    2. ',r' → logprob: -7.625862121582031
    3. ',' → logprob: -8.625862121582031
    4. '[r' → logprob: -9.875862121582031
    5. '_[' → logprob: -10.000862121582031
    6. '_' → logprob: -10.125862121582031
    7. ',[' → logprob: -10.875862121582031
    8. 'r' → logprob: -11.625862121582031
    9. '_,
' → logprob: -11.750862121582031
    10. '+,' → logprob: -12.000862121582031

Token 2122: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00016742534353397787
    2. ' c' → logprob: -8.750167846679688
    3. '   ' → logprob: -12.000167846679688
    4. 'i' → logprob: -13.625167846679688
    5. '(c' → logprob: -14.625167846679688
    6. '```' → logprob: -15.125167846679688
    7. '[c' → logprob: -15.125167846679688
    8. '
' → logprob: -16.125167846679688
    9. ' ' → logprob: -16.125167846679688
    10. '	c' → logprob: -16.750167846679688

Token 2123: '_]' (ID: 163385)
  Prédit: '_]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_]' → logprob: -0.09323830157518387
    2. '_' → logprob: -2.843238353729248
    3. '+' → logprob: -3.718238353729248
    4. ']' → logprob: -5.343238353729248
    5. '+]' → logprob: -6.843238353729248
    6. ']+' → logprob: -8.09323787689209
    7. '_)' → logprob: -9.71823787689209
    8. ' +' → logprob: -9.71823787689209
    9. '-' → logprob: -10.34323787689209
    10. '_-' → logprob: -10.34323787689209

Token 2124: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.13031338155269623
    2. '-' → logprob: -2.1303133964538574
    3. ' *' → logprob: -6.380313396453857
    4. '*' → logprob: -6.630313396453857
    5. '+' → logprob: -9.3803129196167
    6. '[i' → logprob: -9.7553129196167
    7. '-c' → logprob: -10.3803129196167
    8. ')' → logprob: -10.5053129196167
    9. '[' → logprob: -10.5053129196167
    10. '                                   ' → logprob: -10.7553129196167

Token 2125: ' fac' (ID: 3513)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.3434276580810547
    2. '(mat' → logprob: -1.3434276580810547
    3. 'fac' → logprob: -3.5934276580810547
    4. ' mat' → logprob: -6.968427658081055
    5. ' (' → logprob: -7.218427658081055
    6. ' fac' → logprob: -7.968427658081055
    7. '   ' → logprob: -9.718427658081055
    8. '(f' → logprob: -10.218427658081055
    9. '           ' → logprob: -10.468427658081055
    10. '(' → logprob: -10.968427658081055

Token 2126: ' *' (ID: 425)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.0675051212310791
    2. '[r' → logprob: -3.192505121231079
    3. '[i' → logprob: -4.0675048828125
    4. ' *' → logprob: -6.0675048828125
    5. '[' → logprob: -6.3175048828125
    6. ')' → logprob: -6.5675048828125
    7. '*' → logprob: -7.4425048828125
    8. '[col' → logprob: -8.1925048828125
    9. '[:,' → logprob: -8.5675048828125
    10. '[row' → logprob: -8.8175048828125

Token 2127: ' mat' (ID: 2450)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mat' → logprob: -1.1472419600977446e-06
    2. ' mat' → logprob: -13.750000953674316
    3. '(mat' → logprob: -17.500001907348633
    4. '	mat' → logprob: -20.625001907348633
    5. '           ' → logprob: -20.750001907348633
    6. '                           ' → logprob: -20.875001907348633
    7. 'int' → logprob: -21.125001907348633
    8. '               ' → logprob: -21.625001907348633
    9. '                   ' → logprob: -21.625001907348633
    10. '   ' → logprob: -22.250001907348633

Token 2128: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0013411965919658542
    2. 'i' → logprob: -6.876341342926025
    3. '[r' → logprob: -8.376340866088867
    4. '[' → logprob: -10.126340866088867
    5. '[c' → logprob: -11.001340866088867
    6. '[
' → logprob: -12.251340866088867
    7. ',i' → logprob: -12.376340866088867
    8. ' i' → logprob: -13.251340866088867
    9. 'r' → logprob: -13.376340866088867
    10. '   ' → logprob: -13.876340866088867

Token 2129: '_,' (ID: 14152)
  Prédit: '_,'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_,' → logprob: -0.000284696085145697
    2. ',' → logprob: -8.500285148620605
    3. '_' → logprob: -9.625285148620605
    4. '_,
' → logprob: -11.625285148620605
    5. ',i' → logprob: -12.500285148620605
    6. '_[' → logprob: -14.375285148620605
    7. '+,' → logprob: -14.625285148620605
    8. ',c' → logprob: -14.750285148620605
    9. '__,' → logprob: -15.250285148620605
    10. ',_' → logprob: -15.375285148620605

Token 2130: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -9.13388703338569e-06
    2. ' c' → logprob: -11.625009536743164
    3. '   ' → logprob: -16.125009536743164
    4. ',c' → logprob: -17.500009536743164
    5. '	c' → logprob: -17.875009536743164
    6. ')c' → logprob: -18.625009536743164
    7. '
' → logprob: -18.875009536743164
    8. '[c' → logprob: -19.125009536743164
    9. '_c' → logprob: -19.250009536743164
    10. '```' → logprob: -19.375009536743164

Token 2131: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03543463721871376
    2. '_]' → logprob: -4.035434722900391
    3. '])' → logprob: -4.160434722900391
    4. ']' → logprob: -6.535434722900391
    5. '_)' → logprob: -10.16043472290039
    6. ''])' → logprob: -11.03543472290039
    7. '__' → logprob: -12.16043472290039
    8. '#' → logprob: -12.28543472290039
    9. '   ' → logprob: -12.41043472290039
    10. 'c' → logprob: -13.03543472290039

Token 2132: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00081796565791592
    2. ')' → logprob: -7.750817775726318
    3. ']' → logprob: -8.250818252563477
    4. '%' → logprob: -10.125818252563477
    5. ''])' → logprob: -10.875818252563477
    6. '```' → logprob: -11.625818252563477
    7. '_' → logprob: -11.750818252563477
    8. '   ' → logprob: -11.750818252563477
    9. 's' → logprob: -11.750818252563477
    10. '))' → logprob: -12.125818252563477

Token 2133: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.843955934047699
    2. ')' → logprob: -0.968955934047699
    3. ' %' → logprob: -1.8439559936523438
    4. ')%' → logprob: -3.4689559936523438
    5. '%c' → logprob: -7.093955993652344
    6. ' )' → logprob: -9.468955993652344
    7. '%n' → logprob: -9.718955993652344
    8. '%i' → logprob: -10.218955993652344
    9. ' %=' → logprob: -10.468955993652344
    10. ']%' → logprob: -10.593955993652344

Token 2134: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -2.45848218582978e-06
    2. ' mod' → logprob: -13.25000286102295
    3. '(mod' → logprob: -14.37500286102295
    4. 'MOD' → logprob: -16.375001907348633
    5. '	mod' → logprob: -19.500001907348633
    6. 'c' → logprob: -19.875001907348633
    7. 'mat' → logprob: -21.750001907348633
    8. '_mod' → logprob: -22.125001907348633
    9. 'm' → logprob: -22.875001907348633
    10. 'mods' → logprob: -23.375001907348633

Token 2135: '
' (ID: 198)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                               ' → logprob: -1.2397578954696655
    2. '               ' → logprob: -1.3647578954696655
    3. ')' → logprob: -1.6147578954696655
    4. '                           ' → logprob: -2.864758014678955
    5. '<|end|>' → logprob: -2.989758014678955
    6. '                       ' → logprob: -3.364758014678955
    7. '```' → logprob: -3.614758014678955
    8. '           ' → logprob: -3.739758014678955
    9. '                                   ' → logprob: -3.739758014678955
    10. '                   ' → logprob: -4.364758014678955

Token 2136: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12839733064174652
    2. '                               ' → logprob: -2.753397226333618
    3. '                   ' → logprob: -3.753397226333618
    4. '           ' → logprob: -4.378397464752197
    5. '                           ' → logprob: -4.753397464752197
    6. '                       ' → logprob: -5.503397464752197
    7. '       ' → logprob: -5.503397464752197
    8. '                                   ' → logprob: -6.128397464752197
    9. '                                       ' → logprob: -7.378397464752197
    10. ')' → logprob: -7.878397464752197

Token 2137: ' return' (ID: 622)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.09215576946735382
    2. '               ' → logprob: -2.592155694961548
    3. '           ' → logprob: -4.717155933380127
    4. '                       ' → logprob: -6.342155933380127
    5. '       ' → logprob: -6.592155933380127
    6. '                           ' → logprob: -7.842155933380127
    7. '                               ' → logprob: -7.967155933380127
    8. 'i' → logprob: -8.842155456542969
    9. '```' → logprob: -9.717155456542969
    10. '                                   ' → logprob: -10.092155456542969

Token 2138: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0011703446507453918
    2. ' res' → logprob: -6.7511701583862305
    3. '(res' → logprob: -16.751171112060547
    4. 'result' → logprob: -18.501171112060547
    5. '   ' → logprob: -18.876171112060547
    6. ' ' → logprob: -19.876171112060547
    7. 'ans' → logprob: -20.251171112060547
    8. '	res' → logprob: -20.876171112060547
    9. 'int' → logprob: -21.251171112060547
    10. ' (' → logprob: -21.626171112060547

Token 2139: ' %' (ID: 1851)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09772223979234695
    2. '
' → logprob: -2.597722291946411
    3. '<|end|>' → logprob: -4.597722053527832
    4. '<|end|>' → logprob: -5.847722053527832
    5. '                
' → logprob: -6.097722053527832
    6. '  
' → logprob: -6.972722053527832
    7. '    
' → logprob: -7.347722053527832
    8. '           ' → logprob: -7.972722053527832
    9. '```' → logprob: -8.222722053527832
    10. '                   ' → logprob: -8.347722053527832

Token 2140: ' mod' (ID: 1812)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0003418991982471198
    2. 'mod' → logprob: -8.00034236907959
    3. ' MOD' → logprob: -12.00034236907959
    4. '(mod' → logprob: -15.50034236907959
    5. '100' → logprob: -17.500341415405273
    6. '_MOD' → logprob: -18.000341415405273
    7. 'Mod' → logprob: -19.125341415405273
    8. '.MOD' → logprob: -19.875341415405273
    9. 'MO' → logprob: -21.000341415405273
    10. '   ' → logprob: -21.000341415405273

Token 2141: '

' (ID: 279)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005060837138444185
    2. '
' → logprob: -6.13006067276001
    3. '                
' → logprob: -6.13006067276001
    4. '           ' → logprob: -8.755061149597168
    5. '<|end|>' → logprob: -9.130061149597168
    6. '  
' → logprob: -9.505061149597168
    7. '                   ' → logprob: -9.505061149597168
    8. '    
' → logprob: -9.755061149597168
    9. '       ' → logprob: -9.880061149597168
    10. '        
' → logprob: -10.255061149597168

Token 2142: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02456052228808403
    2. '           ' → logprob: -3.7745604515075684
    3. '                   ' → logprob: -7.274560451507568
    4. '       ' → logprob: -7.649560451507568
    5. '```' → logprob: -10.274560928344727
    6. '                
' → logprob: -10.649560928344727
    7. '   ' → logprob: -11.024560928344727
    8. 'i' → logprob: -11.399560928344727
    9. '                ' → logprob: -11.649560928344727
    10. '            
' → logprob: -11.899560928344727

Token 2143: ' count' (ID: 3605)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0011239065788686275
    2. '                   ' → logprob: -7.626123905181885
    3. 'res' → logprob: -8.501124382019043
    4. 'result' → logprob: -8.876124382019043
    5. '       ' → logprob: -9.501124382019043
    6. ' res' → logprob: -9.626124382019043
    7. '           ' → logprob: -9.751124382019043
    8. 'i' → logprob: -10.751124382019043
    9. 'ans' → logprob: -11.376124382019043
    10. '   ' → logprob: -11.626124382019043

Token 2144: ' =' (ID: 314)
  Prédit: '_m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.16930508613586426
    2. '_mod' → logprob: -2.7943050861358643
    3. ' =' → logprob: -2.9193050861358643
    4. '_' → logprob: -3.9193050861358643
    5. '=' → logprob: -4.169304847717285
    6. '_count' → logprob: -5.919304847717285
    7. '=_' → logprob: -7.169304847717285
    8. ')' → logprob: -7.544304847717285
    9. '=count' → logprob: -8.169304847717285
    10. '_result' → logprob: -8.919304847717285

Token 2145: ' determinant' (ID: 174922)
  Prédit: 'det'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'det' → logprob: -3.650518920039758e-06
    2. ' determinant' → logprob: -12.750003814697266
    3. 'determ' → logprob: -15.000003814697266
    4. '(det' → logprob: -15.375003814697266
    5. '   ' → logprob: -16.875003814697266
    6. '           ' → logprob: -17.000003814697266
    7. '               ' → logprob: -17.125003814697266
    8. '                   ' → logprob: -18.000003814697266
    9. 'count' → logprob: -19.000003814697266
    10. '       ' → logprob: -19.125003814697266

Token 2146: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -7.3458322731312364e-06
    2. '```' → logprob: -12.750007629394531
    3. '_MOD' → logprob: -13.750007629394531
    4. '`' → logprob: -14.375007629394531
    5. '_' → logprob: -14.750007629394531
    6. 'Mod' → logprob: -14.875007629394531
    7. '_Mod' → logprob: -15.125007629394531
    8. 'mod' → logprob: -15.125007629394531
    9. '(_' → logprob: -15.750007629394531
    10. ''_' → logprob: -15.750007629394531

Token 2147: '(mat' (ID: 83002)
  Prédit: '(mat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mat' → logprob: -1.9743012671824545e-05
    2. '(mod' → logprob: -11.250020027160645
    3. ' (' → logprob: -12.375020027160645
    4. '(matrix' → logprob: -14.500020027160645
    5. ' mat' → logprob: -14.625020027160645
    6. 'mat' → logprob: -14.625020027160645
    7. '(np' → logprob: -15.250020027160645
    8. '(' → logprob: -15.375020027160645
    9. '(Mat' → logprob: -15.375020027160645
    10. '_mat' → logprob: -15.750020027160645

Token 2148: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024120506714098155
    2. '               ' → logprob: -8.50024127960205
    3. '(mat' → logprob: -11.00024127960205
    4. ' ,' → logprob: -11.12524127960205
    5. '           ' → logprob: -13.75024127960205
    6. ',
' → logprob: -14.00024127960205
    7. '                   ' → logprob: -14.50024127960205
    8. ',m' → logprob: -14.87524127960205
    9. ')' → logprob: -14.87524127960205
    10. ',len' → logprob: -15.00024127960205

Token 2149: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -8.180258191714529e-06
    2. ' MOD' → logprob: -11.750008583068848
    3. '100' → logprob: -15.500008583068848
    4. '                   ' → logprob: -18.87500762939453
    5. '               ' → logprob: -19.12500762939453
    6. '_MOD' → logprob: -19.25000762939453
    7. '.MOD' → logprob: -19.62500762939453
    8. '   ' → logprob: -22.75000762939453
    9. 'mod' → logprob: -23.12500762939453
    10. '(Mod' → logprob: -23.75000762939453

Token 2150: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0053107235580682755
    2. '               ' → logprob: -5.255310535430908
    3. '<|end|>' → logprob: -10.130311012268066
    4. ')
' → logprob: -11.255311012268066
    5. '<|end|>' → logprob: -11.880311012268066
    6. '           ' → logprob: -12.880311012268066
    7. ' )' → logprob: -13.505311012268066
    8. ')*' → logprob: -13.630311012268066
    9. ')\
' → logprob: -13.630311012268066
    10. ')#' → logprob: -13.880311012268066

Token 2151: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008999200537800789
    2. '```' → logprob: -6.008999347686768
    3. '           ' → logprob: -6.133999347686768
    4. '                   ' → logprob: -6.633999347686768
    5. '                
' → logprob: -7.133999347686768
    6. '
' → logprob: -7.258999347686768
    7. ')' → logprob: -7.633999347686768
    8. '       ' → logprob: -8.63399887084961
    9. 'i' → logprob: -8.75899887084961
    10. ' i' → logprob: -8.88399887084961

Token 2152: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3554416000843048
    2. 'for' → logprob: -1.4804415702819824
    3. 'uf' → logprob: -2.9804415702819824
    4. ' for' → logprob: -4.480441570281982
    5. '
' → logprob: -5.480441570281982
    6. 'ans' → logprob: -5.730441570281982
    7. '           ' → logprob: -6.980441570281982
    8. '                
' → logprob: -7.980441570281982
    9. '```' → logprob: -8.73044204711914
    10. 'res' → logprob: -8.73044204711914

Token 2153: ' Mult' (ID: 15431)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07852937281131744
    2. '               ' → logprob: -2.8285293579101562
    3. ' for' → logprob: -4.703529357910156
    4. '#' → logprob: -5.453529357910156
    5. 'uf' → logprob: -5.953529357910156
    6. '
' → logprob: -8.578529357910156
    7. '           ' → logprob: -9.203529357910156
    8. '       ' → logprob: -9.828529357910156
    9. 'ans' → logprob: -10.078529357910156
    10. '                
' → logprob: -11.203529357910156

Token 2154: 'iplier' (ID: 30777)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0156868696212769
    2. 'ip' → logprob: -1.8906868696212769
    3. '           ' → logprob: -1.8906868696212769
    4. '               ' → logprob: -2.3906869888305664
    5. '*=' → logprob: -2.5156869888305664
    6. '                   ' → logprob: -2.7656869888305664
    7. 'ipl' → logprob: -2.7656869888305664
    8. '              ' → logprob: -5.140686988830566
    9. 'iplier' → logprob: -5.265686988830566
    10. ' *=' → logprob: -5.515686988830566

Token 2155: ' le' (ID: 505)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.17775458097457886
    2. 'res' → logprob: -2.4277546405792236
    3. ' ans' → logprob: -2.9277546405792236
    4. '(ans' → logprob: -4.0527544021606445
    5. ' res' → logprob: -5.6777544021606445
    6. '               ' → logprob: -9.552754402160645
    7. '(res' → logprob: -9.552754402160645
    8. 'count' → logprob: -9.677754402160645
    9. '                   ' → logprob: -9.802754402160645
    10. '(' → logprob: -11.552754402160645

Token 2156: ' résultat' (ID: 62556)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.009470131248235703
    2. ' ans' → logprob: -5.259469985961914
    3. 'res' → logprob: -5.509469985961914
    4. 'count' → logprob: -9.134469985961914
    5. ' res' → logprob: -10.009469985961914
    6. 'result' → logprob: -11.384469985961914
    7. '(ans' → logprob: -11.759469985961914
    8. 'answer' → logprob: -12.134469985961914
    9. ' count' → logprob: -14.134469985961914
    10. '_ans' → logprob: -14.509469985961914

Token 2157: ' courant' (ID: 74694)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5961857438087463
    2. '*=' → logprob: -0.9711857438087463
    3. ' *=' → logprob: -3.7211856842041016
    4. ' =' → logprob: -3.9711856842041016
    5. 'ans' → logprob: -4.596185684204102
    6. 'res' → logprob: -5.221185684204102
    7. '```' → logprob: -5.221185684204102
    8. '                   ' → logprob: -6.596185684204102
    9. '*' → logprob: -6.596185684204102
    10. '   ' → logprob: -6.971185684204102

Token 2158: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5859057307243347
    2. 'ans' → logprob: -2.0859057903289795
    3. 'res' → logprob: -2.3359057903289795
    4. '=' → logprob: -2.9609057903289795
    5. '                   ' → logprob: -3.2109057903289795
    6. '           ' → logprob: -3.4609057903289795
    7. ' *=' → logprob: -3.5859057903289795
    8. '*=' → logprob: -3.5859057903289795
    9. ' =' → logprob: -3.8359057903289795
    10. '```' → logprob: -4.4609055519104

Token 2159: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1951856017112732
    2. '*' → logprob: -2.320185661315918
    3. 'res' → logprob: -3.570185661315918
    4. ' ans' → logprob: -4.070185661315918
    5. ' res' → logprob: -4.445185661315918
    6. 'ans' → logprob: -4.820185661315918
    7. '           ' → logprob: -4.820185661315918
    8. ' *' → logprob: -6.070185661315918
    9. '                   ' → logprob: -6.445185661315918
    10. '*
' → logprob: -6.820185661315918

Token 2160: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.3364253342151642
    2. ' ans' → logprob: -1.5864253044128418
    3. '               ' → logprob: -2.961425304412842
    4. 'res' → logprob: -3.961425304412842
    5. '           ' → logprob: -5.211425304412842
    6. ' res' → logprob: -5.711425304412842
    7. '(ans' → logprob: -7.211425304412842
    8. '                   ' → logprob: -7.711425304412842
    9. '```' → logprob: -8.71142578125
    10. '	ans' → logprob: -9.71142578125

Token 2161: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008648491464555264
    2. ' =' → logprob: -4.75864839553833
    3. '*=' → logprob: -10.383648872375488
    4. '   ' → logprob: -13.383648872375488
    5. ' *=' → logprob: -13.758648872375488
    6. '```' → logprob: -15.508648872375488
    7. '%=' → logprob: -16.133647918701172
    8. '*' → logprob: -17.133647918701172
    9. '           ' → logprob: -17.508647918701172
    10. '                   ' → logprob: -17.633647918701172

Token 2162: ' (' (ID: 350)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0009126556105911732
    2. ' (' → logprob: -7.000912666320801
    3. 'ans' → logprob: -15.3759126663208
    4. '(' → logprob: -15.3759126663208
    5. '(answer' → logprob: -15.6259126663208
    6. '   ' → logprob: -15.8759126663208
    7. '(res' → logprob: -16.250911712646484
    8. '(arr' → logprob: -16.625911712646484
    9. ' ans' → logprob: -16.750911712646484
    10. '(ax' → logprob: -17.875911712646484

Token 2163: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.4140441635390744e-05
    2. '(ans' → logprob: -11.750014305114746
    3. ' ans' → logprob: -12.000014305114746
    4. '	ans' → logprob: -18.25001335144043
    5. '_ans' → logprob: -19.00001335144043
    6. 'Ans' → logprob: -21.50001335144043
    7. '           ' → logprob: -21.50001335144043
    8. 'ANS' → logprob: -21.87501335144043
    9. 'answer' → logprob: -23.00001335144043
    10. '                   ' → logprob: -23.50001335144043

Token 2164: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.10022101551294327
    2. '*' → logprob: -2.3502209186553955
    3. ' ans' → logprob: -11.725220680236816
    4. 'ans' → logprob: -12.850220680236816
    5. '(ans' → logprob: -12.850220680236816
    6. '_ans' → logprob: -15.100220680236816
    7. ' ' → logprob: -15.100220680236816
    8. '
' → logprob: -15.850220680236816
    9. ' ' → logprob: -16.350221633911133
    10. ')' → logprob: -16.725221633911133

Token 2165: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -4.36574100604048e-06
    2. ' count' → logprob: -12.500004768371582
    3. '(count' → logprob: -14.375004768371582
    4. '[count' → logprob: -19.250003814697266
    5. 'cost' → logprob: -19.500003814697266
    6. 'c' → logprob: -19.625003814697266
    7. '   ' → logprob: -19.875003814697266
    8. 'cnt' → logprob: -20.375003814697266
    9. '$count' → logprob: -20.500003814697266
    10. 'int' → logprob: -20.625003814697266

Token 2166: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02234007976949215
    2. '%' → logprob: -4.522340297698975
    3. ')%' → logprob: -4.772340297698975
    4. '               ' → logprob: -6.147340297698975
    5. ' %' → logprob: -8.022339820861816
    6. '<|end|>' → logprob: -9.397339820861816
    7. '%)' → logprob: -9.772339820861816
    8. '<|end|>' → logprob: -9.897339820861816
    9. ' )' → logprob: -10.397339820861816
    10. '                   ' → logprob: -10.397339820861816

Token 2167: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.011899872682988644
    2. ' %' → logprob: -4.511899948120117
    3. '               ' → logprob: -8.386899948120117
    4. ')%' → logprob: -8.761899948120117
    5. '<|end|>' → logprob: -8.886899948120117
    6. ')' → logprob: -9.011899948120117
    7. '```' → logprob: -9.636899948120117
    8. '<|end|>' → logprob: -10.511899948120117
    9. '%
' → logprob: -10.636899948120117
    10. '                   ' → logprob: -11.136899948120117

Token 2168: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -6.2729995988775045e-06
    2. ' MOD' → logprob: -12.000006675720215
    3. '_MOD' → logprob: -19.7500057220459
    4. '100' → logprob: -20.0000057220459
    5. '(M' → logprob: -21.8750057220459
    6. '```' → logprob: -22.7500057220459
    7. '.MOD' → logprob: -23.2500057220459
    8. '   ' → logprob: -23.3750057220459
    9. '(mod' → logprob: -23.5000057220459
    10. '(Mod' → logprob: -24.1250057220459

Token 2169: '

' (ID: 279)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.033406034111976624
    2. 'for' → logprob: -3.6584060192108154
    3. ' for' → logprob: -5.7834062576293945
    4. '```' → logprob: -6.0334062576293945
    5. '
' → logprob: -6.7834062576293945
    6. 'i' → logprob: -8.283406257629395
    7. '                
' → logprob: -9.533406257629395
    8. '       ' → logprob: -10.158406257629395
    9. '           ' → logprob: -10.533406257629395
    10. 'uf' → logprob: -10.783406257629395

Token 2170: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006002148147672415
    2. 'for' → logprob: -5.381001949310303
    3. ' for' → logprob: -7.006001949310303
    4. '```' → logprob: -7.881001949310303
    5. '           ' → logprob: -10.256002426147461
    6. '
' → logprob: -10.506002426147461
    7. '       ' → logprob: -11.256002426147461
    8. '   ' → logprob: -11.506002426147461
    9. '                
' → logprob: -12.756002426147461
    10. '                   ' → logprob: -12.756002426147461

Token 2171: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006725317798554897
    2. '               ' → logprob: -5.006725311279297
    3. '#' (adapté à ' #') → logprob: -12.756725311279297
    4. ' for' → logprob: -12.756725311279297
    5. '```' → logprob: -13.006725311279297
    6. '                
' → logprob: -14.381725311279297
    7. '           ' → logprob: -14.631725311279297
    8. '
' → logprob: -14.881725311279297
    9. 'i' → logprob: -15.131725311279297
    10. '                   ' → logprob: -15.506725311279297

Token 2172: ' Union' (ID: 14746)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0021815462969243526
    2. '               ' → logprob: -6.502181529998779
    3. '#' → logprob: -7.377181529998779
    4. ' for' → logprob: -10.252182006835938
    5. 'i' → logprob: -12.002182006835938
    6. '           ' → logprob: -12.502182006835938
    7. '```' → logprob: -12.752182006835938
    8. '                   ' → logprob: -13.252182006835938
    9. '
' → logprob: -13.752182006835938
    10. '   ' → logprob: -14.252182006835938

Token 2173: ' toutes' (ID: 17502)
  Prédit: '_local'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_local' → logprob: -0.34045836329460144
    2. '               ' → logprob: -2.590458393096924
    3. 'for' → logprob: -2.590458393096924
    4. 'local' → logprob: -2.715458393096924
    5. '_' → logprob: -4.340458393096924
    6. '                   ' → logprob: -4.840458393096924
    7. 'of' → logprob: -5.215458393096924
    8. '(i' → logprob: -5.465458393096924
    9. '(u' → logprob: -5.465458393096924
    10. 'uf' → logprob: -5.590458393096924

Token 2174: ' les' (ID: 1341)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.2403554469347
    2. 'edges' → logprob: -2.9903554916381836
    3. 'for' → logprob: -3.1153554916381836
    4. '               ' → logprob: -3.9903554916381836
    5. '(edges' → logprob: -3.9903554916381836
    6. 'u' → logprob: -4.115355491638184
    7. 'same' → logprob: -4.615355491638184
    8. 'les' → logprob: -4.865355491638184
    9. '(_,' → logprob: -4.865355491638184
    10. '[u' → logprob: -5.615355491638184

Token 2175: ' ar' (ID: 646)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.7834985852241516
    2. 'uf' → logprob: -0.7834985852241516
    3. 'edges' → logprob: -2.908498525619507
    4. 'same' → logprob: -4.283498764038086
    5. 'u' → logprob: -5.158498764038086
    6. '(un' → logprob: -6.033498764038086
    7. 'union' → logprob: -6.408498764038086
    8. 'nodes' → logprob: -6.908498764038086
    9. 'ufs' → logprob: -6.908498764038086
    10. '(u' → logprob: -7.033498764038086

Token 2176: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.005631301086395979
    2. 'tes' → logprob: -5.755631446838379
    3. 'etes' → logprob: -7.755631446838379
    4. 'r' → logprob: -8.005631446838379
    5. 'cs' → logprob: -8.005631446838379
    6. '_edges' → logprob: -8.130631446838379
    7. 'ê' → logprob: -8.380631446838379
    8. '_' → logprob: -8.880631446838379
    9. 'ètes' → logprob: -8.880631446838379
    10. 'e' → logprob: -9.255631446838379

Token 2177: ' dans' (ID: 2671)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4760812520980835
    2. '(u' → logprob: -1.7260812520980835
    3. '               ' → logprob: -2.101081371307373
    4. '_' → logprob: -4.351081371307373
    5. '                   ' → logprob: -4.351081371307373
    6. '(_,' → logprob: -4.476081371307373
    7. ' for' → logprob: -4.601081371307373
    8. '[u' → logprob: -5.226081371307373
    9. '=' → logprob: -5.476081371307373
    10. '(_)' → logprob: -5.851081371307373

Token 2178: ' uf' (ID: 35772)
  Prédit: 'same'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'same' → logprob: -0.05516942963004112
    2. 'uf' → logprob: -2.9301693439483643
    3. 'range' → logprob: -8.930169105529785
    4. 'the' → logprob: -9.555169105529785
    5. 'for' → logprob: -10.680169105529785
    6. '   ' → logprob: -11.055169105529785
    7. ' same' → logprob: -11.430169105529785
    8. '```' → logprob: -12.180169105529785
    9. ' uf' → logprob: -12.430169105529785
    10. 'union' → logprob: -12.555169105529785

Token 2179: '_local' (ID: 29253)
  Prédit: '_local'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_local' → logprob: -0.00010998018842656165
    2. 'local' → logprob: -9.250109672546387
    3. 'Local' → logprob: -11.375109672546387
    4. '_un' → logprob: -14.125109672546387
    5. '               ' → logprob: -14.875109672546387
    6. '           ' → logprob: -15.375109672546387
    7. '                   ' → logprob: -15.750109672546387
    8. '_LOCAL' → logprob: -16.000110626220703
    9. 'ocal' → logprob: -16.500110626220703
    10. '```' → logprob: -16.500110626220703

Token 2180: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007005324587225914
    2. 'for' → logprob: -5.257005214691162
    3. ' for' → logprob: -6.382005214691162
    4. '
' → logprob: -10.50700569152832
    5. '                   ' → logprob: -10.75700569152832
    6. '                
' → logprob: -11.13200569152832
    7. '```' → logprob: -12.38200569152832
    8. '           ' → logprob: -12.75700569152832
    9. '              ' → logprob: -13.38200569152832
    10. '                ' → logprob: -14.00700569152832

Token 2181: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001237252727150917
    2. 'for' → logprob: -6.751237392425537
    3. ' for' → logprob: -10.501236915588379
    4. '```' → logprob: -10.501236915588379
    5. '                   ' → logprob: -11.751236915588379
    6. '
' → logprob: -13.876236915588379
    7. '           ' → logprob: -13.876236915588379
    8. '       ' → logprob: -14.126236915588379
    9. '``' → logprob: -14.501236915588379
    10. '                
' → logprob: -15.001236915588379

Token 2182: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1913423240184784
    2. ' for' → logprob: -2.441342353820801
    3. '               ' → logprob: -2.441342353820801
    4. '   ' → logprob: -10.3163423538208
    5. '           ' → logprob: -11.1913423538208
    6. '                   ' → logprob: -11.8163423538208
    7. '       ' → logprob: -12.5663423538208
    8. '	for' → logprob: -13.0663423538208
    9. '```' → logprob: -13.6913423538208
    10. '_for' → logprob: -15.4413423538208

Token 2183: ' _,' (ID: 18042)
  Prédit: '_,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_,' → logprob: -0.00040219054790213704
    2. ' _,' → logprob: -8.625402450561523
    3. '_' → logprob: -8.875402450561523
    4. 'cost' → logprob: -10.125402450561523
    5. '_cost' → logprob: -10.500402450561523
    6. '__,' → logprob: -11.625402450561523
    7. '(_,' → logprob: -12.625402450561523
    8. '_c' → logprob: -14.000402450561523
    9. ',' → logprob: -14.250402450561523
    10. '   ' → logprob: -14.500402450561523

Token 2184: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0003955224819947034
    2. ' u' → logprob: -8.000395774841309
    3. '_,' → logprob: -9.750395774841309
    4. '_u' → logprob: -14.125395774841309
    5. '   ' → logprob: -14.875395774841309
    6. ' _,' → logprob: -15.000395774841309
    7. 'cost' → logprob: -15.500395774841309
    8. '	u' → logprob: -17.000394821166992
    9. '(u' → logprob: -17.000394821166992
    10. '(_,' → logprob: -17.000394821166992

Token 2185: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004962627775967121
    2. '_local' → logprob: -5.62996244430542
    3. ',u' → logprob: -7.12996244430542
    4. ',v' → logprob: -7.75496244430542
    5. ' ,' → logprob: -9.879962921142578
    6. 'local' → logprob: -10.129962921142578
    7. '_,' → logprob: -10.629962921142578
    8. '0' → logprob: -12.754962921142578
    9. ',_' → logprob: -13.129962921142578
    10. ',n' → logprob: -13.129962921142578

Token 2186: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.1472419600977446e-06
    2. ' v' → logprob: -13.750000953674316
    3. '	v' → logprob: -21.625001907348633
    4. 'u' → logprob: -21.875001907348633
    5. '[v' → logprob: -21.875001907348633
    6. '(v' → logprob: -21.875001907348633
    7. '$v' → logprob: -22.125001907348633
    8. ',v' → logprob: -22.250001907348633
    9. '_v' → logprob: -22.875001907348633
    10. '   ' → logprob: -23.250001907348633

Token 2187: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5235819220542908
    2. ' in' → logprob: -0.8985819220542908
    3. '               ' → logprob: -8.648581504821777
    4. '                   ' → logprob: -9.398581504821777
    5. '[in' → logprob: -9.648581504821777
    6. '   ' → logprob: -10.398581504821777
    7. '           ' → logprob: -10.898581504821777
    8. ':
' → logprob: -11.148581504821777
    9. '	in' → logprob: -11.273581504821777
    10. '(in' → logprob: -11.398581504821777

Token 2188: ' same' (ID: 2684)
  Prédit: 'same'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'same' → logprob: -0.0004900033236481249
    2. ' same' → logprob: -7.625490188598633
    3. 'uf' → logprob: -14.250490188598633
    4. '_same' → logprob: -14.625490188598633
    5. 'u' → logprob: -14.875490188598633
    6. 'edges' → logprob: -15.625490188598633
    7. ' u' → logprob: -17.000490188598633
    8. '_,' → logprob: -17.000490188598633
    9. 'comp' → logprob: -17.125490188598633
    10. '(s' → logprob: -17.125490188598633

Token 2189: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.00014025058771949261
    2. 'cost' → logprob: -8.875140190124512
    3. '_COST' → logprob: -16.375141143798828
    4. '-cost' → logprob: -16.875141143798828
    5. '_code' → logprob: -17.375141143798828
    6. 'Cost' → logprob: -17.625141143798828
    7. '```' → logprob: -17.750141143798828
    8. '_c' → logprob: -17.750141143798828
    9. '_co' → logprob: -18.500141143798828
    10. 'const' → logprob: -18.500141143798828

Token 2190: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.0029397865291684866
    2. 'edges' → logprob: -6.627939701080322
    3. ':
' → logprob: -7.252939701080322
    4. ':' → logprob: -8.50294017791748
    5. '   ' → logprob: -8.62794017791748
    6. '_local' → logprob: -8.75294017791748
    7. '               ' → logprob: -9.62794017791748
    8. '_edge' → logprob: -10.00294017791748
    9. 'Edges' → logprob: -10.12794017791748
    10. ',' → logprob: -10.25294017791748

Token 2191: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.09836582839488983
    2. ':' → logprob: -2.4733657836914062
    3. '                   ' → logprob: -4.848365783691406
    4. '               ' → logprob: -6.723365783691406
    5. '   ' → logprob: -8.848365783691406
    6. '           ' → logprob: -9.348365783691406
    7. '                       ' → logprob: -10.098365783691406
    8. '       ' → logprob: -11.098365783691406
    9. '):
' → logprob: -11.223365783691406
    10. ':
' → logprob: -11.723365783691406

Token 2192: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.09409541636705399
    2. 'uf' → logprob: -2.594095468521118
    3. ' uf' → logprob: -4.594095230102539
    4. '               ' → logprob: -5.469095230102539
    5. '   ' → logprob: -8.219095230102539
    6. '                       ' → logprob: -8.844095230102539
    7. '				' → logprob: -9.094095230102539
    8. '           ' → logprob: -9.594095230102539
    9. '       ' → logprob: -9.969095230102539
    10. ' ' → logprob: -10.469095230102539

Token 2193: ' uf' (ID: 35772)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' (adapté à ' uf') → logprob: -0.012603361159563065
    2. ' uf' → logprob: -4.512603282928467
    3. '                   ' → logprob: -6.637603282928467
    4. '               ' → logprob: -8.637603759765625
    5. '                       ' → logprob: -10.262603759765625
    6. '       ' → logprob: -12.137603759765625
    7. '   ' → logprob: -12.262603759765625
    8. 'ut' → logprob: -12.512603759765625
    9. '           ' → logprob: -12.512603759765625
    10. 'ufs' → logprob: -13.012603759765625

Token 2194: '_local' (ID: 29253)
  Prédit: '_local'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_local' → logprob: -5.512236498361744e-07
    2. 'local' → logprob: -15.125000953674316
    3. 'Local' → logprob: -15.750000953674316
    4. '_LOCAL' → logprob: -16.75
    5. '```' → logprob: -18.625
    6. '   ' → logprob: -18.75
    7. '.local' → logprob: -19.0
    8. '_Local' → logprob: -19.0
    9. '_' → logprob: -19.125
    10. '_loc' → logprob: -19.125

Token 2195: '.un' (ID: 11508)
  Prédit: '.un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.un' → logprob: -0.00011307948443572968
    2. '.' → logprob: -9.375113487243652
    3. ' .' → logprob: -11.000113487243652
    4. '   ' → logprob: -12.125113487243652
    5. '.union' → logprob: -13.500113487243652
    6. '```' → logprob: -13.625113487243652
    7. '.u' → logprob: -13.875113487243652
    8. '	un' → logprob: -14.500113487243652
    9. '       ' → logprob: -14.750113487243652
    10. 'un' → logprob: -15.000113487243652

Token 2196: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -2.939851037808694e-05
    2. 'ate' → logprob: -11.500029563903809
    3. 'te' → logprob: -11.750029563903809
    4. 'un' → logprob: -12.375029563903809
    5. 'ute' → logprob: -12.750029563903809
    6. '```' → logprob: -13.250029563903809
    7. '   ' → logprob: -14.500029563903809
    8. 'it' → logprob: -14.750029563903809
    9. 'nite' → logprob: -15.125029563903809
    10. 'e' → logprob: -15.750029563903809

Token 2197: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -9.968312951968983e-06
    2. 'u' → logprob: -12.125009536743164
    3. '(' → logprob: -12.375009536743164
    4. ' u' → logprob: -15.500009536743164
    5. ' (' → logprob: -17.375009536743164
    6. '(
' → logprob: -19.000009536743164
    7. '(v' → logprob: -20.125009536743164
    8. '	u' → logprob: -20.250009536743164
    9. '[u' → logprob: -20.625009536743164
    10. ',u' → logprob: -21.375009536743164

Token 2198: ',' (ID: 11)
  Prédit: ',v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',v' → logprob: -0.07969038188457489
    2. ',' → logprob: -2.579690456390381
    3. 'v' → logprob: -7.829690456390381
    4. ',u' → logprob: -7.829690456390381
    5. ' ,' → logprob: -12.954689979553223
    6. 'u' → logprob: -13.704689979553223
    7. ',
' → logprob: -14.079689979553223
    8. '(v' → logprob: -15.204689979553223
    9. ' v' → logprob: -16.45469093322754
    10. ',y' → logprob: -16.70469093322754

Token 2199: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -5.512236498361744e-07
    2. ' v' → logprob: -14.625000953674316
    3. 'u' → logprob: -17.5
    4. ')v' → logprob: -21.375
    5. '   ' → logprob: -21.875
    6. '	v' → logprob: -22.25
    7. '(v' → logprob: -22.375
    8. '
' → logprob: -24.0
    9. 'vq' → logprob: -24.125
    10. ',v' → logprob: -24.875

Token 2200: ')

' (ID: 1029)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06059005856513977
    2. ')' → logprob: -3.0605900287628174
    3. ')
' → logprob: -4.4355902671813965
    4. '           ' → logprob: -10.185589790344238
    5. '                   ' → logprob: -11.185589790344238
    6. '
' → logprob: -11.685589790344238
    7. ')
' → logprob: -12.310589790344238
    8. ')i' → logprob: -12.810589790344238
    9. '```' → logprob: -13.060589790344238
    10. 'i' → logprob: -13.185589790344238

Token 2201: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0040260376408696175
    2. 'i' → logprob: -6.004025936126709
    3. '```' → logprob: -6.879025936126709
    4. '           ' → logprob: -8.629026412963867
    5. '       ' → logprob: -8.754026412963867
    6. '   ' → logprob: -9.879026412963867
    7. ' i' → logprob: -9.879026412963867
    8. '
' → logprob: -10.254026412963867
    9. '                
' → logprob: -11.129026412963867
    10. '                   ' → logprob: -11.254026412963867

Token 2202: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.08005731552839279
    2. '               ' → logprob: -2.580057382583618
    3. ' i' → logprob: -7.080057144165039
    4. '           ' → logprob: -8.955057144165039
    5. '       ' → logprob: -9.330057144165039
    6. '   ' → logprob: -9.955057144165039
    7. '```' → logprob: -10.330057144165039
    8. '
' → logprob: -11.205057144165039
    9. '                   ' → logprob: -12.705057144165039
    10. '                
' → logprob: -13.205057144165039

Token 2203: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00011284107313258573
    2. ' =' → logprob: -9.250112533569336
    3. '+=' → logprob: -11.000112533569336
    4. ' +=' → logprob: -17.000112533569336
    5. '=
' → logprob: -19.000112533569336
    6. '＝' → logprob: -19.500112533569336
    7. '=}' → logprob: -20.125112533569336
    8. '.=' → logprob: -20.625112533569336
    9. '=i' → logprob: -20.750112533569336
    10. '=j' → logprob: -21.250112533569336

Token 2204: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -5.836499985889532e-05
    2. ' j' → logprob: -9.7500581741333
    3. '	j' → logprob: -16.750059127807617
    4. '   ' → logprob: -16.875059127807617
    5. '$j' → logprob: -18.500059127807617
    6. '[j' → logprob: -20.250059127807617
    7. '=j' → logprob: -20.250059127807617
    8. ':j' → logprob: -20.875059127807617
    9. '           ' → logprob: -21.125059127807617
    10. '       ' → logprob: -21.375059127807617

Token 2205: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39639902114868164
    2. '<|end|>' → logprob: -1.2713990211486816
    3. '  
' → logprob: -4.646399021148682
    4. ' 
' → logprob: -5.146399021148682
    5. ' ' → logprob: -5.271399021148682
    6. '       ' → logprob: -5.521399021148682
    7. '           ' → logprob: -5.521399021148682
    8. '    
' → logprob: -5.646399021148682
    9. '<|end|>' → logprob: -5.646399021148682
    10. '\n' → logprob: -6.021399021148682

Token 2206: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017067687585949898
    2. '           ' → logprob: -4.392067909240723
    3. 'return' → logprob: -6.267067909240723
    4. '<|end|>' → logprob: -7.017067909240723
    5. '   ' → logprob: -7.267067909240723
    6. '
' → logprob: -7.517067909240723
    7. ' return' → logprob: -7.892067909240723
    8. '```' → logprob: -10.267067909240723
    9. '	return' → logprob: -10.392067909240723
    10. '               ' → logprob: -11.267067909240723

Token 2207: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08250872045755386
    2. '       ' → logprob: -2.5825088024139404
    3. 'return' (adapté à ' return') → logprob: -6.332508563995361
    4. ' return' → logprob: -6.582508563995361
    5. '           ' → logprob: -8.33250904083252
    6. '	return' → logprob: -8.95750904083252
    7. '
' → logprob: -10.33250904083252
    8. '```' → logprob: -11.08250904083252
    9. ':return' → logprob: -11.70750904083252
    10. '    
' → logprob: -12.33250904083252

Token 2208: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.02976333536207676
    2. ' ans' → logprob: -3.5297632217407227
    3. '(ans' → logprob: -11.279763221740723
    4. '	ans' → logprob: -16.15476417541504
    5. 'res' → logprob: -16.77976417541504
    6. '_ans' → logprob: -17.65476417541504
    7. ' res' → logprob: -19.40476417541504
    8. 'int' → logprob: -20.02976417541504
    9. 'result' → logprob: -20.02976417541504
    10. 'answer' → logprob: -20.15476417541504

Token 2209: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.503815770149231
    2. '
' → logprob: -2.0038156509399414
    3. '       ' → logprob: -2.1288156509399414
    4. '<|end|>' → logprob: -2.2538156509399414
    5. '    
' → logprob: -4.253815650939941
    6. '```' → logprob: -4.878815650939941
    7. '        
' → logprob: -6.003815650939941
    8. '[' → logprob: -6.003815650939941
    9. '[
' → logprob: -6.128815650939941
    10. '(
' → logprob: -6.503815650939941

Token 2210: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6604762673377991
    2. '   ' → logprob: -1.0354762077331543
    3. 'for' → logprob: -2.1604762077331543
    4. ' for' → logprob: -4.910476207733154
    5. '```' → logprob: -5.660476207733154
    6. '<|end|>' → logprob: -7.660476207733154
    7. 'print' → logprob: -8.285476684570312
    8. '[' → logprob: -8.410476684570312
    9. '        
' → logprob: -8.660476684570312
    10. 'result' → logprob: -8.660476684570312

Token 2211: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14235219359397888
    2. '   ' → logprob: -2.2673521041870117
    3. 'result' → logprob: -4.267352104187012
    4. 'for' (adapté à ' for') → logprob: -4.767352104187012
    5. 'total' → logprob: -5.392352104187012
    6. 'return' → logprob: -6.767352104187012
    7. 'results' → logprob: -8.017352104187012
    8. 'count' → logprob: -8.642352104187012
    9. '        
' → logprob: -9.392352104187012
    10. '```' → logprob: -9.517352104187012

Token 2212: ' cid' (ID: 55379)
  Prédit: 'cid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cid' → logprob: -0.0004966750275343657
    2. ' cid' → logprob: -8.000496864318848
    3. 'c' → logprob: -9.375496864318848
    4. 'comp' → logprob: -9.500496864318848
    5. 'cc' → logprob: -14.750496864318848
    6. '(cid' → logprob: -15.000496864318848
    7. ' comp' → logprob: -15.250496864318848
    8. 'cost' → logprob: -15.750496864318848
    9. 'ci' → logprob: -16.12549591064453
    10. 'i' → logprob: -16.25049591064453

Token 2213: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12704412639141083
    2. 'in' → logprob: -2.127044200897217
    3. '       ' → logprob: -10.877043724060059
    4. '[' → logprob: -11.002043724060059
    5. ',' → logprob: -11.377043724060059
    6. '        ' → logprob: -11.627043724060059
    7. '_in' → logprob: -11.752043724060059
    8. '   ' → logprob: -11.877043724060059
    9. '	in' → logprob: -12.127043724060059
    10. '<|end|>' → logprob: -12.127043724060059

Token 2214: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00033677343162707984
    2. ' range' → logprob: -8.000336647033691
    3. 'comp' → logprob: -13.625336647033691
    4. '(range' → logprob: -16.625337600708008
    5. ' comp' → logprob: -18.375337600708008
    6. 'in' → logprob: -18.625337600708008
    7. '   ' → logprob: -19.375337600708008
    8. '	range' → logprob: -20.000337600708008
    9. '(comp' → logprob: -20.750337600708008
    10. ' ' → logprob: -20.875337600708008

Token 2215: '(comp' (ID: 60272)
  Prédit: '(comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(comp' → logprob: -1.4736459888808895e-05
    2. 'comp' → logprob: -11.625014305114746
    3. '(' → logprob: -12.250014305114746
    4. '(len' → logprob: -14.500014305114746
    5. ' comp' → logprob: -15.875014305114746
    6. ' (' → logprob: -16.375015258789062
    7. '(c' → logprob: -17.000015258789062
    8. 'range' → logprob: -17.625015258789062
    9. '	comp' → logprob: -17.625015258789062
    10. 'in' → logprob: -17.875015258789062

Token 2216: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.002179050352424383
    2. '_comp' → logprob: -7.127179145812988
    3. 'ount' → logprob: -7.252179145812988
    4. 'count' → logprob: -7.877179145812988
    5. 't' → logprob: -8.502179145812988
    6. 'nt' → logprob: -10.502179145812988
    7. 'unt' → logprob: -11.377179145812988
    8. '_cnt' → logprob: -11.502179145812988
    9. 'comp' → logprob: -12.377179145812988
    10. 's' → logprob: -12.502179145812988

Token 2217: '):
' (ID: 1883)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.945551872253418
    2. '):
' → logprob: -0.945551872253418
    3. ':' → logprob: -1.695551872253418
    4. '):' → logprob: -3.945551872253418
    5. '           ' → logprob: -4.820551872253418
    6. '       ' → logprob: -5.195551872253418
    7. '   ' → logprob: -5.820551872253418
    8. '():
' → logprob: -6.695551872253418
    9. ' :
' → logprob: -7.695551872253418
    10. ' :' → logprob: -8.195551872253418

Token 2218: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04042600840330124
    2. '       ' → logprob: -3.665426015853882
    3. 'res' → logprob: -4.540425777435303
    4. ' res' → logprob: -6.415425777435303
    5. '   ' → logprob: -6.540425777435303
    6. '```' → logprob: -8.415426254272461
    7. 'result' → logprob: -11.415426254272461
    8. '               ' → logprob: -11.915426254272461
    9. '	       ' → logprob: -12.165426254272461
    10. '          ' → logprob: -12.165426254272461

Token 2219: ' nc' (ID: 39841)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.005625497084110975
    2. '           ' → logprob: -5.5056257247924805
    3. 'count' → logprob: -7.5056257247924805
    4. '       ' → logprob: -8.13062572479248
    5. 'val' → logprob: -8.50562572479248
    6. 'cnt' → logprob: -8.63062572479248
    7. 'ans' → logprob: -9.25562572479248
    8. 'comp' → logprob: -10.13062572479248
    9. '   ' → logprob: -10.75562572479248
    10. 'c' → logprob: -10.88062572479248

Token 2220: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2291804552078247
    2. ' =' → logprob: -1.6041804552078247
    3. ')' → logprob: -6.854180335998535
    4. '       ' → logprob: -7.229180335998535
    5. '   ' → logprob: -7.854180335998535
    6. '=
' → logprob: -7.979180335998535
    7. '=len' → logprob: -8.479180335998535
    8. '           ' → logprob: -8.979180335998535
    9. ']' → logprob: -9.104180335998535
    10. ')=' → logprob: -9.104180335998535

Token 2221: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -2.339278580620885e-06
    2. ' len' → logprob: -13.250001907348633
    3. '(len' → logprob: -14.500001907348633
    4. '[len' → logprob: -18.375001907348633
    5. '           ' → logprob: -18.875001907348633
    6. '=len' → logprob: -19.750001907348633
    7. '	len' → logprob: -21.250001907348633
    8. ',len' → logprob: -23.125001907348633
    9. '       ' → logprob: -23.500001907348633
    10. '   ' → logprob: -23.750001907348633

Token 2222: '(com' (ID: 27868)
  Prédit: '(com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(com' → logprob: -0.029752686619758606
    2. 'com' → logprob: -3.529752731323242
    3. '(' → logprob: -14.029752731323242
    4. '<com' → logprob: -14.279752731323242
    5. '   ' → logprob: -15.529752731323242
    6. '	com' → logprob: -16.279752731323242
    7. '```' → logprob: -16.279752731323242
    8. '(
' → logprob: -16.404752731323242
    9. ' comps' → logprob: -16.529752731323242
    10. '=com' → logprob: -17.029752731323242

Token 2223: 'ps' (ID: 947)
  Prédit: 'ps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ps' → logprob: -0.0001875671005109325
    2. 'com' → logprob: -8.625187873840332
    3. 'p' → logprob: -12.875187873840332
    4. 'pcs' → logprob: -13.000187873840332
    5. '[' → logprob: -14.250187873840332
    6. 'pc' → logprob: -14.375187873840332
    7. 'pts' → logprob: -14.625187873840332
    8. '(com' → logprob: -15.125187873840332
    9. '_com' → logprob: -15.500187873840332
    10. ' comps' → logprob: -15.500187873840332

Token 2224: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -5.512236498361744e-07
    2. '(cid' → logprob: -14.875000953674316
    3. '[' → logprob: -16.75
    4. 'cid' → logprob: -17.875
    5. ')[' → logprob: -18.25
    6. ')' → logprob: -19.0
    7. '```' → logprob: -19.25
    8. '   ' → logprob: -20.375
    9. '\[' → logprob: -20.375
    10. ' [' → logprob: -20.75

Token 2225: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.009358290582895279
    2. 'cid' → logprob: -4.7593584060668945
    3. '[c' → logprob: -7.3843584060668945
    4. '[' → logprob: -10.134358406066895
    5. '[id' → logprob: -10.384358406066895
    6. 'omp' → logprob: -10.759358406066895
    7. '(cid' → logprob: -11.134358406066895
    8. 'c' → logprob: -11.884358406066895
    9. ' cid' → logprob: -13.384358406066895
    10. 'd' → logprob: -13.634358406066895

Token 2226: '])
' (ID: 5169)
  Prédit: '])
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])
' → logprob: -0.25201478600502014
    2. '])' → logprob: -1.5020147562026978
    3. ')
' → logprob: -10.127015113830566
    4. '           ' → logprob: -10.627015113830566
    5. ')' → logprob: -11.752015113830566
    6. '       ' → logprob: -12.002015113830566
    7. '])
' → logprob: -13.377015113830566
    8. '   ' → logprob: -13.502015113830566
    9. ' ])
' → logprob: -14.252015113830566
    10. '[' → logprob: -14.627015113830566

Token 2227: '           ' (ID: 352)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.11336366832256317
    2. '           ' → logprob: -2.738363742828369
    3. ' res' → logprob: -3.988363742828369
    4. 'edges' → logprob: -4.363363742828369
    5. '```' → logprob: -5.488363742828369
    6. '       ' → logprob: -5.863363742828369
    7. '   ' → logprob: -7.113363742828369
    8. '
' → logprob: -7.113363742828369
    9. ' edges' → logprob: -7.238363742828369
    10. 'comp' → logprob: -7.488363742828369

Token 2228: ' if' (ID: 538)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.014639275148510933
    2. '           ' → logprob: -4.639639377593994
    3. 'edges' → logprob: -5.514639377593994
    4. 'comp' → logprob: -8.139638900756836
    5. 'if' (adapté à ' if') → logprob: -8.514638900756836
    6. 'result' → logprob: -9.389638900756836
    7. 'count' → logprob: -9.639638900756836
    8. '       ' → logprob: -9.889638900756836
    9. 'mst' → logprob: -9.889638900756836
    10. 'cnt' → logprob: -10.264638900756836

Token 2229: ' nc' (ID: 39841)
  Prédit: 'nc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -0.07895620912313461
    2. ' nc' → logprob: -2.578956127166748
    3. '_nc' → logprob: -10.078956604003906
    4. '           ' → logprob: -11.703956604003906
    5. '   ' → logprob: -12.578956604003906
    6. '0' → logprob: -12.578956604003906
    7. '.nc' → logprob: -13.203956604003906
    8. '>' → logprob: -13.703956604003906
    9. '1' → logprob: -13.828956604003906
    10. 'n' → logprob: -13.953956604003906

Token 2230: ' ==' (ID: 951)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.034138452261686325
    2. ' >' → logprob: -4.1591386795043945
    3. '==' → logprob: -4.1591386795043945
    4. ' ==' → logprob: -6.5341386795043945
    5. '<' → logprob: -7.5341386795043945
    6. '<=' → logprob: -9.159138679504395
    7. ')' → logprob: -10.284138679504395
    8. '```' → logprob: -10.659138679504395
    9. '>=' → logprob: -10.784138679504395
    10. '1' → logprob: -10.909138679504395

Token 2231: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003063838230445981
    2. '0' → logprob: -8.125306129455566
    3. ' ' → logprob: -11.500306129455566
    4. '   ' → logprob: -15.250306129455566
    5. '=' → logprob: -17.500307083129883
    6. '```' → logprob: -18.125307083129883
    7. '
' → logprob: -18.500307083129883
    8. '>' → logprob: -18.875307083129883
    9. '۱' → logprob: -19.500307083129883
    10. '       ' → logprob: -19.500307083129883

Token 2232: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.875001907348633
    3. '0' → logprob: -14.250001907348633
    4. '   ' → logprob: -16.625001907348633
    5. '=' → logprob: -18.375001907348633
    6. '```' → logprob: -18.750001907348633
    7. '
' → logprob: -19.375001907348633
    8. '１' → logprob: -20.750001907348633
    9. '       ' → logprob: -20.750001907348633
    10. '۱' → logprob: -21.000001907348633

Token 2233: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.20832206308841705
    2. ':' → logprob: -1.7083220481872559
    3. '           ' → logprob: -5.958322048187256
    4. '               ' → logprob: -5.958322048187256
    5. 'continue' → logprob: -7.583322048187256
    6. ' continue' → logprob: -7.583322048187256
    7. ':return' → logprob: -8.333322525024414
    8. ' or' → logprob: -8.833322525024414
    9. ' continues' → logprob: -9.583322525024414
    10. '):
' → logprob: -9.958322525024414

Token 2234: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3394818603992462
    2. '           ' → logprob: -1.3394818305969238
    3. ':
' → logprob: -4.089481830596924
    4. ':' → logprob: -4.839481830596924
    5. ' continue' → logprob: -8.464482307434082
    6. 'continue' → logprob: -8.589482307434082
    7. '       ' → logprob: -8.839482307434082
    8. ' res' → logprob: -9.339482307434082
    9. '```' → logprob: -9.839482307434082
    10. '   ' → logprob: -9.964482307434082

Token 2235: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4404911994934082
    2. '               ' → logprob: -2.065491199493408
    3. 'res' → logprob: -2.065491199493408
    4. 'continue' → logprob: -2.690491199493408
    5. ' res' → logprob: -3.565491199493408
    6. ' continue' → logprob: -5.565491199493408
    7. '
' → logprob: -6.815491199493408
    8. '                   ' → logprob: -7.315491199493408
    9. '   ' → logprob: -7.815491199493408
    10. '```' → logprob: -9.06549072265625

Token 2236: ' Com' (ID: 1390)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.009633309207856655
    2. ' res' → logprob: -4.759633541107178
    3. 'continue' → logprob: -7.634633541107178
    4. '           ' → logprob: -7.884633541107178
    5. '   ' → logprob: -9.13463306427002
    6. '               ' → logprob: -10.88463306427002
    7. '
' → logprob: -11.50963306427002
    8. '                   ' → logprob: -11.63463306427002
    9. ' continue' → logprob: -12.25963306427002
    10. '       ' → logprob: -12.38463306427002

Token 2237: 'pos' (ID: 1103)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.012362722307443619
    2. 'pt' → logprob: -5.137362957000732
    3. 'ponent' → logprob: -6.012362957000732
    4. 'ps' → logprob: -6.887362957000732
    5. 'pet' → logprob: -7.262362957000732
    6. 'ponents' → logprob: -8.137362480163574
    7. 'plete' → logprob: -8.137362480163574
    8. '```' → logprob: -8.137362480163574
    9. 'pute' → logprob: -8.262362480163574
    10. 'pass' → logprob: -8.387362480163574

Token 2238: 'ante' (ID: 2116)
  Prédit: 'ponent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ponent' → logprob: -0.23077459633350372
    2. 'p' → logprob: -1.7307746410369873
    3. 'e' → logprob: -4.855774402618408
    4. 'ponente' → logprob: -5.105774402618408
    5. 'ent' → logprob: -5.480774402618408
    6. 'plete' → logprob: -5.855774402618408
    7. 'ponents' → logprob: -6.730774402618408
    8. 'ponse' → logprob: -6.980774402618408
    9. 'pone' → logprob: -7.105774402618408
    10. 'pite' → logprob: -7.355774402618408

Token 2239: ' singleton' (ID: 80740)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.3875439465045929
    2. '_res' → logprob: -2.5125439167022705
    3. '           ' → logprob: -2.7625439167022705
    4. ' res' → logprob: -2.7625439167022705
    5. '[' → logprob: -3.5125439167022705
    6. '=' → logprob: -3.8875439167022705
    7. 'continue' → logprob: -4.76254415512085
    8. ' =' → logprob: -4.76254415512085
    9. ':
' → logprob: -5.38754415512085
    10. '
' → logprob: -5.51254415512085

Token 2240: ',' (ID: 11)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4949505925178528
    2. '                   ' → logprob: -1.369950532913208
    3. '               ' → logprob: -2.869950532913208
    4. '           ' → logprob: -3.619950532913208
    5. 'continue' → logprob: -3.619950532913208
    6. ':' → logprob: -3.744950532913208
    7. 'res' → logprob: -6.994950771331787
    8. '```' → logprob: -8.244950294494629
    9. '=' → logprob: -8.369950294494629
    10. '   ' → logprob: -8.494950294494629

Token 2241: ' ' (ID: 220)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.03817218914628029
    2. 'res' → logprob: -3.2881722450256348
    3. '           ' → logprob: -9.788171768188477
    4. ' continue' → logprob: -10.038171768188477
    5. '#' → logprob: -10.788171768188477
    6. '               ' → logprob: -12.663171768188477
    7. '   ' → logprob: -12.913171768188477
    8. 'pass' → logprob: -13.163171768188477
    9. '       ' → logprob: -13.663171768188477
    10. '
' → logprob: -14.663171768188477

Token 2242: '1' (ID: 16)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0032472279854118824
    2. 'continue' → logprob: -5.753247261047363
    3. ' res' → logprob: -10.128247261047363
    4. '           ' → logprob: -11.628247261047363
    5. '
' → logprob: -11.628247261047363
    6. '   ' → logprob: -11.878247261047363
    7. '                   ' → logprob: -13.628247261047363
    8. '               ' → logprob: -13.753247261047363
    9. ' continue' → logprob: -14.253247261047363
    10. '       ' → logprob: -14.628247261047363

Token 2243: ' façon' (ID: 33381)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2819492816925049
    2. '<|end|>' → logprob: -1.5319492816925049
    3. '           ' → logprob: -1.9069492816925049
    4. '*' → logprob: -2.031949281692505
    5. 'tokens' → logprob: -3.781949281692505
    6. '<|end|>' → logprob: -4.031949043273926
    7. '               ' → logprob: -4.031949043273926
    8. '
' → logprob: -4.031949043273926
    9. 'token' → logprob: -4.156949043273926
    10. '#' → logprob: -4.281949043273926

Token 2244: ' de' (ID: 334)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5783355832099915
    2. '               ' → logprob: -0.8283355832099915
    3. '                   ' → logprob: -7.453335762023926
    4. ':' → logprob: -7.953335762023926
    5. '=' → logprob: -8.203335762023926
    6. '
' → logprob: -8.453335762023926
    7. '<|end|>' → logprob: -8.453335762023926
    8. ',' → logprob: -8.828335762023926
    9. ':
' → logprob: -9.328335762023926
    10. ')' → logprob: -9.453335762023926

Token 2245: ' construire' (ID: 92473)
  Prédit: 'connect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'connect' → logprob: -0.7474569082260132
    2. 'res' → logprob: -1.7474569082260132
    3. 'faire' → logprob: -2.1224570274353027
    4. 'cho' → logprob: -2.6224570274353027
    5. 'choose' → logprob: -2.7474570274353027
    6. 'continue' → logprob: -3.4974570274353027
    7. 'con' → logprob: -4.122457027435303
    8. '1' → logprob: -4.247457027435303
    9. 'pass' → logprob: -4.622457027435303
    10. 'count' → logprob: -5.747457027435303

Token 2246: ' clan' (ID: 65094)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.1580958366394043
    2. '1' → logprob: -3.4080958366394043
    3. '(res' → logprob: -3.5330958366394043
    4. '(' → logprob: -3.9080958366394043
    5. 'continue' → logprob: -4.158095836639404
    6. 'la' → logprob: -4.408095836639404
    7. 'ans' → logprob: -4.533095836639404
    8. 'de' → logprob: -5.158095836639404
    9. 'le' → logprob: -5.658095836639404
    10. 'à' → logprob: -5.783095836639404

Token 2247: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7306408286094666
    2. '           ' → logprob: -1.1056408882141113
    3. '
' → logprob: -1.8556408882141113
    4. '\n' → logprob: -3.8556408882141113
    5. '                   ' → logprob: -5.855640888214111
    6. 'continue' → logprob: -5.980640888214111
    7. 'res' → logprob: -6.605640888214111
    8. '.
' → logprob: -8.105640411376953
    9. ',
' → logprob: -8.105640411376953
    10. ';' → logprob: -8.355640411376953

Token 2248: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.062073785811662674
    2. '           ' → logprob: -2.8120737075805664
    3. 'continue' → logprob: -9.562073707580566
    4. '       ' → logprob: -11.187073707580566
    5. ' continue' → logprob: -11.937073707580566
    6. ',' → logprob: -12.312073707580566
    7. '
' → logprob: -13.437073707580566
    8. '                   ' → logprob: -13.437073707580566
    9. '```' → logprob: -13.562073707580566
    10. ':
' → logprob: -13.562073707580566

Token 2249: ' continue' (ID: 4901)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.19537436962127686
    2. 'continue' (adapté à ' continue') → logprob: -2.0703744888305664
    3. '                   ' → logprob: -4.070374488830566
    4. '               ' → logprob: -4.195374488830566
    5. '           ' → logprob: -4.445374488830566
    6. '```' → logprob: -5.320374488830566
    7. ' res' → logprob: -6.945374488830566
    8. '
' → logprob: -7.320374488830566
    9. '\' → logprob: -8.195374488830566
    10. '   ' → logprob: -8.570374488830566

Token 2250: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01691661961376667
    2. 'else' → logprob: -5.016916751861572
    3. '       ' → logprob: -5.641916751861572
    4. 'res' → logprob: -5.641916751861572
    5. ' else' → logprob: -6.641916751861572
    6. '
' → logprob: -6.891916751861572
    7. ' res' → logprob: -7.766916751861572
    8. '   ' → logprob: -8.641916275024414
    9. '```' → logprob: -10.266916275024414
    10. '            
' → logprob: -10.766916275024414

Token 2251: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015102477744221687
    2. 'res' → logprob: -4.765102386474609
    3. '       ' → logprob: -5.265102386474609
    4. 'else' → logprob: -7.140102386474609
    5. '   ' → logprob: -8.39010238647461
    6. ' res' → logprob: -8.89010238647461
    7. '
' → logprob: -9.76510238647461
    8. ' else' → logprob: -10.51510238647461
    9. '               ' → logprob: -10.89010238647461
    10. '```' → logprob: -11.39010238647461

Token 2252: ' ways' (ID: 6984)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.5935462117195129
    2. '           ' → logprob: -0.9685462117195129
    3. '       ' → logprob: -2.718546152114868
    4. ' res' → logprob: -7.218546390533447
    5. '   ' → logprob: -7.343546390533447
    6. '```' → logprob: -7.718546390533447
    7. '
' → logprob: -8.968545913696289
    8. '               ' → logprob: -10.343545913696289
    9. '``' → logprob: -11.968545913696289
    10. 'else' → logprob: -12.593545913696289

Token 2253: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2032737284898758
    2. ' =' → logprob: -1.7032737731933594
    3. '*=' → logprob: -6.953273773193359
    4. ' *=' → logprob: -7.328273773193359
    5. '   ' → logprob: -8.95327377319336
    6. '```' → logprob: -9.82827377319336
    7. '[' → logprob: -10.70327377319336
    8. '           ' → logprob: -11.45327377319336
    9. '       ' → logprob: -12.57827377319336
    10. 'ways' → logprob: -12.82827377319336

Token 2254: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -6.0629870858974755e-05
    2. ' count' → logprob: -9.75006103515625
    3. '(count' → logprob: -13.00006103515625
    4. 'ways' → logprob: -18.25006103515625
    5. '(' → logprob: -19.62506103515625
    6. 'counts' → logprob: -21.00006103515625
    7. '	count' → logprob: -21.50006103515625
    8. '   ' → logprob: -21.87506103515625
    9. '.count' → logprob: -22.12506103515625
    10. '1' → logprob: -22.37506103515625

Token 2255: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -1.735893965815194e-05
    2. 'mst' → logprob: -11.500017166137695
    3. '(comp' → logprob: -12.750017166137695
    4. 'comp' → logprob: -13.500017166137695
    5. '(_' → logprob: -14.500017166137695
    6. '_' → logprob: -14.625017166137695
    7. '```' → logprob: -15.250017166137695
    8. '_comp' → logprob: -15.250017166137695
    9. '_M' → logprob: -15.375017166137695
    10. 'ways' → logprob: -15.625017166137695

Token 2256: 'st' (ID: 302)
  Prédit: 'st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -4.36574100604048e-06
    2. '_st' → logprob: -13.500004768371582
    3. 's' → logprob: -13.875004768371582
    4. 'sp' → logprob: -14.250004768371582
    5. 'ST' → logprob: -14.750004768371582
    6. '_' → logprob: -15.375004768371582
    7. '(st' → logprob: -16.500003814697266
    8. 'sts' → logprob: -16.625003814697266
    9. 'ст' → logprob: -16.750003814697266
    10. '[' → logprob: -16.875003814697266

Token 2257: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.2783464789390564
    2. '(len' → logprob: -1.6533465385437012
    3. '(comp' → logprob: -3.028346538543701
    4. '(cid' → logprob: -5.903346538543701
    5. '(' → logprob: -8.278346061706543
    6. ' (' → logprob: -9.153346061706543
    7. '(com' → logprob: -10.778346061706543
    8. '(
' → logprob: -12.028346061706543
    9. '(ci' → logprob: -12.028346061706543
    10. '(num' → logprob: -12.278346061706543

Token 2258: 'c' (ID: 66)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.07463622838258743
    2. '(cid' → logprob: -2.699636220932007
    3. '(c' → logprob: -5.699636459350586
    4. 'c' → logprob: -6.699636459350586
    5. 'cid' → logprob: -9.574636459350586
    6. '
' → logprob: -11.074636459350586
    7. '[' → logprob: -12.199636459350586
    8. ')[' → logprob: -12.574636459350586
    9. ')c' → logprob: -12.699636459350586
    10. ')' → logprob: -12.699636459350586

Token 2259: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.029847231227905e-05
    2. '           ' → logprob: -9.875080108642578
    3. '(edges' → logprob: -11.500080108642578
    4. '(comp' → logprob: -11.750080108642578
    5. '               ' → logprob: -12.875080108642578
    6. ',
' → logprob: -13.125080108642578
    7. ')' → logprob: -13.125080108642578
    8. '(com' → logprob: -13.250080108642578
    9. 'edges' → logprob: -14.250080108642578
    10. ' ,' → logprob: -14.500080108642578

Token 2260: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.0002614550176076591
    2. ' comp' → logprob: -8.250261306762695
    3. '(comp' → logprob: -16.250261306762695
    4. '	comp' → logprob: -17.875261306762695
    5. '           ' → logprob: -20.500261306762695
    6. 'com' → logprob: -21.000261306762695
    7. '.comp' → logprob: -21.250261306762695
    8. '_comp' → logprob: -22.625261306762695
    9. 'cmp' → logprob: -23.125261306762695
    10. '
' → logprob: -23.375261306762695

Token 2261: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -2.546478935983032e-05
    2. 'edges' → logprob: -10.625025749206543
    3. '[' → logprob: -14.625025749206543
    4. 'Edges' → logprob: -15.500025749206543
    5. '_edge' → logprob: -16.500024795532227
    6. ' edges' → logprob: -17.000024795532227
    7. 'comp' → logprob: -17.250024795532227
    8. '(edges' → logprob: -17.375024795532227
    9. '_comp' → logprob: -17.500024795532227
    10. 'ges' → logprob: -17.500024795532227

Token 2262: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -3.054500666621607e-06
    2. '[' → logprob: -13.37500286102295
    3. ')[' → logprob: -13.50000286102295
    4. '][' → logprob: -18.625003814697266
    5. '(cid' → logprob: -18.875003814697266
    6. ')' → logprob: -19.625003814697266
    7. ' [' → logprob: -19.750003814697266
    8. '
' → logprob: -20.250003814697266
    9. '```' → logprob: -20.750003814697266
    10. '       ' → logprob: -20.875003814697266

Token 2263: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -8.77627644513268e-06
    2. 'd' → logprob: -12.125008583068848
    3. 'cid' → logprob: -12.875008583068848
    4. '[' → logprob: -15.500008583068848
    5. '[id' → logprob: -15.750008583068848
    6. 'c' → logprob: -15.750008583068848
    7. '[c' → logprob: -15.875008583068848
    8. '_id' → logprob: -16.625009536743164
    9. 'ID' → logprob: -16.750009536743164
    10. 'm' → logprob: -17.125009536743164

Token 2264: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.3135124146938324
    2. ')' → logprob: -1.3135124444961548
    3. '))' → logprob: -9.313512802124023
    4. ')
' → logprob: -10.063512802124023
    5. '])
' → logprob: -10.063512802124023
    6. ')])' → logprob: -10.438512802124023
    7. ')]' → logprob: -10.813512802124023
    8. ']' → logprob: -10.938512802124023
    9. '           ' → logprob: -12.313512802124023
    10. '       ' → logprob: -13.688512802124023

Token 2265: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0021163583733141422
    2. ' res' → logprob: -7.0021162033081055
    3. 'res' → logprob: -7.6271162033081055
    4. '       ' → logprob: -8.252116203308105
    5. '   ' → logprob: -8.252116203308105
    6. '```' → logprob: -8.752116203308105
    7. '               ' → logprob: -11.377116203308105
    8. '
' → logprob: -11.877116203308105
    9. '<|end|>' → logprob: -12.002116203308105
    10. '(res' → logprob: -13.252116203308105

Token 2266: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.010469471104443073
    2. '           ' → logprob: -5.260469436645508
    3. ' res' → logprob: -5.260469436645508
    4. '       ' → logprob: -10.885469436645508
    5. '   ' → logprob: -11.635469436645508
    6. '```' → logprob: -14.260469436645508
    7. '	res' → logprob: -14.760469436645508
    8. '
' → logprob: -15.635469436645508
    9. '(res' → logprob: -16.260469436645508
    10. ' ' → logprob: -16.385469436645508

Token 2267: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10783927887678146
    2. ' =' → logprob: -2.357839345932007
    3. '*=' → logprob: -5.232839107513428
    4. ' *=' → logprob: -6.107839107513428
    5. '   ' → logprob: -10.857839584350586
    6. '```' → logprob: -11.357839584350586
    7. '*' → logprob: -12.482839584350586
    8. '%=' → logprob: -13.232839584350586
    9. '	' → logprob: -14.357839584350586
    10. '    ' → logprob: -14.482839584350586

Token 2268: ' (' (ID: 350)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.00015872348740231246
    2. ' (' → logprob: -8.750158309936523
    3. 'res' → logprob: -15.750158309936523
    4. '(' → logprob: -17.000158309936523
    5. '(result' → logprob: -17.625158309936523
    6. '   ' → logprob: -17.625158309936523
    7. ' res' → logprob: -20.000158309936523
    8. '(results' → logprob: -20.000158309936523
    9. '(rs' → logprob: -20.125158309936523
    10. '(ans' → logprob: -20.250158309936523

Token 2269: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.1472419600977446e-06
    2. ' res' → logprob: -13.750000953674316
    3. '(res' → logprob: -17.250001907348633
    4. '	res' → logprob: -22.625001907348633
    5. '_res' → logprob: -23.750001907348633
    6. '$res' → logprob: -24.125001907348633
    7. '
' → logprob: -24.375001907348633
    8. '```' → logprob: -25.000001907348633
    9. '   ' → logprob: -25.875001907348633
    10. 'Res' → logprob: -26.000001907348633

Token 2270: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.12693114578723907
    2. '*' → logprob: -2.1269311904907227
    3. ' ' → logprob: -13.876931190490723
    4. ' ' → logprob: -14.126931190490723
    5. '
' → logprob: -14.626931190490723
    6. ')' → logprob: -14.626931190490723
    7. '**' → logprob: -15.501931190490723
    8. '```' → logprob: -15.751931190490723
    9. '(res' → logprob: -16.876930236816406
    10. '*object' → logprob: -17.251930236816406

Token 2271: ' ways' (ID: 6984)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.0001234428636962548
    2. ' ways' → logprob: -9.000123023986816
    3. 'way' → logprob: -17.625123977661133
    4. 'WAYS' → logprob: -20.625123977661133
    5. '(' → logprob: -21.625123977661133
    6. 'Ways' → logprob: -21.875123977661133
    7. '```' → logprob: -22.375123977661133
    8. '   ' → logprob: -22.750123977661133
    9. '
' → logprob: -23.750123977661133
    10. ' way' → logprob: -24.250123977661133

Token 2272: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007146298885345459
    2. ')%' → logprob: -5.00714635848999
    3. '%' → logprob: -7.88214635848999
    4. ' %' → logprob: -10.632145881652832
    5. ' )' → logprob: -10.757145881652832
    6. '%)' → logprob: -12.257145881652832
    7. '           ' → logprob: -14.132145881652832
    8. '       ' → logprob: -14.382145881652832
    9. ')
' → logprob: -15.132145881652832
    10. '```' → logprob: -15.132145881652832

Token 2273: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.5241303443908691
    2. '%' → logprob: -0.8991303443908691
    3. ')' → logprob: -7.399130344390869
    4. '
' → logprob: -9.024129867553711
    5. ')%' → logprob: -9.024129867553711
    6. '```' → logprob: -9.649129867553711
    7. '%
' → logprob: -10.149129867553711
    8. ' %
' → logprob: -11.649129867553711
    9. ' 
' → logprob: -12.024129867553711
    10. '`' → logprob: -12.149129867553711

Token 2274: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -3.547789674485102e-05
    2. ' MOD' → logprob: -10.250035285949707
    3. '100' → logprob: -19.500036239624023
    4. '_MOD' → logprob: -22.250036239624023
    5. '.MOD' → logprob: -24.125036239624023
    6. ' ' → logprob: -25.000036239624023
    7. '   ' → logprob: -25.375036239624023
    8. '```' → logprob: -25.500036239624023
    9. 'MO' → logprob: -26.375036239624023
    10. 'MODULE' → logprob: -26.875036239624023

Token 2275: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.0515666007995605
    2. '
' → logprob: -1.1765666007995605
    3. '   ' → logprob: -1.1765666007995605
    4. '```' → logprob: -4.0515666007995605
    5. '<|end|>' → logprob: -4.8015666007995605
    6. '       ' → logprob: -5.6765666007995605
    7. '    
' → logprob: -5.9265666007995605
    8. '  
' → logprob: -7.0515666007995605
    9. ' print' → logprob: -7.8015666007995605
    10. '        
' → logprob: -8.176567077636719

Token 2276: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.049261659383773804
    2. 'print' → logprob: -3.2992615699768066
    3. 'return' → logprob: -5.049261569976807
    4. '```' → logprob: -5.924261569976807
    5. '       ' → logprob: -6.924261569976807
    6. '<|end|>' → logprob: -7.799261569976807
    7. '    
' → logprob: -8.299262046813965
    8. '
' → logprob: -8.549262046813965
    9. ' return' → logprob: -9.924262046813965
    10. '``' → logprob: -10.049262046813965

Token 2277: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00010318557906430215
    2. '   ' → logprob: -9.500102996826172
    3. 'return' → logprob: -11.000102996826172
    4. '```' → logprob: -11.625102996826172
    5. ' print' → logprob: -12.875102996826172
    6. '
' → logprob: -17.375102996826172
    7. '``' → logprob: -17.375102996826172
    8. '	print' → logprob: -18.375102996826172
    9. 'sys' → logprob: -18.750102996826172
    10. '#print' → logprob: -18.875102996826172

Token 2278: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.00028624574770219624
    2. '(' → logprob: -8.500286102294922
    3. '()' → logprob: -9.500286102294922
    4. 'res' → logprob: -12.000286102294922
    5. '(f' → logprob: -14.125286102294922
    6. '('' → logprob: -14.250286102294922
    7. ' (' → logprob: -16.125286102294922
    8. '((' → logprob: -16.625286102294922
    9. '("' → logprob: -17.250286102294922
    10. ' res' → logprob: -17.500286102294922

Token 2279: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011344771832227707
    2. '())' → logprob: -5.011344909667969
    3. '()' → logprob: -5.386344909667969
    4. '   ' → logprob: -11.136344909667969
    5. '(' → logprob: -12.386344909667969
    6. ')
' → logprob: -12.511344909667969
    7. '`)' → logprob: -12.761344909667969
    8. ' )' → logprob: -12.886344909667969
    9. '()
' → logprob: -12.886344909667969
    10. '```' → logprob: -13.511344909667969

Token 2280: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.18763846158981323
    2. 'solve' → logprob: -2.437638521194458
    3. '```' → logprob: -2.562638521194458
    4. '<|end|>' → logprob: -6.187638282775879
    5. '\' → logprob: -6.812638282775879
    6. '
' → logprob: -7.062638282775879
    7. '\n' → logprob: -7.437638282775879
    8. '#' → logprob: -7.937638282775879
    9. '()' → logprob: -8.312638282775879
    10. ' if' → logprob: -8.437638282775879

Token 2281: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5759490728378296
    2. ' __' → logprob: -0.8259490728378296
    3. '_' → logprob: -12.325948715209961
    4. '___' → logprob: -12.450948715209961
    5. 'name' → logprob: -14.825948715209961
    6. '_name' → logprob: -15.075948715209961
    7. ' ' → logprob: -15.825948715209961
    8. '____' → logprob: -16.32594871520996
    9. ' ' → logprob: -16.45094871520996
    10. '/__' → logprob: -16.57594871520996

Token 2282: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0011231913231313229
    2. '==' → logprob: -7.376123428344727
    3. ' ==' → logprob: -8.626123428344727
    4. '__.__' → logprob: -8.876123428344727
    5. '```' → logprob: -9.501123428344727
    6. '__":
' → logprob: -11.126123428344727
    7. '__
' → logprob: -11.376123428344727
    8. '=="' → logprob: -11.626123428344727
    9. 'if' → logprob: -11.751123428344727
    10. '____' → logprob: -12.001123428344727

Token 2283: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.001154270488768816
    2. '==' → logprob: -7.00115442276001
    3. '=="' → logprob: -9.376153945922852
    4. '__.__' → logprob: -10.126153945922852
    5. ' ==' → logprob: -10.251153945922852
    6. '```' → logprob: -10.501153945922852
    7. '=='' → logprob: -10.751153945922852
    8. '__('' → logprob: -11.251153945922852
    9. '__":
' → logprob: -12.126153945922852
    10. '__.' → logprob: -12.751153945922852

Token 2284: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.9884755611419678
    2. '__' → logprob: -1.1134755611419678
    3. '==' → logprob: -1.3634755611419678
    4. '=="' → logprob: -3.7384755611419678
    5. '=='' → logprob: -4.613475799560547
    6. '```' → logprob: -6.238475799560547
    7. '[' → logprob: -6.613475799560547
    8. '<|end|>' → logprob: -6.738475799560547
    9. '__["' → logprob: -7.363475799560547
    10. '__.__' → logprob: -7.613475799560547

Token 2285: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.03804344683885574
    2. ''' → logprob: -3.28804349899292
    3. '__' → logprob: -13.288043022155762
    4. ' "__' → logprob: -15.413043022155762
    5. '   ' → logprob: -18.163043975830078
    6. ' '__' → logprob: -18.413043975830078
    7. '"'' → logprob: -18.538043975830078
    8. ''"' → logprob: -18.538043975830078
    9. ' ' → logprob: -19.163043975830078
    10. '"name' → logprob: -19.788043975830078

Token 2286: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.037473492324352264
    2. 'main' → logprob: -3.662473440170288
    3. ''' → logprob: -4.912473678588867
    4. '"' → logprob: -5.787473678588867
    5. '___' → logprob: -8.537473678588867
    6. 'name' → logprob: -8.787473678588867
    7. '__":
' → logprob: -9.162473678588867
    8. '____' → logprob: -9.287473678588867
    9. '('__' → logprob: -9.912473678588867
    10. '__':
' → logprob: -10.412473678588867

Token 2287: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.018125714734196663
    2. '__' → logprob: -4.143125534057617
    3. '__':
' → logprob: -6.518125534057617
    4. '__["' → logprob: -8.018125534057617
    5. '__.__' → logprob: -9.018125534057617
    6. '__.' → logprob: -9.143125534057617
    7. '__
' → logprob: -10.893125534057617
    8. '__[' → logprob: -11.268125534057617
    9. '__()
' → logprob: -12.143125534057617
    10. '.' → logprob: -12.768125534057617

Token 2288: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03104417212307453
    2. 'solve' → logprob: -3.5310442447662354
    3. ' solve' → logprob: -7.031044006347656
    4. '```' → logprob: -7.906044006347656
    5. '.solve' → logprob: -10.531044006347656
    6. '	s' → logprob: -12.156044006347656
    7. '    
' → logprob: -13.281044006347656
    8. '``' → logprob: -13.281044006347656
    9. '    ' → logprob: -14.031044006347656
    10. '>' → logprob: -14.156044006347656

Token 2289: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' (adapté à ' solve') → logprob: -1.0802738870552275e-05
    2. '   ' → logprob: -11.50001049041748
    3. ' solve' → logprob: -14.62501049041748
    4. '```' → logprob: -16.000011444091797
    5. '.solve' → logprob: -18.375011444091797
    6. 'resolve' → logprob: -19.625011444091797
    7. 'import' → logprob: -21.250011444091797
    8. '``' → logprob: -22.375011444091797
    9. 'validate' → logprob: -22.875011444091797
    10. '  ' → logprob: -23.000011444091797

Token 2290: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.13964325189590454
    2. '<|end|>' → logprob: -2.6396431922912598
    3. '(' → logprob: -3.7646431922912598
    4. '```' → logprob: -4.13964319229126
    5. ':' → logprob: -4.88964319229126
    6. '():' → logprob: -5.51464319229126
    7. '#' → logprob: -6.01464319229126
    8. ')' → logprob: -6.13964319229126
    9. '
' → logprob: -7.26464319229126
    10. '()
' → logprob: -7.63964319229126


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 2288
Tokens correctement prédits (1ère position, stricte): 789
Tokens correctement prédits (1ère position, avec adaptation): 868
Tokens correctement prédits (top 10): 1729
Précision stricte (1ère position): 34.48%
Précision adaptée (1ère position): 37.94%
Précision (top 10): 75.57%
================================================================================
