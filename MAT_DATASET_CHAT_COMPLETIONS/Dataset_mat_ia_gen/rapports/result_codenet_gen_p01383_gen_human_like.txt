================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:42
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
input=sys.stdin.readline

M,N,K=map(int,input().split())
w=[0]+[int(input()) for _ in range(N)]
a=[int(input()) for _ in range(K)]

# For each ball, record positions of future accesses
positions=[[] for _ in range(N+1)]
for i,v in enumerate(a):
    positions[v].append(i)

# For each ball, maintain an index to the next use position
next_use_idx=[0]*(N+1)

cache=[-1]*M  # cache[i] = ball in box i or -1 if empty
pos_in_cache=[-1]*(N+1)  # pos_in_cache[ball] = index of box or -1 if not in cache

ans=0

for i in range(K):
    ball=a[i]
    # Advance next_use_idx for current ball
    next_use_idx[ball]+=1

    if pos_in_cache[ball]!=-1:
        # ball is already in cache, no cost
        continue

    # ball not in cache, miss: need to put in cache
    # Find empty box if any
    empty_idx=-1
    for idx in range(M):
        if cache[idx]==-1:
            empty_idx=idx
            break

    if empty_idx!=-1:
        # Use empty box
        cache[empty_idx]=ball
        pos_in_cache[ball]=empty_idx
        ans+=w[ball]
    else:
        # Need to evict a ball
        # For each ball in cache, find next use position
        # If no next use, next use = infinity
        max_next_use=-1
        evict_idx=-1
        for idx in range(M):
            b=cache[idx]
            nxt=positions[b][next_use_idx[b]] if next_use_idx[b]<len(positions[b]) else 10**9
            if nxt>max_next_use:
                max_next_use=nxt
                evict_idx=idx
        # Evict ball
        evicted_ball=cache[evict_idx]
        pos_in_cache[evicted_ball]=-1

        # Put new ball
        cache[evict_idx]=ball
        pos_in_cache[ball]=evict_idx
        ans+=w[ball]

print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2973678708076477
    2. '\n' → logprob: -1.547367811203003
    3. '<|end|>' → logprob: -3.797367811203003
    4. '\' → logprob: -4.922368049621582
    5. 'newline' → logprob: -5.672368049621582
    6. 'import' → logprob: -5.672368049621582
    7. '<|end|>' → logprob: -6.047368049621582
    8. '
' → logprob: -6.922368049621582
    9. '```' → logprob: -6.922368049621582
    10. '' → logprob: -7.547368049621582

Token 4: '=sys' (ID: 149200)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006619225605390966
    2. '.' → logprob: -8.125661849975586
    3. '(
' → logprob: -8.750661849975586
    4. '()' → logprob: -9.500661849975586
    5. ')' → logprob: -10.375661849975586
    6. ' (' → logprob: -10.500661849975586
    7. '('' → logprob: -11.250661849975586
    8. ''' → logprob: -11.375661849975586
    9. '(

' → logprob: -11.375661849975586
    10. '```' → logprob: -12.000661849975586

Token 5: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0011133047519251704
    2. '[' → logprob: -7.501113414764404
    3. ' .' → logprob: -8.376112937927246
    4. '.readline' → logprob: -8.501112937927246
    5. '.
' → logprob: -10.876112937927246
    6. '.[' → logprob: -11.126112937927246
    7. '.get' → logprob: -11.251112937927246
    8. '.setdefault' → logprob: -11.501112937927246
    9. ''.' → logprob: -12.126112937927246
    10. '"."' → logprob: -12.251112937927246

Token 6: '.readline' (ID: 74673)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5263934135437012
    2. '.readline' → logprob: -0.9013934135437012
    3. '.read' → logprob: -5.776393413543701
    4. 'read' → logprob: -10.27639389038086
    5. '.Read' → logprob: -10.52639389038086
    6. ' readline' → logprob: -10.77639389038086
    7. '```' → logprob: -10.90139389038086
    8. '<|end|>' → logprob: -11.40139389038086
    9. '.

' → logprob: -11.52639389038086
    10. '.readlines' → logprob: -11.65139389038086

Token 7: '

' (ID: 279)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 8: 'M' (ID: 44)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47553059458732605
    2. '()' → logprob: -0.9755306243896484
    3. '().' → logprob: -7.100530624389648
    4. '()
' → logprob: -8.475530624389648
    5. '(
' → logprob: -8.475530624389648
    6. ')' → logprob: -10.600530624389648
    7. '#' → logprob: -10.725530624389648
    8. '()

' → logprob: -10.850530624389648
    9. 'a' → logprob: -11.100530624389648
    10. '()\' → logprob: -11.100530624389648

Token 9: ',N' (ID: 49539)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 10: ',K' (ID: 107147)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3012421429157257
    2. ' =' → logprob: -1.9262421131134033
    3. ',' → logprob: -2.1762421131134033
    4. '<|end|>' → logprob: -8.801241874694824
    5. ' ,' → logprob: -9.051241874694824
    6. '=input' → logprob: -9.176241874694824
    7. ')' → logprob: -9.176241874694824
    8. ' ' → logprob: -9.676241874694824
    9. '=int' → logprob: -9.676241874694824
    10. '[' → logprob: -10.801241874694824

Token 11: '=' (ID: 28)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 12: 'map' (ID: 3726)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.3869228661060333
    2. 'map' → logprob: -1.136922836303711
    3. ' list' → logprob: -10.261922836303711
    4. 'list' → logprob: -11.261922836303711
    5. ' input' → logprob: -13.886922836303711
    6. 'input' → logprob: -14.136922836303711
    7. ' tuple' → logprob: -14.136922836303711
    8. '	map' → logprob: -14.886922836303711
    9. ' ' → logprob: -15.136922836303711
    10. '0' → logprob: -15.261922836303711

Token 13: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.024348100647330284
    2. '(int' → logprob: -3.899348020553589
    3. '(lambda' → logprob: -6.149348258972168
    4. '<|end|>' → logprob: -7.899348258972168
    5. '(input' → logprob: -8.024348258972168
    6. '(str' → logprob: -8.024348258972168
    7. '(
' → logprob: -8.274348258972168
    8. 'int' → logprob: -10.024348258972168
    9. '(len' → logprob: -10.399348258972168
    10. ' (' → logprob: -10.649348258972168

Token 14: ',input' (ID: 123014)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.6579349040985107
    2. ',' → logprob: -1.1579349040985107
    3. '(' → logprob: -2.6579349040985107
    4. '(input' → logprob: -3.0329349040985107
    5. ')' → logprob: -3.5329349040985107
    6. ',input' → logprob: -4.03293514251709
    7. '),' → logprob: -7.78293514251709
    8. '(stdin' → logprob: -8.15793514251709
    9. '(int' → logprob: -8.53293514251709
    10. '(data' → logprob: -8.65793514251709

Token 15: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0063621969893574715
    2. '()' → logprob: -5.756361961364746
    3. '())' → logprob: -5.756361961364746
    4. ')' → logprob: -11.256361961364746
    5. '(' → logprob: -13.256361961364746
    6. '());' → logprob: -14.506361961364746
    7. '()))' → logprob: -14.506361961364746
    8. '(),' → logprob: -15.756361961364746
    9. '()[' → logprob: -15.881361961364746
    10. '();)' → logprob: -16.131362915039062

Token 16: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.002639868063852191
    2. 'strip' → logprob: -6.2526397705078125
    3. 'rstrip' → logprob: -7.2526397705078125
    4. ' split' → logprob: -13.127639770507812
    5. ')' → logprob: -15.502639770507812
    6. '(split' → logprob: -15.627639770507812
    7. 'rs' → logprob: -15.752639770507812
    8. '```' → logprob: -16.502639770507812
    9. 'spl' → logprob: -17.377639770507812
    10. ' ' → logprob: -18.127639770507812

Token 17: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008659131824970245
    2. '())' → logprob: -4.883659362792969
    3. '))' → logprob: -7.383659362792969
    4. '()' → logprob: -7.883659362792969
    5. '),' → logprob: -11.008659362792969
    6. '(' → logprob: -11.383659362792969
    7. '`)' → logprob: -12.758659362792969
    8. '()))' → logprob: -12.883659362792969
    9. '(','' → logprob: -13.133659362792969
    10. ')))' → logprob: -13.508659362792969

Token 18: 'w' (ID: 86)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.6162145137786865
    2. 'graph' → logprob: -1.4912145137786865
    3. '
' → logprob: -2.7412145137786865
    4. 'matrix' → logprob: -3.6162145137786865
    5. 'a' → logprob: -3.7412145137786865
    6. 'arr' → logprob: -4.116214752197266
    7. 'grid' → logprob: -4.491214752197266
    8. 'array' → logprob: -4.866214752197266
    9. '<|end|>' → logprob: -4.866214752197266
    10. ' 
' → logprob: -4.991214752197266

Token 19: '=[' (ID: 13370)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.3862192928791046
    2. 'a' → logprob: -2.3862192630767822
    3. 'h' → logprob: -2.6362192630767822
    4. 'hile' → logprob: -2.7612192630767822
    5. 'eight' → logprob: -3.6362192630767822
    6. '=' → logprob: -3.7612192630767822
    7. ',h' → logprob: -5.511219501495361
    8. ' =' → logprob: -5.511219501495361
    9. 'alls' → logprob: -5.511219501495361
    10. 'all' → logprob: -6.011219501495361

Token 20: '0' (ID: 15)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.495550274848938
    2. 'list' → logprob: -1.495550274848938
    3. '0' → logprob: -1.870550274848938
    4. 'map' → logprob: -5.245550155639648
    5. '[]' → logprob: -5.370550155639648
    6. '[int' → logprob: -7.245550155639648
    7. '(int' → logprob: -7.245550155639648
    8. ']int' → logprob: -7.620550155639648
    9. ']' → logprob: -7.870550155639648
    10. 'tuple' → logprob: -9.245550155639648

Token 21: ']+' (ID: 15344)
  Prédit: ']*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.33538198471069336
    2. ']*' → logprob: -1.3353819847106934
    3. ']' → logprob: -3.8353819847106934
    4. ']+' → logprob: -8.335382461547852
    5. ',' → logprob: -10.460382461547852
    6. ' for' → logprob: -11.710382461547852
    7. 'for' → logprob: -12.210382461547852
    8. ' ]' → logprob: -13.460382461547852
    9. ')*(' → logprob: -15.835382461547852
    10. ')' → logprob: -16.33538246154785

Token 22: '[' (ID: 58)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -8.327856630785391e-05
    2. '[list' → logprob: -9.500082969665527
    3. ' list' → logprob: -12.000082969665527
    4. '[' → logprob: -13.125082969665527
    5. '[*' → logprob: -16.500083923339844
    6. '[int' → logprob: -17.250083923339844
    7. 'map' → logprob: -17.250083923339844
    8. '(list' → logprob: -17.750083923339844
    9. '=list' → logprob: -18.250083923339844
    10. '	list' → logprob: -19.125083923339844

Token 23: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.004017853178083897
    2. 'list' → logprob: -6.0040178298950195
    3. '*' → logprob: -6.6290178298950195
    4. 'map' → logprob: -9.50401782989502
    5. ' int' → logprob: -9.62901782989502
    6. '0' → logprob: -10.62901782989502
    7. 'input' → logprob: -11.12901782989502
    8. ']int' → logprob: -11.62901782989502
    9. '(int' → logprob: -11.87901782989502
    10. 'tuple' → logprob: -12.25401782989502

Token 24: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0009083642507903278
    2. '(x' → logprob: -7.625908374786377
    3. '(' → logprob: -7.875908374786377
    4. '(i' → logprob: -11.250907897949219
    5. '(sys' → logprob: -11.250907897949219
    6. 'input' → logprob: -11.375907897949219
    7. '(
' → logprob: -14.000907897949219
    8. '()' → logprob: -15.000907897949219
    9. ' input' → logprob: -15.000907897949219
    10. ',input' → logprob: -15.000907897949219

Token 25: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00036418659146875143
    2. '()' → logprob: -8.375364303588867
    3. '().' → logprob: -9.625364303588867
    4. '()]' → logprob: -10.500364303588867
    5. ')' → logprob: -10.875364303588867
    6. '())
' → logprob: -11.125364303588867
    7. ' ())' → logprob: -13.000364303588867
    8. '())

' → logprob: -13.625364303588867
    9. '()),' → logprob: -14.500364303588867
    10. '();)' → logprob: -14.500364303588867

Token 26: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0008235682616941631
    2. 'for' → logprob: -7.375823497772217
    3. ' for' → logprob: -8.875823974609375
    4. '().' → logprob: -10.625823974609375
    5. '()]' → logprob: -11.250823974609375
    6. ' ()' → logprob: -11.750823974609375
    7. '(' → logprob: -12.625823974609375
    8. ')' → logprob: -13.250823974609375
    9. '	for' → logprob: -13.500823974609375
    10. '()
' → logprob: -14.125823974609375

Token 27: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.716484010219574
    2. ' range' → logprob: -0.716484010219574
    3. ' _' → logprob: -4.341484069824219
    4. 'range' → logprob: -4.716484069824219
    5. ' ' → logprob: -7.341484069824219
    6. ' in' → logprob: -8.341484069824219
    7. '_range' → logprob: -8.716484069824219
    8. '	range' → logprob: -10.841484069824219
    9. ' i' → logprob: -11.716484069824219
    10. '  ' → logprob: -11.966484069824219

Token 28: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03213056921958923
    2. ' range' → logprob: -3.657130479812622
    3. ' in' → logprob: -5.532130718231201
    4. 'in' → logprob: -6.407130718231201
    5. '	range' → logprob: -8.907130241394043
    6. '(range' → logprob: -10.032130241394043
    7. ' ' → logprob: -11.657130241394043
    8. '.range' → logprob: -12.282130241394043
    9. '  ' → logprob: -12.532130241394043
    10. 'ran' → logprob: -12.782130241394043

Token 29: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0003408263437449932
    2. ' range' → logprob: -8.000340461730957
    3. 'r' → logprob: -13.750340461730957
    4. 'rang' → logprob: -13.750340461730957
    5. '(range' → logprob: -14.375340461730957
    6. 'ran' → logprob: -14.375340461730957
    7. ' ' → logprob: -14.500340461730957
    8. '	range' → logprob: -14.625340461730957
    9. '   ' → logprob: -15.125340461730957
    10. '  ' → logprob: -15.250340461730957

Token 30: '(N' (ID: 10564)
  Prédit: '(K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.2819698452949524
    2. '(M' → logprob: -1.4069697856903076
    3. '(' → logprob: -7.656970024108887
    4. 'K' → logprob: -8.656970024108887
    5. '(N' → logprob: -8.906970024108887
    6. 'M' → logprob: -10.281970024108887
    7. ' (' → logprob: -14.156970024108887
    8. '(k' → logprob: -14.406970024108887
    9. '((' → logprob: -14.906970024108887
    10. 'N' → logprob: -15.406970024108887

Token 31: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00029232146334834397
    2. ')' → logprob: -8.250292778015137
    3. ']' → logprob: -10.625292778015137
    4. ')])' → logprob: -12.750292778015137
    5. ')],' → logprob: -13.500292778015137
    6. ' )' → logprob: -14.500292778015137
    7. '])]' → logprob: -14.625292778015137
    8. '])' → logprob: -14.625292778015137
    9. ')]
' → logprob: -15.500292778015137
    10. '))' → logprob: -15.750292778015137

Token 32: 'a' (ID: 64)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4680395722389221
    2. '
' → logprob: -1.0930395126342773
    3. 'd' → logprob: -4.968039512634277
    4. 's' → logprob: -5.343039512634277
    5. 'DP' → logprob: -5.593039512634277
    6. 'visited' → logprob: -5.843039512634277
    7. 'w' → logprob: -5.968039512634277
    8. 'stack' → logprob: -6.468039512634277
    9. 'weight' → logprob: -6.468039512634277
    10. 'dist' → logprob: -6.593039512634277

Token 33: '=[' (ID: 13370)
  Prédit: '=['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[' → logprob: -0.0896374061703682
    2. '=[]' → logprob: -3.214637517929077
    3. '=' → logprob: -3.339637517929077
    4. '=[[' → logprob: -5.464637279510498
    5. '=list' → logprob: -5.964637279510498
    6. ' =' → logprob: -6.964637279510498
    7. '=[]
' → logprob: -7.339637279510498
    8. 'rr' → logprob: -7.589637279510498
    9. 'w' → logprob: -8.964637756347656
    10. '=[]
' → logprob: -9.214637756347656

Token 34: 'int' (ID: 491)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11549527198076248
    2. '[' → logprob: -2.865495204925537
    3. '[]' → logprob: -3.115495204925537
    4. '[int' → logprob: -5.740495204925537
    5. 'list' → logprob: -6.240495204925537
    6. 'int' → logprob: -6.365495204925537
    7. ']' → logprob: -8.740495681762695
    8. '[]
' → logprob: -8.865495681762695
    9. 'False' → logprob: -8.990495681762695
    10. '(int' → logprob: -9.365495681762695

Token 35: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00012821101699955761
    2. '(' → logprob: -9.125127792358398
    3. '()' → logprob: -12.250127792358398
    4. ' (' → logprob: -12.375127792358398
    5. 'input' → logprob: -12.500127792358398
    6. ' input' → logprob: -12.875127792358398
    7. ',input' → logprob: -13.125127792358398
    8. '(x' → logprob: -14.125127792358398
    9. '=input' → logprob: -14.625127792358398
    10. '(i' → logprob: -15.250127792358398

Token 36: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.004195929039269686
    2. '()' → logprob: -5.5041961669921875
    3. '()]' → logprob: -9.379196166992188
    4. ')' → logprob: -10.754196166992188
    5. '())
' → logprob: -12.254196166992188
    6. ' ())' → logprob: -13.254196166992188
    7. '(' → logprob: -14.129196166992188
    8. '()),' → logprob: -14.379196166992188
    9. '())
' → logprob: -14.504196166992188
    10. '()))' → logprob: -14.504196166992188

Token 37: ' for' (ID: 395)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 38: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0007102862582542002
    2. 'range' → logprob: -7.250710487365723
    3. '	range' → logprob: -15.375710487365723
    4. '(range' → logprob: -15.875710487365723
    5. ' ' → logprob: -17.500709533691406
    6. '_range' → logprob: -17.750709533691406
    7. ' _' → logprob: -17.875709533691406
    8. '_' → logprob: -19.500709533691406
    9. ' rango' → logprob: -19.750709533691406
    10. ' xrange' → logprob: -19.875709533691406

Token 39: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.15379944443702698
    2. 'range' → logprob: -2.028799533843994
    3. ' in' → logprob: -4.528799533843994
    4. 'in' → logprob: -8.778799057006836
    5. '(range' → logprob: -9.403799057006836
    6. ' ' → logprob: -11.278799057006836
    7. '	range' → logprob: -11.653799057006836
    8. '_range' → logprob: -12.153799057006836
    9. 'ange' → logprob: -13.653799057006836
    10. '  ' → logprob: -13.903799057006836

Token 40: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5759488344192505
    2. 'range' → logprob: -0.8259488344192505
    3. '	range' → logprob: -12.700948715209961
    4. ' ' → logprob: -12.825948715209961
    5. '(range' → logprob: -14.450948715209961
    6. 'r' → logprob: -14.450948715209961
    7. '_' → logprob: -14.700948715209961
    8. 'w' → logprob: -14.825948715209961
    9. '  ' → logprob: -15.075948715209961
    10. 'rang' → logprob: -15.075948715209961

Token 41: '(K' (ID: 28797)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.4770999848842621
    2. '(K' → logprob: -0.9771000146865845
    3. '(N' → logprob: -6.102099895477295
    4. '(' → logprob: -7.477099895477295
    5. '(range' → logprob: -9.102100372314453
    6. '(Q' → logprob: -10.602100372314453
    7. ' range' → logprob: -10.727100372314453
    8. ' (' → logprob: -11.352100372314453
    9. 'range' → logprob: -11.727100372314453
    10. '(A' → logprob: -12.352100372314453

Token 42: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00504269078373909
    2. ']' → logprob: -5.380042552947998
    3. ')' → logprob: -7.880042552947998
    4. '])]' → logprob: -10.630043029785156
    5. '])' → logprob: -11.130043029785156
    6. ')])' → logprob: -12.880043029785156
    7. ')],' → logprob: -14.505043029785156
    8. '')]' → logprob: -14.505043029785156
    9. ' ]' → logprob: -14.880043029785156
    10. ' )' → logprob: -15.505043029785156

Token 43: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12463386356830597
    2. 'd' → logprob: -3.4996337890625
    3. 'dp' → logprob: -3.4996337890625
    4. 'b' → logprob: -4.1246337890625
    5. 'w' → logprob: -4.3746337890625
    6. '\n' → logprob: -5.2496337890625
    7. 's' → logprob: -5.3746337890625
    8. '[' → logprob: -5.7496337890625
    9. ' 
' → logprob: -5.9996337890625
    10. '\' → logprob: -6.4996337890625

Token 44: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7778321504592896
    2. ' for' → logprob: -1.0278321504592896
    3. ' dp' → logprob: -2.15283203125
    4. 'dp' → logprob: -3.15283203125
    5. ' result' → logprob: -5.52783203125
    6. 'd' → logprob: -5.77783203125
    7. 'result' → logprob: -6.27783203125
    8. ' b' → logprob: -6.77783203125
    9. ' d' → logprob: -6.90283203125
    10. ' f' → logprob: -6.90283203125

Token 45: ' each' (ID: 2454)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.13327357172966003
    2. 'i' → logprob: -2.3832736015319824
    3. '_' → logprob: -4.008273601531982
    4. ' _' → logprob: -4.258273601531982
    5. '_i' → logprob: -9.258273124694824
    6. ' w' → logprob: -9.883273124694824
    7. 'w' → logprob: -10.383273124694824
    8. ' ' → logprob: -11.383273124694824
    9. ' x' → logprob: -12.383273124694824
    10. '	i' → logprob: -12.383273124694824

Token 46: ' ball' (ID: 7880)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.8389730453491211
    2. ' _' → logprob: -0.9639730453491211
    3. '_' → logprob: -1.838973045349121
    4. 'i' → logprob: -3.963973045349121
    5. ' ' → logprob: -5.463973045349121
    6. '_i' → logprob: -5.713973045349121
    7. 'a' → logprob: -8.588973045349121
    8. 'w' → logprob: -8.963973045349121
    9. ' item' → logprob: -9.213973045349121
    10. ' w' → logprob: -9.338973045349121

Token 47: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05515476316213608
    2. ' in' → logprob: -3.555154800415039
    3. 'in' → logprob: -4.305154800415039
    4. ',' → logprob: -5.180154800415039
    5. ' :' → logprob: -6.930154800415039
    6. ' i' → logprob: -7.055154800415039
    7. 'a' → logprob: -7.180154800415039
    8. 'i' → logprob: -7.305154800415039
    9. '_' → logprob: -7.305154800415039
    10. 'for' → logprob: -7.555154800415039

Token 48: ' record' (ID: 3704)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8789920210838318
    2. 'for' → logprob: -2.1289920806884766
    3. ' t' → logprob: -2.5039920806884766
    4. ' b' → logprob: -2.6289920806884766
    5. ' i' → logprob: -2.7539920806884766
    6. ' w' → logprob: -2.8789920806884766
    7. ' ' → logprob: -3.5039920806884766
    8. ' idx' → logprob: -4.128992080688477
    9. ' weight' → logprob: -4.253992080688477
    10. ' in' → logprob: -4.503992080688477

Token 49: ' positions' (ID: 15897)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.3423064649105072
    2. ' w' → logprob: -1.4673064947128296
    3. ' the' → logprob: -3.84230637550354
    4. ' a' → logprob: -4.467306613922119
    5. 'a' → logprob: -4.967306613922119
    6. 'the' → logprob: -5.592306613922119
    7. ' ' → logprob: -5.967306613922119
    8. '(' → logprob: -6.467306613922119
    9. '[' → logprob: -6.592306613922119
    10. 's' → logprob: -6.592306613922119

Token 50: ' of' (ID: 328)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.5513664484024048
    2. '=' → logprob: -1.4263664484024048
    3. ' =' → logprob: -3.5513663291931152
    4. 'pos' → logprob: -3.5513663291931152
    5. '_positions' → logprob: -3.5513663291931152
    6. '[' → logprob: -3.9263663291931152
    7. '_' → logprob: -4.301366329193115
    8. ' positions' → logprob: -4.551366329193115
    9. 'position' → logprob: -4.551366329193115
    10. 'w' → logprob: -5.301366329193115

Token 51: ' future' (ID: 5277)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.21702511608600616
    2. 'a' → logprob: -2.7170250415802
    3. 'the' → logprob: -3.0920250415802
    4. 'each' → logprob: -3.8420250415802
    5. ' the' → logprob: -4.092025279998779
    6. ' w' → logprob: -4.217025279998779
    7. ' each' → logprob: -4.842025279998779
    8. ' its' → logprob: -5.092025279998779
    9. 'players' → logprob: -5.717025279998779
    10. ' ' → logprob: -6.467025279998779

Token 52: ' accesses' (ID: 175361)
  Prédit: 'uses'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uses' → logprob: -0.7097253203392029
    2. 'appear' → logprob: -1.5847253799438477
    3. 'hits' → logprob: -1.9597253799438477
    4. 'usage' → logprob: -3.2097253799438477
    5. 'occ' → logprob: -3.2097253799438477
    6. 'throws' → logprob: -3.5847253799438477
    7. 'use' → logprob: -4.084725379943848
    8. 'b' → logprob: -4.834725379943848
    9. ' uses' → logprob: -5.084725379943848
    10. 'appearance' → logprob: -5.209725379943848

Token 53: '
' (ID: 198)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.5988442301750183
    2. 'pos' → logprob: -0.9738442301750183
    3. 'p' → logprob: -3.723844289779663
    4. '_positions' → logprob: -4.473844051361084
    5. 'position' → logprob: -4.973844051361084
    6. '```' → logprob: -5.098844051361084
    7. '_pos' → logprob: -5.223844051361084
    8. '_' → logprob: -5.473844051361084
    9. 'next' → logprob: -5.973844051361084
    10. ' positions' → logprob: -6.473844051361084

Token 54: 'positions' (ID: 32297)
  Prédit: 'positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.46460074186325073
    2. 'pos' → logprob: -1.0896008014678955
    3. 'from' → logprob: -4.464600563049316
    4. ' positions' → logprob: -5.214600563049316
    5. '_positions' → logprob: -5.339600563049316
    6. 'p' → logprob: -5.839600563049316
    7. 'position' → logprob: -6.089600563049316
    8. '_pos' → logprob: -6.214600563049316
    9. '```' → logprob: -6.339600563049316
    10. '_' → logprob: -6.589600563049316

Token 55: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09810184687376022
    2. ' =' → logprob: -2.598101854324341
    3. '=[' → logprob: -4.098101615905762
    4. '=[]' → logprob: -6.223101615905762
    5. '=[[' → logprob: -8.723101615905762
    6. ' =[' → logprob: -9.223101615905762
    7. '={}' → logprob: -9.473101615905762
    8. '[' → logprob: -9.723101615905762
    9. '={' → logprob: -11.348101615905762
    10. '＝' → logprob: -12.348101615905762

Token 56: '[]' (ID: 1951)
  Prédit: '[]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.002617158927023411
    2. '[' → logprob: -6.252617359161377
    3. ' []' → logprob: -7.377617359161377
    4. '[]
' → logprob: -10.002616882324219
    5. '[]

' → logprob: -12.002616882324219
    6. '[]}' → logprob: -13.252616882324219
    7. ' [[]' → logprob: -13.377616882324219
    8. ' [' → logprob: -13.502616882324219
    9. 'list' → logprob: -13.627616882324219
    10. 'deque' → logprob: -13.627616882324219

Token 57: ' for' (ID: 395)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5990869998931885
    2. '()' → logprob: -1.7240869998931885
    3. ' for' → logprob: -1.9740869998931885
    4. 'for' → logprob: -2.4740869998931885
    5. '(N' → logprob: -3.5990869998931885
    6. '(len' → logprob: -4.474086761474609
    7. '(M' → logprob: -5.224086761474609
    8. '(n' → logprob: -6.724086761474609
    9. ']' → logprob: -7.474086761474609
    10. ')' → logprob: -7.974086761474609

Token 58: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.24692142009735107
    2. '(range' → logprob: -2.6219215393066406
    3. '_' → logprob: -2.7469215393066406
    4. 'range' → logprob: -3.2469215393066406
    5. '(' → logprob: -3.3719215393066406
    6. ' _' → logprob: -4.996921539306641
    7. '(_' → logprob: -7.621921539306641
    8. ' in' → logprob: -7.871921539306641
    9. ' (' → logprob: -7.871921539306641
    10. '_range' → logprob: -8.62192153930664

Token 59: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5693344473838806
    2. 'in' → logprob: -1.3193345069885254
    3. ' in' → logprob: -1.8193345069885254
    4. ' range' → logprob: -5.569334506988525
    5. '(range' → logprob: -7.569334506988525
    6. 'w' → logprob: -8.444334030151367
    7. '(w' → logprob: -10.569334030151367
    8. '_' → logprob: -10.819334030151367
    9. 'a' → logprob: -10.819334030151367
    10. '(' → logprob: -11.569334030151367

Token 60: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5771400332450867
    2. 'range' → logprob: -0.8271400332450867
    3. '(range' → logprob: -6.827139854431152
    4. 'w' → logprob: -9.577139854431152
    5. ' w' → logprob: -10.577139854431152
    6. '(w' → logprob: -11.327139854431152
    7. 'rang' → logprob: -13.702139854431152
    8. ' ' → logprob: -13.827139854431152
    9. ' xrange' → logprob: -13.827139854431152
    10. '	range' → logprob: -13.952139854431152

Token 61: '(N' (ID: 10564)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.37105557322502136
    2. '(w' → logprob: -1.7460556030273438
    3. '(N' → logprob: -2.1210556030273438
    4. '(K' → logprob: -4.621055603027344
    5. '(range' → logprob: -5.371055603027344
    6. '(' → logprob: -7.496055603027344
    7. ' range' → logprob: -8.996055603027344
    8. 'range' → logprob: -8.996055603027344
    9. 'M' → logprob: -9.496055603027344
    10. '(W' → logprob: -9.746055603027344

Token 62: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.007646495010703802
    2. ')]' → logprob: -4.882646560668945
    3. ' +' → logprob: -11.007646560668945
    4. ')' → logprob: -11.007646560668945
    5. '+)' → logprob: -13.132646560668945
    6. ')]
' → logprob: -13.632646560668945
    7. ')])' → logprob: -14.132646560668945
    8. '+]' → logprob: -14.632646560668945
    9. '+
' → logprob: -14.757646560668945
    10. ')]

' → logprob: -14.757646560668945

Token 63: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8219583075260743e-05
    2. ' ' → logprob: -11.125038146972656
    3. '2' → logprob: -11.875038146972656
    4. '+' → logprob: -12.125038146972656
    5. ')' → logprob: -12.125038146972656
    6. ')]' → logprob: -13.125038146972656
    7. '(' → logprob: -13.625038146972656
    8. '```' → logprob: -14.625038146972656
    9. 'K' → logprob: -14.875038146972656
    10. '])' → logprob: -15.000038146972656

Token 64: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.011701592244207859
    2. ']' → logprob: -4.636701583862305
    3. ')' → logprob: -6.261701583862305
    4. '])' → logprob: -10.761701583862305
    5. ')]
' → logprob: -12.011701583862305
    6. '])]' → logprob: -12.761701583862305
    7. ')])' → logprob: -13.636701583862305
    8. ')]

' → logprob: -13.636701583862305
    9. ' )' → logprob: -14.136701583862305
    10. ' ]' → logprob: -14.386701583862305

Token 65: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06811656802892685
    2. '
' → logprob: -2.9431166648864746
    3. ' for' → logprob: -4.443116664886475
    4. '<|end|>' → logprob: -6.943116664886475
    5. '
' → logprob: -8.568116188049316
    6. '```' → logprob: -9.693116188049316
    7. '\n' → logprob: -10.068116188049316
    8. '' → logprob: -10.068116188049316
    9. '

' → logprob: -10.693116188049316
    10. '<|end|>' → logprob: -10.818116188049316

Token 66: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.016318101435899734
    2. 'i' → logprob: -4.641318321228027
    3. ' _' → logprob: -5.516318321228027
    4. ' idx' → logprob: -6.141318321228027
    5. '_' → logprob: -8.641318321228027
    6. '_i' → logprob: -9.266318321228027
    7. ' index' → logprob: -10.891318321228027
    8. 'idx' → logprob: -11.141318321228027
    9. ' ball' → logprob: -11.266318321228027
    10. ' ' → logprob: -11.391318321228027

Token 67: ',v' (ID: 30680)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5788228511810303
    2. 'in' → logprob: -0.8288228511810303
    3. ',' → logprob: -6.453823089599609
    4. ' ' → logprob: -6.703823089599609
    5. ' ,' → logprob: -10.57882308959961
    6. '	in' → logprob: -11.45382308959961
    7. '(' → logprob: -11.82882308959961
    8. ',in' → logprob: -11.82882308959961
    9. 'range' → logprob: -12.07882308959961
    10. ',_' → logprob: -12.82882308959961

Token 68: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.18939611315727234
    2. 'in' → logprob: -1.8143961429595947
    3. ',' → logprob: -4.689395904541016
    4. ',in' → logprob: -8.314395904541016
    5. ' ,' → logprob: -10.064395904541016
    6. ',n' → logprob: -10.439395904541016
    7. ' ' → logprob: -10.689395904541016
    8. ',i' → logprob: -11.189395904541016
    9. 'enumer' → logprob: -11.439395904541016
    10. 'n' → logprob: -11.689395904541016

Token 69: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.3869498372077942
    2. ' enumerate' → logprob: -1.1369497776031494
    3. 'range' → logprob: -10.63694953918457
    4. '(en' → logprob: -11.01194953918457
    5. '```' → logprob: -11.13694953918457
    6. 'en' → logprob: -11.26194953918457
    7. 'enum' → logprob: -12.38694953918457
    8. ' range' → logprob: -13.13694953918457
    9. 'a' → logprob: -14.01194953918457
    10. '`' → logprob: -14.01194953918457

Token 70: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -6.153795766294934e-06
    2. 'a' → logprob: -12.375005722045898
    3. '(' → logprob: -13.625005722045898
    4. ' (' → logprob: -14.875005722045898
    5. '(A' → logprob: -15.750005722045898
    6. ' a' → logprob: -16.1250057220459
    7. '(range' → logprob: -17.1250057220459
    8. '((' → logprob: -17.2500057220459
    9. '(s' → logprob: -18.2500057220459
    10. '(ai' → logprob: -19.8750057220459

Token 71: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0016506604151800275
    2. '):
' → logprob: -7.001650810241699
    3. ':' → logprob: -7.876650810241699
    4. ' ):' → logprob: -9.0016508102417
    5. ']:' → logprob: -9.2516508102417
    6. ')' → logprob: -9.3766508102417
    7. ']):' → logprob: -10.7516508102417
    8. ',' → logprob: -11.7516508102417
    9. ' ' → logprob: -12.3766508102417
    10. ')):' → logprob: -12.7516508102417

Token 72: '   ' (ID: 271)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 73: ' positions' (ID: 15897)
  Prédit: ' positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' positions' → logprob: -0.06995566189289093
    2. 'positions' (adapté à ' positions') → logprob: -2.694955587387085
    3. '.positions' → logprob: -11.819955825805664
    4. '   ' → logprob: -12.319955825805664
    5. '_positions' → logprob: -12.444955825805664
    6. '```' → logprob: -13.694955825805664
    7. ' if' → logprob: -14.569955825805664
    8. ' posiciones' → logprob: -14.694955825805664
    9. ' `' → logprob: -14.944955825805664
    10. '`' → logprob: -15.319955825805664

Token 74: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -2.629921436891891e-05
    2. '[a' → logprob: -10.87502670288086
    3. '[' → logprob: -12.50002670288086
    4. 'v' → logprob: -12.87502670288086
    5. '```' → logprob: -15.12502670288086
    6. '[val' → logprob: -15.50002670288086
    7. '[int' → logprob: -16.12502670288086
    8. 'a' → logprob: -16.25002670288086
    9. '[w' → logprob: -16.62502670288086
    10. '[value' → logprob: -16.75002670288086

Token 75: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.015547182410955429
    2. '.append' → logprob: -4.265547275543213
    3. '.' → logprob: -7.140547275543213
    4. ').' → logprob: -7.765547275543213
    5. ' ].' → logprob: -9.140546798706055
    6. ']' → logprob: -10.015546798706055
    7. ')].' → logprob: -13.140546798706055
    8. '   ' → logprob: -13.390546798706055
    9. '.app' → logprob: -13.515546798706055
    10. ':].' → logprob: -13.515546798706055

Token 76: 'append' (ID: 9132)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 77: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -2.7610454708337784e-05
    2. '(' → logprob: -10.500027656555176
    3. 'i' → logprob: -17.62502670288086
    4. ' (' → logprob: -17.87502670288086
    5. '(
' → logprob: -18.12502670288086
    6. '((' → logprob: -21.25002670288086
    7. '(a' → logprob: -21.37502670288086
    8. ' i' → logprob: -21.75002670288086
    9. '(x' → logprob: -21.87502670288086
    10. '(ii' → logprob: -22.62502670288086

Token 78: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.292907877039397e-06
    2. ' )' → logprob: -13.25000286102295
    3. ')
' → logprob: -13.62500286102295
    4. ')

' → logprob: -16.625003814697266
    5. '))' → logprob: -17.875003814697266
    6. ')#' → logprob: -18.000003814697266
    7. '#' → logprob: -18.125003814697266
    8. '+' → logprob: -18.250003814697266
    9. '}' → logprob: -18.500003814697266
    10. ')return' → logprob: -19.000003814697266

Token 79: '#' (ID: 2)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -1.2056009769439697
    2. 'used' → logprob: -1.5806009769439697
    3. 'import' → logprob: -1.7056009769439697
    4. 'pos' → logprob: -2.4556009769439697
    5. 'last' → logprob: -2.8306009769439697
    6. 'in' → logprob: -3.3306009769439697
    7. 'from' → logprob: -3.4556009769439697
    8. 'cache' → logprob: -3.7056009769439697
    9. 'current' → logprob: -3.8306009769439697
    10. 'now' → logprob: -4.955600738525391

Token 80: ' For' (ID: 2214)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8474421501159668
    2. 'next' → logprob: -0.9724421501159668
    3. 'from' → logprob: -2.347442150115967
    4. 'last' → logprob: -3.722442150115967
    5. 'used' → logprob: -4.222442150115967
    6. 'pos' → logprob: -4.472442150115967
    7. 'cache' → logprob: -5.097442150115967
    8. 'for' → logprob: -5.347442150115967
    9. 'ans' → logprob: -5.347442150115967
    10. 'answer' → logprob: -5.597442150115967

Token 81: ' each' (ID: 2454)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.6493433117866516
    2. ' i' → logprob: -0.8993433117866516
    3. '_' → logprob: -3.024343252182007
    4. 'i' → logprob: -4.774343490600586
    5. ' ' → logprob: -5.024343490600586
    6. ' v' → logprob: -6.399343490600586
    7. ' pos' → logprob: -6.774343490600586
    8. ' range' → logprob: -7.274343490600586
    9. 'pos' → logprob: -7.399343490600586
    10. ' ball' → logprob: -7.524343490600586

Token 82: ' ball' (ID: 7880)
  Prédit: ' ball'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ball' → logprob: -0.6483689546585083
    2. 'i' → logprob: -2.0233688354492188
    3. 'ball' → logprob: -2.0233688354492188
    4. ' i' → logprob: -2.3983688354492188
    5. ' position' → logprob: -2.8983688354492188
    6. 'position' → logprob: -4.273368835449219
    7. 'v' → logprob: -4.398368835449219
    8. '_' → logprob: -4.773368835449219
    9. ' v' → logprob: -5.273368835449219
    10. 'pos' → logprob: -5.273368835449219

Token 83: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05138523131608963
    2. 'next' → logprob: -5.301385402679443
    3. ' ,' → logprob: -5.426385402679443
    4. 'in' → logprob: -5.426385402679443
    5. ',last' → logprob: -5.426385402679443
    6. 'pos' → logprob: -5.551385402679443
    7. 'last' → logprob: -5.676385402679443
    8. ',next' → logprob: -5.801385402679443
    9. ',i' → logprob: -5.926385402679443
    10. ',pos' → logprob: -6.301385402679443

Token 84: ' maintain' (ID: 12930)
  Prédit: 'append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.7078135013580322
    2. ' append' → logprob: -1.4578135013580322
    3. 'positions' → logprob: -1.8328135013580322
    4. 'pop' → logprob: -3.7078135013580322
    5. ' positions' → logprob: -4.082813262939453
    6. 'pos' → logprob: -4.082813262939453
    7. ' pop' → logprob: -4.832813262939453
    8. ' add' → logprob: -5.082813262939453
    9. 'import' → logprob: -5.457813262939453
    10. 'p' → logprob: -5.832813262939453

Token 85: ' an' (ID: 448)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 86: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.01089124009013176
    2. ' index' → logprob: -4.885891437530518
    3. 'idx' → logprob: -6.510891437530518
    4. 'import' → logprob: -7.010891437530518
    5. 'indices' → logprob: -7.885891437530518
    6. '#index' → logprob: -9.38589096069336
    7. 'indicator' → logprob: -9.63589096069336
    8. 'iterator' → logprob: -9.88589096069336
    9. 'pointer' → logprob: -10.01089096069336
    10. 'indexes' → logprob: -10.13589096069336

Token 87: ' to' (ID: 316)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5397114753723145
    2. ' in' → logprob: -2.6647114753723145
    3. ' to' → logprob: -2.6647114753723145
    4. ' into' → logprob: -2.7897114753723145
    5. 'in' → logprob: -3.4147114753723145
    6. 'to' → logprob: -3.7897114753723145
    7. 'into' → logprob: -4.0397114753723145
    8. ' pointing' → logprob: -4.0397114753723145
    9. '[]' → logprob: -4.2897114753723145
    10. 'pos' → logprob: -4.2897114753723145

Token 88: ' the' (ID: 290)
  Prédit: ' track'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' track' → logprob: -0.2889823317527771
    2. 'track' → logprob: -2.163982391357422
    3. '0' → logprob: -2.538982391357422
    4. 'keep' → logprob: -4.163982391357422
    5. ' keep' → logprob: -4.538982391357422
    6. 'next' → logprob: -4.913982391357422
    7. ' ' → logprob: -5.288982391357422
    8. 'point' → logprob: -5.788982391357422
    9. ' the' → logprob: -6.038982391357422
    10. 'the' → logprob: -6.163982391357422

Token 89: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.3551800847053528
    2. 'next' → logprob: -1.730180025100708
    3. 'current' → logprob: -2.855180025100708
    4. ' current' → logprob: -2.855180025100708
    5. '0' → logprob: -5.105180263519287
    6. ' ' → logprob: -7.980180263519287
    7. 'positions' → logprob: -9.730179786682129
    8. ' positions' → logprob: -10.230179786682129
    9. 'currently' → logprob: -10.605179786682129
    10. '_next' → logprob: -11.105179786682129

Token 90: ' use' (ID: 1199)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'use' → logprob: -1.1445218324661255
    2. 'access' → logprob: -1.3945218324661255
    3. ' access' → logprob: -1.8945218324661255
    4. ' use' → logprob: -2.519521713256836
    5. ' position' → logprob: -2.644521713256836
    6. 'position' → logprob: -2.894521713256836
    7. 'usage' → logprob: -3.644521713256836
    8. ' usage' → logprob: -3.769521713256836
    9. ' future' → logprob: -5.269521713256836
    10. ' upcoming' → logprob: -5.394521713256836

Token 91: ' position' (ID: 4010)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.32107892632484436
    2. 'pos' → logprob: -2.6960790157318115
    3. 'idx' → logprob: -3.0710790157318115
    4. '[' → logprob: -3.1960790157318115
    5. '[next' → logprob: -3.4460790157318115
    6. ' next' → logprob: -3.6960790157318115
    7. '_next' → logprob: -4.821078777313232
    8. 'in' → logprob: -4.946078777313232
    9. 's' → logprob: -5.071078777313232
    10. 'position' → logprob: -5.196078777313232

Token 92: '
' (ID: 198)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.21159127354621887
    2. 'idx' → logprob: -2.4615912437438965
    3. 'pos' → logprob: -2.7115912437438965
    4. '_next' → logprob: -4.7115912437438965
    5. ' next' → logprob: -4.9615912437438965
    6. '```' → logprob: -5.0865912437438965
    7. 'n' → logprob: -5.7115912437438965
    8. ' nxt' → logprob: -5.9615912437438965
    9. 'index' → logprob: -6.5865912437438965
    10. 'cur' → logprob: -6.5865912437438965

Token 93: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.3526953160762787
    2. 'idx' → logprob: -2.3526952266693115
    3. 'pos' → logprob: -2.4776952266693115
    4. 'n' → logprob: -2.7276952266693115
    5. 'index' → logprob: -4.227695465087891
    6. 'cur' → logprob: -4.727695465087891
    7. 'now' → logprob: -4.852695465087891
    8. 'current' → logprob: -5.727695465087891
    9. 'p' → logprob: -6.102695465087891
    10. 'indices' → logprob: -6.352695465087891

Token 94: '_use' (ID: 36283)
  Prédit: '_use'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_use' → logprob: -0.8036750555038452
    2. '_index' → logprob: -1.1786750555038452
    3. '_idx' → logprob: -1.6786750555038452
    4. '_pos' → logprob: -3.0536751747131348
    5. '_indices' → logprob: -5.178675174713135
    6. '_usage' → logprob: -5.803675174713135
    7. '_' → logprob: -7.053675174713135
    8. '_access' → logprob: -7.803675174713135
    9. '_position' → logprob: -8.053674697875977
    10. '_positions' → logprob: -9.053674697875977

Token 95: '_idx' (ID: 15257)
  Prédit: '=['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[' → logprob: -0.17722828686237335
    2. '=' → logprob: -2.1772282123565674
    3. ' =' → logprob: -3.0522282123565674
    4. ' =[' → logprob: -6.8022284507751465
    5. '_idx' → logprob: -8.677227973937988
    6. '=_' → logprob: -8.677227973937988
    7. 's' → logprob: -8.677227973937988
    8. '=[]' → logprob: -9.927227973937988
    9. '=[[' → logprob: -10.177227973937988
    10. '_index' → logprob: -10.802227973937988

Token 96: '=[' (ID: 13370)
  Prédit: '=['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[' → logprob: -0.7735457420349121
    2. ' =' → logprob: -1.148545742034912
    3. '=' → logprob: -1.523545742034912
    4. ' =[' → logprob: -5.648545742034912
    5. '[' → logprob: -10.52354621887207
    6. '=[]' → logprob: -11.02354621887207
    7. '=[[' → logprob: -11.52354621887207
    8. '={}' → logprob: -13.27354621887207
    9. '＝' → logprob: -13.52354621887207
    10. ' ' → logprob: -13.64854621887207

Token 97: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011343818623572588
    2. ' ' → logprob: -6.876134395599365
    3. '-' → logprob: -9.376133918762207
    4. '[' → logprob: -11.626133918762207
    5. ' -' → logprob: -12.251133918762207
    6. ' [' → logprob: -13.751133918762207
    7. '   ' → logprob: -14.126133918762207
    8. '```' → logprob: -15.563633918762207
    9. ']' → logprob: -15.751133918762207
    10. '  ' → logprob: -16.063634872436523

Token 98: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.6696628332138062
    2. ']' → logprob: -1.5446628332138062
    3. ' for' → logprob: -1.6696628332138062
    4. 'for' → logprob: -2.5446629524230957
    5. ']*' → logprob: -4.919662952423096
    6. ']+' → logprob: -8.044662475585938
    7. ' ]' → logprob: -8.919662475585938
    8. ' ' → logprob: -9.794662475585938
    9. '*(' → logprob: -9.919662475585938
    10. '   ' → logprob: -10.919662475585938

Token 99: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -8.280175097752362e-05
    2. ' N' → logprob: -9.875082969665527
    3. '(N' → logprob: -10.500082969665527
    4. 'len' → logprob: -13.750082969665527
    5. '   ' → logprob: -14.250082969665527
    6. 'M' → logprob: -14.875082969665527
    7. ' ' → logprob: -15.250082969665527
    8. '	N' → logprob: -15.375082969665527
    9. ' (' → logprob: -15.750082969665527
    10. ')' → logprob: -15.750082969665527

Token 100: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -7.941850526549388e-06
    2. ' +' → logprob: -11.875007629394531
    3. '+
' → logprob: -14.125007629394531
    4. '1' → logprob: -15.625007629394531
    5. '+)' → logprob: -17.00000762939453
    6. '＋' → logprob: -17.25000762939453
    7. '```' → logprob: -17.87500762939453
    8. '+

' → logprob: -18.75000762939453
    9. '+B' → logprob: -19.25000762939453
    10. ')+' → logprob: -19.25000762939453

Token 101: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.180258191714529e-06
    2. ' ' → logprob: -11.875008583068848
    3. '+' → logprob: -14.500008583068848
    4. '```' → logprob: -15.875008583068848
    5. '2' → logprob: -16.37500762939453
    6. '   ' → logprob: -16.68750762939453
    7. '１' → logprob: -17.00000762939453
    8. ')' → logprob: -17.18750762939453
    9. '  ' → logprob: -18.18750762939453
    10. '

' → logprob: -18.50000762939453

Token 102: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.281485836254433e-05
    2. ' )' → logprob: -9.375092506408691
    3. ')
' → logprob: -12.125092506408691
    4. '
' → logprob: -14.125092506408691
    5. ')

' → logprob: -14.750092506408691
    6. '#' → logprob: -15.000092506408691
    7. '<|end|>' → logprob: -15.625092506408691
    8. '```' → logprob: -15.875092506408691
    9. ']' → logprob: -16.000093460083008
    10. ')n' → logprob: -16.250093460083008

Token 103: 'cache' (ID: 18949)
  Prédit: 'cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cache' → logprob: -0.12790213525295258
    2. 'import' → logprob: -3.502902030944824
    3. 'result' → logprob: -3.752902030944824
    4. 'answer' → logprob: -4.127902030944824
    5. 'ans' → logprob: -4.377902030944824
    6. 'used' → logprob: -4.877902030944824
    7. 'stack' → logprob: -5.002902030944824
    8. 'res' → logprob: -5.377902030944824
    9. 'in' → logprob: -5.502902030944824
    10. 'answers' → logprob: -5.752902030944824

Token 104: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3815895617008209
    2. '=set' → logprob: -1.3815895318984985
    3. ' =' → logprob: -3.131589651107788
    4. '=[]' → logprob: -4.006589412689209
    5. '={}' → logprob: -5.881589412689209
    6. '_size' → logprob: -6.881589412689209
    7. '_set' → logprob: -9.131589889526367
    8. '=[]
' → logprob: -9.631589889526367
    9. '={}
' → logprob: -10.381589889526367
    10. '=size' → logprob: -10.506589889526367

Token 105: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20450429618358612
    2. '0' → logprob: -1.7045042514801025
    3. 'False' → logprob: -6.079504489898682
    4. ' ]' → logprob: -7.829504489898682
    5. ']
' → logprob: -9.079504013061523
    6. ')' → logprob: -9.829504013061523
    7. '[]' → logprob: -9.954504013061523
    8. ' ' → logprob: -10.579504013061523
    9. ']

' → logprob: -10.579504013061523
    10. '-' → logprob: -11.079504013061523

Token 106: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -12.125007629394531
    3. 'float' → logprob: -13.625007629394531
    4. '-' → logprob: -14.250007629394531
    5. '100' → logprob: -16.00000762939453
    6. '2' → logprob: -16.25000762939453
    7. '   ' → logprob: -16.50000762939453
    8. 'sys' → logprob: -16.50000762939453
    9. '10' → logprob: -17.06250762939453
    10. ' -' → logprob: -17.12500762939453

Token 107: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04939919337630272
    2. ']*' → logprob: -3.5493991374969482
    3. ' ]' → logprob: -4.174399375915527
    4. ')' → logprob: -6.174399375915527
    5. ' for' → logprob: -7.049399375915527
    6. ',' → logprob: -7.674399375915527
    7. ']*(' → logprob: -8.174399375915527
    8. ']+' → logprob: -8.424399375915527
    9. ')]' → logprob: -10.049399375915527
    10. 'for' → logprob: -10.049399375915527

Token 108: 'M' (ID: 44)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 109: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9645586013793945
    2. 'cache' → logprob: -1.5895586013793945
    3. 'answer' → logprob: -2.5895586013793945
    4. 'next' → logprob: -3.2145586013793945
    5. 'result' → logprob: -3.2145586013793945
    6. 'used' → logprob: -3.3395586013793945
    7. 'usage' → logprob: -3.5895586013793945
    8. 'answers' → logprob: -3.8395586013793945
    9. ' for' → logprob: -3.9645586013793945
    10. 'ans' → logprob: -4.0895586013793945

Token 110: ' #' (ID: 1069)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cache' → logprob: -0.5524659752845764
    2. 'for' → logprob: -1.9274659156799316
    3. 'used' → logprob: -2.4274659156799316
    4. 'answer' → logprob: -2.6774659156799316
    5. 'result' → logprob: -3.3024659156799316
    6. 'ans' → logprob: -4.177465915679932
    7. 'usage' → logprob: -4.552465915679932
    8. 'next' → logprob: -4.552465915679932
    9. 'count' → logprob: -4.677465915679932
    10. 'answers' → logprob: -4.927465915679932

Token 111: ' cache' (ID: 11956)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cache' → logprob: -0.8911808133125305
    2. '#' → logprob: -1.3911807537078857
    3. '-' → logprob: -1.7661807537078857
    4. '[]' → logprob: -2.2661807537078857
    5. '0' → logprob: -4.266180992126465
    6. 'size' → logprob: -5.141180992126465
    7. 'M' → logprob: -5.141180992126465
    8. '[]
' → logprob: -5.391180992126465
    9. 'positions' → logprob: -5.391180992126465
    10. '-cache' → logprob: -5.766180992126465

Token 112: '[i' (ID: 1768)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cache' → logprob: -1.3646012544631958
    2. 'size' → logprob: -2.1146011352539062
    3. 'positions' → logprob: -2.2396011352539062
    4. '_cache' → logprob: -2.3646011352539062
    5. 'next' → logprob: -2.7396011352539062
    6. 'usage' → logprob: -2.9896011352539062
    7. '_positions' → logprob: -3.3646011352539062
    8. 'hit' → logprob: -3.4896011352539062
    9. '_next' → logprob: -3.4896011352539062
    10. '_size' → logprob: -3.6146011352539062

Token 113: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11090072989463806
    2. '=' → logprob: -2.860900640487671
    3. '<|end|>' → logprob: -3.735900640487671
    4. ')' → logprob: -4.61090087890625
    5. ']=' → logprob: -5.36090087890625
    6. ' =' → logprob: -5.73590087890625
    7. ']=-' → logprob: -6.23590087890625
    8. ' ]' → logprob: -6.61090087890625
    9. '<|end|>' → logprob: -6.73590087890625
    10. ' ' → logprob: -8.11090087890625

Token 114: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005829730071127415
    2. ' =' → logprob: -5.380829811096191
    3. '<|end|>' → logprob: -8.255829811096191
    4. '#' → logprob: -8.380829811096191
    5. ' is' → logprob: -8.630829811096191
    6. ' ' → logprob: -8.880829811096191
    7. '=-' → logprob: -9.255829811096191
    8. ' contains' → logprob: -10.380829811096191
    9. 'contains' → logprob: -10.630829811096191
    10. 'is' → logprob: -10.630829811096191

Token 115: ' ball' (ID: 7880)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0015340241370722651
    2. ' -' → logprob: -6.8765339851379395
    3. 'the' → logprob: -8.126534461975098
    4. '-index' → logprob: -10.001534461975098
    5. 'which' → logprob: -10.501534461975098
    6. '-cache' → logprob: -10.626534461975098
    7. 'None' → logprob: -10.751534461975098
    8. 'ball' → logprob: -11.126534461975098
    9. '-ball' → logprob: -11.376534461975098
    10. 'current' → logprob: -11.626534461975098

Token 116: ' in' (ID: 306)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cache' → logprob: -1.5922664403915405
    2. 'for' → logprob: -1.8422664403915405
    3. 'pos' → logprob: -2.09226655960083
    4. 'used' → logprob: -2.34226655960083
    5. 'answer' → logprob: -2.46726655960083
    6. 'result' → logprob: -2.71726655960083
    7. 'answers' → logprob: -3.21726655960083
    8. 'next' → logprob: -3.34226655960083
    9. 'count' → logprob: -3.71726655960083
    10. 'ans' → logprob: -3.84226655960083

Token 117: ' box' (ID: 5506)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cache' → logprob: -0.30651503801345825
    2. ' cache' → logprob: -2.0565149784088135
    3. 'i' → logprob: -3.0565149784088135
    4. 'the' → logprob: -3.9315149784088135
    5. ' the' → logprob: -4.181515216827393
    6. 'position' → logprob: -4.306515216827393
    7. ' i' → logprob: -4.306515216827393
    8. 'slot' → logprob: -5.181515216827393
    9. ' position' → logprob: -5.306515216827393
    10. ' that' → logprob: -5.431515216827393

Token 118: ' i' (ID: 575)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.405020147562027
    2. 'pos' → logprob: -2.155020236968994
    3. 'cache' → logprob: -2.655020236968994
    4. 'positions' → logprob: -2.655020236968994
    5. 'usage' → logprob: -4.405020236968994
    6. 'in' → logprob: -5.030020236968994
    7. 'position' → logprob: -5.155020236968994
    8. '
' → logprob: -5.155020236968994
    9. '_next' → logprob: -5.280020236968994
    10. ' next' → logprob: -5.280020236968994

Token 119: ' or' (ID: 503)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 120: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.05756017565727234
    2. ' -' → logprob: -2.9325602054595947
    3. 'None' → logprob: -6.057559967041016
    4. ' None' → logprob: -8.182559967041016
    5. ' ' → logprob: -10.557559967041016
    6. '0' → logprob: -11.432559967041016
    7. ')' → logprob: -12.682559967041016
    8. '-none' → logprob: -12.682559967041016
    9. ''' → logprob: -12.932559967041016
    10. ''-' → logprob: -13.682559967041016

Token 121: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2352385965641588e-05
    2. ' ' → logprob: -11.375012397766113
    3. '```' → logprob: -15.625012397766113
    4. '-' → logprob: -15.875012397766113
    5. '   ' → logprob: -16.375011444091797
    6. '2' → logprob: -16.750011444091797
    7. '
' → logprob: -16.750011444091797
    8. '１' → logprob: -17.250011444091797
    9. '_' → logprob: -17.312511444091797
    10. '<|end|>' → logprob: -17.312511444091797

Token 122: ' if' (ID: 538)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -1.2218449115753174
    2. 'cache' → logprob: -1.2218449115753174
    3. 'answer' → logprob: -1.8468449115753174
    4. 'result' → logprob: -2.7218449115753174
    5. 'import' → logprob: -3.3468449115753174
    6. 'pos' → logprob: -3.5968449115753174
    7. 'last' → logprob: -3.9718449115753174
    8. 'used' → logprob: -4.096844673156738
    9. 'positions' → logprob: -4.221844673156738
    10. 'usage' → logprob: -4.346844673156738

Token 123: ' empty' (ID: 8213)
  Prédit: 'empty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'empty' → logprob: -0.11594420671463013
    2. ' empty' → logprob: -2.2409441471099854
    3. 'None' → logprob: -6.6159443855285645
    4. 'Empty' → logprob: -7.8659443855285645
    5. '-empty' → logprob: -7.9909443855285645
    6. '_empty' → logprob: -8.490943908691406
    7. '-' → logprob: -8.490943908691406
    8. ' None' → logprob: -8.615943908691406
    9. '<|end|>' → logprob: -9.365943908691406
    10. ' ' → logprob: -9.490943908691406

Token 124: '
' (ID: 198)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.9433780908584595
    2. 'result' → logprob: -1.6933780908584595
    3. 'cache' → logprob: -2.06837797164917
    4. 'import' → logprob: -2.69337797164917
    5. 'for' → logprob: -3.06837797164917
    6. 'next' → logprob: -3.56837797164917
    7. 'answers' → logprob: -3.81837797164917
    8. 'from' → logprob: -3.94337797164917
    9. 'ans' → logprob: -4.06837797164917
    10. 'last' → logprob: -4.19337797164917

Token 125: 'pos' (ID: 1103)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cache' → logprob: -1.004909873008728
    2. 'result' → logprob: -2.3799099922180176
    3. 'answer' → logprob: -2.3799099922180176
    4. 'pos' → logprob: -2.5049099922180176
    5. 'for' → logprob: -2.6299099922180176
    6. 'next' → logprob: -2.7549099922180176
    7. 'import' → logprob: -3.1299099922180176
    8. 'last' → logprob: -3.2549099922180176
    9. 'used' → logprob: -3.3799099922180176
    10. 'ans' → logprob: -4.129909992218018

Token 126: '_in' (ID: 2267)
  Prédit: '_cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -1.1569089889526367
    2. '_idx' → logprob: -1.5319089889526367
    3. '_in' → logprob: -2.5319089889526367
    4. '=[' → logprob: -2.5319089889526367
    5. '=' → logprob: -2.7819089889526367
    6. 'cache' → logprob: -2.9069089889526367
    7. '=[]' → logprob: -3.1569089889526367
    8. '_indices' → logprob: -3.5319089889526367
    9. 'itions' → logprob: -4.031908988952637
    10. 'idx' → logprob: -4.156908988952637

Token 127: '_cache' (ID: 27045)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cache' → logprob: -0.14310482144355774
    2. '_cache' → logprob: -2.0181047916412354
    3. '	cache' → logprob: -9.018104553222656
    4. '=' → logprob: -9.643104553222656
    5. '-cache' → logprob: -9.643104553222656
    6. 'Cache' → logprob: -9.768104553222656
    7. ' cache' → logprob: -9.893104553222656
    8. ' =' → logprob: -10.768104553222656
    9. '.cache' → logprob: -11.268104553222656
    10. '```' → logprob: -12.143104553222656

Token 128: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03910945728421211
    2. '=[' → logprob: -3.289109468460083
    3. ' =' → logprob: -7.414109230041504
    4. '=[]' → logprob: -7.789109230041504
    5. '={}' → logprob: -10.539109230041504
    6. ' =[' → logprob: -11.289109230041504
    7. '[' → logprob: -13.039109230041504
    8. '=None' → logprob: -13.539109230041504
    9. '={' → logprob: -13.664109230041504
    10. '=zeros' → logprob: -14.039109230041504

Token 129: '-' (ID: 12)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.21760067343711853
    2. '-' → logprob: -2.2176005840301514
    3. '{}' → logprob: -2.7176005840301514
    4. '{-' → logprob: -4.3426008224487305
    5. 'dict' → logprob: -5.3426008224487305
    6. '{' → logprob: -6.0926008224487305
    7. '{})' → logprob: -8.59260082244873
    8. '[' → logprob: -8.96760082244873
    9. '{}
' → logprob: -9.34260082244873
    10. ' [-' → logprob: -9.46760082244873

Token 130: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.620622712536715e-05
    2. '-' → logprob: -10.000045776367188
    3. '(' → logprob: -15.625045776367188
    4. '```' → logprob: -15.750045776367188
    5. ' -' → logprob: -16.250045776367188
    6. ' ' → logprob: -16.375045776367188
    7. 'M' → logprob: -16.750045776367188
    8. '
' → logprob: -17.625045776367188
    9. 'N' → logprob: -17.625045776367188
    10. '(N' → logprob: -17.750045776367188

Token 131: ']*(' (ID: 92627)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 132: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00027134892297908664
    2. '(N' → logprob: -8.375271797180176
    3. 'M' → logprob: -10.375271797180176
    4. ' N' → logprob: -12.000271797180176
    5. '(M' → logprob: -14.500271797180176
    6. ' ' → logprob: -14.875271797180176
    7. '(' → logprob: -14.875271797180176
    8. 'cache' → logprob: -15.250271797180176
    9. ' (' → logprob: -15.500271797180176
    10. '```' → logprob: -15.750271797180176

Token 133: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.5690089639974758e-05
    2. '1' → logprob: -11.250015258789062
    3. ' +' → logprob: -13.500015258789062
    4. '+
' → logprob: -14.000015258789062
    5. '```' → logprob: -15.875015258789062
    6. ')+' → logprob: -16.125015258789062
    7. '＋' → logprob: -17.000015258789062
    8. ')' → logprob: -17.500015258789062
    9. '+)' → logprob: -18.125015258789062
    10. 'plus' → logprob: -18.500015258789062

Token 134: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.630610641877865e-06
    2. ' ' → logprob: -12.250006675720215
    3. '2' → logprob: -14.375006675720215
    4. '```' → logprob: -14.625006675720215
    5. ')' → logprob: -16.3750057220459
    6. '+' → logprob: -16.5625057220459
    7. '0' → logprob: -16.8750057220459
    8. '

' → logprob: -17.6250057220459
    9. '   ' → logprob: -17.6875057220459
    10. '7' → logprob: -17.6875057220459

Token 135: ')' (ID: 8)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 136: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5180032849311829
    2. 'answer' → logprob: -2.643003225326538
    3. 'output' → logprob: -3.143003225326538
    4. 'result' → logprob: -3.143003225326538
    5. 'next' → logprob: -3.268003225326538
    6. 'def' → logprob: -3.518003225326538
    7. 'res' → logprob: -3.893003225326538
    8. 'cache' → logprob: -4.018003463745117
    9. ' for' → logprob: -4.143003463745117
    10. 'ans' → logprob: -4.143003463745117

Token 137: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7435030341148376
    2. '
' → logprob: -1.2435030937194824
    3. 'def' → logprob: -2.9935030937194824
    4. '#' → logprob: -3.4935030937194824
    5. 'next' → logprob: -3.7435030937194824
    6. 'max' → logprob: -3.9935030937194824
    7. 'result' → logprob: -3.9935030937194824
    8. 'count' → logprob: -4.118503093719482
    9. '

' → logprob: -4.368503093719482
    10. 'answer' → logprob: -4.618503093719482

Token 138: ' pos' (ID: 1253)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 139: '_in' (ID: 2267)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38262876868247986
    2. '_in' → logprob: -1.2576287984848022
    3. ' =' → logprob: -4.257628917694092
    4. 'in' → logprob: -4.507628917694092
    5. '_=' → logprob: -6.007628917694092
    6. '_' → logprob: -6.382628917694092
    7. ' in' → logprob: -6.882628917694092
    8. 'In' → logprob: -7.382628917694092
    9. '=_' → logprob: -7.382628917694092
    10. ']=' → logprob: -8.507628440856934

Token 140: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.47419795393943787
    2. 'cache' → logprob: -0.9741979837417603
    3. ' cache' → logprob: -9.599198341369629
    4. '	cache' → logprob: -11.349198341369629
    5. '_in' → logprob: -11.599198341369629
    6. '[' → logprob: -11.849198341369629
    7. 'in' → logprob: -12.599198341369629
    8. '_' → logprob: -12.849198341369629
    9. '```' → logprob: -12.849198341369629
    10. '-cache' → logprob: -13.099198341369629

Token 141: '[' (ID: 58)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5267797708511353
    2. '=[' → logprob: -1.0267797708511353
    3. ' =' → logprob: -4.026779651641846
    4. '[' → logprob: -4.526779651641846
    5. '=[]' → logprob: -4.526779651641846
    6. '<|end|>' → logprob: -5.401779651641846
    7. '=[
' → logprob: -6.026779651641846
    8. ' =[' → logprob: -6.901779651641846
    9. '=
' → logprob: -7.526779651641846
    10. ']=' → logprob: -7.901779651641846

Token 142: 'ball' (ID: 5052)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.7230204939842224
    2. 'a' → logprob: -1.5980205535888672
    3. ']' → logprob: -2.223020553588867
    4. '[v' → logprob: -3.223020553588867
    5. '-' → logprob: -3.348020553588867
    6. 'w' → logprob: -4.098020553588867
    7. ']=' → logprob: -4.348020553588867
    8. '=' → logprob: -4.473020553588867
    9. ')' → logprob: -4.473020553588867
    10. '
' → logprob: -4.598020553588867

Token 143: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9753309488296509
    2. ']=' → logprob: -0.9753309488296509
    3. ']' → logprob: -1.6003309488296509
    4. ']=-' → logprob: -3.6003308296203613
    5. ')' → logprob: -4.975330829620361
    6. ')=' → logprob: -5.725330829620361
    7. '<|end|>' → logprob: -6.100330829620361
    8. ' =' → logprob: -7.100330829620361
    9. ']+=' → logprob: -7.100330829620361
    10. ']={' → logprob: -7.725330829620361

Token 144: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00564197450876236
    2. ' =' → logprob: -5.880641937255859
    3. '=-' → logprob: -6.380641937255859
    4. '=
' → logprob: -7.630641937255859
    5. '<|end|>' → logprob: -8.13064193725586
    6. '=[]' → logprob: -9.00564193725586
    7. '=int' → logprob: -9.50564193725586
    8. '=[' → logprob: -9.63064193725586
    9. '=

' → logprob: -10.75564193725586
    10. '=index' → logprob: -11.50564193725586

Token 145: ' index' (ID: 3472)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0034320964477956295
    2. '-cache' → logprob: -6.128432273864746
    3. ' -' → logprob: -7.628432273864746
    4. '-index' → logprob: -7.878432273864746
    5. 'index' → logprob: -9.003432273864746
    6. 'cache' → logprob: -9.378432273864746
    7. '0' → logprob: -9.878432273864746
    8. '-position' → logprob: -10.878432273864746
    9. '-i' → logprob: -11.128432273864746
    10. '-next' → logprob: -11.378432273864746

Token 146: ' of' (ID: 328)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3821997344493866
    2. 'in' → logprob: -1.757199764251709
    3. '<|end|>' → logprob: -2.132199764251709
    4. ' of' → logprob: -3.757199764251709
    5. ' ' → logprob: -6.757199764251709
    6. 'of' → logprob: -7.632199764251709
    7. '<|end|>' → logprob: -7.632199764251709
    8. '_in' → logprob: -8.13219928741455
    9. ' or' → logprob: -8.25719928741455
    10. 'In' → logprob: -9.00719928741455

Token 147: ' box' (ID: 5506)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cache' → logprob: -0.038861919194459915
    2. 'the' → logprob: -3.9138619899749756
    3. ' cache' → logprob: -4.4138617515563965
    4. 'ball' → logprob: -5.6638617515563965
    5. ' the' → logprob: -6.9138617515563965
    6. 'box' → logprob: -7.4138617515563965
    7. 'cached' → logprob: -9.163862228393555
    8. '-cache' → logprob: -9.413862228393555
    9. 'where' → logprob: -9.538862228393555
    10. 'which' → logprob: -9.663862228393555

Token 148: ' or' (ID: 503)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7040938138961792
    2. 'in' → logprob: -0.9540938138961792
    3. '[' → logprob: -3.5790939331054688
    4. ' or' → logprob: -3.5790939331054688
    5. ' ' → logprob: -3.9540939331054688
    6. ' where' → logprob: -4.829093933105469
    7. ' if' → logprob: -4.954093933105469
    8. 'where' → logprob: -5.329093933105469
    9. 'or' → logprob: -5.579093933105469
    10. 'if' → logprob: -5.829093933105469

Token 149: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1602281779050827
    2. ' -' → logprob: -1.9102281332015991
    3. ' ' → logprob: -12.91022777557373
    4. '0' → logprob: -15.03522777557373
    5. 'None' → logprob: -15.03522777557373
    6. '```' → logprob: -16.160228729248047
    7. '-invalid' → logprob: -16.535228729248047
    8. ')' → logprob: -16.535228729248047
    9. '-in' → logprob: -16.660228729248047
    10. '-s' → logprob: -17.035228729248047

Token 150: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.65707261255011e-06
    2. ' ' → logprob: -12.375008583068848
    3. '-' → logprob: -13.500008583068848
    4. '```' → logprob: -13.625008583068848
    5. '2' → logprob: -14.375008583068848
    6. '   ' → logprob: -14.875008583068848
    7. '`' → logprob: -16.375009536743164
    8. '9' → logprob: -16.687509536743164
    9. '100' → logprob: -16.937509536743164
    10. ' -' → logprob: -16.937509536743164

Token 151: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10614217072725296
    2. 'for' → logprob: -2.606142282485962
    3. ' if' → logprob: -4.356142044067383
    4. 'in' → logprob: -5.731142044067383
    5. 'cache' → logprob: -6.231142044067383
    6. '(-' → logprob: -6.356142044067383
    7. '=-' → logprob: -7.231142044067383
    8. '
' → logprob: -7.481142044067383
    9. 'def' → logprob: -7.481142044067383
    10. '_cache' → logprob: -7.481142044067383

Token 152: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.1968507319688797
    2. '-' → logprob: -2.0718507766723633
    3. '-not' → logprob: -3.1968507766723633
    4. ' not' → logprob: -5.446850776672363
    5. '-empty' → logprob: -6.446850776672363
    6. 'empty' → logprob: -6.821850776672363
    7. 'outside' → logprob: -6.821850776672363
    8. 'None' → logprob: -6.821850776672363
    9. 'out' → logprob: -7.071850776672363
    10. '```' → logprob: -7.696850776672363

Token 153: ' in' (ID: 306)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 154: ' cache' (ID: 11956)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cache' → logprob: -0.0028221122920513153
    2. ' cache' → logprob: -5.877821922302246
    3. '	cache' → logprob: -11.502821922302246
    4. '_cache' → logprob: -12.377821922302246
    5. 'c' → logprob: -14.127821922302246
    6. '-cache' → logprob: -14.127821922302246
    7. '```' → logprob: -14.627821922302246
    8. '-' → logprob: -15.377821922302246
    9. '.cache' → logprob: -15.502821922302246
    10. 'cached' → logprob: -16.127822875976562

Token 155: '

' (ID: 279)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 156: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.8681756258010864
    2. 'answer' → logprob: -1.2431756258010864
    3. 'result' → logprob: -1.9931756258010864
    4. 'res' → logprob: -2.118175506591797
    5. 'count' → logprob: -4.118175506591797
    6. 'import' → logprob: -4.993175506591797
    7. 'cnt' → logprob: -5.368175506591797
    8. 'hits' → logprob: -6.493175506591797
    9. 'ret' → logprob: -6.618175506591797
    10. 'score' → logprob: -6.743175506591797

Token 157: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759491920471191
    2. '=' → logprob: -0.8259491920471191
    3. '=int' → logprob: -12.700948715209961
    4. ' =
' → logprob: -13.450948715209961
    5. ' ' → logprob: -13.575948715209961
    6. ',' → logprob: -13.825948715209961
    7. '=
' → logprob: -14.575948715209961
    8. '=

' → logprob: -14.575948715209961
    9. '=[]' → logprob: -15.325948715209961
    10. ' =[' → logprob: -15.450948715209961

Token 158: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.180258191714529e-06
    2. ' ' → logprob: -11.875008583068848
    3. '1' → logprob: -15.500008583068848
    4. 'int' → logprob: -15.750008583068848
    5. 'sum' → logprob: -16.56250762939453
    6. 'w' → logprob: -16.75000762939453
    7. '100' → logprob: -17.18750762939453
    8. 'max' → logprob: -17.18750762939453
    9. '00' → logprob: -17.31250762939453
    10. '000' → logprob: -17.31250762939453

Token 159: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00019185843120794743
    2. ' for' → logprob: -9.250191688537598
    3. 'import' → logprob: -10.125191688537598
    4. 'current' → logprob: -10.750191688537598
    5. 'from' → logprob: -11.875191688537598
    6. '```' → logprob: -11.875191688537598
    7. 'pos' → logprob: -12.750191688537598
    8. 'next' → logprob: -12.750191688537598
    9. 'last' → logprob: -13.000191688537598
    10. 'i' → logprob: -13.125191688537598

Token 160: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3902033970225602e-05
    2. 'import' → logprob: -11.375014305114746
    3. 'from' → logprob: -13.500014305114746
    4. ' for' → logprob: -14.000014305114746
    5. 'current' → logprob: -17.25001335144043
    6. 'def' → logprob: -17.37501335144043
    7. '```' → logprob: -17.87501335144043
    8. '	for' → logprob: -18.00001335144043
    9. 'last' → logprob: -18.37501335144043
    10. '   ' → logprob: -18.50001335144043

Token 161: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3027144968509674
    2. 'v' → logprob: -2.1777145862579346
    3. ' i' → logprob: -2.3027145862579346
    4. ' v' → logprob: -3.8027145862579346
    5. ' ball' → logprob: -4.3027143478393555
    6. 'ball' → logprob: -5.0527143478393555
    7. 'a' → logprob: -6.4277143478393555
    8. 'x' → logprob: -6.9277143478393555
    9. 'idx' → logprob: -7.1777143478393555
    10. 'pos' → logprob: -7.5527143478393555

Token 162: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05561617389321327
    2. 'in' → logprob: -2.9306161403656006
    3. ',' → logprob: -8.05561637878418
    4. ' ' → logprob: -8.30561637878418
    5. ')' → logprob: -9.18061637878418
    6. ' ,' → logprob: -10.68061637878418
    7. '	in' → logprob: -11.68061637878418
    8. '<|end|>' → logprob: -12.05561637878418
    9. 'range' → logprob: -12.74311637878418
    10. ',v' → logprob: -12.80561637878418

Token 163: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.053741227835416794
    2. ' range' → logprob: -3.178741216659546
    3. 'a' → logprob: -4.553741455078125
    4. ' a' → logprob: -8.803741455078125
    5. ' ' → logprob: -13.553741455078125
    6. '(range' → logprob: -13.928741455078125
    7. 'r' → logprob: -14.178741455078125
    8. '	range' → logprob: -14.428741455078125
    9. 'in' → logprob: -14.553741455078125
    10. '   ' → logprob: -14.553741455078125

Token 164: '(K' (ID: 28797)
  Prédit: '(K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.0017491996986791492
    2. 'K' → logprob: -7.126749038696289
    3. '(len' → logprob: -7.876749038696289
    4. '(' → logprob: -8.126749038696289
    5. '(a' → logprob: -9.251749038696289
    6. ' (' → logprob: -9.626749038696289
    7. 'a' → logprob: -10.126749038696289
    8. ')' → logprob: -10.876749038696289
    9. 'len' → logprob: -11.501749038696289
    10. '(i' → logprob: -11.626749038696289

Token 165: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009166009724140167
    2. '):
' → logprob: -5.134166240692139
    3. ' ):' → logprob: -5.884166240692139
    4. ')' → logprob: -8.00916576385498
    5. ':' → logprob: -9.63416576385498
    6. '   ' → logprob: -10.75916576385498
    7. ' ):
' → logprob: -11.38416576385498
    8. ' ' → logprob: -12.00916576385498
    9. ',' → logprob: -12.25916576385498
    10. ' )' → logprob: -12.50916576385498

Token 166: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5046687126159668
    2. 'v' → logprob: -1.0046687126159668
    3. ' v' → logprob: -4.004668712615967
    4. 'ball' → logprob: -4.629668712615967
    5. ' ball' → logprob: -6.629668712615967
    6. 'b' → logprob: -7.754668712615967
    7. '    
' → logprob: -9.504669189453125
    8. '```' → logprob: -9.754669189453125
    9. 'cur' → logprob: -9.879669189453125
    10. ' ' → logprob: -10.004669189453125

Token 167: ' ball' (ID: 7880)
  Prédit: 'ball'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ball' (adapté à ' ball') → logprob: -0.6796282529830933
    2. 'v' → logprob: -0.9296282529830933
    3. 'b' → logprob: -2.929628372192383
    4. 'cur' → logprob: -3.929628372192383
    5. '   ' → logprob: -5.054628372192383
    6. 'x' → logprob: -5.304628372192383
    7. ' ball' → logprob: -5.304628372192383
    8. ' v' → logprob: -5.429628372192383
    9. 'curr' → logprob: -6.804628372192383
    10. 'if' → logprob: -6.929628372192383

Token 168: '=a' (ID: 53088)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12743911147117615
    2. ' =' → logprob: -2.127439022064209
    3. '=a' → logprob: -7.752439022064209
    4. '=v' → logprob: -9.752439498901367
    5. '=i' → logprob: -12.002439498901367
    6. ']=' → logprob: -13.002439498901367
    7. '=current' → logprob: -13.002439498901367
    8. '=b' → logprob: -13.377439498901367
    9. '=
' → logprob: -13.377439498901367
    10. ']' → logprob: -13.627439498901367

Token 169: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.5577775128767826e-06
    2. '[' → logprob: -12.250005722045898
    3. 'i' → logprob: -15.000005722045898
    4. '```' → logprob: -15.750005722045898
    5. '[v' → logprob: -15.875005722045898
    6. ' [' → logprob: -16.2500057220459
    7. '[
' → logprob: -17.7500057220459
    8. '
' → logprob: -17.8750057220459
    9. ' i' → logprob: -18.0000057220459
    10. '[I' → logprob: -18.2500057220459

Token 170: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3514796495437622
    2. ']
' → logprob: -1.3514796495437622
    3. ')' → logprob: -3.6014795303344727
    4. ')
' → logprob: -5.101479530334473
    5. ']

' → logprob: -5.726479530334473
    6. ')]' → logprob: -8.101479530334473
    7. ']
' → logprob: -8.351479530334473
    8. '   ' → logprob: -8.851479530334473
    9. ' ]
' → logprob: -9.726479530334473
    10. ' ]' → logprob: -9.976479530334473

Token 171: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03708472102880478
    2. ' if' → logprob: -3.9120848178863525
    3. '    ' → logprob: -5.037084579467773
    4. 'if' → logprob: -5.287084579467773
    5. '    
' → logprob: -5.537084579467773
    6. ' next' → logprob: -8.412084579467773
    7. '     
' → logprob: -8.912084579467773
    8. ' 
' → logprob: -9.037084579467773
    9. 'next' → logprob: -9.537084579467773
    10. ' ' → logprob: -9.912084579467773

Token 172: ' #' (ID: 1069)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 173: ' Advance' (ID: 71813)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.014649965800344944
    2. 'next' → logprob: -5.264649868011475
    3. ' if' → logprob: -5.389649868011475
    4. 'ans' → logprob: -5.889649868011475
    5. 'for' → logprob: -7.639649868011475
    6. '#' → logprob: -7.639649868011475
    7. 'pos' → logprob: -8.014650344848633
    8. '   ' → logprob: -8.764650344848633
    9. 'positions' → logprob: -8.764650344848633
    10. ' next' → logprob: -8.889650344848633

Token 174: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.024737659841775894
    2. ' next' → logprob: -4.02473783493042
    3. '[next' → logprob: -5.39973783493042
    4. '(next' → logprob: -6.27473783493042
    5. '_next' → logprob: -8.899737358093262
    6. '	next' → logprob: -11.399737358093262
    7. '   ' → logprob: -12.024737358093262
    8. '
' → logprob: -13.524737358093262
    9. '[' → logprob: -13.649737358093262
    10. '(' → logprob: -13.649737358093262

Token 175: '_use' (ID: 36283)
  Prédit: '_use'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_use' → logprob: -3.531315314830863e-06
    2. 'use' → logprob: -13.000003814697266
    3. '_token' → logprob: -14.750003814697266
    4. 'Use' → logprob: -16.000003814697266
    5. ' use' → logprob: -16.125003814697266
    6. '_USE' → logprob: -16.250003814697266
    7. 'token' → logprob: -16.250003814697266
    8. '_' → logprob: -16.250003814697266
    9. '_usage' → logprob: -16.375003814697266
    10. '_used' → logprob: -16.625003814697266

Token 176: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.00031866179779171944
    2. 'idx' → logprob: -8.12531852722168
    3. '_index' → logprob: -12.50031852722168
    4. '[idx' → logprob: -12.62531852722168
    5. '_pos' → logprob: -12.87531852722168
    6. 'i' → logprob: -13.12531852722168
    7. 'd' → logprob: -13.37531852722168
    8. '[' → logprob: -13.50031852722168
    9. '_i' → logprob: -13.75031852722168
    10. 'Idx' → logprob: -14.00031852722168

Token 177: ' for' (ID: 395)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 178: ' current' (ID: 2208)
  Prédit: 'ball'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ball' → logprob: -0.003135889768600464
    2. ' ball' → logprob: -6.003135681152344
    3. 'the' → logprob: -7.878135681152344
    4. '[' → logprob: -9.253135681152344
    5. 'positions' → logprob: -9.253135681152344
    6. ' the' → logprob: -10.753135681152344
    7. '   ' → logprob: -11.003135681152344
    8. 'next' → logprob: -11.503135681152344
    9. '(ball' → logprob: -11.503135681152344
    10. 'pos' → logprob: -12.003135681152344

Token 179: ' ball' (ID: 7880)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.611473023891449
    2. 'ball' → logprob: -0.861473023891449
    3. '_ball' → logprob: -4.361473083496094
    4. '_use' → logprob: -4.486473083496094
    5. '(ball' → logprob: -5.236473083496094
    6. ' ball' → logprob: -6.236473083496094
    7. 'use' → logprob: -6.611473083496094
    8. '```' → logprob: -7.361473083496094
    9. '   ' → logprob: -8.111473083496094
    10. 'next' → logprob: -8.986473083496094

Token 180: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7896713614463806
    2. 'next' → logprob: -0.7896713614463806
    3. ' next' → logprob: -2.7896714210510254
    4. '
' → logprob: -3.7896714210510254
    5. '	next' → logprob: -5.914671421051025
    6. '    
' → logprob: -6.289671421051025
    7. '[next' → logprob: -6.789671421051025
    8. 'if' → logprob: -7.289671421051025
    9. '(next' → logprob: -7.664671421051025
    10. '.next' → logprob: -8.039670944213867

Token 181: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35185348987579346
    2. 'next' → logprob: -1.3518534898757935
    3. ' next' → logprob: -3.351853370666504
    4. 'if' → logprob: -7.101853370666504
    5. '
' → logprob: -7.851853370666504
    6. '	next' → logprob: -7.851853370666504
    7. 'while' → logprob: -7.976853370666504
    8. '    
' → logprob: -8.476853370666504
    9. '[next' → logprob: -8.601853370666504
    10. ' if' → logprob: -9.101853370666504

Token 182: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' (adapté à ' next') → logprob: -0.0006210576975718141
    2. '   ' → logprob: -7.8756208419799805
    3. ' next' → logprob: -9.00062084197998
    4. 'if' → logprob: -9.62562084197998
    5. 'while' → logprob: -10.37562084197998
    6. '
' → logprob: -11.62562084197998
    7. '```' → logprob: -12.87562084197998
    8. '	next' → logprob: -13.37562084197998
    9. '[next' → logprob: -13.37562084197998
    10. 'positions' → logprob: -13.50062084197998

Token 183: '_use' (ID: 36283)
  Prédit: '_use'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_use' → logprob: 0.0
    2. 'Use' → logprob: -17.375
    3. '_USE' → logprob: -17.75
    4. 'use' → logprob: -17.875
    5. '```' → logprob: -18.0
    6. ' _' → logprob: -18.375
    7. '_usage' → logprob: -18.5
    8. '_used' → logprob: -18.875
    9. '[_' → logprob: -19.0
    10. '
' → logprob: -19.375

Token 184: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -5.512236498361744e-07
    2. '_i' → logprob: -15.875000953674316
    3. '[idx' → logprob: -16.5
    4. '[_' → logprob: -16.625
    5. 'idx' → logprob: -16.75
    6. '```' → logprob: -17.125
    7. '[i' → logprob: -17.375
    8. '[' → logprob: -17.75
    9. '_idxs' → logprob: -17.75
    10. 'Idx' → logprob: -18.75

Token 185: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.843177233240567e-05
    2. '[i' → logprob: -11.750018119812012
    3. ' [' → logprob: -12.125018119812012
    4. '   ' → logprob: -13.500018119812012
    5. '[b' → logprob: -13.625018119812012
    6. '```' → logprob: -14.250018119812012
    7. '][' → logprob: -15.375018119812012
    8. '[v' → logprob: -15.375018119812012
    9. '(ball' → logprob: -15.375018119812012
    10. 'ball' → logprob: -15.750018119812012

Token 186: 'ball' (ID: 5052)
  Prédit: 'ball'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ball' → logprob: -0.03809623047709465
    2. '[' → logprob: -3.2880961894989014
    3. ' ball' → logprob: -10.78809642791748
    4. '(ball' → logprob: -11.28809642791748
    5. 'v' → logprob: -11.91309642791748
    6. ']' → logprob: -12.28809642791748
    7. '][' → logprob: -12.78809642791748
    8. '```' → logprob: -13.41309642791748
    9. '   ' → logprob: -13.53809642791748
    10. '.ball' → logprob: -13.78809642791748

Token 187: ']+=' (ID: 123635)
  Prédit: ']+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+=' → logprob: -0.20150533318519592
    2. ']' → logprob: -1.7015053033828735
    3. '+=' → logprob: -9.326505661010742
    4. '[' → logprob: -13.451505661010742
    5. ']+' → logprob: -13.951505661010742
    6. ']=' → logprob: -15.451505661010742
    7. ' ]' → logprob: -15.951505661010742
    8. ')' → logprob: -16.201505661010742
    9. ' +=' → logprob: -16.326505661010742
    10. '[i' → logprob: -16.826505661010742

Token 188: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '   ' → logprob: -18.500001907348633
    4. '```' → logprob: -18.500001907348633
    5. '
' → logprob: -18.625001907348633
    6. '１' → logprob: -20.687501907348633
    7. '

' → logprob: -20.875001907348633
    8. '+' → logprob: -21.125001907348633
    9. '  ' → logprob: -21.312501907348633
    10. '[' → logprob: -21.375001907348633

Token 189: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14274606108665466
    2. ' if' → logprob: -3.0177459716796875
    3. '    
' → logprob: -3.5177459716796875
    4. 'if' → logprob: -3.6427459716796875
    5. '
' → logprob: -4.2677459716796875
    6. '<|end|>' → logprob: -5.1427459716796875
    7. ' 
' → logprob: -5.7677459716796875
    8. ' ' → logprob: -6.0177459716796875
    9. '  
' → logprob: -7.0177459716796875
    10. '    ' → logprob: -7.3927459716796875

Token 190: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2539396584033966
    2. '   ' → logprob: -2.128939628601074
    3. ' if' → logprob: -2.253939628601074
    4. '```' → logprob: -9.003939628601074
    5. '    
' → logprob: -9.378939628601074
    6. ' ' → logprob: -10.628939628601074
    7. '    ' → logprob: -11.128939628601074
    8. '  ' → logprob: -11.253939628601074
    9. '   ' → logprob: -11.628939628601074
    10. 'for' → logprob: -12.253939628601074

Token 191: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0016241183038800955
    2. ' if' → logprob: -7.00162410736084
    3. '   ' → logprob: -7.25162410736084
    4. '#' → logprob: -13.25162410736084
    5. '    
' → logprob: -13.75162410736084
    6. '```' → logprob: -15.87662410736084
    7. 'import' → logprob: -16.501625061035156
    8. 'If' → logprob: -16.501625061035156
    9. 'for' → logprob: -16.876625061035156
    10. '
' → logprob: -17.001625061035156

Token 192: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.18156419694423676
    2. 'pos' → logprob: -1.806564211845398
    3. ' ball' → logprob: -6.5565643310546875
    4. 'ball' → logprob: -7.9315643310546875
    5. ' ' → logprob: -11.056564331054688
    6. '	pos' → logprob: -12.306564331054688
    7. '(pos' → logprob: -12.744064331054688
    8. '   ' → logprob: -12.806564331054688
    9. ' ' → logprob: -12.994064331054688
    10. ')' → logprob: -14.119064331054688

Token 193: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -2.5941604690160602e-05
    2. '[' → logprob: -10.750025749206543
    3. '_' → logprob: -13.000025749206543
    4. '[_' → logprob: -14.250025749206543
    5. ' _' → logprob: -14.875025749206543
    6. 'In' → logprob: -15.750025749206543
    7. '```' → logprob: -15.750025749206543
    8. 'in' → logprob: -15.875025749206543
    9. '_to' → logprob: -16.00002670288086
    10. '_at' → logprob: -16.37502670288086

Token 194: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.02637391909956932
    2. 'cache' → logprob: -3.651373863220215
    3. 'pos' → logprob: -10.276373863220215
    4. ' cache' → logprob: -11.401373863220215
    5. '[' → logprob: -11.776373863220215
    6. '_' → logprob: -12.026373863220215
    7. '	cache' → logprob: -13.026373863220215
    8. 'c' → logprob: -13.776373863220215
    9. '-cache' → logprob: -13.776373863220215
    10. '[pos' → logprob: -13.901373863220215

Token 195: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.6240566083070007e-06
    2. '```' → logprob: -14.000001907348633
    3. ' [' → logprob: -14.875001907348633
    4. '   ' → logprob: -16.125001907348633
    5. '[b' → logprob: -17.000001907348633
    6. '==' → logprob: -17.000001907348633
    7. '(ball' → logprob: -17.250001907348633
    8. 'ball' → logprob: -17.500001907348633
    9. '[
' → logprob: -17.750001907348633
    10. ')[' → logprob: -17.875001907348633

Token 196: 'ball' (ID: 5052)
  Prédit: 'ball'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ball' → logprob: -0.0028202086687088013
    2. '[' → logprob: -5.877820014953613
    3. ' ball' → logprob: -11.502820014953613
    4. 'b' → logprob: -13.627820014953613
    5. '```' → logprob: -14.002820014953613
    6. '(ball' → logprob: -14.002820014953613
    7. '
' → logprob: -15.127820014953613
    8. ')' → logprob: -15.127820014953613
    9. '0' → logprob: -15.252820014953613
    10. '-ball' → logprob: -15.502820014953613

Token 197: ']!=' (ID: 85780)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.31282839179039
    2. ']==' → logprob: -2.187828302383423
    3. ']' → logprob: -2.812828302383423
    4. '!=' → logprob: -3.562828302383423
    5. ')' → logprob: -3.687828302383423
    6. '==-' → logprob: -3.812828302383423
    7. ' ==' → logprob: -4.687828540802002
    8. ']!=' → logprob: -5.312828540802002
    9. '!=-' → logprob: -5.687828540802002
    10. ')==' → logprob: -6.312828540802002

Token 198: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -4.024604277219623e-05
    2. ' -' → logprob: -10.125040054321289
    3. '-ball' → logprob: -15.875040054321289
    4. '   ' → logprob: -17.50004005432129
    5. '-i' → logprob: -17.50004005432129
    6. ' ' → logprob: -17.50004005432129
    7. '-
' → logprob: -19.25004005432129
    8. '\-' → logprob: -19.62504005432129
    9. '	' → logprob: -19.75004005432129
    10. '−' → logprob: -19.75004005432129

Token 199: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. '-' → logprob: -13.50000286102295
    3. ' ' → logprob: -14.75000286102295
    4. '2' → logprob: -14.87500286102295
    5. '```' → logprob: -14.87500286102295
    6. ' -' → logprob: -16.250003814697266
    7. '   ' → logprob: -17.750003814697266
    8. ',' → logprob: -17.937503814697266
    9. '
' → logprob: -18.000003814697266
    10. '

' → logprob: -18.062503814697266

Token 200: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006245872937142849
    2. ':
' → logprob: -5.131246089935303
    3. '       ' → logprob: -8.256245613098145
    4. ' continue' → logprob: -10.381245613098145
    5. '   ' → logprob: -11.131245613098145
    6. 'continue' → logprob: -12.506245613098145
    7. ':return' → logprob: -13.006245613098145
    8. '):' → logprob: -13.631245613098145
    9. ' continues' → logprob: -13.881245613098145
    10. ' :' → logprob: -13.881245613098145

Token 201: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014008591882884502
    2. 'continue' → logprob: -4.639008522033691
    3. ' continue' → logprob: -5.514008522033691
    4. '   ' → logprob: -8.639008522033691
    5. '	continue' → logprob: -10.639008522033691
    6. '```' → logprob: -12.014008522033691
    7. '	' → logprob: -12.764008522033691
    8. '
' → logprob: -12.889008522033691
    9. 'contin' → logprob: -15.014008522033691
    10. '_continue' → logprob: -15.389008522033691

Token 202: ' #' (ID: 1069)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.5786096453666687
    2. ' continue' → logprob: -0.8286096453666687
    3. '   ' → logprob: -6.328609466552734
    4. '       ' → logprob: -7.078609466552734
    5. '	continue' → logprob: -10.578609466552734
    6. 'contin' → logprob: -12.578609466552734
    7. '```' → logprob: -12.703609466552734
    8. 'continu' → logprob: -13.203609466552734
    9. '           ' → logprob: -13.828609466552734
    10. ' continu' → logprob: -13.828609466552734

Token 203: ' ball' (ID: 7880)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.0017418164061382413
    2. ' continue' → logprob: -6.626741886138916
    3. '   ' → logprob: -7.876741886138916
    4. 'continu' → logprob: -11.001741409301758
    5. 'ans' → logprob: -11.751741409301758
    6. 'pass' → logprob: -12.751741409301758
    7. '#' → logprob: -13.251741409301758
    8. '       ' → logprob: -13.376741409301758
    9. 'Continue' → logprob: -13.501741409301758
    10. ' ' → logprob: -13.626741409301758

Token 204: ' is' (ID: 382)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0879353284835815
    2. ' continue' → logprob: -1.3379353284835815
    3. '   ' → logprob: -1.7129353284835815
    4. 'continue' → logprob: -1.9629353284835815
    5. '	continue' → logprob: -3.087935447692871
    6. ' continues' → logprob: -3.462935447692871
    7. '_continue' → logprob: -7.462935447692871
    8. 'contin' → logprob: -7.837935447692871
    9. '           ' → logprob: -7.962935447692871
    10. '	   ' → logprob: -7.962935447692871

Token 205: ' already' (ID: 4279)
  Prédit: 'already'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'already' → logprob: -0.5015302300453186
    2. 'in' → logprob: -1.2515301704406738
    3. ' in' → logprob: -3.126530170440674
    4. ' already' → logprob: -3.501530170440674
    5. 'continue' → logprob: -3.626530170440674
    6. '   ' → logprob: -5.376530170440674
    7. ' continue' → logprob: -6.251530170440674
    8. ' ' → logprob: -8.376530647277832
    9. 'cached' → logprob: -8.501530647277832
    10. '#' → logprob: -8.876530647277832

Token 206: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.12797072529792786
    2. ' in' → logprob: -2.1279706954956055
    3. '   ' → logprob: -7.0029706954956055
    4. 'cached' → logprob: -10.627970695495605
    5. ' cached' → logprob: -11.002970695495605
    6. ' ' → logprob: -11.002970695495605
    7. '	in' → logprob: -11.502970695495605
    8. '
' → logprob: -11.627970695495605
    9. 'continue' → logprob: -11.627970695495605
    10. '       ' → logprob: -12.252970695495605

Token 207: ' cache' (ID: 11956)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cache' → logprob: -0.01458723470568657
    2. ' cache' → logprob: -4.26458740234375
    3. 'pos' → logprob: -8.26458740234375
    4. 'the' → logprob: -9.13958740234375
    5. ' the' → logprob: -10.13958740234375
    6. '	cache' → logprob: -12.13958740234375
    7. '   ' → logprob: -12.63958740234375
    8. ' pos' → logprob: -13.13958740234375
    9. '
' → logprob: -13.26458740234375
    10. ' ' → logprob: -13.76458740234375

Token 208: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06435811519622803
    2. ' continue' → logprob: -3.1893582344055176
    3. 'continue' → logprob: -4.189358234405518
    4. '	continue' → logprob: -5.189358234405518
    5. '	' → logprob: -8.31435775756836
    6. '   ' → logprob: -9.43935775756836
    7. ' continues' → logprob: -10.81435775756836
    8. '_continue' → logprob: -10.81435775756836
    9. '           ' → logprob: -11.93935775756836
    10. '	   ' → logprob: -12.18935775756836

Token 209: ' no' (ID: 860)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.18036571145057678
    2. ' continue' → logprob: -1.9303656816482544
    3. '   ' → logprob: -3.930365800857544
    4. '       ' → logprob: -9.055365562438965
    5. '	continue' → logprob: -9.180365562438965
    6. 'ans' → logprob: -10.055365562438965
    7. ' ' → logprob: -11.180365562438965
    8. ' ans' → logprob: -11.930365562438965
    9. '
' → logprob: -12.180365562438965
    10. 'contin' → logprob: -12.805365562438965

Token 210: ' cost' (ID: 3097)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.07538051158189774
    2. ' continue' → logprob: -2.700380563735962
    3. '   ' → logprob: -5.325380325317383
    4. 'need' → logprob: -8.575380325317383
    5. ' need' → logprob: -8.700380325317383
    6. 'contin' → logprob: -9.825380325317383
    7. '    ' → logprob: -10.825380325317383
    8. '
' → logprob: -10.825380325317383
    9. 'continu' → logprob: -10.825380325317383
    10. ' ' → logprob: -10.825380325317383

Token 211: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05933278053998947
    2. ' continue' → logprob: -3.559332847595215
    3. 'continue' → logprob: -3.809332847595215
    4. '   ' → logprob: -5.309332847595215
    5. '	continue' → logprob: -6.309332847595215
    6. ',' → logprob: -9.809332847595215
    7. '           ' → logprob: -9.934332847595215
    8. '	' → logprob: -10.684332847595215
    9. '
' → logprob: -10.934332847595215
    10. ' continues' → logprob: -11.184332847595215

Token 212: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010561843402683735
    2. 'continue' → logprob: -5.260561943054199
    3. '   ' → logprob: -5.510561943054199
    4. ' continue' → logprob: -6.760561943054199
    5. '	continue' → logprob: -9.5105619430542
    6. '	' → logprob: -11.0105619430542
    7. 'else' → logprob: -12.0105619430542
    8. ' else' → logprob: -12.8855619430542
    9. '
' → logprob: -13.1355619430542
    10. '```' → logprob: -13.2605619430542

Token 213: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.00987980142235756
    2. '   ' → logprob: -5.2598795890808105
    3. ' continue' → logprob: -5.5098795890808105
    4. '       ' → logprob: -7.5098795890808105
    5. '	continue' → logprob: -10.384880065917969
    6. '           ' → logprob: -12.634880065917969
    7. '```' → logprob: -13.009880065917969
    8. 'contin' → logprob: -13.259880065917969
    9. 'continu' → logprob: -13.384880065917969
    10. 'pass' → logprob: -14.634880065917969

Token 214: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03086989000439644
    2. 'if' → logprob: -3.905869960784912
    3. '    
' → logprob: -5.030869960784912
    4. 'else' → logprob: -6.155869960784912
    5. '
' → logprob: -7.280869960784912
    6. '```' → logprob: -7.280869960784912
    7. ' if' → logprob: -9.405869483947754
    8. 'elif' → logprob: -9.780869483947754
    9. 'pos' → logprob: -10.905869483947754
    10. 'cost' → logprob: -11.155869483947754

Token 215: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12408898770809174
    2. '   ' → logprob: -2.749089002609253
    3. 'cost' → logprob: -3.124089002609253
    4. '#' → logprob: -6.124088764190674
    5. 'else' → logprob: -6.249088764190674
    6. '    
' → logprob: -6.374088764190674
    7. 'max' → logprob: -6.874088764190674
    8. ' if' → logprob: -7.374088764190674
    9. 'min' → logprob: -8.499089241027832
    10. 'elif' → logprob: -8.749089241027832

Token 216: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -1.0018824338912964
    2. 'if' → logprob: -1.6268824338912964
    3. 'ans' → logprob: -1.6268824338912964
    4. 'cost' → logprob: -1.6268824338912964
    5. 'pos' → logprob: -4.126882553100586
    6. 'max' → logprob: -4.626882553100586
    7. 'min' → logprob: -5.001882553100586
    8. 'idx' → logprob: -5.751882553100586
    9. 'else' → logprob: -6.376882553100586
    10. 'miss' → logprob: -6.751882553100586

Token 217: ' ball' (ID: 7880)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.8013203144073486
    2. 'if' → logprob: -1.3013203144073486
    3. '#' → logprob: -1.6763203144073486
    4. 'pos' → logprob: -3.3013203144073486
    5. 'ans' → logprob: -3.6763203144073486
    6. 'min' → logprob: -4.5513200759887695
    7. 'max' → logprob: -5.0513200759887695
    8. 'empty' → logprob: -5.4263200759887695
    9. 'idx' → logprob: -5.9263200759887695
    10. 'candidate' → logprob: -7.1763200759887695

Token 218: ' not' (ID: 625)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cost' → logprob: -1.5505969524383545
    2. '_positions' → logprob: -1.9255969524383545
    3. '_pos' → logprob: -2.5505969524383545
    4. 'w' → logprob: -2.9255969524383545
    5. '_weight' → logprob: -2.9255969524383545
    6. 'not' → logprob: -2.9255969524383545
    7. 'pos' → logprob: -3.0505969524383545
    8. 'cost' → logprob: -3.1755969524383545
    9. '_in' → logprob: -3.1755969524383545
    10. 'in' → logprob: -3.4255969524383545

Token 219: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.22597575187683105
    2. ' in' → logprob: -1.600975751876831
    3. '=' → logprob: -8.47597599029541
    4. '_in' → logprob: -9.35097599029541
    5. '-in' → logprob: -9.72597599029541
    6. 'import' → logprob: -9.72597599029541
    7. 'found' → logprob: -10.66347599029541
    8. 'In' → logprob: -11.22597599029541
    9. '
' → logprob: -11.35097599029541
    10. 's' → logprob: -11.91347599029541

Token 220: ' cache' (ID: 11956)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cache' → logprob: -0.0004896456957794726
    2. ' cache' → logprob: -7.875489711761475
    3. 'pos' → logprob: -9.125489234924316
    4. 'c' → logprob: -15.625489234924316
    5. '	cache' → logprob: -15.875489234924316
    6. 'cash' → logprob: -16.125490188598633
    7. ' pos' → logprob: -16.500490188598633
    8. '_cache' → logprob: -16.625490188598633
    9. 'Cache' → logprob: -17.750490188598633
    10. '

' → logprob: -17.750490188598633

Token 221: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9863460063934326
    2. 'if' → logprob: -1.4863460063934326
    3. 'cost' → logprob: -1.7363460063934326
    4. 'max' → logprob: -2.4863460063934326
    5. '#' → logprob: -2.8613460063934326
    6. 'pos' → logprob: -3.7363460063934326
    7. ' if' → logprob: -4.361346244812012
    8. 'min' → logprob: -4.611346244812012
    9. 'next' → logprob: -5.111346244812012
    10. '    
' → logprob: -5.486346244812012

Token 222: ' miss' (ID: 5141)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.6115099787712097
    2. '#' → logprob: -1.2365100383758545
    3. 'cost' → logprob: -2.2365100383758545
    4. 'pos' → logprob: -3.4865100383758545
    5. 'if' → logprob: -4.361509799957275
    6. 'idx' → logprob: -5.361509799957275
    7. '   ' → logprob: -5.486509799957275
    8. 'min' → logprob: -5.986509799957275
    9. '
' → logprob: -6.486509799957275
    10. 'max' → logprob: -7.236509799957275

Token 223: ':' (ID: 25)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.7635733485221863
    2. 'if' → logprob: -1.888573408126831
    3. '   ' → logprob: -2.013573408126831
    4. 'ans' → logprob: -2.388573408126831
    5. 'max' → logprob: -3.013573408126831
    6. 'pos' → logprob: -3.138573408126831
    7. '
' → logprob: -3.888573408126831
    8. 'miss' → logprob: -4.513573169708252
    9. '#' → logprob: -4.888573169708252
    10. 'idx' → logprob: -5.013573169708252

Token 224: ' need' (ID: 1309)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.08989611268043518
    2. 'cost' → logprob: -2.9648962020874023
    3. '#' → logprob: -4.339896202087402
    4. 'pos' → logprob: -4.839896202087402
    5. 'if' → logprob: -4.964896202087402
    6. 'miss' → logprob: -6.339896202087402
    7. '   ' → logprob: -6.839896202087402
    8. 'idx' → logprob: -6.964896202087402
    9. 'c' → logprob: -7.089896202087402
    10. 'max' → logprob: -7.964896202087402

Token 225: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.028912026435136795
    2. ' to' → logprob: -3.65391206741333
    3. 'cost' → logprob: -7.27891206741333
    4. '
' → logprob: -7.90391206741333
    5. '_cost' → logprob: -8.153911590576172
    6. '=' → logprob: -8.153911590576172
    7. '_to' → logprob: -8.278911590576172
    8. '   ' → logprob: -8.278911590576172
    9. 'pos' → logprob: -8.903911590576172
    10. 'import' → logprob: -9.903911590576172

Token 226: ' put' (ID: 3006)
  Prédit: 'replace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'replace' → logprob: -0.6131848692893982
    2. 'ev' → logprob: -2.488184928894043
    3. 'insert' → logprob: -2.613184928894043
    4. 'place' → logprob: -2.738184928894043
    5. 'put' → logprob: -2.988184928894043
    6. '#' → logprob: -3.238184928894043
    7. 'import' → logprob: -3.363184928894043
    8. 'pay' → logprob: -3.488184928894043
    9. 'find' → logprob: -3.613184928894043
    10. 'load' → logprob: -3.738184928894043

Token 227: ' in' (ID: 306)
  Prédit: 'ball'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ball' → logprob: -0.39686229825019836
    2. ' ball' → logprob: -2.521862268447876
    3. 'the' → logprob: -2.521862268447876
    4. 'in' → logprob: -3.396862268447876
    5. '(ball' → logprob: -3.521862268447876
    6. 'cost' → logprob: -3.646862268447876
    7. ' in' → logprob: -4.021862506866455
    8. ' the' → logprob: -4.146862506866455
    9. '   ' → logprob: -4.521862506866455
    10. 'it' → logprob: -4.771862506866455

Token 228: ' cache' (ID: 11956)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cache' → logprob: -0.0009736365755088627
    2. ' cache' → logprob: -7.125973701477051
    3. 'pos' → logprob: -9.12597370147705
    4. 'cost' → logprob: -10.50097370147705
    5. 'the' → logprob: -11.75097370147705
    6. 'box' → logprob: -12.12597370147705
    7. 'if' → logprob: -12.37597370147705
    8. 'ans' → logprob: -12.50097370147705
    9. '#' → logprob: -13.00097370147705
    10. '
' → logprob: -13.62597370147705

Token 229: '
' (ID: 198)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.9683687090873718
    2. 'if' → logprob: -1.3433687686920166
    3. 'cost' → logprob: -1.5933687686920166
    4. 'max' → logprob: -2.7183687686920166
    5. 'pos' → logprob: -3.2183687686920166
    6. 'miss' → logprob: -4.2183685302734375
    7. '   ' → logprob: -4.2183685302734375
    8. '#' → logprob: -4.5933685302734375
    9. 'idx' → logprob: -5.8433685302734375
    10. 'min' → logprob: -6.3433685302734375

Token 230: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3792603313922882
    2. 'cost' → logprob: -1.6292603015899658
    3. '#' → logprob: -3.629260301589966
    4. ' if' → logprob: -3.879260301589966
    5. 'idx' → logprob: -3.879260301589966
    6. 'max' → logprob: -4.254260540008545
    7. 'pos' → logprob: -4.879260540008545
    8. '   ' → logprob: -4.879260540008545
    9. 'min' → logprob: -5.504260540008545
    10. 'best' → logprob: -5.629260540008545

Token 231: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1985788494348526
    2. 'cost' → logprob: -2.0735788345336914
    3. '#' (adapté à ' #') → logprob: -3.9485788345336914
    4. 'ans' → logprob: -4.073578834533691
    5. 'pos' → logprob: -5.323578834533691
    6. 'empty' → logprob: -5.448578834533691
    7. 'idx' → logprob: -5.448578834533691
    8. 'miss' → logprob: -6.198578834533691
    9. 'min' → logprob: -6.823578834533691
    10. 'max' → logprob: -7.448578834533691

Token 232: ' Find' (ID: 9764)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.24656647443771362
    2. 'cost' → logprob: -2.1215665340423584
    3. 'empty' → logprob: -3.4965665340423584
    4. '#' → logprob: -3.6215665340423584
    5. 'idx' → logprob: -4.246566295623779
    6. 'pos' → logprob: -4.621566295623779
    7. 'min' → logprob: -5.246566295623779
    8. 'ans' → logprob: -5.371566295623779
    9. 'miss' → logprob: -5.496566295623779
    10. 'free' → logprob: -7.621566295623779

Token 233: ' empty' (ID: 8213)
  Prédit: 'ev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ev' → logprob: -0.4221222400665283
    2. 'empty' → logprob: -2.0471222400665283
    3. ' ev' → logprob: -2.2971222400665283
    4. 'idx' → logprob: -2.9221222400665283
    5. ' empty' → logprob: -4.047122001647949
    6. '#' → logprob: -4.547122001647949
    7. 'replace' → logprob: -4.797122001647949
    8. 'pos' → logprob: -5.547122001647949
    9. ' idx' → logprob: -5.547122001647949
    10. 'vict' → logprob: -5.672122001647949

Token 234: ' box' (ID: 5506)
  Prédit: '_idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.7747775316238403
    2. 'box' → logprob: -1.6497775316238403
    3. '_box' → logprob: -2.149777412414551
    4. 'idx' → logprob: -2.524777412414551
    5. '_index' → logprob: -3.274777412414551
    6. ' box' → logprob: -3.899777412414551
    7. '_pos' → logprob: -4.149777412414551
    8. 'pos' → logprob: -4.274777412414551
    9. '_slot' → logprob: -4.399777412414551
    10. 'space' → logprob: -4.899777412414551

Token 235: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2834830582141876
    2. ' for' → logprob: -2.4084830284118652
    3. 'empty' → logprob: -3.0334830284118652
    4. 'if' → logprob: -3.2834830284118652
    5. 'idx' → logprob: -3.2834830284118652
    6. 'found' → logprob: -3.9084830284118652
    7. '   ' → logprob: -5.783483028411865
    8. 'try' → logprob: -5.908483028411865
    9. ' empty' → logprob: -6.033483028411865
    10. ' idx' → logprob: -6.283483028411865

Token 236: ' any' (ID: 1062)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.17843735218048096
    2. 'pos' → logprob: -2.0534372329711914
    3. 'True' → logprob: -3.6784372329711914
    4. ' pos' → logprob: -5.053437232971191
    5. ' True' → logprob: -6.428437232971191
    6. ' -' → logprob: -7.178437232971191
    7. '-pos' → logprob: -7.178437232971191
    8. '1' → logprob: -9.053437232971191
    9. 'any' → logprob: -9.678437232971191
    10. ' ' → logprob: -10.678437232971191

Token 237: '
' (ID: 198)
  Prédit: 'empty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'empty' → logprob: -0.4863227605819702
    2. 'for' → logprob: -1.8613227605819702
    3. '   ' → logprob: -2.6113228797912598
    4. 'found' → logprob: -2.9863228797912598
    5. ' empty' → logprob: -3.2363228797912598
    6. ' for' → logprob: -3.6113228797912598
    7. 'idx' → logprob: -3.6113228797912598
    8. ' found' → logprob: -5.48632287979126
    9. 'if' → logprob: -5.98632287979126
    10. ' idx' → logprob: -6.36132287979126

Token 238: '   ' (ID: 271)
  Prédit: 'empty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'empty' → logprob: -0.4658561646938324
    2. 'for' → logprob: -1.4658561944961548
    3. ' empty' → logprob: -3.2158560752868652
    4. ' for' → logprob: -3.2158560752868652
    5. 'found' → logprob: -3.3408560752868652
    6. 'idx' → logprob: -4.715856075286865
    7. 'try' → logprob: -5.215856075286865
    8. ' found' → logprob: -6.090856075286865
    9. 'if' → logprob: -6.215856075286865
    10. '   ' → logprob: -6.215856075286865

Token 239: ' empty' (ID: 8213)
  Prédit: 'empty'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'empty' (adapté à ' empty') → logprob: -0.17219659686088562
    2. 'for' → logprob: -3.047196626663208
    3. 'idx' → logprob: -3.422196626663208
    4. 'try' → logprob: -3.547196626663208
    5. ' empty' → logprob: -3.672196626663208
    6. 'found' → logprob: -4.422196388244629
    7. ' for' → logprob: -5.672196388244629
    8. ' try' → logprob: -5.672196388244629
    9. ' idx' → logprob: -6.297196388244629
    10. ' found' → logprob: -6.797196388244629

Token 240: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.5162740349769592
    2. '=' → logprob: -2.1412739753723145
    3. '_box' → logprob: -2.1412739753723145
    4. '_index' → logprob: -2.8912739753723145
    5. '=-' → logprob: -3.0162739753723145
    6. '_pos' → logprob: -3.5162739753723145
    7. '=_' → logprob: -3.7662739753723145
    8. '=None' → logprob: -5.6412739753723145
    9. ' =' → logprob: -5.7662739753723145
    10. '_i' → logprob: -6.3912739753723145

Token 241: '=-' (ID: 21714)
  Prédit: '=-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=-' → logprob: -0.04316053166985512
    2. '=' → logprob: -3.4181604385375977
    3. '=None' → logprob: -4.918160438537598
    4. ' =' → logprob: -6.168160438537598
    5. '=[' → logprob: -10.168160438537598
    6. '=len' → logprob: -12.793160438537598
    7. '-' → logprob: -12.918160438537598
    8. 'None' → logprob: -13.043160438537598
    9. '=sys' → logprob: -13.168160438537598
    10. '=[]' → logprob: -13.418160438537598

Token 242: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. '-' → logprob: -15.75
    3. ' ' → logprob: -15.875
    4. '```' → logprob: -15.875
    5. '`' → logprob: -18.125
    6. '2' → logprob: -18.4375
    7. '۱' → logprob: -18.75
    8. '１' → logprob: -18.9375
    9. '   ' → logprob: -18.9375
    10. '
' → logprob: -18.9375

Token 243: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0579717643558979
    2. '
' → logprob: -3.057971715927124
    3. ' for' → logprob: -4.682971954345703
    4. '<|end|>' → logprob: -9.932971954345703
    5. ' 
' → logprob: -10.932971954345703
    6. '    
' → logprob: -12.557971954345703
    7. '```' → logprob: -12.557971954345703
    8. '
' → logprob: -12.557971954345703
    9. '  
' → logprob: -12.807971954345703
    10. '0' → logprob: -13.057971954345703

Token 244: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03712229058146477
    2. ' for' → logprob: -3.7871222496032715
    3. '
' → logprob: -4.2871222496032715
    4. ' 
' → logprob: -10.41212272644043
    5. '<|end|>' → logprob: -13.03712272644043
    6. '  
' → logprob: -14.03712272644043
    7. '    
' → logprob: -14.16212272644043
    8. '```' → logprob: -14.16212272644043
    9. '
' → logprob: -14.28712272644043
    10. '

' → logprob: -15.16212272644043

Token 245: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0004311460361350328
    2. ' for' → logprob: -7.750431060791016
    3. '0' → logprob: -15.375431060791016
    4. '
' → logprob: -15.875431060791016
    5. '<|end|>' → logprob: -17.750431060791016
    6. '   ' → logprob: -18.250431060791016
    7. '-' → logprob: -18.875431060791016
    8. '```' → logprob: -19.250431060791016
    9. '	for' → logprob: -19.500431060791016
    10. '    
' → logprob: -19.750431060791016

Token 246: ' idx' (ID: 14016)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.05674809589982033
    2. ' j' → logprob: -3.556748151779175
    3. 'idx' → logprob: -3.931748151779175
    4. 'i' → logprob: -5.181747913360596
    5. ' idx' → logprob: -6.806747913360596
    6. 'x' → logprob: -9.056748390197754
    7. ' i' → logprob: -9.431748390197754
    8. '_j' → logprob: -10.431748390197754
    9. 'box' → logprob: -10.431748390197754
    10. ' box' → logprob: -11.806748390197754

Token 247: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3869019150733948
    2. 'in' → logprob: -1.13690185546875
    3. '	in' → logprob: -11.63690185546875
    4. ' ' → logprob: -11.88690185546875
    5. ',' → logprob: -12.01190185546875
    6. '_in' → logprob: -12.63690185546875
    7. '```' → logprob: -13.38690185546875
    8. ',in' → logprob: -14.26190185546875
    9. 'range' → logprob: -14.51190185546875
    10. ' ,' → logprob: -14.63690185546875

Token 248: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00038682064041495323
    2. ' range' → logprob: -7.875386714935303
    3. 'cache' → logprob: -12.000387191772461
    4. '
' → logprob: -15.125387191772461
    5. '   ' → logprob: -16.50038719177246
    6. '(range' → logprob: -16.62538719177246
    7. '

' → logprob: -17.12538719177246
    8. ' ' → logprob: -17.50038719177246
    9. '	range' → logprob: -17.62538719177246
    10. '  ' → logprob: -17.75038719177246

Token 249: '(M' (ID: 6103)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.3134390413761139
    2. '(M' → logprob: -1.3134390115737915
    3. 'len' → logprob: -9.43843936920166
    4. ' M' → logprob: -9.93843936920166
    5. '(len' → logprob: -10.93843936920166
    6. '   ' → logprob: -10.93843936920166
    7. '	M' → logprob: -12.31343936920166
    8. '(' → logprob: -13.31343936920166
    9. '
' → logprob: -13.56343936920166
    10. '0' → logprob: -13.68843936920166

Token 250: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.004090747330337763
    2. '):' → logprob: -5.504090785980225
    3. '):
' → logprob: -12.379090309143066
    4. '   ' → logprob: -12.504090309143066
    5. ':
' → logprob: -13.504090309143066
    6. ':' → logprob: -14.129090309143066
    7. ' ):
' → logprob: -14.379090309143066
    8. '):

' → logprob: -14.504090309143066
    9. '():
' → logprob: -14.504090309143066
    10. ')' → logprob: -15.129090309143066

Token 251: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019159240648150444
    2. ' if' → logprob: -4.019159317016602
    3. 'if' → logprob: -7.269159317016602
    4. '<|end|>' → logprob: -8.269159317016602
    5. '   ' → logprob: -10.269159317016602
    6. '	if' → logprob: -12.769159317016602
    7. '<|end|>' → logprob: -13.019159317016602
    8. '
' → logprob: -13.144159317016602
    9. ':' → logprob: -13.394159317016602
    10. '	   ' → logprob: -13.394159317016602

Token 252: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.22786830365657806
    2. '       ' → logprob: -1.9778683185577393
    3. ' if' → logprob: -2.7278683185577393
    4. '   ' → logprob: -10.60286808013916
    5. '	if' → logprob: -10.85286808013916
    6. '           ' → logprob: -13.10286808013916
    7. '	   ' → logprob: -14.22786808013916
    8. ' ' → logprob: -14.85286808013916
    9. 'If' → logprob: -15.10286808013916
    10. '    ' → logprob: -15.35286808013916

Token 253: ' cache' (ID: 11956)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cache' → logprob: -0.002237447304651141
    2. ' cache' → logprob: -6.127237319946289
    3. 'pos' → logprob: -9.877237319946289
    4. '	cache' → logprob: -14.752237319946289
    5. ' pos' → logprob: -15.127237319946289
    6. '   ' → logprob: -15.752237319946289
    7. 'c' → logprob: -16.75223731994629
    8. '_cache' → logprob: -17.25223731994629
    9. '
' → logprob: -17.37723731994629
    10. '(cache' → logprob: -17.75223731994629

Token 254: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -9.13388703338569e-06
    2. ' [' → logprob: -12.625009536743164
    3. 'idx' → logprob: -12.750009536743164
    4. '[' → logprob: -13.375009536743164
    5. '```' → logprob: -14.375009536743164
    6. ' idx' → logprob: -15.375009536743164
    7. '[
' → logprob: -16.000009536743164
    8. '==' → logprob: -16.125009536743164
    9. '[id' → logprob: -16.125009536743164
    10. '   ' → logprob: -16.125009536743164

Token 255: ']==' (ID: 34128)
  Prédit: '==-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==-' → logprob: -0.46707093715667725
    2. '==' → logprob: -1.7170709371566772
    3. ']==' → logprob: -1.9670709371566772
    4. ')==' → logprob: -3.592071056365967
    5. ' ==' → logprob: -3.717071056365967
    6. ')' → logprob: -6.467071056365967
    7. ']' → logprob: -8.592070579528809
    8. '==
' → logprob: -9.842070579528809
    9. '===' → logprob: -10.967070579528809
    10. '']==' → logprob: -10.967070579528809

Token 256: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.935296834039036e-06
    2. ' -' → logprob: -12.75000286102295
    3. '```' → logprob: -21.000003814697266
    4. '   ' → logprob: -21.125003814697266
    5. '-
' → logprob: -22.500003814697266
    6. '−' → logprob: -22.875003814697266
    7. '(-' → logprob: -23.000003814697266
    8. '‌' → logprob: -23.750003814697266
    9. ''-' → logprob: -24.125003814697266
    10. '‑' → logprob: -24.250003814697266

Token 257: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015955790877342224
    2. '-' → logprob: -8.75015926361084
    3. ' -' → logprob: -14.50015926361084
    4. ' ' → logprob: -14.62515926361084
    5. '```' → logprob: -16.000160217285156
    6. '<|end|>' → logprob: -17.625160217285156
    7. '<' → logprob: -18.750160217285156
    8. '--' → logprob: -19.125160217285156
    9. '>' → logprob: -19.250160217285156
    10. '`' → logprob: -19.500160217285156

Token 258: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.27021703124046326
    2. ':
' → logprob: -1.5202170610427856
    3. '):
' → logprob: -4.395216941833496
    4. '):' → logprob: -5.270216941833496
    5. ')' → logprob: -8.020216941833496
    6. '<|end|>' → logprob: -8.895216941833496
    7. '       ' → logprob: -9.770216941833496
    8. '           ' → logprob: -10.520216941833496
    9. ':return' → logprob: -10.895216941833496
    10. 'empty' → logprob: -10.895216941833496

Token 259: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.33412691950798035
    2. 'empty' → logprob: -1.3341269493103027
    3. ' empty' → logprob: -3.9591269493103027
    4. '(empty' → logprob: -6.959126949310303
    5. '
' → logprob: -8.584126472473145
    6. ':
' → logprob: -8.959126472473145
    7. '            
' → logprob: -8.959126472473145
    8. '               ' → logprob: -9.834126472473145
    9. '       ' → logprob: -10.209126472473145
    10. '{
' → logprob: -11.334126472473145

Token 260: ' empty' (ID: 8213)
  Prédit: 'empty'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'empty' (adapté à ' empty') → logprob: -0.0025263146962970495
    2. ' empty' → logprob: -6.00252628326416
    3. '               ' → logprob: -10.37752628326416
    4. '           ' → logprob: -11.12752628326416
    5. '
' → logprob: -12.62752628326416
    6. '(empty' → logprob: -14.37752628326416
    7. '       ' → logprob: -15.25252628326416
    8. '.empty' → logprob: -16.002527236938477
    9. 'empt' → logprob: -16.002527236938477
    10. '_empty' → logprob: -16.252527236938477

Token 261: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -3.5597102396423e-05
    2. 'idx' → logprob: -10.875035285949707
    3. '_idxs' → logprob: -12.125035285949707
    4. '=' → logprob: -12.625035285949707
    5. '[idx' → logprob: -12.750035285949707
    6. 'Idx' → logprob: -13.875035285949707
    7. '_IDX' → logprob: -14.625035285949707
    8. '	idx' → logprob: -14.625035285949707
    9. '(idx' → logprob: -14.875035285949707
    10. '
' → logprob: -14.875035285949707

Token 262: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0013477344764396548
    2. ' =' → logprob: -6.626347541809082
    3. '=
' → logprob: -11.751347541809082
    4. '=index' → logprob: -11.751347541809082
    5. '=int' → logprob: -13.126347541809082
    6. '=

' → logprob: -13.626347541809082
    7. '=i' → logprob: -13.751347541809082
    8. '=id' → logprob: -14.751347541809082
    9. '=req' → logprob: -15.876347541809082
    10. '=sys' → logprob: -15.876347541809082

Token 263: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -7.493430894101039e-05
    2. ' idx' → logprob: -9.500075340270996
    3. '	idx' → logprob: -17.50007438659668
    4. '[idx' → logprob: -18.75007438659668
    5. '(idx' → logprob: -18.75007438659668
    6. 'index' → logprob: -19.50007438659668
    7. '
' → logprob: -19.87507438659668
    8. 'id' → logprob: -20.12507438659668
    9. '_idx' → logprob: -20.12507438659668
    10. '   ' → logprob: -20.75007438659668

Token 264: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00048405781853944063
    2. '            
' → logprob: -8.000484466552734
    3. '		' → logprob: -9.375484466552734
    4. '
' → logprob: -10.375484466552734
    5. 'break' → logprob: -11.000484466552734
    6. '               ' → logprob: -12.750484466552734
    7. ' break' → logprob: -13.250484466552734
    8. '       ' → logprob: -13.375484466552734
    9. '          ' → logprob: -13.375484466552734
    10. '	break' → logprob: -13.875484466552734

Token 265: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001227276516146958
    2. '            
' → logprob: -9.625123023986816
    3. '		' → logprob: -10.375123023986816
    4. 'break' → logprob: -12.250123023986816
    5. ' break' → logprob: -12.375123023986816
    6. '
' → logprob: -12.375123023986816
    7. '       ' → logprob: -12.625123023986816
    8. '               ' → logprob: -13.125123023986816
    9. '    
' → logprob: -13.875123023986816
    10. '```' → logprob: -14.125123023986816

Token 266: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.19675946235656738
    2. '           ' → logprob: -2.1967594623565674
    3. ' break' → logprob: -2.6967594623565674
    4. '	break' → logprob: -11.321759223937988
    5. '
' → logprob: -11.946759223937988
    6. '            
' → logprob: -12.321759223937988
    7. '		' → logprob: -14.071759223937988
    8. '               ' → logprob: -15.071759223937988
    9. '       ' → logprob: -15.321759223937988
    10. 'breaking' → logprob: -15.446759223937988

Token 267: '

' (ID: 279)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.48938027024269104
    2. '   ' → logprob: -1.4893802404403687
    3. ' if' → logprob: -1.8643802404403687
    4. 'else' → logprob: -5.989380359649658
    5. ' 
' → logprob: -6.364380359649658
    6. '    
' → logprob: -6.864380359649658
    7. ' else' → logprob: -7.864380359649658
    8. '  
' → logprob: -8.2393798828125
    9. 'If' → logprob: -9.2393798828125
    10. '   
' → logprob: -9.3643798828125

Token 268: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1752740442752838
    2. ' if' → logprob: -2.050274133682251
    3. '   ' → logprob: -3.675274133682251
    4. 'else' → logprob: -5.175273895263672
    5. ' else' → logprob: -7.300273895263672
    6. 'If' → logprob: -8.925273895263672
    7. ' 
' → logprob: -9.800273895263672
    8. '```' → logprob: -9.800273895263672
    9. '    
' → logprob: -10.175273895263672
    10. '    ' → logprob: -10.800273895263672

Token 269: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.06879853457212448
    2. ' if' → logprob: -3.193798542022705
    3. '   ' → logprob: -3.693798542022705
    4. 'else' → logprob: -7.693798542022705
    5. '    ' → logprob: -9.568798065185547
    6. ' else' → logprob: -10.943798065185547
    7. '    
' → logprob: -11.068798065185547
    8. '```' → logprob: -11.568798065185547
    9. ' 
' → logprob: -12.068798065185547
    10. '       ' → logprob: -12.193798065185547

Token 270: ' empty' (ID: 8213)
  Prédit: ' empty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' empty' → logprob: -0.06197104603052139
    2. 'empty' → logprob: -2.8119709491729736
    3. '(empty' → logprob: -12.936970710754395
    4. '   ' → logprob: -14.561970710754395
    5. 'empt' → logprob: -14.936970710754395
    6. ' ' → logprob: -16.93697166442871
    7. ' empt' → logprob: -16.93697166442871
    8. '空' → logprob: -17.31197166442871
    9. '_empty' → logprob: -17.31197166442871
    10. 'em' → logprob: -17.56197166442871

Token 271: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.02326970361173153
    2. 'x' → logprob: -3.7732696533203125
    3. 'idx' → logprob: -11.398269653320312
    4. 'Idx' → logprob: -12.023269653320312
    5. '==' → logprob: -13.273269653320312
    6. 't' → logprob: -13.273269653320312
    7. 'dx' → logprob: -14.023269653320312
    8. 'd' → logprob: -14.148269653320312
    9. '_IDX' → logprob: -14.648269653320312
    10. 'm' → logprob: -15.773269653320312

Token 272: '!=-' (ID: 146584)
  Prédit: '==-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==-' → logprob: -0.14676932990550995
    2. '==' → logprob: -2.0217692852020264
    3. '!=-' → logprob: -5.8967695236206055
    4. ' ==' → logprob: -7.1467695236206055
    5. '=' → logprob: -7.8967695236206055
    6. '!=' → logprob: -8.896769523620605
    7. '<' → logprob: -11.521769523620605
    8. '=-' → logprob: -11.646769523620605
    9. '```' → logprob: -12.271769523620605
    10. '>' → logprob: -12.396769523620605

Token 273: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. '-' → logprob: -15.375000953674316
    3. ' ' → logprob: -15.500000953674316
    4. '=' → logprob: -15.875000953674316
    5. '```' → logprob: -16.0
    6. ' -' → logprob: -17.875
    7. '   ' → logprob: -18.125
    8. '2' → logprob: -18.375
    9. ',' → logprob: -18.4375
    10. '.' → logprob: -18.8125

Token 274: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5762237906455994
    2. ':
' → logprob: -0.8262237906455994
    3. '       ' → logprob: -8.451223373413086
    4. '   ' → logprob: -10.701223373413086
    5. '):
' → logprob: -10.826223373413086
    6. '):' → logprob: -11.451223373413086
    7. ':
' → logprob: -12.076223373413086
    8. ':

' → logprob: -12.076223373413086
    9. '=' → logprob: -13.451223373413086
    10. ' :
' → logprob: -13.576223373413086

Token 275: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48380857706069946
    2. 'cache' → logprob: -0.9838085770606995
    3. ' cache' → logprob: -4.983808517456055
    4. '   ' → logprob: -5.983808517456055
    5. 'pos' → logprob: -9.358808517456055
    6. 'ans' → logprob: -9.608808517456055
    7. '	cache' → logprob: -9.733808517456055
    8. ' ans' → logprob: -10.858808517456055
    9. 'cost' → logprob: -10.858808517456055
    10. '           ' → logprob: -10.983808517456055

Token 276: ' #' (ID: 1069)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cache' → logprob: -0.010001848451793194
    2. ' cache' → logprob: -4.7600016593933105
    3. '       ' → logprob: -7.0100016593933105
    4. '   ' → logprob: -8.635002136230469
    5. 'ans' → logprob: -8.635002136230469
    6. '           ' → logprob: -9.635002136230469
    7. ' ans' → logprob: -10.385002136230469
    8. 'cost' → logprob: -11.760002136230469
    9. 'pos' → logprob: -11.885002136230469
    10. '	cache' → logprob: -12.010002136230469

Token 277: ' Use' (ID: 7649)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cache' → logprob: -0.0012305884156376123
    2. 'cost' → logprob: -7.376230716705322
    3. 'ans' → logprob: -8.126230239868164
    4. ' cache' → logprob: -8.376230239868164
    5. 'pos' → logprob: -10.251230239868164
    6. '#' → logprob: -10.501230239868164
    7. '           ' → logprob: -12.251230239868164
    8. '   ' → logprob: -12.501230239868164
    9. '       ' → logprob: -12.751230239868164
    10. '	cache' → logprob: -14.251230239868164

Token 278: ' empty' (ID: 8213)
  Prédit: 'empty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'empty' → logprob: -0.5940029621124268
    2. ' empty' → logprob: -0.8440029621124268
    3. 'cache' → logprob: -4.719002723693848
    4. ' cache' → logprob: -4.719002723693848
    5. '(empty' → logprob: -10.719002723693848
    6. 'empt' → logprob: -12.094002723693848
    7. '           ' → logprob: -12.344002723693848
    8. '            ' → logprob: -12.594002723693848
    9. '_empty' → logprob: -12.844002723693848
    10. '        ' → logprob: -12.844002723693848

Token 279: ' box' (ID: 5506)
  Prédit: '_idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.03674120455980301
    2. 'idx' → logprob: -4.536741256713867
    3. ' box' → logprob: -4.661741256713867
    4. 'box' → logprob: -5.161741256713867
    5. 'empty' → logprob: -5.536741256713867
    6. 'cache' → logprob: -6.286741256713867
    7. ' cache' → logprob: -6.536741256713867
    8. ' idx' → logprob: -6.786741256713867
    9. ' empty' → logprob: -7.786741256713867
    10. '_cache' → logprob: -7.911741256713867

Token 280: '
' (ID: 198)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cache' → logprob: -0.07296361774206161
    2. '       ' → logprob: -2.8229637145996094
    3. ' cache' → logprob: -4.697963714599609
    4. '   ' → logprob: -7.447963714599609
    5. '
' → logprob: -7.572963714599609
    6. '           ' → logprob: -8.44796371459961
    7. '=' → logprob: -8.57296371459961
    8. '        
' → logprob: -9.19796371459961
    9. '	cache' → logprob: -9.44796371459961
    10. '(cache' → logprob: -10.82296371459961

Token 281: '       ' (ID: 309)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cache' → logprob: -0.6653361916542053
    2. '       ' → logprob: -0.7903361916542053
    3. ' cache' → logprob: -3.5403361320495605
    4. '   ' → logprob: -6.0403361320495605
    5. '	cache' → logprob: -7.6653361320495605
    6. '           ' → logprob: -8.540336608886719
    7. '```' → logprob: -9.790336608886719
    8. '    ' → logprob: -11.415336608886719
    9. ' ' → logprob: -11.540336608886719
    10. '    ' → logprob: -11.665336608886719

Token 282: ' cache' (ID: 11956)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cache' (adapté à ' cache') → logprob: -0.001435708487406373
    2. 'ans' → logprob: -6.87643575668335
    3. 'cost' → logprob: -8.751435279846191
    4. 'pos' → logprob: -8.876435279846191
    5. ' cache' → logprob: -9.376435279846191
    6. '   ' → logprob: -12.001435279846191
    7. '           ' → logprob: -12.001435279846191
    8. '       ' → logprob: -12.376435279846191
    9. ' ans' → logprob: -14.126435279846191
    10. '
' → logprob: -14.376435279846191

Token 283: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.339278580620885e-06
    2. ' [' → logprob: -13.750001907348633
    3. '```' → logprob: -14.125001907348633
    4. 'empty' → logprob: -15.250001907348633
    5. '\[' → logprob: -16.375001907348633
    6. '[idx' → logprob: -16.375001907348633
    7. '   ' → logprob: -18.500001907348633
    8. '][' → logprob: -18.875001907348633
    9. '[temp' → logprob: -19.125001907348633
    10. '       ' → logprob: -19.250001907348633

Token 284: 'empty' (ID: 6857)
  Prédit: 'empty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'empty' → logprob: -1.7432603272027336e-06
    2. ' empty' → logprob: -13.375001907348633
    3. '_empty' → logprob: -16.125001907348633
    4. '(empty' → logprob: -17.500001907348633
    5. 'idx' → logprob: -17.875001907348633
    6. 'empt' → logprob: -19.375001907348633
    7. '.empty' → logprob: -19.625001907348633
    8. '-empty' → logprob: -20.875001907348633
    9. 'index' → logprob: -21.125001907348633
    10. '[' → logprob: -21.250001907348633

Token 285: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.004265015944838524
    2. 'idx' → logprob: -5.504264831542969
    3. 'empty' → logprob: -9.129264831542969
    4. '[idx' → logprob: -10.254264831542969
    5. '[' → logprob: -11.004264831542969
    6. 'Idx' → logprob: -12.129264831542969
    7. '```' → logprob: -12.379264831542969
    8. ' idx' → logprob: -12.754264831542969
    9. '_index' → logprob: -13.129264831542969
    10. '_empty' → logprob: -13.504264831542969

Token 286: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.06275258958339691
    2. ']' → logprob: -2.8127524852752686
    3. '=' → logprob: -7.187752723693848
    4. ' ]' → logprob: -10.687752723693848
    5. ')=' → logprob: -13.687752723693848
    6. ']=(' → logprob: -13.687752723693848
    7. ']=-' → logprob: -13.937752723693848
    8. ']+=' → logprob: -14.312752723693848
    9. ']==' → logprob: -14.562752723693848
    10. ' =' → logprob: -14.812752723693848

Token 287: 'ball' (ID: 5052)
  Prédit: 'ball'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ball' → logprob: -2.935296834039036e-06
    2. ' ball' → logprob: -12.75000286102295
    3. '   ' → logprob: -18.750003814697266
    4. 'bal' → logprob: -18.750003814697266
    5. '(ball' → logprob: -19.375003814697266
    6. '```' → logprob: -19.625003814697266
    7. '.ball' → logprob: -20.500003814697266
    8. 'block' → logprob: -21.000003814697266
    9. 'b' → logprob: -21.000003814697266
    10. '球' → logprob: -21.250003814697266

Token 288: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6808834671974182
    2. '   ' → logprob: -0.8058834671974182
    3. 'pos' → logprob: -3.4308834075927734
    4. '       ' → logprob: -4.305883407592773
    5. '
' → logprob: -7.555883407592773
    6. '    
' → logprob: -7.805883407592773
    7. '           ' → logprob: -8.930883407592773
    8. ',' → logprob: -9.805883407592773
    9. '        
' → logprob: -10.305883407592773
    10. ',pos' → logprob: -10.555883407592773

Token 289: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5695053935050964
    2. '       ' → logprob: -1.0695054531097412
    3. 'pos' → logprob: -3.069505453109741
    4. '   ' → logprob: -3.444505453109741
    5. '        
' → logprob: -5.069505214691162
    6. '    
' → logprob: -5.819505214691162
    7. '           ' → logprob: -6.569505214691162
    8. '
' → logprob: -6.694505214691162
    9. ' 
' → logprob: -9.19450569152832
    10. '   
' → logprob: -9.19450569152832

Token 290: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -3.7697225252486533e-06
    2. ' pos' → logprob: -12.875003814697266
    3. 'ans' → logprob: -13.625003814697266
    4. '   ' → logprob: -17.875003814697266
    5. '
' → logprob: -18.000003814697266
    6. '           ' → logprob: -18.375003814697266
    7. '       ' → logprob: -18.750003814697266
    8. '	pos' → logprob: -19.750003814697266
    9. '```' → logprob: -20.625003814697266
    10. 'position' → logprob: -21.000003814697266

Token 291: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -4.320199877838604e-07
    2. 'In' → logprob: -15.875
    3. '_' → logprob: -16.125
    4. 'in' → logprob: -16.25
    5. '[' → logprob: -17.875
    6. '```' → logprob: -18.125
    7. '[_' → logprob: -18.75
    8. '_IN' → logprob: -18.75
    9. '_pos' → logprob: -18.875
    10. ' _' → logprob: -19.25

Token 292: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.0007115975022315979
    2. 'cache' → logprob: -7.250711441040039
    3. 'pos' → logprob: -13.875711441040039
    4. ' cache' → logprob: -15.125711441040039
    5. '-cache' → logprob: -16.12571144104004
    6. '	cache' → logprob: -16.25071144104004
    7. '_' → logprob: -16.37571144104004
    8. '_CACHE' → logprob: -17.00071144104004
    9. '_in' → logprob: -17.00071144104004
    10. '_pos' → logprob: -17.25071144104004

Token 293: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.7432603272027336e-06
    2. '```' → logprob: -13.375001907348633
    3. ' [' → logprob: -16.750001907348633
    4. '[pos' → logprob: -18.250001907348633
    5. '=' → logprob: -18.500001907348633
    6. '\[' → logprob: -18.625001907348633
    7. '[b' → logprob: -18.750001907348633
    8. '   ' → logprob: -18.750001907348633
    9. '(ball' → logprob: -19.000001907348633
    10. ')[' → logprob: -19.250001907348633

Token 294: 'ball' (ID: 5052)
  Prédit: 'ball'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ball' → logprob: -9.9728669738397e-05
    2. '[' → logprob: -9.250100135803223
    3. ' ball' → logprob: -12.625100135803223
    4. '(ball' → logprob: -16.625099182128906
    5. '```' → logprob: -17.250099182128906
    6. 'b' → logprob: -17.375099182128906
    7. 'bal' → logprob: -17.375099182128906
    8. '
' → logprob: -17.500099182128906
    9. ' ' → logprob: -18.625099182128906
    10. '   ' → logprob: -18.875099182128906

Token 295: ']=' (ID: 9539)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04991883039474487
    2. '=' → logprob: -3.0499188899993896
    3. ']=' → logprob: -6.6749186515808105
    4. ']' → logprob: -10.674919128417969
    5. '][' → logprob: -11.424919128417969
    6. '=[' → logprob: -11.674919128417969
    7. '```' → logprob: -12.424919128417969
    8. 'empty' → logprob: -12.549919128417969
    9. ')=' → logprob: -12.549919128417969
    10. '[
' → logprob: -12.674919128417969

Token 296: 'empty' (ID: 6857)
  Prédit: 'empty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'empty' → logprob: -2.15310683415737e-05
    2. ' empty' → logprob: -10.750021934509277
    3. '(empty' → logprob: -18.50002098083496
    4. 'empt' → logprob: -19.62502098083496
    5. '_empty' → logprob: -21.12502098083496
    6. 'EMPTY' → logprob: -21.75002098083496
    7. '.empty' → logprob: -21.87502098083496
    8. 'Empty' → logprob: -22.12502098083496
    9. 'emt' → logprob: -22.87502098083496
    10. '
' → logprob: -22.87502098083496

Token 297: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.00870793778449297
    2. 'x' → logprob: -4.7587080001831055
    3. 'idx' → logprob: -9.383708000183105
    4. 'Idx' → logprob: -12.133708000183105
    5. '_index' → logprob: -13.758708000183105
    6. '_x' → logprob: -14.508708000183105
    7. '_IDX' → logprob: -14.508708000183105
    8. 'dx' → logprob: -15.008708000183105
    9. '```' → logprob: -15.258708000183105
    10. '_ix' → logprob: -15.758708000183105

Token 298: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5054892301559448
    2. '
' → logprob: -1.1304892301559448
    3. '       ' → logprob: -2.6304893493652344
    4. 'else' → logprob: -6.880489349365234
    5. 'ans' → logprob: -8.505489349365234
    6. '
' → logprob: -9.005489349365234
    7. '    
' → logprob: -9.130489349365234
    8. '```' → logprob: -9.380489349365234
    9. 'continue' → logprob: -9.505489349365234
    10. '        
' → logprob: -10.005489349365234

Token 299: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.060220979154109955
    2. 'else' → logprob: -3.060220956802368
    3. '       ' → logprob: -4.685221195220947
    4. ' else' → logprob: -6.310221195220947
    5. 'continue' → logprob: -8.310220718383789
    6. '
' → logprob: -9.060220718383789
    7. '```' → logprob: -10.060220718383789
    8. 'ans' → logprob: -10.185220718383789
    9. ' continue' → logprob: -10.685220718383789
    10. '    
' → logprob: -11.310220718383789

Token 300: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.00018697108316700906
    2. ' ans' → logprob: -8.875186920166016
    3. 'continue' → logprob: -10.875186920166016
    4. '   ' → logprob: -11.250186920166016
    5. '       ' → logprob: -12.250186920166016
    6. '           ' → logprob: -12.750186920166016
    7. '	ans' → logprob: -12.875186920166016
    8. 'else' → logprob: -13.375186920166016
    9. '(ans' → logprob: -13.875186920166016
    10. '+' → logprob: -14.875186920166016

Token 301: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0036604066845029593
    2. ' +=' → logprob: -5.878660202026367
    3. '+' → logprob: -7.128660202026367
    4. ']+=' → logprob: -10.003660202026367
    5. '+='' → logprob: -12.628660202026367
    6. '+="' → logprob: -13.003660202026367
    7. '+=(' → logprob: -13.128660202026367
    8. '++' → logprob: -15.378660202026367
    9. '```' → logprob: -16.253660202026367
    10. ')+' → logprob: -16.628660202026367

Token 302: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -9.014684110297821e-06
    2. '0' → logprob: -12.250008583068848
    3. ' w' → logprob: -12.625008583068848
    4. '1' → logprob: -14.625008583068848
    5. '   ' → logprob: -15.500008583068848
    6. '```' → logprob: -16.625009536743164
    7. '	w' → logprob: -17.625009536743164
    8. 'W' → logprob: -17.875009536743164
    9. '10' → logprob: -18.125009536743164
    10. '       ' → logprob: -18.125009536743164

Token 303: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.453737710718997e-05
    2. 'ball' → logprob: -10.125044822692871
    3. '```' → logprob: -13.625044822692871
    4. '(ball' → logprob: -13.625044822692871
    5. 'empty' → logprob: -14.250044822692871
    6. '[b' → logprob: -14.875044822692871
    7. ' [' → logprob: -15.625044822692871
    8. '[
' → logprob: -15.750044822692871
    9. '\[' → logprob: -15.750044822692871
    10. 'cache' → logprob: -16.125043869018555

Token 304: 'ball' (ID: 5052)
  Prédit: 'ball'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ball' → logprob: -3.15441757265944e-05
    2. 'empty' → logprob: -10.875031471252441
    3. ' ball' → logprob: -11.500031471252441
    4. ' ' → logprob: -14.875031471252441
    5. '```' → logprob: -14.875031471252441
    6. '(ball' → logprob: -15.125031471252441
    7. ')' → logprob: -15.375031471252441
    8. 'batch' → logprob: -15.500031471252441
    9. 'v' → logprob: -15.625031471252441
    10. 'b' → logprob: -16.000032424926758

Token 305: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005906280595809221
    2. '[' → logprob: -5.755906105041504
    3. ')' → logprob: -6.255906105041504
    4. ' ]' → logprob: -7.880906105041504
    5. '])' → logprob: -9.005906105041504
    6. '<|end|>' → logprob: -9.130906105041504
    7. ']
' → logprob: -9.505906105041504
    8. '   ' → logprob: -10.755906105041504
    9. ']+' → logprob: -11.255906105041504
    10. ')]' → logprob: -11.255906105041504

Token 306: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3882615268230438
    2. 'else' → logprob: -1.1382615566253662
    3. ' else' → logprob: -6.763261318206787
    4. '```' → logprob: -8.513261795043945
    5. '       ' → logprob: -11.138261795043945
    6. 'continue' → logprob: -11.388261795043945
    7. '	else' → logprob: -12.763261795043945
    8. 'elif' → logprob: -13.513261795043945
    9. '_else' → logprob: -14.638261795043945
    10. '``' → logprob: -14.763261795043945

Token 307: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.04901096224784851
    2. '   ' → logprob: -3.049010992050171
    3. ' else' → logprob: -7.799010753631592
    4. '       ' → logprob: -12.29901123046875
    5. 'continue' → logprob: -12.29901123046875
    6. '```' → logprob: -13.17401123046875
    7. '	else' → logprob: -13.92401123046875
    8. 'elif' → logprob: -14.17401123046875
    9. '    
' → logprob: -15.54901123046875
    10. '_else' → logprob: -16.04901123046875

Token 308: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49916762113571167
    2. '#' → logprob: -1.6241676807403564
    3. '       ' → logprob: -2.2491676807403564
    4. 'max' → logprob: -3.4991676807403564
    5. ':
' → logprob: -3.8741676807403564
    6. '
' → logprob: -4.124167442321777
    7. ':' → logprob: -4.874167442321777
    8. '{
' → logprob: -5.124167442321777
    9. '```' → logprob: -5.624167442321777
    10. '{' → logprob: -5.749167442321777

Token 309: '       ' (ID: 309)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.34569382667541504
    2. '#' → logprob: -1.720693826675415
    3. 'fur' → logprob: -3.345693826675415
    4. 'far' → logprob: -3.845693826675415
    5. '   ' → logprob: -4.095693588256836
    6. 'ev' → logprob: -4.095693588256836
    7. 'next' → logprob: -4.845693588256836
    8. 'best' → logprob: -5.345693588256836
    9. 'use' → logprob: -5.970693588256836
    10. 'pos' → logprob: -6.970693588256836

Token 310: ' #' (ID: 1069)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5609079003334045
    2. 'ev' → logprob: -2.0609078407287598
    3. '#' (adapté à ' #') → logprob: -2.3109078407287598
    4. 'fur' → logprob: -2.3109078407287598
    5. 'far' → logprob: -2.9359078407287598
    6. 'next' → logprob: -3.8109078407287598
    7. 'best' → logprob: -5.18590784072876
    8. 'f' → logprob: -5.18590784072876
    9. 'remove' → logprob: -5.56090784072876
    10. 'replace' → logprob: -5.93590784072876

Token 311: ' Need' (ID: 19792)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7646881937980652
    2. '#' → logprob: -1.01468825340271
    3. 'next' → logprob: -2.26468825340271
    4. 'ev' → logprob: -4.014688014984131
    5. 'fur' → logprob: -4.014688014984131
    6. 'far' → logprob: -4.264688014984131
    7. 'best' → logprob: -5.889688014984131
    8. 'f' → logprob: -6.389688014984131
    9. 'candidate' → logprob: -6.514688014984131
    10. 'cand' → logprob: -6.514688014984131

Token 312: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.2082357257604599
    2. ' to' → logprob: -1.708235740661621
    3. '       ' → logprob: -5.083235740661621
    4. '   ' → logprob: -7.958235740661621
    5. '#' → logprob: -8.833235740661621
    6. '_to' → logprob: -10.208235740661621
    7. '           ' → logprob: -10.833235740661621
    8. '        ' → logprob: -11.583235740661621
    9. ' #' → logprob: -11.958235740661621
    10. '    ' → logprob: -11.958235740661621

Token 313: ' ev' (ID: 5332)
  Prédit: 'ev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ev' → logprob: -0.8880926966667175
    2. '#' → logprob: -1.3880927562713623
    3. 'replace' → logprob: -2.0130927562713623
    4. 'max' → logprob: -2.3880927562713623
    5. 'find' → logprob: -2.8880927562713623
    6. 'choose' → logprob: -4.013092517852783
    7. 'import' → logprob: -4.263092517852783
    8. '       ' → logprob: -4.638092517852783
    9. 'remove' → logprob: -5.638092517852783
    10. ' ev' → logprob: -5.638092517852783

Token 314: 'ict' (ID: 1360)
  Prédit: 'ict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ict' → logprob: -4.723352049040841e-06
    2. 'ic' → logprob: -13.375004768371582
    3. '```' → logprob: -14.125004768371582
    4. 'al' → logprob: -14.250004768371582
    5. 'iction' → logprob: -15.000004768371582
    6. '#' → logprob: -15.500004768371582
    7. 'icts' → logprob: -15.500004768371582
    8. 'icted' → logprob: -15.625004768371582
    9. '``' → logprob: -15.625004768371582
    10. '
' → logprob: -15.875004768371582

Token 315: ' a' (ID: 261)
  Prédit: 'fur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fur' → logprob: -0.6277114748954773
    2. 'max' → logprob: -1.377711534500122
    3. 'ev' → logprob: -2.377711534500122
    4. 'far' → logprob: -2.877711534500122
    5. 'f' → logprob: -3.377711534500122
    6. '#' → logprob: -5.002711296081543
    7. 'next' → logprob: -5.127711296081543
    8. 'idx' → logprob: -5.127711296081543
    9. '       ' → logprob: -5.877711296081543
    10. ' fur' → logprob: -6.752711296081543

Token 316: ' ball' (ID: 7880)
  Prédit: 'ball'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ball' → logprob: -1.0310263633728027
    2. 'cache' → logprob: -1.5310263633728027
    3. 'n' → logprob: -2.1560263633728027
    4. ' ball' → logprob: -2.2810263633728027
    5. 'l' → logprob: -2.2810263633728027
    6. '#' → logprob: -3.6560263633728027
    7. 'll' → logprob: -3.9060263633728027
    8. ' cache' → logprob: -5.031026363372803
    9. 'nd' → logprob: -5.156026363372803
    10. '=' → logprob: -5.156026363372803

Token 317: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7635267376899719
    2. '
' → logprob: -1.7635266780853271
    3. '        
' → logprob: -1.8885266780853271
    4. 'max' → logprob: -2.388526678085327
    5. '        ' → logprob: -3.638526678085327
    6. '=' → logprob: -3.888526678085327
    7. ' max' → logprob: -4.138526916503906
    8. '=max' → logprob: -4.263526916503906
    9. 'idx' → logprob: -5.388526916503906
    10. '   ' → logprob: -5.388526916503906

Token 318: '       ' (ID: 309)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6581660509109497
    2. '       ' → logprob: -1.0331660509109497
    3. ' max' → logprob: -3.28316593170166
    4. '
' → logprob: -3.28316593170166
    5. '        
' → logprob: -3.65816593170166
    6. '        ' → logprob: -4.78316593170166
    7. ' 
' → logprob: -5.65816593170166
    8. '```' → logprob: -6.65816593170166
    9. '           ' → logprob: -6.78316593170166
    10. '  
' → logprob: -6.90816593170166

Token 319: ' #' (ID: 1069)
  Prédit: 'ev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ev' → logprob: -0.18740008771419525
    2. 'max' → logprob: -2.3124001026153564
    3. 'far' → logprob: -3.1874001026153564
    4. 'fur' → logprob: -3.6874001026153564
    5. 'f' → logprob: -5.687399864196777
    6. 'candidate' → logprob: -7.187399864196777
    7. 'next' → logprob: -8.187399864196777
    8. 'to' → logprob: -8.687399864196777
    9. 'vict' → logprob: -8.937399864196777
    10. 'best' → logprob: -9.187399864196777

Token 320: ' For' (ID: 2214)
  Prédit: 'ev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ev' → logprob: -0.786945641040802
    2. 'far' → logprob: -1.5369455814361572
    3. 'max' → logprob: -1.6619455814361572
    4. 'fur' → logprob: -2.2869455814361572
    5. 'f' → logprob: -3.7869455814361572
    6. 'latest' → logprob: -5.161945819854736
    7. 'next' → logprob: -5.661945819854736
    8. 'candidate' → logprob: -6.036945819854736
    9. 'future' → logprob: -7.036945819854736
    10. ' far' → logprob: -7.286945819854736

Token 321: ' each' (ID: 2454)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.10045456141233444
    2. 'i' → logprob: -3.225454568862915
    3. 'j' → logprob: -3.350454568862915
    4. ' idx' → logprob: -4.475454330444336
    5. 'ev' → logprob: -5.100454330444336
    6. ' j' → logprob: -6.850454330444336
    7. 'ball' → logprob: -7.600454330444336
    8. 'b' → logprob: -7.725454330444336
    9. ' i' → logprob: -8.475454330444336
    10. '_idx' → logprob: -8.600454330444336

Token 322: ' ball' (ID: 7880)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.050131212919950485
    2. ' idx' → logprob: -3.550131320953369
    3. 'i' → logprob: -4.300131320953369
    4. 'j' → logprob: -5.675131320953369
    5. 'ball' → logprob: -6.925131320953369
    6. ' j' → logprob: -7.425131320953369
    7. ' i' → logprob: -7.675131320953369
    8. '_idx' → logprob: -8.050130844116211
    9. 'pos' → logprob: -8.175130844116211
    10. 'cache' → logprob: -8.925130844116211

Token 323: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.24699172377586365
    2. 'in' → logprob: -1.871991753578186
    3. '           ' → logprob: -2.9969916343688965
    4. '       ' → logprob: -4.9969916343688965
    5. ',' → logprob: -6.2469916343688965
    6. '_in' → logprob: -6.6219916343688965
    7. '   ' → logprob: -6.9969916343688965
    8. '```' → logprob: -7.3719916343688965
    9. 'idx' → logprob: -7.3719916343688965
    10. ' idx' → logprob: -7.7469916343688965

Token 324: ' cache' (ID: 11956)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cache' → logprob: -0.39063799381256104
    2. 'range' → logprob: -1.140637993812561
    3. ' range' → logprob: -6.0156378746032715
    4. ' cache' → logprob: -6.6406378746032715
    5. 'enumer' → logprob: -11.51563835144043
    6. 'pos' → logprob: -14.39063835144043
    7. '
' → logprob: -14.39063835144043
    8. '   ' → logprob: -14.76563835144043
    9. '```' → logprob: -14.76563835144043
    10. ' ' → logprob: -14.76563835144043

Token 325: ',' (ID: 11)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 326: ' find' (ID: 1646)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.2106691151857376
    2. 'best' → logprob: -2.4606690406799316
    3. 'fur' → logprob: -3.4606690406799316
    4. 'next' → logprob: -3.7106690406799316
    5. 'ev' → logprob: -3.7106690406799316
    6. '           ' → logprob: -5.335669040679932
    7. '       ' → logprob: -5.585669040679932
    8. ' max' → logprob: -5.835669040679932
    9. 'candidate' → logprob: -5.960669040679932
    10. 'f' → logprob: -6.335669040679932

Token 327: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.4877330958843231
    2. 'max' → logprob: -2.1127331256866455
    3. 'idx' → logprob: -2.8627331256866455
    4. 'the' → logprob: -2.9877331256866455
    5. 'fur' → logprob: -2.9877331256866455
    6. 'its' → logprob: -3.4877331256866455
    7. 'their' → logprob: -4.112732887268066
    8. 'cache' → logprob: -4.112732887268066
    9. ' next' → logprob: -4.362732887268066
    10. 'ev' → logprob: -4.612732887268066

Token 328: ' use' (ID: 1199)
  Prédit: '_use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_use' → logprob: -0.001637216075323522
    2. 'use' → logprob: -6.876636981964111
    3. '_' → logprob: -7.751636981964111
    4. '_occ' → logprob: -9.62663745880127
    5. '_usage' → logprob: -10.50163745880127
    6. ' use' → logprob: -10.75163745880127
    7. '   ' → logprob: -11.00163745880127
    8. '_pos' → logprob: -12.12663745880127
    9. 'pos' → logprob: -12.25163745880127
    10. ')' → logprob: -12.37663745880127

Token 329: ' position' (ID: 4010)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5058858394622803
    2. 'next' → logprob: -1.5058858394622803
    3. 'pos' → logprob: -3.0058858394622803
    4. '_next' → logprob: -3.7558858394622803
    5. '=' → logprob: -3.8808858394622803
    6. '_pos' → logprob: -3.8808858394622803
    7. 'max' → logprob: -4.005886077880859
    8. '       ' → logprob: -4.755886077880859
    9. ' =' → logprob: -5.005886077880859
    10. '=-' → logprob: -5.880886077880859

Token 330: '
' (ID: 198)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.1454718112945557
    2. '       ' → logprob: -1.2704718112945557
    3. '
' → logprob: -1.8954718112945557
    4. 'next' → logprob: -2.3954718112945557
    5. '   ' → logprob: -3.7704718112945557
    6. ',' → logprob: -3.7704718112945557
    7. '        
' → logprob: -4.020471572875977
    8. '=max' → logprob: -4.020471572875977
    9. ' max' → logprob: -4.520471572875977
    10. '```' → logprob: -5.020471572875977

Token 331: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3141818344593048
    2. 'max' → logprob: -2.8141818046569824
    3. ' max' → logprob: -2.8141818046569824
    4. '   ' → logprob: -3.4391818046569824
    5. '        ' → logprob: -3.9391818046569824
    6. ' next' → logprob: -4.064181804656982
    7. ' ' → logprob: -4.064181804656982
    8. '```' → logprob: -4.314181804656982
    9. 'next' → logprob: -4.439181804656982
    10. ',' → logprob: -5.314181804656982

Token 332: ' #' (ID: 1069)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.7314905524253845
    2. 'max' → logprob: -0.9814905524253845
    3. 'fur' → logprob: -3.2314906120300293
    4. 'best' → logprob: -3.7314906120300293
    5. '       ' → logprob: -4.231490612030029
    6. 'far' → logprob: -4.731490612030029
    7. 'ev' → logprob: -4.731490612030029
    8. ' far' → logprob: -4.856490612030029
    9. ' next' → logprob: -4.981490612030029
    10. ' fur' → logprob: -5.481490612030029

Token 333: ' If' (ID: 1843)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.659583330154419
    2. 'max' → logprob: -1.284583330154419
    3. 'fur' → logprob: -3.034583330154419
    4. '       ' → logprob: -3.034583330154419
    5. 'ev' → logprob: -4.03458309173584
    6. 'far' → logprob: -4.15958309173584
    7. ' far' → logprob: -4.15958309173584
    8. ' next' → logprob: -4.40958309173584
    9. 'best' → logprob: -4.40958309173584
    10. ' fur' → logprob: -5.15958309173584

Token 334: ' no' (ID: 860)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.21990598738193512
    2. ' next' → logprob: -2.4699060916900635
    3. 'pos' → logprob: -2.9699060916900635
    4. 'positions' → logprob: -3.0949060916900635
    5. ' positions' → logprob: -5.219905853271484
    6. ' pos' → logprob: -5.719905853271484
    7. 'cache' → logprob: -5.844905853271484
    8. 'max' → logprob: -6.844905853271484
    9. 'i' → logprob: -7.344905853271484
    10. '_next' → logprob: -7.844905853271484

Token 335: ' next' (ID: 2613)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -1.0491936206817627
    2. ' next' → logprob: -1.4241936206817627
    3. ' positions' → logprob: -1.6741936206817627
    4. 'next' → logprob: -2.1741936206817627
    5. ')' → logprob: -4.674193382263184
    6. 'pos' → logprob: -4.799193382263184
    7. '[' → logprob: -4.799193382263184
    8. '_positions' → logprob: -5.049193382263184
    9. 'i' → logprob: -5.174193382263184
    10. ' for' → logprob: -5.174193382263184

Token 336: ' use' (ID: 1199)
  Prédit: '_use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_use' → logprob: -0.0010631787590682507
    2. 'use' → logprob: -7.626063346862793
    3. 'pos' → logprob: -8.751063346862793
    4. '_' → logprob: -8.751063346862793
    5. ' use' → logprob: -9.501063346862793
    6. '[i' → logprob: -10.501063346862793
    7. 'positions' → logprob: -10.501063346862793
    8. '[' → logprob: -10.626063346862793
    9. '_pos' → logprob: -10.876063346862793
    10. 'position' → logprob: -10.876063346862793

Token 337: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8105975985527039
    2. 'position' → logprob: -2.0605976581573486
    3. ':' → logprob: -2.5605976581573486
    4. 'pos' → logprob: -2.6855976581573486
    5. '=' → logprob: -2.8105976581573486
    6. '[' → logprob: -3.5605976581573486
    7. 'idx' → logprob: -3.6855976581573486
    8. 'index' → logprob: -3.8105976581573486
    9. 'for' → logprob: -3.9355976581573486
    10. '   ' → logprob: -4.3105974197387695

Token 338: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.7628374695777893
    2. 'pos' → logprob: -1.3878374099731445
    3. 'ev' → logprob: -2.7628374099731445
    4. 'max' → logprob: -3.1378374099731445
    5. 'candidate' → logprob: -3.3878374099731445
    6. 'cache' → logprob: -3.6378374099731445
    7. ' next' → logprob: -3.6378374099731445
    8. 'use' → logprob: -4.0128374099731445
    9. 'replace' → logprob: -4.0128374099731445
    10. 'idx' → logprob: -5.0128374099731445

Token 339: ' use' (ID: 1199)
  Prédit: '_use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_use' → logprob: -0.11163921654224396
    2. '_pos' → logprob: -2.4866392612457275
    3. 'pos' → logprob: -4.361639022827148
    4. 'use' → logprob: -4.986639022827148
    5. ' =' → logprob: -7.236639022827148
    6. '_position' → logprob: -7.486639022827148
    7. '=' → logprob: -7.736639022827148
    8. '_usage' → logprob: -7.986639022827148
    9. '_occ' → logprob: -8.861639022827148
    10. '_idx' → logprob: -8.861639022827148

Token 340: ' =' (ID: 314)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.6123529672622681
    2. '=' → logprob: -1.237352967262268
    3. '_pos' → logprob: -1.862352967262268
    4. '=i' → logprob: -4.9873528480529785
    5. '=-' → logprob: -6.1123528480529785
    6. 'position' → logprob: -6.7373528480529785
    7. '_idx' → logprob: -7.7373528480529785
    8. '[i' → logprob: -7.7373528480529785
    9. ' =' → logprob: -8.362353324890137
    10. '_position' → logprob: -8.612353324890137

Token 341: ' infinity' (ID: 103156)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.7876588702201843
    2. 'float' → logprob: -0.7876588702201843
    3. 'K' → logprob: -2.662658929824829
    4. '1' → logprob: -4.03765869140625
    5. '100' → logprob: -6.28765869140625
    6. ' ' → logprob: -8.53765869140625
    7. ' float' → logprob: -8.66265869140625
    8. 'int' → logprob: -8.78765869140625
    9. 'sys' → logprob: -8.91265869140625
    10. '999' → logprob: -9.53765869140625

Token 342: '
' (ID: 198)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -1.3027958869934082
    2. '       ' → logprob: -1.9277958869934082
    3. '   ' → logprob: -2.052795886993408
    4. '=float' → logprob: -2.427795886993408
    5. 'next' → logprob: -2.802795886993408
    6. '1' → logprob: -2.927795886993408
    7. 'inf' → logprob: -2.927795886993408
    8. '        
' → logprob: -3.052795886993408
    9. '
' → logprob: -3.552795886993408
    10. '        ' → logprob: -4.427795886993408

Token 343: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9139752388000488
    2. 'max' → logprob: -1.6639752388000488
    3. '
' → logprob: -2.163975238800049
    4. 'float' → logprob: -2.663975238800049
    5. 'next' → logprob: -3.038975238800049
    6. ' max' → logprob: -3.288975238800049
    7. 'inf' → logprob: -3.538975238800049
    8. ' next' → logprob: -3.788975238800049
    9. '        
' → logprob: -4.163975238800049
    10. '```' → logprob: -4.413975238800049

Token 344: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.5609989166259766
    2. 'next' → logprob: -1.4359989166259766
    3. 'inf' → logprob: -2.6859989166259766
    4. 'best' → logprob: -3.0609989166259766
    5. '       ' → logprob: -3.3109989166259766
    6. 'ev' → logprob: -4.685998916625977
    7. 'in' → logprob: -5.435998916625977
    8. 'f' → logprob: -5.435998916625977
    9. 'fur' → logprob: -5.560998916625977
    10. '           ' → logprob: -5.810998916625977

Token 345: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.010082454420626163
    2. '_pos' → logprob: -5.010082244873047
    3. '_use' → logprob: -6.010082244873047
    4. 'next' → logprob: -7.510082244873047
    5. '_future' → logprob: -9.010082244873047
    6. '_idx' → logprob: -9.260082244873047
    7. '_val' → logprob: -10.385082244873047
    8. '_dist' → logprob: -10.885082244873047
    9. 'pos' → logprob: -10.885082244873047
    10. '(next' → logprob: -11.260082244873047

Token 346: '_use' (ID: 36283)
  Prédit: '_use'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_use' → logprob: -0.00043281487887725234
    2. 'use' → logprob: -8.875432968139648
    3. '_next' → logprob: -8.875432968139648
    4. '_pos' → logprob: -9.625432968139648
    5. '_idx' → logprob: -10.000432968139648
    6. '_usage' → logprob: -10.875432968139648
    7. 'pos' → logprob: -12.500432968139648
    8. '_position' → logprob: -13.000432968139648
    9. '_i' → logprob: -13.250432968139648
    10. '_in' → logprob: -13.250432968139648

Token 347: '=-' (ID: 21714)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.24024446308612823
    2. '=-' → logprob: -2.3652443885803223
    3. '_pos' → logprob: -2.4902443885803223
    4. '=float' → logprob: -4.365244388580322
    5. '=max' → logprob: -4.740244388580322
    6. ' =' → logprob: -4.865244388580322
    7. '=_' → logprob: -6.115244388580322
    8. '_idx' → logprob: -6.115244388580322
    9. 'pos' → logprob: -6.365244388580322
    10. '=int' → logprob: -7.615244388580322

Token 348: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001172129064798355
    2. 'float' → logprob: -7.126172065734863
    3. '(' → logprob: -8.251172065734863
    4. '10' → logprob: -9.376172065734863
    5. 'K' → logprob: -11.626172065734863
    6. '(float' → logprob: -12.626172065734863
    7. '(K' → logprob: -13.001172065734863
    8. '999' → logprob: -13.626172065734863
    9. 'int' → logprob: -13.626172065734863
    10. '100' → logprob: -14.001172065734863

Token 349: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10632482171058655
    2. '<|end|>' → logprob: -3.4813249111175537
    3. '       ' → logprob: -4.231324672698975
    4. 'max' → logprob: -4.356324672698975
    5. '        
' → logprob: -4.606324672698975
    6. ' 
' → logprob: -4.731324672698975
    7. 'idx' → logprob: -4.731324672698975
    8. 'for' → logprob: -5.731324672698975
    9. ' for' → logprob: -6.356324672698975
    10. ' max' → logprob: -6.481324672698975

Token 350: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05155619606375694
    2. ' 
' → logprob: -3.55155611038208
    3. '<|end|>' → logprob: -5.30155611038208
    4. 'for' → logprob: -5.92655611038208
    5. '       ' → logprob: -5.92655611038208
    6. ' for' → logprob: -6.05155611038208
    7. '        
' → logprob: -6.05155611038208
    8. '  
' → logprob: -6.55155611038208
    9. 'max' → logprob: -7.30155611038208
    10. 'idx' → logprob: -7.42655611038208

Token 351: ' ev' (ID: 5332)
  Prédit: 'ev'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ev' (adapté à ' ev') → logprob: -0.008234764449298382
    2. 'max' → logprob: -5.633234977722168
    3. 'vict' → logprob: -5.883234977722168
    4. 'idx' → logprob: -7.258234977722168
    5. 'e' → logprob: -7.758234977722168
    6. 'candidate' → logprob: -7.883234977722168
    7. 'replace' → logprob: -9.133234977722168
    8. 'to' → logprob: -9.383234977722168
    9. 'target' → logprob: -10.133234977722168
    10. 'pos' → logprob: -10.258234977722168

Token 352: 'ict' (ID: 1360)
  Prédit: 'ict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ict' → logprob: -0.003116872161626816
    2. 'icted' → logprob: -6.128117084503174
    3. 'iction' → logprob: -7.878117084503174
    4. 'ic' → logprob: -7.878117084503174
    5. '_idx' → logprob: -9.378116607666016
    6. '=' → logprob: -10.628116607666016
    7. 'ct' → logprob: -10.878116607666016
    8. 'ictim' → logprob: -11.753116607666016
    9. 'icts' → logprob: -12.503116607666016
    10. 'it' → logprob: -12.628116607666016

Token 353: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.0001761272142175585
    2. 'e' → logprob: -9.500176429748535
    3. '=' → logprob: -10.375176429748535
    4. '_i' → logprob: -10.500176429748535
    5. '_pos' → logprob: -11.000176429748535
    6. '_candidate' → logprob: -11.625176429748535
    7. '_index' → logprob: -12.250176429748535
    8. 'idx' → logprob: -13.000176429748535
    9. 'Idx' → logprob: -13.125176429748535
    10. 'ate' → logprob: -13.125176429748535

Token 354: '=-' (ID: 21714)
  Prédit: '=-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=-' → logprob: -0.5762014389038086
    2. '=' → logprob: -0.8262014389038086
    3. ' =' → logprob: -8.451201438903809
    4. '=None' → logprob: -10.076201438903809
    5. '=

' → logprob: -12.951201438903809
    6. '=
' → logprob: -13.076201438903809
    7. '=int' → logprob: -14.451201438903809
    8. '=(-' → logprob: -14.826201438903809
    9. '=i' → logprob: -15.701201438903809
    10. '=max' → logprob: -15.826201438903809

Token 355: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.153795766294934e-06
    2. '-' → logprob: -12.812505722045898
    3. ' ' → logprob: -13.812505722045898
    4. '```' → logprob: -14.687505722045898
    5. '2' → logprob: -15.187505722045898
    6. '   ' → logprob: -15.625005722045898
    7. ' -' → logprob: -15.750005722045898
    8. '999' → logprob: -15.750005722045898
    9. '100' → logprob: -16.0625057220459
    10. '
' → logprob: -16.3125057220459

Token 356: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1701601892709732
    2. ' for' → logprob: -2.9201602935791016
    3. '       ' → logprob: -3.0451602935791016
    4. 'for' → logprob: -3.2951602935791016
    5. '   ' → logprob: -4.920160293579102
    6. '        
' → logprob: -5.545160293579102
    7. '  
' → logprob: -6.170160293579102
    8. ' 
' → logprob: -6.295160293579102
    9. '    
' → logprob: -6.795160293579102
    10. '<|end|>' → logprob: -7.545160293579102

Token 357: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5889414548873901
    2. ' for' → logprob: -1.4639414548873901
    3. 'for' → logprob: -1.7139414548873901
    4. ' 
' → logprob: -3.9639415740966797
    5. '  
' → logprob: -5.08894157409668
    6. '   ' → logprob: -5.83894157409668
    7. '	for' → logprob: -6.33894157409668
    8. '    
' → logprob: -6.71394157409668
    9. ' ' → logprob: -7.58894157409668
    10. '\n' → logprob: -8.21394157409668

Token 358: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0009551709517836571
    2. ' for' → logprob: -7.000955104827881
    3. '
' → logprob: -10.750955581665039
    4. '       ' → logprob: -11.125955581665039
    5. '   ' → logprob: -12.125955581665039
    6. '	for' → logprob: -13.625955581665039
    7. '```' → logprob: -14.500955581665039
    8. '        
' → logprob: -14.875955581665039
    9. '    
' → logprob: -17.12595558166504
    10. ' 
' → logprob: -17.25095558166504

Token 359: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.038977038115262985
    2. ' idx' → logprob: -3.2889771461486816
    3. 'i' → logprob: -7.038977146148682
    4. 'j' → logprob: -9.913976669311523
    5. ' i' → logprob: -11.913976669311523
    6. ' j' → logprob: -14.038976669311523
    7. 'box' → logprob: -14.913976669311523
    8. 'cache' → logprob: -15.288976669311523
    9. '_idx' → logprob: -15.788976669311523
    10. '	idx' → logprob: -15.913976669311523

Token 360: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03809623047709465
    2. 'in' → logprob: -3.2880961894989014
    3. ' ' → logprob: -10.28809642791748
    4. ',' → logprob: -11.91309642791748
    5. '	in' → logprob: -13.03809642791748
    6. 'range' → logprob: -13.53809642791748
    7. '```' → logprob: -13.53809642791748
    8. 'In' → logprob: -13.66309642791748
    9. '=' → logprob: -13.91309642791748
    10. ' ,' → logprob: -14.03809642791748

Token 361: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -7.505351095460355e-05
    2. ' range' → logprob: -9.500075340270996
    3. '
' → logprob: -16.50007438659668
    4. 'cache' → logprob: -17.87507438659668
    5. '   ' → logprob: -19.12507438659668
    6. '0' → logprob: -19.37507438659668
    7. '(range' → logprob: -19.75007438659668
    8. ' ' → logprob: -19.87507438659668
    9. '```' → logprob: -20.50007438659668
    10. '

' → logprob: -20.62507438659668

Token 362: '(M' (ID: 6103)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.6931643486022949
    2. '(M' → logprob: -0.6931643486022949
    3. 'len' → logprob: -11.443164825439453
    4. '   ' → logprob: -13.318164825439453
    5. ' M' → logprob: -13.318164825439453
    6. '(len' → logprob: -14.318164825439453
    7. '(' → logprob: -14.443164825439453
    8. '0' → logprob: -14.693164825439453
    9. '```' → logprob: -14.818164825439453
    10. '           ' → logprob: -15.818164825439453

Token 363: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.12759126722812653
    2. '):' → logprob: -2.127591371536255
    3. ')' → logprob: -8.502591133117676
    4. '       ' → logprob: -8.877591133117676
    5. '   ' → logprob: -9.002591133117676
    6. '):
' → logprob: -9.752591133117676
    7. ':' → logprob: -9.752591133117676
    8. ':
' → logprob: -10.627591133117676
    9. '):

' → logprob: -10.877591133117676
    10. '<|end|>' → logprob: -12.002591133117676

Token 364: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23626768589019775
    2. '   ' → logprob: -2.486267566680908
    3. ' ball' → logprob: -2.986267566680908
    4. '       ' → logprob: -3.611267566680908
    5. '    
' → logprob: -4.236267566680908
    6. '        
' → logprob: -4.736267566680908
    7. '            
' → logprob: -4.861267566680908
    8. ' 
' → logprob: -5.486267566680908
    9. '	       ' → logprob: -5.986267566680908
    10. '```' → logprob: -5.986267566680908

Token 365: ' b' (ID: 287)
  Prédit: 'ball'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ball' → logprob: -0.721481442451477
    2. 'cache' → logprob: -1.846481442451477
    3. 'current' → logprob: -2.3464813232421875
    4. 'b' (adapté à ' b') → logprob: -2.7214813232421875
    5. 'cur' → logprob: -2.7214813232421875
    6. '           ' → logprob: -2.9714813232421875
    7. 'curr' → logprob: -3.2214813232421875
    8. '               ' → logprob: -4.4714813232421875
    9. 'cached' → logprob: -4.9714813232421875
    10. ' ball' → logprob: -5.2214813232421875

Token 366: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006830694619566202
    2. ' =' → logprob: -5.13183069229126
    3. ' in' → logprob: -8.131831169128418
    4. '=c' → logprob: -9.006831169128418
    5. '           ' → logprob: -9.131831169128418
    6. 'in' → logprob: -9.256831169128418
    7. '=in' → logprob: -9.631831169128418
    8. '       ' → logprob: -9.881831169128418
    9. '=b' → logprob: -10.381831169128418
    10. 'cache' → logprob: -10.756831169128418

Token 367: 'cache' (ID: 18949)
  Prédit: 'cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cache' → logprob: -7.941850526549388e-06
    2. ' cache' → logprob: -11.750007629394531
    3. '           ' → logprob: -17.75000762939453
    4. '	cache' → logprob: -17.75000762939453
    5. '.cache' → logprob: -18.87500762939453
    6. '_cache' → logprob: -19.25000762939453
    7. '-cache' → logprob: -20.25000762939453
    8. 'c' → logprob: -20.87500762939453
    9. 'Cache' → logprob: -21.00000762939453
    10. '   ' → logprob: -21.12500762939453

Token 368: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -3.023293538717553e-05
    2. 'idx' → logprob: -10.875030517578125
    3. '[' → logprob: -12.375030517578125
    4. '```' → logprob: -12.625030517578125
    5. '
' → logprob: -13.500030517578125
    6. ' idx' → logprob: -14.750030517578125
    7. '[b' → logprob: -15.125030517578125
    8. '_idx' → logprob: -15.125030517578125
    9. '[token' → logprob: -15.250030517578125
    10. '[
' → logprob: -15.625030517578125

Token 369: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.28592684864997864
    2. ')
' → logprob: -1.5359268188476562
    3. ']' → logprob: -3.6609268188476562
    4. ')' → logprob: -5.035926818847656
    5. '])
' → logprob: -8.785926818847656
    6. ']

' → logprob: -8.785926818847656
    7. '           ' → logprob: -8.910926818847656
    8. '   ' → logprob: -8.910926818847656
    9. ' )
' → logprob: -9.035926818847656
    10. '       ' → logprob: -9.160926818847656

Token 370: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2069951593875885
    2. '
' → logprob: -2.4569952487945557
    3. '   ' → logprob: -3.2069952487945557
    4. '    
' → logprob: -4.331995010375977
    5. ' 
' → logprob: -4.706995010375977
    6. '            
' → logprob: -4.956995010375977
    7. '  
' → logprob: -5.081995010375977
    8. ' next' → logprob: -5.206995010375977
    9. '       ' → logprob: -5.581995010375977
    10. 'next' → logprob: -5.706995010375977

Token 371: ' nxt' (ID: 160200)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12942573428153992
    2. 'next' → logprob: -2.3794257640838623
    3. 'try' → logprob: -4.504425525665283
    4. ' if' → logprob: -5.504425525665283
    5. '           ' → logprob: -5.504425525665283
    6. 'n' → logprob: -6.004425525665283
    7. 'pos' → logprob: -6.004425525665283
    8. 'nu' → logprob: -6.254425525665283
    9. 'cur' → logprob: -7.504425525665283
    10. 'curr' → logprob: -7.629425525665283

Token 372: '=' (ID: 28)
  Prédit: '_use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_use' → logprob: -0.06310933828353882
    2. '_pos' → logprob: -3.1881093978881836
    3. '=_' → logprob: -4.313109397888184
    4. '_next' → logprob: -5.563109397888184
    5. '=' → logprob: -6.563109397888184
    6. '_positions' → logprob: -7.688109397888184
    7. '_' → logprob: -8.313109397888184
    8. 'use' → logprob: -9.313109397888184
    9. '_of' → logprob: -9.563109397888184
    10. 'Use' → logprob: -9.688109397888184

Token 373: 'positions' (ID: 32297)
  Prédit: 'positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.008201655931770802
    2. 'float' → logprob: -5.633201599121094
    3. '(' → logprob: -6.383201599121094
    4. 'len' → logprob: -6.883201599121094
    5. 'K' → logprob: -7.383201599121094
    6. '10' → logprob: -7.633201599121094
    7. ' positions' → logprob: -8.133201599121094
    8. 'next' → logprob: -8.133201599121094
    9. '-' → logprob: -9.633201599121094
    10. '(K' → logprob: -10.508201599121094

Token 374: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.0003364158037584275
    2. 'b' → logprob: -8.000336647033691
    3. '[' → logprob: -14.250336647033691
    4. '```' → logprob: -16.125335693359375
    5. '[v' → logprob: -17.625335693359375
    6. ' [' → logprob: -17.750335693359375
    7. '=b' → logprob: -18.000335693359375
    8. '[
' → logprob: -18.250335693359375
    9. ' b' → logprob: -18.250335693359375
    10. '	b' → logprob: -18.500335693359375

Token 375: '][' (ID: 2696)
  Prédit: '[next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[next' → logprob: -0.006188295315951109
    2. '][' → logprob: -5.13118839263916
    3. '[' → logprob: -9.00618839263916
    4. 'next' → logprob: -9.25618839263916
    5. ')[' → logprob: -11.75618839263916
    6. '
' → logprob: -11.75618839263916
    7. ',next' → logprob: -12.38118839263916
    8. '[pos' → logprob: -12.63118839263916
    9. '(next' → logprob: -12.75618839263916
    10. ' [' → logprob: -12.88118839263916

Token 376: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.0013310716021806002
    2. ' next' → logprob: -6.626330852508545
    3. '(next' → logprob: -12.876331329345703
    4. '
' → logprob: -13.626331329345703
    5. 'min' → logprob: -14.251331329345703
    6. '[next' → logprob: -14.626331329345703
    7. '	next' → logprob: -16.376331329345703
    8. '   ' → logprob: -17.251331329345703
    9. ']' → logprob: -17.626331329345703
    10. '_next' → logprob: -17.876331329345703

Token 377: '_use' (ID: 36283)
  Prédit: '_use'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_use' → logprob: -5.200166469876422e-06
    2. 'use' → logprob: -12.625004768371582
    3. '_next' → logprob: -13.750004768371582
    4. 'Use' → logprob: -14.875004768371582
    5. '_USE' → logprob: -16.3750057220459
    6. 'next' → logprob: -16.3750057220459
    7. '+' → logprob: -16.7500057220459
    8. '```' → logprob: -17.5000057220459
    9. '_idx' → logprob: -17.6250057220459
    10. '\' → logprob: -17.6250057220459

Token 378: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.001719446387141943
    2. 'idx' → logprob: -6.3767194747924805
    3. '[b' → logprob: -11.50171947479248
    4. 'b' → logprob: -12.12671947479248
    5. '[' → logprob: -14.00171947479248
    6. 'Idx' → logprob: -15.00171947479248
    7. '[idx' → logprob: -15.00171947479248
    8. ' idx' → logprob: -16.626718521118164
    9. '_IDX' → logprob: -17.501718521118164
    10. 'd' → logprob: -17.626718521118164

Token 379: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.07030318677425385
    2. 'b' → logprob: -2.695303201675415
    3. '[' → logprob: -7.945302963256836
    4. 'idx' → logprob: -13.070302963256836
    5. '```' → logprob: -13.195302963256836
    6. '][' → logprob: -13.445302963256836
    7. '[
' → logprob: -13.695302963256836
    8. '	b' → logprob: -13.695302963256836
    9. ' b' → logprob: -13.695302963256836
    10. ']' → logprob: -14.320302963256836

Token 380: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005498649552464485
    2. ']]' → logprob: -5.255498886108398
    3. 'if' → logprob: -9.755498886108398
    4. '[' → logprob: -9.755498886108398
    5. '[b' → logprob: -10.380498886108398
    6. ' if' → logprob: -10.505498886108398
    7. ']+' → logprob: -10.880498886108398
    8. ' ]' → logprob: -11.130498886108398
    9. '[idx' → logprob: -11.130498886108398
    10. ']==' → logprob: -11.880498886108398

Token 381: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6933343410491943
    2. ' if' → logprob: -0.6933343410491943
    3. '           ' → logprob: -8.943334579467773
    4. '       ' → logprob: -10.443334579467773
    5. '   ' → logprob: -11.943334579467773
    6. '          ' → logprob: -12.568334579467773
    7. '            ' → logprob: -12.568334579467773
    8. '	if' → logprob: -12.693334579467773
    9. '               ' → logprob: -12.818334579467773
    10. '        ' → logprob: -12.943334579467773

Token 382: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.04858771339058876
    2. ' next' → logprob: -3.0485877990722656
    3. '(next' → logprob: -15.548587799072266
    4. '[next' → logprob: -16.173587799072266
    5. '
' → logprob: -16.298587799072266
    6. '_next' → logprob: -17.423587799072266
    7. '	next' → logprob: -17.548587799072266
    8. 'len' → logprob: -18.173587799072266
    9. 'n' → logprob: -18.923587799072266
    10. '   ' → logprob: -19.048587799072266

Token 383: '_use' (ID: 36283)
  Prédit: '_use'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_use' → logprob: -0.0003323665587231517
    2. 'use' → logprob: -8.375332832336426
    3. '_next' → logprob: -9.625332832336426
    4. '_idx' → logprob: -11.125332832336426
    5. 'idx' → logprob: -12.500332832336426
    6. 'Use' → logprob: -12.625332832336426
    7. 'next' → logprob: -13.250332832336426
    8. '<' → logprob: -13.375332832336426
    9. '_USE' → logprob: -13.375332832336426
    10. '_in' → logprob: -14.250332832336426

Token 384: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.011626549996435642
    2. 'x' → logprob: -4.511626720428467
    3. 'idx' → logprob: -7.761626720428467
    4. 'Idx' → logprob: -10.011626243591309
    5. 'dx' → logprob: -10.261626243591309
    6. '[b' → logprob: -10.386626243591309
    7. 'd' → logprob: -11.636626243591309
    8. '[' → logprob: -12.011626243591309
    9. 'use' → logprob: -12.136626243591309
    10. 's' → logprob: -12.636626243591309

Token 385: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.0013064295053482056
    2. '[' → logprob: -6.751306533813477
    3. 'b' → logprob: -9.251306533813477
    4. '<b' → logprob: -10.376306533813477
    5. '```' → logprob: -13.751306533813477
    6. '[idx' → logprob: -13.751306533813477
    7. '[
' → logprob: -13.876306533813477
    8. ' [' → logprob: -14.126306533813477
    9. '<' → logprob: -14.626306533813477
    10. '[len' → logprob: -14.876306533813477

Token 386: ']<' (ID: 80424)
  Prédit: '<len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<len' → logprob: -0.11617888510227203
    2. ']<' → logprob: -2.8661789894104004
    3. '[b' → logprob: -3.8661789894104004
    4. '<' → logprob: -4.1161789894104
    5. '<b' → logprob: -4.2411789894104
    6. '[' → logprob: -7.9911789894104
    7. ']' → logprob: -8.241178512573242
    8. '<size' → logprob: -8.616178512573242
    9. ' <' → logprob: -8.741178512573242
    10. ')<' → logprob: -9.616178512573242

Token 387: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -4.320199877838604e-07
    2. ' len' → logprob: -14.875
    3. 'K' → logprob: -16.875
    4. '(len' → logprob: -18.25
    5. '
' → logprob: -18.5
    6. '=len' → logprob: -20.5
    7. '[len' → logprob: -20.625
    8. '<len' → logprob: -21.75
    9. '   ' → logprob: -21.875
    10. ',len' → logprob: -22.0

Token 388: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00015920029545668513
    2. 'positions' → logprob: -8.75015926361084
    3. '[' → logprob: -15.25015926361084
    4. ' (' → logprob: -15.50015926361084
    5. '(
' → logprob: -15.75015926361084
    6. ' positions' → logprob: -16.625158309936523
    7. '```' → logprob: -17.375158309936523
    8. 's' → logprob: -17.875158309936523
    9. '.positions' → logprob: -18.125158309936523
    10. 'Positions' → logprob: -18.375158309936523

Token 389: 'positions' (ID: 32297)
  Prédit: 'positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -6.392202976712724e-06
    2. ' positions' → logprob: -12.625006675720215
    3. '(' → logprob: -12.750006675720215
    4. '[' → logprob: -18.7500057220459
    5. '.positions' → logprob: -18.7500057220459
    6. ')' → logprob: -19.3750057220459
    7. '   ' → logprob: -19.7500057220459
    8. 'position' → logprob: -20.8750057220459
    9. 'Positions' → logprob: -21.2500057220459
    10. '-' → logprob: -21.3750057220459

Token 390: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.00012654215970542282
    2. 'b' → logprob: -9.000126838684082
    3. '[' → logprob: -14.000126838684082
    4. ' [' → logprob: -15.125126838684082
    5. '][' → logprob: -15.250126838684082
    6. ')' → logprob: -15.500126838684082
    7. '```' → logprob: -15.500126838684082
    8. '[
' → logprob: -15.750126838684082
    9. '(b' → logprob: -15.750126838684082
    10. '	b' → logprob: -15.750126838684082

Token 391: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.06183770298957825
    2. ')' → logprob: -3.436837673187256
    3. '[b' → logprob: -4.186837673187256
    4. ')]' → logprob: -4.436837673187256
    5. '[' → logprob: -7.436837673187256
    6. 'b' → logprob: -10.436838150024414
    7. ')])' → logprob: -10.811838150024414
    8. ']' → logprob: -11.061838150024414
    9. '])]' → logprob: -11.186838150024414
    10. ')b' → logprob: -11.311838150024414

Token 392: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.3868773579597473
    2. ' else' → logprob: -1.1368772983551025
    3. '	else' → logprob: -12.386877059936523
    4. '           ' → logprob: -14.136877059936523
    5. '
' → logprob: -14.636877059936523
    6. '   ' → logprob: -15.511877059936523
    7. '       ' → logprob: -15.511877059936523
    8. '[]' → logprob: -15.511877059936523
    9. '               ' → logprob: -16.261877059936523
    10. '```' → logprob: -16.386877059936523

Token 393: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.30390235781669617
    2. 'float' → logprob: -1.9289023876190186
    3. 'K' → logprob: -2.1789023876190186
    4. '1' → logprob: -6.1789021492004395
    5. '100' → logprob: -7.1789021492004395
    6. ' ' → logprob: -8.178902626037598
    7. 'int' → logprob: -8.303902626037598
    8. ' float' → logprob: -8.928902626037598
    9. ' K' → logprob: -10.053902626037598
    10. '999' → logprob: -10.678902626037598

Token 394: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.37359854578971863
    2. 'K' → logprob: -1.873598575592041
    3. 'float' → logprob: -1.873598575592041
    4. '1' → logprob: -5.623598575592041
    5. 'int' → logprob: -7.498598575592041
    6. '100' → logprob: -7.998598575592041
    7. ' float' → logprob: -10.373598098754883
    8. ' ' → logprob: -10.498598098754883
    9. 'sys' → logprob: -11.498598098754883
    10. ' K' → logprob: -11.623598098754883

Token 395: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.004113542847335339
    2. '9' → logprob: -5.504113674163818
    3. '7' → logprob: -10.62911319732666
    4. '000' → logprob: -12.50411319732666
    5. '6' → logprob: -12.75411319732666
    6. '10' → logprob: -12.87911319732666
    7. '8' → logprob: -13.87911319732666
    8. '100' → logprob: -15.75411319732666
    9. '```' → logprob: -16.004114151000977
    10. '*' → logprob: -16.254114151000977

Token 396: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.13914446532726288
    2. '15' → logprob: -2.6391444206237793
    3. '10' → logprob: -2.8891444206237793
    4. '18' → logprob: -6.764144420623779
    5. '12' → logprob: -6.889144420623779
    6. '11' → logprob: -7.639144420623779
    7. '14' → logprob: -10.014144897460938
    8. '16' → logprob: -10.014144897460938
    9. '7' → logprob: -10.264144897460938
    10. '13' → logprob: -10.514144897460938

Token 397: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11584855616092682
    2. '
' → logprob: -2.2408485412597656
    3. '            
' → logprob: -6.615848541259766
    4. '<|end|>' → logprob: -7.615848541259766
    5. '
' → logprob: -7.865848541259766
    6. '       ' → logprob: -9.115848541259766
    7. '               ' → logprob: -9.240848541259766
    8. '  
' → logprob: -9.365848541259766
    9. '```' → logprob: -9.490848541259766
    10. '		' → logprob: -9.740848541259766

Token 398: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02727426402270794
    2. '<|end|>' → logprob: -4.152274131774902
    3. '
' → logprob: -5.152274131774902
    4. '            
' → logprob: -6.652274131774902
    5. '  
' → logprob: -6.777274131774902
    6. '<|end|>' → logprob: -6.902274131774902
    7. ' 
' → logprob: -7.652274131774902
    8. '   ' → logprob: -7.777274131774902
    9. '       ' → logprob: -8.777274131774902
    10. ')' → logprob: -8.902274131774902

Token 399: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0731847882270813
    2. ' if' → logprob: -3.4481847286224365
    3. '   ' → logprob: -3.8231847286224365
    4. '       ' → logprob: -4.448184967041016
    5. 'if' (adapté à ' if') → logprob: -5.573184967041016
    6. ' ' → logprob: -8.323184967041016
    7. '            
' → logprob: -8.323184967041016
    8. '
' → logprob: -8.698184967041016
    9. '<|end|>' → logprob: -8.948184967041016
    10. '    ' → logprob: -8.948184967041016

Token 400: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.054912298917770386
    2. ' nxt' → logprob: -2.9299123287200928
    3. '   ' → logprob: -11.679912567138672
    4. ' n' → logprob: -12.179912567138672
    5. '	n' → logprob: -12.304912567138672
    6. '(n' → logprob: -12.679912567138672
    7. 'nx' → logprob: -13.304912567138672
    8. ' ' → logprob: -13.304912567138672
    9. '
' → logprob: -13.929912567138672
    10. 'next' → logprob: -13.929912567138672

Token 401: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.2254289984703064
    2. ' >' → logprob: -1.6004290580749512
    3. '>
' → logprob: -12.600428581237793
    4. ' ' → logprob: -13.350428581237793
    5. ' >
' → logprob: -13.350428581237793
    6. '           ' → logprob: -13.725428581237793
    7. '==' → logprob: -13.975428581237793
    8. ')>' → logprob: -14.100428581237793
    9. '   ' → logprob: -14.600428581237793
    10. '=' → logprob: -14.725428581237793

Token 402: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0001234428636962548
    2. ' max' → logprob: -9.000123023986816
    3. '
' → logprob: -17.625123977661133
    4. '           ' → logprob: -19.250123977661133
    5. '=max' → logprob: -19.250123977661133
    6. '	max' → logprob: -19.375123977661133
    7. '(max' → logprob: -20.125123977661133
    8. 'next' → logprob: -20.625123977661133
    9. '```' → logprob: -21.000123977661133
    10. '[max' → logprob: -21.375123977661133

Token 403: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -3.650518920039758e-06
    2. '_max' → logprob: -13.125003814697266
    3. 'next' → logprob: -13.750003814697266
    4. '_' → logprob: -15.000003814697266
    5. ' next' → logprob: -17.000003814697266
    6. '_NEXT' → logprob: -17.250003814697266
    7. '[next' → logprob: -17.375003814697266
    8. 'Next' → logprob: -17.875003814697266
    9. '```' → logprob: -18.000003814697266
    10. '_n' → logprob: -19.000003814697266

Token 404: '_use' (ID: 36283)
  Prédit: '_use'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_use' → logprob: -0.014181028120219707
    2. 'use' → logprob: -4.264181137084961
    3. 'Use' → logprob: -12.764181137084961
    4. '   ' → logprob: -13.014181137084961
    5. ' use' → logprob: -13.264181137084961
    6. '_USE' → logprob: -13.389181137084961
    7. '	use' → logprob: -13.514181137084961
    8. '-use' → logprob: -13.639181137084961
    9. '_usec' → logprob: -14.139181137084961
    10. '"use' → logprob: -14.639181137084961

Token 405: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5938952565193176
    2. ':
' → logprob: -1.0938951969146729
    3. '           ' → logprob: -2.593895196914673
    4. '               ' → logprob: -3.343895196914673
    5. '       ' → logprob: -7.093895435333252
    6. ' and' → logprob: -7.843895435333252
    7. '<|end|>' → logprob: -7.968895435333252
    8. '):
' → logprob: -8.218894958496094
    9. ' :
' → logprob: -8.718894958496094
    10. '            ' → logprob: -9.093894958496094

Token 406: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4742053151130676
    2. '           ' → logprob: -1.3492052555084229
    3. ' max' → logprob: -2.224205255508423
    4. 'max' → logprob: -5.474205493927002
    5. '                
' → logprob: -6.724205493927002
    6. '```' → logprob: -7.099205493927002
    7. ' ' → logprob: -7.349205493927002
    8. '[max' → logprob: -7.724205493927002
    9. '            
' → logprob: -7.974205493927002
    10. '                   ' → logprob: -8.099205017089844

Token 407: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.4461980164051056
    2. ' max' → logprob: -1.0711979866027832
    3. '               ' → logprob: -4.321197986602783
    4. 'ev' → logprob: -5.821197986602783
    5. ' ev' → logprob: -7.446197986602783
    6. '                ' → logprob: -8.446198463439941
    7. '                   ' → logprob: -8.446198463439941
    8. '           ' → logprob: -10.071198463439941
    9. '```' → logprob: -11.821198463439941
    10. '	max' → logprob: -12.446198463439941

Token 408: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -5.955703818472102e-05
    2. '_use' → logprob: -9.750059127807617
    3. 'next' → logprob: -14.500059127807617
    4. '_NEXT' → logprob: -15.375059127807617
    5. '_' → logprob: -15.625059127807617
    6. '[next' → logprob: -16.500059127807617
    7. 'use' → logprob: -17.125059127807617
    8. '```' → logprob: -17.250059127807617
    9. '_max' → logprob: -17.750059127807617
    10. ' _' → logprob: -18.000059127807617

Token 409: '_use' (ID: 36283)
  Prédit: '_use'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_use' → logprob: -0.0008060562540777028
    2. 'use' → logprob: -7.125805854797363
    3. 'Use' → logprob: -14.000805854797363
    4. 'idx' → logprob: -16.00080680847168
    5. '_USE' → logprob: -16.12580680847168
    6. 'n' → logprob: -16.50080680847168
    7. '_idx' → logprob: -16.62580680847168
    8. '   ' → logprob: -16.87580680847168
    9. '	use' → logprob: -16.87580680847168
    10. '```' → logprob: -17.00080680847168

Token 410: '=n' (ID: 47985)
  Prédit: '=n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=n' → logprob: -0.32247722148895264
    2. '=' → logprob: -1.3224772214889526
    3. ' =' → logprob: -4.697477340698242
    4. '=
' → logprob: -10.447477340698242
    5. '   ' → logprob: -11.697477340698242
    6. '=max' → logprob: -12.447477340698242
    7. ',n' → logprob: -12.572477340698242
    8. ',' → logprob: -13.322477340698242
    9. '=

' → logprob: -13.447477340698242
    10. '=v' → logprob: -13.572477340698242

Token 411: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -1.1875571544806007e-05
    2. 't' → logprob: -11.500011444091797
    3. 'ct' → logprob: -14.375011444091797
    4. 'x' → logprob: -14.500011444091797
    5. 'ext' → logprob: -15.125011444091797
    6. 'st' → logprob: -16.250011444091797
    7. '```' → logprob: -16.250011444091797
    8. '   ' → logprob: -16.875011444091797
    9. '
' → logprob: -18.125011444091797
    10. ' xt' → logprob: -18.375011444091797

Token 412: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08180078119039536
    2. '
' → logprob: -2.706800699234009
    3. '       ' → logprob: -5.206800937652588
    4. '                
' → logprob: -6.456800937652588
    5. '<|end|>' → logprob: -7.081800937652588
    6. '           ' → logprob: -7.581800937652588
    7. '                ' → logprob: -7.581800937652588
    8. '
' → logprob: -7.956800937652588
    9. ' 
' → logprob: -8.08180046081543
    10. ',' → logprob: -8.08180046081543

Token 413: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.013268934562802315
    2. '                
' → logprob: -5.263268947601318
    3. '```' → logprob: -6.013268947601318
    4. '
' → logprob: -6.513268947601318
    5. '       ' → logprob: -6.638268947601318
    6. '                ' → logprob: -7.513268947601318
    7. '[' → logprob: -7.638268947601318
    8. ' 
' → logprob: -7.638268947601318
    9. '           ' → logprob: -8.13826847076416
    10. '                   ' → logprob: -9.13826847076416

Token 414: ' ev' (ID: 5332)
  Prédit: 'ev'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ev' (adapté à ' ev') → logprob: -0.0009437421103939414
    2. 'idx' → logprob: -7.000943660736084
    3. ' ev' → logprob: -10.375944137573242
    4. '
' → logprob: -15.375944137573242
    5. '```' → logprob: -15.375944137573242
    6. '	ev' → logprob: -15.500944137573242
    7. '               ' → logprob: -15.875944137573242
    8. '                   ' → logprob: -16.375944137573242
    9. '           ' → logprob: -17.000944137573242
    10. '(ev' → logprob: -17.125944137573242

Token 415: 'ict' (ID: 1360)
  Prédit: 'ict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ict' → logprob: -1.9361264946837764e-07
    2. 'ct' → logprob: -16.0
    3. '
' → logprob: -17.375
    4. '```' → logprob: -18.625
    5. '

' → logprob: -19.375
    6. 'icted' → logprob: -19.5
    7. 'it' → logprob: -19.875
    8. 'vict' → logprob: -20.0
    9. 'ic' → logprob: -20.375
    10. '_' → logprob: -20.875

Token 416: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -2.2127087504486553e-05
    2. 'idx' → logprob: -10.750021934509277
    3. 'Idx' → logprob: -15.250021934509277
    4. 'e' → logprob: -16.125022888183594
    5. 'x' → logprob: -16.250022888183594
    6. 't' → logprob: -17.250022888183594
    7. ' idx' → logprob: -17.625022888183594
    8. '	idx' → logprob: -17.625022888183594
    9. '_IDX' → logprob: -17.750022888183594
    10. 'ex' → logprob: -17.875022888183594

Token 417: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1637164789135568e-05
    2. ' =' → logprob: -11.500011444091797
    3. 'idx' → logprob: -14.125011444091797
    4. '=index' → logprob: -15.375011444091797
    5. '=
' → logprob: -16.000011444091797
    6. '=int' → logprob: -16.375011444091797
    7. ' idx' → logprob: -16.375011444091797
    8. '[idx' → logprob: -16.500011444091797
    9. '=i' → logprob: -17.750011444091797
    10. '	idx' → logprob: -17.750011444091797

Token 418: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -1.5048530030981055e-06
    2. ' idx' → logprob: -13.500001907348633
    3. '[idx' → logprob: -18.500001907348633
    4. '	idx' → logprob: -19.250001907348633
    5. 'index' → logprob: -19.750001907348633
    6. '(idx' → logprob: -20.125001907348633
    7. '_idx' → logprob: -21.250001907348633
    8. '           ' → logprob: -21.625001907348633
    9. '```' → logprob: -21.875001907348633
    10. '                   ' → logprob: -23.125001907348633

Token 419: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1394747644662857
    2. '       ' → logprob: -2.264474868774414
    3. '        
' → logprob: -3.764474868774414
    4. ' 
' → logprob: -7.389474868774414
    5. '    
' → logprob: -7.389474868774414
    6. '  
' → logprob: -7.889474868774414
    7. '

' → logprob: -8.014474868774414
    8. '
' → logprob: -8.139474868774414
    9. '                
' → logprob: -8.264474868774414
    10. '   
' → logprob: -9.139474868774414

Token 420: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.36788254976272583
    2. '       ' → logprob: -1.492882490158081
    3. '        
' → logprob: -3.117882490158081
    4. ' 
' → logprob: -4.24288272857666
    5. 'cache' → logprob: -4.24288272857666
    6. ' cache' → logprob: -5.11788272857666
    7. '

' → logprob: -7.24288272857666
    8. '
' → logprob: -7.49288272857666
    9. '    
' → logprob: -7.61788272857666
    10. '  
' → logprob: -7.86788272857666

Token 421: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.7228013873100281
    2. 'ev' → logprob: -1.2228014469146729
    3. 'cache' → logprob: -1.8478014469146729
    4. '#' (adapté à ' #') → logprob: -3.722801446914673
    5. 'ball' → logprob: -4.097801208496094
    6. 'pos' → logprob: -4.347801208496094
    7. 'old' → logprob: -5.472801208496094
    8. '       ' → logprob: -6.097801208496094
    9. '   ' → logprob: -7.347801208496094
    10. 'del' → logprob: -8.222801208496094

Token 422: ' Ev' (ID: 16426)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.6774173378944397
    2. 'pos' → logprob: -0.8024173378944397
    3. 'ev' → logprob: -3.427417278289795
    4. '#' → logprob: -5.427417278289795
    5. 'old' → logprob: -5.802417278289795
    6. 'ball' → logprob: -6.802417278289795
    7. 'removed' → logprob: -6.802417278289795
    8. 'cache' → logprob: -7.427417278289795
    9. 'prev' → logprob: -8.427417755126953
    10. 'b' → logprob: -9.052417755126953

Token 423: 'ict' (ID: 1360)
  Prédit: 'ict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ict' → logprob: -5.319370302458992e-06
    2. 'ct' → logprob: -13.125005722045898
    3. 'ic' → logprob: -13.625005722045898
    4. '```' → logprob: -13.750005722045898
    5. '#' → logprob: -15.250005722045898
    6. 'icted' → logprob: -15.750005722045898
    7. '
' → logprob: -16.3750057220459
    8. 'icts' → logprob: -16.5000057220459
    9. 'ect' → logprob: -16.6250057220459
    10. '``' → logprob: -16.6250057220459

Token 424: ' ball' (ID: 7880)
  Prédit: 'ball'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ball' → logprob: -0.7586285471916199
    2. 'ev' → logprob: -1.5086286067962646
    3. 'b' → logprob: -1.8836286067962646
    4. '       ' → logprob: -2.3836286067962646
    5. 'old' → logprob: -3.5086286067962646
    6. '=' → logprob: -4.7586283683776855
    7. '_ball' → logprob: -5.3836283683776855
    8. '           ' → logprob: -5.5086283683776855
    9. 'cache' → logprob: -5.6336283683776855
    10. '_ev' → logprob: -5.7586283683776855

Token 425: '
' (ID: 198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2679022252559662
    2. '       ' → logprob: -2.642902135848999
    3. 'b' → logprob: -3.392902135848999
    4. 'ball' → logprob: -3.392902135848999
    5. 'ev' → logprob: -3.767902135848999
    6. '_ball' → logprob: -3.892902135848999
    7. ' =' → logprob: -4.142902374267578
    8. 'old' → logprob: -4.517902374267578
    9. '_ev' → logprob: -4.517902374267578
    10. 'cache' → logprob: -6.267902374267578

Token 426: '       ' (ID: 309)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5839117169380188
    2. 'b' → logprob: -1.708911657333374
    3. 'ev' → logprob: -2.083911657333374
    4. 'ball' → logprob: -2.833911657333374
    5. 'pos' → logprob: -3.958911657333374
    6. 'old' → logprob: -3.958911657333374
    7. '       ' → logprob: -4.208911895751953
    8. ' =' → logprob: -5.083911895751953
    9. '_ev' → logprob: -5.458911895751953
    10. '           ' → logprob: -6.208911895751953

Token 427: ' ev' (ID: 5332)
  Prédit: 'ev'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ev' (adapté à ' ev') → logprob: -0.5415196418762207
    2. 'pos' → logprob: -1.0415196418762207
    3. 'old' → logprob: -3.0415196418762207
    4. 'ans' → logprob: -4.791519641876221
    5. 'b' → logprob: -5.666519641876221
    6. 'e' → logprob: -6.041519641876221
    7. 'ball' → logprob: -7.166519641876221
    8. ' ev' → logprob: -7.291519641876221
    9. 'prev' → logprob: -7.791519641876221
    10. ' pos' → logprob: -8.166519165039062

Token 428: 'icted' (ID: 12174)
  Prédit: 'ict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ict' → logprob: -1.9361264946837764e-07
    2. 'ct' → logprob: -16.125
    3. 'ic' → logprob: -17.0
    4. '
' → logprob: -17.625
    5. '```' → logprob: -17.75
    6. '   ' → logprob: -18.75
    7. '       ' → logprob: -18.875
    8. 'icted' → logprob: -19.0
    9. 'iction' → logprob: -19.125
    10. '#' → logprob: -19.25

Token 429: '_ball' (ID: 138751)
  Prédit: '_ball'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ball' → logprob: -0.10057046264410019
    2. '=' → logprob: -2.3505704402923584
    3. 'ball' → logprob: -8.725570678710938
    4. '=_' → logprob: -9.100570678710938
    5. ' =' → logprob: -9.850570678710938
    6. 'Ball' → logprob: -11.100570678710938
    7. '_b' → logprob: -12.225570678710938
    8. '_=' → logprob: -12.350570678710938
    9. '_pos' → logprob: -12.600570678710938
    10. '```' → logprob: -12.975570678710938

Token 430: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002477796748280525
    2. ' =' → logprob: -6.002477645874023
    3. ']=' → logprob: -14.252477645874023
    4. '=
' → logprob: -15.002477645874023
    5. '=

' → logprob: -15.502477645874023
    6. ']' → logprob: -15.752477645874023
    7. '=c' → logprob: -16.127477645874023
    8. '=config' → logprob: -16.377477645874023
    9. '=cv' → logprob: -16.627477645874023
    10. '=cut' → logprob: -16.752477645874023

Token 431: 'cache' (ID: 18949)
  Prédit: 'cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cache' → logprob: -4.842555426876061e-06
    2. ' cache' → logprob: -12.250004768371582
    3. '	cache' → logprob: -19.8750057220459
    4. '   ' → logprob: -22.1250057220459
    5. '_cache' → logprob: -22.3750057220459
    6. '.cache' → logprob: -22.5000057220459
    7. '(cache' → logprob: -22.7500057220459
    8. 'Cache' → logprob: -22.8750057220459
    9. '
' → logprob: -23.8750057220459
    10. 'queue' → logprob: -24.5000057220459

Token 432: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. 'ev' → logprob: -15.25
    3. '```' → logprob: -16.0
    4. '[
' → logprob: -18.875
    5. ' [' → logprob: -19.125
    6. '
' → logprob: -19.875
    7. '	ev' → logprob: -20.5
    8. '][' → logprob: -20.5
    9. '   ' → logprob: -20.75
    10. '[idx' → logprob: -20.75

Token 433: 'ev' (ID: 6923)
  Prédit: 'ev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ev' → logprob: -7.107425062713446e-06
    2. ' ev' → logprob: -12.500006675720215
    3. '[' → logprob: -12.875006675720215
    4. '(ev' → logprob: -14.375006675720215
    5. '	ev' → logprob: -16.00000762939453
    6. '
' → logprob: -17.00000762939453
    7. '```' → logprob: -17.00000762939453
    8. 'ed' → logprob: -17.87500762939453
    9. 'idx' → logprob: -18.00000762939453
    10. '_ev' → logprob: -18.00000762939453

Token 434: 'ict' (ID: 1360)
  Prédit: 'ict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ict' → logprob: -3.173704271830502e-06
    2. 'icted' → logprob: -13.50000286102295
    3. 'ct' → logprob: -13.50000286102295
    4. '```' → logprob: -16.000003814697266
    5. '
' → logprob: -17.000003814697266
    6. 'ic' → logprob: -17.625003814697266
    7. '[' → logprob: -17.625003814697266
    8. 'it' → logprob: -17.750003814697266
    9. '>' → logprob: -17.875003814697266
    10. 'ect' → logprob: -18.000003814697266

Token 435: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.20828847587108612
    2. 'ict' → logprob: -1.7082884311676025
    3. 'ct' → logprob: -5.208288669586182
    4. 'idx' → logprob: -6.833288669586182
    5. 'ect' → logprob: -8.708288192749023
    6. 'x' → logprob: -10.458288192749023
    7. 't' → logprob: -10.833288192749023
    8. '[' → logprob: -11.083288192749023
    9. 'Idx' → logprob: -11.083288192749023
    10. 'icted' → logprob: -11.833288192749023

Token 436: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.5761882066726685
    2. ']' → logprob: -0.8261882066726685
    3. ']
' → logprob: -9.076188087463379
    4. ']

' → logprob: -9.826188087463379
    5. ' ]
' → logprob: -9.951188087463379
    6. ' ]' → logprob: -10.451188087463379
    7. ']=' → logprob: -13.451188087463379
    8. ')
' → logprob: -13.951188087463379
    9. ')' → logprob: -14.951188087463379
    10. '   ' → logprob: -15.451188087463379

Token 437: '       ' (ID: 309)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cache' → logprob: -0.21443256735801697
    2. '       ' → logprob: -1.8394325971603394
    3. ' cache' → logprob: -3.83943247795105
    4. '   ' → logprob: -5.214432716369629
    5. 'pos' → logprob: -5.839432716369629
    6. '
' → logprob: -6.464432716369629
    7. '```' → logprob: -6.714432716369629
    8. '        
' → logprob: -7.964432716369629
    9. 'ans' → logprob: -7.964432716369629
    10. ' ans' → logprob: -8.339432716369629

Token 438: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.02678624354302883
    2. 'cache' → logprob: -3.6517863273620605
    3. 'ans' → logprob: -8.276785850524902
    4. '       ' → logprob: -8.526785850524902
    5. ' pos' → logprob: -10.776785850524902
    6. '   ' → logprob: -12.526785850524902
    7. ' cache' → logprob: -13.401785850524902
    8. '```' → logprob: -13.651785850524902
    9. 'position' → logprob: -13.776785850524902
    10. '        
' → logprob: -14.026785850524902

Token 439: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -4.320199877838604e-07
    2. '_' → logprob: -16.125
    3. '_cache' → logprob: -16.25
    4. 'In' → logprob: -16.375
    5. '[' → logprob: -18.125
    6. '_of' → logprob: -18.375
    7. 'in' → logprob: -18.875
    8. '_out' → logprob: -19.0
    9. '_to' → logprob: -19.0
    10. '_for' → logprob: -19.875

Token 440: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -5.848420551046729e-05
    2. 'cache' → logprob: -9.7500581741333
    3. ' cache' → logprob: -16.875059127807617
    4. 'ev' → logprob: -17.125059127807617
    5. '	cache' → logprob: -17.375059127807617
    6. '-cache' → logprob: -17.500059127807617
    7. '_in' → logprob: -17.750059127807617
    8. '_cached' → logprob: -17.750059127807617
    9. '_' → logprob: -18.250059127807617
    10. 'Cache' → logprob: -18.375059127807617

Token 441: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '[pos' → logprob: -17.25
    3. ' [' → logprob: -17.625
    4. '```' → logprob: -17.875
    5. '[event' → logprob: -17.875
    6. 'ev' → logprob: -18.75
    7. '       ' → logprob: -19.375
    8. '
' → logprob: -19.375
    9. '

' → logprob: -19.625
    10. '[e' → logprob: -19.875

Token 442: 'ev' (ID: 6923)
  Prédit: 'ev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ev' → logprob: -0.00020473242329899222
    2. '[' → logprob: -8.500205039978027
    3. '(ev' → logprob: -14.375205039978027
    4. ' ev' → logprob: -14.625205039978027
    5. '	ev' → logprob: -15.750205039978027
    6. '```' → logprob: -17.62520408630371
    7. 'ew' → logprob: -18.75020408630371
    8. '
' → logprob: -19.00020408630371
    9. 'ed' → logprob: -19.25020408630371
    10. '_ev' → logprob: -19.25020408630371

Token 443: 'icted' (ID: 12174)
  Prédit: 'icted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icted' → logprob: -0.04468286782503128
    2. 'ct' → logprob: -3.7946829795837402
    3. 'ict' → logprob: -3.9196829795837402
    4. 'ected' → logprob: -7.66968297958374
    5. 'ect' → logprob: -7.79468297958374
    6. '_cache' → logprob: -8.294682502746582
    7. '[' → logprob: -9.169682502746582
    8. 'c' → logprob: -10.294682502746582
    9. 'ev' → logprob: -10.669682502746582
    10. 'acted' → logprob: -10.669682502746582

Token 444: '_ball' (ID: 138751)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3145473897457123
    2. 'ev' → logprob: -1.3145474195480347
    3. '_ev' → logprob: -7.564547538757324
    4. '_ball' → logprob: -8.314547538757324
    5. '       ' → logprob: -8.939547538757324
    6. 'ed' → logprob: -10.064547538757324
    7. '```' → logprob: -10.189547538757324
    8. 'e' → logprob: -10.314547538757324
    9. '	ev' → logprob: -10.689547538757324
    10. '(ev' → logprob: -10.689547538757324

Token 445: ']=-' (ID: 162819)
  Prédit: ']=-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=-' → logprob: -0.03190232068300247
    2. ']' → logprob: -4.156902313232422
    3. ']=' → logprob: -4.156902313232422
    4. '=-' → logprob: -9.906902313232422
    5. ' ]' → logprob: -10.906902313232422
    6. ']==' → logprob: -11.656902313232422
    7. '   ' → logprob: -12.906902313232422
    8. '```' → logprob: -13.906902313232422
    9. ']={' → logprob: -14.031902313232422
    10. '==-' → logprob: -14.031902313232422

Token 446: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. '-' → logprob: -15.500000953674316
    3. ' ' → logprob: -16.125
    4. '```' → logprob: -16.25
    5. '2' → logprob: -17.5
    6. ' -' → logprob: -18.1875
    7. '   ' → logprob: -18.1875
    8. '۱' → logprob: -18.4375
    9. '１' → logprob: -18.5
    10. '
' → logprob: -18.625

Token 447: '

' (ID: 279)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cache' → logprob: -0.1265854388475418
    2. '
' → logprob: -2.3765854835510254
    3. ' cache' → logprob: -4.126585483551025
    4. ' 
' → logprob: -6.001585483551025
    5. '
' → logprob: -6.126585483551025
    6. '        
' → logprob: -6.501585483551025
    7. '```' → logprob: -7.126585483551025
    8. '    
' → logprob: -7.376585483551025
    9. '[' → logprob: -7.501585483551025
    10. '       ' → logprob: -7.751585483551025

Token 448: '       ' (ID: 309)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cache' → logprob: -0.3517667055130005
    2. '       ' → logprob: -1.4767667055130005
    3. ' cache' → logprob: -3.101766586303711
    4. '```' → logprob: -4.101766586303711
    5. '   ' → logprob: -6.351766586303711
    6. '[' → logprob: -6.476766586303711
    7. '	cache' → logprob: -6.851766586303711
    8. '        
' → logprob: -7.601766586303711
    9. '``' → logprob: -7.851766586303711
    10. '
' → logprob: -7.851766586303711

Token 449: ' #' (ID: 1069)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 450: ' Put' (ID: 16924)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cache' → logprob: -0.003312819404527545
    2. 'ans' → logprob: -5.753312587738037
    3. 'pos' → logprob: -9.128313064575195
    4. '       ' → logprob: -11.253313064575195
    5. '           ' → logprob: -12.128313064575195
    6. ' cache' → logprob: -12.253313064575195
    7. 'answer' → logprob: -14.378313064575195
    8. 'w' → logprob: -14.878313064575195
    9. 'cost' → logprob: -15.003313064575195
    10. '   ' → logprob: -15.253313064575195

Token 451: ' new' (ID: 620)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cache' → logprob: -0.1487646996974945
    2. ' cache' → logprob: -2.0237646102905273
    3. 'ball' → logprob: -5.773764610290527
    4. '(cache' → logprob: -5.898764610290527
    5. ' ball' → logprob: -9.648764610290527
    6. '(' → logprob: -10.523764610290527
    7. '       ' → logprob: -10.523764610290527
    8. '(ball' → logprob: -11.023764610290527
    9. '   ' → logprob: -11.148764610290527
    10. '_cache' → logprob: -11.273764610290527

Token 452: ' ball' (ID: 7880)
  Prédit: 'ball'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ball' → logprob: -0.26548877358436584
    2. 'cache' → logprob: -2.390488862991333
    3. '_ball' → logprob: -2.390488862991333
    4. '[' → logprob: -4.140488624572754
    5. ' ball' → logprob: -4.265488624572754
    6. '_cache' → logprob: -4.640488624572754
    7. '   ' → logprob: -5.640488624572754
    8. '       ' → logprob: -6.015488624572754
    9. ' cache' → logprob: -6.640488624572754
    10. '(ball' → logprob: -6.765488624572754

Token 453: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6906255483627319
    2. 'cache' → logprob: -0.9406255483627319
    3. '=' → logprob: -2.9406256675720215
    4. '       ' → logprob: -3.1906256675720215
    5. 'in' → logprob: -4.8156256675720215
    6. 'ev' → logprob: -6.5656256675720215
    7. ' =' → logprob: -6.6906256675720215
    8. ' in' → logprob: -6.6906256675720215
    9. ' cache' → logprob: -7.1906256675720215
    10. '```' → logprob: -7.3156256675720215

Token 454: '       ' (ID: 309)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4818319082260132
    2. 'cache' → logprob: -0.9818319082260132
    3. '       ' → logprob: -5.231832027435303
    4. '=' → logprob: -6.731832027435303
    5. '```' → logprob: -7.606832027435303
    6. 'in' → logprob: -8.231831550598145
    7. 'ev' → logprob: -8.356831550598145
    8. '   ' → logprob: -9.231831550598145
    9. ' cache' → logprob: -10.356831550598145
    10. '=[' → logprob: -11.481831550598145

Token 455: ' cache' (ID: 11956)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cache' (adapté à ' cache') → logprob: -2.045823566731997e-05
    2. ' cache' → logprob: -11.125020027160645
    3. '       ' → logprob: -12.500020027160645
    4. '   ' → logprob: -13.625020027160645
    5. '```' → logprob: -14.500020027160645
    6. '	cache' → logprob: -16.50002098083496
    7. '
' → logprob: -16.75002098083496
    8. '.cache' → logprob: -17.25002098083496
    9. '``' → logprob: -18.37502098083496
    10. '        
' → logprob: -18.50002098083496

Token 456: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5048530030981055e-06
    2. '       ' → logprob: -14.250001907348633
    3. '```' → logprob: -14.625001907348633
    4. ' [' → logprob: -16.375001907348633
    5. '[pos' → logprob: -16.875001907348633
    6. '   ' → logprob: -16.875001907348633
    7. '=' → logprob: -18.125001907348633
    8. '[event' → logprob: -18.625001907348633
    9. '\[' → logprob: -18.625001907348633
    10. '=[' → logprob: -18.875001907348633

Token 457: 'ev' (ID: 6923)
  Prédit: 'ev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ev' → logprob: -0.25195708870887756
    2. '[' → logprob: -1.5019570589065552
    3. '       ' → logprob: -11.001956939697266
    4. ' ev' → logprob: -12.001956939697266
    5. '```' → logprob: -13.001956939697266
    6. '   ' → logprob: -13.876956939697266
    7. '	ev' → logprob: -14.001956939697266
    8. '(ev' → logprob: -14.501956939697266
    9. '           ' → logprob: -15.251956939697266
    10. '][' → logprob: -16.876956939697266

Token 458: 'ict' (ID: 1360)
  Prédit: 'ict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ict' → logprob: -0.0002776630863081664
    2. 'ct' → logprob: -8.250277519226074
    3. 'idx' → logprob: -11.750277519226074
    4. '_idx' → logprob: -13.250277519226074
    5. 'vict' → logprob: -13.250277519226074
    6. '```' → logprob: -13.625277519226074
    7. 'ect' → logprob: -13.750277519226074
    8. 'icted' → logprob: -14.625277519226074
    9. '[' → logprob: -14.625277519226074
    10. 'cit' → logprob: -14.625277519226074

Token 459: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.5444036722183228
    2. 'ct' → logprob: -1.1694036722183228
    3. 't' → logprob: -2.294403553009033
    4. '[' → logprob: -5.419403553009033
    5. 'ict' → logprob: -5.919403553009033
    6. 'ect' → logprob: -7.294403553009033
    7. 'idx' → logprob: -8.544404029846191
    8. 'x' → logprob: -8.794404029846191
    9. 'tx' → logprob: -9.044404029846191
    10. 'et' → logprob: -9.544404029846191

Token 460: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.0031860284507274628
    2. '=' → logprob: -6.003186225891113
    3. ']' → logprob: -7.253186225891113
    4. '']=' → logprob: -14.253186225891113
    5. '"]=' → logprob: -14.503186225891113
    6. ')=' → logprob: -15.003186225891113
    7. ']={' → logprob: -15.753186225891113
    8. ']+=' → logprob: -16.253185272216797
    9. ']=(' → logprob: -16.378185272216797
    10. '[' → logprob: -16.628185272216797

Token 461: 'ball' (ID: 5052)
  Prédit: 'ball'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ball' → logprob: -3.128163257315464e-07
    2. ' ball' → logprob: -15.5
    3. 'bal' → logprob: -18.625
    4. '   ' → logprob: -20.25
    5. '```' → logprob: -20.875
    6. '(ball' → logprob: -21.0
    7. 'b' → logprob: -21.375
    8. 'boy' → logprob: -21.75
    9. 'boat' → logprob: -22.0
    10. '`' → logprob: -22.25

Token 462: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0528588630259037
    2. 'pos' → logprob: -3.427858829498291
    3. '       ' → logprob: -4.052858829498291
    4. ' pos' → logprob: -7.677858829498291
    5. '
' → logprob: -7.802858829498291
    6. '[pos' → logprob: -8.67785930633545
    7. '   ' → logprob: -8.67785930633545
    8. '           ' → logprob: -9.05285930633545
    9. '        
' → logprob: -9.17785930633545
    10. ',pos' → logprob: -9.42785930633545

Token 463: '       ' (ID: 309)
  Prédit: ' pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.4553283751010895
    2. 'pos' → logprob: -1.205328345298767
    3. '       ' → logprob: -3.2053284645080566
    4. '```' → logprob: -4.580328464508057
    5. '[pos' → logprob: -4.830328464508057
    6. ' ans' → logprob: -6.080328464508057
    7. '
' → logprob: -6.455328464508057
    8. '           ' → logprob: -6.830328464508057
    9. '        
' → logprob: -7.580328464508057
    10. ',pos' → logprob: -7.705328464508057

Token 464: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -2.081584716506768e-05
    2. 'ans' → logprob: -11.500020980834961
    3. ' pos' → logprob: -11.625020980834961
    4. '       ' → logprob: -13.875020980834961
    5. '           ' → logprob: -14.750020980834961
    6. '   ' → logprob: -15.125020980834961
    7. 'position' → logprob: -17.25002098083496
    8. '	pos' → logprob: -17.25002098083496
    9. 'w' → logprob: -17.50002098083496
    10. '```' → logprob: -18.25002098083496

Token 465: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -1.9361264946837764e-07
    2. '_of' → logprob: -16.125
    3. 'In' → logprob: -17.125
    4. '=' → logprob: -18.25
    5. '[' → logprob: -18.5
    6. 'in' → logprob: -18.625
    7. '```' → logprob: -18.875
    8. 's' → logprob: -19.125
    9. '\' → logprob: -19.25
    10. '_cache' → logprob: -19.375

Token 466: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.00020461321400944144
    2. 'cache' → logprob: -8.500205039978027
    3. 'ache' → logprob: -14.375205039978027
    4. '-cache' → logprob: -15.250205039978027
    5. 'Cache' → logprob: -16.12520408630371
    6. '	cache' → logprob: -16.75020408630371
    7. '_CACHE' → logprob: -16.87520408630371
    8. '_in' → logprob: -18.12520408630371
    9. ' cache' → logprob: -18.37520408630371
    10. '_c' → logprob: -18.50020408630371

Token 467: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. 'ball' → logprob: -16.875
    3. '```' → logprob: -17.0
    4. ' [' → logprob: -18.5
    5. '(ball' → logprob: -18.875
    6. '=' → logprob: -20.0
    7. '[b' → logprob: -20.25
    8. '   ' → logprob: -20.625
    9. '[pos' → logprob: -20.875
    10. '\[' → logprob: -20.875

Token 468: 'ball' (ID: 5052)
  Prédit: 'ball'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ball' → logprob: -9.65101717156358e-05
    2. '[' → logprob: -9.250096321105957
    3. ' ball' → logprob: -15.250096321105957
    4. '(ball' → logprob: -16.625097274780273
    5. 'b' → logprob: -18.000097274780273
    6. '   ' → logprob: -18.375097274780273
    7. '```' → logprob: -18.375097274780273
    8. 'bal' → logprob: -19.250097274780273
    9. '.ball' → logprob: -19.625097274780273
    10. '`' → logprob: -20.750097274780273

Token 469: ']=' (ID: 9539)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005645763128995895
    2. ']=' → logprob: -5.255645751953125
    3. ')=' → logprob: -7.880645751953125
    4. '[' → logprob: -10.755645751953125
    5. ' =' → logprob: -11.755645751953125
    6. ']' → logprob: -13.630645751953125
    7. '}=' → logprob: -14.130645751953125
    8. '=

' → logprob: -14.380645751953125
    9. '=
' → logprob: -14.630645751953125
    10. '=edge' → logprob: -15.880645751953125

Token 470: 'ev' (ID: 6923)
  Prédit: 'ev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ev' → logprob: -9.13388703338569e-06
    2. ' ev' → logprob: -11.625009536743164
    3. '	ev' → logprob: -16.500009536743164
    4. '(ev' → logprob: -17.750009536743164
    5. '```' → logprob: -20.250009536743164
    6. 'e' → logprob: -20.250009536743164
    7. 'ed' → logprob: -20.500009536743164
    8. '_ev' → logprob: -21.125009536743164
    9. '   ' → logprob: -21.375009536743164
    10. '[' → logprob: -21.375009536743164

Token 471: 'ict' (ID: 1360)
  Prédit: 'ict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ict' → logprob: -4.320199877838604e-07
    2. 'icted' → logprob: -15.5
    3. 'ct' → logprob: -16.375
    4. 'ic' → logprob: -17.0
    5. 'ect' → logprob: -18.5
    6. '[' → logprob: -18.5
    7. '```' → logprob: -19.25
    8. '
' → logprob: -19.875
    9. 'ictim' → logprob: -20.25
    10. 'dict' → logprob: -20.25

Token 472: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.0003074566484428942
    2. 'ict' → logprob: -8.500307083129883
    3. 'ect' → logprob: -10.375307083129883
    4. 'ct' → logprob: -10.500307083129883
    5. 'ev' → logprob: -10.625307083129883
    6. 't' → logprob: -12.250307083129883
    7. 'idx' → logprob: -12.250307083129883
    8. '_ev' → logprob: -12.250307083129883
    9. 'et' → logprob: -12.875307083129883
    10. 'ot' → logprob: -14.625307083129883

Token 473: '
' (ID: 198)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.04247011989355087
    2. '
' → logprob: -3.6674702167510986
    3. '       ' → logprob: -4.7924699783325195
    4. ' ans' → logprob: -5.1674699783325195
    5. '   ' → logprob: -7.4174699783325195
    6. '	ans' → logprob: -7.5424699783325195
    7. '```' → logprob: -7.6674699783325195
    8. '(ans' → logprob: -8.04246997833252
    9. '``' → logprob: -10.04246997833252
    10. '
' → logprob: -10.66746997833252

Token 474: '       ' (ID: 309)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.6519125699996948
    2. ' ans' → logprob: -1.2769125699996948
    3. '```' → logprob: -2.2769126892089844
    4. '(ans' → logprob: -3.4019126892089844
    5. '
' → logprob: -3.6519126892089844
    6. '   ' → logprob: -4.026912689208984
    7. '``' → logprob: -4.776912689208984
    8. '	ans' → logprob: -5.151912689208984
    9. ' 
' → logprob: -6.401912689208984
    10. '    
' → logprob: -7.026912689208984

Token 475: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -3.531315314830863e-06
    2. ' ans' → logprob: -13.000003814697266
    3. '       ' → logprob: -14.625003814697266
    4. '	ans' → logprob: -15.000003814697266
    5. '(ans' → logprob: -15.250003814697266
    6. 'answer' → logprob: -16.000003814697266
    7. '```' → logprob: -16.875003814697266
    8. '
' → logprob: -16.875003814697266
    9. '   ' → logprob: -17.125003814697266
    10. '_ans' → logprob: -19.750003814697266

Token 476: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.00026419671485200524
    2. '+' → logprob: -8.875264167785645
    3. ']+=' → logprob: -9.500264167785645
    4. ' +=' → logprob: -10.250264167785645
    5. '```' → logprob: -11.625264167785645
    6. '+='' → logprob: -13.000264167785645
    7. '+=(' → logprob: -13.500264167785645
    8. '+="' → logprob: -13.625264167785645
    9. '   ' → logprob: -15.750264167785645
    10. '[' → logprob: -16.37526512145996

Token 477: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -5.512236498361744e-07
    2. ' w' → logprob: -14.500000953674316
    3. '	w' → logprob: -20.0
    4. '```' → logprob: -21.375
    5. '*w' → logprob: -21.5
    6. '_w' → logprob: -21.625
    7. '(w' → logprob: -22.0
    8. '   ' → logprob: -22.125
    9. '+w' → logprob: -22.25
    10. ''w' → logprob: -22.5

Token 478: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.008129963040119e-06
    2. 'ball' → logprob: -12.625003814697266
    3. '[b' → logprob: -15.375003814697266
    4. '```' → logprob: -15.625003814697266
    5. '(ball' → logprob: -16.500003814697266
    6. '[
' → logprob: -17.250003814697266
    7. ' [' → logprob: -17.625003814697266
    8. 'w' → logprob: -17.875003814697266
    9. '\[' → logprob: -17.875003814697266
    10. 'b' → logprob: -18.125003814697266

Token 479: 'ball' (ID: 5052)
  Prédit: 'ball'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ball' → logprob: -6.76628842484206e-05
    2. '[' → logprob: -9.625067710876465
    3. ' ball' → logprob: -13.500067710876465
    4. '(ball' → logprob: -16.00006675720215
    5. 'b' → logprob: -17.00006675720215
    6. '   ' → logprob: -18.00006675720215
    7. '```' → logprob: -18.00006675720215
    8. '0' → logprob: -18.62506675720215
    9. '.ball' → logprob: -18.75006675720215
    10. 'bal' → logprob: -19.37506675720215

Token 480: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017726313322782516
    2. '<|end|>' → logprob: -4.392726421356201
    3. ']' → logprob: -6.142726421356201
    4. '}' → logprob: -6.642726421356201
    5. ')
' → logprob: -7.392726421356201
    6. '```' → logprob: -7.517726421356201
    7. '+' → logprob: -8.517725944519043
    8. '<|end|>' → logprob: -8.767725944519043
    9. '
' → logprob: -9.267725944519043
    10. ')}' → logprob: -10.767725944519043

Token 481: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00032509511220268905
    2. '
' → logprob: -8.750325202941895
    3. '```' → logprob: -8.750325202941895
    4. ' print' → logprob: -12.375325202941895
    5. '<|end|>' → logprob: -13.250325202941895
    6. '#print' → logprob: -13.875325202941895
    7. '#' → logprob: -14.375325202941895
    8. '``' → logprob: -14.750325202941895
    9. '(print' → logprob: -16.375324249267578
    10. '.print' → logprob: -16.500324249267578

Token 482: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.000261216628132388
    2. '(' → logprob: -8.375261306762695
    3. 'ans' → logprob: -11.500261306762695
    4. '()' → logprob: -11.500261306762695
    5. '('' → logprob: -11.750261306762695
    6. '("' → logprob: -14.125261306762695
    7. '(answer' → logprob: -14.375261306762695
    8. '(sum' → logprob: -14.500261306762695
    9. '("("' → logprob: -15.250261306762695
    10. ' (' → logprob: -16.375261306762695

Token 483: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8670179997570813e-05
    2. '())' → logprob: -11.500019073486328
    3. '()' → logprob: -12.000019073486328
    4. ')`' → logprob: -13.500019073486328
    5. ' )' → logprob: -14.375019073486328
    6. '))' → logprob: -15.625019073486328
    7. '(' → logprob: -16.375019073486328
    8. '`)' → logprob: -16.625019073486328
    9. ')
' → logprob: -17.000019073486328
    10. '')' → logprob: -17.625019073486328


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 481
Tokens correctement prédits (1ère position, stricte): 196
Tokens correctement prédits (1ère position, avec adaptation): 221
Tokens correctement prédits (top 10): 368
Précision stricte (1ère position): 40.75%
Précision adaptée (1ère position): 45.95%
Précision (top 10): 76.51%
================================================================================
