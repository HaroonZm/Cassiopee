================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:59:13
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

for line in sys.stdin:
    s = line.strip()
    if not s:
        continue
    count_joi = 0
    count_ioi = 0
    for i in range(len(s) - 2):
        triple = s[i:i+3]
        if triple == "JOI":
            count_joi += 1
        elif triple == "IOI":
            count_ioi += 1
    print(count_joi)
    print(count_ioi)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'for' (ID: 1938)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.18268179893493652
    2. '\n' → logprob: -2.1826817989349365
    3. 'import' → logprob: -3.5576817989349365
    4. '<|end|>' → logprob: -4.932682037353516
    5. '' → logprob: -5.807682037353516
    6. 'newline' → logprob: -5.932682037353516
    7. '\' → logprob: -6.057682037353516
    8. 'print' → logprob: -6.432682037353516
    9. '[' → logprob: -6.557682037353516
    10. '<|end|>' → logprob: -6.807682037353516

Token 4: ' line' (ID: 2543)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0024264329113066196
    2. '  ' → logprob: -6.127426624298096
    3. ' i' → logprob: -8.377426147460938
    4. ' space' → logprob: -13.377426147460938
    5. '_' → logprob: -13.877426147460938
    6. ' )' → logprob: -14.127426147460938
    7. 'i' → logprob: -14.127426147460938
    8. ' ‌' → logprob: -14.127426147460938
    9. ' a' → logprob: -14.252426147460938
    10. '```' → logprob: -14.377426147460938

Token 5: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04736784100532532
    2. 'in' → logprob: -3.422367811203003
    3. '[' → logprob: -4.922368049621582
    4. ':' → logprob: -5.922368049621582
    5. ' ' → logprob: -6.922368049621582
    6. ' :' → logprob: -8.047368049621582
    7. '```' → logprob: -8.047368049621582
    8. '  ' → logprob: -8.172368049621582
    9. '.' → logprob: -8.172368049621582
    10. '[:]' → logprob: -8.422368049621582

Token 6: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.0622611939907074
    2. 'sys' → logprob: -2.8122611045837402
    3. '=sys' → logprob: -9.062261581420898
    4. ' ' → logprob: -10.062261581420898
    5. ' iter' → logprob: -10.562261581420898
    6. ' file' → logprob: -10.687261581420898
    7. '	sys' → logprob: -10.812261581420898
    8. '(sys' → logprob: -11.062261581420898
    9. ' open' → logprob: -11.812261581420898
    10. '```' → logprob: -11.937261581420898

Token 7: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.004592707380652428
    2. '.readline' → logprob: -5.5045928955078125
    3. '.stdin' → logprob: -8.129592895507812
    4. ' .' → logprob: -9.754592895507812
    5. '.argv' → logprob: -10.254592895507812
    6. '.stdout' → logprob: -10.254592895507812
    7. '.readlines' → logprob: -10.879592895507812
    8. 'import' → logprob: -11.129592895507812
    9. '.`' → logprob: -11.754592895507812
    10. ':' → logprob: -12.129592895507812

Token 8: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.636475493200123e-05
    2. ':
' → logprob: -10.250076293945312
    3. ' :' → logprob: -11.500076293945312
    4. ':**' → logprob: -11.625076293945312
    5. '[:]' → logprob: -12.000076293945312
    6. '):' → logprob: -12.375076293945312
    7. '>:' → logprob: -12.750076293945312
    8. '':' → logprob: -13.250076293945312
    9. '`:' → logprob: -14.250076293945312
    10. ',:' → logprob: -14.500076293945312

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005228889058344066
    2. '   ' → logprob: -8.62552261352539
    3. 'print' → logprob: -9.37552261352539
    4. '    
' → logprob: -9.62552261352539
    5. ' print' → logprob: -9.87552261352539
    6. '.strip' → logprob: -10.00052261352539
    7. ':' → logprob: -10.12552261352539
    8. '```' → logprob: -11.25052261352539
    9. '\t' → logprob: -11.62552261352539
    10. '.rstrip' → logprob: -12.25052261352539

Token 10: ' s' (ID: 265)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1665678769350052
    2. '   ' → logprob: -2.041567802429199
    3. ' print' → logprob: -3.916567802429199
    4. '    ' → logprob: -6.916567802429199
    5. 'pass' → logprob: -6.916567802429199
    6. ' line' → logprob: -7.041567802429199
    7. 'line' → logprob: -7.791567802429199
    8. ' pass' → logprob: -8.5415678024292
    9. ' if' → logprob: -9.9165678024292
    10. 'strip' → logprob: -10.0415678024292

Token 11: ' =' (ID: 314)
  Prédit: 'trip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trip' → logprob: -0.005630709230899811
    2. 'tr' → logprob: -5.3806304931640625
    3. '.' → logprob: -7.6306304931640625
    4. '.strip' → logprob: -9.005630493164062
    5. 't' → logprob: -9.130630493164062
    6. '.trip' → logprob: -9.505630493164062
    7. '.rstrip' → logprob: -9.505630493164062
    8. ' trip' → logprob: -10.130630493164062
    9. 'p' → logprob: -10.755630493164062
    10. '   ' → logprob: -11.255630493164062

Token 12: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.3868780732154846
    2. 'line' → logprob: -1.1368780136108398
    3. '(line' → logprob: -13.13687801361084
    4. '	line' → logprob: -13.38687801361084
    5. '=line' → logprob: -13.51187801361084
    6. '   ' → logprob: -14.26187801361084
    7. '#line' → logprob: -14.88687801361084
    8. ' ' → logprob: -15.13687801361084
    9. 'int' → logprob: -15.38687801361084
    10. 'input' → logprob: -15.51187801361084

Token 13: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.07013371586799622
    2. '.rstrip' → logprob: -2.820133686065674
    3. '.' → logprob: -5.070133686065674
    4. '.split' → logprob: -6.320133686065674
    5. 'rstrip' → logprob: -10.695134162902832
    6. '.readline' → logprob: -11.320134162902832
    7. 'strip' → logprob: -12.195134162902832
    8. '.startswith' → logprob: -12.570134162902832
    9. '.replace' → logprob: -13.445134162902832
    10. '.lower' → logprob: -13.695134162902832

Token 14: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1609523445367813
    2. '(' → logprob: -1.9109523296356201
    3. '(
' → logprob: -9.0359525680542
    4. '"' → logprob: -9.2859525680542
    5. '`()' → logprob: -9.6609525680542
    6. '()`' → logprob: -9.9109525680542
    7. '()
' → logprob: -10.0359525680542
    8. '`' → logprob: -10.0359525680542
    9. '('' → logprob: -10.1609525680542
    10. ''' → logprob: -10.4109525680542

Token 15: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7509961724281311
    2. 'if' → logprob: -1.3759961128234863
    3. '   ' → logprob: -1.6259961128234863
    4. '<|end|>' → logprob: -2.8759961128234863
    5. ':' → logprob: -4.500996112823486
    6. ' ' → logprob: -5.250996112823486
    7. '<|end|>' → logprob: -6.875996112823486
    8. '
' → logprob: -7.375996112823486
    9. '.' → logprob: -7.375996112823486
    10. ',' → logprob: -7.750996112823486

Token 16: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.053282447159290314
    2. 'print' → logprob: -3.6782824993133545
    3. '   ' → logprob: -4.303282260894775
    4. 'i' → logprob: -4.678282260894775
    5. ' if' → logprob: -5.928282260894775
    6. 'p' → logprob: -8.053282737731934
    7. ':' → logprob: -9.053282737731934
    8. '#' → logprob: -9.178282737731934
    9. 'for' → logprob: -9.553282737731934
    10. ')' → logprob: -9.678282737731934

Token 17: ' not' (ID: 625)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.3473121225833893
    2. ' not' → logprob: -1.347312092781067
    3. 's' → logprob: -3.5973122119903564
    4. ' ' → logprob: -5.597311973571777
    5. ' len' → logprob: -6.722311973571777
    6. 'not' → logprob: -6.972311973571777
    7. ''' → logprob: -9.847311973571777
    8. 'len' → logprob: -10.097311973571777
    9. ' '' → logprob: -10.222311973571777
    10. '  ' → logprob: -10.347311973571777

Token 18: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.06198785454034805
    2. 's' → logprob: -2.81198787689209
    3. ' ' → logprob: -11.06198787689209
    4. '<|end|>' → logprob: -13.18698787689209
    5. '_s' → logprob: -14.18698787689209
    6. '	s' → logprob: -15.06198787689209
    7. '(s' → logprob: -15.56198787689209
    8. '.' → logprob: -15.74948787689209
    9. 'line' → logprob: -15.87448787689209
    10. '<|end|>' → logprob: -16.124486923217773

Token 19: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00021724513499066234
    2. ' :' → logprob: -8.87521743774414
    3. ':
' → logprob: -10.50021743774414
    4. ' or' → logprob: -10.75021743774414
    5. ':return' → logprob: -11.25021743774414
    6. '.' → logprob: -12.12521743774414
    7. '):' → logprob: -12.62521743774414
    8. ' continue' → logprob: -13.62521743774414
    9. 'continue' → logprob: -13.87521743774414
    10. '   ' → logprob: -14.12521743774414

Token 20: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014557039365172386
    2. '   ' → logprob: -4.639556884765625
    3. ' continue' → logprob: -5.639556884765625
    4. 'continue' → logprob: -6.889556884765625
    5. ' break' → logprob: -9.639556884765625
    6. '    ' → logprob: -10.014556884765625
    7. '```' → logprob: -10.139556884765625
    8. '	continue' → logprob: -10.889556884765625
    9. '           ' → logprob: -11.514556884765625
    10. 'break' → logprob: -11.639556884765625

Token 21: ' continue' (ID: 4901)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.038341306149959564
    2. 'break' → logprob: -3.2883412837982178
    3. '   ' → logprob: -8.413341522216797
    4. '       ' → logprob: -10.788341522216797
    5. '	break' → logprob: -10.788341522216797
    6. ' continue' → logprob: -10.913341522216797
    7. '    ' → logprob: -11.538341522216797
    8. 'continue' (adapté à ' continue') → logprob: -12.288341522216797
    9. '_break' → logprob: -13.663341522216797
    10. ' ' → logprob: -13.788341522216797

Token 22: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019381542224436998
    2. '    
' → logprob: -6.501938343048096
    3. 'print' → logprob: -9.001937866210938
    4. '```' → logprob: -9.126937866210938
    5. '    ' → logprob: -10.376937866210938
    6. 's' → logprob: -10.501937866210938
    7. '       ' → logprob: -11.001937866210938
    8. '        
' → logprob: -11.126937866210938
    9. ':' → logprob: -11.126937866210938
    10. '
' → logprob: -11.501937866210938

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011210456723347306
    2. 'print' → logprob: -6.8761210441589355
    3. '    
' → logprob: -10.251121520996094
    4. ' print' → logprob: -10.626121520996094
    5. '```' → logprob: -11.626121520996094
    6. ' if' → logprob: -12.501121520996094
    7. 'if' → logprob: -12.751121520996094
    8. 's' → logprob: -13.126121520996094
    9. '       ' → logprob: -13.751121520996094
    10. ':' → logprob: -13.751121520996094

Token 24: ' count' (ID: 3605)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1093420535326004
    2. 'try' → logprob: -2.859342098236084
    3. 'if' → logprob: -3.609342098236084
    4. '   ' → logprob: -4.484342098236084
    5. 'words' → logprob: -5.734342098236084
    6. 'tokens' → logprob: -6.859342098236084
    7. '#' → logprob: -7.109342098236084
    8. 'result' → logprob: -7.734342098236084
    9. 'for' → logprob: -7.859342098236084
    10. 'word' → logprob: -7.984342098236084

Token 25: '_j' (ID: 12021)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.247217059135437
    2. '=' → logprob: -1.247217059135437
    3. 's' → logprob: -1.622217059135437
    4. ' =' → logprob: -1.747217059135437
    5. '[' → logprob: -3.3722171783447266
    6. ' +=' → logprob: -4.872217178344727
    7. ')' → logprob: -5.872217178344727
    8. '_' → logprob: -5.997217178344727
    9. '(s' → logprob: -6.747217178344727
    10. '   ' → logprob: -6.872217178344727

Token 26: 'oi' (ID: 3412)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5566944479942322
    2. ' =' → logprob: -1.431694507598877
    3. '=' → logprob: -2.306694507598877
    4. 'a' → logprob: -3.306694507598877
    5. 'o' → logprob: -4.431694507598877
    6. 'umps' → logprob: -4.681694507598877
    7. '_' → logprob: -5.181694507598877
    8. '['' → logprob: -5.556694507598877
    9. '[' → logprob: -6.056694507598877
    10. '_s' → logprob: -6.681694507598877

Token 27: ' =' (ID: 314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2909349203109741
    2. 'nt' → logprob: -1.5409349203109741
    3. 'nts' → logprob: -3.2909350395202637
    4. 'ns' → logprob: -6.915935039520264
    5. 'nte' → logprob: -11.915934562683105
    6. 'ners' → logprob: -12.415934562683105
    7. 'nent' → logprob: -12.790934562683105
    8. 'ning' → logprob: -12.915934562683105
    9. 'nst' → logprob: -13.040934562683105
    10. 't' → logprob: -13.040934562683105

Token 28: ' ' (ID: 220)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08413033932447433
    2. ' s' → logprob: -2.58413028717041
    3. '0' → logprob: -5.33413028717041
    4. ' ' → logprob: -8.20913028717041
    5. 'sum' → logprob: -9.95913028717041
    6. ''s' → logprob: -11.08413028717041
    7. '{s' → logprob: -11.58413028717041
    8. ' sum' → logprob: -11.58413028717041
    9. '   ' → logprob: -11.95913028717041
    10. '`s' → logprob: -11.95913028717041

Token 29: '0' (ID: 15)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0006448837229982018
    2. ' s' → logprob: -7.625644683837891
    3. '0' → logprob: -9.87564468383789
    4. ''s' → logprob: -9.87564468383789
    5. '   ' → logprob: -10.50064468383789
    6. 'len' → logprob: -12.00064468383789
    7. 'sum' → logprob: -12.37564468383789
    8. ' ' → logprob: -12.37564468383789
    9. '`s' → logprob: -13.12564468383789
    10. '"s' → logprob: -14.12564468383789

Token 30: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06918862462043762
    2. '
' → logprob: -3.9441885948181152
    3. '<|end|>' → logprob: -4.194188594818115
    4. '    
' → logprob: -4.319188594818115
    5. ' ' → logprob: -5.069188594818115
    6. 'for' → logprob: -5.569188594818115
    7. '  ' → logprob: -6.069188594818115
    8. ' for' → logprob: -6.819188594818115
    9. '   
' → logprob: -6.819188594818115
    10. ' 
' → logprob: -6.944188594818115

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009692108258605003
    2. 'for' → logprob: -5.509692192077637
    3. '<|end|>' → logprob: -6.134692192077637
    4. ' for' → logprob: -7.009692192077637
    5. ' ' → logprob: -7.134692192077637
    6. '    ' → logprob: -7.509692192077637
    7. '  ' → logprob: -8.009692192077637
    8. '    
' → logprob: -8.509692192077637
    9. '
' → logprob: -8.634692192077637
    10. '<|end|>' → logprob: -8.884692192077637

Token 32: ' count' (ID: 3605)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3081672489643097
    2. '   ' → logprob: -1.5581672191619873
    3. ' for' → logprob: -3.0581672191619873
    4. 's' → logprob: -5.433167457580566
    5. ' ' → logprob: -7.558167457580566
    6. 'if' → logprob: -7.683167457580566
    7. '    
' → logprob: -8.058167457580566
    8. 'count' (adapté à ' count') → logprob: -8.183167457580566
    9. '
' → logprob: -8.308167457580566
    10. '  ' → logprob: -8.558167457580566

Token 33: '_io' (ID: 41683)
  Prédit: '_j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_j' → logprob: -1.7027201652526855
    2. '_' → logprob: -1.9527201652526855
    3. 's' → logprob: -1.9527201652526855
    4. '_n' → logprob: -2.4527201652526855
    5. '_s' → logprob: -2.5777201652526855
    6. '_h' → logprob: -3.7027201652526855
    7. '_g' → logprob: -3.7027201652526855
    8. '_k' → logprob: -3.9527201652526855
    9. '_ng' → logprob: -4.0777201652526855
    10. '_m' → logprob: -4.0777201652526855

Token 34: 'i' (ID: 72)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.584513247013092
    2. 'n' → logprob: -0.959513247013092
    3. ' =' → logprob: -3.3345131874084473
    4. 't' → logprob: -4.209513187408447
    5. 'j' → logprob: -5.209513187408447
    6. 'ne' → logprob: -6.709513187408447
    7. 's' → logprob: -7.709513187408447
    8. '_' → logprob: -8.584513664245605
    9. 'u' → logprob: -8.709513664245605
    10. ' ' → logprob: -8.834513664245605

Token 35: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759612321853638
    2. ' =' → logprob: -0.8259612321853638
    3. ' +=' → logprob: -11.200961112976074
    4. ' ' → logprob: -12.450961112976074
    5. '+=' → logprob: -12.575961112976074
    6. '   ' → logprob: -15.825961112976074
    7. 's' → logprob: -15.950961112976074
    8. '＝' → logprob: -16.45096206665039
    9. '```' → logprob: -16.57596206665039
    10. '_' → logprob: -16.82596206665039

Token 36: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5231446027755737
    2. '0' → logprob: -0.8981446027755737
    3. '1' → logprob: -11.023144721984863
    4. '  ' → logprob: -14.085644721984863
    5. ' ' → logprob: -14.210644721984863
    6. '=' → logprob: -14.335644721984863
    7. 's' → logprob: -14.398144721984863
    8. '   ' → logprob: -14.710644721984863
    9. '2' → logprob: -15.148144721984863
    10. ' =' → logprob: -15.585644721984863

Token 37: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0012079726438969374
    2. ' ' → logprob: -6.7512078285217285
    3. '1' → logprob: -10.251208305358887
    4. '-' → logprob: -14.188708305358887
    5. '2' → logprob: -14.688708305358887
    6. '```' → logprob: -15.688708305358887
    7. '3' → logprob: -15.751208305358887
    8. 's' → logprob: -15.876208305358887
    9. '   ' → logprob: -15.876208305358887
    10. '  ' → logprob: -16.43870735168457

Token 38: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005074244923889637
    2. 'for' → logprob: -6.3800740242004395
    3. '  ' → logprob: -6.7550740242004395
    4. '    
' → logprob: -7.3800740242004395
    5. '<|end|>' → logprob: -8.005074501037598
    6. '
' → logprob: -8.130074501037598
    7. ' ' → logprob: -8.130074501037598
    8. '    ' → logprob: -8.255074501037598
    9. ' for' → logprob: -8.380074501037598
    10. '   
' → logprob: -9.755074501037598

Token 39: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05482202768325806
    2. '
' → logprob: -3.3048219680786133
    3. '<|end|>' → logprob: -4.304821968078613
    4. '    
' → logprob: -6.554821968078613
    5. '<|end|>' → logprob: -7.929821968078613
    6. 'for' → logprob: -7.929821968078613
    7. '  ' → logprob: -8.179821968078613
    8. ' for' → logprob: -8.804821968078613
    9. ' ' → logprob: -8.804821968078613
    10. '    ' → logprob: -8.929821968078613

Token 40: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4476645290851593
    2. 'for' (adapté à ' for') → logprob: -1.197664499282837
    3. ' for' → logprob: -3.072664499282837
    4. 'i' → logprob: -4.697664737701416
    5. ' i' → logprob: -6.822664737701416
    6. '
' → logprob: -6.947664737701416
    7. 'n' → logprob: -7.947664737701416
    8. '  ' → logprob: -8.197664260864258
    9. '    
' → logprob: -8.197664260864258
    10. ' ' → logprob: -8.822664260864258

Token 41: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.20145046710968018
    2. 'i' → logprob: -1.7014504671096802
    3. ' ' → logprob: -11.32645034790039
    4. ' range' → logprob: -11.95145034790039
    5. 'range' → logprob: -12.45145034790039
    6. ' index' → logprob: -13.07645034790039
    7. 'j' → logprob: -13.32645034790039
    8. ' j' → logprob: -13.32645034790039
    9. ' idx' → logprob: -13.32645034790039
    10. '	i' → logprob: -13.32645034790039

Token 42: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00997623335570097
    2. 'in' → logprob: -4.634976387023926
    3. ' ' → logprob: -8.509976387023926
    4. 'n' → logprob: -12.384976387023926
    5. 's' → logprob: -12.634976387023926
    6. '  ' → logprob: -12.759976387023926
    7. 'range' → logprob: -12.884976387023926
    8. '	in' → logprob: -13.259976387023926
    9. '+' → logprob: -14.509976387023926
    10. ' i' → logprob: -14.634976387023926

Token 43: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0001238004770129919
    2. 'range' → logprob: -9.000123977661133
    3. ' xrange' → logprob: -15.625123977661133
    4. '	range' → logprob: -16.625123977661133
    5. ' ' → logprob: -17.125123977661133
    6. '(range' → logprob: -17.750123977661133
    7. '_range' → logprob: -20.000123977661133
    8. '.range' → logprob: -20.500123977661133
    9. '```' → logprob: -21.125123977661133
    10. ' ' → logprob: -21.250123977661133

Token 44: '(len' (ID: 14990)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5759570598602295
    2. '(len' → logprob: -0.8259570598602295
    3. ' (' → logprob: -11.575957298278809
    4. ' len' → logprob: -12.075957298278809
    5. 'len' → logprob: -13.575957298278809
    6. '1' → logprob: -14.200957298278809
    7. '(s' → logprob: -15.825957298278809
    8. '(n' → logprob: -16.325956344604492
    9. '[len' → logprob: -16.575956344604492
    10. '(length' → logprob: -16.575956344604492

Token 45: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -5.955703818472102e-05
    2. 's' → logprob: -9.875059127807617
    3. '(' → logprob: -11.750059127807617
    4. ' s' → logprob: -16.375059127807617
    5. ')' → logprob: -16.625059127807617
    6. ' (' → logprob: -17.875059127807617
    7. ')s' → logprob: -19.250059127807617
    8. ' ' → logprob: -19.625059127807617
    9. '(line' → logprob: -19.875059127807617
    10. '(
' → logprob: -19.875059127807617

Token 46: ')' (ID: 8)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5481330752372742
    2. ')' → logprob: -1.048133134841919
    3. ' -' → logprob: -2.673133134841919
    4. ' ' → logprob: -7.29813289642334
    5. ' )' → logprob: -7.42313289642334
    6. ')-' → logprob: -7.67313289642334
    7. '))' → logprob: -7.67313289642334
    8. '-)' → logprob: -10.42313289642334
    9. ' ))' → logprob: -10.79813289642334
    10. '   ' → logprob: -10.92313289642334

Token 47: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.12698742747306824
    2. ' -' → logprob: -2.1269874572753906
    3. ')' → logprob: -10.12698745727539
    4. ' ' → logprob: -11.50198745727539
    5. '   ' → logprob: -12.12698745727539
    6. '1' → logprob: -14.12698745727539
    7. '):' → logprob: -14.12698745727539
    8. ' )' → logprob: -14.62698745727539
    9. ')-' → logprob: -14.75198745727539
    10. '```' → logprob: -14.87698745727539

Token 48: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.008703213185071945
    2. '1' → logprob: -4.883703231811523
    3. '3' → logprob: -7.883703231811523
    4. '4' → logprob: -7.883703231811523
    5. ' ' → logprob: -8.258703231811523
    6. '5' → logprob: -9.508703231811523
    7. '```' → logprob: -13.196203231811523
    8. '6' → logprob: -13.258703231811523
    9. '   ' → logprob: -13.821203231811523
    10. '=' → logprob: -14.446203231811523

Token 49: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03673729673027992
    2. '1' → logprob: -3.6617372035980225
    3. '3' → logprob: -4.911737442016602
    4. '4' → logprob: -5.911737442016602
    5. '5' → logprob: -8.161737442016602
    6. '6' → logprob: -11.599237442016602
    7. ' ' → logprob: -11.911737442016602
    8. '```' → logprob: -13.349237442016602
    9. '=' → logprob: -13.411737442016602
    10. '{' → logprob: -13.849237442016602

Token 50: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.025359895080327988
    2. ')' → logprob: -3.900359869003296
    3. ':' → logprob: -5.400360107421875
    4. ' ):' → logprob: -8.400360107421875
    5. '):
' → logprob: -10.150360107421875
    6. ' )' → logprob: -11.275360107421875
    7. '   ' → logprob: -11.775360107421875
    8. '+' → logprob: -12.775360107421875
    9. ' ' → logprob: -14.025360107421875
    10. ']:' → logprob: -14.400360107421875

Token 51: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1432315707206726
    2. '       ' → logprob: -2.3932316303253174
    3. '   ' → logprob: -3.7682316303253174
    4. ' :' → logprob: -4.393231391906738
    5. ' ' → logprob: -5.518231391906738
    6. '    ' → logprob: -7.393231391906738
    7. '[' → logprob: -8.018231391906738
    8. '):' → logprob: -8.268231391906738
    9. '<|end|>' → logprob: -8.268231391906738
    10. '  ' → logprob: -8.518231391906738

Token 52: ' triple' (ID: 41563)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42675676941871643
    2. '   ' → logprob: -1.426756739616394
    3. ' ' → logprob: -3.1767568588256836
    4. '    ' → logprob: -3.8017568588256836
    5. ':' → logprob: -4.051756858825684
    6. '           ' → logprob: -5.176756858825684
    7. '[' → logprob: -5.801756858825684
    8. '  ' → logprob: -5.801756858825684
    9. 'if' → logprob: -5.801756858825684
    10. '<|end|>' → logprob: -6.051756858825684

Token 53: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08900260925292969
    2. '=' → logprob: -2.4640026092529297
    3. 's' → logprob: -10.08900260925293
    4. '[' → logprob: -11.83900260925293
    5. ')' → logprob: -11.96400260925293
    6. ' ==' → logprob: -13.08900260925293
    7. ' ' → logprob: -13.46400260925293
    8. ']' → logprob: -13.71400260925293
    9. '[:]' → logprob: -14.33900260925293
    10. '```' → logprob: -14.83900260925293

Token 54: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.05488329753279686
    2. 's' → logprob: -2.9298832416534424
    3. ''s' → logprob: -14.929883003234863
    4. ' ' → logprob: -15.304883003234863
    5. '	s' → logprob: -15.804883003234863
    6. '(s' → logprob: -16.30488395690918
    7. '   ' → logprob: -16.67988395690918
    8. '`s' → logprob: -17.05488395690918
    9. ' ' → logprob: -17.05488395690918
    10. '    ' → logprob: -17.30488395690918

Token 55: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -14.500000953674316
    3. '[I' → logprob: -16.5
    4. ' [' → logprob: -16.625
    5. 'i' → logprob: -17.0
    6. '```' → logprob: -17.875
    7. '[
' → logprob: -18.875
    8. '   ' → logprob: -19.0
    9. '(i' → logprob: -20.0
    10. ' ' → logprob: -20.125

Token 56: ':i' (ID: 34041)
  Prédit: ':i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':i' → logprob: -0.0009992250707000494
    2. ':' → logprob: -7.000999450683594
    3. ' :' → logprob: -9.375999450683594
    4. ':]' → logprob: -13.750999450683594
    5. ' ' → logprob: -14.000999450683594
    6. ']' → logprob: -14.875999450683594
    7. 'i' → logprob: -16.375999450683594
    8. '   ' → logprob: -16.375999450683594
    9. '3' → logprob: -16.500999450683594
    10. ':I' → logprob: -16.500999450683594

Token 57: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00011117222311440855
    2. '3' → logprob: -9.50011157989502
    3. ' +' → logprob: -10.25011157989502
    4. ']+' → logprob: -15.62511157989502
    5. '+
' → logprob: -15.75011157989502
    6. ']' → logprob: -15.87511157989502
    7. '```' → logprob: -16.500110626220703
    8. '+]' → logprob: -16.625110626220703
    9. ' ' → logprob: -16.750110626220703
    10. '   ' → logprob: -17.250110626220703

Token 58: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '```' → logprob: -17.250001907348633
    4. '   ' → logprob: -18.250001907348633
    5. '３' → logprob: -18.500001907348633
    6. '  ' → logprob: -19.187501907348633
    7. '+' → logprob: -19.187501907348633
    8. '2' → logprob: -19.500001907348633
    9. '>' → logprob: -19.562501907348633
    10. ']' → logprob: -19.625001907348633

Token 59: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0010280465940013528
    2. ']
' → logprob: -7.001028060913086
    3. ' ]' → logprob: -10.001028060913086
    4. ']
' → logprob: -10.751028060913086
    5. ')' → logprob: -11.001028060913086
    6. ')]' → logprob: -11.251028060913086
    7. '']' → logprob: -11.501028060913086
    8. '       ' → logprob: -12.751028060913086
    9. '"]' → logprob: -12.751028060913086
    10. '   ' → logprob: -13.626028060913086

Token 60: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004563868977129459
    2. '   ' → logprob: -6.629563808441162
    3. '<|end|>' → logprob: -7.379563808441162
    4. '        
' → logprob: -7.504563808441162
    5. '[' → logprob: -7.629563808441162
    6. ' ' → logprob: -8.37956428527832
    7. '```' → logprob: -8.62956428527832
    8. ')' → logprob: -8.75456428527832
    9. '
' → logprob: -9.00456428527832
    10. ':' → logprob: -9.25456428527832

Token 61: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1976626217365265
    2. ' if' → logprob: -2.072662591934204
    3. 'if' (adapté à ' if') → logprob: -3.072662591934204
    4. ' ' → logprob: -5.822662830352783
    5. '   ' → logprob: -6.322662830352783
    6. '        
' → logprob: -7.697662830352783
    7. '
' → logprob: -7.822662830352783
    8. '        ' → logprob: -8.197662353515625
    9. ' 
' → logprob: -8.322662353515625
    10. '```' → logprob: -8.447662353515625

Token 62: ' triple' (ID: 41563)
  Prédit: ' triple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' triple' → logprob: -0.5269666314125061
    2. 'tr' → logprob: -0.9019666314125061
    3. '"' → logprob: -6.276966571807861
    4. ' '' → logprob: -7.276966571807861
    5. ''' → logprob: -7.526966571807861
    6. ' "' → logprob: -8.15196704864502
    7. '   ' → logprob: -9.27696704864502
    8. 'trip' → logprob: -9.65196704864502
    9. '`' → logprob: -10.15196704864502
    10. ' ' → logprob: -10.15196704864502

Token 63: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.14542897045612335
    2. ' ==' → logprob: -2.0204288959503174
    3. '=' → logprob: -6.1454291343688965
    4. '===' → logprob: -8.395428657531738
    5. '=='' → logprob: -8.645428657531738
    6. '=="' → logprob: -9.145428657531738
    7. '[' → logprob: -10.770428657531738
    8. ' =' → logprob: -10.895428657531738
    9. ']==' → logprob: -11.270428657531738
    10. '==
' → logprob: -11.645428657531738

Token 64: ' "' (ID: 392)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.051253631711006165
    2. '"' → logprob: -3.0512535572052
    3. ' '' → logprob: -6.676253795623779
    4. '"io' → logprob: -7.176253795623779
    5. ' "' → logprob: -7.926253795623779
    6. ''i' → logprob: -9.051253318786621
    7. ''"' → logprob: -10.551253318786621
    8. '"I' → logprob: -10.676253318786621
    9. '   ' → logprob: -10.926253318786621
    10. ''I' → logprob: -11.051253318786621

Token 65: 'JO' (ID: 39543)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.09611308574676514
    2. 'JO' → logprob: -2.7211132049560547
    3. 'joy' → logprob: -4.596113204956055
    4. '"' → logprob: -4.846113204956055
    5. 'join' → logprob: -6.096113204956055
    6. 'jo' → logprob: -6.096113204956055
    7. 'io' → logprob: -6.721113204956055
    8. 'joj' → logprob: -7.471113204956055
    9. ''' → logprob: -8.221113204956055
    10. ' joi' → logprob: -8.346113204956055

Token 66: 'I' (ID: 40)
  Prédit: 'I'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -1.8550976164988242e-05
    2. 'J' → logprob: -11.625018119812012
    3. ' I' → logprob: -13.625018119812012
    4. 'IJ' → logprob: -13.625018119812012
    5. '```' → logprob: -13.750018119812012
    6. 'IN' → logprob: -13.750018119812012
    7. 'І' → logprob: -14.562518119812012
    8. 'In' → logprob: -14.875018119812012
    9. 'i' → logprob: -14.937518119812012
    10. 'И' → logprob: -15.000018119812012

Token 67: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.04084894061088562
    2. '"' → logprob: -3.290848970413208
    3. 'J' → logprob: -6.915848731994629
    4. '"):' → logprob: -7.165848731994629
    5. '":
' → logprob: -7.665848731994629
    6. '":
' → logprob: -8.040848731994629
    7. '"):
' → logprob: -9.915848731994629
    8. '")' → logprob: -10.665848731994629
    9. '```' → logprob: -11.165848731994629
    10. ' ":' → logprob: -11.165848731994629

Token 68: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09925980120897293
    2. '           ' → logprob: -2.599259853363037
    3. '       ' → logprob: -4.224259853363037
    4. ':
' → logprob: -5.224259853363037
    5. '          ' → logprob: -10.099259376525879
    6. ' :' → logprob: -11.099259376525879
    7. '               ' → logprob: -11.099259376525879
    8. ' or' → logprob: -11.724259376525879
    9. '   ' → logprob: -11.849259376525879
    10. '):' → logprob: -11.974259376525879

Token 69: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.003211819101125002
    2. '               ' → logprob: -6.003211975097656
    3. ' count' → logprob: -7.628211975097656
    4. '           ' → logprob: -9.003211975097656
    5. '_count' → logprob: -9.503211975097656
    6. '[count' → logprob: -11.503211975097656
    7. '                   ' → logprob: -11.503211975097656
    8. '<count' → logprob: -12.128211975097656
    9. '$count' → logprob: -12.378211975097656
    10. '              ' → logprob: -12.378211975097656

Token 70: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -9.13388703338569e-06
    2. '_' → logprob: -12.000009536743164
    3. '+j' → logprob: -13.125009536743164
    4. '_i' → logprob: -14.750009536743164
    5. 'j' → logprob: -15.500009536743164
    6. '_o' → logprob: -16.375009536743164
    7. '_js' → logprob: -16.750009536743164
    8. ' _' → logprob: -17.000009536743164
    9. '+=' → logprob: -17.625009536743164
    10. '+' → logprob: -17.750009536743164

Token 71: 'oi' (ID: 3412)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.26914477348327637
    2. 'o' → logprob: -1.8941447734832764
    3. 'oi' → logprob: -2.5191447734832764
    4. '=' → logprob: -6.2691450119018555
    5. '_' → logprob: -7.0191450119018555
    6. '_i' → logprob: -7.5191450119018555
    7. '```' → logprob: -7.6441450119018555
    8. 'I' → logprob: -8.519145011901855
    9. 'oin' → logprob: -8.519145011901855
    10. '1' → logprob: -9.394145011901855

Token 72: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.31367093324661255
    2. ' +=' → logprob: -1.3136708736419678
    3. '+' → logprob: -7.813671112060547
    4. ']+=' → logprob: -13.063671112060547
    5. '=' → logprob: -13.188671112060547
    6. '+='' → logprob: -15.188671112060547
    7. ' +' → logprob: -15.563671112060547
    8. '++' → logprob: -15.563671112060547
    9. '+="' → logprob: -15.813671112060547
    10. '+=(' → logprob: -16.063671112060547

Token 73: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028048718813806772
    2. ' ' → logprob: -5.877804756164551
    3. '   ' → logprob: -18.252805709838867
    4. '１' → logprob: -18.877805709838867
    5. ' ' → logprob: -18.877805709838867
    6. '```' → logprob: -19.127805709838867
    7. '  ' → logprob: -19.877805709838867
    8. '3' → logprob: -20.502805709838867
    9. '2' → logprob: -20.627805709838867
    10. '۱' → logprob: -20.815305709838867

Token 74: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '１' → logprob: -19.000001907348633
    4. '```' → logprob: -19.312501907348633
    5. '   ' → logprob: -20.625001907348633
    6. '۱' → logprob: -20.750001907348633
    7. '2' → logprob: -21.000001907348633
    8. '3' → logprob: -21.375001907348633
    9. '10' → logprob: -21.437501907348633
    10. '  ' → logprob: -21.437501907348633

Token 75: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.054707251489162445
    2. 'elif' → logprob: -3.1797072887420654
    3. '
' → logprob: -4.804707050323486
    4. ' elif' → logprob: -6.179707050323486
    5. '   ' → logprob: -7.429707050323486
    6. '<|end|>' → logprob: -7.679707050323486
    7. '	elif' → logprob: -9.179707527160645
    8. 'else' → logprob: -10.054707527160645
    9. '```' → logprob: -10.179707527160645
    10. '    
' → logprob: -10.429707527160645

Token 76: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03732351213693619
    2. 'elif' → logprob: -3.662323474884033
    3. ' elif' → logprob: -4.537323474884033
    4. '   ' → logprob: -8.662323951721191
    5. '```' → logprob: -10.037323951721191
    6. '	elif' → logprob: -10.662323951721191
    7. '<|end|>' → logprob: -12.537323951721191
    8. ' ' → logprob: -12.912323951721191
    9. '      ' → logprob: -12.912323951721191
    10. ' ' → logprob: -13.412323951721191

Token 77: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.0567471943795681
    2. ' elif' → logprob: -3.1817471981048584
    3. '       ' → logprob: -4.306746959686279
    4. '   ' → logprob: -9.181747436523438
    5. 'if' → logprob: -10.556747436523438
    6. '	elif' → logprob: -10.931747436523438
    7. 'el' → logprob: -11.556747436523438
    8. ' if' → logprob: -11.806747436523438
    9. '    ' → logprob: -12.556747436523438
    10. ' ' → logprob: -13.181747436523438

Token 78: ' triple' (ID: 41563)
  Prédit: ' triple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' triple' → logprob: -0.005242533516138792
    2. 'tr' → logprob: -5.255242347717285
    3. ' tr' → logprob: -13.255242347717285
    4. '"' → logprob: -13.255242347717285
    5. ' trip' → logprob: -13.380242347717285
    6. 'trip' → logprob: -14.005242347717285
    7. ' ' → logprob: -14.380242347717285
    8. 'Triple' → logprob: -14.630242347717285
    9. '	tr' → logprob: -14.755242347717285
    10. ' ' → logprob: -15.005242347717285

Token 79: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.03366241231560707
    2. '==' → logprob: -3.4086623191833496
    3. '=="' → logprob: -11.783662796020508
    4. ' ' → logprob: -12.283662796020508
    5. ' =="' → logprob: -13.158662796020508
    6. '=' → logprob: -14.033662796020508
    7. ' =' → logprob: -14.783662796020508
    8. ' ' → logprob: -15.158662796020508
    9. '[' → logprob: -15.658662796020508
    10. '=='' → logprob: -15.908662796020508

Token 80: ' "' (ID: 392)
  Prédit: ' "'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.5241914987564087
    2. '"' → logprob: -0.8991914987564087
    3. '"io' → logprob: -6.899191379547119
    4. '"I' → logprob: -10.399191856384277
    5. ''' → logprob: -11.399191856384277
    6. ' IO' → logprob: -12.524191856384277
    7. ' ' → logprob: -12.899191856384277
    8. ' ' → logprob: -12.899191856384277
    9. ' '' → logprob: -13.149191856384277
    10. 'IO' → logprob: -13.524191856384277

Token 81: 'IO' (ID: 3982)
  Prédit: 'IO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IO' → logprob: -0.021914713084697723
    2. '"' → logprob: -3.8969147205352783
    3. '"io' → logprob: -7.021914482116699
    4. '"I' → logprob: -8.3969144821167
    5. ''' → logprob: -9.0219144821167
    6. 'io' → logprob: -9.6469144821167
    7. ' IO' → logprob: -10.6469144821167
    8. '_IO' → logprob: -11.0219144821167
    9. '.IO' → logprob: -11.7719144821167
    10. '(IO' → logprob: -12.2719144821167

Token 82: 'I' (ID: 40)
  Prédit: 'I'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -1.981667537620524e-06
    2. ' I' → logprob: -13.500001907348633
    3. '"I' → logprob: -16.125001907348633
    4. 'J' → logprob: -16.375001907348633
    5. '	I' → logprob: -17.312501907348633
    6. '```' → logprob: -17.312501907348633
    7. 'Ij' → logprob: -17.500001907348633
    8. 'i' → logprob: -17.812501907348633
    9. 'I'd' → logprob: -17.937501907348633
    10. 'IO' → logprob: -18.125001907348633

Token 83: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.009662589058279991
    2. '":
' → logprob: -4.884662628173828
    3. '"' → logprob: -6.884662628173828
    4. ':' → logprob: -7.009662628173828
    5. '":
' → logprob: -9.259662628173828
    6. ':
' → logprob: -11.134662628173828
    7. ' ":' → logprob: -12.634662628173828
    8. '```' → logprob: -12.634662628173828
    9. '           ' → logprob: -12.759662628173828
    10. '":

' → logprob: -13.259662628173828

Token 84: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06403804570436478
    2. ':' → logprob: -2.939038038253784
    3. 'count' → logprob: -4.939038276672363
    4. ':
' → logprob: -6.814038276672363
    5. ' count' → logprob: -7.939038276672363
    6. '          ' → logprob: -8.814038276672363
    7. '       ' → logprob: -8.814038276672363
    8. '               ' → logprob: -9.439038276672363
    9. '   ' → logprob: -10.939038276672363
    10. '         ' → logprob: -11.064038276672363

Token 85: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.055686868727207184
    2. ' count' → logprob: -2.9306869506835938
    3. '           ' → logprob: -7.305686950683594
    4. '       ' → logprob: -9.305686950683594
    5. '   ' → logprob: -11.180686950683594
    6. ' ' → logprob: -11.305686950683594
    7. '	count' → logprob: -12.305686950683594
    8. '               ' → logprob: -12.555686950683594
    9. '```' → logprob: -13.055686950683594
    10. '  ' → logprob: -14.305686950683594

Token 86: '_io' (ID: 41683)
  Prédit: '_io'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_io' → logprob: -0.000487276294734329
    2. '_i' → logprob: -7.750487327575684
    3. '_j' → logprob: -10.375487327575684
    4. '_' → logprob: -11.375487327575684
    5. '_ios' → logprob: -12.250487327575684
    6. '_o' → logprob: -12.375487327575684
    7. '+=' → logprob: -13.375487327575684
    8. 'io' → logprob: -14.125487327575684
    9. ' +=' → logprob: -14.500487327575684
    10. '_ip' → logprob: -14.625487327575684

Token 87: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.009435765445232391
    2. '1' → logprob: -5.634435653686523
    3. ' +=' → logprob: -5.634435653686523
    4. '+=' → logprob: -7.009435653686523
    5. 'I' → logprob: -7.634435653686523
    6. '=' → logprob: -7.759435653686523
    7. ' ' → logprob: -8.509435653686523
    8. '+' → logprob: -9.509435653686523
    9. '   ' → logprob: -9.884435653686523
    10. '_i' → logprob: -11.009435653686523

Token 88: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.4741457402706146
    2. '+=' → logprob: -0.974145770072937
    3. '+' → logprob: -9.724145889282227
    4. ' +' → logprob: -12.724145889282227
    5. ']+=' → logprob: -13.224145889282227
    6. '    ' → logprob: -13.724145889282227
    7. ' ' → logprob: -14.224145889282227
    8. '   ' → logprob: -14.349145889282227
    9. '=' → logprob: -14.599145889282227
    10. '++' → logprob: -15.349145889282227

Token 89: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.31326326727867126
    2. ' ' → logprob: -1.3132632970809937
    3. ' ' → logprob: -14.063262939453125
    4. '<|end|>' → logprob: -14.438262939453125
    5. '```' → logprob: -16.938262939453125
    6. 's' → logprob: -17.500762939453125
    7. '１' → logprob: -17.625762939453125
    8. '	' → logprob: -17.750762939453125
    9. '0' → logprob: -17.813262939453125
    10. '<|end|>' → logprob: -18.125762939453125

Token 90: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009122979827225208
    2. ' ' → logprob: -7.000912189483643
    3. '<|end|>' → logprob: -14.2509126663208
    4. '```' → logprob: -17.250911712646484
    5. '１' → logprob: -18.438411712646484
    6. '<|end|>' → logprob: -18.500911712646484
    7. '۱' → logprob: -18.688411712646484
    8. '  ' → logprob: -19.250911712646484
    9. '   ' → logprob: -19.250911712646484
    10. '`' → logprob: -19.375911712646484

Token 91: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.579764187335968
    2. '
' → logprob: -0.829764187335968
    3. '   ' → logprob: -6.829764366149902
    4. '    
' → logprob: -6.954764366149902
    5. '\n' → logprob: -7.579764366149902
    6. '  
' → logprob: -7.829764366149902
    7. '```' → logprob: -8.079764366149902
    8. '
' → logprob: -8.329764366149902
    9. '

' → logprob: -9.079764366149902
    10. '' → logprob: -10.079764366149902

Token 92: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008269279263913631
    2. '
' → logprob: -5.008269309997559
    3. '   ' → logprob: -6.633269309997559
    4. '```' → logprob: -9.133269309997559
    5. '    
' → logprob: -9.883269309997559
    6. ' print' → logprob: -10.133269309997559
    7. '  
' → logprob: -10.883269309997559
    8. 'for' → logprob: -12.383269309997559
    9. '

' → logprob: -12.883269309997559
    10. '``' → logprob: -13.008269309997559

Token 93: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.953082341467962e-05
    2. '
' → logprob: -10.375039100646973
    3. '```' → logprob: -12.000039100646973
    4. ' print' → logprob: -13.875039100646973
    5. '    
' → logprob: -14.625039100646973
    6. '

' → logprob: -15.125039100646973
    7. '   ' → logprob: -15.750039100646973
    8. '  
' → logprob: -16.25004005432129
    9. '``' → logprob: -16.25004005432129
    10. '
' → logprob: -17.87504005432129

Token 94: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.0006951583200134337
    2. '(' → logprob: -7.50069522857666
    3. '(f' → logprob: -8.87569522857666
    4. 'count' → logprob: -14.00069522857666
    5. '((' → logprob: -14.12569522857666
    6. '()' → logprob: -15.75069522857666
    7. '(c' → logprob: -16.000694274902344
    8. '(s' → logprob: -16.000694274902344
    9. '("("' → logprob: -16.500694274902344
    10. '(max' → logprob: -16.875694274902344

Token 95: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -8.08944896562025e-05
    2. '_' → logprob: -10.500081062316895
    3. ')_' → logprob: -10.875081062316895
    4. '_io' → logprob: -11.000081062316895
    5. ')' → logprob: -11.250081062316895
    6. '_)' → logprob: -12.500081062316895
    7. '_i' → logprob: -14.500081062316895
    8. '_js' → logprob: -16.500080108642578
    9. '_,' → logprob: -16.875080108642578
    10. '_o' → logprob: -17.000080108642578

Token 96: 'oi' (ID: 3412)
  Prédit: 'oi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oi' → logprob: -0.038073740899562836
    2. 'o' → logprob: -3.288073778152466
    3. 'i' → logprob: -10.663073539733887
    4. ' oi' → logprob: -12.538073539733887
    5. 'OI' → logprob: -13.538073539733887
    6. 'oy' → logprob: -13.538073539733887
    7. '```' → logprob: -14.538073539733887
    8. 'ói' → logprob: -14.913073539733887
    9. ' o' → logprob: -15.163073539733887
    10. 'oin' → logprob: -15.288073539733887

Token 97: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12887927889823914
    2. ')' → logprob: -2.1288793087005615
    3. ',count' → logprob: -6.378879070281982
    4. ' ,' → logprob: -8.75387954711914
    5. '   ' → logprob: -10.25387954711914
    6. ',)' → logprob: -10.62887954711914
    7. ' )' → logprob: -11.50387954711914
    8. ',
' → logprob: -11.62887954711914
    9. ')
' → logprob: -12.00387954711914
    10. ',end' → logprob: -13.00387954711914

Token 98: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011715330183506012
    2. 'print' → logprob: -6.751171588897705
    3. ' print' → logprob: -14.126171112060547
    4. '```' → logprob: -14.376171112060547
    5. '    
' → logprob: -18.501171112060547
    6. '   ' → logprob: -18.626171112060547
    7. '	print' → logprob: -18.876171112060547
    8. '       ' → logprob: -18.876171112060547
    9. '``' → logprob: -19.376171112060547
    10. '
' → logprob: -19.876171112060547

Token 99: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.048587825149297714
    2. 'print' (adapté à ' print') → logprob: -3.0485877990722656
    3. ' print' → logprob: -15.048587799072266
    4. '```' → logprob: -15.673587799072266
    5. '	print' → logprob: -18.423587799072266
    6. '       ' → logprob: -20.298587799072266
    7. '   ' → logprob: -20.798587799072266
    8. '``' → logprob: -20.798587799072266
    9. '#print' → logprob: -20.923587799072266
    10. 'println' → logprob: -21.048587799072266

Token 100: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.2014276683330536
    2. '(' → logprob: -1.701427698135376
    3. '()' → logprob: -11.826427459716797
    4. 'count' → logprob: -12.326427459716797
    5. '('' → logprob: -14.201427459716797
    6. '((' → logprob: -14.451427459716797
    7. '(end' → logprob: -15.576427459716797
    8. '_' → logprob: -15.826427459716797
    9. '(max' → logprob: -15.826427459716797
    10. '_count' → logprob: -15.826427459716797

Token 101: '_io' (ID: 41683)
  Prédit: '_io'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_io' → logprob: -3.128163257315464e-07
    2. '_ios' → logprob: -16.375
    3. '_j' → logprob: -16.5
    4. 'io' → logprob: -17.125
    5. '_IO' → logprob: -19.25
    6. '_ioctl' → logprob: -19.625
    7. '"io' → logprob: -20.0
    8. '	io' → logprob: -21.0
    9. '_i' → logprob: -21.0
    10. '_ip' → logprob: -21.375

Token 102: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -6.988221684878226e-06
    2. '1' → logprob: -12.375006675720215
    3. ')' → logprob: -14.000006675720215
    4. '_i' → logprob: -14.125006675720215
    5. ' i' → logprob: -14.750006675720215
    6. ')i' → logprob: -15.250006675720215
    7. ''i' → logprob: -15.875006675720215
    8. ' ' → logprob: -16.00000762939453
    9. 'I' → logprob: -16.00000762939453
    10. '```' → logprob: -16.37500762939453

Token 103: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ')
' → logprob: -14.875
    3. ' )' → logprob: -16.75
    4. '))' → logprob: -18.75
    5. ')`' → logprob: -18.875
    6. '```' → logprob: -19.875
    7. '）' → logprob: -20.0
    8. '`)' → logprob: -20.25
    9. ')}' → logprob: -20.25
    10. '')' → logprob: -20.375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 101
Tokens correctement prédits (1ère position, stricte): 47
Tokens correctement prédits (1ère position, avec adaptation): 52
Tokens correctement prédits (top 10): 90
Précision stricte (1ère position): 46.53%
Précision adaptée (1ère position): 51.49%
Précision (top 10): 89.11%
================================================================================
