================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:26:33
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import heapq

def parse_intersection(s):
    h,v = s.split('-')
    return (h,v)

def next_direction(dir):
    # directions with dx,dy and their opposite
    # 'E','W','N','S'
    # U-turn forbidden: cannot go back to dir opposite to coming
    return ['N','S','E','W']

def dir_vec():
    return {'E':(1,0), 'W':(-1,0), 'N':(0,-1), 'S':(0,1)}

def opposite(d):
    opp = {'E':'W', 'W':'E', 'N':'S', 'S':'N'}
    return opp[d]

def coord_index(h, v, hlist, vlist):
    x = hlist.index(h)
    y = vlist.index(v)
    return (x,y)

def inside(x,y,M,N):
    return 0<=x<M and 0<=y<N

def signal_state_at(signal_k, t):
    # signal changes every k minutes: starting with NS green (i.e. EW red) at t=0
    # we return True if EW green, False if EW red
    # so ew green duration k, then ew red k, repeatedly
    cycle = 2*signal_k
    t = t % cycle
    if t < signal_k:
        # NS green; EW red
        return False
    else:
        # EW green
        return True

def signal_allows_entry(intersection, dir_arrive, t, signals):
    # If intersection has no signal, entry allowed.
    # Else:
    # At time t of arrival, if signal allows going on dir_arrive
    # Truck comes from opposite direction of dir_arrive, so is arriving on the edge in that direction.
    # At signals, when the light is green for NS => can enter intersection moving north or south
    # when green for EW => can enter intersection moving east or west
    # Truck can move in 4 directions, but arrive from direction opposite to moving direction.
    # Here, dir_arrive is direction the truck moves from intersection to next.
    # But we need to check light state to enter the intersection from previous road.
    # The problem states "トラックは交差点に到達した時刻に、信号が赤の場合には進入できません"
    # so the arrival point intersection's signal decides.
    # Let's deduce:
    # The light cycle is:
    # NS green = north or south allowed to move through intersection (i.e. entering intersection on N or S)
    # EW green = east or west allowed
    # The arrival to intersection comes from previous edge, the truck then leaves intersection on dir_arrive.
    # But the rule is the truck cannot enter intersection if signal is red for that direction at the arrival time.
    # Since initial direction is east, the truck heading east moves from west intersection to east intersection.
    # So the direction on edge is the direction the truck moves from current intersection.
    # But when the truck arrives at next intersection, it 'arrives' from opposite direction to dir_arrive.
    # So the color at the next intersection at time t must allow the truck to enter from the edge dir opposite to dir_arrive.
    # The problem says "交差点のいくつかには東西 - 南北の方向に信号機が設置され"，"東西が青ならば南北が赤で"
    # Let's thus consider the direction from which the truck arrives at intersection: opp_dir = opposite of dir_arrive
    # If opp_dir in E or W, then the signal at intersection must be EW green.
    # If opp_dir in N or S, then signal at intersection must be NS green.
    # So if signal is green for that direction at arrival time, can enter, else must wait.
    if intersection not in signals:
        return True

    k = signals[intersection]
    cycle = 2*k
    t_mod = t % cycle
    opp_dir = opposite(dir_arrive)
    # NS green first k minutes, then EW green k minutes
    if opp_dir in ('N','S'):
        # NS green first k minutes
        if t_mod < k:
            return True
        else:
            return False
    else:
        # EW green second k minutes
        if t_mod >= k:
            return True
        else:
            return False

def wait_time_to_enter_signal(intersection, dir_arrive, current_time, signals):
    if intersection not in signals:
        return 0
    k = signals[intersection]
    cycle = 2*k
    t_mod = current_time % cycle
    opp_dir = opposite(dir_arrive)
    if opp_dir in ('N','S'):
        if t_mod < k:
            # NS green, can enter
            return 0
        else:
            # wait until next NS green start
            return (cycle - t_mod)
    else:
        if t_mod >= k:
            # EW green ok
            return 0
        else:
            return (k - t_mod)

def build_graph(M,N,D,signals,road_invalid,road_jam, jam_time, hlist, vlist):
    # intersections are grid points (x in 0..M-1, y in 0..N-1)
    # edges between adjacent intersections horizontally and vertically if no road_invalid
    # Create adjacency list:
    # graph[node] = list of (neighbor, travel_time)
    graph = {}
    for x in range(M):
        for y in range(N):
            node = (x,y)
            neighbors = []
            # four directions
            for dx,dy in [(1,0),(-1,0),(0,1),(0,-1)]:
                nx, ny = x+dx, y+dy
                if 0 <= nx < M and 0 <= ny < N:
                    # map back to intersection string to check road_invalid and road_jam
                    from_inter = (hlist[x], vlist[y])
                    to_inter = (hlist[nx], vlist[ny])
                    e1 = from_inter
                    e2 = to_inter
                    # roads are two-way; check if this edge is invalid
                    key = (e1,e2)
                    key_rev = (e2,e1)
                    if key in road_invalid or key_rev in road_invalid:
                        continue
                    timecost = D
                    if key in road_jam:
                        timecost += jam_time[key]
                    elif key_rev in road_jam:
                        timecost += jam_time[key_rev]
                    neighbors.append(((nx,ny), timecost))
            graph[node] = neighbors
    return graph


def solve():
    input = sys.stdin.readline
    while True:
        line = input()
        if not line:
            break
        line=line.strip()
        if line == '':
            continue
        M,N = map(int,line.split())
        if M==0 and N==0:
            break
        D = int(input())
        ns = int(input())
        signals = {}
        for _ in range(ns):
            s,k = input().split()
            k=int(k)
            inter = parse_intersection(s)
            signals[inter] = k
        nc = int(input())
        road_invalid = set()
        for _ in range(nc):
            s1,s2 = input().split()
            i1 = parse_intersection(s1)
            i2 = parse_intersection(s2)
            road_invalid.add( (i1,i2) )
            road_invalid.add( (i2,i1) )
        nj = int(input())
        road_jam = set()
        jam_time = {}
        for _ in range(nj):
            s1,s2,dj = input().split()
            dj = int(dj)
            i1 = parse_intersection(s1)
            i2 = parse_intersection(s2)
            road_jam.add( (i1,i2) )
            road_jam.add( (i2,i1) )
            jam_time[(i1,i2)] = dj
            jam_time[(i2,i1)] = dj
        s,d = input().split()
        start = parse_intersection(s)
        goal = parse_intersection(d)

        # create hlist and vlist from problem:
        # h: 'a' to ...
        # v: '1' to ...
        hset = set()
        vset = set()
        # collect all intersections including signals, roads
        hset.add(start[0])
        hset.add(goal[0])
        vset.add(start[1])
        vset.add(goal[1])
        for k in signals.keys():
            hset.add(k[0])
            vset.add(k[1])
        for e in road_invalid:
            hset.add(e[0][0])
            vset.add(e[0][1])
            hset.add(e[1][0])
            vset.add(e[1][1])
        for e in road_jam:
            hset.add(e[0][0])
            vset.add(e[0][1])
            hset.add(e[1][0])
            vset.add(e[1][1])
        # make sure to add all intersections in grid:
        # h: a,b,... length M
        # v: 1,2,... length N
        hlist = [ chr(ord('a')+i) for i in range(M) ]
        vlist = [ str(i+1) for i in range(N) ]

        # Build graph adjacency
        graph = build_graph(M,N,D,signals,road_invalid,road_jam,jam_time,hlist,vlist)

        # initial conditions
        # truck starts facing east at start intersection
        # states: (cost, x, y, dir)
        # dir in 'E','W','N','S'
        # initial dir = 'E'

        # Use Dijkstra on state space: node=(x,y), dir
        # store best times:
        INF = 10**9
        dist = {}
        hq = []
        for x in range(M):
            for y in range(N):
                for d in ['E','W','N','S']:
                    dist[(x,y,d)] = INF
        sx,sy = coord_index(start[0], start[1], hlist,vlist)
        gx,gy = coord_index(goal[0], goal[1], hlist,vlist)
        start_dir = 'E'
        dist[(sx,sy,start_dir)] = 0
        heapq.heappush(hq,(0,sx,sy,start_dir))

        while hq:
            t,x,y,d = heapq.heappop(hq)
            if dist[(x,y,d)] < t:
                continue
            if (x,y) == (gx,gy):
                # found goal
                print(t)
                break
            node = (x,y)

            for (nx,ny), tt in graph[node]:
                # determine direction from (x,y) to (nx,ny)
                dx = nx - x
                dy = ny - y
                if dx==1 and dy==0:
                    nd = 'E'
                elif dx==-1 and dy==0:
                    nd = 'W'
                elif dx==0 and dy==1:
                    nd = 'S'
                elif dx==0 and dy==-1:
                    nd = 'N'
                else:
                    continue
                # can't U-turn
                if nd == opposite(d):
                    continue
                # at node (x,y), wait if needed to enter next intersection of (nx,ny)
                # arrival time at next intersection = t + tt
                # check signal at next intersection if can enter immediately or wait there?
                # problem states: "交差点に到達した時刻に、信号が赤の場合には進入できません"
                # so arrival time must be when signal allows entering (i.e. direction opposite to nd allowed at arrival)
                arrival_time = t + tt
                wait = wait_time_to_enter_signal( (hlist[nx], vlist[ny]), nd, arrival_time, signals)
                arrival_time += wait

                if dist[(nx,ny,nd)] > arrival_time:
                    dist[(nx,ny,nd)] = arrival_time
                    heapq.heappush(hq,(arrival_time,nx,ny,nd))
        else:
            # no path found: problem states always within 100 min possible
            print(-1)

if __name__=="__main__":
    solve()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.026953943073749542
    2. '\n' → logprob: -3.901953935623169
    3. '<|end|>' → logprob: -6.651954174041748
    4. 'import' → logprob: -7.151954174041748
    5. 'newline' → logprob: -7.151954174041748
    6. '\' → logprob: -7.151954174041748
    7. '```' → logprob: -7.526954174041748
    8. '' → logprob: -7.901954174041748
    9. '<|end|>' → logprob: -7.901954174041748
    10. 'print' → logprob: -8.27695369720459

Token 4: ' heap' (ID: 37237)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00020771251001860946
    2. 'os' → logprob: -8.500207901000977
    3. ' math' → logprob: -13.375207901000977
    4. ' re' → logprob: -13.750207901000977
    5. '"os' → logprob: -14.250207901000977
    6. ' json' → logprob: -14.750207901000977
    7. '_os' → logprob: -16.375207901000977
    8. ' ' → logprob: -16.500207901000977
    9. ' io' → logprob: -16.625207901000977
    10. '	os' → logprob: -16.875207901000977

Token 5: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -3.666993507067673e-05
    2. '.' → logprob: -10.375036239624023
    3. '#' → logprob: -13.625036239624023
    4. '_' → logprob: -14.375036239624023
    5. 'ify' → logprob: -14.750036239624023
    6. ')' → logprob: -15.250036239624023
    7. 's' → logprob: -15.250036239624023
    8. ',' → logprob: -15.250036239624023
    9. 'u' → logprob: -15.375036239624023
    10. '

' → logprob: -15.375036239624023

Token 6: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8491789102554321
    2. '
' → logprob: -1.7241789102554321
    3. '\n' → logprob: -1.7241789102554321
    4. '

' → logprob: -2.7241787910461426
    5. '\' → logprob: -2.9741787910461426
    6. '<|end|>' → logprob: -3.5991787910461426
    7. 'import' → logprob: -3.7241787910461426
    8. '' → logprob: -4.224178791046143
    9. '```' → logprob: -4.224178791046143
    10. '<|end|>' → logprob: -5.224178791046143

Token 7: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.22187811136245728
    2. '\' → logprob: -2.4718780517578125
    3. '\n' → logprob: -2.7218780517578125
    4. '
' → logprob: -4.3468780517578125
    5. '.
' → logprob: -4.7218780517578125
    6. 'def' → logprob: -4.7218780517578125
    7. '```' → logprob: -5.2218780517578125
    8. 'import' → logprob: -5.7218780517578125
    9. 'from' → logprob: -6.0968780517578125
    10. '' → logprob: -6.2218780517578125

Token 8: ' parse' (ID: 8420)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.001130094169639051
    2. ' a' → logprob: -8.126130104064941
    3. ' find' → logprob: -8.501130104064941
    4. ' shortest' → logprob: -8.501130104064941
    5. ' process' → logprob: -9.876130104064941
    6. ' space' → logprob: -9.876130104064941
    7. '_' → logprob: -10.001130104064941
    8. ' d' → logprob: -10.251130104064941
    9. ' solve' → logprob: -10.251130104064941
    10. ' heap' → logprob: -10.876130104064941

Token 9: '_inter' (ID: 16818)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1273287981748581
    2. '(' → logprob: -2.127328872680664
    3. '_(' → logprob: -9.252328872680664
    4. ' (' → logprob: -9.752328872680664
    5. '_input' → logprob: -9.877328872680664
    6. '_line' → logprob: -10.377328872680664
    7. '_space' → logprob: -10.627328872680664
    8. '_token' → logprob: -10.877328872680664
    9. ' _' → logprob: -11.252328872680664
    10. '(_' → logprob: -11.627328872680664

Token 10: 'section' (ID: 6471)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.15751543641090393
    2. 'face' → logprob: -2.532515525817871
    3. 'vals' → logprob: -2.907515525817871
    4. 'faces' → logprob: -5.407515525817871
    5. 'preter' → logprob: -5.907515525817871
    6. 'section' → logprob: -6.282515525817871
    7. '_val' → logprob: -7.782515525817871
    8. 'pret' → logprob: -7.782515525817871
    9. '_face' → logprob: -7.782515525817871
    10. 'actions' → logprob: -8.282515525817871

Token 11: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.21024788916110992
    2. '_' → logprob: -1.7102478742599487
    3. 's' → logprob: -5.335247993469238
    4. '(_' → logprob: -7.335247993469238
    5. '(s' → logprob: -7.460247993469238
    6. '(line' → logprob: -7.710247993469238
    7. '_line' → logprob: -7.710247993469238
    8. '_:' → logprob: -8.085247993469238
    9. '_data' → logprob: -8.960247993469238
    10. '_parent' → logprob: -8.960247993469238

Token 12: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003875134978443384
    2. ')' → logprob: -6.128875255584717
    3. 'tring' → logprob: -7.503875255584717
    4. 's' → logprob: -8.128874778747559
    5. '):
' → logprob: -8.628874778747559
    6. ':' → logprob: -9.003874778747559
    7. '[' → logprob: -9.253874778747559
    8. 'n' → logprob: -9.503874778747559
    9. ',' → logprob: -9.753874778747559
    10. '_' → logprob: -10.128874778747559

Token 13: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6097068190574646
    2. '(' → logprob: -1.7347068786621094
    3. ' :' → logprob: -2.4847068786621094
    4. '   ' → logprob: -2.6097068786621094
    5. '):' → logprob: -2.6097068786621094
    6. '():' → logprob: -4.484706878662109
    7. ' (' → logprob: -4.859706878662109
    8. '(':' → logprob: -5.609706878662109
    9. '(s' → logprob: -5.734706878662109
    10. '_' → logprob: -5.734706878662109

Token 14: ' h' (ID: 312)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.474944144487381
    2. 'return' → logprob: -1.7249441146850586
    3. '   ' → logprob: -1.9749441146850586
    4. ' tokens' → logprob: -3.8499441146850586
    5. 'tokens' → logprob: -3.9749441146850586
    6. ' parts' → logprob: -4.974944114685059
    7. 'pos' → logprob: -6.349944114685059
    8. ' s' → logprob: -6.349944114685059
    9. ' =' → logprob: -6.474944114685059
    10. ' token' → logprob: -6.474944114685059

Token 15: ',v' (ID: 30680)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3863636553287506
    2. ' =' → logprob: -2.0113637447357178
    3. 'eight' → logprob: -3.0113637447357178
    4. 'ash' → logprob: -3.3863637447357178
    5. ',i' → logprob: -3.3863637447357178
    6. ',e' → logprob: -3.5113637447357178
    7. 'e' → logprob: -4.636363506317139
    8. ',a' → logprob: -5.261363506317139
    9. ',t' → logprob: -5.386363506317139
    10. '=int' → logprob: -5.636363506317139

Token 16: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4199867248535156
    2. '=' → logprob: -1.5449867248535156
    3. ',' → logprob: -2.1699867248535156
    4. 'e' → logprob: -5.169986724853516
    5. 'space' → logprob: -6.419986724853516
    6. '_' → logprob: -6.419986724853516
    7. '_space' → logprob: -7.044986724853516
    8. ')' → logprob: -7.419986724853516
    9. 'orizontal' → logprob: -7.544986724853516
    10. '   ' → logprob: -7.669986724853516

Token 17: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.7727077603340149
    2. 's' → logprob: -1.3977077007293701
    3. ' map' → logprob: -1.3977077007293701
    4. 'map' → logprob: -3.14770770072937
    5. ' [' → logprob: -8.39770793914795
    6. '[' → logprob: -8.52270793914795
    7. '0' → logprob: -8.77270793914795
    8. ' ' → logprob: -8.89770793914795
    9. ' list' → logprob: -9.52270793914795
    10. '(map' → logprob: -9.89770793914795

Token 18: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.007358736824244261
    2. '.' → logprob: -5.007358551025391
    3. '.strip' → logprob: -7.382358551025391
    4. ' .' → logprob: -12.13235855102539
    5. 'split' → logprob: -12.25735855102539
    6. '.replace' → logprob: -12.88235855102539
    7. '.rstrip' → logprob: -12.88235855102539
    8. '[' → logprob: -13.38235855102539
    9. '.count' → logprob: -13.88235855102539
    10. '.lower' → logprob: -14.25735855102539

Token 19: '('-' (ID: 33343)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0232434943318367
    2. '("("' → logprob: -4.148243427276611
    3. '(',' → logprob: -5.523243427276611
    4. '('.')' → logprob: -6.898243427276611
    5. '(':' → logprob: -7.148243427276611
    6. '('/')' → logprob: -7.398243427276611
    7. ''' → logprob: -8.02324390411377
    8. '(' → logprob: -8.27324390411377
    9. '('_' → logprob: -9.64824390411377
    10. '('-' → logprob: -9.89824390411377

Token 20: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.017071910202503204
    2. ')' → logprob: -4.267071723937988
    3. '>' → logprob: -6.517071723937988
    4. '1' → logprob: -7.142071723937988
    5. ''>' → logprob: -8.267071723937988
    6. 'v' → logprob: -9.392071723937988
    7. '")' → logprob: -9.767071723937988
    8. '2' → logprob: -10.017071723937988
    9. ''' → logprob: -10.017071723937988
    10. ',' → logprob: -10.767071723937988

Token 21: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37602367997169495
    2. ')' → logprob: -2.126023769378662
    3. 'return' → logprob: -2.376023769378662
    4. ',' → logprob: -2.751023769378662
    5. ' return' → logprob: -3.751023769378662
    6. '[' → logprob: -5.251023769378662
    7. ' ' → logprob: -6.501023769378662
    8. 'v' → logprob: -6.876023769378662
    9. '[]' → logprob: -7.376023769378662
    10. ']' → logprob: -7.501023769378662

Token 22: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3512217402458191
    2. 'return' (adapté à ' return') → logprob: -1.3512217998504639
    3. ' h' → logprob: -3.601221799850464
    4. 'h' → logprob: -5.351221561431885
    5. '   ' → logprob: -5.351221561431885
    6. 'v' → logprob: -9.351222038269043
    7. ' v' → logprob: -9.476222038269043
    8. 'int' → logprob: -9.726222038269043
    9. ' (' → logprob: -9.726222038269043
    10. '```' → logprob: -10.476222038269043

Token 23: ' (' (ID: 350)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.601641058921814
    2. '(h' → logprob: -1.726641058921814
    3. 'int' → logprob: -2.4766411781311035
    4. ' (' → logprob: -2.8516411781311035
    5. 'h' → logprob: -2.9766411781311035
    6. ' int' → logprob: -2.9766411781311035
    7. ' h' → logprob: -3.6016411781311035
    8. '[int' → logprob: -6.2266411781311035
    9. '[h' → logprob: -6.9766411781311035
    10. '(float' → logprob: -9.851640701293945

Token 24: 'h' (ID: 71)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3142548203468323
    2. 'h' → logprob: -1.3142547607421875
    3. ' int' → logprob: -7.1892547607421875
    4. ' h' → logprob: -9.189254760742188
    5. '(int' → logprob: -9.314254760742188
    6. '[int' → logprob: -10.939254760742188
    7. 'float' → logprob: -11.439254760742188
    8. '   ' → logprob: -12.564254760742188
    9. '(h' → logprob: -12.564254760742188
    10. 'str' → logprob: -13.689254760742188

Token 25: ',v' (ID: 30680)
  Prédit: ',v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',v' → logprob: -0.42647892236709595
    2. ',' → logprob: -1.6764788627624512
    3. ',int' → logprob: -1.9264788627624512
    4. '.strip' → logprob: -4.426478862762451
    5. 'int' → logprob: -6.676478862762451
    6. ' ,' → logprob: -7.051478862762451
    7. '[int' → logprob: -8.55147933959961
    8. ',h' → logprob: -9.55147933959961
    9. '.rstrip' → logprob: -10.55147933959961
    10. 'strip' → logprob: -10.67647933959961

Token 26: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. ')
' → logprob: -14.625000953674316
    3. ')return' → logprob: -15.125000953674316
    4. ' )' → logprob: -16.000001907348633
    5. '')' → logprob: -16.500001907348633
    6. ')`' → logprob: -16.500001907348633
    7. '`)' → logprob: -16.875001907348633
    8. '))' → logprob: -17.000001907348633
    9. '),' → logprob: -17.375001907348633
    10. '   ' → logprob: -18.125001907348633

Token 27: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5794506669044495
    2. '
' → logprob: -0.8294506669044495
    3. '<|end|>' → logprob: -6.579450607299805
    4. '

' → logprob: -7.704450607299805
    5. ' def' → logprob: -8.454450607299805
    6. ')' → logprob: -8.454450607299805
    7. '
' → logprob: -8.579450607299805
    8. '\n' → logprob: -8.704450607299805
    9. '  
' → logprob: -8.829450607299805
    10. '```' → logprob: -8.954450607299805

Token 28: ' next' (ID: 2613)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' find' → logprob: -1.172676920890808
    2. ' main' → logprob: -1.547676920890808
    3. ' d' → logprob: -1.672676920890808
    4. ' solve' → logprob: -2.4226770401000977
    5. ' process' → logprob: -3.0476770401000977
    6. ' calculate' → logprob: -3.0476770401000977
    7. ' shortest' → logprob: -4.047677040100098
    8. ' get' → logprob: -4.172677040100098
    9. ' traffic' → logprob: -5.172677040100098
    10. ' compute' → logprob: -5.172677040100098

Token 29: '_direction' (ID: 64332)
  Prédit: '_inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_inter' → logprob: -0.5935655236244202
    2. '_move' → logprob: -1.4685654640197754
    3. '_node' → logprob: -3.4685654640197754
    4. '_step' → logprob: -3.5935654640197754
    5. '_' → logprob: -3.7185654640197754
    6. '_state' → logprob: -3.7185654640197754
    7. '_token' → logprob: -3.8435654640197754
    8. '_turn' → logprob: -4.093565464019775
    9. '_states' → logprob: -4.343565464019775
    10. '_stop' → logprob: -4.593565464019775

Token 30: '(dir' (ID: 32000)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.6212940216064453
    2. '(' → logprob: -1.3712940216064453
    3. '(current' → logprob: -2.3712940216064453
    4. '(direction' → logprob: -3.2462940216064453
    5. ' (' → logprob: -3.6212940216064453
    6. '(h' → logprob: -4.371294021606445
    7. '(state' → logprob: -5.246294021606445
    8. '(prev' → logprob: -5.246294021606445
    9. '(d' → logprob: -5.496294021606445
    10. '(inter' → logprob: -5.746294021606445

Token 31: '):
' (ID: 1883)
  Prédit: 'ection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ection' → logprob: -0.06414482742547989
    2. '):' → logprob: -2.8141448497772217
    3. '_' → logprob: -7.064144611358643
    4. ')' → logprob: -7.439144611358643
    5. '):
' → logprob: -7.564144611358643
    6. 'ect' → logprob: -9.6891450881958
    7. 'e' → logprob: -10.4391450881958
    8. 'ections' → logprob: -10.8141450881958
    9. 'ective' → logprob: -11.0641450881958
    10. '_e' → logprob: -11.0641450881958

Token 32: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.5296577215194702
    2. ' =' → logprob: -1.5296577215194702
    3. '   ' → logprob: -1.6546577215194702
    4. '_' → logprob: -1.6546577215194702
    5. ',' → logprob: -3.0296578407287598
    6. 's' → logprob: -3.2796578407287598
    7. 'if' → logprob: -3.9046578407287598
    8. '):' → logprob: -4.02965784072876
    9. ' if' → logprob: -4.02965784072876
    10. '=' → logprob: -4.77965784072876

Token 33: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.32853224873542786
    2. 'if' → logprob: -1.7035322189331055
    3. ' directions' → logprob: -2.9535322189331055
    4. '   ' → logprob: -3.8285322189331055
    5. 'd' → logprob: -5.3285322189331055
    6. ' return' → logprob: -5.8285322189331055
    7. 'dire' → logprob: -6.2035322189331055
    8. 'return' → logprob: -6.3285322189331055
    9. ' i' → logprob: -6.4535322189331055
    10. ' ' → logprob: -6.8285322189331055

Token 34: ' directions' (ID: 24921)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2561374306678772
    2. ' directions' → logprob: -1.7561373710632324
    3. ' return' → logprob: -3.7561373710632324
    4. ' ' → logprob: -4.756137371063232
    5. '   ' → logprob: -4.756137371063232
    6. 'if' → logprob: -6.006137371063232
    7. 'd' → logprob: -6.631137371063232
    8. ' #' → logprob: -6.756137371063232
    9. ' turns' → logprob: -6.881137371063232
    10. ' d' → logprob: -7.006137371063232

Token 35: ' with' (ID: 483)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0063286712393164635
    2. '=' → logprob: -5.131328582763672
    3. '_' → logprob: -9.131328582763672
    4. 's' → logprob: -9.631328582763672
    5. '_map' → logprob: -9.631328582763672
    6. '_order' → logprob: -10.256328582763672
    7. '   ' → logprob: -10.506328582763672
    8. '_list' → logprob: -11.506328582763672
    9. '.' → logprob: -11.631328582763672
    10. '_sequence' → logprob: -11.631328582763672

Token 36: ' dx' (ID: 29472)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'out' → logprob: -1.6489324569702148
    2. ' their' → logprob: -1.8989324569702148
    3. 'in' → logprob: -2.023932456970215
    4. 'o' → logprob: -2.148932456970215
    5. ' spaces' → logprob: -2.773932456970215
    6. ' a' → logprob: -2.898932456970215
    7. '_clock' → logprob: -3.023932456970215
    8. ' clockwise' → logprob: -3.273932456970215
    9. '_' → logprob: -3.523932456970215
    10. ' space' → logprob: -3.773932456970215

Token 37: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12389332056045532
    2. ' =' → logprob: -2.3738932609558105
    3. 's' → logprob: -4.7488932609558105
    4. ' ,' → logprob: -4.7488932609558105
    5. 'dy' → logprob: -5.6238932609558105
    6. ',d' → logprob: -6.7488932609558105
    7. '=' → logprob: -7.3738932609558105
    8. ',y' → logprob: -8.748893737792969
    9. ' and' → logprob: -9.123893737792969
    10. '[' → logprob: -9.373893737792969

Token 38: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.14268279075622559
    2. ' dy' → logprob: -2.0176827907562256
    3. ' ' → logprob: -12.642683029174805
    4. 'd' → logprob: -13.642683029174805
    5. '.dy' → logprob: -14.267683029174805
    6. 'dym' → logprob: -14.892683029174805
    7. '```' → logprob: -15.267683029174805
    8. ' ddy' → logprob: -15.392683029174805
    9. 'ddy' → logprob: -15.517683029174805
    10. 'y' → logprob: -15.892683029174805

Token 39: ' and' (ID: 326)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04563039913773537
    2. 's' → logprob: -3.17063045501709
    3. '=' → logprob: -6.42063045501709
    4. '[' → logprob: -8.17063045501709
    5. '   ' → logprob: -8.54563045501709
    6. ' s' → logprob: -8.79563045501709
    7. ',' → logprob: -9.79563045501709
    8. '_' → logprob: -9.92063045501709
    9. 'es' → logprob: -9.92063045501709
    10. '_s' → logprob: -10.17063045501709

Token 40: ' their' (ID: 1043)
  Prédit: ' their'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' their' → logprob: -2.300544500350952
    2. ' name' → logprob: -2.550544500350952
    3. 'dy' → logprob: -2.550544500350952
    4. 'turn' → logprob: -2.675544500350952
    5. ' order' → logprob: -3.050544500350952
    6. ' next' → logprob: -3.050544500350952
    7. ' direction' → logprob: -3.050544500350952
    8. 'name' → logprob: -3.175544500350952
    9. ' turn' → logprob: -3.175544500350952
    10. ' cost' → logprob: -3.175544500350952

Token 41: ' opposite' (ID: 23821)
  Prédit: ' order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' order' → logprob: -0.8066824078559875
    2. 'order' → logprob: -1.5566823482513428
    3. ' oppos' → logprob: -2.5566823482513428
    4. ' turn' → logprob: -3.5566823482513428
    5. 'turn' → logprob: -3.5566823482513428
    6. 'left' → logprob: -3.8066823482513428
    7. ' names' → logprob: -3.9316823482513428
    8. ' clockwise' → logprob: -4.181682586669922
    9. 'op' → logprob: -4.306682586669922
    10. ' left' → logprob: -4.431682586669922

Token 42: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.014052207581698895
    2. ' s' → logprob: -5.139052391052246
    3. ' =' → logprob: -5.514052391052246
    4. '_s' → logprob: -6.014052391052246
    5. 'es' → logprob: -7.139052391052246
    6. ' directions' → logprob: -8.639052391052246
    7. '=' → logprob: -8.889052391052246
    8. '_d' → logprob: -9.014052391052246
    9. '_direction' → logprob: -9.014052391052246
    10. ':' → logprob: -10.139052391052246

Token 43: '   ' (ID: 271)
  Prédit: ' directions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' directions' → logprob: -0.7793952226638794
    2. 's' → logprob: -1.5293952226638794
    3. ' =' → logprob: -1.5293952226638794
    4. '   ' → logprob: -3.02939510345459
    5. 'dire' → logprob: -3.40439510345459
    6. ':' → logprob: -5.15439510345459
    7. 'es' → logprob: -5.40439510345459
    8. ',' → logprob: -5.65439510345459
    9. '_direction' → logprob: -6.02939510345459
    10. '```' → logprob: -6.27939510345459

Token 44: ' #' (ID: 1069)
  Prédit: ' directions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' directions' → logprob: -0.0758577510714531
    2. 'dire' → logprob: -3.075857639312744
    3. '   ' → logprob: -3.700857639312744
    4. 'dirs' → logprob: -7.325857639312744
    5. ' dirs' → logprob: -8.200858116149902
    6. ':' → logprob: -8.450858116149902
    7. 'd' → logprob: -9.075858116149902
    8. '{' → logprob: -9.200858116149902
    9. '{
' → logprob: -9.325858116149902
    10. 'direction' → logprob: -9.325858116149902

Token 45: ' '' (ID: 461)
  Prédit: ' directions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' directions' → logprob: -0.035532768815755844
    2. 'dire' → logprob: -3.7855327129364014
    3. '   ' → logprob: -5.0355329513549805
    4. ' {' → logprob: -7.5355329513549805
    5. 'direction' → logprob: -7.6605329513549805
    6. ' {'' → logprob: -7.6605329513549805
    7. ' d' → logprob: -7.6605329513549805
    8. ' ' → logprob: -7.9105329513549805
    9. ' dirs' → logprob: -7.9105329513549805
    10. 'dirs' → logprob: -7.9105329513549805

Token 46: 'E' (ID: 36)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.10870055854320526
    2. 'E' → logprob: -3.9837005138397217
    3. 'n' → logprob: -4.108700752258301
    4. ' N' → logprob: -4.483700752258301
    5. ''' → logprob: -4.983700752258301
    6. '^' → logprob: -5.608700752258301
    7. 'up' → logprob: -5.858700752258301
    8. ' '' → logprob: -5.858700752258301
    9. 'U' → logprob: -5.983700752258301
    10. 'dire' → logprob: -5.983700752258301

Token 47: '','' (ID: 4074)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.31182095408439636
    2. '':' → logprob: -1.6868209838867188
    3. 'a' → logprob: -4.061820983886719
    4. '':'' → logprob: -4.061820983886719
    5. 'A' → logprob: -4.436820983886719
    6. 'ast' → logprob: -4.436820983886719
    7. '',' → logprob: -4.936820983886719
    8. '')' → logprob: -5.936820983886719
    9. ':' → logprob: -6.061820983886719
    10. ''):' → logprob: -6.311820983886719

Token 48: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0004691610229201615
    2. 'N' → logprob: -8.375469207763672
    3. ''' → logprob: -9.250469207763672
    4. ' W' → logprob: -9.500469207763672
    5. 'S' → logprob: -11.000469207763672
    6. 'E' → logprob: -12.000469207763672
    7. 'w' → logprob: -12.125469207763672
    8. '```' → logprob: -12.812969207763672
    9. 'A' → logprob: -12.937969207763672
    10. ' ' → logprob: -13.125469207763672

Token 49: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.5690483450889587
    2. ''' → logprob: -1.3190484046936035
    3. '',' → logprob: -1.9440484046936035
    4. '')' → logprob: -4.5690484046936035
    5. ''),' → logprob: -5.1940484046936035
    6. ','' → logprob: -6.0690484046936035
    7. ')' → logprob: -6.1940484046936035
    8. ''),'' → logprob: -7.6940484046936035
    9. ''s' → logprob: -8.444047927856445
    10. ',' → logprob: -8.444047927856445

Token 50: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.6116925477981567
    2. 'E' → logprob: -1.3616925477981567
    3. 'S' → logprob: -1.7366925477981567
    4. 'W' → logprob: -3.986692428588867
    5. ''' → logprob: -5.861692428588867
    6. 'O' → logprob: -6.861692428588867
    7. 'F' → logprob: -7.111692428588867
    8. 'D' → logprob: -7.986692428588867
    9. '')' → logprob: -8.486692428588867
    10. 'e' → logprob: -8.799192428588867

Token 51: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.03609922155737877
    2. '',' → logprob: -3.4110991954803467
    3. ''' → logprob: -6.286099433898926
    4. 'S' → logprob: -8.161099433898926
    5. '',"' → logprob: -10.161099433898926
    6. ',' → logprob: -10.286099433898926
    7. '','#' → logprob: -10.661099433898926
    8. '   ' → logprob: -10.911099433898926
    9. '','','' → logprob: -10.911099433898926
    10. '')' → logprob: -11.036099433898926

Token 52: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -5.0259150157216936e-05
    2. 'E' → logprob: -10.75005054473877
    3. ''S' → logprob: -11.25005054473877
    4. ''' → logprob: -11.50005054473877
    5. ' S' → logprob: -12.75005054473877
    6. ''s' → logprob: -14.81255054473877
    7. '```' → logprob: -15.12505054473877
    8. 'SE' → logprob: -15.25005054473877
    9. '')' → logprob: -16.125049591064453
    10. 'O' → logprob: -16.187549591064453

Token 53: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.026527274399995804
    2. '')' → logprob: -3.776527166366577
    3. ')' → logprob: -6.651527404785156
    4. '',' → logprob: -7.526527404785156
    5. ')'' → logprob: -7.651527404785156
    6. '']' → logprob: -8.276527404785156
    7. '```' → logprob: -8.776527404785156
    8. ''
' → logprob: -8.776527404785156
    9. 'def' → logprob: -9.026527404785156
    10. ''s' → logprob: -10.026527404785156

Token 54: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35577157139778137
    2. ' directions' → logprob: -1.605771541595459
    3. 'dire' → logprob: -2.730771541595459
    4. ':' → logprob: -4.730771541595459
    5. ',' → logprob: -5.605771541595459
    6. '):
' → logprob: -6.105771541595459
    7. 'def' → logprob: -6.105771541595459
    8. '```' → logprob: -6.355771541595459
    9. 'direction' → logprob: -6.605771541595459
    10. ' :' → logprob: -6.605771541595459

Token 55: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3872411549091339
    2. ' directions' → logprob: -2.2622411251068115
    3. 'dire' → logprob: -2.5122411251068115
    4. ':' → logprob: -2.7622411251068115
    5. 'def' → logprob: -3.3872411251068115
    6. '):' → logprob: -5.262241363525391
    7. ' :' → logprob: -5.637241363525391
    8. ')' → logprob: -5.637241363525391
    9. 'direction' → logprob: -5.762241363525391
    10. ' if' → logprob: -5.887241363525391

Token 56: ' U' (ID: 601)
  Prédit: ' directions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' directions' → logprob: -0.09836777299642563
    2. '   ' → logprob: -3.223367691040039
    3. 'dire' → logprob: -3.598367691040039
    4. ' oppos' → logprob: -4.098367691040039
    5. ' dirs' → logprob: -5.973367691040039
    6. ' if' → logprob: -5.973367691040039
    7. 'dirs' → logprob: -6.973367691040039
    8. ' opposite' → logprob: -7.598367691040039
    9. '```' → logprob: -7.723367691040039
    10. ' direction' → logprob: -7.723367691040039

Token 57: '-turn' (ID: 120746)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.003511095652356744
    2. ''p' → logprob: -7.25351095199585
    3. 'P' → logprob: -7.62851095199585
    4. 'turn' → logprob: -7.87851095199585
    5. 'pd' → logprob: -8.253511428833008
    6. 'n' → logprob: -8.253511428833008
    7. '-turn' → logprob: -8.253511428833008
    8. ''' → logprob: -8.503511428833008
    9. '   ' → logprob: -8.628511428833008
    10. 'pper' → logprob: -8.753511428833008

Token 58: ' forbidden' (ID: 74435)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.3237793445587158
    2. ' =' → logprob: -1.4487793445587158
    3. ''' → logprob: -2.073779344558716
    4. ':' → logprob: -2.323779344558716
    5. ' return' → logprob: -3.198779344558716
    6. 's' → logprob: -3.198779344558716
    7. ' def' → logprob: -3.698779344558716
    8. ' direction' → logprob: -4.073779106140137
    9. ')' → logprob: -4.323779106140137
    10. '   ' → logprob: -4.448779106140137

Token 59: ':' (ID: 25)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6749329566955566
    2. '   ' → logprob: -1.6749329566955566
    3. ' 
' → logprob: -2.1749329566955566
    4. 'def' → logprob: -2.5499329566955566
    5. ' ' → logprob: -3.7999329566955566
    6. ':' → logprob: -4.174932956695557
    7. '<|end|>' → logprob: -4.174932956695557
    8. '  
' → logprob: -4.299932956695557
    9. ',' → logprob: -4.799932956695557
    10. ' directions' → logprob: -5.049932956695557

Token 60: ' cannot' (ID: 6284)
  Prédit: ' directions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' directions' → logprob: -0.8983747959136963
    2. '   ' → logprob: -2.0233747959136963
    3. ' if' → logprob: -2.0233747959136963
    4. ' ' → logprob: -2.5233747959136963
    5. ' return' → logprob: -2.7733747959136963
    6. ' {'' → logprob: -3.2733747959136963
    7. ' '' → logprob: -3.2733747959136963
    8. ' dir' → logprob: -4.273374557495117
    9. 'dire' → logprob: -4.398374557495117
    10. ''' → logprob: -5.023374557495117

Token 61: ' go' (ID: 810)
  Prédit: ' go'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' go' → logprob: -0.20778173208236694
    2. ' reverse' → logprob: -2.2077817916870117
    3. ' return' → logprob: -3.3327817916870117
    4. ' turn' → logprob: -3.4577817916870117
    5. ' be' → logprob: -6.082781791687012
    6. ' directly' → logprob: -7.082781791687012
    7. ' immediately' → logprob: -7.082781791687012
    8. ' move' → logprob: -7.457781791687012
    9. ' ' → logprob: -7.457781791687012
    10. 'reverse' → logprob: -7.457781791687012

Token 62: ' back' (ID: 1602)
  Prédit: ' back'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' back' → logprob: -0.1203416958451271
    2. ' ' → logprob: -3.4953417778015137
    3. 'back' → logprob: -3.4953417778015137
    4. ' opposite' → logprob: -4.120341777801514
    5. ' '' → logprob: -4.245341777801514
    6. ''' → logprob: -4.745341777801514
    7. ' in' → logprob: -5.870341777801514
    8. ' backwards' → logprob: -6.245341777801514
    9. '_back' → logprob: -6.745341777801514
    10. 'op' → logprob: -6.745341777801514

Token 63: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -1.2439404726028442
    2. 'def' → logprob: -1.2439404726028442
    3. ' ' → logprob: -1.8689404726028442
    4. '   ' → logprob: -2.6189403533935547
    5. ' if' → logprob: -3.1189403533935547
    6. ',' → logprob: -3.4939403533935547
    7. '<|end|>' → logprob: -3.6189403533935547
    8. ' def' → logprob: -3.8689403533935547
    9. ')' → logprob: -4.118940353393555
    10. '_' → logprob: -4.118940353393555

Token 64: ' dir' (ID: 5609)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.19275712966918945
    2. 'the' → logprob: -2.6927571296691895
    3. ' previous' → logprob: -2.9427571296691895
    4. ' where' → logprob: -3.5677571296691895
    5. 'previous' → logprob: -4.6927571296691895
    6. 'dir' → logprob: -5.3177571296691895
    7. ' dir' → logprob: -5.4427571296691895
    8. ' direction' → logprob: -6.1927571296691895
    9. ' ' → logprob: -6.3177571296691895
    10. 'prev' → logprob: -6.9427571296691895

Token 65: ' opposite' (ID: 23821)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.45831063389778137
    2. ',' → logprob: -2.583310604095459
    3. ':' → logprob: -2.833310604095459
    4. ' ' → logprob: -3.208310604095459
    5. '):' → logprob: -3.208310604095459
    6. 'def' → logprob: -3.333310604095459
    7. '_' → logprob: -3.458310604095459
    8. ''' → logprob: -4.083310604095459
    9. '   ' → logprob: -4.083310604095459
    10. '):
' → logprob: -5.458310604095459

Token 66: ' to' (ID: 316)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8044930100440979
    2. 'def' → logprob: -1.0544929504394531
    3. '_' → logprob: -2.929492950439453
    4. ':' → logprob: -3.179492950439453
    5. '   ' → logprob: -3.804492950439453
    6. '):' → logprob: -4.179492950439453
    7. ',' → logprob: -4.554492950439453
    8. '```' → logprob: -4.929492950439453
    9. '_token' → logprob: -4.929492950439453
    10. ' ' → logprob: -5.054492950439453

Token 67: ' coming' (ID: 7245)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dir' → logprob: -0.22841310501098633
    2. 'current' → logprob: -1.9784131050109863
    3. ' current' → logprob: -3.3534131050109863
    4. ' dir' → logprob: -3.7284131050109863
    5. 'previous' → logprob: -6.353413105010986
    6. 'the' → logprob: -6.478413105010986
    7. ' the' → logprob: -6.978413105010986
    8. 'prev' → logprob: -7.103413105010986
    9. 'direction' → logprob: -7.103413105010986
    10. ' previous' → logprob: -7.978413105010986

Token 68: '
' (ID: 198)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6054022908210754
    2. '_from' → logprob: -1.1054022312164307
    3. ' from' → logprob: -3.1054022312164307
    4. '_dir' → logprob: -3.2304022312164307
    5. '_direction' → logprob: -4.35540246963501
    6. ')' → logprob: -5.10540246963501
    7. '_' → logprob: -5.23040246963501
    8. 'From' → logprob: -5.35540246963501
    9. ' direction' → logprob: -6.10540246963501
    10. '-from' → logprob: -6.23040246963501

Token 69: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44722509384155273
    2. ')' → logprob: -1.1972250938415527
    3. 'def' → logprob: -3.9472250938415527
    4. ':' → logprob: -4.447225093841553
    5. ''' → logprob: -5.322225093841553
    6. '):' → logprob: -5.447225093841553
    7. ''s' → logprob: -5.947225093841553
    8. '')' → logprob: -6.072225093841553
    9. '```' → logprob: -6.072225093841553
    10. ' ' → logprob: -6.197225093841553

Token 70: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19247129559516907
    2. ' directions' → logprob: -2.0674712657928467
    3. ')' → logprob: -4.567471504211426
    4. ' ' → logprob: -4.817471504211426
    5. 'dire' → logprob: -5.317471504211426
    6. 'current' → logprob: -5.567471504211426
    7. '```' → logprob: -5.692471504211426
    8. 'def' → logprob: -6.067471504211426
    9. '  ' → logprob: -6.192471504211426
    10. ':' → logprob: -6.192471504211426

Token 71: ' ['' (ID: 5140)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.7946868538856506
    2. ' {' → logprob: -1.0446867942810059
    3. '{
' → logprob: -2.294686794281006
    4. ' {
' → logprob: -3.169686794281006
    5. ' '' → logprob: -3.919686794281006
    6. ' None' → logprob: -4.544686794281006
    7. ' dir' → logprob: -5.169686794281006
    8. ' {'' → logprob: -5.169686794281006
    9. 'dir' → logprob: -5.669686794281006
    10. '{'' → logprob: -5.794686794281006

Token 72: 'N' (ID: 45)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.32466286420822144
    2. 'N' → logprob: -1.3246629238128662
    3. 'W' → logprob: -4.699662685394287
    4. 'S' → logprob: -6.574662685394287
    5. ''' → logprob: -9.387163162231445
    6. '']' → logprob: -9.574663162231445
    7. '('' → logprob: -9.637163162231445
    8. ''E' → logprob: -9.699663162231445
    9. ''N' → logprob: -9.949663162231445
    10. 'NE' → logprob: -9.949663162231445

Token 73: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.07935898751020432
    2. '',' → logprob: -2.5793590545654297
    3. ''' → logprob: -8.32935905456543
    4. '',"' → logprob: -9.32935905456543
    5. '','','' → logprob: -9.95435905456543
    6. 'E' → logprob: -10.95435905456543
    7. '',['' → logprob: -11.20435905456543
    8. ''E' → logprob: -11.45435905456543
    9. ' ','' → logprob: -11.57935905456543
    10. '']' → logprob: -11.57935905456543

Token 74: 'S' (ID: 50)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.016389641910791397
    2. 'S' → logprob: -4.141389846801758
    3. 'W' → logprob: -8.141389846801758
    4. ' E' → logprob: -10.141389846801758
    5. 'NE' → logprob: -11.391389846801758
    6. 'O' → logprob: -12.516389846801758
    7. ' S' → logprob: -12.891389846801758
    8. ''E' → logprob: -13.016389846801758
    9. ',E' → logprob: -13.766389846801758
    10. ''' → logprob: -14.078889846801758

Token 75: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.04739171639084816
    2. '']' → logprob: -3.172391653060913
    3. '',' → logprob: -5.547391891479492
    4. ','' → logprob: -8.797391891479492
    5. '',['' → logprob: -9.672391891479492
    6. ']' → logprob: -9.672391891479492
    7. ''' → logprob: -9.797391891479492
    8. ''],'' → logprob: -10.047391891479492
    9. ''],' → logprob: -11.047391891479492
    10. ',E' → logprob: -11.422391891479492

Token 76: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.0012558265589177608
    2. 'W' → logprob: -6.751255989074707
    3. 'N' → logprob: -9.626255989074707
    4. ' E' → logprob: -11.751255989074707
    5. ''E' → logprob: -12.751255989074707
    6. '','' → logprob: -13.438755989074707
    7. '']' → logprob: -13.563755989074707
    8. ''' → logprob: -14.001255989074707
    9. ',E' → logprob: -14.126255989074707
    10. 'S' → logprob: -14.188755989074707

Token 77: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.0006077215657569468
    2. '',' → logprob: -8.00060749053955
    3. ','' → logprob: -8.37560749053955
    4. ' ','' → logprob: -11.37560749053955
    5. ''' → logprob: -11.50060749053955
    6. ',W' → logprob: -11.50060749053955
    7. ',' → logprob: -12.87560749053955
    8. '","' → logprob: -13.00060749053955
    9. '']' → logprob: -13.25060749053955
    10. '',"' → logprob: -13.37560749053955

Token 78: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -2.570319702499546e-05
    2. ' W' → logprob: -10.625025749206543
    3. '	W' → logprob: -14.500025749206543
    4. ' ' → logprob: -16.000024795532227
    5. ''' → logprob: -16.437524795532227
    6. '"W' → logprob: -16.500024795532227
    7. '```' → logprob: -16.750024795532227
    8. ',W' → logprob: -16.812524795532227
    9. '  ' → logprob: -17.437524795532227
    10. 'WN' → logprob: -17.500024795532227

Token 79: '']

' (ID: 36979)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '']' → logprob: -0.00010843054042197764
    2. ']' → logprob: -9.62510871887207
    3. ''' → logprob: -11.25010871887207
    4. '"]' → logprob: -11.37510871887207
    5. ''][' → logprob: -11.50010871887207
    6. ' ']' → logprob: -13.00010871887207
    7. '']
' → logprob: -13.37510871887207
    8. '[' → logprob: -13.75010871887207
    9. '',' → logprob: -14.25010871887207
    10. '   ' → logprob: -14.37510871887207

Token 80: 'def' (ID: 1314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00606187479570508
    2. '<|end|>' → logprob: -5.881062030792236
    3. 'def' → logprob: -6.506062030792236
    4. '[
' → logprob: -7.131062030792236
    5. '<|end|>' → logprob: -8.131061553955078
    6. '[token' → logprob: -8.756061553955078
    7. '[:]' → logprob: -9.381061553955078
    8. '[user' → logprob: -9.506061553955078
    9. '[]' → logprob: -10.006061553955078
    10. '[int' → logprob: -10.506061553955078

Token 81: ' dir' (ID: 5609)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' find' → logprob: -1.0476746559143066
    2. ' next' → logprob: -2.2976746559143066
    3. ' bfs' → logprob: -2.4226746559143066
    4. ' shortest' → logprob: -2.5476746559143066
    5. ' possible' → logprob: -3.0476746559143066
    6. ' get' → logprob: -3.4226746559143066
    7. ' valid' → logprob: -3.4226746559143066
    8. ' can' → logprob: -3.5476746559143066
    9. ' d' → logprob: -3.7976746559143066
    10. ' main' → logprob: -4.047674655914307

Token 82: '_vec' (ID: 29582)
  Prédit: '_op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_op' → logprob: -0.1056908518075943
    2. '_to' → logprob: -2.9806909561157227
    3. '_' → logprob: -3.7306909561157227
    4. '_moves' → logprob: -5.355690956115723
    5. '_offsets' → logprob: -5.605690956115723
    6. '_map' → logprob: -5.855690956115723
    7. 'op' → logprob: -6.480690956115723
    8. '_vectors' → logprob: -6.730690956115723
    9. 'ections' → logprob: -6.855690956115723
    10. '_offset' → logprob: -6.980690956115723

Token 83: '():
' (ID: 8595)
  Prédit: '(dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dir' → logprob: -0.33047714829444885
    2. '(' → logprob: -1.3304771184921265
    3. 'tor' → logprob: -4.580477237701416
    4. '(direction' → logprob: -5.205477237701416
    5. 'ector' → logprob: -7.830477237701416
    6. 's' → logprob: -8.830476760864258
    7. ' (' → logprob: -8.955476760864258
    8. '(d' → logprob: -9.205476760864258
    9. 'ection' → logprob: -9.580476760864258
    10. '(t' → logprob: -9.830476760864258

Token 84: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.24730893969535828
    2. '():
' → logprob: -1.6223089694976807
    3. ':' → logprob: -4.122308731079102
    4. '   ' → logprob: -6.372308731079102
    5. '{' → logprob: -6.997308731079102
    6. ' =' → logprob: -7.372308731079102
    7. ' :' → logprob: -7.747308731079102
    8. '):' → logprob: -7.747308731079102
    9. ' ():' → logprob: -7.747308731079102
    10. '()' → logprob: -8.622308731079102

Token 85: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.35526755452156067
    2. ' return' → logprob: -1.7302675247192383
    3. '{
' → logprob: -2.8552675247192383
    4. '{return' → logprob: -3.8552675247192383
    5. '{' → logprob: -3.9802675247192383
    6. '   ' → logprob: -4.605267524719238
    7. '	return' → logprob: -5.355267524719238
    8. ' ' → logprob: -5.980267524719238
    9. '<|end|>' → logprob: -6.480267524719238
    10. ' {
' → logprob: -6.605267524719238

Token 86: ' {'' (ID: 11881)
  Prédit: '{''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{'' → logprob: -0.10569674521684647
    2. '{
' → logprob: -2.980696678161621
    3. ' {'' → logprob: -3.730696678161621
    4. '{' → logprob: -3.730696678161621
    5. ' {
' → logprob: -6.980696678161621
    6. ' {' → logprob: -7.980696678161621
    7. '{"' → logprob: -8.230696678161621
    8. '[' → logprob: -10.730696678161621
    9. '{
' → logprob: -11.980696678161621
    10. '[(' → logprob: -12.105696678161621

Token 87: 'E' (ID: 36)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.02003759890794754
    2. ''N' → logprob: -4.520037651062012
    3. 'E' → logprob: -4.770037651062012
    4. ''E' → logprob: -8.020037651062012
    5. 'W' → logprob: -9.770037651062012
    6. ''' → logprob: -10.395037651062012
    7. 'S' → logprob: -11.145037651062012
    8. ''S' → logprob: -11.395037651062012
    9. ' N' → logprob: -11.520037651062012
    10. ' '' → logprob: -12.645037651062012

Token 88: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.0006421420839615166
    2. ':(' → logprob: -8.000641822814941
    3. ':' → logprob: -8.375641822814941
    4. ''' → logprob: -10.375641822814941
    5. '',(' → logprob: -10.375641822814941
    6. '':[' → logprob: -12.000641822814941
    7. '(' → logprob: -12.625641822814941
    8. '":' → logprob: -13.625641822814941
    9. ' :(' → logprob: -13.875641822814941
    10. '```' → logprob: -14.000641822814941

Token 89: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07889121770858765
    2. ' (' → logprob: -2.5788912773132324
    3. '(+' → logprob: -14.578890800476074
    4. ' ' → logprob: -14.953890800476074
    5. '(-' → logprob: -15.078890800476074
    6. '[' → logprob: -15.828890800476074
    7. '(x' → logprob: -16.32889175415039
    8. ' (+' → logprob: -16.82889175415039
    9. '1' → logprob: -18.20389175415039
    10. '  ' → logprob: -18.45389175415039

Token 90: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00038956227945163846
    2. ' ' → logprob: -8.375389099121094
    3. '0' → logprob: -8.750389099121094
    4. '+' → logprob: -15.000389099121094
    5. '-' → logprob: -16.812889099121094
    6. '  ' → logprob: -17.062889099121094
    7. '```' → logprob: -17.062889099121094
    8. '2' → logprob: -17.125389099121094
    9. '(' → logprob: -17.250389099121094
    10. '01' → logprob: -17.500389099121094

Token 91: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013727048644796014
    2. ' ,' → logprob: -9.000137329101562
    3. '0' → logprob: -11.250137329101562
    4. ',)' → logprob: -14.625137329101562
    5. ' ' → logprob: -15.625137329101562
    6. ',),' → logprob: -16.000137329101562
    7. ',

' → logprob: -17.125137329101562
    8. '<|end|>' → logprob: -17.375137329101562
    9. ',
' → logprob: -17.750137329101562
    10. '),' → logprob: -18.500137329101562

Token 92: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007099286303855479
    2. ' ' → logprob: -7.2507100105285645
    3. '  ' → logprob: -19.125709533691406
    4. ' ' → logprob: -19.375709533691406
    5. '۰' → logprob: -19.875709533691406
    6. '   ' → logprob: -20.125709533691406
    7. '00' → logprob: -20.625709533691406
    8. '```' → logprob: -21.125709533691406
    9. '1' → logprob: -21.250709533691406
    10. ')' → logprob: -21.313209533691406

Token 93: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.20265774428844452
    2. '),'' → logprob: -1.702657699584961
    3. ')' → logprob: -7.827657699584961
    4. ' ),' → logprob: -7.952657699584961
    5. '),
' → logprob: -8.452657699584961
    6. '   ' → logprob: -8.827657699584961
    7. '),"' → logprob: -10.577657699584961
    8. '),

' → logprob: -10.702657699584961
    9. ','' → logprob: -11.202657699584961
    10. '),(' → logprob: -11.577657699584961

Token 94: ' '' (ID: 461)
  Prédit: ''N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''N' → logprob: -0.598663866519928
    2. ' '' → logprob: -1.0986638069152832
    3. ''' → logprob: -2.598663806915283
    4. ''S' → logprob: -3.223663806915283
    5. '   ' → logprob: -6.473663806915283
    6. ' ' → logprob: -7.723663806915283
    7. ''E' → logprob: -7.848663806915283
    8. '    ' → logprob: -8.723664283752441
    9. ''U' → logprob: -9.098664283752441
    10. '  ' → logprob: -9.223664283752441

Token 95: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.004138003569096327
    2. '-' → logprob: -5.629137992858887
    3. '-W' → logprob: -8.004137992858887
    4. '0' → logprob: -9.504137992858887
    5. ''' → logprob: -9.879137992858887
    6. ' W' → logprob: -10.004137992858887
    7. 'N' → logprob: -11.379137992858887
    8. '"W' → logprob: -11.504137992858887
    9. '-w' → logprob: -13.129137992858887
    10. '-'' → logprob: -13.254137992858887

Token 96: '':' (ID: 2337)
  Prédit: ':('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':(' → logprob: -0.05974867567420006
    2. ':' → logprob: -3.934748649597168
    3. '(' → logprob: -4.559748649597168
    4. ',' → logprob: -4.684748649597168
    5. '):(' → logprob: -4.934748649597168
    6. ',(' → logprob: -5.184748649597168
    7. '',(' → logprob: -6.059748649597168
    8. '':' → logprob: -6.309748649597168
    9. ' :(' → logprob: -7.184748649597168
    10. '0' → logprob: -7.684748649597168

Token 97: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -1.5570885807392187e-05
    2. ' (-' → logprob: -11.125015258789062
    3. '-' → logprob: -14.375015258789062
    4. '(' → logprob: -16.000015258789062
    5. '   ' → logprob: -18.250015258789062
    6. '=(-' → logprob: -18.500015258789062
    7. ' ' → logprob: -18.625015258789062
    8. '((-' → logprob: -19.750015258789062
    9. '  ' → logprob: -20.750015258789062
    10. '0' → logprob: -21.500015258789062

Token 98: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. ',' → logprob: -17.500001907348633
    4. '```' → logprob: -18.062501907348633
    5. '   ' → logprob: -18.250001907348633
    6. '１' → logprob: -18.375001907348633
    7. '2' → logprob: -18.500001907348633
    8. '-' → logprob: -18.875001907348633
    9. '

' → logprob: -18.937501907348633
    10. '{' → logprob: -19.187501907348633

Token 99: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015467056073248386
    2. ' ,' → logprob: -9.125154495239258
    3. '0' → logprob: -10.000154495239258
    4. ' ' → logprob: -15.875154495239258
    5. '<|end|>' → logprob: -16.000154495239258
    6. '),' → logprob: -17.250154495239258
    7. '‌,' → logprob: -17.500154495239258
    8. '1' → logprob: -18.000154495239258
    9. ')' → logprob: -18.625154495239258
    10. '```' → logprob: -18.750154495239258

Token 100: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '۰' → logprob: -20.750015258789062
    4. '   ' → logprob: -21.250015258789062
    5. '```' → logprob: -21.250015258789062
    6. '1' → logprob: -21.250015258789062
    7. ' ' → logprob: -21.500015258789062
    8. '00' → logprob: -21.625015258789062
    9. '  ' → logprob: -22.312515258789062
    10. '０' → logprob: -22.375015258789062

Token 101: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0047336723655462265
    2. '),'' → logprob: -6.254733562469482
    3. ')}' → logprob: -6.254733562469482
    4. ')' → logprob: -7.129733562469482
    5. ' ),' → logprob: -9.87973403930664
    6. ''),' → logprob: -12.00473403930664
    7. ',' → logprob: -12.00473403930664
    8. '},' → logprob: -12.12973403930664
    9. '),(' → logprob: -13.12973403930664
    10. '}' → logprob: -13.25473403930664

Token 102: ' '' (ID: 461)
  Prédit: ''N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''N' → logprob: -0.06257422268390656
    2. ' '' → logprob: -2.8125741481781006
    3. ''S' → logprob: -8.31257438659668
    4. '   ' → logprob: -8.56257438659668
    5. ''' → logprob: -9.18757438659668
    6. ' ' → logprob: -9.81257438659668
    7. '{'' → logprob: -12.43757438659668
    8. '    ' → logprob: -13.18757438659668
    9. ''D' → logprob: -13.68757438659668
    10. ''E' → logprob: -13.81257438659668

Token 103: 'N' (ID: 45)
  Prédit: ''N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''N' → logprob: -0.431142657995224
    2. '0' → logprob: -1.1811426877975464
    3. ''' → logprob: -3.181142568588257
    4. ''S' → logprob: -6.431142807006836
    5. ' ' → logprob: -9.931142807006836
    6. ' '' → logprob: -10.056142807006836
    7. '{'' → logprob: -10.306142807006836
    8. ''n' → logprob: -11.306142807006836
    9. '   ' → logprob: -12.556142807006836
    10. '('' → logprob: -12.806142807006836

Token 104: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.35723647475242615
    2. ':(' → logprob: -1.2322365045547485
    3. '):(' → logprob: -5.607236385345459
    4. ':' → logprob: -5.857236385345459
    5. '',(' → logprob: -6.482236385345459
    6. ' :(' → logprob: -8.232236862182617
    7. '(' → logprob: -8.607236862182617
    8. ',' → logprob: -9.607236862182617
    9. '   ' → logprob: -9.607236862182617
    10. ',(' → logprob: -10.357236862182617

Token 105: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.2664456789934775e-06
    2. ' (' → logprob: -14.250000953674316
    3. '0' → logprob: -14.375000953674316
    4. ',(' → logprob: -22.000001907348633
    5. '```' → logprob: -22.125001907348633
    6. '{' → logprob: -22.625001907348633
    7. ' ' → logprob: -22.875001907348633
    8. '((' → logprob: -22.875001907348633
    9. ':(' → logprob: -23.375001907348633
    10. '[(' → logprob: -23.375001907348633

Token 106: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.696889623621246e-06
    2. '(' → logprob: -13.37500286102295
    3. ' ' → logprob: -13.75000286102295
    4. '-' → logprob: -16.875001907348633
    5. '00' → logprob: -18.250001907348633
    6. '۰' → logprob: -18.375001907348633
    7. '   ' → logprob: -18.500001907348633
    8. '```' → logprob: -18.750001907348633
    9. '1' → logprob: -19.312501907348633
    10. '０' → logprob: -19.750001907348633

Token 107: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.1602376252412796
    2. ',' → logprob: -1.9102376699447632
    3. '-' → logprob: -11.660237312316895
    4. '1' → logprob: -13.410237312316895
    5. ' ,-' → logprob: -13.535237312316895
    6. ' ,' → logprob: -13.785237312316895
    7. ',-

' → logprob: -15.160237312316895
    8. ',+' → logprob: -15.285237312316895
    9. ',-
' → logprob: -15.660237312316895
    10. ',
' → logprob: -16.28523826599121

Token 108: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. ')' → logprob: -20.5
    4. '-' → logprob: -22.75
    5. '   ' → logprob: -22.75
    6. '１' → logprob: -23.125
    7. '```' → logprob: -23.125
    8. '

' → logprob: -23.5
    9. '১' → logprob: -23.875
    10. '  ' → logprob: -24.375

Token 109: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.004064628388732672
    2. ')' → logprob: -5.754064559936523
    3. ')}' → logprob: -7.379064559936523
    4. '),'' → logprob: -8.879064559936523
    5. ' ),' → logprob: -9.504064559936523
    6. '),(' → logprob: -10.504064559936523
    7. ''),' → logprob: -11.504064559936523
    8. '),
' → logprob: -12.879064559936523
    9. '},' → logprob: -12.879064559936523
    10. ' )' → logprob: -13.379064559936523

Token 110: ' '' (ID: 461)
  Prédit: ''S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''S' → logprob: -0.0013732073130086064
    2. ' '' → logprob: -6.626373291015625
    3. ' ' → logprob: -11.001373291015625
    4. '   ' → logprob: -11.376373291015625
    5. ''' → logprob: -11.376373291015625
    6. '('' → logprob: -12.876373291015625
    7. '{'' → logprob: -13.251373291015625
    8. '  ' → logprob: -14.126373291015625
    9. ''O' → logprob: -14.501373291015625
    10. ''D' → logprob: -14.751373291015625

Token 111: 'S' (ID: 50)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005572011577896774
    2. '0' → logprob: -7.5005574226379395
    3. ' ' → logprob: -12.375556945800781
    4. '```' → logprob: -17.12555694580078
    5. 'S' → logprob: -18.12555694580078
    6. ''' → logprob: -18.50055694580078
    7. '   ' → logprob: -20.37555694580078
    8. ')' → logprob: -20.37555694580078
    9. '``' → logprob: -20.62555694580078
    10. '
' → logprob: -20.87555694580078

Token 112: '':' (ID: 2337)
  Prédit: ':('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':(' → logprob: -0.5606049299240112
    2. '':' → logprob: -0.9356049299240112
    3. '(' → logprob: -3.685605049133301
    4. '):(' → logprob: -4.810605049133301
    5. '',(' → logprob: -6.060605049133301
    6. ' :(' → logprob: -7.810605049133301
    7. '0' → logprob: -7.935605049133301
    8. ':' → logprob: -8.1856050491333
    9. '```' → logprob: -9.9356050491333
    10. '":' → logprob: -10.3106050491333

Token 113: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.45848218582978e-06
    2. ' (' → logprob: -13.00000286102295
    3. '0' → logprob: -15.87500286102295
    4. '   ' → logprob: -21.375001907348633
    5. ',(' → logprob: -21.875001907348633
    6. '```' → logprob: -23.500001907348633
    7. '(None' → logprob: -23.625001907348633
    8. ')(' → logprob: -23.750001907348633
    9. '((' → logprob: -23.875001907348633
    10. ',' → logprob: -24.125001907348633

Token 114: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011105830781161785
    2. '0' → logprob: -4.511106014251709
    3. '(' → logprob: -9.76110553741455
    4. ' ' → logprob: -15.01110553741455
    5. '```' → logprob: -18.761106491088867
    6. ' (' → logprob: -18.886106491088867
    7. '   ' → logprob: -19.511106491088867
    8. '01' → logprob: -19.511106491088867
    9. '
' → logprob: -20.386106491088867
    10. ',' → logprob: -20.886106491088867

Token 115: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002477796748280525
    2. '1' → logprob: -6.002477645874023
    3. ' ,' → logprob: -13.252477645874023
    4. ',-' → logprob: -16.502477645874023
    5. ' ' → logprob: -16.627477645874023
    6. ')}' → logprob: -16.627477645874023
    7. ')' → logprob: -17.002477645874023
    8. '(' → logprob: -17.127477645874023
    9. ',(' → logprob: -18.127477645874023
    10. ',+' → logprob: -18.252477645874023

Token 116: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '```' → logprob: -19.5
    4. ')' → logprob: -20.375
    5. '   ' → logprob: -20.625
    6. '+' → logprob: -20.75
    7. '１' → logprob: -21.125
    8. '
' → logprob: -21.3125
    9. '0' → logprob: -21.5
    10. '-' → logprob: -21.75

Token 117: ')}

' (ID: 184554)
  Prédit: ')}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')}' → logprob: -0.060522738844156265
    2. ')' → logprob: -3.3105227947235107
    3. '}' → logprob: -3.8105227947235107
    4. '})' → logprob: -9.43552303314209
    5. ' )' → logprob: -12.06052303314209
    6. ');}' → logprob: -12.81052303314209
    7. ' }' → logprob: -13.31052303314209
    8. '   ' → logprob: -14.06052303314209
    9. '')}' → logprob: -14.06052303314209
    10. '))' → logprob: -14.56052303314209

Token 118: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.020224066451191902
    2. ' ' → logprob: -5.770224094390869
    3. '<|end|>' → logprob: -5.770224094390869
    4. ')' → logprob: -5.895224094390869
    5. ' def' → logprob: -6.145224094390869
    6. '[' → logprob: -6.395224094390869
    7. ',' → logprob: -6.520224094390869
    8. '_' → logprob: -6.770224094390869
    9. '#' → logprob: -6.770224094390869
    10. ':' → logprob: -6.895224094390869

Token 119: ' opposite' (ID: 23821)
  Prédit: ' shortest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' shortest' → logprob: -1.182195782661438
    2. ' d' → logprob: -1.807195782661438
    3. ' find' → logprob: -3.0571956634521484
    4. 'd' → logprob: -3.0571956634521484
    5. ' main' → logprob: -3.1821956634521484
    6. 'short' → logprob: -3.5571956634521484
    7. ' valid' → logprob: -3.5571956634521484
    8. ' man' → logprob: -3.6821956634521484
    9. ' solve' → logprob: -3.6821956634521484
    10. ' heuristic' → logprob: -3.8071956634521484

Token 120: '(d' (ID: 2572)
  Prédit: '(dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dir' → logprob: -0.00430727656930685
    2. '(direction' → logprob: -5.754307270050049
    3. '_dir' → logprob: -7.504307270050049
    4. '_direction' → logprob: -8.129307746887207
    5. '(' → logprob: -8.254307746887207
    6. 'dir' → logprob: -11.629307746887207
    7. '(d' → logprob: -11.879307746887207
    8. '(Direction' → logprob: -13.004307746887207
    9. 'direction' → logprob: -13.129307746887207
    10. '('' → logprob: -14.129307746887207

Token 121: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.612002432346344
    2. 'ir' → logprob: -0.862002432346344
    3. ')' → logprob: -3.612002372741699
    4. 'irection' → logprob: -5.487002372741699
    5. '):
' → logprob: -5.612002372741699
    6. 'd' → logprob: -8.2370023727417
    7. '):

' → logprob: -9.1120023727417
    8. '(' → logprob: -10.2370023727417
    9. 'i' → logprob: -10.3620023727417
    10. 'ef' → logprob: -10.6120023727417

Token 122: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6891865134239197
    2. ':' → logprob: -1.4391865730285645
    3. ' return' → logprob: -2.3141865730285645
    4. 'return' → logprob: -2.5641865730285645
    5. ':
' → logprob: -2.6891865730285645
    6. ':return' → logprob: -5.3141865730285645
    7. 'def' → logprob: -5.5641865730285645
    8. '):
' → logprob: -6.6891865730285645
    9. '('' → logprob: -6.9391865730285645
    10. '{' → logprob: -6.9391865730285645

Token 123: ' opp' (ID: 6323)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.26810353994369507
    2. 'if' → logprob: -1.5181035995483398
    3. '   ' → logprob: -4.39310359954834
    4. ' return' → logprob: -6.39310359954834
    5. ' if' → logprob: -6.51810359954834
    6. 'op' → logprob: -7.76810359954834
    7. ' oppos' → logprob: -10.01810359954834
    8. 'opp' (adapté à ' opp') → logprob: -11.14310359954834
    9. '	return' → logprob: -11.14310359954834
    10. 'ops' → logprob: -11.76810359954834

Token 124: ' =' (ID: 314)
  Prédit: 'osite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'osite' → logprob: -0.005135204177349806
    2. '=' → logprob: -5.7551350593566895
    3. ' =' → logprob: -7.1301350593566895
    4. 'o' → logprob: -7.5051350593566895
    5. '=d' → logprob: -7.6301350593566895
    6. 'os' → logprob: -9.880135536193848
    7. 'd' → logprob: -10.505135536193848
    8. 's' → logprob: -10.505135536193848
    9. 'site' → logprob: -12.880135536193848
    10. '_d' → logprob: -13.130135536193848

Token 125: ' {'' (ID: 11881)
  Prédit: '{''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{'' → logprob: -0.01328093558549881
    2. '{
' → logprob: -4.513280868530273
    3. '{' → logprob: -6.513280868530273
    4. ''E' → logprob: -7.763280868530273
    5. ' {'' → logprob: -8.263280868530273
    6. '{"' → logprob: -10.388280868530273
    7. ''' → logprob: -11.263280868530273
    8. '   ' → logprob: -11.513280868530273
    9. ''S' → logprob: -13.138280868530273
    10. ''N' → logprob: -13.263280868530273

Token 126: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.17987987399101257
    2. 'N' → logprob: -1.804879903793335
    3. 'W' → logprob: -9.429880142211914
    4. 'S' → logprob: -10.429880142211914
    5. ''E' → logprob: -11.179880142211914
    6. ''N' → logprob: -12.054880142211914
    7. ''' → logprob: -13.304880142211914
    8. ' E' → logprob: -13.679880142211914
    9. 'O' → logprob: -14.679880142211914
    10. ' N' → logprob: -14.804880142211914

Token 127: '':'' (ID: 22947)
  Prédit: '':''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':'' → logprob: -0.0032275060657411814
    2. ':'' → logprob: -6.503227710723877
    3. '':' → logprob: -6.878227710723877
    4. ''' → logprob: -7.753227710723877
    5. ':' → logprob: -8.253227233886719
    6. '','' → logprob: -13.628227233886719
    7. '   ' → logprob: -14.378227233886719
    8. ' ':'' → logprob: -14.503227233886719
    9. '":"' → logprob: -14.628227233886719
    10. ' :' → logprob: -14.753227233886719

Token 128: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -1.9361264946837764e-07
    2. ' W' → logprob: -16.625
    3. ''' → logprob: -18.5
    4. '"W' → logprob: -20.5
    5. '<W' → logprob: -20.875
    6. '	W' → logprob: -21.25
    7. '```' → logprob: -21.75
    8. 'WEST' → logprob: -23.375
    9. 'w' → logprob: -23.5
    10. 'west' → logprob: -23.5

Token 129: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.004126842133700848
    2. '','' → logprob: -5.504127025604248
    3. ''' → logprob: -10.00412654876709
    4. '',
' → logprob: -13.37912654876709
    5. ',' → logprob: -14.12912654876709
    6. ' ',' → logprob: -14.87912654876709
    7. ','' → logprob: -14.87912654876709
    8. '',"' → logprob: -16.254127502441406
    9. '",' → logprob: -16.629127502441406
    10. '',
' → logprob: -18.254127502441406

Token 130: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.09774504601955414
    2. ''E' → logprob: -2.847744941711426
    3. ' '' → logprob: -4.722744941711426
    4. '   ' → logprob: -4.722744941711426
    5. ''S' → logprob: -4.847744941711426
    6. ''N' → logprob: -5.222744941711426
    7. '     ' → logprob: -6.347744941711426
    8. ' ' → logprob: -7.722744941711426
    9. ''O' → logprob: -7.847744941711426
    10. '       ' → logprob: -8.472744941711426

Token 131: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -3.128163257315464e-07
    2. ''' → logprob: -16.0
    3. ' W' → logprob: -16.25
    4. '"W' → logprob: -18.75
    5. '```' → logprob: -19.625
    6. 'O' → logprob: -19.75
    7. 'w' → logprob: -20.375
    8. '['' → logprob: -20.375
    9. '`' → logprob: -20.5
    10. 'N' → logprob: -21.375

Token 132: '':'' (ID: 22947)
  Prédit: '':''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':'' → logprob: -0.000271706550847739
    2. '':' → logprob: -8.250271797180176
    3. ':'' → logprob: -11.875271797180176
    4. ''E' → logprob: -13.750271797180176
    5. ':E' → logprob: -14.125271797180176
    6. ':' → logprob: -14.625271797180176
    7. ''' → logprob: -14.625271797180176
    8. '":"' → logprob: -15.375271797180176
    9. ''S' → logprob: -15.375271797180176
    10. '','' → logprob: -15.750271797180176

Token 133: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.023247458040714264
    2. ''E' → logprob: -3.773247480392456
    3. ''' → logprob: -14.398247718811035
    4. ' E' → logprob: -14.523247718811035
    5. '"E' → logprob: -14.773247718811035
    6. '’E' → logprob: -15.023247718811035
    7. ''e' → logprob: -15.523247718811035
    8. '>E' → logprob: -17.27324676513672
    9. '`' → logprob: -18.27324676513672
    10. '```' → logprob: -18.27324676513672

Token 134: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.02119171805679798
    2. ',' → logprob: -3.8961918354034424
    3. ','' → logprob: -7.771191596984863
    4. '','' → logprob: -9.146191596984863
    5. ''' → logprob: -9.271191596984863
    6. ''S' → logprob: -11.646191596984863
    7. ' ,' → logprob: -11.646191596984863
    8. '}' → logprob: -12.646191596984863
    9. ''N' → logprob: -13.271191596984863
    10. ' ',' → logprob: -13.896191596984863

Token 135: ' '' (ID: 461)
  Prédit: ''N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''N' → logprob: -0.16618388891220093
    2. ''S' → logprob: -1.9161839485168457
    3. ' '' → logprob: -5.666183948516846
    4. ''E' → logprob: -6.041183948516846
    5. '{'' → logprob: -10.291183471679688
    6. '   ' → logprob: -10.416183471679688
    7. ' ' → logprob: -11.166183471679688
    8. '  ' → logprob: -12.041183471679688
    9. ''' → logprob: -12.166183471679688
    10. ''O' → logprob: -12.541183471679688

Token 136: 'N' (ID: 45)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.6012480854988098
    2. ''E' → logprob: -0.8512480854988098
    3. ''S' → logprob: -4.101248264312744
    4. 'S' → logprob: -5.101248264312744
    5. ''' → logprob: -6.351248264312744
    6. 'N' → logprob: -8.101247787475586
    7. ''e' → logprob: -8.976247787475586
    8. ''N' → logprob: -9.101247787475586
    9. ''s' → logprob: -10.851247787475586
    10. ' '' → logprob: -11.726247787475586

Token 137: '':'' (ID: 22947)
  Prédit: '':''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':'' → logprob: -0.07968585938215256
    2. ''S' → logprob: -2.579685926437378
    3. '':' → logprob: -7.829685688018799
    4. ':'' → logprob: -8.204686164855957
    5. ''' → logprob: -9.704686164855957
    6. ':S' → logprob: -10.204686164855957
    7. ''N' → logprob: -11.454686164855957
    8. '','' → logprob: -11.704686164855957
    9. ':' → logprob: -13.204686164855957
    10. 'S' → logprob: -13.579686164855957

Token 138: 'S' (ID: 50)
  Prédit: ''S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''S' → logprob: -0.00071695790393278
    2. 'S' → logprob: -7.2507171630859375
    3. ''' → logprob: -12.125717163085938
    4. ''s' → logprob: -13.625717163085938
    5. '"S' → logprob: -16.125717163085938
    6. '’S' → logprob: -16.500717163085938
    7. ' '' → logprob: -17.000717163085938
    8. ' S' → logprob: -17.125717163085938
    9. '```' → logprob: -17.375717163085938
    10. '`' → logprob: -18.000717163085938

Token 139: '',' (ID: 787)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014510054141283035
    2. '',' → logprob: -4.389510154724121
    3. ' ,' → logprob: -6.639510154724121
    4. ','' → logprob: -7.389510154724121
    5. ''N' → logprob: -10.014510154724121
    6. ' ,'' → logprob: -11.514510154724121
    7. ''' → logprob: -11.889510154724121
    8. '','' → logprob: -12.889510154724121
    9. ''S' → logprob: -13.014510154724121
    10. '   ' → logprob: -13.139510154724121

Token 140: ' '' (ID: 461)
  Prédit: ''S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''S' → logprob: -0.016726726666092873
    2. ' '' → logprob: -4.141726493835449
    3. ' ' → logprob: -7.891726493835449
    4. '   ' → logprob: -8.64172649383545
    5. ''' → logprob: -9.26672649383545
    6. ''N' → logprob: -10.51672649383545
    7. '  ' → logprob: -12.14172649383545
    8. ''T' → logprob: -12.76672649383545
    9. ''U' → logprob: -13.14172649383545
    10. ''A' → logprob: -13.14172649383545

Token 141: 'S' (ID: 50)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0297732874751091
    2. ''N' → logprob: -3.529773235321045
    3. ''' → logprob: -10.779773712158203
    4. ''n' → logprob: -13.654773712158203
    5. 'n' → logprob: -14.279773712158203
    6. '"N' → logprob: -15.654773712158203
    7. ' N' → logprob: -16.279773712158203
    8. ''S' → logprob: -17.654773712158203
    9. 'S' → logprob: -17.779773712158203
    10. '	N' → logprob: -19.154773712158203

Token 142: '':'' (ID: 22947)
  Prédit: ''}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''}' → logprob: -0.06431977450847626
    2. '}' → logprob: -3.0643198490142822
    3. ''' → logprob: -4.314319610595703
    4. '':'' → logprob: -6.689319610595703
    5. '']' → logprob: -7.564319610595703
    6. ''}
' → logprob: -8.814319610595703
    7. '}'' → logprob: -9.064319610595703
    8. '':' → logprob: -10.064319610595703
    9. ''S' → logprob: -10.939319610595703
    10. ''N' → logprob: -10.939319610595703

Token 143: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.023281820118427277
    2. ''N' → logprob: -3.7732818126678467
    3. ''' → logprob: -10.273282051086426
    4. ' N' → logprob: -14.023282051086426
    5. '"N' → logprob: -14.273282051086426
    6. '	N' → logprob: -16.77328109741211
    7. ''}' → logprob: -17.02328109741211
    8. '')' → logprob: -17.77328109741211
    9. ''n' → logprob: -17.77328109741211
    10. ' '' → logprob: -17.89828109741211

Token 144: ''}
' (ID: 32701)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.296028196811676
    2. ''}' → logprob: -1.7960281372070312
    3. '}
' → logprob: -2.7960281372070312
    4. ''}
' → logprob: -3.5460281372070312
    5. '}'' → logprob: -9.171028137207031
    6. ''' → logprob: -9.296028137207031
    7. '}
' → logprob: -10.171028137207031
    8. ' }' → logprob: -10.171028137207031
    9. '}'
' → logprob: -10.421028137207031
    10. '}[' → logprob: -10.546028137207031

Token 145: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11426252126693726
    2. ' return' → logprob: -2.614262580871582
    3. 'return' → logprob: -3.364262580871582
    4. '
' → logprob: -9.364262580871582
    5. '	return' → logprob: -9.614262580871582
    6. ' ' → logprob: -11.864262580871582
    7. ':return' → logprob: -13.364262580871582
    8. '```' → logprob: -13.614262580871582
    9. '  ' → logprob: -13.739262580871582
    10. ')return' → logprob: -14.114262580871582

Token 146: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5821699500083923
    2. ' return' → logprob: -0.8321699500083923
    3. '   ' → logprob: -5.082170009613037
    4. '	return' → logprob: -12.582169532775879
    5. ' ' → logprob: -14.457169532775879
    6. '
' → logprob: -15.082169532775879
    7. ':return' → logprob: -15.457169532775879
    8. 'eturn' → logprob: -16.582170486450195
    9. '```' → logprob: -16.832170486450195
    10. '  ' → logprob: -17.082170486450195

Token 147: ' opp' (ID: 6323)
  Prédit: 'opp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opp' → logprob: -0.06224663183093071
    2. ' opp' → logprob: -2.812246561050415
    3. 'op' → logprob: -8.187246322631836
    4. 'ops' → logprob: -15.937246322631836
    5. 'Opp' → logprob: -15.937246322631836
    6. '(' → logprob: -16.937246322631836
    7. ' op' → logprob: -17.187246322631836
    8. 'upp' → logprob: -17.187246322631836
    9. 'opf' → logprob: -17.187246322631836
    10. '   ' → logprob: -17.187246322631836

Token 148: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -7.3458322731312364e-06
    2. '[' → logprob: -12.000007629394531
    3. 'd' → logprob: -14.000007629394531
    4. '(d' → logprob: -15.500007629394531
    5. '[D' → logprob: -17.87500762939453
    6. ' [' → logprob: -19.00000762939453
    7. ' d' → logprob: -19.00000762939453
    8. '\[' → logprob: -19.12500762939453
    9. '[s' → logprob: -19.75000762939453
    10. '[c' → logprob: -20.37500762939453

Token 149: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -8.537868779967539e-06
    2. '']' → logprob: -12.000008583068848
    3. ' ]' → logprob: -13.625008583068848
    4. '}' → logprob: -14.875008583068848
    5. '[' → logprob: -15.375008583068848
    6. ')' → logprob: -15.375008583068848
    7. ')]' → logprob: -16.25000762939453
    8. '"]' → logprob: -17.00000762939453
    9. ']
' → logprob: -17.37500762939453
    10. '`]' → logprob: -17.87500762939453

Token 150: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -6.134509021649137e-05
    2. '<|end|>' → logprob: -10.25006103515625
    3. '#' → logprob: -11.37506103515625
    4. 'class' → logprob: -11.87506103515625
    5. '<|end|>' → logprob: -13.12506103515625
    6. 'import' → logprob: -13.25006103515625
    7. ' def' → logprob: -13.62506103515625
    8. '```' → logprob: -13.75006103515625
    9. '
' → logprob: -15.12506103515625
    10. 'from' → logprob: -16.00006103515625

Token 151: ' coord' (ID: 25819)
  Prédit: ' shortest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' shortest' → logprob: -0.771592378616333
    2. ' d' → logprob: -1.646592378616333
    3. ' can' → logprob: -2.396592378616333
    4. ' valid' → logprob: -2.896592378616333
    5. ' find' → logprob: -3.396592378616333
    6. 'd' → logprob: -3.521592378616333
    7. 'can' → logprob: -3.771592378616333
    8. ' possible' → logprob: -4.271592140197754
    9. ' allowed' → logprob: -4.271592140197754
    10. ' is' → logprob: -4.646592140197754

Token 152: '_index' (ID: 7748)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.6756044030189514
    2. '_from' → logprob: -1.0506043434143066
    3. 'inate' → logprob: -2.8006043434143066
    4. 's' → logprob: -2.9256043434143066
    5. '_at' → logprob: -5.425604343414307
    6. '(s' → logprob: -5.675604343414307
    7. '_in' → logprob: -5.925604343414307
    8. '_name' → logprob: -6.050604343414307
    9. '_key' → logprob: -6.300604343414307
    10. '_of' → logprob: -6.425604343414307

Token 153: '(h' (ID: 8120)
  Prédit: '(coord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(coord' → logprob: -0.7693794369697571
    2. '(' → logprob: -1.6443793773651123
    3. '(s' → logprob: -1.8943793773651123
    4. '(line' → logprob: -2.5193793773651123
    5. '():' → logprob: -3.0193793773651123
    6. '(x' → logprob: -3.5193793773651123
    7. '(coords' → logprob: -4.519379615783691
    8. '(row' → logprob: -5.394379615783691
    9. '(co' → logprob: -5.644379615783691
    10. '(pos' → logprob: -5.894379615783691

Token 154: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07422991096973419
    2. '):' → logprob: -2.6992299556732178
    3. '):
' → logprob: -5.949229717254639
    4. ' ,' → logprob: -7.574229717254639
    5. ',i' → logprob: -7.949229717254639
    6. ',v' → logprob: -8.699230194091797
    7. ',h' → logprob: -9.574230194091797
    8. ')' → logprob: -9.574230194091797
    9. ',s' → logprob: -10.074230194091797
    10. ',p' → logprob: -10.199230194091797

Token 155: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0055490355007350445
    2. ' v' → logprob: -5.25554895401001
    3. 'w' → logprob: -8.255549430847168
    4. 's' → logprob: -10.505549430847168
    5. ' w' → logprob: -12.380549430847168
    6. '   ' → logprob: -12.505549430847168
    7. ' ' → logprob: -12.505549430847168
    8. 'def' → logprob: -13.380549430847168
    9. 'y' → logprob: -13.630549430847168
    10. ' s' → logprob: -13.630549430847168

Token 156: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0011815387988463044
    2. '):
' → logprob: -6.876181602478027
    3. ',' → logprob: -9.376181602478027
    4. ' ):' → logprob: -9.876181602478027
    5. '   ' → logprob: -12.376181602478027
    6. ')' → logprob: -12.501181602478027
    7. '):
' → logprob: -13.001181602478027
    8. ':' → logprob: -13.501181602478027
    9. '=' → logprob: -15.751181602478027
    10. '  ' → logprob: -15.751181602478027

Token 157: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.7414571642875671
    2. 'H' → logprob: -2.366457223892212
    3. 'width' → logprob: -2.991457223892212
    4. 'grid' → logprob: -3.116457223892212
    5. 'max' → logprob: -3.116457223892212
    6. 'w' → logprob: -3.241457223892212
    7. 'coords' → logprob: -3.491457223892212
    8. 'inter' → logprob: -3.616457223892212
    9. ' h' → logprob: -4.116456985473633
    10. 'coord' → logprob: -4.241456985473633

Token 158: 'list' (ID: 2641)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.8854587078094482
    2. '):
' → logprob: -1.1354587078094482
    3. ',' → logprob: -1.7604587078094482
    4. 's' → logprob: -3.5104587078094482
    5. '_count' → logprob: -4.260458946228027
    6. 'v' → logprob: -4.385458946228027
    7. 'size' → logprob: -5.385458946228027
    8. ')' → logprob: -5.635458946228027
    9. 'count' → logprob: -5.635458946228027
    10. 'def' → logprob: -5.760458946228027

Token 159: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010815883986651897
    2. ',' → logprob: -4.6358160972595215
    3. ')' → logprob: -7.0108160972595215
    4. '):
' → logprob: -9.760815620422363
    5. ' ):' → logprob: -10.760815620422363
    6. 's' → logprob: -10.885815620422363
    7. '=' → logprob: -11.510815620422363
    8. '_list' → logprob: -11.510815620422363
    9. ' ,' → logprob: -12.260815620422363
    10. ':' → logprob: -12.385815620422363

Token 160: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0021965294145047665
    2. ' v' → logprob: -6.127196311950684
    3. ' ' → logprob: -12.752196311950684
    4. '   ' → logprob: -13.002196311950684
    5. 'h' → logprob: -13.752196311950684
    6. '
' → logprob: -13.752196311950684
    7. '	v' → logprob: -14.752196311950684
    8. 'vl' → logprob: -15.002196311950684
    9. '```' → logprob: -15.002196311950684
    10. 'def' → logprob: -15.127196311950684

Token 161: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.03804045543074608
    2. '):' → logprob: -3.5380403995513916
    3. ')' → logprob: -5.413040637969971
    4. '_list' → logprob: -6.413040637969971
    5. '):
' → logprob: -6.788040637969971
    6. 'index' → logprob: -7.788040637969971
    7. 'def' → logprob: -8.788040161132812
    8. '<|end|>' → logprob: -9.163040161132812
    9. 'dict' → logprob: -10.413040161132812
    10. ')>' → logprob: -10.538040161132812

Token 162: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0001830410328693688
    2. '):
' → logprob: -8.62518310546875
    3. ')' → logprob: -13.75018310546875
    4. ',' → logprob: -14.12518310546875
    5. ':' → logprob: -14.37518310546875
    6. ' ):' → logprob: -15.00018310546875
    7. '   ' → logprob: -15.25018310546875
    8. '):
' → logprob: -15.62518310546875
    9. '}:' → logprob: -16.37518310546875
    10. ']:' → logprob: -16.62518310546875

Token 163: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2645927667617798
    2. ' return' → logprob: -1.6395927667617798
    3. 'return' → logprob: -3.2645926475524902
    4. ' h' → logprob: -9.014593124389648
    5. 'h' → logprob: -10.139593124389648
    6. ' for' → logprob: -10.639593124389648
    7. ' ' → logprob: -12.264593124389648
    8. '   ' → logprob: -12.264593124389648
    9. '	return' → logprob: -12.764593124389648
    10. 'for' → logprob: -13.139593124389648

Token 164: ' x' (ID: 1215)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5891046524047852
    2. ' return' → logprob: -0.8391046524047852
    3. '   ' → logprob: -4.339104652404785
    4. 'try' → logprob: -11.339104652404785
    5. '```' → logprob: -11.714104652404785
    6. ' try' → logprob: -11.964104652404785
    7. ' ' → logprob: -13.839104652404785
    8. '``' → logprob: -14.089104652404785
    9. ' for' → logprob: -14.464104652404785
    10. 'h' → logprob: -14.714104652404785

Token 165: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25194382667541504
    2. ' =' → logprob: -1.501943826675415
    3. ',' → logprob: -11.876943588256836
    4. '   ' → logprob: -13.751943588256836
    5. '_' → logprob: -13.876943588256836
    6. '_idx' → logprob: -13.876943588256836
    7. '=int' → logprob: -14.251943588256836
    8. '_index' → logprob: -14.501943588256836
    9. ')' → logprob: -14.876943588256836
    10. 'x' → logprob: -15.001943588256836

Token 166: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.02055484801530838
    2. ' h' → logprob: -3.895554780960083
    3. '   ' → logprob: -11.520554542541504
    4. 'len' → logprob: -14.145554542541504
    5. '	h' → logprob: -14.395554542541504
    6. ' ' → logprob: -14.520554542541504
    7. '0' → logprob: -15.270554542541504
    8. '  ' → logprob: -15.520554542541504
    9. 'int' → logprob: -15.520554542541504
    10. '    ' → logprob: -16.39555549621582

Token 167: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.15360407531261444
    2. '_list' → logprob: -2.403604030609131
    3. 'index' → logprob: -4.028604030609131
    4. '.index' → logprob: -4.278604030609131
    5. '_index' → logprob: -4.653604030609131
    6. ' =' → logprob: -5.278604030609131
    7. '=' → logprob: -5.778604030609131
    8. '=list' → logprob: -6.653604030609131
    9. '.list' → logprob: -8.528604507446289
    10. '.tolist' → logprob: -9.028604507446289

Token 168: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -6.2729995988775045e-06
    2. 'index' → logprob: -12.250006675720215
    3. '.' → logprob: -13.500006675720215
    4. ' .' → logprob: -18.7500057220459
    5. '.Index' → logprob: -18.7500057220459
    6. ' index' → logprob: -20.0000057220459
    7. '.find' → logprob: -20.3750057220459
    8. '#index' → logprob: -21.2500057220459
    9. '_index' → logprob: -21.6250057220459
    10. '.get' → logprob: -21.6250057220459

Token 169: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -1.981667537620524e-06
    2. '(' → logprob: -13.375001907348633
    3. 'h' → logprob: -15.250001907348633
    4. ' (' → logprob: -16.625001907348633
    5. '(x' → logprob: -18.750001907348633
    6. '(str' → logprob: -19.000001907348633
    7. '((' → logprob: -19.000001907348633
    8. '(int' → logprob: -19.250001907348633
    9. '[h' → logprob: -19.500001907348633
    10. '(s' → logprob: -20.375001907348633

Token 170: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.04860372841358185
    2. ')' → logprob: -3.0486037731170654
    3. ')
' → logprob: -12.298604011535645
    4. '),' → logprob: -12.548604011535645
    5. ')+' → logprob: -12.798604011535645
    6. '   ' → logprob: -13.298604011535645
    7. ')y' → logprob: -13.423604011535645
    8. ',' → logprob: -14.048604011535645
    9. ' )
' → logprob: -14.548604011535645
    10. 'def' → logprob: -14.673604011535645

Token 171: '   ' (ID: 271)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.011488907970488071
    2. '   ' → logprob: -4.511488914489746
    3. ' y' → logprob: -7.761488914489746
    4. '
' → logprob: -12.136488914489746
    5. '    
' → logprob: -12.386488914489746
    6. '	y' → logprob: -13.011488914489746
    7. '    ' → logprob: -13.761488914489746
    8. ' ' → logprob: -13.761488914489746
    9. '  ' → logprob: -14.761488914489746
    10. '  
' → logprob: -15.761488914489746

Token 172: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.0005537479883059859
    2. ' y' → logprob: -7.500553607940674
    3. '   ' → logprob: -14.375554084777832
    4. 'return' → logprob: -16.250553131103516
    5. '  ' → logprob: -17.375553131103516
    6. '	y' → logprob: -17.375553131103516
    7. ' ' → logprob: -17.625553131103516
    8. 'x' → logprob: -18.250553131103516
    9. ''y' → logprob: -18.625553131103516
    10. '    ' → logprob: -18.750553131103516

Token 173: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759408473968506
    2. ' =' → logprob: -0.8259408473968506
    3. '=v' → logprob: -13.95094108581543
    4. ' ' → logprob: -16.20094108581543
    5. ' =
' → logprob: -16.32594108581543
    6. '=
' → logprob: -16.45094108581543
    7. '   ' → logprob: -16.70094108581543
    8. 'v' → logprob: -16.82594108581543
    9. ')' → logprob: -17.32594108581543
    10. '=y' → logprob: -18.20094108581543

Token 174: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.16022564470767975
    2. ' v' → logprob: -1.9102256298065186
    3. '(v' → logprob: -14.285225868225098
    4. '   ' → logprob: -15.160225868225098
    5. ' ' → logprob: -15.535225868225098
    6. '	v' → logprob: -15.785225868225098
    7. '  ' → logprob: -16.41022491455078
    8. ')v' → logprob: -17.03522491455078
    9. '_v' → logprob: -17.41022491455078
    10. 'vl' → logprob: -17.53522491455078

Token 175: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -3.128163257315464e-07
    2. 'index' → logprob: -15.125
    3. ' list' → logprob: -18.125
    4. '.index' → logprob: -20.375
    5. '_list' → logprob: -20.375
    6. 'v' → logprob: -20.875
    7. 'List' → logprob: -21.5
    8. '	list' → logprob: -21.875
    9. 'lista' → logprob: -22.125
    10. '.list' → logprob: -22.25

Token 176: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.0009122979827225208
    2. 'index' → logprob: -7.000912189483643
    3. ' index' → logprob: -15.0009126663208
    4. ' .' → logprob: -15.1259126663208
    5. '.' → logprob: -16.375911712646484
    6. '#index' → logprob: -17.000911712646484
    7. '(index' → logprob: -17.625911712646484
    8. '.Index' → logprob: -17.750911712646484
    9. '_index' → logprob: -18.500911712646484
    10. '	index' → logprob: -18.875911712646484

Token 177: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -2.2200749754119897e-06
    2. '(' → logprob: -13.125001907348633
    3. ' (' → logprob: -15.875001907348633
    4. 'v' → logprob: -18.375001907348633
    5. '(y' → logprob: -20.500001907348633
    6. '(
' → logprob: -21.375001907348633
    7. '(s' → logprob: -21.625001907348633
    8. '((' → logprob: -21.625001907348633
    9. '(vertical' → logprob: -22.000001907348633
    10. '?v' → logprob: -22.250001907348633

Token 178: ')
' (ID: 446)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.007872898131608963
    2. ')' → logprob: -4.882873058319092
    3. ')v' → logprob: -8.757872581481934
    4. '(v' → logprob: -9.382872581481934
    5. '))' → logprob: -11.757872581481934
    6. ' v' → logprob: -12.132872581481934
    7. '])' → logprob: -12.632872581481934
    8. 's' → logprob: -13.507872581481934
    9. '[v' → logprob: -13.507872581481934
    10. '')' → logprob: -13.507872581481934

Token 179: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003868831554427743
    2. 'return' → logprob: -5.87886905670166
    3. ' return' → logprob: -7.00386905670166
    4. '<|end|>' → logprob: -9.37886905670166
    5. '	return' → logprob: -10.00386905670166
    6. ')' → logprob: -11.62886905670166
    7. '
' → logprob: -12.00386905670166
    8. '  ' → logprob: -12.75386905670166
    9. ' ' → logprob: -13.12886905670166
    10. ':return' → logprob: -13.37886905670166

Token 180: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5928191542625427
    2. ' return' → logprob: -0.8428191542625427
    3. '   ' → logprob: -4.0928192138671875
    4. '	return' → logprob: -10.217819213867188
    5. ':return' → logprob: -12.092819213867188
    6. ' ' → logprob: -12.967819213867188
    7. '  ' → logprob: -15.092819213867188
    8. ' ' → logprob: -15.342819213867188
    9. '{return' → logprob: -15.467819213867188
    10. 'eturn' → logprob: -15.842819213867188

Token 181: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.1767183393239975
    2. '(x' → logprob: -1.9267183542251587
    3. '(y' → logprob: -4.176718235015869
    4. 'x' → logprob: -7.426718235015869
    5. ' x' → logprob: -8.426718711853027
    6. ' y' → logprob: -9.301718711853027
    7. 'y' → logprob: -9.676718711853027
    8. '(' → logprob: -10.176718711853027
    9. '   ' → logprob: -12.551718711853027
    10. ' ' → logprob: -15.801718711853027

Token 182: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.008626160211861134
    2. ' x' → logprob: -4.7586259841918945
    3. 'y' → logprob: -11.508625984191895
    4. ' y' → logprob: -13.883625984191895
    5. ')x' → logprob: -14.758625984191895
    6. '	x' → logprob: -16.25862693786621
    7. '(x' → logprob: -16.50862693786621
    8. ')' → logprob: -17.13362693786621
    9. '   ' → logprob: -17.13362693786621
    10. ',x' → logprob: -17.88362693786621

Token 183: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3909072279930115
    2. ',y' → logprob: -1.1409072875976562
    3. ' ,' → logprob: -5.515907287597656
    4. ')' → logprob: -13.015907287597656
    5. ' y' → logprob: -13.765907287597656
    6. 'y' → logprob: -14.015907287597656
    7. '   ' → logprob: -14.765907287597656
    8. ',
' → logprob: -14.890907287597656
    9. ',x' → logprob: -15.140907287597656
    10. ' ' → logprob: -16.015907287597656

Token 184: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ')
' → logprob: -16.375
    3. ' )' → logprob: -16.5
    4. ')return' → logprob: -18.25
    5. ')#' → logprob: -18.5
    6. '),' → logprob: -18.625
    7. '<|end|>' → logprob: -19.0
    8. '')' → logprob: -19.25
    9. '}' → logprob: -19.375
    10. ')

' → logprob: -19.5

Token 185: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.620622712536715e-05
    2. '```' → logprob: -11.125045776367188
    3. 'import' → logprob: -11.375045776367188
    4. 'class' → logprob: -12.500045776367188
    5. '<|end|>' → logprob: -12.625045776367188
    6. '<|end|>' → logprob: -12.625045776367188
    7. '\' → logprob: -12.750045776367188
    8. '#' → logprob: -12.750045776367188
    9. '
' → logprob: -14.125045776367188
    10. ' def' → logprob: -14.125045776367188

Token 186: ' inside' (ID: 6772)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.2085739374160767
    2. 'd' → logprob: -1.7085739374160767
    3. ' shortest' → logprob: -1.8335739374160767
    4. ' find' → logprob: -2.458573818206787
    5. 'short' → logprob: -3.333573818206787
    6. ' main' → logprob: -3.458573818206787
    7. 'solve' → logprob: -3.583573818206787
    8. ' solve' → logprob: -3.708573818206787
    9. 'main' → logprob: -3.708573818206787
    10. 'find' → logprob: -3.958573818206787

Token 187: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.04545705020427704
    2. '_grid' → logprob: -3.545457124710083
    3. '(grid' → logprob: -4.920456886291504
    4. '_board' → logprob: -6.420456886291504
    5. '_map' → logprob: -6.670456886291504
    6. '(' → logprob: -6.670456886291504
    7. '(point' → logprob: -6.920456886291504
    8. '(coord' → logprob: -6.920456886291504
    9. '_bounds' → logprob: -7.420456886291504
    10. '_coord' → logprob: -8.170456886291504

Token 188: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.25210410356521606
    2. ',y' → logprob: -1.5021040439605713
    3. ' ,' → logprob: -9.377103805541992
    4. 'y' → logprob: -9.752103805541992
    5. ',Y' → logprob: -12.002103805541992
    6. ',x' → logprob: -12.252103805541992
    7. ',len' → logprob: -12.627103805541992
    8. ',n' → logprob: -12.627103805541992
    9. ',int' → logprob: -13.002103805541992
    10. ',length' → logprob: -13.002103805541992

Token 189: ',M' (ID: 54127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005113630089908838
    2. ' ,' → logprob: -5.75511360168457
    3. ',h' → logprob: -6.50511360168457
    4. ',len' → logprob: -8.25511360168457
    5. ',length' → logprob: -9.63011360168457
    6. ',width' → logprob: -10.00511360168457
    7. ',x' → logprob: -10.75511360168457
    8. ',n' → logprob: -11.13011360168457
    9. ',w' → logprob: -12.50511360168457
    10. ',int' → logprob: -12.50511360168457

Token 190: ',N' (ID: 49539)
  Prédit: ',N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',N' → logprob: -0.9994804859161377
    2. ',H' → logprob: -1.1244804859161377
    3. ',' → logprob: -2.1244804859161377
    4. ',W' → logprob: -2.2494804859161377
    5. ',M' → logprob: -3.6244804859161377
    6. ',x' → logprob: -3.7494804859161377
    7. '):' → logprob: -4.874480247497559
    8. ',w' → logprob: -5.249480247497559
    9. 'x' → logprob: -5.499480247497559
    10. ',n' → logprob: -5.999480247497559

Token 191: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -7.862962229410186e-05
    2. ')' → logprob: -10.000078201293945
    3. '):
' → logprob: -10.375078201293945
    4. ' ):' → logprob: -13.875078201293945
    5. ':' → logprob: -14.750078201293945
    6. ',' → logprob: -15.125078201293945
    7. '):

' → logprob: -16.000078201293945
    8. '):
' → logprob: -16.375078201293945
    9. '   ' → logprob: -16.500078201293945
    10. '}:' → logprob: -18.250078201293945

Token 192: '   ' (ID: 271)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5214026570320129
    2. 'return' → logprob: -1.0214025974273682
    3. ' return' → logprob: -3.771402597427368
    4. '   ' → logprob: -3.771402597427368
    5. ' ' → logprob: -8.646402359008789
    6. '	return' → logprob: -12.146402359008789
    7. '  ' → logprob: -13.896402359008789
    8. '```' → logprob: -14.771402359008789
    9. '(' → logprob: -15.021402359008789
    10. '
' → logprob: -15.271402359008789

Token 193: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5789081454277039
    2. 'return' (adapté à ' return') → logprob: -0.8289081454277039
    3. ' return' → logprob: -5.8289079666137695
    4. ' ' → logprob: -11.20390796661377
    5. '   ' → logprob: -12.07890796661377
    6. '(' → logprob: -12.57890796661377
    7. '	return' → logprob: -16.078908920288086
    8. '```' → logprob: -16.578908920288086
    9. '(return' → logprob: -17.078908920288086
    10. '
' → logprob: -17.328908920288086

Token 194: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017424124525859952
    2. ' ' → logprob: -6.751742362976074
    3. '(' → logprob: -7.501742362976074
    4. ' (' → logprob: -11.001742362976074
    5. 'x' → logprob: -12.876742362976074
    6. '(x' → logprob: -14.626742362976074
    7. ' x' → logprob: -15.376742362976074
    8. '   ' → logprob: -16.75174331665039
    9. ' ' → logprob: -18.37674331665039
    10. '```' → logprob: -20.50174331665039

Token 195: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.829823102336377e-05
    2. '(' → logprob: -9.25009822845459
    3. ' ' → logprob: -13.50009822845459
    4. 'x' → logprob: -14.37509822845459
    5. '(x' → logprob: -16.500099182128906
    6. ' (' → logprob: -16.500099182128906
    7. '   ' → logprob: -20.125099182128906
    8. '```' → logprob: -21.250099182128906
    9. ' x' → logprob: -21.625099182128906
    10. '`' → logprob: -22.000099182128906

Token 196: '<=' (ID: 16672)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5953565835952759
    2. '<=' → logprob: -0.8453565835952759
    3. ' <=' → logprob: -4.095356464385986
    4. ' <' → logprob: -5.970356464385986
    5. '<x' → logprob: -10.845356941223145
    6. 'x' → logprob: -12.470356941223145
    7. '<(' → logprob: -13.845356941223145
    8. ' ' → logprob: -15.220356941223145
    9. '<len' → logprob: -15.345356941223145
    10. '   ' → logprob: -15.595356941223145

Token 197: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.15310683415737e-05
    2. ' x' → logprob: -10.750021934509277
    3. '	x' → logprob: -19.37502098083496
    4. '"x' → logprob: -20.75002098083496
    5. ')x' → logprob: -20.87502098083496
    6. '(x' → logprob: -21.50002098083496
    7. '{x' → logprob: -22.62502098083496
    8. '```' → logprob: -22.62502098083496
    9. ''x' → logprob: -22.62502098083496
    10. '<x' → logprob: -22.87502098083496

Token 198: '<M' (ID: 59431)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.4554551839828491
    2. '<M' → logprob: -1.3304551839828491
    3. 'x' → logprob: -3.5804553031921387
    4. '<x' → logprob: -3.5804553031921387
    5. ' <' → logprob: -4.080455303192139
    6. 'and' → logprob: -4.080455303192139
    7. ' and' → logprob: -4.830455303192139
    8. '<N' → logprob: -5.955455303192139
    9. 'M' → logprob: -7.080455303192139
    10. ' x' → logprob: -7.705455303192139

Token 199: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10026879608631134
    2. 'and' → logprob: -2.350268840789795
    3. '0' → logprob: -9.725268363952637
    4. '   ' → logprob: -14.225268363952637
    5. ' ' → logprob: -14.600268363952637
    6. '&' → logprob: -14.600268363952637
    7. '&&' → logprob: -14.725268363952637
    8. ' &&' → logprob: -16.475269317626953
    9. '1' → logprob: -16.475269317626953
    10. ' &' → logprob: -16.975269317626953

Token 200: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000488110730657354
    2. ' ' → logprob: -7.62548828125
    3. 'y' → logprob: -17.87548828125
    4. ' y' → logprob: -20.00048828125
    5. ' ' → logprob: -20.12548828125
    6. '   ' → logprob: -20.25048828125
    7. '  ' → logprob: -20.75048828125
    8. '<|end|>' → logprob: -21.25048828125
    9. '
' → logprob: -22.25048828125
    10. 'x' → logprob: -22.62548828125

Token 201: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.709308167453855e-05
    2. 'y' → logprob: -9.875086784362793
    3. ' ' → logprob: -10.250086784362793
    4. ' y' → logprob: -15.125086784362793
    5. 'x' → logprob: -19.37508773803711
    6. '   ' → logprob: -19.62508773803711
    7. '1' → logprob: -21.00008773803711
    8. '۰' → logprob: -21.12508773803711
    9. '  ' → logprob: -21.62508773803711
    10. 'Y' → logprob: -22.25008773803711

Token 202: '<=' (ID: 16672)
  Prédit: '<N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<N' → logprob: -0.0008198728901334107
    2. 'N' → logprob: -7.750819683074951
    3. '<' → logprob: -8.50082015991211
    4. '>N' → logprob: -8.75082015991211
    5. '<=' → logprob: -12.12582015991211
    6. 'y' → logprob: -12.25082015991211
    7. '0' → logprob: -12.37582015991211
    8. '>' → logprob: -12.75082015991211
    9. ' <' → logprob: -13.50082015991211
    10. '
' → logprob: -13.87582015991211

Token 203: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00014287306112237275
    2. ' y' → logprob: -8.875143051147461
    3. 'N' → logprob: -12.875143051147461
    4. 'x' → logprob: -15.125143051147461
    5. '	y' → logprob: -16.75014305114746
    6. '```' → logprob: -17.25014305114746
    7. '   ' → logprob: -17.62514305114746
    8. '1' → logprob: -17.87514305114746
    9. ''y' → logprob: -18.00014305114746
    10. 'Y' → logprob: -18.00014305114746

Token 204: '<N' (ID: 60262)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.2015480101108551
    2. '<N' → logprob: -1.7015479803085327
    3. ' N' → logprob: -9.326547622680664
    4. '<' → logprob: -10.701547622680664
    5. ' <' → logprob: -12.076547622680664
    6. '	N' → logprob: -12.576547622680664
    7. '>N' → logprob: -12.576547622680664
    8. ' ' → logprob: -13.576547622680664
    9. ''N' → logprob: -13.701547622680664
    10. '<=' → logprob: -13.826547622680664

Token 205: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.009497403167188168
    2. '<|end|>' → logprob: -4.884497165679932
    3. '<|end|>' → logprob: -6.384497165679932
    4. '\' → logprob: -9.25949764251709
    5. '```' → logprob: -10.75949764251709
    6. ' def' → logprob: -11.50949764251709
    7. '
' → logprob: -11.50949764251709
    8. '.' → logprob: -12.00949764251709
    9. '#' → logprob: -12.13449764251709
    10. '

' → logprob: -12.13449764251709

Token 206: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.4121114822482923e-06
    2. 'class' → logprob: -13.000003814697266
    3. 'import' → logprob: -14.625003814697266
    4. '```' → logprob: -15.375003814697266
    5. ' def' → logprob: -15.750003814697266
    6. '#' → logprob: -16.500003814697266
    7. '    
' → logprob: -16.750003814697266
    8. '\' → logprob: -17.875003814697266
    9. '  
' → logprob: -17.875003814697266
    10. '    

' → logprob: -18.125003814697266

Token 207: ' signal' (ID: 12884)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.7610559463500977
    2. 'd' → logprob: -1.3860559463500977
    3. ' shortest' → logprob: -1.7610559463500977
    4. ' find' → logprob: -3.3860559463500977
    5. 'short' → logprob: -3.7610559463500977
    6. ' solve' → logprob: -4.261055946350098
    7. 'solve' → logprob: -4.261055946350098
    8. ' main' → logprob: -5.011055946350098
    9. 'find' → logprob: -5.261055946350098
    10. 'main' → logprob: -5.761055946350098

Token 208: '_state' (ID: 9479)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -1.1285725831985474
    2. '_cycle' → logprob: -1.5035725831985474
    3. '_state' → logprob: -1.6285725831985474
    4. '_phase' → logprob: -3.003572463989258
    5. '_signal' → logprob: -3.378572463989258
    6. '(s' → logprob: -3.753572463989258
    7. '_cycles' → logprob: -4.128572463989258
    8. '_timer' → logprob: -4.378572463989258
    9. '_schedule' → logprob: -4.628572463989258
    10. '(signal' → logprob: -4.753572463989258

Token 209: '_at' (ID: 8254)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.7991251349449158
    2. '(time' → logprob: -1.5491251945495605
    3. '(signal' → logprob: -1.5491251945495605
    4. '(s' → logprob: -2.7991251945495605
    5. '(state' → logprob: -3.2991251945495605
    6. '(c' → logprob: -4.5491251945495605
    7. '(h' → logprob: -4.9241251945495605
    8. '(current' → logprob: -6.1741251945495605
    9. '(step' → logprob: -6.6741251945495605
    10. '(ts' → logprob: -7.0491251945495605

Token 210: '(signal' (ID: 131357)
  Prédit: '(time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(time' → logprob: -0.08448786288499832
    2. '(signal' → logprob: -2.5844879150390625
    3. '(t' → logprob: -6.4594879150390625
    4. '(s' → logprob: -6.5844879150390625
    5. '(timestamp' → logprob: -6.9594879150390625
    6. 'time' → logprob: -7.2094879150390625
    7. '(times' → logprob: -8.334487915039062
    8. '(schedule' → logprob: -9.084487915039062
    9. '(' → logprob: -9.334487915039062
    10. ' time' → logprob: -9.584487915039062

Token 211: '_k' (ID: 11637)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0585077628493309
    2. '_time' → logprob: -3.1835076808929443
    3. 'time' → logprob: -4.808507919311523
    4. ',time' → logprob: -5.808507919311523
    5. ' ,' → logprob: -6.183507919311523
    6. ',state' → logprob: -7.308507919311523
    7. ',t' → logprob: -8.558507919311523
    8. '_,' → logprob: -8.933507919311523
    9. ',s' → logprob: -9.058507919311523
    10. '_timestamp' → logprob: -9.058507919311523

Token 212: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.420911967754364
    2. 'time' → logprob: -1.7959120273590088
    3. ',time' → logprob: -2.170912027359009
    4. '_time' → logprob: -3.045912027359009
    5. ',s' → logprob: -5.17091178894043
    6. ',t' → logprob: -5.79591178894043
    7. ')' → logprob: -6.04591178894043
    8. ',state' → logprob: -6.92091178894043
    9. ' ,' → logprob: -8.17091178894043
    10. 'ey' → logprob: -8.17091178894043

Token 213: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6897850036621094
    2. 'time' → logprob: -0.8147850036621094
    3. 'current' → logprob: -3.8147850036621094
    4. ' t' → logprob: -4.564785003662109
    5. ' time' → logprob: -4.689785003662109
    6. 'T' → logprob: -5.564785003662109
    7. 'start' → logprob: -5.939785003662109
    8. ' current' → logprob: -6.564785003662109
    9. 'cycle' → logprob: -6.564785003662109
    10. 'cur' → logprob: -7.064785003662109

Token 214: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.013047521933913231
    2. '):
' → logprob: -4.388047695159912
    3. ')' → logprob: -7.763047695159912
    4. ',' → logprob: -10.013047218322754
    5. '):

' → logprob: -10.013047218322754
    6. '):
' → logprob: -11.638047218322754
    7. '_' → logprob: -12.388047218322754
    8. ' ):' → logprob: -12.763047218322754
    9. 's' → logprob: -13.388047218322754
    10. 'def' → logprob: -14.013047218322754

Token 215: '   ' (ID: 271)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.9250141978263855
    2. '   ' → logprob: -1.0500142574310303
    3. 'return' → logprob: -1.9250142574310303
    4. 'period' → logprob: -3.3000142574310303
    5. '#' → logprob: -3.8000142574310303
    6. 'phase' → logprob: -4.175014019012451
    7. ' cycle' → logprob: -4.300014019012451
    8. ' return' → logprob: -5.175014019012451
    9. 'cycles' → logprob: -5.925014019012451
    10. 'interval' → logprob: -6.175014019012451

Token 216: ' #' (ID: 1069)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.18450184166431427
    2. 'return' → logprob: -3.059501886367798
    3. 'green' → logprob: -3.434501886367798
    4. 'G' → logprob: -3.434501886367798
    5. 'g' → logprob: -4.059501647949219
    6. '#' (adapté à ' #') → logprob: -4.184501647949219
    7. 'period' → logprob: -5.184501647949219
    8. 'if' → logprob: -5.684501647949219
    9. '   ' → logprob: -6.059501647949219
    10. 'cycles' → logprob: -6.184501647949219

Token 217: ' signal' (ID: 12884)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.26703083515167236
    2. 'period' → logprob: -1.8920308351516724
    3. '#' → logprob: -3.017030715942383
    4. 'return' → logprob: -4.642030715942383
    5. ' cycle' → logprob: -4.642030715942383
    6. '   ' → logprob: -6.142030715942383
    7. 'green' → logprob: -6.517030715942383
    8. 'interval' → logprob: -6.767030715942383
    9. 'cycles' → logprob: -6.767030715942383
    10. 'phase' → logprob: -7.017030715942383

Token 218: ' changes' (ID: 6629)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6302186846733093
    2. 'def' → logprob: -1.505218744277954
    3. 'period' → logprob: -2.755218744277954
    4. '_k' → logprob: -3.255218744277954
    5. 'cycle' → logprob: -3.755218744277954
    6. 'phase' → logprob: -3.880218744277954
    7. '=' → logprob: -4.005218505859375
    8. '#' → logprob: -4.505218505859375
    9. ' =' → logprob: -5.130218505859375
    10. 'signal' → logprob: -5.255218505859375

Token 219: ' every' (ID: 1753)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8788172602653503
    2. 't' → logprob: -1.1288173198699951
    3. ' =' → logprob: -2.378817319869995
    4. 'every' → logprob: -3.253817319869995
    5. '   ' → logprob: -3.378817319869995
    6. 'def' → logprob: -3.628817319869995
    7. 'return' → logprob: -4.128817081451416
    8. ' every' → logprob: -4.253817081451416
    9. 'state' → logprob: -4.753817081451416
    10. 'at' → logprob: -4.878817081451416

Token 220: ' k' (ID: 372)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '5' → logprob: -0.6058520674705505
    2. '30' → logprob: -1.8558521270751953
    3. '10' → logprob: -2.3558521270751953
    4. '60' → logprob: -2.6058521270751953
    5. '2' → logprob: -2.9808521270751953
    6. '15' → logprob: -3.4808521270751953
    7. 't' → logprob: -4.355852127075195
    8. '1' → logprob: -4.480852127075195
    9. '3' → logprob: -4.480852127075195
    10. '20' → logprob: -5.605852127075195

Token 221: ' minutes' (ID: 5438)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.9033803939819336
    2. '//' → logprob: -0.9033803939819336
    3. 'def' → logprob: -3.0283803939819336
    4. ' ' → logprob: -3.6533803939819336
    5. ' //' → logprob: -3.7783803939819336
    6. '#' → logprob: -4.028380393981934
    7. 'signal' → logprob: -4.028380393981934
    8. ' signal' → logprob: -4.653380393981934
    9. ' seconds' → logprob: -4.903380393981934
    10. ' *' → logprob: -5.403380393981934

Token 222: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27236783504486084
    2. 'cycle' → logprob: -2.5223679542541504
    3. 'period' → logprob: -3.1473679542541504
    4. 'if' → logprob: -3.5223679542541504
    5. ' cycle' → logprob: -3.5223679542541504
    6. 'phase' → logprob: -3.6473679542541504
    7. ' if' → logprob: -4.52236795425415
    8. ' period' → logprob: -5.02236795425415
    9. ' phase' → logprob: -5.14736795425415
    10. 'return' → logprob: -5.89736795425415

Token 223: ' starting' (ID: 8601)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.11400824040174484
    2. '(t' → logprob: -3.1140081882476807
    3. '   ' → logprob: -3.2390081882476807
    4. 't' → logprob: -4.73900842666626
    5. 'if' → logprob: -4.98900842666626
    6. ' return' → logprob: -5.73900842666626
    7. '(signal' → logprob: -5.86400842666626
    8. 'signal' → logprob: -7.23900842666626
    9. '((' → logprob: -7.86400842666626
    10. 'def' → logprob: -8.114007949829102

Token 224: ' with' (ID: 483)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.21248498558998108
    2. 'at' → logprob: -2.4624850749969482
    3. 'with' → logprob: -2.8374850749969482
    4. ' at' → logprob: -4.462484836578369
    5. '=' → logprob: -4.587484836578369
    6. 'state' → logprob: -4.837484836578369
    7. ' with' → logprob: -5.587484836578369
    8. ' from' → logprob: -5.712484836578369
    9. '=False' → logprob: -6.337484836578369
    10. '=True' → logprob: -6.462484836578369

Token 225: ' NS' (ID: 6950)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7049839496612549
    2. 'green' → logprob: -0.9549839496612549
    3. 'red' → logprob: -3.079983949661255
    4. 'True' → logprob: -3.579983949661255
    5. '0' → logprob: -4.079983711242676
    6. '"' → logprob: -4.329983711242676
    7. 'Green' → logprob: -5.079983711242676
    8. ' green' → logprob: -6.454983711242676
    9. '1' → logprob: -6.579983711242676
    10. ''E' → logprob: -6.704983711242676

Token 226: ' green' (ID: 8851)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5911246538162231
    2. 'cycle' → logprob: -1.7161246538162231
    3. 'phase' → logprob: -1.8411246538162231
    4. '   ' → logprob: -3.0911245346069336
    5. 'period' → logprob: -3.5911245346069336
    6. 'def' → logprob: -5.091124534606934
    7. ' if' → logprob: -5.216124534606934
    8. ' cycle' → logprob: -5.591124534606934
    9. 'signal' → logprob: -5.591124534606934
    10. 'state' → logprob: -5.716124534606934

Token 227: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7061263918876648
    2. 'def' → logprob: -0.9561263918876648
    3. ' if' → logprob: -3.7061264514923096
    4. 'if' → logprob: -3.8311264514923096
    5. 'cycle' → logprob: -3.8311264514923096
    6. ' cycle' → logprob: -4.2061262130737305
    7. 'period' → logprob: -4.3311262130737305
    8. ' period' → logprob: -4.5811262130737305
    9. 'signal' → logprob: -6.0811262130737305
    10. ' def' → logprob: -6.2061262130737305

Token 228: 'i' (ID: 72)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.17075610160827637
    2. 'True' → logprob: -3.0457561016082764
    3. '(t' → logprob: -3.4207561016082764
    4. '0' → logprob: -4.0457563400268555
    5. ' t' → logprob: -4.1707563400268555
    6. 'def' → logprob: -4.9207563400268555
    7. ' (' → logprob: -5.1707563400268555
    8. 'if' → logprob: -5.4207563400268555
    9. ' True' → logprob: -5.4207563400268555
    10. 'signal' → logprob: -5.6707563400268555

Token 229: '.e' (ID: 2560)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04789308086037636
    2. 'm' → logprob: -3.7978930473327637
    3. 't' → logprob: -4.672893047332764
    4. 's' → logprob: -4.922893047332764
    5. 'def' → logprob: -6.422893047332764
    6. 'import' → logprob: -6.922893047332764
    7. 'N' → logprob: -7.172893047332764
    8. 'f' → logprob: -7.297893047332764
    9. '0' → logprob: -7.672893047332764
    10. '=' → logprob: -7.922893047332764

Token 230: '.' (ID: 13)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.921575665473938
    2. 'green' → logprob: -2.0465755462646484
    3. ' green' → logprob: -2.1715755462646484
    4. ''' → logprob: -2.1715755462646484
    5. '#' → logprob: -3.2965755462646484
    6. ' '' → logprob: -3.4215755462646484
    7. '=' → logprob: -3.5465755462646484
    8. ')' → logprob: -3.6715755462646484
    9. '0' → logprob: -4.546575546264648
    10. ' =' → logprob: -4.796575546264648

Token 231: ' EW' (ID: 143307)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0741385966539383
    2. '(t' → logprob: -3.199138641357422
    3. ' t' → logprob: -4.699138641357422
    4. 'True' → logprob: -4.824138641357422
    5. '0' → logprob: -5.449138641357422
    6. 'green' → logprob: -5.949138641357422
    7. ' (' → logprob: -6.324138641357422
    8. 'signal' → logprob: -6.699138641357422
    9. ' green' → logprob: -7.074138641357422
    10. 'Green' → logprob: -8.449138641357422

Token 232: ' red' (ID: 3592)
  Prédit: ' green'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' green' → logprob: -0.5111697912216187
    2. '_green' → logprob: -1.5111697912216187
    3. 'green' → logprob: -1.7611697912216187
    4. ' is' → logprob: -6.011169910430908
    5. ' red' → logprob: -6.511169910430908
    6. '-green' → logprob: -6.761169910430908
    7. '_red' → logprob: -7.136169910430908
    8. ' at' → logprob: -7.761169910430908
    9. 'red' → logprob: -8.26116943359375
    10. '_GREEN' → logprob: -8.38616943359375

Token 233: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1797322779893875
    2. '),' → logprob: -2.304732322692871
    3. ' at' → logprob: -3.554732322692871
    4. ',' → logprob: -4.054732322692871
    5. ')
' → logprob: -4.679732322692871
    6. ' for' → logprob: -5.554732322692871
    7. ' )' → logprob: -6.554732322692871
    8. 'def' → logprob: -6.679732322692871
    9. ' and' → logprob: -7.429732322692871
    10. '#' → logprob: -7.929732322692871

Token 234: ' at' (ID: 540)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.6893364191055298
    2. '   ' → logprob: -1.9393364191055298
    3. 'period' → logprob: -1.9393364191055298
    4. 'phase' → logprob: -2.0643362998962402
    5. 'if' → logprob: -3.6893362998962402
    6. 'k' → logprob: -3.9393362998962402
    7. 't' → logprob: -4.56433629989624
    8. ' cycle' → logprob: -4.68933629989624
    9. 'def' → logprob: -4.81433629989624
    10. 'p' → logprob: -5.68933629989624

Token 235: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3412531614303589
    2. '0' → logprob: -1.3412531614303589
    3. 'time' → logprob: -3.5912532806396484
    4. ' t' → logprob: -10.466253280639648
    5. ' time' → logprob: -12.341253280639648
    6. ' ' → logprob: -13.091253280639648
    7. 'signal' → logprob: -13.591253280639648
    8. 'minute' → logprob: -13.966253280639648
    9. '#' → logprob: -14.341253280639648
    10. 'start' → logprob: -14.841253280639648

Token 236: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0020878082141280174
    2. '0' → logprob: -6.252087593078613
    3. ' =' → logprob: -9.127087593078613
    4. '%' → logprob: -10.127087593078613
    5. '==' → logprob: -12.127087593078613
    6. 'def' → logprob: -12.627087593078613
    7. '%=' → logprob: -14.377087593078613
    8. ' %' → logprob: -14.752087593078613
    9. ' ' → logprob: -15.627087593078613
    10. 'mod' → logprob: -15.877087593078613

Token 237: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7968066206085496e-05
    2. ' ' → logprob: -10.500027656555176
    3. '=' → logprob: -15.375027656555176
    4. '   ' → logprob: -17.000028610229492
    5. '00' → logprob: -17.500028610229492
    6. '```' → logprob: -17.625028610229492
    7. '000' → logprob: -17.687528610229492
    8. 't' → logprob: -17.875028610229492
    9. '  ' → logprob: -17.937528610229492
    10. '`' → logprob: -17.937528610229492

Token 238: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13803188502788544
    2. 'cycle' → logprob: -2.7630319595336914
    3. 'phase' → logprob: -3.0130319595336914
    4. 'if' → logprob: -5.138031959533691
    5. 't' → logprob: -5.388031959533691
    6. 'period' → logprob: -6.013031959533691
    7. 'def' → logprob: -6.888031959533691
    8. ' cycle' → logprob: -7.263031959533691
    9. ' phase' → logprob: -7.513031959533691
    10. 'mod' → logprob: -8.263031959533691

Token 239: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5584931969642639
    2. 'cycle' → logprob: -1.3084931373596191
    3. 'phase' → logprob: -2.058493137359619
    4. 'if' → logprob: -4.558493137359619
    5. 'period' → logprob: -4.683493137359619
    6. 'def' → logprob: -5.933493137359619
    7. 't' → logprob: -6.308493137359619
    8. ' cycle' → logprob: -6.683493137359619
    9. '```' → logprob: -7.308493137359619
    10. 'c' → logprob: -7.433493137359619

Token 240: ' #' (ID: 1069)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.10184407234191895
    2. 'period' → logprob: -3.351844072341919
    3. 'phase' → logprob: -3.601844072341919
    4. ' cycle' → logprob: -4.10184383392334
    5. 'k' → logprob: -5.10184383392334
    6. '   ' → logprob: -5.22684383392334
    7. 'if' → logprob: -5.72684383392334
    8. 't' → logprob: -6.72684383392334
    9. 'p' → logprob: -7.97684383392334
    10. ' period' → logprob: -8.22684383392334

Token 241: ' we' (ID: 581)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.03347763046622276
    2. 'period' → logprob: -4.158477783203125
    3. 'phase' → logprob: -4.658477783203125
    4. 't' → logprob: -5.658477783203125
    5. 'if' → logprob: -6.158477783203125
    6. ' cycle' → logprob: -6.658477783203125
    7. 'k' → logprob: -8.408477783203125
    8. 'p' → logprob: -8.783477783203125
    9. 'cycles' → logprob: -9.033477783203125
    10. 'c' → logprob: -9.158477783203125

Token 242: ' return' (ID: 622)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2090309113264084
    2. 'ass' → logprob: -2.959030866622925
    3. 'need' → logprob: -2.959030866622925
    4. '   ' → logprob: -3.709030866622925
    5. ' assume' → logprob: -4.709031105041504
    6. '#' → logprob: -4.834031105041504
    7. 'continue' → logprob: -5.084031105041504
    8. ' need' → logprob: -5.334031105041504
    9. 'can' → logprob: -5.459031105041504
    10. 'know' → logprob: -5.709031105041504

Token 243: ' True' (ID: 6432)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.23105932772159576
    2. '('' → logprob: -2.1060593128204346
    3. ' '' → logprob: -3.8560593128204346
    4. '"' → logprob: -4.606059551239014
    5. ' (' → logprob: -4.731059551239014
    6. ''E' → logprob: -4.731059551239014
    7. '(True' → logprob: -5.231059551239014
    8. '(NS' → logprob: -5.231059551239014
    9. 'True' → logprob: -5.356059551239014
    10. '(' → logprob: -5.731059551239014

Token 244: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.49230921268463135
    2. 'if' → logprob: -1.3673092126846313
    3. ' for' → logprob: -2.367309093475342
    4. 'for' → logprob: -3.242309093475342
    5. ',' → logprob: -7.742309093475342
    6. ' (' → logprob: -8.3673095703125
    7. '(signal' → logprob: -9.2423095703125
    8. ' ' → logprob: -9.3673095703125
    9. ' #' → logprob: -9.3673095703125
    10. ' signal' → logprob: -9.8673095703125

Token 245: ' EW' (ID: 143307)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5269514322280884
    2. 'signal' → logprob: -1.5269514322280884
    3. '(t' → logprob: -2.151951313018799
    4. '(' → logprob: -4.026951313018799
    5. ' signal' → logprob: -4.151951313018799
    6. '(signal' → logprob: -4.276951313018799
    7. ' (' → logprob: -4.401951313018799
    8. ' t' → logprob: -4.901951313018799
    9. '(NS' → logprob: -5.651951313018799
    10. 'NS' → logprob: -6.276951313018799

Token 246: ' green' (ID: 8851)
  Prédit: 'green'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'green' → logprob: -0.03392748907208443
    2. ' green' → logprob: -3.7839274406433105
    3. '_green' → logprob: -5.1589274406433105
    4. 'is' → logprob: -5.4089274406433105
    5. ' is' → logprob: -8.533927917480469
    6. 'Green' → logprob: -9.408927917480469
    7. 'signal' → logprob: -10.533927917480469
    8. 'allowed' → logprob: -10.908927917480469
    9. '-green' → logprob: -11.408927917480469
    10. ' ' → logprob: -11.658927917480469

Token 247: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49026593565940857
    2. 'def' → logprob: -1.490265965461731
    3. 'k' → logprob: -2.7402658462524414
    4. 'if' → logprob: -2.9902658462524414
    5. ' if' → logprob: -3.9902658462524414
    6. 'period' → logprob: -5.115265846252441
    7. 'cycle' → logprob: -5.615265846252441
    8. '```' → logprob: -5.990265846252441
    9. 'signal' → logprob: -5.990265846252441
    10. ' k' → logprob: -6.490265846252441

Token 248: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.030011730268597603
    2. ' False' → logprob: -3.5300116539001465
    3. 'else' → logprob: -9.405012130737305
    4. 'and' → logprob: -10.405012130737305
    5. ' else' → logprob: -10.405012130737305
    6. ' and' → logprob: -10.655012130737305
    7. ' not' → logprob: -11.155012130737305
    8. ' meaning' → logprob: -11.280012130737305
    9. 'not' → logprob: -11.405012130737305
    10. 'def' → logprob: -11.405012130737305

Token 249: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.26375213265419006
    2. 'if' → logprob: -1.5137521028518677
    3. '   ' → logprob: -5.638751983642578
    4. ' (' → logprob: -6.013751983642578
    5. ' at' → logprob: -6.263751983642578
    6. ' for' → logprob: -6.388751983642578
    7. ' otherwise' → logprob: -6.888751983642578
    8. 'otherwise' → logprob: -7.888751983642578
    9. 'for' → logprob: -8.263751983642578
    10. 'at' → logprob: -9.388751983642578

Token 250: ' EW' (ID: 143307)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.6972130537033081
    2. ' not' → logprob: -0.8222130537033081
    3. 'NS' → logprob: -2.8222131729125977
    4. ' NS' → logprob: -6.072213172912598
    5. 'False' → logprob: -8.322213172912598
    6. '(not' → logprob: -8.447213172912598
    7. '#' → logprob: -9.322213172912598
    8. 'Not' → logprob: -10.072213172912598
    9. 'NOT' → logprob: -10.322213172912598
    10. ' ' → logprob: -10.822213172912598

Token 251: ' red' (ID: 3592)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.1447780281305313
    2. ' red' → logprob: -2.01977801322937
    3. 'green' → logprob: -6.394778251647949
    4. ' green' → logprob: -8.14477825164795
    5. '_red' → logprob: -10.14477825164795
    6. ' is' → logprob: -10.76977825164795
    7. 'False' → logprob: -11.01977825164795
    8. ' ' → logprob: -11.26977825164795
    9. '(red' → logprob: -11.26977825164795
    10. 'false' → logprob: -12.01977825164795

Token 252: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05317145958542824
    2. 'def' → logprob: -3.553171396255493
    3. 'if' → logprob: -4.553171634674072
    4. ' if' → logprob: -4.928171634674072
    5. ' at' → logprob: -6.928171634674072
    6. 'k' → logprob: -7.553171634674072
    7. 't' → logprob: -7.553171634674072
    8. ',' → logprob: -7.928171634674072
    9. '```' → logprob: -7.928171634674072
    10. 'signal' → logprob: -8.053171157836914

Token 253: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04647849127650261
    2. 'if' → logprob: -3.796478509902954
    3. ' if' → logprob: -5.296478271484375
    4. 'k' → logprob: -5.421478271484375
    5. 'cycle' → logprob: -5.421478271484375
    6. 'period' → logprob: -5.796478271484375
    7. ' cycle' → logprob: -6.421478271484375
    8. 'def' → logprob: -6.671478271484375
    9. 't' → logprob: -7.296478271484375
    10. '```' → logprob: -7.421478271484375

Token 254: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.805243968963623
    2. 'cycle' → logprob: -1.555243968963623
    3. 'return' → logprob: -1.805243968963623
    4. 'phase' → logprob: -2.555243968963623
    5. 'period' → logprob: -3.180243968963623
    6. 'half' → logprob: -3.680243968963623
    7. 't' → logprob: -4.305243968963623
    8. 'if' → logprob: -4.680243968963623
    9. 'k' → logprob: -6.305243968963623
    10. ' cycle' → logprob: -6.305243968963623

Token 255: ' so' (ID: 813)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.4838341474533081
    2. ' cycle' → logprob: -2.4838342666625977
    3. 'phase' → logprob: -2.7338342666625977
    4. 't' → logprob: -2.8588342666625977
    5. '   ' → logprob: -2.8588342666625977
    6. 'period' → logprob: -2.9838342666625977
    7. 'if' → logprob: -3.6088342666625977
    8. 'return' → logprob: -4.233834266662598
    9. 'half' → logprob: -4.483834266662598
    10. ' phase' → logprob: -5.733834266662598

Token 256: ' ew' (ID: 64459)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.11822838336229324
    2. '   ' → logprob: -2.3682284355163574
    3. ' return' → logprob: -4.618228435516357
    4. 't' → logprob: -4.993228435516357
    5. 'if' → logprob: -7.368228435516357
    6. 'signal' → logprob: -8.2432279586792
    7. ' t' → logprob: -9.2432279586792
    8. '(t' → logprob: -10.1182279586792
    9. ' if' → logprob: -10.4932279586792
    10. 'cycle' → logprob: -10.7432279586792

Token 257: ' green' (ID: 8851)
  Prédit: '_green'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_green' → logprob: -0.19979219138622284
    2. 'green' → logprob: -2.5747921466827393
    3. '_state' → logprob: -3.3247921466827393
    4. ' =' → logprob: -3.6997921466827393
    5. '_time' → logprob: -4.449792385101318
    6. '_cycle' → logprob: -4.949792385101318
    7. '_phase' → logprob: -5.199792385101318
    8. '_k' → logprob: -5.699792385101318
    9. '_period' → logprob: -6.074792385101318
    10. 'state' → logprob: -6.199792385101318

Token 258: ' duration' (ID: 13599)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20917674899101257
    2. '   ' → logprob: -2.709176778793335
    3. '=' → logprob: -3.459176778793335
    4. 'period' → logprob: -4.209176540374756
    5. 'return' → logprob: -4.459176540374756
    6. 'def' → logprob: -4.584176540374756
    7. 'at' → logprob: -5.334176540374756
    8. 'if' → logprob: -5.459176540374756
    9. '_period' → logprob: -5.584176540374756
    10. 'time' → logprob: -5.834176540374756

Token 259: ' k' (ID: 372)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09142961353063583
    2. ' =' → logprob: -2.4664297103881836
    3. ' is' → logprob: -7.341429710388184
    4. '=k' → logprob: -7.716429710388184
    5. 's' → logprob: -7.841429710388184
    6. 'def' → logprob: -8.091429710388184
    7. 'is' → logprob: -8.466429710388184
    8. 'k' → logprob: -9.091429710388184
    9. 'signal' → logprob: -9.091429710388184
    10. '=
' → logprob: -9.591429710388184

Token 260: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8228646516799927
    2. '   ' → logprob: -1.1978646516799927
    3. ' =' → logprob: -1.9478646516799927
    4. 'def' → logprob: -2.447864532470703
    5. 'if' → logprob: -4.697864532470703
    6. 't' → logprob: -5.197864532470703
    7. ':
' → logprob: -6.197864532470703
    8. ':' → logprob: -6.447864532470703
    9. ' if' → logprob: -6.822864532470703
    10. 'k' → logprob: -7.072864532470703

Token 261: ' then' (ID: 1815)
  Prédit: 'ew'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ew' → logprob: -1.2171775102615356
    2. ' ew' → logprob: -1.3421775102615356
    3. ' t' → logprob: -2.592177391052246
    4. 't' → logprob: -2.717177391052246
    5. 'k' → logprob: -2.967177391052246
    6. ' return' → logprob: -3.092177391052246
    7. ' k' → logprob: -3.217177391052246
    8. 'False' → logprob: -3.342177391052246
    9. 'return' → logprob: -3.467177391052246
    10. ' False' → logprob: -3.842177391052246

Token 262: ' ew' (ID: 64459)
  Prédit: 'ew'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ew' → logprob: -0.1512061208486557
    2. ' not' → logprob: -3.0262060165405273
    3. 'not' → logprob: -3.5262060165405273
    4. ' ew' → logprob: -4.026206016540527
    5. 'k' → logprob: -4.276206016540527
    6. 'False' → logprob: -4.401206016540527
    7. 'ns' → logprob: -4.776206016540527
    8. ' False' → logprob: -5.776206016540527
    9. 'signal' → logprob: -5.901206016540527
    10. ' k' → logprob: -6.526206016540527

Token 263: ' red' (ID: 3592)
  Prédit: ' red'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' red' → logprob: -0.31352344155311584
    2. 'red' → logprob: -1.3135234117507935
    3. '_red' → logprob: -8.313523292541504
    4. ' green' → logprob: -12.313523292541504
    5. 'False' → logprob: -12.688523292541504
    6. 'green' → logprob: -13.188523292541504
    7. ' ' → logprob: -13.438523292541504
    8. ' False' → logprob: -13.688523292541504
    9. 'false' → logprob: -14.188523292541504
    10. ' false' → logprob: -14.313523292541504

Token 264: ' k' (ID: 372)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.12541925907135
    2. ' for' → logprob: -2.1254191398620605
    3. 'duration' → logprob: -2.1254191398620605
    4. 'for' → logprob: -2.2504191398620605
    5. 'def' → logprob: -2.5004191398620605
    6. 'k' → logprob: -2.7504191398620605
    7. ' if' → logprob: -3.5004191398620605
    8. ' duration' → logprob: -3.7504191398620605
    9. '_duration' → logprob: -3.7504191398620605
    10. '   ' → logprob: -3.8754191398620605

Token 265: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.39918509125709534
    2. '   ' → logprob: -1.399185061454773
    3. ' =' → logprob: -3.7741851806640625
    4. '=' → logprob: -4.2741851806640625
    5. ':
' → logprob: -4.5241851806640625
    6. 'if' → logprob: -5.1491851806640625
    7. '
' → logprob: -5.6491851806640625
    8. ':' → logprob: -5.7741851806640625
    9. 't' → logprob: -5.7741851806640625
    10. ',' → logprob: -5.7741851806640625

Token 266: ' repeatedly' (ID: 45605)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.194428563117981
    2. ' return' → logprob: -1.194428563117981
    3. 'return' → logprob: -1.444428563117981
    4. 't' → logprob: -2.5694284439086914
    5. ' t' → logprob: -3.0694284439086914
    6. ' if' → logprob: -4.069428443908691
    7. 'if' → logprob: -4.694428443908691
    8. 'def' → logprob: -6.069428443908691
    9. ' cycle' → logprob: -6.194428443908691
    10. 'period' → logprob: -7.069428443908691

Token 267: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46480029821395874
    2. 'def' → logprob: -1.8398003578186035
    3. 'cycle' → logprob: -2.3398003578186035
    4. 'if' → logprob: -2.7148003578186035
    5. 't' → logprob: -4.4648003578186035
    6. 'return' → logprob: -4.5898003578186035
    7. 'phase' → logprob: -4.5898003578186035
    8. 'period' → logprob: -5.2148003578186035
    9. ' cycle' → logprob: -5.9648003578186035
    10. '```' → logprob: -5.9648003578186035

Token 268: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05125295743346214
    2. 'cycle' → logprob: -3.676252841949463
    3. 'period' → logprob: -4.676252841949463
    4. 'if' → logprob: -5.676252841949463
    5. ' cycle' → logprob: -5.676252841949463
    6. 'def' → logprob: -6.301252841949463
    7. 't' → logprob: -6.551252841949463
    8. 'phase' → logprob: -6.676252841949463
    9. '```' → logprob: -7.676252841949463
    10. ' period' → logprob: -7.801252841949463

Token 269: ' cycle' (ID: 15839)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1379455029964447
    2. 't' → logprob: -2.7629454135894775
    3. 'cycle' (adapté à ' cycle') → logprob: -3.2629454135894775
    4. 'phase' → logprob: -4.887945652008057
    5. ' cycle' → logprob: -5.012945652008057
    6. 'def' → logprob: -5.512945652008057
    7. ' t' → logprob: -5.512945652008057
    8. 'period' → logprob: -6.137945652008057
    9. ' phase' → logprob: -7.137945652008057
    10. 'if' → logprob: -8.387945175170898

Token 270: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3273548483848572
    2. '=' → logprob: -1.327354907989502
    3. '_time' → logprob: -4.327354907989502
    4. '_length' → logprob: -7.452354907989502
    5. 'time' → logprob: -9.452354431152344
    6. '_duration' → logprob: -9.952354431152344
    7. '=time' → logprob: -10.702354431152344
    8. '_len' → logprob: -11.452354431152344
    9. '_pos' → logprob: -11.577354431152344
    10. '_mod' → logprob: -11.702354431152344

Token 271: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.10175450146198273
    2. 'signal' → logprob: -2.3517544269561768
    3. 't' → logprob: -7.226754665374756
    4. '(' → logprob: -7.851754665374756
    5. ' ' → logprob: -8.476754188537598
    6. ' signal' → logprob: -8.976754188537598
    7. '(signal' → logprob: -10.101754188537598
    8. '20' → logprob: -11.851754188537598
    9. '4' → logprob: -12.101754188537598
    10. '(t' → logprob: -12.101754188537598

Token 272: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.18048575520515442
    2. 'signal' → logprob: -1.805485725402832
    3. '(' → logprob: -7.680485725402832
    4. 't' → logprob: -8.805485725402832
    5. '(signal' → logprob: -10.305485725402832
    6. ' signal' → logprob: -10.430485725402832
    7. ' ' → logprob: -10.555485725402832
    8. '0' → logprob: -12.305485725402832
    9. '20' → logprob: -12.305485725402832
    10. 'sig' → logprob: -12.305485725402832

Token 273: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.12693126499652863
    2. ' *' → logprob: -2.1269311904907227
    3. '*k' → logprob: -13.001931190490723
    4. '*object' → logprob: -15.126931190490723
    5. 'signal' → logprob: -15.501931190490723
    6. '*(' → logprob: -15.626931190490723
    7. '(signal' → logprob: -15.751931190490723
    8. '*s' → logprob: -16.75193214416504
    9. ' signal' → logprob: -17.87693214416504
    10. '*K' → logprob: -18.12693214416504

Token 274: 'signal' (ID: 57706)
  Prédit: 'signal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'signal' → logprob: -1.1279553291387856e-05
    2. ' signal' → logprob: -11.500011444091797
    3. '(signal' → logprob: -13.750011444091797
    4. '.signal' → logprob: -18.750011444091797
    5. '_signal' → logprob: -19.375011444091797
    6. 'Signal' → logprob: -19.875011444091797
    7. 'signals' → logprob: -20.375011444091797
    8. '   ' → logprob: -21.125011444091797
    9. 'ignal' → logprob: -21.375011444091797
    10. '```' → logprob: -21.500011444091797

Token 275: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -3.166338137816638e-05
    2. 'k' → logprob: -10.375031471252441
    3. '_signal' → logprob: -15.000031471252441
    4. 'signal' → logprob: -17.250032424926758
    5. '_q' → logprob: -19.000032424926758
    6. 's' → logprob: -19.125032424926758
    7. 'K' → logprob: -19.250032424926758
    8. '_state' → logprob: -19.750032424926758
    9. ' k' → logprob: -19.875032424926758
    10. '{k' → logprob: -20.750032424926758

Token 276: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.010753495618700981
    2. '   ' → logprob: -4.635753631591797
    3. 't' → logprob: -8.635753631591797
    4. '    
' → logprob: -8.635753631591797
    5. '
' → logprob: -8.635753631591797
    6. 'def' → logprob: -9.260753631591797
    7. '<|end|>' → logprob: -9.385753631591797
    8. '<|end|>' → logprob: -9.635753631591797
    9. '  
' → logprob: -10.260753631591797
    10. ',' → logprob: -10.385753631591797

Token 277: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008513512089848518
    2. ' t' → logprob: -5.758513450622559
    3. 't' → logprob: -6.133513450622559
    4. '
' → logprob: -6.258513450622559
    5. ' if' → logprob: -8.383513450622559
    6. 'time' → logprob: -8.383513450622559
    7. ' time' → logprob: -8.508513450622559
    8. '    
' → logprob: -8.758513450622559
    9. ' mod' → logprob: -9.133513450622559
    10. 'mod' → logprob: -9.383513450622559

Token 278: ' t' (ID: 260)
  Prédit: 'phase'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'phase' → logprob: -0.7971621155738831
    2. ' phase' → logprob: -1.5471620559692383
    3. 't' (adapté à ' t') → logprob: -2.1721620559692383
    4. ' t' → logprob: -2.7971620559692383
    5. 'time' → logprob: -2.9221620559692383
    6. '   ' → logprob: -3.1721620559692383
    7. ' time' → logprob: -4.172162055969238
    8. 'if' → logprob: -4.297162055969238
    9. 'pos' → logprob: -4.422162055969238
    10. ' if' → logprob: -4.547162055969238

Token 279: ' =' (ID: 314)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.7188258767127991
    2. '=' → logprob: -1.5938258171081543
    3. ' %' → logprob: -2.0938258171081543
    4. ' %=' → logprob: -2.0938258171081543
    5. '%=' → logprob: -2.9688258171081543
    6. ' =' → logprob: -4.468825817108154
    7. '_mod' → logprob: -9.593826293945312
    8. ' ' → logprob: -10.218826293945312
    9. 'mod' → logprob: -10.468826293945312
    10. ' ' → logprob: -10.968826293945312

Token 280: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.2014138251543045
    2. ' t' → logprob: -1.701413869857788
    3. '(t' → logprob: -14.576414108276367
    4. '	t' → logprob: -17.076414108276367
    5. '   ' → logprob: -17.326414108276367
    6. ' ' → logprob: -17.451414108276367
    7. 'int' → logprob: -17.826414108276367
    8. ' (' → logprob: -17.951414108276367
    9. '`t' → logprob: -17.951414108276367
    10. '(' → logprob: -19.576414108276367

Token 281: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.5759612321853638
    2. ' %' → logprob: -0.8259612321853638
    3. '%d' → logprob: -11.700961112976074
    4. '%s' → logprob: -12.200961112976074
    5. '%c' → logprob: -12.700961112976074
    6. '%e' → logprob: -13.575961112976074
    7. '%x' → logprob: -13.700961112976074
    8. '%i' → logprob: -13.825961112976074
    9. ' ' → logprob: -14.325961112976074
    10. ' ' → logprob: -14.950961112976074

Token 282: ' cycle' (ID: 15839)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.0006751431501470506
    2. ' cycle' → logprob: -7.375675201416016
    3. '(c' → logprob: -10.375675201416016
    4. '(' → logprob: -11.000675201416016
    5. ' (' → logprob: -15.750675201416016
    6. 'cy' → logprob: -15.875675201416016
    7. 'cycl' → logprob: -16.000675201416016
    8. '-cycle' → logprob: -16.875675201416016
    9. '_cycle' → logprob: -17.000675201416016
    10. 'cycled' → logprob: -17.000675201416016

Token 283: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0024204873479902744
    2. ' if' → logprob: -6.877420425415039
    3. 'if' → logprob: -7.252420425415039
    4. '
' → logprob: -8.377420425415039
    5. 'return' → logprob: -8.502420425415039
    6. 'def' → logprob: -8.877420425415039
    7. ' return' → logprob: -10.127420425415039
    8. '<|end|>' → logprob: -10.502420425415039
    9. ' ' → logprob: -11.502420425415039
    10. '```' → logprob: -11.752420425415039

Token 284: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009640753269195557
    2. ' if' → logprob: -5.009640693664551
    3. 'if' → logprob: -6.384640693664551
    4. 'return' → logprob: -7.634640693664551
    5. ' return' → logprob: -7.759640693664551
    6. '<|end|>' → logprob: -8.50964069366455
    7. '
' → logprob: -10.25964069366455
    8. '	return' → logprob: -11.13464069366455
    9. '	if' → logprob: -11.25964069366455
    10. ' ' → logprob: -11.25964069366455

Token 285: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5573151707649231
    2. '   ' → logprob: -1.0573151111602783
    3. 'if' (adapté à ' if') → logprob: -2.5573151111602783
    4. ' return' → logprob: -6.182315349578857
    5. ' if' → logprob: -8.1823148727417
    6. '	return' → logprob: -12.4323148727417
    7. ' ' → logprob: -13.4323148727417
    8. '  ' → logprob: -13.6823148727417
    9. '```' → logprob: -13.8073148727417
    10. '
' → logprob: -14.3073148727417

Token 286: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.10025045275688171
    2. ' t' → logprob: -2.350250482559204
    3. '0' → logprob: -10.600250244140625
    4. ' ' → logprob: -11.975250244140625
    5. '   ' → logprob: -12.100250244140625
    6. 'signal' → logprob: -12.850250244140625
    7. '(t' → logprob: -13.600250244140625
    8. ' signal' → logprob: -13.725250244140625
    9. '	t' → logprob: -14.225250244140625
    10. 'k' → logprob: -15.225250244140625

Token 287: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.2286459505558014
    2. ' <' → logprob: -1.603645920753479
    3. '>=' → logprob: -6.1036458015441895
    4. ' >=' → logprob: -7.2286458015441895
    5. '<E' → logprob: -8.853646278381348
    6. '<K' → logprob: -11.103646278381348
    7. '<m' → logprob: -11.228646278381348
    8. '<n' → logprob: -11.353646278381348
    9. '<s' → logprob: -11.603646278381348
    10. '[' → logprob: -12.103646278381348

Token 288: ' signal' (ID: 12884)
  Prédit: 'signal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'signal' → logprob: -0.00010950337309623137
    2. ' signal' → logprob: -9.125109672546387
    3. 'k' → logprob: -14.875109672546387
    4. '(signal' → logprob: -16.50010871887207
    5. '   ' → logprob: -17.12510871887207
    6. '0' → logprob: -17.25010871887207
    7. '.signal' → logprob: -17.50010871887207
    8. 'sign' → logprob: -17.87510871887207
    9. ' ' → logprob: -18.00010871887207
    10. '  ' → logprob: -18.12510871887207

Token 289: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.000553151941858232
    2. 'k' → logprob: -7.500553131103516
    3. '   ' → logprob: -16.750553131103516
    4. 's' → logprob: -17.375553131103516
    5. ' k' → logprob: -17.500553131103516
    6. '```' → logprob: -17.625553131103516
    7. 'K' → logprob: -17.750553131103516
    8. '[' → logprob: -18.625553131103516
    9. '<|end|>' → logprob: -18.750553131103516
    10. '_c' → logprob: -18.750553131103516

Token 290: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.11386740952730179
    2. ':' → logprob: -2.2388675212860107
    3. ':return' → logprob: -7.363867282867432
    4. '   ' → logprob: -8.11386775970459
    5. '):
' → logprob: -9.86386775970459
    6. ' :
' → logprob: -10.48886775970459
    7. '==' → logprob: -11.73886775970459
    8. ':
' → logprob: -12.23886775970459
    9. '():
' → logprob: -12.48886775970459
    10. ' :' → logprob: -12.48886775970459

Token 291: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1838397979736328
    2. 'return' → logprob: -2.433839797973633
    3. '   ' → logprob: -2.683839797973633
    4. ' return' → logprob: -4.433839797973633
    5. 'False' → logprob: -10.558839797973633
    6. '	return' → logprob: -11.308839797973633
    7. ' False' → logprob: -12.308839797973633
    8. ':return' → logprob: -12.308839797973633
    9. ' ' → logprob: -12.808839797973633
    10. 'false' → logprob: -13.058839797973633

Token 292: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.006924704648554325
    2. ' return' → logprob: -5.756924629211426
    3. '       ' → logprob: -6.506924629211426
    4. 'False' → logprob: -6.631924629211426
    5. '   ' → logprob: -7.006924629211426
    6. ' False' → logprob: -11.881924629211426
    7. 'false' → logprob: -12.131924629211426
    8. '	return' → logprob: -12.756924629211426
    9. ':return' → logprob: -13.131924629211426
    10. '#' (adapté à ' #') → logprob: -13.506924629211426

Token 293: ' NS' (ID: 6950)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.03063240833580494
    2. 'False' → logprob: -3.530632495880127
    3. ' return' → logprob: -7.655632495880127
    4. '   ' → logprob: -7.905632495880127
    5. '       ' → logprob: -10.655632019042969
    6. ' False' → logprob: -11.655632019042969
    7. 'True' → logprob: -12.530632019042969
    8. '#' → logprob: -13.405632019042969
    9. 'false' → logprob: -14.530632019042969
    10. 'Return' → logprob: -15.030632019042969

Token 294: ' green' (ID: 8851)
  Prédit: ' green'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' green' → logprob: -0.3682515025138855
    2. 'green' → logprob: -1.2432515621185303
    3. '_green' → logprob: -5.118251323699951
    4. ' is' → logprob: -5.493251323699951
    5. ' red' → logprob: -5.743251323699951
    6. 'red' → logprob: -6.493251323699951
    7. ' return' → logprob: -6.743251323699951
    8. ' True' → logprob: -7.118251323699951
    9. 'return' → logprob: -7.368251323699951
    10. '-green' → logprob: -7.993251323699951

Token 295: ';' (ID: 26)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.0349581241607666
    2. ' return' → logprob: -1.1599581241607666
    3. '   ' → logprob: -1.5349581241607666
    4. '       ' → logprob: -2.1599581241607666
    5. '	return' → logprob: -8.409957885742188
    6. ' ' → logprob: -9.409957885742188
    7. '  ' → logprob: -9.909957885742188
    8. ',' → logprob: -10.409957885742188
    9. ':return' → logprob: -10.784957885742188
    10. '
' → logprob: -11.034957885742188

Token 296: ' EW' (ID: 143307)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.039758432656526566
    2. ' return' → logprob: -3.2897584438323975
    3. '   ' → logprob: -6.414758205413818
    4. '       ' → logprob: -9.539758682250977
    5. ' ' → logprob: -13.289758682250977
    6. '
' → logprob: -13.414758682250977
    7. '	return' → logprob: -13.664758682250977
    8. '  ' → logprob: -14.164758682250977
    9. '#' → logprob: -14.789758682250977
    10. '    ' → logprob: -15.289758682250977

Token 297: ' red' (ID: 3592)
  Prédit: ' red'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' red' → logprob: -0.10196055471897125
    2. 'red' → logprob: -2.3519606590270996
    3. ' False' → logprob: -7.4769606590271
    4. ' green' → logprob: -7.7269606590271
    5. ' is' → logprob: -8.476960182189941
    6. '_red' → logprob: -8.601960182189941
    7. 'False' → logprob: -9.101960182189941
    8. 'green' → logprob: -9.351960182189941
    9. ' false' → logprob: -9.601960182189941
    10. '=False' → logprob: -10.726960182189941

Token 298: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006923284847289324
    2. ' return' → logprob: -5.381923198699951
    3. 'return' → logprob: -6.131923198699951
    4. '   ' → logprob: -9.75692367553711
    5. '
' → logprob: -10.00692367553711
    6. ',' → logprob: -11.63192367553711
    7. '	return' → logprob: -12.50692367553711
    8. '           ' → logprob: -13.00692367553711
    9. '	' → logprob: -13.50692367553711
    10. '        
' → logprob: -13.63192367553711

Token 299: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.044097770005464554
    2. ' return' → logprob: -3.794097661972046
    3. 'return' → logprob: -3.919097661972046
    4. '   ' → logprob: -7.169097900390625
    5. ' ' → logprob: -12.669097900390625
    6. '	return' → logprob: -13.419097900390625
    7. '           ' → logprob: -13.919097900390625
    8. '     ' → logprob: -14.794097900390625
    9. '  ' → logprob: -15.169097900390625
    10. ':return' → logprob: -15.169097900390625

Token 300: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0015331897884607315
    2. '       ' → logprob: -6.751533031463623
    3. ' return' → logprob: -8.001533508300781
    4. '   ' → logprob: -10.501533508300781
    5. '	return' → logprob: -15.501533508300781
    6. ' ' → logprob: -17.12653350830078
    7. '  ' → logprob: -17.25153350830078
    8. '           ' → logprob: -17.37653350830078
    9. '
' → logprob: -17.62653350830078
    10. '     ' → logprob: -17.75153350830078

Token 301: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.0206720617134124e-05
    2. ' False' → logprob: -11.50001049041748
    3. 'True' → logprob: -18.250009536743164
    4. '(False' → logprob: -20.500009536743164
    5. 'false' → logprob: -22.125009536743164
    6. '   ' → logprob: -22.250009536743164
    7. '0' → logprob: -23.250009536743164
    8. '=False' → logprob: -23.375009536743164
    9. 'Fal' → logprob: -24.500009536743164
    10. 'FALSE' → logprob: -24.750009536743164

Token 302: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0032521041575819254
    2. 'else' → logprob: -6.378252029418945
    3. ' else' → logprob: -6.628252029418945
    4. '<|end|>' → logprob: -8.628252029418945
    5. '
' → logprob: -11.003252029418945
    6. '<|end|>' → logprob: -11.628252029418945
    7. ',' → logprob: -11.753252029418945
    8. '	else' → logprob: -12.253252029418945
    9. 'return' → logprob: -12.878252029418945
    10. '  ' → logprob: -13.753252029418945

Token 303: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014615191146731377
    2. 'else' → logprob: -4.764615058898926
    3. ' else' → logprob: -5.139615058898926
    4. '<|end|>' → logprob: -9.389615058898926
    5. '	else' → logprob: -10.514615058898926
    6. '
' → logprob: -12.889615058898926
    7. ',' → logprob: -13.014615058898926
    8. '```' → logprob: -13.764615058898926
    9. '<|end|>' → logprob: -13.764615058898926
    10. 'return' → logprob: -13.764615058898926

Token 304: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.6803561449050903
    2. 'else' (adapté à ' else') → logprob: -1.1803561449050903
    3. '   ' → logprob: -1.6803561449050903
    4. '	else' → logprob: -9.8053560256958
    5. 'return' → logprob: -11.0553560256958
    6. 'elif' → logprob: -12.5553560256958
    7. ' return' → logprob: -12.8053560256958
    8. '<|end|>' → logprob: -13.3053560256958
    9. ' elif' → logprob: -13.5553560256958
    10. '
' → logprob: -13.6803560256958

Token 305: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30662521719932556
    2. ':
' → logprob: -1.681625247001648
    3. ':' → logprob: -2.5566251277923584
    4. '   ' → logprob: -7.9316253662109375
    5. ':return' → logprob: -10.056625366210938
    6. 'return' → logprob: -10.931625366210938
    7. ' return' → logprob: -12.556625366210938
    8. ' :
' → logprob: -12.931625366210938
    9. '      ' → logprob: -13.056625366210938
    10. '           ' → logprob: -13.306625366210938

Token 306: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17174649238586426
    2. 'return' → logprob: -1.9217464923858643
    3. ' return' → logprob: -4.671746253967285
    4. '   ' → logprob: -6.171746253967285
    5. '	return' → logprob: -12.421746253967285
    6. 'True' → logprob: -12.421746253967285
    7. ' True' → logprob: -13.296746253967285
    8. ' ' → logprob: -13.796746253967285
    9. '      ' → logprob: -14.546746253967285
    10. '     ' → logprob: -14.671746253967285

Token 307: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6941062808036804
    2. 'True' → logprob: -0.6941062808036804
    3. ' return' → logprob: -7.194106101989746
    4. ' True' → logprob: -8.694106101989746
    5. '   ' → logprob: -10.444106101989746
    6. '       ' → logprob: -11.444106101989746
    7. 'true' → logprob: -16.069107055664062
    8. '	return' → logprob: -17.819107055664062
    9. '(True' → logprob: -18.444107055664062
    10. 'Return' → logprob: -18.569107055664062

Token 308: ' EW' (ID: 143307)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0012060654116794467
    2. ' True' → logprob: -6.751205921173096
    3. 'return' → logprob: -10.251206398010254
    4. ' return' → logprob: -15.001206398010254
    5. '   ' → logprob: -16.626205444335938
    6. '(True' → logprob: -18.001205444335938
    7. 'true' → logprob: -20.751205444335938
    8. '=True' → logprob: -21.001205444335938
    9. ' ' → logprob: -21.251205444335938
    10. '       ' → logprob: -21.376205444335938

Token 309: ' green' (ID: 8851)
  Prédit: ' green'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' green' → logprob: -0.03069101646542549
    2. 'green' → logprob: -3.530690908432007
    3. '_green' → logprob: -7.030691146850586
    4. ' True' → logprob: -10.155691146850586
    5. 'True' → logprob: -11.530691146850586
    6. ' red' → logprob: -13.530691146850586
    7. ' Green' → logprob: -13.905691146850586
    8. '   ' → logprob: -14.155691146850586
    9. ' true' → logprob: -14.280691146850586
    10. ' ' → logprob: -14.405691146850586

Token 310: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07074011117219925
    2. '   ' → logprob: -3.445740222930908
    3. ' return' → logprob: -3.570740222930908
    4. 'return' → logprob: -4.820740222930908
    5. ' ' → logprob: -9.82073974609375
    6. ':return' → logprob: -10.07073974609375
    7. '	return' → logprob: -10.57073974609375
    8. ':' → logprob: -10.82073974609375
    9. '  ' → logprob: -11.19573974609375
    10. '     ' → logprob: -11.44573974609375

Token 311: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4241989552974701
    2. '   ' → logprob: -1.9241989850997925
    3. '       ' → logprob: -1.9241989850997925
    4. ' return' → logprob: -2.924198865890503
    5. '	return' → logprob: -11.799199104309082
    6. ' ' → logprob: -12.424199104309082
    7. ':return' → logprob: -14.174199104309082
    8. '     ' → logprob: -15.049199104309082
    9. '  ' → logprob: -15.174199104309082
    10. '    ' → logprob: -15.299199104309082

Token 312: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00409656623378396
    2. ' return' → logprob: -5.504096508026123
    3. '   ' → logprob: -11.504096984863281
    4. '       ' → logprob: -11.754096984863281
    5. '	return' → logprob: -16.50409698486328
    6. 'True' → logprob: -17.62909698486328
    7. ' ' → logprob: -19.75409698486328
    8. '  ' → logprob: -20.00409698486328
    9. 'true' → logprob: -20.37909698486328
    10. 'eturn' → logprob: -20.50409698486328

Token 313: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -2.339278580620885e-06
    2. ' True' → logprob: -13.000001907348633
    3. 'true' → logprob: -23.500001907348633
    4. '(True' → logprob: -23.625001907348633
    5. '=True' → logprob: -25.125001907348633
    6. 'False' → logprob: -25.625001907348633
    7. '   ' → logprob: -26.125001907348633
    8. 'TRUE' → logprob: -26.625001907348633
    9. '_true' → logprob: -27.750001907348633
    10. '.True' → logprob: -28.250001907348633

Token 314: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 315: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.727905979962088e-05
    2. '<|end|>' → logprob: -10.25004768371582
    3. '<|end|>' → logprob: -12.00004768371582
    4. '```' → logprob: -12.87504768371582
    5. '#' → logprob: -14.12504768371582
    6. 'import' → logprob: -14.25004768371582
    7. ' def' → logprob: -14.87504768371582
    8. '(' → logprob: -15.00004768371582
    9. '\' → logprob: -15.62504768371582
    10. 'ndef' → logprob: -16.12504768371582

Token 316: ' signal' (ID: 12884)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5028460621833801
    2. 'main' → logprob: -1.8778460025787354
    3. 'short' → logprob: -2.0028460025787354
    4. 'solve' → logprob: -4.2528462409973145
    5. 'find' → logprob: -4.3778462409973145
    6. ' shortest' → logprob: -4.6278462409973145
    7. 'parse' → logprob: -4.8778462409973145
    8. ' d' → logprob: -4.8778462409973145
    9. 'read' → logprob: -5.1278462409973145
    10. 'travel' → logprob: -5.2528462409973145

Token 317: '_all' (ID: 13305)
  Prédit: '_k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.16683416068553925
    2. '_cycle' → logprob: -2.7918341159820557
    3. '_state' → logprob: -3.9168341159820557
    4. '_t' → logprob: -4.291834354400635
    5. '_change' → logprob: -4.916834354400635
    6. '_period' → logprob: -5.041834354400635
    7. '_time' → logprob: -5.041834354400635
    8. '_phase' → logprob: -5.166834354400635
    9. '_tim' → logprob: -5.166834354400635
    10. '_inter' → logprob: -5.541834354400635

Token 318: 'ows' (ID: 1513)
  Prédit: '_k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.9924426674842834
    2. '_state' → logprob: -1.2424426078796387
    3. '_states' → logprob: -1.4924426078796387
    4. '(k' → logprob: -3.1174426078796387
    5. '_at' → logprob: -4.242442607879639
    6. 's' → logprob: -4.617442607879639
    7. '(signal' → logprob: -4.867442607879639
    8. '_times' → logprob: -4.992442607879639
    9. '():' → logprob: -5.117442607879639
    10. 'state' → logprob: -5.242442607879639

Token 319: '_entry' (ID: 20857)
  Prédit: '(direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(direction' → logprob: -0.1746455729007721
    2. '(dir' → logprob: -1.9246455430984497
    3. '(signal' → logprob: -5.67464542388916
    4. '_move' → logprob: -6.04964542388916
    5. '(d' → logprob: -6.17464542388916
    6. 'direction' → logprob: -6.54964542388916
    7. 'movement' → logprob: -6.67464542388916
    8. '_direction' → logprob: -7.04964542388916
    9. '(' → logprob: -7.17464542388916
    10. '_m' → logprob: -7.79964542388916

Token 320: '(inter' (ID: 62819)
  Prédit: '(signal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(signal' → logprob: -0.010249548591673374
    2. '(inter' → logprob: -5.135249614715576
    3. '(direction' → logprob: -6.885249614715576
    4. '(' → logprob: -7.385249614715576
    5. '(k' → logprob: -7.635249614715576
    6. '(dir' → logprob: -7.760249614715576
    7. '(s' → logprob: -8.010249137878418
    8. '(state' → logprob: -8.010249137878418
    9. '(sign' → logprob: -8.635249137878418
    10. '(node' → logprob: -8.635249137878418

Token 321: 'section' (ID: 6471)
  Prédit: 'section'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'section' → logprob: -0.00014978687977418303
    2. '_section' → logprob: -9.750149726867676
    3. 'sec' → logprob: -11.125149726867676
    4. 'SECTION' → logprob: -11.125149726867676
    5. 'ection' → logprob: -11.375149726867676
    6. '_signal' → logprob: -11.375149726867676
    7. '(section' → logprob: -12.000149726867676
    8. 'sections' → logprob: -12.375149726867676
    9. ')' → logprob: -12.500149726867676
    10. 'signal' → logprob: -12.875149726867676

Token 322: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006366105284541845
    2. '_k' → logprob: -5.38136625289917
    3. ',k' → logprob: -7.38136625289917
    4. ' ,' → logprob: -8.631365776062012
    5. ',s' → logprob: -9.006365776062012
    6. 's' → logprob: -9.006365776062012
    7. '_,' → logprob: -9.381365776062012
    8. '_d' → logprob: -9.631365776062012
    9. 'k' → logprob: -9.631365776062012
    10. ',d' → logprob: -9.631365776062012

Token 323: ' dir' (ID: 5609)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.7429404258728027
    2. ' direction' → logprob: -1.2429404258728027
    3. 'dir' → logprob: -1.7429404258728027
    4. ' dir' → logprob: -3.2429404258728027
    5. 'time' → logprob: -4.992940425872803
    6. 'd' → logprob: -5.617940425872803
    7. ' time' → logprob: -6.242940425872803
    8. 't' → logprob: -6.492940425872803
    9. 'current' → logprob: -6.617940425872803
    10. ' t' → logprob: -7.117940425872803

Token 324: '_arr' (ID: 25121)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.350321888923645
    2. '):
' → logprob: -1.350321888923645
    3. '_' → logprob: -3.6003217697143555
    4. '_in' → logprob: -5.4753217697143555
    5. ',' → logprob: -6.8503217697143555
    6. ')' → logprob: -7.3503217697143555
    7. '_from' → logprob: -7.3503217697143555
    8. '_out' → logprob: -7.4753217697143555
    9. '):

' → logprob: -7.7253217697143555
    10. '):
' → logprob: -7.8503217697143555

Token 325: 'ive' (ID: 585)
  Prédit: 'ival'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ival' → logprob: -0.04659136012196541
    2. 'iving' → logprob: -3.421591281890869
    3. 'ive' → logprob: -4.921591281890869
    4. 'ived' → logprob: -6.046591281890869
    5. 'al' → logprob: -6.296591281890869
    6. 'ing' → logprob: -8.171591758728027
    7. ',' → logprob: -8.296591758728027
    8. 'ivals' → logprob: -8.546591758728027
    9. '):
' → logprob: -8.796591758728027
    10. ')' → logprob: -9.171591758728027

Token 326: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5695143938064575
    2. 'ing' → logprob: -1.6945143938064575
    3. '):
' → logprob: -2.194514274597168
    4. 'iving' → logprob: -2.569514274597168
    5. 'ival' → logprob: -3.694514274597168
    6. 'ive' → logprob: -4.444514274597168
    7. ')' → logprob: -5.069514274597168
    8. ',_' → logprob: -5.319514274597168
    9. 'al' → logprob: -5.944514274597168
    10. '),' → logprob: -6.194514274597168

Token 327: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5368196368217468
    2. 'time' → logprob: -2.0368196964263916
    3. ' t' → logprob: -2.1618196964263916
    4. 'signal' → logprob: -2.5368196964263916
    5. ' time' → logprob: -3.4118196964263916
    6. ' signal' → logprob: -4.1618194580078125
    7. 'dir' → logprob: -4.2868194580078125
    8. ' dir' → logprob: -4.6618194580078125
    9. 'current' → logprob: -5.0368194580078125
    10. ' current' → logprob: -5.5368194580078125

Token 328: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014314406551420689
    2. '):
' → logprob: -4.2643141746521
    3. ',' → logprob: -9.139314651489258
    4. '):
' → logprob: -10.514314651489258
    5. '   ' → logprob: -12.264314651489258
    6. ' ):' → logprob: -12.389314651489258
    7. '):

' → logprob: -13.014314651489258
    8. ')' → logprob: -13.139314651489258
    9. '_' → logprob: -14.389314651489258
    10. ' ' → logprob: -14.639314651489258

Token 329: ' signals' (ID: 29026)
  Prédit: 'signal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'signal' → logprob: -0.08598967641592026
    2. ' signal' → logprob: -3.4609897136688232
    3. 'k' → logprob: -3.9609897136688232
    4. 'signals' → logprob: -4.335989475250244
    5. 'h' → logprob: -5.335989475250244
    6. 'grid' → logprob: -5.835989475250244
    7. ' signals' → logprob: -6.585989475250244
    8. 'cycle' → logprob: -6.835989475250244
    9. 'graph' → logprob: -6.835989475250244
    10. 'op' → logprob: -7.085989475250244

Token 330: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.26877784729003906
    2. '):
' → logprob: -1.518777847290039
    3. ',' → logprob: -4.268777847290039
    4. '_k' → logprob: -6.393777847290039
    5. '   ' → logprob: -8.768777847290039
    6. '):

' → logprob: -9.143777847290039
    7. ')' → logprob: -9.268777847290039
    8. '):
' → logprob: -9.268777847290039
    9. ' ):' → logprob: -9.393777847290039
    10. '_s' → logprob: -9.643777847290039

Token 331: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15844334661960602
    2. '   ' → logprob: -2.1584434509277344
    3. '():' → logprob: -4.283443450927734
    4. '):' → logprob: -4.533443450927734
    5. ':
' → logprob: -6.408443450927734
    6. '(' → logprob: -6.658443450927734
    7. '<|end|>' → logprob: -7.158443450927734
    8. '):
' → logprob: -7.283443450927734
    9. '():
' → logprob: -7.658443450927734
    10. '[' → logprob: -8.283443450927734

Token 332: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0027567336801439524
    2. 'signal' → logprob: -6.627756595611572
    3. 'k' → logprob: -7.127756595611572
    4. ' signal' → logprob: -8.00275707244873
    5. 'h' → logprob: -9.12775707244873
    6. ' k' → logprob: -10.00275707244873
    7. ' h' → logprob: -10.25275707244873
    8. 'if' → logprob: -11.00275707244873
    9. '(signal' → logprob: -11.00275707244873
    10. '#' (adapté à ' #') → logprob: -11.62775707244873

Token 333: ' If' (ID: 1843)
  Prédit: 'signal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'signal' → logprob: -0.9194941520690918
    2. 'h' → logprob: -1.0444941520690918
    3. 'k' → logprob: -1.5444941520690918
    4. '   ' → logprob: -4.169494152069092
    5. 'if' → logprob: -5.544494152069092
    6. '#' → logprob: -5.544494152069092
    7. '(h' → logprob: -6.044494152069092
    8. 's' → logprob: -6.044494152069092
    9. 'interval' → logprob: -6.669494152069092
    10. 'sig' → logprob: -6.794494152069092

Token 334: ' intersection' (ID: 42002)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dir' → logprob: -0.5453632473945618
    2. ' dir' → logprob: -1.420363187789917
    3. 'intersection' → logprob: -2.670363187789917
    4. ' intersection' → logprob: -3.420363187789917
    5. 'signals' → logprob: -3.670363187789917
    6. 'direction' → logprob: -4.295363426208496
    7. ' signals' → logprob: -4.295363426208496
    8. 'op' → logprob: -5.170363426208496
    9. ' not' → logprob: -5.420363426208496
    10. 'signal' → logprob: -5.670363426208496

Token 335: ' has' (ID: 853)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.24729301035404205
    2. ' in' → logprob: -1.7472929954528809
    3. 'not' → logprob: -3.872292995452881
    4. 'in' → logprob: -3.997292995452881
    5. ' is' → logprob: -6.122292995452881
    6. '[' → logprob: -6.872292995452881
    7. 'is' → logprob: -7.372292995452881
    8. '==' → logprob: -7.622292995452881
    9. '_key' → logprob: -7.747292995452881
    10. 's' → logprob: -8.497293472290039

Token 336: ' no' (ID: 860)
  Prédit: ' no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' no' → logprob: -0.6008546352386475
    2. 'dir' → logprob: -2.1008546352386475
    3. 'signals' → logprob: -2.4758546352386475
    4. 'no' → logprob: -2.6008546352386475
    5. 'a' → logprob: -3.2258546352386475
    6. ' dir' → logprob: -3.6008546352386475
    7. ' not' → logprob: -3.6008546352386475
    8. ' signals' → logprob: -3.8508546352386475
    9. 'signal' → logprob: -3.9758546352386475
    10. ' a' → logprob: -4.850854873657227

Token 337: ' signal' (ID: 12884)
  Prédit: 'signal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'signal' → logprob: -0.6271706223487854
    2. ' signal' → logprob: -1.5021705627441406
    3. 'signals' → logprob: -2.0021705627441406
    4. ' signals' → logprob: -2.2521705627441406
    5. 's' → logprob: -7.127170562744141
    6. '   ' → logprob: -7.752170562744141
    7. 'intersection' → logprob: -8.25217056274414
    8. '(signal' → logprob: -8.37717056274414
    9. ' intersection' → logprob: -8.62717056274414
    10. 'def' → logprob: -8.87717056274414

Token 338: ',' (ID: 11)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.0802546739578247
    2. '   ' → logprob: -1.7052546739578247
    3. ' or' → logprob: -1.9552546739578247
    4. ':' → logprob: -2.080254554748535
    5. ',' → logprob: -2.205254554748535
    6. '[' → logprob: -3.830254554748535
    7. '_' → logprob: -3.830254554748535
    8. '.get' → logprob: -4.455254554748535
    9. 's' → logprob: -4.830254554748535
    10. ',
' → logprob: -4.955254554748535

Token 339: ' entry' (ID: 7251)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.18507105112075806
    2. 'return' → logprob: -2.0600709915161133
    3. '   ' → logprob: -3.1850709915161133
    4. '	return' → logprob: -10.060070991516113
    5. '#' → logprob: -10.935070991516113
    6. ' True' → logprob: -11.060070991516113
    7. ':return' → logprob: -11.435070991516113
    8. ' if' → logprob: -11.560070991516113
    9. ' ' → logprob: -11.810070991516113
    10. '{return' → logprob: -12.060070991516113

Token 340: ' allowed' (ID: 9279)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.7572731971740723
    2. ' not' → logprob: -0.7572731971740723
    3. '   ' → logprob: -3.5072731971740723
    4. 'not' → logprob: -5.007273197174072
    5. '_allowed' → logprob: -5.007273197174072
    6. ' allowed' → logprob: -5.382273197174072
    7. 'allowed' → logprob: -5.382273197174072
    8. 'is' → logprob: -5.507273197174072
    9. ' return' → logprob: -6.382273197174072
    10. 'return' → logprob: -6.632273197174072

Token 341: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020372767001390457
    2. ' if' → logprob: -4.0203728675842285
    3. 'def' → logprob: -7.0203728675842285
    4. 'if' → logprob: -7.1453728675842285
    5. ':' → logprob: -8.77037239074707
    6. ' =' → logprob: -9.77037239074707
    7. ',' → logprob: -9.89537239074707
    8. 'return' → logprob: -10.02037239074707
    9. '	if' → logprob: -10.64537239074707
    10. ' return' → logprob: -10.64537239074707

Token 342: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3380226790904999
    2. ' if' → logprob: -1.4630227088928223
    3. 'if' → logprob: -2.9630227088928223
    4. ' return' → logprob: -6.338022708892822
    5. 'return' → logprob: -6.588022708892822
    6. '    
' → logprob: -9.338022232055664
    7. ' signal' → logprob: -9.838022232055664
    8. '	if' → logprob: -9.963022232055664
    9. 'signal' → logprob: -10.088022232055664
    10. 'def' → logprob: -10.338022232055664

Token 343: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.869460940361023
    2. 'if' → logprob: -1.119460940361023
    3. ' if' → logprob: -1.369460940361023
    4. 'return' → logprob: -9.869461059570312
    5. ' return' → logprob: -10.744461059570312
    6. 'key' → logprob: -10.744461059570312
    7. ' key' → logprob: -10.744461059570312
    8. 'for' → logprob: -13.744461059570312
    9. 'def' → logprob: -13.994461059570312
    10. 'd' → logprob: -14.369461059570312

Token 344: ' Else' (ID: 42978)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06530913710594177
    2. ' if' → logprob: -3.0653090476989746
    3. '   ' → logprob: -4.190309047698975
    4. 'key' → logprob: -7.065309047698975
    5. 'return' → logprob: -8.690309524536133
    6. 'signal' → logprob: -8.940309524536133
    7. ' key' → logprob: -9.190309524536133
    8. 'h' → logprob: -9.315309524536133
    9. ' return' → logprob: -11.065309524536133
    10. 's' → logprob: -11.565309524536133

Token 345: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6554421782493591
    2. ' if' → logprob: -0.9054421782493591
    3. 'if' → logprob: -2.655442237854004
    4. ' s' → logprob: -5.655442237854004
    5. ' signal' → logprob: -7.030442237854004
    6. 'signal' → logprob: -7.030442237854004
    7. 's' → logprob: -8.030442237854004
    8. ' sig' → logprob: -9.155442237854004
    9. 'def' → logprob: -9.280442237854004
    10. 'd' → logprob: -9.280442237854004

Token 346: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29008617997169495
    2. ' if' → logprob: -1.5400861501693726
    3. 'if' → logprob: -3.540086269378662
    4. ' h' → logprob: -5.290086269378662
    5. ' s' → logprob: -6.665086269378662
    6. ' signal' → logprob: -7.165086269378662
    7. 'h' → logprob: -7.540086269378662
    8. 'signal' → logprob: -8.415085792541504
    9. 's' → logprob: -9.165085792541504
    10. 'd' → logprob: -9.290085792541504

Token 347: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08869863301515579
    2. 'signal' → logprob: -3.838698625564575
    3. ' if' → logprob: -4.088698863983154
    4. '   ' → logprob: -4.088698863983154
    5. 'k' → logprob: -4.838698863983154
    6. 'key' → logprob: -4.963698863983154
    7. 'h' → logprob: -4.963698863983154
    8. 'sig' → logprob: -5.713698863983154
    9. 's' → logprob: -6.338698863983154
    10. 'd' → logprob: -7.463698863983154

Token 348: ' At' (ID: 3604)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0423316955566406
    2. 'if' → logprob: -1.2923316955566406
    3. 'h' → logprob: -1.9173316955566406
    4. '   ' → logprob: -2.7923316955566406
    5. ' h' → logprob: -3.0423316955566406
    6. ' key' → logprob: -3.5423316955566406
    7. 'key' → logprob: -3.9173316955566406
    8. 'signal' → logprob: -4.167331695556641
    9. ' s' → logprob: -4.292331695556641
    10. 's' → logprob: -4.542331695556641

Token 349: ' time' (ID: 1058)
  Prédit: ' intersection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' intersection' → logprob: -1.441169023513794
    2. 'intersection' → logprob: -1.691169023513794
    3. 'signals' → logprob: -2.316169023513794
    4. 't' → logprob: -2.316169023513794
    5. ' signals' → logprob: -2.566169023513794
    6. ' dir' → logprob: -3.066169023513794
    7. 'dir' → logprob: -3.191169023513794
    8. 'signal' → logprob: -3.191169023513794
    9. 'direction' → logprob: -3.566169023513794
    10. ' arrival' → logprob: -4.191168785095215

Token 350: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.23247011005878448
    2. ' signals' → logprob: -2.3574700355529785
    3. 't' → logprob: -2.9824700355529785
    4. ' intersection' → logprob: -3.2324700355529785
    5. 'signals' → logprob: -4.4824700355529785
    6. ' signal' → logprob: -5.8574700355529785
    7. 'intersection' → logprob: -5.9824700355529785
    8. '   ' → logprob: -6.4824700355529785
    9. 'signal' → logprob: -6.9824700355529785
    10. ' (' → logprob: -7.2324700355529785

Token 351: ' of' (ID: 328)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02807830274105072
    2. '   ' → logprob: -3.778078317642212
    3. ' if' → logprob: -6.028078079223633
    4. ' ,' → logprob: -6.653078079223633
    5. 'def' → logprob: -7.653078079223633
    6. 'if' → logprob: -9.278078079223633
    7. ' and' → logprob: -9.403078079223633
    8. ')' → logprob: -9.403078079223633
    9. ',d' → logprob: -9.778078079223633
    10. ',
' → logprob: -9.903078079223633

Token 352: ' arrival' (ID: 24861)
  Prédit: 'arrival'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arrival' → logprob: -0.06898503005504608
    2. ' arrival' → logprob: -2.8189849853515625
    3. 'entry' → logprob: -5.5689849853515625
    4. 'day' → logprob: -6.4439849853515625
    5. ' day' → logprob: -7.1939849853515625
    6. 'arr' → logprob: -8.193984985351562
    7. ' entry' → logprob: -8.568984985351562
    8. 'signal' → logprob: -9.193984985351562
    9. 'dir' → logprob: -9.443984985351562
    10. 'enter' → logprob: -9.568984985351562

Token 353: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2050042599439621
    2. '   ' → logprob: -1.7050042152404785
    3. ' if' → logprob: -5.9550042152404785
    4. 'def' → logprob: -7.8300042152404785
    5. 'if' → logprob: -8.455004692077637
    6. ' ,' → logprob: -8.830004692077637
    7. ',
' → logprob: -9.705004692077637
    8. ' at' → logprob: -10.080004692077637
    9. ')' → logprob: -10.580004692077637
    10. '),' → logprob: -10.830004692077637

Token 354: ' if' (ID: 538)
  Prédit: 'signal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'signal' → logprob: -1.066957950592041
    2. ' signal' → logprob: -1.441957950592041
    3. ' if' → logprob: -2.566957950592041
    4. 'if' → logprob: -2.566957950592041
    5. ' sig' → logprob: -2.816957950592041
    6. 'state' → logprob: -3.316957950592041
    7. ' state' → logprob: -3.316957950592041
    8. '   ' → logprob: -3.566957950592041
    9. ' s' → logprob: -3.816957950592041
    10. ' dir' → logprob: -4.066957950592041

Token 355: ' signal' (ID: 12884)
  Prédit: 'intersection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'intersection' → logprob: -0.8874238729476929
    2. 'signals' → logprob: -1.1374238729476929
    3. ' intersection' → logprob: -2.5124239921569824
    4. ' signals' → logprob: -2.6374239921569824
    5. 'dir' → logprob: -3.1374239921569824
    6. 'not' → logprob: -3.6374239921569824
    7. ' not' → logprob: -3.7624239921569824
    8. 'inter' → logprob: -5.262423992156982
    9. 'signal' → logprob: -5.637423992156982
    10. '(inter' → logprob: -5.637423992156982

Token 356: ' allows' (ID: 7927)
  Prédit: '_k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_k' → logprob: -1.299728512763977
    2. '_all' → logprob: -1.549728512763977
    3. ' is' → logprob: -1.674728512763977
    4. 's' → logprob: -2.2997283935546875
    5. '[' → logprob: -2.7997283935546875
    6. '_key' → logprob: -3.6747283935546875
    7. '=' → logprob: -3.6747283935546875
    8. 'allows' → logprob: -3.9247283935546875
    9. 'is' → logprob: -4.1747283935546875
    10. 'k' → logprob: -4.2997283935546875

Token 357: ' going' (ID: 2966)
  Prédit: 'entry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'entry' → logprob: -0.43842169642448425
    2. 'EW' → logprob: -1.4384217262268066
    3. ' entry' → logprob: -2.9384217262268066
    4. 'ew' → logprob: -3.4384217262268066
    5. 'dir' → logprob: -4.938421726226807
    6. ' EW' → logprob: -5.063421726226807
    7. 'east' → logprob: -5.188421726226807
    8. '   ' → logprob: -5.563421726226807
    9. ' dir' → logprob: -6.313421726226807
    10. ' ew' → logprob: -6.813421726226807

Token 358: ' on' (ID: 402)
  Prédit: 'EW'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'EW' → logprob: -0.9256423711776733
    2. ' in' → logprob: -1.1756423711776733
    3. 'in' → logprob: -2.550642490386963
    4. 'ew' → logprob: -2.800642490386963
    5. 'east' → logprob: -3.300642490386963
    6. ' out' → logprob: -3.550642490386963
    7. ' east' → logprob: -4.300642490386963
    8. 'out' → logprob: -4.425642490386963
    9. ' EW' → logprob: -4.550642490386963
    10. '['' → logprob: -4.675642490386963

Token 359: ' dir' (ID: 5609)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.3773581981658936
    2. 'dir' → logprob: -1.8773581981658936
    3. ' dir' → logprob: -2.2523581981658936
    4. 'in' → logprob: -2.2523581981658936
    5. 'EW' → logprob: -2.7523581981658936
    6. '   ' → logprob: -3.0023581981658936
    7. 'the' → logprob: -3.2523581981658936
    8. ' the' → logprob: -3.6273581981658936
    9. ',' → logprob: -3.7523581981658936
    10. 'E' → logprob: -4.002358436584473

Token 360: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.08158622682094574
    2. 'arr' → logprob: -3.4565861225128174
    3. 'from' → logprob: -4.4565863609313965
    4. 'arrival' → logprob: -4.9565863609313965
    5. ',' → logprob: -5.0815863609313965
    6. '   ' → logprob: -5.7065863609313965
    7. 's' → logprob: -5.8315863609313965
    8. ' from' → logprob: -6.0815863609313965
    9. ' arrival' → logprob: -6.5815863609313965
    10. '_e' → logprob: -6.5815863609313965

Token 361: 'ive' (ID: 585)
  Prédit: 'ive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ive' → logprob: -0.5664913058280945
    2. 'ival' → logprob: -0.9414913058280945
    3. 'al' → logprob: -3.1914913654327393
    4. '   ' → logprob: -7.69149112701416
    5. 'e' → logprob: -8.44149112701416
    6. 'ial' → logprob: -8.94149112701416
    7. 'val' → logprob: -9.31649112701416
    8. 'iving' → logprob: -9.31649112701416
    9. 'ivals' → logprob: -9.81649112701416
    10. '['' → logprob: -10.31649112701416

Token 362: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5471993088722229
    2. '   ' → logprob: -1.9221992492675781
    3. '):
' → logprob: -2.172199249267578
    4. ':' → logprob: -3.047199249267578
    5. 'from' → logprob: -3.922199249267578
    6. ':
' → logprob: -4.297199249267578
    7. ' or' → logprob: -4.672199249267578
    8. ' in' → logprob: -4.672199249267578
    9. ' from' → logprob: -4.672199249267578
    10. ' (' → logprob: -5.172199249267578

Token 363: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3785300552845001
    2. ',' → logprob: -1.5035300254821777
    3. ':' → logprob: -3.1285300254821777
    4. ' and' → logprob: -4.128530025482178
    5. 'from' → logprob: -5.753530025482178
    6. ' in' → logprob: -5.878530025482178
    7. '):
' → logprob: -6.003530025482178
    8. ' (' → logprob: -6.003530025482178
    9. '==' → logprob: -6.128530025482178
    10. ' or' → logprob: -6.378530025482178

Token 364: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6111891269683838
    2. ' if' → logprob: -1.1111891269683838
    3. ',' → logprob: -2.986189126968384
    4. 'if' → logprob: -3.361189126968384
    5. ':' → logprob: -4.986188888549805
    6. ' (' → logprob: -5.236188888549805
    7. ' =' → logprob: -5.236188888549805
    8. ':
' → logprob: -5.361188888549805
    9. 'd' → logprob: -5.986188888549805
    10. 'E' → logprob: -6.111188888549805

Token 365: ' Truck' (ID: 45701)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.319057434797287
    2. ' if' → logprob: -1.6940574645996094
    3. ',' → logprob: -3.1940574645996094
    4. 'if' → logprob: -3.4440574645996094
    5. ':' → logprob: -5.694057464599609
    6. ' (' → logprob: -6.069057464599609
    7. 'E' → logprob: -6.319057464599609
    8. 'd' → logprob: -6.819057464599609
    9. ' and' → logprob: -6.944057464599609
    10. ' =' → logprob: -7.444057464599609

Token 366: ' comes' (ID: 5124)
  Prédit: '_dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dir' → logprob: -0.8833335638046265
    2. '_direction' → logprob: -1.7583335638046265
    3. ' can' → logprob: -2.758333683013916
    4. 's' → logprob: -2.758333683013916
    5. ' =' → logprob: -2.883333683013916
    6. '   ' → logprob: -3.383333683013916
    7. 'can' → logprob: -4.133333683013916
    8. '_d' → logprob: -4.258333683013916
    9. '_arr' → logprob: -4.258333683013916
    10. '_can' → logprob: -4.508333683013916

Token 367: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5518107414245605
    2. '   ' → logprob: -1.6768107414245605
    3. 'in' → logprob: -3.5518107414245605
    4. 's' → logprob: -3.5518107414245605
    5. ' from' → logprob: -3.5518107414245605
    6. ',' → logprob: -3.9268107414245605
    7. ')' → logprob: -4.4268107414245605
    8. 'on' → logprob: -4.5518107414245605
    9. '_' → logprob: -4.6768107414245605
    10. ' on' → logprob: -4.6768107414245605

Token 368: ' opposite' (ID: 23821)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.12767332792282104
    2. ' opposite' → logprob: -2.377673387527466
    3. 'dir' → logprob: -4.002673149108887
    4. ' dir' → logprob: -6.002673149108887
    5. 'the' → logprob: -6.377673149108887
    6. 'direction' → logprob: -6.377673149108887
    7. 'next' → logprob: -7.752673149108887
    8. ' the' → logprob: -7.752673149108887
    9. '{'' → logprob: -8.002673149108887
    10. '{' → logprob: -8.502673149108887

Token 369: ' direction' (ID: 9262)
  Prédit: ' direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' direction' → logprob: -0.7037661671638489
    2. 'direction' → logprob: -1.203766107559204
    3. '<|end|>' → logprob: -3.078766107559204
    4. 'd' → logprob: -3.203766107559204
    5. '_direction' → logprob: -3.453766107559204
    6. ')' → logprob: -3.703766107559204
    7. '_d' → logprob: -4.203766345977783
    8. '_' → logprob: -4.453766345977783
    9. ' to' → logprob: -5.328766345977783
    10. ' of' → logprob: -5.328766345977783

Token 370: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4103381335735321
    2. ',' → logprob: -1.6603381633758545
    3. ':' → logprob: -2.5353381633758545
    4. ' and' → logprob: -3.5353381633758545
    5. '):' → logprob: -4.785337924957275
    6. '):
' → logprob: -4.910337924957275
    7. 'def' → logprob: -5.160337924957275
    8. ' to' → logprob: -6.035337924957275
    9. ':
' → logprob: -6.035337924957275
    10. '.' → logprob: -6.285337924957275

Token 371: ' dir' (ID: 5609)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dir' → logprob: -0.0297965370118618
    2. ' dir' → logprob: -3.529796600341797
    3. 'direction' → logprob: -11.029796600341797
    4. 'arrival' → logprob: -11.779796600341797
    5. '(dir' → logprob: -12.154796600341797
    6. 'arr' → logprob: -12.404796600341797
    7. 'next' → logprob: -12.404796600341797
    8. 'op' → logprob: -13.279796600341797
    9. '	dir' → logprob: -13.279796600341797
    10. ' arrival' → logprob: -13.779796600341797

Token 372: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.028643421828746796
    2. '_op' → logprob: -4.528643608093262
    3. 'op' → logprob: -4.778643608093262
    4. 'arr' → logprob: -5.653643608093262
    5. '_from' → logprob: -7.153643608093262
    6. '   ' → logprob: -7.278643608093262
    7. '_depart' → logprob: -7.403643608093262
    8. 'from' → logprob: -7.528643608093262
    9. 'arrival' → logprob: -8.153643608093262
    10. '_out' → logprob: -8.153643608093262

Token 373: 'ive' (ID: 585)
  Prédit: 'ive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ive' → logprob: -0.005011494271457195
    2. 'ival' → logprob: -5.505011558532715
    3. '   ' → logprob: -8.005011558532715
    4. 'e' → logprob: -8.630011558532715
    5. 've' → logprob: -9.692511558532715
    6. ',' → logprob: -10.380011558532715
    7. 'val' → logprob: -10.942511558532715
    8. ' ' → logprob: -11.005011558532715
    9. 'ived' → logprob: -11.317511558532715
    10. ')' → logprob: -11.317511558532715

Token 374: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03560030087828636
    2. 'def' → logprob: -4.535600185394287
    3. ',' → logprob: -4.660600185394287
    4. ':' → logprob: -4.785600185394287
    5. '):' → logprob: -6.285600185394287
    6. '):
' → logprob: -6.410600185394287
    7. ' if' → logprob: -7.160600185394287
    8. ' and' → logprob: -7.660600185394287
    9. '<|end|>' → logprob: -8.160600662231445
    10. ':
' → logprob: -8.160600662231445

Token 375: ' so' (ID: 813)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7131674289703369
    2. ' so' → logprob: -1.088167428970337
    3. ' return' → logprob: -1.963167428970337
    4. 'return' → logprob: -5.088167190551758
    5. ' and' → logprob: -5.588167190551758
    6. '#' → logprob: -5.588167190551758
    7. ' we' → logprob: -5.963167190551758
    8. ' it' → logprob: -6.213167190551758
    9. ' allowing' → logprob: -6.338167190551758
    10. ' #' → logprob: -6.588167190551758

Token 376: ' is' (ID: 382)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7681013941764832
    2. ' opp' → logprob: -1.768101453781128
    3. 'op' → logprob: -1.893101453781128
    4. ' dir' → logprob: -2.643101453781128
    5. '#' → logprob: -3.643101453781128
    6. 'dir' → logprob: -4.018101215362549
    7. ' opposite' → logprob: -4.018101215362549
    8. 'return' → logprob: -4.768101215362549
    9. 'from' → logprob: -5.018101215362549
    10. ' the' → logprob: -5.018101215362549

Token 377: ' arriving' (ID: 53419)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5656030178070068
    2. 'not' → logprob: -2.065603017807007
    3. ' coming' → logprob: -2.565603017807007
    4. 'coming' → logprob: -3.440603017807007
    5. ' arriving' → logprob: -3.440603017807007
    6. ' going' → logprob: -3.690603017807007
    7. 'allowed' → logprob: -4.190603256225586
    8. ' trying' → logprob: -4.315603256225586
    9. 'going' → logprob: -4.315603256225586
    10. ' moving' → logprob: -4.315603256225586

Token 378: ' on' (ID: 402)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6160077452659607
    2. ' from' → logprob: -1.1160078048706055
    3. '   ' → logprob: -3.3660078048706055
    4. ' at' → logprob: -3.6160078048706055
    5. '_' → logprob: -3.8660078048706055
    6. ')' → logprob: -3.8660078048706055
    7. '.' → logprob: -5.4910078048706055
    8. ' ' → logprob: -5.6160078048706055
    9. '_from' → logprob: -5.7410078048706055
    10. ' to' → logprob: -5.7410078048706055

Token 379: ' the' (ID: 290)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.24575014412403107
    2. ' opposite' → logprob: -1.6207501888275146
    3. ' the' → logprob: -4.9957499504089355
    4. 'the' → logprob: -5.1207499504089355
    5. 'direction' → logprob: -6.4957499504089355
    6. 'dir' → logprob: -6.7457499504089355
    7. ' op' → logprob: -6.9957499504089355
    8. ' dir' → logprob: -7.2457499504089355
    9. '```' → logprob: -7.7457499504089355
    10. 'next' → logprob: -7.9957499504089355

Token 380: ' edge' (ID: 11165)
  Prédit: ' opposite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' opposite' → logprob: -0.17694588005542755
    2. 'op' → logprob: -2.051945924758911
    3. ' next' → logprob: -4.676945686340332
    4. 'next' → logprob: -5.551945686340332
    5. 'direction' → logprob: -5.801945686340332
    6. 'arrival' → logprob: -6.176945686340332
    7. 'incoming' → logprob: -6.176945686340332
    8. ' road' → logprob: -6.301945686340332
    9. ' line' → logprob: -6.426945686340332
    10. ' arrival' → logprob: -6.801945686340332

Token 381: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2311466485261917
    2. '):' → logprob: -2.9811465740203857
    3. ' and' → logprob: -3.6061465740203857
    4. ')' → logprob: -3.6061465740203857
    5. ':' → logprob: -3.8561465740203857
    6. '.' → logprob: -4.106146812438965
    7. ',' → logprob: -4.106146812438965
    8. 'def' → logprob: -4.481146812438965
    9. '):
' → logprob: -4.606146812438965
    10. 'from' → logprob: -5.106146812438965

Token 382: ' that' (ID: 484)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.8280580639839172
    2. 'op' → logprob: -1.8280580043792725
    3. 'reverse' → logprob: -2.3280580043792725
    4. ' the' → logprob: -2.5780580043792725
    5. 'direction' → logprob: -2.7030580043792725
    6. 'that' → logprob: -3.0780580043792725
    7. ' opposite' → logprob: -3.9530580043792725
    8. 'front' → logprob: -4.453058242797852
    9. ' direction' → logprob: -4.703058242797852
    10. ' code' → logprob: -4.703058242797852

Token 383: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.0291238222271204
    2. 'op' → logprob: -4.779123783111572
    3. ' direction' → logprob: -4.904123783111572
    4. 'def' → logprob: -5.154123783111572
    5. 'dir' → logprob: -6.654123783111572
    6. 'return' → logprob: -7.529123783111572
    7. ' opposite' → logprob: -7.654123783111572
    8. '#' → logprob: -7.654123783111572
    9. '   ' → logprob: -7.904123783111572
    10. 'function' → logprob: -7.904123783111572

Token 384: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3322094976902008
    2. ':' → logprob: -2.332209587097168
    3. '):' → logprob: -2.457209587097168
    4. 'def' → logprob: -3.332209587097168
    5. '):
' → logprob: -3.582209587097168
    6. ',' → logprob: -3.832209587097168
    7. ':
' → logprob: -4.832209587097168
    8. ' if' → logprob: -6.957209587097168
    9. '(' → logprob: -7.457209587097168
    10. '[' → logprob: -7.582209587097168

Token 385: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003123287111520767
    2. 'def' → logprob: -7.3781232833862305
    3. ':' → logprob: -7.8781232833862305
    4. '):' → logprob: -8.00312328338623
    5. '):
' → logprob: -8.00312328338623
    6. '    
' → logprob: -8.12812328338623
    7. ',' → logprob: -8.50312328338623
    8. ' if' → logprob: -8.50312328338623
    9. '<|end|>' → logprob: -8.50312328338623
    10. ')' → logprob: -8.75312328338623

Token 386: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005129626952111721
    2. ' if' → logprob: -5.880129814147949
    3. '    
' → logprob: -6.880129814147949
    4. 'if' → logprob: -7.005129814147949
    5. 'def' → logprob: -9.63012981414795
    6. '
' → logprob: -9.75512981414795
    7. '	if' → logprob: -10.25512981414795
    8. 'signal' → logprob: -10.38012981414795
    9. ',' → logprob: -10.50512981414795
    10. '  
' → logprob: -10.63012981414795

Token 387: ' At' (ID: 3604)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2982076406478882
    2. 'if' → logprob: -1.5482076406478882
    3. ' if' → logprob: -3.1732077598571777
    4. 'op' → logprob: -6.673207759857178
    5. ' opp' → logprob: -7.548207759857178
    6. 'signal' → logprob: -7.923207759857178
    7. '```' → logprob: -8.29820728302002
    8. 'd' → logprob: -8.67320728302002
    9. 'def' → logprob: -8.92320728302002
    10. 'incoming' → logprob: -9.17320728302002

Token 388: ' signals' (ID: 29026)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.9568378925323486
    2. 'signals' → logprob: -1.9568378925323486
    3. 'signal' → logprob: -2.2068378925323486
    4. ' dir' → logprob: -2.3318378925323486
    5. 'intersection' → logprob: -2.3318378925323486
    6. 'dir' → logprob: -2.3318378925323486
    7. ' signals' → logprob: -2.8318378925323486
    8. ' intersection' → logprob: -3.2068378925323486
    9. ' the' → logprob: -3.5818378925323486
    10. '#' → logprob: -3.9568378925323486

Token 389: ',' (ID: 11)
  Prédit: '.get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.5716546177864075
    2. '[' → logprob: -1.0716545581817627
    3. ' =' → logprob: -3.9466545581817627
    4. ',' → logprob: -4.071654796600342
    5. ':' → logprob: -4.071654796600342
    6. 'def' → logprob: -4.821654796600342
    7. '=' → logprob: -4.946654796600342
    8. 's' → logprob: -5.571654796600342
    9. '   ' → logprob: -5.696654796600342
    10. 'get' → logprob: -6.446654796600342

Token 390: ' when' (ID: 1261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2244622707366943
    2. ' if' → logprob: -1.2244622707366943
    3. ' opp' → logprob: -2.2244622707366943
    4. ' dir' → logprob: -2.8494622707366943
    5. '#' → logprob: -3.2244622707366943
    6. ' signal' → logprob: -3.2244622707366943
    7. ' #' → logprob: -3.8494622707366943
    8. 'if' → logprob: -3.8494622707366943
    9. 'incoming' → logprob: -4.349462509155273
    10. ' d' → logprob: -4.474462509155273

Token 391: ' the' (ID: 290)
  Prédit: ' dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dir' → logprob: -0.5049469470977783
    2. 'dir' → logprob: -1.1299469470977783
    3. ' not' → logprob: -3.7549469470977783
    4. 'signal' → logprob: -4.004946708679199
    5. 'not' → logprob: -4.629946708679199
    6. ' signal' → logprob: -4.754946708679199
    7. 'direction' → logprob: -6.004946708679199
    8. '(dir' → logprob: -6.629946708679199
    9. ' signals' → logprob: -6.629946708679199
    10. ' next' → logprob: -6.879946708679199

Token 392: ' light' (ID: 4207)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dir' → logprob: -0.8151504397392273
    2. ' dir' → logprob: -1.565150499343872
    3. 'direction' → logprob: -2.065150499343872
    4. 'signal' → logprob: -3.190150499343872
    5. ' direction' → logprob: -3.565150499343872
    6. ' signal' → logprob: -4.065150260925293
    7. 'arr' → logprob: -4.190150260925293
    8. 'arrival' → logprob: -4.190150260925293
    9. 'def' → logprob: -4.315150260925293
    10. ' next' → logprob: -4.565150260925293

Token 393: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.3561576306819916
    2. ' allows' → logprob: -1.731157660484314
    3. 'is' → logprob: -2.4811575412750244
    4. 'allows' → logprob: -3.6061575412750244
    5. ' changes' → logprob: -6.2311577796936035
    6. 's' → logprob: -6.3561577796936035
    7. 'switch' → logprob: -6.8561577796936035
    8. ' for' → logprob: -6.8561577796936035
    9. 'for' → logprob: -7.1061577796936035
    10. ' switches' → logprob: -7.2311577796936035

Token 394: ' green' (ID: 8851)
  Prédit: ' green'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' green' → logprob: -0.8400381207466125
    2. 'green' → logprob: -1.0900380611419678
    3. 'EW' → logprob: -1.5900380611419678
    4. 'NS' → logprob: -5.465038299560547
    5. ' EW' → logprob: -5.715038299560547
    6. 'E' → logprob: -6.090038299560547
    7. 'True' → logprob: -6.090038299560547
    8. 'ew' → logprob: -6.340038299560547
    9. 'Green' → logprob: -6.340038299560547
    10. ''E' → logprob: -6.340038299560547

Token 395: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3282897472381592
    2. ',' → logprob: -1.5782897472381592
    3. ' in' → logprob: -3.078289747238159
    4. 'for' → logprob: -4.203289985656738
    5. ' ,' → logprob: -6.078289985656738
    6. ' and' → logprob: -6.078289985656738
    7. '   ' → logprob: -6.453289985656738
    8. 'in' → logprob: -6.703289985656738
    9. ')' → logprob: -7.453289985656738
    10. 'and' → logprob: -7.453289985656738

Token 396: ' NS' (ID: 6950)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dir' → logprob: -0.669944167137146
    2. ' dir' → logprob: -1.169944167137146
    3. ''' → logprob: -2.4199442863464355
    4. 'EW' → logprob: -3.1699442863464355
    5. ''E' → logprob: -4.4199442863464355
    6. ' EW' → logprob: -4.9199442863464355
    7. 'direction' → logprob: -5.1699442863464355
    8. 'NS' → logprob: -5.6699442863464355
    9. ' direction' → logprob: -5.9199442863464355
    10. ' '' → logprob: -6.0449442863464355

Token 397: ' =>' (ID: 871)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4655926525592804
    2. ' or' → logprob: -1.840592622756958
    3. ' directions' → logprob: -2.465592622756958
    4. ' and' → logprob: -2.590592622756958
    5. ' ,' → logprob: -4.215592861175537
    6. ' at' → logprob: -4.840592861175537
    7. 'direction' → logprob: -5.465592861175537
    8. 'and' → logprob: -5.590592861175537
    9. '   ' → logprob: -5.840592861175537
    10. ':' → logprob: -5.840592861175537

Token 398: ' can' (ID: 665)
  Prédit: '(dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dir' → logprob: -0.4613758623600006
    2. 'dir' → logprob: -1.3363758325576782
    3. ' dir' → logprob: -2.7113759517669678
    4. ' (' → logprob: -3.7113759517669678
    5. 'if' → logprob: -4.711375713348389
    6. 'return' → logprob: -6.836375713348389
    7. '((' → logprob: -6.961375713348389
    8. '(' → logprob: -7.086375713348389
    9. ' if' → logprob: -7.086375713348389
    10. '(not' → logprob: -7.336375713348389

Token 399: ' enter' (ID: 5747)
  Prédit: 'go'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'go' → logprob: -0.7126068472862244
    2. 'enter' → logprob: -1.2126069068908691
    3. ' go' → logprob: -2.587606906890869
    4. 'arr' → logprob: -2.837606906890869
    5. ' enter' → logprob: -3.712606906890869
    6. 'pro' → logprob: -4.087606906890869
    7. 'pass' → logprob: -4.337606906890869
    8. 'move' → logprob: -4.962606906890869
    9. ' proceed' → logprob: -5.212606906890869
    10. ' move' → logprob: -5.962606906890869

Token 400: ' intersection' (ID: 42002)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.07548430562019348
    2. 'if' → logprob: -3.325484275817871
    3. '   ' → logprob: -3.450484275817871
    4. ' for' → logprob: -6.950484275817871
    5. ' or' → logprob: -7.325484275817871
    6. ' and' → logprob: -7.325484275817871
    7. ',' → logprob: -7.700484275817871
    8. 'from' → logprob: -7.825484275817871
    9. ' in' → logprob: -7.950484275817871
    10. 'def' → logprob: -8.200484275817871

Token 401: ' moving' (ID: 10067)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6156286001205444
    2. ' if' → logprob: -0.8656286001205444
    3. 'def' → logprob: -4.740628719329834
    4. ' and' → logprob: -5.240628719329834
    5. 'from' → logprob: -5.365628719329834
    6. ' for' → logprob: -5.490628719329834
    7. ' from' → logprob: -5.490628719329834
    8. ',' → logprob: -5.865628719329834
    9. ' in' → logprob: -6.240628719329834
    10. 'if' → logprob: -6.615628719329834

Token 402: ' north' (ID: 16173)
  Prédit: 'north'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'north' → logprob: -0.23614220321178436
    2. ''N' → logprob: -2.611142158508301
    3. 'in' → logprob: -3.611142158508301
    4. 'North' → logprob: -3.736142158508301
    5. 'along' → logprob: -3.736142158508301
    6. 'N' → logprob: -3.986142158508301
    7. ' north' → logprob: -4.111142158508301
    8. ' along' → logprob: -5.236142158508301
    9. ' North' → logprob: -5.236142158508301
    10. ''' → logprob: -5.986142158508301

Token 403: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.8644021153450012
    2. ',' → logprob: -1.7394020557403564
    3. 'or' → logprob: -2.3644020557403564
    4. ')' → logprob: -2.4894020557403564
    5. '')' → logprob: -3.7394020557403564
    6. 'wards' → logprob: -3.7394020557403564
    7. 'from' → logprob: -3.8644020557403564
    8. 'south' → logprob: -3.9894020557403564
    9. ''' → logprob: -4.1144022941589355
    10. 'def' → logprob: -4.2394022941589355

Token 404: ' south' (ID: 15019)
  Prédit: 'south'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'south' → logprob: -0.3870348334312439
    2. ' south' → logprob: -1.1370348930358887
    3. 's' → logprob: -9.26203441619873
    4. '```' → logprob: -10.38703441619873
    5. ' ' → logprob: -10.76203441619873
    6. ' ' → logprob: -12.26203441619873
    7. '_s' → logprob: -12.88703441619873
    8. ' s' → logprob: -14.13703441619873
    9. '   ' → logprob: -14.13703441619873
    10. 'outh' → logprob: -14.26203441619873

Token 405: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.210945263504982
    2. 'def' → logprob: -2.3359453678131104
    3. ',' → logprob: -3.4609453678131104
    4. ' or' → logprob: -4.085945129394531
    5. ':' → logprob: -4.835945129394531
    6. '.' → logprob: -5.335945129394531
    7. ')' → logprob: -5.585945129394531
    8. ' (' → logprob: -5.835945129394531
    9. ' return' → logprob: -5.960945129394531
    10. ' if' → logprob: -6.085945129394531

Token 406: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011379771865904331
    2. ',' → logprob: -5.261379718780518
    3. 'def' → logprob: -5.886379718780518
    4. '):' → logprob: -7.136379718780518
    5. ')' → logprob: -7.261379718780518
    6. ' and' → logprob: -8.011380195617676
    7. ' if' → logprob: -8.136380195617676
    8. '.' → logprob: -8.136380195617676
    9. ':' → logprob: -8.261380195617676
    10. ' at' → logprob: -9.261380195617676

Token 407: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10560064762830734
    2. ' if' → logprob: -2.480600595474243
    3. 'if' → logprob: -4.855600833892822
    4. ')' → logprob: -6.480600833892822
    5. ',' → logprob: -6.480600833892822
    6. ' and' → logprob: -7.230600833892822
    7. 'return' → logprob: -7.980600833892822
    8. ' or' → logprob: -7.980600833892822
    9. ' return' → logprob: -7.980600833892822
    10. 'direction' → logprob: -7.980600833892822

Token 408: ' when' (ID: 1261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.767725944519043
    2. ' if' → logprob: -0.767725944519043
    3. 'if' → logprob: -2.767725944519043
    4. ' dir' → logprob: -6.392725944519043
    5. '#' → logprob: -6.517725944519043
    6. ' direction' → logprob: -7.017725944519043
    7. ' allowed' → logprob: -7.142725944519043
    8. 'allowed' → logprob: -7.267725944519043
    9. 'direction' → logprob: -7.517725944519043
    10. ' at' → logprob: -7.642725944519043

Token 409: ' green' (ID: 8851)
  Prédit: ' dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dir' → logprob: -1.0208405256271362
    2. ' signal' → logprob: -1.5208405256271362
    3. 'signal' → logprob: -1.8958405256271362
    4. ' the' → logprob: -1.8958405256271362
    5. 'dir' → logprob: -3.145840644836426
    6. 'the' → logprob: -3.520840644836426
    7. 't' → logprob: -4.895840644836426
    8. ' t' → logprob: -5.145840644836426
    9. ' signals' → logprob: -5.395840644836426
    10. 'ew' → logprob: -5.645840644836426

Token 410: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3585602939128876
    2. 'for' → logprob: -1.23356032371521
    3. ' is' → logprob: -4.983560085296631
    4. '_for' → logprob: -6.858560085296631
    5. '   ' → logprob: -7.608560085296631
    6. ' ' → logprob: -8.608560562133789
    7. '==' → logprob: -8.608560562133789
    8. ' in' → logprob: -8.858560562133789
    9. 'is' → logprob: -8.983560562133789
    10. ' or' → logprob: -9.358560562133789

Token 411: ' EW' (ID: 143307)
  Prédit: 'EW'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EW' → logprob: -0.007097769994288683
    2. ' EW' → logprob: -5.1320977210998535
    3. ''E' → logprob: -7.2570977210998535
    4. ''' → logprob: -8.882098197937012
    5. 'ew' → logprob: -9.007098197937012
    6. 'E' → logprob: -9.257098197937012
    7. ' '' → logprob: -10.632098197937012
    8. 'east' → logprob: -10.882098197937012
    9. ' ' → logprob: -11.507098197937012
    10. '['' → logprob: -11.757098197937012

Token 412: ' =>' (ID: 871)
  Prédit: ' =>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =>' → logprob: -0.10543128103017807
    2. '=>' → logprob: -2.355431318283081
    3. ':' → logprob: -5.730431079864502
    4. ',' → logprob: -6.980431079864502
    5. ' (' → logprob: -8.10543155670166
    6. ':return' → logprob: -8.48043155670166
    7. '   ' → logprob: -9.23043155670166
    8. ' =>
' → logprob: -9.35543155670166
    9. ' ' → logprob: -9.73043155670166
    10. ' and' → logprob: -10.23043155670166

Token 413: ' can' (ID: 665)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dir' → logprob: -0.33619070053100586
    2. ' dir' → logprob: -1.4611907005310059
    3. 'return' → logprob: -3.336190700531006
    4. ' return' → logprob: -4.586190700531006
    5. '(dir' → logprob: -5.461190700531006
    6. 'if' → logprob: -6.961190700531006
    7. 'def' → logprob: -7.336190700531006
    8. 'direction' → logprob: -7.586190700531006
    9. '   ' → logprob: -7.836190700531006
    10. '#' → logprob: -8.086191177368164

Token 414: ' enter' (ID: 5747)
  Prédit: 'enter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enter' → logprob: -0.014494773931801319
    2. ' enter' → logprob: -4.514494895935059
    3. 'go' → logprob: -5.764494895935059
    4. ' go' → logprob: -8.764494895935059
    5. 'move' → logprob: -9.764494895935059
    6. 'arr' → logprob: -10.764494895935059
    7. 'pro' → logprob: -11.514494895935059
    8. 'pass' → logprob: -11.764494895935059
    9. ' ' → logprob: -11.889494895935059
    10. ' move' → logprob: -12.389494895935059

Token 415: ' intersection' (ID: 42002)
  Prédit: 'intersection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'intersection' → logprob: -0.4412652850151062
    2. ' intersection' → logprob: -1.066265344619751
    3. ' in' → logprob: -5.566265106201172
    4. ' moving' → logprob: -5.941265106201172
    5. 'moving' → logprob: -5.941265106201172
    6. 'in' → logprob: -6.691265106201172
    7. ' True' → logprob: -7.816265106201172
    8. 'inter' → logprob: -8.066265106201172
    9. '(inter' → logprob: -8.191265106201172
    10. ' on' → logprob: -8.316265106201172

Token 416: ' moving' (ID: 10067)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5653242468833923
    2. ' moving' → logprob: -1.440324306488037
    3. '   ' → logprob: -1.940324306488037
    4. ' in' → logprob: -3.690324306488037
    5. 'moving' → logprob: -4.940324306488037
    6. ' and' → logprob: -5.440324306488037
    7. ' dir' → logprob: -5.690324306488037
    8. ' =' → logprob: -6.315324306488037
    9. ' direction' → logprob: -6.565324306488037
    10. ',' → logprob: -6.690324306488037

Token 417: ' east' (ID: 23557)
  Prédit: 'east'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'east' → logprob: -0.029918834567070007
    2. ' east' → logprob: -3.529918909072876
    3. 'ew' → logprob: -9.529918670654297
    4. 'west' → logprob: -9.654918670654297
    5. 'either' → logprob: -11.404918670654297
    6. 'e' → logprob: -11.904918670654297
    7. '   ' → logprob: -12.529918670654297
    8. 'East' → logprob: -13.029918670654297
    9. ' ' → logprob: -13.029918670654297
    10. '```' → logprob: -14.279918670654297

Token 418: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.012669982388615608
    2. 'or' → logprob: -4.387670040130615
    3. ')' → logprob: -9.637669563293457
    4. '   ' → logprob: -10.137669563293457
    5. ',' → logprob: -11.512669563293457
    6. ' and' → logprob: -11.887669563293457
    7. ' ' → logprob: -12.012669563293457
    8. '<|end|>' → logprob: -12.387669563293457
    9. '	or' → logprob: -12.512669563293457
    10. '  ' → logprob: -12.512669563293457

Token 419: ' west' (ID: 14078)
  Prédit: 'west'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'west' → logprob: -0.038046084344387054
    2. ' west' → logprob: -3.28804612159729
    3. ' ' → logprob: -12.663045883178711
    4. 'w' → logprob: -14.538045883178711
    5. '   ' → logprob: -15.163045883178711
    6. '  ' → logprob: -15.288045883178711
    7. '```' → logprob: -16.28804588317871
    8. ' ' → logprob: -16.41304588317871
    9. '-west' → logprob: -16.53804588317871
    10. '       ' → logprob: -17.16304588317871

Token 420: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008278738707304
    2. 'def' → logprob: -5.383278846740723
    3. ',' → logprob: -6.633278846740723
    4. '
' → logprob: -7.008278846740723
    5. '    
' → logprob: -7.758278846740723
    6. ':' → logprob: -8.383278846740723
    7. '):
' → logprob: -8.758278846740723
    8. ')' → logprob: -9.008278846740723
    9. ' if' → logprob: -9.508278846740723
    10. '<|end|>' → logprob: -9.508278846740723

Token 421: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007797783240675926
    2. ' if' → logprob: -5.632797718048096
    3. ':' → logprob: -6.507797718048096
    4. '):
' → logprob: -7.507797718048096
    5. 'def' → logprob: -7.507797718048096
    6. 'if' → logprob: -8.007798194885254
    7. ':
' → logprob: -8.382798194885254
    8. '    
' → logprob: -8.757798194885254
    9. ',' → logprob: -9.132798194885254
    10. '):' → logprob: -9.132798194885254

Token 422: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3026100993156433
    2. 'if' → logprob: -1.677610158920288
    3. ' if' → logprob: -3.302610158920288
    4. 'allowed' → logprob: -4.177609920501709
    5. 'state' → logprob: -4.427609920501709
    6. 'ew' → logprob: -6.177609920501709
    7. 'signal' → logprob: -6.552609920501709
    8. 'd' → logprob: -6.802609920501709
    9. 'ns' → logprob: -6.927609920501709
    10. 'allow' → logprob: -7.302609920501709

Token 423: ' Truck' (ID: 45701)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.13759982585906982
    2. '   ' → logprob: -2.1375999450683594
    3. 'd' → logprob: -5.137599945068359
    4. 'signal' → logprob: -6.387599945068359
    5. ' if' → logprob: -7.137599945068359
    6. 'direction' → logprob: -7.387599945068359
    7. 'dir' → logprob: -7.762599945068359
    8. 'state' → logprob: -7.887599945068359
    9. 'op' → logprob: -8.88759994506836
    10. 'k' → logprob: -9.13759994506836

Token 424: ' can' (ID: 665)
  Prédit: '_dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dir' → logprob: -0.3018481731414795
    2. '_direction' → logprob: -2.3018481731414795
    3. 'from' → logprob: -3.1768481731414795
    4. '_arr' → logprob: -3.5518481731414795
    5. '_from' → logprob: -3.5518481731414795
    6. '_' → logprob: -4.051848411560059
    7. 'comes' → logprob: -5.301848411560059
    8. 'dir' → logprob: -5.301848411560059
    9. ' comes' → logprob: -5.426848411560059
    10. 's' → logprob: -5.551848411560059

Token 425: ' move' (ID: 5275)
  Prédit: 'go'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'go' → logprob: -1.0807175636291504
    2. 'arr' → logprob: -1.9557175636291504
    3. ' go' → logprob: -2.2057175636291504
    4. 'enter' → logprob: -2.2057175636291504
    5. 'only' → logprob: -2.3307175636291504
    6. ' only' → logprob: -2.9557175636291504
    7. 'come' → logprob: -2.9557175636291504
    8. ' enter' → logprob: -3.4557175636291504
    9. ' arrive' → logprob: -4.45571756362915
    10. ' come' → logprob: -4.58071756362915

Token 426: ' in' (ID: 306)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -1.4838182926177979
    2. 'in' → logprob: -1.6088182926177979
    3. 'only' → logprob: -2.233818292617798
    4. 'from' → logprob: -2.358818292617798
    5. ' in' → logprob: -2.858818292617798
    6. ' on' → logprob: -3.108818292617798
    7. 'through' → logprob: -3.108818292617798
    8. ' only' → logprob: -3.358818292617798
    9. 'onto' → logprob: -3.358818292617798
    10. 'into' → logprob: -3.483818292617798

Token 427: ' ' (ID: 220)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dir' → logprob: -0.5977458357810974
    2. 'direction' → logprob: -1.5977458953857422
    3. 'the' → logprob: -2.347745895385742
    4. 'any' → logprob: -3.097745895385742
    5. ' dir' → logprob: -3.597745895385742
    6. '['' → logprob: -4.097745895385742
    7. 'dire' → logprob: -4.222745895385742
    8. 'that' → logprob: -4.472745895385742
    9. 'either' → logprob: -5.222745895385742
    10. 'signal' → logprob: -5.722745895385742

Token 428: '4' (ID: 19)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dir' → logprob: -0.9407086968421936
    2. 'direction' → logprob: -0.9407086968421936
    3. 'the' → logprob: -2.315708637237549
    4. 'any' → logprob: -3.690708637237549
    5. 'next' → logprob: -4.065708637237549
    6. 'that' → logprob: -4.190708637237549
    7. ' dir' → logprob: -4.315708637237549
    8. 'dire' → logprob: -4.690708637237549
    9. 'op' → logprob: -4.815708637237549
    10. '['' → logprob: -5.315708637237549

Token 429: ' directions' (ID: 24921)
  Prédit: ' directions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' directions' → logprob: -0.01501324400305748
    2. 'dire' → logprob: -4.265013217926025
    3. ' possible' → logprob: -8.015013694763184
    4. 'possible' → logprob: -9.015013694763184
    5. '   ' → logprob: -9.640013694763184
    6. ' ['' → logprob: -10.015013694763184
    7. ' lines' → logprob: -10.140013694763184
    8. '['' → logprob: -10.640013694763184
    9. 'direction' → logprob: -10.640013694763184
    10. ' ways' → logprob: -10.890013694763184

Token 430: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32590946555137634
    2. '):
' → logprob: -2.450909376144409
    3. '):' → logprob: -2.700909376144409
    4. ',' → logprob: -2.950909376144409
    5. ':' → logprob: -3.825909376144409
    6. ' if' → logprob: -4.200909614562988
    7. ':
' → logprob: -4.700909614562988
    8. 'def' → logprob: -5.200909614562988
    9. ' and' → logprob: -5.325909614562988
    10. ' :' → logprob: -6.700909614562988

Token 431: ' but' (ID: 889)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16444265842437744
    2. '#' → logprob: -3.039442539215088
    3. 'return' → logprob: -3.164442539215088
    4. ' return' → logprob: -3.414442539215088
    5. ' if' → logprob: -4.039442539215088
    6. ' #' → logprob: -5.664442539215088
    7. 'if' → logprob: -6.539442539215088
    8. ' dir' → logprob: -7.039442539215088
    9. 'dir' → logprob: -7.164442539215088
    10. 'def' → logprob: -7.289442539215088

Token 432: ' arrive' (ID: 18338)
  Prédit: ' only'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' only' → logprob: -1.418743371963501
    2. ' the' → logprob: -1.543743371963501
    3. ' if' → logprob: -1.668743371963501
    4. '   ' → logprob: -2.418743371963501
    5. 'if' → logprob: -2.543743371963501
    6. '#' → logprob: -3.043743371963501
    7. 'the' → logprob: -3.418743371963501
    8. 'only' → logprob: -4.293743133544922
    9. ' return' → logprob: -4.543743133544922
    10. 'return' → logprob: -4.793743133544922

Token 433: ' from' (ID: 591)
  Prédit: ' from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.5649024248123169
    2. 'from' → logprob: -1.689902424812317
    3. '_' → logprob: -2.3149023056030273
    4. ' on' → logprob: -3.6899023056030273
    5. ' at' → logprob: -4.314902305603027
    6. '   ' → logprob: -4.314902305603027
    7. ' only' → logprob: -4.564902305603027
    8. '_from' → logprob: -4.564902305603027
    9. ' ' → logprob: -4.814902305603027
    10. 'ing' → logprob: -4.939902305603027

Token 434: ' direction' (ID: 9262)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.29074758291244507
    2. 'the' → logprob: -2.16574764251709
    3. ' opposite' → logprob: -2.79074764251709
    4. ' the' → logprob: -3.66574764251709
    5. 'dir' → logprob: -4.41574764251709
    6. 'direction' → logprob: -4.66574764251709
    7. ' dir' → logprob: -5.16574764251709
    8. ' direction' → logprob: -5.41574764251709
    9. ''op' → logprob: -5.54074764251709
    10. '{'' → logprob: -5.91574764251709

Token 435: ' opposite' (ID: 23821)
  Prédit: ' opposite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' opposite' → logprob: -0.541743278503418
    2. ' of' → logprob: -2.416743278503418
    3. 'op' → logprob: -2.791743278503418
    4. ' that' → logprob: -3.166743278503418
    5. '_op' → logprob: -4.166743278503418
    6. ' =' → logprob: -4.166743278503418
    7. ' '' → logprob: -4.291743278503418
    8. ' (' → logprob: -4.291743278503418
    9. '_arr' → logprob: -4.291743278503418
    10. ',' → logprob: -4.416743278503418

Token 436: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.8364983797073364
    2. ' of' → logprob: -1.0864983797073364
    3. 'to' → logprob: -2.586498260498047
    4. 'def' → logprob: -3.461498260498047
    5. 'dir' → logprob: -3.461498260498047
    6. 'of' → logprob: -4.211498260498047
    7. '   ' → logprob: -4.461498260498047
    8. 'd' → logprob: -4.461498260498047
    9. '(dir' → logprob: -4.961498260498047
    10. ':' → logprob: -5.211498260498047

Token 437: ' moving' (ID: 10067)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dir' → logprob: -0.007665421348065138
    2. ' dir' → logprob: -4.882665634155273
    3. 'direction' → logprob: -10.757665634155273
    4. '   ' → logprob: -11.632665634155273
    5. 'next' → logprob: -11.757665634155273
    6. 'op' → logprob: -11.882665634155273
    7. '	dir' → logprob: -12.632665634155273
    8. '(dir' → logprob: -12.757665634155273
    9. ' ' → logprob: -12.882665634155273
    10. '  ' → logprob: -14.007665634155273

Token 438: ' direction' (ID: 9262)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2098489999771118
    2. '   ' → logprob: -1.9598489999771118
    3. 'direction' → logprob: -2.7098488807678223
    4. '):' → logprob: -3.2098488807678223
    5. 'def' → logprob: -3.2098488807678223
    6. ',' → logprob: -3.3348488807678223
    7. ' ' → logprob: -3.3348488807678223
    8. ':' → logprob: -3.3348488807678223
    9. '_direction' → logprob: -3.3348488807678223
    10. ' direction' → logprob: -3.5848488807678223

Token 439: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14937812089920044
    2. 'def' → logprob: -3.1493780612945557
    3. ':' → logprob: -3.2743780612945557
    4. '):
' → logprob: -4.149378299713135
    5. '):' → logprob: -4.149378299713135
    6. ',' → logprob: -4.274378299713135
    7. ':
' → logprob: -5.524378299713135
    8. ' (' → logprob: -6.899378299713135
    9. ' :' → logprob: -6.899378299713135
    10. ' if' → logprob: -6.899378299713135

Token 440: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008020033710636199
    2. '    
' → logprob: -8.000802040100098
    3. ' if' → logprob: -8.750802040100098
    4. 'def' → logprob: -9.250802040100098
    5. ' 
' → logprob: -10.625802040100098
    6. ':' → logprob: -10.875802040100098
    7. '#' → logprob: -11.000802040100098
    8. ' return' → logprob: -11.250802040100098
    9. '<|end|>' → logprob: -11.250802040100098
    10. ',' → logprob: -11.375802040100098

Token 441: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04964866116642952
    2. ' if' → logprob: -3.6746487617492676
    3. 'if' → logprob: -4.174648761749268
    4. 'allowed' → logprob: -6.924648761749268
    5. 'd' → logprob: -7.174648761749268
    6. 'arr' → logprob: -7.299648761749268
    7. 'state' → logprob: -7.424648761749268
    8. 'op' → logprob: -7.799648761749268
    9. '#' (adapté à ' #') → logprob: -7.799648761749268
    10. 'incoming' → logprob: -7.924648761749268

Token 442: ' Here' (ID: 7306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9475986957550049
    2. 'if' → logprob: -1.0725986957550049
    3. 'op' → logprob: -2.322598695755005
    4. 'allowed' → logprob: -2.572598695755005
    5. 'arr' → logprob: -3.947598695755005
    6. 'dir' → logprob: -4.072598457336426
    7. 'from' → logprob: -4.447598457336426
    8. '#' → logprob: -4.822598457336426
    9. 'd' → logprob: -4.947598457336426
    10. ' if' → logprob: -5.322598457336426

Token 443: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5547189712524414
    2. ' if' → logprob: -1.5547189712524414
    3. ' is' → logprob: -1.9297189712524414
    4. 'def' → logprob: -3.6797189712524414
    5. ',' → logprob: -5.054718971252441
    6. ':' → logprob: -5.179718971252441
    7. 'is' → logprob: -5.179718971252441
    8. ''s' → logprob: -5.554718971252441
    9. ' =' → logprob: -6.179718971252441
    10. 'if' → logprob: -6.304718971252441

Token 444: ' dir' (ID: 5609)
  Prédit: ' opp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' opp' → logprob: -0.3046053349971771
    2. 'op' → logprob: -3.55460524559021
    3. ' if' → logprob: -3.67960524559021
    4. '#' → logprob: -3.67960524559021
    5. ' dir' → logprob: -3.67960524559021
    6. ' opposite' → logprob: -3.92960524559021
    7. '   ' → logprob: -4.054605484008789
    8. ' d' → logprob: -4.179605484008789
    9. 'd' → logprob: -4.179605484008789
    10. 'incoming' → logprob: -4.179605484008789

Token 445: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.0062956297770142555
    2. '_' → logprob: -5.631295680999756
    3. ' =' → logprob: -7.131295680999756
    4. ')' → logprob: -7.256295680999756
    5. '_enter' → logprob: -8.256295204162598
    6. '_allowed' → logprob: -8.631295204162598
    7. '_allow' → logprob: -8.631295204162598
    8. '=' → logprob: -9.381295204162598
    9. '_continue' → logprob: -10.006295204162598
    10. 'arr' → logprob: -10.006295204162598

Token 446: 'ive' (ID: 585)
  Prédit: 'ive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ive' → logprob: -0.0006258221692405641
    2. '=' → logprob: -9.125625610351562
    3. 'ieve' → logprob: -9.625625610351562
    4. ' =' → logprob: -9.625625610351562
    5. '_arr' → logprob: -9.750625610351562
    6. '   ' → logprob: -10.000625610351562
    7. 'e' → logprob: -10.375625610351562
    8. '```' → logprob: -10.625625610351562
    9. 'rive' → logprob: -10.750625610351562
    10. ')' → logprob: -10.875625610351562

Token 447: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.7624870538711548
    2. ' in' → logprob: -1.5124870538711548
    3. '):' → logprob: -2.3874869346618652
    4. ' not' → logprob: -3.0124869346618652
    5. ')' → logprob: -3.1374869346618652
    6. 'is' → logprob: -3.3874869346618652
    7. '==' → logprob: -3.7624869346618652
    8. 'in' → logprob: -4.137486934661865
    9. ':' → logprob: -4.762486934661865
    10. '=' → logprob: -5.012486934661865

Token 448: ' direction' (ID: 9262)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.7527280449867249
    2. ' the' → logprob: -1.00272798538208
    3. 'op' → logprob: -2.87772798538208
    4. ' opposite' → logprob: -3.12772798538208
    5. ' next' → logprob: -4.50272798538208
    6. 'next' → logprob: -4.75272798538208
    7. 'dir' → logprob: -4.87772798538208
    8. ' a' → logprob: -5.00272798538208
    9. ' dir' → logprob: -5.12772798538208
    10. ''' → logprob: -5.62772798538208

Token 449: ' the' (ID: 290)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1276963949203491
    2. '):' → logprob: -1.3776963949203491
    3. ' of' → logprob: -2.2526965141296387
    4. ':' → logprob: -3.1276965141296387
    5. '<|end|>' → logprob: -3.3776965141296387
    6. '   ' → logprob: -3.5026965141296387
    7. ' to' → logprob: -3.7526965141296387
    8. ',' → logprob: -3.7526965141296387
    9. 'of' → logprob: -4.252696514129639
    10. '==' → logprob: -4.377696514129639

Token 450: ' truck' (ID: 13790)
  Prédit: 'truck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'truck' → logprob: -0.18112319707870483
    2. ' truck' → logprob: -1.8061232566833496
    3. 'vehicle' → logprob: -7.80612325668335
    4. ' user' → logprob: -9.056122779846191
    5. 'user' → logprob: -9.181122779846191
    6. ' vehicle' → logprob: -9.306122779846191
    7. 'arr' → logprob: -9.556122779846191
    8. 'intersection' → logprob: -9.681122779846191
    9. '#' → logprob: -9.806122779846191
    10. ' next' → logprob: -9.931122779846191

Token 451: ' moves' (ID: 19523)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.4252687990665436
    2. 'is' → logprob: -1.8002687692642212
    3. ' is' → logprob: -2.8002688884735107
    4. 'arr' → logprob: -2.9252688884735107
    5. ' wants' → logprob: -3.8002688884735107
    6. 'ent' → logprob: -4.925268650054932
    7. 'moves' → logprob: -5.175268650054932
    8. ' intends' → logprob: -5.300268650054932
    9. 'will' → logprob: -5.550268650054932
    10. ' arrives' → logprob: -5.550268650054932

Token 452: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.939588189125061
    2. '):' → logprob: -0.939588189125061
    3. ':' → logprob: -1.689588189125061
    4. '):
' → logprob: -3.5645880699157715
    5. ',' → logprob: -6.5645880699157715
    6. ':
' → logprob: -6.6895880699157715
    7. '[' → logprob: -7.4395880699157715
    8. ')' → logprob: -7.5645880699157715
    9. 'def' → logprob: -7.5645880699157715
    10. ' :' → logprob: -8.43958854675293

Token 453: ' intersection' (ID: 42002)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34351620078086853
    2. '):
' → logprob: -2.3435161113739014
    3. '):' → logprob: -2.3435161113739014
    4. 'def' → logprob: -3.3435161113739014
    5. ':' → logprob: -3.3435161113739014
    6. ',' → logprob: -4.7185163497924805
    7. ':
' → logprob: -4.7185163497924805
    8. ')' → logprob: -5.9685163497924805
    9. ' if' → logprob: -6.7185163497924805
    10. ' (' → logprob: -6.9685163497924805

Token 454: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9599801898002625
    2. '):' → logprob: -1.3349802494049072
    3. ':' → logprob: -1.5849802494049072
    4. '):
' → logprob: -2.0849802494049072
    5. ':
' → logprob: -4.459980010986328
    6. 'def' → logprob: -5.459980010986328
    7. ',' → logprob: -5.584980010986328
    8. ')' → logprob: -6.834980010986328
    9. ' and' → logprob: -7.209980010986328
    10. '.' → logprob: -7.834980010986328

Token 455: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.3196164667606354
    2. 'next' → logprob: -1.569616436958313
    3. ' the' → logprob: -3.8196165561676025
    4. ' intersection' → logprob: -4.319616317749023
    5. 'intersection' → logprob: -4.694616317749023
    6. 'the' → logprob: -4.944616317749023
    7. 'neighbor' → logprob: -6.444616317749023
    8. 'arr' → logprob: -6.444616317749023
    9. ' another' → logprob: -6.569616317749023
    10. 'another' → logprob: -6.944616317749023

Token 456: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2039865255355835
    2. '   ' → logprob: -1.3289865255355835
    3. '):' → logprob: -1.3289865255355835
    4. '):
' → logprob: -2.328986644744873
    5. ':
' → logprob: -3.078986644744873
    6. 'def' → logprob: -3.953986644744873
    7. ',' → logprob: -5.828986644744873
    8. ':return' → logprob: -7.078986644744873
    9. ')' → logprob: -7.203986644744873
    10. '[' → logprob: -7.453986644744873

Token 457: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010317517444491386
    2. ':' → logprob: -5.135317325592041
    3. '):' → logprob: -6.885317325592041
    4. '    
' → logprob: -7.135317325592041
    5. '):
' → logprob: -7.510317325592041
    6. 'def' → logprob: -7.635317325592041
    7. '<|end|>' → logprob: -7.635317325592041
    8. ')' → logprob: -7.760317325592041
    9. ' if' → logprob: -9.1353178024292
    10. ':
' → logprob: -9.5103178024292

Token 458: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0032828752882778645
    2. '    
' → logprob: -6.6282830238342285
    3. 'if' → logprob: -7.2532830238342285
    4. ' if' → logprob: -7.3782830238342285
    5. '<|end|>' → logprob: -8.62828254699707
    6. 'def' → logprob: -8.87828254699707
    7. ')' → logprob: -10.37828254699707
    8. '  
' → logprob: -10.50328254699707
    9. '	if' → logprob: -10.62828254699707
    10. ',' → logprob: -10.87828254699707

Token 459: ' But' (ID: 3072)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6370232701301575
    2. 'if' → logprob: -1.2620232105255127
    3. ' if' → logprob: -2.0120232105255127
    4. 'state' → logprob: -3.7620232105255127
    5. 'signal' → logprob: -4.512023448944092
    6. ' state' → logprob: -5.512023448944092
    7. 'd' → logprob: -5.512023448944092
    8. 'x' → logprob: -6.137023448944092
    9. ' signal' → logprob: -6.512023448944092
    10. 'allowed' → logprob: -6.637023448944092

Token 460: ' we' (ID: 581)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.6326798796653748
    2. 'the' → logprob: -1.8826799392700195
    3. ' dir' → logprob: -2.3826799392700195
    4. '#' → logprob: -2.7576799392700195
    5. '   ' → logprob: -3.3826799392700195
    6. 'dir' → logprob: -3.3826799392700195
    7. ' signal' → logprob: -4.1326799392700195
    8. ' we' → logprob: -4.2576799392700195
    9. 'we' → logprob: -4.7576799392700195
    10. 'signal' → logprob: -4.8826799392700195

Token 461: ' need' (ID: 1309)
  Prédit: ' need'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' need' → logprob: -0.5586962699890137
    2. ' continue' → logprob: -2.6836962699890137
    3. ' must' → logprob: -2.6836962699890137
    4. ' are' → logprob: -2.9336962699890137
    5. ' only' → logprob: -3.0586962699890137
    6. ' want' → logprob: -3.4336962699890137
    7. 'need' → logprob: -3.5586962699890137
    8. ' should' → logprob: -3.6836962699890137
    9. ' can' → logprob: -3.6836962699890137
    10. ' have' → logprob: -3.8086962699890137

Token 462: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.006415859330445528
    2. 'to' → logprob: -5.131415843963623
    3. ' the' → logprob: -8.256416320800781
    4. ' at' → logprob: -10.506416320800781
    5. '   ' → logprob: -10.631416320800781
    6. ' arrival' → logprob: -11.006416320800781
    7. ' dir' → logprob: -11.006416320800781
    8. ' for' → logprob: -11.256416320800781
    9. ' a' → logprob: -11.381416320800781
    10. '<|end|>' → logprob: -11.506416320800781

Token 463: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.42136654257774353
    2. ' check' → logprob: -1.171366572380066
    3. 'know' → logprob: -4.6713666915893555
    4. 'consider' → logprob: -4.7963666915893555
    5. 'return' → logprob: -5.4213666915893555
    6. ' know' → logprob: -5.7963666915893555
    7. 'continue' → logprob: -5.7963666915893555
    8. 'det' → logprob: -6.4213666915893555
    9. 'complete' → logprob: -7.1713666915893555
    10. ' consider' → logprob: -7.4213666915893555

Token 464: ' light' (ID: 4207)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3952423334121704
    2. 'if' → logprob: -1.1452423334121704
    3. 'signal' → logprob: -6.395242214202881
    4. ' directions' → logprob: -7.145242214202881
    5. 'direction' → logprob: -7.270242214202881
    6. 'for' → logprob: -7.270242214202881
    7. ' for' → logprob: -7.520242214202881
    8. ' signal' → logprob: -7.520242214202881
    9. 'op' → logprob: -7.645242214202881
    10. ' the' → logprob: -8.145242691040039

Token 465: ' state' (ID: 2608)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6972312331199646
    2. 'state' → logprob: -2.4472312927246094
    3. ' for' → logprob: -2.8222312927246094
    4. '_state' → logprob: -2.9472312927246094
    5. '[state' → logprob: -2.9472312927246094
    6. ':' → logprob: -3.1972312927246094
    7. 's' → logprob: -3.5722312927246094
    8. 'for' → logprob: -4.072231292724609
    9. 'status' → logprob: -4.197231292724609
    10. '[' → logprob: -4.322231292724609

Token 466: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6021113395690918
    2. ':' → logprob: -1.6021113395690918
    3. ' if' → logprob: -2.727111339569092
    4. ' and' → logprob: -3.102111339569092
    5. ' at' → logprob: -3.352111339569092
    6. ')' → logprob: -3.477111339569092
    7. ',' → logprob: -3.852111339569092
    8. '.' → logprob: -3.852111339569092
    9. ' for' → logprob: -4.602111339569092
    10. '):' → logprob: -5.852111339569092

Token 467: ' enter' (ID: 5747)
  Prédit: 'allow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'allow' → logprob: -1.3969608545303345
    2. 'enter' → logprob: -1.5219608545303345
    3. ' enter' → logprob: -2.146960735321045
    4. 'continue' → logprob: -2.146960735321045
    5. 'det' → logprob: -2.771960735321045
    6. 'def' → logprob: -3.146960735321045
    7. ' allow' → logprob: -3.271960735321045
    8. 'return' → logprob: -3.896960735321045
    9. ' continue' → logprob: -4.146960735321045
    10. ' see' → logprob: -4.146960735321045

Token 468: ' the' (ID: 290)
  Prédit: '(inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(inter' → logprob: -1.1572940349578857
    2. ' if' → logprob: -2.1572940349578857
    3. '.' → logprob: -2.2822940349578857
    4. ')' → logprob: -2.4072940349578857
    5. '   ' → logprob: -2.4072940349578857
    6. '(' → logprob: -2.5322940349578857
    7. ':' → logprob: -3.0322940349578857
    8. ' (' → logprob: -3.2822940349578857
    9. ' at' → logprob: -3.9072940349578857
    10. ' the' → logprob: -3.9072940349578857

Token 469: ' intersection' (ID: 42002)
  Prédit: 'intersection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'intersection' → logprob: -0.23155386745929718
    2. ' intersection' → logprob: -1.6065539121627808
    3. ' next' → logprob: -6.35655403137207
    4. 'inter' → logprob: -6.48155403137207
    5. 'next' → logprob: -6.85655403137207
    6. 'signal' → logprob: -7.35655403137207
    7. 'current' → logprob: -7.85655403137207
    8. ' current' → logprob: -7.98155403137207
    9. 'direction' → logprob: -8.60655403137207
    10. ' signal' → logprob: -9.23155403137207

Token 470: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06297871470451355
    2. ' if' → logprob: -3.937978744506836
    3. '<|end|>' → logprob: -4.687978744506836
    4. ':' → logprob: -4.812978744506836
    5. ',' → logprob: -4.937978744506836
    6. 'def' → logprob: -5.187978744506836
    7. '.' → logprob: -5.312978744506836
    8. ')' → logprob: -5.687978744506836
    9. '<|end|>' → logprob: -6.937978744506836
    10. ' at' → logprob: -8.312978744506836

Token 471: ' previous' (ID: 5880)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dir' → logprob: -1.0317562818527222
    2. 'op' → logprob: -1.2817562818527222
    3. 'the' → logprob: -1.9067562818527222
    4. ' dir' → logprob: -2.5317564010620117
    5. ' opposite' → logprob: -2.9067564010620117
    6. 'direction' → logprob: -3.5317564010620117
    7. ' the' → logprob: -4.031756401062012
    8. 'that' → logprob: -4.406756401062012
    9. ' that' → logprob: -5.531756401062012
    10. 'dire' → logprob: -5.656756401062012

Token 472: ' road' (ID: 8733)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04269779846072197
    2. '_direction' → logprob: -4.792697906494141
    3. 'direction' → logprob: -5.292697906494141
    4. '_token' → logprob: -5.417697906494141
    5. ' line' → logprob: -5.542697906494141
    6. ' token' → logprob: -5.792697906494141
    7. 'token' → logprob: -5.792697906494141
    8. '_inter' → logprob: -5.917697906494141
    9. ' direction' → logprob: -6.042697906494141
    10. ' _' → logprob: -6.042697906494141

Token 473: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2005922645330429
    2. ':' → logprob: -2.200592279434204
    3. '):' → logprob: -3.575592279434204
    4. ',' → logprob: -4.200592041015625
    5. '):
' → logprob: -4.700592041015625
    6. 'def' → logprob: -4.825592041015625
    7. ':
' → logprob: -5.200592041015625
    8. ' if' → logprob: -6.825592041015625
    9. '<|end|>' → logprob: -7.200592041015625
    10. '.' → logprob: -7.325592041015625

Token 474: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00739329494535923
    2. ' if' → logprob: -5.3823933601379395
    3. 'def' → logprob: -6.7573933601379395
    4. 'if' → logprob: -7.3823933601379395
    5. '<|end|>' → logprob: -7.7573933601379395
    6. ')' → logprob: -8.882392883300781
    7. ',' → logprob: -9.132392883300781
    8. '    
' → logprob: -9.507392883300781
    9. '<|end|>' → logprob: -10.007392883300781
    10. '#' → logprob: -10.007392883300781

Token 475: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005890041124075651
    2. ' if' → logprob: -5.630889892578125
    3. 'if' → logprob: -7.005889892578125
    4. '    
' → logprob: -7.130889892578125
    5. ')' → logprob: -8.505889892578125
    6. 'def' → logprob: -8.630889892578125
    7. '
' → logprob: -10.755889892578125
    8. ',' → logprob: -10.755889892578125
    9. '```' → logprob: -11.005889892578125
    10. '<|end|>' → logprob: -11.130889892578125

Token 476: ' The' (ID: 623)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2984132170677185
    2. '   ' → logprob: -1.4234132766723633
    3. ' if' → logprob: -4.548413276672363
    4. 'signal' → logprob: -6.423413276672363
    5. 'h' → logprob: -6.798413276672363
    6. 'return' → logprob: -7.423413276672363
    7. 'allowed' → logprob: -7.673413276672363
    8. '#' → logprob: -8.173413276672363
    9. 'state' → logprob: -8.423413276672363
    10. 'op' → logprob: -8.423413276672363

Token 477: ' problem' (ID: 4792)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.7262922525405884
    2. ' if' → logprob: -2.101292133331299
    3. 'if' → logprob: -2.351292133331299
    4. '#' → logprob: -2.476292133331299
    5. ' next' → logprob: -2.476292133331299
    6. ' code' → logprob: -2.476292133331299
    7. '   ' → logprob: -2.726292133331299
    8. 'prev' → logprob: -2.726292133331299
    9. ' previous' → logprob: -3.976292133331299
    10. ' prev' → logprob: -3.976292133331299

Token 478: ' states' (ID: 9407)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.8478667140007019
    2. '<|end|>' → logprob: -0.8478667140007019
    3. ' continues' → logprob: -2.5978667736053467
    4. '<|end|>' → logprob: -3.0978667736053467
    5. ':' → logprob: -4.722866535186768
    6. 'is' → logprob: -5.847866535186768
    7. ' remains' → logprob: -5.972866535186768
    8. '#' → logprob: -6.847866535186768
    9. '...' → logprob: -6.847866535186768
    10. '.' → logprob: -6.847866535186768

Token 479: ' "' (ID: 392)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.3570461571216583
    2. ':' → logprob: -2.232046127319336
    3. 'that' → logprob: -2.982046127319336
    4. ' the' → logprob: -3.107046127319336
    5. '#' → logprob: -3.357046127319336
    6. 'def' → logprob: -3.607046127319336
    7. 'the' → logprob: -4.732046127319336
    8. '   ' → logprob: -5.232046127319336
    9. '"""' → logprob: -5.982046127319336
    10. ' at' → logprob: -6.107046127319336

Token 480: 'ト' (ID: 5662)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.2323116064071655
    2. 'if' → logprob: -2.357311725616455
    3. 'The' → logprob: -2.857311725616455
    4. ' at' → logprob: -3.232311725616455
    5. 'truck' → logprob: -3.232311725616455
    6. ' the' → logprob: -3.357311725616455
    7. 'signals' → logprob: -3.357311725616455
    8. 'at' → logprob: -3.482311725616455
    9. 'signal' → logprob: -3.482311725616455
    10. '"' → logprob: -3.607311725616455

Token 481: 'ラック' (ID: 57987)
  Prédit: 'ラ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ラ' → logprob: -0.37092867493629456
    2. 'a' → logprob: -2.9959287643432617
    3. 'ue' → logprob: -3.4959287643432617
    4. 'e' → logprob: -3.6209287643432617
    5. 'ーク' → logprob: -4.183428764343262
    6. 'aff' → logprob: -4.245928764343262
    7. 'ra' → logprob: -4.495928764343262
    8. '_' → logprob: -4.933428764343262
    9. 'ラック' → logprob: -5.058428764343262
    10. '#' → logprob: -5.058428764343262

Token 482: 'は' (ID: 5205)
  Prédit: 'が'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'が' → logprob: -0.8120277523994446
    2. 'の' → logprob: -0.9370277523994446
    3. '<|end|>' → logprob: -2.8120276927948
    4. 'は' → logprob: -3.1870276927948
    5. ' can' → logprob: -4.437027931213379
    6. ' is' → logprob: -5.187027931213379
    7. 'から' → logprob: -5.187027931213379
    8. '_' → logprob: -5.437027931213379
    9. ')' → logprob: -5.687027931213379
    10. 'を' → logprob: -5.812027931213379

Token 483: '交' (ID: 10130)
  Prédit: '信'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '信' → logprob: -1.1493449211120605
    2. '交' → logprob: -1.1493449211120605
    3. '前' → logprob: -3.0243449211120605
    4. '進' → logprob: -3.3993449211120605
    5. '赤' → logprob: -3.6493449211120605
    6. '次' → logprob: -3.6493449211120605
    7. '直' → logprob: -4.2743449211120605
    8. '、' → logprob: -4.6493449211120605
    9. 'from' → logprob: -4.7118449211120605
    10. '必' → logprob: -4.7118449211120605

Token 484: '差' (ID: 35142)
  Prédit: '差'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '差' → logprob: -0.059881068766117096
    2. '通' → logprob: -3.0598809719085693
    3. '```' → logprob: -5.059881210327148
    4. '_' → logprob: -7.059881210327148
    5. '）' → logprob: -8.059881210327148
    6. '-' → logprob: -8.184881210327148
    7. '番' → logprob: -8.309881210327148
    8. ')' → logprob: -8.684881210327148
    9. 's' → logprob: -8.934881210327148
    10. '\' → logprob: -9.059881210327148

Token 485: '点' (ID: 8300)
  Prédit: '点'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '点' → logprob: -0.012729895301163197
    2. '差' → logprob: -4.387730121612549
    3. 'point' → logprob: -9.13772964477539
    4. '```' → logprob: -10.63772964477539
    5. '番' → logprob: -11.26272964477539
    6. '_' → logprob: -11.38772964477539
    7. '점' → logprob: -11.76272964477539
    8. 's' → logprob: -12.26272964477539
    9. '続' → logprob: -12.26272964477539
    10. '
' → logprob: -12.26272964477539

Token 486: 'に' (ID: 5280)
  Prédit: 'から'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'から' → logprob: -0.2598637342453003
    2. 'を' → logprob: -2.25986385345459
    3. 'に' → logprob: -2.50986385345459
    4. 'の' → logprob: -3.50986385345459
    5. 'へ' → logprob: -5.25986385345459
    6. 'で' → logprob: -5.75986385345459
    7. 'まで' → logprob: -6.50986385345459
    8. 'from' → logprob: -7.38486385345459
    9. 'への' → logprob: -7.50986385345459
    10. '方向' → logprob: -8.38486385345459

Token 487: '到' (ID: 6946)
  Prédit: '入'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '入' → logprob: -0.41339245438575745
    2. '進' → logprob: -1.663392424583435
    3. '止' → logprob: -3.6633925437927246
    4. '到' → logprob: -3.7883925437927246
    5. 'いる' → logprob: -3.9133925437927246
    6. 'つ' → logprob: -4.038392543792725
    7. '信' → logprob: -5.163392543792725
    8. '向' → logprob: -5.163392543792725
    9. '#' → logprob: -5.413392543792725
    10. 'は' → logprob: -5.538392543792725

Token 488: '達' (ID: 83892)
  Prédit: '着'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '着' → logprob: -0.024651357904076576
    2. '達' → logprob: -4.024651527404785
    3. 'る' → logprob: -5.274651527404785
    4. 'ら' → logprob: -8.274651527404785
    5. '```' → logprob: -8.274651527404785
    6. '#' → logprob: -8.774651527404785
    7. 'た' → logprob: -9.399651527404785
    8. 'する' → logprob: -9.899651527404785
    9. '場' → logprob: -10.274651527404785
    10. 'り' → logprob: -10.274651527404785

Token 489: 'した' (ID: 23085)
  Prédit: 'する'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'する' → logprob: -0.9237856268882751
    2. 'した' → logprob: -1.17378568649292
    3. 'して' → logprob: -1.67378568649292
    4. 'すると' → logprob: -2.92378568649292
    5. 'し' → logprob: -3.29878568649292
    6. 'from' → logprob: -5.42378568649292
    7. '時' → logprob: -6.17378568649292
    8. '}' → logprob: -6.42378568649292
    9. 'す' → logprob: -6.79878568649292
    10. 'でき' → logprob: -7.17378568649292

Token 490: '時' (ID: 12131)
  Prédit: 'と'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'と' → logprob: -0.2064843475818634
    2. '時' → logprob: -2.081484317779541
    3. '際' → logprob: -3.706484317779541
    4. '後' → logprob: -4.581484317779541
    5. 'する' → logprob: -5.206484317779541
    6. 'した' → logprob: -5.706484317779541
    7. 'ら' → logprob: -6.206484317779541
    8. '直' → logprob: -6.206484317779541
    9. 'して' → logprob: -6.331484317779541
    10. '方向' → logprob: -6.331484317779541

Token 491: '刻' (ID: 56985)
  Prédit: 'の'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'の' → logprob: -1.6566156148910522
    2. 'に' → logprob: -2.031615734100342
    3. 'から' → logprob: -2.156615734100342
    4. ',' → logprob: -2.281615734100342
    5. ' ' → logprob: -2.406615734100342
    6. ':' → logprob: -2.656615734100342
    7. 'で' → logprob: -2.906615734100342
    8. 'が' → logprob: -3.281615734100342
    9. '"' → logprob: -3.656615734100342
    10. '、' → logprob: -3.781615734100342

Token 492: 'に' (ID: 5280)
  Prédit: 'に'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'に' → logprob: -0.7114205360412598
    2. 'の' → logprob: -1.3364205360412598
    3. 'で' → logprob: -2.2114205360412598
    4. 'から' → logprob: -2.7114205360412598
    5. 'まで' → logprob: -3.5864205360412598
    6. 'を' → logprob: -5.21142053604126
    7. ' に' → logprob: -5.58642053604126
    8. 'が' → logprob: -5.58642053604126
    9. '"' → logprob: -5.71142053604126
    10. ' の' → logprob: -5.83642053604126

Token 493: '、' (ID: 1395)
  Prédit: '信'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '信' → logprob: -0.19910657405853271
    2. 'signal' → logprob: -2.0741066932678223
    3. 'の' → logprob: -3.9491066932678223
    4. '、' → logprob: -5.449106693267822
    5. ' signal' → logprob: -5.574106693267822
    6. 'dir' → logprob: -5.574106693267822
    7. 'signals' → logprob: -5.574106693267822
    8. '次' → logprob: -6.449106693267822
    9. '交' → logprob: -6.699106693267822
    10. '方向' → logprob: -6.699106693267822

Token 494: '信' (ID: 5182)
  Prédit: 'signal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'signal' → logprob: -0.5088000893592834
    2. 'dir' → logprob: -2.2588000297546387
    3. ' signal' → logprob: -2.8838000297546387
    4. 'if' → logprob: -2.8838000297546387
    5. 'direction' → logprob: -3.3838000297546387
    6. ' dir' → logprob: -3.8838000297546387
    7. '#' → logprob: -3.8838000297546387
    8. ' if' → logprob: -4.133800029754639
    9. '信' → logprob: -4.133800029754639
    10. '方向' → logprob: -5.008800029754639

Token 495: '号' (ID: 4785)
  Prédit: '号'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '号' → logprob: -0.00023047674039844424
    2. '_' → logprob: -8.87523078918457
    3. '```' → logprob: -10.62523078918457
    4. '#' → logprob: -10.87523078918457
    5. '[' → logprob: -11.25023078918457
    6. ')' → logprob: -12.37523078918457
    7. 's' → logprob: -12.37523078918457
    8. '   ' → logprob: -12.50023078918457
    9. '號' → logprob: -12.87523078918457
    10. '``' → logprob: -13.00023078918457

Token 496: 'が' (ID: 6632)
  Prédit: 'の'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'の' → logprob: -0.23986394703388214
    2. 'が' → logprob: -1.7398639917373657
    3. ' の' → logprob: -4.489863872528076
    4. ' が' → logprob: -5.239863872528076
    5. '_state' → logprob: -5.364863872528076
    6. 'を' → logprob: -5.489863872528076
    7. '_' → logprob: -5.989863872528076
    8. '状態' → logprob: -6.239863872528076
    9. ')' → logprob: -6.864863872528076
    10. 'は' → logprob: -6.989863872528076

Token 497: '赤' (ID: 74280)
  Prédit: 'green'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'green' → logprob: -0.955245852470398
    2. '青' → logprob: -1.830245852470398
    3. '赤' → logprob: -2.2052459716796875
    4. 'グ' → logprob: -2.5802459716796875
    5. '\xe7\xb7' → logprob: -2.8302459716796875
    6. '変' → logprob: -2.9552459716796875
    7. ' green' → logprob: -3.4552459716796875
    8. ''' → logprob: -4.0802459716796875
    9. 'Green' → logprob: -4.8302459716796875
    10. '#' → logprob: -4.9552459716796875

Token 498: 'の場合' (ID: 171169)
  Prédit: 'か'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'か' → logprob: -1.0370733737945557
    2. 'で' → logprob: -1.4120733737945557
    3. 'の場合' → logprob: -2.4120733737945557
    4. '"' → logprob: -2.5370733737945557
    5. 'の' → logprob: -2.5370733737945557
    6. 'なら' → logprob: -2.7870733737945557
    7. ''' → logprob: -3.4120733737945557
    8. 'だ' → logprob: -4.662073135375977
    9. ')' → logprob: -5.162073135375977
    10. 'だった' → logprob: -5.287073135375977

Token 499: 'には' (ID: 68857)
  Prédit: 'なら'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'なら' → logprob: -0.43251752853393555
    2. 'の場合' → logprob: -1.9325175285339355
    3. 'で' → logprob: -2.6825175285339355
    4. ',' → logprob: -3.0575175285339355
    5. 'の' → logprob: -3.5575175285339355
    6. 'は' → logprob: -4.4325175285339355
    7. 'では' → logprob: -4.9325175285339355
    8. 'でも' → logprob: -5.0575175285339355
    9. 'だ' → logprob: -5.1825175285339355
    10. 'に' → logprob: -5.4325175285339355

Token 500: '進' (ID: 77897)
  Prédit: '待'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '待' → logprob: -0.6061785817146301
    2. 'True' → logprob: -1.8561785221099854
    3. '次' → logprob: -2.3561785221099854
    4. '進' → logprob: -3.1061785221099854
    5. ' True' → logprob: -3.2311785221099854
    6. 'False' → logprob: -3.2311785221099854
    7. 'return' → logprob: -3.7311785221099854
    8. '移' → logprob: -4.7311787605285645
    9. '入' → logprob: -5.6061787605285645
    10. 'その' → logprob: -5.6061787605285645

Token 501: '入' (ID: 8130)
  Prédit: '入'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '入' → logprob: -0.7196654677391052
    2. 'め' → logprob: -1.46966552734375
    3. '行' → logprob: -1.84466552734375
    4. 'む' → logprob: -3.21966552734375
    5. '```' → logprob: -3.34466552734375
    6. 'ま' → logprob: -3.59466552734375
    7. 'ん' → logprob: -5.59466552734375
    8. '``' → logprob: -5.59466552734375
    9. '_' → logprob: -5.71966552734375
    10. '

' → logprob: -6.59466552734375

Token 502: 'でき' (ID: 78673)
  Prédit: 'でき'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'でき' → logprob: -0.24502097070217133
    2. 'を' → logprob: -2.370020866394043
    3. 'し' → logprob: -2.745020866394043
    4. '禁止' → logprob: -2.995020866394043
    5. '不可' → logprob: -5.370020866394043
    6. 'する' → logprob: -6.495020866394043
    7. '可能' → logprob: -7.370020866394043
    8. 'が' → logprob: -7.745020866394043
    9. '出来' → logprob: -8.120020866394043
    10. 'は' → logprob: -8.370020866394043

Token 503: 'ません' (ID: 63366)
  Prédit: 'れ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'れ' → logprob: -0.5805333852767944
    2. 'ない' → logprob: -1.3305333852767944
    3. 'ません' → logprob: -1.9555333852767944
    4. 'り' → logprob: -4.080533504486084
    5. 'ら' → logprob: -4.705533504486084
    6. '```' → logprob: -5.830533504486084
    7. 'る' → logprob: -6.580533504486084
    8. ' ' → logprob: -6.705533504486084
    9. 'な' → logprob: -6.955533504486084
    10. 'でき' → logprob: -8.205533027648926

Token 504: '"
' (ID: 1092)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15032397210597992
    2. '.' → logprob: -2.7753238677978516
    3. '"' → logprob: -3.7753238677978516
    4. ',' → logprob: -4.400323867797852
    5. '   ' → logprob: -4.775323867797852
    6. '。' → logprob: -5.150323867797852
    7. '<|end|>' → logprob: -5.525323867797852
    8. '）' → logprob: -5.650323867797852
    9. ':' → logprob: -6.025323867797852
    10. '<|end|>' → logprob: -6.025323867797852

Token 505: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014536956325173378
    2. ')' → logprob: -4.3895368576049805
    3. '<|end|>' → logprob: -7.5145368576049805
    4. 'def' → logprob: -8.01453685760498
    5. ' if' → logprob: -8.13953685760498
    6. '.' → logprob: -8.38953685760498
    7. '    
' → logprob: -9.01453685760498
    8. '<|end|>' → logprob: -9.38953685760498
    9. ',' → logprob: -10.01453685760498
    10. '	if' → logprob: -10.01453685760498

Token 506: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009055070113390684
    2. 'if' → logprob: -7.750905513763428
    3. ' if' → logprob: -8.12590503692627
    4. 'def' → logprob: -9.25090503692627
    5. ')' → logprob: -10.62590503692627
    6. '    
' → logprob: -10.75090503692627
    7. '<|end|>' → logprob: -11.12590503692627
    8. '#' (adapté à ' #') → logprob: -12.50090503692627
    9. ',' → logprob: -12.50090503692627
    10. 'import' → logprob: -12.62590503692627

Token 507: ' so' (ID: 813)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17869171500205994
    2. 'if' → logprob: -2.0536916255950928
    3. ' if' → logprob: -3.4286916255950928
    4. 'return' → logprob: -6.428691864013672
    5. 'direction' → logprob: -8.428691864013672
    6. 'prev' → logprob: -9.053691864013672
    7. ' return' → logprob: -9.178691864013672
    8. '#' → logprob: -9.178691864013672
    9. 'signal' → logprob: -9.428691864013672
    10. 'state' → logprob: -9.553691864013672

Token 508: ' the' (ID: 290)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.13393764197826385
    2. '   ' → logprob: -2.3839375972747803
    3. 'return' → logprob: -4.258937835693359
    4. '#' → logprob: -4.383937835693359
    5. ' if' → logprob: -5.633937835693359
    6. 'arrival' → logprob: -7.258937835693359
    7. 'arr' → logprob: -8.00893783569336
    8. 'direction' → logprob: -8.13393783569336
    9. 'dir' → logprob: -8.50893783569336
    10. 'state' → logprob: -8.50893783569336

Token 509: ' arrival' (ID: 24861)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6098562479019165
    2. ' if' → logprob: -0.8598562479019165
    3. 'def' → logprob: -4.109856128692627
    4. '   ' → logprob: -4.859856128692627
    5. '#' → logprob: -6.359856128692627
    6. 'return' → logprob: -6.609856128692627
    7. 'signal' → logprob: -6.859856128692627
    8. 'dir' → logprob: -7.359856128692627
    9. 'direction' → logprob: -7.609856128692627
    10. ' return' → logprob: -7.609856128692627

Token 510: ' point' (ID: 2438)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2344929277896881
    2. ' _' → logprob: -2.4844930171966553
    3. '_direction' → logprob: -3.4844930171966553
    4. ' ' → logprob: -3.7344930171966553
    5. '   ' → logprob: -3.8594930171966553
    6. '  ' → logprob: -4.609492778778076
    7. ')' → logprob: -5.484492778778076
    8. ' if' → logprob: -5.609492778778076
    9. '_token' → logprob: -5.859492778778076
    10. '_allowed' → logprob: -5.984492778778076

Token 511: ' intersection' (ID: 42002)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.070212483406067
    2. '<|end|>' → logprob: -1.695212483406067
    3. '<|end|>' → logprob: -1.695212483406067
    4. ')' → logprob: -2.3202123641967773
    5. '   ' → logprob: -3.1952123641967773
    6. ' allows' → logprob: -4.070212364196777
    7. ' from' → logprob: -4.320212364196777
    8. ' does' → logprob: -4.570212364196777
    9. ',' → logprob: -4.570212364196777
    10. 'から' → logprob: -4.695212364196777

Token 512: ''s' (ID: 885)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.370606780052185
    2. '   ' → logprob: -1.370606780052185
    3. ':' → logprob: -1.620606780052185
    4. '):' → logprob: -1.620606780052185
    5. ',' → logprob: -3.9956068992614746
    6. ' if' → logprob: -4.495606899261475
    7. 'def' → logprob: -4.495606899261475
    8. '<|end|>' → logprob: -4.495606899261475
    9. '<|end|>' → logprob: -4.620606899261475
    10. ' is' → logprob: -4.745606899261475

Token 513: ' signal' (ID: 12884)
  Prédit: ' signal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' signal' → logprob: -0.4311383068561554
    2. 'signal' → logprob: -1.806138277053833
    3. ' traffic' → logprob: -3.431138277053833
    4. ' entry' → logprob: -4.056138515472412
    5. '<|end|>' → logprob: -4.431138515472412
    6. ' direction' → logprob: -4.431138515472412
    7. 'state' → logprob: -4.556138515472412
    8. ' code' → logprob: -4.681138515472412
    9. ' signals' → logprob: -4.681138515472412
    10. ')' → logprob: -4.806138515472412

Token 514: ' decides' (ID: 48145)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.4695763885974884
    2. ')' → logprob: -1.969576358795166
    3. '):' → logprob: -2.969576358795166
    4. ':' → logprob: -3.094576358795166
    5. '   ' → logprob: -3.594576358795166
    6. 's' → logprob: -3.719576358795166
    7. ' and' → logprob: -4.094576358795166
    8. '.get' → logprob: -4.469576358795166
    9. 'is' → logprob: -4.844576358795166
    10. ',' → logprob: -5.219576358795166

Token 515: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05827905237674713
    2. ' if' → logprob: -3.058279037475586
    3. 'if' → logprob: -6.058279037475586
    4. ',' → logprob: -6.558279037475586
    5. 'def' → logprob: -6.683279037475586
    6. ')' → logprob: -6.933279037475586
    7. ':' → logprob: -7.058279037475586
    8. '<|end|>' → logprob: -7.683279037475586
    9. '):
' → logprob: -8.058279037475586
    10. '.' → logprob: -8.058279037475586

Token 516: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0027448388282209635
    2. ' if' → logprob: -6.877744674682617
    3. '<|end|>' → logprob: -7.127744674682617
    4. 'if' → logprob: -8.252744674682617
    5. 'def' → logprob: -9.252744674682617
    6. ')' → logprob: -9.377744674682617
    7. '<|end|>' → logprob: -9.377744674682617
    8. ',' → logprob: -9.377744674682617
    9. '    
' → logprob: -9.752744674682617
    10. '  ' → logprob: -10.502744674682617

Token 517: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04160726070404053
    2. 'if' → logprob: -3.29160737991333
    3. ' if' → logprob: -5.66660737991333
    4. 'def' → logprob: -10.416606903076172
    5. 'signal' → logprob: -10.916606903076172
    6. '```' → logprob: -11.666606903076172
    7. '	if' → logprob: -11.791606903076172
    8. '    
' → logprob: -12.041606903076172
    9. 'signals' → logprob: -12.541606903076172
    10. 'x' → logprob: -12.791606903076172

Token 518: ' Let's' (ID: 41021)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.13756553828716278
    2. '   ' → logprob: -2.1375656127929688
    3. 'signal' → logprob: -5.512565612792969
    4. 'd' → logprob: -6.137565612792969
    5. 'h' → logprob: -7.137565612792969
    6. ' if' → logprob: -7.262565612792969
    7. 'dir' → logprob: -7.262565612792969
    8. 'state' → logprob: -8.012565612792969
    9. 'return' → logprob: -8.262565612792969
    10. 'direction' → logprob: -8.387565612792969

Token 519: ' ded' (ID: 6879)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1668871641159058
    2. 'def' → logprob: -1.2918871641159058
    3. 'return' → logprob: -2.2918872833251953
    4. 'continue' → logprob: -2.5418872833251953
    5. '#' → logprob: -2.9168872833251953
    6. 'dire' → logprob: -3.5418872833251953
    7. 'if' → logprob: -3.6668872833251953
    8. ' return' → logprob: -3.7918872833251953
    9. ' directions' → logprob: -3.9168872833251953
    10. ' continue' → logprob: -3.9168872833251953

Token 520: 'uce' (ID: 20747)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.00395539402961731
    2. 'def' → logprob: -6.628955364227295
    3. 'uce' → logprob: -7.128955364227295
    4. '   ' → logprob: -7.378955364227295
    5. 'ef' → logprob: -7.628955364227295
    6. 'fine' → logprob: -9.253955841064453
    7. '```' → logprob: -9.628955841064453
    8. 'ule' → logprob: -9.753955841064453
    9. 'ф' → logprob: -9.753955841064453
    10. 'ine' → logprob: -10.003955841064453

Token 521: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4770248532295227
    2. '<|end|>' → logprob: -2.352024793624878
    3. ':' → logprob: -2.477024793624878
    4. '#' → logprob: -2.852024793624878
    5. ' if' → logprob: -3.602024793624878
    6. '<|end|>' → logprob: -3.977024793624878
    7. ' #' → logprob: -4.352025032043457
    8. 'def' → logprob: -4.727025032043457
    9. ' ' → logprob: -4.727025032043457
    10. ' pass' → logprob: -4.852025032043457

Token 522: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06259952485561371
    2. ' if' → logprob: -2.9375994205474854
    3. 'if' → logprob: -5.9375996589660645
    4. '#' → logprob: -6.4375996589660645
    5. '<|end|>' → logprob: -6.9375996589660645
    6. 'def' → logprob: -7.9375996589660645
    7. ' #' → logprob: -8.062599182128906
    8. ' signal' → logprob: -8.437599182128906
    9. ' pass' → logprob: -8.687599182128906
    10. ' ' → logprob: -8.812599182128906

Token 523: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7476176023483276
    2. 'if' → logprob: -1.3726176023483276
    3. 'pass' → logprob: -1.9976176023483276
    4. '#' (adapté à ' #') → logprob: -3.122617721557617
    5. ' if' → logprob: -3.122617721557617
    6. 'return' → logprob: -3.747617721557617
    7. ' pass' → logprob: -4.497617721557617
    8. '...' → logprob: -6.247617721557617
    9. 'prev' → logprob: -6.247617721557617
    10. ' return' → logprob: -6.497617721557617

Token 524: ' The' (ID: 623)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.754104733467102
    2. 'if' → logprob: -1.004104733467102
    3. '   ' → logprob: -2.0041046142578125
    4. '#' → logprob: -4.8791046142578125
    5. 'signal' → logprob: -5.8791046142578125
    6. 'direction' → logprob: -6.5041046142578125
    7. 'd' → logprob: -6.6291046142578125
    8. ' directions' → logprob: -6.6291046142578125
    9. 'pass' → logprob: -6.7541046142578125
    10. ' signal' → logprob: -7.2541046142578125

Token 525: ' light' (ID: 4207)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6080822348594666
    2. 'if' → logprob: -1.7330822944641113
    3. 'def' → logprob: -2.8580822944641113
    4. ' signal' → logprob: -3.3580822944641113
    5. ' next' → logprob: -3.6080822944641113
    6. '#' → logprob: -3.8580822944641113
    7. 'signal' → logprob: -3.9830822944641113
    8. ' direction' → logprob: -4.483082294464111
    9. ' truck' → logprob: -4.858082294464111
    10. ' def' → logprob: -4.858082294464111

Token 526: ' cycle' (ID: 15839)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9187350273132324
    2. '_state' → logprob: -1.1687350273132324
    3. 'state' → logprob: -2.1687350273132324
    4. '=' → logprob: -2.7937350273132324
    5. ' is' → logprob: -3.1687350273132324
    6. 's' → logprob: -3.9187350273132324
    7. '   ' → logprob: -4.918735027313232
    8. ' allows' → logprob: -4.918735027313232
    9. ' state' → logprob: -5.043735027313232
    10. '_states' → logprob: -5.043735027313232

Token 527: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.315596103668213
    2. ':' → logprob: -1.565596103668213
    3. '<|end|>' → logprob: -2.315596103668213
    4. 's' → logprob: -2.565596103668213
    5. ' at' → logprob: -2.690596103668213
    6. '<|end|>' → logprob: -2.815596103668213
    7. ',' → logprob: -3.440596103668213
    8. '#' → logprob: -3.690596103668213
    9. '=' → logprob: -3.940596103668213
    10. ' =' → logprob: -3.940596103668213

Token 528: ':
' (ID: 734)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 529: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 530: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 531: ' NS' (ID: 6950)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 532: ' green' (ID: 8851)
  Prédit: ' green'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' green' → logprob: -0.13643667101860046
    2. 'green' → logprob: -2.261436700820923
    3. '_green' → logprob: -4.011436462402344
    4. ' and' → logprob: -7.011436462402344
    5. ' is' → logprob: -7.636436462402344
    6. '-green' → logprob: -7.761436462402344
    7. '_GREEN' → logprob: -7.761436462402344
    8. 'グ' → logprob: -8.448936462402344
    9. ' Green' → logprob: -8.636436462402344
    10. ' ' → logprob: -8.698936462402344

Token 533: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2419450283050537
    2. '<|end|>' → logprob: -1.7419450283050537
    3. ' and' → logprob: -1.9919450283050537
    4. '   ' → logprob: -2.4919450283050537
    5. ':' → logprob: -2.8669450283050537
    6. ')' → logprob: -2.9919450283050537
    7. ' or' → logprob: -3.1169450283050537
    8. ' at' → logprob: -3.3669450283050537
    9. '<|end|>' → logprob: -3.4919450283050537
    10. ' for' → logprob: -4.116945266723633

Token 534: ' north' (ID: 16173)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.21016085147857666
    2. '0' → logprob: -3.085160732269287
    3. 'not' → logprob: -3.460160732269287
    4. ''' → logprob: -3.835160732269287
    5. 'False' → logprob: -3.835160732269287
    6. ' True' → logprob: -4.210160732269287
    7. ''E' → logprob: -5.085160732269287
    8. ' not' → logprob: -5.210160732269287
    9. 'signal' → logprob: -5.335160732269287
    10. '['' → logprob: -5.585160732269287

Token 535: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.7124893069267273
    2. ' and' → logprob: -2.087489366531372
    3. 'or' → logprob: -2.212489366531372
    4. '<|end|>' → logprob: -2.337489366531372
    5. ',' → logprob: -2.462489366531372
    6. 'and' → logprob: -3.587489366531372
    7. 'south' → logprob: -3.962489366531372
    8. ')' → logprob: -4.837489128112793
    9. '<|end|>' → logprob: -5.587489128112793
    10. '-s' → logprob: -5.837489128112793

Token 536: ' south' (ID: 15019)
  Prédit: 'south'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'south' → logprob: -0.00870639830827713
    2. ' south' → logprob: -4.883706569671631
    3. 's' → logprob: -7.008706569671631
    4. ''s' → logprob: -8.758706092834473
    5. 'South' → logprob: -11.508706092834473
    6. ''' → logprob: -12.258706092834473
    7. ' ' → logprob: -12.758706092834473
    8. '```' → logprob: -13.008706092834473
    9. '_s' → logprob: -13.133706092834473
    10. 'outh' → logprob: -13.133706092834473

Token 537: ' allowed' (ID: 9279)
  Prédit: ' directions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' directions' → logprob: -1.1814470291137695
    2. ' green' → logprob: -1.5564470291137695
    3. '<|end|>' → logprob: -1.8064470291137695
    4. 'green' → logprob: -2.0564470291137695
    5. ' or' → logprob: -2.5564470291137695
    6. ' direction' → logprob: -3.8064470291137695
    7. '   ' → logprob: -4.0564470291137695
    8. ',' → logprob: -4.1814470291137695
    9. ' and' → logprob: -4.5564470291137695
    10. 'direction' → logprob: -5.0564470291137695

Token 538: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12221776694059372
    2. ',' → logprob: -2.9972176551818848
    3. '<|end|>' → logprob: -3.6222176551818848
    4. ' at' → logprob: -4.622217655181885
    5. '.' → logprob: -5.122217655181885
    6. '
' → logprob: -5.622217655181885
    7. ' and' → logprob: -5.747217655181885
    8. '<|end|>' → logprob: -5.997217655181885
    9. ',
' → logprob: -6.247217655181885
    10. ')' → logprob: -6.247217655181885

Token 539: ' move' (ID: 5275)
  Prédit: 'go'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'go' → logprob: -0.7954187393188477
    2. 'enter' → logprob: -0.7954187393188477
    3. 'pass' → logprob: -2.5454187393188477
    4. 'move' → logprob: -5.045418739318848
    5. ' go' → logprob: -5.545418739318848
    6. ' enter' → logprob: -5.545418739318848
    7. 'pro' → logprob: -6.670418739318848
    8. ' pass' → logprob: -6.920418739318848
    9. 'cross' → logprob: -7.045418739318848
    10. 'advance' → logprob: -8.170418739318848

Token 540: ' through' (ID: 1819)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 541: ' intersection' (ID: 42002)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 542: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12871630489826202
    2. '<|end|>' → logprob: -2.753716230392456
    3. ',' → logprob: -4.128716468811035
    4. ')' → logprob: -4.503716468811035
    5. '<|end|>' → logprob: -4.753716468811035
    6. '.' → logprob: -4.753716468811035
    7. 'def' → logprob: -5.753716468811035
    8. ' at' → logprob: -6.503716468811035
    9. '
' → logprob: -6.503716468811035
    10. '#' → logprob: -7.253716468811035

Token 543: 'i' (ID: 72)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.037813205271959305
    2. ')
' → logprob: -3.662813186645508
    3. ' )' → logprob: -5.537813186645508
    4. '')' → logprob: -5.912813186645508
    5. '#' → logprob: -7.162813186645508
    6. ' at' → logprob: -7.537813186645508
    7. '),' → logprob: -7.662813186645508
    8. ',' → logprob: -7.787813186645508
    9. '）' → logprob: -8.287813186645508
    10. '   ' → logprob: -8.537813186645508

Token 544: '.e' (ID: 2560)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7287651896476746
    2. 'f' → logprob: -0.8537651896476746
    3. ')' → logprob: -2.7287652492523193
    4. 's' → logprob: -3.8537652492523193
    5. 't' → logprob: -6.47876501083374
    6. '=' → logprob: -7.60376501083374
    7. 'def' → logprob: -7.60376501083374
    8. 'm' → logprob: -7.85376501083374
    9. '   ' → logprob: -7.85376501083374
    10. 'return' → logprob: -8.478765487670898

Token 545: '.' (ID: 13)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1403181552886963
    2. ''E' → logprob: -2.3903181552886963
    3. ''N' → logprob: -4.015317916870117
    4. ' '' → logprob: -4.890317916870117
    5. ''s' → logprob: -5.890317916870117
    6. ''e' → logprob: -6.140317916870117
    7. ')' → logprob: -6.515317916870117
    8. ''n' → logprob: -6.890317916870117
    9. ''t' → logprob: -7.140317916870117
    10. '#' → logprob: -7.265317916870117

Token 546: ' entering' (ID: 25605)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6899271607398987
    2. 'if' → logprob: -1.439927101135254
    3. 'E' → logprob: -3.939927101135254
    4. 'EW' → logprob: -3.939927101135254
    5. '#' → logprob: -4.064927101135254
    6. ' the' → logprob: -4.064927101135254
    7. ' return' → logprob: -4.189927101135254
    8. ' E' → logprob: -4.189927101135254
    9. ' '' → logprob: -4.189927101135254
    10. 'return' → logprob: -4.314927101135254

Token 547: ' intersection' (ID: 42002)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.6128450632095337
    2. ')' → logprob: -1.7378450632095337
    3. ' from' → logprob: -2.487844944000244
    4. ' the' → logprob: -2.612844944000244
    5. ' intersection' → logprob: -2.612844944000244
    6. 'the' → logprob: -2.987844944000244
    7. 'intersection' → logprob: -2.987844944000244
    8. 'E' → logprob: -3.112844944000244
    9. ''' → logprob: -3.112844944000244
    10. ' '' → logprob: -3.362844944000244

Token 548: ' on' (ID: 402)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021268034353852272
    2. ' from' → logprob: -5.521267890930176
    3. 'from' → logprob: -5.646267890930176
    4. '   ' → logprob: -5.896267890930176
    5. ' )' → logprob: -6.021267890930176
    6. ',' → logprob: -6.646267890930176
    7. '<|end|>' → logprob: -6.771267890930176
    8. 'から' → logprob: -7.646267890930176
    9. '):' → logprob: -7.896267890930176
    10. 's' → logprob: -7.896267890930176

Token 549: ' N' (ID: 478)
  Prédit: ' dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dir' → logprob: -0.8068996071815491
    2. 'dir' → logprob: -0.9318996071815491
    3. ''' → logprob: -3.3068995475769043
    4. ' '' → logprob: -3.5568995475769043
    5. 'E' → logprob: -4.181899547576904
    6. 'direction' → logprob: -4.181899547576904
    7. 'N' → logprob: -4.806899547576904
    8. 'S' → logprob: -5.681899547576904
    9. 'signal' → logprob: -5.806899547576904
    10. 'NS' → logprob: -5.806899547576904

Token 550: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.11445305496454239
    2. 'or' → logprob: -2.989453077316284
    3. ',' → logprob: -3.614453077316284
    4. ')' → logprob: -4.864452838897705
    5. ',S' → logprob: -5.114452838897705
    6. 'S' → logprob: -5.364452838897705
    7. '')' → logprob: -6.114452838897705
    8. '/S' → logprob: -6.239452838897705
    9. ' and' → logprob: -6.239452838897705
    10. 'orth' → logprob: -7.364452838897705

Token 551: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.001970150275155902
    2. ' S' → logprob: -6.501970291137695
    3. '   ' → logprob: -8.876970291137695
    4. 'E' → logprob: -9.001970291137695
    5. 'def' → logprob: -9.751970291137695
    6. 'W' → logprob: -10.501970291137695
    7. '#' → logprob: -10.626970291137695
    8. 'import' → logprob: -10.751970291137695
    9. ' ' → logprob: -11.876970291137695
    10. '  ' → logprob: -11.876970291137695

Token 552: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20158739387989044
    2. '')' → logprob: -1.951587438583374
    3. ' or' → logprob: -4.576587200164795
    4. ' direction' → logprob: -4.701587200164795
    5. ' directions' → logprob: -5.451587200164795
    6. 'direction' → logprob: -5.451587200164795
    7. '方向' → logprob: -6.076587200164795
    8. '   ' → logprob: -6.576587200164795
    9. ',' → logprob: -6.701587200164795
    10. ' side' → logprob: -6.951587200164795

Token 553: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017020927742123604
    2. '<|end|>' → logprob: -4.8920207023620605
    3. ')' → logprob: -5.0170207023620605
    4. 'def' → logprob: -6.5170207023620605
    5. '<|end|>' → logprob: -8.392021179199219
    6. ' if' → logprob: -8.392021179199219
    7. ',' → logprob: -9.017021179199219
    8. '.' → logprob: -9.517021179199219
    9. 'if' → logprob: -9.767021179199219
    10. '    
' → logprob: -9.767021179199219

Token 554: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028230130672454834
    2. '<|end|>' → logprob: -4.9032301902771
    3. 'def' → logprob: -5.2782301902771
    4. 'if' → logprob: -5.4032301902771
    5. ' if' → logprob: -5.4032301902771
    6. ')' → logprob: -5.4032301902771
    7. 'direction' → logprob: -7.6532301902771
    8. ',' → logprob: -8.528229713439941
    9. '<|end|>' → logprob: -8.778229713439941
    10. 'return' → logprob: -9.028229713439941

Token 555: ' EW' (ID: 143307)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08601309359073639
    2. 'if' → logprob: -2.961013078689575
    3. ' if' → logprob: -4.211013317108154
    4. 'return' → logprob: -5.461013317108154
    5. 'direction' → logprob: -5.711013317108154
    6. 'dir' → logprob: -6.711013317108154
    7. 'allowed' → logprob: -7.086013317108154
    8. 'state' → logprob: -7.586013317108154
    9. ')' → logprob: -7.586013317108154
    10. 'signal' → logprob: -7.586013317108154

Token 556: ' green' (ID: 8851)
  Prédit: ' green'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' green' → logprob: -0.2827954590320587
    2. '_green' → logprob: -1.6577954292297363
    3. 'green' → logprob: -3.5327954292297363
    4. '_' → logprob: -3.9077954292297363
    5. '<|end|>' → logprob: -6.657795429229736
    6. ')' → logprob: -7.157795429229736
    7. '_GREEN' → logprob: -7.532795429229736
    8. ' return' → logprob: -8.157795906066895
    9. '   ' → logprob: -8.282795906066895
    10. ' _' → logprob: -8.282795906066895

Token 557: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38078394532203674
    2. '=' → logprob: -2.005784034729004
    3. '   ' → logprob: -2.005784034729004
    4. ':' → logprob: -4.255784034729004
    5. ' ==' → logprob: -4.380784034729004
    6. '==' → logprob: -5.255784034729004
    7. ' and' → logprob: -6.005784034729004
    8. ' if' → logprob: -6.130784034729004
    9. '=True' → logprob: -6.505784034729004
    10. ',' → logprob: -6.630784034729004

Token 558: ' east' (ID: 23557)
  Prédit: 'east'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'east' → logprob: -0.48559942841529846
    2. ' east' → logprob: -1.110599398612976
    3. 'ew' → logprob: -3.2355995178222656
    4. 'west' → logprob: -5.735599517822266
    5. ''e' → logprob: -6.110599517822266
    6. 'e' → logprob: -6.610599517822266
    7. '('' → logprob: -6.735599517822266
    8. 'dir' → logprob: -6.735599517822266
    9. 'False' → logprob: -7.360599517822266
    10. ''' → logprob: -7.735599517822266

Token 559: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.030120696872472763
    2. 'or' → logprob: -3.530120611190796
    3. '<|end|>' → logprob: -8.780120849609375
    4. ',' → logprob: -10.030120849609375
    5. ')' → logprob: -10.155120849609375
    6. '	or' → logprob: -10.405120849609375
    7. ' ' → logprob: -10.780120849609375
    8. '   ' → logprob: -11.030120849609375
    9. '<|end|>' → logprob: -11.530120849609375
    10. ''or' → logprob: -11.780120849609375

Token 560: ' west' (ID: 14078)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.06525105983018875
    2. ' W' → logprob: -3.190251111984253
    3. 'west' → logprob: -4.190250873565674
    4. 'w' → logprob: -5.565250873565674
    5. ' west' → logprob: -5.815250873565674
    6. ' ' → logprob: -11.690251350402832
    7. ' ' → logprob: -12.065251350402832
    8. '西' → logprob: -12.315251350402832
    9. 'south' → logprob: -12.315251350402832
    10. ' w' → logprob: -12.565251350402832

Token 561: ' allowed' (ID: 9279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 562: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.620435357093811
    2. '   ' → logprob: -1.620435357093811
    3. ' to' → logprob: -2.6204352378845215
    4. 'to' → logprob: -2.8704352378845215
    5. '<|end|>' → logprob: -3.1204352378845215
    6. ':' → logprob: -3.4954352378845215
    7. ')' → logprob: -4.3704352378845215
    8. '):' → logprob: -4.3704352378845215
    9. '<|end|>' → logprob: -5.1204352378845215
    10. 'def' → logprob: -5.6204352378845215

Token 563: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014249772764742374
    2. ')' → logprob: -5.014249801635742
    3. '<|end|>' → logprob: -5.139249801635742
    4. 'def' → logprob: -7.139249801635742
    5. ' if' → logprob: -7.889249801635742
    6. '<|end|>' → logprob: -8.764249801635742
    7. ',' → logprob: -9.889249801635742
    8. '    
' → logprob: -10.014249801635742
    9. 'if' → logprob: -10.139249801635742
    10. '
' → logprob: -11.014249801635742

Token 564: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011793850921094418
    2. ' if' → logprob: -5.136793613433838
    3. 'if' → logprob: -5.511793613433838
    4. ')' → logprob: -7.511793613433838
    5. 'signal' → logprob: -7.886793613433838
    6. ' signal' → logprob: -8.761794090270996
    7. 'def' → logprob: -9.136794090270996
    8. '    
' → logprob: -9.136794090270996
    9. 'state' → logprob: -9.386794090270996
    10. ',' → logprob: -9.886794090270996

Token 565: ' The' (ID: 623)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5907833576202393
    2. 'if' → logprob: -0.8407833576202393
    3. 'signal' → logprob: -5.34078311920166
    4. 'state' → logprob: -5.59078311920166
    5. ' if' → logprob: -5.84078311920166
    6. 'def' → logprob: -6.71578311920166
    7. 'return' → logprob: -7.59078311920166
    8. 's' → logprob: -8.21578311920166
    9. 'd' → logprob: -8.59078311920166
    10. 'sig' → logprob: -8.71578311920166

Token 566: ' arrival' (ID: 24861)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7281851768493652
    2. 'if' → logprob: -1.4781851768493652
    3. 'def' → logprob: -2.6031851768493652
    4. ' signal' → logprob: -3.4781851768493652
    5. 'signal' → logprob: -3.7281851768493652
    6. ' direction' → logprob: -3.9781851768493652
    7. ')' → logprob: -4.228185176849365
    8. 'return' → logprob: -4.353185176849365
    9. 'direction' → logprob: -4.353185176849365
    10. 's' → logprob: -4.603185176849365

Token 567: ' to' (ID: 316)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8210999369621277
    2. '   ' → logprob: -2.1960999965667725
    3. ':' → logprob: -2.3210999965667725
    4. ')' → logprob: -2.4460999965667725
    5. '):' → logprob: -3.1960999965667725
    6. '[' → logprob: -3.3210999965667725
    7. '_inter' → logprob: -4.071099758148193
    8. '_d' → logprob: -4.071099758148193
    9. '_direction' → logprob: -4.196099758148193
    10. 's' → logprob: -4.446099758148193

Token 568: ' intersection' (ID: 42002)
  Prédit: 'intersection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'intersection' → logprob: -0.4881088137626648
    2. ' intersection' → logprob: -1.9881088733673096
    3. 'direction' → logprob: -2.3631088733673096
    4. 'inter' → logprob: -3.1131088733673096
    5. 'def' → logprob: -3.4881088733673096
    6. 'the' → logprob: -3.6131088733673096
    7. 'signal' → logprob: -3.7381088733673096
    8. 'dir' → logprob: -4.8631086349487305
    9. ' the' → logprob: -5.4881086349487305
    10. ' direction' → logprob: -5.7381086349487305

Token 569: ' comes' (ID: 5124)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.6374680995941162
    2. 'from' → logprob: -1.6374680995941162
    3. 'から' → logprob: -2.137468099594116
    4. ' from' → logprob: -2.387468099594116
    5. ':' → logprob: -2.637468099594116
    6. '   ' → logprob: -3.137468099594116
    7. ')' → logprob: -3.262468099594116
    8. '<|end|>' → logprob: -3.512468099594116
    9. '<|end|>' → logprob: -3.762468099594116
    10. ',' → logprob: -3.887468099594116

Token 570: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.524189829826355
    2. ' from' → logprob: -0.899189829826355
    3. '   ' → logprob: -7.8991899490356445
    4. '_from' → logprob: -7.8991899490356445
    5. ' on' → logprob: -9.774189949035645
    6. '	from' → logprob: -9.899189949035645
    7. 'から' → logprob: -10.399189949035645
    8. ')' → logprob: -10.649189949035645
    9. 'on' → logprob: -11.024189949035645
    10. 'in' → logprob: -11.149189949035645

Token 571: ' previous' (ID: 5880)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.6952316164970398
    2. 'the' → logprob: -1.0702316761016846
    3. 'direction' → logprob: -2.6952316761016846
    4. ' opposite' → logprob: -3.5702316761016846
    5. ' the' → logprob: -3.6952316761016846
    6. 'previous' → logprob: -3.8202316761016846
    7. 'prev' → logprob: -5.0702314376831055
    8. ' direction' → logprob: -5.3202314376831055
    9. ' previous' → logprob: -7.0702314376831055
    10. 'dir' → logprob: -7.1952314376831055

Token 572: ' edge' (ID: 11165)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5342997312545776
    2. ' direction' → logprob: -1.7842997312545776
    3. '_direction' → logprob: -2.534299850463867
    4. ' _' → logprob: -2.659299850463867
    5. 'direction' → logprob: -3.284299850463867
    6. '<|end|>' → logprob: -3.659299850463867
    7. ')' → logprob: -4.034299850463867
    8. ' road' → logprob: -5.659299850463867
    9. '_token' → logprob: -6.534299850463867
    10. ' line' → logprob: -6.784299850463867

Token 573: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10993935912847519
    2. ':' → logprob: -3.3599393367767334
    3. ')' → logprob: -3.6099393367767334
    4. ',' → logprob: -4.4849395751953125
    5. '):' → logprob: -4.8599395751953125
    6. ' if' → logprob: -5.2349395751953125
    7. ' and' → logprob: -5.7349395751953125
    8. '<|end|>' → logprob: -5.8599395751953125
    9. 'def' → logprob: -6.1099395751953125
    10. '.' → logprob: -6.3599395751953125

Token 574: ' the' (ID: 290)
  Prédit: ' so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' so' → logprob: -0.5615025758743286
    2. ' and' → logprob: -1.9365025758743286
    3. '   ' → logprob: -2.061502456665039
    4. '<|end|>' → logprob: -2.936502456665039
    5. ')' → logprob: -3.686502456665039
    6. ' which' → logprob: -4.186502456665039
    7. 'and' → logprob: -4.436502456665039
    8. '#' → logprob: -5.186502456665039
    9. ' but' → logprob: -5.186502456665039
    10. ' meaning' → logprob: -5.311502456665039

Token 575: ' truck' (ID: 13790)
  Prédit: ' opposite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' opposite' → logprob: -0.3932379186153412
    2. ' direction' → logprob: -2.143237829208374
    3. ' previous' → logprob: -3.393237829208374
    4. ' if' → logprob: -3.393237829208374
    5. ' return' → logprob: -3.643237829208374
    6. '   ' → logprob: -3.893237829208374
    7. '#' → logprob: -4.268238067626953
    8. 'direction' → logprob: -4.518238067626953
    9. 'prev' → logprob: -4.893238067626953
    10. ' signal' → logprob: -4.893238067626953

Token 576: ' then' (ID: 1815)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 577: ' leaves' (ID: 15657)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.6511977314949036
    2. 'moves' → logprob: -1.1511976718902588
    3. 'must' → logprob: -3.401197671890259
    4. 'contin' → logprob: -3.526197671890259
    5. 'ent' → logprob: -3.776197671890259
    6. ' moves' → logprob: -4.276197910308838
    7. 'arr' → logprob: -4.776197910308838
    8. 'can' → logprob: -5.276197910308838
    9. 'cannot' → logprob: -5.276197910308838
    10. '#' → logprob: -5.401197910308838

Token 578: ' intersection' (ID: 42002)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.3887040913105011
    2. 'the' → logprob: -1.6387040615081787
    3. 'from' → logprob: -3.1387040615081787
    4. ' from' → logprob: -3.6387040615081787
    5. 'intersection' → logprob: -4.513704299926758
    6. ' intersection' → logprob: -4.888704299926758
    7. ' on' → logprob: -4.888704299926758
    8. ' in' → logprob: -5.388704299926758
    9. ' to' → logprob: -5.763704299926758
    10. '<|end|>' → logprob: -5.888704299926758

Token 579: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -1.0151935815811157
    2. ' to' → logprob: -1.7651935815811157
    3. ' in' → logprob: -2.265193462371826
    4. ',' → logprob: -2.640193462371826
    5. '   ' → logprob: -2.765193462371826
    6. 'from' → logprob: -3.390193462371826
    7. ' with' → logprob: -3.390193462371826
    8. '.' → logprob: -3.515193462371826
    9. ' from' → logprob: -4.140193462371826
    10. ')' → logprob: -4.390193462371826

Token 580: ' dir' (ID: 5609)
  Prédit: ' dir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dir' → logprob: -0.4904397428035736
    2. 'dir' → logprob: -1.240439772605896
    3. ' the' → logprob: -3.4904396533966064
    4. 'the' → logprob: -3.6154396533966064
    5. 'next' → logprob: -4.3654398918151855
    6. 'direction' → logprob: -4.4904398918151855
    7. ' next' → logprob: -4.4904398918151855
    8. ' direction' → logprob: -5.4904398918151855
    9. ' that' → logprob: -7.8654398918151855
    10. 'dire' → logprob: -7.8654398918151855

Token 581: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.00040886594797484577
    2. ')' → logprob: -8.875409126281738
    3. '_' → logprob: -10.125409126281738
    4. '_next' → logprob: -10.375409126281738
    5. '_move' → logprob: -10.750409126281738
    6. '_out' → logprob: -10.875409126281738
    7. '_dir' → logprob: -11.000409126281738
    8. '   ' → logprob: -11.000409126281738
    9. 'arr' → logprob: -11.125409126281738
    10. ')_' → logprob: -11.375409126281738

Token 582: 'ive' (ID: 585)
  Prédit: 'ive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ive' → logprob: -3.857719275401905e-05
    2. 'ieve' → logprob: -11.375038146972656
    3. '_arr' → logprob: -11.750038146972656
    4. 'rive' → logprob: -12.000038146972656
    5. 'ibe' → logprob: -12.500038146972656
    6. 'IVE' → logprob: -13.500038146972656
    7. '_' → logprob: -13.875038146972656
    8. 'vive' → logprob: -13.875038146972656
    9. 'ivée' → logprob: -14.000038146972656
    10. '   ' → logprob: -14.250038146972656

Token 583: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7382612824440002
    2. '   ' → logprob: -0.8632612824440002
    3. '):' → logprob: -2.6132612228393555
    4. ')' → logprob: -4.7382612228393555
    5. '.' → logprob: -4.9882612228393555
    6. 'def' → logprob: -6.1132612228393555
    7. '[' → logprob: -6.2382612228393555
    8. ',' → logprob: -6.3632612228393555
    9. ':
' → logprob: -6.9882612228393555
    10. '(' → logprob: -7.1132612228393555

Token 584: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0031652413308620453
    2. ' if' → logprob: -6.878165245056152
    3. '<|end|>' → logprob: -7.128165245056152
    4. 'if' → logprob: -7.753165245056152
    5. 'def' → logprob: -8.003165245056152
    6. ')' → logprob: -8.128165245056152
    7. '    
' → logprob: -9.753165245056152
    8. '<|end|>' → logprob: -10.003165245056152
    9. '#' → logprob: -10.253165245056152
    10. ',' → logprob: -11.128165245056152

Token 585: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003762667067348957
    2. ' if' → logprob: -6.378762722015381
    3. 'if' → logprob: -6.503762722015381
    4. '    
' → logprob: -8.753762245178223
    5. 'def' → logprob: -9.128762245178223
    6. ')' → logprob: -9.253762245178223
    7. 'signal' → logprob: -10.378762245178223
    8. '#' (adapté à ' #') → logprob: -10.753762245178223
    9. '<|end|>' → logprob: -10.878762245178223
    10. 'state' → logprob: -11.128762245178223

Token 586: ' But' (ID: 3072)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2454994171857834
    2. 'if' → logprob: -1.6204993724822998
    3. ' if' → logprob: -4.870499610900879
    4. 'allowed' → logprob: -5.745499610900879
    5. 'state' → logprob: -5.745499610900879
    6. 'def' → logprob: -6.120499610900879
    7. 'signal' → logprob: -6.870499610900879
    8. 'direction' → logprob: -7.245499610900879
    9. 'allow' → logprob: -7.370499610900879
    10. '#' → logprob: -7.745499610900879

Token 587: ' the' (ID: 290)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.6143429279327393
    2. ' dir' → logprob: -1.4893429279327393
    3. ' signal' → logprob: -2.9893429279327393
    4. 'dir' → logprob: -3.2393429279327393
    5. 'not' → logprob: -3.4893429279327393
    6. ' if' → logprob: -3.7393429279327393
    7. 'signal' → logprob: -3.8643429279327393
    8. '   ' → logprob: -4.48934268951416
    9. '#' → logprob: -4.48934268951416
    10. ' return' → logprob: -4.86434268951416

Token 588: ' rule' (ID: 10652)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8365297317504883
    2. 'if' → logprob: -2.0865297317504883
    3. ' signal' → logprob: -2.4615297317504883
    4. 'signal' → logprob: -2.7115297317504883
    5. 'def' → logprob: -2.9615297317504883
    6. ' return' → logprob: -2.9615297317504883
    7. 'return' → logprob: -3.3365297317504883
    8. ' next' → logprob: -3.9615297317504883
    9. ' def' → logprob: -4.086529731750488
    10. ' signals' → logprob: -4.461529731750488

Token 589: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.96117103099823
    2. ':' → logprob: -1.08617103099823
    3. '   ' → logprob: -2.4611711502075195
    4. '<|end|>' → logprob: -3.4611711502075195
    5. ',' → logprob: -3.8361711502075195
    6. ' =' → logprob: -3.9611711502075195
    7. '<|end|>' → logprob: -4.0861711502075195
    8. ' ' → logprob: -4.4611711502075195
    9. ' if' → logprob: -4.5861711502075195
    10. ' for' → logprob: -4.8361711502075195

Token 590: ' the' (ID: 290)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27177608013153076
    2. ' if' → logprob: -1.8967760801315308
    3. ' signal' → logprob: -4.02177619934082
    4. ''' → logprob: -4.39677619934082
    5. ' not' → logprob: -4.77177619934082
    6. ' dir' → logprob: -5.39677619934082
    7. ' '' → logprob: -5.39677619934082
    8. ' ' → logprob: -5.77177619934082
    9. ':' → logprob: -5.89677619934082
    10. '<|end|>' → logprob: -6.02177619934082

Token 591: ' truck' (ID: 13790)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6008427143096924
    2. ' next' → logprob: -2.6008427143096924
    3. ' previous' → logprob: -2.6008427143096924
    4. ' direction' → logprob: -2.9758427143096924
    5. ' signal' → logprob: -2.9758427143096924
    6. 'def' → logprob: -3.6008427143096924
    7. 'if' → logprob: -3.6008427143096924
    8. '#' → logprob: -4.100842475891113
    9. ' opposite' → logprob: -4.100842475891113
    10. 'signal' → logprob: -4.100842475891113

Token 592: ' cannot' (ID: 6284)
  Prédit: ' cannot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cannot' → logprob: -1.031648874282837
    2. ' can' → logprob: -2.156648874282837
    3. ' must' → logprob: -2.281648874282837
    4. 'cannot' → logprob: -2.281648874282837
    5. '<|end|>' → logprob: -2.906648874282837
    6. ' ' → logprob: -2.906648874282837
    7. 's' → logprob: -3.406648874282837
    8. ' is' → logprob: -3.406648874282837
    9. '_' → logprob: -3.656648874282837
    10. '_can' → logprob: -4.156648635864258

Token 593: ' enter' (ID: 5747)
  Prédit: ' enter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enter' → logprob: -0.4527028203010559
    2. 'enter' → logprob: -1.0777027606964111
    3. 'arr' → logprob: -4.45270299911499
    4. 'go' → logprob: -5.82770299911499
    5. ' go' → logprob: -6.95270299911499
    6. ' move' → logprob: -7.07770299911499
    7. ' stop' → logprob: -7.20270299911499
    8. 'stop' → logprob: -7.32770299911499
    9. '_enter' → logprob: -7.32770299911499
    10. '	enter' → logprob: -7.45270299911499

Token 594: ' intersection' (ID: 42002)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.09993790090084076
    2. 'the' → logprob: -3.599937915802002
    3. ' intersection' → logprob: -3.974937915802002
    4. ' a' → logprob: -4.224937915802002
    5. 'intersection' → logprob: -4.474937915802002
    6. '_' → logprob: -5.224937915802002
    7. '<|end|>' → logprob: -5.224937915802002
    8. ' an' → logprob: -5.974937915802002
    9. '(inter' → logprob: -6.349937915802002
    10. 'inter' → logprob: -6.724937915802002

Token 595: ' if' (ID: 538)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.7150843739509583
    2. ' if' → logprob: -1.4650843143463135
    3. '<|end|>' → logprob: -2.8400843143463135
    4. 'from' → logprob: -3.0900843143463135
    5. ',' → logprob: -3.2150843143463135
    6. ' ' → logprob: -3.4650843143463135
    7. '.' → logprob: -3.8400843143463135
    8. '<|end|>' → logprob: -4.590084552764893
    9. ' (' → logprob: -4.840084552764893
    10. ' unless' → logprob: -4.965084552764893

Token 596: ' signal' (ID: 12884)
  Prédit: 'signal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'signal' → logprob: -0.7758857011795044
    2. ' signal' → logprob: -1.0258857011795044
    3. ' not' → logprob: -2.150885581970215
    4. 'not' → logprob: -2.900885581970215
    5. ' dir' → logprob: -5.525885581970215
    6. ' the' → logprob: -6.775885581970215
    7. 'op' → logprob: -7.025885581970215
    8. 'dir' → logprob: -7.150885581970215
    9. '(signal' → logprob: -7.400885581970215
    10. 'the' → logprob: -7.525885581970215

Token 597: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.005889683496206999
    2. ' ' → logprob: -7.130889892578125
    3. ' allows' → logprob: -7.130889892578125
    4. '_is' → logprob: -7.255889892578125
    5. '_' → logprob: -7.880889892578125
    6. '<|end|>' → logprob: -7.880889892578125
    7. 'is' → logprob: -8.130889892578125
    8. '_state' → logprob: -8.130889892578125
    9. '[' → logprob: -8.630889892578125
    10. '<|end|>' → logprob: -8.880889892578125

Token 598: ' red' (ID: 3592)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.64194256067276
    2. ' red' → logprob: -0.76694256067276
    3. 'False' → logprob: -5.016942501068115
    4. ' False' → logprob: -6.641942501068115
    5. '赤' → logprob: -7.391942501068115
    6. '_red' → logprob: -8.641942977905273
    7. ' not' → logprob: -8.891942977905273
    8. 'not' → logprob: -9.016942977905273
    9. '红' → logprob: -9.766942977905273
    10. ' green' → logprob: -10.266942977905273

Token 599: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1440557837486267
    2. ' and' → logprob: -3.1440558433532715
    3. ':' → logprob: -3.2690558433532715
    4. ')' → logprob: -3.5190558433532715
    5. ' if' → logprob: -5.2690558433532715
    6. '):' → logprob: -5.5190558433532715
    7. '<|end|>' → logprob: -5.7690558433532715
    8. '.' → logprob: -6.0190558433532715
    9. ' for' → logprob: -6.5190558433532715
    10. ',' → logprob: -6.8940558433532715

Token 600: ' that' (ID: 484)
  Prédit: ' dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dir' → logprob: -0.6981643438339233
    2. 'dir' → logprob: -0.6981643438339233
    3. 'op' → logprob: -6.448164463043213
    4. 'the' → logprob: -6.948164463043213
    5. 'direction' → logprob: -7.323164463043213
    6. ' the' → logprob: -7.573164463043213
    7. ' opposite' → logprob: -7.573164463043213
    8. ' direction' → logprob: -8.698163986206055
    9. 'dire' → logprob: -9.198163986206055
    10. 'next' → logprob: -9.698163986206055

Token 601: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.04933224245905876
    2. ' direction' → logprob: -3.5493321418762207
    3. 'dir' → logprob: -4.674332141876221
    4. '_direction' → logprob: -5.549332141876221
    5. '方向' → logprob: -6.299332141876221
    6. 'arrival' → logprob: -6.549332141876221
    7. 'movement' → logprob: -7.299332141876221
    8. ' dir' → logprob: -7.924332141876221
    9. 'arr' → logprob: -8.049332618713379
    10. 'dire' → logprob: -8.174332618713379

Token 602: ' at' (ID: 540)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4860976040363312
    2. '   ' → logprob: -1.1110975742340088
    3. '):' → logprob: -3.611097574234009
    4. '.' → logprob: -5.236097812652588
    5. ')' → logprob: -5.236097812652588
    6. ':
' → logprob: -5.361097812652588
    7. ' and' → logprob: -5.361097812652588
    8. ' if' → logprob: -5.861097812652588
    9. '[' → logprob: -6.486097812652588
    10. ',' → logprob: -6.861097812652588

Token 603: ' the' (ID: 290)
  Prédit: ' arrival'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arrival' → logprob: -0.8300787806510925
    2. 'arrival' → logprob: -0.8300787806510925
    3. ' the' → logprob: -3.2050788402557373
    4. 'the' → logprob: -3.3300788402557373
    5. 'intersection' → logprob: -3.8300788402557373
    6. ' intersection' → logprob: -4.455078601837158
    7. 't' → logprob: -5.580078601837158
    8. 'direction' → logprob: -5.830078601837158
    9. 'dir' → logprob: -5.955078601837158
    10. ' direction' → logprob: -6.455078601837158

Token 604: ' arrival' (ID: 24861)
  Prédit: 'intersection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'intersection' → logprob: -1.0374343395233154
    2. ' arrival' → logprob: -1.2874343395233154
    3. ' intersection' → logprob: -1.7874343395233154
    4. 'arrival' → logprob: -1.9124343395233154
    5. ' time' → logprob: -3.9124343395233154
    6. 'time' → logprob: -3.9124343395233154
    7. ' given' → logprob: -5.4124345779418945
    8. ' moment' → logprob: -6.1624345779418945
    9. ' current' → logprob: -6.6624345779418945
    10. '```' → logprob: -6.6624345779418945

Token 605: ' time' (ID: 1058)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4084746241569519
    2. '   ' → logprob: -1.9084746837615967
    3. '):' → logprob: -1.9084746837615967
    4. ')' → logprob: -4.033474445343018
    5. '.' → logprob: -4.658474445343018
    6. ' and' → logprob: -5.658474445343018
    7. ',' → logprob: -6.408474445343018
    8. '):
' → logprob: -6.658474445343018
    9. ':
' → logprob: -6.908474445343018
    10. 'def' → logprob: -7.033474445343018

Token 606: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06253816187381744
    2. ':' → logprob: -3.0625381469726562
    3. '):' → logprob: -5.437538146972656
    4. ')' → logprob: -6.187538146972656
    5. '.' → logprob: -6.312538146972656
    6. 'def' → logprob: -6.812538146972656
    7. '<|end|>' → logprob: -7.062538146972656
    8. ' if' → logprob: -7.437538146972656
    9. ',' → logprob: -7.437538146972656
    10. ':
' → logprob: -8.187538146972656

Token 607: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02233179658651352
    2. ':' → logprob: -4.397331714630127
    3. ')' → logprob: -4.897331714630127
    4. '):' → logprob: -7.147331714630127
    5. '<|end|>' → logprob: -7.272331714630127
    6. ' if' → logprob: -8.772332191467285
    7. '    
' → logprob: -9.147332191467285
    8. '	' → logprob: -10.022332191467285
    9. '.' → logprob: -10.022332191467285
    10. '<|end|>' → logprob: -10.022332191467285

Token 608: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003231306094676256
    2. 'if' → logprob: -6.128231525421143
    3. 'state' → logprob: -7.503231525421143
    4. ' if' → logprob: -8.628231048583984
    5. 'signal' → logprob: -8.753231048583984
    6. '    
' → logprob: -9.878231048583984
    7. 'allowed' → logprob: -11.253231048583984
    8. ')' → logprob: -11.503231048583984
    9. '```' → logprob: -11.503231048583984
    10. 'def' → logprob: -11.753231048583984

Token 609: ' Since' (ID: 12265)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1043115109205246
    2. 'if' → logprob: -2.479311466217041
    3. ' if' → logprob: -4.479311466217041
    4. 'allowed' → logprob: -6.604311466217041
    5. 'allow' → logprob: -7.604311466217041
    6. 'signal' → logprob: -7.729311466217041
    7. 'state' → logprob: -7.854311466217041
    8. '```' → logprob: -8.4793119430542
    9. '#' → logprob: -8.6043119430542
    10. 'direction' → logprob: -8.6043119430542

Token 610: ' initial' (ID: 4871)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dir' → logprob: -0.33805981278419495
    2. ' dir' → logprob: -1.4630597829818726
    3. 'intersection' → logprob: -3.963059902191162
    4. 'not' → logprob: -4.463059902191162
    5. ' not' → logprob: -5.088059902191162
    6. 'signal' → logprob: -5.338059902191162
    7. 'signals' → logprob: -5.463059902191162
    8. ' intersection' → logprob: -5.588059902191162
    9. ' signals' → logprob: -6.463059902191162
    10. 'inter' → logprob: -6.588059902191162

Token 611: ' direction' (ID: 9262)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6087468862533569
    2. ' _' → logprob: -2.1087470054626465
    3. ' ' → logprob: -2.3587470054626465
    4. 'def' → logprob: -3.1087470054626465
    5. '[' → logprob: -3.4837470054626465
    6. '_signal' → logprob: -3.6087470054626465
    7. '   ' → logprob: -3.9837470054626465
    8. ' signal' → logprob: -4.2337470054626465
    9. '_direction' → logprob: -4.6087470054626465
    10. 'signal' → logprob: -4.6087470054626465

Token 612: ' is' (ID: 382)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9178618788719177
    2. '_' → logprob: -1.5428619384765625
    3. ' is' → logprob: -2.6678619384765625
    4. ')' → logprob: -2.7928619384765625
    5. '[' → logprob: -3.0428619384765625
    6. 's' → logprob: -3.5428619384765625
    7. ' =' → logprob: -3.6678619384765625
    8. '<|end|>' → logprob: -3.6678619384765625
    9. '):' → logprob: -4.0428619384765625
    10. '<|end|>' → logprob: -4.0428619384765625

Token 613: ' east' (ID: 23557)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.1965919733047485
    2. ''' → logprob: -1.8215919733047485
    3. ' '' → logprob: -2.071591854095459
    4. ' None' → logprob: -2.946591854095459
    5. 'None' → logprob: -2.946591854095459
    6. ''s' → logprob: -3.196591854095459
    7. 'not' → logprob: -3.321591854095459
    8. 'op' → logprob: -3.446591854095459
    9. 'dir' → logprob: -3.446591854095459
    10. ' dir' → logprob: -3.571591854095459

Token 614: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.33922097086906433
    2. '):' → logprob: -1.9642210006713867
    3. '   ' → logprob: -2.8392210006713867
    4. ')' → logprob: -3.7142210006713867
    5. '<|end|>' → logprob: -4.214221000671387
    6. 'def' → logprob: -4.839221000671387
    7. ':return' → logprob: -5.214221000671387
    8. ',' → logprob: -5.214221000671387
    9. '[' → logprob: -5.339221000671387
    10. ' and' → logprob: -5.464221000671387

Token 615: ' the' (ID: 290)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9427551031112671
    2. ' if' → logprob: -1.317755103111267
    3. ' return' → logprob: -1.567755103111267
    4. ' directions' → logprob: -3.1927552223205566
    5. 'return' → logprob: -3.3177552223205566
    6. ' dir' → logprob: -4.692755222320557
    7. '<|end|>' → logprob: -5.192755222320557
    8. '    ' → logprob: -5.317755222320557
    9. 'if' → logprob: -5.692755222320557
    10. ' signal' → logprob: -5.692755222320557

Token 616: ' truck' (ID: 13790)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6332401037216187
    2. ' if' → logprob: -2.258240222930908
    3. ' return' → logprob: -2.258240222930908
    4. 'def' → logprob: -3.008240222930908
    5. ' next' → logprob: -3.133240222930908
    6. ' def' → logprob: -3.258240222930908
    7. ' signal' → logprob: -3.383240222930908
    8. '[' → logprob: -4.383240222930908
    9. ' ' → logprob: -4.508240222930908
    10. 'return' → logprob: -4.508240222930908

Token 617: ' heading' (ID: 23808)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 618: ' east' (ID: 23557)
  Prédit: 'east'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'east' → logprob: -1.6461071968078613
    2. 'from' → logprob: -1.7711071968078613
    3. ' to' → logprob: -2.3961071968078613
    4. ' east' → logprob: -2.5211071968078613
    5. 'to' → logprob: -2.5211071968078613
    6. ' in' → logprob: -2.8961071968078613
    7. 's' → logprob: -2.8961071968078613
    8. ''' → logprob: -3.0211071968078613
    9. ' from' → logprob: -3.3961071968078613
    10. ' '' → logprob: -3.5211071968078613

Token 619: ' moves' (ID: 19523)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 620: ' from' (ID: 591)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -1.293773889541626
    2. ' to' → logprob: -1.793773889541626
    3. '<|end|>' → logprob: -2.168773889541626
    4. 'from' → logprob: -3.043773889541626
    5. ' one' → logprob: -3.043773889541626
    6. ' in' → logprob: -3.043773889541626
    7. 'to' → logprob: -3.168773889541626
    8. ',' → logprob: -3.793773889541626
    9. ' into' → logprob: -3.918773889541626
    10. 'in' → logprob: -4.043773651123047

Token 621: ' west' (ID: 14078)
  Prédit: 'intersection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'intersection' → logprob: -0.1792704164981842
    2. ' intersection' → logprob: -1.9292703866958618
    3. 'the' → logprob: -5.054270267486572
    4. ' the' → logprob: -5.304270267486572
    5. 'prev' → logprob: -5.679270267486572
    6. 'previous' → logprob: -6.429270267486572
    7. ' previous' → logprob: -7.054270267486572
    8. 'current' → logprob: -8.55427074432373
    9. ' prev' → logprob: -8.67927074432373
    10. ''' → logprob: -8.80427074432373

Token 622: ' intersection' (ID: 42002)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 623: ' to' (ID: 316)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 624: ' east' (ID: 23557)
  Prédit: 'east'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'east' → logprob: -0.23058272898197174
    2. ' east' → logprob: -1.6055827140808105
    3. 'the' → logprob: -5.7305827140808105
    4. ' the' → logprob: -6.4805827140808105
    5. 'west' → logprob: -9.105583190917969
    6. 'e' → logprob: -9.355583190917969
    7. ' intersection' → logprob: -9.480583190917969
    8. 'intersection' → logprob: -9.980583190917969
    9. ' ' → logprob: -10.980583190917969
    10. '```' → logprob: -11.355583190917969

Token 625: ' intersection' (ID: 42002)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9925345778465271
    2. '   ' → logprob: -1.6175346374511719
    3. ':' → logprob: -2.117534637451172
    4. '<|end|>' → logprob: -2.117534637451172
    5. '):' → logprob: -2.992534637451172
    6. 'def' → logprob: -3.492534637451172
    7. ' ' → logprob: -3.992534637451172
    8. '.' → logprob: -4.242534637451172
    9. ',' → logprob: -4.617534637451172
    10. '[' → logprob: -4.742534637451172

Token 626: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.298582524061203
    2. ':' → logprob: -1.6735825538635254
    3. '):' → logprob: -3.7985825538635254
    4. 'def' → logprob: -4.048582553863525
    5. '.' → logprob: -4.298582553863525
    6. ')' → logprob: -5.048582553863525
    7. '<|end|>' → logprob: -5.673582553863525
    8. '[' → logprob: -6.548582553863525
    9. ',' → logprob: -6.673582553863525
    10. ' if' → logprob: -7.548582553863525

Token 627: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00919660460203886
    2. ')' → logprob: -5.634196758270264
    3. '.' → logprob: -6.259196758270264
    4. 'def' → logprob: -6.509196758270264
    5. '<|end|>' → logprob: -6.634196758270264
    6. '[' → logprob: -9.134196281433105
    7. '<|end|>' → logprob: -9.134196281433105
    8. ',' → logprob: -9.259196281433105
    9. ':' → logprob: -9.509196281433105
    10. '{' → logprob: -9.884196281433105

Token 628: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09926552325487137
    2. ')' → logprob: -2.5992655754089355
    3. '<|end|>' → logprob: -4.0992655754089355
    4. ' if' → logprob: -6.8492655754089355
    5. ' )' → logprob: -7.5992655754089355
    6. 'def' → logprob: -7.8492655754089355
    7. '<|end|>' → logprob: -8.349265098571777
    8. '#' (adapté à ' #') → logprob: -8.474265098571777
    9. '.' → logprob: -9.099265098571777
    10. '{' → logprob: -9.224265098571777

Token 629: ' So' (ID: 2632)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014167038723826408
    2. 'if' → logprob: -5.764166831970215
    3. '<|end|>' → logprob: -5.764166831970215
    4. ' if' → logprob: -6.014166831970215
    5. ')' → logprob: -6.014166831970215
    6. 'def' → logprob: -7.139166831970215
    7. '{' → logprob: -7.639166831970215
    8. 'return' → logprob: -8.264166831970215
    9. ':' → logprob: -8.889166831970215
    10. '[' → logprob: -9.014166831970215

Token 630: ' the' (ID: 290)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.007502794265747
    2. ' dir' → logprob: -1.632502794265747
    3. 'if' → logprob: -1.882502794265747
    4. 'dir' → logprob: -2.882502794265747
    5. 'signal' → logprob: -2.882502794265747
    6. '   ' → logprob: -3.007502794265747
    7. ' signal' → logprob: -3.007502794265747
    8. 'return' → logprob: -3.632502794265747
    9. ' return' → logprob: -4.132502555847168
    10. '#' → logprob: -4.882502555847168

Token 631: ' direction' (ID: 9262)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -1.4981399774551392
    2. ' if' → logprob: -1.6231399774551392
    3. ' return' → logprob: -2.2481398582458496
    4. 'return' → logprob: -2.6231398582458496
    5. 't' → logprob: -2.7481398582458496
    6. 'signal' → logprob: -2.9981398582458496
    7. 'def' → logprob: -3.1231398582458496
    8. ' signal' → logprob: -3.3731398582458496
    9. 'if' → logprob: -3.4981398582458496
    10. ' direction' → logprob: -4.24813985824585

Token 632: ' on' (ID: 402)
  Prédit: '_arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.28103911876678467
    2. '_' → logprob: -1.6560391187667847
    3. ')' → logprob: -4.656039237976074
    4. ':' → logprob: -5.031039237976074
    5. ' =' → logprob: -5.406039237976074
    6. '_allow' → logprob: -5.406039237976074
    7. ''_' → logprob: -5.656039237976074
    8. '):' → logprob: -5.906039237976074
    9. '[' → logprob: -5.906039237976074
    10. 's' → logprob: -5.906039237976074

Token 633: ' edge' (ID: 11165)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dir' → logprob: -0.8020316362380981
    2. ''' → logprob: -1.5520316362380981
    3. ' dir' → logprob: -2.9270315170288086
    4. 'arr' → logprob: -3.1770315170288086
    5. 'next' → logprob: -3.3020315170288086
    6. ')' → logprob: -3.3020315170288086
    7. 'the' → logprob: -3.4270315170288086
    8. 'arrival' → logprob: -3.5520315170288086
    9. 'signal' → logprob: -3.9270315170288086
    10. 'return' → logprob: -4.552031517028809

Token 634: ' is' (ID: 382)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1768176555633545
    2. ')' → logprob: -1.5518176555633545
    3. ':' → logprob: -1.9268176555633545
    4. '<|end|>' → logprob: -2.3018176555633545
    5. 's' → logprob: -2.9268176555633545
    6. '<|end|>' → logprob: -3.0518176555633545
    7. '[' → logprob: -3.6768176555633545
    8. ''' → logprob: -4.051817893981934
    9. ' =' → logprob: -4.426817893981934
    10. ',' → logprob: -4.426817893981934

Token 635: ' the' (ID: 290)
  Prédit: ' dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dir' → logprob: -0.12333760410547256
    2. ' '' → logprob: -3.123337507247925
    3. ''' → logprob: -3.248337507247925
    4. 'dir' → logprob: -3.873337507247925
    5. ' next' → logprob: -4.623337745666504
    6. 'next' → logprob: -7.498337745666504
    7. '[' → logprob: -8.248337745666504
    8. ')' → logprob: -8.623337745666504
    9. '<|end|>' → logprob: -8.748337745666504
    10. ' a' → logprob: -8.748337745666504

Token 636: ' direction' (ID: 9262)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.42344149947166443
    2. ' ' → logprob: -1.7984415292739868
    3. ' next' → logprob: -2.7984414100646973
    4. '[' → logprob: -3.2984414100646973
    5. ')' → logprob: -4.048441410064697
    6. 'space' → logprob: -4.673441410064697
    7. 'next' → logprob: -4.798441410064697
    8. 'signal' → logprob: -5.048441410064697
    9. ' )' → logprob: -5.548441410064697
    10. '"' → logprob: -5.548441410064697

Token 637: ' the' (ID: 290)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.447421133518219
    2. ')' → logprob: -2.322421073913574
    3. '_arr' → logprob: -2.572421073913574
    4. '[' → logprob: -3.322421073913574
    5. ' that' → logprob: -3.822421073913574
    6. ' of' → logprob: -4.447421073913574
    7. '<|end|>' → logprob: -4.572421073913574
    8. '   ' → logprob: -4.822421073913574
    9. '_to' → logprob: -4.822421073913574
    10. ' to' → logprob: -4.947421073913574

Token 638: ' truck' (ID: 13790)
  Prédit: ' truck'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' truck' → logprob: -0.5845875144004822
    2. ' next' → logprob: -1.584587574005127
    3. ' arrival' → logprob: -3.084587574005127
    4. 'truck' → logprob: -3.084587574005127
    5. '_' → logprob: -3.584587574005127
    6. 'def' → logprob: -3.959587574005127
    7. ' code' → logprob: -4.334587574005127
    8. 'next' → logprob: -4.709587574005127
    9. 'arrival' → logprob: -4.959587574005127
    10. ' def' → logprob: -4.959587574005127

Token 639: ' moves' (ID: 19523)
  Prédit: ' moves'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' moves' → logprob: -0.8787975311279297
    2. 'moves' → logprob: -1.0037975311279297
    3. ' is' → logprob: -2.5037975311279297
    4. ' wants' → logprob: -3.3787975311279297
    5. '<|end|>' → logprob: -4.12879753112793
    6. '_moves' → logprob: -4.25379753112793
    7. ' ' → logprob: -4.62879753112793
    8. 'w' → logprob: -4.62879753112793
    9. ')' → logprob: -4.87879753112793
    10. 'is' → logprob: -5.75379753112793

Token 640: ' from' (ID: 591)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4877643287181854
    2. '   ' → logprob: -2.487764358520508
    3. '[' → logprob: -2.862764358520508
    4. '<|end|>' → logprob: -2.862764358520508
    5. ')' → logprob: -2.987764358520508
    6. '.' → logprob: -3.112764358520508
    7. '<|end|>' → logprob: -4.237764358520508
    8. '):' → logprob: -4.237764358520508
    9. '=' → logprob: -4.612764358520508
    10. 'def' → logprob: -4.737764358520508

Token 641: ' current' (ID: 2208)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 642: ' intersection' (ID: 42002)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0819910317659378
    2. '_inter' → logprob: -2.706990957260132
    3. ' _' → logprob: -5.581991195678711
    4. ' ' → logprob: -5.706991195678711
    5. 'intersection' → logprob: -6.081991195678711
    6. ' intersection' → logprob: -7.081991195678711
    7. '<|end|>' → logprob: -7.456991195678711
    8. ')' → logprob: -8.456991195678711
    9. '_direction' → logprob: -8.456991195678711
    10. ''' → logprob: -9.206991195678711

Token 643: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3095412254333496
    2. '<|end|>' → logprob: -1.5595412254333496
    3. ':' → logprob: -1.8095412254333496
    4. '[' → logprob: -2.1845412254333496
    5. '   ' → logprob: -2.1845412254333496
    6. '<|end|>' → logprob: -3.4345412254333496
    7. '.' → logprob: -3.6845412254333496
    8. 'def' → logprob: -3.8095412254333496
    9. '):' → logprob: -4.05954122543335
    10. ',' → logprob: -4.80954122543335

Token 644: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.053444407880306244
    2. 'def' → logprob: -4.1784443855285645
    3. ':' → logprob: -4.3034443855285645
    4. ')' → logprob: -4.4284443855285645
    5. '.' → logprob: -5.9284443855285645
    6. '):' → logprob: -6.1784443855285645
    7. ' if' → logprob: -6.3034443855285645
    8. '[' → logprob: -7.0534443855285645
    9. '<|end|>' → logprob: -7.3034443855285645
    10. '#' → logprob: -7.8034443855285645

Token 645: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0383232943713665
    2. ':' → logprob: -4.288323402404785
    3. ')' → logprob: -4.538323402404785
    4. ' if' → logprob: -5.288323402404785
    5. ' ' → logprob: -6.288323402404785
    6. '[' → logprob: -6.913323402404785
    7. '<|end|>' → logprob: -7.163323402404785
    8. '):' → logprob: -7.538323402404785
    9. ',' → logprob: -7.663323402404785
    10. '.' → logprob: -7.788323402404785

Token 646: ' But' (ID: 3072)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021976523101329803
    2. ' if' → logprob: -4.646976470947266
    3. 'def' → logprob: -5.396976470947266
    4. 'if' → logprob: -6.396976470947266
    5. ':' → logprob: -7.146976470947266
    6. 'signal' → logprob: -7.271976470947266
    7. '<|end|>' → logprob: -7.396976470947266
    8. '	if' → logprob: -7.396976470947266
    9. ')' → logprob: -8.271976470947266
    10. '{' → logprob: -8.396976470947266

Token 647: ' when' (ID: 1261)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dir' → logprob: -1.0843026638031006
    2. ' dir' → logprob: -1.3343026638031006
    3. ' not' → logprob: -2.2093026638031006
    4. 'signals' → logprob: -3.2093026638031006
    5. 'signal' → logprob: -3.3343026638031006
    6. '   ' → logprob: -3.4593026638031006
    7. ' signal' → logprob: -3.7093026638031006
    8. ' signals' → logprob: -3.7093026638031006
    9. 'not' → logprob: -3.7093026638031006
    10. ''' → logprob: -3.9593026638031006

Token 648: ' the' (ID: 290)
  Prédit: ' dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dir' → logprob: -0.3647165596485138
    2. 'dir' → logprob: -1.9897165298461914
    3. ' not' → logprob: -2.1147165298461914
    4. 'not' → logprob: -3.8647165298461914
    5. 'signal' → logprob: -5.364716529846191
    6. ' signal' → logprob: -5.489716529846191
    7. ' intersection' → logprob: -5.614716529846191
    8. ' signals' → logprob: -6.239716529846191
    9. 'intersection' → logprob: -6.239716529846191
    10. 'inter' → logprob: -6.364716529846191

Token 649: ' truck' (ID: 13790)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dir' → logprob: -0.9333720207214355
    2. ' dir' → logprob: -1.5583720207214355
    3. 'signal' → logprob: -2.3083720207214355
    4. 'direction' → logprob: -2.8083720207214355
    5. 'def' → logprob: -3.0583720207214355
    6. 'intersection' → logprob: -3.3083720207214355
    7. ' next' → logprob: -3.5583720207214355
    8. 'next' → logprob: -3.6833720207214355
    9. 's' → logprob: -4.3083720207214355
    10. ' signal' → logprob: -4.5583720207214355

Token 650: ' arrives' (ID: 39650)
  Prédit: '_arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -1.1896615028381348
    2. '_' → logprob: -2.0646615028381348
    3. ' can' → logprob: -2.0646615028381348
    4. '_moves' → logprob: -2.3146615028381348
    5. ' moves' → logprob: -2.6896615028381348
    6. '_can' → logprob: -2.8146615028381348
    7. ' continues' → logprob: -3.0646615028381348
    8. 'moves' → logprob: -3.1896615028381348
    9. ' is' → logprob: -4.064661502838135
    10. ' arrives' → logprob: -4.439661502838135

Token 651: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.46152058243751526
    2. '_' → logprob: -1.5865205526351929
    3. ',' → logprob: -2.9615206718444824
    4. 'at' → logprob: -3.5865206718444824
    5. '   ' → logprob: -3.5865206718444824
    6. ' to' → logprob: -3.9615206718444824
    7. '_at' → logprob: -4.836520671844482
    8. '[' → logprob: -5.336520671844482
    9. '_to' → logprob: -5.336520671844482
    10. ':' → logprob: -5.461520671844482

Token 652: ' next' (ID: 2613)
  Prédit: 'intersection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'intersection' → logprob: -1.1965502500534058
    2. ' intersection' → logprob: -1.3215502500534058
    3. ' next' → logprob: -1.8215502500534058
    4. 'next' → logprob: -2.1965503692626953
    5. 'inter' → logprob: -3.3215503692626953
    6. 'signal' → logprob: -3.9465503692626953
    7. ' signal' → logprob: -4.071550369262695
    8. ' the' → logprob: -4.321550369262695
    9. ' current' → logprob: -4.446550369262695
    10. 'prev' → logprob: -4.571550369262695

Token 653: ' intersection' (ID: 42002)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.11944925040006638
    2. '_token' → logprob: -3.1194491386413574
    3. ' _' → logprob: -3.6194491386413574
    4. ')' → logprob: -3.6194491386413574
    5. '_inter' → logprob: -5.244449138641357
    6. ''' → logprob: -5.994449138641357
    7. ' ' → logprob: -6.994449138641357
    8. '[' → logprob: -7.244449138641357
    9. '   ' → logprob: -7.244449138641357
    10. ')_' → logprob: -7.369449138641357

Token 654: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23348887264728546
    2. ':' → logprob: -1.733488917350769
    3. '   ' → logprob: -4.483489036560059
    4. ''' → logprob: -5.108489036560059
    5. '[' → logprob: -5.733489036560059
    6. '.' → logprob: -6.358489036560059
    7. ',
' → logprob: -6.483489036560059
    8. ')' → logprob: -7.108489036560059
    9. ' and' → logprob: -7.233489036560059
    10. ' ,' → logprob: -7.233489036560059

Token 655: ' it' (ID: 480)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15878218412399292
    2. ' return' → logprob: -2.4087822437286377
    3. 'return' → logprob: -4.158782005310059
    4. ')' → logprob: -4.158782005310059
    5. ':' → logprob: -5.408782005310059
    6. ' if' → logprob: -5.658782005310059
    7. 'def' → logprob: -5.908782005310059
    8. ' dir' → logprob: -6.033782005310059
    9. '#' → logprob: -6.283782005310059
    10. '    ' → logprob: -6.408782005310059

Token 656: ' '' (ID: 461)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8136481046676636
    2. ' can' → logprob: -2.063648223876953
    3. ' is' → logprob: -2.063648223876953
    4. '<|end|>' → logprob: -2.438648223876953
    5. '.' → logprob: -2.813648223876953
    6. ' cannot' → logprob: -2.813648223876953
    7. ':' → logprob: -2.813648223876953
    8. ' must' → logprob: -3.063648223876953
    9. 'cannot' → logprob: -3.563648223876953
    10. '   ' → logprob: -3.813648223876953

Token 657: 'arr' (ID: 1614)
  Prédit: 'cannot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cannot' → logprob: -1.4502865076065063
    2. ')' → logprob: -1.5752865076065063
    3. 'can' → logprob: -1.7002865076065063
    4. 'must' → logprob: -1.8252865076065063
    5. 's' → logprob: -3.200286388397217
    6. ' must' → logprob: -3.575286388397217
    7. ' can' → logprob: -3.950286388397217
    8. 'should' → logprob: -3.950286388397217
    9. '_can' → logprob: -4.075286388397217
    10. 'needs' → logprob: -4.325286388397217

Token 658: 'ives' (ID: 2264)
  Prédit: 'ives'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ives' → logprob: -0.11896072328090668
    2. 'ive' → logprob: -2.2439606189727783
    3. 'ived' → logprob: -6.618960857391357
    4. '```' → logprob: -7.118960857391357
    5. '#' → logprob: -7.243960857391357
    6. '   ' → logprob: -7.493960857391357
    7. 'ival' → logprob: -7.993960857391357
    8. 'iving' → logprob: -8.3689603805542
    9. '</' → logprob: -8.3689603805542
    10. '}' → logprob: -8.6189603805542

Token 659: ''' (ID: 6)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2620222568511963
    2. 'from' → logprob: -1.2620222568511963
    3. ' at' → logprob: -2.2620222568511963
    4. ')' → logprob: -2.2620222568511963
    5. ' from' → logprob: -2.2620222568511963
    6. ' on' → logprob: -3.3870222568511963
    7. '_from' → logprob: -3.3870222568511963
    8. 'at' → logprob: -4.512022018432617
    9. '_in' → logprob: -5.262022018432617
    10. '')' → logprob: -5.262022018432617

Token 660: ' from' (ID: 591)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3797475099563599
    2. ' on' → logprob: -1.6297475099563599
    3. ' at' → logprob: -1.7547475099563599
    4. ')' → logprob: -2.3797473907470703
    5. 'from' → logprob: -2.8797473907470703
    6. '<|end|>' → logprob: -3.2547473907470703
    7. '_token' → logprob: -3.2547473907470703
    8. '.' → logprob: -3.3797473907470703
    9. 'at' → logprob: -3.3797473907470703
    10. ' from' → logprob: -3.6297473907470703

Token 661: ' opposite' (ID: 23821)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.4313044548034668
    2. 'the' → logprob: -1.4313044548034668
    3. ' opposite' → logprob: -2.806304454803467
    4. ' the' → logprob: -3.806304454803467
    5. 'direction' → logprob: -4.681304454803467
    6. 'previous' → logprob: -4.806304454803467
    7. 'dir' → logprob: -5.556304454803467
    8. 'prev' → logprob: -5.931304454803467
    9. ' direction' → logprob: -6.806304454803467
    10. ' dir' → logprob: -7.431304454803467

Token 662: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.44976478815078735
    2. '_direction' → logprob: -2.0747647285461426
    3. ')' → logprob: -2.4497647285461426
    4. '_' → logprob: -2.6997647285461426
    5. ''' → logprob: -3.6997647285461426
    6. ' direction' → logprob: -3.9497647285461426
    7. '<|end|>' → logprob: -3.9497647285461426
    8. '_token' → logprob: -5.824764728546143
    9. '_d' → logprob: -5.824764728546143
    10. 'token' → logprob: -6.074764728546143

Token 663: ' to' (ID: 316)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5615783929824829
    2. '   ' → logprob: -1.186578392982483
    3. '[' → logprob: -3.5615782737731934
    4. '.' → logprob: -3.5615782737731934
    5. '):' → logprob: -3.9365782737731934
    6. ' and' → logprob: -4.561578273773193
    7. ')' → logprob: -4.561578273773193
    8. ',' → logprob: -4.686578273773193
    9. 'def' → logprob: -5.686578273773193
    10. ' to' → logprob: -5.686578273773193

Token 664: ' dir' (ID: 5609)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dir' → logprob: -0.001707540825009346
    2. 'next' → logprob: -7.126707553863525
    3. ' dir' → logprob: -7.251707553863525
    4. 'the' → logprob: -9.126707077026367
    5. 'moving' → logprob: -10.751707077026367
    6. 'direction' → logprob: -11.001707077026367
    7. 'move' → logprob: -11.751707077026367
    8. 'that' → logprob: -12.376707077026367
    9. 'arr' → logprob: -12.751707077026367
    10. 'signal' → logprob: -12.876707077026367

Token 665: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -5.7053759519476444e-05
    2. 'arr' → logprob: -10.125057220458984
    3. ''_' → logprob: -12.625057220458984
    4. ')_' → logprob: -13.000057220458984
    5. '_enter' → logprob: -13.125057220458984
    6. '_dir' → logprob: -13.375057220458984
    7. ')' → logprob: -13.500057220458984
    8. '"_' → logprob: -14.500057220458984
    9. '_move' → logprob: -14.625057220458984
    10. '`' → logprob: -14.750057220458984

Token 666: 'ive' (ID: 585)
  Prédit: 'ive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ive' → logprob: -2.5107177862082608e-05
    2. 'rive' → logprob: -11.625024795532227
    3. 'ieve' → logprob: -11.625024795532227
    4. '_arr' → logprob: -13.125024795532227
    5. '_' → logprob: -13.500024795532227
    6. '_dir' → logprob: -14.000024795532227
    7. 'ibe' → logprob: -14.375024795532227
    8. 'ove' → logprob: -14.750024795532227
    9. 'vive' → logprob: -15.250024795532227
    10. '_move' → logprob: -15.625024795532227

Token 667: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1567876636981964
    2. ':' → logprob: -2.156787633895874
    3. '):' → logprob: -4.531787872314453
    4. 'def' → logprob: -4.906787872314453
    5. '[' → logprob: -5.781787872314453
    6. '.' → logprob: -6.281787872314453
    7. ')' → logprob: -6.531787872314453
    8. ',' → logprob: -6.781787872314453
    9. ' and' → logprob: -7.031787872314453
    10. ':
' → logprob: -7.406787872314453

Token 668: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02670767344534397
    2. ')' → logprob: -4.026707649230957
    3. ':' → logprob: -5.401707649230957
    4. '):' → logprob: -6.651707649230957
    5. '.' → logprob: -7.151707649230957
    6. ' if' → logprob: -8.151707649230957
    7. 'def' → logprob: -8.276707649230957
    8. '<|end|>' → logprob: -8.276707649230957
    9. '[' → logprob: -8.651707649230957
    10. ' )' → logprob: -9.026707649230957

Token 669: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9930888414382935
    2. ')' → logprob: -1.1180888414382935
    3. ':' → logprob: -1.3680888414382935
    4. '<|end|>' → logprob: -3.868088722229004
    5. ' ' → logprob: -5.118088722229004
    6. ':return' → logprob: -5.493088722229004
    7. ' )' → logprob: -5.993088722229004
    8. '):' → logprob: -6.118088722229004
    9. ' :' → logprob: -6.243088722229004
    10. '[' → logprob: -6.618088722229004

Token 670: ' So' (ID: 2632)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014193831011652946
    2. ' if' → logprob: -5.014194011688232
    3. ')' → logprob: -5.514194011688232
    4. 'def' → logprob: -6.889194011688232
    5. 'if' → logprob: -7.014194011688232
    6. '#' → logprob: -8.514193534851074
    7. 'return' → logprob: -9.014193534851074
    8. ':' → logprob: -9.014193534851074
    9. '    
' → logprob: -9.264193534851074
    10. ' return' → logprob: -9.389193534851074

Token 671: ' the' (ID: 290)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.567522644996643
    2. ' dir' → logprob: -1.567522644996643
    3. ' if' → logprob: -1.817522644996643
    4. ' return' → logprob: -2.8175225257873535
    5. ' opp' → logprob: -2.8175225257873535
    6. ' opposite' → logprob: -2.9425225257873535
    7. 'return' → logprob: -3.1925225257873535
    8. 'dir' → logprob: -3.3175225257873535
    9. '#' → logprob: -3.6925225257873535
    10. 'op' → logprob: -3.9425225257873535

Token 672: ' color' (ID: 3089)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.5744097232818604
    2. ' opposite' → logprob: -2.1994097232818604
    3. 'next' → logprob: -3.1994097232818604
    4. '   ' → logprob: -3.3244097232818604
    5. 'def' → logprob: -3.3244097232818604
    6. ' if' → logprob: -3.3244097232818604
    7. 'prev' → logprob: -3.6994097232818604
    8. ' return' → logprob: -3.6994097232818604
    9. 'op' → logprob: -3.9494097232818604
    10. '#' → logprob: -4.324409484863281

Token 673: ' at' (ID: 540)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.20852530002594
    2. ')' → logprob: -1.33352530002594
    3. 's' → logprob: -1.58352530002594
    4. '_state' → logprob: -3.3335251808166504
    5. ' is' → logprob: -3.4585251808166504
    6. '[' → logprob: -3.9585251808166504
    7. ' at' → logprob: -4.20852518081665
    8. '_s' → logprob: -4.45852518081665
    9. 'state' → logprob: -4.45852518081665
    10. ' ' → logprob: -4.95852518081665

Token 674: ' the' (ID: 290)
  Prédit: ' dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dir' → logprob: -0.3615065813064575
    2. 'dir' → logprob: -1.4865065813064575
    3. 'signal' → logprob: -3.736506462097168
    4. ' signal' → logprob: -3.861506462097168
    5. ' opposite' → logprob: -5.236506462097168
    6. ')' → logprob: -5.361506462097168
    7. 'op' → logprob: -5.611506462097168
    8. 'direction' → logprob: -6.361506462097168
    9. ' direction' → logprob: -6.361506462097168
    10. ' signals' → logprob: -6.486506462097168

Token 675: ' next' (ID: 2613)
  Prédit: 'signal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'signal' → logprob: -1.2754141092300415
    2. 'intersection' → logprob: -1.4004141092300415
    3. 'dir' → logprob: -2.150413990020752
    4. 'inter' → logprob: -2.400413990020752
    5. ' intersection' → logprob: -2.775413990020752
    6. ' signal' → logprob: -3.525413990020752
    7. ')' → logprob: -3.525413990020752
    8. 'op' → logprob: -3.900413990020752
    9. 'next' → logprob: -4.025413990020752
    10. ' dir' → logprob: -4.025413990020752

Token 676: ' intersection' (ID: 42002)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.274858295917511
    2. '_inter' → logprob: -2.274858236312866
    3. ')' → logprob: -3.149858236312866
    4. '_direction' → logprob: -3.524858236312866
    5. ' _' → logprob: -4.399858474731445
    6. '[' → logprob: -4.649858474731445
    7. ' ' → logprob: -4.899858474731445
    8. '_token' → logprob: -5.024858474731445
    9. ''' → logprob: -5.149858474731445
    10. 'direction' → logprob: -5.524858474731445

Token 677: ' at' (ID: 540)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.00602126121521
    2. '[' → logprob: -1.38102126121521
    3. '<|end|>' → logprob: -2.38102126121521
    4. '   ' → logprob: -2.50602126121521
    5. ':' → logprob: -2.63102126121521
    6. ')' → logprob: -3.50602126121521
    7. ' ' → logprob: -3.88102126121521
    8. '<|end|>' → logprob: -4.006021499633789
    9. '.' → logprob: -4.631021499633789
    10. '  ' → logprob: -5.006021499633789

Token 678: ' time' (ID: 1058)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.23151980340480804
    2. ')' → logprob: -2.6065196990966797
    3. ' t' → logprob: -2.8565196990966797
    4. 'dir' → logprob: -4.23151969909668
    5. 'signal' → logprob: -4.35651969909668
    6. 'the' → logprob: -4.85651969909668
    7. 'next' → logprob: -5.23151969909668
    8. 'arrival' → logprob: -5.35651969909668
    9. ' dir' → logprob: -5.98151969909668
    10. 'direction' → logprob: -5.98151969909668

Token 679: ' t' (ID: 260)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7939313650131226
    2. ' t' → logprob: -1.6689313650131226
    3. '_' → logprob: -2.043931484222412
    4. 't' → logprob: -2.668931484222412
    5. ' +' → logprob: -3.293931484222412
    6. '_t' → logprob: -3.418931484222412
    7. ')' → logprob: -3.543931484222412
    8. ' of' → logprob: -4.668931484222412
    9. ' ' → logprob: -4.918931484222412
    10. ' _' → logprob: -5.168931484222412

Token 680: ' must' (ID: 2804)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4462966918945312
    2. ' is' → logprob: -1.6962966918945312
    3. '   ' → logprob: -2.0712966918945312
    4. ':' → logprob: -2.0712966918945312
    5. '<|end|>' → logprob: -2.5712966918945312
    6. ' if' → logprob: -3.4462966918945312
    7. '<|end|>' → logprob: -3.4462966918945312
    8. ' ' → logprob: -3.5712966918945312
    9. '[' → logprob: -3.8212966918945312
    10. ' must' → logprob: -4.446296691894531

Token 681: ' allow' (ID: 3763)
  Prédit: 'allow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'allow' → logprob: -0.6227942109107971
    2. 'not' → logprob: -1.6227941513061523
    3. ' not' → logprob: -2.3727941513061523
    4. ' allow' → logprob: -2.4977941513061523
    5. 'be' → logprob: -2.9977941513061523
    6. ' be' → logprob: -3.7477941513061523
    7. '==' → logprob: -4.872794151306152
    8. '=' → logprob: -6.622794151306152
    9. 'in' → logprob: -6.622794151306152
    10. 'return' → logprob: -7.122794151306152

Token 682: ' the' (ID: 290)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dir' → logprob: -0.030580606311559677
    2. 'op' → logprob: -3.905580520629883
    3. ' dir' → logprob: -4.905580520629883
    4. '[' → logprob: -7.155580520629883
    5. 'next' → logprob: -8.280580520629883
    6. ' opposite' → logprob: -8.280580520629883
    7. '   ' → logprob: -8.405580520629883
    8. '(dir' → logprob: -8.780580520629883
    9. '#' → logprob: -9.030580520629883
    10. 'direction' → logprob: -9.030580520629883

Token 683: ' truck' (ID: 13790)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dir' → logprob: -0.03764444589614868
    2. 'op' → logprob: -3.537644386291504
    3. 'next' → logprob: -5.537644386291504
    4. 'direction' → logprob: -6.412644386291504
    5. ' dir' → logprob: -6.787644386291504
    6. 'signal' → logprob: -7.912644386291504
    7. 'arrival' → logprob: -8.162644386291504
    8. '[' → logprob: -9.787644386291504
    9. 'truck' → logprob: -9.787644386291504
    10. '(dir' → logprob: -9.787644386291504

Token 684: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.26831093430519104
    2. 'to' → logprob: -2.143311023712158
    3. '[' → logprob: -3.768311023712158
    4. '   ' → logprob: -4.393311023712158
    5. ''s' → logprob: -4.393311023712158
    6. ' for' → logprob: -4.768311023712158
    7. ' if' → logprob: -5.018311023712158
    8. '_arr' → logprob: -5.018311023712158
    9. '_direction' → logprob: -5.268311023712158
    10. ' in' → logprob: -5.268311023712158

Token 685: ' enter' (ID: 5747)
  Prédit: 'enter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enter' → logprob: -0.1763640195131302
    2. 'go' → logprob: -2.176363945007324
    3. 'move' → logprob: -3.801363945007324
    4. 'pro' → logprob: -4.301363945007324
    5. 'pass' → logprob: -4.676363945007324
    6. 'continue' → logprob: -6.801363945007324
    7. ' enter' → logprob: -7.176363945007324
    8. 'arr' → logprob: -7.551363945007324
    9. 'come' → logprob: -8.926363945007324
    10. 'advance' → logprob: -9.176363945007324

Token 686: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9335871934890747
    2. '.' → logprob: -1.3085871934890747
    3. '<|end|>' → logprob: -1.6835871934890747
    4. ')' → logprob: -2.808587074279785
    5. '<|end|>' → logprob: -3.808587074279785
    6. ' ' → logprob: -4.933587074279785
    7. '_' → logprob: -5.058587074279785
    8. ' if' → logprob: -5.058587074279785
    9. ',' → logprob: -5.183587074279785
    10. '(' → logprob: -5.183587074279785

Token 687: ' the' (ID: 290)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.2767859101295471
    2. 'dir' → logprob: -1.7767858505249023
    3. ' opposite' → logprob: -3.2767858505249023
    4. ' dir' → logprob: -4.026785850524902
    5. 'the' → logprob: -4.276785850524902
    6. 'direction' → logprob: -6.901785850524902
    7. ' the' → logprob: -7.026785850524902
    8. '```' → logprob: -8.276785850524902
    9. ' op' → logprob: -8.526785850524902
    10. 'dire' → logprob: -9.026785850524902

Token 688: ' edge' (ID: 11165)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.021688316017389297
    2. ' opposite' → logprob: -3.896688222885132
    3. 'direction' → logprob: -7.396688461303711
    4. 'dir' → logprob: -8.396688461303711
    5. '```' → logprob: -9.396688461303711
    6. 'next' → logprob: -9.396688461303711
    7. ' direction' → logprob: -10.146688461303711
    8. '{' → logprob: -10.896688461303711
    9. '{
' → logprob: -11.521688461303711
    10. '[' → logprob: -11.521688461303711

Token 689: ' dir' (ID: 5609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6635159850120544
    2. ':' → logprob: -1.2885160446166992
    3. ')' → logprob: -2.538516044616699
    4. '.' → logprob: -3.288516044616699
    5. '):' → logprob: -3.913516044616699
    6. '<|end|>' → logprob: -4.163516044616699
    7. ' if' → logprob: -4.288516044616699
    8. '<|end|>' → logprob: -4.788516044616699
    9. '[' → logprob: -5.288516044616699
    10. ',' → logprob: -5.413516044616699

Token 690: ' opposite' (ID: 23821)
  Prédit: '_arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.09360073506832123
    2. '_' → logprob: -3.3436007499694824
    3. ')' → logprob: -3.5936007499694824
    4. 'arr' → logprob: -5.718600749969482
    5. '_e' → logprob: -5.718600749969482
    6. 'ection' → logprob: -5.843600749969482
    7. '')' → logprob: -6.343600749969482
    8. ''' → logprob: -6.593600749969482
    9. '_in' → logprob: -6.593600749969482
    10. ')_' → logprob: -6.718600749969482

Token 691: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.20917879045009613
    2. 'd' → logprob: -2.9591786861419678
    3. '(d' → logprob: -3.3341786861419678
    4. 'dir' → logprob: -3.8341786861419678
    5. '(dir' → logprob: -4.084178924560547
    6. ' to' → logprob: -4.084178924560547
    7. '   ' → logprob: -4.709178924560547
    8. 'direction' → logprob: -5.084178924560547
    9. 'op' → logprob: -5.209178924560547
    10. '_to' → logprob: -5.584178924560547

Token 692: ' dir' (ID: 5609)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dir' → logprob: -0.015103540383279324
    2. 'op' → logprob: -4.390103340148926
    3. ' dir' → logprob: -6.015103340148926
    4. ' opposite' → logprob: -9.390103340148926
    5. 'next' → logprob: -10.015103340148926
    6. 'direction' → logprob: -11.890103340148926
    7. '	dir' → logprob: -12.390103340148926
    8. '(dir' → logprob: -12.765103340148926
    9. '```' → logprob: -13.390103340148926
    10. 'opp' → logprob: -14.140103340148926

Token 693: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.020779520273208618
    2. 'osite' → logprob: -4.270779609680176
    3. 'arr' → logprob: -5.395779609680176
    4. '_dir' → logprob: -7.395779609680176
    5. 'ose' → logprob: -7.645779609680176
    6. 'dir' → logprob: -7.895779609680176
    7. 'o' → logprob: -8.520779609680176
    8. 'osit' → logprob: -9.270779609680176
    9. '(dir' → logprob: -9.770779609680176
    10. 'os' → logprob: -10.145779609680176

Token 694: 'ive' (ID: 585)
  Prédit: 'ive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ive' → logprob: -1.306760805164231e-05
    2. '_dir' → logprob: -13.12501335144043
    3. 'dir' → logprob: -13.12501335144043
    4. '[' → logprob: -14.00001335144043
    5. '['' → logprob: -14.00001335144043
    6. '('' → logprob: -14.12501335144043
    7. 'ived' → logprob: -14.12501335144043
    8. '```' → logprob: -14.12501335144043
    9. '   ' → logprob: -14.37501335144043
    10. '_direction' → logprob: -14.62501335144043

Token 695: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4880511462688446
    2. ')' → logprob: -1.613051176071167
    3. ':' → logprob: -1.863051176071167
    4. 'def' → logprob: -4.613050937652588
    5. '.' → logprob: -5.238050937652588
    6. '):' → logprob: -5.363050937652588
    7. '<|end|>' → logprob: -5.363050937652588
    8. ' if' → logprob: -6.863050937652588
    9. '[' → logprob: -7.113050937652588
    10. '{' → logprob: -7.363050937652588

Token 696: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010830636601895094
    2. ')' → logprob: -8.251083374023438
    3. ' if' → logprob: -8.376083374023438
    4. 'def' → logprob: -8.626083374023438
    5. '{' → logprob: -9.001083374023438
    6. '<|end|>' → logprob: -10.001083374023438
    7. 'if' → logprob: -10.751083374023438
    8. '#' → logprob: -10.876083374023438
    9. ':' → logprob: -11.001083374023438
    10. '    
' → logprob: -11.126083374023438

Token 697: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05855733901262283
    2. ':' → logprob: -3.0585572719573975
    3. ')' → logprob: -5.183557510375977
    4. '):' → logprob: -6.808557510375977
    5. ':return' → logprob: -7.808557510375977
    6. 'def' → logprob: -7.933557510375977
    7. ' :' → logprob: -8.058557510375977
    8. '[' → logprob: -8.308557510375977
    9. ' ' → logprob: -8.558557510375977
    10. '.' → logprob: -8.558557510375977

Token 698: ' The' (ID: 623)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.062012944370508194
    2. 'def' → logprob: -3.0620129108428955
    3. ')' → logprob: -5.937013149261475
    4. ':' → logprob: -6.687013149261475
    5. ' opposite' → logprob: -6.812013149261475
    6. 'arr' → logprob: -7.062013149261475
    7. '{' → logprob: -7.312013149261475
    8. 'arrival' → logprob: -7.312013149261475
    9. ' opp' → logprob: -7.437013149261475
    10. 'op' → logprob: -7.687013149261475

Token 699: ' problem' (ID: 4792)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.7038795351982117
    2. 'if' → logprob: -1.9538795948028564
    3. 'prev' → logprob: -2.3288795948028564
    4. ' if' → logprob: -2.9538795948028564
    5. 'arr' → logprob: -3.0788795948028564
    6. ' opposite' → logprob: -3.2038795948028564
    7. ' opp' → logprob: -3.5788795948028564
    8. '   ' → logprob: -4.078879356384277
    9. 'allowed' → logprob: -4.203879356384277
    10. '#' → logprob: -4.578879356384277

Token 700: ' says' (ID: 5003)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1664127111434937
    2. 'def' → logprob: -1.1664127111434937
    3. '   ' → logprob: -2.166412830352783
    4. '#' → logprob: -3.041412830352783
    5. ' continues' → logprob: -3.291412830352783
    6. '[' → logprob: -3.916412830352783
    7. 'allows' → logprob: -4.166412830352783
    8. 'contin' → logprob: -4.291412830352783
    9. ')' → logprob: -4.541412830352783
    10. ' is' → logprob: -4.916412830352783

Token 701: ' "' (ID: 392)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1762784868478775
    2. ' if' → logprob: -2.926278591156006
    3. ''' → logprob: -3.676278591156006
    4. ' dir' → logprob: -4.301278591156006
    5. ':' → logprob: -4.426278591156006
    6. '    ' → logprob: -4.801278591156006
    7. 'dir' → logprob: -5.176278591156006
    8. 'if' → logprob: -5.301278591156006
    9. ' return' → logprob: -5.551278591156006
    10. '  ' → logprob: -5.551278591156006

Token 702: '交' (ID: 10130)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7879624962806702
    2. ' if' → logprob: -2.1629624366760254
    3. 'if' → logprob: -2.2879624366760254
    4. 'd' → logprob: -2.7879624366760254
    5. 'dir' → logprob: -3.4129624366760254
    6. '#' → logprob: -3.5379624366760254
    7. 'op' → logprob: -3.6629624366760254
    8. ')' → logprob: -3.6629624366760254
    9. ' dir' → logprob: -3.7879624366760254
    10. ' d' → logprob: -4.162962436676025

Token 703: '差' (ID: 35142)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0742491483688354
    2. '_' → logprob: -2.324249267578125
    3. ')' → logprob: -2.574249267578125
    4. '#' → logprob: -2.824249267578125
    5. '_direction' → logprob: -2.824249267578125
    6. 'return' → logprob: -3.074249267578125
    7. 'E' → logprob: -3.449249267578125
    8. '  ' → logprob: -3.574249267578125
    9. 'direction' → logprob: -4.074249267578125
    10. '=' → logprob: -4.199249267578125

Token 704: '点' (ID: 8300)
  Prédit: '点'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '点' → logprob: -0.969743013381958
    2. '['' → logprob: -2.469743013381958
    3. '   ' → logprob: -2.969743013381958
    4. '}' → logprob: -3.219743013381958
    5. 'def' → logprob: -3.219743013381958
    6. 'え' → logprob: -3.344743013381958
    7. ')' → logprob: -3.594743013381958
    8. '_' → logprob: -3.594743013381958
    9. 'point' → logprob: -3.594743013381958
    10. '```' → logprob: -3.594743013381958

Token 705: 'の' (ID: 3385)
  Prédit: 'の'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'の' → logprob: -1.0654786825180054
    2. '_' → logprob: -1.3154786825180054
    3. ')' → logprob: -2.065478801727295
    4. 'から' → logprob: -3.315478801727295
    5. 'に' → logprob: -3.565478801727295
    6. 'が' → logprob: -3.690478801727295
    7. '[' → logprob: -3.690478801727295
    8. '.' → logprob: -3.690478801727295
    9. 'を' → logprob: -4.315478801727295
    10. 'で' → logprob: -4.690478801727295

Token 706: 'い' (ID: 3826)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.9866049289703369
    2. 'signal' → logprob: -1.111604928970337
    3. 'op' → logprob: -2.861604928970337
    4. 'arrival' → logprob: -3.236604928970337
    5. 'entry' → logprob: -3.486604928970337
    6. ')' → logprob: -3.986604928970337
    7. 'arr' → logprob: -4.111604690551758
    8. ' direction' → logprob: -4.236604690551758
    9. ' signal' → logprob: -4.236604690551758
    10. 'entr' → logprob: -4.611604690551758

Token 707: 'く' (ID: 10459)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'direction' → logprob: -2.1622371673583984
    2. '方向' → logprob: -2.2872371673583984
    3. ')' → logprob: -2.5372371673583984
    4. ']' → logprob: -2.5372371673583984
    5. 'def' → logprob: -2.6622371673583984
    6. 's' → logprob: -2.7872371673583984
    7. 'return' → logprob: -2.9122371673583984
    8. 'd' → logprob: -3.0372371673583984
    9. 't' → logprob: -3.1622371673583984
    10. 'f' → logprob: -3.1622371673583984

Token 708: 'つ' (ID: 18290)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.487467885017395
    2. '_' → logprob: -1.862467885017395
    3. ')' → logprob: -2.7374677658081055
    4. '[' → logprob: -3.1124677658081055
    5. '['' → logprob: -3.2374677658081055
    6. 'え' → logprob: -3.3624677658081055
    7. '方向' → logprob: -3.6124677658081055
    8. 'def' → logprob: -3.6124677658081055
    9. '```' → logprob: -3.6124677658081055
    10. '）' → logprob: -3.7374677658081055

Token 709: 'か' (ID: 7128)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5917931795120239
    2. '-' → logprob: -3.0917930603027344
    3. '['' → logprob: -3.0917930603027344
    4. '```' → logprob: -3.2167930603027344
    5. 'え' → logprob: -3.4667930603027344
    6. '[' → logprob: -3.7167930603027344
    7. ')' → logprob: -4.216793060302734
    8. ''' → logprob: -4.341793060302734
    9. '方向' → logprob: -4.341793060302734
    10. 'の' → logprob: -4.466793060302734

Token 710: 'には' (ID: 68857)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6742760539054871
    2. ')' → logprob: -2.049276113510132
    3. 'def' → logprob: -3.049276113510132
    4. '.' → logprob: -3.174276113510132
    5. '[' → logprob: -3.299276113510132
    6. ''' → logprob: -3.299276113510132
    7. '):' → logprob: -3.799276113510132
    8. ''s' → logprob: -4.174275875091553
    9. '_' → logprob: -4.174275875091553
    10. '=' → logprob: -4.174275875091553

Token 711: '東' (ID: 35529)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.31584373116493225
    2. ''s' → logprob: -2.3158438205718994
    3. 'def' → logprob: -3.3158438205718994
    4. ')' → logprob: -3.8158438205718994
    5. ' '' → logprob: -3.9408438205718994
    6. ':' → logprob: -4.69084358215332
    7. 'dir' → logprob: -4.81584358215332
    8. ' dir' → logprob: -4.81584358215332
    9. 'signal' → logprob: -4.94084358215332
    10. ' ' → logprob: -5.06584358215332

Token 712: '西' (ID: 13781)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8067712783813477
    2. ')' → logprob: -1.1817712783813477
    3. '']' → logprob: -2.9317712783813477
    4. ''' → logprob: -3.8067712783813477
    5. '')' → logprob: -3.8067712783813477
    6. ',' → logprob: -3.9317712783813477
    7. '方向' → logprob: -4.181771278381348
    8. '-' → logprob: -4.306771278381348
    9. 'def' → logprob: -4.806771278381348
    10. ':' → logprob: -4.806771278381348

Token 713: ' -' (ID: 533)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6628636717796326
    2. '方向' → logprob: -2.1628637313842773
    3. 'green' → logprob: -2.7878637313842773
    4. 'の' → logprob: -3.0378637313842773
    5. '_' → logprob: -3.0378637313842773
    6. ' or' → logprob: -3.7878637313842773
    7. ' green' → logprob: -4.162863731384277
    8. 'また' → logprob: -4.162863731384277
    9. '_green' → logprob: -4.162863731384277
    10. '']' → logprob: -4.412863731384277

Token 714: ' 南' (ID: 40055)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5521450638771057
    2. '')' → logprob: -2.677145004272461
    3. 'E' → logprob: -2.927145004272461
    4. ')' → logprob: -3.177145004272461
    5. '方向' → logprob: -3.177145004272461
    6. 'の' → logprob: -3.427145004272461
    7. '']' → logprob: -4.177145004272461
    8. ''-' → logprob: -4.427145004272461
    9. ''E' → logprob: -4.552145004272461
    10. ''s' → logprob: -4.677145004272461

Token 715: '北' (ID: 19020)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.039139986038208
    2. ''' → logprob: -1.289139986038208
    3. '['' → logprob: -2.539139986038208
    4. '```' → logprob: -2.914139986038208
    5. '西' → logprob: -3.164139986038208
    6. '方向' → logprob: -3.914139986038208
    7. 'E' → logprob: -4.164139747619629
    8. '東' → logprob: -4.164139747619629
    9. '_' → logprob: -4.164139747619629
    10. '   ' → logprob: -4.664139747619629

Token 716: 'の' (ID: 3385)
  Prédit: 'green'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'green' → logprob: -1.3665645122528076
    2. '_green' → logprob: -1.8665645122528076
    3. '_' → logprob: -2.1165645122528076
    4. ''' → logprob: -2.3665645122528076
    5. 'の' → logprob: -2.6165645122528076
    6. '方向' → logprob: -2.7415645122528076
    7. ''_' → logprob: -2.7415645122528076
    8. '```' → logprob: -3.1165645122528076
    9. ' green' → logprob: -3.8665645122528076
    10. '')' → logprob: -4.491564750671387

Token 717: '方向' (ID: 101892)
  Prédit: 'green'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'green' → logprob: -1.1382256746292114
    2. '信' → logprob: -1.5132256746292114
    3. '方向' → logprob: -2.138225555419922
    4. 'direction' → logprob: -2.513225555419922
    5. 'signal' → logprob: -2.763225555419922
    6. 'traffic' → logprob: -3.263225555419922
    7. '```' → logprob: -3.763225555419922
    8. 'signals' → logprob: -3.888225555419922
    9. '線' → logprob: -4.513225555419922
    10. ''' → logprob: -4.513225555419922

Token 718: 'に' (ID: 5280)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.8393099308013916
    2. '_' → logprob: -1.8393099308013916
    3. ')' → logprob: -2.2143099308013916
    4. 'が' → logprob: -2.8393099308013916
    5. 'の' → logprob: -2.8393099308013916
    6. '_allow' → logprob: -2.8393099308013916
    7. '_allowed' → logprob: -3.0893099308013916
    8. ':' → logprob: -3.2143099308013916
    9. ']' → logprob: -3.3393099308013916
    10. '_arr' → logprob: -3.7143099308013916

Token 719: '信' (ID: 5182)
  Prédit: 'green'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'green' → logprob: -1.3393526077270508
    2. ' green' → logprob: -1.9643526077270508
    3. ''' → logprob: -2.589352607727051
    4. 'in' → logprob: -2.839352607727051
    5. 'def' → logprob: -3.214352607727051
    6. 's' → logprob: -3.214352607727051
    7. 'd' → logprob: -3.589352607727051
    8. ''s' → logprob: -3.589352607727051
    9. 'direction' → logprob: -3.589352607727051
    10. ' in' → logprob: -3.839352607727051

Token 720: '号' (ID: 4785)
  Prédit: '号'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '号' → logprob: -8.895480277715251e-06
    2. '```' → logprob: -13.000008583068848
    3. '號' → logprob: -13.000008583068848
    4. '_' → logprob: -13.500008583068848
    5. '['' → logprob: -13.875008583068848
    6. '#' → logprob: -14.375008583068848
    7. '   ' → logprob: -15.000008583068848
    8. '）' → logprob: -15.625008583068848
    9. ')' → logprob: -15.750008583068848
    10. '})' → logprob: -16.375009536743164

Token 721: '機' (ID: 34453)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5512335300445557
    2. '):' → logprob: -2.3012335300445557
    3. '   ' → logprob: -3.1762335300445557
    4. ']' → logprob: -3.1762335300445557
    5. ':' → logprob: -3.3012335300445557
    6. ''' → logprob: -3.4262335300445557
    7. '_allow' → logprob: -4.176233291625977
    8. 'が' → logprob: -4.551233291625977
    9. '）' → logprob: -4.801233291625977
    10. '':' → logprob: -4.801233291625977

Token 722: 'が' (ID: 6632)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5431661009788513
    2. '):' → logprob: -1.418166160583496
    3. ':' → logprob: -2.668166160583496
    4. '   ' → logprob: -3.668166160583496
    5. ']' → logprob: -4.168166160583496
    6. ''' → logprob: -5.168166160583496
    7. 's' → logprob: -5.168166160583496
    8. ''):' → logprob: -5.168166160583496
    9. '[' → logprob: -5.293166160583496
    10. ',' → logprob: -5.543166160583496

Token 723: '設' (ID: 41701)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -1.2204757928848267
    2. 'が' → logprob: -1.5954757928848267
    3. 'not' → logprob: -2.970475673675537
    4. ')' → logprob: -2.970475673675537
    5. 'は' → logprob: -2.970475673675537
    6. 'in' → logprob: -3.095475673675537
    7. 'があります' → logprob: -3.470475673675537
    8. 's' → logprob: -3.845475673675537
    9. '）' → logprob: -4.095475673675537
    10. 'つ' → logprob: -4.220475673675537

Token 724: '置' (ID: 16385)
  Prédit: '置'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '置' → logprob: -0.040752701461315155
    2. '定' → logprob: -4.54075288772583
    3. '```' → logprob: -4.79075288772583
    4. 'け' → logprob: -4.91575288772583
    5. 'def' → logprob: -6.54075288772583
    6. '{' → logprob: -6.54075288772583
    7. '備' → logprob: -6.54075288772583
    8. '{
' → logprob: -6.91575288772583
    9. '   ' → logprob: -7.72825288772583
    10. '{"' → logprob: -7.97825288772583

Token 725: 'され' (ID: 64598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9839484691619873
    2. '}' → logprob: -0.9839484691619873
    3. '=' → logprob: -2.8589484691619873
    4. '):' → logprob: -3.2339484691619873
    5. '   ' → logprob: -3.6089484691619873
    6. '#' → logprob: -3.8589484691619873
    7. ']' → logprob: -3.9839484691619873
    8. 's' → logprob: -4.233948707580566
    9. ':' → logprob: -4.358948707580566
    10. '[' → logprob: -4.608948707580566

Token 726: '"，' (ID: 196348)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7302652597427368
    2. '}' → logprob: -1.7302652597427368
    3. ''})' → logprob: -2.1052651405334473
    4. ''' → logprob: -2.2302651405334473
    5. ''}' → logprob: -3.1052651405334473
    6. '})' → logprob: -3.2302651405334473
    7. '#' → logprob: -3.3552651405334473
    8. '')' → logprob: -3.6052651405334473
    9. '=' → logprob: -3.9802651405334473
    10. 'され' → logprob: -3.9802651405334473

Token 727: '"' (ID: 1)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1381165236234665
    2. ')' → logprob: -3.5131165981292725
    3. ' if' → logprob: -4.013116359710693
    4. 'return' → logprob: -4.013116359710693
    5. '#' → logprob: -4.388116359710693
    6. '<|end|>' → logprob: -4.513116359710693
    7. ' return' → logprob: -5.013116359710693
    8. 'dir' → logprob: -5.763116359710693
    9. 'if' → logprob: -5.763116359710693
    10. 'signal' → logprob: -6.388116359710693

Token 728: '東' (ID: 35529)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9205756783485413
    2. '<|end|>' → logprob: -1.5455756187438965
    3. '   ' → logprob: -1.6705756187438965
    4. 'def' → logprob: -3.4205756187438965
    5. ' dir' → logprob: -3.7955756187438965
    6. ' signal' → logprob: -4.5455756187438965
    7. 'dir' → logprob: -4.5455756187438965
    8. ' ' → logprob: -4.6705756187438965
    9. ' True' → logprob: -4.7955756187438965
    10. '  ' → logprob: -4.7955756187438965

Token 729: '西' (ID: 13781)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.4920017719268799
    2. ')' → logprob: -2.24200177192688
    3. '   ' → logprob: -2.61700177192688
    4. '-' → logprob: -2.74200177192688
    5. '_' → logprob: -2.99200177192688
    6. '西' → logprob: -4.367001533508301
    7. '['' → logprob: -4.492001533508301
    8. ' ' → logprob: -4.742001533508301
    9. '')' → logprob: -5.242001533508301
    10. 'E' → logprob: -5.742001533508301

Token 730: 'が' (ID: 6632)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3536091148853302
    2. ' green' → logprob: -2.353609085083008
    3. ' in' → logprob: -3.228609085083008
    4. 'green' → logprob: -3.603609085083008
    5. 'in' → logprob: -4.103609085083008
    6. ' or' → logprob: -4.103609085083008
    7. ' and' → logprob: -4.728609085083008
    8. ')' → logprob: -4.728609085083008
    9. '方向' → logprob: -4.978609085083008
    10. 'の' → logprob: -4.978609085083008

Token 731: '青' (ID: 11970)
  Prédit: 'green'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'green' → logprob: -0.7686592936515808
    2. ' green' → logprob: -1.1436593532562256
    3. ' not' → logprob: -3.0186593532562256
    4. 'not' → logprob: -3.6436593532562256
    5. ''' → logprob: -3.7686593532562256
    6. '設' → logprob: -3.8936593532562256
    7. 'None' → logprob: -4.2686591148376465
    8. 'installed' → logprob: -4.3936591148376465
    9. ' None' → logprob: -4.6436591148376465
    10. 'E' → logprob: -4.7686591148376465

Token 732: 'なら' (ID: 100875)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3499589264392853
    2. '"' → logprob: -2.099958896636963
    3. '':' → logprob: -3.599958896636963
    4. ')' → logprob: -4.099958896636963
    5. ' and' → logprob: -4.099958896636963
    6. '')' → logprob: -4.349958896636963
    7. ':' → logprob: -4.599958896636963
    8. ' if' → logprob: -4.974958896636963
    9. ' or' → logprob: -4.974958896636963
    10. '   ' → logprob: -5.099958896636963

Token 733: 'ば' (ID: 25540)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.5859153270721436
    2. ' True' → logprob: -1.0859153270721436
    3. 'dir' → logprob: -4.335915565490723
    4. 's' → logprob: -4.460915565490723
    5. '   ' → logprob: -4.585915565490723
    6. ''' → logprob: -4.585915565490723
    7. '#' → logprob: -5.210915565490723
    8. 'direction' → logprob: -5.210915565490723
    9. ' dir' → logprob: -5.335915565490723
    10. 'def' → logprob: -5.460915565490723

Token 734: '南' (ID: 14609)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.719157338142395
    2. 'True' → logprob: -1.094157338142395
    3. 'dir' → logprob: -3.5941572189331055
    4. '   ' → logprob: -3.7191572189331055
    5. 'def' → logprob: -3.8441572189331055
    6. ''' → logprob: -4.3441572189331055
    7. 'direction' → logprob: -4.5941572189331055
    8. ' dir' → logprob: -4.7191572189331055
    9. ' direction' → logprob: -4.9691572189331055
    10. 's' → logprob: -5.2191572189331055

Token 735: '北' (ID: 19020)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9150766134262085
    2. 'and' → logprob: -1.9150766134262085
    3. '#' → logprob: -2.040076732635498
    4. '
' → logprob: -2.790076732635498
    5. ' or' → logprob: -2.790076732635498
    6. 'if' → logprob: -3.040076732635498
    7. ' and' → logprob: -3.040076732635498
    8. 'or' → logprob: -3.165076732635498
    9. '<|end|>' → logprob: -3.290076732635498
    10. '   ' → logprob: -3.540076732635498

Token 736: 'が' (ID: 6632)
  Prédit: 'green'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'green' → logprob: -1.5840554237365723
    2. 'が' → logprob: -1.8340554237365723
    3. ' green' → logprob: -2.0840554237365723
    4. '_green' → logprob: -2.7090554237365723
    5. '方向' → logprob: -2.7090554237365723
    6. 'の' → logprob: -2.8340554237365723
    7. ' or' → logprob: -3.3340554237365723
    8. '_' → logprob: -3.3340554237365723
    9. 'も' → logprob: -3.5840554237365723
    10. 'また' → logprob: -3.8340554237365723

Token 737: '赤' (ID: 74280)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -1.104024052619934
    2. '赤' → logprob: -1.104024052619934
    3. 'True' → logprob: -1.854024052619934
    4. 'False' → logprob: -1.979024052619934
    5. ' red' → logprob: -4.6040239334106445
    6. 'green' → logprob: -4.7290239334106445
    7. '```' → logprob: -5.1040239334106445
    8. '青' → logprob: -5.4790239334106445
    9. ''' → logprob: -5.8540239334106445
    10. ' True' → logprob: -6.3540239334106445

Token 738: 'で' (ID: 4344)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.44675517082214355
    2. ''' → logprob: -2.3217551708221436
    3. '   ' → logprob: -2.5717551708221436
    4. '"' → logprob: -3.0717551708221436
    5. ' and' → logprob: -3.0717551708221436
    6. '}' → logprob: -4.446755409240723
    7. '):' → logprob: -4.821755409240723
    8. '')' → logprob: -4.946755409240723
    9. '.' → logprob: -5.196755409240723
    10. ' at' → logprob: -5.321755409240723

Token 739: '"
' (ID: 1092)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.9505297541618347
    2. ')' → logprob: -1.8255298137664795
    3. '')' → logprob: -1.9505298137664795
    4. '   ' → logprob: -2.2005298137664795
    5. ' return' → logprob: -2.5755298137664795
    6. ''' → logprob: -2.7005298137664795
    7. ' ' → logprob: -4.9505295753479
    8. '[' → logprob: -5.2005295753479
    9. 'True' → logprob: -5.5755295753479
    10. '#' → logprob: -5.7005295753479

Token 740: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.48058581352233887
    2. '   ' → logprob: -1.2305858135223389
    3. '<|end|>' → logprob: -2.855585813522339
    4. '  ' → logprob: -5.230586051940918
    5. '[' → logprob: -5.730586051940918
    6. ''' → logprob: -5.855586051940918
    7. '')' → logprob: -5.855586051940918
    8. '<|end|>' → logprob: -6.105586051940918
    9. 'def' → logprob: -6.855586051940918
    10. '(E' → logprob: -6.855586051940918

Token 741: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7377961874008179
    2. '   ' → logprob: -0.7377961874008179
    3. '):' → logprob: -4.362796306610107
    4. '<|end|>' → logprob: -4.862796306610107
    5. ':' → logprob: -5.237796306610107
    6. '}' → logprob: -5.487796306610107
    7. '')' → logprob: -6.237796306610107
    8. '.' → logprob: -6.612796306610107
    9. ',' → logprob: -6.737796306610107
    10. 'def' → logprob: -6.862796306610107

Token 742: ' Let's' (ID: 41021)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22666716575622559
    2. ' if' → logprob: -1.9766671657562256
    3. ')' → logprob: -4.476667404174805
    4. 'direction' → logprob: -4.601667404174805
    5. ' direction' → logprob: -4.726667404174805
    6. 'if' → logprob: -4.851667404174805
    7. ' return' → logprob: -6.101667404174805
    8. ' directions' → logprob: -6.226667404174805
    9. '#' → logprob: -6.351667404174805
    10. 'def' → logprob: -6.351667404174805

Token 743: ' thus' (ID: 13972)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34220606088638306
    2. 'def' → logprob: -1.4672060012817383
    3. '#' → logprob: -4.092206001281738
    4. 'if' → logprob: -4.467206001281738
    5. 'direction' → logprob: -5.217206001281738
    6. ' if' → logprob: -5.592206001281738
    7. 'next' → logprob: -5.717206001281738
    8. 'dir' → logprob: -6.217206001281738
    9. ')' → logprob: -6.467206001281738
    10. '  ' → logprob: -6.467206001281738

Token 744: ' consider' (ID: 3331)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0842957496643066
    2. 'return' → logprob: -1.3342957496643066
    3. 'continue' → logprob: -1.9592957496643066
    4. 'def' → logprob: -2.4592957496643066
    5. '   ' → logprob: -3.2092957496643066
    6. '#' → logprob: -3.2092957496643066
    7. ' if' → logprob: -3.4592957496643066
    8. 'check' → logprob: -3.7092957496643066
    9. 'allow' → logprob: -4.584295749664307
    10. ' return' → logprob: -5.834295749664307

Token 745: ' the' (ID: 290)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38885414600372314
    2. '<|end|>' → logprob: -2.1388540267944336
    3. 'def' → logprob: -2.7638540267944336
    4. 'False' → logprob: -3.8888540267944336
    5. 'signal' → logprob: -4.388854026794434
    6. 'if' → logprob: -4.513854026794434
    7. 'dir' → logprob: -4.638854026794434
    8. '{
' → logprob: -4.638854026794434
    9. 'True' → logprob: -4.763854026794434
    10. 'direction' → logprob: -4.888854026794434

Token 746: ' direction' (ID: 9262)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.8460053205490112
    2. '[' → logprob: -2.096005439758301
    3. ':' → logprob: -2.971005439758301
    4. ''' → logprob: -2.971005439758301
    5. ' if' → logprob: -2.971005439758301
    6. 'if' → logprob: -3.096005439758301
    7. 'dir' → logprob: -3.096005439758301
    8. ')' → logprob: -3.221005439758301
    9. 's' → logprob: -3.221005439758301
    10. '   ' → logprob: -3.221005439758301

Token 747: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9206812977790833
    2. ':' → logprob: -1.1706812381744385
    3. '_arr' → logprob: -2.4206812381744385
    4. '_' → logprob: -3.4206812381744385
    5. '):' → logprob: -3.4206812381744385
    6. 'def' → logprob: -3.6706812381744385
    7. ' =' → logprob: -3.7956812381744385
    8. '[' → logprob: -4.170681476593018
    9. ')' → logprob: -4.545681476593018
    10. ',' → logprob: -5.045681476593018

Token 748: ' which' (ID: 1118)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.9064368009567261
    2. 'which' → logprob: -2.0314369201660156
    3. 'the' → logprob: -2.2814369201660156
    4. 'dir' → logprob: -2.4064369201660156
    5. 'next' → logprob: -3.0314369201660156
    6. ' which' → logprob: -3.2814369201660156
    7. 'prev' → logprob: -3.7814369201660156
    8. 'intersection' → logprob: -3.7814369201660156
    9. 'direction' → logprob: -4.031436920166016
    10. 'inter' → logprob: -4.031436920166016

Token 749: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.8969880938529968
    2. 'dir' → logprob: -1.3969881534576416
    3. ' the' → logprob: -1.8969881534576416
    4. ' dir' → logprob: -2.2719881534576416
    5. 'truck' → logprob: -4.2719879150390625
    6. 'next' → logprob: -4.2719879150390625
    7. 'arr' → logprob: -4.5219879150390625
    8. ' truck' → logprob: -5.1469879150390625
    9. ' next' → logprob: -5.2719879150390625
    10. 'return' → logprob: -5.2719879150390625

Token 750: ' truck' (ID: 13790)
  Prédit: ' truck'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' truck' → logprob: -1.6650378704071045
    2. 'op' → logprob: -2.0400378704071045
    3. ' next' → logprob: -2.0400378704071045
    4. 'truck' → logprob: -2.2900378704071045
    5. ' opposite' → logprob: -3.0400378704071045
    6. 'next' → logprob: -3.1650378704071045
    7. 'prev' → logprob: -3.4150378704071045
    8. 'return' → logprob: -3.6650378704071045
    9. 'signal' → logprob: -3.6650378704071045
    10. 'intersection' → logprob: -3.6650378704071045

Token 751: ' arrives' (ID: 39650)
  Prédit: '_arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.11699800193309784
    2. '_' → logprob: -3.7419979572296143
    3. 'arr' → logprob: -4.116998195648193
    4. ')' → logprob: -4.116998195648193
    5. '_can' → logprob: -4.491998195648193
    6. '[' → logprob: -4.741998195648193
    7. ' arrives' → logprob: -4.741998195648193
    8. '   ' → logprob: -5.366998195648193
    9. '_moves' → logprob: -5.866998195648193
    10. '.' → logprob: -6.366998195648193

Token 752: ' at' (ID: 540)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7098016738891602
    2. '   ' → logprob: -0.8348016738891602
    3. ')' → logprob: -3.20980167388916
    4. '):' → logprob: -5.20980167388916
    5. '[' → logprob: -5.45980167388916
    6. '<|end|>' → logprob: -5.45980167388916
    7. ' ' → logprob: -5.83480167388916
    8. ' :' → logprob: -5.83480167388916
    9. '<|end|>' → logprob: -6.20980167388916
    10. ',' → logprob: -6.20980167388916

Token 753: ' intersection' (ID: 42002)
  Prédit: 'intersection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'intersection' → logprob: -0.22726985812187195
    2. ' intersection' → logprob: -2.7272698879241943
    3. 'next' → logprob: -3.1022698879241943
    4. 'signal' → logprob: -3.3522698879241943
    5. 'inter' → logprob: -3.8522698879241943
    6. 'dir' → logprob: -4.602269649505615
    7. ' next' → logprob: -4.977269649505615
    8. ')' → logprob: -5.102269649505615
    9. 'the' → logprob: -5.477269649505615
    10. 'direction' → logprob: -6.102269649505615

Token 754: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2749249339103699
    2. ':' → logprob: -2.0249249935150146
    3. 'def' → logprob: -2.6499249935150146
    4. '):' → logprob: -4.1499247550964355
    5. ')' → logprob: -4.8999247550964355
    6. ',' → logprob: -6.2749247550964355
    7. ' if' → logprob: -6.3999247550964355
    8. '):
' → logprob: -6.8999247550964355
    9. ' :' → logprob: -6.8999247550964355
    10. ' def' → logprob: -6.8999247550964355

Token 755: ' opp' (ID: 6323)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 756: '_dir' (ID: 9526)
  Prédit: 'osite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'osite' → logprob: -0.009039601311087608
    2. '_dir' → logprob: -4.884039402008057
    3. 'dir' → logprob: -7.009039402008057
    4. '_direction' → logprob: -8.884039878845215
    5. ' =' → logprob: -9.134039878845215
    6. 'o' → logprob: -9.259039878845215
    7. 'os' → logprob: -9.634039878845215
    8. '=' → logprob: -10.259039878845215
    9. 'osit' → logprob: -10.759039878845215
    10. 'posite' → logprob: -11.134039878845215

Token 757: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5656753182411194
    2. '   ' → logprob: -1.0656752586364746
    3. ':' → logprob: -3.3156752586364746
    4. '=' → logprob: -3.4406752586364746
    5. '_' → logprob: -4.565675258636475
    6. 'def' → logprob: -5.690675258636475
    7. ')' → logprob: -7.315675258636475
    8. '(d' → logprob: -7.565675258636475
    9. ',' → logprob: -7.940675258636475
    10. '.' → logprob: -7.940675258636475

Token 758: ' opposite' (ID: 23821)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.008616935461759567
    2. ' opposite' → logprob: -4.758616924285889
    3. '   ' → logprob: -13.508617401123047
    4. '```' → logprob: -15.008617401123047
    5. ' ' → logprob: -15.883617401123047
    6. 'opp' → logprob: -16.133617401123047
    7. '(op' → logprob: -16.633617401123047
    8. '  ' → logprob: -16.758617401123047
    9. '`' → logprob: -16.758617401123047
    10. '	op' → logprob: -17.008617401123047

Token 759: ' of' (ID: 328)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dir' → logprob: -0.884782612323761
    2. '(dir' → logprob: -0.884782612323761
    3. '_dir' → logprob: -3.009782552719116
    4. '=' → logprob: -3.509782552719116
    5. '[' → logprob: -3.759782552719116
    6. '(' → logprob: -3.884782552719116
    7. ' =' → logprob: -4.134782791137695
    8. '(d' → logprob: -4.134782791137695
    9. 'd' → logprob: -5.134782791137695
    10. 'direction' → logprob: -5.759782791137695

Token 760: ' dir' (ID: 5609)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dir' → logprob: -0.0015240294160321355
    2. ' dir' → logprob: -6.501523971557617
    3. '(dir' → logprob: -10.751523971557617
    4. '	dir' → logprob: -16.126523971557617
    5. 'direction' → logprob: -17.126523971557617
    6. '(' → logprob: -17.501523971557617
    7. 'd' → logprob: -17.501523971557617
    8. '[' → logprob: -17.626523971557617
    9. 'Dir' → logprob: -18.126523971557617
    10. '_dir' → logprob: -18.126523971557617

Token 761: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.011299972422420979
    2. '   ' → logprob: -5.136300086975098
    3. ')' → logprob: -6.011300086975098
    4. 'arr' → logprob: -6.886300086975098
    5. '_op' → logprob: -8.136300086975098
    6. '_return' → logprob: -8.261300086975098
    7. 'return' → logprob: -8.261300086975098
    8. '_' → logprob: -8.511300086975098
    9. ')_' → logprob: -8.511300086975098
    10. '(arr' → logprob: -9.886300086975098

Token 762: 'ive' (ID: 585)
  Prédit: 'ive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ive' → logprob: -5.9153885558771435e-06
    2. 'i' → logprob: -13.750005722045898
    3. 'ieve' → logprob: -14.500005722045898
    4. 'e' → logprob: -14.750005722045898
    5. '   ' → logprob: -14.750005722045898
    6. 've' → logprob: -14.750005722045898
    7. '```' → logprob: -14.750005722045898
    8. '_' → logprob: -15.000005722045898
    9. 'iv' → logprob: -15.250005722045898
    10. 'ibe' → logprob: -15.375005722045898

Token 763: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014092515222728252
    2. '<|end|>' → logprob: -5.389092445373535
    3. ')' → logprob: -5.889092445373535
    4. '<|end|>' → logprob: -6.014092445373535
    5. 'def' → logprob: -6.389092445373535
    6. ' opposite' → logprob: -7.639092445373535
    7. '
' → logprob: -7.764092445373535
    8. ':' → logprob: -8.139092445373535
    9. ' ' → logprob: -8.514092445373535
    10. ',' → logprob: -8.514092445373535

Token 764: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03400123119354248
    2. ')' → logprob: -3.534001350402832
    3. '<|end|>' → logprob: -6.034001350402832
    4. 'def' → logprob: -6.659001350402832
    5. ',' → logprob: -9.284001350402832
    6. '<|end|>' → logprob: -9.409001350402832
    7. '),' → logprob: -10.284001350402832
    8. '  ' → logprob: -10.534001350402832
    9. '```' → logprob: -10.534001350402832
    10. ')
' → logprob: -10.659001350402832

Token 765: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002224125899374485
    2. ' opp' → logprob: -7.252223968505859
    3. ' if' → logprob: -7.877223968505859
    4. ')' → logprob: -8.50222396850586
    5. ' opposite' → logprob: -8.62722396850586
    6. 'def' → logprob: -9.00222396850586
    7. '```' → logprob: -9.25222396850586
    8. ',' → logprob: -9.62722396850586
    9. '    
' → logprob: -9.87722396850586
    10. '
' → logprob: -10.00222396850586

Token 766: ' If' (ID: 1843)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0039059959817677736
    2. 'def' → logprob: -6.878905773162842
    3. ' opp' → logprob: -7.003905773162842
    4. ' arrival' → logprob: -7.753905773162842
    5. 'arrival' → logprob: -8.12890625
    6. ' if' → logprob: -8.25390625
    7. '```' → logprob: -8.87890625
    8. ')' → logprob: -9.50390625
    9. '#' → logprob: -9.62890625
    10. '
' → logprob: -9.75390625

Token 767: ' opp' (ID: 6323)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.33218759298324585
    2. 'opp' → logprob: -2.2071876525878906
    3. ' opp' → logprob: -2.9571876525878906
    4. 'not' → logprob: -3.2071876525878906
    5. 'dir' → logprob: -3.5821876525878906
    6. ' opposite' → logprob: -3.9571876525878906
    7. 'signal' → logprob: -4.457187652587891
    8. 'signals' → logprob: -4.707187652587891
    9. ' not' → logprob: -5.207187652587891
    10. ' dir' → logprob: -5.582187652587891

Token 768: '_dir' (ID: 9526)
  Prédit: 'osite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'osite' → logprob: -0.4744568467140198
    2. '_dir' → logprob: -0.9744568467140198
    3. '_direction' → logprob: -8.224456787109375
    4. 'posite' → logprob: -10.099456787109375
    5. 'site' → logprob: -10.474456787109375
    6. '_pos' → logprob: -11.474456787109375
    7. 'os' → logprob: -11.599456787109375
    8. 'isite' → logprob: -11.724456787109375
    9. 'o' → logprob: -12.724456787109375
    10. 'dir' → logprob: -12.849456787109375

Token 769: ' in' (ID: 306)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6985253095626831
    2. '=' → logprob: -1.073525309562683
    3. ' ==' → logprob: -2.6985254287719727
    4. ' not' → logprob: -3.4485254287719727
    5. ' is' → logprob: -3.8235254287719727
    6. '==' → logprob: -4.323525428771973
    7. ' in' → logprob: -4.698525428771973
    8. 'not' → logprob: -5.198525428771973
    9. '   ' → logprob: -5.448525428771973
    10. ')' → logprob: -5.698525428771973

Token 770: ' E' (ID: 457)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '['' → logprob: -0.030677147209644318
    2. '{'' → logprob: -4.405677318572998
    3. '('' → logprob: -4.780677318572998
    4. ''' → logprob: -5.405677318572998
    5. ''N' → logprob: -6.030677318572998
    6. ' ['' → logprob: -6.280677318572998
    7. ''E' → logprob: -7.780677318572998
    8. '(['' → logprob: -9.40567684173584
    9. '["' → logprob: -9.53067684173584
    10. '   ' → logprob: -9.90567684173584

Token 771: ' or' (ID: 503)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.23346027731895447
    2. ''' → logprob: -2.2334601879119873
    3. '['' → logprob: -2.7334601879119873
    4. ' or' → logprob: -3.8584601879119873
    5. '{'' → logprob: -4.858460426330566
    6. 'or' → logprob: -6.233460426330566
    7. ''or' → logprob: -6.733460426330566
    8. '('' → logprob: -6.858460426330566
    9. ' '' → logprob: -7.733460426330566
    10. ' {'' → logprob: -8.358460426330566

Token 772: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0018379644025117159
    2. ' W' → logprob: -6.376837730407715
    3. '['' → logprob: -10.626837730407715
    4. ''' → logprob: -10.626837730407715
    5. ' ' → logprob: -10.876837730407715
    6. '   ' → logprob: -11.126837730407715
    7. '```' → logprob: -12.189337730407715
    8. '{'' → logprob: -12.251837730407715
    9. '[' → logprob: -12.439337730407715
    10. '<W' → logprob: -12.751837730407715

Token 773: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3080468773841858
    2. ' and' → logprob: -1.433046817779541
    3. 'and' → logprob: -4.433046817779541
    4. '   ' → logprob: -5.308046817779541
    5. ',' → logprob: -5.683046817779541
    6. ':
' → logprob: -5.683046817779541
    7. ' or' → logprob: -7.183046817779541
    8. ':return' → logprob: -7.308046817779541
    9. '):' → logprob: -7.683046817779541
    10. ' :' → logprob: -8.6830472946167

Token 774: ' then' (ID: 1815)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9296138882637024
    2. ' if' → logprob: -1.3046138286590576
    3. ' return' → logprob: -2.0546138286590576
    4. 'return' → logprob: -2.1796138286590576
    5. 'if' → logprob: -2.5546138286590576
    6. 'ew' → logprob: -4.929614067077637
    7. ' ew' → logprob: -6.929614067077637
    8. ' green' → logprob: -7.179614067077637
    9. 'direction' → logprob: -7.429614067077637
    10. ' signal' → logprob: -7.429614067077637

Token 775: ' the' (ID: 290)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.016667410731315613
    2. '   ' → logprob: -4.766667366027832
    3. 'signal' → logprob: -5.766667366027832
    4. ' return' → logprob: -6.266667366027832
    5. 'signals' → logprob: -6.641667366027832
    6. 'if' → logprob: -7.516667366027832
    7. 'state' → logprob: -7.766667366027832
    8. 'ew' → logprob: -8.141667366027832
    9. 'result' → logprob: -9.891667366027832
    10. ' ' → logprob: -10.016667366027832

Token 776: ' signal' (ID: 12884)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.9495015740394592
    2. '   ' → logprob: -2.0745015144348145
    3. 'signal' → logprob: -2.1995015144348145
    4. 'state' → logprob: -2.4495015144348145
    5. 'def' → logprob: -2.4495015144348145
    6. 'if' → logprob: -2.5745015144348145
    7. 'ew' → logprob: -2.6995015144348145
    8. 'signals' → logprob: -4.3245015144348145
    9. ' return' → logprob: -4.8245015144348145
    10. 'is' → logprob: -4.9495015144348145

Token 777: ' at' (ID: 540)
  Prédit: '_state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.41462442278862
    2. 'state' → logprob: -2.0396244525909424
    3. '_all' → logprob: -3.0396244525909424
    4. 'is' → logprob: -3.4146244525909424
    5. 'allows' → logprob: -3.4146244525909424
    6. '==' → logprob: -4.414624214172363
    7. '_color' → logprob: -4.539624214172363
    8. '_status' → logprob: -4.914624214172363
    9. 'all' → logprob: -5.039624214172363
    10. '   ' → logprob: -5.039624214172363

Token 778: ' intersection' (ID: 42002)
  Prédit: 'intersection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'intersection' → logprob: -0.008148320019245148
    2. ' intersection' → logprob: -4.883148193359375
    3. 'signal' → logprob: -7.883148193359375
    4. 'signals' → logprob: -9.758148193359375
    5. 'direction' → logprob: -10.758148193359375
    6. 'inter' → logprob: -11.133148193359375
    7. '```' → logprob: -11.133148193359375
    8. ')' → logprob: -11.383148193359375
    9. '   ' → logprob: -11.883148193359375
    10. ' signal' → logprob: -12.008148193359375

Token 779: ' must' (ID: 2804)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7909115552902222
    2. '   ' → logprob: -1.7909115552902222
    3. ' is' → logprob: -2.0409116744995117
    4. 'in' → logprob: -2.7909116744995117
    5. '[' → logprob: -3.6659116744995117
    6. ' must' → logprob: -4.040911674499512
    7. ')' → logprob: -4.040911674499512
    8. ' ' → logprob: -4.415911674499512
    9. '==' → logprob: -4.540911674499512
    10. ' ==' → logprob: -4.790911674499512

Token 780: ' be' (ID: 413)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.0608799457550049
    2. 'allow' → logprob: -1.0608799457550049
    3. 'be' → logprob: -1.8108799457550049
    4. ' be' → logprob: -2.560879945755005
    5. 'in' → logprob: -3.685879945755005
    6. ' allow' → logprob: -4.685879707336426
    7. ' return' → logprob: -5.310879707336426
    8. 'dir' → logprob: -5.435879707336426
    9. 'have' → logprob: -5.810879707336426
    10. '   ' → logprob: -5.935879707336426

Token 781: ' EW' (ID: 143307)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.023999478667974472
    2. 'signal' → logprob: -4.3989996910095215
    3. ' True' → logprob: -4.5239996910095215
    4. 'signals' → logprob: -7.6489996910095215
    5. ' signal' → logprob: -9.898999214172363
    6. 'true' → logprob: -11.148999214172363
    7. 'False' → logprob: -11.523999214172363
    8. '(True' → logprob: -11.898999214172363
    9. ' signals' → logprob: -12.148999214172363
    10. '   ' → logprob: -12.523999214172363

Token 782: ' green' (ID: 8851)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6179940700531006
    2. ':' → logprob: -1.7429940700531006
    3. ')' → logprob: -2.2429940700531006
    4. ' and' → logprob: -2.6179940700531006
    5. 'def' → logprob: -3.3679940700531006
    6. '.' → logprob: -3.7429940700531006
    7. '):' → logprob: -3.8679940700531006
    8. 'and' → logprob: -4.99299430847168
    9. '<|end|>' → logprob: -5.24299430847168
    10. ',' → logprob: -5.74299430847168

Token 783: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.743963897228241
    2. ':' → logprob: -1.1189639568328857
    3. ')' → logprob: -2.2439639568328857
    4. '):' → logprob: -3.4939639568328857
    5. ' and' → logprob: -3.8689639568328857
    6. 'def' → logprob: -3.8689639568328857
    7. '.' → logprob: -5.368963718414307
    8. '<|end|>' → logprob: -5.743963718414307
    9. ',' → logprob: -6.118963718414307
    10. '}' → logprob: -6.618963718414307

Token 784: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00048524985322728753
    2. 'def' → logprob: -8.50048542022705
    3. '<|end|>' → logprob: -9.00048542022705
    4. ')' → logprob: -9.62548542022705
    5. ' if' → logprob: -10.25048542022705
    6. '    
' → logprob: -11.50048542022705
    7. ',' → logprob: -11.87548542022705
    8. 'if' → logprob: -12.25048542022705
    9. '.' → logprob: -12.25048542022705
    10. '<|end|>' → logprob: -12.37548542022705

Token 785: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017809720011427999
    2. ' if' → logprob: -6.376780986785889
    3. ',' → logprob: -11.00178050994873
    4. ')' → logprob: -11.62678050994873
    5. '    
' → logprob: -12.12678050994873
    6. 'if' → logprob: -12.12678050994873
    7. ' and' → logprob: -12.37678050994873
    8. '```' → logprob: -12.37678050994873
    9. '       ' → logprob: -12.50178050994873
    10. '.' → logprob: -12.75178050994873

Token 786: ' If' (ID: 1843)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.24052660167217255
    2. '   ' → logprob: -2.2405266761779785
    3. 'if' → logprob: -2.2405266761779785
    4. ' opp' → logprob: -7.7405266761779785
    5. 'ew' → logprob: -8.74052619934082
    6. 'allowed' → logprob: -9.61552619934082
    7. ' signal' → logprob: -9.86552619934082
    8. 'signal' → logprob: -10.24052619934082
    9. 'arr' → logprob: -10.61552619934082
    10. ' ew' → logprob: -10.86552619934082

Token 787: ' opp' (ID: 6323)
  Prédit: ' opp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' opp' → logprob: -0.050782036036252975
    2. 'opp' → logprob: -3.0507819652557373
    3. '   ' → logprob: -7.925782203674316
    4. 'v' → logprob: -8.050782203674316
    5. 'dir' → logprob: -8.175782203674316
    6. 'op' → logprob: -8.425782203674316
    7. ' ' → logprob: -8.675782203674316
    8. '  ' → logprob: -9.050782203674316
    9. ' dir' → logprob: -9.175782203674316
    10. ' opposite' → logprob: -9.425782203674316

Token 788: '_dir' (ID: 9526)
  Prédit: '_dir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dir' → logprob: -0.1763511300086975
    2. 'osite' → logprob: -2.3013510704040527
    3. 'posite' → logprob: -2.8013510704040527
    4. '_direction' → logprob: -8.426351547241211
    5. 'o' → logprob: -8.676351547241211
    6. '_pos' → logprob: -8.801351547241211
    7. 'os' → logprob: -10.176351547241211
    8. '   ' → logprob: -10.301351547241211
    9. '_' → logprob: -10.426351547241211
    10. ''' → logprob: -10.926351547241211

Token 789: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00775296101346612
    2. 'in' → logprob: -4.882752895355225
    3. ' not' → logprob: -10.007753372192383
    4. ' ==' → logprob: -10.632753372192383
    5. ' is' → logprob: -11.382753372192383
    6. ')' → logprob: -11.507753372192383
    7. ' ' → logprob: -11.632753372192383
    8. 'not' → logprob: -12.007753372192383
    9. '==' → logprob: -12.132753372192383
    10. '_in' → logprob: -12.507753372192383

Token 790: ' N' (ID: 478)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '['' → logprob: -0.2314102053642273
    2. '{'' → logprob: -2.106410264968872
    3. 'N' → logprob: -2.981410264968872
    4. '('' → logprob: -4.106410026550293
    5. ''N' → logprob: -4.106410026550293
    6. '[N' → logprob: -7.356410026550293
    7. ' ['' → logprob: -8.731410026550293
    8. ''' → logprob: -9.106410026550293
    9. '{' → logprob: -9.481410026550293
    10. '`' → logprob: -9.981410026550293

Token 791: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.23143818974494934
    2. 'or' → logprob: -1.606438159942627
    3. ''or' → logprob: -5.481438159942627
    4. '   ' → logprob: -7.606438159942627
    5. ''' → logprob: -7.856438159942627
    6. ' ' → logprob: -8.731438636779785
    7. ' in' → logprob: -9.106438636779785
    8. '	or' → logprob: -9.231438636779785
    9. ':' → logprob: -9.356438636779785
    10. ' '' → logprob: -9.856438636779785

Token 792: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0025074053555727005
    2. ' S' → logprob: -6.502507209777832
    3. ''S' → logprob: -7.127507209777832
    4. '['' → logprob: -8.752507209777832
    5. ''' → logprob: -11.377507209777832
    6. '('' → logprob: -11.502507209777832
    7. '{'' → logprob: -12.252507209777832
    8. ''s' → logprob: -12.252507209777832
    9. '   ' → logprob: -12.627507209777832
    10. ' ' → logprob: -12.877507209777832

Token 793: ',' (ID: 11)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5866069793701172
    2. ':' → logprob: -1.0866069793701172
    3. '   ' → logprob: -2.461606979370117
    4. 'in' → logprob: -5.211606979370117
    5. '==' → logprob: -5.336606979370117
    6. ' in' → logprob: -5.336606979370117
    7. '):
' → logprob: -6.336606979370117
    8. ':

' → logprob: -7.836606979370117
    9. ' is' → logprob: -7.961606979370117
    10. ',' → logprob: -7.961606979370117

Token 794: ' then' (ID: 1815)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09256825596094131
    2. ' if' → logprob: -2.5925681591033936
    3. '       ' → logprob: -4.967568397521973
    4. ' return' → logprob: -5.592568397521973
    5. 'if' → logprob: -6.342568397521973
    6. 'return' → logprob: -7.342568397521973
    7. ' True' → logprob: -8.842568397521973
    8. '    ' → logprob: -8.967568397521973
    9. ' signal' → logprob: -10.217568397521973
    10. ' is' → logprob: -10.467568397521973

Token 795: ' signal' (ID: 12884)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.7883176207542419
    2. ' not' → logprob: -1.6633176803588867
    3. 'signal' → logprob: -2.0383176803588867
    4. ' opp' → logprob: -3.2883176803588867
    5. ' signal' → logprob: -3.5383176803588867
    6. '   ' → logprob: -3.5383176803588867
    7. 'return' → logprob: -3.6633176803588867
    8. 'False' → logprob: -3.7883176803588867
    9. ' dir' → logprob: -3.7883176803588867
    10. 'if' → logprob: -3.9133176803588867

Token 796: ' at' (ID: 540)
  Prédit: '_state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.11230984330177307
    2. 'must' → logprob: -3.2373099327087402
    3. 'state' → logprob: -4.23730993270874
    4. ' must' → logprob: -4.48730993270874
    5. ' at' → logprob: -4.73730993270874
    6. 'allows' → logprob: -5.23730993270874
    7. 'at' → logprob: -5.61230993270874
    8. 'in' → logprob: -5.86230993270874
    9. ' in' → logprob: -5.98730993270874
    10. '_status' → logprob: -6.23730993270874

Token 797: ' intersection' (ID: 42002)
  Prédit: 'intersection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'intersection' → logprob: -0.2704532742500305
    2. 'op' → logprob: -2.3954532146453857
    3. ' intersection' → logprob: -2.8954532146453857
    4. 'dir' → logprob: -3.5204532146453857
    5. 'opp' → logprob: -4.145453453063965
    6. 'inter' → logprob: -4.895453453063965
    7. ''' → logprob: -4.895453453063965
    8. ' opp' → logprob: -5.020453453063965
    9. ''s' → logprob: -5.395453453063965
    10. '{'' → logprob: -6.145453453063965

Token 798: ' must' (ID: 2804)
  Prédit: ' must'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.4746221899986267
    2. 'must' → logprob: -0.9746221899986267
    3. '   ' → logprob: -8.724621772766113
    4. ' should' → logprob: -9.724621772766113
    5. 'should' → logprob: -10.349621772766113
    6. '#' → logprob: -10.474621772766113
    7. ' =' → logprob: -10.599621772766113
    8. '==' → logprob: -10.599621772766113
    9. '=' → logprob: -10.599621772766113
    10. '必须' → logprob: -10.724621772766113

Token 799: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.16704359650611877
    2. ' be' → logprob: -1.9170435667037964
    3. 'return' → logprob: -6.042043685913086
    4. 'not' → logprob: -6.292043685913086
    5. '   ' → logprob: -7.667043685913086
    6. 'op' → logprob: -7.917043685913086
    7. 'in' → logprob: -8.292043685913086
    8. 'allow' → logprob: -8.292043685913086
    9. 'dir' → logprob: -8.542043685913086
    10. ' not' → logprob: -8.917043685913086

Token 800: ' NS' (ID: 6950)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.4077059030532837
    2. 'NS' → logprob: -1.6577059030532837
    3. 'False' → logprob: -2.407705783843994
    4. '(not' → logprob: -3.532705783843994
    5. ' not' → logprob: -4.532705783843994
    6. 'True' → logprob: -5.282705783843994
    7. 'op' → logprob: -6.157705783843994
    8. '(' → logprob: -6.907705783843994
    9. '(NS' → logprob: -6.907705783843994
    10. 'N' → logprob: -7.032705783843994

Token 801: ' green' (ID: 8851)
  Prédit: ' green'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' green' → logprob: -0.8881369829177856
    2. '_green' → logprob: -0.8881369829177856
    3. 'green' → logprob: -1.7631369829177856
    4. '_' → logprob: -6.513136863708496
    5. '_d' → logprob: -6.638136863708496
    6. '_true' → logprob: -7.513136863708496
    7. '```' → logprob: -7.638136863708496
    8. '_direction' → logprob: -8.388136863708496
    9. '_dir' → logprob: -8.513136863708496
    10. '_red' → logprob: -8.888136863708496

Token 802: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10425308346748352
    2. 'def' → logprob: -2.354253053665161
    3. ')' → logprob: -6.35425329208374
    4. '<|end|>' → logprob: -6.72925329208374
    5. ':' → logprob: -7.85425329208374
    6. '<|end|>' → logprob: -8.479252815246582
    7. '):' → logprob: -8.854252815246582
    8. '    
' → logprob: -9.854252815246582
    9. '#' → logprob: -10.104252815246582
    10. ',' → logprob: -10.729252815246582

Token 803: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008777067065238953
    2. 'def' → logprob: -5.258777141571045
    3. ')' → logprob: -5.758777141571045
    4. '```' → logprob: -8.883776664733887
    5. '<|end|>' → logprob: -9.758776664733887
    6. ':' → logprob: -10.508776664733887
    7. '):' → logprob: -10.508776664733887
    8. '    
' → logprob: -10.883776664733887
    9. ')
' → logprob: -11.258776664733887
    10. '<|end|>' → logprob: -11.508776664733887

Token 804: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00023119196703191847
    2. '```' → logprob: -9.75023078918457
    3. 'signal' → logprob: -9.87523078918457
    4. 'def' → logprob: -10.25023078918457
    5. '    
' → logprob: -10.87523078918457
    6. 'if' → logprob: -11.37523078918457
    7. ':' → logprob: -11.50023078918457
    8. ' if' → logprob: -11.75023078918457
    9. 'signals' → logprob: -12.25023078918457
    10. ' signal' → logprob: -12.62523078918457

Token 805: ' So' (ID: 2632)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006729110609740019
    2. 'if' → logprob: -5.6317291259765625
    3. ' if' → logprob: -6.3817291259765625
    4. '```' → logprob: -7.8817291259765625
    5. 'def' → logprob: -8.506729125976562
    6. 'opp' → logprob: -9.256729125976562
    7. 'op' → logprob: -9.256729125976562
    8. '    
' → logprob: -9.256729125976562
    9. 'ew' → logprob: -9.506729125976562
    10. ' opp' → logprob: -9.631729125976562

Token 806: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1331254094839096
    2. ' if' → logprob: -2.6331253051757812
    3. 'if' → logprob: -3.3831253051757812
    4. ' opp' → logprob: -4.383125305175781
    5. 'def' → logprob: -6.008125305175781
    6. 'opp' → logprob: -6.758125305175781
    7. 'op' → logprob: -7.133125305175781
    8. ' opposite' → logprob: -8.133125305175781
    9. 'ew' → logprob: -8.258125305175781
    10. ' dir' → logprob: -8.633125305175781

Token 807: ' signal' (ID: 12884)
  Prédit: ' opp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' opp' → logprob: -0.8550465703010559
    2. 'opp' → logprob: -1.2300465106964111
    3. 'dir' → logprob: -2.105046510696411
    4. 'op' → logprob: -2.480046510696411
    5. ' dir' → logprob: -3.355046510696411
    6. 'not' → logprob: -4.10504674911499
    7. ' opposite' → logprob: -4.85504674911499
    8. ' not' → logprob: -5.10504674911499
    9. '   ' → logprob: -5.35504674911499
    10. 'signal' → logprob: -6.98004674911499

Token 808: ' is' (ID: 382)
  Prédit: '_k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.5244617462158203
    2. ' =' → logprob: -1.8994617462158203
    3. '_state' → logprob: -2.5244617462158203
    4. 's' → logprob: -3.5244617462158203
    5. '_key' → logprob: -3.6494617462158203
    6. ' is' → logprob: -3.8994617462158203
    7. 'state' → logprob: -4.14946174621582
    8. 'is' → logprob: -4.39946174621582
    9. 'k' → logprob: -4.39946174621582
    10. '=' → logprob: -4.52446174621582

Token 809: ' green' (ID: 8851)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.41628193855285645
    2. 'signals' → logprob: -1.5412819385528564
    3. 'not' → logprob: -3.1662819385528564
    4. 'intersection' → logprob: -3.5412819385528564
    5. 'inter' → logprob: -3.9162819385528564
    6. ' None' → logprob: -4.291281700134277
    7. 'op' → logprob: -4.916281700134277
    8. '[' → logprob: -5.791281700134277
    9. ' not' → logprob: -5.916281700134277
    10. 'signal' → logprob: -6.541281700134277

Token 810: ' for' (ID: 395)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5240033864974976
    2. ':' → logprob: -2.149003505706787
    3. ' for' → logprob: -2.149003505706787
    4. '   ' → logprob: -2.399003505706787
    5. 'and' → logprob: -3.274003505706787
    6. 'for' → logprob: -3.899003505706787
    7. '[' → logprob: -5.649003505706787
    8. ' in' → logprob: -5.774003505706787
    9. '==' → logprob: -5.899003505706787
    10. '=' → logprob: -6.024003505706787

Token 811: ' that' (ID: 484)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dir' → logprob: -0.7863932847976685
    2. ''' → logprob: -1.5363932847976685
    3. 'opp' → logprob: -2.411393165588379
    4. 'ew' → logprob: -2.786393165588379
    5. ' opp' → logprob: -3.536393165588379
    6. 'op' → logprob: -3.661393165588379
    7. ' dir' → logprob: -3.786393165588379
    8. ''E' → logprob: -3.911393165588379
    9. '('' → logprob: -4.411393165588379
    10. '['' → logprob: -4.661393165588379

Token 812: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.7561673521995544
    2. 'dir' → logprob: -0.8811673521995544
    3. ' direction' → logprob: -3.756167411804199
    4. 'op' → logprob: -3.881167411804199
    5. ' dir' → logprob: -4.256167411804199
    6. 'arr' → logprob: -4.631167411804199
    7. '_dir' → logprob: -5.256167411804199
    8. 'dire' → logprob: -5.381167411804199
    9. '[' → logprob: -5.506167411804199
    10. '_direction' → logprob: -5.756167411804199

Token 813: ' at' (ID: 540)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7382578253746033
    2. ' and' → logprob: -1.363257884979248
    3. '   ' → logprob: -2.113257884979248
    4. '):' → logprob: -3.363257884979248
    5. ':
' → logprob: -3.488257884979248
    6. '):
' → logprob: -4.113257884979248
    7. 'and' → logprob: -4.238257884979248
    8. '=' → logprob: -4.238257884979248
    9. ')' → logprob: -4.988257884979248
    10. ' =' → logprob: -5.113257884979248

Token 814: ' arrival' (ID: 24861)
  Prédit: 'intersection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'intersection' → logprob: -0.7537514567375183
    2. 'signal' → logprob: -1.753751516342163
    3. 'dir' → logprob: -2.128751516342163
    4. ')' → logprob: -2.128751516342163
    5. 'op' → logprob: -2.628751516342163
    6. 'direction' → logprob: -4.003751277923584
    7. 'inter' → logprob: -4.878751277923584
    8. 'the' → logprob: -5.628751277923584
    9. ' intersection' → logprob: -6.128751277923584
    10. '):
' → logprob: -6.128751277923584

Token 815: ' time' (ID: 1058)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5372323393821716
    2. '):' → logprob: -1.4122323989868164
    3. ':
' → logprob: -2.6622323989868164
    4. '   ' → logprob: -3.5372323989868164
    5. '):
' → logprob: -3.5372323989868164
    6. ')' → logprob: -4.412232398986816
    7. ',' → logprob: -5.537232398986816
    8. ' and' → logprob: -5.662232398986816
    9. 'def' → logprob: -5.662232398986816
    10. '=' → logprob: -5.787232398986816

Token 816: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14764831960201263
    2. '):' → logprob: -2.647648334503174
    3. ':
' → logprob: -3.772648334503174
    4. '=' → logprob: -4.272648334503174
    5. '   ' → logprob: -4.397648334503174
    6. '):
' → logprob: -5.147648334503174
    7. ' =' → logprob: -5.272648334503174
    8. ' and' → logprob: -6.397648334503174
    9. ',' → logprob: -6.647648334503174
    10. '[' → logprob: -6.772648334503174

Token 817: ' can' (ID: 665)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7665992379188538
    2. '   ' → logprob: -1.266599178314209
    3. 'if' → logprob: -1.766599178314209
    4. ' return' → logprob: -3.516599178314209
    5. 'return' → logprob: -3.641599178314209
    6. ' signal' → logprob: -5.016599178314209
    7. ' opp' → logprob: -5.016599178314209
    8. 'signal' → logprob: -5.141599178314209
    9. ' direction' → logprob: -6.266599178314209
    10. ' dir' → logprob: -6.891599178314209

Token 818: ' enter' (ID: 5747)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7765937447547913
    2. 'return' → logprob: -0.9015937447547913
    3. ' continue' → logprob: -3.1515936851501465
    4. 'continue' → logprob: -3.5265936851501465
    5. ' enter' → logprob: -3.9015936851501465
    6. '   ' → logprob: -4.6515936851501465
    7. 'enter' → logprob: -4.9015936851501465
    8. 'allow' → logprob: -5.2765936851501465
    9. '_' → logprob: -5.9015936851501465
    10. '_allow' → logprob: -6.0265936851501465

Token 819: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4886901080608368
    2. ':' → logprob: -1.3636901378631592
    3. 'def' → logprob: -2.613690137863159
    4. ':
' → logprob: -4.11368989944458
    5. '):' → logprob: -4.23868989944458
    6. '{' → logprob: -4.98868989944458
    7. '):
' → logprob: -5.23868989944458
    8. ')' → logprob: -5.98868989944458
    9. '(' → logprob: -6.23868989944458
    10. '.' → logprob: -6.73868989944458

Token 820: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01746288873255253
    2. ' True' → logprob: -4.642462730407715
    3. 'True' → logprob: -5.892462730407715
    4. '#' → logprob: -6.767462730407715
    5. 'False' → logprob: -6.767462730407715
    6. ' False' → logprob: -7.392462730407715
    7. 'else' → logprob: -7.392462730407715
    8. ' else' → logprob: -7.517462730407715
    9. '       ' → logprob: -9.017462730407715
    10. ' if' → logprob: -9.017462730407715

Token 821: ' must' (ID: 2804)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4047953188419342
    2. '   ' → logprob: -1.9047952890396118
    3. ' False' → logprob: -2.0297954082489014
    4. 'return' → logprob: -3.5297954082489014
    5. 'False' → logprob: -3.7797954082489014
    6. '    ' → logprob: -8.15479564666748
    7. ' True' → logprob: -9.15479564666748
    8. '       ' → logprob: -10.27979564666748
    9. '	return' → logprob: -10.77979564666748
    10. '(False' → logprob: -10.77979564666748

Token 822: ' wait' (ID: 5238)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wait' → logprob: -0.47929999232292175
    2. 'return' → logprob: -0.9793000221252441
    3. ' wait' → logprob: -5.729300022125244
    4. ' return' → logprob: -6.979300022125244
    5. 'not' → logprob: -6.979300022125244
    6. '   ' → logprob: -10.729299545288086
    7. '_wait' → logprob: -10.854299545288086
    8. '    ' → logprob: -11.229299545288086
    9. 'yield' → logprob: -11.229299545288086
    10. ' not' → logprob: -11.979299545288086

Token 823: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24267509579658508
    2. 'def' → logprob: -1.6176750659942627
    3. ':' → logprob: -4.617675304412842
    4. '):' → logprob: -5.742675304412842
    5. ')' → logprob: -6.367675304412842
    6. '<|end|>' → logprob: -7.617675304412842
    7. '):
' → logprob: -7.867675304412842
    8. '    
' → logprob: -8.117674827575684
    9. ':
' → logprob: -8.492674827575684
    10. '
' → logprob: -8.992674827575684

Token 824: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00866527110338211
    2. 'def' → logprob: -4.883665084838867
    3. '    
' → logprob: -7.758665084838867
    4. 'if' → logprob: -8.383665084838867
    5. '```' → logprob: -9.383665084838867
    6. ' if' → logprob: -9.508665084838867
    7. ':' → logprob: -9.633665084838867
    8. 'signal' → logprob: -10.258665084838867
    9. '
' → logprob: -10.758665084838867
    10. '  
' → logprob: -11.133665084838867

Token 825: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001991682220250368
    2. '    
' → logprob: -7.2519917488098145
    3. 'def' → logprob: -7.6269917488098145
    4. '
' → logprob: -8.626991271972656
    5. ':' → logprob: -8.876991271972656
    6. '```' → logprob: -9.126991271972656
    7. ' opp' → logprob: -9.251991271972656
    8. '\n' → logprob: -10.626991271972656
    9. '\' → logprob: -10.751991271972656
    10. '\t' → logprob: -11.126991271972656

Token 826: ' intersection' (ID: 42002)
  Prédit: 'intersection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'intersection' → logprob: -0.526792049407959
    2. ' intersection' → logprob: -0.901792049407959
    3. ' not' → logprob: -6.151792049407959
    4. 'not' → logprob: -7.276792049407959
    5. ' signals' → logprob: -7.901792049407959
    6. 'signals' → logprob: -8.526792526245117
    7. 'inter' → logprob: -9.026792526245117
    8. ' ' → logprob: -10.026792526245117
    9. '(inter' → logprob: -10.276792526245117
    10. '(' → logprob: -10.401792526245117

Token 827: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.02250957489013672
    2. 'not' → logprob: -3.8975095748901367
    3. ' in' → logprob: -6.397509574890137
    4. 'in' → logprob: -8.522509574890137
    5. ' is' → logprob: -9.772509574890137
    6. ')' → logprob: -10.647509574890137
    7. 'is' → logprob: -12.272509574890137
    8. '	not' → logprob: -12.397509574890137
    9. '[' → logprob: -12.897509574890137
    10. ' ' → logprob: -13.147509574890137

Token 828: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5769538879394531
    2. ' in' → logprob: -0.8269538879394531
    3. 'signals' → logprob: -7.076953887939453
    4. ' signals' → logprob: -9.326953887939453
    5. ')' → logprob: -10.576953887939453
    6. '<|end|>' → logprob: -11.826953887939453
    7. '<|end|>' → logprob: -11.951953887939453
    8. '[' → logprob: -12.076953887939453
    9. 's' → logprob: -12.326953887939453
    10. 'Signals' → logprob: -12.889453887939453

Token 829: ' signals' (ID: 29026)
  Prédit: 'signals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'signals' → logprob: -0.0007101670489646494
    2. ' signals' → logprob: -7.2507100105285645
    3. 'sign' → logprob: -16.000709533691406
    4. 'signal' → logprob: -16.625709533691406
    5. 'keys' → logprob: -18.500709533691406
    6. '   ' → logprob: -20.000709533691406
    7. 'symbols' → logprob: -20.375709533691406
    8. 's' → logprob: -20.375709533691406
    9. '```' → logprob: -21.375709533691406
    10. 'sig' → logprob: -21.875709533691406

Token 830: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5787546038627625
    2. ':
' → logprob: -0.8287546038627625
    3. ':return' → logprob: -6.453754425048828
    4. ' or' → logprob: -7.328754425048828
    5. '   ' → logprob: -7.703754425048828
    6. '():
' → logprob: -9.578754425048828
    7. '):
' → logprob: -10.953754425048828
    8. ' :
' → logprob: -11.703754425048828
    9. ' :' → logprob: -11.953754425048828
    10. ':
' → logprob: -12.078754425048828

Token 831: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006223475094884634
    2. '   ' → logprob: -5.631223678588867
    3. ':' → logprob: -6.131223678588867
    4. ' return' → logprob: -8.881223678588867
    5. '	' → logprob: -10.131223678588867
    6. ':return' → logprob: -10.131223678588867
    7. 'return' → logprob: -10.256223678588867
    8. '	return' → logprob: -10.506223678588867
    9. '	   ' → logprob: -10.631223678588867
    10. ':
' → logprob: -10.756223678588867

Token 832: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.22082538902759552
    2. '       ' → logprob: -1.970825433731079
    3. ' return' → logprob: -3.220825433731079
    4. '   ' → logprob: -3.970825433731079
    5. '	return' → logprob: -10.9708251953125
    6. ' ' → logprob: -13.8458251953125
    7. '           ' → logprob: -14.2208251953125
    8. '  ' → logprob: -14.3458251953125
    9. 'True' → logprob: -14.8458251953125
    10. '     ' → logprob: -14.8458251953125

Token 833: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.12693145871162415
    2. ' True' → logprob: -2.1269314289093018
    3. '   ' → logprob: -12.626931190490723
    4. '(True' → logprob: -16.62693214416504
    5. 'False' → logprob: -18.50193214416504
    6. ' ' → logprob: -19.37693214416504
    7. '  ' → logprob: -19.87693214416504
    8. '=True' → logprob: -20.25193214416504
    9. 'true' → logprob: -20.62693214416504
    10. '    ' → logprob: -20.62693214416504

Token 834: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01829567365348339
    2. '    
' → logprob: -4.393295764923096
    3. '
' → logprob: -5.393295764923096
    4. '<|end|>' → logprob: -8.143295288085938
    5. '  
' → logprob: -8.268295288085938
    6. 'signal' → logprob: -8.393295288085938
    7. ' 
' → logprob: -9.393295288085938
    8. '```' → logprob: -9.768295288085938
    9. 'if' → logprob: -10.018295288085938
    10. 'token' → logprob: -10.518295288085938

Token 835: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18192622065544128
    2. 'signal' → logprob: -2.0569262504577637
    3. 'k' → logprob: -3.8069262504577637
    4. 'state' → logprob: -4.806926250457764
    5. ' signal' → logprob: -5.306926250457764
    6. 'sig' → logprob: -6.556926250457764
    7. ' k' → logprob: -7.306926250457764
    8. '```' → logprob: -8.056925773620605
    9. ' state' → logprob: -8.931925773620605
    10. '    
' → logprob: -9.431925773620605

Token 836: ' k' (ID: 372)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38817209005355835
    2. 'signal' → logprob: -1.6381721496582031
    3. 'ew' → logprob: -2.638172149658203
    4. 'k' (adapté à ' k') → logprob: -3.513172149658203
    5. 'state' → logprob: -4.888172149658203
    6. 'sig' → logprob: -5.263172149658203
    7. 'dir' → logprob: -5.388172149658203
    8. 'opp' → logprob: -5.763172149658203
    9. 't' → logprob: -6.513172149658203
    10. 'op' → logprob: -6.638172149658203

Token 837: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693114578723907
    2. '=' → logprob: -2.1269311904907227
    3. '_signal' → logprob: -13.626931190490723
    4. 'signal' → logprob: -14.626931190490723
    5. '   ' → logprob: -15.001931190490723
    6. ',' → logprob: -15.251931190490723
    7. '=k' → logprob: -15.501931190490723
    8. '=int' → logprob: -15.876931190490723
    9. 'k' → logprob: -16.001930236816406
    10. '=s' → logprob: -16.126930236816406

Token 838: ' signals' (ID: 29026)
  Prédit: 'signals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'signals' → logprob: -1.676292231422849e-05
    2. ' signals' → logprob: -11.000017166137695
    3. 'sign' → logprob: -17.125017166137695
    4. 'signal' → logprob: -19.875017166137695
    5. 'sig' → logprob: -21.750017166137695
    6. 'int' → logprob: -21.875017166137695
    7. '   ' → logprob: -24.000017166137695
    8. 'Signals' → logprob: -24.250017166137695
    9. 's' → logprob: -24.375017166137695
    10. 'symbols' → logprob: -25.750017166137695

Token 839: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.6240566083070007e-06
    2. 'intersection' → logprob: -14.250001907348633
    3. '[in' → logprob: -14.625001907348633
    4. 'inter' → logprob: -16.125001907348633
    5. 'signal' → logprob: -16.750001907348633
    6. ' [' → logprob: -16.750001907348633
    7. 'signals' → logprob: -16.875001907348633
    8. '(inter' → logprob: -17.125001907348633
    9. '.get' → logprob: -17.125001907348633
    10. 'get' → logprob: -17.375001907348633

Token 840: 'intersection' (ID: 170255)
  Prédit: 'intersection'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'intersection' → logprob: -4.4656579120783135e-05
    2. ' intersection' → logprob: -10.250044822692871
    3. 'signal' → logprob: -12.250044822692871
    4. 'inter' → logprob: -12.625044822692871
    5. 'interaction' → logprob: -14.625044822692871
    6. ' ' → logprob: -15.000044822692871
    7. '[' → logprob: -16.125043869018555
    8. '   ' → logprob: -16.250043869018555
    9. 'interval' → logprob: -16.375043869018555
    10. '(inter' → logprob: -16.750043869018555

Token 841: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003606104583013803
    2. ']
' → logprob: -8.125360488891602
    3. '][' → logprob: -10.375360488891602
    4. '[' → logprob: -11.250360488891602
    5. ' ]' → logprob: -11.500360488891602
    6. '   ' → logprob: -12.750360488891602
    7. ']
' → logprob: -13.750360488891602
    8. '']' → logprob: -14.125360488891602
    9. '[token' → logprob: -14.125360488891602
    10. 'tokens' → logprob: -14.750360488891602

Token 842: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003930929582566023
    2. 'state' → logprob: -5.878931045532227
    3. 't' → logprob: -7.753931045532227
    4. ' state' → logprob: -9.003931045532227
    5. '```' → logprob: -9.003931045532227
    6. 'direction' → logprob: -9.378931045532227
    7. 'signal' → logprob: -9.503931045532227
    8. 'cycle' → logprob: -10.003931045532227
    9. '    
' → logprob: -10.128931045532227
    10. 'ew' → logprob: -10.503931045532227

Token 843: ' cycle' (ID: 15839)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5469852685928345
    2. 'ew' → logprob: -1.7969852685928345
    3. 'state' → logprob: -1.7969852685928345
    4. 'if' → logprob: -4.296985149383545
    5. 'dir' → logprob: -4.421985149383545
    6. 'opp' → logprob: -4.546985149383545
    7. 't' → logprob: -4.546985149383545
    8. 'green' → logprob: -5.046985149383545
    9. 'arrival' → logprob: -5.046985149383545
    10. 'arr' → logprob: -5.171985149383545

Token 844: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048599522560834885
    2. '=' → logprob: -3.0485994815826416
    3. '_time' → logprob: -11.923599243164062
    4. '   ' → logprob: -13.423599243164062
    5. 'time' → logprob: -13.798599243164062
    6. ',' → logprob: -14.923599243164062
    7. '_length' → logprob: -14.923599243164062
    8. ' ' → logprob: -15.048599243164062
    9. '_' → logprob: -15.298599243164062
    10. 'k' → logprob: -15.423599243164062

Token 845: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.007926118560135365
    2. ' ' → logprob: -4.882925987243652
    3. 'k' → logprob: -8.257925987243652
    4. '   ' → logprob: -10.382925987243652
    5. 'signal' → logprob: -11.132925987243652
    6. ' k' → logprob: -11.507925987243652
    7. '0' → logprob: -13.882925987243652
    8. '  ' → logprob: -14.257925987243652
    9. ' signal' → logprob: -14.257925987243652
    10. 'cycle' → logprob: -14.382925987243652

Token 846: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.991464786347933e-05
    2. 'k' → logprob: -9.875060081481934
    3. ' ' → logprob: -11.875060081481934
    4. 'signal' → logprob: -13.875060081481934
    5. '(' → logprob: -16.000059127807617
    6. '   ' → logprob: -16.750059127807617
    7. '`' → logprob: -16.875059127807617
    8. '0' → logprob: -16.875059127807617
    9. 'cycle' → logprob: -16.875059127807617
    10. '6' → logprob: -17.250059127807617

Token 847: '*k' (ID: 81061)
  Prédit: '*k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*k' → logprob: -0.02366247959434986
    2. '*' → logprob: -3.773662567138672
    3. ' *' → logprob: -7.898662567138672
    4. 'k' → logprob: -10.023662567138672
    5. '*s' → logprob: -15.398662567138672
    6. '*h' → logprob: -15.898662567138672
    7. '`' → logprob: -16.148662567138672
    8. '```' → logprob: -16.273662567138672
    9. '**' → logprob: -16.398662567138672
    10. '*a' → logprob: -16.523662567138672

Token 848: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38504964113235474
    2. '
' → logprob: -1.26004958152771
    3. '%' → logprob: -5.260049819946289
    4. '<|end|>' → logprob: -5.260049819946289
    5. ',' → logprob: -5.635049819946289
    6. ' t' → logprob: -5.760049819946289
    7. ' %' → logprob: -6.135049819946289
    8. 't' → logprob: -6.260049819946289
    9. ' if' → logprob: -6.385049819946289
    10. 'token' → logprob: -6.510049819946289

Token 849: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3964867889881134
    2. ' t' → logprob: -1.271486759185791
    3. 't' → logprob: -3.271486759185791
    4. '
' → logprob: -5.896486759185791
    5. ' if' → logprob: -6.021486759185791
    6. '	t' → logprob: -6.896486759185791
    7. '```' → logprob: -6.896486759185791
    8. 'if' → logprob: -7.521486759185791
    9. '`t' → logprob: -8.27148723602295
    10. '(t' → logprob: -8.77148723602295

Token 850: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.8156488537788391
    2. '   ' → logprob: -0.8156488537788391
    3. ' t' → logprob: -2.4406487941741943
    4. 'state' → logprob: -4.815649032592773
    5. 'time' → logprob: -4.815649032592773
    6. ' time' → logprob: -5.815649032592773
    7. 'if' → logprob: -6.190649032592773
    8. ' state' → logprob: -6.315649032592773
    9. 'phase' → logprob: -6.815649032592773
    10. ' if' → logprob: -6.940649032592773

Token 851: '_mod' (ID: 15325)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.23282086849212646
    2. ' =' → logprob: -1.6078208684921265
    3. '%=' → logprob: -5.232820987701416
    4. ' %=' → logprob: -6.357820987701416
    5. '%' → logprob: -8.357820510864258
    6. ' %' → logprob: -10.357820510864258
    7. '=t' → logprob: -10.857820510864258
    8. '_mod' → logprob: -11.607820510864258
    9. 't' → logprob: -11.857820510864258
    10. 'mod' → logprob: -12.732820510864258

Token 852: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08895473182201385
    2. '=' → logprob: -2.4639546871185303
    3. '<|end|>' → logprob: -12.21395492553711
    4. ' ' → logprob: -13.08895492553711
    5. ' %=' → logprob: -13.71395492553711
    6. '%' → logprob: -13.71395492553711
    7. '%=' → logprob: -13.83895492553711
    8. '   ' → logprob: -14.46395492553711
    9. 't' → logprob: -14.46395492553711
    10. '<|end|>' → logprob: -14.46395492553711

Token 853: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00015872348740231246
    2. ' t' → logprob: -8.750158309936523
    3. '   ' → logprob: -16.375158309936523
    4. '`t' → logprob: -16.375158309936523
    5. '(t' → logprob: -17.125158309936523
    6. '	t' → logprob: -19.750158309936523
    7. 'signal' → logprob: -21.250158309936523
    8. 'time' → logprob: -21.375158309936523
    9. '[t' → logprob: -21.500158309936523
    10. ' ' → logprob: -21.625158309936523

Token 854: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.31598541140556335
    2. '%' → logprob: -1.3159854412078857
    3. '=' → logprob: -6.065985202789307
    4. ' =' → logprob: -8.440985679626465
    5. '%=' → logprob: -8.815985679626465
    6. ' %=' → logprob: -10.815985679626465
    7. '   ' → logprob: -11.440985679626465
    8. ' ' → logprob: -14.065985679626465
    9. 't' → logprob: -14.565985679626465
    10. ' ' → logprob: -14.815985679626465

Token 855: ' cycle' (ID: 15839)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -9.088346359931165e-07
    2. ' cycle' → logprob: -14.250000953674316
    3. '(' → logprob: -15.375000953674316
    4. '(c' → logprob: -17.25
    5. 'cycl' → logprob: -17.875
    6. 'cy' → logprob: -20.0
    7. 'cycled' → logprob: -20.0
    8. '_cycle' → logprob: -20.125
    9. '-cycle' → logprob: -20.375
    10. 'cycling' → logprob: -20.5

Token 856: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007542393868789077
    2. 'if' → logprob: -8.000754356384277
    3. '    
' → logprob: -9.000754356384277
    4. ' if' → logprob: -9.000754356384277
    5. '
' → logprob: -9.500754356384277
    6. 'direction' → logprob: -10.500754356384277
    7. ',' → logprob: -11.000754356384277
    8. '#' → logprob: -11.000754356384277
    9. '```' → logprob: -11.000754356384277
    10. ' direction' → logprob: -12.625754356384277

Token 857: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016090091317892075
    2. 'if' → logprob: -4.391089916229248
    3. ' if' → logprob: -5.766089916229248
    4. '```' → logprob: -8.391090393066406
    5. 'direction' → logprob: -8.641090393066406
    6. ' direction' → logprob: -10.641090393066406
    7. 'allowed' → logprob: -12.766090393066406
    8. 'dir' → logprob: -13.266090393066406
    9. ' dir' → logprob: -13.391090393066406
    10. 'is' → logprob: -13.391090393066406

Token 858: ' opp' (ID: 6323)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.35224995017051697
    2. '   ' → logprob: -1.2272499799728394
    3. ' if' → logprob: -5.977250099182129
    4. 'allowed' → logprob: -8.102250099182129
    5. 'direction' → logprob: -8.477250099182129
    6. 'state' → logprob: -8.852250099182129
    7. 'dir' → logprob: -9.477250099182129
    8. 'allow' → logprob: -9.602250099182129
    9. 'green' → logprob: -9.602250099182129
    10. 'arr' → logprob: -9.727250099182129

Token 859: '_dir' (ID: 9526)
  Prédit: '_dir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dir' → logprob: -0.031724367290735245
    2. ' =' → logprob: -4.156724452972412
    3. '_d' → logprob: -4.781724452972412
    4. '=' → logprob: -5.781724452972412
    5. 'dir' → logprob: -6.281724452972412
    6. 'd' → logprob: -6.281724452972412
    7. '_direction' → logprob: -8.031723976135254
    8. 'direction' → logprob: -11.156723976135254
    9. 'Dir' → logprob: -11.281723976135254
    10. '_' → logprob: -12.531723976135254

Token 860: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12692947685718536
    2. '=' → logprob: -2.126929521560669
    3. '   ' → logprob: -14.37692928314209
    4. ' ' → logprob: -14.87692928314209
    5. 'dir' → logprob: -15.00192928314209
    6. 'd' → logprob: -16.376930236816406
    7. 'direction' → logprob: -17.001930236816406
    8. '=d' → logprob: -17.251930236816406
    9. '  ' → logprob: -18.251930236816406
    10. '_dir' → logprob: -18.376930236816406

Token 861: ' opposite' (ID: 23821)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.005233763717114925
    2. ' opposite' → logprob: -5.2552337646484375
    3. '   ' → logprob: -16.755233764648438
    4. ' ' → logprob: -18.755233764648438
    5. '	op' → logprob: -19.255233764648438
    6. '```' → logprob: -19.755233764648438
    7. ' op' → logprob: -20.005233764648438
    8. '(op' → logprob: -20.255233764648438
    9. 'opp' → logprob: -20.380233764648438
    10. '{' → logprob: -20.505233764648438

Token 862: '(dir' (ID: 32000)
  Prédit: '(dir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dir' → logprob: -0.0001589618914294988
    2. 'dir' → logprob: -8.75015926361084
    3. '[' → logprob: -14.87515926361084
    4. '(' → logprob: -16.625158309936523
    5. '(d' → logprob: -17.000158309936523
    6. ' dir' → logprob: -18.000158309936523
    7. 'Dir' → logprob: -18.375158309936523
    8. '_dir' → logprob: -19.125158309936523
    9. '(def' → logprob: -19.375158309936523
    10. '(dict' → logprob: -19.750158309936523

Token 863: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -5.872261317563243e-05
    2. 'arr' → logprob: -9.750059127807617
    3. 'Arr' → logprob: -15.625059127807617
    4. '(arr' → logprob: -17.125059127807617
    5. '	arr' → logprob: -17.875059127807617
    6. '```' → logprob: -18.250059127807617
    7. '_dir' → logprob: -18.375059127807617
    8. 'dir' → logprob: -18.500059127807617
    9. ''arr' → logprob: -18.500059127807617
    10. '$arr' → logprob: -18.625059127807617

Token 864: 'ive' (ID: 585)
  Prédit: 'ive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ive' → logprob: -1.759734732331708e-05
    2. '_arr' → logprob: -11.375017166137695
    3. 'rive' → logprob: -12.500017166137695
    4. 'ieve' → logprob: -13.750017166137695
    5. 've' → logprob: -15.375017166137695
    6. 'vive' → logprob: -15.625017166137695
    7. 'ived' → logprob: -15.625017166137695
    8. 'arr' → logprob: -15.750017166137695
    9. '_dir' → logprob: -15.875017166137695
    10. '[' → logprob: -16.750017166137695

Token 865: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010821137111634016
    2. ')
' → logprob: -6.876081943511963
    3. '   ' → logprob: -10.251082420349121
    4. '[' → logprob: -11.751082420349121
    5. '')' → logprob: -13.001082420349121
    6. ')
' → logprob: -13.376082420349121
    7. ' )' → logprob: -14.251082420349121
    8. ')

' → logprob: -14.251082420349121
    9. ')`' → logprob: -15.126082420349121
    10. ')`
' → logprob: -15.626082420349121

Token 866: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008862029761075974
    2. 'if' → logprob: -4.758862018585205
    3. ' if' → logprob: -8.633862495422363
    4. 'direction' → logprob: -10.258862495422363
    5. '```' → logprob: -10.633862495422363
    6. '    
' → logprob: -12.383862495422363
    7. '
' → logprob: -13.883862495422363
    8. 'is' → logprob: -14.008862495422363
    9. ' direction' → logprob: -14.008862495422363
    10. '	if' → logprob: -14.508862495422363

Token 867: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5761017203330994
    2. 'if' → logprob: -0.8261017203330994
    3. ' if' → logprob: -9.326101303100586
    4. 'direction' → logprob: -10.326101303100586
    5. '```' → logprob: -11.326101303100586
    6. 'allowed' → logprob: -11.451101303100586
    7. 'is' → logprob: -11.576101303100586
    8. '    
' → logprob: -13.326101303100586
    9. 'state' → logprob: -13.576101303100586
    10. 'ew' → logprob: -13.701101303100586

Token 868: ' NS' (ID: 6950)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0012495197588577867
    2. '   ' → logprob: -7.001249313354492
    3. 'ew' → logprob: -8.751249313354492
    4. 'allowed' → logprob: -9.126249313354492
    5. 'ns' → logprob: -9.876249313354492
    6. ' if' → logprob: -12.001249313354492
    7. 'is' → logprob: -12.001249313354492
    8. 'allow' → logprob: -12.501249313354492
    9. '```' → logprob: -13.876249313354492
    10. 'return' → logprob: -14.376249313354492

Token 869: ' green' (ID: 8851)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.24556729197502136
    2. ' if' → logprob: -1.7455673217773438
    3. 'green' → logprob: -3.7455673217773438
    4. ' green' → logprob: -4.620567321777344
    5. ' directions' → logprob: -5.620567321777344
    6. '   ' → logprob: -5.995567321777344
    7. 'dire' → logprob: -6.745567321777344
    8. 'allowed' → logprob: -7.245567321777344
    9. ' =' → logprob: -7.870567321777344
    10. ' in' → logprob: -8.745567321777344

Token 870: ' first' (ID: 1577)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3209560513496399
    2. ' =' → logprob: -1.8209559917449951
    3. ' if' → logprob: -2.445955991744995
    4. 'if' → logprob: -3.945955991744995
    5. '=' → logprob: -6.070956230163574
    6. ' at' → logprob: -6.195956230163574
    7. ' is' → logprob: -7.195956230163574
    8. ':' → logprob: -8.320956230163574
    9. ' and' → logprob: -8.945956230163574
    10. '=True' → logprob: -9.070956230163574

Token 871: ' k' (ID: 372)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014553552027791739
    2. 'if' → logprob: -6.751455307006836
    3. ' if' → logprob: -8.251455307006836
    4. 'def' → logprob: -11.126455307006836
    5. '<|end|>' → logprob: -12.501455307006836
    6. ',' → logprob: -14.001455307006836
    7. '
' → logprob: -14.251455307006836
    8. '#' → logprob: -14.376455307006836
    9. '	if' → logprob: -14.876455307006836
    10. '    
' → logprob: -15.126455307006836

Token 872: ' minutes' (ID: 5438)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.630035936832428
    2. 'if' → logprob: -1.1300358772277832
    3. ' if' → logprob: -2.130035877227783
    4. '=' → logprob: -5.130035877227783
    5. ' =' → logprob: -5.130035877227783
    6. 'minutes' → logprob: -5.130035877227783
    7. ',' → logprob: -6.130035877227783
    8. ' minutes' → logprob: -6.255035877227783
    9. ' and' → logprob: -8.005036354064941
    10. 'and' → logprob: -8.005036354064941

Token 873: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006832587067037821
    2. 'if' → logprob: -5.381832599639893
    3. ' if' → logprob: -6.131832599639893
    4. ',' → logprob: -11.381832122802734
    5. 'def' → logprob: -11.381832122802734
    6. '<|end|>' → logprob: -12.881832122802734
    7. ' =' → logprob: -13.381832122802734
    8. '
' → logprob: -14.006832122802734
    9. ' ' → logprob: -14.006832122802734
    10. ':' → logprob: -14.006832122802734

Token 874: ' then' (ID: 1815)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06088665500283241
    2. '   ' → logprob: -3.4358866214752197
    3. 'return' → logprob: -4.185886859893799
    4. ' if' → logprob: -4.685886859893799
    5. 'ew' → logprob: -7.060886859893799
    6. 'ns' → logprob: -7.435886859893799
    7. ' return' → logprob: -7.810886859893799
    8. '#' → logprob: -8.93588638305664
    9. 't' → logprob: -9.18588638305664
    10. '       ' → logprob: -9.31088638305664

Token 875: ' EW' (ID: 143307)
  Prédit: 'EW'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EW' → logprob: -0.0186579879373312
    2. ' EW' → logprob: -5.01865816116333
    3. 'if' → logprob: -5.26865816116333
    4. 'k' → logprob: -6.14365816116333
    5. '   ' → logprob: -6.51865816116333
    6. 't' → logprob: -7.26865816116333
    7. 'ew' → logprob: -7.64365816116333
    8. 'cycle' → logprob: -7.89365816116333
    9. '#' → logprob: -8.393657684326172
    10. '(t' → logprob: -8.643657684326172

Token 876: ' green' (ID: 8851)
  Prédit: 'green'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'green' → logprob: -0.13033463060855865
    2. ' green' → logprob: -2.1303346157073975
    3. 'if' → logprob: -6.255334854125977
    4. '_green' → logprob: -6.880334854125977
    5. ' if' → logprob: -8.130334854125977
    6. '   ' → logprob: -9.380334854125977
    7. 'k' → logprob: -10.380334854125977
    8. ' ' → logprob: -12.005334854125977
    9. '```' → logprob: -12.005334854125977
    10. 'red' → logprob: -12.255334854125977

Token 877: ' k' (ID: 372)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002139909425750375
    2. 'if' → logprob: -6.627140045166016
    3. ' if' → logprob: -7.252140045166016
    4. '
' → logprob: -9.752140045166016
    5. ',' → logprob: -11.252140045166016
    6. '    
' → logprob: -11.752140045166016
    7. 'def' → logprob: -12.002140045166016
    8. ' at' → logprob: -12.502140045166016
    9. '<|end|>' → logprob: -13.502140045166016
    10. ' =' → logprob: -13.627140045166016

Token 878: ' minutes' (ID: 5438)
  Prédit: 'minutes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minutes' → logprob: -0.1908320039510727
    2. '<|end|>' → logprob: -2.8158318996429443
    3. ' minutes' → logprob: -3.4408318996429443
    4. '...' → logprob: -3.9408318996429443
    5. '_minutes' → logprob: -4.190832138061523
    6. '=' → logprob: -4.315832138061523
    7. '   ' → logprob: -4.690832138061523
    8. '.' → logprob: -5.690832138061523
    9. '<|end|>' → logprob: -5.690832138061523
    10. ':' → logprob: -5.940832138061523

Token 879: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011773703154176474
    2. '
' → logprob: -7.3761773109436035
    3. 'if' → logprob: -7.8761773109436035
    4. ' if' → logprob: -8.876177787780762
    5. '    
' → logprob: -10.876177787780762
    6. ',' → logprob: -12.501177787780762
    7. '```' → logprob: -13.126177787780762
    8. '  
' → logprob: -13.751177787780762
    9. '<|end|>' → logprob: -13.876177787780762
    10. 'def' → logprob: -14.001177787780762

Token 880: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01820344291627407
    2. 'if' → logprob: -4.018203258514404
    3. ' if' → logprob: -9.893203735351562
    4. '    
' → logprob: -13.893203735351562
    5. '```' → logprob: -13.893203735351562
    6. '
' → logprob: -14.268203735351562
    7. 'is' → logprob: -16.143203735351562
    8. '	if' → logprob: -16.643203735351562
    9. 'direction' → logprob: -16.643203735351562
    10. 'return' → logprob: -17.143203735351562

Token 881: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2520955801010132
    2. '   ' → logprob: -1.5020955801010132
    3. ' if' → logprob: -8.752095222473145
    4. '```' → logprob: -12.127095222473145
    5. 'is' → logprob: -13.627095222473145
    6. '	if' → logprob: -14.377095222473145
    7. '    
' → logprob: -15.002095222473145
    8. 'return' → logprob: -15.377095222473145
    9. 'direction' → logprob: -15.752095222473145
    10. 'allowed' → logprob: -16.12709617614746

Token 882: ' opp' (ID: 6323)
  Prédit: 'opp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opp' → logprob: -0.6275147795677185
    2. ' opp' → logprob: -1.6275148391723633
    3. '(' → logprob: -2.1275148391723633
    4. 't' → logprob: -2.2525148391723633
    5. '(t' → logprob: -4.127514839172363
    6. ' (' → logprob: -4.377514839172363
    7. ' t' → logprob: -5.377514839172363
    8. '((' → logprob: -5.877514839172363
    9. 'op' → logprob: -6.127514839172363
    10. '(op' → logprob: -6.377514839172363

Token 883: '_dir' (ID: 9526)
  Prédit: '_dir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dir' → logprob: -3.054500666621607e-06
    2. 'dir' → logprob: -14.00000286102295
    3. 'Dir' → logprob: -14.37500286102295
    4. '[' → logprob: -14.62500286102295
    5. '[_' → logprob: -14.87500286102295
    6. '_DIR' → logprob: -15.87500286102295
    7. '```' → logprob: -16.375003814697266
    8. '_dirs' → logprob: -16.625003814697266
    9. '   ' → logprob: -16.875003814697266
    10. ''_' → logprob: -17.000003814697266

Token 884: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22543859481811523
    2. 'in' → logprob: -1.6004385948181152
    3. 'In' → logprob: -11.850439071655273
    4. '[' → logprob: -12.725439071655273
    5. ' ' → logprob: -12.725439071655273
    6. '	in' → logprob: -12.975439071655273
    7. '==' → logprob: -13.225439071655273
    8. '=='' → logprob: -13.350439071655273
    9. ''in' → logprob: -13.475439071655273
    10. ' ==' → logprob: -14.225439071655273

Token 885: ' ('' (ID: 9906)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '['' → logprob: -0.12810927629470825
    2. '('' → logprob: -2.7531092166900635
    3. ''N' → logprob: -3.6281092166900635
    4. ''E' → logprob: -3.7531092166900635
    5. ''' → logprob: -5.253109455108643
    6. '{'' → logprob: -6.753109455108643
    7. ''S' → logprob: -10.128108978271484
    8. ' ['' → logprob: -11.128108978271484
    9. '(['' → logprob: -11.753108978271484
    10. '"N' → logprob: -12.003108978271484

Token 886: 'N' (ID: 45)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.5765917897224426
    2. 'N' → logprob: -0.8265917897224426
    3. ''E' → logprob: -7.826591968536377
    4. ''N' → logprob: -8.576591491699219
    5. ''' → logprob: -10.576591491699219
    6. 'W' → logprob: -11.326591491699219
    7. 'S' → logprob: -11.826591491699219
    8. ''S' → logprob: -12.826591491699219
    9. ' E' → logprob: -12.826591491699219
    10. ' N' → logprob: -12.951591491699219

Token 887: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.02976749837398529
    2. '',' → logprob: -3.5297675132751465
    3. ''' → logprob: -12.279767036437988
    4. 'S' → logprob: -12.529767036437988
    5. '',"' → logprob: -12.529767036437988
    6. 'E' → logprob: -13.404767036437988
    7. ',' → logprob: -14.029767036437988
    8. 'N' → logprob: -14.529767036437988
    9. 'I' → logprob: -15.154767036437988
    10. '(','' → logprob: -15.154767036437988

Token 888: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -2.935296834039036e-06
    2. ''S' → logprob: -13.25000286102295
    3. ''' → logprob: -14.25000286102295
    4. ' S' → logprob: -15.12500286102295
    5. 'E' → logprob: -18.000003814697266
    6. '
' → logprob: -18.000003814697266
    7. '"S' → logprob: -18.125003814697266
    8. '{'' → logprob: -18.375003814697266
    9. '')' → logprob: -18.375003814697266
    10. '	S' → logprob: -18.500003814697266

Token 889: ''):
' (ID: 26539)
  Prédit: ''):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''):
' → logprob: -0.0031573958694934845
    2. '):
' → logprob: -6.378157615661621
    3. ''):' → logprob: -7.003157615661621
    4. '')' → logprob: -7.753157615661621
    5. ')' → logprob: -10.003157615661621
    6. '   ' → logprob: -10.253157615661621
    7. ''):
' → logprob: -10.878157615661621
    8. '):' → logprob: -12.378157615661621
    9. '       ' → logprob: -12.378157615661621
    10. ':' → logprob: -12.878157615661621

Token 890: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004897649050690234
    2. 'return' → logprob: -8.125490188598633
    3. '   ' → logprob: -9.000490188598633
    4. ' return' → logprob: -10.000490188598633
    5. 'if' → logprob: -11.375490188598633
    6. ' if' → logprob: -12.000490188598633
    7. '```' → logprob: -13.375490188598633
    8. '           ' → logprob: -13.625490188598633
    9. ':return' → logprob: -14.250490188598633
    10. ':' → logprob: -14.250490188598633

Token 891: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.01949586719274521
    2. '       ' → logprob: -4.019495964050293
    3. '   ' → logprob: -7.269495964050293
    4. ' return' → logprob: -7.394495964050293
    5. 'if' → logprob: -10.519495964050293
    6. '{return' → logprob: -12.769495964050293
    7. '#' (adapté à ' #') → logprob: -13.894495964050293
    8. ':return' → logprob: -14.019495964050293
    9. '	return' → logprob: -14.144495964050293
    10. '           ' → logprob: -14.394495964050293

Token 892: ' NS' (ID: 6950)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0019438649760559201
    2. 'if' → logprob: -6.501944065093994
    3. '   ' → logprob: -7.751944065093994
    4. ' return' → logprob: -11.626943588256836
    5. '       ' → logprob: -13.001943588256836
    6. '
' → logprob: -15.876943588256836
    7. '           ' → logprob: -16.376943588256836
    8. 'result' → logprob: -17.501943588256836
    9. '	return' → logprob: -17.626943588256836
    10. '```' → logprob: -17.626943588256836

Token 893: ' green' (ID: 8851)
  Prédit: 'green'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'green' → logprob: -0.6250746846199036
    2. ' green' → logprob: -0.8750746846199036
    3. '_green' → logprob: -3.250074625015259
    4. 'if' → logprob: -5.750074863433838
    5. '   ' → logprob: -6.750074863433838
    6. 'return' → logprob: -7.000074863433838
    7. '_state' → logprob: -7.250074863433838
    8. ' if' → logprob: -7.375074863433838
    9. 'def' → logprob: -7.875074863433838
    10. 'Green' → logprob: -8.56257438659668

Token 894: ' first' (ID: 1577)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007109133061021566
    2. '=' → logprob: -5.88210916519165
    3. 'return' → logprob: -5.88210916519165
    4. ' =' → logprob: -7.00710916519165
    5. ':' → logprob: -8.382108688354492
    6. 'if' → logprob: -9.632108688354492
    7. ' return' → logprob: -9.757108688354492
    8. '   ' → logprob: -9.882108688354492
    9. ':return' → logprob: -10.007108688354492
    10. '==' → logprob: -10.257108688354492

Token 895: ' k' (ID: 372)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008517766371369362
    2. 'return' → logprob: -5.758517742156982
    3. '   ' → logprob: -6.383517742156982
    4. ' =' → logprob: -6.883517742156982
    5. 'if' → logprob: -7.258517742156982
    6. '=' → logprob: -7.258517742156982
    7. ' return' → logprob: -8.00851821899414
    8. ':' → logprob: -8.25851821899414
    9. ' if' → logprob: -8.38351821899414
    10. ' and' → logprob: -9.25851821899414

Token 896: ' minutes' (ID: 5438)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.8376001119613647
    2. 'and' → logprob: -1.7126001119613647
    3. ' and' → logprob: -1.8376001119613647
    4. ' <=' → logprob: -2.5876002311706543
    5. 'minutes' → logprob: -2.7126002311706543
    6. ':' → logprob: -3.8376002311706543
    7. 'if' → logprob: -4.212600231170654
    8. '   ' → logprob: -4.337600231170654
    9. '       ' → logprob: -4.587600231170654
    10. '>' → logprob: -4.837600231170654

Token 897: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006131939589977264
    2. 'return' → logprob: -8.12561321258545
    3. ' return' → logprob: -9.12561321258545
    4. ':' → logprob: -9.37561321258545
    5. '=' → logprob: -10.25061321258545
    6. ',' → logprob: -10.87561321258545
    7. ':return' → logprob: -11.25061321258545
    8. ' and' → logprob: -11.37561321258545
    9. '   ' → logprob: -11.50061321258545
    10. '           ' → logprob: -11.62561321258545

Token 898: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001577698567416519
    2. 'return' → logprob: -9.250157356262207
    3. ' return' → logprob: -11.250157356262207
    4. 'if' → logprob: -11.250157356262207
    5. ':' → logprob: -11.625157356262207
    6. ' if' → logprob: -12.125157356262207
    7. '=' → logprob: -12.250157356262207
    8. ' and' → logprob: -12.500157356262207
    9. '   ' → logprob: -12.625157356262207
    10. ' =' → logprob: -13.375157356262207

Token 899: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.39056074619293213
    2. '       ' → logprob: -1.1405607461929321
    3. ' return' → logprob: -5.765560626983643
    4. 'if' (adapté à ' if') → logprob: -8.1405611038208
    5. '   ' → logprob: -8.3905611038208
    6. '	return' → logprob: -11.1405611038208
    7. '{return' → logprob: -12.0155611038208
    8. ':return' → logprob: -12.7655611038208
    9. '           ' → logprob: -13.2655611038208
    10. ' if' → logprob: -13.5155611038208

Token 900: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -3.786196975852363e-05
    2. ' t' → logprob: -10.375038146972656
    3. '0' → logprob: -12.000038146972656
    4. '`t' → logprob: -15.875038146972656
    5. '   ' → logprob: -16.000038146972656
    6. '(t' → logprob: -16.250038146972656
    7. '	t' → logprob: -16.750038146972656
    8. ' ' → logprob: -18.875038146972656
    9. '<t' → logprob: -18.875038146972656
    10. '$t' → logprob: -19.000038146972656

Token 901: '_mod' (ID: 15325)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6427812576293945
    2. ' <' → logprob: -0.7677812576293945
    3. '_mod' → logprob: -4.8927812576293945
    4. '<t' → logprob: -6.1427812576293945
    5. 't' → logprob: -9.017781257629395
    6. ' ' → logprob: -9.392781257629395
    7. '<p' → logprob: -10.142781257629395
    8. '<int' → logprob: -10.142781257629395
    9. '%' → logprob: -10.517781257629395
    10. '   ' → logprob: -10.642781257629395

Token 902: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.11334695667028427
    2. ' <' → logprob: -2.238347053527832
    3. '<t' → logprob: -8.488347053527832
    4. '<p' → logprob: -9.988347053527832
    5. '<n' → logprob: -9.988347053527832
    6. '<N' → logprob: -10.613347053527832
    7. '<K' → logprob: -10.738347053527832
    8. '<int' → logprob: -10.863347053527832
    9. '<len' → logprob: -11.113347053527832
    10. '<class' → logprob: -11.363347053527832

Token 903: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.723973582556937e-05
    2. ' k' → logprob: -11.000017166137695
    3. 'signal' → logprob: -15.375017166137695
    4. '   ' → logprob: -15.625017166137695
    5. 'signals' → logprob: -15.875017166137695
    6. '	k' → logprob: -19.125017166137695
    7. ' ' → logprob: -19.750017166137695
    8. '_k' → logprob: -20.000017166137695
    9. '{k' → logprob: -20.000017166137695
    10. ' signals' → logprob: -20.125017166137695

Token 904: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.06540416926145554
    2. ':' → logprob: -2.815404176712036
    3. '       ' → logprob: -6.190403938293457
    4. ':return' → logprob: -7.065403938293457
    5. '           ' → logprob: -7.690403938293457
    6. '==' → logprob: -10.940403938293457
    7. '):
' → logprob: -11.065403938293457
    8. ' :
' → logprob: -11.440403938293457
    9. '   ' → logprob: -12.065403938293457
    10. ':
' → logprob: -12.065403938293457

Token 905: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10466007888317108
    2. 'return' → logprob: -2.4796600341796875
    3. ' return' → logprob: -4.2296600341796875
    4. '       ' → logprob: -6.9796600341796875
    5. '               ' → logprob: -9.979660034179688
    6. '	       ' → logprob: -10.979660034179688
    7. ':return' → logprob: -11.104660034179688
    8. '
' → logprob: -11.854660034179688
    9. '	return' → logprob: -11.979660034179688
    10. '		' → logprob: -11.979660034179688

Token 906: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.04069443792104721
    2. '       ' → logprob: -3.29069447517395
    3. ' return' → logprob: -6.040694236755371
    4. '           ' → logprob: -8.665694236755371
    5. '	return' → logprob: -9.415694236755371
    6. '               ' → logprob: -11.540694236755371
    7. '   ' → logprob: -12.165694236755371
    8. '	       ' → logprob: -15.790694236755371
    9. '{return' → logprob: -15.915694236755371
    10. '	' → logprob: -16.040695190429688

Token 907: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -1.9361264946837764e-07
    2. ' True' → logprob: -16.0
    3. '   ' → logprob: -21.5
    4. 'False' → logprob: -23.0
    5. '(True' → logprob: -23.875
    6. 'true' → logprob: -24.125
    7. '=True' → logprob: -26.625
    8. '  ' → logprob: -27.875
    9. '1' → logprob: -28.125
    10. '       ' → logprob: -29.0

Token 908: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016124693676829338
    2. '   ' → logprob: -4.141124725341797
    3. ' else' → logprob: -10.516124725341797
    4. 'else' → logprob: -10.516124725341797
    5. '	' → logprob: -10.891124725341797
    6. '
' → logprob: -12.266124725341797
    7. '<|end|>' → logprob: -13.016124725341797
    8. 'return' → logprob: -13.141124725341797
    9. '	else' → logprob: -13.391124725341797
    10. '	   ' → logprob: -13.516124725341797

Token 909: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012402518652379513
    2. '   ' → logprob: -4.512402534484863
    3. 'else' → logprob: -6.887402534484863
    4. ' else' → logprob: -8.512402534484863
    5. 'return' → logprob: -10.137402534484863
    6. '	' → logprob: -10.262402534484863
    7. 'elif' → logprob: -10.762402534484863
    8. '           ' → logprob: -11.887402534484863
    9. '
' → logprob: -12.137402534484863
    10. '	else' → logprob: -12.262402534484863

Token 910: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5909989476203918
    2. '   ' → logprob: -1.465998888015747
    3. 'else' (adapté à ' else') → logprob: -1.965998888015747
    4. ' else' → logprob: -2.590998888015747
    5. '	else' → logprob: -8.715998649597168
    6. 'return' → logprob: -9.215998649597168
    7. '
' → logprob: -10.090998649597168
    8. 'elif' → logprob: -10.590998649597168
    9. '           ' → logprob: -10.715998649597168
    10. '	' → logprob: -10.715998649597168

Token 911: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1751289814710617
    2. ':' → logprob: -2.425128936767578
    3. ':
' → logprob: -2.675128936767578
    4. '       ' → logprob: -6.050128936767578
    5. ':return' → logprob: -7.800128936767578
    6. 'return' → logprob: -9.050128936767578
    7. '	       ' → logprob: -9.050128936767578
    8. ' return' → logprob: -9.050128936767578
    9. '          ' → logprob: -9.925128936767578
    10. '   ' → logprob: -10.425128936767578

Token 912: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15041792392730713
    2. 'return' → logprob: -2.1504178047180176
    3. ' return' → logprob: -4.150417804718018
    4. '       ' → logprob: -4.900417804718018
    5. '   ' → logprob: -11.775418281555176
    6. '```' → logprob: -13.025418281555176
    7. '               ' → logprob: -13.150418281555176
    8. '	return' → logprob: -14.150418281555176
    9. '	       ' → logprob: -14.275418281555176
    10. '          ' → logprob: -14.525418281555176

Token 913: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0024832691997289658
    2. ' return' → logprob: -6.002483367919922
    3. '       ' → logprob: -12.002483367919922
    4. '   ' → logprob: -14.127483367919922
    5. '           ' → logprob: -14.252483367919922
    6. '	return' → logprob: -16.252483367919922
    7. '```' → logprob: -18.752483367919922
    8. ' ' → logprob: -19.627483367919922
    9. 'False' → logprob: -19.752483367919922
    10. '               ' → logprob: -19.877483367919922

Token 914: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: 0.0
    2. ' False' → logprob: -16.75
    3. '(False' → logprob: -23.0
    4. 'false' → logprob: -24.0
    5. '=False' → logprob: -24.125
    6. '   ' → logprob: -26.5
    7. '0' → logprob: -27.125
    8. '```' → logprob: -27.25
    9. 'True' → logprob: -27.375
    10. '_false' → logprob: -28.375

Token 915: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007563813705928624
    2. 'else' → logprob: -8.12575626373291
    3. '<|end|>' → logprob: -8.12575626373291
    4. ' else' → logprob: -9.62575626373291
    5. '       ' → logprob: -10.00075626373291
    6. 'elif' → logprob: -10.62575626373291
    7. '    
' → logprob: -11.62575626373291
    8. ')' → logprob: -12.25075626373291
    9. '<|end|>' → logprob: -13.00075626373291
    10. '	else' → logprob: -13.00075626373291

Token 916: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023596003651618958
    2. 'else' → logprob: -3.7735960483551025
    3. 'elif' → logprob: -8.773595809936523
    4. ' else' → logprob: -8.898595809936523
    5. '       ' → logprob: -10.273595809936523
    6. '```' → logprob: -11.148595809936523
    7. '	else' → logprob: -12.148595809936523
    8. 'if' → logprob: -13.273595809936523
    9. '<|end|>' → logprob: -13.273595809936523
    10. ' elif' → logprob: -14.898595809936523

Token 917: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48569366335868835
    2. 'else' (adapté à ' else') → logprob: -0.9856936931610107
    3. ' else' → logprob: -5.235693454742432
    4. 'if' → logprob: -5.485693454742432
    5. 'elif' → logprob: -6.235693454742432
    6. ' if' → logprob: -9.36069393157959
    7. ' elif' → logprob: -10.86069393157959
    8. '
' → logprob: -11.98569393157959
    9. '```' → logprob: -12.36069393157959
    10. ' ' → logprob: -13.23569393157959

Token 918: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.35956406593322754
    2. '       ' → logprob: -1.2345640659332275
    3. ':
' → logprob: -4.609563827514648
    4. '   ' → logprob: -7.484563827514648
    5. '{' → logprob: -8.734563827514648
    6. ':return' → logprob: -8.984563827514648
    7. 'if' → logprob: -9.734563827514648
    8. '           ' → logprob: -9.984563827514648
    9. '<|end|>' → logprob: -10.734563827514648
    10. ' :' → logprob: -10.984563827514648

Token 919: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018422778695821762
    2. 'if' → logprob: -4.393422603607178
    3. ' if' → logprob: -5.143422603607178
    4. '   ' → logprob: -10.268423080444336
    5. 'return' → logprob: -11.643423080444336
    6. '#' → logprob: -12.143423080444336
    7. '           ' → logprob: -12.393423080444336
    8. '```' → logprob: -12.768423080444336
    9. '	if' → logprob: -14.018423080444336
    10. ' return' → logprob: -14.643423080444336

Token 920: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7057308554649353
    2. 'return' → logprob: -0.7057308554649353
    3. '       ' → logprob: -4.83073091506958
    4. ' if' → logprob: -5.70573091506958
    5. ' return' → logprob: -6.83073091506958
    6. '   ' → logprob: -9.205730438232422
    7. '           ' → logprob: -12.205730438232422
    8. '#' (adapté à ' #') → logprob: -12.455730438232422
    9. '```' → logprob: -12.830730438232422
    10. '	return' → logprob: -13.330730438232422

Token 921: ' EW' (ID: 143307)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.001093427068553865
    2. ' if' → logprob: -7.00109338760376
    3. 'return' → logprob: -8.876093864440918
    4. '       ' → logprob: -10.626093864440918
    5. '   ' → logprob: -11.501093864440918
    6. '           ' → logprob: -12.251093864440918
    7. 't' → logprob: -13.501093864440918
    8. '```' → logprob: -13.751093864440918
    9. ' return' → logprob: -14.501093864440918
    10. ' t' → logprob: -17.1260929107666

Token 922: ' green' (ID: 8851)
  Prédit: ' green'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' green' → logprob: -0.43195849657058716
    2. 'green' → logprob: -1.0569584369659424
    3. '_green' → logprob: -5.8069586753845215
    4. 'if' → logprob: -9.181958198547363
    5. ' if' → logprob: -10.306958198547363
    6. '   ' → logprob: -10.306958198547363
    7. 'return' → logprob: -11.431958198547363
    8. '绿' → logprob: -11.806958198547363
    9. '.green' → logprob: -11.806958198547363
    10. '       ' → logprob: -12.306958198547363

Token 923: ' second' (ID: 3099)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5269720554351807
    2. ' if' → logprob: -1.0269720554351807
    3. '       ' → logprob: -3.1519720554351807
    4. '   ' → logprob: -5.151971817016602
    5. ':' → logprob: -7.276971817016602
    6. '=' → logprob: -7.401971817016602
    7. ' =' → logprob: -7.401971817016602
    8. '           ' → logprob: -8.151971817016602
    9. 'return' → logprob: -8.401971817016602
    10. '```' → logprob: -8.651971817016602

Token 924: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.008215250447392464
    2. ' k' → logprob: -5.133215427398682
    3. '_k' → logprob: -6.133215427398682
    4. '(k' → logprob: -9.633214950561523
    5. ' (' → logprob: -11.508214950561523
    6. '   ' → logprob: -11.633214950561523
    7. 't' → logprob: -11.883214950561523
    8. '[k' → logprob: -12.133214950561523
    9. '{k' → logprob: -12.508214950561523
    10. ' ' → logprob: -12.758214950561523

Token 925: ' minutes' (ID: 5438)
  Prédit: 'minutes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minutes' → logprob: -0.8052544593811035
    2. '_minutes' → logprob: -0.8052544593811035
    3. ' minutes' → logprob: -2.9302544593811035
    4. '_mod' → logprob: -3.6802544593811035
    5. '_min' → logprob: -4.9302544593811035
    6. '   ' → logprob: -5.3052544593811035
    7. 'min' → logprob: -5.4302544593811035
    8. ':' → logprob: -6.0552544593811035
    9. '分钟' → logprob: -6.4302544593811035
    10. '>' → logprob: -6.9302544593811035

Token 926: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005092868115752935
    2. 'if' → logprob: -5.755093097686768
    3. '           ' → logprob: -6.880093097686768
    4. ' if' → logprob: -7.380093097686768
    5. '   ' → logprob: -8.88009262084961
    6. 'return' → logprob: -9.25509262084961
    7. '```' → logprob: -11.75509262084961
    8. '
' → logprob: -11.88009262084961
    9. ' return' → logprob: -12.38009262084961
    10. ':' → logprob: -13.75509262084961

Token 927: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1092311218380928
    2. 'if' → logprob: -2.6092312335968018
    3. '           ' → logprob: -4.359230995178223
    4. 'return' → logprob: -4.609230995178223
    5. ' if' → logprob: -5.234230995178223
    6. '   ' → logprob: -6.484230995178223
    7. ' return' → logprob: -8.484230995178223
    8. '==' → logprob: -10.984230995178223
    9. '```' → logprob: -11.359230995178223
    10. '=' → logprob: -11.484230995178223

Token 928: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6976487040519714
    2. 'return' → logprob: -0.6976487040519714
    3. ' return' → logprob: -6.572648525238037
    4. ' if' → logprob: -6.572648525238037
    5. '   ' → logprob: -6.822648525238037
    6. '       ' → logprob: -7.572648525238037
    7. '           ' → logprob: -9.322649002075195
    8. '{return' → logprob: -14.447649002075195
    9. ' ' → logprob: -14.697649002075195
    10. '	return' → logprob: -14.822649002075195

Token 929: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0022414892446249723
    2. ' t' → logprob: -6.127241611480713
    3. 'k' → logprob: -10.252241134643555
    4. '   ' → logprob: -11.252241134643555
    5. '`t' → logprob: -12.752241134643555
    6. '(t' → logprob: -13.127241134643555
    7. ' ' → logprob: -14.002241134643555
    8. '	t' → logprob: -14.377241134643555
    9. '           ' → logprob: -14.752241134643555
    10. ' k' → logprob: -15.002241134643555

Token 930: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -5.3120038501219824e-05
    2. 'mod' → logprob: -10.250053405761719
    3. '>=' → logprob: -11.375053405761719
    4. 't' → logprob: -12.625053405761719
    5. ' >=' → logprob: -13.625053405761719
    6. '%' → logprob: -15.000053405761719
    7. '_MOD' → logprob: -15.125053405761719
    8. '<' → logprob: -15.500053405761719
    9. '<t' → logprob: -15.500053405761719
    10. 'Mod' → logprob: -16.25005340576172

Token 931: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.3529875874519348
    2. '>=' → logprob: -1.22798752784729
    3. ' <' → logprob: -5.977987766265869
    4. '<' → logprob: -6.227987766265869
    5. ']>=' → logprob: -11.602987289428711
    6. ')>=' → logprob: -12.102987289428711
    7. ' ' → logprob: -12.727987289428711
    8. '≥' → logprob: -12.977987289428711
    9. '   ' → logprob: -13.227987289428711
    10. '```' → logprob: -13.727987289428711

Token 932: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00014013137842994183
    2. ' k' → logprob: -8.875140190124512
    3. 'signal' → logprob: -15.375140190124512
    4. '   ' → logprob: -17.625139236450195
    5. '	k' → logprob: -18.500139236450195
    6. 'signals' → logprob: -18.625139236450195
    7. '0' → logprob: -19.125139236450195
    8. '(k' → logprob: -19.375139236450195
    9. '{k' → logprob: -19.375139236450195
    10. ' ' → logprob: -19.875139236450195

Token 933: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4642201364040375
    2. ':' → logprob: -1.4642201662063599
    3. '           ' → logprob: -2.0892200469970703
    4. '       ' → logprob: -4.83922004699707
    5. ':return' → logprob: -4.83922004699707
    6. '):
' → logprob: -9.08922004699707
    7. ' and' → logprob: -9.46422004699707
    8. '          ' → logprob: -9.96422004699707
    9. 'return' → logprob: -10.08922004699707
    10. '   ' → logprob: -10.21422004699707

Token 934: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00042209390085190535
    2. 'return' → logprob: -8.250422477722168
    3. ' return' → logprob: -9.125422477722168
    4. '       ' → logprob: -10.750422477722168
    5. '               ' → logprob: -10.750422477722168
    6. '	       ' → logprob: -13.000422477722168
    7. ':return' → logprob: -13.125422477722168
    8. '   ' → logprob: -13.750422477722168
    9. '          ' → logprob: -14.000422477722168
    10. '		' → logprob: -14.125422477722168

Token 935: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.02509334683418274
    2. ' return' → logprob: -4.2750935554504395
    3. '           ' → logprob: -4.5250935554504395
    4. '               ' → logprob: -10.525093078613281
    5. '       ' → logprob: -11.775093078613281
    6. '   ' → logprob: -13.650093078613281
    7. '	return' → logprob: -14.150093078613281
    8. '          ' → logprob: -16.77509307861328
    9. ':return' → logprob: -17.15009307861328
    10. '{return' → logprob: -17.52509307861328

Token 936: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -6.704273118884885e-07
    2. ' True' → logprob: -14.250000953674316
    3. 'False' → logprob: -21.875
    4. '   ' → logprob: -23.125
    5. '(True' → logprob: -23.75
    6. 'true' → logprob: -23.875
    7. '=True' → logprob: -25.875
    8. '           ' → logprob: -26.0
    9. '       ' → logprob: -26.5
    10. ' ' → logprob: -26.875

Token 937: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.056394707411527634
    2. ' else' → logprob: -3.0563948154449463
    3. 'else' → logprob: -5.056394577026367
    4. '<|end|>' → logprob: -7.056394577026367
    5. '   ' → logprob: -7.931394577026367
    6. '	else' → logprob: -9.181394577026367
    7. '	' → logprob: -10.681394577026367
    8. '<|end|>' → logprob: -11.181394577026367
    9. '           ' → logprob: -11.556394577026367
    10. ')' → logprob: -11.681394577026367

Token 938: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08001638203859329
    2. 'else' → logprob: -2.9550163745880127
    3. ' else' → logprob: -3.7050163745880127
    4. '   ' → logprob: -9.080016136169434
    5. '	else' → logprob: -9.705016136169434
    6. '	' → logprob: -11.330016136169434
    7. '<|end|>' → logprob: -11.330016136169434
    8. '           ' → logprob: -11.580016136169434
    9. '```' → logprob: -12.080016136169434
    10. 'return' → logprob: -13.580016136169434

Token 939: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.06052621454000473
    2. ' else' → logprob: -3.310526132583618
    3. '       ' → logprob: -3.810526132583618
    4. 'return' → logprob: -9.310525894165039
    5. '   ' → logprob: -12.685525894165039
    6. '           ' → logprob: -13.435525894165039
    7. '	else' → logprob: -13.435525894165039
    8. '
' → logprob: -15.060525894165039
    9. '```' → logprob: -15.310525894165039
    10. '     ' → logprob: -15.685525894165039

Token 940: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017930537462234497
    2. ':
' → logprob: -4.392930507659912
    3. ':' → logprob: -5.517930507659912
    4. 'return' → logprob: -7.517930507659912
    5. ' return' → logprob: -8.14293098449707
    6. ':return' → logprob: -8.51793098449707
    7. '          ' → logprob: -8.89293098449707
    8. '               ' → logprob: -9.64293098449707
    9. '       ' → logprob: -9.76793098449707
    10. '   ' → logprob: -9.89293098449707

Token 941: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3768185079097748
    2. 'False' → logprob: -1.3768185377120972
    3. 'return' → logprob: -2.8768184185028076
    4. ' return' → logprob: -5.751818656921387
    5. ' False' → logprob: -6.251818656921387
    6. '   ' → logprob: -9.501818656921387
    7. '       ' → logprob: -10.376818656921387
    8. '               ' → logprob: -10.751818656921387
    9. '(False' → logprob: -11.001818656921387
    10. '	return' → logprob: -12.376818656921387

Token 942: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -5.908022285439074e-05
    2. ' return' → logprob: -9.750059127807617
    3. 'False' → logprob: -14.250059127807617
    4. '           ' → logprob: -16.250059127807617
    5. '   ' → logprob: -19.875059127807617
    6. '	return' → logprob: -21.000059127807617
    7. '       ' → logprob: -21.250059127807617
    8. 'Return' → logprob: -22.000059127807617
    9. '{return' → logprob: -22.375059127807617
    10. ':return' → logprob: -22.625059127807617

Token 943: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: 0.0
    2. ' False' → logprob: -19.5
    3. 'false' → logprob: -22.125
    4. 'True' → logprob: -24.125
    5. '(False' → logprob: -24.125
    6. '=False' → logprob: -25.0
    7. '_false' → logprob: -25.625
    8. '   ' → logprob: -26.25
    9. 'FALSE' → logprob: -27.5
    10. 'F' → logprob: -27.5

Token 944: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 945: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0003391574718989432
    2. '<|end|>' → logprob: -8.75033950805664
    3. '```' → logprob: -9.87533950805664
    4. '#' → logprob: -10.00033950805664
    5. 'import' → logprob: -10.50033950805664
    6. '<|end|>' → logprob: -10.75033950805664
    7. ' def' → logprob: -11.00033950805664
    8. '(' → logprob: -12.50033950805664
    9. '.' → logprob: -12.87533950805664
    10. '[' → logprob: -13.12533950805664

Token 946: ' wait' (ID: 5238)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.03567507863044739
    2. 'short' → logprob: -3.660675048828125
    3. 'solve' → logprob: -5.660675048828125
    4. ' d' → logprob: -6.035675048828125
    5. 'find' → logprob: -7.160675048828125
    6. 'a' → logprob: -7.410675048828125
    7. ' shortest' → logprob: -7.660675048828125
    8. 'astar' → logprob: -7.785675048828125
    9. 'main' → logprob: -8.035675048828125
    10. 'b' → logprob: -8.410675048828125

Token 947: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.05200490728020668
    2. '_for' → logprob: -3.927004814147949
    3. '_until' → logprob: -4.677004814147949
    4. '_' → logprob: -5.052004814147949
    5. 'ing' → logprob: -5.052004814147949
    6. '_times' → logprob: -6.052004814147949
    7. '_at' → logprob: -6.302004814147949
    8. '_to' → logprob: -6.552004814147949
    9. 'time' → logprob: -6.677004814147949
    10. 'def' → logprob: -7.552004814147949

Token 948: '_to' (ID: 5089)
  Prédit: '_at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_at' → logprob: -0.5764946937561035
    2. '(signal' → logprob: -1.0764946937561035
    3. '(inter' → logprob: -2.9514946937561035
    4. '(t' → logprob: -4.4514946937561035
    5. '(' → logprob: -4.4514946937561035
    6. '(at' → logprob: -4.8264946937561035
    7. '(arr' → logprob: -5.5764946937561035
    8. '(current' → logprob: -6.2014946937561035
    9. '_(' → logprob: -6.3264946937561035
    10. '(time' → logprob: -6.7014946937561035

Token 949: '_enter' (ID: 88636)
  Prédit: '_enter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_enter' → logprob: -0.20434211194515228
    2. 'enter' → logprob: -1.9543421268463135
    3. 'pro' → logprob: -4.204341888427734
    4. '_cross' → logprob: -5.329341888427734
    5. '_pass' → logprob: -5.579341888427734
    6. 'cross' → logprob: -5.829341888427734
    7. 'pass' → logprob: -5.954341888427734
    8. '_pro' → logprob: -5.954341888427734
    9. 'arr' → logprob: -6.079341888427734
    10. '_arr' → logprob: -6.079341888427734

Token 950: '_signal' (ID: 50953)
  Prédit: '(signal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(signal' → logprob: -0.10129062831401825
    2. '(inter' → logprob: -2.351290702819824
    3. '(' → logprob: -7.351290702819824
    4. '(sign' → logprob: -7.851290702819824
    5. '(interval' → logprob: -11.351290702819824
    6. '(direction' → logprob: -11.726290702819824
    7. '(s' → logprob: -12.226290702819824
    8. '(arr' → logprob: -12.601290702819824
    9. '_signal' → logprob: -12.851290702819824
    10. '_inter' → logprob: -13.101290702819824

Token 951: '(inter' (ID: 62819)
  Prédit: '(inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(inter' → logprob: -0.06209877133369446
    2. '(signal' → logprob: -2.812098741531372
    3. '(sign' → logprob: -9.812098503112793
    4. '(' → logprob: -10.187098503112793
    5. '(interval' → logprob: -11.312098503112793
    6. '(def' → logprob: -11.562098503112793
    7. '(s' → logprob: -12.687098503112793
    8. ' (' → logprob: -12.937098503112793
    9. '(direction' → logprob: -12.937098503112793
    10. '((' → logprob: -13.187098503112793

Token 952: 'section' (ID: 6471)
  Prédit: 'section'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'section' → logprob: -0.002023923909291625
    2. 'er' → logprob: -6.627023696899414
    3. 'ection' → logprob: -7.377023696899414
    4. 'ese' → logprob: -10.252023696899414
    5. '(section' → logprob: -11.627023696899414
    6. 'ter' → logprob: -12.127023696899414
    7. 'intersection' → logprob: -12.377023696899414
    8. 'sections' → logprob: -12.627023696899414
    9. 'erse' → logprob: -12.627023696899414
    10. 'sect' → logprob: -12.752023696899414

Token 953: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.7432603272027336e-06
    2. ' ,' → logprob: -14.000001907348633
    3. ',d' → logprob: -15.625001907348633
    4. 'def' → logprob: -15.750001907348633
    5. ',s' → logprob: -15.875001907348633
    6. ',
' → logprob: -16.000001907348633
    7. '   ' → logprob: -16.500001907348633
    8. '_,' → logprob: -17.125001907348633
    9. 's' → logprob: -18.000001907348633
    10. '```' → logprob: -18.000001907348633

Token 954: ' dir' (ID: 5609)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dir' → logprob: -0.0006360700353980064
    2. ' dir' → logprob: -7.375636100769043
    3. 'direction' → logprob: -11.875636100769043
    4. 'dire' → logprob: -14.500636100769043
    5. '   ' → logprob: -14.625636100769043
    6. 'next' → logprob: -14.750636100769043
    7. '	dir' → logprob: -15.750636100769043
    8. 'Dir' → logprob: -15.875636100769043
    9. ' ' → logprob: -16.125635147094727
    10. 't' → logprob: -16.125635147094727

Token 955: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -2.4272752852994017e-05
    2. 'arr' → logprob: -11.62502384185791
    3. ')_' → logprob: -12.37502384185791
    4. ',_' → logprob: -12.50002384185791
    5. ',' → logprob: -13.00002384185791
    6. '):' → logprob: -13.87502384185791
    7. '   ' → logprob: -14.25002384185791
    8. ''_' → logprob: -14.37502384185791
    9. '_enter' → logprob: -14.50002384185791
    10. '```' → logprob: -14.62502384185791

Token 956: 'ive' (ID: 585)
  Prédit: 'ive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ive' → logprob: -7.3458322731312364e-06
    2. '_' → logprob: -13.375007629394531
    3. 'ieve' → logprob: -13.500007629394531
    4. 'rive' → logprob: -13.625007629394531
    5. '_arr' → logprob: -14.500007629394531
    6. 'i' → logprob: -14.625007629394531
    7. 'ives' → logprob: -14.625007629394531
    8. 'iv' → logprob: -15.250007629394531
    9. 'ived' → logprob: -15.375007629394531
    10. 'ivere' → logprob: -15.625007629394531

Token 957: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012415809032972902
    2. ',t' → logprob: -9.125123977661133
    3. ' ,' → logprob: -11.125123977661133
    4. '   ' → logprob: -14.875123977661133
    5. ',
' → logprob: -17.375123977661133
    6. ',time' → logprob: -17.375123977661133
    7. ',T' → logprob: -17.750123977661133
    8. '_,' → logprob: -18.375123977661133
    9. ',s' → logprob: -18.500123977661133
    10. 't' → logprob: -18.875123977661133

Token 958: ' current' (ID: 2208)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0032744447235018015
    2. 'current' → logprob: -6.503274440765381
    3. ' t' → logprob: -6.878274440765381
    4. 'arrival' → logprob: -7.628274440765381
    5. 'signals' → logprob: -9.003274917602539
    6. 'time' → logprob: -10.003274917602539
    7. 'curr' → logprob: -10.253274917602539
    8. ' current' → logprob: -10.628274917602539
    9. 'arr' → logprob: -11.878274917602539
    10. 'signal' → logprob: -12.253274917602539

Token 959: '_time' (ID: 6425)
  Prédit: '_t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.0627833753824234
    2. '_time' → logprob: -2.8127834796905518
    3. 't' → logprob: -7.312783241271973
    4. '):' → logprob: -9.062783241271973
    5. 'time' → logprob: -11.187783241271973
    6. ')_' → logprob: -11.937783241271973
    7. ')' → logprob: -12.312783241271973
    8. '):
' → logprob: -13.562783241271973
    9. ',' → logprob: -13.687783241271973
    10. '   ' → logprob: -13.812783241271973

Token 960: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5978005528450012
    2. '):
' → logprob: -0.8478005528450012
    3. ',' → logprob: -3.8478004932403564
    4. '):
' → logprob: -9.097800254821777
    5. '):

' → logprob: -9.222800254821777
    6. '   ' → logprob: -9.722800254821777
    7. ')' → logprob: -11.597800254821777
    8. 'def' → logprob: -12.597800254821777
    9. ',t' → logprob: -12.972800254821777
    10. ' ):' → logprob: -13.097800254821777

Token 961: ' signals' (ID: 29026)
  Prédit: 'signals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'signals' → logprob: -0.01661066524684429
    2. ' signals' → logprob: -4.266610622406006
    3. 'k' → logprob: -6.516610622406006
    4. 'signal' → logprob: -7.266610622406006
    5. 't' → logprob: -8.891611099243164
    6. '   ' → logprob: -10.141611099243164
    7. ' k' → logprob: -10.766611099243164
    8. 'sign' → logprob: -11.141611099243164
    9. ' ' → logprob: -11.516611099243164
    10. 'interval' → logprob: -12.016611099243164

Token 962: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03818722441792488
    2. '):
' → logprob: -3.288187265396118
    3. '   ' → logprob: -9.288187026977539
    4. '):
' → logprob: -9.913187026977539
    5. ',' → logprob: -13.788187026977539
    6. '):

' → logprob: -14.038187026977539
    7. ')' → logprob: -14.413187026977539
    8. ' ):' → logprob: -14.538187026977539
    9. 'def' → logprob: -15.038187026977539
    10. ':' → logprob: -15.163187026977539

Token 963: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003054301778320223
    2. '```' → logprob: -8.25030517578125
    3. 'signal' → logprob: -11.12530517578125
    4. ' signal' → logprob: -11.87530517578125
    5. 'def' → logprob: -12.25030517578125
    6. 'k' → logprob: -12.37530517578125
    7. '       ' → logprob: -12.62530517578125
    8. '    ' → logprob: -13.25030517578125
    9. ':' → logprob: -13.37530517578125
    10. ' k' → logprob: -13.50030517578125

Token 964: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026325615122914314
    2. 'k' → logprob: -3.9013257026672363
    3. 'if' (adapté à ' if') → logprob: -5.651325702667236
    4. '```' → logprob: -6.401325702667236
    5. 'signal' → logprob: -8.151325225830078
    6. ' if' → logprob: -9.026325225830078
    7. ' k' → logprob: -9.401325225830078
    8. 'def' → logprob: -9.901325225830078
    9. '``' → logprob: -10.276325225830078
    10. '`' → logprob: -12.151325225830078

Token 965: ' intersection' (ID: 42002)
  Prédit: 'intersection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'intersection' → logprob: -0.04201758652925491
    2. ' intersection' → logprob: -3.292017698287964
    3. 'inter' → logprob: -5.542017459869385
    4. '(inter' → logprob: -10.667017936706543
    5. '   ' → logprob: -11.417017936706543
    6. 'not' → logprob: -11.792017936706543
    7. ' not' → logprob: -12.792017936706543
    8. 'interaction' → logprob: -13.042017936706543
    9. 'interval' → logprob: -13.917017936706543
    10. ' ' → logprob: -14.542017936706543

Token 966: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.07889385521411896
    2. 'not' → logprob: -2.5788938999176025
    3. ' in' → logprob: -12.578893661499023
    4. 'in' → logprob: -15.203893661499023
    5. '	not' → logprob: -15.203893661499023
    6. '   ' → logprob: -17.078893661499023
    7. '(not' → logprob: -17.203893661499023
    8. ')' → logprob: -17.703893661499023
    9. 'import' → logprob: -17.828893661499023
    10. '_not' → logprob: -18.078893661499023

Token 967: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2519516944885254
    2. 'in' → logprob: -1.5019516944885254
    3. 'signals' → logprob: -10.751951217651367
    4. ' signals' → logprob: -13.876951217651367
    5. '   ' → logprob: -16.251951217651367
    6. '_in' → logprob: -16.876951217651367
    7. 's' → logprob: -17.876951217651367
    8. 'In' → logprob: -18.001951217651367
    9. 'sign' → logprob: -18.251951217651367
    10. 'def' → logprob: -18.376951217651367

Token 968: ' signals' (ID: 29026)
  Prédit: 'signals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'signals' → logprob: -0.029751643538475037
    2. ' signals' → logprob: -3.5297515392303467
    3. 'signal' → logprob: -13.779751777648926
    4. 'sign' → logprob: -16.02975082397461
    5. 's' → logprob: -17.77975082397461
    6. '```' → logprob: -18.02975082397461
    7. 'sig' → logprob: -18.52975082397461
    8. 'Signals' → logprob: -19.02975082397461
    9. '{' → logprob: -19.15475082397461
    10. ' ' → logprob: -19.40475082397461

Token 969: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.37287744879722595
    2. ':
' → logprob: -1.6228774785995483
    3. '   ' → logprob: -2.872877359390259
    4. '       ' → logprob: -2.872877359390259
    5. ':return' → logprob: -7.747877597808838
    6. '=' → logprob: -8.99787712097168
    7. '	return' → logprob: -10.24787712097168
    8. '[' → logprob: -10.49787712097168
    9. '):
' → logprob: -10.62287712097168
    10. '<|end|>' → logprob: -10.74787712097168

Token 970: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0071049900725483894
    2. '   ' → logprob: -5.007104873657227
    3. ' k' → logprob: -8.757104873657227
    4. 'k' → logprob: -9.632104873657227
    5. 'return' → logprob: -10.132104873657227
    6. ' return' → logprob: -10.507104873657227
    7. '           ' → logprob: -10.632104873657227
    8. '     ' → logprob: -11.132104873657227
    9. '	   ' → logprob: -12.007104873657227
    10. '0' → logprob: -12.132104873657227

Token 971: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.014863736927509308
    2. '0' → logprob: -4.514863967895508
    3. ' return' → logprob: -6.264863967895508
    4. '   ' → logprob: -6.264863967895508
    5. '       ' → logprob: -12.889863967895508
    6. '	return' → logprob: -13.389863967895508
    7. ' ' → logprob: -14.639863967895508
    8. '1' → logprob: -16.639863967895508
    9. '{return' → logprob: -16.639863967895508
    10. ':return' → logprob: -17.139863967895508

Token 972: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04300125315785408
    2. ' ' → logprob: -3.168001174926758
    3. '   ' → logprob: -13.293001174926758
    4. '(' → logprob: -16.043001174926758
    5. '  ' → logprob: -16.793001174926758
    6. ' ' → logprob: -16.918001174926758
    7. ' (' → logprob: -17.418001174926758
    8. 'return' → logprob: -17.418001174926758
    9. 'None' → logprob: -17.855501174926758
    10. ' None' → logprob: -17.918001174926758

Token 973: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '   ' → logprob: -19.875
    4. '00' → logprob: -21.375
    5. '000' → logprob: -22.125
    6. '۰' → logprob: -22.875
    7. '```' → logprob: -23.25
    8. '(' → logprob: -23.625
    9. '[' → logprob: -23.875
    10. '`' → logprob: -24.0

Token 974: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5819604396820068
    2. '
' → logprob: -0.9569604396820068
    3. '    
' → logprob: -3.206960439682007
    4. '  
' → logprob: -4.831960678100586
    5. '<|end|>' → logprob: -6.331960678100586
    6. '   
' → logprob: -6.456960678100586
    7. ' 
' → logprob: -6.706960678100586
    8. '\n' → logprob: -7.206960678100586
    9. '  ' → logprob: -7.331960678100586
    10. ' ' → logprob: -7.956960678100586

Token 975: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.035220831632614136
    2. '
' → logprob: -4.660220623016357
    3. 'if' → logprob: -4.660220623016357
    4. 't' → logprob: -5.035220623016357
    5. 'current' → logprob: -5.910220623016357
    6. '```' → logprob: -6.160220623016357
    7. '    
' → logprob: -6.785220623016357
    8. 'return' → logprob: -6.910220623016357
    9. 'cycle' → logprob: -7.160220623016357
    10. 'signal' → logprob: -8.035221099853516

Token 976: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -0.17098571360111237
    2. '   ' → logprob: -1.9209856986999512
    3. ' k' → logprob: -4.545985698699951
    4. 'def' → logprob: -10.29598617553711
    5. '
' → logprob: -10.67098617553711
    6. 'signal' → logprob: -11.42098617553711
    7. '	k' → logprob: -11.67098617553711
    8. ' ' → logprob: -11.92098617553711
    9. '```' → logprob: -12.92098617553711
    10. ' signal' → logprob: -13.04598617553711

Token 977: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04300079494714737
    2. '=' → logprob: -3.1680006980895996
    3. '   ' → logprob: -14.543001174926758
    4. ',' → logprob: -14.918001174926758
    5. '[' → logprob: -15.293001174926758
    6. '=int' → logprob: -15.793001174926758
    7. '=k' → logprob: -16.168001174926758
    8. 'k' → logprob: -16.418001174926758
    9. '_signal' → logprob: -16.543001174926758
    10. 'signals' → logprob: -17.168001174926758

Token 978: ' signals' (ID: 29026)
  Prédit: 'signals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'signals' → logprob: -0.009756677784025669
    2. ' signals' → logprob: -4.634756565093994
    3. 'sign' → logprob: -14.509757041931152
    4. 'signal' → logprob: -16.134756088256836
    5. '   ' → logprob: -16.134756088256836
    6. ' signs' → logprob: -18.759756088256836
    7. 'sig' → logprob: -18.884756088256836
    8. 'Signals' → logprob: -19.009756088256836
    9. 'symbols' → logprob: -19.384756088256836
    10. ' ' → logprob: -19.384756088256836

Token 979: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. ' [' → logprob: -17.75
    3. '[in' → logprob: -17.875
    4. 'inter' → logprob: -18.375
    5. '(inter' → logprob: -18.5
    6. '[s' → logprob: -18.625
    7. '[assembly' → logprob: -18.75
    8. 'intersection' → logprob: -18.75
    9. 's' → logprob: -18.875
    10. '[
' → logprob: -19.0

Token 980: 'intersection' (ID: 170255)
  Prédit: 'intersection'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'intersection' → logprob: -0.00018577903392724693
    2. '[' → logprob: -8.7501859664917
    3. 'inter' → logprob: -11.0001859664917
    4. ' intersection' → logprob: -11.5001859664917
    5. '(inter' → logprob: -15.7501859664917
    6. ' ' → logprob: -16.625185012817383
    7. '[in' → logprob: -16.875185012817383
    8. 'interaction' → logprob: -16.875185012817383
    9. '```' → logprob: -17.250185012817383
    10. 'integration' → logprob: -18.000185012817383

Token 981: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.694425106048584
    2. ']
' → logprob: -0.694425106048584
    3. ')' → logprob: -7.319425106048584
    4. ')
' → logprob: -7.569425106048584
    5. 'def' → logprob: -10.319425582885742
    6. ']

' → logprob: -10.444425582885742
    7. ']
' → logprob: -10.694425582885742
    8. '[' → logprob: -12.444425582885742
    9. '   ' → logprob: -12.694425582885742
    10. '```' → logprob: -13.569425582885742

Token 982: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02517426200211048
    2. 'cycle' → logprob: -3.900174379348755
    3. ' cycle' → logprob: -5.525174140930176
    4. 't' → logprob: -7.900174140930176
    5. 'current' → logprob: -9.275174140930176
    6. '       ' → logprob: -10.400174140930176
    7. '```' → logprob: -10.525174140930176
    8. '
' → logprob: -11.025174140930176
    9. ' t' → logprob: -11.150174140930176
    10. 'signal' → logprob: -11.525174140930176

Token 983: ' cycle' (ID: 15839)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cycle' (adapté à ' cycle') → logprob: -0.048236992210149765
    2. 't' → logprob: -3.6732370853424072
    3. ' cycle' → logprob: -4.048236846923828
    4. '   ' → logprob: -5.923236846923828
    5. 'current' → logprob: -7.173236846923828
    6. ' t' → logprob: -8.798236846923828
    7. 'time' → logprob: -9.423236846923828
    8. 'opp' → logprob: -9.423236846923828
    9. 'c' → logprob: -9.548236846923828
    10. 'signal' → logprob: -9.548236846923828

Token 984: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04858771339058876
    2. '=' → logprob: -3.0485877990722656
    3. '   ' → logprob: -16.048587799072266
    4. ':' → logprob: -17.048587799072266
    5. ' ' → logprob: -17.173587799072266
    6. ',' → logprob: -17.423587799072266
    7. ' =
' → logprob: -17.798587799072266
    8. '```' → logprob: -17.798587799072266
    9. '＝' → logprob: -18.423587799072266
    10. '<|end|>' → logprob: -18.548587799072266

Token 985: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01815134845674038
    2. ' ' → logprob: -4.01815128326416
    3. '   ' → logprob: -14.64315128326416
    4. 'k' → logprob: -14.89315128326416
    5. '20' → logprob: -15.26815128326416
    6. '6' → logprob: -16.143152236938477
    7. '  ' → logprob: -16.518152236938477
    8. '24' → logprob: -16.893152236938477
    9. ' k' → logprob: -17.143152236938477
    10. '0' → logprob: -17.518152236938477

Token 986: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.518582762917504e-05
    2. ' ' → logprob: -9.37508487701416
    3. '   ' → logprob: -15.75008487701416
    4. 'k' → logprob: -16.000085830688477
    5. '6' → logprob: -18.750085830688477
    6. '20' → logprob: -18.750085830688477
    7. '(' → logprob: -19.125085830688477
    8. '  ' → logprob: -19.250085830688477
    9. '`' → logprob: -19.625085830688477
    10. '```' → logprob: -20.000085830688477

Token 987: '*k' (ID: 81061)
  Prédit: '*k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*k' → logprob: -0.0002538296685088426
    2. ' *' → logprob: -8.375253677368164
    3. '*' → logprob: -10.750253677368164
    4. 'k' → logprob: -13.250253677368164
    5. '*K' → logprob: -18.250253677368164
    6. '*(' → logprob: -19.125253677368164
    7. '*x' → logprob: -19.375253677368164
    8. '*c' → logprob: -19.375253677368164
    9. '```' → logprob: -19.375253677368164
    10. '**' → logprob: -20.000253677368164

Token 988: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10059353709220886
    2. '
' → logprob: -3.4755935668945312
    3. ' t' → logprob: -3.4755935668945312
    4. 't' → logprob: -3.6005935668945312
    5. '	t' → logprob: -6.100593566894531
    6. '    ' → logprob: -6.975593566894531
    7. 'current' → logprob: -7.475593566894531
    8. '
' → logprob: -7.725593566894531
    9. '```' → logprob: -8.225593566894531
    10. '    
' → logprob: -8.350593566894531

Token 989: '   ' (ID: 271)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6012416481971741
    2. '   ' → logprob: -1.2262415885925293
    3. ' t' → logprob: -1.8512415885925293
    4. 'mod' → logprob: -7.726241588592529
    5. 'time' → logprob: -8.601242065429688
    6. ' time' → logprob: -8.726242065429688
    7. ' mod' → logprob: -8.976242065429688
    8. '
' → logprob: -9.101242065429688
    9. '	t' → logprob: -9.226242065429688
    10. ' current' → logprob: -9.726242065429688

Token 990: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.0027167838998138905
    2. 'mod' → logprob: -6.377717018127441
    3. 'time' → logprob: -7.252717018127441
    4. 'phase' → logprob: -9.127717018127441
    5. '   ' → logprob: -9.877717018127441
    6. 'current' → logprob: -10.502717018127441
    7. 'rem' → logprob: -10.877717018127441
    8. 'offset' → logprob: -10.877717018127441
    9. ' t' → logprob: -11.127717018127441
    10. 'r' → logprob: -11.502717018127441

Token 991: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -0.0008465526043437421
    2. 'mod' → logprob: -7.8758463859558105
    3. ' =' → logprob: -8.125846862792969
    4. '=' → logprob: -8.750846862792969
    5. '_' → logprob: -11.875846862792969
    6. 't' → logprob: -14.250846862792969
    7. '_rem' → logprob: -14.250846862792969
    8. '%' → logprob: -14.250846862792969
    9. '_cycle' → logprob: -14.500846862792969
    10. '=_' → logprob: -14.625846862792969

Token 992: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759395360946655
    2. '=' → logprob: -0.8259395360946655
    3. ')' → logprob: -17.200939178466797
    4. ' ' → logprob: -17.450939178466797
    5. '＝' → logprob: -17.450939178466797
    6. '   ' → logprob: -17.700939178466797
    7. ',' → logprob: -18.325939178466797
    8. '=
' → logprob: -18.950939178466797
    9. ' =
' → logprob: -19.325939178466797
    10. ' ' → logprob: -19.700939178466797

Token 993: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.03858071565628052
    2. 'current' → logprob: -3.2885806560516357
    3. '(current' → logprob: -7.538580894470215
    4. ' (' → logprob: -11.913580894470215
    5. '(' → logprob: -15.288580894470215
    6. '	current' → logprob: -17.7885799407959
    7. '$current' → logprob: -18.7885799407959
    8. '[current' → logprob: -19.1635799407959
    9. ',current' → logprob: -19.6635799407959
    10. '=current' → logprob: -19.6635799407959

Token 994: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.1382373869419098
    2. '%' → logprob: -2.763237476348877
    3. ' %' → logprob: -2.763237476348877
    4. '_mod' → logprob: -6.388237476348877
    5. '_' → logprob: -7.388237476348877
    6. ' _' → logprob: -8.513236999511719
    7. '_token' → logprob: -9.138236999511719
    8. ' ' → logprob: -9.138236999511719
    9. ')' → logprob: -10.263236999511719
    10. '_t' → logprob: -10.513236999511719

Token 995: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.20161233842372894
    2. '%' → logprob: -1.7016123533248901
    3. '=' → logprob: -8.82661247253418
    4. ' =' → logprob: -9.95161247253418
    5. '%=' → logprob: -12.95161247253418
    6. ' %=' → logprob: -13.45161247253418
    7. ' ' → logprob: -15.32661247253418
    8. '   ' → logprob: -15.45161247253418
    9. ' ' → logprob: -15.82661247253418
    10. ')' → logprob: -16.82661247253418

Token 996: ' cycle' (ID: 15839)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -2.7610454708337784e-05
    2. ' cycle' → logprob: -10.500027656555176
    3. '(' → logprob: -16.87502670288086
    4. 'chain' → logprob: -18.75002670288086
    5. 'cycl' → logprob: -19.37502670288086
    6. '-cycle' → logprob: -19.87502670288086
    7. '(c' → logprob: -20.00002670288086
    8. '_cycle' → logprob: -21.12502670288086
    9. 'cycles' → logprob: -21.25002670288086
    10. 'cy' → logprob: -21.25002670288086

Token 997: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000487276294734329
    2. ' if' → logprob: -8.000487327575684
    3. '```' → logprob: -9.500487327575684
    4. 'if' → logprob: -10.250487327575684
    5. '	if' → logprob: -11.000487327575684
    6. ',' → logprob: -12.125487327575684
    7. '   ' → logprob: -12.375487327575684
    8. '<|end|>' → logprob: -12.750487327575684
    9. 'If' → logprob: -12.875487327575684
    10. '=' → logprob: -13.500487327575684

Token 998: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3257366716861725
    2. 'if' → logprob: -1.32573664188385
    3. ' if' → logprob: -4.5757365226745605
    4. '```' → logprob: -6.2007365226745605
    5. 'direction' → logprob: -10.950736999511719
    6. '	if' → logprob: -11.075736999511719
    7. '``' → logprob: -11.200736999511719
    8. 'next' → logprob: -11.575736999511719
    9. 'dir' → logprob: -12.575736999511719
    10. '       ' → logprob: -13.575736999511719

Token 999: ' opp' (ID: 6323)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.22741717100143433
    2. 'opp' (adapté à ' opp') → logprob: -1.977417230606079
    3. '   ' → logprob: -2.852417230606079
    4. '```' → logprob: -5.8524169921875
    5. 'op' → logprob: -6.4774169921875
    6. ' if' → logprob: -6.6024169921875
    7. ' opp' → logprob: -7.6024169921875
    8. 'dir' → logprob: -8.2274169921875
    9. '``' → logprob: -8.7274169921875
    10. 'direction' → logprob: -9.3524169921875

Token 1000: '_dir' (ID: 9526)
  Prédit: '_dir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dir' → logprob: -3.4881879400927573e-05
    2. 'dir' → logprob: -11.000035285949707
    3. '_direction' → logprob: -11.250035285949707
    4. 'direction' → logprob: -13.250035285949707
    5. 'Dir' → logprob: -14.000035285949707
    6. '	dir' → logprob: -14.250035285949707
    7. 'def' → logprob: -14.625035285949707
    8. '-dir' → logprob: -15.375035285949707
    9. '_dirs' → logprob: -15.375035285949707
    10. '(dir' → logprob: -15.375035285949707

Token 1001: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889232039451599
    2. '=' → logprob: -2.578892230987549
    3. ' in' → logprob: -14.453892707824707
    4. ')' → logprob: -14.828892707824707
    5. ' ' → logprob: -15.078892707824707
    6. '<|end|>' → logprob: -15.078892707824707
    7. 'in' → logprob: -15.328892707824707
    8. 's' → logprob: -16.32889175415039
    9. '＝' → logprob: -16.82889175415039
    10. ' ' → logprob: -16.95389175415039

Token 1002: ' opposite' (ID: 23821)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.25192955136299133
    2. ' opposite' → logprob: -1.501929521560669
    3. ' oppos' → logprob: -15.62692928314209
    4. '(op' → logprob: -16.126930236816406
    5. ' opposition' → logprob: -16.626930236816406
    6. ' op' → logprob: -16.626930236816406
    7. '	op' → logprob: -17.251930236816406
    8. ' ' → logprob: -18.001930236816406
    9. ' opposing' → logprob: -18.126930236816406
    10. '```' → logprob: -18.251930236816406

Token 1003: '(dir' (ID: 32000)
  Prédit: '(dir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dir' → logprob: -1.2664456789934775e-06
    2. '(' → logprob: -13.750000953674316
    3. 'dir' → logprob: -15.625000953674316
    4. '(def' → logprob: -19.750001907348633
    5. ' (' → logprob: -20.250001907348633
    6. '_dir' → logprob: -20.375001907348633
    7. '(dict' → logprob: -20.750001907348633
    8. '(dim' → logprob: -21.375001907348633
    9. '(direction' → logprob: -21.500001907348633
    10. ' dir' → logprob: -21.750001907348633

Token 1004: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -4.692145012086257e-05
    2. 'arr' → logprob: -10.000046730041504
    3. '(arr' → logprob: -14.000046730041504
    4. 'Arr' → logprob: -14.875046730041504
    5. '_dir' → logprob: -15.500046730041504
    6. '_ar' → logprob: -16.75004768371582
    7. '(dir' → logprob: -17.37504768371582
    8. ' arrive' → logprob: -17.75004768371582
    9. '	arr' → logprob: -17.87504768371582
    10. '-arr' → logprob: -18.50004768371582

Token 1005: 'ive' (ID: 585)
  Prédit: '_arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.06978969275951385
    2. 'ive' → logprob: -2.8197896480560303
    3. 'rive' → logprob: -5.194789886474609
    4. 'arr' → logprob: -6.194789886474609
    5. 'ire' → logprob: -9.81978988647461
    6. 'ieve' → logprob: -10.44478988647461
    7. 'ave' → logprob: -10.69478988647461
    8. '(arr' → logprob: -11.19478988647461
    9. 'r' → logprob: -11.31978988647461
    10. 've' → logprob: -11.44478988647461

Token 1006: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0036055364180356264
    2. ')
' → logprob: -5.628605365753174
    3. '   ' → logprob: -12.628605842590332
    4. ' )' → logprob: -14.253605842590332
    5. '())' → logprob: -14.753605842590332
    6. '()' → logprob: -14.878605842590332
    7. '')' → logprob: -15.128605842590332
    8. ')

' → logprob: -15.378605842590332
    9. ')
' → logprob: -16.003604888916016
    10. '),' → logprob: -17.503604888916016

Token 1007: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005711558274924755
    2. '```' → logprob: -5.630711555480957
    3. ' if' → logprob: -6.505711555480957
    4. 'if' → logprob: -7.755711555480957
    5. '	if' → logprob: -8.880711555480957
    6. '``' → logprob: -11.255711555480957
    7. '
' → logprob: -11.630711555480957
    8. '[' → logprob: -12.005711555480957
    9. '\t' → logprob: -12.130711555480957
    10. '    
' → logprob: -12.380711555480957

Token 1008: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.210974782705307
    2. '   ' → logprob: -1.7109748125076294
    3. ' if' → logprob: -4.71097469329834
    4. '```' → logprob: -7.58597469329834
    5. 'wait' → logprob: -12.33597469329834
    6. '	if' → logprob: -12.58597469329834
    7. '``' → logprob: -13.58597469329834
    8. '       ' → logprob: -13.96097469329834
    9. '  ' → logprob: -14.83597469329834
    10. ' ' → logprob: -15.21097469329834

Token 1009: ' opp' (ID: 6323)
  Prédit: ' opp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' opp' → logprob: -0.28279826045036316
    2. 'opp' → logprob: -1.4077982902526855
    3. '(' → logprob: -6.7827982902526855
    4. 'op' → logprob: -8.032797813415527
    5. ' (' → logprob: -9.407797813415527
    6. 't' → logprob: -9.907797813415527
    7. ' t' → logprob: -10.657797813415527
    8. '((' → logprob: -12.032797813415527
    9. ' op' → logprob: -12.282797813415527
    10. '   ' → logprob: -12.407797813415527

Token 1010: '_dir' (ID: 9526)
  Prédit: '_dir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dir' → logprob: -0.0009136092266999185
    2. '_mod' → logprob: -7.000913619995117
    3. 'mod' → logprob: -14.250913619995117
    4. '_DIR' → logprob: -14.625913619995117
    5. 'dir' → logprob: -15.000913619995117
    6. '-dir' → logprob: -15.500913619995117
    7. 'Dir' → logprob: -15.500913619995117
    8. '	dir' → logprob: -16.625913619995117
    9. '_' → logprob: -17.250913619995117
    10. 't' → logprob: -17.500913619995117

Token 1011: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006744150537997484
    2. 'in' → logprob: -5.006744384765625
    3. ' ' → logprob: -11.631744384765625
    4. '<|end|>' → logprob: -11.631744384765625
    5. ' ==' → logprob: -12.631744384765625
    6. ')' → logprob: -12.756744384765625
    7. ' =='' → logprob: -13.881744384765625
    8. '==' → logprob: -14.131744384765625
    9. ' ' → logprob: -14.256744384765625
    10. '_in' → logprob: -14.631744384765625

Token 1012: ' ('' (ID: 9906)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0005881795077584684
    2. ' ('' → logprob: -7.500588417053223
    3. '['' → logprob: -10.375588417053223
    4. '{'' → logprob: -12.625588417053223
    5. '(' → logprob: -14.750588417053223
    6. '(('' → logprob: -15.875588417053223
    7. '(['' → logprob: -16.625587463378906
    8. '('\' → logprob: -17.375587463378906
    9. '("' → logprob: -17.375587463378906
    10. '({'' → logprob: -17.750587463378906

Token 1013: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0023871837183833122
    2. 'E' → logprob: -6.377387046813965
    3. ''N' → logprob: -7.377387046813965
    4. ''E' → logprob: -10.627387046813965
    5. 'S' → logprob: -11.127387046813965
    6. ''' → logprob: -11.752387046813965
    7. ''S' → logprob: -12.502387046813965
    8. '['' → logprob: -13.252387046813965
    9. ' N' → logprob: -13.502387046813965
    10. 'W' → logprob: -13.627387046813965

Token 1014: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.0014642698224633932
    2. '',' → logprob: -6.751464366912842
    3. 'S' → logprob: -8.376463890075684
    4. ''' → logprob: -10.001463890075684
    5. ''S' → logprob: -12.001463890075684
    6. ',S' → logprob: -12.876463890075684
    7. '',"' → logprob: -12.876463890075684
    8. ' ','' → logprob: -13.251463890075684
    9. '(','' → logprob: -13.251463890075684
    10. '',
' → logprob: -13.376463890075684

Token 1015: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -2.696889623621246e-06
    2. 'E' → logprob: -13.00000286102295
    3. ' S' → logprob: -15.50000286102295
    4. 'W' → logprob: -15.75000286102295
    5. 'N' → logprob: -19.125001907348633
    6. ''S' → logprob: -20.500001907348633
    7. ',S' → logprob: -20.750001907348633
    8. '
' → logprob: -20.875001907348633
    9. '```' → logprob: -21.437501907348633
    10. '{'' → logprob: -21.687501907348633

Token 1016: ''):
' (ID: 26539)
  Prédit: ''):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''):
' → logprob: -0.040665820240974426
    2. '):
' → logprob: -3.290665864944458
    3. ''):' → logprob: -6.415665626525879
    4. '   ' → logprob: -7.415665626525879
    5. '):' → logprob: -8.540665626525879
    6. '       ' → logprob: -9.290665626525879
    7. ':' → logprob: -10.290665626525879
    8. '')' → logprob: -11.290665626525879
    9. ',' → logprob: -11.290665626525879
    10. ')' → logprob: -11.415665626525879

Token 1017: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003999092150479555
    2. '   ' → logprob: -5.75399923324585
    3. '```' → logprob: -8.003998756408691
    4. ':' → logprob: -8.628998756408691
    5. '
' → logprob: -9.878998756408691
    6. '[' → logprob: -10.128998756408691
    7. '     ' → logprob: -10.128998756408691
    8. '	' → logprob: -10.128998756408691
    9. '    ' → logprob: -10.753998756408691
    10. '           ' → logprob: -11.003998756408691

Token 1018: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03725254535675049
    2. ' if' → logprob: -3.537252426147461
    3. '   ' → logprob: -5.287252426147461
    4. '       ' → logprob: -6.037252426147461
    5. '	if' → logprob: -10.912252426147461
    6. '```' → logprob: -11.912252426147461
    7. '    ' → logprob: -13.037252426147461
    8. ' ' → logprob: -13.787252426147461
    9. '     ' → logprob: -14.037252426147461
    10. '           ' → logprob: -14.162252426147461

Token 1019: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.016035307198762894
    2. ' t' → logprob: -4.141035079956055
    3. '`t' → logprob: -15.016035079956055
    4. '	t' → logprob: -15.266035079956055
    5. '   ' → logprob: -15.391035079956055
    6. '(t' → logprob: -15.891035079956055
    7. ' ' → logprob: -16.391035079956055
    8. '<t' → logprob: -17.766035079956055
    9. '0' → logprob: -18.266035079956055
    10. '_t' → logprob: -18.391035079956055

Token 1020: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -5.1689596148207784e-05
    2. 'mod' → logprob: -9.875051498413086
    3. '	mod' → logprob: -16.125051498413086
    4. 'omod' → logprob: -17.625051498413086
    5. 't' → logprob: -18.000051498413086
    6. '_MOD' → logprob: -18.000051498413086
    7. 'Mod' → logprob: -18.875051498413086
    8. '```' → logprob: -19.875051498413086
    9. '_m' → logprob: -20.250051498413086
    10. '<' → logprob: -20.375051498413086

Token 1021: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.1447771042585373
    2. '<' → logprob: -2.0197770595550537
    3. ' >=' → logprob: -7.019777297973633
    4. '<|end|>' → logprob: -7.769777297973633
    5. '>=' → logprob: -8.644777297973633
    6. ' ' → logprob: -9.019777297973633
    7. '[' → logprob: -9.144777297973633
    8. '<class' → logprob: -9.519777297973633
    9. ' ' → logprob: -9.644777297973633
    10. ' ==' → logprob: -10.269777297973633

Token 1022: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -4.5491004129871726e-05
    2. ' k' → logprob: -10.000045776367188
    3. '   ' → logprob: -17.125045776367188
    4. '	k' → logprob: -19.375045776367188
    5. '{k' → logprob: -20.000045776367188
    6. '=k' → logprob: -20.375045776367188
    7. ' ' → logprob: -21.125045776367188
    8. '```' → logprob: -21.250045776367188
    9. '0' → logprob: -21.375045776367188
    10. '_k' → logprob: -22.250045776367188

Token 1023: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6967770457267761
    2. '       ' → logprob: -1.321777105331421
    3. ':' → logprob: -1.571777105331421
    4. ':return' → logprob: -3.821777105331421
    5. ' return' → logprob: -6.821776866912842
    6. 'return' → logprob: -7.071776866912842
    7. '):
' → logprob: -7.321776866912842
    8. ',' → logprob: -7.696776866912842
    9. '           ' → logprob: -7.696776866912842
    10. '   ' → logprob: -7.821776866912842

Token 1024: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008873128332197666
    2. ' return' → logprob: -5.008872985839844
    3. '           ' → logprob: -7.508872985839844
    4. 'return' → logprob: -8.008872985839844
    5. '	return' → logprob: -8.133872985839844
    6. '   ' → logprob: -8.383872985839844
    7. '	' → logprob: -9.008872985839844
    8. ':return' → logprob: -9.008872985839844
    9. '```' → logprob: -9.133872985839844
    10. '0' → logprob: -9.633872985839844

Token 1025: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3940802812576294
    2. '0' → logprob: -1.1440802812576294
    3. ' return' → logprob: -5.14408016204834
    4. '       ' → logprob: -7.39408016204834
    5. ' ' → logprob: -7.64408016204834
    6. '           ' → logprob: -8.76908016204834
    7. '   ' → logprob: -9.89408016204834
    8. '	return' → logprob: -10.01908016204834
    9. '```' → logprob: -12.76908016204834
    10. '{return' → logprob: -14.51908016204834

Token 1026: ' NS' (ID: 6950)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0002943479048553854
    2. '0' → logprob: -8.50029468536377
    3. ' return' → logprob: -9.50029468536377
    4. '           ' → logprob: -11.12529468536377
    5. '	return' → logprob: -14.25029468536377
    6. '       ' → logprob: -14.62529468536377
    7. '```' → logprob: -16.625293731689453
    8. '   ' → logprob: -16.750293731689453
    9. '{return' → logprob: -17.000293731689453
    10. ' ' → logprob: -18.250293731689453

Token 1027: ' green' (ID: 8851)
  Prédit: 'green'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'green' → logprob: -0.09960386902093887
    2. ' green' → logprob: -2.4746038913726807
    3. '_green' → logprob: -5.349603652954102
    4. '_time' → logprob: -6.349603652954102
    5. '           ' → logprob: -6.724603652954102
    6. 'wait' → logprob: -7.224603652954102
    7. 'time' → logprob: -8.099603652954102
    8. '       ' → logprob: -8.224603652954102
    9. '_wait' → logprob: -8.349603652954102
    10. '.green' → logprob: -8.599603652954102

Token 1028: ',' (ID: 11)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11520751565694809
    2. '       ' → logprob: -2.7402074337005615
    3. '           ' → logprob: -4.240207672119141
    4. 'return' → logprob: -4.365207672119141
    5. ' ' → logprob: -4.615207672119141
    6. ' return' → logprob: -5.365207672119141
    7. '   ' → logprob: -6.990207672119141
    8. '	' → logprob: -7.865207672119141
    9. '	return' → logprob: -7.990207672119141
    10. '               ' → logprob: -8.99020767211914

Token 1029: ' can' (ID: 665)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.007433873601257801
    2. '           ' → logprob: -5.007433891296387
    3. ' return' → logprob: -7.507433891296387
    4. '0' → logprob: -8.757433891296387
    5. '       ' → logprob: -12.132433891296387
    6. '	return' → logprob: -13.257433891296387
    7. '```' → logprob: -13.257433891296387
    8. '               ' → logprob: -13.507433891296387
    9. '{return' → logprob: -14.507433891296387
    10. '   ' → logprob: -14.507433891296387

Token 1030: ' enter' (ID: 5747)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.745130717754364
    2. '0' → logprob: -1.3701307773590088
    3. 'enter' → logprob: -2.495130777359009
    4. ' enter' → logprob: -2.495130777359009
    5. ' return' → logprob: -2.620130777359009
    6. ' ' → logprob: -4.87013053894043
    7. 'wait' → logprob: -5.12013053894043
    8. '           ' → logprob: -5.24513053894043
    9. 'pass' → logprob: -5.24513053894043
    10. ' proceed' → logprob: -5.62013053894043

Token 1031: '
' (ID: 198)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.24167482554912567
    2. ' ' → logprob: -1.616674780845642
    3. '           ' → logprob: -4.866674900054932
    4. ' return' → logprob: -5.616674900054932
    5. '       ' → logprob: -6.616674900054932
    6. 'return' → logprob: -6.616674900054932
    7. '	return' → logprob: -7.741674900054932
    8. '   ' → logprob: -7.991674900054932
    9. '	' → logprob: -8.366674423217773
    10. '```' → logprob: -8.491674423217773

Token 1032: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10511045902967453
    2. '               ' → logprob: -2.4801104068756104
    3. '       ' → logprob: -4.8551106452941895
    4. ' return' → logprob: -5.4801106452941895
    5. 'return' → logprob: -6.1051106452941895
    6. '```' → logprob: -7.2301106452941895
    7. '0' → logprob: -7.9801106452941895
    8. '   ' → logprob: -8.730110168457031
    9. '	       ' → logprob: -9.105110168457031
    10. '	return' → logprob: -9.605110168457031

Token 1033: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17051216959953308
    2. 'return' (adapté à ' return') → logprob: -1.9205121994018555
    3. ' return' → logprob: -5.0455121994018555
    4. '           ' → logprob: -5.6705121994018555
    5. ' ' → logprob: -8.295512199401855
    6. '	return' → logprob: -9.920512199401855
    7. '       ' → logprob: -10.670512199401855
    8. '               ' → logprob: -11.295512199401855
    9. '   ' → logprob: -12.170512199401855
    10. '	       ' → logprob: -12.670512199401855

Token 1034: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -23.000001907348633
    4. '00' → logprob: -23.875001907348633
    5. '000' → logprob: -25.000001907348633
    6. '```' → logprob: -25.375001907348633
    7. '۰' → logprob: -25.375001907348633
    8. '1' → logprob: -26.000001907348633
    9. ' ' → logprob: -26.875001907348633
    10. '  ' → logprob: -27.000001907348633

Token 1035: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.375
    3. '   ' → logprob: -21.375
    4. '۰' → logprob: -22.0
    5. '00' → logprob: -22.5
    6. '000' → logprob: -22.75
    7. '```' → logprob: -23.125
    8. '０' → logprob: -23.5
    9. '           ' → logprob: -24.5
    10. '=' → logprob: -24.5

Token 1036: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01985868811607361
    2. '   ' → logprob: -4.6448588371276855
    3. 'else' → logprob: -4.6448588371276855
    4. ' else' → logprob: -8.019858360290527
    5. '
' → logprob: -10.269858360290527
    6. 'elif' → logprob: -10.269858360290527
    7. '```' → logprob: -10.644858360290527
    8. 'return' → logprob: -11.894858360290527
    9. '	' → logprob: -12.144858360290527
    10. '	else' → logprob: -12.769858360290527

Token 1037: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1615801304578781
    2. '```' → logprob: -2.2865800857543945
    3. 'else' → logprob: -3.5365800857543945
    4. '       ' → logprob: -4.7865800857543945
    5. ' else' → logprob: -5.6615800857543945
    6. '
' → logprob: -5.7865800857543945
    7. '	else' → logprob: -6.2865800857543945
    8. '\n' → logprob: -7.9115800857543945
    9. 'elif' → logprob: -7.9115800857543945
    10. '<|end|>' → logprob: -8.786580085754395

Token 1038: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.4413575828075409
    2. '   ' → logprob: -1.0663576126098633
    3. ' else' → logprob: -4.441357612609863
    4. 'elif' → logprob: -7.316357612609863
    5. '       ' → logprob: -9.691357612609863
    6. 'return' → logprob: -10.566357612609863
    7. '
' → logprob: -10.941357612609863
    8. 'if' → logprob: -11.566357612609863
    9. '	else' → logprob: -11.816357612609863
    10. '```' → logprob: -12.691357612609863

Token 1039: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.851910412311554
    2. ':
' → logprob: -1.3519103527069092
    3. ':' → logprob: -1.6019103527069092
    4. ':return' → logprob: -3.351910352706909
    5. '           ' → logprob: -3.601910352706909
    6. ' return' → logprob: -4.351910591125488
    7. 'return' → logprob: -4.601910591125488
    8. '<|end|>' → logprob: -4.976910591125488
    9. '	       ' → logprob: -5.351910591125488
    10. '	return' → logprob: -5.851910591125488

Token 1040: '           ' (ID: 352)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3494727313518524
    2. ' return' → logprob: -1.4744727611541748
    3. '       ' → logprob: -2.974472761154175
    4. '           ' → logprob: -4.224472522735596
    5. '   ' → logprob: -8.974472999572754
    6. '	return' → logprob: -9.974472999572754
    7. 'wait' → logprob: -10.474472999572754
    8. '```' → logprob: -10.724472999572754
    9. '{return' → logprob: -10.849472999572754
    10. '        ' → logprob: -11.474472999572754

Token 1041: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.034347761422395706
    2. 'k' → logprob: -3.4093477725982666
    3. ' return' → logprob: -7.4093475341796875
    4. '(k' → logprob: -10.659347534179688
    5. 'cycle' → logprob: -10.784347534179688
    6. '   ' → logprob: -10.784347534179688
    7. '       ' → logprob: -11.909347534179688
    8. '           ' → logprob: -12.034347534179688
    9. 'c' → logprob: -12.159347534179688
    10. ' k' → logprob: -12.409347534179688

Token 1042: ' wait' (ID: 5238)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0002251125843031332
    2. ' return' → logprob: -8.500225067138672
    3. '           ' → logprob: -10.875225067138672
    4. '   ' → logprob: -13.250225067138672
    5. 'k' → logprob: -15.000225067138672
    6. 'wait' → logprob: -15.125225067138672
    7. '       ' → logprob: -16.000225067138672
    8. '```' → logprob: -17.250225067138672
    9. '(k' → logprob: -17.750225067138672
    10. 'signal' → logprob: -17.875225067138672

Token 1043: ' until' (ID: 4609)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.29938220977783203
    2. ' return' → logprob: -1.424382209777832
    3. 'for' → logprob: -4.424382209777832
    4. '           ' → logprob: -6.299382209777832
    5. ' for' → logprob: -6.424382209777832
    6. '=' → logprob: -6.424382209777832
    7. ' =' → logprob: -8.674382209777832
    8. '_return' → logprob: -8.799382209777832
    9. '_time' → logprob: -9.174382209777832
    10. 'until' → logprob: -9.549382209777832

Token 1044: ' next' (ID: 2613)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0017530106706544757
    2. 'cycle' → logprob: -7.251752853393555
    3. '(k' → logprob: -7.501752853393555
    4. '2' → logprob: -8.251752853393555
    5. ' k' → logprob: -9.376752853393555
    6. 't' → logprob: -9.876752853393555
    7. '(' → logprob: -10.501752853393555
    8. 'signal' → logprob: -10.751752853393555
    9. '((' → logprob: -11.751752853393555
    10. '(t' → logprob: -11.751752853393555

Token 1045: ' NS' (ID: 6950)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0008926403825171292
    2. '(k' → logprob: -7.750892639160156
    3. 'cycle' → logprob: -8.625892639160156
    4. '0' → logprob: -9.125892639160156
    5. 'signal' → logprob: -10.125892639160156
    6. 'NS' → logprob: -10.375892639160156
    7. 'time' → logprob: -10.750892639160156
    8. '(' → logprob: -11.125892639160156
    9. ' k' → logprob: -11.375892639160156
    10. '_k' → logprob: -11.625892639160156

Token 1046: ' green' (ID: 8851)
  Prédit: 'green'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'green' → logprob: -0.13463743031024933
    2. '_green' → logprob: -2.7596373558044434
    3. ' green' → logprob: -2.8846373558044434
    4. 'k' → logprob: -6.009637355804443
    5. '_k' → logprob: -6.509637355804443
    6. '```' → logprob: -6.634637355804443
    7. '(k' → logprob: -7.509637355804443
    8. ' k' → logprob: -8.884637832641602
    9. '   ' → logprob: -9.009637832641602
    10. '``' → logprob: -9.759637832641602

Token 1047: ' start' (ID: 1604)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6529664993286133
    2. 'return' → logprob: -0.7779664993286133
    3. '           ' → logprob: -4.277966499328613
    4. '   ' → logprob: -5.402966499328613
    5. '       ' → logprob: -6.652966499328613
    6. ' =' → logprob: -8.652966499328613
    7. '	return' → logprob: -9.402966499328613
    8. ' (' → logprob: -9.902966499328613
    9. '{return' → logprob: -10.527966499328613
    10. '```' → logprob: -10.652966499328613

Token 1048: '
' (ID: 198)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6368562579154968
    2. ' return' → logprob: -0.7618562579154968
    3. '   ' → logprob: -5.8868560791015625
    4. '       ' → logprob: -6.8868560791015625
    5. '           ' → logprob: -8.261856079101562
    6. '	return' → logprob: -9.636856079101562
    7. ' (' → logprob: -10.261856079101562
    8. ',' → logprob: -10.386856079101562
    9. '{return' → logprob: -11.511856079101562
    10. '(' → logprob: -11.636856079101562

Token 1049: '           ' (ID: 352)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.017166364938020706
    2. ' return' → logprob: -4.2671661376953125
    3. '   ' → logprob: -6.2671661376953125
    4. '       ' → logprob: -7.0171661376953125
    5. '           ' → logprob: -9.267166137695312
    6. '{return' → logprob: -10.142166137695312
    7. '```' → logprob: -11.017166137695312
    8. ':return' → logprob: -11.017166137695312
    9. '(' → logprob: -11.892166137695312
    10. '	return' → logprob: -11.892166137695312

Token 1050: ' return' (ID: 622)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.2618423104286194
    2. 'return' (adapté à ' return') → logprob: -1.5118422508239746
    3. ' cycle' → logprob: -4.886842250823975
    4. ' return' → logprob: -6.386842250823975
    5. '(' → logprob: -8.511842727661133
    6. '(c' → logprob: -9.261842727661133
    7. '{return' → logprob: -9.261842727661133
    8. 'cycl' → logprob: -9.886842727661133
    9. ' (' → logprob: -10.011842727661133
    10. '   ' → logprob: -10.386842727661133

Token 1051: ' (' (ID: 350)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.028242528438568115
    2. '(c' → logprob: -3.653242588043213
    3. ' cycle' → logprob: -6.528242588043213
    4. '(' → logprob: -8.278242111206055
    5. '(k' → logprob: -9.028242111206055
    6. 'c' → logprob: -10.278242111206055
    7. ' (' → logprob: -10.778242111206055
    8. 'cycl' → logprob: -11.278242111206055
    9. 'k' → logprob: -11.778242111206055
    10. '2' → logprob: -12.028242111206055

Token 1052: 'cycle' (ID: 24879)
  Prédit: 'cycle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.0007362506585195661
    2. '(c' → logprob: -7.750736236572266
    3. 'k' → logprob: -9.000736236572266
    4. '2' → logprob: -9.750736236572266
    5. '(k' → logprob: -9.875736236572266
    6. '(' → logprob: -10.500736236572266
    7. ' cycle' → logprob: -10.625736236572266
    8. 'c' → logprob: -11.875736236572266
    9. '-cycle' → logprob: -12.375736236572266
    10. 'cycles' → logprob: -13.000736236572266

Token 1053: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.054904740303754807
    2. '-' → logprob: -2.9299046993255615
    3. ')' → logprob: -10.80490493774414
    4. ')-' → logprob: -14.42990493774414
    5. '-t' → logprob: -14.92990493774414
    6. '<|end|>' → logprob: -15.05490493774414
    7. '<|end|>' → logprob: -15.55490493774414
    8. ' ' → logprob: -16.05490493774414
    9. ' )' → logprob: -16.42990493774414
    10. ')-(' → logprob: -16.42990493774414

Token 1054: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -3.547789674485102e-05
    2. ' t' → logprob: -10.250035285949707
    3. ')t' → logprob: -17.250036239624023
    4. '	t' → logprob: -18.500036239624023
    5. '   ' → logprob: -18.750036239624023
    6. '(t' → logprob: -19.375036239624023
    7. '`t' → logprob: -19.625036239624023
    8. '_t' → logprob: -21.500036239624023
    9. ')' → logprob: -22.125036239624023
    10. ' т' → logprob: -23.500036239624023

Token 1055: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -6.630610641877865e-06
    2. 'mod' → logprob: -12.000006675720215
    3. '%' → logprob: -15.750006675720215
    4. 't' → logprob: -16.1250057220459
    5. '	mod' → logprob: -16.2500057220459
    6. 'Mod' → logprob: -17.2500057220459
    7. '_MOD' → logprob: -17.5000057220459
    8. '[current' → logprob: -18.6250057220459
    9. ' мод' → logprob: -19.0000057220459
    10. ')' → logprob: -19.0000057220459

Token 1056: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002655079588294029
    2. ' )' → logprob: -8.375265121459961
    3. ')+' → logprob: -11.000265121459961
    4. '+' → logprob: -11.500265121459961
    5. '   ' → logprob: -13.125265121459961
    6. ')
' → logprob: -13.375265121459961
    7. ' +' → logprob: -13.500265121459961
    8. '<|end|>' → logprob: -14.125265121459961
    9. ')return' → logprob: -14.500265121459961
    10. ')%' → logprob: -15.125265121459961

Token 1057: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03228835389018059
    2. '<|end|>' → logprob: -3.6572883129119873
    3. '
' → logprob: -6.157288551330566
    4. 'else' → logprob: -7.157288551330566
    5. '```' → logprob: -7.657288551330566
    6. '	return' → logprob: -8.032288551330566
    7. ' else' → logprob: -8.157288551330566
    8. ' ' → logprob: -8.407288551330566
    9. '<|end|>' → logprob: -8.407288551330566
    10. 'return' → logprob: -8.532288551330566

Token 1058: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38766491413116455
    2. 'else' (adapté à ' else') → logprob: -1.1376649141311646
    3. ' else' → logprob: -8.137664794921875
    4. 'elif' → logprob: -8.137664794921875
    5. '```' → logprob: -8.512664794921875
    6. 'return' → logprob: -12.512664794921875
    7. '	else' → logprob: -13.387664794921875
    8. 'if' → logprob: -13.387664794921875
    9. '       ' → logprob: -14.512664794921875
    10. '
' → logprob: -15.137664794921875

Token 1059: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09792060405015945
    2. ':
' → logprob: -2.8479206562042236
    3. '       ' → logprob: -3.3479206562042236
    4. '   ' → logprob: -9.597920417785645
    5. '{' → logprob: -10.347920417785645
    6. '           ' → logprob: -11.472920417785645
    7. '<|end|>' → logprob: -11.722920417785645
    8. ',' → logprob: -12.847920417785645
    9. '):
' → logprob: -12.847920417785645
    10. '      ' → logprob: -12.972920417785645

Token 1060: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7902499437332153
    2. 'if' → logprob: -1.2902499437332153
    3. '   ' → logprob: -1.7902499437332153
    4. ' if' → logprob: -2.290249824523926
    5. '```' → logprob: -6.540249824523926
    6. '           ' → logprob: -6.790249824523926
    7. '    ' → logprob: -9.290249824523926
    8. '     ' → logprob: -9.790249824523926
    9. '	if' → logprob: -9.915249824523926
    10. ' ' → logprob: -10.165249824523926

Token 1061: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.16057555377483368
    2. ' if' → logprob: -1.91057550907135
    3. 'return' → logprob: -9.285575866699219
    4. 'wait' → logprob: -9.785575866699219
    5. '   ' → logprob: -9.910575866699219
    6. '           ' → logprob: -10.035575866699219
    7. '       ' → logprob: -10.660575866699219
    8. 't' → logprob: -10.785575866699219
    9. ' return' → logprob: -11.160575866699219
    10. ' wait' → logprob: -11.160575866699219

Token 1062: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0015117661096155643
    2. ' t' → logprob: -6.501511573791504
    3. '   ' → logprob: -11.876511573791504
    4. '(t' → logprob: -14.001511573791504
    5. '	t' → logprob: -14.251511573791504
    6. '`t' → logprob: -14.751511573791504
    7. ' ' → logprob: -15.626511573791504
    8. '0' → logprob: -16.00151252746582
    9. '_t' → logprob: -16.12651252746582
    10. '       ' → logprob: -16.25151252746582

Token 1063: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -2.8206473871250637e-05
    2. 'mod' → logprob: -10.500028610229492
    3. 't' → logprob: -15.000028610229492
    4. '_MOD' → logprob: -16.250028610229492
    5. 'omod' → logprob: -16.250028610229492
    6. 'Mod' → logprob: -16.625028610229492
    7. '	mod' → logprob: -18.375028610229492
    8. '```' → logprob: -19.000028610229492
    9. '-mod' → logprob: -19.250028610229492
    10. '=' → logprob: -19.500028610229492

Token 1064: ' >=' (ID: 5064)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5761054754257202
    2. ' <' → logprob: -0.8261054754257202
    3. '<t' → logprob: -9.826105117797852
    4. '<n' → logprob: -9.951105117797852
    5. '<class' → logprob: -11.951105117797852
    6. '<size' → logprob: -11.951105117797852
    7. ' >=' → logprob: -11.951105117797852
    8. '<K' → logprob: -12.076105117797852
    9. '<m' → logprob: -12.201105117797852
    10. '<w' → logprob: -12.326105117797852

Token 1065: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.04859282076358795
    2. ' k' → logprob: -3.0485928058624268
    3. '   ' → logprob: -12.298592567443848
    4. ' ' → logprob: -14.673592567443848
    5. '       ' → logprob: -15.923592567443848
    6. '	k' → logprob: -16.423593521118164
    7. '  ' → logprob: -16.798593521118164
    8. '           ' → logprob: -17.423593521118164
    9. '0' → logprob: -17.423593521118164
    10. '```' → logprob: -17.673593521118164

Token 1066: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8396470546722412
    2. ':
' → logprob: -1.3396470546722412
    3. '           ' → logprob: -1.7146470546722412
    4. '       ' → logprob: -2.089647054672241
    5. ':return' → logprob: -6.96464729309082
    6. '   ' → logprob: -7.46464729309082
    7. '	       ' → logprob: -8.71464729309082
    8. ',' → logprob: -9.21464729309082
    9. '```' → logprob: -9.21464729309082
    10. '	' → logprob: -9.46464729309082

Token 1067: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9811354279518127
    2. 'return' → logprob: -1.106135368347168
    3. ' return' → logprob: -1.231135368347168
    4. '       ' → logprob: -6.231135368347168
    5. '   ' → logprob: -8.731135368347168
    6. '```' → logprob: -10.106135368347168
    7. '               ' → logprob: -10.231135368347168
    8. '{return' → logprob: -10.356135368347168
    9. ' ' → logprob: -10.481135368347168
    10. '	return' → logprob: -11.481135368347168

Token 1068: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.21389107406139374
    2. ' return' → logprob: -1.7138910293579102
    3. '           ' → logprob: -4.58889102935791
    4. '       ' → logprob: -6.46389102935791
    5. '0' → logprob: -7.58889102935791
    6. ' ' → logprob: -9.08889102935791
    7. '   ' → logprob: -10.83889102935791
    8. '```' → logprob: -10.83889102935791
    9. '               ' → logprob: -12.33889102935791
    10. '	return' → logprob: -12.33889102935791

Token 1069: ' EW' (ID: 143307)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.011982917785644531
    2. '0' → logprob: -4.7619829177856445
    3. ' return' → logprob: -6.0119829177856445
    4. '           ' → logprob: -7.0119829177856445
    5. '       ' → logprob: -11.886982917785645
    6. ' ' → logprob: -12.761982917785645
    7. '   ' → logprob: -13.511982917785645
    8. '	return' → logprob: -14.136982917785645
    9. '{return' → logprob: -16.011981964111328
    10. '         ' → logprob: -16.136981964111328

Token 1070: ' green' (ID: 8851)
  Prédit: 'green'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'green' → logprob: -0.08219923824071884
    2. '_green' → logprob: -2.9571993350982666
    3. ' green' → logprob: -3.8321993350982666
    4. '-green' → logprob: -6.7071990966796875
    5. '```' → logprob: -6.9571990966796875
    6. 'return' → logprob: -8.082199096679688
    7. '       ' → logprob: -8.207199096679688
    8. '_time' → logprob: -8.207199096679688
    9. 'k' → logprob: -8.332199096679688
    10. '
' → logprob: -8.457199096679688

Token 1071: ' ok' (ID: 4763)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7274966239929199
    2. 'return' → logprob: -1.10249662399292
    3. ' return' → logprob: -1.85249662399292
    4. '       ' → logprob: -4.60249662399292
    5. '   ' → logprob: -5.47749662399292
    6. '```' → logprob: -5.60249662399292
    7. ' =' → logprob: -5.72749662399292
    8. '=' → logprob: -5.97749662399292
    9. ':return' → logprob: -6.60249662399292
    10. '0' → logprob: -6.60249662399292

Token 1072: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.35921069979667664
    2. 'return' → logprob: -1.359210729598999
    3. ' return' → logprob: -3.234210729598999
    4. '       ' → logprob: -5.60921049118042
    5. ':return' → logprob: -7.35921049118042
    6. '   ' → logprob: -7.73421049118042
    7. '{return' → logprob: -8.859210968017578
    8. '	return' → logprob: -9.234210968017578
    9. ' ' → logprob: -9.359210968017578
    10. '```' → logprob: -9.484210968017578

Token 1073: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5246027112007141
    2. 'return' → logprob: -1.0246026515960693
    3. ' return' → logprob: -3.3996026515960693
    4. '       ' → logprob: -4.274602890014648
    5. '   ' → logprob: -6.399602890014648
    6. '               ' → logprob: -9.774602890014648
    7. '```' → logprob: -9.774602890014648
    8. ' ' → logprob: -10.024602890014648
    9. '	return' → logprob: -10.024602890014648
    10. ':return' → logprob: -10.774602890014648

Token 1074: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5730606317520142
    2. ' return' → logprob: -1.0730606317520142
    3. '0' → logprob: -2.5730605125427246
    4. '           ' → logprob: -4.698060512542725
    5. ' ' → logprob: -5.073060512542725
    6. '       ' → logprob: -6.073060512542725
    7. '   ' → logprob: -8.823060989379883
    8. '```' → logprob: -10.073060989379883
    9. '	return' → logprob: -10.198060989379883
    10. '               ' → logprob: -11.073060989379883

Token 1075: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.611323624383658e-05
    2. ' ' → logprob: -9.625065803527832
    3. '   ' → logprob: -17.37506675720215
    4. '(' → logprob: -18.00006675720215
    5. '۰' → logprob: -19.37506675720215
    6. '```' → logprob: -19.62506675720215
    7. ' ' → logprob: -19.81256675720215
    8. '=' → logprob: -20.00006675720215
    9. '00' → logprob: -20.43756675720215
    10. '０' → logprob: -20.68756675720215

Token 1076: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.625000953674316
    3. '(' → logprob: -16.375001907348633
    4. '```' → logprob: -18.000001907348633
    5. 'cycle' → logprob: -18.125001907348633
    6. '00' → logprob: -18.750001907348633
    7. '000' → logprob: -19.937501907348633
    8. '۰' → logprob: -19.937501907348633
    9. '1' → logprob: -20.125001907348633
    10. '   ' → logprob: -20.250001907348633

Token 1077: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5600182414054871
    2. 'else' → logprob: -0.9350182414054871
    3. ' else' → logprob: -3.685018301010132
    4. '   ' → logprob: -4.560018062591553
    5. '```' → logprob: -7.560018062591553
    6. '	else' → logprob: -9.685018539428711
    7. '           ' → logprob: -10.560018539428711
    8. '
' → logprob: -11.185018539428711
    9. '<|end|>' → logprob: -11.435018539428711
    10. 'return' → logprob: -12.060018539428711

Token 1078: '       ' (ID: 309)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5905846357345581
    2. '       ' → logprob: -0.8405846357345581
    3. ' else' → logprob: -4.465584754943848
    4. '   ' → logprob: -5.840584754943848
    5. '```' → logprob: -9.465584754943848
    6. '	else' → logprob: -10.090584754943848
    7. '
' → logprob: -12.590584754943848
    8. '	' → logprob: -13.340584754943848
    9. 'return' → logprob: -13.715584754943848
    10. '{
' → logprob: -13.715584754943848

Token 1079: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.03170601278543472
    2. '       ' → logprob: -3.7817060947418213
    3. ' else' → logprob: -5.031705856323242
    4. '   ' → logprob: -6.281705856323242
    5. '	else' → logprob: -10.781705856323242
    6. '           ' → logprob: -12.656705856323242
    7. '     ' → logprob: -14.031705856323242
    8. '
' → logprob: -14.156705856323242
    9. '```' → logprob: -15.031705856323242
    10. ' ' → logprob: -15.656705856323242

Token 1080: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0116595309227705
    2. ':
' → logprob: -5.886659622192383
    3. '	       ' → logprob: -6.011659622192383
    4. 'return' → logprob: -6.386659622192383
    5. ':' → logprob: -6.636659622192383
    6. ' return' → logprob: -7.011659622192383
    7. '       ' → logprob: -7.261659622192383
    8. '               ' → logprob: -7.636659622192383
    9. '		' → logprob: -8.261659622192383
    10. '   ' → logprob: -8.511659622192383

Token 1081: '           ' (ID: 352)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.37122008204460144
    2. '           ' → logprob: -1.8712201118469238
    3. ' return' → logprob: -1.8712201118469238
    4. '       ' → logprob: -6.746220111846924
    5. '   ' → logprob: -6.871220111846924
    6. '               ' → logprob: -12.121219635009766
    7. ' ' → logprob: -12.246219635009766
    8. '	return' → logprob: -12.496219635009766
    9. '{return' → logprob: -12.496219635009766
    10. '```' → logprob: -13.121219635009766

Token 1082: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0055849566124379635
    2. 'k' → logprob: -5.505585193634033
    3. ' return' → logprob: -6.505585193634033
    4. '(k' → logprob: -11.880584716796875
    5. '           ' → logprob: -13.505584716796875
    6. '   ' → logprob: -13.630584716796875
    7. ' k' → logprob: -14.880584716796875
    8. '       ' → logprob: -15.255584716796875
    9. '{return' → logprob: -16.255584716796875
    10. 'wait' → logprob: -17.255584716796875

Token 1083: ' (' (ID: 350)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0020150020718574524
    2. '(k' → logprob: -6.252015113830566
    3. ' k' → logprob: -9.377015113830566
    4. ' (' → logprob: -13.502015113830566
    5. '(' → logprob: -15.127015113830566
    6. '   ' → logprob: -15.752015113830566
    7. '_k' → logprob: -17.12701416015625
    8. '	k' → logprob: -17.12701416015625
    9. '{k' → logprob: -18.75201416015625
    10. ' ' → logprob: -19.87701416015625

Token 1084: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -2.463036435074173e-05
    2. ' k' → logprob: -10.750024795532227
    3. '(k' → logprob: -12.750024795532227
    4. '   ' → logprob: -15.750024795532227
    5. ' (' → logprob: -17.375024795532227
    6. '{k' → logprob: -18.125024795532227
    7. '	k' → logprob: -18.875024795532227
    8. '_k' → logprob: -19.000024795532227
    9. '(' → logprob: -19.375024795532227
    10. '  ' → logprob: -19.625024795532227

Token 1085: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.10024213790893555
    2. '-' → logprob: -2.3502421379089355
    3. ' ' → logprob: -10.975242614746094
    4. ')' → logprob: -11.475242614746094
    5. '<|end|>' → logprob: -12.475242614746094
    6. '   ' → logprob: -13.600242614746094
    7. '[' → logprob: -13.975242614746094
    8. '<|end|>' → logprob: -14.600242614746094
    9. '	' → logprob: -15.350242614746094
    10. '  ' → logprob: -15.475242614746094

Token 1086: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0015028368216007948
    2. ' t' → logprob: -6.501502990722656
    3. '	t' → logprob: -15.126502990722656
    4. '_t' → logprob: -16.001502990722656
    5. ')t' → logprob: -16.001502990722656
    6. '`t' → logprob: -17.001502990722656
    7. '(t' → logprob: -18.251502990722656
    8. '   ' → logprob: -19.376502990722656
    9. ')' → logprob: -20.001502990722656
    10. ' ' → logprob: -20.751502990722656

Token 1087: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -0.0001899511698866263
    2. 'od' → logprob: -9.125189781188965
    3. 'mod' → logprob: -9.500189781188965
    4. 'omod' → logprob: -12.625189781188965
    5. 't' → logprob: -13.625189781188965
    6. '_MOD' → logprob: -14.500189781188965
    7. 'Mod' → logprob: -14.750189781188965
    8. 'odel' → logprob: -15.750189781188965
    9. '	mod' → logprob: -15.875189781188965
    10. '_Mod' → logprob: -16.50019073486328

Token 1088: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00017433916218578815
    2. '   ' → logprob: -8.750174522399902
    3. ')
' → logprob: -11.750174522399902
    4. ' )' → logprob: -11.875174522399902
    5. '<|end|>' → logprob: -14.875174522399902
    6. ')return' → logprob: -16.000173568725586
    7. '}' → logprob: -16.125173568725586
    8. ')}' → logprob: -16.500173568725586
    9. '')' → logprob: -17.000173568725586
    10. ' ' → logprob: -17.375173568725586

Token 1089: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2664456789934775e-06
    2. 'import' → logprob: -14.500000953674316
    3. '#' → logprob: -15.125000953674316
    4. ' def' → logprob: -15.250000953674316
    5. '```' → logprob: -16.500001907348633
    6. 'from' → logprob: -17.875001907348633
    7. 'class' → logprob: -18.000001907348633
    8. 'heap' → logprob: -19.125001907348633
    9. 'for' → logprob: -19.250001907348633
    10. ':def' → logprob: -19.500001907348633

Token 1090: ' build' (ID: 3024)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4979489743709564
    2. 'short' → logprob: -1.7479490041732788
    3. 'main' → logprob: -2.2479488849639893
    4. 'solve' → logprob: -3.1229488849639893
    5. 'possible' → logprob: -3.2479488849639893
    6. 'find' → logprob: -5.372949123382568
    7. 'allowed' → logprob: -5.747949123382568
    8. 'parse' → logprob: -5.872949123382568
    9. 'read' → logprob: -5.872949123382568
    10. 'can' → logprob: -6.122949123382568

Token 1091: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -0.02047824114561081
    2. '_' → logprob: -5.395478248596191
    3. 'graph' → logprob: -6.020478248596191
    4. '_map' → logprob: -6.020478248596191
    5. '_adj' → logprob: -6.520478248596191
    6. '_grid' → logprob: -6.645478248596191
    7. '_inter' → logprob: -6.645478248596191
    8. '_path' → logprob: -6.770478248596191
    9. '(graph' → logprob: -6.770478248596191
    10. '_heap' → logprob: -7.145478248596191

Token 1092: '(M' (ID: 6103)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.37233179807662964
    2. '():' → logprob: -1.3723318576812744
    3. '(s' → logprob: -3.7473318576812744
    4. '(grid' → logprob: -4.122331619262695
    5. '(' → logprob: -4.872331619262695
    6. '(M' → logprob: -6.122331619262695
    7. '(def' → logprob: -6.122331619262695
    8. '(lines' → logprob: -7.122331619262695
    9. '(inter' → logprob: -7.497331619262695
    10. '(graph' → logprob: -7.997331619262695

Token 1093: ',N' (ID: 49539)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0033964673057198524
    2. '):' → logprob: -7.253396511077881
    3. ',
' → logprob: -7.503396511077881
    4. ',N' → logprob: -7.503396511077881
    5. ',h' → logprob: -7.753396511077881
    6. ',n' → logprob: -8.753396034240723
    7. '):
' → logprob: -8.753396034240723
    8. ',H' → logprob: -9.128396034240723
    9. 'def' → logprob: -9.253396034240723
    10. ',M' → logprob: -9.378396034240723

Token 1094: ',D' (ID: 61507)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09755735099315643
    2. ',h' → logprob: -2.972557306289673
    3. '):' → logprob: -3.222557306289673
    4. '):
' → logprob: -6.722557544708252
    5. '   ' → logprob: -8.097557067871094
    6. ' ,' → logprob: -9.472557067871094
    7. ',H' → logprob: -9.722557067871094
    8. ',
' → logprob: -10.347557067871094
    9. ',s' → logprob: -10.722557067871094
    10. ',d' → logprob: -10.972557067871094

Token 1095: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021253932267427444
    2. ',h' → logprob: -4.271254062652588
    3. '):' → logprob: -5.771254062652588
    4. '):
' → logprob: -5.771254062652588
    5. ' ,' → logprob: -8.39625358581543
    6. ',
' → logprob: -9.27125358581543
    7. ',s' → logprob: -9.52125358581543
    8. ',d' → logprob: -9.64625358581543
    9. '   ' → logprob: -9.89625358581543
    10. ',list' → logprob: -9.89625358581543

Token 1096: 'signals' (ID: 163922)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.48735594749450684
    2. 'signals' → logprob: -1.2373559474945068
    3. 'H' → logprob: -3.112355947494507
    4. 'inter' → logprob: -3.737355947494507
    5. 'edges' → logprob: -5.237356185913086
    6. 'V' → logprob: -5.862356185913086
    7. 'signal' → logprob: -5.987356185913086
    8. 'horizontal' → logprob: -6.237356185913086
    9. 'grid' → logprob: -6.487356185913086
    10. 'adj' → logprob: -6.987356185913086

Token 1097: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.17187902331352234
    2. ',' → logprob: -2.2968790531158447
    3. '):
' → logprob: -2.9218790531158447
    4. ',h' → logprob: -5.921878814697266
    5. '   ' → logprob: -7.671878814697266
    6. ')' → logprob: -9.296878814697266
    7. ',s' → logprob: -9.796878814697266
    8. '):
' → logprob: -9.796878814697266
    9. ',
' → logprob: -10.171878814697266
    10. '):

' → logprob: -10.546878814697266

Token 1098: 'road' (ID: 12086)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0996122732758522
    2. 'inter' → logprob: -3.599612236022949
    3. 'edges' → logprob: -3.599612236022949
    4. 'adj' → logprob: -4.349612236022949
    5. 'roads' → logprob: -5.599612236022949
    6. 'graph' → logprob: -6.224612236022949
    7. 'grid' → logprob: -6.224612236022949
    8. 'coordinates' → logprob: -6.349612236022949
    9. 'positions' → logprob: -6.474612236022949
    10. 'coords' → logprob: -6.474612236022949

Token 1099: '_invalid' (ID: 71389)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04712438955903053
    2. '_map' → logprob: -3.2971243858337402
    3. '):
' → logprob: -5.42212438583374
    4. 'map' → logprob: -6.54712438583374
    5. '_s' → logprob: -7.04712438583374
    6. '_times' → logprob: -7.92212438583374
    7. '_' → logprob: -8.047124862670898
    8. '_list' → logprob: -8.297124862670898
    9. '):' → logprob: -8.297124862670898
    10. '_types' → logprob: -8.672124862670898

Token 1100: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02386515960097313
    2. '_edges' → logprob: -5.023865222930908
    3. '):
' → logprob: -5.148865222930908
    4. ',' → logprob: -5.148865222930908
    5. '):' → logprob: -6.523865222930908
    6. '_' → logprob: -7.023865222930908
    7. '_s' → logprob: -7.523865222930908
    8. '=' → logprob: -7.648865222930908
    9. '_,' → logprob: -8.64886474609375
    10. ',s' → logprob: -8.89886474609375

Token 1101: 'road' (ID: 12086)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.24360446631908417
    2. 'inter' → logprob: -2.4936044216156006
    3. 'edges' → logprob: -3.4936044216156006
    4. 'adj' → logprob: -3.7436044216156006
    5. 'coord' → logprob: -4.99360466003418
    6. 'road' → logprob: -5.24360466003418
    7. 'positions' → logprob: -5.36860466003418
    8. 'roads' → logprob: -5.36860466003418
    9. 'intersection' → logprob: -5.74360466003418
    10. 'dist' → logprob: -5.86860466003418

Token 1102: '_j' (ID: 12021)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6182740926742554
    2. '_valid' → logprob: -1.7432740926742554
    3. '_allowed' → logprob: -2.493274211883545
    4. '_status' → logprob: -3.368274211883545
    5. '_open' → logprob: -3.993274211883545
    6. 'valid' → logprob: -3.993274211883545
    7. '_invalid' → logprob: -3.993274211883545
    8. '_map' → logprob: -4.368274211883545
    9. '_available' → logprob: -4.493274211883545
    10. '_ok' → logprob: -4.618274211883545

Token 1103: 'am' (ID: 313)
  Prédit: 'ust'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ust' → logprob: -1.1313310861587524
    2. 'unction' → logprob: -1.7563310861587524
    3. 'oin' → logprob: -2.256330966949463
    4. 'ump' → logprob: -2.381330966949463
    5. 'oint' → logprob: -3.006330966949463
    6. 's' → logprob: -3.006330966949463
    7. 'oints' → logprob: -3.131330966949463
    8. 'udge' → logprob: -3.631330966949463
    9. 'invalid' → logprob: -4.131330966949463
    10. 'valid' → logprob: -4.881330966949463

Token 1104: ',' (ID: 11)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.012864530086517334
    2. 's' → logprob: -4.887864589691162
    3. '):' → logprob: -5.887864589691162
    4. ',' → logprob: -6.387864589691162
    5. '   ' → logprob: -8.637864112854004
    6. '):
' → logprob: -9.137864112854004
    7. ',s' → logprob: -9.387864112854004
    8. '_' → logprob: -9.762864112854004
    9. '):

' → logprob: -10.012864112854004
    10. ',
' → logprob: -10.262864112854004

Token 1105: ' jam' (ID: 12438)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.9821311831474304
    2. 'road' → logprob: -1.1071312427520752
    3. 'adj' → logprob: -2.982131242752075
    4. 'inter' → logprob: -3.232131242752075
    5. 'roads' → logprob: -3.232131242752075
    6. 'edges' → logprob: -3.482131242752075
    7. 'dist' → logprob: -4.357131004333496
    8. 'positions' → logprob: -4.732131004333496
    9. 'coord' → logprob: -4.732131004333496
    10. 'graph' → logprob: -4.857131004333496

Token 1106: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -1.0900591611862183
    2. '_times' → logprob: -1.3400591611862183
    3. ')' → logprob: -2.215059280395508
    4. '_map' → logprob: -2.590059280395508
    5. '=' → logprob: -3.465059280395508
    6. '_pen' → logprob: -4.340059280395508
    7. '_count' → logprob: -4.465059280395508
    8. '_cost' → logprob: -4.715059280395508
    9. '_start' → logprob: -4.715059280395508
    10. 's' → logprob: -4.715059280395508

Token 1107: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.16160275042057037
    2. '):
' → logprob: -2.161602735519409
    3. '):' → logprob: -4.411602973937988
    4. ',' → logprob: -5.286602973937988
    5. '=' → logprob: -5.536602973937988
    6. '_map' → logprob: -5.536602973937988
    7. '_times' → logprob: -5.911602973937988
    8. '   ' → logprob: -6.786602973937988
    9. '_s' → logprob: -7.286602973937988
    10. '_cost' → logprob: -7.786602973937988

Token 1108: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.3204273581504822
    2. 'road' → logprob: -2.195427417755127
    3. 'roads' → logprob: -3.945427417755127
    4. 'inter' → logprob: -4.320427417755127
    5. 'edges' → logprob: -4.445427417755127
    6. 'adj' → logprob: -4.570427417755127
    7. 'start' → logprob: -4.695427417755127
    8. 'signals' → logprob: -4.820427417755127
    9. 'intersection' → logprob: -5.195427417755127
    10. 'coord' → logprob: -5.445427417755127

Token 1109: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0007143391412682831
    2. '_list' → logprob: -7.250714302062988
    3. 'List' → logprob: -13.125714302062988
    4. 'lists' → logprob: -13.500714302062988
    5. 'ist' → logprob: -14.625714302062988
    6. '```' → logprob: -17.000715255737305
    7. 'ilist' → logprob: -17.000715255737305
    8. 'lst' → logprob: -17.125715255737305
    9. 'len' → logprob: -17.250715255737305
    10. 'lista' → logprob: -17.375715255737305

Token 1110: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0042671505361795425
    2. ',h' → logprob: -6.50426721572876
    3. '):' → logprob: -6.62926721572876
    4. ',v' → logprob: -6.87926721572876
    5. '):
' → logprob: -8.629266738891602
    6. ',N' → logprob: -9.754266738891602
    7. ',
' → logprob: -10.379266738891602
    8. '   ' → logprob: -11.129266738891602
    9. ' ,' → logprob: -11.254266738891602
    10. ',n' → logprob: -11.254266738891602

Token 1111: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -4.23917081207037e-05
    2. ' v' → logprob: -10.125041961669922
    3. '   ' → logprob: -13.250041961669922
    4. '	v' → logprob: -15.375041961669922
    5. ' ' → logprob: -15.875041961669922
    6. '           ' → logprob: -16.750041961669922
    7. '  ' → logprob: -17.125041961669922
    8. '       ' → logprob: -17.250041961669922
    9. '_v' → logprob: -17.375041961669922
    10. '
' → logprob: -17.625041961669922

Token 1112: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -2.999452772201039e-05
    2. '_list' → logprob: -10.750029563903809
    3. 'ist' → logprob: -12.250029563903809
    4. 'def' → logprob: -14.375029563903809
    5. 'elist' → logprob: -14.375029563903809
    6. '```' → logprob: -14.500029563903809
    7. 'alist' → logprob: -15.375029563903809
    8. 'lists' → logprob: -15.500029563903809
    9. ' list' → logprob: -15.500029563903809
    10. 'ilist' → logprob: -15.625029563903809

Token 1113: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.14822891354560852
    2. '):' → logprob: -2.148228883743286
    3. ',' → logprob: -3.898228883743286
    4. '   ' → logprob: -7.773229122161865
    5. '):
' → logprob: -8.148228645324707
    6. ',s' → logprob: -11.023228645324707
    7. ',h' → logprob: -11.273228645324707
    8. ')' → logprob: -11.398228645324707
    9. 'def' → logprob: -11.648228645324707
    10. '):

' → logprob: -11.773228645324707

Token 1114: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08138272911310196
    2. 'graph' → logprob: -2.5813827514648438
    3. ' graph' → logprob: -6.581382751464844
    4. '	graph' → logprob: -6.831382751464844
    5. '```' → logprob: -11.206382751464844
    6. '   ' → logprob: -11.956382751464844
    7. '_graph' → logprob: -13.206382751464844
    8. '    
' → logprob: -14.706382751464844
    9. '
' → logprob: -14.831382751464844
    10. ' ' → logprob: -14.831382751464844

Token 1115: ' #' (ID: 1069)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.0020109564065933228
    2. '   ' → logprob: -6.252010822296143
    3. 'g' → logprob: -10.3770112991333
    4. 'G' → logprob: -10.6270112991333
    5. ' graph' → logprob: -10.8770112991333
    6. '```' → logprob: -12.5020112991333
    7. 'adj' → logprob: -13.0020112991333
    8. 'Graph' → logprob: -14.6270112991333
    9. 'edges' → logprob: -14.7520112991333
    10. '	graph' → logprob: -15.1270112991333

Token 1116: ' intersections' (ID: 143513)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.0004060050705447793
    2. 'g' → logprob: -8.750406265258789
    3. 'G' → logprob: -9.125406265258789
    4. '   ' → logprob: -9.250406265258789
    5. 'adj' → logprob: -10.375406265258789
    6. 'edges' → logprob: -12.250406265258789
    7. 'import' → logprob: -13.375406265258789
    8. 'def' → logprob: -13.375406265258789
    9. ' graph' → logprob: -13.875406265258789
    10. '
' → logprob: -14.250406265258789

Token 1117: ' are' (ID: 553)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.019073976203799248
    2. '   ' → logprob: -4.269073963165283
    3. '
' → logprob: -6.269073963165283
    4. ' graph' → logprob: -6.394073963165283
    5. 'G' → logprob: -7.769073963165283
    6. '=' → logprob: -8.519074440002441
    7. 'nodes' → logprob: -8.769074440002441
    8. 'def' → logprob: -9.394074440002441
    9. '	graph' → logprob: -9.644074440002441
    10. ' =' → logprob: -9.644074440002441

Token 1118: ' grid' (ID: 10586)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.019427122548222542
    2. '[]' → logprob: -4.019427299499512
    3. '{}
' → logprob: -7.394427299499512
    4. '[(' → logprob: -8.144427299499512
    5. 'dict' → logprob: -8.894427299499512
    6. '{' → logprob: -9.269427299499512
    7. 'graph' → logprob: -9.644427299499512
    8. '[]
' → logprob: -9.769427299499512
    9. 'default' → logprob: -12.144427299499512
    10. '[' → logprob: -12.644427299499512

Token 1119: ' points' (ID: 5571)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.10457578301429749
    2. '   ' → logprob: -2.4795758724212646
    3. ' graph' → logprob: -4.4795756340026855
    4. 'def' → logprob: -6.1045756340026855
    5. 'G' → logprob: -7.3545756340026855
    6. 'adj' → logprob: -8.354576110839844
    7. '```' → logprob: -8.979576110839844
    8. '):
' → logprob: -9.229576110839844
    9. 'g' → logprob: -9.229576110839844
    10. '	graph' → logprob: -9.229576110839844

Token 1120: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5505474805831909
    2. 'graph' → logprob: -0.9255474805831909
    3. ' graph' → logprob: -3.8005475997924805
    4. '	graph' → logprob: -6.3005475997924805
    5. ',' → logprob: -7.0505475997924805
    6. '```' → logprob: -7.6755475997924805
    7. '_graph' → logprob: -8.30054759979248
    8. 'nodes' → logprob: -8.55054759979248
    9. 'def' → logprob: -8.55054759979248
    10. '(graph' → logprob: -8.80054759979248

Token 1121: 'x' (ID: 87)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.4074581563472748
    2. 'range' → logprob: -2.2824580669403076
    3. 'M' → logprob: -2.7824580669403076
    4. ')' → logprob: -3.4074580669403076
    5. '[]' → logprob: -3.6574580669403076
    6. '{' → logprob: -4.032458305358887
    7. '{})' → logprob: -4.157458305358887
    8. '   ' → logprob: -4.782458305358887
    9. '(M' → logprob: -4.907458305358887
    10. '[(' → logprob: -4.907458305358887

Token 1122: ' in' (ID: 306)
  Prédit: ',y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.6607221961021423
    2. '+' → logprob: -1.785722255706787
    3. ',' → logprob: -1.785722255706787
    4. '   ' → logprob: -2.035722255706787
    5. ',h' → logprob: -4.785722255706787
    6. ',N' → logprob: -6.285722255706787
    7. '
' → logprob: -6.785722255706787
    8. '-' → logprob: -6.910722255706787
    9. ' +' → logprob: -7.035722255706787
    10. ',M' → logprob: -7.410722255706787

Token 1123: ' ' (ID: 220)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015769980382174253
    2. '0' → logprob: -6.751576900482178
    3. '[' → logprob: -7.876576900482178
    4. ' range' → logprob: -10.626577377319336
    5. '```' → logprob: -13.251577377319336
    6. '(range' → logprob: -14.251577377319336
    7. '[M' → logprob: -15.626577377319336
    8. '``' → logprob: -16.376577377319336
    9. '`' → logprob: -16.501577377319336
    10. '   ' → logprob: -17.001577377319336

Token 1124: '0' (ID: 15)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.003109976649284363
    2. 'M' → logprob: -6.253109931945801
    3. '0' → logprob: -7.378109931945801
    4. 'N' → logprob: -8.2531099319458
    5. ' range' → logprob: -9.3781099319458
    6. '```' → logprob: -9.6281099319458
    7. '[' → logprob: -9.7531099319458
    8. '`' → logprob: -11.0031099319458
    9. '[M' → logprob: -11.1281099319458
    10. 'h' → logprob: -11.3781099319458

Token 1125: '..' (ID: 485)
  Prédit: ',M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',M' → logprob: -0.5243691802024841
    2. ',' → logprob: -0.8993691802024841
    3. ',
' → logprob: -7.649369239807129
    4. '```' → logprob: -8.024369239807129
    5. ',N' → logprob: -9.149369239807129
    6. ' ,' → logprob: -9.524369239807129
    7. '``' → logprob: -10.024369239807129
    8. '..' → logprob: -10.149369239807129
    9. '`,' → logprob: -10.399369239807129
    10. '`,`' → logprob: -10.649369239807129

Token 1126: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.00029875844484195113
    2. ' M' → logprob: -8.625298500061035
    3. 'N' → logprob: -9.250298500061035
    4. '```' → logprob: -11.875298500061035
    5. '   ' → logprob: -12.625298500061035
    6. ')' → logprob: -12.625298500061035
    7. '`' → logprob: -13.250298500061035
    8. '(M' → logprob: -13.250298500061035
    9. '``' → logprob: -13.375298500061035
    10. '
' → logprob: -13.500298500061035

Token 1127: '-' (ID: 12)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4664927124977112
    2. '-' → logprob: -1.0914926528930664
    3. ',N' → logprob: -3.4664926528930664
    4. ',
' → logprob: -6.341492652893066
    5. '```' → logprob: -6.466492652893066
    6. ')' → logprob: -7.591492652893066
    7. '   ' → logprob: -7.716492652893066
    8. '
' → logprob: -8.466492652893066
    9. '),' → logprob: -8.716492652893066
    10. ',M' → logprob: -8.716492652893066

Token 1128: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007195804500952363
    2. 'N' → logprob: -7.2507195472717285
    3. '```' → logprob: -12.125720024108887
    4. '
' → logprob: -13.625720024108887
    5. ' ' → logprob: -14.375720024108887
    6. '   ' → logprob: -14.750720024108887
    7. '``' → logprob: -14.875720024108887
    8. '`' → logprob: -15.250720024108887
    9. ')' → logprob: -15.250720024108887
    10. '2' → logprob: -15.250720024108887

Token 1129: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.31396546959877014
    2. ',y' → logprob: -1.3139654397964478
    3. ' ,' → logprob: -8.563965797424316
    4. '   ' → logprob: -8.938965797424316
    5. ',
' → logprob: -9.063965797424316
    6. 'y' → logprob: -9.563965797424316
    7. '```' → logprob: -9.563965797424316
    8. ')' → logprob: -10.063965797424316
    9. '),' → logprob: -10.688965797424316
    10. '):
' → logprob: -11.063965797424316

Token 1130: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0005326599348336458
    2. ' y' → logprob: -7.625532627105713
    3. '
' → logprob: -10.750533103942871
    4. '   ' → logprob: -11.000533103942871
    5. 'N' → logprob: -12.875533103942871
    6. '```' → logprob: -13.625533103942871
    7. '#' → logprob: -14.375533103942871
    8. ' ' → logprob: -14.500533103942871
    9. ')' → logprob: -15.250533103942871
    10. ',' → logprob: -15.500533103942871

Token 1131: ' in' (ID: 306)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -1.0518265962600708
    2. '+' → logprob: -1.4268265962600708
    3. '):' → logprob: -2.0518264770507812
    4. ',' → logprob: -2.0518264770507812
    5. '   ' → logprob: -2.1768264770507812
    6. 'def' → logprob: -5.051826477050781
    7. ')' → logprob: -5.051826477050781
    8. '=' → logprob: -5.176826477050781
    9. ',y' → logprob: -5.301826477050781
    10. ',N' → logprob: -5.426826477050781

Token 1132: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07228130102157593
    2. 'N' → logprob: -2.9472813606262207
    3. 'range' → logprob: -4.072281360626221
    4. ' range' → logprob: -8.697280883789062
    5. '   ' → logprob: -10.822280883789062
    6. ' N' → logprob: -11.822280883789062
    7. ' ' → logprob: -11.822280883789062
    8. '```' → logprob: -13.447280883789062
    9. '<|end|>' → logprob: -13.572280883789062
    10. '[' → logprob: -13.572280883789062

Token 1133: '0' (ID: 15)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.01208904106169939
    2. '0' → logprob: -5.012089252471924
    3. 'range' → logprob: -5.262089252471924
    4. ' range' → logprob: -9.262088775634766
    5. ' N' → logprob: -10.387088775634766
    6. '```' → logprob: -11.512088775634766
    7. '
' → logprob: -11.637088775634766
    8. '1' → logprob: -12.012088775634766
    9. '   ' → logprob: -12.262088775634766
    10. 'M' → logprob: -12.262088775634766

Token 1134: '..' (ID: 485)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15807680785655975
    2. ',M' → logprob: -2.533076763153076
    3. ',
' → logprob: -3.283076763153076
    4. '   ' → logprob: -4.908076763153076
    5. ',N' → logprob: -4.908076763153076
    6. '```' → logprob: -5.533076763153076
    7. '...' → logprob: -6.033076763153076
    8. ')' → logprob: -6.908076763153076
    9. '..' → logprob: -6.908076763153076
    10. '
' → logprob: -7.158076763153076

Token 1135: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -2.236549335066229e-05
    2. ' N' → logprob: -11.625021934509277
    3. '
' → logprob: -12.125021934509277
    4. '0' → logprob: -13.125021934509277
    5. '   ' → logprob: -13.250021934509277
    6. '```' → logprob: -13.250021934509277
    7. '``' → logprob: -14.000021934509277
    8. '1' → logprob: -14.500021934509277
    9. '`' → logprob: -16.125022888183594
    10. 'M' → logprob: -16.250022888183594

Token 1136: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.16806770861148834
    2. '):
' → logprob: -1.9180676937103271
    3. ')' → logprob: -5.668067932128906
    4. '):' → logprob: -6.543067932128906
    5. '):

' → logprob: -6.668067932128906
    6. '```' → logprob: -7.793067932128906
    7. ')
' → logprob: -8.168067932128906
    8. 'def' → logprob: -8.293067932128906
    9. '
' → logprob: -9.293067932128906
    10. '   ' → logprob: -9.293067932128906

Token 1137: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.729906196298543e-06
    2. '-' → logprob: -11.750009536743164
    3. '0' → logprob: -13.375009536743164
    4. '```' → logprob: -15.250009536743164
    5. '``' → logprob: -17.250009536743164
    6. '2' → logprob: -17.625009536743164
    7. '   ' → logprob: -17.875009536743164
    8. 'def' → logprob: -18.125009536743164
    9. ' ' → logprob: -18.250009536743164
    10. '
' → logprob: -19.000009536743164

Token 1138: ')
' (ID: 446)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.61367267370224
    2. '):' → logprob: -1.7386727333068848
    3. '   ' → logprob: -2.1136727333068848
    4. ')' → logprob: -2.2386727333068848
    5. ')
' → logprob: -3.2386727333068848
    6. ',' → logprob: -4.738672733306885
    7. 'def' → logprob: -5.988672733306885
    8. '
' → logprob: -6.113672733306885
    9. '```' → logprob: -6.238672733306885
    10. '):

' → logprob: -7.613672733306885

Token 1139: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07724565267562866
    2. ' graph' → logprob: -2.8272457122802734
    3. 'graph' → logprob: -4.202245712280273
    4. '```' → logprob: -9.702245712280273
    5. '	graph' → logprob: -9.702245712280273
    6. ' edges' → logprob: -9.827245712280273
    7. 'edges' → logprob: -11.702245712280273
    8. '``' → logprob: -12.577245712280273
    9. 'Graph' → logprob: -13.202245712280273
    10. '
' → logprob: -13.202245712280273

Token 1140: ' #' (ID: 1069)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.0003700165543705225
    2. '   ' → logprob: -8.625370025634766
    3. 'G' → logprob: -9.125370025634766
    4. 'g' → logprob: -10.250370025634766
    5. 'adj' → logprob: -10.750370025634766
    6. 'edges' → logprob: -11.875370025634766
    7. ' graph' → logprob: -12.000370025634766
    8. '```' → logprob: -12.625370025634766
    9. 'import' → logprob: -12.875370025634766
    10. 'Graph' → logprob: -13.375370025634766

Token 1141: ' edges' (ID: 22569)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.0015909154899418354
    2. '   ' → logprob: -6.751590728759766
    3. 'G' → logprob: -8.001590728759766
    4. 'g' → logprob: -9.751590728759766
    5. 'adj' → logprob: -11.001590728759766
    6. 'edges' → logprob: -12.126590728759766
    7. ' graph' → logprob: -13.376590728759766
    8. '
' → logprob: -13.751590728759766
    9. '    
' → logprob: -14.251590728759766
    10. 'Graph' → logprob: -14.251590728759766

Token 1142: ' between' (ID: 2870)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.12231070548295975
    2. '   ' → logprob: -2.2473106384277344
    3. ' graph' → logprob: -4.872310638427734
    4. '	graph' → logprob: -7.247310638427734
    5. 'edges' → logprob: -7.622310638427734
    6. '
' → logprob: -7.747310638427734
    7. 'g' → logprob: -10.247310638427734
    8. ' edges' → logprob: -10.622310638427734
    9. 'G' → logprob: -10.747310638427734
    10. '    
' → logprob: -10.872310638427734

Token 1143: ' adjacent' (ID: 39069)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.20097222924232483
    2. 'adj' → logprob: -2.200972318649292
    3. 'inter' → logprob: -3.075972318649292
    4. '(' → logprob: -5.325972080230713
    5. ' adjacent' → logprob: -5.700972080230713
    6. ' intersections' → logprob: -5.700972080230713
    7. '(inter' → logprob: -6.075972080230713
    8. 'x' → logprob: -6.200972080230713
    9. ' (' → logprob: -6.450972080230713
    10. 'intersection' → logprob: -6.575972080230713

Token 1144: ' intersections' (ID: 143513)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.4217226803302765
    2. ' intersections' → logprob: -2.046722650527954
    3. 'nodes' → logprob: -2.171722650527954
    4. 'cells' → logprob: -2.671722650527954
    5. ' nodes' → logprob: -4.546722888946533
    6. 'points' → logprob: -4.921722888946533
    7. 'x' → logprob: -5.421722888946533
    8. ' cells' → logprob: -5.671722888946533
    9. '_inter' → logprob: -5.796722888946533
    10. '   ' → logprob: -7.546722888946533

Token 1145: ' horizontally' (ID: 113653)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.5541215538978577
    2. '   ' → logprob: -1.179121494293213
    3. ' graph' → logprob: -2.179121494293213
    4. '	graph' → logprob: -6.054121494293213
    5. 'edges' → logprob: -6.804121494293213
    6. ' edges' → logprob: -7.554121494293213
    7. '```' → logprob: -8.304121971130371
    8. '
' → logprob: -8.679121971130371
    9. '    
' → logprob: -9.179121971130371
    10. '_graph' → logprob: -10.304121971130371

Token 1146: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6869960427284241
    2. 'graph' → logprob: -0.8119960427284241
    3. 'edges' → logprob: -4.061995983123779
    4. ' graph' → logprob: -4.186995983123779
    5. ' and' → logprob: -5.561995983123779
    6. ',' → logprob: -5.936995983123779
    7. ':' → logprob: -6.186995983123779
    8. '	graph' → logprob: -6.186995983123779
    9. ' edges' → logprob: -6.311995983123779
    10. '```' → logprob: -6.436995983123779

Token 1147: ' vertically' (ID: 94774)
  Prédit: 'vert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vert' → logprob: -0.001367857912555337
    2. ' vertically' → logprob: -6.626368045806885
    3. 'vertical' → logprob: -10.126367568969727
    4. ' vert' → logprob: -13.751367568969727
    5. '_vert' → logprob: -14.876367568969727
    6. '```' → logprob: -15.626367568969727
    7. 'Vert' → logprob: -15.626367568969727
    8. '   ' → logprob: -16.501367568969727
    9. '
' → logprob: -16.876367568969727
    10. 'verts' → logprob: -17.001367568969727

Token 1148: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2778794467449188
    2. 'graph' → logprob: -1.6528794765472412
    3. ' graph' → logprob: -3.027879476547241
    4. '	graph' → logprob: -7.027879238128662
    5. '
' → logprob: -7.402879238128662
    6. 'edges' → logprob: -7.652879238128662
    7. ' edges' → logprob: -8.02787971496582
    8. '```' → logprob: -9.15287971496582
    9. '    
' → logprob: -9.27787971496582
    10. ',' → logprob: -9.90287971496582

Token 1149: ' no' (ID: 860)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -1.2554000616073608
    2. '(' → logprob: -1.6304000616073608
    3. '((' → logprob: -1.7554000616073608
    4. '(not' → logprob: -1.7554000616073608
    5. 'road' → logprob: -2.5054001808166504
    6. '(h' → logprob: -3.5054001808166504
    7. '(f' → logprob: -3.7554001808166504
    8. '(j' → logprob: -4.75540018081665
    9. '(s' → logprob: -5.00540018081665
    10. '(x' → logprob: -5.50540018081665

Token 1150: ' road' (ID: 8733)
  Prédit: 'road'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'road' → logprob: -0.8037323951721191
    2. 'invalid' → logprob: -0.8037323951721191
    3. ' invalid' → logprob: -2.678732395172119
    4. ' road' → logprob: -3.553732395172119
    5. '   ' → logprob: -6.678732395172119
    6. '\t' → logprob: -7.428732395172119
    7. '```' → logprob: -7.428732395172119
    8. 'blocked' → logprob: -7.553732395172119
    9. 'restriction' → logprob: -7.678732395172119
    10. 'tab' → logprob: -7.803732395172119

Token 1151: '_invalid' (ID: 71389)
  Prédit: 'invalid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'invalid' → logprob: -0.8811635971069336
    2. '   ' → logprob: -1.2561635971069336
    3. 'block' → logprob: -2.6311635971069336
    4. 'is' → logprob: -2.8811635971069336
    5. 'blocked' → logprob: -3.5061635971069336
    6. 'break' → logprob: -4.006163597106934
    7. '_invalid' → logprob: -4.131163597106934
    8. 'for' → logprob: -4.381163597106934
    9. ' invalid' → logprob: -4.631163597106934
    10. ' is' → logprob: -4.631163597106934

Token 1152: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.127242311835289
    2. 'graph' → logprob: -3.50224232673645
    3. 'edges' → logprob: -4.002242088317871
    4. ':' → logprob: -4.252242088317871
    5. '
' → logprob: -4.377242088317871
    6. ':
' → logprob: -4.502242088317871
    7. 'def' → logprob: -4.627242088317871
    8. '):
' → logprob: -5.002242088317871
    9. ',' → logprob: -5.252242088317871
    10. '```' → logprob: -5.877242088317871

Token 1153: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2868897318840027
    2. 'graph' → logprob: -1.4118897914886475
    3. ' graph' → logprob: -5.411889553070068
    4. 'edges' → logprob: -7.786889553070068
    5. '```' → logprob: -7.786889553070068
    6. '	graph' → logprob: -8.411890029907227
    7. '    
' → logprob: -10.286890029907227
    8. '
' → logprob: -10.286890029907227
    9. ',' → logprob: -10.411890029907227
    10. ' edges' → logprob: -10.536890029907227

Token 1154: ' #' (ID: 1069)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.005681449547410011
    2. '   ' → logprob: -5.25568151473999
    3. ' graph' → logprob: -8.255681037902832
    4. 'G' → logprob: -9.005681037902832
    5. 'g' → logprob: -9.880681037902832
    6. 'edges' → logprob: -12.380681037902832
    7. 'adj' → logprob: -12.755681037902832
    8. '```' → logprob: -12.880681037902832
    9. 'Graph' → logprob: -13.380681037902832
    10. '	graph' → logprob: -13.880681037902832

Token 1155: ' Create' (ID: 6585)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.0015902003506198525
    2. '   ' → logprob: -6.751590251922607
    3. 'g' → logprob: -8.50158977508545
    4. 'G' → logprob: -8.75158977508545
    5. 'adj' → logprob: -10.62658977508545
    6. 'edges' → logprob: -10.62658977508545
    7. ' graph' → logprob: -12.12658977508545
    8. 'Graph' → logprob: -13.75158977508545
    9. '```' → logprob: -14.25158977508545
    10. 'def' → logprob: -14.37658977508545

Token 1156: ' adjacency' (ID: 177015)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -5.9795445849886164e-05
    2. 'g' → logprob: -10.875060081481934
    3. 'adj' → logprob: -11.000060081481934
    4. 'G' → logprob: -11.375060081481934
    5. 'edges' → logprob: -12.000060081481934
    6. ' graph' → logprob: -12.250060081481934
    7. '   ' → logprob: -14.500060081481934
    8. '```' → logprob: -14.875060081481934
    9. 'Graph' → logprob: -15.000060081481934
    10. 'from' → logprob: -15.500060081481934

Token 1157: ' list' (ID: 1562)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.35798776149749756
    2. 'list' → logprob: -1.3579877614974976
    3. '   ' → logprob: -3.482987880706787
    4. 'def' → logprob: -5.107987880706787
    5. '_list' → logprob: -6.107987880706787
    6. 'adj' → logprob: -6.107987880706787
    7. '{
' → logprob: -6.857987880706787
    8. ' =' → logprob: -7.857987880706787
    9. ' graph' → logprob: -7.857987880706787
    10. '{' → logprob: -8.482987403869629

Token 1158: ':
' (ID: 734)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.23120588064193726
    2. '   ' → logprob: -1.981205940246582
    3. ' graph' → logprob: -2.856205940246582
    4. '```' → logprob: -5.106205940246582
    5. '):
' → logprob: -6.731205940246582
    6. '
' → logprob: -6.856205940246582
    7. '	graph' → logprob: -7.481205940246582
    8. ':' → logprob: -7.481205940246582
    9. 'adj' → logprob: -7.731205940246582
    10. 'def' → logprob: -8.606205940246582

Token 1159: '   ' (ID: 271)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.035985153168439865
    2. ' graph' → logprob: -3.535985231399536
    3. '   ' → logprob: -5.160984992980957
    4. '```' → logprob: -7.910984992980957
    5. '	graph' → logprob: -9.660984992980957
    6. 'adj' → logprob: -10.410984992980957
    7. '{
' → logprob: -12.285984992980957
    8. '``' → logprob: -12.285984992980957
    9. 'g' → logprob: -12.410984992980957
    10. '_graph' → logprob: -13.785984992980957

Token 1160: ' #' (ID: 1069)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.00013119110371917486
    2. 'adj' → logprob: -9.500131607055664
    3. ' graph' → logprob: -10.250131607055664
    4. '   ' → logprob: -11.250131607055664
    5. 'g' → logprob: -12.250131607055664
    6. '```' → logprob: -13.250131607055664
    7. 'G' → logprob: -13.750131607055664
    8. '	graph' → logprob: -15.125131607055664
    9. 'Graph' → logprob: -16.500131607055664
    10. '{
' → logprob: -17.500131607055664

Token 1161: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.0004497381451074034
    2. '   ' → logprob: -8.250450134277344
    3. 'adj' → logprob: -8.750450134277344
    4. ' graph' → logprob: -11.250450134277344
    5. '```' → logprob: -11.750450134277344
    6. 'g' → logprob: -12.000450134277344
    7. 'G' → logprob: -13.500450134277344
    8. '``' → logprob: -14.875450134277344
    9. '
' → logprob: -15.000450134277344
    10. 'Graph' → logprob: -15.250450134277344

Token 1162: '[node' (ID: 67268)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.3083491325378418
    2. '=' → logprob: -1.5583491325378418
    3. ' =' → logprob: -2.933349132537842
    4. '{}' → logprob: -7.183349132537842
    5. '   ' → logprob: -7.683349132537842
    6. ' graph' → logprob: -8.933349609375
    7. '={}' → logprob: -9.433349609375
    8. '{' → logprob: -10.058349609375
    9. 'default' → logprob: -10.308349609375
    10. '	graph' → logprob: -10.433349609375

Token 1163: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6243457198143005
    2. '=' → logprob: -1.7493457794189453
    3. ']' → logprob: -1.7493457794189453
    4. 's' → logprob: -2.3743457794189453
    5. ')' → logprob: -4.374345779418945
    6. ']=' → logprob: -5.249345779418945
    7. ':' → logprob: -6.499345779418945
    8. '```' → logprob: -6.749345779418945
    9. ',' → logprob: -7.499345779418945
    10. '):
' → logprob: -7.749345779418945

Token 1164: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20156683027744293
    2. ' =' → logprob: -1.7015668153762817
    3. '={}' → logprob: -8.951566696166992
    4. '={' → logprob: -12.076566696166992
    5. '   ' → logprob: -12.201566696166992
    6. '=[]' → logprob: -12.576566696166992
    7. '={}
' → logprob: -13.326566696166992
    8. '```' → logprob: -13.326566696166992
    9. '{}' → logprob: -13.576566696166992
    10. '{' → logprob: -13.701566696166992

Token 1165: ' list' (ID: 1562)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -9.996708104154095e-05
    2. '[]' → logprob: -9.500100135803223
    3. '{' → logprob: -10.750100135803223
    4. 'default' → logprob: -12.750100135803223
    5. 'dict' → logprob: -14.375100135803223
    6. '{}
' → logprob: -16.375099182128906
    7. '{})' → logprob: -17.250099182128906
    8. '{
' → logprob: -17.500099182128906
    9. ' {}' → logprob: -17.625099182128906
    10. 'collections' → logprob: -18.500099182128906

Token 1166: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.661098837852478
    2. '   ' → logprob: -1.661098837852478
    3. ' of' → logprob: -1.786098837852478
    4. ' =' → logprob: -1.911098837852478
    5. '[]' → logprob: -2.0360989570617676
    6. '=[]' → logprob: -2.7860989570617676
    7. '[(' → logprob: -3.4110989570617676
    8. '```' → logprob: -3.9110989570617676
    9. 'of' → logprob: -4.036098957061768
    10. '[' → logprob: -4.411098957061768

Token 1167: ' (' (ID: 350)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.24458467960357666
    2. 'neighbors' → logprob: -2.744584560394287
    3. '((' → logprob: -2.994584560394287
    4. '(x' → logprob: -3.244584560394287
    5. '[(' → logprob: -3.744584560394287
    6. '(' → logprob: -4.369584560394287
    7. ' (' → logprob: -4.619584560394287
    8. '(node' → logprob: -5.994584560394287
    9. '[]
' → logprob: -5.994584560394287
    10. '[])' → logprob: -6.119584560394287

Token 1168: 'neighbor' (ID: 108409)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6881011724472046
    2. '(node' → logprob: -1.3131011724472046
    3. 'node' → logprob: -2.313101291656494
    4. '((' → logprob: -2.688101291656494
    5. '(x' → logprob: -3.938101291656494
    6. 'neighbor' → logprob: -4.063101291656494
    7. '(' → logprob: -5.313101291656494
    8. ' ((' → logprob: -6.063101291656494
    9. ' node' → logprob: -6.188101291656494
    10. 'dir' → logprob: -6.188101291656494

Token 1169: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004203882534056902
    2. ',node' → logprob: -5.879203796386719
    3. ',
' → logprob: -7.254203796386719
    4. ')' → logprob: -8.129203796386719
    5. '```' → logprob: -8.879203796386719
    6. '   ' → logprob: -9.379203796386719
    7. '_,' → logprob: -10.004203796386719
    8. ' ,' → logprob: -10.879203796386719
    9. '_node' → logprob: -10.879203796386719
    10. '_nodes' → logprob: -11.254203796386719

Token 1170: ' travel' (ID: 6410)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.13309116661548615
    2. 'distance' → logprob: -3.3830912113189697
    3. 'weight' → logprob: -3.8830912113189697
    4. '1' → logprob: -4.383090972900391
    5. 'road' → logprob: -4.383090972900391
    6. 'time' → logprob: -4.383090972900391
    7. ' cost' → logprob: -5.258090972900391
    8. ')' → logprob: -5.258090972900391
    9. 'travel' → logprob: -5.508090972900391
    10. 'dist' → logprob: -6.008090972900391

Token 1171: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.01465160958468914
    2. 'time' → logprob: -4.514651775360107
    3. '_cost' → logprob: -5.764651775360107
    4. 'cost' → logprob: -8.51465129852295
    5. '   ' → logprob: -9.13965129852295
    6. ')' → logprob: -9.38965129852295
    7. ',' → logprob: -10.13965129852295
    8. ' time' → logprob: -11.51465129852295
    9. '    ' → logprob: -12.88965129852295
    10. '_' → logprob: -13.26465129852295

Token 1172: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2519545555114746
    2. ')' → logprob: -1.6269545555114746
    3. '_time' → logprob: -4.251954555511475
    4. '   ' → logprob: -5.626954555511475
    5. '[' → logprob: -6.251954555511475
    6. 'time' → logprob: -6.376954555511475
    7. '[node' → logprob: -7.626954555511475
    8. 's' → logprob: -7.751954555511475
    9. ',node' → logprob: -7.751954555511475
    10. '_' → logprob: -7.876954555511475

Token 1173: '   ' (ID: 271)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.20655308663845062
    2. '   ' → logprob: -1.8315531015396118
    3. '```' → logprob: -4.081552982330322
    4. ' graph' → logprob: -5.206552982330322
    5. 'def' → logprob: -6.206552982330322
    6. '``' → logprob: -7.206552982330322
    7. '):
' → logprob: -7.456552982330322
    8. '	graph' → logprob: -7.581552982330322
    9. '
' → logprob: -9.83155345916748
    10. '(graph' → logprob: -9.95655345916748

Token 1174: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.02031821385025978
    2. '   ' → logprob: -4.020318031311035
    3. ' graph' → logprob: -6.645318031311035
    4. '	graph' → logprob: -7.145318031311035
    5. '```' → logprob: -9.645318031311035
    6. '{
' → logprob: -12.520318031311035
    7. '
' → logprob: -13.270318031311035
    8. '    
' → logprob: -13.270318031311035
    9. '``' → logprob: -13.395318031311035
    10. '_graph' → logprob: -13.520318031311035

Token 1175: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012537315487861633
    2. ' =' → logprob: -4.512537479400635
    3. '={}' → logprob: -6.512537479400635
    4. '={' → logprob: -13.012537002563477
    5. '={}
' → logprob: -14.262537002563477
    6. '=[]' → logprob: -14.512537002563477
    7. '   ' → logprob: -15.262537002563477
    8. '{}' → logprob: -16.012537002563477
    9. '＝' → logprob: -17.387537002563477
    10. ' ' → logprob: -17.762537002563477

Token 1176: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.018727963790297508
    2. '{' → logprob: -4.018727779388428
    3. '[[' → logprob: -8.268728256225586
    4. '[' → logprob: -9.018728256225586
    5. '{}
' → logprob: -9.268728256225586
    6. 'default' → logprob: -9.768728256225586
    7. 'dict' → logprob: -10.268728256225586
    8. ' {}' → logprob: -11.518728256225586
    9. '{}

' → logprob: -13.518728256225586
    10. ' [[]' → logprob: -13.518728256225586

Token 1177: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3173304796218872
    2. 'for' → logprob: -1.6923304796218872
    3. ' for' → logprob: -2.4423303604125977
    4. '    
' → logprob: -7.942330360412598
    5. '
' → logprob: -8.442330360412598
    6. '	for' → logprob: -8.567330360412598
    7. ' M' → logprob: -10.317330360412598
    8. '```' → logprob: -10.442330360412598
    9. 'M' → logprob: -11.317330360412598
    10. '  
' → logprob: -12.317330360412598

Token 1178: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.005099033936858177
    2. ' for' → logprob: -5.630098819732666
    3. '   ' → logprob: -6.505098819732666
    4. '```' → logprob: -13.630099296569824
    5. ' ' → logprob: -15.005099296569824
    6. '	for' → logprob: -15.755099296569824
    7. 'M' → logprob: -16.380098342895508
    8. '    
' → logprob: -16.630098342895508
    9. 'from' → logprob: -16.880098342895508
    10. '``' → logprob: -16.880098342895508

Token 1179: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.011136958375573158
    2. 'y' → logprob: -4.511137008666992
    3. ' x' → logprob: -9.511137008666992
    4. ' y' → logprob: -11.261137008666992
    5. 'i' → logprob: -13.386137008666992
    6. '_x' → logprob: -15.511137008666992
    7. 'h' → logprob: -15.511137008666992
    8. '(x' → logprob: -16.011137008666992
    9. '   ' → logprob: -16.511137008666992
    10. '	x' → logprob: -16.886137008666992

Token 1180: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16034729778766632
    2. 'in' → logprob: -1.91034734249115
    3. ',' → logprob: -10.160346984863281
    4. '	in' → logprob: -10.535346984863281
    5. '   ' → logprob: -10.785346984863281
    6. '0' → logprob: -11.160346984863281
    7. ')' → logprob: -12.410346984863281
    8. ' ' → logprob: -12.410346984863281
    9. '=' → logprob: -12.910346984863281
    10. 'x' → logprob: -13.285346984863281

Token 1181: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.009518897160887718
    2. ' range' → logprob: -4.759519100189209
    3. '0' → logprob: -7.009519100189209
    4. 'in' → logprob: -15.38451862335205
    5. '(range' → logprob: -15.63451862335205
    6. ' ' → logprob: -16.009519577026367
    7. ' xrange' → logprob: -17.509519577026367
    8. '	range' → logprob: -17.634519577026367
    9. '(' → logprob: -18.134519577026367
    10. ' in' → logprob: -18.134519577026367

Token 1182: '(M' (ID: 6103)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.16036172211170197
    2. '(M' → logprob: -1.9103617668151855
    3. '0' → logprob: -9.285361289978027
    4. '   ' → logprob: -10.785361289978027
    5. '(' → logprob: -11.160361289978027
    6. ' M' → logprob: -11.785361289978027
    7. '	M' → logprob: -13.410361289978027
    8. '1' → logprob: -14.910361289978027
    9. ' ' → logprob: -15.910361289978027
    10. 'def' → logprob: -16.410362243652344

Token 1183: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0701291635632515
    2. '):' → logprob: -2.695129156112671
    3. '   ' → logprob: -8.94512939453125
    4. '):
' → logprob: -10.57012939453125
    5. '+' → logprob: -11.57012939453125
    6. '-' → logprob: -11.69512939453125
    7. ':' → logprob: -11.82012939453125
    8. ' ):
' → logprob: -13.44512939453125
    9. ':
' → logprob: -13.57012939453125
    10. ' ' → logprob: -13.69512939453125

Token 1184: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5449044704437256
    2. '   ' → logprob: -0.9199044704437256
    3. 'for' → logprob: -4.419904708862305
    4. '	for' → logprob: -5.419904708862305
    5. ' ' → logprob: -5.669904708862305
    6. '       ' → logprob: -7.044904708862305
    7. '```' → logprob: -8.169904708862305
    8. '<|end|>' → logprob: -8.169904708862305
    9. '   ' → logprob: -9.919904708862305
    10. ' ' → logprob: -10.419904708862305

Token 1185: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2532781660556793
    2. ' for' → logprob: -1.503278136253357
    3. '   ' → logprob: -6.6282782554626465
    4. '	for' → logprob: -11.753277778625488
    5. ' y' → logprob: -12.128277778625488
    6. ' ' → logprob: -12.128277778625488
    7. 'y' → logprob: -12.253277778625488
    8. '```' → logprob: -13.503277778625488
    9. '       ' → logprob: -14.128277778625488
    10. ' ' → logprob: -17.253278732299805

Token 1186: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0003357006062287837
    2. ' y' → logprob: -8.000335693359375
    3. '   ' → logprob: -15.500335693359375
    4. 'x' → logprob: -17.125335693359375
    5. '	y' → logprob: -19.125335693359375
    6. '0' → logprob: -19.875335693359375
    7. ' ' → logprob: -20.625335693359375
    8. '       ' → logprob: -21.625335693359375
    9. '_y' → logprob: -22.250335693359375
    10. 'def' → logprob: -22.375335693359375

Token 1187: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07895974069833755
    2. 'in' → logprob: -2.5789597034454346
    3. '   ' → logprob: -10.078959465026855
    4. '	in' → logprob: -10.953959465026855
    5. '    ' → logprob: -12.953959465026855
    6. ' ' → logprob: -13.078959465026855
    7. '(' → logprob: -13.703959465026855
    8. '=' → logprob: -13.953959465026855
    9. '       ' → logprob: -13.953959465026855
    10. '	' → logprob: -14.828959465026855

Token 1188: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02374187856912613
    2. ' range' → logprob: -3.7737419605255127
    3. '(' → logprob: -8.398741722106934
    4. '(range' → logprob: -8.773741722106934
    5. '0' → logprob: -9.773741722106934
    6. '1' → logprob: -9.898741722106934
    7. '(N' → logprob: -12.148741722106934
    8. 'N' → logprob: -13.148741722106934
    9. '   ' → logprob: -14.148741722106934
    10. '	range' → logprob: -15.023741722106934

Token 1189: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.22062301635742188
    2. '1' → logprob: -2.470623016357422
    3. '(' → logprob: -2.845623016357422
    4. '(N' → logprob: -3.095623016357422
    5. '0' → logprob: -5.095623016357422
    6. '   ' → logprob: -6.095623016357422
    7. ' N' → logprob: -7.345623016357422
    8. ' (' → logprob: -7.470623016357422
    9. ' ' → logprob: -8.970623016357422
    10. 'range' → logprob: -9.095623016357422

Token 1190: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.019081462174654007
    2. '):' → logprob: -4.0190815925598145
    3. '   ' → logprob: -7.8940815925598145
    4. '       ' → logprob: -8.019081115722656
    5. ':' → logprob: -9.269081115722656
    6. ':
' → logprob: -9.519081115722656
    7. '           ' → logprob: -10.519081115722656
    8. ',' → logprob: -11.394081115722656
    9. '):
' → logprob: -11.394081115722656
    10. ''):
' → logprob: -12.769081115722656

Token 1191: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7377706170082092
    2. '           ' → logprob: -0.7377706170082092
    3. '   ' → logprob: -3.2377705574035645
    4. ' node' → logprob: -6.4877705574035645
    5. 'node' → logprob: -7.1127705574035645
    6. ' for' → logprob: -7.9877705574035645
    7. 'graph' → logprob: -8.237771034240723
    8. ',' → logprob: -8.487771034240723
    9. '	   ' → logprob: -8.487771034240723
    10. ' graph' → logprob: -8.987771034240723

Token 1192: ' node' (ID: 4596)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.28210487961769104
    2. 'node' (adapté à ' node') → logprob: -2.032104969024658
    3. '   ' → logprob: -3.032104969024658
    4. '           ' → logprob: -3.032104969024658
    5. '       ' → logprob: -5.032104969024658
    6. 'pos' → logprob: -5.282104969024658
    7. 'key' → logprob: -5.782104969024658
    8. '               ' → logprob: -6.532104969024658
    9. 'u' → logprob: -7.032104969024658
    10. ' graph' → logprob: -7.782104969024658

Token 1193: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11609780788421631
    2. ' =' → logprob: -2.241097927093506
    3. '=[]' → logprob: -6.991097927093506
    4. '.setdefault' → logprob: -7.366097927093506
    5. '   ' → logprob: -8.241097450256348
    6. '={}' → logprob: -8.741097450256348
    7. ']' → logprob: -8.741097450256348
    8. ',' → logprob: -8.991097450256348
    9. '[' → logprob: -9.116097450256348
    10. '=(' → logprob: -9.241097450256348

Token 1194: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.4819261431694031
    2. ' (' → logprob: -0.9819261431694031
    3. '(' → logprob: -4.856925964355469
    4. '(f' → logprob: -10.481925964355469
    5. '   ' → logprob: -12.481925964355469
    6. '(y' → logprob: -12.731925964355469
    7. '           ' → logprob: -13.231925964355469
    8. '(h' → logprob: -13.356925964355469
    9. ' ' → logprob: -13.481925964355469
    10. '(coord' → logprob: -14.356925964355469

Token 1195: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.054500666621607e-06
    2. ' x' → logprob: -12.75000286102295
    3. ')x' → logprob: -17.500003814697266
    4. '(x' → logprob: -18.625003814697266
    5. '   ' → logprob: -19.875003814697266
    6. '	x' → logprob: -20.625003814697266
    7. ''x' → logprob: -21.500003814697266
    8. ' ' → logprob: -22.250003814697266
    9. '"x' → logprob: -22.625003814697266
    10. '
' → logprob: -22.750003814697266

Token 1196: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.00689534330740571
    2. ',' → logprob: -5.006895542144775
    3. ' ,' → logprob: -8.631895065307617
    4. ',
' → logprob: -14.131895065307617
    5. '   ' → logprob: -15.506895065307617
    6. '           ' → logprob: -15.631895065307617
    7. ',Y' → logprob: -16.131895065307617
    8. ',j' → logprob: -16.381895065307617
    9. ',user' → logprob: -16.881895065307617
    10. '```' → logprob: -17.006895065307617

Token 1197: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.1603740155696869
    2. ')' → logprob: -1.9103740453720093
    3. '           ' → logprob: -9.66037368774414
    4. '   ' → logprob: -9.91037368774414
    5. ')
' → logprob: -11.53537368774414
    6. ',' → logprob: -11.78537368774414
    7. '):
' → logprob: -12.28537368774414
    8. '       ' → logprob: -12.41037368774414
    9. ',)
' → logprob: -12.66037368774414
    10. ',
' → logprob: -13.66037368774414

Token 1198: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.45790496468544006
    2. '       ' → logprob: -1.4579049348831177
    3. '   ' → logprob: -2.0829050540924072
    4. 'graph' → logprob: -4.957904815673828
    5. ' graph' → logprob: -6.207904815673828
    6. '	graph' → logprob: -7.957904815673828
    7. '               ' → logprob: -8.457904815673828
    8. '	       ' → logprob: -8.582904815673828
    9. '	' → logprob: -9.207904815673828
    10. '	   ' → logprob: -9.332904815673828

Token 1199: ' neighbors' (ID: 31655)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.02344113029539585
    2. 'neighbors' (adapté à ' neighbors') → logprob: -4.148441314697266
    3. 'edges' → logprob: -5.148441314697266
    4. 'adj' → logprob: -6.773441314697266
    5. '   ' → logprob: -8.398441314697266
    6. 'nbr' → logprob: -9.523441314697266
    7. 'lst' → logprob: -9.898441314697266
    8. 'ne' → logprob: -10.398441314697266
    9. '       ' → logprob: -11.273441314697266
    10. 'neighbor' → logprob: -12.023441314697266

Token 1200: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5822502374649048
    2. ' =' → logprob: -0.8322502374649048
    3. '=[]' → logprob: -6.457250118255615
    4. '[' → logprob: -6.457250118255615
    5. '.' → logprob: -6.707250118255615
    6. '.append' → logprob: -7.832250118255615
    7. '[]' → logprob: -7.832250118255615
    8. '   ' → logprob: -8.457250595092773
    9. '.setdefault' → logprob: -8.582250595092773
    10. '[
' → logprob: -8.832250595092773

Token 1201: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.004679799545556307
    2. ' []' → logprob: -5.7546796798706055
    3. '[]
' → logprob: -6.5046796798706055
    4. ' []
' → logprob: -12.879679679870605
    5. '[' → logprob: -13.754679679870605
    6. '[]

' → logprob: -14.379679679870605
    7. '[]}' → logprob: -15.754679679870605
    8. '   ' → logprob: -16.129680633544922
    9. '[])' → logprob: -17.754680633544922
    10. ' ' → logprob: -17.754680633544922

Token 1202: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2931533455848694
    2. 'for' → logprob: -2.1681532859802246
    3. ' for' → logprob: -2.9181532859802246
    4. '       ' → logprob: -3.1681532859802246
    5. '	       ' → logprob: -4.543153285980225
    6. '		' → logprob: -4.668153285980225
    7. '#' → logprob: -5.293153285980225
    8. '	   ' → logprob: -5.293153285980225
    9. '
' → logprob: -6.418153285980225
    10. 'if' → logprob: -6.543153285980225

Token 1203: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07395218312740326
    2. 'dire' → logprob: -3.3239521980285645
    3. 'dirs' → logprob: -4.5739521980285645
    4. '#' (adapté à ' #') → logprob: -4.5739521980285645
    5. 'if' → logprob: -4.8239521980285645
    6. 'dx' → logprob: -5.6989521980285645
    7. '           ' → logprob: -6.0739521980285645
    8. 'd' → logprob: -8.198951721191406
    9. 'h' → logprob: -8.323951721191406
    10. 'dir' → logprob: -8.448951721191406

Token 1204: ' four' (ID: 4242)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15719613432884216
    2. 'dx' → logprob: -2.782196044921875
    3. 'if' → logprob: -3.157196044921875
    4. 'dirs' → logprob: -4.157196044921875
    5. 'dire' → logprob: -4.407196044921875
    6. '#' → logprob: -4.407196044921875
    7. '           ' → logprob: -7.782196044921875
    8. 'dir' → logprob: -9.282196044921875
    9. 'hx' → logprob: -9.407196044921875
    10. ' for' → logprob: -9.407196044921875

Token 1205: ' directions' (ID: 24921)
  Prédit: ' directions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' directions' → logprob: -0.2828250229358673
    2. 'dire' → logprob: -1.407824993133545
    3. 'dirs' → logprob: -7.157824993133545
    4. ' for' → logprob: -7.907824993133545
    5. 'for' → logprob: -8.282825469970703
    6. 'dx' → logprob: -9.782825469970703
    7. ' dirs' → logprob: -10.032825469970703
    8. ' possible' → logprob: -10.157825469970703
    9. 'irections' → logprob: -11.157825469970703
    10. ' dx' → logprob: -11.157825469970703

Token 1206: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6397900581359863
    2. '           ' → logprob: -1.5147900581359863
    3. 'for' → logprob: -2.1397900581359863
    4. ' directions' → logprob: -2.2647900581359863
    5. '   ' → logprob: -4.639790058135986
    6. 'dire' → logprob: -4.889790058135986
    7. '
' → logprob: -5.514790058135986
    8. 'd' → logprob: -6.514790058135986
    9. ':' → logprob: -6.639790058135986
    10. ' =' → logprob: -7.014790058135986

Token 1207: '           ' (ID: 352)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6535561680793762
    2. 'for' → logprob: -1.6535561084747314
    3. '           ' → logprob: -1.7785561084747314
    4. ' directions' → logprob: -2.5285561084747314
    5. 'dire' → logprob: -4.6535563468933105
    6. '   ' → logprob: -4.9035563468933105
    7. ' =' → logprob: -5.2785563468933105
    8. '       ' → logprob: -5.4035563468933105
    9. ':' → logprob: -5.4035563468933105
    10. 'dirs' → logprob: -6.4035563468933105

Token 1208: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.015075001865625381
    2. 'dire' → logprob: -5.015075206756592
    3. 'dirs' → logprob: -5.265075206756592
    4. ' for' → logprob: -6.640075206756592
    5. 'dx' → logprob: -6.640075206756592
    6. ' directions' → logprob: -8.765074729919434
    7. '           ' → logprob: -8.765074729919434
    8. 'd' → logprob: -9.390074729919434
    9. 'dir' → logprob: -9.640074729919434
    10. '   ' → logprob: -10.765074729919434

Token 1209: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.3201307952404022
    2. 'dir' → logprob: -1.5701308250427246
    3. 'd' → logprob: -2.8201308250427246
    4. 'nd' → logprob: -6.070130825042725
    5. 'ndir' → logprob: -6.195130825042725
    6. 'direction' → logprob: -7.445130825042725
    7. '(dx' → logprob: -7.445130825042725
    8. 'nx' → logprob: -7.820130825042725
    9. '(dir' → logprob: -9.320130348205566
    10. ' dx' → logprob: -9.320130348205566

Token 1210: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4794604778289795
    2. ',d' → logprob: -0.9794604778289795
    3. ',y' → logprob: -6.354460716247559
    4. ',n' → logprob: -6.979460716247559
    5. ',de' → logprob: -6.979460716247559
    6. ',v' → logprob: -7.479460716247559
    7. ' ,' → logprob: -8.854460716247559
    8. ',t' → logprob: -9.104460716247559
    9. ',value' → logprob: -9.104460716247559
    10. ',next' → logprob: -9.104460716247559

Token 1211: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -5.157039049663581e-05
    2. ' dy' → logprob: -9.875051498413086
    3. 'd' → logprob: -18.500051498413086
    4. 'Dy' → logprob: -18.625051498413086
    5. 'dym' → logprob: -19.125051498413086
    6. '.dy' → logprob: -19.125051498413086
    7. '0' → logprob: -19.500051498413086
    8. '```' → logprob: -19.625051498413086
    9. ',' → logprob: -19.875051498413086
    10. 'ddy' → logprob: -20.875051498413086

Token 1212: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.25197911262512207
    2. 'in' → logprob: -1.501979112625122
    3. ',' → logprob: -10.001978874206543
    4. ',in' → logprob: -13.626978874206543
    5. '   ' → logprob: -13.751978874206543
    6. '	in' → logprob: -14.626978874206543
    7. '    ' → logprob: -14.751978874206543
    8. ' ' → logprob: -14.876978874206543
    9. ' ,' → logprob: -15.126978874206543
    10. ')' → logprob: -15.126978874206543

Token 1213: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.01688392460346222
    2. 'dir' → logprob: -4.891883850097656
    3. '[' → logprob: -5.391883850097656
    4. ' [(' → logprob: -5.766883850097656
    5. 'next' → logprob: -6.766883850097656
    6. '[((' → logprob: -8.641883850097656
    7. ' dir' → logprob: -9.391883850097656
    8. ' next' → logprob: -9.641883850097656
    9. '[
' → logprob: -10.641883850097656
    10. ' [' → logprob: -11.016883850097656

Token 1214: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015622387873008847
    2. '0' → logprob: -6.501562118530273
    3. '-' → logprob: -10.001562118530273
    4. '(' → logprob: -11.501562118530273
    5. ' ' → logprob: -12.376562118530273
    6. '(-' → logprob: -15.751562118530273
    7. ' -' → logprob: -17.126562118530273
    8. '   ' → logprob: -18.001562118530273
    9. '```' → logprob: -18.001562118530273
    10. ' (' → logprob: -18.001562118530273

Token 1215: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.060365608893335e-05
    2. '0' → logprob: -10.375041007995605
    3. ' ,' → logprob: -11.625041007995605
    4. '<|end|>' → logprob: -15.625041007995605
    5. ',
' → logprob: -16.00004005432129
    6. '‌,' → logprob: -18.37504005432129
    7. '   ' → logprob: -18.50004005432129
    8. ')' → logprob: -19.12504005432129
    9. '```' → logprob: -19.12504005432129
    10. '),' → logprob: -19.37504005432129

Token 1216: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '   ' → logprob: -18.875
    4. ',' → logprob: -20.25
    5. '۰' → logprob: -20.75
    6. '00' → logprob: -21.375
    7. '```' → logprob: -22.375
    8. '	' → logprob: -22.75
    9. '  ' → logprob: -22.8125
    10. '=' → logprob: -22.875

Token 1217: '),' (ID: 936)
  Prédit: '),('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.5794490575790405
    2. '),' → logprob: -0.8294490575790405
    3. ',' → logprob: -5.95444917678833
    4. '),
' → logprob: -7.70444917678833
    5. '),'' → logprob: -8.454448699951172
    6. ',),' → logprob: -9.204448699951172
    7. ','' → logprob: -9.954448699951172
    8. '   ' → logprob: -10.329448699951172
    9. ',(' → logprob: -10.829448699951172
    10. '           ' → logprob: -11.454448699951172

Token 1218: '(-' (ID: 8087)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04962597414851189
    2. '(' → logprob: -3.049625873565674
    3. '(-' → logprob: -7.424625873565674
    4. ' ' → logprob: -8.424626350402832
    5. '-' → logprob: -8.674626350402832
    6. ' (' → logprob: -9.924626350402832
    7. ' -' → logprob: -14.049626350402832
    8. ' (-' → logprob: -14.299626350402832
    9. '   ' → logprob: -15.549626350402832
    10. ',' → logprob: -16.049625396728516

Token 1219: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. '0' → logprob: -12.75000286102295
    3. '```' → logprob: -20.250003814697266
    4. ' ' → logprob: -20.875003814697266
    5. '   ' → logprob: -21.625003814697266
    6. '
' → logprob: -21.875003814697266
    7. '2' → logprob: -22.125003814697266
    8. '3' → logprob: -22.875003814697266
    9. '``' → logprob: -22.875003814697266
    10. '{' → logprob: -23.250003814697266

Token 1220: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8193366486229934e-05
    2. '0' → logprob: -11.000018119812012
    3. ' ,' → logprob: -13.500018119812012
    4. '<|end|>' → logprob: -18.125019073486328
    5. ',
' → logprob: -19.250019073486328
    6. '           ' → logprob: -19.750019073486328
    7. ' ' → logprob: -20.125019073486328
    8. '   ' → logprob: -20.250019073486328
    9. 'def' → logprob: -20.625019073486328
    10. '‌,' → logprob: -20.625019073486328

Token 1221: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. ',' → logprob: -20.125
    4. '```' → logprob: -20.25
    5. '۰' → logprob: -20.75
    6. '   ' → logprob: -21.0
    7. '=' → logprob: -21.9375
    8. '[' → logprob: -22.125
    9. '
' → logprob: -22.1875
    10. '1' → logprob: -22.25

Token 1222: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.3283478617668152
    2. ',' → logprob: -1.32834792137146
    3. '),' → logprob: -4.203347682952881
    4. '0' → logprob: -11.453348159790039
    5. ' ,' → logprob: -12.078348159790039
    6. '),
' → logprob: -12.953348159790039
    7. ',(' → logprob: -13.203348159790039
    8. ' ),' → logprob: -13.328348159790039
    9. ',),' → logprob: -13.328348159790039
    10. '],[' → logprob: -14.328348159790039

Token 1223: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.511406809295295e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -17.0000057220459
    4. '(' → logprob: -17.0000057220459
    5. '```' → logprob: -17.2500057220459
    6. ',' → logprob: -17.3750057220459
    7. '
' → logprob: -17.6250057220459
    8. '00' → logprob: -17.6250057220459
    9. '۰' → logprob: -17.7500057220459
    10. '...' → logprob: -18.6875057220459

Token 1224: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6931484341621399
    2. ',-' → logprob: -0.6931484341621399
    3. ',
' → logprob: -14.818148612976074
    4. ',+' → logprob: -14.943148612976074
    5. ' ,' → logprob: -16.068147659301758
    6. ',-
' → logprob: -16.443147659301758
    7. '-' → logprob: -16.693147659301758
    8. '1' → logprob: -16.693147659301758
    9. ' ,-' → logprob: -16.943147659301758
    10. ',--' → logprob: -17.068147659301758

Token 1225: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3132637143135071
    2. '-' → logprob: -1.3132636547088623
    3. ' -' → logprob: -13.563263893127441
    4. '```' → logprob: -14.313263893127441
    5. ' ' → logprob: -17.438262939453125
    6. '
' → logprob: -17.563262939453125
    7. '   ' → logprob: -17.813262939453125
    8. '``' → logprob: -18.438262939453125
    9. '−' → logprob: -18.563262939453125
    10. '{-' → logprob: -19.813262939453125

Token 1226: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.1609145849943161
    2. '),' → logprob: -1.9109145402908325
    3. ')]' → logprob: -8.535914421081543
    4. ')' → logprob: -8.535914421081543
    5. ',' → logprob: -8.660914421081543
    6. '):' → logprob: -9.410914421081543
    7. '),
' → logprob: -10.660914421081543
    8. ',),' → logprob: -12.160914421081543
    9. ')],' → logprob: -12.660914421081543
    10. '):(' → logprob: -12.785914421081543

Token 1227: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016035307198762894
    2. '-' → logprob: -4.141035079956055
    3. ' -' → logprob: -14.266035079956055
    4. ' ' → logprob: -15.641035079956055
    5. '(' → logprob: -16.516035079956055
    6. '```' → logprob: -17.141035079956055
    7. 'def' → logprob: -17.641035079956055
    8. '−' → logprob: -18.391035079956055
    9. '   ' → logprob: -18.641035079956055
    10. ')' → logprob: -18.891035079956055

Token 1228: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.007630057632923126
    2. ',' → logprob: -4.882629871368408
    3. '-' → logprob: -10.757630348205566
    4. ',-
' → logprob: -14.007630348205566
    5. ',
' → logprob: -14.507630348205566
    6. '0' → logprob: -15.132630348205566
    7. '```' → logprob: -15.257630348205566
    8. ',-

' → logprob: -15.382630348205566
    9. ' ,-' → logprob: -16.13262939453125
    10. '
' → logprob: -17.13262939453125

Token 1229: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006720705423504114
    2. '0' → logprob: -5.006720542907715
    3. '```' → logprob: -12.756720542907715
    4. '``' → logprob: -14.006720542907715
    5. '   ' → logprob: -14.131720542907715
    6. ' ' → logprob: -14.881720542907715
    7. '
' → logprob: -15.756720542907715
    8. ')' → logprob: -16.38172149658203
    9. ')]' → logprob: -17.13172149658203
    10. '           ' → logprob: -17.88172149658203

Token 1230: ')]' (ID: 15710)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5486575365066528
    2. ')]' → logprob: -0.9236575365066528
    3. ')' → logprob: -4.423657417297363
    4. '):' → logprob: -4.798657417297363
    5. '           ' → logprob: -5.798657417297363
    6. '       ' → logprob: -7.298657417297363
    7. ']:
' → logprob: -7.798657417297363
    8. '   ' → logprob: -8.173657417297363
    9. '               ' → logprob: -9.048657417297363
    10. ']):
' → logprob: -9.423657417297363

Token 1231: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06774891167879105
    2. ':
' → logprob: -3.1927490234375
    3. '               ' → logprob: -4.4427490234375
    4. ',' → logprob: -5.1927490234375
    5. '<|end|>' → logprob: -5.9427490234375
    6. '       ' → logprob: -6.4427490234375
    7. '           ' → logprob: -7.0677490234375
    8. '{' → logprob: -7.4427490234375
    9. '   ' → logprob: -8.0677490234375
    10. '<|end|>' → logprob: -8.5677490234375

Token 1232: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0017928705783560872
    2. '           ' → logprob: -7.376792907714844
    3. ' nx' → logprob: -8.126792907714844
    4. '   ' → logprob: -8.626792907714844
    5. 'nx' → logprob: -9.126792907714844
    6. '	           ' → logprob: -9.251792907714844
    7. ' next' → logprob: -9.376792907714844
    8. ' x' → logprob: -9.626792907714844
    9. ' new' → logprob: -9.626792907714844
    10. '                
' → logprob: -9.876792907714844

Token 1233: ' nx' (ID: 50118)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' (adapté à ' nx') → logprob: -0.06206493452191353
    2. ' nx' → logprob: -2.8120648860931396
    3. 'x' → logprob: -10.937065124511719
    4. 'next' → logprob: -11.062065124511719
    5. 'n' → logprob: -11.312065124511719
    6. '               ' → logprob: -11.437065124511719
    7. 'tx' → logprob: -11.812065124511719
    8. '   ' → logprob: -12.062065124511719
    9. ' x' → logprob: -12.437065124511719
    10. '(nx' → logprob: -12.562065124511719

Token 1234: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.929332435131073
    2. ' =' → logprob: -1.0543324947357178
    3. '=x' → logprob: -1.5543324947357178
    4. ',x' → logprob: -3.9293324947357178
    5. ',' → logprob: -4.179332256317139
    6. ',n' → logprob: -4.929332256317139
    7. '=n' → logprob: -6.304332256317139
    8. '=node' → logprob: -7.429332256317139
    9. '=
' → logprob: -8.304332733154297
    10. ',y' → logprob: -9.054332733154297

Token 1235: ' ny' (ID: 4423)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0018318959046155214
    2. ' y' → logprob: -7.126832008361816
    3. 'x' → logprob: -7.751832008361816
    4. '=' → logprob: -8.501832008361816
    5. '(y' → logprob: -9.251832008361816
    6. ' =' → logprob: -9.376832008361816
    7. '<|end|>' → logprob: -9.501832008361816
    8. 'ny' → logprob: -9.751832008361816
    9. '0' → logprob: -11.001832008361816
    10. 'n' → logprob: -11.876832008361816

Token 1236: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018323305994272232
    2. ' =' → logprob: -4.0183234214782715
    3. '=x' → logprob: -8.768322944641113
    4. '=n' → logprob: -11.893322944641113
    5. '=node' → logprob: -11.893322944641113
    6. '=
' → logprob: -12.893322944641113
    7. '=(' → logprob: -15.393322944641113
    8. '=int' → logprob: -16.01832389831543
    9. '=user' → logprob: -16.14332389831543
    10. ')' → logprob: -16.51832389831543

Token 1237: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.005233763717114925
    2. ' x' → logprob: -5.2552337646484375
    3. '(x' → logprob: -18.755233764648438
    4. '	x' → logprob: -18.880233764648438
    5. '   ' → logprob: -19.755233764648438
    6. ')x' → logprob: -20.130233764648438
    7. ' ' → logprob: -22.005233764648438
    8. '"x' → logprob: -22.255233764648438
    9. '{x' → logprob: -23.130233764648438
    10. '>x' → logprob: -23.130233764648438

Token 1238: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16055697202682495
    2. ' +' → logprob: -1.9105570316314697
    3. '+x' → logprob: -8.16055679321289
    4. '+d' → logprob: -10.41055679321289
    5. '+n' → logprob: -12.53555679321289
    6. '+D' → logprob: -12.91055679321289
    7. '<|end|>' → logprob: -13.28555679321289
    8. '+w' → logprob: -13.53555679321289
    9. '+
' → logprob: -13.53555679321289
    10. '+k' → logprob: -13.91055679321289

Token 1239: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -5.9153885558771435e-06
    2. ' dx' → logprob: -12.125005722045898
    3. '(dx' → logprob: -15.250005722045898
    4. '_dx' → logprob: -16.8750057220459
    5. '0' → logprob: -18.1250057220459
    6. 'd' → logprob: -18.8750057220459
    7. '.dx' → logprob: -19.0000057220459
    8. 'Dx' → logprob: -20.0000057220459
    9. '   ' → logprob: -20.2500057220459
    10. ' ' → logprob: -20.8750057220459

Token 1240: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00036263695801608264
    2. ',y' → logprob: -8.000362396240234
    3. ' ,' → logprob: -10.625362396240234
    4. ',n' → logprob: -13.125362396240234
    5. '```' → logprob: -14.750362396240234
    6. '                   ' → logprob: -15.625362396240234
    7. ',
' → logprob: -15.875362396240234
    8. '   ' → logprob: -16.375362396240234
    9. 'ny' → logprob: -17.250362396240234
    10. '               ' → logprob: -17.375362396240234

Token 1241: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0015023599844425917
    2. ' y' → logprob: -6.501502513885498
    3. '	y' → logprob: -18.001502990722656
    4. '   ' → logprob: -18.126502990722656
    5. '(y' → logprob: -18.376502990722656
    6. 'ny' → logprob: -19.626502990722656
    7. '0' → logprob: -19.876502990722656
    8. '               ' → logprob: -20.001502990722656
    9. '                   ' → logprob: -20.001502990722656
    10. ' ' → logprob: -20.126502990722656

Token 1242: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.17617273330688477
    2. '<|end|>' → logprob: -1.9261727333068848
    3. 'dy' → logprob: -4.676172733306885
    4. ',' → logprob: -6.051172733306885
    5. '<|end|>' → logprob: -7.051172733306885
    6. '[' → logprob: -7.051172733306885
    7. ' dy' → logprob: -7.426172733306885
    8. ' ' → logprob: -8.426172256469727
    9. '#' → logprob: -8.676172256469727
    10. '*' → logprob: -9.176172256469727

Token 1243: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.014522149227559566
    2. '0' → logprob: -4.264522075653076
    3. '1' → logprob: -8.014522552490234
    4. ' dy' → logprob: -10.639522552490234
    5. ' ' → logprob: -12.514522552490234
    6. '   ' → logprob: -16.014522552490234
    7. 'd' → logprob: -16.764522552490234
    8. '(' → logprob: -16.764522552490234
    9. 'y' → logprob: -17.389522552490234
    10. 'dym' → logprob: -17.639522552490234

Token 1244: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1245: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004723795282188803
    2. '			' → logprob: -8.500472068786621
    3. '<|end|>' → logprob: -9.000472068786621
    4. '		       ' → logprob: -10.000472068786621
    5. '	           ' → logprob: -10.500472068786621
    6. ' if' → logprob: -11.000472068786621
    7. '<|end|>' → logprob: -11.500472068786621
    8. 'if' → logprob: -11.750472068786621
    9. '	' → logprob: -12.000472068786621
    10. '	       ' → logprob: -12.000472068786621

Token 1246: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.10039126873016357
    2. ' if' → logprob: -2.350391387939453
    3. '               ' → logprob: -8.600391387939453
    4. '                   ' → logprob: -14.725391387939453
    5. '                ' → logprob: -15.975391387939453
    6. '   ' → logprob: -16.850391387939453
    7. '	if' → logprob: -16.975391387939453
    8. '           ' → logprob: -17.100391387939453
    9. ' ' → logprob: -18.475391387939453
    10. '              ' → logprob: -18.975391387939453

Token 1247: ' ' (ID: 220)
  Prédit: 'inside'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inside' → logprob: -0.06994754821062088
    2. ' inside' → logprob: -2.6949474811553955
    3. '0' → logprob: -12.569947242736816
    4. ' ' → logprob: -13.069947242736816
    5. ' not' → logprob: -13.319947242736816
    6. 'not' → logprob: -13.444947242736816
    7. '   ' → logprob: -14.444947242736816
    8. '(' → logprob: -14.569947242736816
    9. 'Inside' → logprob: -15.069947242736816
    10. '_inside' → logprob: -15.319947242736816

Token 1248: '0' (ID: 15)
  Prédit: 'inside'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inside' → logprob: -0.0010412635747343302
    2. ' inside' → logprob: -6.876041412353516
    3. 'not' → logprob: -12.501041412353516
    4. '0' → logprob: -12.501041412353516
    5. '(' → logprob: -15.376041412353516
    6. 'Inside' → logprob: -15.751041412353516
    7. 'nx' → logprob: -15.876041412353516
    8. ' ' → logprob: -16.251041412353516
    9. '_inside' → logprob: -16.501041412353516
    10. '1' → logprob: -16.626041412353516

Token 1249: ' <=' (ID: 5017)
  Prédit: '<M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<M' → logprob: -0.4832901358604431
    2. '<' → logprob: -1.358290195465088
    3. ' <' → logprob: -2.733290195465088
    4. '<=' → logprob: -3.233290195465088
    5. '<len' → logprob: -3.983290195465088
    6. '<x' → logprob: -7.233290195465088
    7. '<size' → logprob: -7.608290195465088
    8. ' <=' → logprob: -7.733290195465088
    9. '<LM' → logprob: -7.858290195465088
    10. '<n' → logprob: -7.983290195465088

Token 1250: ' nx' (ID: 50118)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.00010592726175673306
    2. ' nx' → logprob: -9.250105857849121
    3. '(nx' → logprob: -11.625105857849121
    4. 'n' → logprob: -15.500105857849121
    5. '   ' → logprob: -15.625105857849121
    6. 'ny' → logprob: -15.875105857849121
    7. '                   ' → logprob: -16.000106811523438
    8. '               ' → logprob: -16.625106811523438
    9. '```' → logprob: -16.875106811523438
    10. '           ' → logprob: -17.500106811523438

Token 1251: ' <' (ID: 464)
  Prédit: '<M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<M' → logprob: -0.004172898828983307
    2. ' <' → logprob: -6.0041728019714355
    3. '<N' → logprob: -7.0041728019714355
    4. '<' → logprob: -7.2541728019714355
    5. 'and' → logprob: -10.254173278808594
    6. '<n' → logprob: -10.879173278808594
    7. 'M' → logprob: -11.379173278808594
    8. '<m' → logprob: -11.879173278808594
    9. ' and' → logprob: -12.379173278808594
    10. '<LM' → logprob: -14.254173278808594

Token 1252: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.00010914575977949426
    2. ' M' → logprob: -9.12510871887207
    3. '   ' → logprob: -16.87510871887207
    4. 'x' → logprob: -17.00010871887207
    5. ' ' → logprob: -17.87510871887207
    6. '	M' → logprob: -18.62510871887207
    7. 'import' → logprob: -18.62510871887207
    8. '>M' → logprob: -18.62510871887207
    9. '(M' → logprob: -18.87510871887207
    10. '<M' → logprob: -19.00010871887207

Token 1253: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.12692883610725403
    2. 'and' → logprob: -2.1269288063049316
    3. '	and' → logprob: -15.12692928314209
    4. '               ' → logprob: -15.62692928314209
    5. ' ' → logprob: -16.126928329467773
    6. '           ' → logprob: -16.126928329467773
    7. '<|end|>' → logprob: -16.876928329467773
    8. '                ' → logprob: -17.751928329467773
    9. '            ' → logprob: -18.126928329467773
    10. ' ' → logprob: -18.126928329467773

Token 1254: ' ' (ID: 220)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00632359366863966
    2. ' N' → logprob: -5.50632381439209
    3. 'ny' → logprob: -6.75632381439209
    4. '0' → logprob: -7.13132381439209
    5. ' ny' → logprob: -8.38132381439209
    6. ' ' → logprob: -10.75632381439209
    7. '   ' → logprob: -12.38132381439209
    8. 'n' → logprob: -12.38132381439209
    9. 'Ny' → logprob: -12.75632381439209
    10. '    ' → logprob: -13.38132381439209

Token 1255: '0' (ID: 15)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0009753053891472518
    2. 'ny' → logprob: -7.375975131988525
    3. ' N' → logprob: -8.500975608825684
    4. '0' → logprob: -9.125975608825684
    5. ' ny' → logprob: -10.875975608825684
    6. 'n' → logprob: -11.625975608825684
    7. ' ' → logprob: -13.000975608825684
    8. '1' → logprob: -13.375975608825684
    9. 'Ny' → logprob: -14.750975608825684
    10. 'nyi' → logprob: -14.750975608825684

Token 1256: ' <=' (ID: 5017)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.043610263615846634
    2. '<N' → logprob: -3.7936103343963623
    3. ' <' → logprob: -4.668610095977783
    4. 'ny' → logprob: -5.668610095977783
    5. ' N' → logprob: -5.668610095977783
    6. ' ny' → logprob: -6.293610095977783
    7. '<' → logprob: -6.543610095977783
    8. 'n' → logprob: -9.043610572814941
    9. 'Ny' → logprob: -9.043610572814941
    10. ' ' → logprob: -9.293610572814941

Token 1257: ' ny' (ID: 4423)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.000317231344524771
    2. 'ny' → logprob: -8.125317573547363
    3. ' N' → logprob: -11.125317573547363
    4. 'y' → logprob: -13.250317573547363
    5. 'Ny' → logprob: -13.375317573547363
    6. ' ny' → logprob: -14.125317573547363
    7. '   ' → logprob: -14.500317573547363
    8. 'NY' → logprob: -15.125317573547363
    9. 'n' → logprob: -15.500317573547363
    10. '
' → logprob: -15.500317573547363

Token 1258: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.16054114699363708
    2. '<N' → logprob: -1.9105411767959595
    3. '<' → logprob: -8.160541534423828
    4. 'N' → logprob: -11.035541534423828
    5. '[N' → logprob: -11.535541534423828
    6. '<n' → logprob: -12.910541534423828
    7. '(N' → logprob: -13.785541534423828
    8. ' ' → logprob: -14.660541534423828
    9. '<size' → logprob: -15.285541534423828
    10. '   ' → logprob: -15.410541534423828

Token 1259: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -4.143808109802194e-05
    2. ' N' → logprob: -10.125041007995605
    3. '   ' → logprob: -14.125041007995605
    4. ' ' → logprob: -16.000041961669922
    5. '	N' → logprob: -16.625041961669922
    6. '  ' → logprob: -17.000041961669922
    7. '           ' → logprob: -17.250041961669922
    8. '{' → logprob: -17.375041961669922
    9. '       ' → logprob: -17.375041961669922
    10. '
' → logprob: -17.625041961669922

Token 1260: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.13758589327335358
    2. '                   ' → logprob: -2.5125858783721924
    3. '               ' → logprob: -4.1375861167907715
    4. ':
' → logprob: -4.2625861167907715
    5. ':' → logprob: -4.5125861167907715
    6. 'and' → logprob: -5.1375861167907715
    7. '                       ' → logprob: -8.762585639953613
    8. ',' → logprob: -9.262585639953613
    9. '                ' → logprob: -9.887585639953613
    10. '<|end|>' → logprob: -10.012585639953613

Token 1261: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01731809601187706
    2. ' and' → logprob: -4.267318248748779
    3. '               ' → logprob: -6.642318248748779
    4. '```' → logprob: -7.767318248748779
    5. 'and' → logprob: -7.892318248748779
    6. '                       ' → logprob: -8.142317771911621
    7. ':' → logprob: -8.392317771911621
    8. '		           ' → logprob: -9.392317771911621
    9. '<|end|>' → logprob: -9.642317771911621
    10. ':
' → logprob: -9.892317771911621

Token 1262: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.19184400141239166
    2. 'road' → logprob: -1.9418439865112305
    3. 'edge' → logprob: -4.5668439865112305
    4. '   ' → logprob: -4.9418439865112305
    5. 'key' → logprob: -5.1918439865112305
    6. 'if' → logprob: -5.8168439865112305
    7. '               ' → logprob: -6.8168439865112305
    8. '#' (adapté à ' #') → logprob: -7.1918439865112305
    9. 'next' → logprob: -7.1918439865112305
    10. 'neighbor' → logprob: -7.3168439865112305

Token 1263: ' map' (ID: 4014)
  Prédit: 'road'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'road' → logprob: -0.3771255612373352
    2. 'edge' → logprob: -1.5021255016326904
    3. '                   ' → logprob: -3.3771255016326904
    4. 'key' → logprob: -4.2521257400512695
    5. 'if' → logprob: -4.3771257400512695
    6. 'neighbor' → logprob: -5.1271257400512695
    7. 'from' → logprob: -5.2521257400512695
    8. '#' → logprob: -5.6271257400512695
    9. 'next' → logprob: -5.7521257400512695
    10. 'direction' → logprob: -5.7521257400512695

Token 1264: ' back' (ID: 1602)
  Prédit: ' road'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' road' → logprob: -0.8788936734199524
    2. 'road' → logprob: -0.8788936734199524
    3. 'key' → logprob: -2.5038936138153076
    4. ' key' → logprob: -3.3788936138153076
    5. '                   ' → logprob: -3.6288936138153076
    6. '_key' → logprob: -5.003893852233887
    7. 'edge' → logprob: -5.003893852233887
    8. 'h' → logprob: -5.503893852233887
    9. 'node' → logprob: -6.503893852233887
    10. 'ing' → logprob: -7.128893852233887

Token 1265: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.415998250246048
    2. ' to' → logprob: -1.7909982204437256
    3. 'h' → logprob: -2.6659982204437256
    4. '                   ' → logprob: -3.4159982204437256
    5. '(h' → logprob: -4.790998458862305
    6. 'nx' → logprob: -4.915998458862305
    7. '(nx' → logprob: -5.165998458862305
    8. ' h' → logprob: -5.290998458862305
    9. '                       ' → logprob: -5.415998458862305
    10. '```' → logprob: -5.415998458862305

Token 1266: ' intersection' (ID: 42002)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.008113444782793522
    2. ' h' → logprob: -5.008113384246826
    3. '(h' → logprob: -7.758113384246826
    4. 'direction' → logprob: -8.883113861083984
    5. ' (' → logprob: -9.633113861083984
    6. '#' → logprob: -9.758113861083984
    7. 'coord' → logprob: -9.883113861083984
    8. 'coordinates' → logprob: -10.008113861083984
    9. ''h' → logprob: -10.133113861083984
    10. 'indices' → logprob: -10.133113861083984

Token 1267: ' string' (ID: 1621)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1841959953308105
    2. '_h' → logprob: -1.1841959953308105
    3. ',' → logprob: -2.1841959953308105
    4. '_name' → logprob: -2.5591959953308105
    5. 'h' → logprob: -2.6841959953308105
    6. 's' → logprob: -2.9341959953308105
    7. '                   ' → logprob: -3.8091959953308105
    8. 'name' → logprob: -4.5591959953308105
    9. '                    
' → logprob: -5.1841959953308105
    10. ',h' → logprob: -5.4341959953308105

Token 1268: ' to' (ID: 316)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1715097278356552
    2. ' =' → logprob: -3.4215097427368164
    3. ' h' → logprob: -3.6715097427368164
    4. 'h' → logprob: -3.9215097427368164
    5. '<|end|>' → logprob: -4.296509742736816
    6. '                    
' → logprob: -4.546509742736816
    7. ',' → logprob: -5.046509742736816
    8. '_h' → logprob: -5.171509742736816
    9. '<|end|>' → logprob: -5.546509742736816
    10. '               ' → logprob: -5.546509742736816

Token 1269: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.8504807949066162
    2. ' check' → logprob: -1.1004807949066162
    3. 'h' → logprob: -1.8504807949066162
    4. 'continue' → logprob: -3.350480794906616
    5. ' continue' → logprob: -4.475481033325195
    6. 'calculate' → logprob: -5.100481033325195
    7. ' h' → logprob: -5.225481033325195
    8. '_check' → logprob: -5.475481033325195
    9. 'get' → logprob: -5.600481033325195
    10. ')' → logprob: -6.225481033325195

Token 1270: ' road' (ID: 8733)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.772055983543396
    2. ' road' → logprob: -1.647055983543396
    3. '                   ' → logprob: -1.772055983543396
    4. 'h' → logprob: -2.2720561027526855
    5. '                    
' → logprob: -3.7720561027526855
    6. ' key' → logprob: -4.6470561027526855
    7. '
' → logprob: -5.0220561027526855
    8. 'road' → logprob: -5.2720561027526855
    9. '```' → logprob: -6.1470561027526855
    10. ' 
' → logprob: -6.2720561027526855

Token 1271: '_invalid' (ID: 71389)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.911368191242218
    2. '_invalid' → logprob: -1.4113681316375732
    3. '_key' → logprob: -1.7863681316375732
    4. 'key' → logprob: -2.6613681316375732
    5. '_from' → logprob: -3.1613681316375732
    6. '_valid' → logprob: -3.9113681316375732
    7. 'from' → logprob: -4.036368370056152
    8. '```' → logprob: -4.786368370056152
    9. '_in' → logprob: -5.161368370056152
    10. '   ' → logprob: -6.036368370056152

Token 1272: ' and' (ID: 326)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01859246753156185
    2. '                    
' → logprob: -5.018592357635498
    3. ',' → logprob: -5.893592357635498
    4. '
' → logprob: -5.893592357635498
    5. ' h' → logprob: -6.268592357635498
    6. 'h' → logprob: -6.768592357635498
    7. '               ' → logprob: -7.518592357635498
    8. ',h' → logprob: -7.643592357635498
    9. '```' → logprob: -8.268592834472656
    10. '(h' → logprob: -8.768592834472656

Token 1273: ' road' (ID: 8733)
  Prédit: 'road'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'road' → logprob: -0.027425406500697136
    2. 'continue' → logprob: -4.277425289154053
    3. '(' → logprob: -5.277425289154053
    4. 'jam' → logprob: -6.402425289154053
    5. 'True' → logprob: -6.652425289154053
    6. '   ' → logprob: -7.027425289154053
    7. 'if' → logprob: -7.652425289154053
    8. '
' → logprob: -7.902425289154053
    9. 'False' → logprob: -8.027425765991211
    10. '#' → logprob: -8.027425765991211

Token 1274: '_j' (ID: 12021)
  Prédit: '_invalid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_invalid' → logprob: -0.3149125277996063
    2. '_key' → logprob: -2.0649125576019287
    3. '                   ' → logprob: -2.6899125576019287
    4. '_valid' → logprob: -2.6899125576019287
    5. 'key' → logprob: -6.06491231918335
    6. 's' → logprob: -7.31491231918335
    7. ' =' → logprob: -7.43991231918335
    8. '_type' → logprob: -8.064912796020508
    9. '_direction' → logprob: -8.189912796020508
    10. '_time' → logprob: -8.314912796020508

Token 1275: 'am' (ID: 313)
  Prédit: 'am'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'am' → logprob: -0.0009225384565070271
    2. 'ams' → logprob: -8.750922203063965
    3. 'a' → logprob: -8.875922203063965
    4. '[' → logprob: -9.000922203063965
    5. '   ' → logprob: -9.375922203063965
    6. '#' → logprob: -9.750922203063965
    7. '_' → logprob: -9.875922203063965
    8. '
' → logprob: -10.625922203063965
    9. '['' → logprob: -10.875922203063965
    10. '[]' → logprob: -10.938422203063965

Token 1276: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.006032603792846203
    2. 'h' → logprob: -6.131032466888428
    3. '                    
' → logprob: -6.131032466888428
    4. '
' → logprob: -7.006032466888428
    5. '               ' → logprob: -8.506032943725586
    6. ' h' → logprob: -8.756032943725586
    7. '   ' → logprob: -9.256032943725586
    8. '				' → logprob: -10.256032943725586
    9. '                  ' → logprob: -10.506032943725586
    10. '                   
' → logprob: -10.756032943725586

Token 1277: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.048210520297288895
    2. '                    
' → logprob: -3.673210620880127
    3. ',' → logprob: -4.798210620880127
    4. ' h' → logprob: -6.048210620880127
    5. '               ' → logprob: -6.298210620880127
    6. '```' → logprob: -6.423210620880127
    7. 'h' → logprob: -6.548210620880127
    8. ',h' → logprob: -6.923210620880127
    9. '<|end|>' → logprob: -7.548210620880127
    10. ' road' → logprob: -7.673210620880127

Token 1278: ' from' (ID: 591)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.1868159919977188
    2. '                   ' → logprob: -1.8118159770965576
    3. ' h' → logprob: -6.811816215515137
    4. 'hx' → logprob: -7.061816215515137
    5. 'nh' → logprob: -7.186816215515137
    6. 'next' → logprob: -7.311816215515137
    7. 'hv' → logprob: -7.436816215515137
    8. 'from' (adapté à ' from') → logprob: -7.561816215515137
    9. 'neighbor' → logprob: -8.061816215515137
    10. 'hn' → logprob: -8.311816215515137

Token 1279: '_inter' (ID: 16818)
  Prédit: '_h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -0.25149181485176086
    2. 'h' → logprob: -2.1264917850494385
    3. '_inter' → logprob: -2.5014917850494385
    4. '_node' → logprob: -4.501492023468018
    5. '_str' → logprob: -5.501492023468018
    6. '_dir' → logprob: -6.501492023468018
    7. 'inter' → logprob: -7.376492023468018
    8. 'H' → logprob: -7.376492023468018
    9. 'intersection' → logprob: -7.501492023468018
    10. '_direction' → logprob: -7.876492023468018

Token 1280: ' =' (ID: 314)
  Prédit: 'section'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'section' → logprob: -0.0015925843035802245
    2. 'val' → logprob: -7.876592636108398
    3. '```' → logprob: -8.001592636108398
    4. '(x' → logprob: -9.001592636108398
    5. 'node' → logprob: -9.251592636108398
    6. '_node' → logprob: -9.376592636108398
    7. '_val' → logprob: -9.626592636108398
    8. 'ection' → logprob: -9.626592636108398
    9. '_section' → logprob: -9.751592636108398
    10. 's' → logprob: -10.001592636108398

Token 1281: ' (' (ID: 350)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.6635373830795288
    2. '(h' → logprob: -1.2885373830795288
    3. ' (' → logprob: -2.4135375022888184
    4. 'f' → logprob: -2.7885375022888184
    5. ' h' → logprob: -3.6635375022888184
    6. ' f' → logprob: -4.163537502288818
    7. '(f' → logprob: -5.163537502288818
    8. '(' → logprob: -5.913537502288818
    9. 'coord' → logprob: -5.913537502288818
    10. '('{}' → logprob: -6.538537502288818

Token 1282: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.04248611629009247
    2. '(h' → logprob: -4.042486190795898
    3. 'x' → logprob: -4.167486190795898
    4. '(x' → logprob: -5.167486190795898
    5. '(' → logprob: -7.292486190795898
    6. ' h' → logprob: -7.292486190795898
    7. ' (' → logprob: -7.417486190795898
    8. 'coord' → logprob: -7.792486190795898
    9. ''h' → logprob: -9.042486190795898
    10. '   ' → logprob: -9.542486190795898

Token 1283: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.006559652276337147
    2. '[x' → logprob: -5.2565598487854
    3. '[user' → logprob: -8.256559371948242
    4. 'x' → logprob: -8.381559371948242
    5. '[n' → logprob: -8.506559371948242
    6. '[' → logprob: -9.131559371948242
    7. ')' → logprob: -9.256559371948242
    8. ',' → logprob: -9.631559371948242
    9. '_list' → logprob: -9.631559371948242
    10. '[
' → logprob: -9.756559371948242

Token 1284: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.001048412173986435
    2. 'x' → logprob: -7.626048564910889
    3. 'index' → logprob: -9.00104808807373
    4. '[n' → logprob: -9.37604808807373
    5. ',x' → logprob: -10.00104808807373
    6. '[
' → logprob: -10.12604808807373
    7. ')x' → logprob: -10.25104808807373
    8. '[' → logprob: -10.62604808807373
    9. '.index' → logprob: -10.62604808807373
    10. ')[' → logprob: -10.75104808807373

Token 1285: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.027116835117340088
    2. '],[' → logprob: -4.527116775512695
    3. ']' → logprob: -5.527116775512695
    4. '],'' → logprob: -5.527116775512695
    5. '+' → logprob: -6.027116775512695
    6. '][' → logprob: -6.402116775512695
    7. '   ' → logprob: -7.152116775512695
    8. ',' → logprob: -7.277116775512695
    9. ',n' → logprob: -7.277116775512695
    10. ']+' → logprob: -8.402116775512695

Token 1286: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.002203666837885976
    2. ' v' → logprob: -6.127203464508057
    3. '   ' → logprob: -11.627203941345215
    4. '  ' → logprob: -13.377203941345215
    5. '    ' → logprob: -13.502203941345215
    6. ' ' → logprob: -13.752203941345215
    7. '           ' → logprob: -13.877203941345215
    8. '       ' → logprob: -14.502203941345215
    9. '	v' → logprob: -14.627203941345215
    10. '     ' → logprob: -14.877203941345215

Token 1287: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0003044802288059145
    2. '[y' → logprob: -8.250304222106934
    3. '[' → logprob: -10.625304222106934
    4. 'y' → logprob: -11.125304222106934
    5. '[x' → logprob: -13.750304222106934
    6. '[list' → logprob: -13.750304222106934
    7. '_list' → logprob: -14.500304222106934
    8. '[n' → logprob: -15.000304222106934
    9. '[next' → logprob: -15.000304222106934
    10. '[
' → logprob: -15.875304222106934

Token 1288: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.006340991705656052
    2. '[n' → logprob: -5.506340980529785
    3. '[x' → logprob: -6.381340980529785
    4. 'y' → logprob: -8.131340980529785
    5. '[' → logprob: -8.631340980529785
    6. '
' → logprob: -11.131340980529785
    7. ')' → logprob: -11.256340980529785
    8. '),' → logprob: -11.256340980529785
    9. '   ' → logprob: -11.756340980529785
    10. '[
' → logprob: -11.881340980529785

Token 1289: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.07234251499176025
    2. ')' → logprob: -3.0723423957824707
    3. ',' → logprob: -4.197342395782471
    4. '   ' → logprob: -5.322342395782471
    5. ' )
' → logprob: -6.697342395782471
    6. '),' → logprob: -6.947342395782471
    7. ')
' → logprob: -7.822342395782471
    8. '),(' → logprob: -7.947342395782471
    9. 'from' → logprob: -8.822342872619629
    10. '  ' → logprob: -9.447342872619629

Token 1290: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.033855464309453964
    2. ',' → logprob: -3.783855438232422
    3. 'to' → logprob: -5.783855438232422
    4. ')' → logprob: -6.533855438232422
    5. '               ' → logprob: -7.033855438232422
    6. 'token' → logprob: -7.033855438232422
    7. '<|end|>' → logprob: -7.283855438232422
    8. '                    ' → logprob: -7.283855438232422
    9. 'from' → logprob: -7.783855438232422
    10. '                    
' → logprob: -8.033855438232422

Token 1291: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' (adapté à ' to') → logprob: -0.009925724007189274
    2. ' to' → logprob: -4.634925842285156
    3. '                   ' → logprob: -8.759925842285156
    4. '   ' → logprob: -11.759925842285156
    5. ' ' → logprob: -13.259925842285156
    6. '               ' → logprob: -14.259925842285156
    7. '  ' → logprob: -14.759925842285156
    8. '                    ' → logprob: -15.009925842285156
    9. '	to' → logprob: -15.259925842285156
    10. '                       ' → logprob: -15.384925842285156

Token 1292: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -0.0008743013604544103
    2. 'inter' → logprob: -7.5008745193481445
    3. '_h' → logprob: -8.250874519348145
    4. '_x' → logprob: -11.250874519348145
    5. '_dir' → logprob: -11.875874519348145
    6. ' =' → logprob: -12.000874519348145
    7. 'h' → logprob: -12.125874519348145
    8. 'x' → logprob: -12.500874519348145
    9. '_from' → logprob: -13.000874519348145
    10. '_str' → logprob: -13.000874519348145

Token 1293: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326520442962646
    2. '=' → logprob: -1.3132652044296265
    3. '=(' → logprob: -13.813264846801758
    4. ' ' → logprob: -13.938264846801758
    5. '   ' → logprob: -14.063264846801758
    6. ' =(' → logprob: -15.563264846801758
    7. '=
' → logprob: -15.938264846801758
    8. 's' → logprob: -16.188264846801758
    9. '  ' → logprob: -16.438264846801758
    10. '=((' → logprob: -16.688264846801758

Token 1294: ' (' (ID: 350)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.029761482030153275
    2. ' (' → logprob: -3.529761552810669
    3. '(' → logprob: -11.65476131439209
    4. '   ' → logprob: -13.52976131439209
    5. ' ' → logprob: -15.52976131439209
    6. '(f' → logprob: -15.77976131439209
    7. '((' → logprob: -16.029762268066406
    8. '('' → logprob: -16.279762268066406
    9. '[h' → logprob: -16.279762268066406
    10. '(H' → logprob: -16.404762268066406

Token 1295: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.004194863606244326
    2. '(h' → logprob: -5.504194736480713
    3. ' h' → logprob: -9.379195213317871
    4. ''h' → logprob: -10.629195213317871
    5. '[h' → logprob: -12.629195213317871
    6. ' (' → logprob: -13.504195213317871
    7. '(' → logprob: -13.629195213317871
    8. '	h' → logprob: -13.754195213317871
    9. '('' → logprob: -15.754195213317871
    10. '"h' → logprob: -15.879195213317871

Token 1296: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.375
    3. 'user' → logprob: -16.625
    4. '_list' → logprob: -17.125
    5. '[x' → logprob: -17.625
    6. 'x' → logprob: -18.0
    7. 'tuple' → logprob: -18.125
    8. 'lista' → logprob: -18.125
    9. '[user' → logprob: -18.5
    10. ' list' → logprob: -18.75

Token 1297: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -5.1689596148207784e-05
    2. '   ' → logprob: -11.000051498413086
    3. '```' → logprob: -11.500051498413086
    4. '
' → logprob: -12.500051498413086
    5. 'nx' → logprob: -12.500051498413086
    6. '[' → logprob: -12.625051498413086
    7. '[
' → logprob: -12.875051498413086
    8. '       ' → logprob: -13.000051498413086
    9. ' [' → logprob: -13.250051498413086
    10. ' ' → logprob: -13.375051498413086

Token 1298: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0005095454398542643
    2. 'y' → logprob: -7.875509738922119
    3. 'nx' → logprob: -9.875509262084961
    4. '(nx' → logprob: -10.625509262084961
    5. '[' → logprob: -11.125509262084961
    6. '[x' → logprob: -11.250509262084961
    7. '_x' → logprob: -12.250509262084961
    8. '[n' → logprob: -12.500509262084961
    9. 'xx' → logprob: -13.125509262084961
    10. 'X' → logprob: -13.125509262084961

Token 1299: '],' (ID: 2155)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.687347948551178
    2. '[n' → logprob: -0.812347948551178
    3. '[x' → logprob: -3.437347888946533
    4. ',' → logprob: -4.562347888946533
    5. '],' → logprob: -4.812347888946533
    6. '[y' → logprob: -6.437347888946533
    7. '][' → logprob: -8.187348365783691
    8. ']' → logprob: -8.687348365783691
    9. '```' → logprob: -9.312348365783691
    10. 'x' → logprob: -10.062348365783691

Token 1300: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.38689443469047546
    2. ' v' → logprob: -1.1368944644927979
    3. '   ' → logprob: -12.011894226074219
    4. '	v' → logprob: -12.261894226074219
    5. '[v' → logprob: -12.636894226074219
    6. ' ' → logprob: -13.511894226074219
    7. '    ' → logprob: -13.511894226074219
    8. '(v' → logprob: -13.761894226074219
    9. ')v' → logprob: -14.199394226074219
    10. ' ' → logprob: -14.449394226074219

Token 1301: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.000375380739569664
    2. 'y' → logprob: -8.625375747680664
    3. 'ny' → logprob: -9.625375747680664
    4. 'ist' → logprob: -9.625375747680664
    5. '[' → logprob: -10.000375747680664
    6. 'elist' → logprob: -12.250375747680664
    7. '_list' → logprob: -12.750375747680664
    8. 'lst' → logprob: -13.500375747680664
    9. 'List' → logprob: -14.000375747680664
    10. '[y' → logprob: -14.000375747680664

Token 1302: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.229872087715194e-05
    2. '[n' → logprob: -10.000061988830566
    3. 'ny' → logprob: -11.250061988830566
    4. '```' → logprob: -14.000061988830566
    5. '[
' → logprob: -14.000061988830566
    6. '   ' → logprob: -14.875061988830566
    7. ' ny' → logprob: -14.875061988830566
    8. '
' → logprob: -15.750061988830566
    9. ')' → logprob: -16.375062942504883
    10. ' [' → logprob: -16.500062942504883

Token 1303: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -4.537180211627856e-05
    2. 'nx' → logprob: -10.875045776367188
    3. ' ny' → logprob: -11.125045776367188
    4. '[' → logprob: -11.625045776367188
    5. 'n' → logprob: -13.750045776367188
    6. '[n' → logprob: -14.250045776367188
    7. '   ' → logprob: -14.750045776367188
    8. 'y' → logprob: -15.250045776367188
    9. '```' → logprob: -16.750045776367188
    10. 'nyi' → logprob: -17.625045776367188

Token 1304: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5761470198631287
    2. ')
' → logprob: -0.8261470198631287
    3. '   ' → logprob: -9.076147079467773
    4. ')
' → logprob: -10.201147079467773
    5. '                   ' → logprob: -10.576147079467773
    6. ')`
' → logprob: -11.576147079467773
    7. ')

' → logprob: -11.951147079467773
    8. '               ' → logprob: -12.576147079467773
    9. ' )
' → logprob: -12.951147079467773
    10. ' )' → logprob: -13.576147079467773

Token 1305: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.000486680306494236
    2. '               ' → logprob: -8.625486373901367
    3. '                    
' → logprob: -8.625486373901367
    4. 'road' → logprob: -9.625486373901367
    5. ' road' → logprob: -11.250486373901367
    6. 'edge' → logprob: -11.625486373901367
    7. 'direction' → logprob: -11.875486373901367
    8. '
' → logprob: -12.125486373901367
    9. 'token' → logprob: -12.250486373901367
    10. '```' → logprob: -12.500486373901367

Token 1306: ' e' (ID: 319)
  Prédit: 'road'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'road' → logprob: -0.5314743518829346
    2. 'edge' → logprob: -1.2814743518829346
    3. 'if' → logprob: -2.5314743518829346
    4. '                   ' → logprob: -3.7814743518829346
    5. 'key' → logprob: -4.0314741134643555
    6. 'direction' → logprob: -5.0314741134643555
    7. 'dir' → logprob: -6.0314741134643555
    8. '#' → logprob: -6.0314741134643555
    9. ' road' → logprob: -6.7814741134643555
    10. 'from' → logprob: -8.031474113464355

Token 1307: '1' (ID: 16)
  Prédit: 'dge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dge' → logprob: -0.00765313021838665
    2. 'd' → logprob: -5.00765323638916
    3. ' =' → logprob: -7.88265323638916
    4. 'key' → logprob: -8.75765323638916
    5. '_edge' → logprob: -8.75765323638916
    6. 'dg' → logprob: -9.38265323638916
    7. '_key' → logprob: -9.75765323638916
    8. 'edge' → logprob: -9.75765323638916
    9. 'dir' → logprob: -11.50765323638916
    10. 'id' → logprob: -12.00765323638916

Token 1308: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07094256579875946
    2. '=' → logprob: -2.9459426403045654
    3. 'd' → logprob: -5.070942401885986
    4. 'dge' → logprob: -5.695942401885986
    5. '=(' → logprob: -6.070942401885986
    6. ',' → logprob: -6.695942401885986
    7. '=edge' → logprob: -8.070942878723145
    8. '=((' → logprob: -8.320942878723145
    9. 'f' → logprob: -8.445942878723145
    10. '=('' → logprob: -8.445942878723145

Token 1309: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.124517560005188
    2. '(from' → logprob: -1.374517560005188
    3. 'f' → logprob: -1.749517560005188
    4. '(f' → logprob: -2.2495174407958984
    5. ' (' → logprob: -3.4995174407958984
    6. 'parse' → logprob: -3.9995174407958984
    7. '('{}' → logprob: -3.9995174407958984
    8. '(parse' → logprob: -4.124517440795898
    9. ''-' → logprob: -4.249517440795898
    10. '(' → logprob: -4.624517440795898

Token 1310: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -0.0007026608218438923
    2. '_' → logprob: -7.875702857971191
    3. 'inter' → logprob: -8.500702857971191
    4. 'e' → logprob: -10.250702857971191
    5. '_e' → logprob: -10.375702857971191
    6. '_h' → logprob: -11.750702857971191
    7. 's' → logprob: -12.250702857971191
    8. 'h' → logprob: -12.375702857971191
    9. '```' → logprob: -12.500702857971191
    10. 'Inter' → logprob: -12.750702857971191

Token 1311: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7064594626426697
    2. ',' → logprob: -1.7064595222473145
    3. 'e' → logprob: -1.8314595222473145
    4. ' +' → logprob: -2.3314595222473145
    5. ',e' → logprob: -3.3314595222473145
    6. '+'' → logprob: -4.7064595222473145
    7. '+(' → logprob: -6.2064595222473145
    8. '#' → logprob: -6.3314595222473145
    9. '
' → logprob: -6.5814595222473145
    10. '+"' → logprob: -6.7064595222473145

Token 1312: '                   ' (ID: 699)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8813642263412476
    2. 'e' → logprob: -1.1313642263412476
    3. ',e' → logprob: -1.6313642263412476
    4. 'to' → logprob: -4.256364345550537
    5. '                   ' → logprob: -4.631364345550537
    6. ' =' → logprob: -4.881364345550537
    7. 'and' → logprob: -4.881364345550537
    8. ',
' → logprob: -5.506364345550537
    9. '_to' → logprob: -5.631364345550537
    10. '=' → logprob: -5.881364345550537

Token 1313: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' (adapté à ' e') → logprob: -0.0006272526225075126
    2. ' e' → logprob: -8.375627517700195
    3. '                   ' → logprob: -8.625627517700195
    4. '(' → logprob: -10.125627517700195
    5. '(e' → logprob: -10.375627517700195
    6. '
' → logprob: -10.375627517700195
    7. ' (' → logprob: -10.750627517700195
    8. '#' → logprob: -11.500627517700195
    9. '(
' → logprob: -11.500627517700195
    10. ',' → logprob: -11.750627517700195

Token 1314: '2' (ID: 17)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1287128925323486
    2. '1' → logprob: -1.2537128925323486
    3. '=e' → logprob: -1.7537128925323486
    4. ',e' → logprob: -2.6287128925323486
    5. 'e' → logprob: -2.8787128925323486
    6. '_' → logprob: -3.5037128925323486
    7. '2' → logprob: -4.0037126541137695
    8. ',' → logprob: -4.2537126541137695
    9. '=' → logprob: -4.7537126541137695
    10. '_e' → logprob: -5.0037126541137695

Token 1315: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34914565086364746
    2. '=' → logprob: -1.2241456508636475
    3. '=(' → logprob: -7.599145889282227
    4. 'e' → logprob: -10.224145889282227
    5. ' =(' → logprob: -10.224145889282227
    6. ',' → logprob: -10.474145889282227
    7. '=e' → logprob: -10.474145889282227
    8. '                   ' → logprob: -11.099145889282227
    9. '   ' → logprob: -11.599145889282227
    10. '=('' → logprob: -11.724145889282227

Token 1316: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.04587725177407265
    2. '(to' → logprob: -3.54587721824646
    3. ' to' → logprob: -4.420877456665039
    4. ' (' → logprob: -5.545877456665039
    5. '(' → logprob: -11.170877456665039
    6. ' ' → logprob: -11.420877456665039
    7. '   ' → logprob: -11.420877456665039
    8. 'from' → logprob: -11.795877456665039
    9. 'e' → logprob: -12.295877456665039
    10. '[to' → logprob: -12.420877456665039

Token 1317: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -0.07181144505739212
    2. 'to' → logprob: -3.0718114376068115
    3. '(to' → logprob: -3.9468114376068115
    4. 'inter' → logprob: -5.696811676025391
    5. '[to' → logprob: -8.82181167602539
    6. '_to' → logprob: -9.07181167602539
    7. 'from' → logprob: -12.07181167602539
    8. 'Inter' → logprob: -12.19681167602539
    9. '_' → logprob: -13.32181167602539
    10. '((' → logprob: -13.57181167602539

Token 1318: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.003629169659689069
    2. 'if' → logprob: -7.378629207611084
    3. '
' → logprob: -7.503629207611084
    4. 'edge' → logprob: -7.628629207611084
    5. 'key' → logprob: -8.003628730773926
    6. ' =' → logprob: -8.128628730773926
    7. ',' → logprob: -8.253628730773926
    8. '#' → logprob: -8.753628730773926
    9. ')' → logprob: -9.003628730773926
    10. '               ' → logprob: -9.253628730773926

Token 1319: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00012237003829795867
    2. '                    
' → logprob: -9.3751220703125
    3. '               ' → logprob: -11.0001220703125
    4. ',' → logprob: -12.7501220703125
    5. '
' → logprob: -13.0001220703125
    6. '<|end|>' → logprob: -13.1251220703125
    7. '                  ' → logprob: -13.2501220703125
    8. '		           ' → logprob: -13.3751220703125
    9. '				' → logprob: -13.6251220703125
    10. '                    ' → logprob: -13.7501220703125

Token 1320: ' #' (ID: 1069)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.9345738291740417
    2. '                   ' → logprob: -1.3095738887786865
    3. 'if' → logprob: -1.8095738887786865
    4. 'road' → logprob: -2.3095738887786865
    5. 'key' → logprob: -2.9345738887786865
    6. 'e' → logprob: -3.9345738887786865
    7. '#' (adapté à ' #') → logprob: -7.434573650360107
    8. '   ' → logprob: -7.809573650360107
    9. 'edges' → logprob: -9.309574127197266
    10. ' road' → logprob: -9.434574127197266

Token 1321: ' roads' (ID: 30027)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4196251630783081
    2. 'edge' → logprob: -1.794625163078308
    3. 'road' → logprob: -2.1696252822875977
    4. 'key' → logprob: -3.1696252822875977
    5. '                   ' → logprob: -4.169625282287598
    6. 'e' → logprob: -5.919625282287598
    7. '#' → logprob: -7.044625282287598
    8. ' if' → logprob: -8.169625282287598
    9. 'direction' → logprob: -8.294625282287598
    10. ' road' → logprob: -8.419625282287598

Token 1322: ' are' (ID: 553)
  Prédit: '_invalid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_invalid' → logprob: -0.7586497068405151
    2. '                   ' → logprob: -2.0086498260498047
    3. '_valid' → logprob: -2.3836498260498047
    4. ' =' → logprob: -2.7586498260498047
    5. '_key' → logprob: -3.1336498260498047
    6. 'are' → logprob: -3.3836498260498047
    7. '_are' → logprob: -3.3836498260498047
    8. '_exist' → logprob: -3.5086498260498047
    9. 'invalid' → logprob: -3.8836498260498047
    10. '_check' → logprob: -4.133649826049805

Token 1323: ' two' (ID: 1920)
  Prédit: '(e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.9716238975524902
    2. '((' → logprob: -1.5966238975524902
    3. ' (' → logprob: -1.7216238975524902
    4. '(' → logprob: -2.3466238975524902
    5. '(f' → logprob: -2.8466238975524902
    6. '(h' → logprob: -3.7216238975524902
    7. 'e' → logprob: -4.09662389755249
    8. 'from' → logprob: -4.34662389755249
    9. '   ' → logprob: -4.84662389755249
    10. '(from' → logprob: -5.34662389755249

Token 1324: '-way' (ID: 44845)
  Prédit: 'way'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'way' → logprob: -0.010904325172305107
    2. 'ways' → logprob: -5.135904312133789
    3. 'direction' → logprob: -5.635904312133789
    4. '-way' → logprob: -6.760904312133789
    5. 'dire' → logprob: -9.260904312133789
    6. 's' → logprob: -10.010904312133789
    7. ' way' → logprob: -10.510904312133789
    8. '_way' → logprob: -10.510904312133789
    9. '-direction' → logprob: -11.385904312133789
    10. '
' → logprob: -12.260904312133789

Token 1325: ';' (ID: 26)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01853606291115284
    2. ' if' → logprob: -4.51853609085083
    3. 'if' → logprob: -5.14353609085083
    4. ',' → logprob: -7.51853609085083
    5. '                    
' → logprob: -8.143535614013672
    6. '#' → logprob: -9.143535614013672
    7. ':' → logprob: -9.268535614013672
    8. '               ' → logprob: -9.268535614013672
    9. '
' → logprob: -9.768535614013672
    10. '<|end|>' → logprob: -9.768535614013672

Token 1326: ' check' (ID: 2371)
  Prédit: ' road'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' road' → logprob: -0.6963687539100647
    2. 'road' → logprob: -1.57136869430542
    3. '                   ' → logprob: -2.07136869430542
    4. ' if' → logprob: -2.57136869430542
    5. 'if' → logprob: -2.82136869430542
    6. 'edge' → logprob: -3.82136869430542
    7. ' key' → logprob: -5.69636869430542
    8. 'key' → logprob: -6.07136869430542
    9. ' edge' → logprob: -6.44636869430542
    10. 'e' → logprob: -6.69636869430542

Token 1327: ' if' (ID: 538)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.4783508777618408
    2. 'if' → logprob: -1.7283508777618408
    3. ' if' → logprob: -2.353350877761841
    4. '(e' → logprob: -2.853350877761841
    5. ' ((' → logprob: -3.603350877761841
    6. ' (' → logprob: -4.353350639343262
    7. ' not' → logprob: -5.603350639343262
    8. ' road' → logprob: -6.228350639343262
    9. 'not' → logprob: -6.478350639343262
    10. 'road' → logprob: -7.228350639343262

Token 1328: ' this' (ID: 495)
  Prédit: '(e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.14216463267803192
    2. '((' → logprob: -2.142164707183838
    3. ' (' → logprob: -4.517164707183838
    4. '(f' → logprob: -6.267164707183838
    5. 'e' → logprob: -7.142164707183838
    6. ' ((' → logprob: -7.517164707183838
    7. '(' → logprob: -7.517164707183838
    8. 'road' → logprob: -9.39216423034668
    9. '('' → logprob: -10.01716423034668
    10. '(('' → logprob: -10.01716423034668

Token 1329: ' edge' (ID: 11165)
  Prédit: 'road'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'road' → logprob: -0.4163399934768677
    2. '(e' → logprob: -1.5413399934768677
    3. ' road' → logprob: -3.541339874267578
    4. '(f' → logprob: -3.791339874267578
    5. '(' → logprob: -4.166339874267578
    6. 'e' → logprob: -4.291339874267578
    7. 'edge' → logprob: -4.416339874267578
    8. '((' → logprob: -5.166339874267578
    9. '(edge' → logprob: -5.416339874267578
    10. 'f' → logprob: -5.791339874267578

Token 1330: ' is' (ID: 382)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.28189679980278015
    2. ' in' → logprob: -1.5318968296051025
    3. ' not' → logprob: -4.031896591186523
    4. 'not' → logprob: -5.031896591186523
    5. 'and' → logprob: -6.156896591186523
    6. ',' → logprob: -7.406896591186523
    7. 'e' → logprob: -7.531896591186523
    8. ' and' → logprob: -8.031896591186523
    9. 'is' → logprob: -8.031896591186523
    10. '   ' → logprob: -8.656896591186523

Token 1331: ' invalid' (ID: 15796)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.13180433213710785
    2. ' in' → logprob: -2.8818042278289795
    3. 'invalid' → logprob: -3.2568042278289795
    4. 'not' → logprob: -4.006804466247559
    5. ' invalid' → logprob: -5.756804466247559
    6. '(e' → logprob: -6.131804466247559
    7. '(' → logprob: -6.506804466247559
    8. ' not' → logprob: -6.631804466247559
    9. ' (' → logprob: -7.256804466247559
    10. 'e' → logprob: -7.506804466247559

Token 1332: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5521783232688904
    2. '                   ' → logprob: -1.4271783828735352
    3. 'and' → logprob: -2.302178382873535
    4. ' or' → logprob: -2.552178382873535
    5. ' if' → logprob: -6.427178382873535
    6. '   ' → logprob: -6.552178382873535
    7. '                       ' → logprob: -7.052178382873535
    8. ':' → logprob: -7.802178382873535
    9. '               ' → logprob: -7.802178382873535
    10. ' not' → logprob: -8.177178382873535

Token 1333: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00033784625702537596
    2. ' or' → logprob: -9.250337600708008
    3. ' if' → logprob: -10.125337600708008
    4. ' and' → logprob: -10.250337600708008
    5. 'and' → logprob: -10.250337600708008
    6. '               ' → logprob: -10.375337600708008
    7. '                       ' → logprob: -10.750337600708008
    8. '                    ' → logprob: -11.375337600708008
    9. 'if' → logprob: -11.500337600708008
    10. '                  ' → logprob: -11.500337600708008

Token 1334: ' key' (ID: 2140)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6975283026695251
    2. ' if' → logprob: -1.32252836227417
    3. '                   ' → logprob: -1.44752836227417
    4. '   ' → logprob: -8.322527885437012
    5. 'continue' → logprob: -8.697527885437012
    6. '               ' → logprob: -10.322527885437012
    7. 'edge' → logprob: -10.447527885437012
    8. ' continue' → logprob: -10.572527885437012
    9. '```' → logprob: -11.447527885437012
    10. '           ' → logprob: -11.697527885437012

Token 1335: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.062012385576963425
    2. '=' → logprob: -2.8120124340057373
    3. '=('' → logprob: -11.062012672424316
    4. '=(' → logprob: -11.187012672424316
    5. ' =(' → logprob: -11.812012672424316
    6. ')' → logprob: -13.687012672424316
    7. '1' → logprob: -14.187012672424316
    8. ',' → logprob: -14.437012672424316
    9. ' in' → logprob: -14.562012672424316
    10. '='' → logprob: -14.687012672424316

Token 1336: ' (' (ID: 350)
  Prédit: '(e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.08191370218992233
    2. '(f' → logprob: -3.206913709640503
    3. ' (' → logprob: -4.081913471221924
    4. '(' → logprob: -4.956913471221924
    5. '((' → logprob: -5.206913471221924
    6. '(tuple' → logprob: -5.956913471221924
    7. 'fro' → logprob: -6.081913471221924
    8. 'tuple' → logprob: -7.081913471221924
    9. 'e' → logprob: -7.331913471221924
    10. '(from' → logprob: -7.706913471221924

Token 1337: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.004824907053261995
    2. '(e' → logprob: -5.754825115203857
    3. 'min' → logprob: -7.004825115203857
    4. 'from' → logprob: -7.879825115203857
    5. '(' → logprob: -8.8798246383667
    6. 'h' → logprob: -9.7548246383667
    7. '(min' → logprob: -10.2548246383667
    8. ' e' → logprob: -10.5048246383667
    9. '(h' → logprob: -10.5048246383667
    10. '(from' → logprob: -10.7548246383667

Token 1338: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.824579784530215e-05
    2. '[' → logprob: -10.1250581741333
    3. '_' → logprob: -12.6250581741333
    4. '```' → logprob: -12.8750581741333
    5. '_inter' → logprob: -13.1250581741333
    6. 'e' → logprob: -13.4375581741333
    7. '
' → logprob: -13.6250581741333
    8. 'from' → logprob: -13.6250581741333
    9. 'inter' → logprob: -14.1875581741333
    10. ')' → logprob: -14.3125581741333

Token 1339: ',e' (ID: 43127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.052329760044813156
    2. ',key' → logprob: -3.5523297786712646
    3. ',e' → logprob: -3.9273297786712646
    4. '[' → logprob: -6.5523295402526855
    5. ' ,' → logprob: -6.8023295402526855
    6. ',k' → logprob: -10.552330017089844
    7. 'e' → logprob: -10.927330017089844
    8. ',
' → logprob: -11.302330017089844
    9. ',[' → logprob: -11.802330017089844
    10. '   ' → logprob: -11.927330017089844

Token 1340: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0280383548888494e-06
    2. '_inter' → logprob: -15.125000953674316
    3. '_' → logprob: -15.625000953674316
    4. '
' → logprob: -15.875000953674316
    5. '```' → logprob: -16.500001907348633
    6. '₂' → logprob: -16.625001907348633
    7. '۲' → logprob: -16.812501907348633
    8. ')' → logprob: -17.437501907348633
    9. 'inter' → logprob: -17.625001907348633
    10. '２' → logprob: -17.687501907348633

Token 1341: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002473516622558236
    2. ',' → logprob: -6.5024733543396
    3. '<|end|>' → logprob: -7.3774733543396
    4. '<|end|>' → logprob: -9.252473831176758
    5. ')
' → logprob: -9.752473831176758
    6. ',)' → logprob: -10.002473831176758
    7. ')==' → logprob: -10.252473831176758
    8. '),' → logprob: -10.252473831176758
    9. ' )' → logprob: -10.627473831176758
    10. ' ,' → logprob: -11.877473831176758

Token 1342: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.05156831815838814
    2. ' if' → logprob: -3.0515682697296143
    3. 'if' → logprob: -6.426568508148193
    4. '<|end|>' → logprob: -8.176568031311035
    5. ' or' → logprob: -8.426568031311035
    6. ',' → logprob: -9.176568031311035
    7. '   ' → logprob: -9.301568031311035
    8. ' and' → logprob: -9.301568031311035
    9. '               ' → logprob: -9.426568031311035
    10. '```' → logprob: -9.676568031311035

Token 1343: ' key' (ID: 2140)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.18604668974876404
    2. ' if' → logprob: -1.9360467195510864
    3. '                   ' → logprob: -3.686046600341797
    4. '   ' → logprob: -8.686046600341797
    5. 'continue' → logprob: -8.936046600341797
    6. 'in' → logprob: -10.061046600341797
    7. 'not' → logprob: -11.686046600341797
    8. 'next' → logprob: -11.811046600341797
    9. '               ' → logprob: -11.811046600341797
    10. ' continue' → logprob: -11.811046600341797

Token 1344: '_rev' (ID: 99394)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.7868372201919556
    2. '=' → logprob: -1.1618372201919556
    3. ' in' → logprob: -1.9118372201919556
    4. ' =' → logprob: -2.786837100982666
    5. ' not' → logprob: -4.161837100982666
    6. '<|end|>' → logprob: -5.661837100982666
    7. 'not' → logprob: -6.411837100982666
    8. ')' → logprob: -7.661837100982666
    9. '<|end|>' → logprob: -7.786837100982666
    10. '[' → logprob: -9.286837577819824

Token 1345: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931560039520264
    2. ' =' → logprob: -0.6931560039520264
    3. '=
' → logprob: -12.818156242370605
    4. ')' → logprob: -13.443156242370605
    5. '=(' → logprob: -13.568156242370605
    6. ',' → logprob: -13.943156242370605
    7. ' =
' → logprob: -14.193156242370605
    8. '=('' → logprob: -14.568156242370605
    9. ' =(' → logprob: -14.818156242370605
    10. '<|end|>' → logprob: -15.443156242370605

Token 1346: ' (' (ID: 350)
  Prédit: '(e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.018188927322626114
    2. ' (' → logprob: -4.018188953399658
    3. '(' → logprob: -10.2681884765625
    4. '((' → logprob: -12.3931884765625
    5. '   ' → logprob: -16.1431884765625
    6. ' ' → logprob: -17.8931884765625
    7. ' ((' → logprob: -18.6431884765625
    8. '                   ' → logprob: -18.7681884765625
    9. '(key' → logprob: -18.7681884765625
    10. '(ed' → logprob: -18.7681884765625

Token 1347: 'e' (ID: 68)
  Prédit: '(e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.07890322804450989
    2. 'e' → logprob: -2.5789031982421875
    3. ' (' → logprob: -11.578903198242188
    4. ' e' → logprob: -13.328903198242188
    5. 'key' → logprob: -13.953903198242188
    6. '(' → logprob: -14.203903198242188
    7. '(key' → logprob: -15.328903198242188
    8. ')e' → logprob: -15.328903198242188
    9. '   ' → logprob: -15.453903198242188
    10. '	e' → logprob: -16.453903198242188

Token 1348: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2471589798224159e-05
    2. '1' → logprob: -12.000012397766113
    3. '(e' → logprob: -12.125012397766113
    4. '(' → logprob: -15.250012397766113
    5. '[' → logprob: -15.500012397766113
    6. 'e' → logprob: -15.625012397766113
    7. '[e' → logprob: -16.68751335144043
    8. '{' → logprob: -17.75001335144043
    9. 'r' → logprob: -18.12501335144043
    10. '۲' → logprob: -18.37501335144043

Token 1349: ',e' (ID: 43127)
  Prédit: ',e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',e' → logprob: -0.000491076149046421
    2. ',' → logprob: -7.625491142272949
    3. 'e' → logprob: -12.87549114227295
    4. ',
' → logprob: -15.25049114227295
    5. ' ,' → logprob: -16.625490188598633
    6. ',key' → logprob: -17.250490188598633
    7. ',user' → logprob: -18.000490188598633
    8. ';e' → logprob: -18.125490188598633
    9. ',(' → logprob: -18.250490188598633
    10. ',d' → logprob: -18.750490188598633

Token 1350: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.53050296427682e-05
    2. 'e' → logprob: -9.37508487701416
    3. '{' → logprob: -16.125085830688477
    4. 'inter' → logprob: -17.812585830688477
    5. '```' → logprob: -17.812585830688477
    6. ' e' → logprob: -18.125085830688477
    7. '১' → logprob: -18.187585830688477
    8. '{
' → logprob: -18.250085830688477
    9. '१' → logprob: -18.312585830688477
    10. '１' → logprob: -18.375085830688477

Token 1351: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01608540117740631
    2. ')
' → logprob: -4.141085624694824
    3. '):
' → logprob: -11.141085624694824
    4. '   ' → logprob: -11.391085624694824
    5. ',' → logprob: -11.391085624694824
    6. ',)' → logprob: -12.766085624694824
    7. '):' → logprob: -13.141085624694824
    8. '')' → logprob: -13.641085624694824
    9. ' )' → logprob: -13.766085624694824
    10. '),' → logprob: -13.891085624694824

Token 1352: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004740195348858833
    2. ' if' → logprob: -5.879740238189697
    3. 'if' → logprob: -6.379740238189697
    4. '               ' → logprob: -9.504739761352539
    5. '           ' → logprob: -10.129739761352539
    6. '   ' → logprob: -10.129739761352539
    7. '<|end|>' → logprob: -10.504739761352539
    8. '       ' → logprob: -11.754739761352539
    9. '		           ' → logprob: -12.004739761352539
    10. '<|end|>' → logprob: -12.004739761352539

Token 1353: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.013951226137578487
    2. '                   ' → logprob: -4.638951301574707
    3. ' if' → logprob: -5.513951301574707
    4. 'continue' → logprob: -9.013951301574707
    5. '   ' → logprob: -10.513951301574707
    6. '```' → logprob: -12.888951301574707
    7. '               ' → logprob: -13.388951301574707
    8. '           ' → logprob: -13.763951301574707
    9. ' continue' → logprob: -14.513951301574707
    10. '       ' → logprob: -14.888951301574707

Token 1354: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.025857802480459213
    2. ' key' → logprob: -4.025857925415039
    3. '(key' → logprob: -4.900857925415039
    4. '(e' → logprob: -9.525857925415039
    5. 'road' → logprob: -9.525857925415039
    6. 'e' → logprob: -10.525857925415039
    7. ' (' → logprob: -10.650857925415039
    8. 'not' → logprob: -11.400857925415039
    9. '(' → logprob: -11.650857925415039
    10. '   ' → logprob: -12.400857925415039

Token 1355: ' in' (ID: 306)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.19711220264434814
    2. 'not' → logprob: -2.0721120834350586
    3. 'in' → logprob: -3.5721120834350586
    4. ' in' → logprob: -3.6971120834350586
    5. ')' → logprob: -10.072112083435059
    6. '<|end|>' → logprob: -11.197112083435059
    7. '	not' → logprob: -11.572112083435059
    8. '[' → logprob: -11.697112083435059
    9. '<|end|>' → logprob: -12.572112083435059
    10. ' ' → logprob: -13.322112083435059

Token 1356: ' road' (ID: 8733)
  Prédit: 'road'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'road' → logprob: -8.537868779967539e-06
    2. ' road' → logprob: -11.750008583068848
    3. '   ' → logprob: -14.625008583068848
    4. '```' → logprob: -17.25000762939453
    5. ' ' → logprob: -17.87500762939453
    6. 'rod' → logprob: -18.62500762939453
    7. 'roads' → logprob: -18.75000762939453
    8. '
' → logprob: -19.12500762939453
    9. '`' → logprob: -19.75000762939453
    10. 'rock' → logprob: -19.87500762939453

Token 1357: '_invalid' (ID: 71389)
  Prédit: '_invalid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_invalid' → logprob: -1.3782830137643032e-05
    2. 'invalid' → logprob: -11.62501335144043
    3. '_j' → logprob: -13.25001335144043
    4. '_INVALID' → logprob: -14.25001335144043
    5. 'Invalid' → logprob: -14.75001335144043
    6. '_' → logprob: -15.12501335144043
    7. '
' → logprob: -15.12501335144043
    8. '_valid' → logprob: -15.37501335144043
    9. 'j' → logprob: -15.75001335144043
    10. '\' → logprob: -15.87501335144043

Token 1358: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.07664772868156433
    2. ':' → logprob: -3.0766477584838867
    3. 'or' → logprob: -4.576647758483887
    4. ':
' → logprob: -4.576647758483887
    5. '                       ' → logprob: -5.951647758483887
    6. '       ' → logprob: -5.951647758483887
    7. '   ' → logprob: -7.326647758483887
    8. '                   ' → logprob: -8.326647758483887
    9. '           ' → logprob: -8.701647758483887
    10. 'continue' → logprob: -8.951647758483887

Token 1359: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.20141470432281494
    2. ' key' → logprob: -1.701414704322815
    3. '(key' → logprob: -14.451415061950684
    4. '   ' → logprob: -14.701415061950684
    5. '	key' → logprob: -15.826415061950684
    6. 'road' → logprob: -16.201414108276367
    7. ' ' → logprob: -16.326414108276367
    8. '                   ' → logprob: -16.826414108276367
    9. 'keys' → logprob: -17.326414108276367
    10. '_key' → logprob: -17.951414108276367

Token 1360: '_rev' (ID: 99394)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3895045816898346
    2. ' in' → logprob: -1.1395045518875122
    3. '_rev' → logprob: -6.014504432678223
    4. 'not' → logprob: -9.514504432678223
    5. ' not' → logprob: -9.639504432678223
    6. '_in' → logprob: -10.514504432678223
    7. '	in' → logprob: -12.514504432678223
    8. '_reverse' → logprob: -12.889504432678223
    9. '   ' → logprob: -13.639504432678223
    10. '[in' → logprob: -13.639504432678223

Token 1361: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.38687458634376526
    2. 'in' → logprob: -1.1368745565414429
    3. ')' → logprob: -13.886874198913574
    4. 'import' → logprob: -15.011874198913574
    5. ' ' → logprob: -15.136874198913574
    6. '<|end|>' → logprob: -15.136874198913574
    7. '	in' → logprob: -15.261874198913574
    8. '[' → logprob: -15.261874198913574
    9. '   ' → logprob: -15.386874198913574
    10. ' not' → logprob: -15.636874198913574

Token 1362: ' road' (ID: 8733)
  Prédit: 'road'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'road' → logprob: -0.12692810595035553
    2. ' road' → logprob: -2.1269280910491943
    3. 'ro' → logprob: -17.626928329467773
    4. 'Road' → logprob: -18.501928329467773
    5. 'rod' → logprob: -18.501928329467773
    6. 'roads' → logprob: -19.126928329467773
    7. '```' → logprob: -19.376928329467773
    8. 'roof' → logprob: -19.501928329467773
    9. 'rock' → logprob: -19.751928329467773
    10. '   ' → logprob: -19.751928329467773

Token 1363: '_invalid' (ID: 71389)
  Prédit: '_invalid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_invalid' → logprob: -5.9153885558771435e-06
    2. 'invalid' → logprob: -12.125005722045898
    3. '_INVALID' → logprob: -15.375005722045898
    4. 'Invalid' → logprob: -16.7500057220459
    5. '_missing' → logprob: -16.7500057220459
    6. '_' → logprob: -17.6250057220459
    7. '_Invalid' → logprob: -17.7500057220459
    8. '
' → logprob: -17.8750057220459
    9. '_valid' → logprob: -18.2500057220459
    10. '_disabled' → logprob: -18.5000057220459

Token 1364: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.5896319150924683
    2. ':' → logprob: -1.0896319150924683
    3. ':
' → logprob: -2.464632034301758
    4. '                   ' → logprob: -4.214632034301758
    5. ' or' → logprob: -4.839632034301758
    6. '       ' → logprob: -8.214632034301758
    7. '                           ' → logprob: -8.464632034301758
    8. '                      ' → logprob: -8.589632034301758
    9. 'continue' → logprob: -8.714632034301758
    10. '               ' → logprob: -9.214632034301758

Token 1365: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.011837554164230824
    2. '                   ' → logprob: -4.511837482452393
    3. ':' → logprob: -8.13683795928955
    4. ':
' → logprob: -8.76183795928955
    5. ' continue' → logprob: -8.88683795928955
    6. 'continue' → logprob: -9.63683795928955
    7. '	                   ' → logprob: -10.13683795928955
    8. '                      ' → logprob: -10.51183795928955
    9. '                           ' → logprob: -11.26183795928955
    10. '                     ' → logprob: -11.76183795928955

Token 1366: ' continue' (ID: 4901)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.015070891939103603
    2. '                           ' → logprob: -4.765070915222168
    3. '                   ' → logprob: -5.765070915222168
    4. 'continue' (adapté à ' continue') → logprob: -5.765070915222168
    5. ' continue' → logprob: -9.015070915222168
    6. '           ' → logprob: -10.890070915222168
    7. '       ' → logprob: -11.515070915222168
    8. '   ' → logprob: -12.140070915222168
    9. '                               ' → logprob: -12.515070915222168
    10. '               ' → logprob: -12.640070915222168

Token 1367: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.006553609389811754
    2. '               ' → logprob: -5.131553649902344
    3. '                    
' → logprob: -8.256553649902344
    4. '
' → logprob: -9.381553649902344
    5. '           ' → logprob: -9.756553649902344
    6. '<|end|>' → logprob: -9.881553649902344
    7. '                       ' → logprob: -10.006553649902344
    8. '                        
' → logprob: -10.631553649902344
    9. '                  ' → logprob: -11.381553649902344
    10. 'token' → logprob: -11.381553649902344

Token 1368: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0006091519608162344
    2. '               ' → logprob: -7.500608921051025
    3. '                       ' → logprob: -10.875609397888184
    4. '                    
' → logprob: -11.250609397888184
    5. '           ' → logprob: -11.375609397888184
    6. '```' → logprob: -12.375609397888184
    7. '                  ' → logprob: -12.875609397888184
    8. '                        
' → logprob: -13.500609397888184
    9. '                    ' → logprob: -13.750609397888184
    10. '                           ' → logprob: -14.500609397888184

Token 1369: ' time' (ID: 1058)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00405501015484333
    2. 'travel' → logprob: -6.754055023193359
    3. 'time' (adapté à ' time') → logprob: -7.254055023193359
    4. '               ' → logprob: -7.629055023193359
    5. 'if' → logprob: -7.754055023193359
    6. 'neighbor' → logprob: -8.00405502319336
    7. '#' → logprob: -9.00405502319336
    8. '                    
' → logprob: -9.00405502319336
    9. 'neighbors' → logprob: -9.00405502319336
    10. 'distance' → logprob: -9.25405502319336

Token 1370: 'cost' (ID: 33457)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22743433713912964
    2. '=' → logprob: -1.7274343967437744
    3. '_cost' → logprob: -3.7274343967437744
    4. '_needed' → logprob: -7.227434158325195
    5. 'cost' → logprob: -8.352434158325195
    6. '               ' → logprob: -8.977434158325195
    7. '                   ' → logprob: -9.227434158325195
    8. '_required' → logprob: -9.352434158325195
    9. '   ' → logprob: -9.727434158325195
    10. '_add' → logprob: -9.977434158325195

Token 1371: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740937054157257
    2. '=' → logprob: -0.9740936756134033
    3. '                   ' → logprob: -12.099093437194824
    4. '   ' → logprob: -12.224093437194824
    5. ')' → logprob: -13.599093437194824
    6. '               ' → logprob: -14.224093437194824
    7. '    ' → logprob: -14.224093437194824
    8. ' ' → logprob: -14.349093437194824
    9. '                    ' → logprob: -14.474093437194824
    10. '                ' → logprob: -14.724093437194824

Token 1372: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.024039505049586296
    2. '1' → logprob: -3.7740395069122314
    3. ' D' → logprob: -7.899039268493652
    4. '   ' → logprob: -8.649039268493652
    5. '           ' → logprob: -9.524039268493652
    6. ' ' → logprob: -10.149039268493652
    7. '                   ' → logprob: -10.399039268493652
    8. '               ' → logprob: -10.774039268493652
    9. '0' → logprob: -11.024039268493652
    10. '10' → logprob: -11.149039268493652

Token 1373: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6054854989051819
    2. ' +' → logprob: -2.230485439300537
    3. '+' → logprob: -2.355485439300537
    4. '[(' → logprob: -2.480485439300537
    5. ' if' → logprob: -2.480485439300537
    6. '<|end|>' → logprob: -3.230485439300537
    7. 'if' → logprob: -4.105485439300537
    8. '[token' → logprob: -4.355485439300537
    9. '<|end|>' → logprob: -5.105485439300537
    10. '.get' → logprob: -6.355485439300537

Token 1374: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.09093993902206421
    2. ' +' → logprob: -3.340939998626709
    3. '+' → logprob: -3.465939998626709
    4. ' if' → logprob: -4.965939998626709
    5. '               ' → logprob: -5.465939998626709
    6. '
' → logprob: -6.215939998626709
    7. 'if' → logprob: -6.215939998626709
    8. '<|end|>' → logprob: -6.340939998626709
    9. '           ' → logprob: -7.090939998626709
    10. '                    
' → logprob: -7.590939998626709

Token 1375: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0443563237786293
    2. '                   ' → logprob: -3.794356346130371
    3. 'key' → logprob: -3.919356346130371
    4. ' if' → logprob: -7.669356346130371
    5. 'edge' → logprob: -8.294356346130371
    6. 'token' → logprob: -9.044356346130371
    7. '#' → logprob: -9.419356346130371
    8. 'next' → logprob: -10.044356346130371
    9. '   ' → logprob: -10.544356346130371
    10. ' key' → logprob: -11.169356346130371

Token 1376: ' key' (ID: 2140)
  Prédit: '(key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.13076019287109375
    2. '((' → logprob: -2.7557601928710938
    3. 'key' → logprob: -3.0057601928710938
    4. ' (' → logprob: -5.755760192871094
    5. '(' → logprob: -6.005760192871094
    6. ' key' → logprob: -6.255760192871094
    7. '(e' → logprob: -6.630760192871094
    8. ' ((' → logprob: -8.130760192871094
    9. 'road' → logprob: -8.755760192871094
    10. '(((' → logprob: -9.380760192871094

Token 1377: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.07895489037036896
    2. ' in' → logprob: -2.5789549350738525
    3. ')' → logprob: -10.953954696655273
    4. '	in' → logprob: -11.703954696655273
    5. '<|end|>' → logprob: -11.703954696655273
    6. '<|end|>' → logprob: -11.703954696655273
    7. '[' → logprob: -12.703954696655273
    8. '
' → logprob: -12.703954696655273
    9. '   ' → logprob: -13.203954696655273
    10. '```' → logprob: -13.328954696655273

Token 1378: ' road' (ID: 8733)
  Prédit: 'road'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'road' → logprob: -0.00026991849881596863
    2. ' road' → logprob: -8.250269889831543
    3. 'jam' → logprob: -11.750269889831543
    4. '   ' → logprob: -15.000269889831543
    5. ' jam' → logprob: -16.00027084350586
    6. 'rod' → logprob: -16.50027084350586
    7. '{' → logprob: -17.25027084350586
    8. '(' → logprob: -17.25027084350586
    9. '[' → logprob: -17.37527084350586
    10. ' ' → logprob: -17.50027084350586

Token 1379: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.02634117566049099
    2. '_invalid' → logprob: -3.651341199874878
    3. 'invalid' → logprob: -10.776341438293457
    4. 'j' → logprob: -12.401341438293457
    5. ''_' → logprob: -12.651341438293457
    6. '```' → logprob: -12.901341438293457
    7. '_in' → logprob: -13.401341438293457
    8. 'jam' → logprob: -13.776341438293457
    9. '   ' → logprob: -13.901341438293457
    10. 'Invalid' → logprob: -14.401341438293457

Token 1380: 'am' (ID: 313)
  Prédit: 'am'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'am' → logprob: -0.00021295747137628496
    2. 'ам' → logprob: -9.250212669372559
    3. 'ams' → logprob: -10.250212669372559
    4. 'ام' → logprob: -11.000212669372559
    5. '_' → logprob: -11.375212669372559
    6. '[' → logprob: -11.750212669372559
    7. '_am' → logprob: -12.000212669372559
    8. '_invalid' → logprob: -12.125212669372559
    9. '```' → logprob: -12.250212669372559
    10. '[(' → logprob: -12.375212669372559

Token 1381: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.03935578092932701
    2. 'or' → logprob: -3.289355754852295
    3. ':' → logprob: -7.164355754852295
    4. ':
' → logprob: -8.414356231689453
    5. '   ' → logprob: -9.289356231689453
    6. '<|end|>' → logprob: -9.539356231689453
    7. '	or' → logprob: -10.164356231689453
    8. '                   ' → logprob: -10.164356231689453
    9. '<|end|>' → logprob: -11.039356231689453
    10. ' ' → logprob: -11.539356231689453

Token 1382: '                       ' (ID: 968)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.8675534725189209
    2. '                       ' → logprob: -1.117553472518921
    3. ' and' → logprob: -1.992553472518921
    4. ' or' → logprob: -4.1175537109375
    5. '<|end|>' → logprob: -4.1175537109375
    6. '               ' → logprob: -4.3675537109375
    7. '   ' → logprob: -4.3675537109375
    8. '[' → logprob: -4.6175537109375
    9. ':' → logprob: -4.7425537109375
    10. '<|end|>' → logprob: -4.8675537109375

Token 1383: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' (adapté à ' time') → logprob: -0.6333357691764832
    2. ' time' → logprob: -0.7583357691764832
    3. '	time' → logprob: -8.133336067199707
    4. '   ' → logprob: -8.883336067199707
    5. '                   ' → logprob: -9.008336067199707
    6. ' =' → logprob: -10.383336067199707
    7. '=time' → logprob: -10.633336067199707
    8. '                               ' → logprob: -10.883336067199707
    9. ' ' → logprob: -10.883336067199707
    10. '                           ' → logprob: -11.258336067199707

Token 1384: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -6.492120155598968e-05
    2. '=' → logprob: -10.375064849853516
    3. '_cost' → logprob: -10.500064849853516
    4. ' =' → logprob: -12.750064849853516
    5. '   ' → logprob: -14.250064849853516
    6. ' +=' → logprob: -14.750064849853516
    7. ' cost' → logprob: -14.750064849853516
    8. '+=' → logprob: -14.875064849853516
    9. '(cost' → logprob: -15.250064849853516
    10. '+' → logprob: -15.500064849853516

Token 1385: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.38846737146377563
    2. '=' → logprob: -1.5134673118591309
    3. ' +=' → logprob: -2.388467311859131
    4. ' =' → logprob: -4.638467311859131
    5. '+' → logprob: -8.138467788696289
    6. '*=' → logprob: -11.263467788696289
    7. ' +' → logprob: -12.388467788696289
    8. '   ' → logprob: -13.388467788696289
    9. ' *=' → logprob: -13.888467788696289
    10. '+='' → logprob: -13.888467788696289

Token 1386: ' jam' (ID: 12438)
  Prédit: 'jam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jam' → logprob: -0.026307733729481697
    2. ' jam' → logprob: -3.6513078212738037
    3. 'j' → logprob: -12.901308059692383
    4. '   ' → logprob: -13.901308059692383
    5. ' ' → logprob: -14.276308059692383
    6. 'jum' → logprob: -14.651308059692383
    7. 'jet' → logprob: -14.776308059692383
    8. 'ham' → logprob: -14.776308059692383
    9. 'jack' → logprob: -15.776308059692383
    10. 'jar' → logprob: -15.776308059692383

Token 1387: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -8.180258191714529e-06
    2. 'time' → logprob: -12.625008583068848
    3. '[' → logprob: -13.750008583068848
    4. ')' → logprob: -13.750008583068848
    5. '_TIME' → logprob: -14.250008583068848
    6. '_cost' → logprob: -14.750008583068848
    7. '_delay' → logprob: -15.250008583068848
    8. '_duration' → logprob: -15.500008583068848
    9. '[_' → logprob: -15.625008583068848
    10. '_times' → logprob: -15.750008583068848

Token 1388: '[key' (ID: 16401)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04123693332076073
    2. '<|end|>' → logprob: -3.6662368774414062
    3. '               ' → logprob: -4.916236877441406
    4. ')' → logprob: -5.541236877441406
    5. '<|end|>' → logprob: -6.916236877441406
    6. ',' → logprob: -7.166236877441406
    7. '                       ' → logprob: -7.791236877441406
    8. '           ' → logprob: -7.916236877441406
    9. '   ' → logprob: -8.166236877441406
    10. '       ' → logprob: -9.166236877441406

Token 1389: ']
' (ID: 1592)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.2897873520851135
    2. ']' → logprob: -1.4147872924804688
    3. '[(' → logprob: -5.289787292480469
    4. ')' → logprob: -6.164787292480469
    5. '[' → logprob: -8.289787292480469
    6. ']
' → logprob: -8.414787292480469
    7. '[key' → logprob: -8.414787292480469
    8. '(key' → logprob: -8.789787292480469
    9. '])
' → logprob: -9.039787292480469
    10. ')]' → logprob: -9.664787292480469

Token 1390: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.024997323751449585
    2. '<|end|>' → logprob: -4.524997234344482
    3. '                       ' → logprob: -4.649997234344482
    4. '               ' → logprob: -6.524997234344482
    5. 'continue' → logprob: -7.524997234344482
    6. ' or' → logprob: -7.899997234344482
    7. '           ' → logprob: -8.02499771118164
    8. '<|end|>' → logprob: -8.02499771118164
    9. ' continue' → logprob: -8.14999771118164
    10. '       ' → logprob: -8.52499771118164

Token 1391: ' elif' (ID: 9497)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.015157078392803669
    2. 'continue' → logprob: -5.390157222747803
    3. '                       ' → logprob: -6.015157222747803
    4. '   ' → logprob: -6.015157222747803
    5. 'elif' (adapté à ' elif') → logprob: -6.640157222747803
    6. ' elif' → logprob: -6.640157222747803
    7. ' continue' → logprob: -6.890157222747803
    8. '               ' → logprob: -7.765157222747803
    9. ' else' → logprob: -8.265156745910645
    10. 'else' → logprob: -8.265156745910645

Token 1392: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.02975129522383213
    2. ' key' → logprob: -3.5297513008117676
    3. '(key' → logprob: -14.40475082397461
    4. '	key' → logprob: -16.02975082397461
    5. '   ' → logprob: -16.77975082397461
    6. 'Key' → logprob: -17.40475082397461
    7. '                   ' → logprob: -17.52975082397461
    8. ' ' → logprob: -17.65475082397461
    9. '.key' → logprob: -18.40475082397461
    10. '                       ' → logprob: -19.15475082397461

Token 1393: '_rev' (ID: 99394)
  Prédit: '_rev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rev' → logprob: -0.24971304833889008
    2. 'in' → logprob: -1.7497130632400513
    3. ' in' → logprob: -3.7497129440307617
    4. 'not' → logprob: -4.624712944030762
    5. 'rev' → logprob: -5.624712944030762
    6. 'Rev' → logprob: -5.624712944030762
    7. '[::-' → logprob: -6.749712944030762
    8. ' not' → logprob: -6.999712944030762
    9. '_REV' → logprob: -7.624712944030762
    10. '=' → logprob: -7.624712944030762

Token 1394: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20143067836761475
    2. 'in' → logprob: -1.7014306783676147
    3. '	in' → logprob: -11.951430320739746
    4. ')' → logprob: -13.326430320739746
    5. '<|end|>' → logprob: -13.701430320739746
    6. '<|end|>' → logprob: -13.701430320739746
    7. '_in' → logprob: -13.951430320739746
    8. '   ' → logprob: -14.076430320739746
    9. ' ' → logprob: -14.201430320739746
    10. '[' → logprob: -14.201430320739746

Token 1395: ' road' (ID: 8733)
  Prédit: 'road'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'road' → logprob: -0.06201507896184921
    2. ' road' → logprob: -2.8120150566101074
    3. 'jam' → logprob: -10.687015533447266
    4. ' jam' → logprob: -10.812015533447266
    5. 'time' → logprob: -12.812015533447266
    6. '   ' → logprob: -15.437015533447266
    7. ' time' → logprob: -15.562015533447266
    8. ' ' → logprob: -15.812015533447266
    9. '[' → logprob: -15.937015533447266
    10. 'rod' → logprob: -16.062015533447266

Token 1396: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -4.36574100604048e-06
    2. 'j' → logprob: -12.875004768371582
    3. 'jam' → logprob: -14.625004768371582
    4. ')' → logprob: -15.375004768371582
    5. '```' → logprob: -16.000003814697266
    6. '[
' → logprob: -16.375003814697266
    7. '_invalid' → logprob: -16.375003814697266
    8. '{' → logprob: -16.500003814697266
    9. '[j' → logprob: -16.625003814697266
    10. '[' → logprob: -16.750003814697266

Token 1397: 'am' (ID: 313)
  Prédit: 'am'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'am' → logprob: -4.215330409351736e-05
    2. 'jam' → logprob: -11.375041961669922
    3. '[' → logprob: -11.875041961669922
    4. 'ams' → logprob: -12.500041961669922
    5. 'ам' → logprob: -12.625041961669922
    6. '_j' → logprob: -12.750041961669922
    7. 'j' → logprob: -13.625041961669922
    8. '_' → logprob: -13.875041961669922
    9. '{' → logprob: -13.875041961669922
    10. '_am' → logprob: -13.875041961669922

Token 1398: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.36919835209846497
    2. ':
' → logprob: -1.3691983222961426
    3. '                       ' → logprob: -3.2441983222961426
    4. '<|end|>' → logprob: -5.619198322296143
    5. '[' → logprob: -5.869198322296143
    6. '):
' → logprob: -6.494198322296143
    7. '   ' → logprob: -6.619198322296143
    8. '                   ' → logprob: -6.619198322296143
    9. '{
' → logprob: -7.119198322296143
    10. ')' → logprob: -7.119198322296143

Token 1399: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.009745936840772629
    2. '                   ' → logprob: -5.134746074676514
    3. 'time' → logprob: -6.884746074676514
    4. '   ' → logprob: -6.884746074676514
    5. ' time' → logprob: -7.634746074676514
    6. '       ' → logprob: -8.134745597839355
    7. '                           ' → logprob: -8.759745597839355
    8. '                      ' → logprob: -9.009745597839355
    9. '               ' → logprob: -9.134745597839355
    10. '                        ' → logprob: -9.259745597839355

Token 1400: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' (adapté à ' time') → logprob: -0.31333786249160767
    2. ' time' → logprob: -1.313337802886963
    3. '   ' → logprob: -10.313338279724121
    4. ' jam' → logprob: -11.188338279724121
    5. 'jam' → logprob: -11.313338279724121
    6. '(time' → logprob: -12.063338279724121
    7. '	time' → logprob: -13.188338279724121
    8. '"time' → logprob: -13.188338279724121
    9. 'j' → logprob: -13.313338279724121
    10. '=time' → logprob: -13.688338279724121

Token 1401: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -2.339278580620885e-06
    2. '_cost' → logprob: -13.375001907348633
    3. ' cost' → logprob: -14.750001907348633
    4. ' +=' → logprob: -15.875001907348633
    5. '(cost' → logprob: -17.500001907348633
    6. '+=' → logprob: -17.750001907348633
    7. '.cost' → logprob: -18.000001907348633
    8. '+' → logprob: -18.000001907348633
    9. 'code' → logprob: -18.750001907348633
    10. '=' → logprob: -19.000001907348633

Token 1402: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.1604023277759552
    2. ' +=' → logprob: -1.9104022979736328
    3. '+' → logprob: -8.910402297973633
    4. ']+=' → logprob: -10.660402297973633
    5. '=' → logprob: -11.285402297973633
    6. ' +' → logprob: -12.660402297973633
    7. '+='' → logprob: -13.785402297973633
    8. '+=(' → logprob: -14.160402297973633
    9. '<|end|>' → logprob: -14.160402297973633
    10. '+="' → logprob: -14.410402297973633

Token 1403: ' jam' (ID: 12438)
  Prédit: 'jam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jam' → logprob: -0.28116747736930847
    2. ' jam' → logprob: -1.4061675071716309
    3. 'j' → logprob: -12.406167030334473
    4. 'jet' → logprob: -13.656167030334473
    5. 'jum' → logprob: -13.656167030334473
    6. 'Jam' → logprob: -13.781167030334473
    7. ' ' → logprob: -13.906167030334473
    8. 'ham' → logprob: -14.281167030334473
    9. '[j' → logprob: -14.281167030334473
    10. 'jar' → logprob: -14.343667030334473

Token 1404: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -2.696889623621246e-06
    2. 'time' → logprob: -12.87500286102295
    3. '[' → logprob: -18.750001907348633
    4. '_' → logprob: -18.875001907348633
    5. '_TIME' → logprob: -18.875001907348633
    6. '[_' → logprob: -19.500001907348633
    7. '"time' → logprob: -19.750001907348633
    8. ' time' → logprob: -20.250001907348633
    9. ')' → logprob: -20.500001907348633
    10. 'Time' → logprob: -20.625001907348633

Token 1405: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -2.5107177862082608e-05
    2. '[(' → logprob: -10.875024795532227
    3. '[' → logprob: -12.375024795532227
    4. '{' → logprob: -13.875024795532227
    5. '[[' → logprob: -14.500024795532227
    6. 'key' → logprob: -15.750024795532227
    7. '[{' → logprob: -16.000024795532227
    8. '(key' → logprob: -16.125024795532227
    9. '[
' → logprob: -17.375024795532227
    10. '{
' → logprob: -17.625024795532227

Token 1406: '_rev' (ID: 99394)
  Prédit: '[key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -0.003951594233512878
    2. '[(' → logprob: -6.253951549530029
    3. '_rev' → logprob: -6.628951549530029
    4. '[' → logprob: -8.378952026367188
    5. 'rev' → logprob: -9.128952026367188
    6. 'Rev' → logprob: -9.128952026367188
    7. 'key' → logprob: -9.128952026367188
    8. ')' → logprob: -10.253952026367188
    9. ']' → logprob: -10.378952026367188
    10. '][' → logprob: -11.128952026367188

Token 1407: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09570444375276566
    2. ']' → logprob: -2.7207045555114746
    3. '                   ' → logprob: -3.8457045555114746
    4. '   ' → logprob: -7.095704555511475
    5. '<|end|>' → logprob: -7.095704555511475
    6. '])' → logprob: -7.345704555511475
    7. ')
' → logprob: -7.595704555511475
    8. '<|end|>' → logprob: -8.345704078674316
    9. '}' → logprob: -8.595704078674316
    10. ')]' → logprob: -8.720704078674316

Token 1408: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.013373625464737415
    2. '               ' → logprob: -4.388373851776123
    3. '```' → logprob: -8.513373374938965
    4. '                       ' → logprob: -9.013373374938965
    5. '<|end|>' → logprob: -9.013373374938965
    6. '           ' → logprob: -9.513373374938965
    7. ')' → logprob: -10.263373374938965
    8. '   ' → logprob: -10.388373374938965
    9. 'continue' → logprob: -10.388373374938965
    10. '                    
' → logprob: -10.388373374938965

Token 1409: ' neighbors' (ID: 31655)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0031682176049798727
    2. '               ' → logprob: -6.253168106079102
    3. 'neighbors' (adapté à ' neighbors') → logprob: -6.878168106079102
    4. '                       ' → logprob: -9.628168106079102
    5. ' neighbors' → logprob: -10.378168106079102
    6. 'neighbor' → logprob: -10.503168106079102
    7. '   ' → logprob: -11.003168106079102
    8. ')' → logprob: -11.003168106079102
    9. '```' → logprob: -11.128168106079102
    10. '           ' → logprob: -11.378168106079102

Token 1410: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0004317420825827867
    2. '.' → logprob: -7.750431537628174
    3. ' .' → logprob: -14.875432014465332
    4. '.app' → logprob: -15.125432014465332
    5. 'append' → logprob: -15.625432014465332
    6. '.Append' → logprob: -17.000431060791016
    7. '.ap' → logprob: -17.125431060791016
    8. ').' → logprob: -17.500431060791016
    9. '.extend' → logprob: -18.250431060791016
    10. '.push' → logprob: -18.375431060791016

Token 1411: '(((' (ID: 13163)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.014219212345778942
    2. '(((' → logprob: -4.264219284057617
    3. '(' → logprob: -9.889219284057617
    4. ' ((' → logprob: -12.889219284057617
    5. '   ' → logprob: -13.389219284057617
    6. '[((' → logprob: -14.264219284057617
    7. '((((' → logprob: -16.639219284057617
    8. '[(' → logprob: -16.889219284057617
    9. '       ' → logprob: -17.014219284057617
    10. '((-' → logprob: -17.264219284057617

Token 1412: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.005339774303138256
    2. '(nx' → logprob: -5.255339622497559
    3. ' nx' → logprob: -9.255339622497559
    4. ' (' → logprob: -11.630339622497559
    5. '   ' → logprob: -14.630339622497559
    6. 'n' → logprob: -14.755339622497559
    7. '(n' → logprob: -14.880339622497559
    8. '(' → logprob: -15.380339622497559
    9. '\n' → logprob: -17.755340576171875
    10. 'nv' → logprob: -17.755340576171875

Token 1413: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008341663633473217
    2. '+' → logprob: -7.125833988189697
    3. ' ,' → logprob: -11.125834465026855
    4. ' +' → logprob: -12.125834465026855
    5. ',+' → logprob: -12.750834465026855
    6. ',
' → logprob: -13.125834465026855
    7. '+,' → logprob: -14.000834465026855
    8. '   ' → logprob: -14.125834465026855
    9. '```' → logprob: -14.625834465026855
    10. ',y' → logprob: -14.750834465026855

Token 1414: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.00039885283331386745
    2. ' ny' → logprob: -8.250398635864258
    3. '0' → logprob: -9.000398635864258
    4. '   ' → logprob: -11.750398635864258
    5. 'dy' → logprob: -13.000398635864258
    6. '    ' → logprob: -13.250398635864258
    7. 'x' → logprob: -14.125398635864258
    8. ' ' → logprob: -15.000398635864258
    9. 'y' → logprob: -15.000398635864258
    10. '     ' → logprob: -15.500398635864258

Token 1415: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5887003540992737
    2. ',time' → logprob: -0.8387003540992737
    3. '),' → logprob: -4.463700294494629
    4. ',),' → logprob: -7.963700294494629
    5. ',d' → logprob: -8.088700294494629
    6. ' ,' → logprob: -8.338700294494629
    7. '),(' → logprob: -9.713700294494629
    8. ',(' → logprob: -10.088700294494629
    9. ',
' → logprob: -10.338700294494629
    10. ',len' → logprob: -10.463700294494629

Token 1416: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.004104285035282373
    2. ' time' → logprob: -5.504104137420654
    3. 'D' → logprob: -11.379104614257812
    4. '               ' → logprob: -12.629104614257812
    5. '   ' → logprob: -12.879104614257812
    6. '                   ' → logprob: -13.129104614257812
    7. '1' → logprob: -13.254104614257812
    8. ' D' → logprob: -14.129104614257812
    9. ')' → logprob: -14.629104614257812
    10. '           ' → logprob: -14.754104614257812

Token 1417: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -5.676981345459353e-06
    2. '_cost' → logprob: -12.125005722045898
    3. ' cost' → logprob: -16.0000057220459
    4. ')' → logprob: -17.5000057220459
    5. '(cost' → logprob: -19.5000057220459
    6. 'cos' → logprob: -19.7500057220459
    7. 'c' → logprob: -19.7500057220459
    8. '.cost' → logprob: -19.8750057220459
    9. ',' → logprob: -20.0000057220459
    10. 'Cost' → logprob: -20.2500057220459

Token 1418: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0038260871078819036
    2. '))' → logprob: -5.628826141357422
    3. ')
' → logprob: -8.503826141357422
    4. '))
' → logprob: -11.753826141357422
    5. ' )' → logprob: -11.753826141357422
    6. '   ' → logprob: -12.878826141357422
    7. '       ' → logprob: -14.003826141357422
    8. '               ' → logprob: -14.128826141357422
    9. '           ' → logprob: -14.253826141357422
    10. ',' → logprob: -14.378826141357422

Token 1419: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002767094410955906
    2. '		' → logprob: -8.375276565551758
    3. '```' → logprob: -11.000276565551758
    4. '<|end|>' → logprob: -11.375276565551758
    5. '   ' → logprob: -12.500276565551758
    6. '	       ' → logprob: -12.625276565551758
    7. '       ' → logprob: -13.125276565551758
    8. '               ' → logprob: -13.500276565551758
    9. '          ' → logprob: -13.625276565551758
    10. '
' → logprob: -13.750276565551758

Token 1420: ' graph' (ID: 7465)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0030064657330513
    2. 'graph' (adapté à ' graph') → logprob: -6.128006458282471
    3. '   ' → logprob: -7.503006458282471
    4. '       ' → logprob: -8.253006935119629
    5. ' graph' → logprob: -12.503006935119629
    6. '```' → logprob: -13.128006935119629
    7. '	graph' → logprob: -13.878006935119629
    8. '		' → logprob: -14.003006935119629
    9. '               ' → logprob: -14.378006935119629
    10. '          ' → logprob: -14.628006935119629

Token 1421: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -0.01818728819489479
    2. '[(' → logprob: -4.018187522888184
    3. '.setdefault' → logprob: -11.018187522888184
    4. '[' → logprob: -11.393187522888184
    5. '[x' → logprob: -11.768187522888184
    6. '[((' → logprob: -14.643187522888184
    7. '(node' → logprob: -14.893187522888184
    8. '[token' → logprob: -15.018187522888184
    9. '[n' → logprob: -15.393187522888184
    10. ' [(' → logprob: -15.393187522888184

Token 1422: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1632244735956192
    2. ' =' → logprob: -2.413224458694458
    3. '.append' → logprob: -2.913224458694458
    4. '.extend' → logprob: -5.288224697113037
    5. '   ' → logprob: -7.788224697113037
    6. ')' → logprob: -8.038224220275879
    7. '.' → logprob: -8.163224220275879
    8. '+=' → logprob: -9.038224220275879
    9. ' +=' → logprob: -9.038224220275879
    10. ']' → logprob: -9.163224220275879

Token 1423: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.019867217168211937
    2. ' =' → logprob: -4.144867420196533
    3. '[' → logprob: -5.644867420196533
    4. '.append' → logprob: -9.394866943359375
    5. '.setdefault' → logprob: -10.144866943359375
    6. '[:]' → logprob: -10.394866943359375
    7. '[node' → logprob: -10.644866943359375
    8. '.extend' → logprob: -10.769866943359375
    9. '.' → logprob: -10.769866943359375
    10. '.=' → logprob: -11.269866943359375

Token 1424: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.004078639671206474
    2. ' neighbors' → logprob: -5.5040788650512695
    3. 'ne' → logprob: -15.62907886505127
    4. 'neighbor' → logprob: -17.379077911376953
    5. '_neighbors' → logprob: -17.504077911376953
    6. ' neighbours' → logprob: -18.504077911376953
    7. '[' → logprob: -20.129077911376953
    8. 'Neighbors' → logprob: -20.379077911376953
    9. '```' → logprob: -21.504077911376953
    10. '   ' → logprob: -21.504077911376953

Token 1425: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1426: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018849691841751337
    2. '<|end|>' → logprob: -6.376884937286377
    3. 'return' → logprob: -9.126885414123535
    4. '
' → logprob: -10.751885414123535
    5. '<|end|>' → logprob: -11.251885414123535
    6. ')' → logprob: -11.251885414123535
    7. '	return' → logprob: -11.626885414123535
    8. ' return' → logprob: -12.376885414123535
    9. '```' → logprob: -12.626885414123535
    10. '    
' → logprob: -12.876885414123535

Token 1427: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006047414499334991
    2. 'return' (adapté à ' return') → logprob: -8.000604629516602
    3. '
' → logprob: -8.625604629516602
    4. '	return' → logprob: -9.875604629516602
    5. ' return' → logprob: -11.250604629516602
    6. '```' → logprob: -11.250604629516602
    7. '<|end|>' → logprob: -12.375604629516602
    8. ':return' → logprob: -13.000604629516602
    9. '       ' → logprob: -13.375604629516602
    10. ' ' → logprob: -14.000604629516602

Token 1428: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -5.836499985889532e-05
    2. ' graph' → logprob: -9.7500581741333
    3. '	graph' → logprob: -19.750059127807617
    4. '(graph' → logprob: -20.125059127807617
    5. '_graph' → logprob: -23.625059127807617
    6. 'Graph' → logprob: -24.500059127807617
    7. 'graphs' → logprob: -25.125059127807617
    8. '   ' → logprob: -25.125059127807617
    9. 'graphql' → logprob: -25.500059127807617
    10. '{' → logprob: -25.750059127807617

Token 1429: '


' (ID: 2499)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005307992920279503
    2. '<|end|>' → logprob: -5.630308151245117
    3. '```' → logprob: -6.505308151245117
    4. '#' → logprob: -9.880308151245117
    5. '<|end|>' → logprob: -10.005308151245117
    6. '.' → logprob: -10.380308151245117
    7. ')' → logprob: -10.505308151245117
    8. 'import' → logprob: -11.380308151245117
    9. '[' → logprob: -11.755308151245117
    10. '(' → logprob: -12.505308151245117

Token 1430: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003290948225185275
    2. '<|end|>' → logprob: -6.003291130065918
    3. '```' → logprob: -8.003291130065918
    4. '(' → logprob: -9.003291130065918
    5. '<|end|>' → logprob: -9.128291130065918
    6. '#' → logprob: -9.753291130065918
    7. '[' → logprob: -10.128291130065918
    8. ')' → logprob: -10.503291130065918
    9. '.' → logprob: -10.753291130065918
    10. 'import' → logprob: -11.003291130065918

Token 1431: ' solve' (ID: 17722)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3543824255466461
    2. ' d' → logprob: -1.2293823957443237
    3. ' shortest' → logprob: -5.479382514953613
    4. 'short' → logprob: -6.854382514953613
    5. 'solve' → logprob: -8.104382514953613
    6. 'astar' → logprob: -9.604382514953613
    7. ' solve' → logprob: -9.729382514953613
    8. ' find' → logprob: -9.854382514953613
    9. 'dj' → logprob: -10.104382514953613
    10. 'a' → logprob: -10.354382514953613

Token 1432: '():
' (ID: 8595)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.7070795893669128
    2. '():' → logprob: -0.7070795893669128
    3. '(' → logprob: -5.7070794105529785
    4. '(H' → logprob: -6.3320794105529785
    5. '(h' → logprob: -6.5820794105529785
    6. '(start' → logprob: -6.5820794105529785
    7. '():
' → logprob: -6.7070794105529785
    8. '(s' → logprob: -7.3320794105529785
    9. '(input' → logprob: -7.5820794105529785
    10. '(args' → logprob: -7.8320794105529785

Token 1433: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00014919086243025959
    2. 'import' → logprob: -9.25014877319336
    3. 'input' → logprob: -10.75014877319336
    4. '```' → logprob: -11.00014877319336
    5. ' input' → logprob: -11.87514877319336
    6. ' import' → logprob: -12.87514877319336
    7. ' line' → logprob: -13.50014877319336
    8. 'line' → logprob: -14.00014877319336
    9. 'data' → logprob: -14.25014877319336
    10. ' readline' → logprob: -14.87514877319336

Token 1434: ' input' (ID: 3422)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22834384441375732
    2. 'input' (adapté à ' input') → logprob: -1.9783438444137573
    3. 'import' → logprob: -2.728343963623047
    4. 'M' → logprob: -8.728343963623047
    5. '#' → logprob: -8.978343963623047
    6. ' input' → logprob: -9.353343963623047
    7. 'N' → logprob: -9.978343963623047
    8. 'line' → logprob: -10.103343963623047
    9. ' import' → logprob: -10.353343963623047
    10. 'inputs' → logprob: -11.228343963623047

Token 1435: ' =' (ID: 314)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.3626844882965088
    2. '()' → logprob: -1.2376844882965088
    3. '_data' → logprob: -5.36268424987793
    4. '=' → logprob: -5.48768424987793
    5. '_lines' → logprob: -5.61268424987793
    6. '_' → logprob: -7.61268424987793
    7. 'line' → logprob: -7.86268424987793
    8. ' =' → logprob: -7.86268424987793
    9. '_text' → logprob: -9.36268424987793
    10. '_=' → logprob: -9.73768424987793

Token 1436: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.47410914301872253
    2. 'sys' → logprob: -0.9741091728210449
    3. 'input' → logprob: -10.849108695983887
    4. ' input' → logprob: -12.224108695983887
    5. '	sys' → logprob: -12.474108695983887
    6. '=sys' → logprob: -13.224108695983887
    7. 'lambda' → logprob: -14.349108695983887
    8. '(sys' → logprob: -14.349108695983887
    9. ' lambda' → logprob: -14.474108695983887
    10. '   ' → logprob: -15.099108695983887

Token 1437: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.24018222093582153
    2. '.readline' → logprob: -1.6151821613311768
    3. 'stdin' → logprob: -4.490182399749756
    4. '```' → logprob: -6.865182399749756
    5. '(stdin' → logprob: -6.990182399749756
    6. '().' → logprob: -7.490182399749756
    7. 'import' → logprob: -8.365181922912598
    8. '.' → logprob: -8.365181922912598
    9. '.setdefault' → logprob: -9.490181922912598
    10. '.stdout' → logprob: -9.490181922912598

Token 1438: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0019806181080639362
    2. '.' → logprob: -6.876980781555176
    3. 'read' → logprob: -8.626980781555176
    4. '=' → logprob: -8.751980781555176
    5. '```' → logprob: -8.751980781555176
    6. '().' → logprob: -9.626980781555176
    7. '.stdin' → logprob: -9.751980781555176
    8. '_read' → logprob: -9.876980781555176
    9. '.read' → logprob: -10.126980781555176
    10. 'stdin' → logprob: -10.251980781555176

Token 1439: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8752079010009766
    2. '   ' → logprob: -0.8752079010009766
    3. '()' → logprob: -2.6252079010009766
    4. '()
' → logprob: -3.3752079010009766
    5. '().' → logprob: -3.7502079010009766
    6. '    
' → logprob: -4.000207901000977
    7. '```' → logprob: -5.875207901000977
    8. '  
' → logprob: -6.000207901000977
    9. 'tokens' → logprob: -6.000207901000977
    10. ' 
' → logprob: -6.000207901000977

Token 1440: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030815215781331062
    2. '    
' → logprob: -4.155815124511719
    3. '
' → logprob: -4.655815124511719
    4. '```' → logprob: -5.780815124511719
    5. '()' → logprob: -6.780815124511719
    6. 'n' → logprob: -8.155815124511719
    7. '``' → logprob: -9.655815124511719
    8. 't' → logprob: -9.655815124511719
    9. 'def' → logprob: -9.905815124511719
    10. '()
' → logprob: -10.030815124511719

Token 1441: ' while' (ID: 2049)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.06588676571846008
    2. '   ' → logprob: -2.8158867359161377
    3. ' M' → logprob: -5.690886974334717
    4. '```' → logprob: -9.065886497497559
    5. 'MN' → logprob: -9.565886497497559
    6. ' ' → logprob: -9.815886497497559
    7. '	M' → logprob: -9.940886497497559
    8. 'N' → logprob: -10.065886497497559
    9. '
' → logprob: -10.190886497497559
    10. 'line' → logprob: -10.690886497497559

Token 1442: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.4740995764732361
    2. 'True' → logprob: -0.9740995764732361
    3. '(True' → logprob: -11.224099159240723
    4. '   ' → logprob: -12.474099159240723
    5. ' line' → logprob: -13.349099159240723
    6. 'line' → logprob: -13.724099159240723
    7. ' ' → logprob: -13.724099159240723
    8. '1' → logprob: -13.974099159240723
    9. '
' → logprob: -15.224099159240723
    10. 'true' → logprob: -15.349099159240723

Token 1443: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.857399582862854
    2. '   ' → logprob: -1.357399582862854
    3. '():
' → logprob: -2.4823994636535645
    4. ' line' → logprob: -2.6073994636535645
    5. '(line' → logprob: -2.6073994636535645
    6. ':
' → logprob: -3.6073994636535645
    7. ':' → logprob: -3.9823994636535645
    8. '():' → logprob: -4.1073994636535645
    9. 'line' → logprob: -4.7323994636535645
    10. '_line' → logprob: -5.4823994636535645

Token 1444: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022365959361195564
    2. '       ' → logprob: -4.272366046905518
    3. 'line' → logprob: -5.147366046905518
    4. ' line' → logprob: -6.147366046905518
    5. '```' → logprob: -9.52236557006836
    6. '	line' → logprob: -9.64736557006836
    7. '(line' → logprob: -10.02236557006836
    8. '#line' → logprob: -10.77236557006836
    9. '_line' → logprob: -12.52236557006836
    10. ' ' → logprob: -13.14736557006836

Token 1445: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.0015915116528049111
    2. ' line' → logprob: -6.501591682434082
    3. '   ' → logprob: -9.876591682434082
    4. 'l' → logprob: -11.126591682434082
    5. 's' → logprob: -11.376591682434082
    6. '	line' → logprob: -12.001591682434082
    7. '_line' → logprob: -13.626591682434082
    8. '(line' → logprob: -14.126591682434082
    9. '#line' → logprob: -14.251591682434082
    10. '       ' → logprob: -14.251591682434082

Token 1446: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06479351967573166
    2. '=' → logprob: -2.814793586730957
    3. '()' → logprob: -7.564793586730957
    4. '.strip' → logprob: -7.689793586730957
    5. '==' → logprob: -7.689793586730957
    6. '=line' → logprob: -8.189793586730957
    7. '   ' → logprob: -8.439793586730957
    8. ' ==' → logprob: -8.564793586730957
    9. '().' → logprob: -8.939793586730957
    10. '()==' → logprob: -8.939793586730957

Token 1447: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.4774909019470215
    2. 'line' → logprob: -0.9774909019470215
    3. ' line' → logprob: -6.4774909019470215
    4. ' input' → logprob: -6.7274909019470215
    5. 'sys' → logprob: -7.3524909019470215
    6. ' sys' → logprob: -11.10249137878418
    7. '   ' → logprob: -11.60249137878418
    8. '(line' → logprob: -12.97749137878418
    9. '(input' → logprob: -13.35249137878418
    10. '       ' → logprob: -13.85249137878418

Token 1448: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5564287900924683
    2. '().' → logprob: -0.9314287900924683
    3. '()
' → logprob: -3.556428909301758
    4. 'rstrip' → logprob: -6.556428909301758
    5. '.rstrip' → logprob: -6.806428909301758
    6. '.strip' → logprob: -7.181428909301758
    7. '=' → logprob: -8.681428909301758
    8. '())' → logprob: -8.806428909301758
    9. 'strip' → logprob: -9.431428909301758
    10. '(' → logprob: -9.681428909301758

Token 1449: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009905888698995113
    2. '   ' → logprob: -5.384905815124512
    3. ' if' → logprob: -5.384905815124512
    4. 'if' → logprob: -8.509905815124512
    5. '        
' → logprob: -9.509905815124512
    6. '           ' → logprob: -9.634905815124512
    7. '     ' → logprob: -10.009905815124512
    8. '	' → logprob: -10.134905815124512
    9. ' ' → logprob: -10.134905815124512
    10. '    ' → logprob: -10.509905815124512

Token 1450: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8124895691871643
    2. 'if' (adapté à ' if') → logprob: -0.9374895691871643
    3. ' if' → logprob: -1.8124895095825195
    4. '	if' → logprob: -7.3124895095825195
    5. '   ' → logprob: -7.4374895095825195
    6. '	' → logprob: -9.81248950958252
    7. '        
' → logprob: -10.18748950958252
    8. ' ' → logprob: -11.43748950958252
    9. '
' → logprob: -11.93748950958252
    10. '	   ' → logprob: -12.43748950958252

Token 1451: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.1045762151479721
    2. 'not' → logprob: -3.1045761108398438
    3. ' line' → logprob: -3.6045761108398438
    4. 'line' → logprob: -3.6045761108398438
    5. '#line' → logprob: -9.979576110839844
    6. '(line' → logprob: -12.479576110839844
    7. '[line' → logprob: -13.854576110839844
    8. '=line' → logprob: -14.354576110839844
    9. '	line' → logprob: -14.979576110839844
    10. ' ' → logprob: -14.979576110839844

Token 1452: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0015023599844425917
    2. ' line' → logprob: -6.501502513885498
    3. '#line' → logprob: -18.751502990722656
    4. '(line' → logprob: -19.876502990722656
    5. '	line' → logprob: -20.751502990722656
    6. '_line' → logprob: -20.876502990722656
    7. '=line' → logprob: -21.126502990722656
    8. '[line' → logprob: -21.376502990722656
    9. 'Line' → logprob: -24.001502990722656
    10. '.line' → logprob: -24.876502990722656

Token 1453: ':
' (ID: 734)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.5216746926307678
    2. ':
' → logprob: -1.146674633026123
    3. ':' → logprob: -2.521674633026123
    4. '.rstrip' → logprob: -6.021674633026123
    5. ' or' → logprob: -6.146674633026123
    6. '   ' → logprob: -6.646674633026123
    7. '.startswith' → logprob: -7.021674633026123
    8. '       ' → logprob: -7.896674633026123
    9. '.' → logprob: -8.396675109863281
    10. ':return' → logprob: -8.521675109863281

Token 1454: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016482388600707054
    2. '           ' → logprob: -4.266482353210449
    3. '   ' → logprob: -6.141482353210449
    4. '```' → logprob: -9.39148235321045
    5. ' ' → logprob: -11.39148235321045
    6. ' break' → logprob: -11.76648235321045
    7. '        
' → logprob: -11.76648235321045
    8. ':' → logprob: -12.14148235321045
    9. '     ' → logprob: -12.14148235321045
    10. 'break' → logprob: -12.14148235321045

Token 1455: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31430232524871826
    2. 'break' (adapté à ' break') → logprob: -1.5643023252487183
    3. '   ' → logprob: -3.314302444458008
    4. ' break' → logprob: -4.064302444458008
    5. 'return' → logprob: -5.564302444458008
    6. ' ' → logprob: -6.564302444458008
    7. '           ' → logprob: -7.064302444458008
    8. '	break' → logprob: -7.439302444458008
    9. '```' → logprob: -9.564302444458008
    10. ' return' → logprob: -10.189302444458008

Token 1456: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017574065132066607
    2. '        
' → logprob: -6.751757621765137
    3. '<|end|>' → logprob: -7.876757621765137
    4. '   ' → logprob: -9.876757621765137
    5. '	' → logprob: -10.751757621765137
    6. '```' → logprob: -10.876757621765137
    7. '    
' → logprob: -11.126757621765137
    8. ',' → logprob: -11.126757621765137
    9. '<|end|>' → logprob: -11.126757621765137
    10. '  
' → logprob: -11.751757621765137

Token 1457: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006379772676154971
    2. '<|end|>' → logprob: -7.750638008117676
    3. '        
' → logprob: -9.500638008117676
    4. '   ' → logprob: -9.500638008117676
    5. 'tokens' → logprob: -11.125638008117676
    6. ',' → logprob: -11.750638008117676
    7. 's' → logprob: -12.000638008117676
    8. '<|end|>' → logprob: -12.500638008117676
    9. '
' → logprob: -12.625638008117676
    10. '           ' → logprob: -12.875638008117676

Token 1458: ' line' (ID: 2543)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.8991138935089111
    2. 'R' → logprob: -2.024113893508911
    3. '       ' → logprob: -2.024113893508911
    4. 'N' → logprob: -2.274113893508911
    5. 'H' → logprob: -2.899113893508911
    6. 'n' → logprob: -3.399113893508911
    7. 'L' → logprob: -3.524113893508911
    8. 'W' → logprob: -3.649113893508911
    9. 'line' (adapté à ' line') → logprob: -4.149113655090332
    10. 'parts' → logprob: -4.399113655090332

Token 1459: '=line' (ID: 192488)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6211215257644653
    2. ' =' → logprob: -0.8711215257644653
    3. '=line' → logprob: -3.121121406555176
    4. 'tokens' → logprob: -10.496121406555176
    5. '.strip' → logprob: -11.246121406555176
    6. '_tokens' → logprob: -11.496121406555176
    7. '_strip' → logprob: -12.121121406555176
    8. 's' → logprob: -12.496121406555176
    9. 'strip' → logprob: -13.621121406555176
    10. 'line' → logprob: -14.121121406555176

Token 1460: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.07358234375715256
    2. '().' → logprob: -3.448582410812378
    3. '=' → logprob: -3.823582410812378
    4. '.rstrip' → logprob: -4.448582172393799
    5. 'strip' → logprob: -6.198582172393799
    6. '.' → logprob: -6.698582172393799
    7. 'rstrip' → logprob: -6.823582172393799
    8. '(strip' → logprob: -7.823582172393799
    9. '=str' → logprob: -8.198582649230957
    10. '=.' → logprob: -8.323582649230957

Token 1461: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04187754914164543
    2. '()
' → logprob: -3.291877508163452
    3. '()==' → logprob: -5.791877746582031
    4. '().' → logprob: -8.916877746582031
    5. '()='' → logprob: -9.291877746582031
    6. '()!=' → logprob: -9.666877746582031
    7. '()\' → logprob: -9.666877746582031
    8. '())' → logprob: -9.666877746582031
    9. '()>' → logprob: -9.916877746582031
    10. '()`' → logprob: -10.041877746582031

Token 1462: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00036918214755132794
    2. '<|end|>' → logprob: -8.37536907196045
    3. 'if' → logprob: -9.75036907196045
    4. ' if' → logprob: -10.37536907196045
    5. '```' → logprob: -11.12536907196045
    6. '<|end|>' → logprob: -11.62536907196045
    7. '   ' → logprob: -11.62536907196045
    8. '	' → logprob: -12.37536907196045
    9. ',' → logprob: -12.62536907196045
    10. 'import' → logprob: -13.12536907196045

Token 1463: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -2.927930654550437e-05
    2. ' if' → logprob: -10.625029563903809
    3. '       ' → logprob: -12.250029563903809
    4. '	if' → logprob: -16.500028610229492
    5. ';if' → logprob: -18.000028610229492
    6. 'If' → logprob: -18.125028610229492
    7. '        
' → logprob: -18.625028610229492
    8. '#' → logprob: -19.375028610229492
    9. '           ' → logprob: -20.000028610229492
    10. '   ' → logprob: -20.000028610229492

Token 1464: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.30212104320526123
    2. 'not' → logprob: -1.5521210432052612
    3. 'line' → logprob: -3.052121162414551
    4. ' line' → logprob: -6.427121162414551
    5. '(line' → logprob: -10.17712116241455
    6. '#line' → logprob: -11.30212116241455
    7. '=line' → logprob: -11.42712116241455
    8. '[line' → logprob: -11.92712116241455
    9. '   ' → logprob: -11.92712116241455
    10. 'len' → logprob: -13.30212116241455

Token 1465: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.08344395458698273
    2. ' ==' → logprob: -2.9584438800811768
    3. '()==' → logprob: -3.5834438800811768
    4. '=='' → logprob: -9.083443641662598
    5. '()' → logprob: -9.083443641662598
    6. '.startswith' → logprob: -9.458443641662598
    7. '=' → logprob: -9.958443641662598
    8. ')==' → logprob: -11.708443641662598
    9. '===' → logprob: -12.458443641662598
    10. ']==' → logprob: -12.958443641662598

Token 1466: ' '':
' (ID: 125614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.017013192176818848
    2. ''' → logprob: -4.142013072967529
    3. '""' → logprob: -7.642013072967529
    4. '"' → logprob: -7.767013072967529
    5. ''end' → logprob: -10.517013549804688
    6. ''ex' → logprob: -11.267013549804688
    7. '"":' → logprob: -11.267013549804688
    8. '''''' → logprob: -12.017013549804688
    9. ''#' → logprob: -13.017013549804688
    10. ''''' → logprob: -13.142013549804688

Token 1467: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007825878565199673
    2. ':' → logprob: -7.500782489776611
    3. ':
' → logprob: -9.12578296661377
    4. '       ' → logprob: -10.12578296661377
    5. 'continue' → logprob: -11.25078296661377
    6. '   ' → logprob: -11.25078296661377
    7. '	       ' → logprob: -11.37578296661377
    8. '               ' → logprob: -11.62578296661377
    9. '		' → logprob: -11.75078296661377
    10. '```' → logprob: -11.87578296661377

Token 1468: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2541378438472748
    2. 'continue' (adapté à ' continue') → logprob: -1.7541378736495972
    3. 'break' → logprob: -3.0041377544403076
    4. '       ' → logprob: -7.129137992858887
    5. 'return' → logprob: -8.004137992858887
    6. ' continue' → logprob: -8.004137992858887
    7. '   ' → logprob: -8.754137992858887
    8. '```' → logprob: -9.629137992858887
    9. ' break' → logprob: -10.754137992858887
    10. '	continue' → logprob: -10.879137992858887

Token 1469: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.114600834436715e-05
    2. '        
' → logprob: -10.625091552734375
    3. '```' → logprob: -10.750091552734375
    4. '<|end|>' → logprob: -11.000091552734375
    5. 'tokens' → logprob: -11.250091552734375
    6. '   ' → logprob: -12.875091552734375
    7. 'import' → logprob: -13.250091552734375
    8. 's' → logprob: -13.375091552734375
    9. '           ' → logprob: -14.000091552734375
    10. '	' → logprob: -14.125091552734375

Token 1470: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000307575857732445
    2. '```' → logprob: -8.5003080368042
    3. ' parts' → logprob: -10.2503080368042
    4. 'tokens' → logprob: -10.6253080368042
    5. '        
' → logprob: -11.2503080368042
    6. 'parts' → logprob: -11.6253080368042
    7. 'n' → logprob: -12.2503080368042
    8. '   ' → logprob: -13.1253080368042
    9. 'try' → logprob: -13.2503080368042
    10. 's' → logprob: -13.3753080368042

Token 1471: ' M' (ID: 391)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.6142902970314026
    2. 'N' → logprob: -1.4892902374267578
    3. 'n' → logprob: -2.489290237426758
    4. '       ' → logprob: -2.614290237426758
    5. 'L' → logprob: -3.364290237426758
    6. 'M' (adapté à ' M') → logprob: -3.614290237426758
    7. 'tokens' → logprob: -5.239290237426758
    8. 'params' → logprob: -6.239290237426758
    9. 'l' → logprob: -6.239290237426758
    10. ' parts' → logprob: -6.614290237426758

Token 1472: ',N' (ID: 49539)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001044955221004784
    2. ',int' → logprob: -8.501045227050781
    3. ',num' → logprob: -8.751045227050781
    4. ',M' → logprob: -8.876045227050781
    5. '=' → logprob: -9.501045227050781
    6. ' ,' → logprob: -9.751045227050781
    7. ',n' → logprob: -9.751045227050781
    8. ',line' → logprob: -9.751045227050781
    9. ' =' → logprob: -10.501045227050781
    10. '   ' → logprob: -10.626045227050781

Token 1473: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.38482216000556946
    2. '=' → logprob: -1.259822130203247
    3. ' =' → logprob: -4.259822368621826
    4. '=int' → logprob: -5.134822368621826
    5. ',Q' → logprob: -5.134822368621826
    6. ',D' → logprob: -6.009822368621826
    7. ',int' → logprob: -6.509822368621826
    8. ',P' → logprob: -7.009822368621826
    9. ',line' → logprob: -7.384822368621826
    10. '=line' → logprob: -7.634822368621826

Token 1474: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.12693022191524506
    2. ' map' → logprob: -2.1269302368164062
    3. '[' → logprob: -13.376930236816406
    4. 'list' → logprob: -15.251930236816406
    5. '	map' → logprob: -15.626930236816406
    6. '(map' → logprob: -16.501930236816406
    7. ' ' → logprob: -17.001930236816406
    8. 'tuple' → logprob: -17.126930236816406
    9. '   ' → logprob: -17.751930236816406
    10. '_map' → logprob: -18.376930236816406

Token 1475: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.009521735832095146
    2. 'int' → logprob: -5.884521961212158
    3. '[int' → logprob: -5.884521961212158
    4. '(str' → logprob: -6.009521961212158
    5. '(lambda' → logprob: -7.759521961212158
    6. ',int' → logprob: -7.759521961212158
    7. '=int' → logprob: -7.884521961212158
    8. 'str' → logprob: -9.509521484375
    9. '<int' → logprob: -9.884521484375
    10. '```' → logprob: -10.634521484375

Token 1476: ',line' (ID: 171132)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.9422228932380676
    2. ',line' → logprob: -1.4422228336334229
    3. '(),' → logprob: -1.5672228336334229
    4. '().' → logprob: -2.067222833633423
    5. '=line' → logprob: -3.817222833633423
    6. ',' → logprob: -5.317223072052002
    7. '[line' → logprob: -5.692223072052002
    8. '#line' → logprob: -5.942223072052002
    9. 'line' → logprob: -6.442223072052002
    10. '()' → logprob: -7.067223072052002

Token 1477: '.split' (ID: 10347)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.009692342951893806
    2. '.split' → logprob: -4.759692192077637
    3. '.readline' → logprob: -7.259692192077637
    4. '.strip' → logprob: -9.384692192077637
    5. 'split' → logprob: -9.509692192077637
    6. '   ' → logprob: -10.134692192077637
    7. '.' → logprob: -10.384692192077637
    8. ')' → logprob: -10.384692192077637
    9. '()' → logprob: -10.759692192077637
    10. '(' → logprob: -11.009692192077637

Token 1478: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.007566048763692379
    2. '(','' → logprob: -5.632565975189209
    3. ')' → logprob: -6.257565975189209
    4. '())
' → logprob: -7.132565975189209
    5. '()' → logprob: -7.257565975189209
    6. '(',' → logprob: -8.132566452026367
    7. '('' → logprob: -8.882566452026367
    8. '(' → logprob: -9.632566452026367
    9. '')' → logprob: -11.382566452026367
    10. '(),' → logprob: -12.132566452026367

Token 1479: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00012868782505393028
    2. ' if' → logprob: -9.625128746032715
    3. 'if' → logprob: -10.625128746032715
    4. '<|end|>' → logprob: -10.750128746032715
    5. '   ' → logprob: -12.250128746032715
    6. '        
' → logprob: -12.875128746032715
    7. ' line' → logprob: -13.250128746032715
    8. '           ' → logprob: -13.375128746032715
    9. '```' → logprob: -13.500128746032715
    10. 'line' → logprob: -14.500128746032715

Token 1480: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.1202822923660278
    2. '       ' → logprob: -1.2452822923660278
    3. 'if' (adapté à ' if') → logprob: -1.2452822923660278
    4. 'K' → logprob: -2.9952821731567383
    5. 'L' → logprob: -4.120282173156738
    6. 'Q' → logprob: -5.120282173156738
    7. 'S' → logprob: -5.370282173156738
    8. 'R' → logprob: -5.495282173156738
    9. ' K' → logprob: -5.745282173156738
    10. ' L' → logprob: -5.870282173156738

Token 1481: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0067154900170862675
    2. ' M' → logprob: -5.006715297698975
    3. '   ' → logprob: -16.381715774536133
    4. '(M' → logprob: -16.756715774536133
    5. ' ' → logprob: -17.881715774536133
    6. '(' → logprob: -18.006715774536133
    7. '  ' → logprob: -19.506715774536133
    8. '0' → logprob: -19.631715774536133
    9. ' (' → logprob: -19.756715774536133
    10. '    ' → logprob: -20.881715774536133

Token 1482: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.061980459839105606
    2. ' ==' → logprob: -2.8119804859161377
    3. '```' → logprob: -12.436980247497559
    4. ',' → logprob: -12.686980247497559
    5. '=' → logprob: -13.686980247497559
    6. '==-' → logprob: -13.936980247497559
    7. ')==' → logprob: -14.186980247497559
    8. '()==' → logprob: -14.186980247497559
    9. '===' → logprob: -14.686980247497559
    10. '[' → logprob: -15.061980247497559

Token 1483: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '```' → logprob: -21.2500057220459
    4. 'N' → logprob: -22.1250057220459
    5. '０' → logprob: -22.3750057220459
    6. '۰' → logprob: -23.1250057220459
    7. '=' → logprob: -23.6250057220459
    8. '   ' → logprob: -23.8750057220459
    9. '``' → logprob: -24.3750057220459
    10. '_' → logprob: -24.6250057220459

Token 1484: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1602930724620819
    2. 'and' → logprob: -1.9102931022644043
    3. '	and' → logprob: -10.285292625427246
    4. '   ' → logprob: -11.035292625427246
    5. ' ' → logprob: -12.285292625427246
    6. ' or' → logprob: -12.410292625427246
    7. '           ' → logprob: -13.160292625427246
    8. '0' → logprob: -13.160292625427246
    9. '       ' → logprob: -13.160292625427246
    10. ':
' → logprob: -14.285292625427246

Token 1485: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -8.494741632603109e-05
    2. ' N' → logprob: -9.37508487701416
    3. ' ' → logprob: -19.250085830688477
    4. '	N' → logprob: -19.375085830688477
    5. '   ' → logprob: -20.000085830688477
    6. '  ' → logprob: -21.125085830688477
    7. ' ' → logprob: -21.500085830688477
    8. '
' → logprob: -22.000085830688477
    9. '0' → logprob: -22.125085830688477
    10. '```' → logprob: -22.375085830688477

Token 1486: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.006718452088534832
    2. ' ==' → logprob: -5.006718635559082
    3. ')==' → logprob: -13.756718635559082
    4. '=' → logprob: -14.381718635559082
    5. '0' → logprob: -14.631718635559082
    6. '()==' → logprob: -14.756718635559082
    7. '==
' → logprob: -15.131718635559082
    8. ']==' → logprob: -16.131717681884766
    9. '===' → logprob: -16.131717681884766
    10. '```' → logprob: -16.381717681884766

Token 1487: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '<|end|>' → logprob: -19.250001907348633
    4. '```' → logprob: -20.375001907348633
    5. '=' → logprob: -20.875001907348633
    6. '۰' → logprob: -21.250001907348633
    7. '<|end|>' → logprob: -21.500001907348633
    8. '   ' → logprob: -22.125001907348633
    9. '  ' → logprob: -22.750001907348633
    10. '00' → logprob: -23.000001907348633

Token 1488: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4954376816749573
    2. ':
' → logprob: -1.1204376220703125
    3. '           ' → logprob: -2.7454376220703125
    4. '		' → logprob: -9.120437622070312
    5. ':return' → logprob: -9.245437622070312
    6. '   ' → logprob: -10.745437622070312
    7. '       ' → logprob: -10.870437622070312
    8. '	       ' → logprob: -11.370437622070312
    9. '	' → logprob: -11.495437622070312
    10. '          ' → logprob: -11.620437622070312

Token 1489: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.182190554682165e-05
    2. '	       ' → logprob: -10.625061988830566
    3. '		' → logprob: -11.125061988830566
    4. '   ' → logprob: -12.750061988830566
    5. '       ' → logprob: -13.000061988830566
    6. '<|end|>' → logprob: -13.000061988830566
    7. '	   ' → logprob: -13.125061988830566
    8. ',' → logprob: -13.125061988830566
    9. ':' → logprob: -13.250061988830566
    10. '               ' → logprob: -13.375061988830566

Token 1490: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.03256186097860336
    2. 'return' → logprob: -3.532561779022217
    3. ' break' → logprob: -6.032561779022217
    4. '           ' → logprob: -7.907561779022217
    5. ' return' → logprob: -10.907562255859375
    6. '	break' → logprob: -10.907562255859375
    7. '_break' → logprob: -13.532562255859375
    8. '```' → logprob: -13.782562255859375
    9. '       ' → logprob: -14.907562255859375
    10. '               ' → logprob: -15.282562255859375

Token 1491: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00603106152266264
    2. '<|end|>' → logprob: -5.756031036376953
    3. '        
' → logprob: -6.256031036376953
    4. '```' → logprob: -7.506031036376953
    5. '
' → logprob: -8.381031036376953
    6. '   ' → logprob: -10.381031036376953
    7. '#line' → logprob: -10.881031036376953
    8. '<|end|>' → logprob: -10.881031036376953
    9. ',' → logprob: -11.256031036376953
    10. '#' → logprob: -11.506031036376953

Token 1492: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003135174512863159
    2. 'D' → logprob: -7.1281352043151855
    3. '   ' → logprob: -7.1281352043151855
    4. 'R' → logprob: -7.8781352043151855
    5. 'Q' → logprob: -8.878134727478027
    6. '```' → logprob: -9.003134727478027
    7. 'S' → logprob: -9.128134727478027
    8. 'T' → logprob: -9.128134727478027
    9. '        
' → logprob: -9.128134727478027
    10. 'd' → logprob: -9.503134727478027

Token 1493: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' (adapté à ' D') → logprob: -0.3129528760910034
    2. 'S' → logprob: -2.437952995300293
    3. 'K' → logprob: -2.562952995300293
    4. 'L' → logprob: -3.187952995300293
    5. '       ' → logprob: -3.312952995300293
    6. 'R' → logprob: -4.687952995300293
    7. 'T' → logprob: -5.562952995300293
    8. 'Q' → logprob: -5.562952995300293
    9. 'k' → logprob: -5.937952995300293
    10. 'signals' → logprob: -6.687952995300293

Token 1494: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06498287618160248
    2. '=' → logprob: -2.9399828910827637
    3. ',K' → logprob: -5.689982891082764
    4. ' =' → logprob: -6.814982891082764
    5. ',k' → logprob: -6.939982891082764
    6. ',line' → logprob: -7.189982891082764
    7. ',D' → logprob: -7.439982891082764
    8. ',Q' → logprob: -7.689982891082764
    9. '=int' → logprob: -7.939982891082764
    10. ',L' → logprob: -8.064982414245605

Token 1495: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.07889000326395035
    2. ' int' → logprob: -2.578890085220337
    3. '(int' → logprob: -16.578889846801758
    4. '[int' → logprob: -16.953889846801758
    5. 'float' → logprob: -17.078889846801758
    6. '       ' → logprob: -17.328889846801758
    7. '=int' → logprob: -17.578889846801758
    8. '	int' → logprob: -17.578889846801758
    9. '<int' → logprob: -17.953889846801758
    10. '   ' → logprob: -18.203889846801758

Token 1496: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.005244429688900709
    2. 'input' → logprob: -5.255244255065918
    3. '(line' → logprob: -12.255244255065918
    4. '(sys' → logprob: -12.880244255065918
    5. 'sys' → logprob: -13.130244255065918
    6. 'line' → logprob: -13.880244255065918
    7. '=input' → logprob: -16.255245208740234
    8. ' input' → logprob: -16.505245208740234
    9. '(' → logprob: -16.630245208740234
    10. '<input' → logprob: -17.380245208740234

Token 1497: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.020494822412729263
    2. '()' → logprob: -4.0204949378967285
    3. '().' → logprob: -6.1454949378967285
    4. ')' → logprob: -8.64549446105957
    5. '())
' → logprob: -11.39549446105957
    6. '();)' → logprob: -13.02049446105957
    7. ' ())' → logprob: -13.02049446105957
    8. '()
' → logprob: -13.27049446105957
    9. '.readline' → logprob: -14.02049446105957
    10. '()[' → logprob: -14.14549446105957

Token 1498: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0058645629324018955
    2. 'signals' → logprob: -5.50586462020874
    3. 'S' → logprob: -7.38086462020874
    4. 'signal' → logprob: -7.50586462020874
    5. 'Q' → logprob: -8.505864143371582
    6. 'K' → logprob: -9.380864143371582
    7. 's' → logprob: -9.755864143371582
    8. '        
' → logprob: -9.755864143371582
    9. ' signals' → logprob: -10.505864143371582
    10. 'L' → logprob: -10.880864143371582

Token 1499: ' ns' (ID: 18343)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.07406089454889297
    2. 'K' → logprob: -3.1990609169006348
    3. '       ' → logprob: -4.449060916900635
    4. 'Q' → logprob: -5.074060916900635
    5. 'signal' → logprob: -5.699060916900635
    6. 'signals' → logprob: -5.949060916900635
    7. 'L' → logprob: -6.199060916900635
    8. 'R' → logprob: -7.199060916900635
    9. 'num' → logprob: -7.199060916900635
    10. 'P' → logprob: -7.449060916900635

Token 1500: ' =' (ID: 314)
  Prédit: 'ignal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ignal' → logprob: -0.7308623194694519
    2. 'ig' → logprob: -1.3558623790740967
    3. '_k' → logprob: -1.8558623790740967
    4. 'ign' → logprob: -3.3558623790740967
    5. 'k' → logprob: -3.7308623790740967
    6. '_signal' → logprob: -4.605862140655518
    7. ' =' → logprob: -4.855862140655518
    8. 'g' → logprob: -5.105862140655518
    9. '_g' → logprob: -5.105862140655518
    10. '_' → logprob: -5.605862140655518

Token 1501: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.7120533811976202e-05
    2. ' int' → logprob: -11.000017166137695
    3. 'input' → logprob: -15.625017166137695
    4. '   ' → logprob: -15.875017166137695
    5. '[int' → logprob: -17.500017166137695
    6. '=int' → logprob: -19.125017166137695
    7. '(int' → logprob: -19.250017166137695
    8. '  ' → logprob: -19.375017166137695
    9. ' ' → logprob: -20.000017166137695
    10. '	int' → logprob: -20.250017166137695

Token 1502: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.20142726600170135
    2. 'input' → logprob: -1.7014272212982178
    3. '=input' → logprob: -11.951427459716797
    4. '(sys' → logprob: -12.701427459716797
    5. 'sys' → logprob: -13.201427459716797
    6. ' input' → logprob: -13.826427459716797
    7. '_input' → logprob: -14.451427459716797
    8. '[input' → logprob: -14.701427459716797
    9. '<input' → logprob: -15.201427459716797
    10. ',input' → logprob: -15.326427459716797

Token 1503: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.002789780730381608
    2. '())
' → logprob: -6.2527899742126465
    3. ')' → logprob: -7.5027899742126465
    4. '()' → logprob: -8.127789497375488
    5. '()
' → logprob: -11.502789497375488
    6. ' ())' → logprob: -13.252789497375488
    7. '();)' → logprob: -14.502789497375488
    8. '())
' → logprob: -14.502789497375488
    9. '().' → logprob: -15.377789497375488
    10. '(' → logprob: -15.627789497375488

Token 1504: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31350699067115784
    2. 'signals' → logprob: -1.3135069608688354
    3. 'sign' → logprob: -8.688507080078125
    4. 'signal' → logprob: -10.188507080078125
    5. '   ' → logprob: -11.688507080078125
    6. '#' → logprob: -11.813507080078125
    7. 'sig' → logprob: -12.438507080078125
    8. '	sign' → logprob: -12.563507080078125
    9. '```' → logprob: -13.063507080078125
    10. '           ' → logprob: -13.188507080078125

Token 1505: ' signals' (ID: 29026)
  Prédit: 'signals'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'signals' (adapté à ' signals') → logprob: -3.292907877039397e-06
    2. '       ' → logprob: -12.75000286102295
    3. '```' → logprob: -15.50000286102295
    4. '   ' → logprob: -17.000003814697266
    5. '           ' → logprob: -17.125003814697266
    6. '``' → logprob: -18.125003814697266
    7. 'sign' → logprob: -18.250003814697266
    8. ' signals' → logprob: -18.375003814697266
    9. 'signal' → logprob: -19.125003814697266
    10. 'lines' → logprob: -19.250003814697266

Token 1506: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012548266910016537
    2. ' =' → logprob: -4.512548446655273
    3. '={}' → logprob: -6.512548446655273
    4. '={' → logprob: -11.887548446655273
    5. '={}
' → logprob: -12.262548446655273
    6. '=[]' → logprob: -13.387548446655273
    7. '   ' → logprob: -13.887548446655273
    8. '{}' → logprob: -15.762548446655273
    9. '＝' → logprob: -16.137548446655273
    10. '={},' → logprob: -16.512548446655273

Token 1507: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.001171652227640152
    2. '{}
' → logprob: -6.751171588897705
    3. '{}

' → logprob: -14.001172065734863
    4. 'dict' → logprob: -15.126172065734863
    5. '{})' → logprob: -16.251171112060547
    6. ' {}' → logprob: -16.376171112060547
    7. '={}' → logprob: -16.501171112060547
    8. '{}\' → logprob: -16.751171112060547
    9. '{' → logprob: -17.251171112060547
    10. '   ' → logprob: -17.376171112060547

Token 1508: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23163065314292908
    2. '       ' → logprob: -1.9816306829452515
    3. ' for' → logprob: -2.731630563735962
    4. '	for' → logprob: -6.106630802154541
    5. '<|end|>' → logprob: -6.731630802154541
    6. '	' → logprob: -8.731630325317383
    7. '```' → logprob: -9.231630325317383
    8. '   ' → logprob: -10.231630325317383
    9. '	   ' → logprob: -10.356630325317383
    10. '{' → logprob: -11.606630325317383

Token 1509: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -6.511406809295295e-06
    2. ' for' → logprob: -12.000006675720215
    3. '       ' → logprob: -15.875006675720215
    4. '	for' → logprob: -16.1250057220459
    5. '```' → logprob: -20.0000057220459
    6. '   ' → logprob: -20.8750057220459
    7. '_for' → logprob: -22.8750057220459
    8. 'For' → logprob: -23.1250057220459
    9. '
' → logprob: -23.2500057220459
    10. '#' → logprob: -23.7500057220459

Token 1510: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -6.64708495605737e-05
    2. '_i' → logprob: -10.375066757202148
    3. '_range' → logprob: -10.500066757202148
    4. ' _' → logprob: -12.125066757202148
    5. '_signal' → logprob: -13.500066757202148
    6. 'i' → logprob: -14.875066757202148
    7. '_in' → logprob: -15.750066757202148
    8. '_=' → logprob: -15.750066757202148
    9. 'range' → logprob: -16.25006675720215
    10. '_s' → logprob: -17.12506675720215

Token 1511: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.030055811628699303
    2. 'in' → logprob: -3.5300557613372803
    3. 'range' → logprob: -8.15505599975586
    4. '_' → logprob: -11.78005599975586
    5. ' ' → logprob: -12.15505599975586
    6. 'i' → logprob: -13.03005599975586
    7. ' range' → logprob: -13.78005599975586
    8. ' _' → logprob: -14.40505599975586
    9. 'signal' → logprob: -14.53005599975586
    10. '  ' → logprob: -15.53005599975586

Token 1512: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.306760805164231e-05
    2. ' range' → logprob: -11.25001335144043
    3. '_' → logprob: -18.12501335144043
    4. '(range' → logprob: -18.62501335144043
    5. '_range' → logprob: -19.37501335144043
    6. '	range' → logprob: -20.87501335144043
    7. 'ns' → logprob: -21.12501335144043
    8. 'signal' → logprob: -21.62501335144043
    9. ')' → logprob: -21.75001335144043
    10. '
' → logprob: -22.00001335144043

Token 1513: '(ns' (ID: 79469)
  Prédit: 'ns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.0015041481237858534
    2. '(ns' → logprob: -6.501503944396973
    3. ' ns' → logprob: -13.251503944396973
    4. '	ns' → logprob: -17.25150489807129
    5. '_ns' → logprob: -17.37650489807129
    6. '/ns' → logprob: -19.12650489807129
    7. 'NS' → logprob: -20.87650489807129
    8. '.ns' → logprob: -21.25150489807129
    9. '   ' → logprob: -22.00150489807129
    10. 'n' → logprob: -22.37650489807129

Token 1514: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0666918158531189
    2. '():
' → logprob: -3.0666918754577637
    3. '):' → logprob: -4.566691875457764
    4. '       ' → logprob: -5.566691875457764
    5. ':
' → logprob: -7.066691875457764
    6. ':' → logprob: -7.316691875457764
    7. '()):
' → logprob: -7.441691875457764
    8. '```' → logprob: -7.566691875457764
    9. '   ' → logprob: -7.691691875457764
    10. '           ' → logprob: -9.066691398620605

Token 1515: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23893222212791443
    2. 'line' → logprob: -1.7389322519302368
    3. 's' → logprob: -4.113932132720947
    4. ' line' → logprob: -4.113932132720947
    5. '#line' → logprob: -6.738932132720947
    6. '_line' → logprob: -7.238932132720947
    7. '	line' → logprob: -7.363932132720947
    8. ' s' → logprob: -8.113932609558105
    9. '   ' → logprob: -8.113932609558105
    10. '```' → logprob: -8.113932609558105

Token 1516: ' s' (ID: 265)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.24463312327861786
    2. 's' (adapté à ' s') → logprob: -2.119633197784424
    3. 'l' → logprob: -2.994633197784424
    4. 'sig' → logprob: -3.494633197784424
    5. 'signal' → logprob: -4.744633197784424
    6. 'ln' → logprob: -6.244633197784424
    7. 'L' → logprob: -6.744633197784424
    8. 'parts' → logprob: -6.994633197784424
    9. ' line' → logprob: -6.994633197784424
    10. '   ' → logprob: -6.994633197784424

Token 1517: ',k' (ID: 35155)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8645265698432922
    2. ' =' → logprob: -1.2395265102386475
    3. '=line' → logprob: -1.4895265102386475
    4. 'line' → logprob: -3.4895265102386475
    5. '=sys' → logprob: -3.9895265102386475
    6. '_line' → logprob: -4.614526748657227
    7. 'ignal' → logprob: -6.864526748657227
    8. 's' → logprob: -6.864526748657227
    9. '=input' → logprob: -7.364526748657227
    10. '=s' → logprob: -7.364526748657227

Token 1518: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.26483750343322754
    2. '=' → logprob: -1.6398375034332275
    3. '=line' → logprob: -3.3898375034332275
    4. '=input' → logprob: -5.764837265014648
    5. '=sys' → logprob: -6.764837265014648
    6. '=int' → logprob: -8.264837265014648
    7. 'line' → logprob: -8.639837265014648
    8. '=s' → logprob: -9.639837265014648
    9. ',line' → logprob: -9.639837265014648
    10. ',' → logprob: -11.014837265014648

Token 1519: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3149532377719879
    2. 'parse' → logprob: -1.3149532079696655
    3. ' input' → logprob: -6.814953327178955
    4. 'map' → logprob: -7.814953327178955
    5. ' parse' → logprob: -8.689952850341797
    6. 'sys' → logprob: -11.064952850341797
    7. 'line' → logprob: -12.314952850341797
    8. ' map' → logprob: -14.439952850341797
    9. ' sys' → logprob: -16.439952850341797
    10. 's' → logprob: -17.064952850341797

Token 1520: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00016754455282352865
    2. '()' → logprob: -8.875167846679688
    3. '=' → logprob: -11.375167846679688
    4. ' =' → logprob: -12.375167846679688
    5. '.readline' → logprob: -12.500167846679688
    6. '.split' → logprob: -13.500167846679688
    7. '())' → logprob: -13.625167846679688
    8. ')' → logprob: -13.625167846679688
    9. '()).' → logprob: -14.125167846679688
    10. '()='' → logprob: -14.375167846679688

Token 1521: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.014399716630578041
    2. 'split' → logprob: -4.264399528503418
    3. 'rstrip' → logprob: -8.389399528503418
    4. '(strip' → logprob: -12.014399528503418
    5. ' strip' → logprob: -14.139399528503418
    6. '_strip' → logprob: -14.139399528503418
    7. '.strip' → logprob: -14.264399528503418
    8. 'read' → logprob: -15.514399528503418
    9. '-strip' → logprob: -15.889399528503418
    10. '(split' → logprob: -16.139400482177734

Token 1522: '()
' (ID: 1234)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.232537865638733
    2. '           ' → logprob: -1.482537865638733
    3. '<|end|>' → logprob: -2.6075377464294434
    4. ',' → logprob: -2.9825377464294434
    5. ' =' → logprob: -3.1075377464294434
    6. 's' → logprob: -3.1075377464294434
    7. '()
' → logprob: -3.2325377464294434
    8. '()' → logprob: -3.6075377464294434
    9. '<|end|>' → logprob: -3.6075377464294434
    10. '
' → logprob: -3.6075377464294434

Token 1523: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016351896338164806
    2. 'signals' → logprob: -7.5016350746154785
    3. '<|end|>' → logprob: -7.7516350746154785
    4. 'k' → logprob: -8.001635551452637
    5. 's' → logprob: -8.876635551452637
    6. ',' → logprob: -10.001635551452637
    7. ' k' → logprob: -10.501635551452637
    8. '<|end|>' → logprob: -10.876635551452637
    9. '       ' → logprob: -11.001635551452637
    10. ' signals' → logprob: -11.001635551452637

Token 1524: ' k' (ID: 372)
  Prédit: 'signals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'signals' → logprob: -0.012237079441547394
    2. 'k' (adapté à ' k') → logprob: -4.887237071990967
    3. '           ' → logprob: -5.387237071990967
    4. ' signals' → logprob: -10.512237548828125
    5. '   ' → logprob: -11.887237548828125
    6. 's' → logprob: -12.137237548828125
    7. 'sign' → logprob: -13.012237548828125
    8. 'signal' → logprob: -13.512237548828125
    9. '               ' → logprob: -13.762237548828125
    10. ' k' → logprob: -15.137237548828125

Token 1525: '=int' (ID: 37431)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.003817772027105093
    2. '=int' → logprob: -6.003817558288574
    3. ' =' → logprob: -6.628817558288574
    4. '=k' → logprob: -10.878817558288574
    5. 'k' → logprob: -15.503817558288574
    6. '=
' → logprob: -16.00381851196289
    7. '＝' → logprob: -16.25381851196289
    8. 'int' → logprob: -16.37881851196289
    9. '```' → logprob: -17.00381851196289
    10. '=float' → logprob: -18.00381851196289

Token 1526: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.0018302272073924541
    2. 'k' → logprob: -6.376830101013184
    3. '{k' → logprob: -10.001830101013184
    4. '[k' → logprob: -10.876830101013184
    5. '=k' → logprob: -11.001830101013184
    6. ' k' → logprob: -11.251830101013184
    7. '	k' → logprob: -11.751830101013184
    8. ',k' → logprob: -12.376830101013184
    9. '/k' → logprob: -12.751830101013184
    10. '_k' → logprob: -12.751830101013184

Token 1527: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4296667277812958
    2. ')
' → logprob: -1.0546667575836182
    3. '           ' → logprob: -7.179666519165039
    4. ')
' → logprob: -9.179666519165039
    5. '<|end|>' → logprob: -11.054666519165039
    6. '<|end|>' → logprob: -11.054666519165039
    7. '       ' → logprob: -11.554666519165039
    8. '),' → logprob: -11.679666519165039
    9. ');' → logprob: -11.679666519165039
    10. ')return' → logprob: -12.054666519165039

Token 1528: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1272885948419571
    2. 'signals' → logprob: -2.127288579940796
    3. ' signals' → logprob: -8.627288818359375
    4. '       ' → logprob: -9.627288818359375
    5. '<|end|>' → logprob: -9.627288818359375
    6. '   ' → logprob: -10.752288818359375
    7. 'sign' → logprob: -12.002288818359375
    8. 'signal' → logprob: -12.877288818359375
    9. '```' → logprob: -12.877288818359375
    10. '          ' → logprob: -13.002288818359375

Token 1529: ' inter' (ID: 993)
  Prédit: 'signals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'signals' → logprob: -0.00011605957115534693
    2. ' signals' → logprob: -9.125116348266602
    3. '           ' → logprob: -11.875116348266602
    4. 'signal' → logprob: -17.1251163482666
    5. '       ' → logprob: -17.3751163482666
    6. '   ' → logprob: -17.3751163482666
    7. 'sign' → logprob: -17.7501163482666
    8. '```' → logprob: -18.1251163482666
    9. '            
' → logprob: -19.7501163482666
    10. '
' → logprob: -19.7501163482666

Token 1530: ' =' (ID: 314)
  Prédit: 'section'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'section' → logprob: -0.0012780919205397367
    2. 'sections' → logprob: -7.376277923583984
    3. 's' → logprob: -8.126277923583984
    4. ' =' → logprob: -8.501277923583984
    5. '=' → logprob: -9.001277923583984
    6. '```' → logprob: -11.876277923583984
    7. 'ection' → logprob: -12.126277923583984
    8. '<section' → logprob: -12.501277923583984
    9. ')section' → logprob: -12.626277923583984
    10. 'SECTION' → logprob: -13.126277923583984

Token 1531: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -6.754368223482743e-05
    2. '(parse' → logprob: -10.250067710876465
    3. 's' → logprob: -11.000067710876465
    4. ' parse' → logprob: -11.125067710876465
    5. 'tuple' → logprob: -14.625067710876465
    6. '.parse' → logprob: -16.50006675720215
    7. '=parse' → logprob: -17.25006675720215
    8. '	parse' → logprob: -17.62506675720215
    9. '_parse' → logprob: -18.25006675720215
    10. '(' → logprob: -18.50006675720215

Token 1532: '_inter' (ID: 16818)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5800690650939941
    2. '_inter' → logprob: -0.8300690650939941
    3. 'intersection' → logprob: -5.955069065093994
    4. '(s' → logprob: -6.705069065093994
    5. 'inter' → logprob: -8.205068588256836
    6. '(inter' → logprob: -11.580068588256836
    7. '```' → logprob: -12.830068588256836
    8. '[s' → logprob: -12.830068588256836
    9. ' s' → logprob: -12.955068588256836
    10. '_s' → logprob: -13.080068588256836

Token 1533: 'section' (ID: 6471)
  Prédit: 'section'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'section' → logprob: -0.006434456445276737
    2. 's' → logprob: -5.131434440612793
    3. 'intersection' → logprob: -8.006434440612793
    4. '_inter' → logprob: -9.756434440612793
    5. 'sections' → logprob: -9.881434440612793
    6. '_section' → logprob: -10.381434440612793
    7. '(inter' → logprob: -12.131434440612793
    8. '(s' → logprob: -12.256434440612793
    9. 'ction' → logprob: -12.381434440612793
    10. ' s' → logprob: -12.381434440612793

Token 1534: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -3.6550729419104755e-05
    2. 's' → logprob: -10.250036239624023
    3. '(' → logprob: -14.750036239624023
    4. ' (' → logprob: -15.125036239624023
    5. ' s' → logprob: -15.500036239624023
    6. '```' → logprob: -16.375036239624023
    7. '{s' → logprob: -17.000036239624023
    8. '(
' → logprob: -17.375036239624023
    9. '#' → logprob: -17.625036239624023
    10. '[s' → logprob: -18.125036239624023

Token 1535: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004865126684308052
    2. ')
' → logprob: -5.5048651695251465
    3. '           ' → logprob: -7.2548651695251465
    4. '(' → logprob: -10.754864692687988
    5. '(inter' → logprob: -11.129864692687988
    6. ')
' → logprob: -11.629864692687988
    7. ')#' → logprob: -11.754864692687988
    8. '(s' → logprob: -12.379864692687988
    9. '       ' → logprob: -13.004864692687988
    10. ')s' → logprob: -13.129864692687988

Token 1536: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2522902190685272
    2. 'signals' → logprob: -1.5022902488708496
    3. '       ' → logprob: -8.252289772033691
    4. ' signals' → logprob: -10.002289772033691
    5. 'sign' → logprob: -10.627289772033691
    6. '   ' → logprob: -11.002289772033691
    7. '```' → logprob: -12.502289772033691
    8. 'signal' → logprob: -13.002289772033691
    9. '<|end|>' → logprob: -13.252289772033691
    10. '               ' → logprob: -13.377289772033691

Token 1537: ' signals' (ID: 29026)
  Prédit: 'signals'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'signals' (adapté à ' signals') → logprob: -0.0002726601669564843
    2. '           ' → logprob: -8.500272750854492
    3. ' signals' → logprob: -9.625272750854492
    4. '   ' → logprob: -13.125272750854492
    5. '       ' → logprob: -14.375272750854492
    6. 'sign' → logprob: -15.375272750854492
    7. '```' → logprob: -15.750272750854492
    8. 'signal' → logprob: -16.875272750854492
    9. '               ' → logprob: -17.625272750854492
    10. '
' → logprob: -17.875272750854492

Token 1538: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.339278580620885e-06
    2. 'inter' → logprob: -13.250001907348633
    3. '(inter' → logprob: -15.375001907348633
    4. ' [' → logprob: -16.375001907348633
    5. '[int' → logprob: -16.625001907348633
    6. '[in' → logprob: -16.750001907348633
    7. '   ' → logprob: -16.750001907348633
    8. '```' → logprob: -16.750001907348633
    9. '[s' → logprob: -17.125001907348633
    10. '[(' → logprob: -17.250001907348633

Token 1539: 'inter' (ID: 3082)
  Prédit: 'inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inter' → logprob: -1.5048530030981055e-06
    2. '(inter' → logprob: -13.625001907348633
    3. '[' → logprob: -16.375001907348633
    4. ']' → logprob: -16.875001907348633
    5. ' inter' → logprob: -17.625001907348633
    6. '.inter' → logprob: -18.000001907348633
    7. '_inter' → logprob: -18.000001907348633
    8. ')' → logprob: -18.250001907348633
    9. 's' → logprob: -18.500001907348633
    10. '...' → logprob: -19.750001907348633

Token 1540: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014170562848448753
    2. ']=' → logprob: -4.2641706466674805
    3. '=' → logprob: -13.26417064666748
    4. ']=(' → logprob: -13.26417064666748
    5. ')' → logprob: -13.63917064666748
    6. '[' → logprob: -14.51417064666748
    7. '   ' → logprob: -14.63917064666748
    8. ' ]' → logprob: -14.88917064666748
    9. ']={' → logprob: -15.01417064666748
    10. ']='' → logprob: -15.13917064666748

Token 1541: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0006062911124899983
    2. ' =' → logprob: -7.500606060028076
    3. '[' → logprob: -10.000606536865234
    4. 'signals' → logprob: -12.500606536865234
    5. '=s' → logprob: -13.500606536865234
    6. ']=' → logprob: -13.750606536865234
    7. '   ' → logprob: -14.625606536865234
    8. '=k' → logprob: -14.750606536865234
    9. '[k' → logprob: -14.875606536865234
    10. ']' → logprob: -15.125606536865234

Token 1542: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.9361264946837764e-07
    2. ' k' → logprob: -15.75
    3. '	k' → logprob: -22.5
    4. '{k' → logprob: -23.375
    5. '   ' → logprob: -24.0
    6. '(k' → logprob: -24.625
    7. '```' → logprob: -25.125
    8. '_k' → logprob: -25.75
    9. '[k' → logprob: -26.0
    10. 'kx' → logprob: -26.625

Token 1543: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028639482334256172
    2. 'road' → logprob: -3.653639554977417
    3. ' road' → logprob: -7.278639316558838
    4. '```' → logprob: -7.278639316558838
    5. '   ' → logprob: -8.528639793395996
    6. '#' → logprob: -8.528639793395996
    7. '        
' → logprob: -9.028639793395996
    8. '           ' → logprob: -9.278639793395996
    9. '	' → logprob: -9.528639793395996
    10. 'jam' → logprob: -10.841139793395996

Token 1544: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.550806999206543
    2. 'road' → logprob: -0.925806999206543
    3. ' road' → logprob: -5.425806999206543
    4. 'ro' → logprob: -5.925806999206543
    5. '```' → logprob: -5.925806999206543
    6. '           ' → logprob: -6.300806999206543
    7. 'rd' → logprob: -6.300806999206543
    8. 'r' → logprob: -6.425806999206543
    9. '   ' → logprob: -6.550806999206543
    10. 'rs' → logprob: -6.925806999206543

Token 1545: ' nc' (ID: 39841)
  Prédit: 'nr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nr' → logprob: -0.7053698301315308
    2. 'road' → logprob: -1.4553698301315308
    3. 'nj' → logprob: -1.9553698301315308
    4. 'r' → logprob: -2.8303699493408203
    5. 'ri' → logprob: -3.8303699493408203
    6. 'rs' → logprob: -4.58036994934082
    7. 'rn' → logprob: -4.70536994934082
    8. 'ro' → logprob: -4.83036994934082
    9. 'ni' → logprob: -5.08036994934082
    10. 'rd' → logprob: -5.70536994934082

Token 1546: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5815842151641846
    2. '=' → logprob: -0.8315842151641846
    3. '=int' → logprob: -5.2065839767456055
    4. '=input' → logprob: -9.456583976745605
    5. '=line' → logprob: -11.206583976745605
    6. '   ' → logprob: -11.331583976745605
    7. 'n' → logprob: -12.081583976745605
    8. 'ode' → logprob: -12.331583976745605
    9. ' ' → logprob: -12.456583976745605
    10. 'c' → logprob: -12.706583976745605

Token 1547: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0040785204619169235
    2. ' int' → logprob: -5.504078388214111
    3. '   ' → logprob: -17.004077911376953
    4. '(int' → logprob: -17.254077911376953
    5. '=int' → logprob: -17.379077911376953
    6. '[int' → logprob: -19.004077911376953
    7. '<int' → logprob: -19.504077911376953
    8. '	int' → logprob: -19.629077911376953
    9. ' ' → logprob: -19.629077911376953
    10. '  ' → logprob: -20.129077911376953

Token 1548: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.023246407508850098
    2. 'input' → logprob: -3.7732462882995605
    3. '=input' → logprob: -14.398246765136719
    4. '[input' → logprob: -15.398246765136719
    5. ' input' → logprob: -16.52324676513672
    6. '<input' → logprob: -17.14824676513672
    7. ',input' → logprob: -17.52324676513672
    8. '	input' → logprob: -18.27324676513672
    9. '```' → logprob: -20.52324676513672
    10. '(
' → logprob: -20.64824676513672

Token 1549: '())
' (ID: 4574)
  Prédit: '())
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())
' → logprob: -0.02726278081536293
    2. '())' → logprob: -4.1522626876831055
    3. '()' → logprob: -4.5272626876831055
    4. '()
' → logprob: -8.402262687683105
    5. ')' → logprob: -9.652262687683105
    6. ')
' → logprob: -10.027262687683105
    7. '())
' → logprob: -10.902262687683105
    8. ' ())
' → logprob: -13.777262687683105
    9. '())

' → logprob: -14.652262687683105
    10. '()`' → logprob: -14.777262687683105

Token 1550: '       ' (ID: 309)
  Prédit: 'road'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'road' → logprob: -0.09018176048994064
    2. '       ' → logprob: -2.465181827545166
    3. 'for' → logprob: -7.965181827545166
    4. '```' → logprob: -8.215181350708008
    5. 'roads' → logprob: -8.340181350708008
    6. ' road' → logprob: -8.590181350708008
    7. 'ro' → logprob: -9.840181350708008
    8. 'invalid' → logprob: -10.215181350708008
    9. '``' → logprob: -10.715181350708008
    10. '   ' → logprob: -11.215181350708008

Token 1551: ' road' (ID: 8733)
  Prédit: 'road'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'road' (adapté à ' road') → logprob: -1.5048530030981055e-06
    2. '   ' → logprob: -14.000001907348633
    3. 'roads' → logprob: -15.125001907348633
    4. '       ' → logprob: -15.750001907348633
    5. ' road' → logprob: -16.750001907348633
    6. '
' → logprob: -16.875001907348633
    7. '    
' → logprob: -17.000001907348633
    8. '```' → logprob: -17.125001907348633
    9. 'invalid' → logprob: -18.000001907348633
    10. '        
' → logprob: -18.000001907348633

Token 1552: '_invalid' (ID: 71389)
  Prédit: '_invalid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_invalid' → logprob: -2.6537622034084052e-05
    2. 'invalid' → logprob: -11.12502670288086
    3. '_valid' → logprob: -12.50002670288086
    4. '_INVALID' → logprob: -13.00002670288086
    5. 's' → logprob: -13.37502670288086
    6. '```' → logprob: -13.87502670288086
    7. '_' → logprob: -14.12502670288086
    8. 'Invalid' → logprob: -14.50002670288086
    9. '_missing' → logprob: -15.12502670288086
    10. '_disabled' → logprob: -15.25002670288086

Token 1553: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22551214694976807
    2. ' =' → logprob: -1.600512146949768
    3. 's' → logprob: -9.850512504577637
    4. '={}' → logprob: -10.975512504577637
    5. ')' → logprob: -12.225512504577637
    6. '＝' → logprob: -12.350512504577637
    7. '=[]' → logprob: -12.475512504577637
    8. '   ' → logprob: -12.975512504577637
    9. '_' → logprob: -13.350512504577637
    10. '	' → logprob: -13.475512504577637

Token 1554: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.00015133652777876705
    2. '{}' → logprob: -9.000151634216309
    3. ' set' → logprob: -10.500151634216309
    4. '[]' → logprob: -15.625151634216309
    5. '=set' → logprob: -17.000150680541992
    6. '{' → logprob: -17.125150680541992
    7. '	set' → logprob: -17.625150680541992
    8. '   ' → logprob: -18.000150680541992
    9. '(set' → logprob: -19.500150680541992
    10. ' ' → logprob: -19.875150680541992

Token 1555: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0017077792435884476
    2. '()
' → logprob: -6.376707553863525
    3. '()

' → logprob: -12.626708030700684
    4. '()</' → logprob: -14.501708030700684
    5. '()\' → logprob: -14.626708030700684
    6. '();' → logprob: -15.126708030700684
    7. '()
' → logprob: -15.251708030700684
    8. '<|end|>' → logprob: -15.751708030700684
    9. '()>' → logprob: -16.001707077026367
    10. '())' → logprob: -16.126707077026367

Token 1556: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3133907616138458
    2. 'road' → logprob: -1.3133907318115234
    3. '       ' → logprob: -9.688390731811523
    4. ' for' → logprob: -10.563390731811523
    5. 'roads' → logprob: -11.188390731811523
    6. '   ' → logprob: -11.563390731811523
    7. '```' → logprob: -11.813390731811523
    8. '	for' → logprob: -13.063390731811523
    9. '           ' → logprob: -13.188390731811523
    10. ' road' → logprob: -13.188390731811523

Token 1557: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1128612756729126
    2. 'road' → logprob: -2.237861156463623
    3. '       ' → logprob: -11.612861633300781
    4. '   ' → logprob: -11.612861633300781
    5. ' for' → logprob: -11.862861633300781
    6. 'roads' → logprob: -12.487861633300781
    7. '```' → logprob: -13.112861633300781
    8. '
' → logprob: -13.487861633300781
    9. '	for' → logprob: -13.612861633300781
    10. 'while' → logprob: -13.862861633300781

Token 1558: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -3.4121114822482923e-06
    2. ' _' → logprob: -12.625003814697266
    3. ' in' → logprob: -18.125003814697266
    4. '_range' → logprob: -18.875003814697266
    5. '_=' → logprob: -18.875003814697266
    6. '_i' → logprob: -19.750003814697266
    7. '_
' → logprob: -20.125003814697266
    8. 'range' → logprob: -20.125003814697266
    9. '__' → logprob: -20.875003814697266
    10. '_in' → logprob: -21.125003814697266

Token 1559: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.48517024517059326
    2. 'in' → logprob: -0.9851702451705933
    3. 'range' → logprob: -4.985170364379883
    4. '_' → logprob: -5.735170364379883
    5. ' range' → logprob: -6.985170364379883
    6. ' ' → logprob: -10.485170364379883
    7. ' _' → logprob: -13.610170364379883
    8. '  ' → logprob: -13.860170364379883
    9. '0' → logprob: -14.235170364379883
    10. ')' → logprob: -14.360170364379883

Token 1560: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005670914542861283
    2. ' range' → logprob: -7.5005669593811035
    3. '_' → logprob: -11.250567436218262
    4. '_range' → logprob: -13.875567436218262
    5. '(range' → logprob: -16.375566482543945
    6. '	range' → logprob: -18.625566482543945
    7. '
' → logprob: -20.875566482543945
    8. '.range' → logprob: -21.500566482543945
    9. 'input' → logprob: -22.000566482543945
    10. 'in' → logprob: -22.125566482543945

Token 1561: '(n' (ID: 2406)
  Prédit: 'nc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -0.3879266679286957
    2. '(n' → logprob: -1.137926697731018
    3. ' nc' → logprob: -7.1379265785217285
    4. 'int' → logprob: -9.262927055358887
    5. '_nc' → logprob: -9.512927055358887
    6. 'range' → logprob: -10.137927055358887
    7. 'n' → logprob: -10.637927055358887
    8. '(int' → logprob: -10.762927055358887
    9. ' (' → logprob: -13.137927055358887
    10. '(' → logprob: -13.512927055358887

Token 1562: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.3856492842023727e-06
    2. 'nc' → logprob: -13.625000953674316
    3. 'int' → logprob: -16.000001907348633
    4. '_c' → logprob: -17.625001907348633
    5. ')c' → logprob: -18.250001907348633
    6. '=' → logprob: -18.375001907348633
    7. '   ' → logprob: -19.000001907348633
    8. 'C' → logprob: -19.125001907348633
    9. 'ci' → logprob: -19.250001907348633
    10. '
' → logprob: -19.375001907348633

Token 1563: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.053388237953186035
    2. '():
' → logprob: -3.4283881187438965
    3. '()):
' → logprob: -4.8033881187438965
    4. '):' → logprob: -5.3033881187438965
    5. '   ' → logprob: -5.6783881187438965
    6. '       ' → logprob: -6.3033881187438965
    7. '()' → logprob: -8.803388595581055
    8. '```' → logprob: -9.053388595581055
    9. ':' → logprob: -9.303388595581055
    10. '<|end|>' → logprob: -9.428388595581055

Token 1564: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6460873484611511
    2. '   ' → logprob: -0.7710873484611511
    3. '       ' → logprob: -5.021087169647217
    4. 'line' → logprob: -5.521087169647217
    5. ' line' → logprob: -6.396087169647217
    6. '	   ' → logprob: -8.771087646484375
    7. '```' → logprob: -8.771087646484375
    8. '	       ' → logprob: -8.896087646484375
    9. '	line' → logprob: -9.021087646484375
    10. '#line' → logprob: -9.646087646484375

Token 1565: ' s' (ID: 265)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.07813034951686859
    2. 's' (adapté à ' s') → logprob: -2.9531302452087402
    3. 'road' → logprob: -4.32813024520874
    4. ' line' → logprob: -6.07813024520874
    5. 'e' → logprob: -6.20313024520874
    6. 'edge' → logprob: -6.45313024520874
    7. 'r' → logprob: -6.82813024520874
    8. 'from' → logprob: -7.70313024520874
    9. 'inter' → logprob: -7.70313024520874
    10. ' s' → logprob: -8.078130722045898

Token 1566: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2247999608516693
    2. ',k' → logprob: -2.849799871444702
    3. ',c' → logprob: -3.599799871444702
    4. ' =' → logprob: -3.724799871444702
    5. '=line' → logprob: -3.724799871444702
    6. ',' → logprob: -4.224800109863281
    7. '=sys' → logprob: -4.724800109863281
    8. ',line' → logprob: -4.849800109863281
    9. '=input' → logprob: -5.099800109863281
    10. ',e' → logprob: -5.474800109863281

Token 1567: ',s' (ID: 20379)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8808196783065796
    2. ',s' → logprob: -1.1308196783065796
    3. ',' → logprob: -2.005819797515869
    4. ' =' → logprob: -2.130819797515869
    5. ',line' → logprob: -6.380819797515869
    6. ',input' → logprob: -6.880819797515869
    7. ',e' → logprob: -7.005819797515869
    8. ',k' → logprob: -7.255819797515869
    9. '=s' → logprob: -7.380819797515869
    10. ',c' → logprob: -7.505819797515869

Token 1568: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.215330409351736e-05
    2. '1' → logprob: -10.125041961669922
    3. 's' → logprob: -14.125041961669922
    4. '=sys' → logprob: -14.625041961669922
    5. '=' → logprob: -15.500041961669922
    6. ' =' → logprob: -15.625041961669922
    7. '=s' → logprob: -15.875041961669922
    8. ' s' → logprob: -16.000041961669922
    9. ',s' → logprob: -16.375041961669922
    10. 'ys' → logprob: -16.500041961669922

Token 1569: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25566691160202026
    2. ' =' → logprob: -1.505666971206665
    3. '=input' → logprob: -5.630666732788086
    4. '=s' → logprob: -9.630666732788086
    5. '=line' → logprob: -9.755666732788086
    6. '=_' → logprob: -11.005666732788086
    7. '=sys' → logprob: -13.880666732788086
    8. '=parse' → logprob: -14.005666732788086
    9. '   ' → logprob: -14.505666732788086
    10. ' ' → logprob: -14.755666732788086

Token 1570: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0183348897844553
    2. ' input' → logprob: -4.018334865570068
    3. 'parse' → logprob: -8.643335342407227
    4. '(input' → logprob: -12.518335342407227
    5. '           ' → logprob: -13.143335342407227
    6. ' parse' → logprob: -13.768335342407227
    7. '[input' → logprob: -14.393335342407227
    8. 'import' → logprob: -14.518335342407227
    9. ',input' → logprob: -15.393335342407227
    10. 'map' → logprob: -15.643335342407227

Token 1571: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.01933453418314457
    2. '=' → logprob: -4.019334316253662
    3. ' =' → logprob: -7.394334316253662
    4. '()' → logprob: -7.644334316253662
    5. '=s' → logprob: -10.01933479309082
    6. '()
' → logprob: -10.89433479309082
    7. '=line' → logprob: -11.76933479309082
    8. '.split' → logprob: -12.39433479309082
    9. 'split' → logprob: -12.89433479309082
    10. '=input' → logprob: -13.14433479309082

Token 1572: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.023248739540576935
    2. 'strip' → logprob: -3.7732486724853516
    3. 'read' → logprob: -13.273248672485352
    4. 'rstrip' → logprob: -13.648248672485352
    5. '_split' → logprob: -15.773248672485352
    6. ' split' → logprob: -16.64824867248535
    7. 'spl' → logprob: -17.52324867248535
    8. '
' → logprob: -17.77324867248535
    9. '```' → logprob: -18.14824867248535
    10. '(split' → logprob: -18.39824867248535

Token 1573: '()
' (ID: 1234)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5086127519607544
    2. '           ' → logprob: -1.0086127519607544
    3. '<|end|>' → logprob: -4.008612632751465
    4. '<|end|>' → logprob: -5.383612632751465
    5. '   ' → logprob: -6.008612632751465
    6. ',
' → logprob: -6.008612632751465
    7. ' ,' → logprob: -6.633612632751465
    8. ',s' → logprob: -7.133612632751465
    9. '       ' → logprob: -7.258612632751465
    10. '		' → logprob: -8.008612632751465

Token 1574: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.050983820110559464
    2. ' road' → logprob: -3.5509839057922363
    3. ',' → logprob: -5.175983905792236
    4. '<|end|>' → logprob: -5.550983905792236
    5. '       ' → logprob: -5.675983905792236
    6. '   ' → logprob: -6.300983905792236
    7. 'road' → logprob: -6.800983905792236
    8. '	       ' → logprob: -7.300983905792236
    9. '```' → logprob: -7.550983905792236
    10. '<|end|>' → logprob: -7.675983905792236

Token 1575: ' i' (ID: 575)
  Prédit: 'road'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'road' → logprob: -0.3110034465789795
    2. ' road' → logprob: -1.9360034465789795
    3. '           ' → logprob: -2.1860034465789795
    4. 'inter' → logprob: -5.186003684997559
    5. '   ' → logprob: -6.186003684997559
    6. 'r' → logprob: -6.936003684997559
    7. 'e' → logprob: -7.811003684997559
    8. 'key' → logprob: -8.186003684997559
    9. '       ' → logprob: -8.561003684997559
    10. 'c' → logprob: -8.561003684997559

Token 1576: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7044771313667297
    2. 'n' → logprob: -0.8294771313667297
    3. '_' → logprob: -2.829477071762085
    4. '_inter' → logprob: -5.204477310180664
    5. ' =' → logprob: -5.704477310180664
    6. 'inter' → logprob: -7.829477310180664
    7. 'ter' → logprob: -8.079477310180664
    8. '   ' → logprob: -8.704477310180664
    9. '=' → logprob: -9.079477310180664
    10. '_n' → logprob: -9.204477310180664

Token 1577: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2961811125278473
    2. 'n' → logprob: -1.546181082725525
    3. '=' → logprob: -3.4211812019348145
    4. '_inter' → logprob: -5.9211812019348145
    5. '=(' → logprob: -5.9211812019348145
    6. '1' → logprob: -6.4211812019348145
    7. 'nt' → logprob: -7.1711812019348145
    8. 'inter' → logprob: -7.4211812019348145
    9. '_' → logprob: -8.046180725097656
    10. '=parse' → logprob: -8.296180725097656

Token 1578: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.00023131117632146925
    2. ' parse' → logprob: -8.500231742858887
    3. '(parse' → logprob: -10.500231742858887
    4. '	parse' → logprob: -15.875231742858887
    5. '=parse' → logprob: -16.12523078918457
    6. 'i' → logprob: -17.75023078918457
    7. '.parse' → logprob: -18.25023078918457
    8. '   ' → logprob: -18.50023078918457
    9. ' ' → logprob: -18.50023078918457
    10. 's' → logprob: -18.75023078918457

Token 1579: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -0.0015844968147575855
    2. 'intersection' → logprob: -6.501584529876709
    3. 'inter' → logprob: -10.00158405303955
    4. 's' → logprob: -10.37658405303955
    5. '(inter' → logprob: -12.87658405303955
    6. 'Intersection' → logprob: -13.12658405303955
    7. '(' → logprob: -15.12658405303955
    8. '(s' → logprob: -15.62658405303955
    9. 'i' → logprob: -15.62658405303955
    10. '_s' → logprob: -16.001585006713867

Token 1580: 'section' (ID: 6471)
  Prédit: 'section'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'section' → logprob: -0.0012013008818030357
    2. 'intersection' → logprob: -7.126201152801514
    3. 's' → logprob: -8.251201629638672
    4. 'ection' → logprob: -9.751201629638672
    5. 'ction' → logprob: -10.126201629638672
    6. 'action' → logprob: -11.501201629638672
    7. 'ion' → logprob: -11.626201629638672
    8. '_section' → logprob: -11.626201629638672
    9. '_inter' → logprob: -13.376201629638672
    10. ' intersection' → logprob: -13.376201629638672

Token 1581: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0002993544621858746
    2. 's' → logprob: -8.125299453735352
    3. '(i' → logprob: -13.625299453735352
    4. '(' → logprob: -13.625299453735352
    5. 'def' → logprob: -15.000299453735352
    6. '```' → logprob: -15.625299453735352
    7. 'i' → logprob: -16.12529945373535
    8. ' (' → logprob: -16.75029945373535
    9. '[s' → logprob: -17.00029945373535
    10. '#' → logprob: -17.37529945373535

Token 1582: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01615777052938938
    2. '1' → logprob: -4.141157627105713
    3. 's' → logprob: -9.391158103942871
    4. '_' → logprob: -10.516158103942871
    5. '(s' → logprob: -12.016158103942871
    6. '(' → logprob: -13.891158103942871
    7. '(i' → logprob: -13.891158103942871
    8. 'i' → logprob: -13.891158103942871
    9. '           ' → logprob: -14.266158103942871
    10. '```' → logprob: -14.516158103942871

Token 1583: ')
' (ID: 446)
  Prédit: ',i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',i' → logprob: -0.10111740231513977
    2. ',' → logprob: -2.3511173725128174
    3. '),' → logprob: -7.7261176109313965
    4. ')
' → logprob: -8.601117134094238
    5. '           ' → logprob: -8.851117134094238
    6. ' ,' → logprob: -9.601117134094238
    7. ')' → logprob: -10.226117134094238
    8. '   ' → logprob: -10.976117134094238
    9. 'i' → logprob: -12.601117134094238
    10. '_,' → logprob: -13.226117134094238

Token 1584: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.28873372077941895
    2. 'i' → logprob: -1.413733720779419
    3. ' i' → logprob: -5.03873348236084
    4. '   ' → logprob: -7.53873348236084
    5. ' ' → logprob: -8.03873348236084
    6. ',i' → logprob: -9.16373348236084
    7. '<|end|>' → logprob: -10.28873348236084
    8. '<|end|>' → logprob: -11.03873348236084
    9. '	i' → logprob: -11.41373348236084
    10. '                   ' → logprob: -11.66373348236084

Token 1585: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.0008906175498850644
    2. '           ' → logprob: -7.250890731811523
    3. ' i' → logprob: -8.625890731811523
    4. '   ' → logprob: -14.250890731811523
    5. '       ' → logprob: -15.625890731811523
    6. '	i' → logprob: -15.750890731811523
    7. '          ' → logprob: -16.375890731811523
    8. '               ' → logprob: -16.500890731811523
    9. '            ' → logprob: -17.250890731811523
    10. '         ' → logprob: -17.250890731811523

Token 1586: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.339278580620885e-06
    2. 'parse' → logprob: -13.750001907348633
    3. ' ' → logprob: -14.500001907348633
    4. 'i' → logprob: -15.375001907348633
    5. ' =' → logprob: -16.125001907348633
    6. '(parse' → logprob: -16.500001907348633
    7. '=parse' → logprob: -16.750001907348633
    8. '1' → logprob: -16.875001907348633
    9. '   ' → logprob: -17.125001907348633
    10. '_parse' → logprob: -17.250001907348633

Token 1587: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5779775977134705
    2. '=' → logprob: -0.8279775977134705
    3. '=parse' → logprob: -6.202977657318115
    4. 'parse' → logprob: -12.077977180480957
    5. '=
' → logprob: -12.452977180480957
    6. '(parse' → logprob: -14.577977180480957
    7. '   ' → logprob: -14.577977180480957
    8. ' =
' → logprob: -14.827977180480957
    9. '=i' → logprob: -14.952977180480957
    10. ' parse' → logprob: -15.077977180480957

Token 1588: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -4.961759259458631e-06
    2. ' parse' → logprob: -12.250004768371582
    3. '(parse' → logprob: -15.750004768371582
    4. '	parse' → logprob: -18.8750057220459
    5. '=parse' → logprob: -19.2500057220459
    6. '.parse' → logprob: -19.5000057220459
    7. '           ' → logprob: -21.2500057220459
    8. ' ' → logprob: -21.5000057220459
    9. '   ' → logprob: -22.1250057220459
    10. 'import' → logprob: -22.5000057220459

Token 1589: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -0.10059837996959686
    2. 'parse' → logprob: -2.3505983352661133
    3. 'intersection' → logprob: -8.350598335266113
    4. 'Intersection' → logprob: -9.225598335266113
    5. ' parse' → logprob: -10.225598335266113
    6. '(parse' → logprob: -11.225598335266113
    7. '_parse' → logprob: -12.725598335266113
    8. 'inter' → logprob: -13.350598335266113
    9. ' intersection' → logprob: -13.475598335266113
    10. '
' → logprob: -14.975598335266113

Token 1590: 'section' (ID: 6471)
  Prédit: 'section'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'section' → logprob: -0.00489381980150938
    2. 'ection' → logprob: -5.379893779754639
    3. 'ction' → logprob: -8.754894256591797
    4. 'intersection' → logprob: -9.629894256591797
    5. '_section' → logprob: -10.379894256591797
    6. 'action' → logprob: -11.254894256591797
    7. 's' → logprob: -13.629894256591797
    8. 'sections' → logprob: -14.379894256591797
    9. '_inter' → logprob: -14.379894256591797
    10. 'ion' → logprob: -14.754894256591797

Token 1591: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0002346488763578236
    2. '(i' → logprob: -8.625234603881836
    3. 's' → logprob: -9.875234603881836
    4. '(input' → logprob: -13.250234603881836
    5. 'i' → logprob: -13.875234603881836
    6. 'input' → logprob: -14.875234603881836
    7. ' (' → logprob: -15.625234603881836
    8. '(' → logprob: -16.250234603881836
    9. '```' → logprob: -16.625234603881836
    10. ' s' → logprob: -17.125234603881836

Token 1592: '2' (ID: 17)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.10514801740646362
    2. '2' → logprob: -2.8551480770111084
    3. 'i' → logprob: -3.2301480770111084
    4. '(i' → logprob: -6.855147838592529
    5. '(s' → logprob: -6.980147838592529
    6. '(' → logprob: -7.730147838592529
    7. ' s' → logprob: -9.480148315429688
    8. 'parse' → logprob: -10.105148315429688
    9. '_inter' → logprob: -10.105148315429688
    10. ' i' → logprob: -10.605148315429688

Token 1593: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4174294173717499
    2. ')
' → logprob: -1.1674294471740723
    3. '           ' → logprob: -3.5424294471740723
    4. '):
' → logprob: -8.042428970336914
    5. '<|end|>' → logprob: -8.167428970336914
    6. ');' → logprob: -9.167428970336914
    7. ')
' → logprob: -9.417428970336914
    8. '<|end|>' → logprob: -9.542428970336914
    9. '   ' → logprob: -10.292428970336914
    10. '       ' → logprob: -10.417428970336914

Token 1594: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00739566795527935
    2. 'road' → logprob: -5.2573957443237305
    3. ' road' → logprob: -6.3823957443237305
    4. '   ' → logprob: -8.50739574432373
    5. '       ' → logprob: -9.50739574432373
    6. '		' → logprob: -9.75739574432373
    7. '```' → logprob: -9.88239574432373
    8. '	       ' → logprob: -10.50739574432373
    9. '	   ' → logprob: -11.63239574432373
    10. '               ' → logprob: -12.00739574432373

Token 1595: ' road' (ID: 8733)
  Prédit: 'road'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'road' (adapté à ' road') → logprob: -0.04425642639398575
    2. '           ' → logprob: -3.2942564487457275
    3. ' road' → logprob: -5.294256210327148
    4. '   ' → logprob: -6.794256210327148
    5. '       ' → logprob: -10.669256210327148
    6. '```' → logprob: -11.419256210327148
    7. '               ' → logprob: -12.294256210327148
    8. ' ' → logprob: -12.294256210327148
    9. '``' → logprob: -12.669256210327148
    10. '
' → logprob: -13.419256210327148

Token 1596: '_invalid' (ID: 71389)
  Prédit: '_invalid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_invalid' → logprob: -1.4974866644479334e-05
    2. 'invalid' → logprob: -11.125015258789062
    3. '_INVALID' → logprob: -16.000015258789062
    4. '_valid' → logprob: -17.000015258789062
    5. 'Invalid' → logprob: -18.125015258789062
    6. ' invalid' → logprob: -18.875015258789062
    7. '.invalid' → logprob: -19.250015258789062
    8. 'INVALID' → logprob: -19.250015258789062
    9. ' =' → logprob: -19.500015258789062
    10. '   ' → logprob: -19.625015258789062

Token 1597: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -4.191489642835222e-05
    2. '.' → logprob: -10.125041961669922
    3. ' .' → logprob: -14.125041961669922
    4. '.update' → logprob: -14.500041961669922
    5. 'add' → logprob: -15.500041961669922
    6. '.Add' → logprob: -16.375041961669922
    7. ')add' → logprob: -17.000041961669922
    8. '   ' → logprob: -17.125041961669922
    9. '.setdefault' → logprob: -17.375041961669922
    10. ').' → logprob: -18.000041961669922

Token 1598: '(' (ID: 7)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.018351396545767784
    2. '(i' → logprob: -4.0183515548706055
    3. '(' → logprob: -8.893351554870605
    4. ' (' → logprob: -9.768351554870605
    5. ' ' → logprob: -13.518351554870605
    6. '```' → logprob: -13.643351554870605
    7. '   ' → logprob: -13.893351554870605
    8. ' ((' → logprob: -13.893351554870605
    9. '(ii' → logprob: -13.893351554870605
    10. '{' → logprob: -14.643351554870605

Token 1599: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0007387538789771497
    2. ' (' → logprob: -7.375738620758057
    3. '(' → logprob: -9.375739097595215
    4. '((' → logprob: -10.625739097595215
    5. '   ' → logprob: -13.375739097595215
    6. '(ii' → logprob: -14.250739097595215
    7. '(I' → logprob: -14.500739097595215
    8. ' ' → logprob: -16.2507381439209
    9. ')' → logprob: -16.6257381439209
    10. '  ' → logprob: -16.7507381439209

Token 1600: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00021962920436635613
    2. '(i' → logprob: -8.875219345092773
    3. ' i' → logprob: -9.500219345092773
    4. ')i' → logprob: -12.875219345092773
    5. ' (' → logprob: -14.125219345092773
    6. '   ' → logprob: -14.625219345092773
    7. ')' → logprob: -14.750219345092773
    8. '(' → logprob: -14.875219345092773
    9. ''i' → logprob: -16.000219345092773
    10. '	i' → logprob: -16.125219345092773

Token 1601: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. 'i' → logprob: -15.000000953674316
    3. '(i' → logprob: -15.375000953674316
    4. '_' → logprob: -17.75
    5. 'r' → logprob: -18.0
    6. '(' → logprob: -18.375
    7. '[' → logprob: -18.625
    8. '[i' → logprob: -18.625
    9. ')' → logprob: -19.5
    10. '_i' → logprob: -19.5

Token 1602: ',i' (ID: 25032)
  Prédit: ',i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',i' → logprob: -0.009770254604518414
    2. ',' → logprob: -4.634770393371582
    3. ' ,' → logprob: -11.384770393371582
    4. ',
' → logprob: -13.384770393371582
    5. ',(' → logprob: -13.884770393371582
    6. ',int' → logprob: -16.509769439697266
    7. 'i' → logprob: -16.509769439697266
    8. ',I' → logprob: -16.634769439697266
    9. ',e' → logprob: -17.259769439697266
    10. ',n' → logprob: -17.384769439697266

Token 1603: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. 'i' → logprob: -16.875
    3. ')' → logprob: -19.5
    4. '(' → logprob: -20.375
    5. 'n' → logprob: -20.625
    6. '２' → logprob: -20.625
    7. '۲' → logprob: -20.75
    8. '₂' → logprob: -20.875
    9. '(i' → logprob: -21.0
    10. 's' → logprob: -21.5

Token 1604: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.602024900028482e-05
    2. ')
' → logprob: -10.125085830688477
    3. ' )' → logprob: -10.125085830688477
    4. '))' → logprob: -12.625085830688477
    5. ')}' → logprob: -14.000085830688477
    6. '   ' → logprob: -14.750085830688477
    7. '),' → logprob: -14.750085830688477
    8. '<|end|>' → logprob: -15.875085830688477
    9. '           ' → logprob: -16.125085830688477
    10. ');' → logprob: -16.375085830688477

Token 1605: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007043090183287859
    2. '           ' → logprob: -5.25704288482666
    3. ')
' → logprob: -7.00704288482666
    4. ' )' → logprob: -7.13204288482666
    5. '                   ' → logprob: -10.00704288482666
    6. '               ' → logprob: -10.75704288482666
    7. '       ' → logprob: -11.38204288482666
    8. '<|end|>' → logprob: -12.13204288482666
    9. ' )
' → logprob: -12.38204288482666
    10. '   ' → logprob: -12.50704288482666

Token 1606: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03552805259823799
    2. '       ' → logprob: -3.4105279445648193
    3. 'for' → logprob: -6.785528182983398
    4. '```' → logprob: -7.910528182983398
    5. ' for' → logprob: -8.910528182983398
    6. '   ' → logprob: -8.910528182983398
    7. '<|end|>' → logprob: -10.035528182983398
    8. 'road' → logprob: -11.535528182983398
    9. 'n' → logprob: -12.035528182983398
    10. '<|end|>' → logprob: -12.160528182983398

Token 1607: ' road' (ID: 8733)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0405707061290741
    2. 'road' (adapté à ' road') → logprob: -3.2905707359313965
    3. ' road' → logprob: -6.0405707359313965
    4. '       ' → logprob: -10.415570259094238
    5. '(' → logprob: -10.665570259094238
    6. '          ' → logprob: -11.290570259094238
    7. '   ' → logprob: -11.290570259094238
    8. ' ' → logprob: -11.290570259094238
    9. 'roads' → logprob: -11.415570259094238
    10. '```' → logprob: -11.540570259094238

Token 1608: '_invalid' (ID: 71389)
  Prédit: '_invalid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_invalid' → logprob: -6.146429223008454e-05
    2. 'invalid' → logprob: -10.00006103515625
    3. 'Invalid' → logprob: -11.87506103515625
    4. '_valid' → logprob: -12.12506103515625
    5. '_INVALID' → logprob: -12.75006103515625
    6. '_missing' → logprob: -15.62506103515625
    7. '_in' → logprob: -16.25006103515625
    8. 'INVALID' → logprob: -16.50006103515625
    9. '_' → logprob: -16.75006103515625
    10. '<|end|>' → logprob: -17.00006103515625

Token 1609: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0003948072553612292
    2. '.' → logprob: -8.000394821166992
    3. '.remove' → logprob: -10.000394821166992
    4. '.dis' → logprob: -12.125394821166992
    5. '<|end|>' → logprob: -12.750394821166992
    6. 'add' → logprob: -13.250394821166992
    7. '.update' → logprob: -13.625394821166992
    8. '_add' → logprob: -14.250394821166992
    9. '.union' → logprob: -14.250394821166992
    10. '.clear' → logprob: -14.875394821166992

Token 1610: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3956954777240753
    2. ' (' → logprob: -1.145695447921753
    3. '((' → logprob: -5.270695686340332
    4. '           ' → logprob: -5.770695686340332
    5. ' ((' → logprob: -8.020695686340332
    6. '            ' → logprob: -8.645695686340332
    7. '(i' → logprob: -11.145695686340332
    8. '          ' → logprob: -12.395695686340332
    9. '   ' → logprob: -13.520695686340332
    10. ' ' → logprob: -14.145695686340332

Token 1611: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.16026577353477478
    2. ' (' → logprob: -1.9102658033370972
    3. '(' → logprob: -10.160265922546387
    4. '           ' → logprob: -13.535265922546387
    5. '(ii' → logprob: -13.660265922546387
    6. '   ' → logprob: -15.035265922546387
    7. ' ' → logprob: -16.41026496887207
    8. '            ' → logprob: -17.53526496887207
    9. '  ' → logprob: -17.53526496887207
    10. '          ' → logprob: -17.91026496887207

Token 1612: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.023885637521743774
    2. 'i' → logprob: -4.273885726928711
    3. ' (' → logprob: -4.648885726928711
    4. ' i' → logprob: -9.523885726928711
    5. '   ' → logprob: -11.648885726928711
    6. '(' → logprob: -12.023885726928711
    7. '           ' → logprob: -12.273885726928711
    8. '{i' → logprob: -12.523885726928711
    9. '[i' → logprob: -13.898885726928711
    10. ' ' → logprob: -14.023885726928711

Token 1613: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00019173922191839665
    2. 'i' → logprob: -9.250191688537598
    3. '(i' → logprob: -9.375191688537598
    4. '(' → logprob: -12.375191688537598
    5. '[i' → logprob: -12.750191688537598
    6. '{i' → logprob: -13.250191688537598
    7. '[' → logprob: -14.500191688537598
    8. '
' → logprob: -15.250191688537598
    9. ')i' → logprob: -15.500191688537598
    10. ',i' → logprob: -15.875191688537598

Token 1614: ',i' (ID: 25032)
  Prédit: ',i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',i' → logprob: -0.0003024537581950426
    2. ',' → logprob: -8.1253023147583
    3. ' ,' → logprob: -12.8753023147583
    4. 'i' → logprob: -13.2503023147583
    5. ',(' → logprob: -13.5003023147583
    6. '(i' → logprob: -15.5003023147583
    7. ',
' → logprob: -15.6253023147583
    8. '_,' → logprob: -16.625303268432617
    9. ',int' → logprob: -17.125303268432617
    10. ',user' → logprob: -17.625303268432617

Token 1615: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.011126928962767124
    2. '1' → logprob: -4.51112699508667
    3. ' i' → logprob: -10.011126518249512
    4. 'user' → logprob: -11.511126518249512
    5. 's' → logprob: -12.636126518249512
    6. ')' → logprob: -12.636126518249512
    7. '_i' → logprob: -13.136126518249512
    8. '(i' → logprob: -13.136126518249512
    9. ',i' → logprob: -13.136126518249512
    10. '{i' → logprob: -13.136126518249512

Token 1616: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.24310302757658e-05
    2. ' )' → logprob: -10.625072479248047
    3. '           ' → logprob: -10.750072479248047
    4. ')
' → logprob: -10.875072479248047
    5. '   ' → logprob: -12.000072479248047
    6. '))' → logprob: -14.375072479248047
    7. '       ' → logprob: -14.875072479248047
    8. '               ' → logprob: -15.375072479248047
    9. '                   ' → logprob: -16.500072479248047
    10. ' )
' → logprob: -17.250072479248047

Token 1617: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7476869821548462
    2. '       ' → logprob: -0.7476869821548462
    3. '<|end|>' → logprob: -2.9976868629455566
    4. '<|end|>' → logprob: -6.747686862945557
    5. '   ' → logprob: -7.497686862945557
    6. ')
' → logprob: -7.997686862945557
    7. '
' → logprob: -8.497687339782715
    8. '	' → logprob: -8.497687339782715
    9. '        
' → logprob: -8.622687339782715
    10. '           ' → logprob: -8.747687339782715

Token 1618: '       ' (ID: 309)
  Prédit: 'road'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'road' → logprob: -0.18827088177204132
    2. '       ' → logprob: -2.6882708072662354
    3. 'nc' → logprob: -2.8132708072662354
    4. 'nj' → logprob: -3.5632708072662354
    5. '   ' → logprob: -4.5632710456848145
    6. '```' → logprob: -6.9382710456848145
    7. 'jam' → logprob: -7.0632710456848145
    8. '
' → logprob: -7.5632710456848145
    9. 'nr' → logprob: -7.6882710456848145
    10. 'jc' → logprob: -7.9382710456848145

Token 1619: ' nj' (ID: 8979)
  Prédit: 'nj'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nj' (adapté à ' nj') → logprob: -0.0062340255826711655
    2. 'road' → logprob: -5.631234169006348
    3. '   ' → logprob: -6.756234169006348
    4. 'nr' → logprob: -6.881234169006348
    5. 'nm' → logprob: -9.506234169006348
    6. 'np' → logprob: -9.881234169006348
    7. 'n' → logprob: -10.131234169006348
    8. '       ' → logprob: -10.381234169006348
    9. 'nk' → logprob: -10.381234169006348
    10. '#' → logprob: -10.631234169006348

Token 1620: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22553478181362152
    2. '=' → logprob: -1.6005347967147827
    3. '=int' → logprob: -9.225534439086914
    4. '   ' → logprob: -11.350534439086914
    5. '	' → logprob: -12.850534439086914
    6. '    ' → logprob: -13.350534439086914
    7. ' ' → logprob: -13.475534439086914
    8. '=line' → logprob: -14.100534439086914
    9. '=input' → logprob: -14.225534439086914
    10. '=set' → logprob: -14.350534439086914

Token 1621: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.004627002868801355
    2. ' int' → logprob: -5.379627227783203
    3. '(int' → logprob: -12.879627227783203
    4. '   ' → logprob: -13.754627227783203
    5. 'nj' → logprob: -13.879627227783203
    6. '=int' → logprob: -14.629627227783203
    7. '       ' → logprob: -14.754627227783203
    8. 'nt' → logprob: -14.879627227783203
    9. ' nj' → logprob: -15.254627227783203
    10. '[int' → logprob: -15.629627227783203

Token 1622: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0013380973832681775
    2. 'input' → logprob: -6.626338005065918
    3. '=input' → logprob: -11.751338005065918
    4. 'int' → logprob: -12.876338005065918
    5. '(' → logprob: -14.751338005065918
    6. '(int' → logprob: -14.876338005065918
    7. '[input' → logprob: -14.876338005065918
    8. '<input' → logprob: -15.376338005065918
    9. ',input' → logprob: -16.126338958740234
    10. '(n' → logprob: -16.376338958740234

Token 1623: '())
' (ID: 4574)
  Prédit: '())
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())
' → logprob: -0.36529526114463806
    2. ')
' → logprob: -1.3652952909469604
    3. '()' → logprob: -3.865295171737671
    4. ')' → logprob: -4.49029541015625
    5. '       ' → logprob: -4.61529541015625
    6. '()
' → logprob: -5.24029541015625
    7. '())' → logprob: -5.74029541015625
    8. '   ' → logprob: -10.24029541015625
    9. '())
' → logprob: -10.24029541015625
    10. '>()
' → logprob: -11.24029541015625

Token 1624: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09453000128269196
    2. 'for' → logprob: -2.5945301055908203
    3. 'road' → logprob: -4.34453010559082
    4. 'jam' → logprob: -6.34453010559082
    5. '   ' → logprob: -8.21953010559082
    6. '
' → logprob: -8.34453010559082
    7. '	' → logprob: -9.34453010559082
    8. ' for' → logprob: -9.59453010559082
    9. '           ' → logprob: -10.46953010559082
    10. '	for' → logprob: -11.21953010559082

Token 1625: ' road' (ID: 8733)
  Prédit: 'road'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'road' (adapté à ' road') → logprob: -5.2762428822461516e-05
    2. '       ' → logprob: -9.875052452087402
    3. '   ' → logprob: -14.000052452087402
    4. '           ' → logprob: -15.750052452087402
    5. ' road' → logprob: -15.875052452087402
    6. '
' → logprob: -16.62505340576172
    7. '        
' → logprob: -17.50005340576172
    8. 'roads' → logprob: -17.62505340576172
    9. '#' → logprob: -18.12505340576172
    10. 'room' → logprob: -18.37505340576172

Token 1626: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -3.3451433409936726e-05
    2. '_invalid' → logprob: -10.375033378601074
    3. 'j' → logprob: -14.000033378601074
    4. 'jam' → logprob: -14.500033378601074
    5. '_time' → logprob: -15.500033378601074
    6. '#' → logprob: -16.00003433227539
    7. '_' → logprob: -16.25003433227539
    8. '_n' → logprob: -16.75003433227539
    9. 'invalid' → logprob: -16.75003433227539
    10. '	j' → logprob: -16.87503433227539

Token 1627: 'am' (ID: 313)
  Prédit: 'am'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'am' → logprob: -0.0001137947037932463
    2. 'ams' → logprob: -10.125113487243652
    3. 'jam' → logprob: -11.000113487243652
    4. '_am' → logprob: -11.000113487243652
    5. 'ammed' → logprob: -11.625113487243652
    6. 'amming' → logprob: -12.000113487243652
    7. '   ' → logprob: -12.375113487243652
    8. '```' → logprob: -12.750113487243652
    9. 'ам' → logprob: -13.250113487243652
    10. '_j' → logprob: -13.250113487243652

Token 1628: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47410327196121216
    2. '=' → logprob: -0.9741032719612122
    3. '={}' → logprob: -10.724102973937988
    4. '=set' → logprob: -12.724102973937988
    5. '={}
' → logprob: -13.974102973937988
    6. '   ' → logprob: -15.849102973937988
    7. ' ' → logprob: -16.099103927612305
    8. '={' → logprob: -17.099103927612305
    9. '=[]' → logprob: -17.099103927612305
    10. '{}' → logprob: -17.474103927612305

Token 1629: ' set' (ID: 920)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.004170764237642288
    2. 'set' → logprob: -5.504170894622803
    3. '{}
' → logprob: -9.504170417785645
    4. 'dict' → logprob: -11.004170417785645
    5. ' {}' → logprob: -14.504170417785645
    6. '{}

' → logprob: -15.129170417785645
    7. '{' → logprob: -15.254170417785645
    8. '={}' → logprob: -16.62917137145996
    9. '{})' → logprob: -17.00417137145996
    10. '{}\' → logprob: -17.25417137145996

Token 1630: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.69322270154953
    2. '()
' → logprob: -0.69322270154953
    3. '()

' → logprob: -10.443222999572754
    4. '()
' → logprob: -10.443222999572754
    5. 'def' → logprob: -12.193222999572754
    6. '();' → logprob: -12.693222999572754
    7. '()\' → logprob: -13.318222999572754
    8. '<|end|>' → logprob: -13.318222999572754
    9. '()}
' → logprob: -14.318222999572754
    10. '()<' → logprob: -14.443222999572754

Token 1631: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05754487216472626
    2. '       ' → logprob: -3.3075449466705322
    3. 'time' → logprob: -4.432544708251953
    4. 'jam' → logprob: -6.057544708251953
    5. ' for' → logprob: -6.432544708251953
    6. 'keys' → logprob: -6.807544708251953
    7. '```' → logprob: -8.057544708251953
    8. '	for' → logprob: -8.182544708251953
    9. '{
' → logprob: -8.307544708251953
    10. 'key' → logprob: -8.432544708251953

Token 1632: ' jam' (ID: 12438)
  Prédit: 'jam'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jam' (adapté à ' jam') → logprob: -0.045420367270708084
    2. 'for' → logprob: -3.1704204082489014
    3. 'time' → logprob: -6.795420169830322
    4. 'road' → logprob: -7.545420169830322
    5. ' jam' → logprob: -8.04542064666748
    6. '   ' → logprob: -9.04542064666748
    7. '       ' → logprob: -9.42042064666748
    8. ' for' → logprob: -9.67042064666748
    9. '{' → logprob: -10.42042064666748
    10. 'j' → logprob: -10.67042064666748

Token 1633: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -2.463036435074173e-05
    2. '_keys' → logprob: -11.750024795532227
    3. '_cost' → logprob: -12.500024795532227
    4. '_' → logprob: -12.500024795532227
    5. '_key' → logprob: -12.625024795532227
    6. '_times' → logprob: -12.750024795532227
    7. '_code' → logprob: -14.250024795532227
    8. ' =' → logprob: -14.625024795532227
    9. '=_' → logprob: -15.250024795532227
    10. '_t' → logprob: -15.375024795532227

Token 1634: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6439423561096191
    2. ' =' → logprob: -0.7689423561096191
    3. '={}' → logprob: -4.518942356109619
    4. '={}
' → logprob: -9.268941879272461
    5. '={' → logprob: -9.393941879272461
    6. '<|end|>' → logprob: -9.893941879272461
    7. '{}' → logprob: -10.268941879272461
    8. '[' → logprob: -10.768941879272461
    9. '=[]' → logprob: -11.518941879272461
    10. '={
' → logprob: -11.768941879272461

Token 1635: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -2.696889623621246e-06
    2. '{}
' → logprob: -13.25000286102295
    3. 'dict' → logprob: -14.25000286102295
    4. '{}

' → logprob: -15.87500286102295
    5. ' {}' → logprob: -17.250001907348633
    6. '{' → logprob: -17.875001907348633
    7. '{})' → logprob: -17.875001907348633
    8. '={}' → logprob: -18.625001907348633
    9. '{}\' → logprob: -19.375001907348633
    10. '{},' → logprob: -20.250001907348633

Token 1636: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6597743630409241
    2. 'for' → logprob: -0.7847743630409241
    3. ' for' → logprob: -4.034774303436279
    4. '	for' → logprob: -4.909774303436279
    5. '	' → logprob: -6.784774303436279
    6. '```' → logprob: -8.534774780273438
    7. '<|end|>' → logprob: -8.659774780273438
    8. '	   ' → logprob: -9.909774780273438
    9. '	       ' → logprob: -10.159774780273438
    10. '[' → logprob: -10.284774780273438

Token 1637: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0009507640497758985
    2. '       ' → logprob: -7.000950813293457
    3. ' for' → logprob: -10.375950813293457
    4. '	for' → logprob: -11.750950813293457
    5. '	' → logprob: -16.87594985961914
    6. '   ' → logprob: -17.12594985961914
    7. '```' → logprob: -17.62594985961914
    8. 'For' → logprob: -19.25094985961914
    9. '<|end|>' → logprob: -19.37594985961914
    10. '	   ' → logprob: -19.87594985961914

Token 1638: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -4.227250610711053e-05
    2. ' _' → logprob: -10.125041961669922
    3. ' in' → logprob: -13.875041961669922
    4. '_range' → logprob: -14.875041961669922
    5. '_j' → logprob: -15.000041961669922
    6. '_n' → logprob: -15.500041961669922
    7. ' range' → logprob: -15.750041961669922
    8. '   ' → logprob: -17.250041961669922
    9. '_in' → logprob: -18.500041961669922
    10. ' ' → logprob: -18.750041961669922

Token 1639: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.031917449086904526
    2. ' in' → logprob: -3.7819173336029053
    3. 'in' → logprob: -4.781917572021484
    4. 'range' → logprob: -8.656917572021484
    5. ' _' → logprob: -9.781917572021484
    6. '_in' → logprob: -12.156917572021484
    7. ' range' → logprob: -12.281917572021484
    8. ' ' → logprob: -12.656917572021484
    9. '_range' → logprob: -12.656917572021484
    10. '_j' → logprob: -13.281917572021484

Token 1640: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.019579345360398293
    2. ' range' → logprob: -4.5195794105529785
    3. '_' → logprob: -4.7695794105529785
    4. '_range' → logprob: -11.39457893371582
    5. '	range' → logprob: -16.64457893371582
    6. '(range' → logprob: -18.26957893371582
    7. ' in' → logprob: -19.51957893371582
    8. 'in' → logprob: -19.64457893371582
    9. '_n' → logprob: -19.76957893371582
    10. ' _' → logprob: -19.76957893371582

Token 1641: '(n' (ID: 2406)
  Prédit: 'nj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nj' → logprob: -0.023075072094798088
    2. '_n' → logprob: -4.648075103759766
    3. '(n' → logprob: -4.648075103759766
    4. 'n' → logprob: -6.273075103759766
    5. ' nj' → logprob: -6.398075103759766
    6. '[n' → logprob: -10.898075103759766
    7. '_' → logprob: -11.273075103759766
    8. '	n' → logprob: -11.398075103759766
    9. '0' → logprob: -11.523075103759766
    10. ',n' → logprob: -11.773075103759766

Token 1642: 'j' (ID: 73)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.13893967866897583
    2. 'nj' → logprob: -2.263939619064331
    3. 'j' → logprob: -4.01393985748291
    4. 'n' → logprob: -5.26393985748291
    5. '_n' → logprob: -7.01393985748291
    6. ' nj' → logprob: -7.63893985748291
    7. 'int' → logprob: -8.13893985748291
    8. '(j' → logprob: -8.13893985748291
    9. '_j' → logprob: -8.38893985748291
    10. '
' → logprob: -10.01393985748291

Token 1643: '):
' (ID: 1883)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.7891864776611328
    2. '):
' → logprob: -1.0391864776611328
    3. '       ' → logprob: -2.539186477661133
    4. ':
' → logprob: -3.039186477661133
    5. '           ' → logprob: -3.539186477661133
    6. ',' → logprob: -4.664186477661133
    7. ':' → logprob: -4.664186477661133
    8. '   ' → logprob: -5.164186477661133
    9. '):' → logprob: -5.914186477661133
    10. '(n' → logprob: -6.289186477661133

Token 1644: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7361961007118225
    2. '           ' → logprob: -0.7361961007118225
    3. '       ' → logprob: -3.6111960411071777
    4. 's' → logprob: -4.361196041107178
    5. '	       ' → logprob: -7.236196041107178
    6. ' s' → logprob: -7.361196041107178
    7. '	   ' → logprob: -8.486196517944336
    8. ' ' → logprob: -8.486196517944336
    9. '```' → logprob: -8.986196517944336
    10. '<|end|>' → logprob: -9.361196517944336

Token 1645: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.04432108998298645
    2. 'line' → logprob: -3.294321060180664
    3. '           ' → logprob: -5.419321060180664
    4. '   ' → logprob: -7.169321060180664
    5. 'j' → logprob: -7.919321060180664
    6. ' s' → logprob: -8.419321060180664
    7. 'sj' → logprob: -8.669321060180664
    8. 'road' → logprob: -9.419321060180664
    9. ' line' → logprob: -9.669321060180664
    10. '       ' → logprob: -10.919321060180664

Token 1646: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00019197762594558299
    2. 's' → logprob: -9.000191688537598
    3. '_j' → logprob: -10.375191688537598
    4. 'j' → logprob: -11.625191688537598
    5. '_' → logprob: -12.000191688537598
    6. ' =' → logprob: -12.500191688537598
    7. 'line' → logprob: -12.625191688537598
    8. 'from' → logprob: -12.875191688537598
    9. '_line' → logprob: -13.000191688537598
    10. 'a' → logprob: -13.625191688537598

Token 1647: ',s' (ID: 20379)
  Prédit: ',s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',s' → logprob: -0.006015183869749308
    2. ',' → logprob: -5.131015300750732
    3. ',j' → logprob: -10.506014823913574
    4. 's' → logprob: -11.131014823913574
    5. ',line' → logprob: -11.131014823913574
    6. ' ,' → logprob: -11.506014823913574
    7. '_,' → logprob: -12.006014823913574
    8. '_s' → logprob: -12.256014823913574
    9. '   ' → logprob: -13.881014823913574
    10. '_line' → logprob: -13.881014823913574

Token 1648: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9504606825648807e-05
    2. 's' → logprob: -11.125019073486328
    3. ',s' → logprob: -13.625019073486328
    4. '```' → logprob: -13.750019073486328
    5. ',' → logprob: -14.125019073486328
    6. '_' → logprob: -14.750019073486328
    7. 'plit' → logprob: -15.375019073486328
    8. '(s' → logprob: -15.625019073486328
    9. ' s' → logprob: -15.875019073486328
    10. ' ' → logprob: -16.500019073486328

Token 1649: ',d' (ID: 26159)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8831174969673157
    2. ' =' → logprob: -1.258117437362671
    3. '=' → logprob: -1.633117437362671
    4. ',j' → logprob: -2.758117437362671
    5. ',s' → logprob: -4.00811767578125
    6. ',time' → logprob: -4.75811767578125
    7. ',t' → logprob: -5.38311767578125
    8. ',n' → logprob: -5.63311767578125
    9. ' ,' → logprob: -6.00811767578125
    10. ',line' → logprob: -6.13311767578125

Token 1650: 'j' (ID: 73)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6965343356132507
    2. ' =' → logprob: -0.6965343356132507
    3. '=int' → logprob: -6.321534156799316
    4. 'elay' → logprob: -7.196534156799316
    5. 'time' → logprob: -8.196534156799316
    6. '=time' → logprob: -8.821534156799316
    7. '_time' → logprob: -9.571534156799316
    8. 'el' → logprob: -9.696534156799316
    9. ',' → logprob: -9.696534156799316
    10. 'ur' → logprob: -10.196534156799316

Token 1651: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3492071330547333
    2. '=' → logprob: -1.2242071628570557
    3. ',' → logprob: -7.724206924438477
    4. '=input' → logprob: -9.349206924438477
    5. ',time' → logprob: -9.724206924438477
    6. '=line' → logprob: -10.099206924438477
    7. 'time' → logprob: -10.349206924438477
    8. '   ' → logprob: -10.974206924438477
    9. ',j' → logprob: -11.349206924438477
    10. '=time' → logprob: -11.474206924438477

Token 1652: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07890785485506058
    2. ' input' → logprob: -2.5789079666137695
    3. '(input' → logprob: -11.45390796661377
    4. 'map' → logprob: -13.07890796661377
    5. '=input' → logprob: -13.20390796661377
    6. '[input' → logprob: -13.32890796661377
    7. '<input' → logprob: -14.57890796661377
    8. ',input' → logprob: -14.95390796661377
    9. ' map' → logprob: -15.20390796661377
    10. 'int' → logprob: -15.45390796661377

Token 1653: '().' (ID: 1454)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6647118926048279
    2. '().' → logprob: -1.7897119522094727
    3. '.readline' → logprob: -2.4147119522094727
    4. ' =' → logprob: -2.6647119522094727
    5. '=int' → logprob: -3.2897119522094727
    6. '_tokens' → logprob: -3.6647119522094727
    7. '()' → logprob: -4.039711952209473
    8. '.split' → logprob: -4.164711952209473
    9. '_time' → logprob: -4.539711952209473
    10. ',' → logprob: -5.039711952209473

Token 1654: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.176947600673884e-05
    2. 'strip' → logprob: -10.750021934509277
    3. 'read' → logprob: -15.375021934509277
    4. ' split' → logprob: -17.00002098083496
    5. 'rstrip' → logprob: -18.37502098083496
    6. '.split' → logprob: -19.00002098083496
    7. '(split' → logprob: -19.12502098083496
    8. 'parse' → logprob: -20.00002098083496
    9. 'sys' → logprob: -20.12502098083496
    10. 'spl' → logprob: -20.37502098083496

Token 1655: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07367049902677536
    2. ',' → logprob: -3.5736703872680664
    3. ',d' → logprob: -4.073670387268066
    4. '   ' → logprob: -4.823670387268066
    5. '<|end|>' → logprob: -5.073670387268066
    6. '       ' → logprob: -5.948670387268066
    7. 'dj' → logprob: -6.573670387268066
    8. ',i' → logprob: -6.573670387268066
    9. 'i' → logprob: -6.698670387268066
    10. '<|end|>' → logprob: -6.823670387268066

Token 1656: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05448363721370697
    2. '   ' → logprob: -3.429483652114868
    3. '       ' → logprob: -4.679483413696289
    4. 'i' → logprob: -5.554483413696289
    5. '<|end|>' → logprob: -6.554483413696289
    6. ' ' → logprob: -7.054483413696289
    7. ',' → logprob: -7.054483413696289
    8. 's' → logprob: -7.179483413696289
    9. '          ' → logprob: -7.929483413696289
    10. '(i' → logprob: -8.179483413696289

Token 1657: ' dj' (ID: 43267)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20495161414146423
    2. '           ' → logprob: -2.204951524734497
    3. ' i' → logprob: -2.954951524734497
    4. '   ' → logprob: -3.829951524734497
    5. 'd' → logprob: -7.454951763153076
    6. 'dj' (adapté à ' dj') → logprob: -8.079951286315918
    7. '       ' → logprob: -8.454951286315918
    8. '	i' → logprob: -9.829951286315918
    9. ' dj' → logprob: -10.704951286315918
    10. ' ' → logprob: -11.079951286315918

Token 1658: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7318469882011414
    2. '=int' → logprob: -1.2318470478057861
    3. ' =' → logprob: -1.4818470478057861
    4. '_=' → logprob: -12.856846809387207
    5. 'int' → logprob: -12.981846809387207
    6. '=
' → logprob: -14.106846809387207
    7. '=_' → logprob: -14.231846809387207
    8. '   ' → logprob: -14.356846809387207
    9. '_int' → logprob: -14.481846809387207
    10. '=time' → logprob: -14.981846809387207

Token 1659: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -6.704273118884885e-07
    2. '[int' → logprob: -15.000000953674316
    3. ' int' → logprob: -16.0
    4. '<int' → logprob: -16.625
    5. '=int' → logprob: -17.625
    6. '(int' → logprob: -19.375
    7. ':int' → logprob: -19.5
    8. ']int' → logprob: -19.625
    9. '```' → logprob: -20.25
    10. '	int' → logprob: -20.5

Token 1660: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.07904048264026642
    2. 'dj' → logprob: -2.57904052734375
    3. 'd' → logprob: -9.07904052734375
    4. ' dj' → logprob: -10.95404052734375
    5. '[d' → logprob: -11.95404052734375
    6. '{' → logprob: -12.82904052734375
    7. 'Dj' → logprob: -12.82904052734375
    8. ')d' → logprob: -13.20404052734375
    9. '.dj' → logprob: -13.45404052734375
    10. '	d' → logprob: -13.82904052734375

Token 1661: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.3544423381972592e-05
    2. '_j' → logprob: -11.50001335144043
    3. '[j' → logprob: -13.50001335144043
    4. ')' → logprob: -14.12501335144043
    5. 'dj' → logprob: -14.62501335144043
    6. '[' → logprob: -15.75001335144043
    7. '```' → logprob: -15.87501335144043
    8. 's' → logprob: -16.25001335144043
    9. ')
' → logprob: -16.50001335144043
    10. '1' → logprob: -16.62501335144043

Token 1662: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3693244159221649
    2. ')' → logprob: -1.4943244457244873
    3. '           ' → logprob: -2.4943244457244873
    4. '<|end|>' → logprob: -7.494324207305908
    5. '       ' → logprob: -8.244324684143066
    6. '):
' → logprob: -8.619324684143066
    7. '<|end|>' → logprob: -9.119324684143066
    8. '               ' → logprob: -9.369324684143066
    9. ')
' → logprob: -9.369324684143066
    10. ')d' → logprob: -9.744324684143066

Token 1663: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0034574063029140234
    2. 'i' → logprob: -5.878457546234131
    3. '<|end|>' → logprob: -8.253457069396973
    4. ' i' → logprob: -9.003457069396973
    5. '   ' → logprob: -9.128457069396973
    6. '<|end|>' → logprob: -10.253457069396973
    7. 's' → logprob: -10.378457069396973
    8. '_i' → logprob: -11.378457069396973
    9. '```' → logprob: -11.378457069396973
    10. '       ' → logprob: -11.628457069396973

Token 1664: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.05319225788116455
    2. '           ' → logprob: -3.053192138671875
    3. ' i' → logprob: -5.553192138671875
    4. '   ' → logprob: -7.303192138671875
    5. ' ' → logprob: -11.428192138671875
    6. '       ' → logprob: -11.553192138671875
    7. 's' → logprob: -11.803192138671875
    8. '	i' → logprob: -12.303192138671875
    9. '          ' → logprob: -13.053192138671875
    10. '_i' → logprob: -13.053192138671875

Token 1665: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012570773833431304
    2. 'parse' → logprob: -9.125125885009766
    3. ' =' → logprob: -11.500125885009766
    4. '=' → logprob: -12.625125885009766
    5. '_' → logprob: -13.875125885009766
    6. '=parse' → logprob: -14.250125885009766
    7. '(parse' → logprob: -15.375125885009766
    8. 's' → logprob: -15.500125885009766
    9. ' parse' → logprob: -16.125125885009766
    10. ' ' → logprob: -16.125125885009766

Token 1666: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14048804342746735
    2. '=' → logprob: -2.3904881477355957
    3. ',i' → logprob: -3.7654881477355957
    4. '=parse' → logprob: -4.515488147735596
    5. ',' → logprob: -5.390488147735596
    6. '=i' → logprob: -7.640488147735596
    7. 'i' → logprob: -8.765487670898438
    8. ',p' → logprob: -9.640487670898438
    9. '   ' → logprob: -10.265487670898438
    10. ',j' → logprob: -11.515487670898438

Token 1667: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.0015096203424036503
    2. ' parse' → logprob: -6.501509666442871
    3. '(parse' → logprob: -11.876509666442871
    4. '	parse' → logprob: -15.251509666442871
    5. '=parse' → logprob: -16.251508712768555
    6. '.parse' → logprob: -17.376508712768555
    7. '_parse' → logprob: -18.376508712768555
    8. 'parser' → logprob: -20.251508712768555
    9. 'i' → logprob: -20.376508712768555
    10. '   ' → logprob: -20.376508712768555

Token 1668: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -0.004205901641398668
    2. 'intersection' → logprob: -5.504205703735352
    3. 'inter' → logprob: -9.004205703735352
    4. 'i' → logprob: -13.254205703735352
    5. '(inter' → logprob: -13.629205703735352
    6. 'Intersection' → logprob: -14.379205703735352
    7. 's' → logprob: -15.004205703735352
    8. '_' → logprob: -15.629205703735352
    9. '(' → logprob: -15.879205703735352
    10. '
' → logprob: -16.12920570373535

Token 1669: 'section' (ID: 6471)
  Prédit: '_inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_inter' → logprob: -0.03003949485719204
    2. 'intersection' → logprob: -3.5300395488739014
    3. 'inter' → logprob: -9.15503978729248
    4. 's' → logprob: -9.15503978729248
    5. 'i' → logprob: -9.90503978729248
    6. 'Intersection' → logprob: -11.53003978729248
    7. '(inter' → logprob: -12.15503978729248
    8. '(i' → logprob: -12.53003978729248
    9. '(s' → logprob: -12.78003978729248
    10. 'n' → logprob: -13.03003978729248

Token 1670: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0013317868579179049
    2. '(i' → logprob: -6.626331806182861
    3. 's' → logprob: -12.251331329345703
    4. 'i' → logprob: -14.376331329345703
    5. '(' → logprob: -16.001331329345703
    6. '(parse' → logprob: -16.001331329345703
    7. ' (' → logprob: -16.251331329345703
    8. 'parse' → logprob: -16.876331329345703
    9. '#' → logprob: -17.126331329345703
    10. '(
' → logprob: -17.501331329345703

Token 1671: '1' (ID: 16)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1280672252178192
    2. '(s' → logprob: -2.1280672550201416
    3. '1' → logprob: -7.2530670166015625
    4. 'i' → logprob: -8.253067016601562
    5. '(' → logprob: -9.378067016601562
    6. '{s' → logprob: -10.503067016601562
    7. '[' → logprob: -11.128067016601562
    8. ' s' → logprob: -11.503067016601562
    9. '2' → logprob: -12.128067016601562
    10. ')' → logprob: -12.253067016601562

Token 1672: ')
' (ID: 446)
  Prédit: ',i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',i' → logprob: -0.22616051137447357
    2. ',' → logprob: -1.6011605262756348
    3. '           ' → logprob: -8.101160049438477
    4. ')' → logprob: -8.726160049438477
    5. '),' → logprob: -8.851160049438477
    6. ')i' → logprob: -9.976160049438477
    7. ' ,' → logprob: -10.351160049438477
    8. 'i' → logprob: -10.851160049438477
    9. ')
' → logprob: -11.351160049438477
    10. '   ' → logprob: -11.476160049438477

Token 1673: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14306557178497314
    2. 'i' → logprob: -2.0180654525756836
    3. ' i' → logprob: -8.643065452575684
    4. '   ' → logprob: -9.518065452575684
    5. ' ' → logprob: -9.768065452575684
    6. '       ' → logprob: -10.018065452575684
    7. '          ' → logprob: -11.518065452575684
    8. '<|end|>' → logprob: -11.893065452575684
    9. '               ' → logprob: -12.143065452575684
    10. '         ' → logprob: -12.768065452575684

Token 1674: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.03064407967031002
    2. '           ' → logprob: -3.530644178390503
    3. ' i' → logprob: -7.030643939971924
    4. '   ' → logprob: -12.530644416809082
    5. '       ' → logprob: -13.030644416809082
    6. ' ' → logprob: -14.155644416809082
    7. '	i' → logprob: -14.280644416809082
    8. '          ' → logprob: -14.405644416809082
    9. '               ' → logprob: -15.155644416809082
    10. '         ' → logprob: -15.155644416809082

Token 1675: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. ' ' → logprob: -17.375
    3. '   ' → logprob: -19.875
    4. 'i' → logprob: -20.0
    5. '_' → logprob: -20.0
    6. '２' → logprob: -20.375
    7. '
' → logprob: -20.375
    8. 'parse' → logprob: -21.25
    9. ' =' → logprob: -21.25
    10. '  ' → logprob: -21.375

Token 1676: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5850016474723816
    2. ' =' → logprob: -0.8350016474723816
    3. '=parse' → logprob: -4.710001468658447
    4. 'parse' → logprob: -11.960001945495605
    5. '=i' → logprob: -12.835001945495605
    6. '(parse' → logprob: -13.085001945495605
    7. '   ' → logprob: -13.335001945495605
    8. '=(' → logprob: -13.335001945495605
    9. '=
' → logprob: -14.835001945495605
    10. '=int' → logprob: -14.835001945495605

Token 1677: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -7.465036105713807e-06
    2. 'i' → logprob: -12.625007629394531
    3. '(parse' → logprob: -13.125007629394531
    4. ' parse' → logprob: -13.250007629394531
    5. '.parse' → logprob: -15.875007629394531
    6. '	parse' → logprob: -16.25000762939453
    7. '=parse' → logprob: -16.50000762939453
    8. '(i' → logprob: -17.00000762939453
    9. '```' → logprob: -17.75000762939453
    10. 'parsed' → logprob: -19.25000762939453

Token 1678: '_inter' (ID: 16818)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.03048013523221016
    2. '_inter' → logprob: -3.530480146408081
    3. 'intersection' → logprob: -7.280479907989502
    4. '(parse' → logprob: -10.78048038482666
    5. '_parse' → logprob: -11.78048038482666
    6. 'Intersection' → logprob: -11.90548038482666
    7. 'i' → logprob: -13.15548038482666
    8. 'inter' → logprob: -13.53048038482666
    9. ' parse' → logprob: -14.53048038482666
    10. '
' → logprob: -14.65548038482666

Token 1679: 'section' (ID: 6471)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.3890920877456665
    2. '_inter' → logprob: -1.1390920877456665
    3. '(parse' → logprob: -6.514091968536377
    4. 'Intersection' → logprob: -7.889091968536377
    5. 'intersection' → logprob: -8.264092445373535
    6. '(i' → logprob: -10.764092445373535
    7. '(' → logprob: -10.889092445373535
    8. '_parse' → logprob: -11.014092445373535
    9. 'i' → logprob: -11.264092445373535
    10. 'inter' → logprob: -11.389092445373535

Token 1680: '(s' (ID: 1858)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.003681074595078826
    2. 'parse' → logprob: -5.753681182861328
    3. '(parse' → logprob: -7.628681182861328
    4. 'i' → logprob: -11.753681182861328
    5. '.parse' → logprob: -12.003681182861328
    6. '_parse' → logprob: -14.378681182861328
    7. ' parse' → logprob: -14.378681182861328
    8. '[i' → logprob: -14.878681182861328
    9. '{i' → logprob: -15.128681182861328
    10. '(' → logprob: -15.253681182861328

Token 1681: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.22432836890220642
    2. '(i' → logprob: -2.2243282794952393
    3. 'i' → logprob: -3.4743282794952393
    4. '(s' → logprob: -3.7243282794952393
    5. '(' → logprob: -4.099328517913818
    6. 's' → logprob: -4.224328517913818
    7. '1' → logprob: -5.224328517913818
    8. 'parse' → logprob: -7.974328517913818
    9. '{i' → logprob: -7.974328517913818
    10. '[i' → logprob: -9.22432804107666

Token 1682: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5587520003318787
    2. ')' → logprob: -1.0587520599365234
    3. '   ' → logprob: -3.5587520599365234
    4. ')
' → logprob: -4.058752059936523
    5. '<|end|>' → logprob: -4.308752059936523
    6. ',' → logprob: -4.558752059936523
    7. '<|end|>' → logprob: -4.933752059936523
    8. '),' → logprob: -6.933752059936523
    9. '```' → logprob: -7.683752059936523
    10. '):
' → logprob: -7.808752059936523

Token 1683: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005871102912351489
    2. 'road' → logprob: -7.625586986541748
    3. '   ' → logprob: -10.250587463378906
    4. '       ' → logprob: -11.000587463378906
    5. '```' → logprob: -11.000587463378906
    6. '          ' → logprob: -11.375587463378906
    7. '               ' → logprob: -12.250587463378906
    8. ' road' → logprob: -12.875587463378906
    9. '            ' → logprob: -13.250587463378906
    10. '
' → logprob: -13.250587463378906

Token 1684: ' road' (ID: 8733)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2816329598426819
    2. 'road' (adapté à ' road') → logprob: -1.406632900238037
    3. ' road' → logprob: -8.656633377075195
    4. '   ' → logprob: -8.656633377075195
    5. '       ' → logprob: -9.281633377075195
    6. '```' → logprob: -11.531633377075195
    7. '``' → logprob: -12.406633377075195
    8. '               ' → logprob: -12.406633377075195
    9. 'roads' → logprob: -12.406633377075195
    10. '          ' → logprob: -12.531633377075195

Token 1685: '_j' (ID: 12021)
  Prédit: '_invalid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_invalid' → logprob: -0.03820501267910004
    2. '_j' → logprob: -3.2882049083709717
    3. 'invalid' → logprob: -8.78820514678955
    4. '_time' → logprob: -12.41320514678955
    5. '_i' → logprob: -12.91320514678955
    6. 'time' → logprob: -13.53820514678955
    7. 'j' → logprob: -13.66320514678955
    8. '_valid' → logprob: -14.53820514678955
    9. ' =' → logprob: -15.03820514678955
    10. 'INVALID' → logprob: -15.53820514678955

Token 1686: 'am' (ID: 313)
  Prédit: 'am'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'am' → logprob: -0.0038558936212211847
    2. '_invalid' → logprob: -6.0038557052612305
    3. 'invalid' → logprob: -6.7538557052612305
    4. 'jam' → logprob: -9.37885570526123
    5. '_am' → logprob: -10.75385570526123
    6. '_j' → logprob: -10.75385570526123
    7. 'ame' → logprob: -11.50385570526123
    8. '_time' → logprob: -11.62885570526123
    9. 'ams' → logprob: -12.00385570526123
    10. '_' → logprob: -12.37885570526123

Token 1687: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.00013333676906768233
    2. 'add' → logprob: -9.375133514404297
    3. '           ' → logprob: -10.000133514404297
    4. '.' → logprob: -13.500133514404297
    5. '   ' → logprob: -14.500133514404297
    6. '_add' → logprob: -14.625133514404297
    7. ' .' → logprob: -15.500133514404297
    8. '       ' → logprob: -16.375133514404297
    9. '.update' → logprob: -16.500133514404297
    10. '{' → logprob: -16.750133514404297

Token 1688: '(' (ID: 7)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.03297925367951393
    2. ' ((' → logprob: -4.157979488372803
    3. '(' → logprob: -4.407979488372803
    4. '{' → logprob: -6.157979488372803
    5. ' (' → logprob: -6.282979488372803
    6. ' {(' → logprob: -8.032979011535645
    7. '(i' → logprob: -8.157979011535645
    8. ' ' → logprob: -11.782979011535645
    9. '   ' → logprob: -12.032979011535645
    10. '{i' → logprob: -12.532979011535645

Token 1689: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.6387898325920105
    2. ' (' → logprob: -1.0137898921966553
    3. '((' → logprob: -2.2637898921966553
    4. '(' → logprob: -6.013789653778076
    5. ' ((' → logprob: -6.388789653778076
    6. ' {(' → logprob: -7.638789653778076
    7. '{' → logprob: -8.138790130615234
    8. ' ' → logprob: -8.763790130615234
    9. '   ' → logprob: -9.388790130615234
    10. '(ii' → logprob: -9.763790130615234

Token 1690: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.00532151572406292
    2. 'i' → logprob: -5.255321502685547
    3. ' (' → logprob: -9.380321502685547
    4. ' i' → logprob: -12.880321502685547
    5. '{i' → logprob: -15.130321502685547
    6. '   ' → logprob: -16.005321502685547
    7. ')i' → logprob: -16.505321502685547
    8. '[i' → logprob: -16.630321502685547
    9. ',i' → logprob: -17.130321502685547
    10. '	i' → logprob: -17.130321502685547

Token 1691: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '2' → logprob: -18.125
    3. 'i' → logprob: -19.1875
    4. '(i' → logprob: -19.4375
    5. 'user' → logprob: -19.5
    6. ' ' → logprob: -20.125
    7. '{' → logprob: -20.3125
    8. ')' → logprob: -20.6875
    9. '
' → logprob: -21.0
    10. '(' → logprob: -21.1875

Token 1692: ',i' (ID: 25032)
  Prédit: ',i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',i' → logprob: -0.00038336371653713286
    2. ',' → logprob: -7.875383377075195
    3. ' ,' → logprob: -13.000383377075195
    4. 'i' → logprob: -14.125383377075195
    5. ',
' → logprob: -16.625383377075195
    6. '(i' → logprob: -17.250383377075195
    7. ',int' → logprob: -18.000383377075195
    8. '   ' → logprob: -18.000383377075195
    9. ',user' → logprob: -18.000383377075195
    10. '{i' → logprob: -18.125383377075195

Token 1693: '2' (ID: 17)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0789073035120964
    2. '2' → logprob: -2.5789072513580322
    3. 's' → logprob: -11.828907012939453
    4. 'parse' → logprob: -11.828907012939453
    5. 'j' → logprob: -13.953907012939453
    6. ' i' → logprob: -14.203907012939453
    7. 'I' → logprob: -14.828907012939453
    8. '{i' → logprob: -15.578907012939453
    9. '1' → logprob: -15.703907012939453
    10. '_i' → logprob: -15.953907012939453

Token 1694: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016900796443223953
    2. ')
' → logprob: -4.141901016235352
    3. ',' → logprob: -7.141901016235352
    4. ',i' → logprob: -10.516901016235352
    5. '           ' → logprob: -11.391901016235352
    6. '),' → logprob: -12.141901016235352
    7. '   ' → logprob: -12.141901016235352
    8. ',j' → logprob: -12.391901016235352
    9. ');' → logprob: -12.516901016235352
    10. ')

' → logprob: -12.766901016235352

Token 1695: ' )
' (ID: 3270)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002742935437709093
    2. ')' → logprob: -6.127742767333984
    3. '   ' → logprob: -8.627742767333984
    4. ')
' → logprob: -9.002742767333984
    5. '<|end|>' → logprob: -9.627742767333984
    6. '          ' → logprob: -9.752742767333984
    7. ',' → logprob: -10.252742767333984
    8. '       ' → logprob: -10.752742767333984
    9. '```' → logprob: -11.127742767333984
    10. '(' → logprob: -11.252742767333984

Token 1696: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00025192240718752146
    2. '```' → logprob: -8.500251770019531
    3. '       ' → logprob: -11.125251770019531
    4. '          ' → logprob: -11.500251770019531
    5. '``' → logprob: -12.125251770019531
    6. '   ' → logprob: -12.125251770019531
    7. 'jam' → logprob: -12.750251770019531
    8. 'road' → logprob: -13.000251770019531
    9. '               ' → logprob: -13.375251770019531
    10. '         ' → logprob: -13.500251770019531

Token 1697: ' road' (ID: 8733)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016482800710946321
    2. 'road' (adapté à ' road') → logprob: -6.501648426055908
    3. '```' → logprob: -10.00164794921875
    4. ' road' → logprob: -10.62664794921875
    5. '       ' → logprob: -10.62664794921875
    6. '          ' → logprob: -10.75164794921875
    7. '   ' → logprob: -11.12664794921875
    8. '               ' → logprob: -12.37664794921875
    9. '         ' → logprob: -12.75164794921875
    10. '            ' → logprob: -13.00164794921875

Token 1698: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -4.723352049040841e-06
    2. '_invalid' → logprob: -12.500004768371582
    3. '_i' → logprob: -14.625004768371582
    4. '.add' → logprob: -15.875004768371582
    5. '_' → logprob: -16.250003814697266
    6. '_add' → logprob: -16.375003814697266
    7. 'add' → logprob: -16.875003814697266
    8. 'invalid' → logprob: -17.000003814697266
    9. 'j' → logprob: -17.375003814697266
    10. '_valid' → logprob: -17.750003814697266

Token 1699: 'am' (ID: 313)
  Prédit: 'am'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'am' → logprob: -6.802049756515771e-05
    2. '_j' → logprob: -10.250067710876465
    3. 'jam' → logprob: -11.250067710876465
    4. '_am' → logprob: -11.250067710876465
    5. 'j' → logprob: -14.250067710876465
    6. '_' → logprob: -14.250067710876465
    7. 'ams' → logprob: -14.375067710876465
    8. '_i' → logprob: -14.625067710876465
    9. 'ам' → logprob: -14.750067710876465
    10. 'amming' → logprob: -14.875067710876465

Token 1700: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0017613328527659178
    2. '.' → logprob: -6.376761436462402
    3. 'add' → logprob: -9.751761436462402
    4. '.update' → logprob: -14.376761436462402
    5. ' .' → logprob: -15.626761436462402
    6. '_add' → logprob: -17.001760482788086
    7. '           ' → logprob: -17.001760482788086
    8. '.setdefault' → logprob: -17.001760482788086
    9. '```' → logprob: -17.126760482788086
    10. '.Add' → logprob: -17.751760482788086

Token 1701: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12831439077854156
    2. ' (' → logprob: -2.12831449508667
    3. '((' → logprob: -7.00331449508667
    4. ' ((' → logprob: -7.75331449508667
    5. '           ' → logprob: -10.628314018249512
    6. ' ' → logprob: -11.753314018249512
    7. '            ' → logprob: -12.253314018249512
    8. '   ' → logprob: -12.753314018249512
    9. '(
' → logprob: -13.628314018249512
    10. '<|end|>' → logprob: -13.753314018249512

Token 1702: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.47735023498535156
    2. '(i' → logprob: -0.9773502349853516
    3. '(' → logprob: -5.727350234985352
    4. '           ' → logprob: -12.102350234985352
    5. '(ii' → logprob: -12.477350234985352
    6. '   ' → logprob: -13.852350234985352
    7. ' ' → logprob: -13.977350234985352
    8. '(I' → logprob: -14.602350234985352
    9. '            ' → logprob: -16.10235023498535
    10. '  ' → logprob: -16.60235023498535

Token 1703: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.001937558175995946
    2. 'i' → logprob: -6.501937389373779
    3. ' (' → logprob: -7.751937389373779
    4. ' i' → logprob: -13.251937866210938
    5. '{i' → logprob: -13.501937866210938
    6. '   ' → logprob: -13.876937866210938
    7. '           ' → logprob: -15.126937866210938
    8. '[i' → logprob: -16.001937866210938
    9. ')i' → logprob: -16.126937866210938
    10. ' ' → logprob: -16.126937866210938

Token 1704: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0061020320281386375
    2. '1' → logprob: -5.131102085113525
    3. '(i' → logprob: -8.756101608276367
    4. 'i' → logprob: -11.631101608276367
    5. '(' → logprob: -12.006101608276367
    6. '{i' → logprob: -15.131101608276367
    7. '[i' → logprob: -15.506101608276367
    8. 'parse' → logprob: -16.381101608276367
    9. 's' → logprob: -16.506101608276367
    10. ' (' → logprob: -16.756101608276367

Token 1705: ',i' (ID: 25032)
  Prédit: ',i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',i' → logprob: -0.004022476729005575
    2. '(i' → logprob: -5.629022598266602
    3. 'i' → logprob: -8.754022598266602
    4. ',' → logprob: -9.004022598266602
    5. ',(' → logprob: -9.004022598266602
    6. '[i' → logprob: -11.879022598266602
    7. '(' → logprob: -12.254022598266602
    8. '{i' → logprob: -13.129022598266602
    9. ' (' → logprob: -13.504022598266602
    10. '```' → logprob: -14.504022598266602

Token 1706: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00012725738633889705
    2. '1' → logprob: -9.000126838684082
    3. '(i' → logprob: -13.375126838684082
    4. ' i' → logprob: -14.000126838684082
    5. '(' → logprob: -14.375126838684082
    6. '{i' → logprob: -15.125126838684082
    7. '_i' → logprob: -15.625126838684082
    8. ')i' → logprob: -15.750126838684082
    9. '
' → logprob: -15.875126838684082
    10. ')' → logprob: -16.5001277923584

Token 1707: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3533514440059662
    2. ')
' → logprob: -1.2283514738082886
    3. '           ' → logprob: -5.353351593017578
    4. ' )
' → logprob: -10.103351593017578
    5. ',' → logprob: -10.478351593017578
    6. ' )' → logprob: -10.603351593017578
    7. ')

' → logprob: -11.103351593017578
    8. '   ' → logprob: -11.228351593017578
    9. ')
' → logprob: -11.353351593017578
    10. '       ' → logprob: -11.728351593017578

Token 1708: ' )
' (ID: 3270)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.558399319241289e-05
    2. '
' → logprob: -11.625025749206543
    3. '<|end|>' → logprob: -12.500025749206543
    4. '          ' → logprob: -13.125025749206543
    5. '   ' → logprob: -13.250025749206543
    6. ',' → logprob: -13.375025749206543
    7. 'jam' → logprob: -13.375025749206543
    8. '       ' → logprob: -14.000025749206543
    9. '```' → logprob: -14.000025749206543
    10. ')' → logprob: -14.125025749206543

Token 1709: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.351697033504024e-05
    2. 'jam' → logprob: -9.500083923339844
    3. '          ' → logprob: -13.375083923339844
    4. ' jam' → logprob: -13.625083923339844
    5. '<|end|>' → logprob: -13.625083923339844
    6. '       ' → logprob: -14.000083923339844
    7. '   ' → logprob: -14.000083923339844
    8. '```' → logprob: -14.125083923339844
    9. '                                   ' → logprob: -14.625083923339844
    10. 'Jam' → logprob: -15.125083923339844

Token 1710: ' jam' (ID: 12438)
  Prédit: 'jam'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jam' (adapté à ' jam') → logprob: -0.2566835284233093
    2. '           ' → logprob: -1.506683588027954
    3. ' jam' → logprob: -5.381683349609375
    4. '   ' → logprob: -9.131683349609375
    5. '```' → logprob: -11.381683349609375
    6. '       ' → logprob: -12.506683349609375
    7. 'Jam' → logprob: -12.631683349609375
    8. '          ' → logprob: -12.881683349609375
    9. '
' → logprob: -13.131683349609375
    10. 'j' → logprob: -13.381683349609375

Token 1711: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: 0.0
    2. 'time' → logprob: -16.75
    3. '_TIME' → logprob: -18.625
    4. '_times' → logprob: -18.75
    5. '[_' → logprob: -19.125
    6. '_t' → logprob: -19.125
    7. '_' → logprob: -19.25
    8. '_code' → logprob: -19.5
    9. '_tim' → logprob: -20.0
    10. '"time' → logprob: -20.375

Token 1712: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.02671254612505436
    2. '[key' → logprob: -3.776712656021118
    3. '[' → logprob: -5.776712417602539
    4. '[
' → logprob: -8.651712417602539
    5. '[((' → logprob: -9.401712417602539
    6. '[j' → logprob: -9.776712417602539
    7. '[i' → logprob: -10.276712417602539
    8. '=' → logprob: -12.526712417602539
    9. '```' → logprob: -12.526712417602539
    10. '[s' → logprob: -12.776712417602539

Token 1713: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.31333786249160767
    2. 'i' → logprob: -1.313337802886963
    3. ' (' → logprob: -9.813338279724121
    4. ' i' → logprob: -11.063338279724121
    5. '   ' → logprob: -12.938338279724121
    6. '{i' → logprob: -14.063338279724121
    7. '(' → logprob: -14.313338279724121
    8. ''i' → logprob: -14.688338279724121
    9. '	i' → logprob: -15.063338279724121
    10. ' ' → logprob: -15.188338279724121

Token 1714: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.372294698550832e-06
    2. '(i' → logprob: -12.125009536743164
    3. '(' → logprob: -12.750009536743164
    4. ' (' → logprob: -15.375009536743164
    5. 'i' → logprob: -16.250009536743164
    6. '2' → logprob: -16.562509536743164
    7. '(s' → logprob: -16.625009536743164
    8. '{' → logprob: -16.687509536743164
    9. '[' → logprob: -16.687509536743164
    10. ' ' → logprob: -17.125009536743164

Token 1715: ',i' (ID: 25032)
  Prédit: ',i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',i' → logprob: -0.0009155054576694965
    2. ',' → logprob: -7.00091552734375
    3. ',(' → logprob: -13.50091552734375
    4. 'i' → logprob: -14.12591552734375
    5. ' ,' → logprob: -14.37591552734375
    6. '(i' → logprob: -14.62591552734375
    7. ',
' → logprob: -14.62591552734375
    8. ',s' → logprob: -16.62591552734375
    9. ',int' → logprob: -16.75091552734375
    10. '   ' → logprob: -17.00091552734375

Token 1716: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.75
    3. '
' → logprob: -17.125
    4. '1' → logprob: -17.25
    5. 'i' → logprob: -17.25
    6. '(' → logprob: -17.375
    7. 's' → logprob: -18.5
    8. '{' → logprob: -18.75
    9. 'parse' → logprob: -18.75
    10. '２' → logprob: -18.875

Token 1717: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.10124442726373672
    2. ']' → logprob: -3.1012444496154785
    3. '])' → logprob: -3.2262444496154785
    4. ')' → logprob: -4.7262444496154785
    5. ']=' → logprob: -6.3512444496154785
    6. ']=(' → logprob: -7.1012444496154785
    7. '],' → logprob: -9.85124397277832
    8. ')=' → logprob: -9.85124397277832
    9. ')],' → logprob: -11.10124397277832
    10. '[(' → logprob: -11.97624397277832

Token 1718: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02591622620820999
    2. ' =' → logprob: -3.775916337966919
    3. ']' → logprob: -6.77591609954834
    4. ']=' → logprob: -7.02591609954834
    5. '[(' → logprob: -8.40091609954834
    6. '=(' → logprob: -9.02591609954834
    7. '[' → logprob: -9.27591609954834
    8. ']=(' → logprob: -9.52591609954834
    9. '=d' → logprob: -10.02591609954834
    10. ')' → logprob: -10.65091609954834

Token 1719: ' dj' (ID: 43267)
  Prédit: 'dj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dj' → logprob: -5.836499985889532e-05
    2. ' dj' → logprob: -9.7500581741333
    3. 'd' → logprob: -18.125059127807617
    4. '.dj' → logprob: -18.625059127807617
    5. 'dje' → logprob: -20.875059127807617
    6. 'Dj' → logprob: -21.000059127807617
    7. 'DJ' → logprob: -21.250059127807617
    8. 'django' → logprob: -21.875059127807617
    9. 'dq' → logprob: -22.000059127807617
    10. '	d' → logprob: -23.375059127807617

Token 1720: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.041768160182983e-05
    2. 'jam' → logprob: -10.125080108642578
    3. ' jam' → logprob: -10.625080108642578
    4. '```' → logprob: -12.000080108642578
    5. '   ' → logprob: -12.375080108642578
    6. '          ' → logprob: -13.375080108642578
    7. '       ' → logprob: -14.125080108642578
    8. '               ' → logprob: -14.250080108642578
    9. 'Jam' → logprob: -14.500080108642578
    10. '                   ' → logprob: -14.625080108642578

Token 1721: '           ' (ID: 352)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5213462114334106
    2. 'jam' → logprob: -1.6463462114334106
    3. ' jam' → logprob: -2.271346092224121
    4. '           ' → logprob: -3.021346092224121
    5. '   ' → logprob: -3.396346092224121
    6. '``' → logprob: -4.021346092224121
    7. 'Jam' → logprob: -6.021346092224121
    8. '(' → logprob: -6.146346092224121
    9. '[j' → logprob: -7.146346092224121
    10. '(j' → logprob: -7.396346092224121

Token 1722: ' jam' (ID: 12438)
  Prédit: 'jam'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jam' (adapté à ' jam') → logprob: -0.05207813158631325
    2. ' jam' → logprob: -3.0520782470703125
    3. '           ' → logprob: -5.6770782470703125
    4. '```' → logprob: -10.177078247070312
    5. 'Jam' → logprob: -11.802078247070312
    6. 'j' → logprob: -11.802078247070312
    7. '          ' → logprob: -12.927078247070312
    8. '   ' → logprob: -12.927078247070312
    9. '``' → logprob: -14.552078247070312
    10. '         ' → logprob: -14.552078247070312

Token 1723: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -1.2664456789934775e-06
    2. 'time' → logprob: -13.625000953674316
    3. '_TIME' → logprob: -17.000001907348633
    4. 'ime' → logprob: -18.250001907348633
    5. '"time' → logprob: -19.625001907348633
    6. 'Time' → logprob: -19.750001907348633
    7. ' time' → logprob: -20.250001907348633
    8. '_t' → logprob: -21.000001907348633
    9. '_times' → logprob: -21.000001907348633
    10. '_code' → logprob: -21.375001907348633

Token 1724: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -4.008129963040119e-06
    2. '[((' → logprob: -12.750003814697266
    3. '[
' → logprob: -15.000003814697266
    4. '.setdefault' → logprob: -15.125003814697266
    5. '[' → logprob: -15.625003814697266
    6. '((' → logprob: -16.500003814697266
    7. '```' → logprob: -17.375003814697266
    8. '=' → logprob: -17.500003814697266
    9. '
' → logprob: -18.375003814697266
    10. ' [(' → logprob: -18.500003814697266

Token 1725: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1271326243877411
    2. '(i' → logprob: -2.1271326541900635
    3. ' (' → logprob: -8.627132415771484
    4. ' i' → logprob: -11.252132415771484
    5. '   ' → logprob: -12.002132415771484
    6. '{i' → logprob: -13.002132415771484
    7. ',i' → logprob: -14.002132415771484
    8. '	i' → logprob: -14.377132415771484
    9. '[i' → logprob: -14.627132415771484
    10. ''i' → logprob: -15.002132415771484

Token 1726: '2' (ID: 17)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0005821037339046597
    2. '(i' → logprob: -7.500582218170166
    3. '2' → logprob: -10.875581741333008
    4. ' i' → logprob: -11.750581741333008
    5. '{i' → logprob: -14.000581741333008
    6. '[i' → logprob: -15.000581741333008
    7. ' (' → logprob: -15.250581741333008
    8. '(' → logprob: -15.375581741333008
    9. '_i' → logprob: -15.375581741333008
    10. ',i' → logprob: -15.625581741333008

Token 1727: ',i' (ID: 25032)
  Prédit: ',i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',i' → logprob: -0.004418724682182074
    2. ',(' → logprob: -5.629418849945068
    3. '(i' → logprob: -7.754418849945068
    4. ',' → logprob: -7.879418849945068
    5. 'i' → logprob: -12.12941837310791
    6. '',(' → logprob: -13.75441837310791
    7. '(' → logprob: -13.87941837310791
    8. ' ,' → logprob: -14.00441837310791
    9. ' (' → logprob: -14.50441837310791
    10. '_i' → logprob: -14.62941837310791

Token 1728: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20723296701908112
    2. '(i' → logprob: -1.70723295211792
    3. '(' → logprob: -5.20723295211792
    4. ' (' → logprob: -8.832233428955078
    5. 's' → logprob: -9.457233428955078
    6. ' i' → logprob: -9.832233428955078
    7. '(s' → logprob: -10.957233428955078
    8. '1' → logprob: -11.957233428955078
    9. '{i' → logprob: -11.957233428955078
    10. '[i' → logprob: -12.082233428955078

Token 1729: ')]' (ID: 15710)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0020220205187797546
    2. ')' → logprob: -6.752021789550781
    3. ')]' → logprob: -7.377021789550781
    4. ']=' → logprob: -8.502021789550781
    5. ']=(' → logprob: -11.127021789550781
    6. '[(' → logprob: -12.377021789550781
    7. ' ]' → logprob: -13.002021789550781
    8. ')=' → logprob: -13.877021789550781
    9. '=' → logprob: -15.127021789550781
    10. '])' → logprob: -15.502021789550781

Token 1730: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07894663512706757
    2. ' =' → logprob: -2.578946590423584
    3. '=d' → logprob: -9.828947067260742
    4. ')' → logprob: -13.953947067260742
    5. ')=' → logprob: -14.078947067260742
    6. '=j' → logprob: -14.703947067260742
    7. ']=' → logprob: -14.953947067260742
    8. ']' → logprob: -15.578947067260742
    9. '   ' → logprob: -16.453947067260742
    10. '=
' → logprob: -16.828947067260742

Token 1731: ' dj' (ID: 43267)
  Prédit: 'dj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dj' → logprob: -0.00861729308962822
    2. ' dj' → logprob: -4.758617401123047
    3. '(d' → logprob: -12.883617401123047
    4. '.dj' → logprob: -16.258617401123047
    5. 'd' → logprob: -18.008617401123047
    6. 'dje' → logprob: -18.133617401123047
    7. 'Dj' → logprob: -18.508617401123047
    8. ' (' → logprob: -18.758617401123047
    9. 'DJ' → logprob: -18.883617401123047
    10. '(' → logprob: -19.258617401123047

Token 1732: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.052078355103731155
    2. '```' → logprob: -3.1770782470703125
    3. 'def' → logprob: -6.0520782470703125
    4. 'for' → logprob: -6.1770782470703125
    5. '#' → logprob: -6.5520782470703125
    6. '<|end|>' → logprob: -7.0520782470703125
    7. 'next' → logprob: -7.4270782470703125
    8. 'Next' → logprob: -8.052078247070312
    9. '
' → logprob: -8.302078247070312
    10. '        
' → logprob: -8.802078247070312

Token 1733: '       ' (ID: 309)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.40495768189430237
    2. '       ' → logprob: -1.15495765209198
    3. '``' → logprob: -4.6549577713012695
    4. 'for' → logprob: -6.1549577713012695
    5. 'next' → logprob: -6.2799577713012695
    6. 'start' → logprob: -6.4049577713012695
    7. 'h' → logprob: -7.6549577713012695
    8. 'def' → logprob: -8.02995777130127
    9. 'rest' → logprob: -8.27995777130127
    10. '   ' → logprob: -8.65495777130127

Token 1734: ' s' (ID: 265)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.03597618639469147
    2. '       ' → logprob: -3.9109761714935303
    3. 'start' → logprob: -4.285976409912109
    4. 'src' → logprob: -8.03597640991211
    5. 'line' → logprob: -8.28597640991211
    6. 'source' → logprob: -8.41097640991211
    7. '#' → logprob: -8.53597640991211
    8. 's' (adapté à ' s') → logprob: -9.16097640991211
    9. 'S' → logprob: -9.41097640991211
    10. 'x' → logprob: -9.78597640991211

Token 1735: ',d' (ID: 26159)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.2242158651351929
    2. ' =' → logprob: -1.3492158651351929
    3. '_start' → logprob: -2.2242159843444824
    4. 'start' → logprob: -2.4742159843444824
    5. 's' → logprob: -2.7242159843444824
    6. 'h' → logprob: -2.8492159843444824
    7. 'x' → logprob: -3.3492159843444824
    8. '_line' → logprob: -3.7242159843444824
    9. '_s' → logprob: -4.099215984344482
    10. '_h' → logprob: -4.224215984344482

Token 1736: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05902099609375
    2. '=' → logprob: -2.93402099609375
    3. 's' → logprob: -6.55902099609375
    4. '_s' → logprob: -7.18402099609375
    5. ',' → logprob: -7.55902099609375
    6. '=s' → logprob: -7.93402099609375
    7. '_line' → logprob: -8.05902099609375
    8. '=line' → logprob: -8.68402099609375
    9. ',s' → logprob: -8.93402099609375
    10. '1' → logprob: -9.30902099609375

Token 1737: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10021346807479858
    2. ' input' → logprob: -2.3502135276794434
    3. 'parse' → logprob: -12.725213050842285
    4. '(input' → logprob: -13.725213050842285
    5. 'sys' → logprob: -14.225213050842285
    6. 'import' → logprob: -14.475213050842285
    7. '       ' → logprob: -15.100213050842285
    8. '   ' → logprob: -15.225213050842285
    9. '[input' → logprob: -15.600213050842285
    10. ' sys' → logprob: -15.725213050842285

Token 1738: '().' (ID: 1454)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07444348931312561
    2. '=' → logprob: -2.9494435787200928
    3. '1' → logprob: -5.199443340301514
    4. '=line' → logprob: -5.324443340301514
    5. '=s' → logprob: -5.949443340301514
    6. '_line' → logprob: -6.324443340301514
    7. '=parse' → logprob: -6.949443340301514
    8. 's' → logprob: -7.074443340301514
    9. 'line' → logprob: -7.324443340301514
    10. '_s' → logprob: -7.449443340301514

Token 1739: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.38688570261001587
    2. 'split' → logprob: -1.136885643005371
    3. 'rstrip' → logprob: -11.761885643005371
    4. 'read' → logprob: -12.011885643005371
    5. 'replace' → logprob: -15.386885643005371
    6. ' strip' → logprob: -15.761885643005371
    7. 'skip' → logprob: -16.386886596679688
    8. ' split' → logprob: -16.636886596679688
    9. 'stripe' → logprob: -16.761886596679688
    10. '()
' → logprob: -16.886886596679688

Token 1740: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16917534172534943
    2. 's' → logprob: -2.044175386428833
    3. 'start' → logprob: -3.919175386428833
    4. '[start' → logprob: -6.294175148010254
    5. ',' → logprob: -6.919175148010254
    6. ' s' → logprob: -7.419175148010254
    7. 'source' → logprob: -7.544175148010254
    8. 'src' → logprob: -7.669175148010254
    9. '   ' → logprob: -7.919175148010254
    10. ',start' → logprob: -8.419175148010254

Token 1741: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2766994833946228
    2. 's' → logprob: -1.5266995429992676
    3. 'start' → logprob: -3.7766995429992676
    4. ' s' → logprob: -7.526699542999268
    5. '   ' → logprob: -7.776699542999268
    6. 'source' → logprob: -9.02669906616211
    7. 'i' → logprob: -9.27669906616211
    8. ' start' → logprob: -9.27669906616211
    9. '```' → logprob: -9.40169906616211
    10. '[start' → logprob: -9.65169906616211

Token 1742: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -0.27723991870880127
    2. 's' → logprob: -1.5272399187088013
    3. '       ' → logprob: -3.9022397994995117
    4. 'source' → logprob: -5.902239799499512
    5. '   ' → logprob: -7.152239799499512
    6. 'src' → logprob: -7.527239799499512
    7. 'i' → logprob: -8.027239799499512
    8. ' start' → logprob: -9.402239799499512
    9. 'S' → logprob: -9.527239799499512
    10. '```' → logprob: -9.652239799499512

Token 1743: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8067812323570251
    2. ' =' → logprob: -0.8067812323570251
    3. '_inter' → logprob: -2.68178129196167
    4. '=start' → logprob: -3.80678129196167
    5. '_token' → logprob: -5.18178129196167
    6. '_coords' → logprob: -6.30678129196167
    7. '_coord' → logprob: -6.30678129196167
    8. '_=' → logprob: -6.68178129196167
    9. '=_' → logprob: -6.93178129196167
    10. '_tokens' → logprob: -7.05678129196167

Token 1744: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.0007148159202188253
    2. ' parse' → logprob: -7.2507147789001465
    3. '(parse' → logprob: -12.375715255737305
    4. '   ' → logprob: -14.500715255737305
    5. '	parse' → logprob: -17.500715255737305
    6. '=parse' → logprob: -18.125715255737305
    7. '.parse' → logprob: -18.750715255737305
    8. ' ' → logprob: -20.250715255737305
    9. '_parse' → logprob: -20.500715255737305
    10. '  ' → logprob: -20.625715255737305

Token 1745: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -0.004381109494715929
    2. 'intersection' → logprob: -5.50438117980957
    3. 'inter' → logprob: -8.62938117980957
    4. '_direction' → logprob: -9.50438117980957
    5. 'start' → logprob: -10.37938117980957
    6. '(inter' → logprob: -11.62938117980957
    7. '(start' → logprob: -12.00438117980957
    8. 'Intersection' → logprob: -13.00438117980957
    9. 'direction' → logprob: -14.37938117980957
    10. 's' → logprob: -15.75438117980957

Token 1746: 'section' (ID: 6471)
  Prédit: 'section'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'section' → logprob: -0.05692300945520401
    2. 'start' → logprob: -3.3069229125976562
    3. 'intersection' → logprob: -4.056922912597656
    4. '_inter' → logprob: -6.931922912597656
    5. '(start' → logprob: -8.181922912597656
    6. 's' → logprob: -9.556922912597656
    7. '_section' → logprob: -11.056922912597656
    8. 'inter' → logprob: -11.056922912597656
    9. 'direction' → logprob: -11.181922912597656
    10. 'Intersection' → logprob: -11.681922912597656

Token 1747: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00026181264547631145
    2. 's' → logprob: -8.250262260437012
    3. '(' → logprob: -15.500262260437012
    4. 'start' → logprob: -16.250261306762695
    5. '(start' → logprob: -16.750261306762695
    6. '```' → logprob: -16.875261306762695
    7. '`s' → logprob: -17.125261306762695
    8. 'def' → logprob: -17.375261306762695
    9. ' (' → logprob: -17.625261306762695
    10. ' s' → logprob: -17.750261306762695

Token 1748: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.048686835914850235
    2. ')' → logprob: -3.0486867427825928
    3. ')d' → logprob: -9.923686981201172
    4. '   ' → logprob: -11.048686981201172
    5. 'd' → logprob: -11.798686981201172
    6. ')
' → logprob: -12.173686981201172
    7. ' )
' → logprob: -12.548686981201172
    8. '       ' → logprob: -12.548686981201172
    9. '),' → logprob: -12.798686981201172
    10. ')

' → logprob: -12.798686981201172

Token 1749: '       ' (ID: 309)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.09028556197881699
    2. 'goal' → logprob: -3.340285539627075
    3. '       ' → logprob: -3.590285539627075
    4. 'dest' → logprob: -3.840285539627075
    5. 'destination' → logprob: -6.465285778045654
    6. 'target' → logprob: -9.590285301208496
    7. ' end' → logprob: -9.840285301208496
    8. '   ' → logprob: -9.840285301208496
    9. 'd' → logprob: -10.465285301208496
    10. '```' → logprob: -10.840285301208496

Token 1750: ' goal' (ID: 8583)
  Prédit: 'dest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dest' → logprob: -0.40850433707237244
    2. 'end' → logprob: -1.1585043668746948
    3. 'goal' (adapté à ' goal') → logprob: -3.9085042476654053
    4. 'destination' → logprob: -6.908504486083984
    5. 'd' → logprob: -8.283504486083984
    6. 'dst' → logprob: -10.283504486083984
    7. 'def' → logprob: -10.908504486083984
    8. 'target' → logprob: -11.283504486083984
    9. 'dist' → logprob: -11.908504486083984
    10. ' dest' → logprob: -12.908504486083984

Token 1751: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01833009161055088
    2. ' =' → logprob: -4.018330097198486
    3. '=parse' → logprob: -8.643329620361328
    4. ',' → logprob: -12.643329620361328
    5. '=
' → logprob: -15.268329620361328
    6. '   ' → logprob: -16.393329620361328
    7. 'parse' → logprob: -16.393329620361328
    8. '=start' → logprob: -17.143329620361328
    9. ')' → logprob: -17.518329620361328
    10. '=line' → logprob: -17.768329620361328

Token 1752: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -7.684157026233152e-05
    2. ' parse' → logprob: -9.500077247619629
    3. '(parse' → logprob: -13.250077247619629
    4. '=parse' → logprob: -15.875077247619629
    5. '	parse' → logprob: -17.375076293945312
    6. '   ' → logprob: -18.375076293945312
    7. '.parse' → logprob: -18.375076293945312
    8. '_parse' → logprob: -21.250076293945312
    9. '       ' → logprob: -21.625076293945312
    10. ' ' → logprob: -22.000076293945312

Token 1753: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -0.00023572170175611973
    2. 'intersection' → logprob: -8.625235557556152
    3. 'parse' → logprob: -9.875235557556152
    4. 'inter' → logprob: -12.750235557556152
    5. 'Intersection' → logprob: -14.375235557556152
    6. '(parse' → logprob: -14.500235557556152
    7. '(inter' → logprob: -15.000235557556152
    8. '_direction' → logprob: -15.250235557556152
    9. '(' → logprob: -17.00023651123047
    10. ' intersection' → logprob: -17.50023651123047

Token 1754: 'section' (ID: 6471)
  Prédit: 'section'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'section' → logprob: -0.0005129986093379557
    2. 's' → logprob: -8.625513076782227
    3. 'ction' → logprob: -8.625513076782227
    4. 'ection' → logprob: -9.750513076782227
    5. 'tion' → logprob: -9.750513076782227
    6. '_section' → logprob: -11.125513076782227
    7. 'ion' → logprob: -11.625513076782227
    8. 'er' → logprob: -12.250513076782227
    9. '_inter' → logprob: -13.250513076782227
    10. 'intersection' → logprob: -13.500513076782227

Token 1755: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -7.822646693966817e-06
    2. 'd' → logprob: -12.375007629394531
    3. 'parse' → logprob: -13.000007629394531
    4. '(parse' → logprob: -13.625007629394531
    5. ' (' → logprob: -17.62500762939453
    6. '(' → logprob: -18.87500762939453
    7. '(next' → logprob: -19.25000762939453
    8. 'def' → logprob: -20.00000762939453
    9. '[d' → logprob: -20.25000762939453
    10. '((' → logprob: -20.25000762939453

Token 1756: ')

' (ID: 1029)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6174895763397217
    2. ')' → logprob: -0.8674895763397217
    3. '       ' → logprob: -3.2424895763397217
    4. '
' → logprob: -6.742489814758301
    5. '   ' → logprob: -8.1174898147583
    6. 'def' → logprob: -9.9924898147583
    7. '```' → logprob: -11.2424898147583
    8. ' )' → logprob: -11.3674898147583
    9. ')
' → logprob: -11.4924898147583
    10. ' )
' → logprob: -11.9924898147583

Token 1757: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7759283781051636
    2. 'h' → logprob: -1.0259283781051636
    3. 'graph' → logprob: -2.150928497314453
    4. '   ' → logprob: -3.025928497314453
    5. '```' → logprob: -4.775928497314453
    6. 'M' → logprob: -5.400928497314453
    7. '#' → logprob: -6.900928497314453
    8. ' h' → logprob: -7.775928497314453
    9. 'def' → logprob: -8.150928497314453
    10. ' graph' → logprob: -8.150928497314453

Token 1758: ' #' (ID: 1069)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.009686210192739964
    2. '       ' → logprob: -5.25968599319458
    3. 'M' → logprob: -5.88468599319458
    4. '#' (adapté à ' #') → logprob: -6.88468599319458
    5. 'graph' → logprob: -7.63468599319458
    6. 'def' → logprob: -10.009686470031738
    7. '   ' → logprob: -10.134686470031738
    8. '```' → logprob: -10.509686470031738
    9. 'hx' → logprob: -11.134686470031738
    10. 'start' → logprob: -12.134686470031738

Token 1759: ' create' (ID: 2501)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0006639453349635005
    2. 'M' → logprob: -8.250663757324219
    3. '#' → logprob: -8.500663757324219
    4. '       ' → logprob: -9.125663757324219
    5. '```' → logprob: -10.625663757324219
    6. 'def' → logprob: -11.000663757324219
    7. 'hx' → logprob: -11.375663757324219
    8. 'graph' → logprob: -11.375663757324219
    9. '   ' → logprob: -11.750663757324219
    10. 'x' → logprob: -11.750663757324219

Token 1760: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0005242000916041434
    2. 'graph' → logprob: -8.000524520874023
    3. '       ' → logprob: -9.875524520874023
    4. ' h' → logprob: -10.000524520874023
    5. '```' → logprob: -10.000524520874023
    6. '   ' → logprob: -11.000524520874023
    7. '#' → logprob: -11.000524520874023
    8. 'M' → logprob: -11.875524520874023
    9. '``' → logprob: -13.750524520874023
    10. '
' → logprob: -14.125524520874023

Token 1761: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -3.023293538717553e-05
    2. 'lists' → logprob: -11.125030517578125
    3. '_list' → logprob: -11.125030517578125
    4. 'ilist' → logprob: -14.750030517578125
    5. 'h' → logprob: -16.750030517578125
    6. '_lists' → logprob: -16.875030517578125
    7. '   ' → logprob: -17.000030517578125
    8. 'orizontal' → logprob: -17.250030517578125
    9. 'olist' → logprob: -17.500030517578125
    10. '       ' → logprob: -17.875030517578125

Token 1762: ' and' (ID: 326)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03294556960463524
    2. ' =' → logprob: -3.5329456329345703
    3. '=h' → logprob: -6.53294563293457
    4. '=[' → logprob: -7.53294563293457
    5. '=['' → logprob: -7.90794563293457
    6. '=[]' → logprob: -8.15794563293457
    7. '=[]
' → logprob: -8.90794563293457
    8. '       ' → logprob: -9.03294563293457
    9. ',h' → logprob: -9.40794563293457
    10. ',' → logprob: -9.53294563293457

Token 1763: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.03368120267987251
    2. ' v' → logprob: -3.4086811542510986
    3. '[v' → logprob: -11.03368091583252
    4. 'def' → logprob: -12.40868091583252
    5. 'h' → logprob: -12.78368091583252
    6. '[' → logprob: -12.78368091583252
    7. '   ' → logprob: -13.15868091583252
    8. ' [' → logprob: -13.90868091583252
    9. ' h' → logprob: -14.03368091583252
    10. '#' → logprob: -14.03368091583252

Token 1764: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.01811002567410469
    2. 'h' → logprob: -4.7681097984313965
    3. '[]' → logprob: -6.0181097984313965
    4. '_list' → logprob: -6.1431097984313965
    5. 'lists' → logprob: -6.3931097984313965
    6. '=[]' → logprob: -7.0181097984313965
    7. ' =' → logprob: -7.3931097984313965
    8. '[' → logprob: -7.7681097984313965
    9. '=' → logprob: -7.7681097984313965
    10. '=[]
' → logprob: -8.518110275268555

Token 1765: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025332000106573105
    2. ' =' → logprob: -4.525331974029541
    3. 'h' → logprob: -4.775331974029541
    4. ',h' → logprob: -6.150331974029541
    5. ' h' → logprob: -6.650331974029541
    6. '=h' → logprob: -7.150331974029541
    7. '(h' → logprob: -8.4003324508667
    8. '=' → logprob: -8.5253324508667
    9. '	h' → logprob: -8.5253324508667
    10. ',' → logprob: -8.5253324508667

Token 1766: ' problem' (ID: 4792)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.3853645324707031
    2. 'h' → logprob: -1.8853645324707031
    3. '[h' → logprob: -2.135364532470703
    4. 'list' → logprob: -3.635364532470703
    5. 'set' → logprob: -4.510364532470703
    6. '[' → logprob: -5.260364532470703
    7. '[]
' → logprob: -6.010364532470703
    8. ' sorted' → logprob: -6.760364532470703
    9. '[]' → logprob: -6.885364532470703
    10. ' h' → logprob: -7.260364532470703

Token 1767: ':
' (ID: 734)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.39095091819763184
    2. '=' → logprob: -2.015950918197632
    3. ' =' → logprob: -2.015950918197632
    4. '       ' → logprob: -4.390951156616211
    5. '#' → logprob: -4.640951156616211
    6. '_h' → logprob: -5.515951156616211
    7. '=h' → logprob: -5.515951156616211
    8. '[h' → logprob: -5.640951156616211
    9. 'lines' → logprob: -5.890951156616211
    10. '        
' → logprob: -6.140951156616211

Token 1768: '       ' (ID: 309)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.4458315074443817
    2. ' h' → logprob: -1.445831537246704
    3. '       ' → logprob: -2.195831537246704
    4. '```' → logprob: -5.320831298828125
    5. '<|end|>' → logprob: -6.195831298828125
    6. '_h' → logprob: -6.945831298828125
    7. '	h' → logprob: -7.195831298828125
    8. '#' → logprob: -7.320831298828125
    9. ',h' → logprob: -7.445831298828125
    10. '[h' → logprob: -7.570831298828125

Token 1769: ' #' (ID: 1069)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.016426464542746544
    2. ' h' → logprob: -4.1414265632629395
    3. '#' (adapté à ' #') → logprob: -9.141426086425781
    4. '       ' → logprob: -9.391426086425781
    5. '_h' → logprob: -10.141426086425781
    6. '[h' → logprob: -10.516426086425781
    7. 'hs' → logprob: -10.641426086425781
    8. '```' → logprob: -10.641426086425781
    9. '['' → logprob: -10.766426086425781
    10. '	h' → logprob: -10.891426086425781

Token 1770: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.001404040725901723
    2. '#' → logprob: -7.25140380859375
    3. 'hs' → logprob: -8.00140380859375
    4. 'import' → logprob: -8.50140380859375
    5. ' h' → logprob: -9.87640380859375
    6. 'horizontal' → logprob: -11.12640380859375
    7. '       ' → logprob: -11.37640380859375
    8. 'hx' → logprob: -11.37640380859375
    9. 'H' → logprob: -11.50140380859375
    10. 'from' → logprob: -11.87640380859375

Token 1771: ':' (ID: 25)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0645749494433403
    2. ' =' → logprob: -3.314574956893921
    3. '=['' → logprob: -4.814574718475342
    4. '['' → logprob: -4.939574718475342
    5. '=' → logprob: -5.689574718475342
    6. '[' → logprob: -6.314574718475342
    7. '_list' → logprob: -6.439574718475342
    8. '=[' → logprob: -7.189574718475342
    9. '[
' → logprob: -7.189574718475342
    10. 'lines' → logprob: -7.689574718475342

Token 1772: ' '' (ID: 461)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '['' → logprob: -0.6206483840942383
    2. '[h' → logprob: -1.1206483840942383
    3. '[' → logprob: -2.6206483840942383
    4. 'h' → logprob: -3.7456483840942383
    5. 'list' → logprob: -4.745648384094238
    6. 'sorted' → logprob: -4.870648384094238
    7. ' ['' → logprob: -5.120648384094238
    8. ' [' → logprob: -5.245648384094238
    9. ' h' → logprob: -5.620648384094238
    10. '[]
' → logprob: -5.870648384094238

Token 1773: 'a' (ID: 64)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8629699945449829
    2. '['' → logprob: -0.9879699945449829
    3. '[A' → logprob: -1.987969994544983
    4. 'A' → logprob: -4.112969875335693
    5. '[h' → logprob: -4.237969875335693
    6. '[s' → logprob: -5.237969875335693
    7. ''' → logprob: -5.237969875335693
    8. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -5.362969875335693
    9. '[]
' → logprob: -5.737969875335693
    10. '["' → logprob: -6.237969875335693

Token 1774: ''' (ID: 6)
  Prédit: 'bc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bc' → logprob: -0.7494480609893799
    2. 'b' → logprob: -1.6244480609893799
    3. 'abcdefghijklmnopqrstuvwxyz' → logprob: -1.7494480609893799
    4. ',b' → logprob: -3.87444806098938
    5. 'r' → logprob: -4.249447822570801
    6. 'to' → logprob: -4.249447822570801
    7. ''' → logprob: -4.249447822570801
    8. ' to' → logprob: -4.374447822570801
    9. ' =' → logprob: -4.999447822570801
    10. ',' → logprob: -4.999447822570801

Token 1775: ' to' (ID: 316)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.48674583435058594
    2. ' =' → logprob: -1.611745834350586
    3. 'to' → logprob: -1.861745834350586
    4. '=['' → logprob: -4.611745834350586
    5. ' to' → logprob: -5.111745834350586
    6. '='' → logprob: -5.861745834350586
    7. ',' → logprob: -6.361745834350586
    8. '   ' → logprob: -6.361745834350586
    9. 'through' → logprob: -6.986745834350586
    10. '=[' → logprob: -6.986745834350586

Token 1776: ' ...
' (ID: 12646)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '['' → logprob: -0.04059967026114464
    2. '[' → logprob: -3.5405995845794678
    3. ''z' → logprob: -5.290599822998047
    4. ''' → logprob: -6.665599822998047
    5. 'chr' → logprob: -6.665599822998047
    6. ''a' → logprob: -6.790599822998047
    7. 'z' → logprob: -7.290599822998047
    8. '[
' → logprob: -8.040599822998047
    9. 'a' → logprob: -8.415599822998047
    10. ' ['' → logprob: -8.540599822998047

Token 1777: '       ' (ID: 309)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9764154553413391
    2. '['' → logprob: -1.3514153957366943
    3. '[' → logprob: -2.2264153957366943
    4. '       ' → logprob: -2.8514153957366943
    5. 'abcdefghijklmnopqrstuvwxyz' → logprob: -3.6014153957366943
    6. '[a' → logprob: -3.8514153957366943
    7. '[h' → logprob: -3.8514153957366943
    8. '```' → logprob: -3.9764153957366943
    9. 'a' → logprob: -4.101415634155273
    10. ' ['' → logprob: -4.226415634155273

Token 1778: ' #' (ID: 1069)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8168920874595642
    2. '       ' → logprob: -1.316892147064209
    3. 'h' → logprob: -1.816892147064209
    4. ',' → logprob: -3.941892147064209
    5. ' h' → logprob: -4.066892147064209
    6. '[h' → logprob: -4.316892147064209
    7. ',h' → logprob: -4.441892147064209
    8. '['' → logprob: -4.816892147064209
    9. '(h' → logprob: -4.816892147064209
    10. '=' → logprob: -4.816892147064209

Token 1779: ' v' (ID: 323)
  Prédit: '[h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[h' → logprob: -0.905969500541687
    2. '[' → logprob: -1.780969500541687
    3. 'h' → logprob: -2.1559696197509766
    4. ' [' → logprob: -2.5309696197509766
    5. '['' → logprob: -3.0309696197509766
    6. '[a' → logprob: -3.1559696197509766
    7. '       ' → logprob: -3.4059696197509766
    8. ' h' → logprob: -3.5309696197509766
    9. '   ' → logprob: -3.7809696197509766
    10. 'a' → logprob: -4.280969619750977

Token 1780: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25198447704315186
    2. ' =' → logprob: -2.1269845962524414
    3. 'list' → logprob: -2.6269845962524414
    4. '=['' → logprob: -3.6269845962524414
    5. '=list' → logprob: -6.501984596252441
    6. 'v' → logprob: -7.001984596252441
    7. '_list' → logprob: -7.501984596252441
    8. '=[]' → logprob: -7.751984596252441
    9. '='' → logprob: -8.251984596252441
    10. '=[]
' → logprob: -8.376984596252441

Token 1781: ' '' (ID: 461)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6634058356285095
    2. '[v' → logprob: -1.4134058952331543
    3. ' [' → logprob: -2.5384058952331543
    4. '['' → logprob: -3.1634058952331543
    5. '[s' → logprob: -3.5384058952331543
    6. '[a' → logprob: -3.7884058952331543
    7. '[h' → logprob: -4.288405895233154
    8. '[str' → logprob: -4.413405895233154
    9. '[list' → logprob: -4.663405895233154
    10. '[c' → logprob: -5.413405895233154

Token 1782: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8147442936897278
    2. '['' → logprob: -1.314744234085083
    3. ''' → logprob: -2.189744234085083
    4. '[a' → logprob: -3.939744234085083
    5. '[line' → logprob: -4.064744472503662
    6. '[str' → logprob: -4.189744472503662
    7. '[input' → logprob: -4.189744472503662
    8. '0' → logprob: -4.564744472503662
    9. ' [' → logprob: -4.689744472503662
    10. 'list' → logprob: -4.689744472503662

Token 1783: ''' (ID: 6)
  Prédit: '...'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '...' → logprob: -1.3108620643615723
    2. 'def' → logprob: -2.0608620643615723
    3. ',' → logprob: -2.3108620643615723
    4. ' =' → logprob: -2.4358620643615723
    5. '<|end|>' → logprob: -2.8108620643615723
    6. '<|end|>' → logprob: -2.9358620643615723
    7. '#' → logprob: -3.3108620643615723
    8. 'import' → logprob: -3.4358620643615723
    9. '=' → logprob: -3.4358620643615723
    10. '',' → logprob: -3.5608620643615723

Token 1784: ' to' (ID: 316)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8568859696388245
    2. ' =' → logprob: -0.9818859696388245
    3. 'v' → logprob: -2.3568859100341797
    4. 'to' → logprob: -3.3568859100341797
    5. ',v' → logprob: -4.35688591003418
    6. 'list' → logprob: -4.98188591003418
    7. ',' → logprob: -5.10688591003418
    8. '   ' → logprob: -5.23188591003418
    9. '=[]
' → logprob: -5.35688591003418
    10. '=v' → logprob: -5.35688591003418

Token 1785: ' ...
' (ID: 12646)
  Prédit: '[N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[N' → logprob: -1.5275248289108276
    2. '[int' → logprob: -1.7775248289108276
    3. 'list' → logprob: -2.027524948120117
    4. '[' → logprob: -2.027524948120117
    5. '['' → logprob: -2.402524948120117
    6. '[str' → logprob: -2.652524948120117
    7. '[v' → logprob: -2.777524948120117
    8. 'v' → logprob: -3.777524948120117
    9. 'range' → logprob: -3.902524948120117
    10. 'N' → logprob: -4.152524948120117

Token 1786: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3307048976421356
    2. 'h' → logprob: -1.455704927444458
    3. ' h' → logprob: -3.205704927444458
    4. '```' → logprob: -5.830704689025879
    5. 'v' → logprob: -6.705704689025879
    6. ',h' → logprob: -6.955704689025879
    7. '(h' → logprob: -7.330704689025879
    8. '	h' → logprob: -7.830704689025879
    9. '_h' → logprob: -8.330704689025879
    10. '[h' → logprob: -8.455704689025879

Token 1787: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' (adapté à ' h') → logprob: -0.010560780763626099
    2. '       ' → logprob: -5.135560989379883
    3. ' h' → logprob: -5.760560989379883
    4. '```' → logprob: -7.260560989379883
    5. 'import' → logprob: -8.010560989379883
    6. ',h' → logprob: -8.760560989379883
    7. '	h' → logprob: -10.135560989379883
    8. '<|end|>' → logprob: -10.260560989379883
    9. '[h' → logprob: -10.385560989379883
    10. '_h' → logprob: -10.385560989379883

Token 1788: 'set' (ID: 977)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.29596418142318726
    2. '=' → logprob: -1.795964241027832
    3. ' =' → logprob: -2.420964241027832
    4. '=list' → logprob: -7.170964241027832
    5. '=['' → logprob: -8.420964241027832
    6. '_list' → logprob: -8.545964241027832
    7. '=[]' → logprob: -9.170964241027832
    8. '=[' → logprob: -9.920964241027832
    9. '=[]
' → logprob: -10.670964241027832
    10. '```' → logprob: -12.295964241027832

Token 1789: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08936852961778641
    2. ' =' → logprob: -2.4643685817718506
    3. '=set' → logprob: -7.8393683433532715
    4. '=list' → logprob: -11.71436882019043
    5. '={'' → logprob: -11.83936882019043
    6. '.add' → logprob: -12.58936882019043
    7. '=[]' → logprob: -13.08936882019043
    8. ',' → logprob: -13.21436882019043
    9. '<|end|>' → logprob: -13.21436882019043
    10. '   ' → logprob: -13.46436882019043

Token 1790: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.3359834551811218
    2. '{' → logprob: -1.3359835147857666
    3. 'sorted' → logprob: -3.8359835147857666
    4. '{x' → logprob: -7.7109832763671875
    5. '{s' → logprob: -8.460983276367188
    6. ' set' → logprob: -9.460983276367188
    7. '{'' → logprob: -9.585983276367188
    8. '{i' → logprob: -10.835983276367188
    9. '[' → logprob: -10.835983276367188
    10. ' {' → logprob: -11.460983276367188

Token 1791: '()
' (ID: 1234)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.6994877457618713
    2. '()
' → logprob: -1.4494876861572266
    3. '()' → logprob: -2.0744876861572266
    4. '([' → logprob: -2.3244876861572266
    5. '(chr' → logprob: -3.4494876861572266
    6. '(range' → logprob: -5.449487686157227
    7. '(['' → logprob: -5.699487686157227
    8. '(ord' → logprob: -6.824487686157227
    9. '[h' → logprob: -7.074487686157227
    10. 'chr' → logprob: -7.074487686157227

Token 1792: '       ' (ID: 309)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.028546109795570374
    2. ' v' → logprob: -3.903546094894409
    3. 'for' → logprob: -5.028546333312988
    4. ' for' → logprob: -7.403546333312988
    5. '       ' → logprob: -7.528546333312988
    6. '   ' → logprob: -8.778546333312988
    7. '```' → logprob: -9.778546333312988
    8. '	v' → logprob: -10.528546333312988
    9. '(v' → logprob: -11.278546333312988
    10. ',v' → logprob: -11.778546333312988

Token 1793: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.030544182285666466
    2. 'for' → logprob: -3.7805442810058594
    3. ' v' → logprob: -5.280544281005859
    4. ' for' → logprob: -6.155544281005859
    5. '   ' → logprob: -11.15554428100586
    6. '       ' → logprob: -11.40554428100586
    7. '{' → logprob: -11.40554428100586
    8. '	v' → logprob: -11.53054428100586
    9. 'h' → logprob: -12.03054428100586
    10. '	for' → logprob: -13.65554428100586

Token 1794: 'set' (ID: 977)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.21150384843349457
    2. 'set' → logprob: -1.7115038633346558
    3. '=' → logprob: -5.086503982543945
    4. ' =' → logprob: -6.211503982543945
    5. '=set' → logprob: -6.336503982543945
    6. '=list' → logprob: -10.461503982543945
    7. '_list' → logprob: -10.586503982543945
    8. 'for' → logprob: -11.461503982543945
    9. '_set' → logprob: -12.211503982543945
    10. 'add' → logprob: -12.836503982543945

Token 1795: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.26423314213752747
    2. '()' → logprob: -2.514233112335205
    3. '.add' → logprob: -2.514233112335205
    4. '=h' → logprob: -3.514233112335205
    5. ' =' → logprob: -3.764233112335205
    6. '.update' → logprob: -5.139233112335205
    7. '()
' → logprob: -5.139233112335205
    8. '(h' → logprob: -6.139233112335205
    9. '().' → logprob: -6.264233112335205
    10. 'add' → logprob: -7.764233112335205

Token 1796: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.08334393054246902
    2. '{' → logprob: -2.583343982696533
    3. '{x' → logprob: -6.208343982696533
    4. 'v' → logprob: -6.958343982696533
    5. 'h' → logprob: -7.458343982696533
    6. '{i' → logprob: -7.958343982696533
    7. '{s' → logprob: -8.458343505859375
    8. ' set' → logprob: -8.708343505859375
    9. 'chr' → logprob: -10.708343505859375
    10. 'x' → logprob: -10.708343505859375

Token 1797: '()
' (ID: 1234)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.40530017018318176
    2. 'for' → logprob: -2.1553001403808594
    3. 'h' → logprob: -2.2803001403808594
    4. '()
' → logprob: -2.4053001403808594
    5. '()' → logprob: -4.405300140380859
    6. '       ' → logprob: -5.405300140380859
    7. '```' → logprob: -5.655300140380859
    8. ' for' → logprob: -6.905300140380859
    9. '
' → logprob: -7.155300140380859
    10. '   ' → logprob: -7.405300140380859

Token 1798: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15385258197784424
    2. 'h' → logprob: -2.6538524627685547
    3. ' for' → logprob: -2.9038524627685547
    4. '       ' → logprob: -4.153852462768555
    5. '```' → logprob: -7.028852462768555
    6. ' h' → logprob: -7.778852462768555
    7. '	for' → logprob: -8.778852462768555
    8. '	h' → logprob: -9.528852462768555
    9. '   ' → logprob: -9.653852462768555
    10. '
' → logprob: -10.778852462768555

Token 1799: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002783362055197358
    2. '       ' → logprob: -6.377783298492432
    3. 'h' → logprob: -7.502783298492432
    4. ' for' → logprob: -7.627783298492432
    5. '	for' → logprob: -10.50278377532959
    6. '```' → logprob: -12.00278377532959
    7. '
' → logprob: -12.75278377532959
    8. '   ' → logprob: -13.12778377532959
    9. 'For' → logprob: -14.37778377532959
    10. 'while' → logprob: -14.37778377532959

Token 1800: ' collect' (ID: 7916)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00537842558696866
    2. '       ' → logprob: -5.880378246307373
    3. 'h' → logprob: -6.130378246307373
    4. ' for' → logprob: -7.880378246307373
    5. '	for' → logprob: -12.380378723144531
    6. '#' → logprob: -12.755378723144531
    7. '```' → logprob: -13.505378723144531
    8. '
' → logprob: -13.630378723144531
    9. 'while' → logprob: -13.755378723144531
    10. '   ' → logprob: -13.880378723144531

Token 1801: ' all' (ID: 722)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04909596964716911
    2. 'h' → logprob: -3.174095869064331
    3. ' for' → logprob: -5.42409610748291
    4. 'c' → logprob: -7.29909610748291
    5. '#' → logprob: -8.42409610748291
    6. '   ' → logprob: -9.17409610748291
    7. 's' → logprob: -9.42409610748291
    8. '[h' → logprob: -9.54909610748291
    9. 'char' → logprob: -9.67409610748291
    10. '_h' → logprob: -9.67409610748291

Token 1802: ' intersections' (ID: 143513)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.49093037843704224
    2. 'h' → logprob: -0.9909303784370422
    3. ' for' → logprob: -5.365930557250977
    4. 'line' → logprob: -5.865930557250977
    5. 'c' → logprob: -6.365930557250977
    6. '[h' → logprob: -6.615930557250977
    7. '#' → logprob: -6.990930557250977
    8. 's' → logprob: -6.990930557250977
    9. 'inter' → logprob: -7.115930557250977
    10. 'lines' → logprob: -7.615930557250977

Token 1803: ' including' (ID: 3463)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5615778565406799
    2. '       ' → logprob: -1.1865777969360352
    3. ' for' → logprob: -2.686577796936035
    4. 'h' → logprob: -2.936577796936035
    5. ' h' → logprob: -6.936577796936035
    6. '```' → logprob: -6.936577796936035
    7. '   ' → logprob: -8.061577796936035
    8. '(h' → logprob: -8.811577796936035
    9. '``' → logprob: -9.061577796936035
    10. '
' → logprob: -9.311577796936035

Token 1804: ' signals' (ID: 29026)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.012524253688752651
    2. 'h' → logprob: -5.262524127960205
    3. '[start' → logprob: -6.137524127960205
    4. 's' → logprob: -6.387524127960205
    5. 'signals' → logprob: -6.387524127960205
    6. '{' → logprob: -6.637524127960205
    7. 'set' → logprob: -9.387524604797363
    8. ' start' → logprob: -9.387524604797363
    9. 'for' → logprob: -9.637524604797363
    10. '#' → logprob: -9.887524604797363

Token 1805: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.26695945858955383
    2. 'h' → logprob: -1.7669594287872314
    3. '       ' → logprob: -2.7669594287872314
    4. ' for' → logprob: -8.141959190368652
    5. '```' → logprob: -9.016959190368652
    6. 'v' → logprob: -9.516959190368652
    7. '
' → logprob: -9.891959190368652
    8. '           ' → logprob: -11.516959190368652
    9. '(h' → logprob: -11.766959190368652
    10. '   ' → logprob: -11.766959190368652

Token 1806: ' roads' (ID: 30027)
  Prédit: 'road'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'road' → logprob: -0.15352433919906616
    2. 'for' → logprob: -2.528524398803711
    3. 'h' → logprob: -3.778524398803711
    4. 'start' → logprob: -4.153524398803711
    5. '       ' → logprob: -4.403524398803711
    6. ' road' → logprob: -5.528524398803711
    7. ' for' → logprob: -6.153524398803711
    8. 'roads' → logprob: -6.778524398803711
    9. '{' → logprob: -6.903524398803711
    10. '           ' → logprob: -7.653524398803711

Token 1807: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6106905341148376
    2. 'h' → logprob: -0.9856905341148376
    3. '       ' → logprob: -2.7356905937194824
    4. '.update' → logprob: -4.985690593719482
    5. ',' → logprob: -6.235690593719482
    6. ',h' → logprob: -6.360690593719482
    7. '```' → logprob: -6.485690593719482
    8. '(h' → logprob: -6.735690593719482
    9. ' for' → logprob: -6.985690593719482
    10. ' =' → logprob: -7.235690593719482

Token 1808: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6734513640403748
    2. '       ' → logprob: -0.7984513640403748
    3. 'h' → logprob: -3.6734514236450195
    4. ' for' → logprob: -4.4234514236450195
    5. '```' → logprob: -6.4234514236450195
    6. ' h' → logprob: -8.54845142364502
    7. ',h' → logprob: -8.54845142364502
    8. '<|end|>' → logprob: -8.79845142364502
    9. '(h' → logprob: -9.54845142364502
    10. '   ' → logprob: -9.92345142364502

Token 1809: ' h' (ID: 312)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.038390178233385086
    2. '       ' → logprob: -3.7883901596069336
    3. 'h' (adapté à ' h') → logprob: -4.538390159606934
    4. ' for' → logprob: -5.788390159606934
    5. '```' → logprob: -6.913390159606934
    6. '	for' → logprob: -9.663390159606934
    7. '
' → logprob: -9.913390159606934
    8. ' h' → logprob: -10.288390159606934
    9. 'all' → logprob: -10.413390159606934
    10. '``' → logprob: -10.913390159606934

Token 1810: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.15455453097820282
    2. ' =' → logprob: -3.279554605484009
    3. '.update' → logprob: -3.779554605484009
    4. 'for' → logprob: -3.904554605484009
    5. 'list' → logprob: -3.904554605484009
    6. '=' → logprob: -4.40455436706543
    7. '=set' → logprob: -4.40455436706543
    8. '.add' → logprob: -4.65455436706543
    9. 'add' → logprob: -6.15455436706543
    10. 'update' → logprob: -6.40455436706543

Token 1811: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.14758846163749695
    2. '.update' → logprob: -2.0225884914398193
    3. '.' → logprob: -5.89758825302124
    4. '=' → logprob: -6.52258825302124
    5. ' =' → logprob: -8.022588729858398
    6. 'add' → logprob: -8.897588729858398
    7. '   ' → logprob: -9.647588729858398
    8. ' .' → logprob: -10.022588729858398
    9. '|' → logprob: -10.147588729858398
    10. 'update' → logprob: -10.772588729858398

Token 1812: '(start' (ID: 20008)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.04707333445549011
    2. '(start' → logprob: -3.6720733642578125
    3. ' start' → logprob: -4.6720733642578125
    4. 'h' → logprob: -5.5470733642578125
    5. 's' → logprob: -5.5470733642578125
    6. ''' → logprob: -7.2970733642578125
    7. ''h' → logprob: -7.2970733642578125
    8. ''s' → logprob: -7.4220733642578125
    9. '('' → logprob: -7.5470733642578125
    10. '(s' → logprob: -8.672073364257812

Token 1813: '[' (ID: 58)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.18003472685813904
    2. ')' → logprob: -1.8050347566604614
    3. '.add' → logprob: -9.555034637451172
    4. '   ' → logprob: -9.680034637451172
    5. '(h' → logprob: -10.430034637451172
    6. ')
' → logprob: -10.555034637451172
    7. '())
' → logprob: -10.930034637451172
    8. '[' → logprob: -11.555034637451172
    9. ' )
' → logprob: -11.680034637451172
    10. 's' → logprob: -11.680034637451172

Token 1814: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.081584716506768e-05
    2. '[' → logprob: -11.750020980834961
    3. ' ' → logprob: -12.500020980834961
    4. '1' → logprob: -12.750020980834961
    5. '
' → logprob: -12.750020980834961
    6. '```' → logprob: -13.625020980834961
    7. '   ' → logprob: -14.937520980834961
    8. '#' → logprob: -15.812520980834961
    9. '
' → logprob: -16.00002098083496
    10. '...' → logprob: -16.18752098083496

Token 1815: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.22551698982715607
    2. ')' → logprob: -1.6005170345306396
    3. ' )
' → logprob: -10.725517272949219
    4. ')
' → logprob: -10.850517272949219
    5. '())
' → logprob: -11.100517272949219
    6. ');' → logprob: -11.350517272949219
    7. '   ' → logprob: -11.850517272949219
    8. ')

' → logprob: -12.100517272949219
    9. ')#' → logprob: -12.225517272949219
    10. '       ' → logprob: -12.475517272949219

Token 1816: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23131702840328217
    2. 'v' → logprob: -1.7313170433044434
    3. ' v' → logprob: -3.6063170433044434
    4. '```' → logprob: -6.731317043304443
    5. ',v' → logprob: -7.106317043304443
    6. '	v' → logprob: -8.981316566467285
    7. '``' → logprob: -10.106316566467285
    8. ',' → logprob: -10.106316566467285
    9. '   ' → logprob: -10.231316566467285
    10. '           ' → logprob: -10.731316566467285

Token 1817: ' h' (ID: 312)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0010066082468256354
    2. 'h' (adapté à ' h') → logprob: -7.001006603240967
    3. '       ' → logprob: -9.751007080078125
    4. ' v' → logprob: -10.376007080078125
    5. '   ' → logprob: -12.626007080078125
    6. 'for' → logprob: -13.376007080078125
    7. '	v' → logprob: -15.126007080078125
    8. ' ' → logprob: -16.126007080078125
    9. '#' → logprob: -16.251007080078125
    10. '```' → logprob: -16.751007080078125

Token 1818: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.2519485354423523
    2. 'v' → logprob: -1.501948595046997
    3. '=set' → logprob: -11.751948356628418
    4. '=' → logprob: -12.626948356628418
    5. 's' → logprob: -13.001948356628418
    6. ' v' → logprob: -13.501948356628418
    7. '.set' → logprob: -14.501948356628418
    8. '_set' → logprob: -14.501948356628418
    9. '   ' → logprob: -14.626948356628418
    10. 'h' → logprob: -14.626948356628418

Token 1819: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.00018196819291915745
    2. '.' → logprob: -8.625182151794434
    3. 'add' → logprob: -13.625182151794434
    4. ' .' → logprob: -14.250182151794434
    5. '.update' → logprob: -15.375182151794434
    6. '.insert' → logprob: -16.625181198120117
    7. '.remove' → logprob: -17.000181198120117
    8. '.Add' → logprob: -17.125181198120117
    9. '.dis' → logprob: -17.250181198120117
    10. '<|end|>' → logprob: -17.750181198120117

Token 1820: '(goal' (ID: 196945)
  Prédit: 'goal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'goal' → logprob: -0.00017004783148877323
    2. '(goal' → logprob: -9.00016975402832
    3. ' goal' → logprob: -10.00016975402832
    4. 'end' → logprob: -13.87516975402832
    5. 'go' → logprob: -16.37516975402832
    6. 'start' → logprob: -16.75016975402832
    7. '   ' → logprob: -18.00016975402832
    8. 'Goal' → logprob: -18.25016975402832
    9. ' ' → logprob: -18.62516975402832
    10. '.goal' → logprob: -18.75016975402832

Token 1821: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.6895233531831764e-05
    2. '<|end|>' → logprob: -11.50002670288086
    3. '<|end|>' → logprob: -12.50002670288086
    4. 'user' → logprob: -12.62502670288086
    5. ')' → logprob: -12.87502670288086
    6. '(' → logprob: -13.12502670288086
    7. '[user' → logprob: -13.37502670288086
    8. '.' → logprob: -14.00002670288086
    9. '[
' → logprob: -14.25002670288086
    10. '.user' → logprob: -14.75002670288086

Token 1822: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003407071635592729
    2. '[' → logprob: -8.125340461730957
    3. '1' → logprob: -10.750340461730957
    4. '(' → logprob: -11.125340461730957
    5. ' ' → logprob: -12.500340461730957
    6. '```' → logprob: -13.000340461730957
    7. '   ' → logprob: -14.437840461730957
    8. '۰' → logprob: -15.375340461730957
    9. '
' → logprob: -15.500340461730957
    10. '{' → logprob: -15.500340461730957

Token 1823: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.14281456172466278
    2. ')' → logprob: -2.0178146362304688
    3. '       ' → logprob: -9.517814636230469
    4. ')
' → logprob: -10.142814636230469
    5. '())
' → logprob: -11.767814636230469
    6. '   ' → logprob: -12.142814636230469
    7. ')

' → logprob: -12.517814636230469
    8. ' )
' → logprob: -12.517814636230469
    9. '')
' → logprob: -14.392814636230469
    10. ')v' → logprob: -14.517814636230469

Token 1824: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1478421688079834
    2. 'v' → logprob: -2.0228421688079834
    3. ' v' → logprob: -5.3978424072265625
    4. '	v' → logprob: -8.397842407226562
    5. '```' → logprob: -8.772842407226562
    6. 'for' → logprob: -9.772842407226562
    7. '   ' → logprob: -9.897842407226562
    8. '	' → logprob: -10.022842407226562
    9. ',v' → logprob: -10.272842407226562
    10. ' for' → logprob: -11.522842407226562

Token 1825: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.0394921638071537
    2. '       ' → logprob: -3.914492130279541
    3. 'for' → logprob: -4.039492130279541
    4. ' for' → logprob: -7.539492130279541
    5. ' v' → logprob: -7.789492130279541
    6. '	v' → logprob: -9.7894926071167
    7. '	' → logprob: -10.1644926071167
    8. '   ' → logprob: -10.5394926071167
    9. '```' → logprob: -10.5394926071167
    10. '#' → logprob: -11.2894926071167

Token 1826: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -1.1472419600977446e-06
    2. '=set' → logprob: -14.625000953674316
    3. '_set' → logprob: -15.375000953674316
    4. '.set' → logprob: -15.875000953674316
    5. '```' → logprob: -16.375001907348633
    6. '=' → logprob: -17.375001907348633
    7. ' =' → logprob: -17.875001907348633
    8. ')set' → logprob: -17.875001907348633
    9. 'list' → logprob: -18.000001907348633
    10. ' set' → logprob: -18.125001907348633

Token 1827: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -3.726595241460018e-05
    2. '.' → logprob: -10.37503719329834
    3. 'add' → logprob: -12.37503719329834
    4. '.update' → logprob: -13.75003719329834
    5. ' .' → logprob: -15.12503719329834
    6. '.append' → logprob: -16.250038146972656
    7. '.clear' → logprob: -16.625038146972656
    8. '.insert' → logprob: -16.750038146972656
    9. '.v' → logprob: -16.875038146972656
    10. '().' → logprob: -17.375038146972656

Token 1828: '(start' (ID: 20008)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.2519403100013733
    2. '(start' → logprob: -1.5019402503967285
    3. ' start' → logprob: -12.126940727233887
    4. '(' → logprob: -13.001940727233887
    5. '[start' → logprob: -14.001940727233887
    6. '(goal' → logprob: -14.126940727233887
    7. 'int' → logprob: -14.626940727233887
    8. '('' → logprob: -14.751940727233887
    9. 'goal' → logprob: -15.751940727233887
    10. '(s' → logprob: -16.00193977355957

Token 1829: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04334227740764618
    2. '(' → logprob: -3.168342351913452
    3. '0' → logprob: -9.043342590332031
    4. ')' → logprob: -10.293342590332031
    5. 'def' → logprob: -10.418342590332031
    6. 'user' → logprob: -10.668342590332031
    7. 's' → logprob: -11.043342590332031
    8. 'd' → logprob: -11.168342590332031
    9. '
' → logprob: -11.168342590332031
    10. '{' → logprob: -11.918342590332031

Token 1830: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00016241880075540394
    2. '[' → logprob: -8.875162124633789
    3. '1' → logprob: -10.875162124633789
    4. ' ' → logprob: -13.125162124633789
    5. '(' → logprob: -14.250162124633789
    6. '{' → logprob: -14.750162124633789
    7. '   ' → logprob: -15.625162124633789
    8. 'start' → logprob: -16.50016212463379
    9. '
' → logprob: -16.75016212463379
    10. '  ' → logprob: -17.37516212463379

Token 1831: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0027077500708401203
    2. ')' → logprob: -6.0027079582214355
    3. ')v' → logprob: -9.127707481384277
    4. '       ' → logprob: -9.877707481384277
    5. 'v' → logprob: -10.377707481384277
    6. ')
' → logprob: -10.877707481384277
    7. '())
' → logprob: -11.627707481384277
    8. '(v' → logprob: -12.252707481384277
    9. '   ' → logprob: -13.002707481384277
    10. ' )
' → logprob: -13.627707481384277

Token 1832: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011043755803257227
    2. 'v' → logprob: -6.876104354858398
    3. '```' → logprob: -10.501104354858398
    4. '<|end|>' → logprob: -10.626104354858398
    5. ' v' → logprob: -11.876104354858398
    6. '   ' → logprob: -11.876104354858398
    7. '           ' → logprob: -13.126104354858398
    8. ' ' → logprob: -14.126104354858398
    9. '``' → logprob: -14.501104354858398
    10. '<|end|>' → logprob: -14.626104354858398

Token 1833: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.001930301426909864
    2. '       ' → logprob: -6.251930236816406
    3. ' v' → logprob: -13.376930236816406
    4. '```' → logprob: -17.126930236816406
    5. '   ' → logprob: -17.251930236816406
    6. '           ' → logprob: -17.376930236816406
    7. '	v' → logprob: -17.876930236816406
    8. '      ' → logprob: -19.376930236816406
    9. '        ' → logprob: -19.751930236816406
    10. '     ' → logprob: -19.876930236816406

Token 1834: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -4.320199877838604e-07
    2. '_set' → logprob: -16.5
    3. 'add' → logprob: -16.625
    4. 'v' → logprob: -17.0
    5. 'et' → logprob: -17.0
    6. '.set' → logprob: -17.0
    7. '=set' → logprob: -17.625
    8. 'erset' → logprob: -18.625
    9. '   ' → logprob: -18.625
    10. ' set' → logprob: -19.125

Token 1835: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0001867326645879075
    2. '.' → logprob: -8.750186920166016
    3. 'add' → logprob: -10.500186920166016
    4. ' .' → logprob: -15.375186920166016
    5. '.v' → logprob: -15.875186920166016
    6. '.update' → logprob: -16.500186920166016
    7. 'v' → logprob: -16.625186920166016
    8. '```' → logprob: -16.750186920166016
    9. '.append' → logprob: -17.000186920166016
    10. '.Add' → logprob: -17.000186920166016

Token 1836: '(goal' (ID: 196945)
  Prédit: 'goal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'goal' → logprob: -0.25198087096214294
    2. '(goal' → logprob: -1.5019809007644653
    3. ' goal' → logprob: -10.001980781555176
    4. '(' → logprob: -13.001980781555176
    5. 'd' → logprob: -13.001980781555176
    6. '(d' → logprob: -14.251980781555176
    7. 'go' → logprob: -14.876980781555176
    8. '(go' → logprob: -15.001980781555176
    9. '.goal' → logprob: -15.626980781555176
    10. ' (' → logprob: -15.751980781555176

Token 1837: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.000356199947418645
    2. '(' → logprob: -8.250356674194336
    3. '```' → logprob: -10.250356674194336
    4. 'v' → logprob: -10.375356674194336
    5. '   ' → logprob: -11.750356674194336
    6. '       ' → logprob: -12.375356674194336
    7. '()[' → logprob: -12.500356674194336
    8. '('' → logprob: -12.500356674194336
    9. ')' → logprob: -13.625356674194336
    10. '``' → logprob: -13.875356674194336

Token 1838: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4418171455617994e-05
    2. '[' → logprob: -10.875044822692871
    3. '0' → logprob: -11.125044822692871
    4. 'd' → logprob: -11.875044822692871
    5. 's' → logprob: -13.625044822692871
    6. ' ' → logprob: -13.875044822692871
    7. ''' → logprob: -14.750044822692871
    8. ''s' → logprob: -15.250044822692871
    9. '{' → logprob: -15.375044822692871
    10. '<|end|>' → logprob: -15.625044822692871

Token 1839: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3631839156150818
    2. ')' → logprob: -1.2381839752197266
    3. '       ' → logprob: -4.238183975219727
    4. '```' → logprob: -9.988183975219727
    5. '')
' → logprob: -10.613183975219727
    6. '   ' → logprob: -10.863183975219727
    7. '<|end|>' → logprob: -11.113183975219727
    8. ')
' → logprob: -11.238183975219727
    9. ')v' → logprob: -11.238183975219727
    10. '')' → logprob: -11.363183975219727

Token 1840: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002161802491173148
    2. '<|end|>' → logprob: -6.502161979675293
    3. 'for' → logprob: -8.002161979675293
    4. ' for' → logprob: -8.877161979675293
    5. '```' → logprob: -9.127161979675293
    6. '        
' → logprob: -10.877161979675293
    7. ' ' → logprob: -11.502161979675293
    8. '   ' → logprob: -11.502161979675293
    9. 'import' → logprob: -12.127161979675293
    10. '<|end|>' → logprob: -12.127161979675293

Token 1841: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6382870674133301
    2. 'for' (adapté à ' for') → logprob: -0.7632870674133301
    3. ' for' → logprob: -5.38828706741333
    4. '```' → logprob: -7.26328706741333
    5. '	for' → logprob: -9.388286590576172
    6. 'while' → logprob: -9.388286590576172
    7. '
' → logprob: -10.013286590576172
    8. '#' → logprob: -10.138286590576172
    9. '<|end|>' → logprob: -10.388286590576172
    10. '        
' → logprob: -10.763286590576172

Token 1842: ' k' (ID: 372)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.15664109587669373
    2. 'k' → logprob: -3.2816410064697266
    3. '(inter' → logprob: -3.4066410064697266
    4. 'key' → logprob: -4.156641006469727
    5. 's' → logprob: -4.156641006469727
    6. ' inter' → logprob: -4.281641006469727
    7. 'i' → logprob: -4.906641006469727
    8. 'sig' → logprob: -5.156641006469727
    9. 'h' → logprob: -5.406641006469727
    10. '_inter' → logprob: -6.406641006469727

Token 1843: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.647371232509613
    2. 'in' → logprob: -0.772371232509613
    3. ',' → logprob: -5.522371292114258
    4. ',k' → logprob: -5.522371292114258
    5. ',v' → logprob: -6.147371292114258
    6. 'inter' → logprob: -6.897371292114258
    7. ',s' → logprob: -7.022371292114258
    8. 'k' → logprob: -7.022371292114258
    9. '_in' → logprob: -8.272371292114258
    10. ',h' → logprob: -8.397371292114258

Token 1844: ' signals' (ID: 29026)
  Prédit: 'signals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'signals' → logprob: -0.0021597796585410833
    2. ' signals' → logprob: -6.752159595489502
    3. 'list' → logprob: -7.127159595489502
    4. 'range' → logprob: -9.50216007232666
    5. '(sign' → logprob: -10.12716007232666
    6. '[' → logprob: -11.00216007232666
    7. 'sign' → logprob: -11.12716007232666
    8. ' list' → logprob: -11.37716007232666
    9. '(' → logprob: -11.62716007232666
    10. '(list' → logprob: -11.62716007232666

Token 1845: '.keys' (ID: 18392)
  Prédit: '.keys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.keys' → logprob: -0.20542797446250916
    2. ':
' → logprob: -2.080427885055542
    3. ':' → logprob: -3.080427885055542
    4. '.' → logprob: -5.455428123474121
    5. 'keys' → logprob: -5.580428123474121
    6. '[' → logprob: -5.705428123474121
    7. '   ' → logprob: -6.330428123474121
    8. 'h' → logprob: -7.830428123474121
    9. '       ' → logprob: -8.330428123474121
    10. '.setdefault' → logprob: -8.705428123474121

Token 1846: '():
' (ID: 8595)
  Prédit: '():
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.009332789108157158
    2. '():' → logprob: -4.884332656860352
    3. '()' → logprob: -6.634332656860352
    4. '()):
' → logprob: -8.509332656860352
    5. '():
' → logprob: -9.134332656860352
    6. '(),' → logprob: -10.259332656860352
    7. '().' → logprob: -11.634332656860352
    8. '():

' → logprob: -11.634332656860352
    9. '()>' → logprob: -11.884332656860352
    10. '();' → logprob: -12.384332656860352

Token 1847: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006521515315398574
    2. '   ' → logprob: -7.875652313232422
    3. '```' → logprob: -9.125652313232422
    4. ' h' → logprob: -9.375652313232422
    5. ' ' → logprob: -10.875652313232422
    6. '       ' → logprob: -11.750652313232422
    7. '<|end|>' → logprob: -11.750652313232422
    8. 'h' → logprob: -11.875652313232422
    9. '               ' → logprob: -12.125652313232422
    10. ',h' → logprob: -12.375652313232422

Token 1848: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' (adapté à ' h') → logprob: -0.7332092523574829
    2. '   ' → logprob: -0.7332092523574829
    3. ' h' → logprob: -3.3582091331481934
    4. '       ' → logprob: -6.233209133148193
    5. '           ' → logprob: -6.358209133148193
    6. '```' → logprob: -7.983209133148193
    7. ' ' → logprob: -8.108209609985352
    8. 'v' → logprob: -10.358209609985352
    9. '	h' → logprob: -10.483209609985352
    10. '  ' → logprob: -10.483209609985352

Token 1849: 'set' (ID: 977)
  Prédit: '.add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.24467606842517853
    2. '.' → logprob: -1.869676113128662
    3. 'set' → logprob: -2.869676113128662
    4. 'add' → logprob: -5.494676113128662
    5. 'k' → logprob: -7.369676113128662
    6. '.set' → logprob: -7.744676113128662
    7. ' .' → logprob: -8.119675636291504
    8. '{k' → logprob: -8.369675636291504
    9. '.setdefault' → logprob: -9.119675636291504
    10. '{' → logprob: -9.369675636291504

Token 1850: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.003190309274941683
    2. '.' → logprob: -5.753190517425537
    3. ' .' → logprob: -11.753190040588379
    4. '.update' → logprob: -13.128190040588379
    5. '.append' → logprob: -13.628190040588379
    6. '.Add' → logprob: -14.003190040588379
    7. '.setdefault' → logprob: -15.253190040588379
    8. '.insert' → logprob: -15.878190040588379
    9. 'add' → logprob: -16.503190994262695
    10. ').' → logprob: -17.503190994262695

Token 1851: '(k' (ID: 12125)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.1269969791173935
    2. '(k' → logprob: -2.1269969940185547
    3. ' k' → logprob: -9.626996994018555
    4. ' (' → logprob: -13.626996994018555
    5. '{k' → logprob: -13.876996994018555
    6. '(' → logprob: -14.251996994018555
    7. '   ' → logprob: -16.126996994018555
    8. '[k' → logprob: -16.501996994018555
    9. '	k' → logprob: -17.001996994018555
    10. '(
' → logprob: -17.501996994018555

Token 1852: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01680128462612629
    2. '0' → logprob: -4.141801357269287
    3. '(' → logprob: -8.016800880432129
    4. 'k' → logprob: -8.266800880432129
    5. '```' → logprob: -10.391800880432129
    6. '{' → logprob: -10.766800880432129
    7. '   ' → logprob: -11.141800880432129
    8. ')' → logprob: -11.141800880432129
    9. '
' → logprob: -11.391800880432129
    10. '.' → logprob: -11.391800880432129

Token 1853: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.1928003813372925e-05
    2. '[' → logprob: -10.125051498413086
    3. ' ' → logprob: -12.375051498413086
    4. 'k' → logprob: -13.500051498413086
    5. '```' → logprob: -13.812551498413086
    6. 'import' → logprob: -13.937551498413086
    7. '   ' → logprob: -14.250051498413086
    8. 'def' → logprob: -14.437551498413086
    9. '#' → logprob: -14.750051498413086
    10. '(' → logprob: -15.375051498413086

Token 1854: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0789569839835167
    2. ')' → logprob: -2.5789570808410645
    3. '   ' → logprob: -10.578956604003906
    4. '       ' → logprob: -11.328956604003906
    5. ')
' → logprob: -11.453956604003906
    6. '())
' → logprob: -11.703956604003906
    7. ' )
' → logprob: -12.703956604003906
    8. ')

' → logprob: -13.203956604003906
    9. '           ' → logprob: -14.328956604003906
    10. ')#' → logprob: -14.328956604003906

Token 1855: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14477823674678802
    2. 'v' → logprob: -2.144778251647949
    3. '           ' → logprob: -4.519778251647949
    4. 'for' → logprob: -5.519778251647949
    5. '```' → logprob: -6.144778251647949
    6. ' v' → logprob: -8.14477825164795
    7. '   ' → logprob: -8.39477825164795
    8. ' for' → logprob: -9.51977825164795
    9. '``' → logprob: -10.64477825164795
    10. ' ' → logprob: -11.14477825164795

Token 1856: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.004788834135979414
    2. ' v' → logprob: -5.504788875579834
    3. '           ' → logprob: -7.254788875579834
    4. '       ' → logprob: -13.129788398742676
    5. '   ' → logprob: -14.629788398742676
    6. '```' → logprob: -14.879788398742676
    7. '	v' → logprob: -15.379788398742676
    8. ' ' → logprob: -16.754789352416992
    9. '(v' → logprob: -17.129789352416992
    10. '.v' → logprob: -17.254789352416992

Token 1857: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -2.3199920178740285e-05
    2. '.set' → logprob: -11.375022888183594
    3. 'k' → logprob: -12.125022888183594
    4. '_set' → logprob: -12.500022888183594
    5. '   ' → logprob: -14.125022888183594
    6. '=set' → logprob: -15.250022888183594
    7. ' set' → logprob: -15.500022888183594
    8. '       ' → logprob: -15.750022888183594
    9. '.add' → logprob: -15.875022888183594
    10. 'add' → logprob: -15.875022888183594

Token 1858: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -3.845798710244708e-05
    2. 'add' → logprob: -10.625038146972656
    3. '.' → logprob: -11.375038146972656
    4. '(k' → logprob: -13.500038146972656
    5. 'k' → logprob: -14.875038146972656
    6. '(v' → logprob: -15.000038146972656
    7. 'v' → logprob: -15.625038146972656
    8. ' .' → logprob: -16.125038146972656
    9. '           ' → logprob: -16.250038146972656
    10. '.Add' → logprob: -16.375038146972656

Token 1859: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.029811935499310493
    2. 'k' → logprob: -3.5298118591308594
    3. '{k' → logprob: -9.77981185913086
    4. ' k' → logprob: -12.65481185913086
    5. '[k' → logprob: -13.77981185913086
    6. '(' → logprob: -15.77981185913086
    7. '	k' → logprob: -15.77981185913086
    8. ',k' → logprob: -16.02981185913086
    9. '/k' → logprob: -16.40481185913086
    10. '<|end|>' → logprob: -16.40481185913086

Token 1860: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2513489723205566
    2. '(' → logprob: -1.8763489723205566
    3. '(k' → logprob: -1.8763489723205566
    4. 'k' → logprob: -2.0013489723205566
    5. '1' → logprob: -2.2513489723205566
    6. '.add' → logprob: -2.3763489723205566
    7. 'add' → logprob: -2.8763489723205566
    8. '[k' → logprob: -5.501348972320557
    9. ')' → logprob: -6.001348972320557
    10. '.append' → logprob: -6.001348972320557

Token 1861: '1' (ID: 16)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.05698955059051514
    2. '1' → logprob: -2.9319896697998047
    3. '0' → logprob: -6.306989669799805
    4. ' k' → logprob: -8.681989669799805
    5. '[' → logprob: -10.306989669799805
    6. '(k' → logprob: -10.556989669799805
    7. '{k' → logprob: -10.806989669799805
    8. '(' → logprob: -11.056989669799805
    9. '	k' → logprob: -12.931989669799805
    10. '   ' → logprob: -13.306989669799805

Token 1862: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0923411101102829
    2. ')' → logprob: -2.592341184616089
    3. '       ' → logprob: -4.34234094619751
    4. '())
' → logprob: -8.717341423034668
    5. '   ' → logprob: -9.717341423034668
    6. ')

' → logprob: -10.092341423034668
    7. ')
' → logprob: -10.717341423034668
    8. '```' → logprob: -11.467341423034668
    9. '()' → logprob: -11.842341423034668
    10. '           ' → logprob: -11.967341423034668

Token 1863: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09543965756893158
    2. 'h' → logprob: -2.5954396724700928
    3. ' h' → logprob: -4.845439434051514
    4. '```' → logprob: -5.845439434051514
    5. 'v' → logprob: -5.970439434051514
    6. 'for' → logprob: -6.345439434051514
    7. '
' → logprob: -7.845439434051514
    8. ' for' → logprob: -8.595439910888672
    9. ',h' → logprob: -9.095439910888672
    10. '#' → logprob: -9.345439910888672

Token 1864: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3231889307498932
    2. '       ' → logprob: -1.4481889009475708
    3. 'h' → logprob: -4.073188781738281
    4. 'v' → logprob: -4.073188781738281
    5. ' for' → logprob: -5.198188781738281
    6. '```' → logprob: -7.073188781738281
    7. '#' → logprob: -8.198188781738281
    8. 'import' → logprob: -9.448188781738281
    9. ' h' → logprob: -9.698188781738281
    10. 'all' → logprob: -9.948188781738281

Token 1865: ' e' (ID: 319)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.16929763555526733
    2. 'i' → logprob: -3.044297695159912
    3. 'key' → logprob: -3.544297695159912
    4. 'e' → logprob: -3.669297695159912
    5. 'inter' → logprob: -5.044297695159912
    6. '(k' → logprob: -5.044297695159912
    7. 'road' → logprob: -5.419297695159912
    8. 's' → logprob: -5.544297695159912
    9. 'pair' → logprob: -5.544297695159912
    10. 'r' → logprob: -5.669297695159912

Token 1866: ' in' (ID: 306)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.29745447635650635
    2. ' in' → logprob: -1.7974544763565063
    3. 'in' → logprob: -2.422454357147217
    4. 'h' → logprob: -6.422454357147217
    5. 'x' → logprob: -8.047454833984375
    6. '_' → logprob: -8.172454833984375
    7. 'e' → logprob: -9.172454833984375
    8. 'lems' → logprob: -9.547454833984375
    9. '#' → logprob: -9.922454833984375
    10. '(' → logprob: -10.047454833984375

Token 1867: ' road' (ID: 8733)
  Prédit: 'road'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'road' → logprob: -0.0009874384850263596
    2. 'list' → logprob: -7.875987529754639
    3. ' road' → logprob: -8.37598705291748
    4. '[' → logprob: -8.87598705291748
    5. '(' → logprob: -9.12598705291748
    6. 'signals' → logprob: -9.62598705291748
    7. '[(' → logprob: -10.62598705291748
    8. 'signal' → logprob: -11.25098705291748
    9. '([' → logprob: -12.12598705291748
    10. 'roads' → logprob: -12.50098705291748

Token 1868: '_invalid' (ID: 71389)
  Prédit: '_invalid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_invalid' → logprob: -0.0336616076529026
    2. 'invalid' → logprob: -3.4086616039276123
    3. '_j' → logprob: -12.533661842346191
    4. 'Invalid' → logprob: -13.283661842346191
    5. 'INVALID' → logprob: -13.283661842346191
    6. '#' → logprob: -13.408661842346191
    7. ' invalid' → logprob: -13.533661842346191
    8. '
' → logprob: -13.658661842346191
    9. '_INVALID' → logprob: -13.783661842346191
    10. '_valid' → logprob: -13.783661842346191

Token 1869: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5334786176681519
    2. '.union' → logprob: -2.1584787368774414
    3. '           ' → logprob: -2.2834787368774414
    4. '       ' → logprob: -3.1584787368774414
    5. 's' → logprob: -3.2834787368774414
    6. '.keys' → logprob: -3.9084787368774414
    7. '   ' → logprob: -4.283478736877441
    8. 'e' → logprob: -4.408478736877441
    9. 'union' → logprob: -4.908478736877441
    10. '.' → logprob: -5.158478736877441

Token 1870: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008658452425152063
    2. '   ' → logprob: -7.500865936279297
    3. '{
' → logprob: -9.125865936279297
    4. '{' → logprob: -9.250865936279297
    5. 'h' → logprob: -10.125865936279297
    6. '```' → logprob: -10.500865936279297
    7. '[' → logprob: -10.750865936279297
    8. ':
' → logprob: -13.125865936279297
    9. ' ' → logprob: -13.250865936279297
    10. '(h' → logprob: -13.375865936279297

Token 1871: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' (adapté à ' h') → logprob: -0.20406724512577057
    2. '           ' → logprob: -1.7040672302246094
    3. ' h' → logprob: -6.829067230224609
    4. '   ' → logprob: -6.954067230224609
    5. '{' → logprob: -7.954067230224609
    6. '{
' → logprob: -9.07906723022461
    7. 'e' → logprob: -10.20406723022461
    8. ' ' → logprob: -10.57906723022461
    9. '```' → logprob: -10.95406723022461
    10. '[h' → logprob: -11.07906723022461

Token 1872: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.00022249009634833783
    2. '0' → logprob: -8.875222206115723
    3. '   ' → logprob: -10.625222206115723
    4. '[' → logprob: -10.625222206115723
    5. '       ' → logprob: -11.875222206115723
    6. '{' → logprob: -12.250222206115723
    7. '.' → logprob: -12.500222206115723
    8. '(' → logprob: -12.750222206115723
    9. 'for' → logprob: -12.875222206115723
    10. '
' → logprob: -13.375222206115723

Token 1873: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.007619291078299284
    2. '.' → logprob: -4.882619380950928
    3. '.update' → logprob: -12.38261890411377
    4. ' .' → logprob: -12.50761890411377
    5. 'add' → logprob: -12.63261890411377
    6. '.Add' → logprob: -14.25761890411377
    7. '{' → logprob: -15.75761890411377
    8. '.dis' → logprob: -16.007619857788086
    9. '.setdefault' → logprob: -16.007619857788086
    10. 'e' → logprob: -16.132619857788086

Token 1874: '(e' (ID: 3454)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.2519685626029968
    2. '(e' → logprob: -1.5019686222076416
    3. ' e' → logprob: -10.501968383789062
    4. '(' → logprob: -11.501968383789062
    5. ' (' → logprob: -13.751968383789062
    6. '   ' → logprob: -15.751968383789062
    7. '	e' → logprob: -15.876968383789062
    8. '((' → logprob: -16.126968383789062
    9. '[e' → logprob: -16.751968383789062
    10. '(
' → logprob: -17.126968383789062

Token 1875: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0008600078872404993
    2. '0' → logprob: -7.125860214233398
    3. '(' → logprob: -9.875860214233398
    4. '   ' → logprob: -13.500860214233398
    5. 'e' → logprob: -14.500860214233398
    6. '1' → logprob: -14.500860214233398
    7. '#' → logprob: -14.750860214233398
    8. '{' → logprob: -15.875860214233398
    9. '
' → logprob: -15.875860214233398
    10. '```' → logprob: -15.875860214233398

Token 1876: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.374227425316349e-05
    2. '[' → logprob: -9.875073432922363
    3. '(' → logprob: -11.250073432922363
    4. '1' → logprob: -12.750073432922363
    5. ' ' → logprob: -13.187573432922363
    6. '   ' → logprob: -13.625073432922363
    7. '#' → logprob: -14.125073432922363
    8. '```' → logprob: -14.687573432922363
    9. '۰' → logprob: -15.937573432922363
    10. '{' → logprob: -15.937573432922363

Token 1877: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0007869947585277259
    2. '0' → logprob: -7.250786781311035
    3. '(' → logprob: -10.375786781311035
    4. '][' → logprob: -10.750786781311035
    5. '   ' → logprob: -11.250786781311035
    6. ')' → logprob: -12.875786781311035
    7. '
' → logprob: -13.625786781311035
    8. '#' → logprob: -13.750786781311035
    9. 'def' → logprob: -14.000786781311035
    10. '.' → logprob: -14.250786781311035

Token 1878: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.438573680294212e-06
    2. '[' → logprob: -12.375005722045898
    3. ' ' → logprob: -15.125005722045898
    4. '   ' → logprob: -15.125005722045898
    5. '
' → logprob: -15.750005722045898
    6. '```' → logprob: -16.6250057220459
    7. '۰' → logprob: -16.7500057220459
    8. 'import' → logprob: -17.0000057220459
    9. '<|end|>' → logprob: -17.0000057220459
    10. 'def' → logprob: -17.5000057220459

Token 1879: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.06212688609957695
    2. ')' → logprob: -2.812126874923706
    3. '])
' → logprob: -9.437127113342285
    4. '   ' → logprob: -10.937127113342285
    5. '])' → logprob: -11.562127113342285
    6. ')
' → logprob: -11.562127113342285
    7. '),' → logprob: -11.687127113342285
    8. ' )
' → logprob: -12.187127113342285
    9. 'e' → logprob: -12.187127113342285
    10. ')e' → logprob: -12.187127113342285

Token 1880: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10042264312505722
    2. 'v' → logprob: -2.3504226207733154
    3. ' v' → logprob: -8.850422859191895
    4. 'e' → logprob: -10.225422859191895
    5. '       ' → logprob: -11.225422859191895
    6. '```' → logprob: -11.350422859191895
    7. '   ' → logprob: -11.975422859191895
    8. '                   ' → logprob: -13.600422859191895
    9. ',v' → logprob: -13.725422859191895
    10. '``' → logprob: -14.350422859191895

Token 1881: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.001015779678709805
    2. '           ' → logprob: -7.501015663146973
    3. 'e' → logprob: -8.001015663146973
    4. ' v' → logprob: -9.001015663146973
    5. 'h' → logprob: -13.251015663146973
    6. '               ' → logprob: -14.501015663146973
    7. '            ' → logprob: -14.501015663146973
    8. '          ' → logprob: -14.751015663146973
    9. ' e' → logprob: -15.001015663146973
    10. '   ' → logprob: -15.126015663146973

Token 1882: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.005289373453706503
    2. 'e' → logprob: -5.255289554595947
    3. '_set' → logprob: -10.505289077758789
    4. '{' → logprob: -12.130289077758789
    5. '   ' → logprob: -12.505289077758789
    6. '.set' → logprob: -13.130289077758789
    7. 'v' → logprob: -13.130289077758789
    8. 'et' → logprob: -13.255289077758789
    9. '```' → logprob: -13.255289077758789
    10. ' e' → logprob: -13.380289077758789

Token 1883: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0002371521550230682
    2. '.' → logprob: -8.375237464904785
    3. 'add' → logprob: -12.125237464904785
    4. '           ' → logprob: -14.125237464904785
    5. '.Add' → logprob: -16.00023651123047
    6. ' .' → logprob: -16.00023651123047
    7. 'e' → logprob: -17.62523651123047
    8. '```' → logprob: -18.00023651123047
    9. '   ' → logprob: -18.12523651123047
    10. '.append' → logprob: -18.25023651123047

Token 1884: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.018151583150029182
    2. 'e' → logprob: -4.018151760101318
    3. ' e' → logprob: -14.64315128326416
    4. '(' → logprob: -14.89315128326416
    5. '{' → logprob: -14.89315128326416
    6. '[e' → logprob: -15.26815128326416
    7. ' (' → logprob: -15.76815128326416
    8. ')e' → logprob: -16.393152236938477
    9. '(
' → logprob: -17.143152236938477
    10. '	e' → logprob: -17.768152236938477

Token 1885: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.30004340410232544
    2. '1' → logprob: -1.5500433444976807
    3. '(' → logprob: -3.5500433444976807
    4. '0' → logprob: -4.17504358291626
    5. 'e' → logprob: -6.80004358291626
    6. '{' → logprob: -7.17504358291626
    7. '   ' → logprob: -7.67504358291626
    8. ' ' → logprob: -8.300043106079102
    9. '[](' → logprob: -10.175043106079102
    10. '<|end|>' → logprob: -10.175043106079102

Token 1886: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3544423381972592e-05
    2. '1' → logprob: -12.25001335144043
    3. ' ' → logprob: -12.93751335144043
    4. '[' → logprob: -13.12501335144043
    5. '(' → logprob: -13.81251335144043
    6. '   ' → logprob: -14.12501335144043
    7. '۰' → logprob: -14.56251335144043
    8. '{' → logprob: -15.18751335144043
    9. '０' → logprob: -16.25001335144043
    10. '<|end|>' → logprob: -16.31251335144043

Token 1887: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.014216511510312557
    2. '][' → logprob: -4.264216423034668
    3. '1' → logprob: -11.389216423034668
    4. '(' → logprob: -11.514216423034668
    5. 'def' → logprob: -12.014216423034668
    6. '0' → logprob: -12.514216423034668
    7. ']' → logprob: -12.514216423034668
    8. ''][' → logprob: -12.889216423034668
    9. ')[' → logprob: -13.264216423034668
    10. ' [' → logprob: -13.264216423034668

Token 1888: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.983476436696947e-05
    2. '1' → logprob: -9.500089645385742
    3. '[' → logprob: -11.250089645385742
    4. ' ' → logprob: -14.375089645385742
    5. '(' → logprob: -14.500089645385742
    6. '   ' → logprob: -15.250089645385742
    7. '{' → logprob: -15.875089645385742
    8. '۰' → logprob: -16.875089645385742
    9. '```' → logprob: -16.937589645385742
    10. '#' → logprob: -17.125089645385742

Token 1889: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.14403453469276428
    2. ')' → logprob: -2.2690346240997314
    3. '           ' → logprob: -3.5190346240997314
    4. '                   ' → logprob: -7.894034385681152
    5. '])
' → logprob: -8.144034385681152
    6. '       ' → logprob: -8.644034385681152
    7. '   ' → logprob: -9.269034385681152
    8. '```' → logprob: -10.144034385681152
    9. '               ' → logprob: -10.769034385681152
    10. '])' → logprob: -11.019034385681152

Token 1890: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0022437504958361387
    2. '       ' → logprob: -6.377243518829346
    3. 'v' → logprob: -8.252243995666504
    4. 'h' → logprob: -8.752243995666504
    5. 'for' → logprob: -9.627243995666504
    6. '```' → logprob: -10.127243995666504
    7. '   ' → logprob: -11.377243995666504
    8. ' ' → logprob: -13.877243995666504
    9. '``' → logprob: -13.877243995666504
    10. '               ' → logprob: -14.252243995666504

Token 1891: ' h' (ID: 312)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4830425977706909
    2. 'h' (adapté à ' h') → logprob: -0.9830425977706909
    3. 'v' → logprob: -4.7330427169799805
    4. ' h' → logprob: -9.60804271697998
    5. ' v' → logprob: -10.48304271697998
    6. '       ' → logprob: -10.98304271697998
    7. 'for' → logprob: -12.48304271697998
    8. '   ' → logprob: -12.73304271697998
    9. '```' → logprob: -13.23304271697998
    10. 'e' → logprob: -13.48304271697998

Token 1892: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -3.128163257315464e-07
    2. '   ' → logprob: -16.25
    3. 'et' → logprob: -17.25
    4. '=set' → logprob: -17.375
    5. '_set' → logprob: -17.375
    6. '.set' → logprob: -17.625
    7. '{' → logprob: -17.875
    8. '[' → logprob: -18.25
    9. 'add' → logprob: -18.375
    10. 's' → logprob: -18.5

Token 1893: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.000913370808120817
    2. '.' → logprob: -7.000913143157959
    3. 'add' → logprob: -14.125913619995117
    4. ' .' → logprob: -14.500913619995117
    5. '.update' → logprob: -15.625913619995117
    6. '.Add' → logprob: -16.500913619995117
    7. '.append' → logprob: -16.625913619995117
    8. '<|end|>' → logprob: -16.625913619995117
    9. ').' → logprob: -16.875913619995117
    10. '.setdefault' → logprob: -17.375913619995117

Token 1894: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -4.961759259458631e-06
    2. 'e' → logprob: -12.250004768371582
    3. '(' → logprob: -17.2500057220459
    4. '   ' → logprob: -18.5000057220459
    5. '((' → logprob: -18.5000057220459
    6. ' (' → logprob: -19.1250057220459
    7. '#' → logprob: -20.2500057220459
    8. '(
' → logprob: -20.3750057220459
    9. '[e' → logprob: -20.5000057220459
    10. '{' → logprob: -20.6250057220459

Token 1895: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1940097212791443
    2. '1' → logprob: -1.819009780883789
    3. '(' → logprob: -4.319009780883789
    4. 'e' → logprob: -7.569009780883789
    5. '{' → logprob: -9.194009780883789
    6. '   ' → logprob: -9.194009780883789
    7. ' ' → logprob: -10.194009780883789
    8. ' (' → logprob: -11.069009780883789
    9. '0' → logprob: -11.569009780883789
    10. '...' → logprob: -11.694009780883789

Token 1896: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004645503591746092
    2. '0' → logprob: -5.379645347595215
    3. '(' → logprob: -11.504645347595215
    4. '[' → logprob: -11.629645347595215
    5. 'e' → logprob: -12.754645347595215
    6. '
' → logprob: -13.504645347595215
    7. '   ' → logprob: -13.754645347595215
    8. ' ' → logprob: -14.504645347595215
    9. '```' → logprob: -16.00464630126953
    10. '    ' → logprob: -16.62964630126953

Token 1897: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.79811754100956e-05
    2. '0' → logprob: -10.625038146972656
    3. '(' → logprob: -11.750038146972656
    4. '][' → logprob: -12.375038146972656
    5. '```' → logprob: -14.625038146972656
    6. '   ' → logprob: -15.750038146972656
    7. '<|end|>' → logprob: -15.875038146972656
    8. '#' → logprob: -16.250038146972656
    9. 'def' → logprob: -16.375038146972656
    10. ' [' → logprob: -16.375038146972656

Token 1898: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012487331696320325
    2. '1' → logprob: -9.00012493133545
    3. '[' → logprob: -13.87512493133545
    4. '   ' → logprob: -15.75012493133545
    5. '(' → logprob: -15.87512493133545
    6. ' ' → logprob: -16.000123977661133
    7. '```' → logprob: -16.250123977661133
    8. '۰' → logprob: -17.125123977661133
    9. '
' → logprob: -17.375123977661133
    10. '01' → logprob: -18.062623977661133

Token 1899: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0033633122220635414
    2. ')' → logprob: -6.128363132476807
    3. '           ' → logprob: -7.128363132476807
    4. '])
' → logprob: -8.628363609313965
    5. ']
' → logprob: -9.253363609313965
    6. '[' → logprob: -10.503363609313965
    7. ']' → logprob: -10.878363609313965
    8. '   ' → logprob: -11.128363609313965
    9. ' )
' → logprob: -12.128363609313965
    10. '       ' → logprob: -12.128363609313965

Token 1900: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.47495681833243e-05
    2. 'v' → logprob: -11.250024795532227
    3. '```' → logprob: -11.875024795532227
    4. '   ' → logprob: -13.250024795532227
    5. '       ' → logprob: -14.375024795532227
    6. '``' → logprob: -14.750024795532227
    7. '          ' → logprob: -15.125024795532227
    8. '                   ' → logprob: -15.125024795532227
    9. '               ' → logprob: -15.375024795532227
    10. '		' → logprob: -15.625024795532227

Token 1901: ' v' (ID: 323)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.000839642365463078
    2. ' e' → logprob: -7.250839710235596
    3. '(e' → logprob: -9.625839233398438
    4. '(' → logprob: -9.750839233398438
    5. '           ' → logprob: -12.750839233398438
    6. ' (' → logprob: -14.750839233398438
    7. '[' → logprob: -14.750839233398438
    8. '[e' → logprob: -14.750839233398438
    9. '       ' → logprob: -14.875839233398438
    10. '{' → logprob: -15.375839233398438

Token 1902: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -5.6934557505883276e-05
    2. 'e' → logprob: -10.000057220458984
    3. 'et' → logprob: -12.250057220458984
    4. '1' → logprob: -13.500057220458984
    5. 'v' → logprob: -13.500057220458984
    6. '   ' → logprob: -14.125057220458984
    7. '```' → logprob: -14.125057220458984
    8. ' set' → logprob: -14.500057220458984
    9. '_set' → logprob: -14.625057220458984
    10. '[' → logprob: -15.000057220458984

Token 1903: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0004055282333865762
    2. '.' → logprob: -8.125405311584473
    3. 'add' → logprob: -9.125405311584473
    4. ' .' → logprob: -14.625405311584473
    5. '.update' → logprob: -17.12540626525879
    6. '```' → logprob: -17.87540626525879
    7. '_add' → logprob: -18.00040626525879
    8. '   ' → logprob: -18.25040626525879
    9. '.Add' → logprob: -18.75040626525879
    10. ')add' → logprob: -19.00040626525879

Token 1904: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.00018077615823131055
    2. 'e' → logprob: -8.625181198120117
    3. ' (' → logprob: -14.125181198120117
    4. '   ' → logprob: -15.375181198120117
    5. '(' → logprob: -16.875181198120117
    6. '           ' → logprob: -17.000181198120117
    7. '((' → logprob: -17.125181198120117
    8. ' e' → logprob: -18.000181198120117
    9. '       ' → logprob: -18.000181198120117
    10. '[e' → logprob: -18.125181198120117

Token 1905: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.18666081130504608
    2. '(' → logprob: -2.4366607666015625
    3. '1' → logprob: -2.5616607666015625
    4. '{' → logprob: -5.1866607666015625
    5. '   ' → logprob: -11.436660766601562
    6. '0' → logprob: -12.061660766601562
    7. '(e' → logprob: -12.186660766601562
    8. '{
' → logprob: -12.186660766601562
    9. '```' → logprob: -12.186660766601562
    10. ' (' → logprob: -12.311660766601562

Token 1906: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1041145626222715e-05
    2. '(' → logprob: -12.125011444091797
    3. '[' → logprob: -12.875011444091797
    4. '0' → logprob: -13.125011444091797
    5. '{' → logprob: -14.750011444091797
    6. '   ' → logprob: -16.750011444091797
    7. '<|end|>' → logprob: -16.937511444091797
    8. '
' → logprob: -17.000011444091797
    9. ' ' → logprob: -17.000011444091797
    10. '```' → logprob: -17.062511444091797

Token 1907: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00038336371653713286
    2. '(' → logprob: -8.000383377075195
    3. '][' → logprob: -10.625383377075195
    4. '1' → logprob: -11.750383377075195
    5. '0' → logprob: -12.625383377075195
    6. '```' → logprob: -12.750383377075195
    7. ' [' → logprob: -13.250383377075195
    8. 'def' → logprob: -13.375383377075195
    9. '
' → logprob: -13.875383377075195
    10. '[
' → logprob: -13.875383377075195

Token 1908: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.723973582556937e-05
    2. '0' → logprob: -11.125017166137695
    3. '[' → logprob: -13.625017166137695
    4. '{' → logprob: -14.875017166137695
    5. '```' → logprob: -15.625017166137695
    6. '   ' → logprob: -15.750017166137695
    7. '(' → logprob: -15.875017166137695
    8. '
' → logprob: -15.875017166137695
    9. ' ' → logprob: -17.125017166137695
    10. '{
' → logprob: -17.187517166137695

Token 1909: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.06155481934547424
    2. '       ' → logprob: -3.3115549087524414
    3. ')' → logprob: -3.8115549087524414
    4. '())
' → logprob: -7.436554908752441
    5. '           ' → logprob: -8.311554908752441
    6. '```' → logprob: -9.686554908752441
    7. '   ' → logprob: -9.936554908752441
    8. '#' → logprob: -10.561554908752441
    9. 'v' → logprob: -10.936554908752441
    10. ')

' → logprob: -11.061554908752441

Token 1910: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0068361409939825535
    2. '```' → logprob: -5.6318359375
    3. 'h' → logprob: -6.5068359375
    4. 'v' → logprob: -6.8818359375
    5. ' h' → logprob: -8.1318359375
    6. '
' → logprob: -8.3818359375
    7. '``' → logprob: -9.5068359375
    8. 'for' → logprob: -10.3818359375
    9. '   ' → logprob: -10.6318359375
    10. '#' → logprob: -11.6318359375

Token 1911: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0885205864906311
    2. 'for' (adapté à ' for') → logprob: -2.5885205268859863
    3. 'v' → logprob: -4.838520526885986
    4. '```' → logprob: -6.463520526885986
    5. 'h' → logprob: -9.963521003723145
    6. '#' → logprob: -11.088521003723145
    7. '
' → logprob: -11.088521003723145
    8. '   ' → logprob: -11.463521003723145
    9. '``' → logprob: -12.088521003723145
    10. 'For' → logprob: -12.838521003723145

Token 1912: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.04862256348133087
    2. ' e' → logprob: -3.0486226081848145
    3. 'k' → logprob: -11.798622131347656
    4. 's' → logprob: -12.548622131347656
    5. 'road' → logprob: -12.798622131347656
    6. ' ' → logprob: -12.923622131347656
    7. '	e' → logprob: -12.923622131347656
    8. '#' → logprob: -13.173622131347656
    9. '(e' → logprob: -13.173622131347656
    10. '_e' → logprob: -13.173622131347656

Token 1913: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3872314393520355
    2. 'in' → logprob: -1.137231469154358
    3. '[' → logprob: -8.387231826782227
    4. 'e' → logprob: -10.137231826782227
    5. ' ' → logprob: -10.137231826782227
    6. '   ' → logprob: -10.637231826782227
    7. '
' → logprob: -12.262231826782227
    8. '(' → logprob: -12.512231826782227
    9. '```' → logprob: -12.637231826782227
    10. '  ' → logprob: -12.762231826782227

Token 1914: ' road' (ID: 8733)
  Prédit: 'road'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'road' → logprob: -0.0002319071936653927
    2. ' road' → logprob: -8.375231742858887
    3. '   ' → logprob: -14.500231742858887
    4. '
' → logprob: -15.000231742858887
    5. '#' → logprob: -15.625231742858887
    6. ' ' → logprob: -16.375232696533203
    7. '[' → logprob: -16.625232696533203
    8. 'roads' → logprob: -17.500232696533203
    9. '       ' → logprob: -17.625232696533203
    10. '```' → logprob: -17.625232696533203

Token 1915: '_j' (ID: 12021)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7358477711677551
    2. '_invalid' → logprob: -0.7358477711677551
    3. '           ' → logprob: -4.1108479499816895
    4. '(' → logprob: -4.9858479499816895
    5. 'invalid' → logprob: -5.9858479499816895
    6. '...' → logprob: -6.1108479499816895
    7. '#' → logprob: -6.3608479499816895
    8. '   ' → logprob: -6.3608479499816895
    9. '       ' → logprob: -6.3608479499816895
    10. '```' → logprob: -6.4858479499816895

Token 1916: 'am' (ID: 313)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.5193479657173157
    2. 'set' → logprob: -1.019347906112671
    3. 'am' → logprob: -3.644347906112671
    4. '{' → logprob: -5.26934814453125
    5. '[' → logprob: -5.64434814453125
    6. '_add' → logprob: -6.14434814453125
    7. '_set' → logprob: -7.14434814453125
    8. '1' → logprob: -7.39434814453125
    9. '_' → logprob: -7.39434814453125
    10. '_s' → logprob: -7.51934814453125

Token 1917: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.19200025498867035
    2. '           ' → logprob: -1.9420002698898315
    3. '[' → logprob: -4.067000389099121
    4. '{
' → logprob: -4.942000389099121
    5. ':' → logprob: -5.317000389099121
    6. '{' → logprob: -7.817000389099121
    7. '   ' → logprob: -7.942000389099121
    8. '          ' → logprob: -8.317000389099121
    9. '       ' → logprob: -8.567000389099121
    10. 'e' → logprob: -8.817000389099121

Token 1918: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004311460361350328
    2. 'h' → logprob: -9.125431060791016
    3. '{
' → logprob: -9.125431060791016
    4. '   ' → logprob: -9.250431060791016
    5. '{' → logprob: -9.500431060791016
    6. '[' → logprob: -10.875431060791016
    7. '       ' → logprob: -12.000431060791016
    8. ' ' → logprob: -12.875431060791016
    9. '          ' → logprob: -12.875431060791016
    10. 'e' → logprob: -13.125431060791016

Token 1919: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' (adapté à ' h') → logprob: -0.03065633401274681
    2. '           ' → logprob: -3.530656337738037
    3. '   ' → logprob: -7.280656337738037
    4. '       ' → logprob: -8.905655860900879
    5. ' h' → logprob: -9.655655860900879
    6. ' ' → logprob: -12.655655860900879
    7. '{
' → logprob: -13.155655860900879
    8. '{' → logprob: -13.405655860900879
    9. 'e' → logprob: -13.405655860900879
    10. '	h' → logprob: -13.405655860900879

Token 1920: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.0005194319528527558
    2. '[' → logprob: -8.000519752502441
    3. 'add' → logprob: -9.000519752502441
    4. '{
' → logprob: -10.625519752502441
    5. '{' → logprob: -10.875519752502441
    6. '0' → logprob: -12.250519752502441
    7. 'for' → logprob: -13.000519752502441
    8. '_set' → logprob: -13.125519752502441
    9. 'et' → logprob: -13.375519752502441
    10. '   ' → logprob: -13.375519752502441

Token 1921: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0003718046355061233
    2. '.' → logprob: -8.000371932983398
    3. 'add' → logprob: -10.875371932983398
    4. '           ' → logprob: -11.000371932983398
    5. '       ' → logprob: -15.500371932983398
    6. '{' → logprob: -15.625371932983398
    7. ' .' → logprob: -16.0003719329834
    8. 'e' → logprob: -17.0003719329834
    9. '   ' → logprob: -17.2503719329834
    10. '[' → logprob: -17.2503719329834

Token 1922: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.0011715330183506012
    2. 'e' → logprob: -6.751171588897705
    3. ' (' → logprob: -14.626171112060547
    4. '           ' → logprob: -14.876171112060547
    5. '   ' → logprob: -15.001171112060547
    6. ' e' → logprob: -16.376171112060547
    7. '[e' → logprob: -17.376171112060547
    8. '       ' → logprob: -17.501171112060547
    9. '(' → logprob: -17.876171112060547
    10. '((' → logprob: -18.626171112060547

Token 1923: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00287489197216928
    2. '(' → logprob: -5.877874851226807
    3. '0' → logprob: -10.252875328063965
    4. '   ' → logprob: -11.502875328063965
    5. 'e' → logprob: -12.252875328063965
    6. '#' → logprob: -12.627875328063965
    7. ' (' → logprob: -12.752875328063965
    8. '{' → logprob: -12.752875328063965
    9. '       ' → logprob: -13.127875328063965
    10. '           ' → logprob: -13.502875328063965

Token 1924: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.3213025744771585e-05
    2. '[' → logprob: -10.375033378601074
    3. '(' → logprob: -13.625033378601074
    4. '1' → logprob: -14.875033378601074
    5. ' ' → logprob: -15.750033378601074
    6. '   ' → logprob: -16.125032424926758
    7. 'e' → logprob: -16.875032424926758
    8. '#' → logprob: -17.562532424926758
    9. '۰' → logprob: -17.937532424926758
    10. '00' → logprob: -18.437532424926758

Token 1925: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.3438327843905427e-05
    2. '][' → logprob: -11.62502384185791
    3. '0' → logprob: -12.00002384185791
    4. '(' → logprob: -13.12502384185791
    5. '<|end|>' → logprob: -13.50002384185791
    6. ')[' → logprob: -13.75002384185791
    7. '```' → logprob: -14.25002384185791
    8. ''][' → logprob: -14.50002384185791
    9. '()[' → logprob: -14.87502384185791
    10. 'def' → logprob: -15.25002384185791

Token 1926: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00030185774085111916
    2. '[' → logprob: -8.1253023147583
    3. '1' → logprob: -13.0003023147583
    4. '
' → logprob: -14.2503023147583
    5. '```' → logprob: -14.3753023147583
    6. ' ' → logprob: -14.5003023147583
    7. '(' → logprob: -14.5003023147583
    8. '   ' → logprob: -14.8753023147583
    9. 'e' → logprob: -16.250301361083984
    10. '#' → logprob: -16.687801361083984

Token 1927: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.045391201972961426
    2. '           ' → logprob: -3.545391082763672
    3. ')' → logprob: -4.170391082763672
    4. ')e' → logprob: -10.545391082763672
    5. ')
' → logprob: -11.045391082763672
    6. '[' → logprob: -12.420391082763672
    7. 'e' → logprob: -12.420391082763672
    8. '       ' → logprob: -12.420391082763672
    9. '   ' → logprob: -12.670391082763672
    10. '())
' → logprob: -13.045391082763672

Token 1928: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.7968066206085496e-05
    2. '       ' → logprob: -11.375027656555176
    3. '   ' → logprob: -11.625027656555176
    4. '               ' → logprob: -13.500027656555176
    5. '          ' → logprob: -13.500027656555176
    6. 'e' → logprob: -14.000027656555176
    7. '```' → logprob: -14.125027656555176
    8. 'and' → logprob: -14.375027656555176
    9. '         ' → logprob: -14.500027656555176
    10. '            ' → logprob: -14.875027656555176

Token 1929: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.002534044673666358
    2. ' v' → logprob: -6.002533912658691
    3. '           ' → logprob: -9.752533912658691
    4. '          ' → logprob: -16.252534866333008
    5. '            ' → logprob: -16.377534866333008
    6. '       ' → logprob: -18.252534866333008
    7. '               ' → logprob: -18.377534866333008
    8. '	v' → logprob: -18.502534866333008
    9. '         ' → logprob: -18.752534866333008
    10. '             ' → logprob: -19.502534866333008

Token 1930: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -2.45848218582978e-06
    2. 'e' → logprob: -13.75000286102295
    3. 's' → logprob: -13.75000286102295
    4. '[' → logprob: -16.625001907348633
    5. '(set' → logprob: -17.500001907348633
    6. '{' → logprob: -17.500001907348633
    7. '```' → logprob: -17.625001907348633
    8. '(' → logprob: -17.750001907348633
    9. ' set' → logprob: -18.000001907348633
    10. 'sets' → logprob: -18.125001907348633

Token 1931: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.00014084660506341606
    2. 'add' → logprob: -9.125141143798828
    3. '.' → logprob: -10.375141143798828
    4. '```' → logprob: -15.875141143798828
    5. '           ' → logprob: -16.250141143798828
    6. ' .' → logprob: -16.250141143798828
    7. '(add' → logprob: -16.375141143798828
    8. 'Adding' → logprob: -16.875141143798828
    9. '.Add' → logprob: -17.500141143798828
    10. '
' → logprob: -17.625141143798828

Token 1932: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -1.9623810658231378e-05
    2. 'e' → logprob: -10.875020027160645
    3. '[e' → logprob: -15.000020027160645
    4. '(' → logprob: -15.625020027160645
    5. ' (' → logprob: -16.125019073486328
    6. '#' → logprob: -18.125019073486328
    7. '{' → logprob: -18.375019073486328
    8. '```' → logprob: -18.625019073486328
    9. '((' → logprob: -18.875019073486328
    10. '(
' → logprob: -19.000019073486328

Token 1933: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.11586331576108932
    2. '1' → logprob: -2.24086332321167
    3. '(' → logprob: -6.36586332321167
    4. 'e' → logprob: -7.36586332321167
    5. '{' → logprob: -7.99086332321167
    6. '(e' → logprob: -8.865862846374512
    7. '{
' → logprob: -9.865862846374512
    8. '0' → logprob: -9.865862846374512
    9. '   ' → logprob: -11.115862846374512
    10. '[
' → logprob: -11.115862846374512

Token 1934: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008072483469732106
    2. '1' → logprob: -7.875807285308838
    3. '[' → logprob: -8.25080680847168
    4. '(' → logprob: -8.75080680847168
    5. 'e' → logprob: -12.50080680847168
    6. '{' → logprob: -13.12580680847168
    7. ' ' → logprob: -14.62580680847168
    8. '(e' → logprob: -14.75080680847168
    9. '   ' → logprob: -15.00080680847168
    10. '
' → logprob: -15.25080680847168

Token 1935: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.957014556974173e-05
    2. '][' → logprob: -10.375069618225098
    3. '1' → logprob: -11.000069618225098
    4. 'e' → logprob: -12.125069618225098
    5. '(' → logprob: -12.250069618225098
    6. 'def' → logprob: -13.250069618225098
    7. '```' → logprob: -13.750069618225098
    8. '
' → logprob: -13.875069618225098
    9. 'import' → logprob: -14.125069618225098
    10. '{' → logprob: -14.125069618225098

Token 1936: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.061054359131958e-06
    2. '0' → logprob: -12.375007629394531
    3. '[' → logprob: -12.625007629394531
    4. '(' → logprob: -15.625007629394531
    5. '```' → logprob: -16.62500762939453
    6. 'e' → logprob: -16.87500762939453
    7. '
' → logprob: -17.50000762939453
    8. '   ' → logprob: -17.81250762939453
    9. '(e' → logprob: -18.06250762939453
    10. '１' → logprob: -18.68750762939453

Token 1937: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4510461390018463
    2. '           ' → logprob: -1.076046109199524
    3. ')' → logprob: -3.8260462284088135
    4. '       ' → logprob: -9.701045989990234
    5. '),' → logprob: -10.201045989990234
    6. ')e' → logprob: -10.326045989990234
    7. '```' → logprob: -10.701045989990234
    8. '   ' → logprob: -10.826045989990234
    9. 'e' → logprob: -10.951045989990234
    10. '                   ' → logprob: -11.201045989990234

Token 1938: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.955703818472102e-05
    2. '```' → logprob: -10.125059127807617
    3. 'for' → logprob: -11.375059127807617
    4. 'h' → logprob: -13.125059127807617
    5. '       ' → logprob: -13.125059127807617
    6. '   ' → logprob: -13.375059127807617
    7. '``' → logprob: -14.125059127807617
    8. '          ' → logprob: -15.000059127807617
    9. '               ' → logprob: -15.125059127807617
    10. '<|end|>' → logprob: -15.125059127807617

Token 1939: ' h' (ID: 312)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02268066816031933
    2. 'v' → logprob: -4.147680759429932
    3. 'h' (adapté à ' h') → logprob: -5.522680759429932
    4. 'e' → logprob: -6.022680759429932
    5. ' v' → logprob: -9.272680282592773
    6. ' e' → logprob: -10.522680282592773
    7. '       ' → logprob: -11.022680282592773
    8. '          ' → logprob: -11.022680282592773
    9. '   ' → logprob: -11.272680282592773
    10. '(v' → logprob: -11.772680282592773

Token 1940: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -17.25
    3. 'et' → logprob: -17.75
    4. '_set' → logprob: -17.875
    5. 's' → logprob: -18.25
    6. '       ' → logprob: -18.5
    7. '   ' → logprob: -18.5
    8. 'for' → logprob: -18.625
    9. '.set' → logprob: -19.25
    10. ' set' → logprob: -19.375

Token 1941: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0009417156688869
    2. '.' → logprob: -7.000941753387451
    3. 'add' → logprob: -11.125941276550293
    4. '           ' → logprob: -11.125941276550293
    5. ' .' → logprob: -15.125941276550293
    6. '.Add' → logprob: -16.25094223022461
    7. '       ' → logprob: -16.75094223022461
    8. '   ' → logprob: -17.37594223022461
    9. '{' → logprob: -17.50094223022461
    10. 'e' → logprob: -17.50094223022461

Token 1942: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -2.1008713702030946e-06
    2. 'e' → logprob: -13.125001907348633
    3. '(' → logprob: -17.625001907348633
    4. ' (' → logprob: -17.750001907348633
    5. '   ' → logprob: -18.750001907348633
    6. '((' → logprob: -19.375001907348633
    7. '(
' → logprob: -19.625001907348633
    8. '           ' → logprob: -19.750001907348633
    9. '```' → logprob: -20.250001907348633
    10. '#' → logprob: -20.375001907348633

Token 1943: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0014974836958572268
    2. '(' → logprob: -6.751497268676758
    3. '1' → logprob: -8.126497268676758
    4. '{' → logprob: -11.501497268676758
    5. 'e' → logprob: -12.126497268676758
    6. '   ' → logprob: -12.126497268676758
    7. ' (' → logprob: -12.626497268676758
    8. '[
' → logprob: -13.001497268676758
    9. 'def' → logprob: -13.876497268676758
    10. ' [' → logprob: -14.251497268676758

Token 1944: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017004783148877323
    2. '(' → logprob: -9.37516975402832
    3. 'e' → logprob: -9.62516975402832
    4. '0' → logprob: -11.75016975402832
    5. '[' → logprob: -12.00016975402832
    6. '(e' → logprob: -12.50016975402832
    7. ' ' → logprob: -15.50016975402832
    8. '{' → logprob: -15.50016975402832
    9. '   ' → logprob: -15.62516975402832
    10. '```' → logprob: -15.62516975402832

Token 1945: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0001552665780764073
    2. '(' → logprob: -8.875155448913574
    3. 'e' → logprob: -11.625155448913574
    4. '][' → logprob: -12.375155448913574
    5. '(e' → logprob: -14.125155448913574
    6. '```' → logprob: -14.625155448913574
    7. '[e' → logprob: -15.500155448913574
    8. '...' → logprob: -16.000154495239258
    9. 'def' → logprob: -16.250154495239258
    10. ' (' → logprob: -16.250154495239258

Token 1946: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.47645899653434753
    2. '1' → logprob: -0.9764590263366699
    3. '[' → logprob: -6.72645902633667
    4. '(' → logprob: -7.35145902633667
    5. 'e' → logprob: -7.60145902633667
    6. '```' → logprob: -10.976458549499512
    7. '(e' → logprob: -11.726458549499512
    8. ' ' → logprob: -12.601458549499512
    9. '
' → logprob: -12.976458549499512
    10. '   ' → logprob: -13.226458549499512

Token 1947: '])
' (ID: 5169)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.020604368299245834
    2. '][' → logprob: -4.270604133605957
    3. '           ' → logprob: -5.645604133605957
    4. ')
' → logprob: -6.770604133605957
    5. ')[' → logprob: -7.645604133605957
    6. '(' → logprob: -8.270604133605957
    7. ')' → logprob: -8.270604133605957
    8. 'e' → logprob: -8.270604133605957
    9. ',' → logprob: -8.895604133605957
    10. 'def' → logprob: -9.395604133605957

Token 1948: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008155853138305247
    2. '```' → logprob: -8.125815391540527
    3. '       ' → logprob: -8.625815391540527
    4. '          ' → logprob: -9.500815391540527
    5. 'v' → logprob: -9.625815391540527
    6. '(v' → logprob: -10.000815391540527
    7. '   ' → logprob: -10.125815391540527
    8. '(e' → logprob: -10.500815391540527
    9. '``' → logprob: -10.875815391540527
    10. 'e' → logprob: -11.375815391540527

Token 1949: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.5969763398170471
    2. '           ' → logprob: -0.8469763398170471
    3. 'e' → logprob: -3.9719762802124023
    4. ' v' → logprob: -6.971976280212402
    5. '          ' → logprob: -8.346976280212402
    6. '               ' → logprob: -8.471976280212402
    7. '            ' → logprob: -8.971976280212402
    8. '(v' → logprob: -8.971976280212402
    9. ' e' → logprob: -9.096976280212402
    10. '(e' → logprob: -9.971976280212402

Token 1950: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -1.3856492842023727e-06
    2. '_set' → logprob: -14.125000953674316
    3. 'add' → logprob: -14.750000953674316
    4. 's' → logprob: -16.375001907348633
    5. '[' → logprob: -17.250001907348633
    6. '=set' → logprob: -17.375001907348633
    7. 'e' → logprob: -17.500001907348633
    8. ' set' → logprob: -17.750001907348633
    9. 'et' → logprob: -18.000001907348633
    10. 'sets' → logprob: -18.500001907348633

Token 1951: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0008203497272916138
    2. 'add' → logprob: -7.125820159912109
    3. '.' → logprob: -11.25082015991211
    4. '           ' → logprob: -13.12582015991211
    5. '[' → logprob: -15.25082015991211
    6. '```' → logprob: -15.50082015991211
    7. '       ' → logprob: -16.37582015991211
    8. '
' → logprob: -16.50082015991211
    9. '_add' → logprob: -16.50082015991211
    10. ' .' → logprob: -16.50082015991211

Token 1952: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -3.5597102396423e-05
    2. 'e' → logprob: -10.250035285949707
    3. ' (' → logprob: -16.375036239624023
    4. '           ' → logprob: -16.375036239624023
    5. '[e' → logprob: -17.000036239624023
    6. '   ' → logprob: -18.375036239624023
    7. ' e' → logprob: -19.500036239624023
    8. '       ' → logprob: -19.625036239624023
    9. '(' → logprob: -19.750036239624023
    10. '               ' → logprob: -20.125036239624023

Token 1953: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.006360539235174656
    2. '{' → logprob: -5.7563605308532715
    3. 'e' → logprob: -6.1313605308532715
    4. '(' → logprob: -7.3813605308532715
    5. '.add' → logprob: -8.38136100769043
    6. '(e' → logprob: -10.00636100769043
    7. '[e' → logprob: -10.00636100769043
    8. 'add' → logprob: -10.50636100769043
    9. '{
' → logprob: -12.00636100769043
    10. '
' → logprob: -12.38136100769043

Token 1954: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005996193503960967
    2. '[' → logprob: -7.500599384307861
    3. 'e' → logprob: -10.75059986114502
    4. '(' → logprob: -10.87559986114502
    5. '0' → logprob: -13.00059986114502
    6. '{' → logprob: -13.25059986114502
    7. '   ' → logprob: -14.37559986114502
    8. '(e' → logprob: -14.62559986114502
    9. '
' → logprob: -15.25059986114502
    10. ' ' → logprob: -15.50059986114502

Token 1955: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.11576489359140396
    2. '1' → logprob: -2.240764856338501
    3. '(' → logprob: -5.86576509475708
    4. 'e' → logprob: -10.990764617919922
    5. '   ' → logprob: -11.490764617919922
    6. '
' → logprob: -11.615764617919922
    7. ']' → logprob: -11.865764617919922
    8. ' [' → logprob: -11.990764617919922
    9. '][' → logprob: -12.115764617919922
    10. '```' → logprob: -12.115764617919922

Token 1956: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.9153885558771435e-06
    2. '[' → logprob: -12.625005722045898
    3. 'e' → logprob: -14.250005722045898
    4. '(' → logprob: -14.250005722045898
    5. '0' → logprob: -14.875005722045898
    6. '{' → logprob: -15.500005722045898
    7. '(e' → logprob: -15.875005722045898
    8. '   ' → logprob: -15.937505722045898
    9. '
' → logprob: -16.1250057220459
    10. '```' → logprob: -16.5000057220459

Token 1957: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.36610281467437744
    2. '       ' → logprob: -1.3661028146743774
    3. ')' → logprob: -2.991102695465088
    4. '())
' → logprob: -7.991102695465088
    5. '```' → logprob: -8.491103172302246
    6. '()
' → logprob: -8.866103172302246
    7. '#' → logprob: -8.866103172302246
    8. '()' → logprob: -8.991103172302246
    9. '   ' → logprob: -9.741103172302246
    10. '<|end|>' → logprob: -9.991103172302246

Token 1958: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011427860707044601
    2. 'h' → logprob: -4.636427879333496
    3. ' h' → logprob: -7.011427879333496
    4. '```' → logprob: -7.886427879333496
    5. '
' → logprob: -8.136427879333496
    6. '   ' → logprob: -11.011427879333496
    7. '        
' → logprob: -11.136427879333496
    8. '	h' → logprob: -11.136427879333496
    9. 'import' → logprob: -11.761427879333496
    10. ',h' → logprob: -11.761427879333496

Token 1959: ' #' (ID: 1069)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.01426046621054411
    2. '       ' → logprob: -4.264260292053223
    3. ' h' → logprob: -9.639260292053223
    4. '	h' → logprob: -11.639260292053223
    5. '   ' → logprob: -11.889260292053223
    6. '```' → logprob: -12.139260292053223
    7. 'hs' → logprob: -12.639260292053223
    8. ' ' → logprob: -13.139260292053223
    9. '
' → logprob: -13.389260292053223
    10. '_h' → logprob: -13.764260292053223

Token 1960: ' make' (ID: 1520)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -2.6060808522743173e-05
    2. '       ' → logprob: -11.125025749206543
    3. ' h' → logprob: -11.750025749206543
    4. '   ' → logprob: -13.625025749206543
    5. 'hl' → logprob: -14.375025749206543
    6. '#' → logprob: -14.750025749206543
    7. 'def' → logprob: -14.875025749206543
    8. '
' → logprob: -15.000025749206543
    9. 'import' → logprob: -15.625025749206543
    10. '	h' → logprob: -16.00002670288086

Token 1961: ' sure' (ID: 3239)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.00010843054042197764
    2. ' h' → logprob: -9.37510871887207
    3. '```' → logprob: -12.00010871887207
    4. 'sorted' → logprob: -12.25010871887207
    5. '       ' → logprob: -13.00010871887207
    6. '
' → logprob: -13.00010871887207
    7. '   ' → logprob: -13.12510871887207
    8. 'hl' → logprob: -13.12510871887207
    9. 'list' → logprob: -13.75010871887207
    10. '#' → logprob: -14.37510871887207

Token 1962: ' to' (ID: 316)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -6.0033853515051305e-05
    2. ' h' → logprob: -10.625060081481934
    3. 'v' → logprob: -11.000060081481934
    4. 'hl' → logprob: -11.750060081481934
    5. '       ' → logprob: -12.625060081481934
    6. '
' → logprob: -12.875060081481934
    7. 'hs' → logprob: -13.500060081481934
    8. '   ' → logprob: -14.375060081481934
    9. 'hv' → logprob: -14.500060081481934
    10. '#' → logprob: -14.875060081481934

Token 1963: ' add' (ID: 1147)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.001112712430767715
    2. ' h' → logprob: -6.876112937927246
    3. 'add' → logprob: -10.376112937927246
    4. ' add' → logprob: -11.751112937927246
    5. '#' → logprob: -12.501112937927246
    6. 'continue' → logprob: -12.501112937927246
    7. '   ' → logprob: -12.626112937927246
    8. 'sort' → logprob: -12.751112937927246
    9. '_h' → logprob: -12.751112937927246
    10. 'hl' → logprob: -13.001112937927246

Token 1964: ' all' (ID: 722)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.47221118211746216
    2. 'all' → logprob: -1.3472111225128174
    3. 'for' → logprob: -2.5972111225128174
    4. ' all' → logprob: -4.3472113609313965
    5. 'v' → logprob: -4.4722113609313965
    6. 'max' → logprob: -5.8472113609313965
    7. 'list' → logprob: -5.8472113609313965
    8. 'sorted' → logprob: -5.8472113609313965
    9. ' for' → logprob: -6.4722113609313965
    10. ' h' → logprob: -6.7222113609313965

Token 1965: ' intersections' (ID: 143513)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.1846463531255722
    2. 'for' → logprob: -3.1846463680267334
    3. 'v' → logprob: -3.3096463680267334
    4. 'letters' → logprob: -3.9346463680267334
    5. 'from' → logprob: -4.434646129608154
    6. 'possible' → logprob: -4.809646129608154
    7. 'sorted' → logprob: -5.184646129608154
    8. '#' → logprob: -5.434646129608154
    9. 'needed' → logprob: -5.684646129608154
    10. ' for' → logprob: -6.059646129608154

Token 1966: ' in' (ID: 306)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0594608373939991
    2. 'for' → logprob: -3.4344608783721924
    3. ' =' → logprob: -4.309460639953613
    4. '
' → logprob: -5.434460639953613
    5. '       ' → logprob: -6.059460639953613
    6. 'import' → logprob: -7.309460639953613
    7. 'from' → logprob: -7.434460639953613
    8. '=' → logprob: -7.434460639953613
    9. '.update' → logprob: -7.684460639953613
    10. ' for' → logprob: -7.684460639953613

Token 1967: ' grid' (ID: 10586)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.002690628869459033
    2. 'the' → logprob: -6.75269079208374
    3. 'sorted' → logprob: -7.50269079208374
    4. ' h' → logprob: -8.252690315246582
    5. 'order' → logprob: -8.377690315246582
    6. 'range' → logprob: -9.002690315246582
    7. 'both' → logprob: -9.127690315246582
    8. 'list' → logprob: -9.627690315246582
    9. '```' → logprob: -10.377690315246582
    10. 'all' → logprob: -10.627690315246582

Token 1968: ':
' (ID: 734)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2829012870788574
    2. 'h' → logprob: -1.5329012870788574
    3. '       ' → logprob: -3.6579012870788574
    4. '
' → logprob: -5.782901287078857
    5. 'while' → logprob: -7.532901287078857
    6. ' for' → logprob: -8.282901763916016
    7. '#' → logprob: -8.532901763916016
    8. '(h' → logprob: -8.907901763916016
    9. 'from' → logprob: -9.032901763916016
    10. ' =' → logprob: -9.532901763916016

Token 1969: '       ' (ID: 309)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.6275602579116821
    2. 'for' → logprob: -1.2525602579116821
    3. '       ' → logprob: -2.0025601387023926
    4. '
' → logprob: -3.2525601387023926
    5. ' for' → logprob: -5.252560138702393
    6. ' h' → logprob: -7.752560138702393
    7. '```' → logprob: -8.37756061553955
    8. ',h' → logprob: -9.00256061553955
    9. '_h' → logprob: -9.25256061553955
    10. '#' → logprob: -9.25256061553955

Token 1970: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09238110482692719
    2. 'h' → logprob: -2.467381000518799
    3. '       ' → logprob: -5.842381000518799
    4. ' for' → logprob: -7.967381000518799
    5. '
' → logprob: -9.467381477355957
    6. '#' (adapté à ' #') → logprob: -10.217381477355957
    7. 'while' → logprob: -10.717381477355957
    8. '```' → logprob: -10.842381477355957
    9. ' h' → logprob: -11.967381477355957
    10. 'import' → logprob: -12.342381477355957

Token 1971: ' h' (ID: 312)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1157466247677803
    2. 'h' → logprob: -2.2407467365264893
    3. '       ' → logprob: -5.99074649810791
    4. ' for' → logprob: -8.24074649810791
    5. '#' → logprob: -10.24074649810791
    6. '
' → logprob: -10.36574649810791
    7. 'import' → logprob: -10.74074649810791
    8. 'while' → logprob: -10.86574649810791
    9. ' h' → logprob: -11.11574649810791
    10. '```' → logprob: -11.99074649810791

Token 1972: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0541867017745972
    2. '=' → logprob: -1.5541867017745972
    3. 'list' → logprob: -1.8041867017745972
    4. '.update' → logprob: -1.8041867017745972
    5. '.add' → logprob: -2.4291868209838867
    6. 'set' → logprob: -4.554186820983887
    7. '.' → logprob: -5.929186820983887
    8. '=set' → logprob: -5.929186820983887
    9. '_list' → logprob: -6.179186820983887
    10. '=list' → logprob: -6.804186820983887

Token 1973: ' a' (ID: 261)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.06069999560713768
    2. 'for' → logprob: -2.935699939727783
    3. ' h' → logprob: -5.685699939727783
    4. ' for' → logprob: -6.810699939727783
    5. '[h' → logprob: -7.310699939727783
    6. 'import' → logprob: -8.310700416564941
    7. 'sorted' → logprob: -9.435700416564941
    8. ' =' → logprob: -9.560700416564941
    9. '       ' → logprob: -9.560700416564941
    10. '   ' → logprob: -10.185700416564941

Token 1974: ',b' (ID: 17568)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.093770980834961
    2. '=' → logprob: -1.218770980834961
    3. 'to' → logprob: -1.343770980834961
    4. 'for' → logprob: -2.843770980834961
    5. ' to' → logprob: -4.343770980834961
    6. '
' → logprob: -4.843770980834961
    7. 'from' → logprob: -5.343770980834961
    8. '-z' → logprob: -5.343770980834961
    9. '..' → logprob: -6.093770980834961
    10. '#' → logprob: -6.093770980834961

Token 1975: ',...' (ID: 35229)
  Prédit: ',c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.3461242616176605
    2. ',h' → logprob: -2.2211241722106934
    3. ',' → logprob: -2.8461241722106934
    4. '
' → logprob: -3.0961241722106934
    5. ',b' → logprob: -3.2211241722106934
    6. 'c' → logprob: -4.346124172210693
    7. ',
' → logprob: -4.346124172210693
    8. '   ' → logprob: -5.596124172210693
    9. '       ' → logprob: -6.221124172210693
    10. 'h' → logprob: -6.721124172210693

Token 1976: ' length' (ID: 5517)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8594003915786743
    2. 'h' → logprob: -1.7344003915786743
    3. '
' → logprob: -1.7344003915786743
    4. ',h' → logprob: -2.3594002723693848
    5. ',' → logprob: -2.9844002723693848
    6. '       ' → logprob: -3.4844002723693848
    7. ' =' → logprob: -4.609400272369385
    8. '#' → logprob: -4.734400272369385
    9. '```' → logprob: -4.984400272369385
    10. ',
' → logprob: -5.859400272369385

Token 1977: ' M' (ID: 391)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5585935115814209
    2. ' =' → logprob: -0.9335935115814209
    3. ',' → logprob: -5.43359375
    4. '.append' → logprob: -5.43359375
    5. '=list' → logprob: -5.43359375
    6. '
' → logprob: -5.55859375
    7. '```' → logprob: -5.55859375
    8. '=[]
' → logprob: -6.18359375
    9. '+=' → logprob: -6.68359375
    10. '=h' → logprob: -6.80859375

Token 1978: '
' (ID: 198)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0018354683415964246
    2. '       ' → logprob: -7.126835346221924
    3. ',h' → logprob: -7.376835346221924
    4. 'for' → logprob: -9.001835823059082
    5. '
' → logprob: -9.376835823059082
    6. ',' → logprob: -9.501835823059082
    7. ' h' → logprob: -10.001835823059082
    8. 'import' → logprob: -10.876835823059082
    9. '```' → logprob: -10.876835823059082
    10. ' =' → logprob: -11.251835823059082

Token 1979: '       ' (ID: 309)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.18305332958698273
    2. 'for' → logprob: -2.0580532550811768
    3. '       ' → logprob: -3.3080532550811768
    4. '
' → logprob: -6.308053493499756
    5. ' for' → logprob: -8.058053016662598
    6. '```' → logprob: -8.433053016662598
    7. ' h' → logprob: -8.558053016662598
    8. 'while' → logprob: -8.558053016662598
    9. '_h' → logprob: -9.808053016662598
    10. ',h' → logprob: -9.808053016662598

Token 1980: ' #' (ID: 1069)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.003051742911338806
    2. '       ' → logprob: -5.8780517578125
    3. ' h' → logprob: -8.5030517578125
    4. '
' → logprob: -11.1280517578125
    5. 'for' → logprob: -11.1280517578125
    6. '```' → logprob: -12.2530517578125
    7. '#' (adapté à ' #') → logprob: -13.1280517578125
    8. ' for' → logprob: -13.3780517578125
    9. ',h' → logprob: -13.3780517578125
    10. '_h' → logprob: -13.5030517578125

Token 1981: ' v' (ID: 323)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.06885918974876404
    2. 'v' → logprob: -3.068859100341797
    3. 'for' → logprob: -3.943859100341797
    4. '       ' → logprob: -7.568859100341797
    5. 'while' → logprob: -9.818859100341797
    6. 'import' → logprob: -10.193859100341797
    7. ' h' → logprob: -10.818859100341797
    8. ' for' → logprob: -10.943859100341797
    9. '#' → logprob: -11.068859100341797
    10. ' v' → logprob: -12.068859100341797

Token 1982: ':' (ID: 25)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.7745595574378967
    2. '.update' → logprob: -1.274559497833252
    3. '.add' → logprob: -2.149559497833252
    4. '.' → logprob: -2.649559497833252
    5. '=' → logprob: -3.274559497833252
    6. ' =' → logprob: -3.899559497833252
    7. '=set' → logprob: -4.649559497833252
    8. 'add' → logprob: -6.399559497833252
    9. 'update' → logprob: -7.024559497833252
    10. 'v' → logprob: -7.149559497833252

Token 1983: ' ' (ID: 220)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.14689408242702484
    2. 'for' → logprob: -2.2718939781188965
    3. '[v' → logprob: -4.6468939781188965
    4. ' v' → logprob: -5.0218939781188965
    5. 'sorted' → logprob: -5.5218939781188965
    6. 'h' → logprob: -5.5218939781188965
    7. '[' → logprob: -6.3968939781188965
    8. '['' → logprob: -6.6468939781188965
    9. 'a' → logprob: -6.8968939781188965
    10. '[h' → logprob: -6.8968939781188965

Token 1984: '1' (ID: 16)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.5253809690475464
    2. 'v' → logprob: -1.7753809690475464
    3. '[h' → logprob: -1.9003809690475464
    4. '[' → logprob: -2.775381088256836
    5. 'sorted' → logprob: -4.275381088256836
    6. 'h' → logprob: -4.900381088256836
    7. ' [' → logprob: -6.650381088256836
    8. '[a' → logprob: -6.775381088256836
    9. '['' → logprob: -7.150381088256836
    10. 'for' → logprob: -7.150381088256836

Token 1985: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6496397852897644
    2. ' =' → logprob: -1.5246398448944092
    3. '=set' → logprob: -2.149639844894409
    4. 'set' → logprob: -3.149639844894409
    5. ',' → logprob: -4.27463960647583
    6. 'list' → logprob: -4.27463960647583
    7. '=[]
' → logprob: -4.27463960647583
    8. ',v' → logprob: -4.64963960647583
    9. 'to' → logprob: -4.77463960647583
    10. '=list' → logprob: -4.77463960647583

Token 1986: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5319757461547852
    2. '...' → logprob: -1.7819757461547852
    3. '...,' → logprob: -2.031975746154785
    4. 'range' → logprob: -3.156975746154785
    5. '...
' → logprob: -3.531975746154785
    6. '
' → logprob: -4.281975746154785
    7. '```' → logprob: -5.531975746154785
    8. ',' → logprob: -5.656975746154785
    9. '..' → logprob: -5.656975746154785
    10. '1' → logprob: -5.781975746154785

Token 1987: ',...' (ID: 35229)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5666368007659912
    2. ',' → logprob: -2.316636800765991
    3. 'for' → logprob: -2.441636800765991
    4. ' =' → logprob: -2.566636800765991
    5. '```' → logprob: -2.941636800765991
    6. 'v' → logprob: -3.691636800765991
    7. '       ' → logprob: -3.941636800765991
    8. '#' → logprob: -4.31663703918457
    9. '``' → logprob: -4.44163703918457
    10. 'set' → logprob: -4.81663703918457

Token 1988: ' length' (ID: 5517)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0026623390149325132
    2. '
' → logprob: -6.752662181854248
    3. '       ' → logprob: -7.002662181854248
    4. '```' → logprob: -8.377662658691406
    5. 'for' → logprob: -8.752662658691406
    6. ' =' → logprob: -10.127662658691406
    7. '#' → logprob: -10.377662658691406
    8. ' h' → logprob: -10.377662658691406
    9. 'import' → logprob: -10.627662658691406
    10. '``' → logprob: -11.127662658691406

Token 1989: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0012724967673420906
    2. ' N' → logprob: -7.501272678375244
    3. 'range' → logprob: -7.626272678375244
    4. '   ' → logprob: -9.751272201538086
    5. 'for' → logprob: -10.001272201538086
    6. 'v' → logprob: -10.126272201538086
    7. '```' → logprob: -10.626272201538086
    8. '
' → logprob: -11.376272201538086
    9. ' range' → logprob: -11.626272201538086
    10. 'n' → logprob: -11.751272201538086

Token 1990: '
' (ID: 198)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.00035786881926469505
    2. '       ' → logprob: -8.500357627868652
    3. '
' → logprob: -9.500357627868652
    4. ' h' → logprob: -10.250357627868652
    5. 'import' → logprob: -10.750357627868652
    6. '```' → logprob: -11.000357627868652
    7. '_h' → logprob: -13.375357627868652
    8. ',h' → logprob: -13.500357627868652
    9. '#' → logprob: -14.125357627868652
    10. '(h' → logprob: -14.250357627868652

Token 1991: '       ' (ID: 309)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.002111597452312708
    2. '       ' → logprob: -6.502111434936523
    3. ' h' → logprob: -7.752111434936523
    4. '```' → logprob: -9.002111434936523
    5. '
' → logprob: -10.377111434936523
    6. 'import' → logprob: -11.127111434936523
    7. '_h' → logprob: -12.627111434936523
    8. '``' → logprob: -13.002111434936523
    9. ',h' → logprob: -13.127111434936523
    10. '	h' → logprob: -13.877111434936523

Token 1992: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' (adapté à ' h') → logprob: -0.04520459473133087
    2. '       ' → logprob: -3.1702046394348145
    3. ' h' → logprob: -6.6702046394348145
    4. '
' → logprob: -7.5452046394348145
    5. '```' → logprob: -8.045204162597656
    6. 'import' → logprob: -11.045204162597656
    7. '#' → logprob: -11.295204162597656
    8. '   ' → logprob: -11.420204162597656
    9. '``' → logprob: -11.795204162597656
    10. '	h' → logprob: -11.795204162597656

Token 1993: 'list' (ID: 2641)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.39118248224258423
    2. 'list' → logprob: -1.3911824226379395
    3. ' =' → logprob: -2.6411824226379395
    4. '=list' → logprob: -5.7661824226379395
    5. '_list' → logprob: -7.6411824226379395
    6. '=[]' → logprob: -11.391182899475098
    7. '=[]
' → logprob: -11.516182899475098
    8. 'sorted' → logprob: -11.641182899475098
    9. 'lst' → logprob: -11.766182899475098
    10. '=set' → logprob: -11.766182899475098

Token 1994: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00023810577113181353
    2. ' =' → logprob: -8.375238418579102
    3. '=list' → logprob: -12.000238418579102
    4. '=
' → logprob: -14.250238418579102
    5. '=['' → logprob: -15.250238418579102
    6. '=h' → logprob: -16.3752384185791
    7. '```' → logprob: -16.3752384185791
    8. '=[]
' → logprob: -16.5002384185791
    9. 'sorted' → logprob: -17.0002384185791
    10. '+=' → logprob: -17.5002384185791

Token 1995: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0046013654209673405
    2. ' [' → logprob: -6.00460147857666
    3. '[list' → logprob: -6.25460147857666
    4. 'sorted' → logprob: -9.37960147857666
    5. 'list' → logprob: -9.75460147857666
    6. '[h' → logprob: -10.75460147857666
    7. '[s' → logprob: -12.00460147857666
    8. '[a' → logprob: -12.12960147857666
    9. '[List' → logprob: -12.37960147857666
    10. '[class' → logprob: -13.12960147857666

Token 1996: ' chr' (ID: 42767)
  Prédit: 'chr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chr' → logprob: -0.00014418430509977043
    2. ' chr' → logprob: -8.875144004821777
    3. '(chr' → logprob: -12.375144004821777
    4. ' ' → logprob: -17.000144958496094
    5. '   ' → logprob: -17.250144958496094
    6. '_chr' → logprob: -18.000144958496094
    7. '  ' → logprob: -18.500144958496094
    8. 'Chr' → logprob: -18.500144958496094
    9. 'CHR' → logprob: -19.125144958496094
    10. '       ' → logprob: -19.500144958496094

Token 1997: '(ord' (ID: 199585)
  Prédit: '(ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ord' → logprob: -0.006999047007411718
    2. 'ord' → logprob: -5.8819990158081055
    3. '97' → logprob: -6.0069990158081055
    4. '(' → logprob: -6.3819990158081055
    5. ' ord' → logprob: -10.631999015808105
    6. '`' → logprob: -12.881999015808105
    7. '   ' → logprob: -13.381999015808105
    8. '```' → logprob: -14.131999015808105
    9. '(o' → logprob: -14.506999015808105
    10. '(h' → logprob: -15.131999015808105

Token 1998: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.028236158192157745
    2. ''a' → logprob: -4.028236389160156
    3. ''h' → logprob: -4.653236389160156
    4. 'h' → logprob: -8.653236389160156
    5. 'a' → logprob: -9.528236389160156
    6. '97' → logprob: -9.528236389160156
    7. '(' → logprob: -9.653236389160156
    8. '`' → logprob: -9.778236389160156
    9. ''' → logprob: -10.778236389160156
    10. '(h' → logprob: -10.903236389160156

Token 1999: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.000546718598343432
    2. ''a' → logprob: -8.1255464553833
    3. '97' → logprob: -8.5005464553833
    4. '`' → logprob: -10.0005464553833
    5. '```' → logprob: -13.6255464553833
    6. '``' → logprob: -15.7505464553833
    7. '96' → logprob: -16.250547409057617
    8. '('' → logprob: -16.375547409057617
    9. '#a' → logprob: -16.500547409057617
    10. '#' → logprob: -17.000547409057617

Token 2000: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8727118372917175
    2. ')+' → logprob: -1.2477118968963623
    3. '')' → logprob: -1.4977118968963623
    4. '('' → logprob: -2.7477118968963623
    5. 'a' → logprob: -5.622711658477783
    6. '(ord' → logprob: -7.372711658477783
    7. '(a' → logprob: -7.497711658477783
    8. ')+'' → logprob: -7.747711658477783
    9. '```' → logprob: -7.997711658477783
    10. ')+(' → logprob: -8.247712135314941

Token 2001: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05847156047821045
    2. ' +' → logprob: -3.3084716796875
    3. '(ord' → logprob: -4.8084716796875
    4. ')' → logprob: -4.9334716796875
    5. '+i' → logprob: -5.8084716796875
    6. '+a' → logprob: -7.8084716796875
    7. 'a' → logprob: -7.9334716796875
    8. ')+' → logprob: -8.4334716796875
    9. '+x' → logprob: -8.6834716796875
    10. '```' → logprob: -8.6834716796875

Token 2002: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0003729966701939702
    2. 'x' → logprob: -8.125372886657715
    3. ' i' → logprob: -9.625372886657715
    4. '_' → logprob: -12.250372886657715
    5. '0' → logprob: -12.625372886657715
    6. ')' → logprob: -13.500372886657715
    7. '_)' → logprob: -14.750372886657715
    8. 'M' → logprob: -15.500372886657715
    9. '   ' → logprob: -15.875372886657715
    10. '(i' → logprob: -16.25037384033203

Token 2003: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014641974121332169
    2. 'for' → logprob: -4.764641761779785
    3. ' for' → logprob: -5.139641761779785
    4. 'i' → logprob: -9.764641761779785
    5. ' )' → logprob: -10.014641761779785
    6. '[i' → logprob: -11.639641761779785
    7. ' ' → logprob: -11.764641761779785
    8. ' i' → logprob: -12.014641761779785
    9. '	for' → logprob: -12.514641761779785
    10. '   ' → logprob: -12.514641761779785

Token 2004: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.31326746940612793
    2. 'for' → logprob: -1.313267469406128
    3. '   ' → logprob: -12.938267707824707
    4. '	for' → logprob: -12.938267707824707
    5. ')' → logprob: -15.188267707824707
    6. ' ' → logprob: -15.188267707824707
    7. ' i' → logprob: -16.31326675415039
    8. 'i' → logprob: -16.56326675415039
    9. '```' → logprob: -16.81326675415039
    10. '       ' → logprob: -17.93826675415039

Token 2005: ' i' (ID: 575)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.22786156833171844
    2. 'i' → logprob: -1.9778615236282349
    3. ' range' → logprob: -2.7278616428375244
    4. ' i' → logprob: -10.102861404418945
    5. '(range' → logprob: -14.102861404418945
    6. '_range' → logprob: -17.352861404418945
    7. ' ' → logprob: -17.477861404418945
    8. '	range' → logprob: -17.602861404418945
    9. 'in' → logprob: -17.727861404418945
    10. '(i' → logprob: -18.227861404418945

Token 2006: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12740583717823029
    2. 'in' → logprob: -2.127405881881714
    3. 'i' → logprob: -7.877405643463135
    4. 'range' → logprob: -9.877406120300293
    5. ' i' → logprob: -10.377406120300293
    6. ' range' → logprob: -11.377406120300293
    7. 'import' → logprob: -13.002406120300293
    8. '<|end|>' → logprob: -14.502406120300293
    9. ' ' → logprob: -15.127406120300293
    10. ')' → logprob: -15.252406120300293

Token 2007: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00033546582562848926
    2. ' range' → logprob: -8.000335693359375
    3. '(range' → logprob: -18.000335693359375
    4. '	range' → logprob: -20.625335693359375
    5. 'i' → logprob: -21.000335693359375
    6. '_range' → logprob: -22.875335693359375
    7. '.range' → logprob: -23.000335693359375
    8. '
' → logprob: -23.125335693359375
    9. ' xrange' → logprob: -23.375335693359375
    10. '0' → logprob: -23.750335693359375

Token 2008: '(M' (ID: 6103)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.20141683518886566
    2. '(M' → logprob: -1.7014168500900269
    3. ' M' → logprob: -12.826416969299316
    4. '   ' → logprob: -14.951416969299316
    5. '	M' → logprob: -15.576416969299316
    6. '(' → logprob: -16.076416015625
    7. '0' → logprob: -16.201416015625
    8. ',M' → logprob: -16.451416015625
    9. '<M' → logprob: -17.076416015625
    10. ' (' → logprob: -17.326416015625

Token 2009: ')' (ID: 8)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.08712860941886902
    2. ')' → logprob: -2.5871286392211914
    3. ']' → logprob: -4.962128639221191
    4. ')]
' → logprob: -7.587128639221191
    5. ' )' → logprob: -7.712128639221191
    6. ' ]' → logprob: -8.462128639221191
    7. '   ' → logprob: -10.587128639221191
    8. ']
' → logprob: -12.087128639221191
    9. ' ]
' → logprob: -13.587128639221191
    10. ')
' → logprob: -13.712128639221191

Token 2010: ' ]
' (ID: 10213)
  Prédit: ']
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.033312998712062836
    2. ']' → logprob: -3.533313035964966
    3. 'v' → logprob: -6.033312797546387
    4. ' ]
' → logprob: -7.283312797546387
    5. '       ' → logprob: -8.408312797546387
    6. ' v' → logprob: -8.908312797546387
    7. '   ' → logprob: -9.658312797546387
    8. ' ]' → logprob: -10.033312797546387
    9. ']
' → logprob: -12.533312797546387
    10. ',v' → logprob: -14.658312797546387

Token 2011: '       ' (ID: 309)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.10109003633260727
    2. '       ' → logprob: -2.6010899543762207
    3. ' v' → logprob: -3.8510899543762207
    4. '   ' → logprob: -7.351089954376221
    5. '```' → logprob: -10.351090431213379
    6. '	v' → logprob: -10.976090431213379
    7. '           ' → logprob: -12.476090431213379
    8. '.v' → logprob: -13.976090431213379
    9. ',v' → logprob: -14.101090431213379
    10. '_v' → logprob: -14.351090431213379

Token 2012: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.0001625379954930395
    2. '       ' → logprob: -8.750162124633789
    3. ' v' → logprob: -12.750162124633789
    4. '   ' → logprob: -13.750162124633789
    5. '           ' → logprob: -17.87516212463379
    6. '```' → logprob: -19.25016212463379
    7. '      ' → logprob: -19.37516212463379
    8. '	v' → logprob: -19.62516212463379
    9. '     ' → logprob: -19.75016212463379
    10. ' ' → logprob: -20.12516212463379

Token 2013: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -2.5776860184123507e-06
    2. 'ist' → logprob: -13.00000286102295
    3. '_list' → logprob: -15.25000286102295
    4. ' list' → logprob: -17.000001907348633
    5. 'List' → logprob: -17.750001907348633
    6. ' =' → logprob: -17.875001907348633
    7. 'olist' → logprob: -18.500001907348633
    8. '=' → logprob: -18.875001907348633
    9. 'ilist' → logprob: -19.500001907348633
    10. 'elist' → logprob: -19.625001907348633

Token 2014: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018151231110095978
    2. ' =' → logprob: -4.01815128326416
    3. '=[' → logprob: -13.76815128326416
    4. '=['' → logprob: -15.14315128326416
    5. '[' → logprob: -17.268150329589844
    6. '=
' → logprob: -17.518150329589844
    7. '＝' → logprob: -18.143150329589844
    8. ' =[' → logprob: -18.268150329589844
    9. '=[]' → logprob: -18.393150329589844
    10. '   ' → logprob: -19.768150329589844

Token 2015: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.011258956044912338
    2. ' [' → logprob: -4.511259078979492
    3. '[str' → logprob: -8.511259078979492
    4. '['' → logprob: -12.386259078979492
    5. '   ' → logprob: -12.636259078979492
    6. ' ' → logprob: -13.886259078979492
    7. '[int' → logprob: -15.386259078979492
    8. '[list' → logprob: -15.636259078979492
    9. '[string' → logprob: -15.761259078979492
    10. '  ' → logprob: -15.886259078979492

Token 2016: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.003611474297940731
    2. ' str' → logprob: -5.6286115646362305
    3. 'chr' → logprob: -11.50361156463623
    4. '(str' → logprob: -14.62861156463623
    5. ' chr' → logprob: -15.00361156463623
    6. '[str' → logprob: -15.12861156463623
    7. '	str' → logprob: -16.003610610961914
    8. ' ' → logprob: -16.378610610961914
    9. '   ' → logprob: -16.878610610961914
    10. 'string' → logprob: -18.503610610961914

Token 2017: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.005277514923363924
    2. 'i' → logprob: -5.380277633666992
    3. '(' → logprob: -7.505277633666992
    4. '1' → logprob: -9.755277633666992
    5. '(int' → logprob: -10.130277633666992
    6. 'int' → logprob: -12.005277633666992
    7. '(ord' → logprob: -13.255277633666992
    8. '(y' → logprob: -14.755277633666992
    9. ' (' → logprob: -15.255277633666992
    10. ' i' → logprob: -15.380277633666992

Token 2018: '+' (ID: 10)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.4011586010456085
    2. '(' → logprob: -1.6511585712432861
    3. '+' → logprob: -2.026158571243286
    4. '1' → logprob: -5.401158809661865
    5. 'for' → logprob: -6.276158809661865
    6. ' +' → logprob: -9.151158332824707
    7. '+i' → logprob: -9.151158332824707
    8. ' (' → logprob: -10.026158332824707
    9. 'i' → logprob: -10.151158332824707
    10. ' for' → logprob: -10.526158332824707

Token 2019: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. '(' → logprob: -13.37500286102295
    3. 'i' → logprob: -14.62500286102295
    4. ' ' → logprob: -15.37500286102295
    5. '   ' → logprob: -16.750001907348633
    6. 'for' → logprob: -17.000001907348633
    7. ')' → logprob: -17.000001907348633
    8. '(i' → logprob: -17.125001907348633
    9. '=' → logprob: -18.000001907348633
    10. '`' → logprob: -18.125001907348633

Token 2020: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0082710525020957
    2. '+i' → logprob: -5.133271217346191
    3. '+' → logprob: -7.133271217346191
    4. 'for' → logprob: -7.258271217346191
    5. '(i' → logprob: -7.633271217346191
    6. ' for' → logprob: -8.758271217346191
    7. '   ' → logprob: -9.508271217346191
    8. ' )' → logprob: -9.758271217346191
    9. ' +' → logprob: -10.008271217346191
    10. ' ' → logprob: -12.258271217346191

Token 2021: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6931544542312622
    2. 'for' → logprob: -0.6931544542312622
    3. ')' → logprob: -12.318154335021973
    4. '   ' → logprob: -13.693154335021973
    5. '	for' → logprob: -14.318154335021973
    6. '(i' → logprob: -15.068154335021973
    7. '+' → logprob: -15.818154335021973
    8. ' ' → logprob: -16.19315528869629
    9. 'i' → logprob: -16.19315528869629
    10. '(for' → logprob: -16.31815528869629

Token 2022: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03873738273978233
    2. 'range' → logprob: -3.2887372970581055
    3. ' range' → logprob: -7.5387372970581055
    4. ' i' → logprob: -9.038737297058105
    5. 'in' → logprob: -10.038737297058105
    6. '(i' → logprob: -14.413737297058105
    7. ' in' → logprob: -14.663737297058105
    8. '(range' → logprob: -16.163738250732422
    9. ' ' → logprob: -16.538738250732422
    10. '0' → logprob: -17.788738250732422

Token 2023: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04453248530626297
    2. 'in' → logprob: -3.544532537460327
    3. ' range' → logprob: -4.544532299041748
    4. '(range' → logprob: -5.544532299041748
    5. ' in' → logprob: -9.544532775878906
    6. '(' → logprob: -9.794532775878906
    7. '	range' → logprob: -12.294532775878906
    8. '(i' → logprob: -12.669532775878906
    9. 'i' → logprob: -12.669532775878906
    10. '   ' → logprob: -14.919532775878906

Token 2024: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.676292231422849e-05
    2. ' range' → logprob: -11.000017166137695
    3. '(range' → logprob: -17.375017166137695
    4. '	range' → logprob: -19.875017166137695
    5. '
' → logprob: -22.500017166137695
    6. '.range' → logprob: -23.375017166137695
    7. '_range' → logprob: -23.875017166137695
    8. 'i' → logprob: -23.875017166137695
    9. '   ' → logprob: -24.250017166137695
    10. '```' → logprob: -24.875017166137695

Token 2025: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.02329706959426403
    2. '(N' → logprob: -3.773297071456909
    3. 'range' → logprob: -9.898297309875488
    4. '(' → logprob: -14.523297309875488
    5. ' N' → logprob: -15.148297309875488
    6. '
' → logprob: -15.898297309875488
    7. ' range' → logprob: -16.398296356201172
    8. 'M' → logprob: -16.648296356201172
    9. '   ' → logprob: -16.648296356201172
    10. '{' → logprob: -17.648296356201172

Token 2026: ')' (ID: 8)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2336830049753189
    2. ')]' → logprob: -1.8586829900741577
    3. ')' → logprob: -3.2336831092834473
    4. ' ]' → logprob: -4.358683109283447
    5. '   ' → logprob: -8.733682632446289
    6. ' )' → logprob: -10.108682632446289
    7. '       ' → logprob: -10.233682632446289
    8. ']
' → logprob: -10.358682632446289
    9. '']' → logprob: -11.733682632446289
    10. '`]' → logprob: -11.858682632446289

Token 2027: ' ]

' (ID: 32229)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9567919969558716
    2. '<|end|>' → logprob: -1.0817919969558716
    3. '       ' → logprob: -1.3317919969558716
    4. '<|end|>' → logprob: -5.456791877746582
    5. ')' → logprob: -5.956791877746582
    6. '   ' → logprob: -6.331791877746582
    7. '        
' → logprob: -6.331791877746582
    8. 'def' → logprob: -7.956791877746582
    9. ',' → logprob: -7.956791877746582
    10. '```' → logprob: -8.206791877746582

Token 2028: '       ' (ID: 309)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.1157759353518486
    2. '       ' → logprob: -2.2407758235931396
    3. '```' → logprob: -6.865776062011719
    4. ' graph' → logprob: -6.990776062011719
    5. '#' → logprob: -7.615776062011719
    6. '	graph' → logprob: -8.490776062011719
    7. 'Graph' → logprob: -9.490776062011719
    8. '   ' → logprob: -9.990776062011719
    9. '        
' → logprob: -10.115776062011719
    10. '_graph' → logprob: -10.490776062011719

Token 2029: ' #' (ID: 1069)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -8.709308167453855e-05
    2. '       ' → logprob: -9.500086784362793
    3. ' graph' → logprob: -11.500086784362793
    4. '```' → logprob: -13.750086784362793
    5. '	graph' → logprob: -14.125086784362793
    6. '#' (adapté à ' #') → logprob: -16.75008773803711
    7. 'g' → logprob: -16.87508773803711
    8. '
' → logprob: -17.12508773803711
    9. '(graph' → logprob: -17.37508773803711
    10. 'graphs' → logprob: -17.37508773803711

Token 2030: ' Build' (ID: 10885)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.0005268189124763012
    2. '       ' → logprob: -8.250526428222656
    3. ' graph' → logprob: -8.250526428222656
    4. '	graph' → logprob: -13.125526428222656
    5. '```' → logprob: -13.625526428222656
    6. '   ' → logprob: -15.125526428222656
    7. '(graph' → logprob: -15.625526428222656
    8. 'Graph' → logprob: -15.625526428222656
    9. '_graph' → logprob: -15.750526428222656
    10. '
' → logprob: -16.000526428222656

Token 2031: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.0002627662615850568
    2. ' graph' → logprob: -8.250263214111328
    3. '```' → logprob: -14.125263214111328
    4. '_graph' → logprob: -14.250263214111328
    5. '	graph' → logprob: -16.875263214111328
    6. '       ' → logprob: -16.875263214111328
    7. '(graph' → logprob: -17.375263214111328
    8. '   ' → logprob: -17.750263214111328
    9. 'Graph' → logprob: -18.125263214111328
    10. '``' → logprob: -18.500263214111328

Token 2032: ' adjacency' (ID: 177015)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.20701490342617035
    2. '       ' → logprob: -1.7070149183273315
    3. ' graph' → logprob: -5.207015037536621
    4. '   ' → logprob: -9.707015037536621
    5. '	graph' → logprob: -10.582015037536621
    6. '```' → logprob: -11.082015037536621
    7. '(graph' → logprob: -12.582015037536621
    8. '_graph' → logprob: -13.957015037536621
    9. '        
' → logprob: -15.082015037536621
    10. '``' → logprob: -15.082015037536621

Token 2033: '
' (ID: 198)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.0007524513057433069
    2. '   ' → logprob: -8.000752449035645
    3. ' graph' → logprob: -8.625752449035645
    4. 'list' → logprob: -9.250752449035645
    5. '(graph' → logprob: -9.750752449035645
    6. '       ' → logprob: -10.000752449035645
    7. '=' → logprob: -11.125752449035645
    8. ')' → logprob: -11.875752449035645
    9. '	graph' → logprob: -12.500752449035645
    10. '
' → logprob: -12.625752449035645

Token 2034: '       ' (ID: 309)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.4842265546321869
    2. '   ' → logprob: -0.9842265844345093
    3. 'list' → logprob: -5.234226703643799
    4. ' graph' → logprob: -5.984226703643799
    5. '       ' → logprob: -6.734226703643799
    6. '=' → logprob: -7.984226703643799
    7. '
' → logprob: -8.73422622680664
    8. '_list' → logprob: -8.85922622680664
    9. '(graph' → logprob: -9.10922622680664
    10. ' =' → logprob: -9.23422622680664

Token 2035: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.0001789881061995402
    2. ' graph' → logprob: -8.750179290771484
    3. '       ' → logprob: -11.250179290771484
    4. '   ' → logprob: -11.875179290771484
    5. '	graph' → logprob: -14.500179290771484
    6. '```' → logprob: -16.750179290771484
    7. '(graph' → logprob: -18.125179290771484
    8. '_graph' → logprob: -18.875179290771484
    9. 'g' → logprob: -19.125179290771484
    10. 'Graph' → logprob: -19.375179290771484

Token 2036: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687264919281006
    2. ' =' → logprob: -1.13687264919281
    3. '   ' → logprob: -14.511872291564941
    4. '(graph' → logprob: -15.011872291564941
    5. '=
' → logprob: -15.636872291564941
    6. '[' → logprob: -15.636872291564941
    7. ' =
' → logprob: -16.136873245239258
    8. '=node' → logprob: -16.136873245239258
    9. ')' → logprob: -16.636873245239258
    10. '[node' → logprob: -17.386873245239258

Token 2037: ' build' (ID: 3024)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.005233763717114925
    2. ' build' → logprob: -5.2552337646484375
    3. '(build' → logprob: -17.755233764648438
    4. '   ' → logprob: -19.255233764648438
    5. '	build' → logprob: -19.630233764648438
    6. '_build' → logprob: -21.505233764648438
    7. '.build' → logprob: -21.505233764648438
    8. 'built' → logprob: -22.380233764648438
    9. 'building' → logprob: -22.505233764648438
    10. '       ' → logprob: -22.630233764648438

Token 2038: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -0.020908182486891747
    2. 'graph' → logprob: -4.020908355712891
    3. '(graph' → logprob: -5.895908355712891
    4. '	graph' → logprob: -13.52090835571289
    5. ' graph' → logprob: -13.64590835571289
    6. '\' → logprob: -15.52090835571289
    7. '```' → logprob: -15.52090835571289
    8. 'Graph' → logprob: -15.77090835571289
    9. '_GRAPH' → logprob: -16.02090835571289
    10. '(' → logprob: -16.27090835571289

Token 2039: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -5.512236498361744e-07
    2. 'M' → logprob: -14.875000953674316
    3. ' (' → logprob: -16.0
    4. '(' → logprob: -17.25
    5. '
' → logprob: -18.0
    6. '   ' → logprob: -18.625
    7. '(
' → logprob: -18.75
    8. '```' → logprob: -19.0
    9. '((' → logprob: -19.75
    10. 'def' → logprob: -20.5

Token 2040: ',N' (ID: 49539)
  Prédit: ',N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',N' → logprob: -0.0008504862780682743
    2. ',' → logprob: -7.125850677490234
    3. ' ,' → logprob: -10.250850677490234
    4. 'N' → logprob: -12.000850677490234
    5. ',
' → logprob: -13.375850677490234
    6. '```' → logprob: -13.625850677490234
    7. ',n' → logprob: -14.875850677490234
    8. '(N' → logprob: -15.000850677490234
    9. '   ' → logprob: -15.125850677490234
    10. ',int' → logprob: -15.750850677490234

Token 2041: ',D' (ID: 61507)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4584900438785553
    2. ',N' → logprob: -1.208490014076233
    3. ',h' → logprob: -2.9584901332855225
    4. ',v' → logprob: -4.083489894866943
    5. ' ,' → logprob: -8.958490371704102
    6. '       ' → logprob: -9.833490371704102
    7. '   ' → logprob: -9.833490371704102
    8. 'graph' → logprob: -10.208490371704102
    9. ',H' → logprob: -10.208490371704102
    10. ',
' → logprob: -10.958490371704102

Token 2042: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.5014188799541444e-05
    2. 'signals' → logprob: -10.375044822692871
    3. ',
' → logprob: -11.500044822692871
    4. ' ,' → logprob: -12.875044822692871
    5. '           ' → logprob: -15.625044822692871
    6. 'sign' → logprob: -15.750044822692871
    7. '```' → logprob: -16.000045776367188
    8. '   ' → logprob: -16.000045776367188
    9. '       ' → logprob: -16.625045776367188
    10. '_sign' → logprob: -16.750045776367188

Token 2043: 'signals' (ID: 163922)
  Prédit: 'signals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'signals' → logprob: -4.127333340875339e-06
    2. ' signals' → logprob: -12.500003814697266
    3. 'sign' → logprob: -16.000003814697266
    4. '
' → logprob: -16.375003814697266
    5. '```' → logprob: -16.875003814697266
    6. 'signal' → logprob: -18.250003814697266
    7. '{
' → logprob: -19.625003814697266
    8. ')' → logprob: -19.625003814697266
    9. '   ' → logprob: -19.750003814697266
    10. '``' → logprob: -20.000003814697266

Token 2044: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.828512363834307e-05
    2. ',n' → logprob: -10.375088691711426
    3. ',v' → logprob: -11.000088691711426
    4. ',R' → logprob: -11.000088691711426
    5. ',N' → logprob: -11.625088691711426
    6. ' ,' → logprob: -13.000088691711426
    7. ',None' → logprob: -13.000088691711426
    8. ',r' → logprob: -13.125088691711426
    9. '```' → logprob: -13.250088691711426
    10. ',
' → logprob: -13.250088691711426

Token 2045: 'road' (ID: 12086)
  Prédit: 'road'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'road' → logprob: -2.45848218582978e-06
    2. ' road' → logprob: -13.00000286102295
    3. '   ' → logprob: -16.125001907348633
    4. 'graph' → logprob: -18.125001907348633
    5. 'set' → logprob: -18.875001907348633
    6. '
' → logprob: -19.125001907348633
    7. '       ' → logprob: -19.125001907348633
    8. ' ' → logprob: -19.500001907348633
    9. 'rod' → logprob: -19.625001907348633
    10. '```' → logprob: -19.625001907348633

Token 2046: '_invalid' (ID: 71389)
  Prédit: '_invalid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_invalid' → logprob: -0.00023119196703191847
    2. 'invalid' → logprob: -8.37523078918457
    3. '_INVALID' → logprob: -14.75023078918457
    4. 'Invalid' → logprob: -16.62523078918457
    5. '_valid' → logprob: -17.00023078918457
    6. 'INVALID' → logprob: -17.75023078918457
    7. '_Invalid' → logprob: -18.00023078918457
    8. '_in' → logprob: -18.25023078918457
    9. ' invalid' → logprob: -18.37523078918457
    10. '_missing' → logprob: -18.75023078918457

Token 2047: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.061054359131958e-06
    2. ',
' → logprob: -12.250007629394531
    3. ' ,' → logprob: -13.125007629394531
    4. 'road' → logprob: -14.875007629394531
    5. ',j' → logprob: -15.125007629394531
    6. '   ' → logprob: -15.500007629394531
    7. ',r' → logprob: -15.875007629394531
    8. '       ' → logprob: -16.62500762939453
    9. '```' → logprob: -16.75000762939453
    10. '
' → logprob: -16.75000762939453

Token 2048: 'road' (ID: 12086)
  Prédit: 'road'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'road' → logprob: -3.7697225252486533e-06
    2. ' road' → logprob: -12.500003814697266
    3. '   ' → logprob: -18.375003814697266
    4. '
' → logprob: -18.875003814697266
    5. 'rod' → logprob: -20.125003814697266
    6. '```' → logprob: -21.375003814697266
    7. '-road' → logprob: -21.500003814697266
    8. ' ' → logprob: -21.750003814697266
    9. 'Road' → logprob: -21.875003814697266
    10. '
' → logprob: -22.125003814697266

Token 2049: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -1.1160349458805285e-05
    2. ',j' → logprob: -12.750011444091797
    3. 'j' → logprob: -13.125011444091797
    4. 'jam' → logprob: -13.250011444091797
    5. ',' → logprob: -13.500011444091797
    6. '_time' → logprob: -13.625011444091797
    7. ')' → logprob: -14.500011444091797
    8. ',_' → logprob: -14.750011444091797
    9. '_,' → logprob: -15.500011444091797
    10. '```' → logprob: -16.000011444091797

Token 2050: 'am' (ID: 313)
  Prédit: 'am'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'am' → logprob: -1.5928495486150496e-05
    2. 'ams' → logprob: -12.375016212463379
    3. 'jam' → logprob: -12.625016212463379
    4. 'm' → logprob: -13.000016212463379
    5. 'ам' → logprob: -13.625016212463379
    6. 'a' → logprob: -14.500016212463379
    7. 'amming' → logprob: -14.875016212463379
    8. 'an' → logprob: -14.937516212463379
    9. '```' → logprob: -15.312516212463379
    10. 'om' → logprob: -15.562516212463379

Token 2051: ',j' (ID: 22712)
  Prédit: ',j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.4740879237651825
    2. ',' → logprob: -0.9740879535675049
    3. ',
' → logprob: -12.349087715148926
    4. ' ,' → logprob: -12.849087715148926
    5. ',k' → logprob: -13.724087715148926
    6. ',h' → logprob: -14.724087715148926
    7. '   ' → logprob: -14.849087715148926
    8. ',p' → logprob: -15.474087715148926
    9. ',J' → logprob: -15.474087715148926
    10. ',y' → logprob: -15.599087715148926

Token 2052: 'am' (ID: 313)
  Prédit: 'am'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'am' → logprob: -1.3663626305060461e-05
    2. 'jam' → logprob: -12.87501335144043
    3. 'ам' → logprob: -13.62501335144043
    4. 'amilton' → logprob: -13.62501335144043
    5. 'aml' → logprob: -14.00001335144043
    6. 'amh' → logprob: -14.12501335144043
    7. '   ' → logprob: -14.43751335144043
    8. 'a' → logprob: -14.75001335144043
    9. 'amming' → logprob: -14.81251335144043
    10. 'M' → logprob: -14.81251335144043

Token 2053: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -1.9361264946837764e-07
    2. 'e' → logprob: -17.0
    3. 'time' → logprob: -17.0
    4. 'etime' → logprob: -17.125
    5. '_TIME' → logprob: -17.375
    6. 'ime' → logprob: -18.25
    7. '\' → logprob: -19.125
    8. 't' → logprob: -19.125
    9. '_t' → logprob: -19.625
    10. '   ' → logprob: -20.125

Token 2054: ',h' (ID: 42751)
  Prédit: ',h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',h' → logprob: -0.2520931661128998
    2. ',' → logprob: -1.5020931959152222
    3. ' ,' → logprob: -8.752093315124512
    4. ',
' → logprob: -13.002093315124512
    5. '   ' → logprob: -13.377093315124512
    6. '       ' → logprob: -13.752093315124512
    7. '           ' → logprob: -16.002092361450195
    8. ',H' → logprob: -16.127092361450195
    9. ',y' → logprob: -16.752092361450195
    10. '  ' → logprob: -17.002092361450195

Token 2055: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: 0.0
    2. '_list' → logprob: -19.125
    3. 'ilist' → logprob: -19.5
    4. '```' → logprob: -20.5
    5. '[' → logprob: -20.875
    6. 'List' → logprob: -21.125
    7. 'lista' → logprob: -21.875
    8. 'ist' → logprob: -22.125
    9. 'plist' → logprob: -22.125
    10. 'olist' → logprob: -22.25

Token 2056: ',v' (ID: 30680)
  Prédit: ',v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',v' → logprob: -0.0009126556105911732
    2. ',' → logprob: -7.000912666320801
    3. 'v' → logprob: -14.1259126663208
    4. ' ,' → logprob: -14.8759126663208
    5. '   ' → logprob: -18.500911712646484
    6. ',
' → logprob: -19.125911712646484
    7. ' v' → logprob: -19.500911712646484
    8. '```' → logprob: -20.500911712646484
    9. '<v' → logprob: -21.000911712646484
    10. '(v' → logprob: -21.375911712646484

Token 2057: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -3.4121114822482923e-06
    2. 'ist' → logprob: -12.875003814697266
    3. 'v' → logprob: -15.250003814697266
    4. 'l' → logprob: -16.000003814697266
    5. 'elist' → logprob: -16.000003814697266
    6. '_list' → logprob: -16.250003814697266
    7. 'ilist' → logprob: -16.250003814697266
    8. 'liste' → logprob: -17.125003814697266
    9. 'olist' → logprob: -18.000003814697266
    10. 'plist' → logprob: -18.375003814697266

Token 2058: ')

' (ID: 1029)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03626582399010658
    2. ')' → logprob: -4.161265850067139
    3. '   ' → logprob: -4.536265850067139
    4. '       ' → logprob: -5.786265850067139
    5. '    
' → logprob: -6.411265850067139
    6. '        
' → logprob: -6.411265850067139
    7. 'def' → logprob: -7.161265850067139
    8. '<|end|>' → logprob: -7.161265850067139
    9. '
' → logprob: -7.661265850067139
    10. ')
' → logprob: -8.41126537322998

Token 2059: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17091195285320282
    2. '       ' → logprob: -2.920912027359009
    3. 'import' → logprob: -3.420912027359009
    4. 'dist' → logprob: -3.420912027359009
    5. 'start' → logprob: -4.04591178894043
    6. '#' → logprob: -4.42091178894043
    7. '```' → logprob: -5.04591178894043
    8. 'def' → logprob: -7.54591178894043
    9. '
' → logprob: -7.67091178894043
    10. 'dire' → logprob: -8.17091178894043

Token 2060: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.4046451151371002
    2. 'start' → logprob: -1.6546450853347778
    3. 'import' → logprob: -2.7796452045440674
    4. '#' (adapté à ' #') → logprob: -3.0296452045440674
    5. '       ' → logprob: -3.7796452045440674
    6. 'pq' → logprob: -6.279644966125488
    7. 'queue' → logprob: -6.404644966125488
    8. 'heap' → logprob: -6.529644966125488
    9. 'distance' → logprob: -7.154644966125488
    10. 'visited' → logprob: -7.154644966125488

Token 2061: ' initial' (ID: 4871)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.7812675833702087
    2. 'dist' → logprob: -1.4062676429748535
    3. '#' → logprob: -1.5312676429748535
    4. 'import' → logprob: -3.7812676429748535
    5. 'def' → logprob: -3.7812676429748535
    6. '       ' → logprob: -3.9062676429748535
    7. 'INF' → logprob: -5.0312676429748535
    8. 'inf' → logprob: -6.1562676429748535
    9. 'time' → logprob: -6.6562676429748535
    10. 'visited' → logprob: -6.9062676429748535

Token 2062: ' conditions' (ID: 6409)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.2737075686454773
    2. '_time' → logprob: -2.023707628250122
    3. 'dist' → logprob: -3.398707628250122
    4. '
' → logprob: -4.023707389831543
    5. 'direction' → logprob: -4.398707389831543
    6. 'dir' → logprob: -4.523707389831543
    7. 'state' → logprob: -4.523707389831543
    8. 'start' → logprob: -4.898707389831543
    9. '_direction' → logprob: -5.648707389831543
    10. 'queue' → logprob: -6.273707389831543

Token 2063: '
' (ID: 198)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.1668262928724289
    2. 'import' → logprob: -2.5418262481689453
    3. '       ' → logprob: -2.9168262481689453
    4. 'dist' → logprob: -4.666826248168945
    5. 'queue' → logprob: -5.666826248168945
    6. 'heap' → logprob: -5.791826248168945
    7. 'pq' → logprob: -6.041826248168945
    8. '   ' → logprob: -7.416826248168945
    9. 'visited' → logprob: -7.416826248168945
    10. '```' → logprob: -7.541826248168945

Token 2064: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0337090939283371
    2. 'start' → logprob: -3.5337090492248535
    3. 'import' → logprob: -6.6587090492248535
    4. 'dist' → logprob: -7.1587090492248535
    5. 'prev' → logprob: -7.5337090492248535
    6. 'time' → logprob: -8.283709526062012
    7. '   ' → logprob: -8.283709526062012
    8. 'queue' → logprob: -8.658709526062012
    9. 'current' → logprob: -9.158709526062012
    10. '#' → logprob: -9.158709526062012

Token 2065: ' #' (ID: 1069)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.07035307586193085
    2. 'import' → logprob: -2.8203530311584473
    3. 'dist' → logprob: -5.570353031158447
    4. 'heap' → logprob: -6.320353031158447
    5. 'pq' → logprob: -6.820353031158447
    6. '   ' → logprob: -7.570353031158447
    7. 'queue' → logprob: -8.070353507995605
    8. 'visited' → logprob: -8.070353507995605
    9. '       ' → logprob: -8.320353507995605
    10. 'hq' → logprob: -9.570353507995605

Token 2066: ' truck' (ID: 13790)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.05167518928647041
    2. 'import' → logprob: -3.6766750812530518
    3. 'dist' → logprob: -4.551675319671631
    4. '#' → logprob: -6.051675319671631
    5. 'visited' → logprob: -6.051675319671631
    6. 'heap' → logprob: -6.051675319671631
    7. '       ' → logprob: -6.176675319671631
    8. 'pq' → logprob: -6.801675319671631
    9. 'hq' → logprob: -7.176675319671631
    10. '   ' → logprob: -7.301675319671631

Token 2067: ' starts' (ID: 13217)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -1.49981689453125
    2. ' =' → logprob: -1.87481689453125
    3. '_pos' → logprob: -2.24981689453125
    4. '   ' → logprob: -2.49981689453125
    5. 'pos' → logprob: -2.62481689453125
    6. '_direction' → logprob: -2.62481689453125
    7. '       ' → logprob: -3.12481689453125
    8. '=' → logprob: -3.37481689453125
    9. 'time' → logprob: -3.49981689453125
    10. '#' → logprob: -3.87481689453125

Token 2068: ' facing' (ID: 20511)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.8955952525138855
    2. '_time' → logprob: -1.3955953121185303
    3. '_pos' → logprob: -1.7705953121185303
    4. 'at' → logprob: -2.6455953121185303
    5. 'time' → logprob: -2.8955953121185303
    6. 'from' → logprob: -4.770595073699951
    7. 'position' → logprob: -5.020595073699951
    8. '       ' → logprob: -5.145595073699951
    9. ' =' → logprob: -5.270595073699951
    10. '   ' → logprob: -5.770595073699951

Token 2069: ' east' (ID: 23557)
  Prédit: ''E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''E' → logprob: -0.03155956417322159
    2. 'E' → logprob: -3.531559467315674
    3. '('' → logprob: -7.406559467315674
    4. ' '' → logprob: -8.656559944152832
    5. '"E' → logprob: -8.656559944152832
    6. ''' → logprob: -8.781559944152832
    7. '`' → logprob: -9.156559944152832
    8. '   ' → logprob: -9.281559944152832
    9. 'East' → logprob: -9.531559944152832
    10. 'east' → logprob: -9.531559944152832

Token 2070: ' at' (ID: 540)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.7987802028656006
    2. 'import' → logprob: -1.0487802028656006
    3. '   ' → logprob: -2.1737802028656006
    4. '       ' → logprob: -2.7987802028656006
    5. 'initial' → logprob: -5.04878044128418
    6. 'dist' → logprob: -5.29878044128418
    7. 'from' → logprob: -5.54878044128418
    8. 'time' → logprob: -6.04878044128418
    9. 'queue' → logprob: -6.54878044128418
    10. '#' → logprob: -6.92378044128418

Token 2071: ' start' (ID: 1604)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -1.137958288192749
    2. 'start' → logprob: -1.137958288192749
    3. '(' → logprob: -1.387958288192749
    4. '0' → logprob: -2.887958288192749
    5. '(start' → logprob: -3.137958288192749
    6. 't' → logprob: -5.762958526611328
    7. ' (' → logprob: -6.387958526611328
    8. '((' → logprob: -6.387958526611328
    9. '(x' → logprob: -6.512958526611328
    10. 'x' → logprob: -8.012958526611328

Token 2072: ' intersection' (ID: 42002)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7614667415618896
    2. '       ' → logprob: -1.5114667415618896
    3. 'start' → logprob: -1.5114667415618896
    4. 'import' → logprob: -2.8864667415618896
    5. 'time' → logprob: -4.386466979980469
    6. 'initial' → logprob: -4.636466979980469
    7. 'dist' → logprob: -5.386466979980469
    8. '
' → logprob: -5.886466979980469
    9. 'queue' → logprob: -6.261466979980469
    10. 'current' → logprob: -6.886466979980469

Token 2073: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007173766847699881
    2. 'import' → logprob: -5.257173538208008
    3. 'start' → logprob: -7.257173538208008
    4. '   ' → logprob: -7.382173538208008
    5. 'initial' → logprob: -8.507173538208008
    6. '
' → logprob: -9.132173538208008
    7. 'queue' → logprob: -9.632173538208008
    8. 'from' → logprob: -10.007173538208008
    9. '#' → logprob: -10.257173538208008
    10. 'dist' → logprob: -10.382173538208008

Token 2074: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06681402772665024
    2. '   ' → logprob: -2.8168139457702637
    3. 'time' → logprob: -6.191813945770264
    4. 'import' → logprob: -7.191813945770264
    5. 'dist' → logprob: -7.816813945770264
    6. '
' → logprob: -7.816813945770264
    7. 'queue' → logprob: -8.441814422607422
    8. 'prev' → logprob: -8.566814422607422
    9. 'start' → logprob: -8.566814422607422
    10. 'current' → logprob: -8.691814422607422

Token 2075: ' #' (ID: 1069)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.7177221179008484
    2. 'import' → logprob: -0.9677221179008484
    3. 'heap' → logprob: -2.967722177505493
    4. 'dist' → logprob: -3.342722177505493
    5. 'pq' → logprob: -3.842722177505493
    6. '   ' → logprob: -4.717721939086914
    7. '       ' → logprob: -5.092721939086914
    8. 'queue' → logprob: -6.092721939086914
    9. 'hq' → logprob: -6.467721939086914
    10. 'visited' → logprob: -6.467721939086914

Token 2076: ' states' (ID: 9407)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.8878165483474731
    2. 'import' → logprob: -1.1378165483474731
    3. 'dist' → logprob: -2.3878164291381836
    4. '       ' → logprob: -2.7628164291381836
    5. 'heap' → logprob: -2.8878164291381836
    6. 'pq' → logprob: -3.3878164291381836
    7. 'queue' → logprob: -4.637816429138184
    8. '   ' → logprob: -5.262816429138184
    9. 'visited' → logprob: -5.762816429138184
    10. '#' → logprob: -6.262816429138184

Token 2077: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1575963944196701
    2. '=' → logprob: -2.4075963497161865
    3. '       ' → logprob: -3.0325963497161865
    4. '   ' → logprob: -5.782596588134766
    5. 'visited' → logprob: -6.657596588134766
    6. '#' → logprob: -6.907596588134766
    7. 'import' → logprob: -7.032596588134766
    8. '=[]
' → logprob: -8.907596588134766
    9. '=[]' → logprob: -9.032596588134766
    10. 'from' → logprob: -9.157596588134766

Token 2078: ' (' (ID: 350)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.3561294078826904
    2. 'heap' → logprob: -1.3561294078826904
    3. '(x' → logprob: -1.4811294078826904
    4. '   ' → logprob: -1.9811294078826904
    5. '(heap' → logprob: -3.9811294078826904
    6. ' (' → logprob: -4.2311296463012695
    7. '(start' → logprob: -4.2311296463012695
    8. '```' → logprob: -4.4811296463012695
    9. '(' → logprob: -4.7311296463012695
    10. '#' → logprob: -4.9811296463012695

Token 2079: 'cost' (ID: 33457)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3795340061187744
    2. 'current' → logprob: -1.5045340061187744
    3. 'time' → logprob: -3.1295340061187744
    4. 'cost' → logprob: -3.5045340061187744
    5. 't' → logprob: -4.254533767700195
    6. ')' → logprob: -6.629533767700195
    7. '(current' → logprob: -6.879533767700195
    8. 'dist' → logprob: -7.379533767700195
    9. 'distance' → logprob: -8.129533767700195
    10. ' current' → logprob: -8.254533767700195

Token 2080: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13961537182331085
    2. ',time' → logprob: -2.139615297317505
    3. ',current' → logprob: -4.889615535736084
    4. ' ,' → logprob: -6.514615535736084
    5. ',state' → logprob: -6.514615535736084
    6. '_time' → logprob: -7.639615535736084
    7. ',start' → logprob: -7.889615535736084
    8. ',node' → logprob: -7.889615535736084
    9. ',t' → logprob: -8.139615058898926
    10. ',(' → logprob: -9.389615058898926

Token 2081: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.05877048149704933
    2. 'start' → logprob: -3.1837704181671143
    3. '(x' → logprob: -4.558770656585693
    4. '0' → logprob: -6.308770656585693
    5. '(start' → logprob: -7.183770656585693
    6. ' (' → logprob: -7.558770656585693
    7. 'node' → logprob: -7.808770656585693
    8. '(' → logprob: -8.308770179748535
    9. ' x' → logprob: -8.433770179748535
    10. 'current' → logprob: -8.433770179748535

Token 2082: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12802810966968536
    2. ',y' → logprob: -2.128028154373169
    3. '<|end|>' → logprob: -8.12802791595459
    4. ',n' → logprob: -8.62802791595459
    5. ',state' → logprob: -9.00302791595459
    6. ',x' → logprob: -9.62802791595459
    7. ' ,' → logprob: -9.75302791595459
    8. ',user' → logprob: -9.87802791595459
    9. ',next' → logprob: -10.00302791595459
    10. '   ' → logprob: -10.25302791595459

Token 2083: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00010902655776590109
    2. ' y' → logprob: -9.12510871887207
    3. '<|end|>' → logprob: -18.25010871887207
    4. '	y' → logprob: -18.50010871887207
    5. ',y' → logprob: -19.37510871887207
    6. ''y' → logprob: -19.75010871887207
    7. '<|end|>' → logprob: -19.75010871887207
    8. 'x' → logprob: -19.75010871887207
    9. '   ' → logprob: -19.87510871887207
    10. ')y' → logprob: -20.25010871887207

Token 2084: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010264969896525145
    2. ',d' → logprob: -7.001026630401611
    3. ' ,' → logprob: -10.626026153564453
    4. ',state' → logprob: -10.626026153564453
    5. ',next' → logprob: -11.376026153564453
    6. ','' → logprob: -11.876026153564453
    7. ',time' → logprob: -12.251026153564453
    8. ',current' → logprob: -12.251026153564453
    9. ',user' → logprob: -12.626026153564453
    10. ')' → logprob: -12.626026153564453

Token 2085: ' dir' (ID: 5609)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dir' → logprob: -0.09256119281053543
    2. ' dir' → logprob: -2.9675612449645996
    3. ''' → logprob: -4.3425612449646
    4. ''d' → logprob: -4.3425612449646
    5. 'direction' → logprob: -5.0925612449646
    6. ' direction' → logprob: -7.0925612449646
    7. 'prev' → logprob: -7.0925612449646
    8. ')' → logprob: -7.8425612449646
    9. '"' → logprob: -7.9675612449646
    10. '0' → logprob: -7.9675612449646

Token 2086: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2924712002277374
    2. ',' → logprob: -1.917471170425415
    3. '_arr' → logprob: -2.542471170425415
    4. ')_' → logprob: -4.167471408843994
    5. '_' → logprob: -5.792471408843994
    6. '_,' → logprob: -6.417471408843994
    7. '_direction' → logprob: -6.792471408843994
    8. ',_' → logprob: -6.792471408843994
    9. ')
' → logprob: -7.167471408843994
    10. '   ' → logprob: -7.167471408843994

Token 2087: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1942627429962158
    2. '   ' → logprob: -1.1942627429962158
    3. ' (' → logprob: -1.9442627429962158
    4. ' =' → logprob: -2.944262742996216
    5. '('' → logprob: -3.319262742996216
    6. '(' → logprob: -3.569262742996216
    7. ')' → logprob: -3.944262742996216
    8. '       ' → logprob: -4.069262504577637
    9. ' for' → logprob: -4.319262504577637
    10. '=' → logprob: -4.694262504577637

Token 2088: ' #' (ID: 1069)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.3571595251560211
    2. ' heap' → logprob: -1.7321594953536987
    3. '   ' → logprob: -3.1071596145629883
    4. '       ' → logprob: -3.1071596145629883
    5. 'pq' → logprob: -4.482159614562988
    6. '```' → logprob: -5.357159614562988
    7. 'queue' → logprob: -5.732159614562988
    8. ' for' → logprob: -5.732159614562988
    9. 'for' → logprob: -6.232159614562988
    10. 'start' → logprob: -6.607159614562988

Token 2089: ' dir' (ID: 5609)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.0942927673459053
    2. 'dire' → logprob: -3.3442928791046143
    3. 'import' → logprob: -3.5942928791046143
    4. 'pq' → logprob: -4.219292640686035
    5. 'queue' → logprob: -5.594292640686035
    6. 'dir' → logprob: -5.844292640686035
    7. '   ' → logprob: -6.094292640686035
    8. 'dirs' → logprob: -6.469292640686035
    9. 'start' → logprob: -7.344292640686035
    10. '       ' → logprob: -7.594292640686035

Token 2090: ' in' (ID: 306)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7660113573074341
    2. ' =' → logprob: -0.7660113573074341
    3. '=' → logprob: -3.2660112380981445
    4. ')' → logprob: -4.2660112380981445
    5. '_list' → logprob: -5.5160112380981445
    6. '_' → logprob: -5.8910112380981445
    7. ',' → logprob: -6.1410112380981445
    8. '_choices' → logprob: -6.3910112380981445
    9. '='' → logprob: -6.5160112380981445
    10. '_idx' → logprob: -6.8910112380981445

Token 2091: ' '' (ID: 461)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '['' → logprob: -0.1729660928249359
    2. ''N' → logprob: -2.5479660034179688
    3. ''E' → logprob: -2.7979660034179688
    4. ''' → logprob: -4.672966003417969
    5. '('' → logprob: -4.797966003417969
    6. '"E' → logprob: -7.547966003417969
    7. '"N' → logprob: -7.797966003417969
    8. '{'' → logprob: -8.047966003417969
    9. '(['' → logprob: -8.422966003417969
    10. '"' → logprob: -8.797966003417969

Token 2092: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.8064754009246826
    2. ''E' → logprob: -0.9314754009246826
    3. '['' → logprob: -2.5564754009246826
    4. 'EW' → logprob: -3.3064754009246826
    5. 'N' → logprob: -4.056475639343262
    6. 'ES' → logprob: -4.556475639343262
    7. ''' → logprob: -5.181475639343262
    8. '"E' → logprob: -5.931475639343262
    9. ''N' → logprob: -6.056475639343262
    10. 'NES' → logprob: -6.556475639343262

Token 2093: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.23242135345935822
    2. '',' → logprob: -1.9824213981628418
    3. ''' → logprob: -3.357421398162842
    4. '')' → logprob: -4.107421398162842
    5. 'N' → logprob: -4.607421398162842
    6. ''N' → logprob: -6.482421398162842
    7. 'NES' → logprob: -6.482421398162842
    8. 'NW' → logprob: -6.732421398162842
    9. '',"' → logprob: -7.107421398162842
    10. '',['' → logprob: -7.357421398162842

Token 2094: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.11045078933238983
    2. 'S' → logprob: -2.7354507446289062
    3. 'N' → logprob: -3.2354507446289062
    4. 'E' → logprob: -8.110450744628906
    5. '```' → logprob: -10.860450744628906
    6. ''' → logprob: -11.110450744628906
    7. ' W' → logprob: -11.860450744628906
    8. '`' → logprob: -12.485450744628906
    9. '')' → logprob: -13.360450744628906
    10. ''''' → logprob: -13.360450744628906

Token 2095: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.02057190239429474
    2. ''N' → logprob: -4.145571708679199
    3. ',N' → logprob: -6.520571708679199
    4. ''S' → logprob: -6.770571708679199
    5. ','' → logprob: -6.895571708679199
    6. '',' → logprob: -7.145571708679199
    7. 'N' → logprob: -10.0205717086792
    8. ''' → logprob: -10.8955717086792
    9. ',' → logprob: -11.3955717086792
    10. '   ' → logprob: -11.5205717086792

Token 2096: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.011057372204959393
    2. 'S' → logprob: -4.511057376861572
    3. ''N' → logprob: -12.011056900024414
    4. '['' → logprob: -13.886056900024414
    5. '{'' → logprob: -14.261056900024414
    6. ''S' → logprob: -14.511056900024414
    7. ' N' → logprob: -15.011056900024414
    8. 'E' → logprob: -15.386056900024414
    9. 'W' → logprob: -15.636056900024414
    10. ''' → logprob: -15.636056900024414

Token 2097: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.008533842861652374
    2. ','' → logprob: -5.008533954620361
    3. ''' → logprob: -7.133533954620361
    4. ',S' → logprob: -7.633533954620361
    5. '',' → logprob: -8.133533477783203
    6. ',' → logprob: -9.633533477783203
    7. ''S' → logprob: -9.758533477783203
    8. '',"' → logprob: -9.883533477783203
    9. '```' → logprob: -11.883533477783203
    10. ',O' → logprob: -11.883533477783203

Token 2098: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -7.896309739408025e-07
    2. ''S' → logprob: -14.250000953674316
    3. ' S' → logprob: -16.375
    4. ''' → logprob: -17.625
    5. ''''' → logprob: -18.5
    6. '```' → logprob: -18.625
    7. '`' → logprob: -20.0
    8. ''s' → logprob: -20.25
    9. '{'' → logprob: -20.375
    10. 'E' → logprob: -20.625

Token 2099: ''
' (ID: 2207)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3990558683872223
    2. 'heap' → logprob: -1.5240558385849
    3. 'import' → logprob: -3.1490559577941895
    4. ',' → logprob: -4.1490559577941895
    5. ')' → logprob: -4.5240559577941895
    6. 'queue' → logprob: -4.5240559577941895
    7. '
' → logprob: -4.6490559577941895
    8. 'pq' → logprob: -5.1490559577941895
    9. 'dire' → logprob: -5.2740559577941895
    10. 'while' → logprob: -6.7740559577941895

Token 2100: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5519335269927979
    2. '       ' → logprob: -0.9269335269927979
    3. 'heap' → logprob: -4.426933288574219
    4. 'pq' → logprob: -5.551933288574219
    5. 'queue' → logprob: -5.801933288574219
    6. 'for' → logprob: -6.051933288574219
    7. 'dire' → logprob: -6.926933288574219
    8. 'dist' → logprob: -7.051933288574219
    9. ' for' → logprob: -7.051933288574219
    10. '```' → logprob: -7.051933288574219

Token 2101: ' #' (ID: 1069)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.9750072956085205
    2. 'import' → logprob: -1.4750072956085205
    3. '       ' → logprob: -2.1000072956085205
    4. '   ' → logprob: -2.6000072956085205
    5. 'dire' → logprob: -2.8500072956085205
    6. 'pq' → logprob: -2.9750072956085205
    7. 'queue' → logprob: -3.4750072956085205
    8. 'dist' → logprob: -3.9750072956085205
    9. 'start' → logprob: -3.9750072956085205
    10. 'dirs' → logprob: -5.100007057189941

Token 2102: ' initial' (ID: 4871)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7734571099281311
    2. 'dire' → logprob: -1.2734570503234863
    3. 'heap' → logprob: -2.1484570503234863
    4. 'dirs' → logprob: -2.5234570503234863
    5. '       ' → logprob: -4.148457050323486
    6. 'dir' → logprob: -4.648457050323486
    7. 'start' → logprob: -4.648457050323486
    8. 'dist' → logprob: -4.648457050323486
    9. '   ' → logprob: -5.398457050323486
    10. 'pq' → logprob: -5.648457050323486

Token 2103: ' dir' (ID: 5609)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -1.4127349853515625
    2. '_cost' → logprob: -1.6627349853515625
    3. 'state' → logprob: -1.9127349853515625
    4. '_state' → logprob: -1.9127349853515625
    5. ' =' → logprob: -2.6627349853515625
    6. 'dir' → logprob: -2.7877349853515625
    7. '_dir' → logprob: -3.0377349853515625
    8. '_time' → logprob: -3.1627349853515625
    9. '   ' → logprob: -3.9127349853515625
    10. '_direction' → logprob: -4.7877349853515625

Token 2104: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5610398054122925
    2. '=' → logprob: -0.9360398054122925
    3. '='' → logprob: -3.311039924621582
    4. ',' → logprob: -8.811039924621582
    5. '_token' → logprob: -8.811039924621582
    6. ' ='' → logprob: -9.186039924621582
    7. '=
' → logprob: -9.561039924621582
    8. 'token' → logprob: -9.936039924621582
    9. ')' → logprob: -10.061039924621582
    10. 'dir' → logprob: -10.811039924621582

Token 2105: ' '' (ID: 461)
  Prédit: ''E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''E' → logprob: -0.090887151658535
    2. 'E' → logprob: -2.4658870697021484
    3. ' '' → logprob: -6.590887069702148
    4. ' E' → logprob: -8.090887069702148
    5. '"E' → logprob: -9.465887069702148
    6. ''' → logprob: -9.840887069702148
    7. '’E' → logprob: -10.090887069702148
    8. '`' → logprob: -10.465887069702148
    9. '('' → logprob: -10.590887069702148
    10. '['' → logprob: -11.340887069702148

Token 2106: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -4.723352049040841e-06
    2. ''E' → logprob: -12.500004768371582
    3. ' E' → logprob: -14.000004768371582
    4. ''' → logprob: -15.875004768371582
    5. '"E' → logprob: -17.125003814697266
    6. '```' → logprob: -18.375003814697266
    7. '`' → logprob: -18.875003814697266
    8. 'e' → logprob: -18.875003814697266
    9. '['' → logprob: -18.875003814697266
    10. 'S' → logprob: -18.875003814697266

Token 2107: ''

' (ID: 7497)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.11811091005802155
    2. ')'' → logprob: -2.9931108951568604
    3. '')' → logprob: -3.2431108951568604
    4. ')' → logprob: -4.4931111335754395
    5. ''
' → logprob: -5.2431111335754395
    6. ')'
' → logprob: -5.7431111335754395
    7. '   ' → logprob: -6.8681111335754395
    8. '',' → logprob: -7.4931111335754395
    9. ')
' → logprob: -8.118110656738281
    10. '')
' → logprob: -8.868110656738281

Token 2108: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5995334386825562
    2. 'heap' → logprob: -1.4745334386825562
    3. 'pq' → logprob: -1.5995334386825562
    4. 'queue' → logprob: -4.474533557891846
    5. '       ' → logprob: -5.974533557891846
    6. '```' → logprob: -6.099533557891846
    7. 'start' → logprob: -6.849533557891846
    8. 'import' → logprob: -7.099533557891846
    9. 'dist' → logprob: -7.849533557891846
    10. ' heap' → logprob: -7.974533557891846

Token 2109: ' #' (ID: 1069)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7564528584480286
    2. '       ' → logprob: -1.0064527988433838
    3. 'heap' → logprob: -2.381452798843384
    4. 'dist' → logprob: -3.006452798843384
    5. 'start' → logprob: -5.006453037261963
    6. 'pq' → logprob: -5.006453037261963
    7. 'queue' → logprob: -5.631453037261963
    8. 'dire' → logprob: -5.756453037261963
    9. 'visited' → logprob: -6.631453037261963
    10. '   ' → logprob: -7.631453037261963

Token 2110: ' Use' (ID: 7649)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.4410301446914673
    2. 'heap' → logprob: -1.9410301446914673
    3. 'dist' → logprob: -2.4410300254821777
    4. '       ' → logprob: -3.0660300254821777
    5. 'visited' → logprob: -3.5660300254821777
    6. 'start' → logprob: -3.8160300254821777
    7. 'dire' → logprob: -4.816030025482178
    8. 'queue' → logprob: -5.316030025482178
    9. 'pq' → logprob: -5.441030025482178
    10. 'dir' → logprob: -5.816030025482178

Token 2111: ' D' (ID: 415)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.07134436070919037
    2. 'import' → logprob: -2.6963443756103516
    3. ' heap' → logprob: -6.821344375610352
    4. '```' → logprob: -8.696344375610352
    5. '   ' → logprob: -9.821344375610352
    6. '
' → logprob: -10.571344375610352
    7. 'queue' → logprob: -10.821344375610352
    8. '[]' → logprob: -11.321344375610352
    9. '       ' → logprob: -11.946344375610352
    10. 'def' → logprob: -12.321344375610352

Token 2112: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.0026640042196959257
    2. 'ijk' → logprob: -6.002664089202881
    3. 'ij' → logprob: -9.502663612365723
    4. 'jik' → logprob: -10.127663612365723
    5. '```' → logprob: -10.627663612365723
    6. '   ' → logprob: -11.252663612365723
    7. 'ijks' → logprob: -11.627663612365723
    8. 'ijs' → logprob: -11.752663612365723
    9. 'jk' → logprob: -11.877663612365723
    10. 'import' → logprob: -12.002663612365723

Token 2113: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05572780221700668
    2. 'import' → logprob: -3.68072772026062
    3. '
' → logprob: -4.180727958679199
    4. '   ' → logprob: -4.680727958679199
    5. '        
' → logprob: -7.180727958679199
    6. ' (' → logprob: -7.930727958679199
    7. '(heap' → logprob: -7.930727958679199
    8. 'queue' → logprob: -8.3057279586792
    9. '()
' → logprob: -8.3057279586792
    10. ',' → logprob: -8.4307279586792

Token 2114: ' state' (ID: 2608)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.24184218049049377
    2. 'import' → logprob: -1.9918421506881714
    3. '[]' → logprob: -3.241842269897461
    4. '[]
' → logprob: -4.116842269897461
    5. 'graph' → logprob: -4.366842269897461
    6. '(heap' → logprob: -5.991842269897461
    7. '[(' → logprob: -6.116842269897461
    8. ' heap' → logprob: -6.741842269897461
    9. '(graph' → logprob: -6.991842269897461
    10. 'sys' → logprob: -7.241842269897461

Token 2115: ' space' (ID: 4918)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.4797550439834595
    2. ' (' → logprob: -1.4797550439834595
    3. '   ' → logprob: -1.6047550439834595
    4. '[(' → logprob: -2.60475492477417
    5. ' =' → logprob: -3.35475492477417
    6. '[' → logprob: -3.72975492477417
    7. ':' → logprob: -3.85475492477417
    8. ')' → logprob: -3.97975492477417
    9. '[
' → logprob: -4.10475492477417
    10. '(' → logprob: -4.35475492477417

Token 2116: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14667575061321259
    2. 'import' → logprob: -2.2716758251190186
    3. '   ' → logprob: -4.0216755867004395
    4. '
' → logprob: -5.1466755867004395
    5. '```' → logprob: -5.6466755867004395
    6. 'dist' → logprob: -6.0216755867004395
    7. 'dire' → logprob: -7.3966755867004395
    8. 'queue' → logprob: -7.5216755867004395
    9. 'visited' → logprob: -7.5216755867004395
    10. 'from' → logprob: -7.6466755867004395

Token 2117: ' node' (ID: 4596)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14829953014850616
    2. 'import' → logprob: -2.7732994556427
    3. 'heap' → logprob: -3.2732994556427
    4. '   ' → logprob: -4.148299694061279
    5. '```' → logprob: -4.398299694061279
    6. 'pq' → logprob: -6.023299694061279
    7. 'queue' → logprob: -6.398299694061279
    8. ' heap' → logprob: -7.023299694061279
    9. 'visited' → logprob: -7.023299694061279
    10. 'from' → logprob: -7.273299694061279

Token 2118: '=(' (ID: 9893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2610214054584503
    2. ',' → logprob: -2.136021375656128
    3. '=' → logprob: -2.886021375656128
    4. ')' → logprob: -4.136021614074707
    5. 's' → logprob: -4.386021614074707
    6. ' (' → logprob: -5.011021614074707
    7. '<|end|>' → logprob: -5.261021614074707
    8. '   ' → logprob: -5.886021614074707
    9. 'import' → logprob: -6.511021614074707
    10. '=(' → logprob: -6.636021614074707

Token 2119: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0017344404477626085
    2. '(x' → logprob: -6.501734256744385
    3. ')' → logprob: -9.126734733581543
    4. ')x' → logprob: -10.001734733581543
    5. ' x' → logprob: -10.501734733581543
    6. ''x' → logprob: -11.126734733581543
    7. ' (' → logprob: -11.376734733581543
    8. '"x' → logprob: -12.626734733581543
    9. '(' → logprob: -12.876734733581543
    10. ',x' → logprob: -13.001734733581543

Token 2120: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.07028985023498535
    2. ',' → logprob: -2.6952898502349854
    3. '<|end|>' → logprob: -8.570289611816406
    4. ',Y' → logprob: -9.445289611816406
    5. ' ,' → logprob: -9.820289611816406
    6. '<|end|>' → logprob: -11.570289611816406
    7. ')' → logprob: -12.445289611816406
    8. ',
' → logprob: -12.820289611816406
    9. '   ' → logprob: -13.195289611816406
    10. ',next' → logprob: -13.195289611816406

Token 2121: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015159188769757748
    2. ',d' → logprob: -4.2651591300964355
    3. ',state' → logprob: -7.2651591300964355
    4. ')' → logprob: -8.515159606933594
    5. '),' → logprob: -10.890159606933594
    6. ','' → logprob: -11.265159606933594
    7. ',user' → logprob: -11.515159606933594
    8. ' ,' → logprob: -11.515159606933594
    9. ',t' → logprob: -12.015159606933594
    10. ',node' → logprob: -12.015159606933594

Token 2122: ' dir' (ID: 5609)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dir' → logprob: -0.13105574250221252
    2. 'direction' → logprob: -2.2560558319091797
    3. ' dir' → logprob: -5.25605583190918
    4. '#' → logprob: -6.13105583190918
    5. 'dire' → logprob: -6.13105583190918
    6. 'prev' → logprob: -6.38105583190918
    7. ' direction' → logprob: -6.75605583190918
    8. 'cost' → logprob: -6.88105583190918
    9. '       ' → logprob: -7.38105583190918
    10. '   ' → logprob: -8.00605583190918

Token 2123: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9076783061027527
    2. ',' → logprob: -0.9076783061027527
    3. '
' → logprob: -3.1576783657073975
    4. 'import' → logprob: -3.1576783657073975
    5. ')
' → logprob: -3.6576783657073975
    6. ',state' → logprob: -4.282678127288818
    7. ',
' → logprob: -4.782678127288818
    8. '   ' → logprob: -4.907678127288818
    9. 'cost' → logprob: -5.282678127288818
    10. ' =' → logprob: -5.282678127288818

Token 2124: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17279228568077087
    2. 'import' → logprob: -2.4227921962738037
    3. '   ' → logprob: -3.9227921962738037
    4. 'heap' → logprob: -3.9227921962738037
    5. 'queue' → logprob: -4.547792434692383
    6. ' heap' → logprob: -5.672792434692383
    7. 'pq' → logprob: -5.922792434692383
    8. '```' → logprob: -5.922792434692383
    9. '
' → logprob: -6.047792434692383
    10. '        
' → logprob: -6.297792434692383

Token 2125: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5466326475143433
    2. 'dist' → logprob: -1.6716326475143433
    3. 'import' → logprob: -1.7966326475143433
    4. 'visited' → logprob: -3.921632766723633
    5. 'heap' → logprob: -4.046632766723633
    6. '   ' → logprob: -5.046632766723633
    7. 'pq' → logprob: -5.171632766723633
    8. 'start' → logprob: -5.296632766723633
    9. 'dire' → logprob: -5.546632766723633
    10. '
' → logprob: -5.796632766723633

Token 2126: ' store' (ID: 4897)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.9127360582351685
    2. '       ' → logprob: -1.2877360582351685
    3. 'import' → logprob: -1.2877360582351685
    4. 'visited' → logprob: -4.412735939025879
    5. 'dire' → logprob: -4.412735939025879
    6. '   ' → logprob: -4.787735939025879
    7. 'heap' → logprob: -4.912735939025879
    8. 'pq' → logprob: -6.537735939025879
    9. 'queue' → logprob: -6.787735939025879
    10. 'from' → logprob: -6.912735939025879

Token 2127: ' best' (ID: 1636)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5843100547790527
    2. 'import' → logprob: -0.8343100547790527
    3. ' dist' → logprob: -5.584310054779053
    4. 'visited' → logprob: -5.709310054779053
    5. '   ' → logprob: -8.209310531616211
    6. ' import' → logprob: -8.334310531616211
    7. '```' → logprob: -8.834310531616211
    8. '
' → logprob: -8.959310531616211
    9. 'heap' → logprob: -8.959310531616211
    10. 'distance' → logprob: -9.084310531616211

Token 2128: ' times' (ID: 4238)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.11981044709682465
    2. 'time' → logprob: -3.3698103427886963
    3. 'times' → logprob: -3.6198103427886963
    4. '_time' → logprob: -3.9948103427886963
    5. 'cost' → logprob: -4.244810581207275
    6. '_times' → logprob: -4.744810581207275
    7. '_dist' → logprob: -4.869810581207275
    8. '_cost' → logprob: -6.494810581207275
    9. ' =' → logprob: -6.994810581207275
    10. 'distance' → logprob: -9.744810104370117

Token 2129: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7641174793243408
    2. 'dist' → logprob: -0.7641174793243408
    3. '       ' → logprob: -3.139117479324341
    4. '
' → logprob: -4.639117240905762
    5. ' dist' → logprob: -5.764117240905762
    6. 'import' → logprob: -6.014117240905762
    7. 'visited' → logprob: -6.264117240905762
    8. 'times' → logprob: -6.389117240905762
    9. 'distance' → logprob: -6.889117240905762
    10. '_dist' → logprob: -6.889117240905762

Token 2130: '       ' (ID: 309)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5717143416404724
    2. 'best' → logprob: -1.3217144012451172
    3. '       ' → logprob: -2.071714401245117
    4. '   ' → logprob: -4.321714401245117
    5. 'visited' → logprob: -4.571714401245117
    6. 'times' → logprob: -4.946714401245117
    7. 'import' → logprob: -5.071714401245117
    8. ' dist' → logprob: -6.071714401245117
    9. ' best' → logprob: -6.446714401245117
    10. 'time' → logprob: -7.196714401245117

Token 2131: ' INF' (ID: 69196)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.41394689679145813
    2. 'best' → logprob: -1.1639468669891357
    3. 'times' → logprob: -4.788947105407715
    4. '   ' → logprob: -4.913947105407715
    5. 'import' → logprob: -5.413947105407715
    6. 'visited' → logprob: -5.413947105407715
    7. 'dp' → logprob: -6.788947105407715
    8. 'time' → logprob: -8.288947105407715
    9. 'INF' (adapté à ' INF') → logprob: -8.413947105407715
    10. 'distance' → logprob: -9.163947105407715

Token 2132: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.576508104801178
    2. ' =' → logprob: -0.826508104801178
    3. '=int' → logprob: -7.576508045196533
    4. '=float' → logprob: -9.826508522033691
    5. ')' → logprob: -13.701508522033691
    6. '   ' → logprob: -15.201508522033691
    7. '```' → logprob: -15.826508522033691
    8. '＝' → logprob: -16.201507568359375
    9. '=sys' → logprob: -16.451507568359375
    10. ',' → logprob: -16.451507568359375

Token 2133: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -3.023293538717553e-05
    2. 'float' → logprob: -10.625030517578125
    3. '1' → logprob: -12.500030517578125
    4. ' ' → logprob: -13.500030517578125
    5. 'int' → logprob: -14.750030517578125
    6. '100' → logprob: -15.125030517578125
    7. '   ' → logprob: -18.625030517578125
    8. '999' → logprob: -19.000030517578125
    9. '2' → logprob: -19.375030517578125
    10. ' float' → logprob: -20.125030517578125

Token 2134: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.003240101272240281
    2. '1' → logprob: -5.75324010848999
    3. 'float' → logprob: -9.753239631652832
    4. 'int' → logprob: -12.878239631652832
    5. '100' → logprob: -13.628239631652832
    6. '2' → logprob: -15.378239631652832
    7. ' ' → logprob: -15.503239631652832
    8. '200' → logprob: -17.75324058532715
    9. '999' → logprob: -17.87824058532715
    10. '(' → logprob: -18.00324058532715

Token 2135: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.5760442018508911
    2. '**' → logprob: -0.8260442018508911
    3. '7' → logprob: -9.701044082641602
    4. '10' → logprob: -11.326044082641602
    5. '```' → logprob: -11.326044082641602
    6. '000' → logprob: -12.201044082641602
    7. '6' → logprob: -12.451044082641602
    8. '12' → logprob: -12.451044082641602
    9. '15' → logprob: -13.326044082641602
    10. '09' → logprob: -13.451044082641602

Token 2136: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.16484105587005615
    2. '15' → logprob: -1.9148410558700562
    3. '12' → logprob: -5.914841175079346
    4. '10' → logprob: -6.539841175079346
    5. '14' → logprob: -8.539840698242188
    6. '18' → logprob: -8.914840698242188
    7. '13' → logprob: -10.164840698242188
    8. '7' → logprob: -10.164840698242188
    9. '16' → logprob: -10.664840698242188
    10. '8' → logprob: -10.914840698242188

Token 2137: '
' (ID: 198)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.2002624273300171
    2. '
' → logprob: -2.5752625465393066
    3. '   ' → logprob: -2.5752625465393066
    4. 'times' → logprob: -4.325262546539307
    5. 'best' → logprob: -5.075262546539307
    6. 'dp' → logprob: -5.950262546539307
    7. 'distance' → logprob: -6.075262546539307
    8. 'visited' → logprob: -6.325262546539307
    9. 'time' → logprob: -6.825262546539307
    10. ' dist' → logprob: -7.075262546539307

Token 2138: '       ' (ID: 309)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.020110853016376495
    2. '       ' → logprob: -4.395111083984375
    3. 'best' → logprob: -5.645111083984375
    4. 'dp' → logprob: -6.645111083984375
    5. '   ' → logprob: -7.270111083984375
    6. 'times' → logprob: -7.395111083984375
    7. 'distance' → logprob: -7.770111083984375
    8. 'visited' → logprob: -8.020111083984375
    9. 'time' → logprob: -8.395111083984375
    10. ' dist' → logprob: -8.395111083984375

Token 2139: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.0027977488934993744
    2. 'best' → logprob: -7.002797603607178
    3. 'import' → logprob: -7.252797603607178
    4. 'dp' → logprob: -7.252797603607178
    5. '   ' → logprob: -8.627798080444336
    6. 'times' → logprob: -9.002798080444336
    7. 'time' → logprob: -10.127798080444336
    8. 'from' → logprob: -10.252798080444336
    9. 'visited' → logprob: -10.252798080444336
    10. ' dist' → logprob: -10.752798080444336

Token 2140: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023899253457784653
    2. '=' → logprob: -3.8988993167877197
    3. '={(' → logprob: -6.898899078369141
    4. '<|end|>' → logprob: -7.398899078369141
    5. '={}' → logprob: -7.648899078369141
    6. '   ' → logprob: -8.02389907836914
    7. ')' → logprob: -8.39889907836914
    8. '[(' → logprob: -8.77389907836914
    9. '[' → logprob: -9.27389907836914
    10. '={' → logprob: -9.39889907836914

Token 2141: ' {}
' (ID: 11421)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.4490351974964142
    2. '{}' → logprob: -1.4490351676940918
    3. '[[' → logprob: -2.199035167694092
    4. '{}
' → logprob: -4.199035167694092
    5. '{{' → logprob: -8.07403564453125
    6. ' [[[' → logprob: -8.07403564453125
    7. ' {' → logprob: -9.07403564453125
    8. '[' → logprob: -9.19903564453125
    9. '[{' → logprob: -9.57403564453125
    10. ' [[' → logprob: -10.44903564453125

Token 2142: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1499592661857605
    2. 'for' → logprob: -2.2749593257904053
    3. '```' → logprob: -4.274959087371826
    4. '       ' → logprob: -4.399959087371826
    5. ' (' → logprob: -6.399959087371826
    6. 'token' → logprob: -6.649959087371826
    7. '	for' → logprob: -6.774959087371826
    8. 'def' → logprob: -6.899959087371826
    9. 'prev' → logprob: -7.524959087371826
    10. '<|end|>' → logprob: -7.774959087371826

Token 2143: ' h' (ID: 312)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.7303453683853149
    2. 'for' → logprob: -1.230345368385315
    3. 'import' → logprob: -2.2303452491760254
    4. 'start' → logprob: -2.8553452491760254
    5. 'dist' → logprob: -3.7303452491760254
    6. '   ' → logprob: -4.105345249176025
    7. 'from' → logprob: -5.105345249176025
    8. '       ' → logprob: -5.480345249176025
    9. 'queue' → logprob: -5.855345249176025
    10. 'hq' → logprob: -6.355345249176025

Token 2144: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.5220970511436462
    2. 'e' → logprob: -1.647097110748291
    3. ' =' → logprob: -1.647097110748291
    4. '=' → logprob: -4.272097110748291
    5. '=[]' → logprob: -5.772097110748291
    6. 'heap' → logprob: -6.522097110748291
    7. 'import' → logprob: -7.022097110748291
    8. 'p' → logprob: -7.147097110748291
    9. '=[]
' → logprob: -7.647097110748291
    10. 'queue' → logprob: -8.522096633911133

Token 2145: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.409093976020813
    2. '.he' → logprob: -1.409093976020813
    3. '=' → logprob: -1.534093976020813
    4. '.append' → logprob: -1.909093976020813
    5. '=[]' → logprob: -2.2840938568115234
    6. '.push' → logprob: -4.909093856811523
    7. 'he' → logprob: -4.909093856811523
    8. '.' → logprob: -5.284093856811523
    9. '=[]
' → logprob: -5.284093856811523
    10. '=[' → logprob: -5.409093856811523

Token 2146: ' []
' (ID: 8911)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.00872117094695568
    2. '[]' → logprob: -4.758721351623535
    3. ' [(' → logprob: -9.758721351623535
    4. '[]
' → logprob: -10.008721351623535
    5. '[' → logprob: -13.008721351623535
    6. ' []' → logprob: -13.508721351623535
    7. '[((' → logprob: -16.00872039794922
    8. '[]

' → logprob: -16.13372039794922
    9. 'heap' → logprob: -18.25872039794922
    10. ' []
' → logprob: -18.25872039794922

Token 2147: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5242432951927185
    2. 'heap' → logprob: -1.3992433547973633
    3. ' heap' → logprob: -3.0242433547973633
    4. 'dist' → logprob: -3.2742433547973633
    5. '```' → logprob: -3.2742433547973633
    6. ' for' → logprob: -4.399243354797363
    7. '(heap' → logprob: -4.899243354797363
    8. 'for' → logprob: -5.524243354797363
    9. ' (' → logprob: -6.149243354797363
    10. '[' → logprob: -6.649243354797363

Token 2148: ' for' (ID: 395)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.01909889653325081
    2. 'dist' → logprob: -5.01909875869751
    3. ' heap' → logprob: -5.14409875869751
    4. 'start' → logprob: -5.76909875869751
    5. '       ' → logprob: -5.89409875869751
    6. 'for' (adapté à ' for') → logprob: -8.644099235534668
    7. 'import' → logprob: -8.894099235534668
    8. 'x' → logprob: -8.894099235534668
    9. '   ' → logprob: -9.769099235534668
    10. ' for' → logprob: -10.894099235534668

Token 2149: ' x' (ID: 1215)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dir' → logprob: -0.6688472032546997
    2. ' dir' → logprob: -1.6688472032546997
    3. 'x' → logprob: -2.04384708404541
    4. 'd' → logprob: -2.41884708404541
    5. ' x' → logprob: -3.91884708404541
    6. 'direction' → logprob: -4.16884708404541
    7. 'dx' → logprob: -4.29384708404541
    8. ' d' → logprob: -5.16884708404541
    9. ' direction' → logprob: -5.54384708404541
    10. ' dx' → logprob: -5.79384708404541

Token 2150: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.282329261302948
    2. 'in' → logprob: -1.4073293209075928
    3. ',' → logprob: -7.157329082489014
    4. ',x' → logprob: -8.907329559326172
    5. '0' → logprob: -9.157329559326172
    6. ')' → logprob: -9.532329559326172
    7. '=' → logprob: -11.157329559326172
    8. 'x' → logprob: -11.657329559326172
    9. ' ' → logprob: -11.657329559326172
    10. 'range' → logprob: -11.657329559326172

Token 2151: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.136772021651268
    2. ' range' → logprob: -2.1367719173431396
    3. '0' → logprob: -4.636772155761719
    4. 'x' → logprob: -10.011772155761719
    5. 'in' → logprob: -11.136772155761719
    6. ' in' → logprob: -11.136772155761719
    7. '(range' → logprob: -11.636772155761719
    8. ' ' → logprob: -12.136772155761719
    9. '```' → logprob: -12.136772155761719
    10. ' xrange' → logprob: -12.386772155761719

Token 2152: '(M' (ID: 6103)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.18024536967277527
    2. '(M' → logprob: -1.8052453994750977
    3. '0' → logprob: -8.180245399475098
    4. '(' → logprob: -9.305245399475098
    5. ' M' → logprob: -10.305245399475098
    6. ')' → logprob: -10.805245399475098
    7. 'def' → logprob: -11.555245399475098
    8. '<M' → logprob: -11.680245399475098
    9. 'len' → logprob: -11.805245399475098
    10. '[M' → logprob: -12.055245399475098

Token 2153: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6953241229057312
    2. '):' → logprob: -0.6953241229057312
    3. ')' → logprob: -7.195323944091797
    4. '```' → logprob: -7.445323944091797
    5. '   ' → logprob: -8.195323944091797
    6. '+' → logprob: -8.320323944091797
    7. '**' → logprob: -9.570323944091797
    8. ':' → logprob: -10.070323944091797
    9. '<|end|>' → logprob: -10.445323944091797
    10. '
' → logprob: -10.695323944091797

Token 2154: '           ' (ID: 352)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7961061000823975
    2. '           ' → logprob: -1.2961061000823975
    3. 'for' → logprob: -1.9211061000823975
    4. '       ' → logprob: -2.5461061000823975
    5. '   ' → logprob: -3.6711061000823975
    6. '	for' → logprob: -4.671106338500977
    7. '```' → logprob: -5.171106338500977
    8. '<|end|>' → logprob: -5.546106338500977
    9. '	       ' → logprob: -5.921106338500977
    10. '	   ' → logprob: -6.921106338500977

Token 2155: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.20609259605407715
    2. ' for' → logprob: -1.7060925960540771
    3. '   ' → logprob: -5.456092834472656
    4. '           ' → logprob: -8.081092834472656
    5. '       ' → logprob: -9.956092834472656
    6. '	for' → logprob: -10.706092834472656
    7. ' ' → logprob: -11.706092834472656
    8. 'y' → logprob: -11.956092834472656
    9. 'range' → logprob: -13.831092834472656
    10. ' y' → logprob: -13.956092834472656

Token 2156: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.003178306156769395
    2. ' y' → logprob: -5.753178119659424
    3. 'x' → logprob: -14.878178596496582
    4. '```' → logprob: -16.503177642822266
    5. '   ' → logprob: -16.628177642822266
    6. '	y' → logprob: -17.003177642822266
    7. '<|end|>' → logprob: -17.378177642822266
    8. 'N' → logprob: -17.628177642822266
    9. ')y' → logprob: -17.628177642822266
    10. ''y' → logprob: -18.128177642822266

Token 2157: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5177764892578125
    2. 'in' → logprob: -1.0177764892578125
    3. '<|end|>' → logprob: -3.6427764892578125
    4. ',' → logprob: -4.8927764892578125
    5. ')' → logprob: -6.0177764892578125
    6. '=' → logprob: -6.3927764892578125
    7. '<|end|>' → logprob: -7.1427764892578125
    8. '...' → logprob: -7.6427764892578125
    9. '(x' → logprob: -7.8927764892578125
    10. '(' → logprob: -8.017776489257812

Token 2158: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3160220980644226
    2. ' range' → logprob: -1.3160221576690674
    3. '(range' → logprob: -6.066021919250488
    4. '0' → logprob: -7.816021919250488
    5. '(' → logprob: -11.691021919250488
    6. ' in' → logprob: -12.066021919250488
    7. 'in' → logprob: -12.191021919250488
    8. ')' → logprob: -12.441021919250488
    9. '	range' → logprob: -13.191021919250488
    10. ' (' → logprob: -13.691021919250488

Token 2159: '(N' (ID: 10564)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.06642892956733704
    2. '(' → logprob: -3.0664288997650146
    3. '(N' → logprob: -4.941429138183594
    4. 'M' → logprob: -5.566429138183594
    5. 'N' → logprob: -5.691429138183594
    6. ')' → logprob: -7.316429138183594
    7. '0' → logprob: -7.566429138183594
    8. '<|end|>' → logprob: -7.691429138183594
    9. ' (' → logprob: -7.816429138183594
    10. '=' → logprob: -8.316429138183594

Token 2160: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.149347722530365
    2. '           ' → logprob: -2.8993477821350098
    3. '):' → logprob: -3.6493477821350098
    4. ',' → logprob: -3.7743477821350098
    5. '               ' → logprob: -4.39934778213501
    6. ':
' → logprob: -4.89934778213501
    7. ':' → logprob: -4.89934778213501
    8. '       ' → logprob: -5.89934778213501
    9. '<|end|>' → logprob: -6.52434778213501
    10. '   ' → logprob: -7.27434778213501

Token 2161: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011382953263819218
    2. '               ' → logprob: -5.386383056640625
    3. '   ' → logprob: -6.011383056640625
    4. ' for' → logprob: -6.386383056640625
    5. '	       ' → logprob: -6.886383056640625
    6. '       ' → logprob: -7.011383056640625
    7. ' if' → logprob: -8.761383056640625
    8. '<|end|>' → logprob: -9.261383056640625
    9. '                   ' → logprob: -9.636383056640625
    10. ' ' → logprob: -9.761383056640625

Token 2162: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.011281012557446957
    2. ' for' → logprob: -5.2612810134887695
    3. '   ' → logprob: -5.7612810134887695
    4. '           ' → logprob: -6.1362810134887695
    5. '       ' → logprob: -8.01128101348877
    6. 'dist' → logprob: -8.63628101348877
    7. '	for' → logprob: -8.76128101348877
    8. ' ' → logprob: -10.38628101348877
    9. '               ' → logprob: -11.26128101348877
    10. '                   ' → logprob: -13.63628101348877

Token 2163: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.14916342496871948
    2. ' d' → logprob: -2.6491634845733643
    3. 'dir' → logprob: -2.8991634845733643
    4. ' dir' → logprob: -4.899163246154785
    5. ''' → logprob: -6.649163246154785
    6. ''d' → logprob: -6.649163246154785
    7. 'direction' → logprob: -6.649163246154785
    8. 'c' → logprob: -8.524163246154785
    9. 'dire' → logprob: -8.524163246154785
    10. 'ndir' → logprob: -8.524163246154785

Token 2164: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.1797909438610077
    2. ' in' → logprob: -1.80479097366333
    3. ''in' → logprob: -11.304790496826172
    4. ' ' → logprob: -11.679790496826172
    5. 'n' → logprob: -12.054790496826172
    6. '	in' → logprob: -12.054790496826172
    7. ''' → logprob: -13.054790496826172
    8. '_in' → logprob: -13.429790496826172
    9. ')' → logprob: -13.679790496826172
    10. '  ' → logprob: -13.804790496826172

Token 2165: ' ['' (ID: 5140)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.10209447145462036
    2. ''E' → logprob: -3.1020944118499756
    3. ''' → logprob: -3.3520944118499756
    4. '('' → logprob: -4.352094650268555
    5. 'next' → logprob: -6.352094650268555
    6. ''N' → logprob: -6.477094650268555
    7. ''S' → logprob: -8.352094650268555
    8. '(['' → logprob: -8.477094650268555
    9. '"E' → logprob: -9.102094650268555
    10. ' ['' → logprob: -9.102094650268555

Token 2166: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.03085925802588463
    2. ''E' → logprob: -3.5308592319488525
    3. 'N' → logprob: -7.280859470367432
    4. ''' → logprob: -8.530858993530273
    5. ''N' → logprob: -9.905858993530273
    6. ' E' → logprob: -10.030858993530273
    7. '"E' → logprob: -10.155858993530273
    8. 'S' → logprob: -11.280858993530273
    9. ''S' → logprob: -11.280858993530273
    10. '’E' → logprob: -11.655858993530273

Token 2167: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.03952630236744881
    2. '',' → logprob: -3.2895262241363525
    3. ',' → logprob: -6.914526462554932
    4. '',"' → logprob: -9.039525985717773
    5. '','','' → logprob: -9.164525985717773
    6. ''' → logprob: -9.539525985717773
    7. ',S' → logprob: -10.039525985717773
    8. ','' → logprob: -10.039525985717773
    9. ' ','' → logprob: -10.789525985717773
    10. '',
' → logprob: -11.289525985717773

Token 2168: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.04145871102809906
    2. 'S' → logprob: -3.4164586067199707
    3. 'N' → logprob: -5.166458606719971
    4. ''S' → logprob: -6.416458606719971
    5. ''' → logprob: -8.541459083557129
    6. ''N' → logprob: -8.666459083557129
    7. '['' → logprob: -10.541459083557129
    8. '<|end|>' → logprob: -11.166459083557129
    9. ' '' → logprob: -12.291459083557129
    10. '('' → logprob: -12.416459083557129

Token 2169: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.0347864106297493
    2. ','' → logprob: -3.4097864627838135
    3. '',' → logprob: -7.159786224365234
    4. ',' → logprob: -9.159786224365234
    5. ',N' → logprob: -9.159786224365234
    6. ''N' → logprob: -9.909786224365234
    7. '   ' → logprob: -10.034786224365234
    8. ''' → logprob: -10.534786224365234
    9. ''S' → logprob: -12.159786224365234
    10. '',
' → logprob: -12.159786224365234

Token 2170: 'N' (ID: 45)
  Prédit: ''N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''N' → logprob: -0.38839590549468994
    2. 'N' → logprob: -1.13839590549469
    3. ''S' → logprob: -6.5133957862854
    4. '['' → logprob: -11.263396263122559
    5. '('' → logprob: -11.888396263122559
    6. ''' → logprob: -12.388396263122559
    7. 'S' → logprob: -12.638396263122559
    8. ' '' → logprob: -12.763396263122559
    9. ' ' → logprob: -13.013396263122559
    10. ' N' → logprob: -13.388396263122559

Token 2171: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.00010354319238103926
    2. ','' → logprob: -9.750103950500488
    3. '',' → logprob: -10.500103950500488
    4. '',"' → logprob: -12.625103950500488
    5. ''S' → logprob: -12.625103950500488
    6. '','','' → logprob: -12.750103950500488
    7. ',' → logprob: -12.875103950500488
    8. ''' → logprob: -13.500103950500488
    9. '","' → logprob: -14.000103950500488
    10. ',S' → logprob: -14.125103950500488

Token 2172: 'S' (ID: 50)
  Prédit: ''S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''S' → logprob: -0.003603990189731121
    2. 'S' → logprob: -5.628603935241699
    3. ''s' → logprob: -13.3786039352417
    4. ''' → logprob: -14.0036039352417
    5. '"S' → logprob: -14.7536039352417
    6. '```' → logprob: -15.0036039352417
    7. '['' → logprob: -15.6286039352417
    8. ''E' → logprob: -16.003604888916016
    9. '{'' → logprob: -16.003604888916016
    10. '’S' → logprob: -16.753604888916016

Token 2173: '']:
' (ID: 44766)
  Prédit: ']:
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.6386876106262207
    2. '']:
' → logprob: -0.7636876106262207
    3. '']:' → logprob: -5.888687610626221
    4. ']:' → logprob: -6.013687610626221
    5. '']' → logprob: -8.013687133789062
    6. '"]:
' → logprob: -8.763687133789062
    7. ']' → logprob: -8.763687133789062
    8. '):
' → logprob: -9.888687133789062
    9. ']:
' → logprob: -9.888687133789062
    10. '','' → logprob: -10.638687133789062

Token 2174: '                   ' (ID: 699)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7393593192100525
    2. '                           ' → logprob: -2.1143593788146973
    3. '<|end|>' → logprob: -2.6143593788146973
    4. '                   ' → logprob: -2.7393593788146973
    5. '               ' → logprob: -2.9893593788146973
    6. '[' → logprob: -3.1143593788146973
    7. '   ' → logprob: -3.7393593788146973
    8. '```' → logprob: -3.9893593788146973
    9. '       ' → logprob: -4.114359378814697
    10. '                       ' → logprob: -4.239359378814697

Token 2175: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.012947497889399529
    2. '                       ' → logprob: -4.5129475593566895
    3. ' dist' → logprob: -6.3879475593566895
    4. '   ' → logprob: -9.387947082519531
    5. '	dist' → logprob: -9.637947082519531
    6. '       ' → logprob: -10.387947082519531
    7. '                   ' → logprob: -10.512947082519531
    8. '                           ' → logprob: -12.137947082519531
    9. ' ' → logprob: -13.387947082519531
    10. '           ' → logprob: -14.137947082519531

Token 2176: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.003404428483918309
    2. '[((' → logprob: -5.75340461730957
    3. '((' → logprob: -9.12840461730957
    4. '[' → logprob: -9.75340461730957
    5. '[
' → logprob: -10.50340461730957
    6. '```' → logprob: -11.12840461730957
    7. '([(' → logprob: -12.37840461730957
    8. '   ' → logprob: -12.50340461730957
    9. '.setdefault' → logprob: -12.75340461730957
    10. ' [(' → logprob: -13.00340461730957

Token 2177: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0022052128333598375
    2. '(x' → logprob: -6.1272053718566895
    3. ' x' → logprob: -11.627204895019531
    4. ' (' → logprob: -12.252204895019531
    5. '{x' → logprob: -13.002204895019531
    6. ')x' → logprob: -13.627204895019531
    7. '(' → logprob: -13.752204895019531
    8. '0' → logprob: -14.252204895019531
    9. ''x' → logprob: -15.002204895019531
    10. '   ' → logprob: -15.377204895019531

Token 2178: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.10031137615442276
    2. ',' → logprob: -2.350311279296875
    3. '','' → logprob: -10.100311279296875
    4. ','' → logprob: -11.225311279296875
    5. '',' → logprob: -11.225311279296875
    6. ' ,' → logprob: -11.975311279296875
    7. '),(' → logprob: -12.225311279296875
    8. ')' → logprob: -12.975311279296875
    9. ',
' → logprob: -13.100311279296875
    10. ',",' → logprob: -13.350311279296875

Token 2179: ',d' (ID: 26159)
  Prédit: ',d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',d' → logprob: -0.0010462664067745209
    2. ',' → logprob: -6.876046180725098
    3. ' ,' → logprob: -12.001046180725098
    4. 'd' → logprob: -12.626046180725098
    5. '',' → logprob: -12.876046180725098
    6. ','' → logprob: -15.001046180725098
    7. '','' → logprob: -15.126046180725098
    8. '   ' → logprob: -15.251046180725098
    9. ',D' → logprob: -16.251047134399414
    10. ' ' → logprob: -16.501047134399414

Token 2180: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.011391683481633663
    2. ')' → logprob: -4.511391639709473
    3. ']' → logprob: -8.136391639709473
    4. ' )' → logprob: -10.761391639709473
    5. '])' → logprob: -10.886391639709473
    6. ']=' → logprob: -12.511391639709473
    7. ')=' → logprob: -13.511391639709473
    8. '])]' → logprob: -13.636391639709473
    9. '')]' → logprob: -14.136391639709473
    10. ']]=' → logprob: -14.261391639709473

Token 2181: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.009762817993760109
    2. ' =' → logprob: -4.634762763977051
    3. '=float' → logprob: -12.00976276397705
    4. ']=' → logprob: -15.50976276397705
    5. '=int' → logprob: -15.63476276397705
    6. '<|end|>' → logprob: -16.134763717651367
    7. '```' → logprob: -16.509763717651367
    8. '=
' → logprob: -16.759763717651367
    9. ')=' → logprob: -16.759763717651367
    10. '＝' → logprob: -17.009763717651367

Token 2182: ' INF' (ID: 69196)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -9.686778503237292e-05
    2. ' INF' → logprob: -9.375097274780273
    3. '10' → logprob: -11.375097274780273
    4. '999' → logprob: -15.875097274780273
    5. '_INF' → logprob: -16.500097274780273
    6. '   ' → logprob: -16.750097274780273
    7. 'IN' → logprob: -16.750097274780273
    8. ' ' → logprob: -17.125097274780273
    9. 'inf' → logprob: -17.250097274780273
    10. '100' → logprob: -17.500097274780273

Token 2183: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2184: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.975328266620636
    2. '       ' → logprob: -1.2253282070159912
    3. 'dist' → logprob: -1.7253282070159912
    4. '<|end|>' → logprob: -2.225328207015991
    5. '```' → logprob: -4.47532844543457
    6. '        
' → logprob: -4.97532844543457
    7. ' dist' → logprob: -5.60032844543457
    8. ' 
' → logprob: -5.97532844543457
    9. '<|end|>' → logprob: -5.97532844543457
    10. '\x' → logprob: -6.35032844543457

Token 2185: ' sx' (ID: 39428)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.08173926919698715
    2. '       ' → logprob: -3.3317391872406006
    3. 'start' → logprob: -3.5817391872406006
    4. ' dist' → logprob: -4.70673942565918
    5. 'x' → logprob: -5.33173942565918
    6. ' start' → logprob: -7.70673942565918
    7. ' x' → logprob: -8.70673942565918
    8. '   ' → logprob: -9.33173942565918
    9. '```' → logprob: -9.45673942565918
    10. '
' → logprob: -10.20673942565918

Token 2186: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11466693878173828
    2. ' =' → logprob: -3.3646669387817383
    3. '=' → logprob: -3.9896669387817383
    4. ',s' → logprob: -3.9896669387817383
    5. ',x' → logprob: -4.239666938781738
    6. ',y' → logprob: -4.239666938781738
    7. ' ,' → logprob: -5.489666938781738
    8. '=s' → logprob: -6.864666938781738
    9. '_,' → logprob: -7.364666938781738
    10. 's' → logprob: -7.489666938781738

Token 2187: 'sy' (ID: 5611)
  Prédit: 'sy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sy' → logprob: -0.018418103456497192
    2. ' sy' → logprob: -4.018418312072754
    3. 'y' → logprob: -9.268418312072754
    4. '0' → logprob: -9.518418312072754
    5. 's' → logprob: -9.893418312072754
    6. '_sy' → logprob: -10.393418312072754
    7. 'sl' → logprob: -12.393418312072754
    8. 'sys' → logprob: -12.393418312072754
    9. 'syz' → logprob: -13.143418312072754
    10. ' ' → logprob: -13.268418312072754

Token 2188: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6197137832641602
    2. ' =' → logprob: -0.8697137832641602
    3. '=s' → logprob: -3.24471378326416
    4. ',' → logprob: -6.11971378326416
    5. ',s' → logprob: -6.61971378326416
    6. '=start' → logprob: -9.61971378326416
    7. '=h' → logprob: -9.99471378326416
    8. ',h' → logprob: -10.11971378326416
    9. '=x' → logprob: -10.24471378326416
    10. '=user' → logprob: -11.24471378326416

Token 2189: ' coord' (ID: 25819)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.005265425890684128
    2. ' h' → logprob: -5.255265235900879
    3. 'coord' → logprob: -11.005265235900879
    4. '0' → logprob: -11.380265235900879
    5. ' coord' → logprob: -12.755265235900879
    6. '(h' → logprob: -15.380265235900879
    7. 'start' → logprob: -15.630265235900879
    8. ' ' → logprob: -16.380266189575195
    9. '[h' → logprob: -16.630266189575195
    10. 'parse' → logprob: -17.005266189575195

Token 2190: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.1722525805234909
    2. '(start' → logprob: -1.9222525358200073
    3. 'start' → logprob: -5.172252655029297
    4. 'Index' → logprob: -6.297252655029297
    5. 'index' → logprob: -6.422252655029297
    6. '[start' → logprob: -6.547252655029297
    7. '(s' → logprob: -7.422252655029297
    8. '_list' → logprob: -8.047252655029297
    9. '=start' → logprob: -8.547252655029297
    10. '_start' → logprob: -10.172252655029297

Token 2191: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.1269361972808838
    2. 'start' → logprob: -2.126936197280884
    3. '(' → logprob: -11.876935958862305
    4. ' start' → logprob: -14.626935958862305
    5. '[start' → logprob: -15.126935958862305
    6. ' (' → logprob: -15.876935958862305
    7. '=start' → logprob: -16.126935958862305
    8. '(
' → logprob: -17.501935958862305
    9. ',start' → logprob: -17.626935958862305
    10. ':start' → logprob: -18.001935958862305

Token 2192: '[' (ID: 58)
  Prédit: '(start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.1664697676897049
    2. 'start' → logprob: -1.9164698123931885
    3. '[start' → logprob: -5.666469573974609
    4. '(s' → logprob: -6.541469573974609
    5. '(' → logprob: -8.04146957397461
    6. 'sx' → logprob: -8.16646957397461
    7. ',start' → logprob: -8.54146957397461
    8. '=start' → logprob: -9.04146957397461
    9. '[' → logprob: -9.29146957397461
    10. ' (' → logprob: -9.41646957397461

Token 2193: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.843177233240567e-05
    2. '[' → logprob: -11.000018119812012
    3. ' ' → logprob: -14.625018119812012
    4. '(' → logprob: -14.875018119812012
    5. 's' → logprob: -15.125018119812012
    6. ')' → logprob: -15.500018119812012
    7. 'x' → logprob: -16.250019073486328
    8. '<|end|>' → logprob: -17.125019073486328
    9. '1' → logprob: -17.500019073486328
    10. '
' → logprob: -17.750019073486328

Token 2194: '],' (ID: 2155)
  Prédit: ',s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',s' → logprob: -0.3875728249549866
    2. ',' → logprob: -1.1375727653503418
    3. ' ,' → logprob: -7.762572765350342
    4. ',x' → logprob: -8.8875732421875
    5. ',h' → logprob: -10.0125732421875
    6. ',start' → logprob: -10.3875732421875
    7. '(s' → logprob: -11.1375732421875
    8. '),' → logprob: -11.3875732421875
    9. ',S' → logprob: -12.1375732421875
    10. '```' → logprob: -12.2625732421875

Token 2195: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -1.306760805164231e-05
    2. ' start' → logprob: -11.25001335144043
    3. 's' → logprob: -18.12501335144043
    4. '[start' → logprob: -18.25001335144043
    5. '(start' → logprob: -19.00001335144043
    6. '	start' → logprob: -20.87501335144043
    7. '=start' → logprob: -20.87501335144043
    8. 'stop' → logprob: -21.00001335144043
    9. '```' → logprob: -21.62501335144043
    10. ',start' → logprob: -21.75001335144043

Token 2196: '[' (ID: 58)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.02614561654627323
    2. '(start' → logprob: -3.9011456966400146
    3. ',' → logprob: -6.2761454582214355
    4. '[start' → logprob: -6.4011454582214355
    5. ',start' → logprob: -6.6511454582214355
    6. ')' → logprob: -8.526145935058594
    7. '[' → logprob: -8.651145935058594
    8. 'sy' → logprob: -9.151145935058594
    9. '),' → logprob: -9.651145935058594
    10. ' start' → logprob: -9.776145935058594

Token 2197: '1' (ID: 16)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.06520326435565948
    2. '1' → logprob: -2.9402031898498535
    3. 'sy' → logprob: -4.8152031898498535
    4. '0' → logprob: -6.4402031898498535
    5. ' start' → logprob: -8.440203666687012
    6. '[start' → logprob: -9.065203666687012
    7. 's' → logprob: -9.690203666687012
    8. '(start' → logprob: -10.190203666687012
    9. 'sx' → logprob: -10.440203666687012
    10. ':start' → logprob: -10.690203666687012

Token 2198: '],' (ID: 2155)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.12865321338176727
    2. ',' → logprob: -2.7536532878875732
    3. ')' → logprob: -3.0036532878875732
    4. ',s' → logprob: -5.253653049468994
    5. ')s' → logprob: -7.003653049468994
    6. '),(' → logprob: -7.503653049468994
    7. '],' → logprob: -8.128653526306152
    8. ')
' → logprob: -8.753653526306152
    9. ' ,' → logprob: -9.753653526306152
    10. '```' → logprob: -10.128653526306152

Token 2199: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.00012368128227535635
    2. ' h' → logprob: -9.000123977661133
    3. '_h' → logprob: -16.250123977661133
    4. '[h' → logprob: -16.875123977661133
    5. '	h' → logprob: -17.750123977661133
    6. '   ' → logprob: -17.875123977661133
    7. '```' → logprob: -18.125123977661133
    8. '<h' → logprob: -18.625123977661133
    9. ',h' → logprob: -19.125123977661133
    10. ')' → logprob: -19.250123977661133

Token 2200: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0002390594017924741
    2. 'l' → logprob: -8.375239372253418
    3. '[' → logprob: -13.000239372253418
    4. 'h' → logprob: -13.125239372253418
    5. '```' → logprob: -14.000239372253418
    6. '_list' → logprob: -14.750239372253418
    7. 's' → logprob: -14.875239372253418
    8. 'lista' → logprob: -15.250239372253418
    9. 'liste' → logprob: -15.250239372253418
    10. 't' → logprob: -15.375239372253418

Token 2201: ',v' (ID: 30680)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006151011912152171
    2. ',s' → logprob: -7.500615119934082
    3. ' ,' → logprob: -9.750615119934082
    4. '),' → logprob: -12.875615119934082
    5. ',S' → logprob: -14.625615119934082
    6. ')' → logprob: -15.000615119934082
    7. '```' → logprob: -15.500615119934082
    8. ',
' → logprob: -16.000614166259766
    9. ',h' → logprob: -16.250614166259766
    10. '`,' → logprob: -17.250614166259766

Token 2202: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00040898515726439655
    2. ')' → logprob: -8.625409126281738
    3. 'ist' → logprob: -9.125409126281738
    4. '_list' → logprob: -9.750409126281738
    5. 'sy' → logprob: -10.875409126281738
    6. ']' → logprob: -11.750409126281738
    7. 'elist' → logprob: -11.750409126281738
    8. '[' → logprob: -12.625409126281738
    9. '   ' → logprob: -12.750409126281738
    10. ' list' → logprob: -13.125409126281738

Token 2203: ')
' (ID: 446)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.1502651870250702
    2. ')' → logprob: -2.1502652168273926
    3. ')
' → logprob: -3.9002652168273926
    4. ')s' → logprob: -6.900265216827393
    5. ',' → logprob: -7.275265216827393
    6. '```' → logprob: -8.150264739990234
    7. ')+' → logprob: -8.900264739990234
    8. '   ' → logprob: -9.025264739990234
    9. '       ' → logprob: -9.150264739990234
    10. ',s' → logprob: -9.400264739990234

Token 2204: '       ' (ID: 309)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.1437578648328781
    2. ' dist' → logprob: -2.0187578201293945
    3. 'heap' → logprob: -8.268757820129395
    4. 'd' → logprob: -8.518757820129395
    5. '```' → logprob: -8.768757820129395
    6. ' heap' → logprob: -9.393757820129395
    7. 'sx' → logprob: -9.893757820129395
    8. ' sx' → logprob: -10.143757820129395
    9. '   ' → logprob: -10.518757820129395
    10. 'token' → logprob: -10.518757820129395

Token 2205: ' gx' (ID: 142840)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.013634827919304371
    2. 'heap' → logprob: -4.63863468170166
    3. 'dir' → logprob: -6.76363468170166
    4. 'start' → logprob: -7.13863468170166
    5. 'he' → logprob: -7.63863468170166
    6. 'for' → logprob: -7.88863468170166
    7. 'initial' → logprob: -8.51363468170166
    8. 'dx' → logprob: -8.63863468170166
    9. ' dist' → logprob: -8.76363468170166
    10. 'import' → logprob: -8.76363468170166

Token 2206: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02677718736231327
    2. ',g' → logprob: -3.6517772674560547
    3. ',y' → logprob: -8.151777267456055
    4. ',x' → logprob: -9.776777267456055
    5. ',s' → logprob: -10.276777267456055
    6. ' ,' → logprob: -10.526777267456055
    7. ',
' → logprob: -11.026777267456055
    8. ',G' → logprob: -11.151777267456055
    9. '=' → logprob: -11.526777267456055
    10. '_,' → logprob: -11.901777267456055

Token 2207: 'gy' (ID: 4544)
  Prédit: 'gy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gy' → logprob: -2.935296834039036e-06
    2. ' gy' → logprob: -12.75000286102295
    3. 'gyl' → logprob: -19.750003814697266
    4. 'gyz' → logprob: -19.875003814697266
    5. 'gx' → logprob: -20.375003814697266
    6. 'Gy' → logprob: -20.500003814697266
    7. 'go' → logprob: -21.000003814697266
    8. 'gyi' → logprob: -21.125003814697266
    9. 'gyro' → logprob: -21.125003814697266
    10. 'g' → logprob: -21.500003814697266

Token 2208: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10026145726442337
    2. ' =' → logprob: -2.3502614498138428
    3. ',' → logprob: -10.975261688232422
    4. '=g' → logprob: -11.100261688232422
    5. '=
' → logprob: -12.100261688232422
    6. ')' → logprob: -12.600261688232422
    7. '=user' → logprob: -12.850261688232422
    8. '=s' → logprob: -12.975261688232422
    9. ',g' → logprob: -13.475261688232422
    10. '=int' → logprob: -13.725261688232422

Token 2209: ' coord' (ID: 25819)
  Prédit: 'coord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coord' → logprob: -0.0009118211455643177
    2. ' coord' → logprob: -7.000911712646484
    3. '(coord' → logprob: -15.125911712646484
    4. 'cord' → logprob: -17.375911712646484
    5. '.coord' → logprob: -18.625911712646484
    6. 'coords' → logprob: -18.750911712646484
    7. '_coord' → logprob: -19.625911712646484
    8. 'co' → logprob: -19.750911712646484
    9. 'Coord' → logprob: -20.750911712646484
    10. '```' → logprob: -20.750911712646484

Token 2210: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0005829381989315152
    2. 'index' → logprob: -7.500583171844482
    3. 'coord' → logprob: -10.750582695007324
    4. '   ' → logprob: -12.375582695007324
    5. 'Index' → logprob: -12.875582695007324
    6. '_INDEX' → logprob: -14.500582695007324
    7. '(coord' → logprob: -14.625582695007324
    8. '(' → logprob: -15.125582695007324
    9. '       ' → logprob: -16.50058364868164
    10. '``' → logprob: -16.62558364868164

Token 2211: '(goal' (ID: 196945)
  Prédit: '(goal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(goal' → logprob: -0.002475777640938759
    2. 'goal' → logprob: -6.002475738525391
    3. '(' → logprob: -16.75247573852539
    4. ' goal' → logprob: -16.87747573852539
    5. '(go' → logprob: -18.37747573852539
    6. '.goal' → logprob: -18.87747573852539
    7. 'go' → logprob: -20.62747573852539
    8. '_goal' → logprob: -21.12747573852539
    9. 'Goal' → logprob: -21.25247573852539
    10. ' (' → logprob: -22.50247573852539

Token 2212: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07537896186113358
    2. '(goal' → logprob: -3.450378894805908
    3. '(start' → logprob: -4.075378894805908
    4. '(' → logprob: -4.200378894805908
    5. 'start' → logprob: -5.825378894805908
    6. '[start' → logprob: -6.200378894805908
    7. '(g' → logprob: -6.450378894805908
    8. '0' → logprob: -7.450378894805908
    9. ',' → logprob: -7.700378894805908
    10. 'goal' → logprob: -8.075379371643066

Token 2213: '0' (ID: 15)
  Prédit: 'goal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'goal' → logprob: -0.695772647857666
    2. '0' → logprob: -1.070772647857666
    3. '[' → logprob: -2.070772647857666
    4. '(goal' → logprob: -3.445772647857666
    5. 'start' → logprob: -8.570772171020508
    6. '(' → logprob: -8.695772171020508
    7. ' goal' → logprob: -9.695772171020508
    8. ' ' → logprob: -10.570772171020508
    9. ')' → logprob: -10.945772171020508
    10. '   ' → logprob: -10.945772171020508

Token 2214: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001991298486245796
    2. ' ,' → logprob: -8.875199317932129
    3. ',g' → logprob: -10.750199317932129
    4. '],' → logprob: -10.875199317932129
    5. '[' → logprob: -11.750199317932129
    6. ',s' → logprob: -13.375199317932129
    7. '),' → logprob: -13.750199317932129
    8. ',y' → logprob: -13.875199317932129
    9. '[],' → logprob: -14.000199317932129
    10. '>,' → logprob: -14.250199317932129

Token 2215: ' goal' (ID: 8583)
  Prédit: 'goal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'goal' → logprob: -4.4849443838757e-06
    2. ' goal' → logprob: -12.375004768371582
    3. '(goal' → logprob: -15.375004768371582
    4. '.goal' → logprob: -18.750003814697266
    5. 'start' → logprob: -20.250003814697266
    6. '   ' → logprob: -20.875003814697266
    7. 'g' → logprob: -21.500003814697266
    8. ' ' → logprob: -21.625003814697266
    9. '  ' → logprob: -21.875003814697266
    10. '       ' → logprob: -22.625003814697266

Token 2216: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1062417030334473
    2. ',' → logprob: -1.8562417030334473
    3. '1' → logprob: -2.1062417030334473
    4. '2' → logprob: -2.2312417030334473
    5. '_list' → logprob: -2.2312417030334473
    6. 'list' → logprob: -3.2312417030334473
    7. '   ' → logprob: -3.6062417030334473
    8. ',list' → logprob: -3.6062417030334473
    9. '```' → logprob: -3.8562417030334473
    10. ',y' → logprob: -4.231241703033447

Token 2217: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.551721889991313e-05
    2. 'gy' → logprob: -9.875065803527832
    3. 'y' → logprob: -12.125065803527832
    4. '   ' → logprob: -12.875065803527832
    5. 'sy' → logprob: -13.500065803527832
    6. ' ' → logprob: -13.750065803527832
    7. '0' → logprob: -13.750065803527832
    8. '```' → logprob: -15.125065803527832
    9. '[' → logprob: -15.562565803527832
    10. '    ' → logprob: -15.687565803527832

Token 2218: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.385494589805603
    2. ',h' → logprob: -1.260494589805603
    3. '),' → logprob: -3.7604947090148926
    4. ',g' → logprob: -4.885494709014893
    5. ')' → logprob: -5.885494709014893
    6. ',s' → logprob: -6.385494709014893
    7. '],' → logprob: -8.260494232177734
    8. ' ,' → logprob: -8.510494232177734
    9. ',x' → logprob: -9.135494232177734
    10. '```' → logprob: -9.385494232177734

Token 2219: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0006953967968001962
    2. ' h' → logprob: -7.50069522857666
    3. 'v' → logprob: -9.25069522857666
    4. 'goal' → logprob: -10.12569522857666
    5. 'gy' → logprob: -13.37569522857666
    6. ' v' → logprob: -14.00069522857666
    7. 'g' → logprob: -14.00069522857666
    8. 'gh' → logprob: -14.25069522857666
    9. '   ' → logprob: -14.37569522857666
    10. ' goal' → logprob: -14.62569522857666

Token 2220: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -8.895480277715251e-06
    2. 'ist' → logprob: -11.750008583068848
    3. '_list' → logprob: -14.500008583068848
    4. '```' → logprob: -15.500008583068848
    5. ' list' → logprob: -16.500009536743164
    6. '``' → logprob: -17.000009536743164
    7. '	list' → logprob: -17.375009536743164
    8. '=list' → logprob: -17.625009536743164
    9. 'lst' → logprob: -17.750009536743164
    10. 'List' → logprob: -18.125009536743164

Token 2221: ',v' (ID: 30680)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006209735292941332
    2. ',v' → logprob: -5.131209850311279
    3. ',g' → logprob: -8.881209373474121
    4. '[' → logprob: -9.631209373474121
    5. ' ,' → logprob: -9.881209373474121
    6. '[v' → logprob: -11.131209373474121
    7. '```' → logprob: -12.506209373474121
    8. '   ' → logprob: -13.756209373474121
    9. ',user' → logprob: -13.756209373474121
    10. ',[' → logprob: -13.881209373474121

Token 2222: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.011061619967222214
    2. 'ist' → logprob: -4.511061668395996
    3. '[' → logprob: -12.261061668395996
    4. '```' → logprob: -12.886061668395996
    5. '_list' → logprob: -13.136061668395996
    6. ' list' → logprob: -13.761061668395996
    7. 'lst' → logprob: -14.386061668395996
    8. 'elist' → logprob: -14.761061668395996
    9. 'isted' → logprob: -14.886061668395996
    10. '``' → logprob: -14.886061668395996

Token 2223: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.03400157392024994
    2. ')' → logprob: -3.409001588821411
    3. '       ' → logprob: -8.284001350402832
    4. '```' → logprob: -9.784001350402832
    5. ')
' → logprob: -11.659001350402832
    6. '')
' → logprob: -11.909001350402832
    7. '   ' → logprob: -11.909001350402832
    8. '``' → logprob: -12.159001350402832
    9. ' )
' → logprob: -12.409001350402832
    10. ')

' → logprob: -13.159001350402832

Token 2224: '       ' (ID: 309)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0474785715341568
    2. 'heap' → logprob: -3.672478675842285
    3. '   ' → logprob: -4.797478675842285
    4. ' dist' → logprob: -5.047478675842285
    5. '```' → logprob: -5.172478675842285
    6. ' heap' → logprob: -7.672478675842285
    7. '
' → logprob: -9.797478675842285
    8. '	dist' → logprob: -10.922478675842285
    9. '``' → logprob: -11.172478675842285
    10. '_dist' → logprob: -11.422478675842285

Token 2225: ' start' (ID: 1604)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.001986448187381029
    2. 'heap' → logprob: -6.501986503601074
    3. ' dist' → logprob: -8.626986503601074
    4. '   ' → logprob: -9.001986503601074
    5. '```' → logprob: -9.126986503601074
    6. '
' → logprob: -10.501986503601074
    7. 'import' → logprob: -11.001986503601074
    8. '       ' → logprob: -11.376986503601074
    9. 'for' → logprob: -12.126986503601074
    10. 'token' → logprob: -12.626986503601074

Token 2226: '_dir' (ID: 9526)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.38309991359710693
    2. 'dist' → logprob: -1.883099913597107
    3. '_state' → logprob: -2.7581000328063965
    4. '_token' → logprob: -3.3831000328063965
    5. ' =' → logprob: -3.5081000328063965
    6. '=' → logprob: -4.6331000328063965
    7. 'state' → logprob: -5.0081000328063965
    8. '```' → logprob: -5.5081000328063965
    9. '=(' → logprob: -5.6331000328063965
    10. '[(' → logprob: -6.2581000328063965

Token 2227: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03388139232993126
    2. '=' → logprob: -3.533881425857544
    3. '='' → logprob: -5.658881187438965
    4. ' ='' → logprob: -8.033881187438965
    5. '=('' → logprob: -8.408881187438965
    6. ')' → logprob: -10.533881187438965
    7. ',' → logprob: -10.783881187438965
    8. '=['' → logprob: -11.658881187438965
    9. '=(' → logprob: -12.158881187438965
    10. '={'' → logprob: -12.783881187438965

Token 2228: ' '' (ID: 461)
  Prédit: ''E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''E' → logprob: -0.04882069677114487
    2. ' '' → logprob: -3.048820734024048
    3. ''' → logprob: -8.798820495605469
    4. 'E' → logprob: -10.423820495605469
    5. ''S' → logprob: -11.423820495605469
    6. '’E' → logprob: -11.548820495605469
    7. '"E' → logprob: -11.798820495605469
    8. ''É' → logprob: -11.923820495605469
    9. ' ' → logprob: -12.423820495605469
    10. '('' → logprob: -12.548820495605469

Token 2229: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -1.759734732331708e-05
    2. ''E' → logprob: -11.125017166137695
    3. ' E' → logprob: -13.125017166137695
    4. ''' → logprob: -14.625017166137695
    5. 'East' → logprob: -16.125017166137695
    6. '"E' → logprob: -16.250017166137695
    7. '```' → logprob: -17.500017166137695
    8. '>E' → logprob: -17.625017166137695
    9. '('' → logprob: -18.250017166137695
    10. '['' → logprob: -18.250017166137695

Token 2230: ''
' (ID: 2207)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0687522366642952
    2. ')' → logprob: -3.9437522888183594
    3. 'heap' → logprob: -3.9437522888183594
    4. '
' → logprob: -4.193752288818359
    5. 'dist' → logprob: -4.943752288818359
    6. ',' → logprob: -6.193752288818359
    7. 'import' → logprob: -6.943752288818359
    8. ' heap' → logprob: -7.568752288818359
    9. '')
' → logprob: -7.818752288818359
    10. '(heap' → logprob: -8.19375228881836

Token 2231: '       ' (ID: 309)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.17146804928779602
    2. 'heap' → logprob: -1.9214680194854736
    3. '```' → logprob: -4.796468257904053
    4. '   ' → logprob: -6.171468257904053
    5. ' dist' → logprob: -7.921468257904053
    6. 'import' → logprob: -9.046467781066895
    7. ' heap' → logprob: -9.421467781066895
    8. '``' → logprob: -9.421467781066895
    9. '
' → logprob: -9.671467781066895
    10. 'token' → logprob: -10.296467781066895

Token 2232: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.008920395746827126
    2. 'heap' → logprob: -4.758920192718506
    3. '   ' → logprob: -9.133920669555664
    4. 'import' → logprob: -9.508920669555664
    5. ' dist' → logprob: -9.633920669555664
    6. '```' → logprob: -10.508920669555664
    7. '       ' → logprob: -10.758920669555664
    8. '
' → logprob: -12.258920669555664
    9. ' heap' → logprob: -12.633920669555664
    10. '	dist' → logprob: -14.383920669555664

Token 2233: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -1.3544423381972592e-05
    2. '```' → logprob: -11.75001335144043
    3. '[s' → logprob: -12.75001335144043
    4. '[' → logprob: -13.50001335144043
    5. '[((' → logprob: -14.87501335144043
    6. '``' → logprob: -15.37501335144043
    7. ' [(' → logprob: -15.62501335144043
    8. '[
' → logprob: -16.00001335144043
    9. '(s' → logprob: -17.00001335144043
    10. '=' → logprob: -17.00001335144043

Token 2234: 'sx' (ID: 102754)
  Prédit: 'sx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sx' → logprob: -5.2524021157296374e-05
    2. '(s' → logprob: -10.250052452087402
    3. ' sx' → logprob: -11.000052452087402
    4. 's' → logprob: -15.500052452087402
    5. '   ' → logprob: -16.12505340576172
    6. '	s' → logprob: -17.87505340576172
    7. ' (' → logprob: -17.87505340576172
    8. ')s' → logprob: -18.37505340576172
    9. ',s' → logprob: -19.00005340576172
    10. '[s' → logprob: -19.00005340576172

Token 2235: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03921915963292122
    2. ',s' → logprob: -3.2892191410064697
    3. '<|end|>' → logprob: -7.289219379425049
    4. '<|end|>' → logprob: -8.91421890258789
    5. '','' → logprob: -9.28921890258789
    6. ' ,' → logprob: -9.41421890258789
    7. ',S' → logprob: -10.66421890258789
    8. ',x' → logprob: -10.78921890258789
    9. '),(' → logprob: -10.91421890258789
    10. ',
' → logprob: -11.28921890258789

Token 2236: 'sy' (ID: 5611)
  Prédit: 'sy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sy' → logprob: -2.8802491215174086e-05
    2. ' sy' → logprob: -10.500028610229492
    3. '_sy' → logprob: -14.375028610229492
    4. 'syz' → logprob: -15.000028610229492
    5. '.sy' → logprob: -16.000028610229492
    6. 'Sy' → logprob: -16.375028610229492
    7. ' ' → logprob: -16.500028610229492
    8. '<|end|>' → logprob: -17.375028610229492
    9. '<|end|>' → logprob: -17.375028610229492
    10. '   ' → logprob: -18.250028610229492

Token 2237: ',start' (ID: 121128)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4358087182044983
    2. ',start' → logprob: -1.0608086585998535
    3. ','' → logprob: -5.3108086585998535
    4. ',s' → logprob: -6.8108086585998535
    5. ',next' → logprob: -7.6858086585998535
    6. '','' → logprob: -8.310809135437012
    7. '',' → logprob: -9.560809135437012
    8. ',E' → logprob: -9.810809135437012
    9. ',d' → logprob: -10.435809135437012
    10. ',end' → logprob: -10.435809135437012

Token 2238: '_dir' (ID: 9526)
  Prédit: '_dir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dir' → logprob: -0.5919324159622192
    2. ')]' → logprob: -1.0919324159622192
    3. ''_' → logprob: -3.4669322967529297
    4. ',' → logprob: -3.8419322967529297
    5. ''' → logprob: -4.21693229675293
    6. '_' → logprob: -4.46693229675293
    7. 'dir' → logprob: -4.96693229675293
    8. ')' → logprob: -5.21693229675293
    9. 'Dir' → logprob: -6.09193229675293
    10. '',' → logprob: -6.09193229675293

Token 2239: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.7248458862304688
    2. ')' → logprob: -1.0998458862304688
    3. ']' → logprob: -1.7248458862304688
    4. '])' → logprob: -5.974845886230469
    5. ']=' → logprob: -7.099845886230469
    6. ')=' → logprob: -7.849845886230469
    7. ' )' → logprob: -8.099845886230469
    8. ' ]' → logprob: -8.849845886230469
    9. ']+=' → logprob: -9.099845886230469
    10. ')])' → logprob: -9.849845886230469

Token 2240: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0031836593989282846
    2. ' =' → logprob: -5.753183841705322
    3. '=
' → logprob: -12.378183364868164
    4. ')=' → logprob: -14.878183364868164
    5. ')' → logprob: -15.003183364868164
    6. '[' → logprob: -15.253183364868164
    7. '```' → logprob: -15.253183364868164
    8. '<|end|>' → logprob: -16.253183364868164
    9. '=

' → logprob: -16.378183364868164
    10. '==' → logprob: -16.753183364868164

Token 2241: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -16.750001907348633
    4. 'D' → logprob: -17.625001907348633
    5. '۰' → logprob: -18.125001907348633
    6. '1' → logprob: -18.375001907348633
    7. '```' → logprob: -18.437501907348633
    8. '(' → logprob: -18.812501907348633
    9. '=' → logprob: -19.062501907348633
    10. 'import' → logprob: -19.375001907348633

Token 2242: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.625
    3. 'D' → logprob: -17.75
    4. '```' → logprob: -19.625
    5. '(' → logprob: -20.375
    6. '۰' → logprob: -20.5625
    7. '   ' → logprob: -20.625
    8. '1' → logprob: -21.1875
    9. '00' → logprob: -21.4375
    10. '``' → logprob: -21.6875

Token 2243: '
' (ID: 198)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.18266549706459045
    2. '```' → logprob: -2.5576655864715576
    3. '
' → logprob: -3.0576655864715576
    4. '(heap' → logprob: -4.0576653480529785
    5. ' heap' → logprob: -4.6826653480529785
    6. '<|end|>' → logprob: -5.4326653480529785
    7. '   ' → logprob: -5.8076653480529785
    8. ',' → logprob: -6.3076653480529785
    9. ',h' → logprob: -6.4326653480529785
    10. 'he' → logprob: -6.8076653480529785

Token 2244: '       ' (ID: 309)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.20732055604457855
    2. '   ' → logprob: -2.33232045173645
    3. '```' → logprob: -2.45732045173645
    4. ' heap' → logprob: -5.582320690155029
    5. '(heap' → logprob: -8.332320213317871
    6. '``' → logprob: -8.582320213317871
    7. '_heap' → logprob: -9.332320213317871
    8. '       ' → logprob: -9.457320213317871
    9. '
' → logprob: -10.207320213317871
    10. 'for' → logprob: -10.832320213317871

Token 2245: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.014755802229046822
    2. '```' → logprob: -4.389755725860596
    3. ' heap' → logprob: -6.264755725860596
    4. '   ' → logprob: -8.639756202697754
    5. '(heap' → logprob: -9.764756202697754
    6. '``' → logprob: -10.264756202697754
    7. 'h' → logprob: -10.764756202697754
    8. 'import' → logprob: -11.264756202697754
    9. '
' → logprob: -11.639756202697754
    10. '_heap' → logprob: -11.889756202697754

Token 2246: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.00034392563975416124
    2. '```' → logprob: -9.250344276428223
    3. 'push' → logprob: -10.125344276428223
    4. 'he' → logprob: -10.125344276428223
    5. '=[]' → logprob: -10.375344276428223
    6. 'hq' → logprob: -10.625344276428223
    7. '.push' → logprob: -11.125344276428223
    8. '.append' → logprob: -11.250344276428223
    9. '.he' → logprob: -11.250344276428223
    10. '[' → logprob: -11.375344276428223

Token 2247: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.0006153396097943187
    2. '.heap' → logprob: -7.875615119934082
    3. '.' → logprob: -8.750615119934082
    4. '```' → logprob: -10.500615119934082
    5. '.push' → logprob: -10.750615119934082
    6. 'he' → logprob: -11.750615119934082
    7. ' he' → logprob: -13.250615119934082
    8. '(heap' → logprob: -13.250615119934082
    9. ').' → logprob: -13.375615119934082
    10. '>.' → logprob: -13.750615119934082

Token 2248: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -2.3438327843905427e-05
    2. 'pp' → logprob: -10.87502384185791
    3. 'ap' → logprob: -12.50002384185791
    4. '```' → logprob: -14.50002384185791
    5. 'push' → logprob: -16.125022888183594
    6. 'appen' → logprob: -16.625022888183594
    7. 'p' → logprob: -17.750022888183594
    8. '(app' → logprob: -17.875022888183594
    9. '``' → logprob: -18.375022888183594
    10. ' app' → logprob: -18.625022888183594

Token 2249: 'ush' (ID: 1776)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.6016133427619934
    2. 'ush' → logprob: -1.9766132831573486
    3. 'push' → logprob: -2.2266132831573486
    4. 'pp' → logprob: -2.3516132831573486
    5. '```' → logprob: -2.8516132831573486
    6. 'p' → logprob: -3.4766132831573486
    7. 'op' → logprob: -4.726613521575928
    8. 'ap' → logprob: -5.101613521575928
    9. 'q' → logprob: -6.851613521575928
    10. 'al' → logprob: -7.476613521575928

Token 2250: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -3.047134305234067e-05
    2. '((' → logprob: -10.750030517578125
    3. ' (' → logprob: -12.625030517578125
    4. '(' → logprob: -13.125030517578125
    5. '```' → logprob: -13.250030517578125
    6. '(heap' → logprob: -14.500030517578125
    7. '   ' → logprob: -14.625030517578125
    8. 'hq' → logprob: -14.875030517578125
    9. '(hr' → logprob: -15.750030517578125
    10. '(dist' → logprob: -16.000030517578125

Token 2251: 'q' (ID: 80)
  Prédit: 'hq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hq' → logprob: -0.4075348377227783
    2. 'q' → logprob: -1.1575348377227783
    3. '(h' → logprob: -3.9075348377227783
    4. '(q' → logprob: -9.1575345993042
    5. 'qh' → logprob: -9.5325345993042
    6. '[h' → logprob: -9.6575345993042
    7. '[(' → logprob: -10.4075345993042
    8. ',h' → logprob: -10.7825345993042
    9. '/h' → logprob: -11.2825345993042
    10. ')' → logprob: -11.2825345993042

Token 2252: ',(' (ID: 27243)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.008252141997218132
    2. '(' → logprob: -4.883252143859863
    3. ' (' → logprob: -8.008252143859863
    4. ' ((' → logprob: -8.258252143859863
    5. '   ' → logprob: -10.508252143859863
    6. '(((' → logprob: -11.133252143859863
    7. '```' → logprob: -12.008252143859863
    8. '[(' → logprob: -13.258252143859863
    9. '([(' → logprob: -13.883252143859863
    10. ')' → logprob: -14.258252143859863

Token 2253: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.375
    3. ' ' → logprob: -17.875
    4. '```' → logprob: -19.75
    5. ')' → logprob: -21.125
    6. '   ' → logprob: -21.75
    7. '``' → logprob: -22.25
    8. '
' → logprob: -22.375
    9. '۰' → logprob: -22.5
    10. 'dist' → logprob: -22.625

Token 2254: ',s' (ID: 20379)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.45130595564842224
    2. ',(' → logprob: -1.4513059854507446
    3. ',s' → logprob: -2.076305866241455
    4. ' ,' → logprob: -6.201305866241455
    5. ',x' → logprob: -7.326305866241455
    6. ' (' → logprob: -7.951305866241455
    7. ',
' → logprob: -9.201306343078613
    8. '(' → logprob: -9.451306343078613
    9. '```' → logprob: -9.826306343078613
    10. ',S' → logprob: -9.951306343078613

Token 2255: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.370294846012257e-05
    2. '(s' → logprob: -10.250043869018555
    3. '(x' → logprob: -12.000043869018555
    4. 'sx' → logprob: -13.625043869018555
    5. ',s' → logprob: -15.250043869018555
    6. '(' → logprob: -15.625043869018555
    7. ' sx' → logprob: -16.125043869018555
    8. ',x' → logprob: -16.250043869018555
    9. ' (' → logprob: -16.750043869018555
    10. '
' → logprob: -16.875043869018555

Token 2256: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016420685278717428
    2. ',y' → logprob: -9.500164031982422
    3. ' ,' → logprob: -10.375164031982422
    4. '<|end|>' → logprob: -11.000164031982422
    5. ',s' → logprob: -11.375164031982422
    6. ',
' → logprob: -11.625164031982422
    7. '```' → logprob: -11.750164031982422
    8. '+' → logprob: -13.375164031982422
    9. ',None' → logprob: -13.625164031982422
    10. ',[' → logprob: -13.750164031982422

Token 2257: 'sy' (ID: 5611)
  Prédit: 'sy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sy' → logprob: -2.1008713702030946e-06
    2. ' sy' → logprob: -13.125001907348633
    3. 'syz' → logprob: -17.125001907348633
    4. '_sy' → logprob: -18.000001907348633
    5. 'Sy' → logprob: -19.625001907348633
    6. ' ' → logprob: -20.125001907348633
    7. 'syn' → logprob: -20.125001907348633
    8. '.sy' → logprob: -20.250001907348633
    9. 's' → logprob: -20.750001907348633
    10. '<|end|>' → logprob: -20.750001907348633

Token 2258: ',start' (ID: 121128)
  Prédit: ',start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',start' → logprob: -0.3290318250656128
    2. ','' → logprob: -1.7040318250656128
    3. ',' → logprob: -2.3290319442749023
    4. ',next' → logprob: -7.079031944274902
    5. '',' → logprob: -9.954031944274902
    6. '','' → logprob: -10.204031944274902
    7. 'start' → logprob: -10.579031944274902
    8. ',
' → logprob: -10.954031944274902
    9. ',end' → logprob: -11.579031944274902
    10. ''' → logprob: -11.704031944274902

Token 2259: '_dir' (ID: 9526)
  Prédit: '_dir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dir' → logprob: -0.0006262990063987672
    2. ''' → logprob: -7.625626087188721
    3. 'dir' → logprob: -9.500626564025879
    4. 'Dir' → logprob: -10.500626564025879
    5. ''d' → logprob: -10.750626564025879
    6. ''E' → logprob: -11.750626564025879
    7. '_DIR' → logprob: -13.500626564025879
    8. ''e' → logprob: -13.875626564025879
    9. ''D' → logprob: -14.000626564025879
    10. ''_' → logprob: -14.125626564025879

Token 2260: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.016582410782575607
    2. ')' → logprob: -4.266582489013672
    3. ',' → logprob: -6.141582489013672
    4. ')))' → logprob: -9.391582489013672
    5. '   ' → logprob: -9.641582489013672
    6. '))
' → logprob: -10.016582489013672
    7. '));' → logprob: -10.766582489013672
    8. ' ))' → logprob: -11.766582489013672
    9. '),' → logprob: -12.391582489013672
    10. ''))' → logprob: -12.516582489013672

Token 2261: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4159412384033203
    2. 'while' → logprob: -1.7909412384033203
    3. '```' → logprob: -1.9159412384033203
    4. ' while' → logprob: -4.29094123840332
    5. '	while' → logprob: -4.41594123840332
    6. 'While' → logprob: -8.04094123840332
    7. '       ' → logprob: -9.16594123840332
    8. '``' → logprob: -9.91594123840332
    9. '    
' → logprob: -12.29094123840332
    10. '   ' → logprob: -12.66594123840332

Token 2262: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.047819774597883224
    2. '   ' → logprob: -3.5478198528289795
    3. '```' → logprob: -4.0478196144104
    4. ' while' → logprob: -8.047820091247559
    5. '       ' → logprob: -9.547820091247559
    6. '	while' → logprob: -10.047820091247559
    7. '``' → logprob: -11.422820091247559
    8. 'While' → logprob: -14.047820091247559
    9. ' ' → logprob: -15.797820091247559
    10. '    ' → logprob: -16.047819137573242

Token 2263: ' h' (ID: 312)
  Prédit: 'hq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hq' → logprob: -0.008740204386413097
    2. ' h' → logprob: -4.758740425109863
    3. 'len' → logprob: -9.633740425109863
    4. '(h' → logprob: -10.133740425109863
    5. '   ' → logprob: -12.258740425109863
    6. '	h' → logprob: -12.633740425109863
    7. 'h' → logprob: -12.633740425109863
    8. 'True' → logprob: -12.633740425109863
    9. ' len' → logprob: -12.883740425109863
    10. '
' → logprob: -13.633740425109863

Token 2264: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0028540899511426687
    2. 'e' → logprob: -6.627853870391846
    3. '[' → logprob: -6.877853870391846
    4. '<' → logprob: -8.877854347229004
    5. '(' → logprob: -9.627854347229004
    6. '<len' → logprob: -10.002854347229004
    7. '[
' → logprob: -10.502854347229004
    8. ' ' → logprob: -10.877854347229004
    9. '
' → logprob: -10.877854347229004
    10. ',' → logprob: -11.002854347229004

Token 2265: ':
' (ID: 734)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.47843825817108154
    2. ',' → logprob: -1.1034382581710815
    3. ':
' → logprob: -4.603438377380371
    4. ':' → logprob: -4.853438377380371
    5. '```' → logprob: -5.478438377380371
    6. '[
' → logprob: -5.603438377380371
    7. '   ' → logprob: -5.728438377380371
    8. '       ' → logprob: -5.853438377380371
    9. ')' → logprob: -6.478438377380371
    10. '==' → logprob: -6.728438377380371

Token 2266: '           ' (ID: 352)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8620381951332092
    2. '           ' → logprob: -1.2370381355285645
    3. '(' → logprob: -1.8620381355285645
    4. '```' → logprob: -2.9870381355285645
    5. ' (' → logprob: -3.1120381355285645
    6. '       ' → logprob: -4.3620381355285645
    7. ',' → logprob: -5.1120381355285645
    8. ' ' → logprob: -5.3620381355285645
    9. '   ' → logprob: -5.8620381355285645
    10. '_,' → logprob: -6.2370381355285645

Token 2267: ' t' (ID: 260)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014048563316464424
    2. 'cost' → logprob: -4.6390485763549805
    3. '(' → logprob: -6.1390485763549805
    4. 'dist' → logprob: -6.6390485763549805
    5. 'time' → logprob: -7.8890485763549805
    6. '(cost' → logprob: -8.01404857635498
    7. 'curr' → logprob: -10.51404857635498
    8. '```' → logprob: -10.76404857635498
    9. 'c' → logprob: -11.38904857635498
    10. 'distance' → logprob: -12.13904857635498

Token 2268: ',x' (ID: 29748)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05645228177309036
    2. ',next' → logprob: -4.18145227432251
    3. '_,' → logprob: -4.30645227432251
    4. ',t' → logprob: -5.43145227432251
    5. ',u' → logprob: -5.55645227432251
    6. ',x' → logprob: -5.55645227432251
    7. ',h' → logprob: -6.05645227432251
    8. ',p' → logprob: -6.55645227432251
    9. ',_' → logprob: -6.55645227432251
    10. ',v' → logprob: -6.68145227432251

Token 2269: ',y' (ID: 16103)
  Prédit: ',u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',u' → logprob: -1.065338134765625
    2. ',' → logprob: -1.190338134765625
    3. ',y' → logprob: -1.190338134765625
    4. ',d' → logprob: -3.815338134765625
    5. ',n' → logprob: -5.065338134765625
    6. ',c' → logprob: -5.565338134765625
    7. ',w' → logprob: -5.690338134765625
    8. ',v' → logprob: -6.065338134765625
    9. ',s' → logprob: -6.565338134765625
    10. ',a' → logprob: -6.690338134765625

Token 2270: ',d' (ID: 26159)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4532347619533539
    2. ',t' → logprob: -1.0782347917556763
    3. ',c' → logprob: -5.203234672546387
    4. ',n' → logprob: -5.203234672546387
    5. ',next' → logprob: -5.453234672546387
    6. ' ,' → logprob: -6.828234672546387
    7. ',w' → logprob: -6.953234672546387
    8. ',
' → logprob: -7.078234672546387
    9. ',u' → logprob: -7.203234672546387
    10. ',x' → logprob: -7.578234672546387

Token 2271: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13308335840702057
    2. ' =' → logprob: -2.1330833435058594
    3. ',' → logprob: -5.883083343505859
    4. ')' → logprob: -6.633083343505859
    5. '   ' → logprob: -6.633083343505859
    6. '=
' → logprob: -8.25808334350586
    7. ')=' → logprob: -9.38308334350586
    8. '=line' → logprob: -10.00808334350586
    9. ' =
' → logprob: -10.25808334350586
    10. '=item' → logprob: -10.50808334350586

Token 2272: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -7.493430894101039e-05
    2. ' heap' → logprob: -9.500075340270996
    3. 'he' → logprob: -16.87507438659668
    4. '(heap' → logprob: -17.62507438659668
    5. '.heap' → logprob: -19.37507438659668
    6. '
' → logprob: -19.62507438659668
    7. 'queue' → logprob: -19.62507438659668
    8. '_heap' → logprob: -20.00007438659668
    9. '   ' → logprob: -21.12507438659668
    10. '```' → logprob: -22.50007438659668

Token 2273: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.07026828825473785
    2. 'app' → logprob: -2.695268392562866
    3. '[' → logprob: -9.195268630981445
    4. '.he' → logprob: -9.195268630981445
    5. 'p' → logprob: -9.445268630981445
    6. '```' → logprob: -11.320268630981445
    7. 'ap' → logprob: -11.820268630981445
    8. 'he' → logprob: -11.945268630981445
    9. '   ' → logprob: -12.195268630981445
    10. 'u' → logprob: -12.570268630981445

Token 2274: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.004979116842150688
    2. 'he' → logprob: -5.879979133605957
    3. 'q' → logprob: -6.254979133605957
    4. '[' → logprob: -9.504979133605957
    5. '.' → logprob: -9.879979133605957
    6. ' he' → logprob: -10.004979133605957
    7. '```' → logprob: -11.004979133605957
    8. 'op' → logprob: -11.129979133605957
    9. '   ' → logprob: -11.254979133605957
    10. '.heap' → logprob: -11.629979133605957

Token 2275: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.00010127831774298102
    2. 'pp' → logprob: -9.500101089477539
    3. 'ap' → logprob: -11.000101089477539
    4. 'op' → logprob: -11.875101089477539
    5. 'p' → logprob: -13.875101089477539
    6. 'pop' → logprob: -14.000101089477539
    7. 'q' → logprob: -14.875101089477539
    8. '```' → logprob: -16.37510108947754
    9. 'appen' → logprob: -16.50010108947754
    10. 'he' → logprob: -16.62510108947754

Token 2276: 'op' (ID: 467)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.345535546541214
    2. 'ush' → logprob: -2.3455355167388916
    3. '.he' → logprob: -2.5955355167388916
    4. 'he' → logprob: -2.7205355167388916
    5. 'op' → logprob: -3.5955355167388916
    6. 'app' → logprob: -4.095535755157471
    7. '```' → logprob: -5.095535755157471
    8. 'p' → logprob: -6.470535755157471
    9. 'h' → logprob: -6.845535755157471
    10. 'u' → logprob: -6.970535755157471

Token 2277: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.00031746976310387254
    2. ' (' → logprob: -8.250317573547363
    3. '(
' → logprob: -11.000317573547363
    4. 'hq' → logprob: -11.500317573547363
    5. '       ' → logprob: -11.750317573547363
    6. '(' → logprob: -11.750317573547363
    7. '   ' → logprob: -12.000317573547363
    8. '```' → logprob: -13.125317573547363
    9. '           ' → logprob: -13.375317573547363
    10. '(heap' → logprob: -14.625317573547363

Token 2278: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -4.320199877838604e-07
    2. ')' → logprob: -16.25
    3. '(q' → logprob: -16.25
    4. '_q' → logprob: -16.5
    5. '[' → logprob: -17.625
    6. ')
' → logprob: -17.875
    7. '[q' → logprob: -18.125
    8. 'Q' → logprob: -18.375
    9. '	q' → logprob: -19.0
    10. ' q' → logprob: -19.5

Token 2279: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5834147930145264
    2. ')' → logprob: -0.8334147930145264
    3. ')
' → logprob: -5.5834150314331055
    4. '):
' → logprob: -6.7084150314331055
    5. '       ' → logprob: -7.5834150314331055
    6. ',' → logprob: -7.5834150314331055
    7. '<|end|>' → logprob: -8.083415031433105
    8. '               ' → logprob: -8.333415031433105
    9. '   ' → logprob: -8.458415031433105
    10. '            
' → logprob: -8.958415031433105

Token 2280: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.041356466710567474
    2. 'if' → logprob: -4.166356563568115
    3. '       ' → logprob: -4.416356563568115
    4. '```' → logprob: -5.041356563568115
    5. '   ' → logprob: -5.416356563568115
    6. ' if' → logprob: -6.666356563568115
    7. '               ' → logprob: -7.416356563568115
    8. '            
' → logprob: -10.291356086730957
    9. '                   ' → logprob: -10.416356086730957
    10. '``' → logprob: -10.666356086730957

Token 2281: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0007426840020343661
    2. '           ' → logprob: -7.2507429122924805
    3. ' if' → logprob: -10.37574291229248
    4. '```' → logprob: -13.75074291229248
    5. '   ' → logprob: -15.00074291229248
    6. '       ' → logprob: -16.000741958618164
    7. '               ' → logprob: -17.000741958618164
    8. '	if' → logprob: -17.625741958618164
    9. 'If' → logprob: -18.250741958618164
    10. '            
' → logprob: -18.875741958618164

Token 2282: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.1402321457862854
    2. '(x' → logprob: -2.1402320861816406
    3. '(t' → logprob: -5.265232086181641
    4. '(dist' → logprob: -5.765232086181641
    5. 't' → logprob: -6.265232086181641
    6. ' dist' → logprob: -6.515232086181641
    7. ' (' → logprob: -6.515232086181641
    8. 'x' → logprob: -10.76523208618164
    9. 'd' → logprob: -11.39023208618164
    10. '_dist' → logprob: -11.76523208618164

Token 2283: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.001204519416205585
    2. '(x' → logprob: -7.001204490661621
    3. '==' → logprob: -8.876204490661621
    4. '==(' → logprob: -9.126204490661621
    5. '[x' → logprob: -10.626204490661621
    6. '```' → logprob: -12.126204490661621
    7. '(' → logprob: -12.376204490661621
    8. ' ==' → logprob: -12.626204490661621
    9. '[
' → logprob: -13.376204490661621
    10. '[' → logprob: -13.751204490661621

Token 2284: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.1008713702030946e-06
    2. ' x' → logprob: -13.250001907348633
    3. '(x' → logprob: -15.500001907348633
    4. ')x' → logprob: -17.250001907348633
    5. '{x' → logprob: -18.875001907348633
    6. '	x' → logprob: -20.375001907348633
    7. '"x' → logprob: -20.500001907348633
    8. ')' → logprob: -21.125001907348633
    9. '   ' → logprob: -21.125001907348633
    10. '[x' → logprob: -21.250001907348633

Token 2285: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.0011801084037870169
    2. ',' → logprob: -6.751180171966553
    3. 'y' → logprob: -11.876179695129395
    4. ' ,' → logprob: -13.751179695129395
    5. '```' → logprob: -14.001179695129395
    6. '`,`' → logprob: -15.126179695129395
    7. ',
' → logprob: -15.251179695129395
    8. '<|end|>' → logprob: -16.62618064880371
    9. ',x' → logprob: -16.87618064880371
    10. '','' → logprob: -17.25118064880371

Token 2286: ',d' (ID: 26159)
  Prédit: ',d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',d' → logprob: -9.245724504580721e-05
    2. ',' → logprob: -10.000092506408691
    3. 'd' → logprob: -10.000092506408691
    4. ',x' → logprob: -14.375092506408691
    5. ' ,' → logprob: -15.250092506408691
    6. ',t' → logprob: -15.500092506408691
    7. '[d' → logprob: -16.250091552734375
    8. '
' → logprob: -16.500091552734375
    9. ',
' → logprob: -16.500091552734375
    10. '(d' → logprob: -16.750091552734375

Token 2287: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -7.219262624857947e-05
    2. ')' → logprob: -10.375072479248047
    3. ']' → logprob: -11.000072479248047
    4. '])' → logprob: -11.500072479248047
    5. ')][' → logprob: -11.625072479248047
    6. ')]
' → logprob: -13.875072479248047
    7. ')])' → logprob: -14.000072479248047
    8. ']!=' → logprob: -14.375072479248047
    9. '[' → logprob: -14.625072479248047
    10. ']==' → logprob: -14.875072479248047

Token 2288: ' <' (ID: 464)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.7102091908454895
    2. '!=' → logprob: -1.2102091312408447
    3. ' !=' → logprob: -1.8352091312408447
    4. ' >' → logprob: -3.3352091312408447
    5. ' <' → logprob: -5.335209369659424
    6. '<' → logprob: -5.335209369659424
    7. '==' → logprob: -5.710209369659424
    8. ' ==' → logprob: -7.335209369659424
    9. '```' → logprob: -7.460209369659424
    10. '<t' → logprob: -9.085208892822266

Token 2289: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00861468818038702
    2. ' t' → logprob: -4.758614540100098
    3. '	t' → logprob: -16.383615493774414
    4. '
' → logprob: -18.133615493774414
    5. '`t' → logprob: -18.758615493774414
    6. '(t' → logprob: -19.383615493774414
    7. '_t' → logprob: -19.508615493774414
    8. '   ' → logprob: -19.883615493774414
    9. '=t' → logprob: -19.883615493774414
    10. '<t' → logprob: -20.383615493774414

Token 2290: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1510840505361557
    2. ':
' → logprob: -2.0260839462280273
    3. 'continue' → logprob: -5.526083946228027
    4. '       ' → logprob: -6.401083946228027
    5. '           ' → logprob: -7.151083946228027
    6. '               ' → logprob: -7.401083946228027
    7. ' continue' → logprob: -7.651083946228027
    8. '   ' → logprob: -8.276083946228027
    9. '	continue' → logprob: -8.401083946228027
    10. '<|end|>' → logprob: -9.151083946228027

Token 2291: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002534759696573019
    2. 'continue' → logprob: -6.252534866333008
    3. '```' → logprob: -8.377534866333008
    4. '           ' → logprob: -8.502534866333008
    5. ' continue' → logprob: -9.252534866333008
    6. '   ' → logprob: -10.377534866333008
    7. '       ' → logprob: -11.002534866333008
    8. '                   ' → logprob: -11.127534866333008
    9. '	continue' → logprob: -12.377534866333008
    10. '_continue' → logprob: -12.752534866333008

Token 2292: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.128651425242424
    2. '               ' → logprob: -2.1286513805389404
    3. ' continue' → logprob: -6.6286516189575195
    4. '                   ' → logprob: -8.50365161895752
    5. '           ' → logprob: -9.12865161895752
    6. '   ' → logprob: -10.12865161895752
    7. '```' → logprob: -10.62865161895752
    8. '	continue' → logprob: -10.75365161895752
    9. '_continue' → logprob: -13.87865161895752
    10. '       ' → logprob: -14.00365161895752

Token 2293: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003849009284749627
    2. 'if' → logprob: -6.003849029541016
    3. ' if' → logprob: -7.003849029541016
    4. '```' → logprob: -8.503849029541016
    5. '       ' → logprob: -9.253849029541016
    6. '<|end|>' → logprob: -9.628849029541016
    7. 'for' → logprob: -10.878849029541016
    8. '+' → logprob: -11.128849029541016
    9. ' for' → logprob: -11.253849029541016
    10. '   ' → logprob: -11.503849029541016

Token 2294: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006361012347042561
    2. 'if' → logprob: -5.50636100769043
    3. '```' → logprob: -6.25636100769043
    4. ' if' → logprob: -8.13136100769043
    5. '       ' → logprob: -10.00636100769043
    6. '   ' → logprob: -11.63136100769043
    7. '``' → logprob: -12.88136100769043
    8. '+' → logprob: -13.00636100769043
    9. '`' → logprob: -13.25636100769043
    10. 'for' → logprob: -13.38136100769043

Token 2295: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23407652974128723
    2. 'if' (adapté à ' if') → logprob: -2.234076499938965
    3. '           ' → logprob: -2.359076499938965
    4. 'neighbors' → logprob: -5.359076499938965
    5. ' for' → logprob: -6.984076499938965
    6. '```' → logprob: -7.984076499938965
    7. '   ' → logprob: -8.234076499938965
    8. 'next' → logprob: -8.484076499938965
    9. '#' → logprob: -8.984076499938965
    10. 'dire' → logprob: -9.109076499938965

Token 2296: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.14802086353302002
    2. ' (' → logprob: -2.3980207443237305
    3. 'x' → logprob: -3.1480207443237305
    4. ' x' → logprob: -5.6480207443237305
    5. '(' → logprob: -8.52302074432373
    6. '   ' → logprob: -10.52302074432373
    7. ' ' → logprob: -13.89802074432373
    8. '  ' → logprob: -15.52302074432373
    9. '           ' → logprob: -15.52302074432373
    10. '	x' → logprob: -15.89802074432373

Token 2297: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00021045419271104038
    2. ' x' → logprob: -8.750210762023926
    3. '(x' → logprob: -9.875210762023926
    4. ' (' → logprob: -14.875210762023926
    5. ')x' → logprob: -16.37520980834961
    6. '   ' → logprob: -17.75020980834961
    7. '	x' → logprob: -18.25020980834961
    8. '```' → logprob: -18.62520980834961
    9. '
' → logprob: -19.00020980834961
    10. ')' → logprob: -19.12520980834961

Token 2298: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2823403775691986
    2. ',y' → logprob: -1.407340407371521
    3. '==' → logprob: -7.0323405265808105
    4. ',x' → logprob: -8.532340049743652
    5. ' ==' → logprob: -10.657340049743652
    6. ' ,' → logprob: -11.407340049743652
    7. ',status' → logprob: -11.407340049743652
    8. ',
' → logprob: -11.532340049743652
    9. ',next' → logprob: -12.282340049743652
    10. '<|end|>' → logprob: -12.282340049743652

Token 2299: ')' (ID: 8)
  Prédit: ')=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')==' → logprob: -0.3600110709667206
    2. ')' → logprob: -1.485011100769043
    3. '==' → logprob: -2.610011100769043
    4. ' ==' → logprob: -6.235011100769043
    5. '==(' → logprob: -9.110011100769043
    6. ']==' → logprob: -9.360011100769043
    7. ',d' → logprob: -9.610011100769043
    8. ',' → logprob: -10.610011100769043
    9. '```' → logprob: -11.610011100769043
    10. '==
' → logprob: -11.860011100769043

Token 2300: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.03960205242037773
    2. ' ==' → logprob: -3.289602041244507
    3. '==(' → logprob: -6.539602279663086
    4. ')==' → logprob: -9.664602279663086
    5. '==
' → logprob: -10.164602279663086
    6. ']==' → logprob: -12.539602279663086
    7. '```' → logprob: -12.914602279663086
    8. '()==' → logprob: -13.164602279663086
    9. '=' → logprob: -13.289602279663086
    10. '===' → logprob: -13.789602279663086

Token 2301: ' (' (ID: 350)
  Prédit: '(g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -0.0025133544113487005
    2. ' (' → logprob: -6.002513408660889
    3. '           ' → logprob: -10.62751293182373
    4. '   ' → logprob: -11.50251293182373
    5. '       ' → logprob: -13.87751293182373
    6. ' ' → logprob: -14.62751293182373
    7. '(gt' → logprob: -14.62751293182373
    8. '               ' → logprob: -14.75251293182373
    9. '          ' → logprob: -15.25251293182373
    10. '  ' → logprob: -15.62751293182373

Token 2302: 'gx' (ID: 119955)
  Prédit: 'gx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gx' → logprob: -0.0005569627974182367
    2. '(g' → logprob: -7.750556945800781
    3. ' gx' → logprob: -9.000556945800781
    4. 'g' → logprob: -13.375556945800781
    5. '   ' → logprob: -14.000556945800781
    6. '           ' → logprob: -16.25055694580078
    7. '
' → logprob: -16.50055694580078
    8. '	g' → logprob: -16.75055694580078
    9. '_g' → logprob: -16.75055694580078
    10. '       ' → logprob: -16.87555694580078

Token 2303: ',' (ID: 11)
  Prédit: ',y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.1602463573217392
    2. ',' → logprob: -1.9102463722229004
    3. ' ,' → logprob: -11.160245895385742
    4. ',g' → logprob: -12.535245895385742
    5. ',
' → logprob: -14.535245895385742
    6. '<|end|>' → logprob: -14.660245895385742
    7. ',q' → logprob: -14.910245895385742
    8. ',x' → logprob: -15.285245895385742
    9. ',my' → logprob: -15.285245895385742
    10. '           ' → logprob: -15.535245895385742

Token 2304: 'gy' (ID: 4544)
  Prédit: 'gy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gy' → logprob: -1.652451464906335e-05
    2. ' gy' → logprob: -11.125016212463379
    3. 'y' → logprob: -13.500016212463379
    4. 'yg' → logprob: -15.125016212463379
    5. 'Gy' → logprob: -17.500017166137695
    6. 'gyz' → logprob: -18.500017166137695
    7. 'qy' → logprob: -18.625017166137695
    8. 'gyi' → logprob: -19.000017166137695
    9. '
' → logprob: -19.750017166137695
    10. '   ' → logprob: -20.125017166137695

Token 2305: '):
' (ID: 1883)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3967586159706116
    2. '):
' → logprob: -1.8967585563659668
    3. 'and' → logprob: -2.646758556365967
    4. ')' → logprob: -2.646758556365967
    5. ':
' → logprob: -4.271758556365967
    6. '):' → logprob: -5.021758556365967
    7. ':' → logprob: -5.021758556365967
    8. '               ' → logprob: -5.146758556365967
    9. '           ' → logprob: -6.396758556365967
    10. '                   ' → logprob: -8.396759033203125

Token 2306: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001383805531077087
    2. '```' → logprob: -6.8763837814331055
    3. '   ' → logprob: -9.126383781433105
    4. 'break' → logprob: -9.376383781433105
    5. 'return' → logprob: -10.126383781433105
    6. '           ' → logprob: -10.251383781433105
    7. '                   ' → logprob: -10.376383781433105
    8. '                       ' → logprob: -11.126383781433105
    9. ' return' → logprob: -11.876383781433105
    10. '``' → logprob: -12.376383781433105

Token 2307: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4244338870048523
    2. '               ' → logprob: -1.424433946609497
    3. 'return' → logprob: -2.299433946609497
    4. '```' → logprob: -5.924433708190918
    5. '           ' → logprob: -6.674433708190918
    6. '                   ' → logprob: -8.049433708190918
    7. 'break' → logprob: -8.049433708190918
    8. '   ' → logprob: -9.174433708190918
    9. '``' → logprob: -9.674433708190918
    10. ' return' → logprob: -9.924433708190918

Token 2308: ' found' (ID: 2491)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.523948907968588e-05
    2. 'return' → logprob: -10.500035285949707
    3. 'break' → logprob: -12.000035285949707
    4. '               ' → logprob: -14.250035285949707
    5. '           ' → logprob: -14.500035285949707
    6. ' print' → logprob: -15.750035285949707
    7. '```' → logprob: -15.750035285949707
    8. 'result' → logprob: -17.87503433227539
    9. '``' → logprob: -18.00003433227539
    10. '                   ' → logprob: -19.12503433227539

Token 2309: ' goal' (ID: 8583)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.33008038997650146
    2. 't' → logprob: -1.3300803899765015
    3. '               ' → logprob: -4.705080509185791
    4. ' return' → logprob: -5.830080509185791
    5. '           ' → logprob: -6.205080509185791
    6. '```' → logprob: -7.330080509185791
    7. 'break' → logprob: -7.330080509185791
    8. '
' → logprob: -7.705080509185791
    9. ' t' → logprob: -7.955080509185791
    10. '                   ' → logprob: -8.330080032348633

Token 2310: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.13306863605976105
    2. 'print' → logprob: -2.508068561553955
    3. 'return' → logprob: -3.633068561553955
    4. '                   ' → logprob: -4.508068561553955
    5. '```' → logprob: -5.383068561553955
    6. '           ' → logprob: -7.883068561553955
    7. '                       ' → logprob: -8.258069038391113
    8. '   ' → logprob: -8.758069038391113
    9. '``' → logprob: -9.508069038391113
    10. ' return' → logprob: -10.008069038391113

Token 2311: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.13799451291561127
    2. '                   ' → logprob: -2.1379945278167725
    3. 'return' → logprob: -5.387994289398193
    4. '```' → logprob: -5.387994289398193
    5. '                       ' → logprob: -7.762994289398193
    6. '           ' → logprob: -7.887994289398193
    7. '   ' → logprob: -8.137994766235352
    8. '``' → logprob: -8.262994766235352
    9. ' return' → logprob: -8.637994766235352
    10. 'print' → logprob: -8.762994766235352

Token 2312: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00017433916218578815
    2. '               ' → logprob: -9.000174522399902
    3. 'return' → logprob: -10.000174522399902
    4. ' print' → logprob: -13.125174522399902
    5. '           ' → logprob: -13.250174522399902
    6. '```' → logprob: -13.750174522399902
    7. '                   ' → logprob: -15.125174522399902
    8. 'break' → logprob: -16.000173568725586
    9. '   ' → logprob: -16.125173568725586
    10. '``' → logprob: -16.250173568725586

Token 2313: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.008755436167120934
    2. 't' → logprob: -4.758755207061768
    3. '(' → logprob: -9.133755683898926
    4. ' t' → logprob: -10.633755683898926
    5. '{' → logprob: -12.383755683898926
    6. '(f' → logprob: -12.633755683898926
    7. ' (' → logprob: -14.258755683898926
    8. '`t' → logprob: -14.758755683898926
    9. 'f' → logprob: -16.38375473022461
    10. '```' → logprob: -16.50875473022461

Token 2314: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.006839929614216089
    2. ')' → logprob: -5.381839752197266
    3. '               ' → logprob: -6.131839752197266
    4. '                   ' → logprob: -10.631839752197266
    5. '           ' → logprob: -11.506839752197266
    6. ')
' → logprob: -12.006839752197266
    7. ')return' → logprob: -13.131839752197266
    8. ' )
' → logprob: -15.131839752197266
    9. ')`
' → logprob: -15.381839752197266
    10. '())
' → logprob: -15.506839752197266

Token 2315: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00022535098833031952
    2. '           ' → logprob: -8.750225067138672
    3. '                   ' → logprob: -10.250225067138672
    4. '```' → logprob: -11.250225067138672
    5. 'return' → logprob: -11.875225067138672
    6. '                       ' → logprob: -12.500225067138672
    7. '       ' → logprob: -13.250225067138672
    8. 'continue' → logprob: -13.250225067138672
    9. '   ' → logprob: -13.375225067138672
    10. '<|end|>' → logprob: -14.250225067138672

Token 2316: ' break' (ID: 2338)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.20262184739112854
    2. '               ' → logprob: -1.7026218175888062
    3. 'break' (adapté à ' break') → logprob: -7.202621936798096
    4. ' return' → logprob: -7.702621936798096
    5. '```' → logprob: -12.202621459960938
    6. 'continue' → logprob: -12.952621459960938
    7. '           ' → logprob: -13.952621459960938
    8. '                   ' → logprob: -14.077621459960938
    9. '	return' → logprob: -14.452621459960938
    10. ' break' → logprob: -14.577621459960938

Token 2317: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005220713559538126
    2. '       ' → logprob: -5.880220890045166
    3. 'for' → logprob: -6.880220890045166
    4. '   ' → logprob: -7.005220890045166
    5. '```' → logprob: -8.255220413208008
    6. ' for' → logprob: -8.755220413208008
    7. '               ' → logprob: -11.380220413208008
    8. '	   ' → logprob: -11.630220413208008
    9. '		' → logprob: -11.755220413208008
    10. '	       ' → logprob: -11.880220413208008

Token 2318: '           ' (ID: 352)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8352863192558289
    2. '```' → logprob: -1.3352863788604736
    3. '   ' → logprob: -1.5852863788604736
    4. '           ' → logprob: -2.7102863788604736
    5. ' for' → logprob: -3.5852863788604736
    6. '	for' → logprob: -6.4602861404418945
    7. '       ' → logprob: -6.4602861404418945
    8. '``' → logprob: -8.085286140441895
    9. '               ' → logprob: -8.335286140441895
    10. 'token' → logprob: -10.085286140441895

Token 2319: ' node' (ID: 4596)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3623353838920593
    2. 'for' → logprob: -1.237335443496704
    3. ' for' → logprob: -4.362335205078125
    4. 'next' → logprob: -7.362335205078125
    5. '```' → logprob: -8.737335205078125
    6. '#' → logprob: -9.987335205078125
    7. '            
' → logprob: -9.987335205078125
    8. '   ' → logprob: -10.237335205078125
    9. 'dire' → logprob: -10.862335205078125
    10. 'neighbors' → logprob: -11.237335205078125

Token 2320: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9660130143165588
    2. ' =' → logprob: -1.091012954711914
    3. 'for' → logprob: -2.341012954711914
    4. ' for' → logprob: -2.591012954711914
    5. '           ' → logprob: -3.091012954711914
    6. '   ' → logprob: -3.716012954711914
    7. '```' → logprob: -4.466012954711914
    8. ',' → logprob: -4.591012954711914
    9. '#' → logprob: -5.591012954711914
    10. '_neighbors' → logprob: -5.716012954711914

Token 2321: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.06205002963542938
    2. ' (' → logprob: -2.8120501041412354
    3. '   ' → logprob: -9.687049865722656
    4. '(' → logprob: -10.937049865722656
    5. ' ' → logprob: -14.187049865722656
    6. '           ' → logprob: -14.312049865722656
    7. '       ' → logprob: -14.937049865722656
    8. '  ' → logprob: -14.937049865722656
    9. '(node' → logprob: -16.562049865722656
    10. '(X' → logprob: -16.687049865722656

Token 2322: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.572941179503687e-05
    2. ' x' → logprob: -10.000045776367188
    3. '(x' → logprob: -15.875045776367188
    4. ')x' → logprob: -16.125045776367188
    5. '   ' → logprob: -19.250045776367188
    6. '	x' → logprob: -19.375045776367188
    7. '           ' → logprob: -19.875045776367188
    8. ' ' → logprob: -20.750045776367188
    9. ',x' → logprob: -21.000045776367188
    10. '               ' → logprob: -21.125045776367188

Token 2323: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8249745965003967
    2. ',y' → logprob: -0.8249745965003967
    3. ',x' → logprob: -2.574974536895752
    4. 'x' → logprob: -3.074974536895752
    5. '[' → logprob: -7.324974536895752
    6. ' ,' → logprob: -9.19997501373291
    7. '```' → logprob: -9.57497501373291
    8. '[x' → logprob: -9.94997501373291
    9. ',
' → logprob: -9.94997501373291
    10. 'y' → logprob: -10.07497501373291

Token 2324: ')

' (ID: 1029)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5249111652374268
    2. ')' → logprob: -0.8999111652374268
    3. ',' → logprob: -7.274910926818848
    4. '           ' → logprob: -8.149910926818848
    5. '   ' → logprob: -8.149910926818848
    6. ',)
' → logprob: -8.899910926818848
    7. ',)' → logprob: -9.024910926818848
    8. ',d' → logprob: -9.524910926818848
    9. ')
' → logprob: -9.774910926818848
    10. '       ' → logprob: -10.274910926818848

Token 2325: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018243828788399696
    2. 'for' → logprob: -4.143243789672852
    3. ' for' → logprob: -6.893243789672852
    4. '```' → logprob: -7.268243789672852
    5. '   ' → logprob: -8.518243789672852
    6. 'next' → logprob: -9.268243789672852
    7. '       ' → logprob: -9.268243789672852
    8. '#' → logprob: -10.643243789672852
    9. 'dire' → logprob: -10.643243789672852
    10. 'neighbors' → logprob: -11.268243789672852

Token 2326: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0038352326955646276
    2. '           ' → logprob: -6.253835201263428
    3. ' for' → logprob: -6.628835201263428
    4. 'dire' → logprob: -8.378835678100586
    5. 'next' → logprob: -8.378835678100586
    6. 'dirs' → logprob: -9.878835678100586
    7. '```' → logprob: -10.128835678100586
    8. 'possible' → logprob: -11.878835678100586
    9. 'allowed' → logprob: -12.503835678100586
    10. '``' → logprob: -12.753835678100586

Token 2327: ' (' (ID: 350)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.1311350017786026
    2. 'ndir' → logprob: -3.1311349868774414
    3. '(nd' → logprob: -3.8811349868774414
    4. '(dx' → logprob: -4.131134986877441
    5. ' nd' → logprob: -4.506134986877441
    6. 'nx' → logprob: -4.631134986877441
    7. 'dx' → logprob: -4.881134986877441
    8. 'dir' → logprob: -5.256134986877441
    9. '(dir' → logprob: -5.881134986877441
    10. '(nx' → logprob: -5.881134986877441

Token 2328: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.03401436284184456
    2. '(nx' → logprob: -3.9090144634246826
    3. 'dx' → logprob: -4.6590142250061035
    4. '(dx' → logprob: -6.1590142250061035
    5. 'nd' → logprob: -6.5340142250061035
    6. '(n' → logprob: -8.534014701843262
    7. ' nx' → logprob: -10.159014701843262
    8. '(nd' → logprob: -10.409014701843262
    9. '(' → logprob: -10.659014701843262
    10. ' (' → logprob: -11.034014701843262

Token 2329: ',' (ID: 11)
  Prédit: ',n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.5232526063919067
    2. ',' → logprob: -0.8982526063919067
    3. ',(' → logprob: -9.398252487182617
    4. ' ,' → logprob: -11.273252487182617
    5. ',int' → logprob: -11.523252487182617
    6. ',
' → logprob: -12.273252487182617
    7. '(nn' → logprob: -12.898252487182617
    8. ',no' → logprob: -13.023252487182617
    9. ',new' → logprob: -13.273252487182617
    10. '```' → logprob: -13.398252487182617

Token 2330: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.09347806125879288
    2. 'nx' → logprob: -2.718477964401245
    3. ',' → logprob: -4.968478202819824
    4. 'n' → logprob: -5.718478202819824
    5. '(nx' → logprob: -5.843478202819824
    6. ' ny' → logprob: -5.968478202819824
    7. '0' → logprob: -6.218478202819824
    8. 'dx' → logprob: -6.718478202819824
    9. '(n' → logprob: -7.093478202819824
    10. 'node' → logprob: -7.468478202819824

Token 2331: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.33171921968460083
    2. ',d' → logprob: -1.331719160079956
    3. ',(' → logprob: -4.581719398498535
    4. '),(' → logprob: -5.456719398498535
    5. '),' → logprob: -5.706719398498535
    6. ',n' → logprob: -8.331719398498535
    7. ',),' → logprob: -9.706719398498535
    8. ','' → logprob: -10.331719398498535
    9. ',next' → logprob: -10.706719398498535
    10. ',new' → logprob: -10.706719398498535

Token 2332: ' tt' (ID: 34181)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -1.4314155578613281
    2. 'nd' → logprob: -1.6814155578613281
    3. 'dir' → logprob: -1.6814155578613281
    4. 'cost' → logprob: -2.181415557861328
    5. 'ndir' → logprob: -2.306415557861328
    6. 'td' → logprob: -2.931415557861328
    7. 'd' → logprob: -3.181415557861328
    8. 'direction' → logprob: -4.181415557861328
    9. ' nd' → logprob: -4.556415557861328
    10. 'next' → logprob: -5.306415557861328

Token 2333: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20428642630577087
    2. ',' → logprob: -1.9542864561080933
    3. 'in' → logprob: -3.2042863368988037
    4. ')' → logprob: -6.829286575317383
    5. '=' → logprob: -8.204286575317383
    6. ',time' → logprob: -8.204286575317383
    7. ' ,' → logprob: -8.204286575317383
    8. ' ' → logprob: -8.954286575317383
    9. '<|end|>' → logprob: -9.329286575317383
    10. ',next' → logprob: -10.079286575317383

Token 2334: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.07992801070213318
    2. ' graph' → logprob: -2.579927921295166
    3. '[(' → logprob: -7.204927921295166
    4. ' [(' → logprob: -9.704928398132324
    5. '(graph' → logprob: -10.079928398132324
    6. '[' → logprob: -10.579928398132324
    7. '[((' → logprob: -10.704928398132324
    8. '((' → logprob: -10.954928398132324
    9. '	graph' → logprob: -11.079928398132324
    10. ' ((' → logprob: -11.079928398132324

Token 2335: '[node' (ID: 67268)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.470703125
    2. 'in' → logprob: -1.470703125
    3. ' in' → logprob: -1.970703125
    4. ',(' → logprob: -6.345703125
    5. ')' → logprob: -6.970703125
    6. '((' → logprob: -7.220703125
    7. ',node' → logprob: -7.345703125
    8. '[(' → logprob: -7.720703125
    9. '),' → logprob: -7.845703125
    10. ' ,' → logprob: -8.220703125

Token 2336: ']:
' (ID: 22152)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021886371076107025
    2. ',d' → logprob: -4.396886348724365
    3. '):' → logprob: -5.646886348724365
    4. '):
' → logprob: -6.146886348724365
    5. '),' → logprob: -7.146886348724365
    6. ')' → logprob: -7.146886348724365
    7. ':' → logprob: -7.646886348724365
    8. ' ,' → logprob: -7.771886348724365
    9. ':
' → logprob: -8.521886825561523
    10. '   ' → logprob: -9.646886825561523

Token 2337: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0018295119516551495
    2. '	           ' → logprob: -7.251829624176025
    3. '            ' → logprob: -8.501829147338867
    4. '	            ' → logprob: -9.126829147338867
    5. '	               ' → logprob: -9.251829147338867
    6. '                
' → logprob: -9.251829147338867
    7. '                ' → logprob: -9.376829147338867
    8. '	       ' → logprob: -10.001829147338867
    9. '<|end|>' → logprob: -10.001829147338867
    10. '		       ' → logprob: -10.126829147338867

Token 2338: ' #' (ID: 1069)
  Prédit: ' nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nd' → logprob: -1.331436276435852
    2. '                   ' → logprob: -1.456436276435852
    3. ' for' → logprob: -1.956436276435852
    4. ' next' → logprob: -2.7064361572265625
    5. 'for' → logprob: -2.8314361572265625
    6. 'next' → logprob: -2.9564361572265625
    7. '               ' → logprob: -2.9564361572265625
    8. 'nd' → logprob: -3.2064361572265625
    9. 'ndir' → logprob: -3.5814361572265625
    10. ' new' → logprob: -3.8314361572265625

Token 2339: ' determine' (ID: 11433)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10600311309099197
    2. 'nd' → logprob: -3.1060030460357666
    3. '#' → logprob: -4.481003284454346
    4. '               ' → logprob: -4.731003284454346
    5. 'next' → logprob: -4.731003284454346
    6. 'ndir' → logprob: -4.856003284454346
    7. 'dx' → logprob: -5.356003284454346
    8. 'possible' → logprob: -5.356003284454346
    9. ' for' → logprob: -6.231003284454346
    10. 'dirs' → logprob: -6.606003284454346

Token 2340: ' direction' (ID: 9262)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.2501790225505829
    2. 'possible' → logprob: -2.6251790523529053
    3. ' next' → logprob: -3.6251790523529053
    4. 'nd' → logprob: -4.000178813934326
    5. 'dir' → logprob: -4.125178813934326
    6. 'for' → logprob: -4.125178813934326
    7. 'dire' → logprob: -4.250178813934326
    8. 'new' → logprob: -4.500178813934326
    9. '               ' → logprob: -4.750178813934326
    10. 'ndir' → logprob: -4.750178813934326

Token 2341: ' from' (ID: 591)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4118890166282654
    2. 'dx' → logprob: -1.2868890762329102
    3. '                   ' → logprob: -4.41188907623291
    4. 'if' → logprob: -4.53688907623291
    5. 'from' → logprob: -4.78688907623291
    6. ' dx' → logprob: -4.91188907623291
    7. ' =' → logprob: -5.66188907623291
    8. '=' → logprob: -5.78688907623291
    9. 'next' → logprob: -5.78688907623291
    10. 'diff' → logprob: -6.03688907623291

Token 2342: ' (' (ID: 350)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5181282758712769
    2. '(x' → logprob: -1.0181282758712769
    3. ' (' → logprob: -3.5181283950805664
    4. '(' → logprob: -5.518128395080566
    5. 'nx' → logprob: -6.018128395080566
    6. ' x' → logprob: -6.268128395080566
    7. 'node' → logprob: -6.518128395080566
    8. '(nx' → logprob: -6.893128395080566
    9. 'next' → logprob: -7.518128395080566
    10. 'dx' → logprob: -7.643128395080566

Token 2343: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.005269214976578951
    2. '(x' → logprob: -5.5052690505981445
    3. ' x' → logprob: -7.0052690505981445
    4. 'nx' → logprob: -9.255269050598145
    5. ' (' → logprob: -9.505269050598145
    6. 'node' → logprob: -9.755269050598145
    7. '(nx' → logprob: -11.255269050598145
    8. ')x' → logprob: -11.380269050598145
    9. ')' → logprob: -12.380269050598145
    10. '
' → logprob: -12.755269050598145

Token 2344: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.02640421874821186
    2. ',' → logprob: -3.6514041423797607
    3. ',n' → logprob: -9.40140438079834
    4. ' ,' → logprob: -11.15140438079834
    5. 'n' → logprob: -13.40140438079834
    6. 'y' → logprob: -13.40140438079834
    7. ',node' → logprob: -13.40140438079834
    8. ',
' → logprob: -14.27640438079834
    9. ',next' → logprob: -14.65140438079834
    10. ',user' → logprob: -15.52640438079834

Token 2345: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.36061185598373413
    2. ' to' → logprob: -1.485611915588379
    3. 'to' → logprob: -3.110611915588379
    4. ',' → logprob: -3.610611915588379
    5. '),(' → logprob: -6.110611915588379
    6. ',to' → logprob: -6.735611915588379
    7. ',n' → logprob: -7.485611915588379
    8. '),' → logprob: -7.485611915588379
    9. ' ,' → logprob: -9.485611915588379
    10. ',(' → logprob: -10.110611915588379

Token 2346: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.29465949535369873
    2. 'to' → logprob: -1.9196594953536987
    3. '_to' → logprob: -2.6696596145629883
    4. ' =' → logprob: -4.544659614562988
    5. 'token' → logprob: -5.419659614562988
    6. '=' → logprob: -5.544659614562988
    7. '_token' → logprob: -5.919659614562988
    8. '```' → logprob: -6.169659614562988
    9. '#' → logprob: -6.294659614562988
    10. ',' → logprob: -6.294659614562988

Token 2347: ' (' (ID: 350)
  Prédit: '(nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nx' → logprob: -0.0043521481566131115
    2. '(n' → logprob: -5.87935209274292
    3. ' (' → logprob: -6.62935209274292
    4. '(' → logprob: -9.004352569580078
    5. 'nx' → logprob: -9.504352569580078
    6. '
' → logprob: -11.504352569580078
    7. '(node' → logprob: -12.379352569580078
    8. ' nx' → logprob: -12.629352569580078
    9. '(next' → logprob: -13.254352569580078
    10. '(
' → logprob: -13.504352569580078

Token 2348: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.011553367599844933
    2. '(nx' → logprob: -4.5115532875061035
    3. ' nx' → logprob: -7.6365532875061035
    4. '
' → logprob: -11.761553764343262
    5. '(n' → logprob: -12.011553764343262
    6. ' (' → logprob: -12.011553764343262
    7. '(' → logprob: -13.886553764343262
    8. 'n' → logprob: -14.261553764343262
    9. '```' → logprob: -15.386553764343262
    10. '``' → logprob: -15.761553764343262

Token 2349: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002833172446116805
    2. 'ny' → logprob: -6.002833366394043
    3. ',n' → logprob: -8.127833366394043
    4. 'n' → logprob: -10.752833366394043
    5. ',
' → logprob: -11.252833366394043
    6. '(n' → logprob: -12.252833366394043
    7. '(nx' → logprob: -12.252833366394043
    8. ' ,' → logprob: -12.377833366394043
    9. '
' → logprob: -12.502833366394043
    10. ',y' → logprob: -12.877833366394043

Token 2350: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -3.8889261304575484e-06
    2. ' ny' → logprob: -12.500003814697266
    3. '```' → logprob: -17.500003814697266
    4. '
' → logprob: -18.375003814697266
    5. '   ' → logprob: -18.375003814697266
    6. 'nyi' → logprob: -19.375003814697266
    7. 'y' → logprob: -19.750003814697266
    8. 'n' → logprob: -19.750003814697266
    9. 'nym' → logprob: -20.125003814697266
    10. 'nx' → logprob: -20.125003814697266

Token 2351: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9737172722816467
    2. '               ' → logprob: -1.223717212677002
    3. '```' → logprob: -2.598717212677002
    4. '):
' → logprob: -2.848717212677002
    5. '                   ' → logprob: -3.223717212677002
    6. ':' → logprob: -3.473717212677002
    7. 'token' → logprob: -3.723717212677002
    8. ',' → logprob: -4.598717212677002
    9. '#' → logprob: -4.598717212677002
    10. ' token' → logprob: -4.723717212677002

Token 2352: '               ' (ID: 506)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7446512579917908
    2. '               ' → logprob: -0.9946512579917908
    3. '                ' → logprob: -3.1196513175964355
    4. 'token' → logprob: -4.2446513175964355
    5. ',' → logprob: -4.4946513175964355
    6. '```' → logprob: -4.6196513175964355
    7. '	               ' → logprob: -4.8696513175964355
    8. '#' → logprob: -5.1196513175964355
    9. '                    
' → logprob: -5.3696513175964355
    10. ' ' → logprob: -5.4946513175964355

Token 2353: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' (adapté à ' dx') → logprob: -0.040086496621370316
    2. ' dx' → logprob: -4.040086269378662
    3. '               ' → logprob: -4.165086269378662
    4. 'if' → logprob: -5.540086269378662
    5. 'nd' → logprob: -7.165086269378662
    6. 'nx' → logprob: -7.290086269378662
    7. 'diff' → logprob: -8.91508674621582
    8. ' if' → logprob: -9.04008674621582
    9. '                   ' → logprob: -9.16508674621582
    10. 'dir' → logprob: -9.54008674621582

Token 2354: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1817135065793991
    2. ' =' → logprob: -1.8067134618759155
    3. ',' → logprob: -7.306713581085205
    4. '=n' → logprob: -7.306713581085205
    5. '=
' → logprob: -8.556713104248047
    6. '=int' → logprob: -9.056713104248047
    7. '=(' → logprob: -9.181713104248047
    8. ',n' → logprob: -9.556713104248047
    9. '=x' → logprob: -10.306713104248047
    10. '=np' → logprob: -10.306713104248047

Token 2355: ' nx' (ID: 50118)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.043441470712423325
    2. '(nx' → logprob: -3.7934415340423584
    3. ' nx' → logprob: -3.9184415340423584
    4. '1' → logprob: -9.918441772460938
    5. ' (' → logprob: -10.918441772460938
    6. '(n' → logprob: -11.043441772460938
    7. '(' → logprob: -11.793441772460938
    8. '```' → logprob: -12.793441772460938
    9. '0' → logprob: -12.918441772460938
    10. '   ' → logprob: -13.043441772460938

Token 2356: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.010101577267050743
    2. '-' → logprob: -4.635101795196533
    3. '-x' → logprob: -8.010101318359375
    4. '-n' → logprob: -12.510101318359375
    5. '```' → logprob: -13.010101318359375
    6. 'x' → logprob: -13.510101318359375
    7. ',' → logprob: -14.010101318359375
    8. ',x' → logprob: -14.135101318359375
    9. '<|end|>' → logprob: -14.385101318359375
    10. '[' → logprob: -14.510101318359375

Token 2357: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0015023599844425917
    2. ' x' → logprob: -6.501502513885498
    3. '(x' → logprob: -18.501502990722656
    4. '0' → logprob: -18.501502990722656
    5. ')x' → logprob: -18.876502990722656
    6. '{x' → logprob: -19.376502990722656
    7. ' ' → logprob: -19.501502990722656
    8. '	x' → logprob: -20.001502990722656
    9. '```' → logprob: -20.626502990722656
    10. '1' → logprob: -20.751502990722656

Token 2358: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4830266833305359
    2. '<|end|>' → logprob: -1.3580267429351807
    3. '
' → logprob: -3.2330267429351807
    4. '<|end|>' → logprob: -3.6080267429351807
    5. ',
' → logprob: -4.358026504516602
    6. '```' → logprob: -4.358026504516602
    7. 'if' → logprob: -5.483026504516602
    8. ' 
' → logprob: -5.608026504516602
    9. ',y' → logprob: -5.733026504516602
    10. ';if' → logprob: -5.983026504516602

Token 2359: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8501214385032654
    2. '```' → logprob: -1.2251214981079102
    3. 'dx' → logprob: -3.10012149810791
    4. ' if' → logprob: -3.22512149810791
    5. 'if' → logprob: -3.22512149810791
    6. ' dy' → logprob: -3.60012149810791
    7. '                               ' → logprob: -4.10012149810791
    8. ',' → logprob: -4.22512149810791
    9. '                   ' → logprob: -4.35012149810791
    10. 'dy' → logprob: -4.47512149810791

Token 2360: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' (adapté à ' dy') → logprob: -0.19195310771465302
    2. ' dy' → logprob: -1.8169530630111694
    3. '               ' → logprob: -4.691953182220459
    4. 'if' → logprob: -6.816953182220459
    5. ' if' → logprob: -7.566953182220459
    6. '                   ' → logprob: -7.816953182220459
    7. ' ' → logprob: -7.941953182220459
    8. '                       ' → logprob: -8.4419527053833
    9. '                ' → logprob: -9.1919527053833
    10. '0' → logprob: -10.5669527053833

Token 2361: ' =' (ID: 314)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2885657846927643
    2. '=' → logprob: -2.5385658740997314
    3. ',' → logprob: -2.6635658740997314
    4. '```' → logprob: -2.9135658740997314
    5. ' ==' → logprob: -3.7885658740997314
    6. '<|end|>' → logprob: -4.413565635681152
    7. ')==' → logprob: -5.788565635681152
    8. '==
' → logprob: -6.163565635681152
    9. ')' → logprob: -6.788565635681152
    10. '<|end|>' → logprob: -6.913565635681152

Token 2362: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.11851336061954498
    2. 'y' → logprob: -2.618513345718384
    3. 'dy' → logprob: -3.618513345718384
    4. ' ny' → logprob: -4.618513584136963
    5. ' y' → logprob: -6.368513584136963
    6. ' dy' → logprob: -7.993513584136963
    7. '(y' → logprob: -10.243513107299805
    8. '0' → logprob: -10.493513107299805
    9. '     ' → logprob: -11.368513107299805
    10. '   ' → logprob: -12.118513107299805

Token 2363: ' -' (ID: 533)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8857707977294922
    2. '=' → logprob: -1.1357707977294922
    3. ',' → logprob: -2.385770797729492
    4. ' ==' → logprob: -3.135770797729492
    5. '```' → logprob: -3.135770797729492
    6. '[' → logprob: -3.635770797729492
    7. '<|end|>' → logprob: -4.135770797729492
    8. '*' → logprob: -4.385770797729492
    9. ' =' → logprob: -4.635770797729492
    10. '#' → logprob: -5.385770797729492

Token 2364: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0004965558764524758
    2. ' y' → logprob: -7.6254963874816895
    3. 'dy' → logprob: -11.750496864318848
    4. '(y' → logprob: -15.500496864318848
    5. '	y' → logprob: -16.62549591064453
    6. '   ' → logprob: -17.12549591064453
    7. ',y' → logprob: -17.12549591064453
    8. ' ' → logprob: -17.25049591064453
    9. '0' → logprob: -17.37549591064453
    10. 'ny' → logprob: -17.50049591064453

Token 2365: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008863568305969238
    2. '```' → logprob: -6.13386344909668
    3. '                ' → logprob: -6.25886344909668
    4. 'if' → logprob: -6.38386344909668
    5. ' if' → logprob: -6.38386344909668
    6. '                
' → logprob: -7.38386344909668
    7. '<|end|>' → logprob: -9.00886344909668
    8. '                   ' → logprob: -9.25886344909668
    9. ',' → logprob: -9.50886344909668
    10. 'token' → logprob: -9.88386344909668

Token 2366: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12008778005838394
    2. ' if' → logprob: -2.6200878620147705
    3. 'if' → logprob: -4.120087623596191
    4. '                ' → logprob: -4.495087623596191
    5. ' next' → logprob: -5.995087623596191
    6. '```' → logprob: -6.245087623596191
    7. 'next' → logprob: -6.370087623596191
    8. 'token' → logprob: -6.495087623596191
    9. 'direction' → logprob: -6.745087623596191
    10. ' direction' → logprob: -7.120087623596191

Token 2367: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -1.0124950408935547
    2. 'dir' → logprob: -1.7624950408935547
    3. ' if' → logprob: -1.8874950408935547
    4. 'next' → logprob: -2.6374950408935547
    5. 'ndir' → logprob: -2.6374950408935547
    6. 'nd' → logprob: -2.7624950408935547
    7. ' dir' → logprob: -3.6374950408935547
    8. ' next' → logprob: -4.137495040893555
    9. 'new' → logprob: -4.387495040893555
    10. '               ' → logprob: -4.637495040893555

Token 2368: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.13123703002929688
    2. ' dx' → logprob: -2.131237030029297
    3. '(dx' → logprob: -5.631237030029297
    4. '    ' → logprob: -7.881237030029297
    5. '   ' → logprob: -8.756237030029297
    6. '  ' → logprob: -10.256237030029297
    7. '     ' → logprob: -10.256237030029297
    8. ' (' → logprob: -10.381237030029297
    9. ' ' → logprob: -10.631237030029297
    10. '       ' → logprob: -11.256237030029297

Token 2369: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.07013137638568878
    2. ' ==' → logprob: -2.695131301879883
    3. '>' → logprob: -9.445131301879883
    4. '```' → logprob: -10.195131301879883
    5. '=' → logprob: -11.320131301879883
    6. '[' → logprob: -11.445131301879883
    7. ']==' → logprob: -11.445131301879883
    8. '==
' → logprob: -11.695131301879883
    9. ')==' → logprob: -11.945131301879883
    10. '==-' → logprob: -11.945131301879883

Token 2370: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004637553822249174
    2. ' ' → logprob: -5.379637718200684
    3. '>' → logprob: -11.879637718200684
    4. '0' → logprob: -12.879637718200684
    5. '```' → logprob: -12.879637718200684
    6. '
' → logprob: -14.129637718200684
    7. '   ' → logprob: -14.254637718200684
    8. '               ' → logprob: -14.504637718200684
    9. '                   ' → logprob: -14.504637718200684
    10. '           ' → logprob: -14.754637718200684

Token 2371: ' and' (ID: 326)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.12964867055416107
    2. ':' → logprob: -2.5046486854553223
    3. ' and' → logprob: -3.2546486854553223
    4. 'and' → logprob: -6.879648685455322
    5. '           ' → logprob: -9.004648208618164
    6. '                   ' → logprob: -10.379648208618164
    7. '                       ' → logprob: -11.004648208618164
    8. ':d' → logprob: -11.254648208618164
    9. ':

' → logprob: -11.379648208618164
    10. '                           ' → logprob: -11.629648208618164

Token 2372: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.018151583150029182
    2. ' dy' → logprob: -4.018151760101318
    3. '0' → logprob: -13.76815128326416
    4. ' ' → logprob: -15.76815128326416
    5. 'Dy' → logprob: -16.018152236938477
    6. 'd' → logprob: -16.268152236938477
    7. '   ' → logprob: -16.268152236938477
    8. '.dy' → logprob: -16.768152236938477
    9. 'dx' → logprob: -17.268152236938477
    10. '  ' → logprob: -17.518152236938477

Token 2373: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.00033879990223795176
    2. ' ==' → logprob: -8.000338554382324
    3. '=' → logprob: -14.000338554382324
    4. '==
' → logprob: -14.250338554382324
    5. '==-' → logprob: -14.875338554382324
    6. '()==' → logprob: -15.000338554382324
    7. '```' → logprob: -15.000338554382324
    8. ']==' → logprob: -15.000338554382324
    9. ')==' → logprob: -15.125338554382324
    10. '===' → logprob: -15.500338554382324

Token 2374: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '=' → logprob: -18.125
    4. '۰' → logprob: -20.625
    5. '```' → logprob: -21.0
    6. '   ' → logprob: -22.125
    7. ' ' → logprob: -23.125
    8. '
' → logprob: -23.5
    9. '<|end|>' → logprob: -23.5
    10. '==' → logprob: -23.625

Token 2375: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.652222752571106
    2. ':
' → logprob: -1.152222752571106
    3. '                   ' → logprob: -1.902222752571106
    4. '                       ' → logprob: -4.902222633361816
    5. '               ' → logprob: -5.777222633361816
    6. '                           ' → logprob: -7.027222633361816
    7. ',' → logprob: -7.527222633361816
    8. ' and' → logprob: -8.277222633361816
    9. '):
' → logprob: -8.402222633361816
    10. '                               ' → logprob: -8.902222633361816

Token 2376: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.017336484044790268
    2. '                       ' → logprob: -4.642336368560791
    3. ':
' → logprob: -6.392336368560791
    4. ':' → logprob: -6.642336368560791
    5. '               ' → logprob: -6.892336368560791
    6. 'token' → logprob: -7.517336368560791
    7. '                           ' → logprob: -7.767336368560791
    8. ' token' → logprob: -8.14233684539795
    9. '   ' → logprob: -8.26733684539795
    10. '                    
' → logprob: -8.76733684539795

Token 2377: ' nd' (ID: 5914)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.1404920816421509
    2. 'next' → logprob: -1.7654920816421509
    3. 'new' → logprob: -2.0154919624328613
    4. 'nd' (adapté à ' nd') → logprob: -2.2654919624328613
    5. 'ndir' → logprob: -2.2654919624328613
    6. 'dir' → logprob: -2.6404919624328613
    7. ' new' → logprob: -3.5154919624328613
    8. ' next' → logprob: -3.5154919624328613
    9. ' nd' → logprob: -4.390491962432861
    10. ' d' → logprob: -5.015491962432861

Token 2378: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7333914041519165
    2. ' =' → logprob: -1.2333914041519165
    3. '='' → logprob: -1.7333914041519165
    4. 'ir' → logprob: -2.983391284942627
    5. ' ='' → logprob: -6.858391284942627
    6. 'irection' → logprob: -10.108391761779785
    7. ''' → logprob: -12.483391761779785
    8. ' ' → logprob: -12.733391761779785
    9. '=d' → logprob: -12.733391761779785
    10. '=('' → logprob: -12.858391761779785

Token 2379: ' '' (ID: 461)
  Prédit: ''E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''E' → logprob: -0.00023965541913639754
    2. ' '' → logprob: -8.375239372253418
    3. ''S' → logprob: -12.625239372253418
    4. '"E' → logprob: -13.375239372253418
    5. '’E' → logprob: -13.875239372253418
    6. 'E' → logprob: -14.000239372253418
    7. ''É' → logprob: -14.125239372253418
    8. '   ' → logprob: -14.500239372253418
    9. ''N' → logprob: -15.250239372253418
    10. ' ' → logprob: -15.250239372253418

Token 2380: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -1.5048530030981055e-06
    2. ''E' → logprob: -13.500001907348633
    3. ' E' → logprob: -16.875001907348633
    4. '"E' → logprob: -18.375001907348633
    5. ''' → logprob: -19.250001907348633
    6. '	E' → logprob: -20.750001907348633
    7. 'S' → logprob: -21.500001907348633
    8. '’E' → logprob: -21.875001907348633
    9. '>E' → logprob: -21.875001907348633
    10. '['' → logprob: -22.250001907348633

Token 2381: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0015053401002660394
    2. ''
' → logprob: -6.501505374908447
    3. ''
' → logprob: -13.626504898071289
    4. '"' → logprob: -14.376504898071289
    5. '')' → logprob: -14.626504898071289
    6. ''''' → logprob: -15.126504898071289
    7. ' '' → logprob: -15.751504898071289
    8. '```' → logprob: -16.00150489807129
    9. ')' → logprob: -17.12650489807129
    10. '`' → logprob: -17.37650489807129

Token 2382: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14022791385650635
    2. 'elif' → logprob: -2.140227794647217
    3. ' elif' → logprob: -5.140227794647217
    4. '                   ' → logprob: -5.640227794647217
    5. '<|end|>' → logprob: -6.765227794647217
    6. ')' → logprob: -7.015227794647217
    7. '```' → logprob: -7.890227794647217
    8. '                ' → logprob: -8.390228271484375
    9. '.' → logprob: -8.765228271484375
    10. '              ' → logprob: -9.265228271484375

Token 2383: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.003249723929911852
    2. '               ' → logprob: -6.128249645233154
    3. ' elif' → logprob: -7.003249645233154
    4. 'else' → logprob: -9.128250122070312
    5. '                   ' → logprob: -10.753250122070312
    6. 'el' → logprob: -11.253250122070312
    7. '	elif' → logprob: -12.128250122070312
    8. '```' → logprob: -13.128250122070312
    9. 'El' → logprob: -14.003250122070312
    10. ':' → logprob: -14.003250122070312

Token 2384: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.005234832875430584
    2. ' dx' → logprob: -5.255234718322754
    3. '(dx' → logprob: -14.380234718322754
    4. '_dx' → logprob: -14.880234718322754
    5. '.dx' → logprob: -16.75523567199707
    6. 'd' → logprob: -16.88023567199707
    7. '	d' → logprob: -17.75523567199707
    8. 'dy' → logprob: -17.88023567199707
    9. ' ' → logprob: -17.88023567199707
    10. 'DX' → logprob: -18.13023567199707

Token 2385: '==-' (ID: 116197)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6931991577148438
    2. '==-' → logprob: -0.6931991577148438
    3. ' ==' → logprob: -9.943199157714844
    4. '==
' → logprob: -13.443199157714844
    5. '```' → logprob: -14.068199157714844
    6. '===' → logprob: -14.318199157714844
    7. '==(' → logprob: -14.818199157714844
    8. '=="' → logprob: -15.318199157714844
    9. ']==' → logprob: -15.443199157714844
    10. '=='' → logprob: -15.693199157714844

Token 2386: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.75
    3. '１' → logprob: -18.625
    4. '```' → logprob: -19.375
    5. '۱' → logprob: -20.625
    6. '(' → logprob: -20.875
    7. '{' → logprob: -21.0
    8. '১' → logprob: -21.125
    9. '
' → logprob: -21.125
    10. '१' → logprob: -21.125

Token 2387: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.575940728187561
    2. ' and' → logprob: -0.825940728187561
    3. ',' → logprob: -15.32594108581543
    4. '[' → logprob: -15.57594108581543
    5. '                   ' → logprob: -15.57594108581543
    6. '```' → logprob: -15.70094108581543
    7. '	and' → logprob: -15.70094108581543
    8. '           ' → logprob: -16.07594108581543
    9. ' ' → logprob: -16.20094108581543
    10. '               ' → logprob: -16.95094108581543

Token 2388: ' dy' (ID: 11996)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009128939709626138
    2. ' ' → logprob: -7.000912666320801
    3. '(' → logprob: -13.7509126663208
    4. ''' → logprob: -16.500913619995117
    5. 'dy' → logprob: -16.500913619995117
    6. ' (' → logprob: -16.875913619995117
    7. '=' → logprob: -17.500913619995117
    8. '('' → logprob: -17.750913619995117
    9. '[' → logprob: -18.000913619995117
    10. ' dy' → logprob: -18.625913619995117

Token 2389: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -1.9385402993066236e-05
    2. ' ==' → logprob: -11.000019073486328
    3. '==-' → logprob: -13.750019073486328
    4. '=' → logprob: -14.125019073486328
    5. '==
' → logprob: -15.375019073486328
    6. '```' → logprob: -15.375019073486328
    7. '0' → logprob: -15.750019073486328
    8. ']==' → logprob: -16.625019073486328
    9. '===' → logprob: -17.000019073486328
    10. '()==' → logprob: -17.750019073486328

Token 2390: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.625003814697266
    3. ''' → logprob: -14.000003814697266
    4. '   ' → logprob: -18.375003814697266
    5. '1' → logprob: -18.750003814697266
    6. '```' → logprob: -18.750003814697266
    7. '`' → logprob: -20.500003814697266
    8. '
' → logprob: -21.125003814697266
    9. 'W' → logprob: -21.125003814697266
    10. ''s' → logprob: -21.500003814697266

Token 2391: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.10591037571430206
    2. ':' → logprob: -2.355910301208496
    3. '                   ' → logprob: -5.230910301208496
    4. '               ' → logprob: -9.105910301208496
    5. '                       ' → logprob: -10.105910301208496
    6. '{
' → logprob: -10.605910301208496
    7. ' :
' → logprob: -10.605910301208496
    8. '                    ' → logprob: -10.855910301208496
    9. '):
' → logprob: -11.105910301208496
    10. ':

' → logprob: -11.105910301208496

Token 2392: '                   ' (ID: 699)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7794137001037598
    2. '                   ' → logprob: -0.7794137001037598
    3. '                       ' → logprob: -3.9044137001037598
    4. ' '' → logprob: -3.9044137001037598
    5. ''s' → logprob: -4.52941370010376
    6. '               ' → logprob: -5.02941370010376
    7. '                    ' → logprob: -5.65441370010376
    8. '[' → logprob: -5.90441370010376
    9. '                           ' → logprob: -6.27941370010376
    10. '   ' → logprob: -6.40441370010376

Token 2393: ' nd' (ID: 5914)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.001331190811470151
    2. ''S' → logprob: -6.751331329345703
    3. 'W' → logprob: -9.376331329345703
    4. '"W' → logprob: -10.126331329345703
    5. ''N' → logprob: -11.376331329345703
    6. '   ' → logprob: -12.001331329345703
    7. '`' → logprob: -12.626331329345703
    8. '```' → logprob: -12.876331329345703
    9. '('' → logprob: -13.001331329345703
    10. ' '' → logprob: -13.626331329345703

Token 2394: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10163960605859756
    2. ' =' → logprob: -2.35163950920105
    3. '='' → logprob: -6.601639747619629
    4. ' ='' → logprob: -9.726639747619629
    5. ':' → logprob: -11.851639747619629
    6. ''' → logprob: -13.226639747619629
    7. ''s' → logprob: -13.601639747619629
    8. ' '' → logprob: -14.351639747619629
    9. ' ' → logprob: -14.601639747619629
    10. '==' → logprob: -14.851639747619629

Token 2395: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -3.91732100979425e-05
    2. 'W' → logprob: -10.375039100646973
    3. '"W' → logprob: -12.250039100646973
    4. ' '' → logprob: -13.125039100646973
    5. '['' → logprob: -14.750039100646973
    6. '('' → logprob: -15.500039100646973
    7. '`' → logprob: -15.750039100646973
    8. '	W' → logprob: -16.00004005432129
    9. ''S' → logprob: -16.37504005432129
    10. '   ' → logprob: -16.37504005432129

Token 2396: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0002036595979006961
    2. ''' → logprob: -8.500204086303711
    3. ' W' → logprob: -16.12520408630371
    4. '"W' → logprob: -17.62520408630371
    5. '<W' → logprob: -18.25020408630371
    6. ''w' → logprob: -18.87520408630371
    7. '['' → logprob: -18.87520408630371
    8. '	W' → logprob: -19.25020408630371
    9. '`' → logprob: -19.37520408630371
    10. '('' → logprob: -20.62520408630371

Token 2397: ''
' (ID: 2207)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006949203554540873
    2. 'elif' → logprob: -5.256949424743652
    3. '```' → logprob: -7.381949424743652
    4. '<|end|>' → logprob: -8.131949424743652
    5. '
' → logprob: -9.381949424743652
    6. ''' → logprob: -9.381949424743652
    7. '                   ' → logprob: -9.506949424743652
    8. '   ' → logprob: -9.756949424743652
    9. ' elif' → logprob: -9.881949424743652
    10. '           ' → logprob: -9.881949424743652

Token 2398: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0033603431656956673
    2. '```' → logprob: -6.003360271453857
    3. 'elif' → logprob: -7.128360271453857
    4. 'else' → logprob: -10.003360748291016
    5. ' elif' → logprob: -11.003360748291016
    6. '                   ' → logprob: -12.003360748291016
    7. '			' → logprob: -12.128360748291016
    8. ' else' → logprob: -13.128360748291016
    9. '``' → logprob: -13.253360748291016
    10. '           ' → logprob: -14.253360748291016

Token 2399: ' elif' (ID: 9497)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8064555525779724
    2. 'elif' (adapté à ' elif') → logprob: -1.1814556121826172
    3. '```' → logprob: -1.9314556121826172
    4. ' elif' → logprob: -2.306455612182617
    5. 'else' → logprob: -7.556455612182617
    6. '	elif' → logprob: -7.931455612182617
    7. '``' → logprob: -8.181455612182617
    8. ' else' → logprob: -8.431455612182617
    9. '           ' → logprob: -8.931455612182617
    10. '                   ' → logprob: -9.181455612182617

Token 2400: ' dx' (ID: 29472)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.3869847059249878
    2. ' dy' → logprob: -1.1369847059249878
    3. 'dx' → logprob: -9.511984825134277
    4. '0' → logprob: -11.011984825134277
    5. ' dx' → logprob: -11.011984825134277
    6. '(' → logprob: -12.886984825134277
    7. ' ' → logprob: -13.386984825134277
    8. '(d' → logprob: -13.886984825134277
    9. ' (' → logprob: -14.511984825134277
    10. 'Dy' → logprob: -15.386984825134277

Token 2401: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -8.613945101387799e-05
    2. '```' → logprob: -10.375085830688477
    3. '0' → logprob: -10.625085830688477
    4. ' ==' → logprob: -10.875085830688477
    5. '==
' → logprob: -11.750085830688477
    6. '=' → logprob: -13.250085830688477
    7. '===' → logprob: -13.750085830688477
    8. '==-' → logprob: -15.000085830688477
    9. '==(' → logprob: -15.375085830688477
    10. ']==' → logprob: -15.750085830688477

Token 2402: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.387458365177736e-05
    2. '(' → logprob: -9.875083923339844
    3. ' ' → logprob: -10.375083923339844
    4. '
' → logprob: -15.250083923339844
    5. '1' → logprob: -15.375083923339844
    6. '```' → logprob: -15.375083923339844
    7. ' (' → logprob: -15.750083923339844
    8. '`' → logprob: -16.812583923339844
    9. '``' → logprob: -16.937583923339844
    10. '00' → logprob: -16.937583923339844

Token 2403: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1083635613322258
    2. 'and' → logprob: -2.483363628387451
    3. '==' → logprob: -4.108363628387451
    4. ' and' → logprob: -6.233363628387451
    5. ',and' → logprob: -7.858363628387451
    6. '```' → logprob: -8.858363151550293
    7. ' ,' → logprob: -9.108363151550293
    8. '0' → logprob: -9.733363151550293
    9. '                   ' → logprob: -10.483363151550293
    10. ',
' → logprob: -10.608363151550293

Token 2404: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.018194308504462242
    2. ' dy' → logprob: -4.018194198608398
    3. '1' → logprob: -10.518194198608398
    4. 'ny' → logprob: -11.768194198608398
    5. '0' → logprob: -11.768194198608398
    6. ' ' → logprob: -14.018194198608398
    7. ' ny' → logprob: -14.893194198608398
    8. '(' → logprob: -15.893194198608398
    9. 'nd' → logprob: -16.0181941986084
    10. '-d' → logprob: -16.0181941986084

Token 2405: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0437157079577446
    2. '==-' → logprob: -3.168715715408325
    3. '1' → logprob: -7.293715476989746
    4. ' ==' → logprob: -11.418715476989746
    5. '```' → logprob: -11.543715476989746
    6. '==
' → logprob: -11.793715476989746
    7. '-' → logprob: -13.043715476989746
    8. '=' → logprob: -13.168715476989746
    9. '===' → logprob: -13.668715476989746
    10. '0' → logprob: -13.918715476989746

Token 2406: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4741230905056
    2. '-' → logprob: -0.9741231203079224
    3. ' -' → logprob: -10.599123001098633
    4. ' ' → logprob: -11.099123001098633
    5. '```' → logprob: -12.849123001098633
    6. '
' → logprob: -13.099123001098633
    7. '−' → logprob: -15.349123001098633
    8. '(' → logprob: -15.349123001098633
    9. '   ' → logprob: -15.599123001098633
    10. '`' → logprob: -15.849123001098633

Token 2407: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.8362270593643188
    2. '                   ' → logprob: -1.2112270593643188
    3. ':' → logprob: -1.3362270593643188
    4. '               ' → logprob: -5.961226940155029
    5. ',' → logprob: -7.211226940155029
    6. '                  ' → logprob: -7.461226940155029
    7. '<|end|>' → logprob: -8.086227416992188
    8. '==' → logprob: -8.461227416992188
    9. '                    ' → logprob: -8.586227416992188
    10. '<|end|>' → logprob: -8.711227416992188

Token 2408: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.029593221843242645
    2. ''' → logprob: -4.029592990875244
    3. '               ' → logprob: -5.279592990875244
    4. '                  ' → logprob: -7.029592990875244
    5. 'nd' → logprob: -7.279592990875244
    6. '                    ' → logprob: -7.404592990875244
    7. '           ' → logprob: -7.404592990875244
    8. '                       ' → logprob: -7.904592990875244
    9. '{
' → logprob: -8.154593467712402
    10. '                 ' → logprob: -8.154593467712402

Token 2409: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' (adapté à ' nd') → logprob: -0.03150400146842003
    2. ''' → logprob: -3.781503915786743
    3. ' nd' → logprob: -5.406504154205322
    4. ''n' → logprob: -5.906504154205322
    5. ''s' → logprob: -7.406504154205322
    6. ''S' → logprob: -9.281503677368164
    7. '(nd' → logprob: -9.281503677368164
    8. '           ' → logprob: -9.406503677368164
    9. '_nd' → logprob: -10.656503677368164
    10. '               ' → logprob: -10.906503677368164

Token 2410: ' =' (ID: 314)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.07806706428527832
    2. '=' → logprob: -2.8280670642852783
    3. '=='' → logprob: -4.328066825866699
    4. ' ==' → logprob: -6.328066825866699
    5. '='' → logprob: -7.078066825866699
    6. ''' → logprob: -9.5780668258667
    7. ' =' → logprob: -10.8280668258667
    8. '==
' → logprob: -11.2030668258667
    9. '===' → logprob: -11.7030668258667
    10. '==-' → logprob: -11.9530668258667

Token 2411: ' '' (ID: 461)
  Prédit: ''S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''S' → logprob: -9.729906196298543e-06
    2. 'S' → logprob: -12.250009536743164
    3. ''N' → logprob: -12.250009536743164
    4. ' '' → logprob: -16.875009536743164
    5. '"S' → logprob: -17.375009536743164
    6. ' ' → logprob: -18.500009536743164
    7. '
' → logprob: -19.250009536743164
    8. '   ' → logprob: -19.250009536743164
    9. '	S' → logprob: -19.250009536743164
    10. ''' → logprob: -19.250009536743164

Token 2412: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.028773857280611992
    2. 'N' → logprob: -4.278773784637451
    3. ''S' → logprob: -4.278773784637451
    4. ''N' → logprob: -7.403773784637451
    5. ''' → logprob: -10.27877426147461
    6. ' S' → logprob: -15.15377426147461
    7. '
' → logprob: -15.52877426147461
    8. ''s' → logprob: -15.77877426147461
    9. '['' → logprob: -15.77877426147461
    10. ''''' → logprob: -16.02877426147461

Token 2413: ''
' (ID: 2207)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.35220447182655334
    2. ':
' → logprob: -1.602204442024231
    3. '               ' → logprob: -2.4772045612335205
    4. '                   ' → logprob: -5.602204322814941
    5. '```' → logprob: -5.852204322814941
    6. '<|end|>' → logprob: -6.352204322814941
    7. '<|end|>' → logprob: -6.602204322814941
    8. '):
' → logprob: -7.977204322814941
    9. '':
' → logprob: -8.227204322814941
    10. 'elif' → logprob: -8.227204322814941

Token 2414: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4529450535774231
    2. '```' → logprob: -1.0779449939727783
    3. 'elif' → logprob: -4.077945232391357
    4. '                   ' → logprob: -5.577945232391357
    5. '``' → logprob: -6.952945232391357
    6. ':' → logprob: -7.702945232391357
    7. '                               ' → logprob: -7.702945232391357
    8. 'else' → logprob: -7.827945232391357
    9. '                       ' → logprob: -8.5779447555542
    10. '<|end|>' → logprob: -8.9529447555542

Token 2415: ' elif' (ID: 9497)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15343619883060455
    2. 'elif' (adapté à ' elif') → logprob: -2.5284361839294434
    3. 'else' → logprob: -2.7784361839294434
    4. ' else' → logprob: -8.778436660766602
    5. ' elif' → logprob: -9.278436660766602
    6. '```' → logprob: -9.903436660766602
    7. '                   ' → logprob: -11.153436660766602
    8. '           ' → logprob: -13.028436660766602
    9. '                ' → logprob: -13.028436660766602
    10. '			' → logprob: -13.278436660766602

Token 2416: ' dx' (ID: 29472)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.5205888748168945
    2. 'dx' → logprob: -1.0205888748168945
    3. ' dy' → logprob: -3.5205888748168945
    4. ' dx' → logprob: -4.1455888748168945
    5. '0' → logprob: -10.895588874816895
    6. '(dx' → logprob: -12.270588874816895
    7. ' ' → logprob: -13.145588874816895
    8. '_dx' → logprob: -14.020588874816895
    9. 'd' → logprob: -14.145588874816895
    10. 'Dy' → logprob: -14.645588874816895

Token 2417: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.02978937141597271
    2. '==-' → logprob: -3.529789447784424
    3. ' ==' → logprob: -10.404788970947266
    4. '==
' → logprob: -12.654788970947266
    5. '=='' → logprob: -13.154788970947266
    6. ']==' → logprob: -14.029788970947266
    7. '===' → logprob: -14.654788970947266
    8. '==(' → logprob: -14.654788970947266
    9. '```' → logprob: -14.654788970947266
    10. '=="' → logprob: -14.779788970947266

Token 2418: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.125005722045898
    3. '```' → logprob: -17.0000057220459
    4. '-' → logprob: -17.1250057220459
    5. '(' → logprob: -17.6250057220459
    6. '=' → logprob: -18.8750057220459
    7. '۰' → logprob: -19.8750057220459
    8. '   ' → logprob: -20.1250057220459
    9. '``' → logprob: -20.1250057220459
    10. '
' → logprob: -20.2500057220459

Token 2419: ' and' (ID: 326)
  Prédit: '==-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==-' → logprob: -0.12714113295078278
    2. '==' → logprob: -2.127141237258911
    3. ',' → logprob: -8.627140998840332
    4. ' ==' → logprob: -11.127140998840332
    5. ',-' → logprob: -11.877140998840332
    6. '==
' → logprob: -12.127140998840332
    7. '```' → logprob: -12.502140998840332
    8. ')==' → logprob: -14.127140998840332
    9. '===' → logprob: -14.127140998840332
    10. ']==' → logprob: -14.502140998840332

Token 2420: ' dy' (ID: 11996)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -6.158350151963532e-05
    2. ' -' → logprob: -10.000061988830566
    3. 'dy' → logprob: -11.125061988830566
    4. 'ny' → logprob: -14.500061988830566
    5. '-n' → logprob: -15.250061988830566
    6. '−' → logprob: -15.750061988830566
    7. '```' → logprob: -15.750061988830566
    8. '=-' → logprob: -16.00006103515625
    9. '
' → logprob: -16.75006103515625
    10. '-d' → logprob: -17.25006103515625

Token 2421: '==-' (ID: 116197)
  Prédit: '==-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==-' → logprob: -0.0019716962706297636
    2. '==' → logprob: -6.25197172164917
    3. '-' → logprob: -10.626971244812012
    4. '=-' → logprob: -11.126971244812012
    5. ' ==' → logprob: -13.251971244812012
    6. '```' → logprob: -13.376971244812012
    7. '==
' → logprob: -14.251971244812012
    8. '{-' → logprob: -17.001972198486328
    9. '===' → logprob: -17.126972198486328
    10. '=='' → logprob: -17.626972198486328

Token 2422: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '```' → logprob: -17.25
    4. '
' → logprob: -17.375
    5. '１' → logprob: -18.8125
    6. '   ' → logprob: -19.0625
    7. '-' → logprob: -19.25
    8. '``' → logprob: -19.5
    9. '`' → logprob: -19.75
    10. 'S' → logprob: -19.875

Token 2423: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21594832837581635
    2. ':
' → logprob: -2.0909483432769775
    3. '                   ' → logprob: -2.7159483432769775
    4. '               ' → logprob: -6.090948104858398
    5. '==' → logprob: -8.340948104858398
    6. '='' → logprob: -8.340948104858398
    7. '=' → logprob: -8.465948104858398
    8. ' =' → logprob: -8.715948104858398
    9. '<|end|>' → logprob: -8.715948104858398
    10. '{
' → logprob: -8.965948104858398

Token 2424: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.15603914856910706
    2. '                       ' → logprob: -2.906039237976074
    3. '               ' → logprob: -3.156039237976074
    4. ''' → logprob: -4.156039237976074
    5. '       ' → logprob: -5.031039237976074
    6. '   ' → logprob: -5.281039237976074
    7. '           ' → logprob: -5.281039237976074
    8. '                           ' → logprob: -6.406039237976074
    9. '	' → logprob: -6.531039237976074
    10. '```' → logprob: -6.531039237976074

Token 2425: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' (adapté à ' nd') → logprob: -0.16621984541416168
    2. '                   ' → logprob: -2.66621994972229
    3. ' nd' → logprob: -3.16621994972229
    4. '               ' → logprob: -3.54121994972229
    5. '                               ' → logprob: -5.791219711303711
    6. ''' → logprob: -5.791219711303711
    7. '                           ' → logprob: -6.666219711303711
    8. '(nd' → logprob: -6.916219711303711
    9. ''n' → logprob: -6.916219711303711
    10. '           ' → logprob: -7.291219711303711

Token 2426: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16255007684230804
    2. ''' → logprob: -2.1625499725341797
    3. ''N' → logprob: -3.6625499725341797
    4. '='' → logprob: -5.53754997253418
    5. ''s' → logprob: -6.53754997253418
    6. '==' → logprob: -6.78754997253418
    7. ''=' → logprob: -6.78754997253418
    8. ''S' → logprob: -7.28754997253418
    9. ''n' → logprob: -8.03754997253418
    10. ''d' → logprob: -9.03754997253418

Token 2427: ' '' (ID: 461)
  Prédit: ''N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''N' → logprob: -7.822646693966817e-06
    2. 'N' → logprob: -11.875007629394531
    3. ' '' → logprob: -14.500007629394531
    4. ''S' → logprob: -16.62500762939453
    5. '('' → logprob: -17.00000762939453
    6. '   ' → logprob: -17.00000762939453
    7. ' ' → logprob: -17.50000762939453
    8. '"N' → logprob: -17.75000762939453
    9. ''n' → logprob: -18.00000762939453
    10. '	N' → logprob: -18.87500762939453

Token 2428: 'N' (ID: 45)
  Prédit: ''N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''N' → logprob: -0.3132626414299011
    2. 'N' → logprob: -1.313262701034546
    3. '"N' → logprob: -15.063262939453125
    4. '('' → logprob: -15.438262939453125
    5. ''S' → logprob: -16.188262939453125
    6. ' N' → logprob: -16.188262939453125
    7. '`' → logprob: -16.688262939453125
    8. '	N' → logprob: -16.813262939453125
    9. '['' → logprob: -17.313262939453125
    10. ''' → logprob: -17.563262939453125

Token 2429: ''
' (ID: 2207)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03603333607316017
    2. '):
' → logprob: -4.2860331535339355
    3. '                   ' → logprob: -5.2860331535339355
    4. '```' → logprob: -5.9110331535339355
    5. ''):
' → logprob: -6.1610331535339355
    6. '<|end|>' → logprob: -6.1610331535339355
    7. ':
' → logprob: -6.1610331535339355
    8. '':
' → logprob: -6.2860331535339355
    9. ':' → logprob: -6.4110331535339355
    10. '<|end|>' → logprob: -7.0360331535339355

Token 2430: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.013901381753385067
    2. '```' → logprob: -4.888901233673096
    3. '                   ' → logprob: -6.138901233673096
    4. '                
' → logprob: -6.513901233673096
    5. '<|end|>' → logprob: -7.263901233673096
    6. '                ' → logprob: -8.263901710510254
    7. ',' → logprob: -8.638901710510254
    8. '                               ' → logprob: -9.013901710510254
    9. '           ' → logprob: -9.138901710510254
    10. '[' → logprob: -9.263901710510254

Token 2431: ' else' (ID: 1203)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0015584280481562018
    2. '```' → logprob: -7.126558303833008
    3. '                
' → logprob: -7.501558303833008
    4. '                   ' → logprob: -9.501558303833008
    5. '``' → logprob: -11.001558303833008
    6. '           ' → logprob: -11.001558303833008
    7. '                ' → logprob: -11.126558303833008
    8. '              ' → logprob: -11.501558303833008
    9. '       ' → logprob: -12.001558303833008
    10. '
' → logprob: -12.001558303833008

Token 2432: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.06631658971309662
    2. ':' → logprob: -2.941316604614258
    3. '               ' → logprob: -4.816316604614258
    4. '                       ' → logprob: -6.566316604614258
    5. ':
' → logprob: -7.191316604614258
    6. ' continue' → logprob: -8.441316604614258
    7. '		           ' → logprob: -9.191316604614258
    8. '                 ' → logprob: -9.441316604614258
    9. '	               ' → logprob: -9.441316604614258
    10. '           ' → logprob: -9.691316604614258

Token 2433: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.11838088184595108
    2. '               ' → logprob: -2.2433807849884033
    3. '                       ' → logprob: -5.993381023406982
    4. '                               ' → logprob: -6.993381023406982
    5. '                ' → logprob: -7.993381023406982
    6. '           ' → logprob: -7.993381023406982
    7. '```' → logprob: -8.243380546569824
    8. '                           ' → logprob: -8.493380546569824
    9. '	               ' → logprob: -8.493380546569824
    10. '   ' → logprob: -8.618380546569824

Token 2434: ' continue' (ID: 4901)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2644144296646118
    2. 'continue' (adapté à ' continue') → logprob: -1.5144144296646118
    3. '               ' → logprob: -5.014414310455322
    4. ' continue' → logprob: -5.264414310455322
    5. '   ' → logprob: -8.26441478729248
    6. '                       ' → logprob: -8.51441478729248
    7. 'return' → logprob: -10.51441478729248
    8. '	continue' → logprob: -10.51441478729248
    9. '           ' → logprob: -10.76441478729248
    10. '```' → logprob: -11.13941478729248

Token 2435: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05980382114648819
    2. '                
' → logprob: -3.3098037242889404
    3. '
' → logprob: -4.1848039627075195
    4. '  
' → logprob: -5.8098039627075195
    5. 'next' → logprob: -7.3098039627075195
    6. '    
' → logprob: -7.6848039627075195
    7. '            
' → logprob: -8.55980396270752
    8. '                    
' → logprob: -8.55980396270752
    9. '           ' → logprob: -8.68480396270752
    10. '#' → logprob: -8.80980396270752

Token 2436: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0318913497030735
    2. '```' → logprob: -3.906891345977783
    3. '                   ' → logprob: -4.906891345977783
    4. '                
' → logprob: -7.156891345977783
    5. '                ' → logprob: -7.656891345977783
    6. '                               ' → logprob: -7.906891345977783
    7. '           ' → logprob: -8.406891822814941
    8. '	           ' → logprob: -8.781891822814941
    9. '``' → logprob: -8.781891822814941
    10. '              ' → logprob: -8.906891822814941

Token 2437: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.017921987920999527
    2. 'if' → logprob: -4.8929219245910645
    3. '```' → logprob: -5.0179219245910645
    4. ' if' → logprob: -7.1429219245910645
    5. '                
' → logprob: -7.5179219245910645
    6. '#' (adapté à ' #') → logprob: -7.5179219245910645
    7. 'next' → logprob: -7.8929219245910645
    8. '           ' → logprob: -7.8929219245910645
    9. 'wait' → logprob: -7.8929219245910645
    10. '``' → logprob: -8.767922401428223

Token 2438: ' can't' (ID: 8535)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9233021140098572
    2. '           ' → logprob: -1.673302173614502
    3. '               ' → logprob: -1.798302173614502
    4. '#' → logprob: -1.923302173614502
    5. 'wait' → logprob: -2.548302173614502
    6. ' if' → logprob: -5.173302173614502
    7. 'w' → logprob: -5.423302173614502
    8. 'turn' → logprob: -6.173302173614502
    9. ' #' → logprob: -6.173302173614502
    10. 'next' → logprob: -6.423302173614502

Token 2439: ' U' (ID: 601)
  Prédit: ' go'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' go' → logprob: -0.27325505018234253
    2. ' nd' → logprob: -2.1482551097869873
    3. 'go' → logprob: -3.0232551097869873
    4. 'nd' → logprob: -3.1482551097869873
    5. ' opposite' → logprob: -5.273254871368408
    6. '(nd' → logprob: -5.273254871368408
    7. ' return' → logprob: -5.648254871368408
    8. 'op' → logprob: -5.648254871368408
    9. ' move' → logprob: -5.898254871368408
    10. ' be' → logprob: -6.648254871368408

Token 2440: '-turn' (ID: 120746)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.49938297271728516
    2. '-turn' → logprob: -1.2493829727172852
    3. '_turn' → logprob: -2.249382972717285
    4. ' turn' → logprob: -6.999382972717285
    5. 'eturn' → logprob: -11.749382972717285
    6. '턴' → logprob: -11.874382972717285
    7. 'Turn' → logprob: -12.249382972717285
    8. '(turn' → logprob: -12.374382972717285
    9. '```' → logprob: -12.624382972717285
    10. '_t' → logprob: -12.874382972717285

Token 2441: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002211754210293293
    2. '                
' → logprob: -7.127211570739746
    3. '                ' → logprob: -7.752211570739746
    4. '			' → logprob: -8.752211570739746
    5. '           ' → logprob: -8.877211570739746
    6. '<|end|>' → logprob: -8.877211570739746
    7. '
' → logprob: -9.377211570739746
    8. '	           ' → logprob: -9.627211570739746
    9. ' if' → logprob: -9.752211570739746
    10. '              ' → logprob: -10.377211570739746

Token 2442: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.5094070477061905e-05
    2. '                
' → logprob: -12.500015258789062
    3. '              ' → logprob: -12.875015258789062
    4. '           ' → logprob: -13.000015258789062
    5. '                ' → logprob: -13.500015258789062
    6. '                   ' → logprob: -13.750015258789062
    7. ' if' → logprob: -14.250015258789062
    8. '<|end|>' → logprob: -14.250015258789062
    9. '			' → logprob: -14.375015258789062
    10. 'if' → logprob: -14.500015258789062

Token 2443: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3589989244937897
    2. 'if' (adapté à ' if') → logprob: -1.3589988946914673
    3. ' if' → logprob: -3.108999013900757
    4. '                
' → logprob: -11.108999252319336
    5. '           ' → logprob: -11.233999252319336
    6. 'continue' → logprob: -11.358999252319336
    7. '
' → logprob: -12.483999252319336
    8. '                ' → logprob: -12.483999252319336
    9. '              ' → logprob: -13.108999252319336
    10. '```' → logprob: -13.233999252319336

Token 2444: ' nd' (ID: 5914)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.32620829343795776
    2. 'nd' → logprob: -1.9512083530426025
    3. ' opposite' → logprob: -2.0762083530426025
    4. ' nd' → logprob: -4.576208114624023
    5. '   ' → logprob: -8.951208114624023
    6. ' ' → logprob: -9.576208114624023
    7. 'opp' → logprob: -9.701208114624023
    8. 'next' → logprob: -9.951208114624023
    9. 'd' → logprob: -9.951208114624023
    10. '(op' → logprob: -10.076208114624023

Token 2445: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.20144881308078766
    2. ' ==' → logprob: -1.7014487981796265
    3. '==
' → logprob: -10.701448440551758
    4. ']==' → logprob: -12.701448440551758
    5. ' opposite' → logprob: -12.951448440551758
    6. ')==' → logprob: -13.451448440551758
    7. 'op' → logprob: -13.451448440551758
    8. '==(' → logprob: -13.701448440551758
    9. '=='' → logprob: -14.201448440551758
    10. '=' → logprob: -14.451448440551758

Token 2446: ' opposite' (ID: 23821)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.006715967319905758
    2. ' opposite' → logprob: -5.006715774536133
    3. ' ' → logprob: -15.381715774536133
    4. '	op' → logprob: -15.631715774536133
    5. '   ' → logprob: -15.756715774536133
    6. '(op' → logprob: -17.506715774536133
    7. ' op' → logprob: -17.756715774536133
    8. '  ' → logprob: -17.756715774536133
    9. 'opp' → logprob: -17.881715774536133
    10. ' ' → logprob: -19.006715774536133

Token 2447: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -7.465036105713807e-06
    2. '(' → logprob: -12.375007629394531
    3. 'd' → logprob: -12.750007629394531
    4. ' (' → logprob: -15.625007629394531
    5. '(
' → logprob: -16.75000762939453
    6. '[d' → logprob: -17.12500762939453
    7. ')d' → logprob: -18.12500762939453
    8. ' d' → logprob: -18.87500762939453
    9. '```' → logprob: -19.00000762939453
    10. ',d' → logprob: -19.75000762939453

Token 2448: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.558242917060852
    2. '(d' → logprob: -1.558242917060852
    3. '):
' → logprob: -1.683242917060852
    4. 'd' → logprob: -4.3082427978515625
    5. '()):
' → logprob: -4.6832427978515625
    6. '()' → logprob: -5.6832427978515625
    7. ''):' → logprob: -6.3082427978515625
    8. ')' → logprob: -6.4332427978515625
    9. ''):
' → logprob: -6.8082427978515625
    10. '(' → logprob: -8.558242797851562

Token 2449: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.005862785968929529
    2. '               ' → logprob: -5.880862712860107
    3. 'continue' → logprob: -6.630862712860107
    4. '                       ' → logprob: -7.380862712860107
    5. ' continue' → logprob: -7.505862712860107
    6. '	continue' → logprob: -8.630863189697266
    7. '   ' → logprob: -9.380863189697266
    8. '	               ' → logprob: -9.880863189697266
    9. '                               ' → logprob: -10.255863189697266
    10. '                           ' → logprob: -10.505863189697266

Token 2450: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.2293153554201126
    2. '                   ' → logprob: -1.7293154001235962
    3. ' continue' → logprob: -3.8543152809143066
    4. '               ' → logprob: -5.229315280914307
    5. '                       ' → logprob: -7.729315280914307
    6. '   ' → logprob: -7.854315280914307
    7. '	continue' → logprob: -9.229315757751465
    8. '           ' → logprob: -11.854315757751465
    9. '```' → logprob: -11.854315757751465
    10. '_continue' → logprob: -11.854315757751465

Token 2451: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.018397968262434006
    2. '```' → logprob: -4.143397808074951
    3. '                
' → logprob: -6.893397808074951
    4. '<|end|>' → logprob: -7.893397808074951
    5. '``' → logprob: -8.01839828491211
    6. '                   ' → logprob: -9.14339828491211
    7. '           ' → logprob: -9.26839828491211
    8. 'token' → logprob: -9.76839828491211
    9. '                ' → logprob: -9.89339828491211
    10. '              ' → logprob: -10.01839828491211

Token 2452: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04362807050347328
    2. '```' → logprob: -3.168627977371216
    3. '``' → logprob: -8.293627738952637
    4. 'token' → logprob: -8.918627738952637
    5. '                
' → logprob: -9.168627738952637
    6. '                   ' → logprob: -10.043627738952637
    7. '           ' → logprob: -10.918627738952637
    8. '              ' → logprob: -11.168627738952637
    9. 'wait' → logprob: -11.168627738952637
    10. 'time' → logprob: -11.418627738952637

Token 2453: ' #' (ID: 1069)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wait' → logprob: -0.4291810989379883
    2. '               ' → logprob: -1.4291810989379883
    3. '           ' → logprob: -3.0541810989379883
    4. 'wt' → logprob: -3.3041810989379883
    5. 'w' → logprob: -5.054181098937988
    6. '#' (adapté à ' #') → logprob: -5.304181098937988
    7. 'enter' → logprob: -5.554181098937988
    8. 'tw' → logprob: -5.679181098937988
    9. 'time' → logprob: -6.679181098937988
    10. '```' → logprob: -6.929181098937988

Token 2454: ' at' (ID: 540)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wait' → logprob: -0.21886475384235382
    2. '               ' → logprob: -1.9688647985458374
    3. 'wt' → logprob: -3.593864679336548
    4. 'arr' → logprob: -5.343864917755127
    5. 'enter' → logprob: -5.343864917755127
    6. 'w' → logprob: -5.593864917755127
    7. 'arrival' → logprob: -5.843864917755127
    8. '#' → logprob: -5.843864917755127
    9. 'tw' → logprob: -5.968864917755127
    10. 'time' → logprob: -6.468864917755127

Token 2455: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -1.5547032356262207
    2. 'goal' → logprob: -2.0547032356262207
    3. 'nx' → logprob: -2.0547032356262207
    4. 'intersection' → logprob: -2.0547032356262207
    5. '(nx' → logprob: -2.4297032356262207
    6. '(goal' → logprob: -2.5547032356262207
    7. 'next' → logprob: -2.6797032356262207
    8. '(next' → logprob: -2.9297032356262207
    9. '(node' → logprob: -3.6797032356262207
    10. ' (' → logprob: -4.429703235626221

Token 2456: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6103808879852295
    2. '_time' → logprob: -2.8603808879852295
    3. '_wait' → logprob: -2.9853808879852295
    4. ' if' → logprob: -3.2353808879852295
    5. '           ' → logprob: -3.3603808879852295
    6. '               ' → logprob: -3.4853808879852295
    7. 'time' → logprob: -3.6103808879852295
    8. ' =' → logprob: -3.7353808879852295
    9. 'wait' → logprob: -3.8603808879852295
    10. '```' → logprob: -4.110381126403809

Token 2457: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1525156944990158
    2. ',' → logprob: -3.1525156497955322
    3. 'y' → logprob: -3.9025156497955322
    4. 't' → logprob: -3.9025156497955322
    5. 'nx' → logprob: -3.9025156497955322
    6. '(x' → logprob: -4.402515888214111
    7. '(nx' → logprob: -4.777515888214111
    8. ' (' → logprob: -5.527515888214111
    9. '(n' → logprob: -5.527515888214111
    10. 'n' → logprob: -6.527515888214111

Token 2458: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.044244106858968735
    2. ',' → logprob: -3.2942440509796143
    3. ',t' → logprob: -5.794244289398193
    4. ',time' → logprob: -6.044244289398193
    5. ' ,' → logprob: -8.419243812561035
    6. ',n' → logprob: -8.669243812561035
    7. ',node' → logprob: -8.919243812561035
    8. '),' → logprob: -9.294243812561035
    9. ',
' → logprob: -10.294243812561035
    10. ',user' → logprob: -10.919243812561035

Token 2459: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2956351637840271
    2. '               ' → logprob: -1.5456352233886719
    3. '),' → logprob: -3.545635223388672
    4. ')' → logprob: -4.795635223388672
    5. '):
' → logprob: -6.295635223388672
    6. '           ' → logprob: -7.045635223388672
    7. ' ,' → logprob: -7.295635223388672
    8. '                   ' → logprob: -7.295635223388672
    9. '                
' → logprob: -7.920635223388672
    10. '):' → logprob: -8.295635223388672

Token 2460: ' wait' (ID: 5238)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wait' → logprob: -0.31878721714019775
    2. 'wt' → logprob: -1.6937872171401978
    3. '               ' → logprob: -3.193787097930908
    4. '           ' → logprob: -3.818787097930908
    5. ' wait' → logprob: -4.318787097930908
    6. ' wt' → logprob: -5.443787097930908
    7. 'tw' → logprob: -5.943787097930908
    8. '   ' → logprob: -6.443787097930908
    9. 'w' → logprob: -6.568787097930908
    10. 'delay' → logprob: -7.443787097930908

Token 2461: ' if' (ID: 538)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.6147156953811646
    2. 'time' → logprob: -1.6147156953811646
    3. ' =' → logprob: -2.239715576171875
    4. '               ' → logprob: -2.864715576171875
    5. '           ' → logprob: -3.364715576171875
    6. '=' → logprob: -3.739715576171875
    7. '            ' → logprob: -4.739715576171875
    8. 'for' → logprob: -4.989715576171875
    9. '_wait' → logprob: -5.614715576171875
    10. '                   ' → logprob: -5.864715576171875

Token 2462: ' needed' (ID: 6118)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.002724036807194352
    2. ' not' → logprob: -6.0027241706848145
    3. 'signal' → logprob: -8.877723693847656
    4. '(not' → logprob: -9.377723693847656
    5. '           ' → logprob: -12.377723693847656
    6. '   ' → logprob: -12.377723693847656
    7. 'True' → logprob: -12.502723693847656
    8. '               ' → logprob: -12.627723693847656
    9. '                   ' → logprob: -13.377723693847656
    10. '```' → logprob: -13.377723693847656

Token 2463: ' to' (ID: 316)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010163890197873116
    2. 'wait' → logprob: -6.2601637840271
    3. '                
' → logprob: -6.2601637840271
    4. '```' → logprob: -7.0101637840271
    5. '(wait' → logprob: -7.1351637840271
    6. '<|end|>' → logprob: -7.2601637840271
    7. ' for' → logprob: -7.2601637840271
    8. 'time' → logprob: -7.5101637840271
    9. ',' → logprob: -7.6351637840271
    10. ' wait' → logprob: -7.8851637840271

Token 2464: ' enter' (ID: 5747)
  Prédit: 'enter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enter' → logprob: -0.017386754974722862
    2. ' enter' → logprob: -4.2673869132995605
    3. 't' → logprob: -7.1423869132995605
    4. '_enter' → logprob: -7.1423869132995605
    5. '
' → logprob: -7.7673869132995605
    6. '```' → logprob: -8.142386436462402
    7. 'allow' → logprob: -8.767386436462402
    8. 'allowed' → logprob: -9.517386436462402
    9. 'entry' → logprob: -9.642386436462402
    10. 'arr' → logprob: -9.767386436462402

Token 2465: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.8795458078384399
    2. 'time' → logprob: -1.12954580783844
    3. '               ' → logprob: -2.7545456886291504
    4. 'arrival' → logprob: -3.1295456886291504
    5. 'signal' → logprob: -3.7545456886291504
    6. 'if' → logprob: -4.12954568862915
    7. 'inter' → logprob: -4.25454568862915
    8. 'entry' → logprob: -4.25454568862915
    9. 'intersection' → logprob: -4.25454568862915
    10. 'node' → logprob: -4.62954568862915

Token 2466: ' intersection' (ID: 42002)
  Prédit: 'intersection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'intersection' → logprob: -0.035118166357278824
    2. '_inter' → logprob: -3.6601181030273438
    3. 'node' → logprob: -5.160118103027344
    4. ' intersection' → logprob: -6.285118103027344
    5. 'inter' → logprob: -7.035118103027344
    6. 'direction' → logprob: -9.410118103027344
    7. '_node' → logprob: -9.660118103027344
    8. '```' → logprob: -10.035118103027344
    9. 'signal' → logprob: -10.910118103027344
    10. ' node' → logprob: -11.035118103027344

Token 2467: ' of' (ID: 328)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012394038960337639
    2. '                
' → logprob: -5.137393951416016
    3. 'wait' → logprob: -6.137393951416016
    4. ',' → logprob: -6.387393951416016
    5. 'time' → logprob: -6.637393951416016
    6. 'next' → logprob: -8.262393951416016
    7. '```' → logprob: -8.387393951416016
    8. '_wait' → logprob: -9.137393951416016
    9. '                   ' → logprob: -9.387393951416016
    10. '                    
' → logprob: -9.762393951416016

Token 2468: ' (' (ID: 350)
  Prédit: '(nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nx' → logprob: -0.25440868735313416
    2. 'nx' → logprob: -2.629408597946167
    3. 'nd' → logprob: -3.254408597946167
    4. ' (' → logprob: -3.379408597946167
    5. '(nd' → logprob: -3.629408597946167
    6. 'dir' → logprob: -4.879408836364746
    7. ' nx' → logprob: -5.004408836364746
    8. ' nd' → logprob: -5.379408836364746
    9. '(n' → logprob: -5.379408836364746
    10. '```' → logprob: -5.379408836364746

Token 2469: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.10005255043506622
    2. '(nx' → logprob: -2.60005259513855
    3. 'nd' → logprob: -4.725052356719971
    4. 'node' → logprob: -4.975052356719971
    5. ' nx' → logprob: -5.850052356719971
    6. ' (' → logprob: -7.725052356719971
    7. 'x' → logprob: -7.975052356719971
    8. '
' → logprob: -8.100052833557129
    9. '(nd' → logprob: -8.600052833557129
    10. '(n' → logprob: -8.850052833557129

Token 2470: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5213274309644476e-05
    2. ',n' → logprob: -11.625015258789062
    3. ',y' → logprob: -12.125015258789062
    4. ' ,' → logprob: -15.000015258789062
    5. '```' → logprob: -15.500015258789062
    6. ',next' → logprob: -16.625015258789062
    7. ',
' → logprob: -16.875015258789062
    8. 'ny' → logprob: -17.125015258789062
    9. ',None' → logprob: -17.125015258789062
    10. ',new' → logprob: -18.125015258789062

Token 2471: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -3.15441757265944e-05
    2. ' ny' → logprob: -10.375031471252441
    3. 'nyi' → logprob: -16.250032424926758
    4. 'n' → logprob: -17.250032424926758
    5. '
' → logprob: -17.500032424926758
    6. 'y' → logprob: -17.625032424926758
    7. ''ny' → logprob: -18.000032424926758
    8. '   ' → logprob: -18.250032424926758
    9. 'nym' → logprob: -18.250032424926758
    10. 'nx' → logprob: -18.375032424926758

Token 2472: ')
' (ID: 446)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.31496331095695496
    2. ')' → logprob: -1.3149633407592773
    3. ',' → logprob: -7.439963340759277
    4. '):
' → logprob: -8.064963340759277
    5. '),' → logprob: -8.939963340759277
    6. ')
' → logprob: -9.064963340759277
    7. '                   ' → logprob: -9.314963340759277
    8. '):' → logprob: -9.439963340759277
    9. '                
' → logprob: -9.439963340759277
    10. '<|end|>' → logprob: -9.814963340759277

Token 2473: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04501988738775253
    2. '```' → logprob: -3.6700198650360107
    3. 'wait' → logprob: -4.67002010345459
    4. '``' → logprob: -6.17002010345459
    5. 'time' → logprob: -6.17002010345459
    6. 'next' → logprob: -6.67002010345459
    7. '                
' → logprob: -6.92002010345459
    8. 'token' → logprob: -7.54502010345459
    9. ' wait' → logprob: -8.04502010345459
    10. '                   ' → logprob: -8.04502010345459

Token 2474: ' #' (ID: 1069)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wait' → logprob: -0.9508906602859497
    2. '               ' → logprob: -1.0758906602859497
    3. 'wt' → logprob: -1.4508906602859497
    4. 'w' → logprob: -3.82589054107666
    5. ' wt' → logprob: -5.32589054107666
    6. ' wait' → logprob: -5.45089054107666
    7. 'tw' → logprob: -5.70089054107666
    8. '           ' → logprob: -6.95089054107666
    9. 'time' → logprob: -7.07589054107666
    10. ' w' → logprob: -7.95089054107666

Token 2475: ' arrival' (ID: 24861)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wait' → logprob: -0.31548553705215454
    2. 'wt' → logprob: -1.4404854774475098
    3. 'w' → logprob: -4.19048547744751
    4. '               ' → logprob: -4.19048547744751
    5. 'tw' → logprob: -6.69048547744751
    6. ' wait' → logprob: -7.69048547744751
    7. ' wt' → logprob: -7.94048547744751
    8. '   ' → logprob: -8.315485954284668
    9. 'waiting' → logprob: -8.315485954284668
    10. 'delay' → logprob: -8.690485954284668

Token 2476: ' time' (ID: 1058)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.03422347456216812
    2. 'time' → logprob: -3.6592235565185547
    3. 't' → logprob: -5.034223556518555
    4. '_t' → logprob: -7.784223556518555
    5. '=' → logprob: -8.159223556518555
    6. 'to' → logprob: -8.409223556518555
    7. 'at' → logprob: -8.534223556518555
    8. ' =' → logprob: -8.784223556518555
    9. '_at' → logprob: -10.159223556518555
    10. '=time' → logprob: -10.784223556518555

Token 2477: ' at' (ID: 540)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3273657560348511
    2. ' =' → logprob: -1.452365756034851
    3. '=t' → logprob: -4.202365875244141
    4. 'arrival' → logprob: -4.577365875244141
    5. '               ' → logprob: -4.702365875244141
    6. '=time' → logprob: -5.452365875244141
    7. 't' → logprob: -6.827365875244141
    8. 'next' → logprob: -7.452365875244141
    9. 'wait' → logprob: -7.452365875244141
    10. '_at' → logprob: -7.577365875244141

Token 2478: ' next' (ID: 2613)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -1.0357890129089355
    2. ' node' → logprob: -1.6607890129089355
    3. ' (' → logprob: -2.2857890129089355
    4. ' next' → logprob: -2.5357890129089355
    5. 'next' → logprob: -2.6607890129089355
    6. '(node' → logprob: -3.1607890129089355
    7. '(nx' → logprob: -3.1607890129089355
    8. ' nx' → logprob: -3.4107890129089355
    9. '(next' → logprob: -3.5357890129089355
    10. 'nx' → logprob: -4.1607890129089355

Token 2479: ' intersection' (ID: 42002)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.47900328040122986
    2. 'intersection' → logprob: -1.4790033102035522
    3. '_inter' → logprob: -2.2290031909942627
    4. 'inter' → logprob: -4.104003429412842
    5. '```' → logprob: -5.104003429412842
    6. '_node' → logprob: -5.729003429412842
    7. '(x' → logprob: -5.854003429412842
    8. '
' → logprob: -5.979003429412842
    9. '``' → logprob: -6.604003429412842
    10. ' node' → logprob: -6.604003429412842

Token 2480: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5902013182640076
    2. ' =' → logprob: -0.8402013182640076
    3. '=time' → logprob: -5.090201377868652
    4. ' +=' → logprob: -6.840201377868652
    5. '+=' → logprob: -6.965201377868652
    6. '=t' → logprob: -6.965201377868652
    7. '+' → logprob: -7.215201377868652
    8. '_time' → logprob: -7.215201377868652
    9. 'time' → logprob: -7.340201377868652
    10. '_wait' → logprob: -7.590201377868652

Token 2481: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00016539888747502118
    2. ' t' → logprob: -8.750164985656738
    3. '`t' → logprob: -12.500164985656738
    4. 'next' → logprob: -13.125164985656738
    5. 'new' → logprob: -14.375164985656738
    6. 'time' → logprob: -15.875164985656738
    7. 'wait' → logprob: -16.250165939331055
    8. '
' → logprob: -16.500165939331055
    9. ' next' → logprob: -16.750165939331055
    10. '   ' → logprob: -17.000165939331055

Token 2482: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6328569054603577
    2. ' +' → logprob: -0.7578569054603577
    3. '+t' → logprob: -8.882857322692871
    4. '               ' → logprob: -10.882857322692871
    5. '```' → logprob: -11.257857322692871
    6. '+w' → logprob: -11.632857322692871
    7. ' +=' → logprob: -11.632857322692871
    8. '+=' → logprob: -11.882857322692871
    9. 'time' → logprob: -12.007857322692871
    10. '                   ' → logprob: -12.132857322692871

Token 2483: ' tt' (ID: 34181)
  Prédit: 'tt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tt' → logprob: -0.0007929548737592995
    2. 'wait' → logprob: -8.125792503356934
    3. '(tt' → logprob: -8.250792503356934
    4. ' tt' → logprob: -8.625792503356934
    5. 'time' → logprob: -10.500792503356934
    6. '(wait' → logprob: -12.125792503356934
    7. '_tt' → logprob: -12.250792503356934
    8. '(' → logprob: -12.375792503356934
    9. ' wait' → logprob: -12.500792503356934
    10. 't' → logprob: -13.000792503356934

Token 2484: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5260449051856995
    2. '+' → logprob: -1.4010448455810547
    3. ' +' → logprob: -2.4010448455810547
    4. '                
' → logprob: -4.276044845581055
    5. '<|end|>' → logprob: -4.401044845581055
    6. '<|end|>' → logprob: -4.651044845581055
    7. 'wait' → logprob: -4.776044845581055
    8. '
' → logprob: -5.651044845581055
    9. '(wait' → logprob: -5.901044845581055
    10. '                    
' → logprob: -6.151044845581055

Token 2485: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.013899032957851887
    2. '```' → logprob: -5.388898849487305
    3. 'wait' → logprob: -5.638898849487305
    4. '                
' → logprob: -6.263898849487305
    5. ' wait' → logprob: -6.638898849487305
    6. '
' → logprob: -7.638898849487305
    7. ',' → logprob: -8.138898849487305
    8. 'next' → logprob: -8.138898849487305
    9. 'time' → logprob: -8.263898849487305
    10. '``' → logprob: -8.513898849487305

Token 2486: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2752560079097748
    2. 'wait' → logprob: -1.5252560377120972
    3. 'wt' → logprob: -4.650256156921387
    4. 'w' → logprob: -5.150256156921387
    5. ' wait' → logprob: -5.400256156921387
    6. 'time' → logprob: -7.525256156921387
    7. 'enter' → logprob: -7.775256156921387
    8. 'next' → logprob: -8.025256156921387
    9. ' wt' → logprob: -8.275256156921387
    10. ' w' → logprob: -8.275256156921387

Token 2487: ' check' (ID: 2371)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wait' → logprob: -0.26432254910469055
    2. 'wt' → logprob: -2.014322519302368
    3. '               ' → logprob: -2.389322519302368
    4. 'w' → logprob: -5.139322757720947
    5. 'tw' → logprob: -7.764322757720947
    6. '           ' → logprob: -8.264322280883789
    7. 'waiting' → logprob: -8.514322280883789
    8. 'delay' → logprob: -9.139322280883789
    9. '```' → logprob: -9.264322280883789
    10. ' wait' → logprob: -9.764322280883789

Token 2488: ' signal' (ID: 12884)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.35844358801841736
    2. 'not' → logprob: -1.4834436178207397
    3. ' if' → logprob: -3.98344349861145
    4. '               ' → logprob: -4.108443737030029
    5. 'wait' → logprob: -4.108443737030029
    6. ' not' → logprob: -4.608443737030029
    7. 'can' → logprob: -5.733443737030029
    8. 'allowed' → logprob: -5.858443737030029
    9. 'allow' → logprob: -6.608443737030029
    10. 'entry' → logprob: -6.858443737030029

Token 2489: ' at' (ID: 540)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4277358055114746
    2. ' if' → logprob: -2.6777358055114746
    3. 'allow' → logprob: -2.8027358055114746
    4. '               ' → logprob: -2.9277358055114746
    5. 'time' → logprob: -2.9277358055114746
    6. 'wait' → logprob: -3.3027358055114746
    7. 'allows' → logprob: -3.8027358055114746
    8. '_time' → logprob: -4.552735805511475
    9. 'entry' → logprob: -4.802735805511475
    10. 'arrival' → logprob: -5.302735805511475

Token 2490: ' next' (ID: 2613)
  Prédit: '(nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(nx' → logprob: -0.010798551142215729
    2. ' (' → logprob: -4.885798454284668
    3. '(n' → logprob: -5.885798454284668
    4. '(next' → logprob: -7.885798454284668
    5. '((' → logprob: -11.635798454284668
    6. '(node' → logprob: -11.760798454284668
    7. '(' → logprob: -11.885798454284668
    8. '   ' → logprob: -12.760798454284668
    9. '(nn' → logprob: -13.010798454284668
    10. ' ' → logprob: -14.010798454284668

Token 2491: ' intersection' (ID: 42002)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.9465588331222534
    2. '(nx' → logprob: -1.0715588331222534
    3. 'intersection' → logprob: -1.9465588331222534
    4. '_inter' → logprob: -2.696558952331543
    5. 'inter' → logprob: -3.821558952331543
    6. 'node' → logprob: -4.196558952331543
    7. '(' → logprob: -4.696558952331543
    8. ' (' → logprob: -5.196558952331543
    9. '(x' → logprob: -6.446558952331543
    10. 'nx' → logprob: -6.821558952331543

Token 2492: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03455817699432373
    2. 'next' → logprob: -4.534558296203613
    3. 'if' → logprob: -4.909558296203613
    4. 'time' → logprob: -5.784558296203613
    5. ' if' → logprob: -6.284558296203613
    6. '(next' → logprob: -6.284558296203613
    7. 'wait' → logprob: -6.909558296203613
    8. 'arrival' → logprob: -6.909558296203613
    9. '                
' → logprob: -7.034558296203613
    10. ',' → logprob: -7.034558296203613

Token 2493: ' can' (ID: 665)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.015368407592177391
    2. 'signal' → logprob: -4.265368461608887
    3. ' not' → logprob: -7.390368461608887
    4. '(not' → logprob: -7.640368461608887
    5. '```' → logprob: -9.890368461608887
    6. '(signal' → logprob: -10.890368461608887
    7. ' signal' → logprob: -11.390368461608887
    8. 'signals' → logprob: -11.390368461608887
    9. '   ' → logprob: -11.890368461608887
    10. '`' → logprob: -13.390368461608887

Token 2494: ' enter' (ID: 5747)
  Prédit: 'enter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enter' → logprob: -0.04463760554790497
    2. ' enter' → logprob: -3.294637680053711
    3. '_enter' → logprob: -5.294637680053711
    4. 'not' → logprob: -6.794637680053711
    5. ' not' → logprob: -8.919637680053711
    6. 'signal' → logprob: -9.419637680053711
    7. '```' → logprob: -9.669637680053711
    8. ' signal' → logprob: -9.919637680053711
    9. 'entered' → logprob: -10.794637680053711
    10. 'entry' → logprob: -10.919637680053711

Token 2495: ' immediately' (ID: 10731)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5225980877876282
    2. 'wait' → logprob: -1.0225980281829834
    3. '```' → logprob: -4.1475982666015625
    4. 'enter' → logprob: -5.2725982666015625
    5. '
' → logprob: -5.2725982666015625
    6. 'w' → logprob: -5.5225982666015625
    7. 'next' → logprob: -5.5225982666015625
    8. '                
' → logprob: -5.6475982666015625
    9. 'time' → logprob: -6.1475982666015625
    10. 'if' → logprob: -6.2725982666015625

Token 2496: ' or' (ID: 503)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07033385336399078
    2. '                
' → logprob: -3.570333957672119
    3. '
' → logprob: -4.195333957672119
    4. '<|end|>' → logprob: -4.695333957672119
    5. ',' → logprob: -4.945333957672119
    6. ' if' → logprob: -6.445333957672119
    7. '<|end|>' → logprob: -6.695333957672119
    8. '```' → logprob: -7.445333957672119
    9. 'wait' → logprob: -7.820333957672119
    10. 'time' → logprob: -8.070333480834961

Token 2497: ' wait' (ID: 5238)
  Prédit: 'need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'need' → logprob: -1.1495251655578613
    2. 'wait' → logprob: -1.2745251655578613
    3. '#' → logprob: -2.1495251655578613
    4. 'continue' → logprob: -2.3995251655578613
    5. 'must' → logprob: -2.5245251655578613
    6. ' wait' → logprob: -3.6495251655578613
    7. ' need' → logprob: -3.8995251655578613
    8. 'should' → logprob: -4.149525165557861
    9. ' must' → logprob: -4.774525165557861
    10. '```' → logprob: -4.899525165557861

Token 2498: ' there' (ID: 1354)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.017203737050294876
    2. '                
' → logprob: -4.7672038078308105
    3. '<|end|>' → logprob: -5.7672038078308105
    4. '```' → logprob: -7.0172038078308105
    5. ',' → logprob: -7.3922038078308105
    6. '<|end|>' → logprob: -7.5172038078308105
    7. '
' → logprob: -7.8922038078308105
    8. 'token' → logprob: -8.517203330993652
    9. '                   ' → logprob: -8.517203330993652
    10. '  
' → logprob: -8.642203330993652

Token 2499: '?
' (ID: 3901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05216333270072937
    2. 'wait' → logprob: -3.4271633625030518
    3. '                
' → logprob: -5.927163124084473
    4. 'time' → logprob: -5.927163124084473
    5. ' wait' → logprob: -6.052163124084473
    6. '```' → logprob: -6.052163124084473
    7. ',' → logprob: -6.302163124084473
    8. 'next' → logprob: -6.552163124084473
    9. ' if' → logprob: -7.302163124084473
    10. 'if' → logprob: -7.427163124084473

Token 2500: '               ' (ID: 506)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wait' → logprob: -0.47157156467437744
    2. '               ' → logprob: -1.2215715646743774
    3. '```' → logprob: -3.721571445465088
    4. 'w' → logprob: -3.971571445465088
    5. ' wait' → logprob: -4.096571445465088
    6. 'if' → logprob: -5.096571445465088
    7. '``' → logprob: -5.971571445465088
    8. 'time' → logprob: -6.096571445465088
    9. ' if' → logprob: -6.471571445465088
    10. 'next' → logprob: -6.846571445465088

Token 2501: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.17040753364562988
    2. 'wait' → logprob: -2.17040753364563
    3. 'wt' → logprob: -3.67040753364563
    4. 'w' → logprob: -4.795407295227051
    5. 'tw' → logprob: -5.670407295227051
    6. ' wait' → logprob: -6.670407295227051
    7. 'enter' → logprob: -6.920407295227051
    8. 'time' → logprob: -7.420407295227051
    9. ' wt' → logprob: -7.420407295227051
    10. '           ' → logprob: -7.545407295227051

Token 2502: ' problem' (ID: 4792)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4572291374206543
    2. 'wait' → logprob: -1.2072291374206543
    3. 'wt' → logprob: -2.9572291374206543
    4. 'w' → logprob: -4.457229137420654
    5. 'tw' → logprob: -6.207229137420654
    6. '           ' → logprob: -7.457229137420654
    7. 'delay' → logprob: -7.457229137420654
    8. 'enter' → logprob: -7.957229137420654
    9. 'waiting' → logprob: -8.457229614257812
    10. ' wait' → logprob: -8.582229614257812

Token 2503: ' states' (ID: 9407)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12915882468223572
    2. '                   ' → logprob: -3.5041587352752686
    3. ':' → logprob: -3.7541587352752686
    4. '<|end|>' → logprob: -4.129158973693848
    5. '<|end|>' → logprob: -5.004158973693848
    6. '           ' → logprob: -5.004158973693848
    7. ' is' → logprob: -5.504158973693848
    8. ' continues' → logprob: -5.754158973693848
    9. '#' → logprob: -5.754158973693848
    10. '                
' → logprob: -5.879158973693848

Token 2504: ':' (ID: 25)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wait' → logprob: -0.4965527355670929
    2. '               ' → logprob: -1.1215527057647705
    3. 'time' → logprob: -4.37155294418335
    4. 'w' → logprob: -4.49655294418335
    5. '                   ' → logprob: -4.49655294418335
    6. ' wait' → logprob: -5.12155294418335
    7. '           ' → logprob: -5.24655294418335
    8. '```' → logprob: -5.74655294418335
    9. 'waiting' → logprob: -6.12155294418335
    10. 'delay' → logprob: -6.24655294418335

Token 2505: ' "' (ID: 392)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wait' → logprob: -0.07727532833814621
    2. 'wt' → logprob: -3.327275276184082
    3. '               ' → logprob: -4.077275276184082
    4. ' wait' → logprob: -4.702275276184082
    5. 'w' → logprob: -4.827275276184082
    6. ' wt' → logprob: -7.077275276184082
    7. 'time' → logprob: -7.327275276184082
    8. 'waiting' → logprob: -7.452275276184082
    9. ' w' → logprob: -7.577275276184082
    10. '```' → logprob: -7.827275276184082

Token 2506: '交' (ID: 10130)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wait' → logprob: -0.5943278074264526
    2. 'signal' → logprob: -2.844327926635742
    3. 'arrival' → logprob: -2.844327926635742
    4. 'if' → logprob: -2.969327926635742
    5. '```' → logprob: -3.219327926635742
    6. 't' → logprob: -3.219327926635742
    7. '#' → logprob: -3.469327926635742
    8. 'next' → logprob: -3.469327926635742
    9. '
' → logprob: -3.594327926635742
    10. 'arr' → logprob: -4.344327926635742

Token 2507: '差' (ID: 35142)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.200356364250183
    2. '```' → logprob: -1.700356364250183
    3. '               ' → logprob: -1.950356364250183
    4. '                   ' → logprob: -2.5753564834594727
    5. '                        
' → logprob: -3.5753564834594727
    6. '                       ' → logprob: -3.7003564834594727
    7. '                           ' → logprob: -3.9503564834594727
    8. '続きを' → logprob: -4.075356483459473
    9. ')' → logprob: -4.200356483459473
    10. '_' → logprob: -4.450356483459473

Token 2508: '点' (ID: 8300)
  Prédit: '点'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '点' → logprob: -0.0030179955065250397
    2. '```' → logprob: -7.003017902374268
    3. '差' → logprob: -7.378017902374268
    4. '               ' → logprob: -7.378017902374268
    5. '           ' → logprob: -7.753017902374268
    6. '   ' → logprob: -9.628018379211426
    7. 'point' → logprob: -9.628018379211426
    8. 'points' → logprob: -10.628018379211426
    9. '``' → logprob: -10.628018379211426
    10. '       ' → logprob: -11.128018379211426

Token 2509: 'に' (ID: 5280)
  Prédit: 'に'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'に' → logprob: -0.023142637684941292
    2. 'の' → logprob: -4.3981428146362305
    3. 'で' → logprob: -4.8981428146362305
    4. '到' → logprob: -7.2731428146362305
    5. 'まで' → logprob: -7.6481428146362305
    6. ' に' → logprob: -8.02314281463623
    7. 'への' → logprob: -8.02314281463623
    8. 'では' → logprob: -8.52314281463623
    9. '```' → logprob: -8.52314281463623
    10. 'は' → logprob: -9.02314281463623

Token 2510: '到' (ID: 6946)
  Prédit: '到'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '到' → logprob: -0.010882276110351086
    2. '進' → logprob: -5.135882377624512
    3. '入' → logprob: -5.510882377624512
    4. '着' → logprob: -7.885882377624512
    5. '#' → logprob: -9.510882377624512
    6. 'to' → logprob: -9.635882377624512
    7. 'は' → logprob: -9.760882377624512
    8. ' 到' → logprob: -9.760882377624512
    9. 't' → logprob: -9.885882377624512
    10. '   ' → logprob: -10.510882377624512

Token 2511: '達' (ID: 83892)
  Prédit: '達'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '達' → logprob: -0.0035706115886569023
    2. '着' → logprob: -5.753570556640625
    3. '```' → logprob: -9.003570556640625
    4. '#' → logprob: -10.003570556640625
    5. 'reach' → logprob: -10.003570556640625
    6. '达' → logprob: -10.003570556640625
    7. 'る' → logprob: -10.378570556640625
    8. 'arrival' → logprob: -10.503570556640625
    9. '``' → logprob: -10.753570556640625
    10. '   ' → logprob: -12.128570556640625

Token 2512: 'した' (ID: 23085)
  Prédit: 'した'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'した' → logprob: -0.001008515479043126
    2. 'する' → logprob: -7.5010085105896
    3. '```' → logprob: -8.751008987426758
    4. 'し' → logprob: -9.501008987426758
    5. 'して' → logprob: -9.626008987426758
    6. '   ' → logprob: -9.626008987426758
    7. ' ' → logprob: -10.626008987426758
    8. '時' → logprob: -11.251008987426758
    9. 'すると' → logprob: -11.376008987426758
    10. 'た' → logprob: -11.501008987426758

Token 2513: '時' (ID: 12131)
  Prédit: '時'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '時' → logprob: -0.016698479652404785
    2. 't' → logprob: -5.266698360443115
    3. 'と' → logprob: -5.391698360443115
    4. '時間' → logprob: -5.516698360443115
    5. 'time' → logprob: -6.891698360443115
    6. '```' → logprob: -7.516698360443115
    7. '際' → logprob: -8.141698837280273
    8. 'た' → logprob: -8.266698837280273
    9. '
' → logprob: -9.516698837280273
    10. '   ' → logprob: -9.516698837280273

Token 2514: '刻' (ID: 56985)
  Prédit: '時'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '時' → logprob: -0.003400975139811635
    2. '刻' → logprob: -6.253400802612305
    3. '```' → logprob: -7.378400802612305
    4. '着' → logprob: -9.003400802612305
    5. '点' → logprob: -9.378400802612305
    6. '達' → logprob: -9.503400802612305
    7. '时' → logprob: -9.503400802612305
    8. '段' → logprob: -10.253400802612305
    9. 'る' → logprob: -10.253400802612305
    10. '   ' → logprob: -10.253400802612305

Token 2515: 'に' (ID: 5280)
  Prédit: 'に'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'に' → logprob: -0.2210470288991928
    2. 'で' → logprob: -1.846047043800354
    3. 'の' → logprob: -4.0960469245910645
    4. 'では' → logprob: -4.8460469245910645
    5. 'まで' → logprob: -5.3460469245910645
    6. 'が' → logprob: -5.4710469245910645
    7. ')' → logprob: -6.8460469245910645
    8. '```' → logprob: -6.8460469245910645
    9. 'には' → logprob: -7.5960469245910645
    10. ' に' → logprob: -7.5960469245910645

Token 2516: '、' (ID: 1395)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.1486460268497467
    2. 'signal' → logprob: -2.148646116256714
    3. '(not' → logprob: -4.773645877838135
    4. '信' → logprob: -5.023645877838135
    5. ' not' → logprob: -5.273645877838135
    6. '#' → logprob: -7.898645877838135
    7. '(signal' → logprob: -8.273646354675293
    8. ' signal' → logprob: -8.898646354675293
    9. 'signals' → logprob: -9.773646354675293
    10. '不' → logprob: -9.898646354675293

Token 2517: '信' (ID: 5182)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.5507278442382812
    2. 'signal' → logprob: -0.9257278442382812
    3. '信' → logprob: -4.300727844238281
    4. ' not' → logprob: -4.925727844238281
    5. ' signal' → logprob: -6.300727844238281
    6. '(not' → logprob: -6.550727844238281
    7. 'if' → logprob: -6.675727844238281
    8. '#' → logprob: -7.175727844238281
    9. '(signal' → logprob: -8.300727844238281
    10. '```' → logprob: -8.675727844238281

Token 2518: '号' (ID: 4785)
  Prédit: '号'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '号' → logprob: -2.927930654550437e-05
    2. '```' → logprob: -11.125029563903809
    3. '號' → logprob: -11.750029563903809
    4. '``' → logprob: -13.000029563903809
    5. '{
' → logprob: -13.750029563903809
    6. '#' → logprob: -14.375029563903809
    7. '   ' → logprob: -15.000029563903809
    8. '	' → logprob: -15.250029563903809
    9. '{' → logprob: -15.375029563903809
    10. '
' → logprob: -15.500029563903809

Token 2519: 'が' (ID: 6632)
  Prédit: 'が'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'が' → logprob: -0.014275508932769299
    2. ' が' → logprob: -5.014275550842285
    3. '==' → logprob: -6.139275550842285
    4. ')' → logprob: -6.264275550842285
    5. 'の' → logprob: -7.014275550842285
    6. 'を' → logprob: -7.264275550842285
    7. ' ==' → logprob: -7.514275550842285
    8. '```' → logprob: -8.014275550842285
    9. '=' → logprob: -8.264275550842285
    10. '）' → logprob: -9.014275550842285

Token 2520: '赤' (ID: 74280)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.3563827872276306
    2. '赤' → logprob: -1.2313828468322754
    3. 'green' → logprob: -5.731382846832275
    4. ' red' → logprob: -5.981382846832275
    5. '```' → logprob: -6.856382846832275
    6. ' 赤' → logprob: -7.606382846832275
    7. '_red' → logprob: -7.856382846832275
    8. ' green' → logprob: -9.731382369995117
    9. '青' → logprob: -10.106382369995117
    10. '
' → logprob: -10.731382369995117

Token 2521: 'の場合' (ID: 171169)
  Prédit: 'の場合'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'の場合' → logprob: -0.014569957740604877
    2. 'の' → logprob: -4.5145697593688965
    3. 'で' → logprob: -6.8895697593688965
    4. 'なら' → logprob: -7.0145697593688965
    5. 'だった' → logprob: -7.8895697593688965
    6. '場合' → logprob: -8.014570236206055
    7. 'か' → logprob: -8.639570236206055
    8. 'です' → logprob: -8.889570236206055
    9. '   ' → logprob: -9.639570236206055
    10. 'では' → logprob: -9.639570236206055

Token 2522: 'には' (ID: 68857)
  Prédit: 'には'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'には' → logprob: -1.7321033477783203
    2. ':
' → logprob: -1.8571033477783203
    3. 'では' → logprob: -2.1071033477783203
    4. '):
' → logprob: -2.1071033477783203
    5. 'の' → logprob: -2.8571033477783203
    6. ':' → logprob: -3.1071033477783203
    7. 'は' → logprob: -3.3571033477783203
    8. '#' → logprob: -3.3571033477783203
    9. 'if' → logprob: -3.3571033477783203
    10. 'を' → logprob: -3.3571033477783203

Token 2523: '進' (ID: 77897)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.10939387232065201
    2. '進' → logprob: -2.359393835067749
    3. '
' → logprob: -5.859394073486328
    4. 'enter' → logprob: -6.484394073486328
    5. ' continue' → logprob: -7.234394073486328
    6. '#' → logprob: -7.359394073486328
    7. '```' → logprob: -7.609394073486328
    8. 'wait' → logprob: -7.734394073486328
    9. 'pass' → logprob: -7.859394073486328
    10. 'entry' → logprob: -7.984394073486328

Token 2524: '入' (ID: 8130)
  Prédit: '入'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '入' → logprob: -0.005226051900535822
    2. '行' → logprob: -6.130226135253906
    3. '```' → logprob: -6.755226135253906
    4. 'enter' → logprob: -6.880226135253906
    5. '``' → logprob: -8.380226135253906
    6. '_enter' → logprob: -9.255226135253906
    7. '#' → logprob: -9.505226135253906
    8. 'む' → logprob: -9.880226135253906
    9. '   ' → logprob: -10.005226135253906
    10. '
' → logprob: -10.005226135253906

Token 2525: 'でき' (ID: 78673)
  Prédit: 'でき'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'でき' → logprob: -5.073596548754722e-05
    2. '```' → logprob: -11.25005054473877
    3. 'できます' → logprob: -12.00005054473877
    4. 'し' → logprob: -12.00005054473877
    5. '``' → logprob: -12.62505054473877
    6. '出来' → logprob: -12.75005054473877
    7. 'する' → logprob: -12.87505054473877
    8. '不可' → logprob: -13.25005054473877
    9. 'ません' → logprob: -13.25005054473877
    10. 'は' → logprob: -13.50005054473877

Token 2526: 'ません' (ID: 63366)
  Prédit: 'ません'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ません' → logprob: -0.0009379047551192343
    2. 'ない' → logprob: -7.2509379386901855
    3. 'ませ' → logprob: -8.625937461853027
    4. '```' → logprob: -11.000937461853027
    5. 'ま' → logprob: -11.375937461853027
    6. 'ありません' → logprob: -12.500937461853027
    7. 'ず' → logprob: -12.750937461853027
    8. 'な' → logprob: -12.750937461853027
    9. 'でき' → logprob: -13.000937461853027
    10. 'ら' → logprob: -13.250937461853027

Token 2527: '"
' (ID: 1092)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.837275505065918
    2. '               ' → logprob: -1.712275505065918
    3. ')
' → logprob: -1.712275505065918
    4. '"
' → logprob: -2.212275505065918
    5. '"' → logprob: -3.212275505065918
    6. ')"
' → logprob: -3.462275505065918
    7. ')"' → logprob: -4.962275505065918
    8. '```' → logprob: -5.087275505065918
    9. '")' → logprob: -5.337275505065918
    10. '                   ' → logprob: -6.337275505065918

Token 2528: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007584032136946917
    2. 'wait' → logprob: -5.257584095001221
    3. '                
' → logprob: -6.882584095001221
    4. ' wait' → logprob: -7.882584095001221
    5. 'next' → logprob: -8.132583618164062
    6. '```' → logprob: -8.757583618164062
    7. '
' → logprob: -9.507583618164062
    8. 'continue' → logprob: -9.632583618164062
    9. '                   ' → logprob: -9.882583618164062
    10. 'time' → logprob: -10.007583618164062

Token 2529: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5903376936912537
    2. 'wait' → logprob: -0.8403376936912537
    3. 'wt' → logprob: -4.965337753295898
    4. 'w' → logprob: -5.465337753295898
    5. ' wait' → logprob: -6.965337753295898
    6. '           ' → logprob: -7.590337753295898
    7. 'tw' → logprob: -8.090337753295898
    8. 'time' → logprob: -8.090337753295898
    9. 'delay' → logprob: -8.215337753295898
    10. 'waiting' → logprob: -8.465337753295898

Token 2530: ' so' (ID: 813)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wait' → logprob: -0.14315152168273926
    2. 'wt' → logprob: -2.3931515216827393
    3. '               ' → logprob: -3.7681515216827393
    4. 'w' → logprob: -4.39315128326416
    5. '           ' → logprob: -5.26815128326416
    6. 'waiting' → logprob: -7.39315128326416
    7. 'tw' → logprob: -8.39315128326416
    8. 'delay' → logprob: -8.64315128326416
    9. '   ' → logprob: -9.01815128326416
    10. '#' → logprob: -9.89315128326416

Token 2531: ' arrival' (ID: 24861)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wait' → logprob: -0.06329163908958435
    2. '               ' → logprob: -2.938291549682617
    3. ' wait' → logprob: -6.063291549682617
    4. 'w' → logprob: -6.813291549682617
    5. '           ' → logprob: -6.813291549682617
    6. 'waiting' → logprob: -6.813291549682617
    7. 'wt' → logprob: -7.313291549682617
    8. '#' → logprob: -7.438291549682617
    9. 'delay' → logprob: -7.938291549682617
    10. '   ' → logprob: -8.438291549682617

Token 2532: ' time' (ID: 1058)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.14159570634365082
    2. 'time' → logprob: -2.3915956020355225
    3. ' time' → logprob: -4.266595840454102
    4. '               ' → logprob: -4.516595840454102
    5. 'at' → logprob: -5.891595840454102
    6. '=' → logprob: -6.266595840454102
    7. ' =' → logprob: -6.391595840454102
    8. '_at' → logprob: -6.391595840454102
    9. ' at' → logprob: -6.766595840454102
    10. 'to' → logprob: -6.891595840454102

Token 2533: ' must' (ID: 2804)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.4898525476455688
    2. '_to' → logprob: -1.8648525476455688
    3. '=' → logprob: -2.1148524284362793
    4. 'at' → logprob: -2.4898524284362793
    5. '>=' → logprob: -2.7398524284362793
    6. '_at' → logprob: -2.7398524284362793
    7. '+=' → logprob: -2.9898524284362793
    8. 'to' → logprob: -2.9898524284362793
    9. '_wait' → logprob: -3.4898524284362793
    10. 'if' → logprob: -4.114852428436279

Token 2534: ' be' (ID: 413)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.18148815631866455
    2. '=' → logprob: -1.9314881563186646
    3. 'wait' → logprob: -4.681488037109375
    4. 'be' → logprob: -5.431488037109375
    5. 'continue' → logprob: -6.181488037109375
    6. '+' → logprob: -6.806488037109375
    7. '<=' → logprob: -6.931488037109375
    8. '>=' → logprob: -7.556488037109375
    9. 'remain' → logprob: -7.681488037109375
    10. '=time' → logprob: -8.431488037109375

Token 2535: ' when' (ID: 1261)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.18512733280658722
    2. 'wait' → logprob: -2.6851272583007812
    3. 't' → logprob: -2.9351272583007812
    4. 'signal' → logprob: -3.8101272583007812
    5. '>=' → logprob: -5.560127258300781
    6. ' max' → logprob: -5.685127258300781
    7. 'min' → logprob: -5.810127258300781
    8. 'next' → logprob: -6.185127258300781
    9. 'at' → logprob: -6.560127258300781
    10. 'valid' → logprob: -6.810127258300781

Token 2536: ' signal' (ID: 12884)
  Prédit: 'signal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'signal' → logprob: -0.005664852447807789
    2. ' signal' → logprob: -5.255664825439453
    3. 'not' → logprob: -8.880664825439453
    4. '```' → logprob: -9.255664825439453
    5. '(signal' → logprob: -10.005664825439453
    6. ' not' → logprob: -10.505664825439453
    7. '
' → logprob: -11.005664825439453
    8. 'graph' → logprob: -11.130664825439453
    9. '   ' → logprob: -11.380664825439453
    10. 'await' → logprob: -11.505664825439453

Token 2537: ' allows' (ID: 7927)
  Prédit: 'allows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'allows' → logprob: -0.06183355674147606
    2. '_all' → logprob: -3.311833620071411
    3. ' allows' → logprob: -5.061833381652832
    4. 'all' → logprob: -5.061833381652832
    5. 'is' → logprob: -5.811833381652832
    6. 'perm' → logprob: -6.061833381652832
    7. '.all' → logprob: -6.436833381652832
    8. '_state' → logprob: -7.186833381652832
    9. '允许' → logprob: -7.561833381652832
    10. '```' → logprob: -7.811833381652832

Token 2538: ' entering' (ID: 25605)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02477220445871353
    2. 'wait' → logprob: -3.8997721672058105
    3. ' wait' → logprob: -6.6497721672058105
    4. 'next' → logprob: -7.3997721672058105
    5. 'time' → logprob: -7.7747721672058105
    6. 'if' → logprob: -7.8997721672058105
    7. '                
' → logprob: -7.8997721672058105
    8. 'enter' → logprob: -8.399772644042969
    9. 'arrival' → logprob: -8.524772644042969
    10. ' if' → logprob: -8.774772644042969

Token 2539: ' (' (ID: 350)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.17518490552902222
    2. 'wait' → logprob: -1.925184965133667
    3. ' wait' → logprob: -5.425184726715088
    4. '                
' → logprob: -5.800184726715088
    5. 'enter' → logprob: -6.175184726715088
    6. '
' → logprob: -6.925184726715088
    7. 'time' → logprob: -7.050184726715088
    8. 'next' → logprob: -7.300184726715088
    9. 'arrival' → logprob: -7.800184726715088
    10. '```' → logprob: -8.175185203552246

Token 2540: 'i' (ID: 72)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.7281661033630371
    2. 'next' → logprob: -1.478166103363037
    3. ')' → logprob: -1.728166103363037
    4. ' the' → logprob: -3.478166103363037
    5. ' next' → logprob: -3.603166103363037
    6. 'True' → logprob: -4.728166103363037
    7. ')
' → logprob: -4.853166103363037
    8. 'nd' → logprob: -4.853166103363037
    9. 'that' → logprob: -5.103166103363037
    10. '(next' → logprob: -6.103166103363037

Token 2541: '.e' (ID: 2560)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.20530837774276733
    2. 'n' → logprob: -1.830308437347412
    3. 'm' → logprob: -4.705308437347412
    4. 's' → logprob: -5.080308437347412
    5. 't' → logprob: -5.455308437347412
    6. '=' → logprob: -6.330308437347412
    7. '   ' → logprob: -7.330308437347412
    8. '       ' → logprob: -7.955308437347412
    9. 'mp' → logprob: -7.955308437347412
    10. 'if' → logprob: -8.205307960510254

Token 2542: '.' (ID: 13)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.1821115016937256
    2. 'True' → logprob: -1.3071115016937256
    3. 'n' → logprob: -2.8071115016937256
    4. '           ' → logprob: -2.9321115016937256
    5. 'e' → logprob: -3.0571115016937256
    6. '               ' → logprob: -3.3071115016937256
    7. '=' → logprob: -3.4321115016937256
    8. '.e' → logprob: -3.8071115016937256
    9. ' True' → logprob: -3.8071115016937256
    10. '                   ' → logprob: -3.9321115016937256

Token 2543: ' direction' (ID: 9262)
  Prédit: 'signal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'signal' → logprob: -0.4005883038043976
    2. 'True' → logprob: -1.4005882740020752
    3. 'not' → logprob: -4.150588512420654
    4. 'wait' → logprob: -4.275588512420654
    5. ' signal' → logprob: -4.650588512420654
    6. ' True' → logprob: -4.650588512420654
    7. 'can' → logprob: -5.025588512420654
    8. 'False' → logprob: -5.150588512420654
    9. 'waiting' → logprob: -5.275588512420654
    10. '
' → logprob: -5.775588512420654

Token 2544: ' opposite' (ID: 23821)
  Prédit: 'allows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'allows' → logprob: -0.4079080820083618
    2. 'is' → logprob: -2.4079079627990723
    3. '==' → logprob: -3.2829079627990723
    4. ' is' → logprob: -3.4079079627990723
    5. 'allowed' → logprob: -3.4079079627990723
    6. 'to' → logprob: -3.5329079627990723
    7. ' allows' → logprob: -4.157907962799072
    8. 'が' → logprob: -4.282907962799072
    9. 'arrival' → logprob: -4.782907962799072
    10. 'の' → logprob: -5.032907962799072

Token 2545: ' to' (ID: 316)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.14846879243850708
    2. 'to' → logprob: -2.1484687328338623
    3. 'dir' → logprob: -4.148468971252441
    4. ' to' → logprob: -5.898468971252441
    5. ' nd' → logprob: -6.898468971252441
    6. 'of' → logprob: -7.273468971252441
    7. 'ndir' → logprob: -8.148468971252441
    8. '```' → logprob: -8.273468971252441
    9. '(nd' → logprob: -8.398468971252441
    10. '_nd' → logprob: -8.773468971252441

Token 2546: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.009469419717788696
    2. 'dir' → logprob: -4.759469509124756
    3. ' nd' → logprob: -7.134469509124756
    4. 'ndir' → logprob: -10.384469032287598
    5. '(nd' → logprob: -12.134469032287598
    6. 'next' → logprob: -12.259469032287598
    7. '#' → logprob: -12.384469032287598
    8. ' dir' → logprob: -12.509469032287598
    9. '```' → logprob: -12.884469032287598
    10. 'd' → logprob: -13.634469032287598

Token 2547: ' allowed' (ID: 9279)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6939409971237183
    2. ')' → logprob: -0.8189409971237183
    3. '):
' → logprob: -3.318941116333008
    4. ' at' → logprob: -5.193941116333008
    5. '_arr' → logprob: -5.443941116333008
    6. ')_' → logprob: -6.443941116333008
    7. '_at' → logprob: -6.568941116333008
    8. '```' → logprob: -6.693941116333008
    9. 'at' → logprob: -7.193941116333008
    10. '):

' → logprob: -7.318941116333008

Token 2548: ' at' (ID: 540)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.007530674804002047
    2. '):' → logprob: -5.632530689239502
    3. ')
' → logprob: -6.757530689239502
    4. '               ' → logprob: -7.132530689239502
    5. ')' → logprob: -7.382530689239502
    6. '):
' → logprob: -7.882530689239502
    7. ' at' → logprob: -8.257530212402344
    8. '                   ' → logprob: -8.507530212402344
    9. 'to' → logprob: -9.132530212402344
    10. '```' → logprob: -9.257530212402344

Token 2549: ' arrival' (ID: 24861)
  Prédit: '(next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(next' → logprob: -0.9997705817222595
    2. '(nx' → logprob: -1.1247706413269043
    3. 'next' → logprob: -1.8747706413269043
    4. 'arrival' → logprob: -2.6247706413269043
    5. 'intersection' → logprob: -3.6247706413269043
    6. 'nx' → logprob: -3.8747706413269043
    7. '(' → logprob: -4.249770641326904
    8. '(n' → logprob: -4.874770641326904
    9. 'the' → logprob: -5.124770641326904
    10. 't' → logprob: -7.124770641326904

Token 2550: ')
' (ID: 446)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.44118061661720276
    2. '_time' → logprob: -1.4411805868148804
    3. '):
' → logprob: -3.06618070602417
    4. ')' → logprob: -3.31618070602417
    5. ')
' → logprob: -4.31618070602417
    6. '+' → logprob: -5.19118070602417
    7. '時間' → logprob: -5.44118070602417
    8. ' time' → logprob: -5.69118070602417
    9. '```' → logprob: -6.06618070602417
    10. '               ' → logprob: -6.19118070602417

Token 2551: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005100103095173836
    2. 'wait' → logprob: -6.255100250244141
    3. 'next' → logprob: -6.880100250244141
    4. '```' → logprob: -7.255100250244141
    5. ' wait' → logprob: -7.505100250244141
    6. ' next' → logprob: -8.38010025024414
    7. 'time' → logprob: -8.63010025024414
    8. 'w' → logprob: -9.88010025024414
    9. '                   ' → logprob: -10.00510025024414
    10. '``' → logprob: -10.13010025024414

Token 2552: ' arrival' (ID: 24861)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wait' → logprob: -0.5630514025688171
    2. '               ' → logprob: -0.9380514025688171
    3. 'wt' → logprob: -3.438051462173462
    4. 'w' → logprob: -5.938051223754883
    5. ' wait' → logprob: -6.188051223754883
    6. 'tw' → logprob: -6.813051223754883
    7. 'delay' → logprob: -8.188051223754883
    8. ' wt' → logprob: -8.688051223754883
    9. 'waiting' → logprob: -8.688051223754883
    10. '                   ' → logprob: -9.563051223754883

Token 2553: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.003859816351905465
    2. '_' → logprob: -6.253859996795654
    3. '_at' → logprob: -7.378859996795654
    4. ' =' → logprob: -7.503859996795654
    5. 'time' → logprob: -9.003859519958496
    6. '=' → logprob: -9.128859519958496
    7. '<|end|>' → logprob: -9.253859519958496
    8. ')' → logprob: -9.753859519958496
    9. '"time' → logprob: -9.878859519958496
    10. '=time' → logprob: -9.878859519958496

Token 2554: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16031359136104584
    2. '=' → logprob: -1.910313606262207
    3. ' +' → logprob: -10.160313606262207
    4. '+' → logprob: -10.160313606262207
    5. ')' → logprob: -12.785313606262207
    6. ' ' → logprob: -13.160313606262207
    7. ' +=' → logprob: -13.285313606262207
    8. '=t' → logprob: -13.535313606262207
    9. '+=' → logprob: -13.910313606262207
    10. '=end' → logprob: -15.160313606262207

Token 2555: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.04858941584825516
    2. ' t' → logprob: -3.0485894680023193
    3. '                   ' → logprob: -14.173589706420898
    4. '               ' → logprob: -14.298589706420898
    5. '   ' → logprob: -15.298589706420898
    6. '`t' → logprob: -15.298589706420898
    7. '	t' → logprob: -16.6735897064209
    8. '(t' → logprob: -16.9235897064209
    9. '           ' → logprob: -17.4235897064209
    10. ' ' → logprob: -17.5485897064209

Token 2556: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06197340786457062
    2. ' +' → logprob: -2.8119733333587646
    3. '+t' → logprob: -12.936973571777344
    4. '+
' → logprob: -13.561973571777344
    5. '＋' → logprob: -14.436973571777344
    6. '+n' → logprob: -14.436973571777344
    7. ' +
' → logprob: -16.061973571777344
    8. '
' → logprob: -16.186973571777344
    9. '+(' → logprob: -16.186973571777344
    10. '+++' → logprob: -16.686973571777344

Token 2557: ' tt' (ID: 34181)
  Prédit: 'tt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tt' → logprob: -1.7120533811976202e-05
    2. ' tt' → logprob: -11.000017166137695
    3. '(tt' → logprob: -15.250017166137695
    4. '_tt' → logprob: -15.875017166137695
    5. '           ' → logprob: -18.250017166137695
    6. '               ' → logprob: -19.500017166137695
    7. '   ' → logprob: -19.750017166137695
    8. 'ttp' → logprob: -20.000017166137695
    9. 'TT' → logprob: -20.250017166137695
    10. '.tt' → logprob: -20.875017166137695

Token 2558: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0035874759778380394
    2. '                
' → logprob: -6.378587245941162
    3. 'wait' → logprob: -7.378587245941162
    4. '
' → logprob: -7.628587245941162
    5. 'if' → logprob: -8.50358772277832
    6. '                   ' → logprob: -8.75358772277832
    7. ',' → logprob: -9.87858772277832
    8. ' if' → logprob: -10.00358772277832
    9. 'next' → logprob: -10.12858772277832
    10. '           ' → logprob: -10.50358772277832

Token 2559: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11657989025115967
    2. '```' → logprob: -2.866580009460449
    3. 'wait' → logprob: -3.741580009460449
    4. 'if' → logprob: -4.991580009460449
    5. ' if' → logprob: -5.116580009460449
    6. '``' → logprob: -5.491580009460449
    7. '                   ' → logprob: -5.616580009460449
    8. ' wait' → logprob: -5.616580009460449
    9. '
' → logprob: -6.866580009460449
    10. '                
' → logprob: -7.366580009460449

Token 2560: ' wait' (ID: 5238)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wait' (adapté à ' wait') → logprob: -0.2091962844133377
    2. 'wt' → logprob: -1.8341963291168213
    3. 'w' → logprob: -3.9591963291168213
    4. '               ' → logprob: -4.709196090698242
    5. 'waiting' → logprob: -7.709196090698242
    6. 'delay' → logprob: -8.584196090698242
    7. 'if' → logprob: -9.209196090698242
    8. ' wait' → logprob: -10.459196090698242
    9. 'tw' → logprob: -10.584196090698242
    10. ' wt' → logprob: -10.584196090698242

Token 2561: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.48188671469688416
    2. '_time' → logprob: -1.4818867444992065
    3. '=' → logprob: -2.481886625289917
    4. ' =' → logprob: -3.356886625289917
    5. '_=' → logprob: -4.106886863708496
    6. '_to' → logprob: -5.481886863708496
    7. '_tokens' → logprob: -5.481886863708496
    8. '_for' → logprob: -6.106886863708496
    9. '_needed' → logprob: -6.481886863708496
    10. '_token' → logprob: -6.731886863708496

Token 2562: ' wait' (ID: 5238)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wait' → logprob: -0.016138415783643723
    2. ' wait' → logprob: -4.141138553619385
    3. '0' → logprob: -9.266138076782227
    4. '   ' → logprob: -12.641138076782227
    5. '(wait' → logprob: -12.891138076782227
    6. '	wait' → logprob: -13.891138076782227
    7. 'waiting' → logprob: -14.266138076782227
    8. 'max' → logprob: -14.391138076782227
    9. 'signal' → logprob: -14.891138076782227
    10. '       ' → logprob: -15.141138076782227

Token 2563: '_time' (ID: 6425)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.3170715570449829
    2. '_time' → logprob: -1.317071557044983
    3. 'to' → logprob: -7.192071437835693
    4. '_at' → logprob: -7.317071437835693
    5. '_next' → logprob: -7.567071437835693
    6. '_signal' → logprob: -8.317071914672852
    7. '_until' → logprob: -8.317071914672852
    8. '```' → logprob: -8.317071914672852
    9. '_token' → logprob: -8.442071914672852
    10. '=' → logprob: -9.192071914672852

Token 2564: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.0025000330060720444
    2. 'to' → logprob: -6.002500057220459
    3. '_time' → logprob: -11.6274995803833
    4. '```' → logprob: -12.8774995803833
    5. '(n' → logprob: -13.0024995803833
    6. '(' → logprob: -13.0024995803833
    7. 'To' → logprob: -13.1274995803833
    8. 'def' → logprob: -13.7524995803833
    9. ' to' → logprob: -13.7524995803833
    10. '   ' → logprob: -14.0024995803833

Token 2565: '_enter' (ID: 88636)
  Prédit: 'enter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enter' → logprob: -0.1269449144601822
    2. '_enter' → logprob: -2.1269450187683105
    3. ' enter' → logprob: -12.251944541931152
    4. 'Enter' → logprob: -12.626944541931152
    5. 'wait' → logprob: -12.626944541931152
    6. '	enter' → logprob: -13.501944541931152
    7. 'ent' → logprob: -13.751944541931152
    8. 'insert' → logprob: -14.126944541931152
    9. '_ENTER' → logprob: -14.876944541931152
    10. 'int' → logprob: -15.001944541931152

Token 2566: '_signal' (ID: 50953)
  Prédit: '(nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nx' → logprob: -0.6995628476142883
    2. '((' → logprob: -1.4495627880096436
    3. '(n' → logprob: -1.5745627880096436
    4. '(node' → logprob: -4.199563026428223
    5. '(next' → logprob: -4.449563026428223
    6. '(' → logprob: -4.449563026428223
    7. '_signal' → logprob: -4.574563026428223
    8. 'signal' → logprob: -5.324563026428223
    9. '(graph' → logprob: -5.574563026428223
    10. '(signal' → logprob: -6.574563026428223

Token 2567: '(' (ID: 7)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.002858843421563506
    2. '(' → logprob: -6.752858638763428
    3. '(n' → logprob: -7.377858638763428
    4. '(nx' → logprob: -7.627858638763428
    5. '(node' → logprob: -8.627859115600586
    6. '(graph' → logprob: -9.002859115600586
    7. '(((' → logprob: -9.502859115600586
    8. '(inter' → logprob: -9.502859115600586
    9. '(to' → logprob: -10.252859115600586
    10. '(next' → logprob: -10.252859115600586

Token 2568: ' (' (ID: 350)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -1.0742703676223755
    2. '(h' → logprob: -1.1992703676223755
    3. '(n' → logprob: -1.1992703676223755
    4. '((' → logprob: -3.574270248413086
    5. ' (' → logprob: -4.199270248413086
    6. '(' → logprob: -5.449270248413086
    7. '(nx' → logprob: -5.449270248413086
    8. 'v' → logprob: -6.449270248413086
    9. '(next' → logprob: -6.949270248413086
    10. 'h' → logprob: -7.699270248413086

Token 2569: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0508444719016552
    2. '(h' → logprob: -3.050844430923462
    3. ' (' → logprob: -6.675844669342041
    4. ' h' → logprob: -7.925844669342041
    5. '(nx' → logprob: -8.050844192504883
    6. '(n' → logprob: -9.175844192504883
    7. 'nx' → logprob: -9.425844192504883
    8. '(' → logprob: -10.550844192504883
    9. '   ' → logprob: -10.675844192504883
    10. 'hn' → logprob: -11.550844192504883

Token 2570: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -7.465036105713807e-06
    2. '[(' → logprob: -12.625007629394531
    3. 'l' → logprob: -14.250007629394531
    4. '[n' → logprob: -14.250007629394531
    5. '[h' → logprob: -14.250007629394531
    6. 'h' → logprob: -14.375007629394531
    7. '[' → logprob: -14.750007629394531
    8. ')' → logprob: -15.000007629394531
    9. '[list' → logprob: -15.500007629394531
    10. '[
' → logprob: -16.12500762939453

Token 2571: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0002702760975807905
    2. '(nx' → logprob: -9.500269889831543
    3. 'nx' → logprob: -9.750269889831543
    4. '
' → logprob: -10.250269889831543
    5. '```' → logprob: -10.750269889831543
    6. '   ' → logprob: -11.125269889831543
    7. ')[' → logprob: -11.500269889831543
    8. '[' → logprob: -11.500269889831543
    9. '[
' → logprob: -11.750269889831543
    10. '[x' → logprob: -11.875269889831543

Token 2572: 'x' (ID: 87)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.604460597038269
    2. 'x' → logprob: -0.854460597038269
    3. '[n' → logprob: -3.9794607162475586
    4. '(nx' → logprob: -5.229460716247559
    5. '[x' → logprob: -6.104460716247559
    6. ' nx' → logprob: -6.729460716247559
    7. '[' → logprob: -8.479460716247559
    8. 'n' → logprob: -9.229460716247559
    9. 'sx' → logprob: -9.979460716247559
    10. '   ' → logprob: -9.979460716247559

Token 2573: '],' (ID: 2155)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08041399717330933
    2. '][' → logprob: -3.205414056777954
    3. '],' → logprob: -3.955414056777954
    4. '[n' → logprob: -4.205413818359375
    5. ',' → logprob: -6.580413818359375
    6. 'ny' → logprob: -7.205413818359375
    7. '],[' → logprob: -9.205413818359375
    8. '   ' → logprob: -9.330413818359375
    9. ']' → logprob: -9.455413818359375
    10. '```' → logprob: -10.205413818359375

Token 2574: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.006786654703319073
    2. ' v' → logprob: -5.006786823272705
    3. '(v' → logprob: -9.631786346435547
    4. ' ' → logprob: -13.881786346435547
    5. '   ' → logprob: -14.006786346435547
    6. '[v' → logprob: -14.006786346435547
    7. '	v' → logprob: -14.256786346435547
    8. ' (' → logprob: -14.631786346435547
    9. ')v' → logprob: -15.131786346435547
    10. 'vy' → logprob: -15.131786346435547

Token 2575: 'list' (ID: 2641)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.3914982080459595
    2. 'list' → logprob: -1.1414982080459595
    3. '[' → logprob: -5.89149808883667
    4. 'v' → logprob: -6.89149808883667
    5. '[n' → logprob: -9.266498565673828
    6. 'y' → logprob: -9.391498565673828
    7. '[v' → logprob: -9.391498565673828
    8. '[y' → logprob: -9.391498565673828
    9. '   ' → logprob: -9.516498565673828
    10. 'ny' → logprob: -9.641498565673828

Token 2576: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008886012248694897
    2. 'ny' → logprob: -4.758885860443115
    3. ' ny' → logprob: -8.633886337280273
    4. '[n' → logprob: -10.008886337280273
    5. '   ' → logprob: -11.258886337280273
    6. ' [' → logprob: -11.508886337280273
    7. '[
' → logprob: -12.633886337280273
    8. ')' → logprob: -12.758886337280273
    9. '       ' → logprob: -13.008886337280273
    10. ',' → logprob: -13.133886337280273

Token 2577: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.00010306637705070898
    2. ' ny' → logprob: -9.375102996826172
    3. '[' → logprob: -11.375102996826172
    4. 'n' → logprob: -12.125102996826172
    5. '   ' → logprob: -14.875102996826172
    6. 'nyi' → logprob: -15.250102996826172
    7. ''ny' → logprob: -15.750102996826172
    8. 'y' → logprob: -16.000102996826172
    9. 'nj' → logprob: -17.125102996826172
    10. ' ' → logprob: -17.125102996826172

Token 2578: ']),' (ID: 19560)
  Prédit: ']),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']),' → logprob: -0.42353957891464233
    2. '),' → logprob: -1.798539638519287
    3. '],' → logprob: -1.923539638519287
    4. '[n' → logprob: -4.298539638519287
    5. '               ' → logprob: -4.798539638519287
    6. '                   ' → logprob: -5.423539638519287
    7. ')],' → logprob: -6.423539638519287
    8. '           ' → logprob: -6.548539638519287
    9. ']' → logprob: -7.048539638519287
    10. '[' → logprob: -7.298539638519287

Token 2579: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.0619712732732296
    2. ' nd' → logprob: -2.8119711875915527
    3. '(nd' → logprob: -13.811971664428711
    4. '_nd' → logprob: -14.436971664428711
    5. '   ' → logprob: -15.186971664428711
    6. '               ' → logprob: -15.436971664428711
    7. '                   ' → logprob: -15.686971664428711
    8. '                           ' → logprob: -16.06197166442871
    9. '                ' → logprob: -16.06197166442871
    10. '                               ' → logprob: -16.18697166442871

Token 2580: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.24310302757658e-05
    2. ' ,' → logprob: -9.625072479248047
    3. ',
' → logprob: -14.000072479248047
    4. '               ' → logprob: -14.000072479248047
    5. ',current' → logprob: -14.125072479248047
    6. '                   ' → logprob: -14.250072479248047
    7. '[arr' → logprob: -14.375072479248047
    8. '           ' → logprob: -14.500072479248047
    9. '```' → logprob: -14.750072479248047
    10. 'arrival' → logprob: -14.750072479248047

Token 2581: ' arrival' (ID: 24861)
  Prédit: 'arrival'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arrival' → logprob: -0.0019289902411401272
    2. ' arrival' → logprob: -6.251928806304932
    3. '                   ' → logprob: -15.62692928314209
    4. '   ' → logprob: -16.126928329467773
    5. 'arr' → logprob: -16.626928329467773
    6. '               ' → logprob: -16.876928329467773
    7. '           ' → logprob: -17.126928329467773
    8. ' ' → logprob: -18.251928329467773
    9. '                       ' → logprob: -19.501928329467773
    10. '  ' → logprob: -20.001928329467773

Token 2582: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.00025192240718752146
    2. 'time' → logprob: -8.375251770019531
    3. 'arrival' → logprob: -11.000251770019531
    4. ')' → logprob: -13.250251770019531
    5. 'arr' → logprob: -14.125251770019531
    6. '+' → logprob: -14.250251770019531
    7. '   ' → logprob: -15.250251770019531
    8. '```' → logprob: -15.500251770019531
    9. 'Time' → logprob: -15.875251770019531
    10. 'ime' → logprob: -16.00025177001953

Token 2583: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7020609974861145
    2. ')
' → logprob: -0.7020609974861145
    3. ' )
' → logprob: -5.327061176300049
    4. '               ' → logprob: -6.077061176300049
    5. ' )' → logprob: -6.952061176300049
    6. '                   ' → logprob: -8.70206069946289
    7. ')+' → logprob: -9.07706069946289
    8. '           ' → logprob: -9.20206069946289
    9. ')
' → logprob: -9.70206069946289
    10. ')

' → logprob: -9.70206069946289

Token 2584: ' signals' (ID: 29026)
  Prédit: 'signals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'signals' → logprob: -0.0007105246186256409
    2. ' signals' → logprob: -7.250710487365723
    3. 'sign' → logprob: -15.250710487365723
    4. '               ' → logprob: -15.750710487365723
    5. '           ' → logprob: -16.75071144104004
    6. 'signal' → logprob: -17.62571144104004
    7. '                   ' → logprob: -17.87571144104004
    8. '   ' → logprob: -18.37571144104004
    9. 'Signals' → logprob: -18.75071144104004
    10. ')' → logprob: -18.75071144104004

Token 2585: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12436050921678543
    2. ')
' → logprob: -2.6243605613708496
    3. '               ' → logprob: -3.1243605613708496
    4. ' )' → logprob: -8.249360084533691
    5. ' )
' → logprob: -8.874360084533691
    6. '           ' → logprob: -10.249360084533691
    7. '                   ' → logprob: -10.749360084533691
    8. '              ' → logprob: -11.624360084533691
    9. ')
' → logprob: -12.249360084533691
    10. '                ' → logprob: -13.374360084533691

Token 2586: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003471897915005684
    2. '+' → logprob: -6.878471851348877
    3. '```' → logprob: -7.003471851348877
    4. '                   ' → logprob: -8.128472328186035
    5. ' if' → logprob: -8.253472328186035
    6. ' +' → logprob: -8.378472328186035
    7. 'continue' → logprob: -8.878472328186035
    8. '                
' → logprob: -9.378472328186035
    9. '``' → logprob: -9.628472328186035
    10. 'if' → logprob: -9.753472328186035

Token 2587: ' arrival' (ID: 24861)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05591709166765213
    2. ' if' → logprob: -3.5559170246124268
    3. '                   ' → logprob: -4.680917263031006
    4. 'if' → logprob: -5.305917263031006
    5. '+' → logprob: -5.430917263031006
    6. ' +' → logprob: -7.055917263031006
    7. ' t' → logprob: -7.305917263031006
    8. 'heap' → logprob: -7.305917263031006
    9. 'continue' → logprob: -7.430917263031006
    10. 't' → logprob: -7.555917263031006

Token 2588: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -2.629921436891891e-05
    2. 'time' → logprob: -11.62502670288086
    3. '+' → logprob: -12.25002670288086
    4. '_' → logprob: -12.37502670288086
    5. 'Time' → logprob: -13.62502670288086
    6. ' +=' → logprob: -13.87502670288086
    7. '_TIME' → logprob: -13.87502670288086
    8. '+=' → logprob: -14.00002670288086
    9. '_token' → logprob: -14.37502670288086
    10. '_times' → logprob: -14.37502670288086

Token 2589: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.026398062705993652
    2. ' +' → logprob: -3.901398181915283
    3. '+=' → logprob: -5.651398181915283
    4. ' +=' → logprob: -6.526398181915283
    5. '+
' → logprob: -7.401398181915283
    6. '<|end|>' → logprob: -8.776397705078125
    7. '```' → logprob: -10.901397705078125
    8. ' +
' → logprob: -11.151397705078125
    9. ')' → logprob: -11.651397705078125
    10. '+[' → logprob: -11.776397705078125

Token 2590: ' wait' (ID: 5238)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wait' → logprob: -2.165027217415627e-05
    2. ' wait' → logprob: -10.750021934509277
    3. '(wait' → logprob: -16.25002098083496
    4. '	wait' → logprob: -18.75002098083496
    5. '```' → logprob: -22.12502098083496
    6. 'waiting' → logprob: -22.12502098083496
    7. 'w' → logprob: -22.25002098083496
    8. '_wait' → logprob: -22.62502098083496
    9. '   ' → logprob: -22.87502098083496
    10. 'Wait' → logprob: -23.62502098083496

Token 2591: '

' (ID: 279)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0023221296723932028
    2. '<|end|>' → logprob: -6.877322196960449
    3. '                
' → logprob: -7.752322196960449
    4. ',' → logprob: -8.37732219696045
    5. '                   ' → logprob: -8.75232219696045
    6. '                ' → logprob: -9.12732219696045
    7. '              ' → logprob: -9.37732219696045
    8. '<|end|>' → logprob: -10.00232219696045
    9. '           ' → logprob: -10.12732219696045
    10. ')' → logprob: -10.12732219696045

Token 2592: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04812202975153923
    2. ' if' → logprob: -4.048121929168701
    3. ' next' → logprob: -4.673121929168701
    4. 'next' → logprob: -4.798121929168701
    5. 'if' → logprob: -5.298121929168701
    6. 'new' → logprob: -6.423121929168701
    7. '           ' → logprob: -6.423121929168701
    8. ' new' → logprob: -6.548121929168701
    9. '                   ' → logprob: -6.923121929168701
    10. '```' → logprob: -7.798121929168701

Token 2593: ' if' (ID: 538)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.13265082240104675
    2. 'if' (adapté à ' if') → logprob: -2.507650852203369
    3. '               ' → logprob: -4.007650852203369
    4. 'next' → logprob: -4.257650852203369
    5. 'cost' → logprob: -5.382650852203369
    6. 'nd' → logprob: -6.007650852203369
    7. 'nt' → logprob: -6.882650852203369
    8. ' new' → logprob: -7.257650852203369
    9. ' if' → logprob: -7.757650852203369
    10. 'total' → logprob: -8.132650375366211

Token 2594: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.2867637276649475
    2. 'arrival' → logprob: -1.7867636680603027
    3. ' dist' → logprob: -3.0367636680603027
    4. '(dist' → logprob: -4.161763668060303
    5. ' arrival' → logprob: -4.286763668060303
    6. 'arr' → logprob: -5.786763668060303
    7. '(arr' → logprob: -7.661763668060303
    8. '           ' → logprob: -8.161764144897461
    9. ' (' → logprob: -8.536764144897461
    10. '   ' → logprob: -8.661764144897461

Token 2595: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -3.106736039626412e-05
    2. '[' → logprob: -11.625031471252441
    3. '((' → logprob: -11.875031471252441
    4. '(' → logprob: -12.750031471252441
    5. '```' → logprob: -12.750031471252441
    6. '[
' → logprob: -12.875031471252441
    7. '[next' → logprob: -13.500031471252441
    8. '.get' → logprob: -13.750031471252441
    9. '[((' → logprob: -14.250031471252441
    10. '==' → logprob: -14.500031471252441

Token 2596: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.00026860725483857095
    2. '(nx' → logprob: -8.250268936157227
    3. ' nx' → logprob: -12.250268936157227
    4. '   ' → logprob: -13.500268936157227
    5. 'x' → logprob: -13.750268936157227
    6. '       ' → logprob: -16.875268936157227
    7. '           ' → logprob: -17.500268936157227
    8. '(n' → logprob: -17.500268936157227
    9. ' ' → logprob: -17.625268936157227
    10. 'n' → logprob: -17.875268936157227

Token 2597: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006858677952550352
    2. ',n' → logprob: -7.625685691833496
    3. 'ny' → logprob: -8.875685691833496
    4. ',y' → logprob: -10.125685691833496
    5. '(n' → logprob: -12.125685691833496
    6. '[' → logprob: -13.000685691833496
    7. ' ,' → logprob: -13.250685691833496
    8. 'n' → logprob: -13.250685691833496
    9. '[n' → logprob: -13.375685691833496
    10. ' ny' → logprob: -13.625685691833496

Token 2598: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -3.9292415749514475e-05
    2. ' ny' → logprob: -10.250039100646973
    3. 'nx' → logprob: -12.500039100646973
    4. 'nyi' → logprob: -16.87504005432129
    5. '   ' → logprob: -17.37504005432129
    6. '(nx' → logprob: -17.75004005432129
    7. '(n' → logprob: -17.87504005432129
    8. '
' → logprob: -17.87504005432129
    9. 'n' → logprob: -18.12504005432129
    10. ',' → logprob: -18.37504005432129

Token 2599: ',' (ID: 11)
  Prédit: ',d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',d' → logprob: -0.025575002655386925
    2. ',' → logprob: -3.7755749225616455
    3. ',(' → logprob: -6.275575160980225
    4. '[(' → logprob: -8.900574684143066
    5. '[d' → logprob: -9.650574684143066
    6. ',n' → logprob: -9.900574684143066
    7. ')][' → logprob: -10.150574684143066
    8. ' ,' → logprob: -10.150574684143066
    9. '),(' → logprob: -10.150574684143066
    10. ')]' → logprob: -11.150574684143066

Token 2600: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -6.778209353797138e-05
    2. ' nd' → logprob: -9.625067710876465
    3. '(nd' → logprob: -13.625067710876465
    4. '   ' → logprob: -15.250067710876465
    5. '           ' → logprob: -16.62506866455078
    6. 'ndl' → logprob: -17.00006866455078
    7. '_nd' → logprob: -17.12506866455078
    8. '       ' → logprob: -17.37506866455078
    9. '               ' → logprob: -17.50006866455078
    10. ' ' → logprob: -18.00006866455078

Token 2601: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0005854414775967598
    2. ']' → logprob: -7.625585556030273
    3. '])' → logprob: -9.500585556030273
    4. ']>' → logprob: -11.625585556030273
    5. '>]' → logprob: -12.500585556030273
    6. ')' → logprob: -13.375585556030273
    7. ' ]' → logprob: -13.500585556030273
    8. ']]' → logprob: -13.625585556030273
    9. ')][' → logprob: -14.000585556030273
    10. ' )' → logprob: -14.000585556030273

Token 2602: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.048608142882585526
    2. ' >' → logprob: -3.0486080646514893
    3. '   ' → logprob: -11.67360782623291
    4. ' ' → logprob: -13.79860782623291
    5. '```' → logprob: -13.79860782623291
    6. '[' → logprob: -13.92360782623291
    7. '>
' → logprob: -13.92360782623291
    8. '  ' → logprob: -14.42360782623291
    9. '">' → logprob: -14.42360782623291
    10. '>tag' → logprob: -14.42360782623291

Token 2603: ' arrival' (ID: 24861)
  Prédit: 'arrival'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arrival' → logprob: -0.0005564896273426712
    2. ' arrival' → logprob: -7.500556468963623
    3. 'arr' → logprob: -12.625556945800781
    4. '           ' → logprob: -16.50055694580078
    5. '               ' → logprob: -16.75055694580078
    6. '   ' → logprob: -17.37555694580078
    7. '                   ' → logprob: -17.87555694580078
    8. '```' → logprob: -18.25055694580078
    9. ' ' → logprob: -18.62555694580078
    10. 'Arrival' → logprob: -19.62555694580078

Token 2604: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -8.061054359131958e-06
    2. 'time' → logprob: -12.625007629394531
    3. 'Time' → logprob: -13.000007629394531
    4. '_arr' → logprob: -13.875007629394531
    5. 'arrival' → logprob: -14.125007629394531
    6. 'arr' → logprob: -15.250007629394531
    7. '_code' → logprob: -15.750007629394531
    8. '+' → logprob: -16.37500762939453
    9. '```' → logprob: -16.62500762939453
    10. '   ' → logprob: -16.87500762939453

Token 2605: ':
' (ID: 734)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7152606844902039
    2. ' +' → logprob: -2.4652607440948486
    3. ')' → logprob: -2.5902607440948486
    4. '                           ' → logprob: -2.7152607440948486
    5. '                   ' → logprob: -2.9652607440948486
    6. '               ' → logprob: -3.2152607440948486
    7. '[' → logprob: -3.3402607440948486
    8. '                       ' → logprob: -3.5902607440948486
    9. '                               ' → logprob: -3.9652607440948486
    10. '<|end|>' → logprob: -3.9652607440948486

Token 2606: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7964391112327576
    2. '                           ' → logprob: -1.6714391708374023
    3. '                       ' → logprob: -2.5464391708374023
    4. '               ' → logprob: -2.7964391708374023
    5. '                               ' → logprob: -2.7964391708374023
    6. '```' → logprob: -3.4214391708374023
    7. 'heap' → logprob: -3.5464391708374023
    8. '                                           ' → logprob: -3.6714391708374023
    9. ' heap' → logprob: -4.546439170837402
    10. '<|end|>' → logprob: -4.796439170837402

Token 2607: ' dist' (ID: 3601)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.0016724453307688236
    2. ' heap' → logprob: -7.126672267913818
    3. '(heap' → logprob: -7.376672267913818
    4. '```' → logprob: -9.126672744750977
    5. '(' → logprob: -9.876672744750977
    6. '<|end|>' → logprob: -10.751672744750977
    7. 'he' → logprob: -11.001672744750977
    8. ' (' → logprob: -11.751672744750977
    9. '                           ' → logprob: -12.376672744750977
    10. 'yield' → logprob: -12.626672744750977

Token 2608: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -3.292907877039397e-06
    2. '[' → logprob: -13.12500286102295
    3. '[
' → logprob: -14.25000286102295
    4. '[((' → logprob: -15.25000286102295
    5. '((' → logprob: -15.62500286102295
    6. '```' → logprob: -16.250003814697266
    7. ' [(' → logprob: -16.875003814697266
    8. '=' → logprob: -17.500003814697266
    9. '[n' → logprob: -17.500003814697266
    10. '(' → logprob: -17.500003814697266

Token 2609: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.029761716723442078
    2. '(nx' → logprob: -3.529761791229248
    3. ' nx' → logprob: -11.65476131439209
    4. '(n' → logprob: -13.90476131439209
    5. '   ' → logprob: -14.27976131439209
    6. ' (' → logprob: -14.27976131439209
    7. '
' → logprob: -16.654762268066406
    8. '                   ' → logprob: -16.779762268066406
    9. '       ' → logprob: -17.279762268066406
    10. ' ' → logprob: -17.404762268066406

Token 2610: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1748724728822708
    2. ',(' → logprob: -2.549872398376465
    3. '(nx' → logprob: -2.674872398376465
    4. '(n' → logprob: -5.299872398376465
    5. ',n' → logprob: -5.799872398376465
    6. '[(' → logprob: -6.049872398376465
    7. '(' → logprob: -6.799872398376465
    8. '[' → logprob: -7.299872398376465
    9. '[n' → logprob: -7.424872398376465
    10. ' (' → logprob: -7.924872398376465

Token 2611: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.21713928878307343
    2. 'nx' → logprob: -1.7171392440795898
    3. '(nx' → logprob: -4.59213924407959
    4. '(n' → logprob: -5.21713924407959
    5. ' (' → logprob: -11.34213924407959
    6. 'n' → logprob: -11.46713924407959
    7. '(' → logprob: -11.71713924407959
    8. ' ny' → logprob: -12.34213924407959
    9. '
' → logprob: -12.34213924407959
    10. ',' → logprob: -13.09213924407959

Token 2612: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.135819760151207e-05
    2. ',n' → logprob: -9.75007152557373
    3. '[' → logprob: -11.75007152557373
    4. ' ,' → logprob: -12.87507152557373
    5. ',[' → logprob: -15.00007152557373
    6. '[n' → logprob: -15.00007152557373
    7. ',
' → logprob: -15.00007152557373
    8. ',(' → logprob: -15.25007152557373
    9. '<|end|>' → logprob: -15.25007152557373
    10. '   ' → logprob: -15.62507152557373

Token 2613: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.00021224225929472595
    2. '(nd' → logprob: -8.500212669372559
    3. ' nd' → logprob: -11.750212669372559
    4. '(' → logprob: -14.625212669372559
    5. '
' → logprob: -15.375212669372559
    6. 'd' → logprob: -16.750211715698242
    7. '
' → logprob: -17.125211715698242
    8. '   ' → logprob: -17.250211715698242
    9. ' (' → logprob: -17.750211715698242
    10. '(n' → logprob: -17.875211715698242

Token 2614: ')]' (ID: 15710)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4179615378379822
    2. ')]' → logprob: -2.417961597442627
    3. ']=' → logprob: -2.792961597442627
    4. '                   ' → logprob: -3.167961597442627
    5. ']+' → logprob: -3.542961597442627
    6. ')' → logprob: -3.667961597442627
    7. '[(' → logprob: -4.042961597442627
    8. '+' → logprob: -4.167961597442627
    9. '[arr' → logprob: -4.167961597442627
    10. ' +' → logprob: -4.917961597442627

Token 2615: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.061970487236976624
    2. ' =' → logprob: -2.8119704723358154
    3. '=
' → logprob: -12.936970710754395
    4. '＝' → logprob: -15.561970710754395
    5. ' =
' → logprob: -16.186969757080078
    6. '=

' → logprob: -16.561969757080078
    7. '   ' → logprob: -18.436969757080078
    8. '=int' → logprob: -18.561969757080078
    9. ')=' → logprob: -18.686969757080078
    10. ']=' → logprob: -19.061969757080078

Token 2616: ' arrival' (ID: 24861)
  Prédit: 'arrival'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arrival' → logprob: -0.0004311460361350328
    2. ' arrival' → logprob: -7.750431060791016
    3. 'arr' → logprob: -14.500431060791016
    4. '                   ' → logprob: -18.375431060791016
    5. '
' → logprob: -19.125431060791016
    6. '           ' → logprob: -20.375431060791016
    7. '   ' → logprob: -20.500431060791016
    8. 'Arrival' → logprob: -20.750431060791016
    9. '               ' → logprob: -20.875431060791016
    10. 'answer' → logprob: -21.375431060791016

Token 2617: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.0002765902318060398
    2. 'arrival' → logprob: -8.250276565551758
    3. 'time' → logprob: -11.375276565551758
    4. 'arr' → logprob: -13.125276565551758
    5. '_arr' → logprob: -14.500276565551758
    6. ' arrival' → logprob: -14.875276565551758
    7. '[arr' → logprob: -15.125276565551758
    8. '_code' → logprob: -15.875276565551758
    9. '```' → logprob: -16.125276565551758
    10. 'Time' → logprob: -16.500276565551758

Token 2618: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.08165775239467621
    2. '```' → logprob: -2.706657648086548
    3. ',' → logprob: -5.081657886505127
    4. '               ' → logprob: -6.956657886505127
    5. '<|end|>' → logprob: -6.956657886505127
    6. '				' → logprob: -7.206657886505127
    7. '``' → logprob: -7.581657886505127
    8. ')' → logprob: -8.081657409667969
    9. '                    
' → logprob: -8.081657409667969
    10. '   ' → logprob: -8.331657409667969

Token 2619: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.041153185069561005
    2. '```' → logprob: -3.6661531925201416
    3. ',' → logprob: -5.1661529541015625
    4. '               ' → logprob: -6.1661529541015625
    5. '                       ' → logprob: -6.5411529541015625
    6. '                           ' → logprob: -6.6661529541015625
    7. 'heap' → logprob: -6.9161529541015625
    8. ')' → logprob: -7.2911529541015625
    9. '),' → logprob: -8.166152954101562
    10. '<|end|>' → logprob: -8.291152954101562

Token 2620: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.00025907461531460285
    2. ' heap' → logprob: -8.500259399414062
    3. '```' → logprob: -10.250259399414062
    4. '                   ' → logprob: -10.875259399414062
    5. '                       ' → logprob: -15.125259399414062
    6. '``' → logprob: -15.500259399414062
    7. '(heap' → logprob: -15.625259399414062
    8. 'he' → logprob: -16.000259399414062
    9. '           ' → logprob: -16.000259399414062
    10. '               ' → logprob: -16.250259399414062

Token 2621: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -5.5577775128767826e-06
    2. '```' → logprob: -12.500005722045898
    3. 'h' → logprob: -15.375005722045898
    4. 'he' → logprob: -15.500005722045898
    5. '           ' → logprob: -15.625005722045898
    6. '                   ' → logprob: -15.875005722045898
    7. '               ' → logprob: -16.0000057220459
    8. 't' → logprob: -16.0000057220459
    9. 'queue' → logprob: -16.1250057220459
    10. '                       ' → logprob: -16.5000057220459

Token 2622: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.020843857899308205
    2. 'he' → logprob: -3.895843744277954
    3. 'push' → logprob: -9.145843505859375
    4. ' he' → logprob: -9.395843505859375
    5. '```' → logprob: -10.145843505859375
    6. 'ush' → logprob: -10.645843505859375
    7. 'app' → logprob: -11.020843505859375
    8. 'q' → logprob: -11.395843505859375
    9. '.heap' → logprob: -12.270843505859375
    10. '.push' → logprob: -12.520843505859375

Token 2623: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -8.244413766078651e-05
    2. 'pp' → logprob: -9.500082015991211
    3. 'push' → logprob: -12.125082015991211
    4. 'ush' → logprob: -13.875082015991211
    5. '```' → logprob: -14.500082015991211
    6. 'ap' → logprob: -15.500082015991211
    7. 'p' → logprob: -16.12508201599121
    8. 'q' → logprob: -16.25008201599121
    9. 'appen' → logprob: -16.50008201599121
    10. 'he' → logprob: -17.25008201599121

Token 2624: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -7.386147626675665e-05
    2. 'push' → logprob: -10.000073432922363
    3. 'op' → logprob: -10.625073432922363
    4. 'sh' → logprob: -13.125073432922363
    5. 'app' → logprob: -14.125073432922363
    6. 'pp' → logprob: -14.750073432922363
    7. '```' → logprob: -15.000073432922363
    8. 'ushed' → logprob: -15.250073432922363
    9. 'pop' → logprob: -16.25007438659668
    10. '.push' → logprob: -16.50007438659668

Token 2625: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -1.0206720617134124e-05
    2. '```' → logprob: -11.87501049041748
    3. 'hq' → logprob: -13.87501049041748
    4. '[h' → logprob: -14.75001049041748
    5. '	h' → logprob: -15.12501049041748
    6. '(
' → logprob: -15.25001049041748
    7. '   ' → logprob: -15.37501049041748
    8. ' (' → logprob: -15.37501049041748
    9. '/h' → logprob: -15.75001049041748
    10. ',h' → logprob: -16.125009536743164

Token 2626: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -7.703443770878948e-06
    2. '(q' → logprob: -12.000007629394531
    3. '(h' → logprob: -14.625007629394531
    4. '(
' → logprob: -15.875007629394531
    5. '?q' → logprob: -15.875007629394531
    6. '```' → logprob: -15.875007629394531
    7. '[q' → logprob: -16.12500762939453
    8. 'hq' → logprob: -16.25000762939453
    9. ')' → logprob: -16.50000762939453
    10. '((' → logprob: -17.00000762939453

Token 2627: ',(' (ID: 27243)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(h' → logprob: -4.56102097814437e-05
    2. 'hq' → logprob: -10.375045776367188
    3. '((' → logprob: -11.875045776367188
    4. ' (' → logprob: -12.625045776367188
    5. '```' → logprob: -13.375045776367188
    6. '(' → logprob: -13.750045776367188
    7. '(q' → logprob: -14.875045776367188
    8. '(heap' → logprob: -15.250045776367188
    9. ',h' → logprob: -15.500045776367188
    10. '(
' → logprob: -15.750045776367188

Token 2628: 'arrival' (ID: 183251)
  Prédit: 'arrival'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arrival' → logprob: -7.517272024415433e-05
    2. ' arrival' → logprob: -9.500075340270996
    3. '   ' → logprob: -16.00007438659668
    4. 'arr' → logprob: -16.62507438659668
    5. ' ' → logprob: -19.62507438659668
    6. '           ' → logprob: -20.37507438659668
    7. '                   ' → logprob: -20.50007438659668
    8. '  ' → logprob: -20.75007438659668
    9. '```' → logprob: -21.25007438659668
    10. '               ' → logprob: -21.37507438659668

Token 2629: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.05354881286621094
    2. 'arrival' → logprob: -3.303548812866211
    3. '(arr' → logprob: -4.553548812866211
    4. 'arr' → logprob: -5.678548812866211
    5. 'time' → logprob: -7.303548812866211
    6. '_code' → logprob: -8.178548812866211
    7. '(' → logprob: -9.053548812866211
    8. '(n' → logprob: -9.928548812866211
    9. ' arrival' → logprob: -9.928548812866211
    10. '_arr' → logprob: -10.053548812866211

Token 2630: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.6139577031135559
    2. ',(' → logprob: -0.9889577031135559
    3. ',' → logprob: -2.488957643508911
    4. ',x' → logprob: -6.86395788192749
    5. '(nx' → logprob: -6.98895788192749
    6. '(n' → logprob: -7.11395788192749
    7. ' ,' → logprob: -8.113957405090332
    8. ',node' → logprob: -8.363957405090332
    9. ',next' → logprob: -8.488957405090332
    10. '',(' → logprob: -8.738957405090332

Token 2631: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.9361264946837764e-07
    2. 'nx' → logprob: -16.125
    3. '(nx' → logprob: -20.75
    4. ' nx' → logprob: -21.0
    5. ' x' → logprob: -21.625
    6. ''x' → logprob: -22.375
    7. '
' → logprob: -22.625
    8. '"x' → logprob: -23.375
    9. '(x' → logprob: -23.5
    10. '	x' → logprob: -23.5

Token 2632: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010425841173855588
    2. ',n' → logprob: -10.000103950500488
    3. '+' → logprob: -10.125103950500488
    4. 'ny' → logprob: -11.250103950500488
    5. ' ,' → logprob: -13.375103950500488
    6. ',y' → logprob: -13.375103950500488
    7. ',
' → logprob: -14.000103950500488
    8. '(n' → logprob: -14.625103950500488
    9. 'n' → logprob: -14.875103950500488
    10. ' ny' → logprob: -15.125103950500488

Token 2633: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -5.872261317563243e-05
    2. ' ny' → logprob: -9.750059127807617
    3. 'nyi' → logprob: -15.125059127807617
    4. '
' → logprob: -17.000059127807617
    5. 'ney' → logprob: -17.750059127807617
    6. 'n' → logprob: -17.875059127807617
    7. 'nx' → logprob: -18.125059127807617
    8. 'nym' → logprob: -18.750059127807617
    9. '   ' → logprob: -18.875059127807617
    10. ''ny' → logprob: -19.250059127807617

Token 2634: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008646124973893166
    2. 'nd' → logprob: -4.758646011352539
    3. ',n' → logprob: -11.383646011352539
    4. '(nd' → logprob: -12.008646011352539
    5. ' nd' → logprob: -12.133646011352539
    6. ' ,' → logprob: -12.258646011352539
    7. '   ' → logprob: -13.633646011352539
    8. '
' → logprob: -13.883646011352539
    9. '  ' → logprob: -14.008646011352539
    10. ',
' → logprob: -15.508646011352539

Token 2635: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -1.8624639324116288e-06
    2. ' nd' → logprob: -13.250001907348633
    3. '(nd' → logprob: -20.750001907348633
    4. '   ' → logprob: -20.750001907348633
    5. '
' → logprob: -22.875001907348633
    6. 'n' → logprob: -23.125001907348633
    7. 'nds' → logprob: -23.125001907348633
    8. '_nd' → logprob: -23.250001907348633
    9. '```' → logprob: -23.500001907348633
    10. ' ' → logprob: -23.750001907348633

Token 2636: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -7.362307223957032e-05
    2. '))
' → logprob: -9.750073432922363
    3. ')' → logprob: -11.500073432922363
    4. ')))' → logprob: -12.500073432922363
    5. ' ))' → logprob: -14.125073432922363
    6. '   ' → logprob: -15.625073432922363
    7. '               ' → logprob: -15.875073432922363
    8. '                   ' → logprob: -15.875073432922363
    9. '           ' → logprob: -17.12507438659668
    10. ''))' → logprob: -17.12507438659668

Token 2637: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2638: ' else' (ID: 1203)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2639: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7905961871147156
    2. ':' → logprob: -1.1655962467193604
    3. ':
' → logprob: -1.5405962467193604
    4. '       ' → logprob: -5.040596008300781
    5. '   ' → logprob: -5.415596008300781
    6. '	       ' → logprob: -6.290596008300781
    7. '		' → logprob: -7.290596008300781
    8. '<|end|>' → logprob: -7.415596008300781
    9. '(' → logprob: -7.790596008300781
    10. '<|end|>' → logprob: -7.790596008300781

Token 2640: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12691456079483032
    2. 'print' → logprob: -2.8769145011901855
    3. '           ' → logprob: -3.2519145011901855
    4. '   ' → logprob: -4.2519145011901855
    5. '	       ' → logprob: -4.8769145011901855
    6. '	   ' → logprob: -6.7519145011901855
    7. '	' → logprob: -7.7519145011901855
    8. '	print' → logprob: -8.376914978027344
    9. '```' → logprob: -8.751914978027344
    10. '		' → logprob: -10.126914978027344

Token 2641: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.009679362177848816
    2. '           ' → logprob: -4.884679317474365
    3. '   ' → logprob: -7.134679317474365
    4. '       ' → logprob: -7.384679317474365
    5. '```' → logprob: -8.259679794311523
    6. ' print' → logprob: -8.509679794311523
    7. '	       ' → logprob: -9.509679794311523
    8. '	print' → logprob: -9.884679794311523
    9. '               ' → logprob: -10.759679794311523
    10. '``' → logprob: -12.134679794311523

Token 2642: ' no' (ID: 860)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00031937702442519367
    2. '           ' → logprob: -8.500319480895996
    3. '       ' → logprob: -9.500319480895996
    4. '   ' → logprob: -10.750319480895996
    5. ' print' → logprob: -11.375319480895996
    6. '```' → logprob: -12.125319480895996
    7. '	print' → logprob: -13.500319480895996
    8. '``' → logprob: -14.500319480895996
    9. '               ' → logprob: -15.750319480895996
    10. ' ' → logprob: -15.875319480895996

Token 2643: ' path' (ID: 3104)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03268635645508766
    2. ' print' → logprob: -4.032686233520508
    3. 'answer' → logprob: -5.157686233520508
    4. 'n' → logprob: -6.032686233520508
    5. 't' → logprob: -6.407686233520508
    6. 'solution' → logprob: -7.032686233520508
    7. 'result' → logprob: -7.282686233520508
    8. 'output' → logprob: -7.657686233520508
    9. '       ' → logprob: -8.157686233520508
    10. ' solution' → logprob: -8.157686233520508

Token 2644: ' found' (ID: 2491)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07598592340946198
    2. 'print' → logprob: -3.325985908508301
    3. '       ' → logprob: -3.700985908508301
    4. '   ' → logprob: -4.825985908508301
    5. ' print' → logprob: -5.950985908508301
    6. '(' → logprob: -7.950985908508301
    7. '               ' → logprob: -8.4509859085083
    8. '(print' → logprob: -8.4509859085083
    9. ':
' → logprob: -8.5759859085083
    10. '```' → logprob: -8.8259859085083

Token 2645: ':' (ID: 25)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09245371073484421
    2. 'print' → logprob: -2.717453718185425
    3. '	       ' → logprob: -4.967453479766846
    4. '```' → logprob: -5.092453479766846
    5. '   ' → logprob: -5.467453479766846
    6. '       ' → logprob: -5.967453479766846
    7. '		' → logprob: -6.592453479766846
    8. '               ' → logprob: -8.592453956604004
    9. '	print' → logprob: -9.092453956604004
    10. '``' → logprob: -9.092453956604004

Token 2646: ' problem' (ID: 4792)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0021966483909636736
    2. '       ' → logprob: -6.252196788787842
    3. '           ' → logprob: -8.377196311950684
    4. ' print' → logprob: -10.752196311950684
    5. '   ' → logprob: -11.127196311950684
    6. '```' → logprob: -13.627196311950684
    7. '	print' → logprob: -14.877196311950684
    8. ' ' → logprob: -15.752196311950684
    9. '               ' → logprob: -15.752196311950684
    10. '``' → logprob: -17.002197265625

Token 2647: ' states' (ID: 9407)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.19617201387882233
    2. '       ' → logprob: -1.8211719989776611
    3. '           ' → logprob: -4.32117223739624
    4. '   ' → logprob: -7.19617223739624
    5. '```' → logprob: -7.32117223739624
    6. ' print' → logprob: -7.69617223739624
    7. '(print' → logprob: -7.82117223739624
    8. '(' → logprob: -8.071171760559082
    9. '	print' → logprob: -9.446171760559082
    10. '.print' → logprob: -9.821171760559082

Token 2648: ' always' (ID: 3324)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.012280530296266079
    2. '       ' → logprob: -4.762280464172363
    3. '           ' → logprob: -5.637280464172363
    4. '   ' → logprob: -10.262280464172363
    5. '```' → logprob: -10.387280464172363
    6. ' print' → logprob: -10.512280464172363
    7. '               ' → logprob: -13.637280464172363
    8. '	print' → logprob: -14.262280464172363
    9. '-' → logprob: -14.512280464172363
    10. '``' → logprob: -14.637280464172363

Token 2649: ' within' (ID: 3518)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.17952267825603485
    2. '           ' → logprob: -2.054522752761841
    3. '       ' → logprob: -3.554522752761841
    4. ' print' → logprob: -6.054522514343262
    5. 'continue' → logprob: -6.304522514343262
    6. '```' → logprob: -6.929522514343262
    7. '               ' → logprob: -7.554522514343262
    8. '   ' → logprob: -7.804522514343262
    9. '#' → logprob: -7.804522514343262
    10. 'pass' → logprob: -8.679522514343262

Token 2650: ' ' (ID: 220)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.17927080392837524
    2. '```' → logprob: -2.3042707443237305
    3. 'def' → logprob: -3.6792707443237305
    4. '#' → logprob: -4.0542707443237305
    5. 'continue' → logprob: -5.3042707443237305
    6. '``' → logprob: -5.3042707443237305
    7. 'return' → logprob: -5.6792707443237305
    8. '       ' → logprob: -6.1792707443237305
    9. '           ' → logprob: -6.3042707443237305
    10. ' print' → logprob: -7.1792707443237305

Token 2651: '100' (ID: 1353)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.8608616590499878
    2. 'the' → logprob: -1.8608616590499878
    3. 'reach' → logprob: -2.7358617782592773
    4. 'constraints' → logprob: -2.7358617782592773
    5. 'limits' → logprob: -3.1108617782592773
    6. 'print' → logprob: -3.1108617782592773
    7. 'reasonable' → logprob: -3.2358617782592773
    8. 'problem' → logprob: -3.2358617782592773
    9. 'limit' → logprob: -3.4858617782592773
    10. 'range' → logprob: -3.7358617782592773

Token 2652: ' min' (ID: 1349)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8155892491340637
    2. '       ' → logprob: -0.9405892491340637
    3. '           ' → logprob: -2.440589189529419
    4. '```' → logprob: -3.940589189529419
    5. '()' → logprob: -4.565589427947998
    6. ' print' → logprob: -4.690589427947998
    7. '(' → logprob: -4.940589427947998
    8. '``' → logprob: -5.065589427947998
    9. '()
' → logprob: -5.440589427947998
    10. '               ' → logprob: -5.815589427947998

Token 2653: ' possible' (ID: 4149)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.48257142305374146
    2. '       ' → logprob: -0.9825714230537415
    3. '   ' → logprob: -6.107571601867676
    4. '<|end|>' → logprob: -6.107571601867676
    5. '               ' → logprob: -6.357571601867676
    6. 'print' → logprob: -7.232571601867676
    7. '		' → logprob: -7.732571601867676
    8. '```' → logprob: -7.982571601867676
    9. '	' → logprob: -8.732571601867676
    10. '()' → logprob: -9.107571601867676

Token 2654: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7105978727340698
    2. '           ' → logprob: -0.7105978727340698
    3. '<|end|>' → logprob: -5.335597991943359
    4. '   ' → logprob: -5.585597991943359
    5. 'print' → logprob: -6.210597991943359
    6. 'continue' → logprob: -6.335597991943359
    7. '```' → logprob: -6.335597991943359
    8. '               ' → logprob: -6.460597991943359
    9. '		' → logprob: -8.21059799194336
    10. '``' → logprob: -8.96059799194336

Token 2655: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07362765073776245
    2. '       ' → logprob: -3.0736277103424072
    3. '```' → logprob: -4.573627471923828
    4. '   ' → logprob: -4.698627471923828
    5. 'print' → logprob: -5.323627471923828
    6. 'continue' → logprob: -8.823627471923828
    7. '               ' → logprob: -8.823627471923828
    8. '``' → logprob: -10.073627471923828
    9. '                   ' → logprob: -10.573627471923828
    10. '		' → logprob: -10.823627471923828

Token 2656: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.04895578697323799
    2. '           ' → logprob: -3.0489556789398193
    3. '       ' → logprob: -8.923955917358398
    4. '   ' → logprob: -9.173955917358398
    5. '```' → logprob: -9.298955917358398
    6. ' print' → logprob: -10.298955917358398
    7. '               ' → logprob: -12.923955917358398
    8. '``' → logprob: -13.173955917358398
    9. 'continue' → logprob: -14.048955917358398
    10. '                   ' → logprob: -15.048955917358398

Token 2657: '(-' (ID: 8087)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.12228254228830338
    2. '100' → logprob: -2.3722825050354004
    3. '(-' → logprob: -4.8722825050354
    4. '"' → logprob: -4.9972825050354
    5. 'Impossible' → logprob: -6.7472825050354
    6. '(' → logprob: -6.9972825050354
    7. 'INF' → logprob: -6.9972825050354
    8. '('' → logprob: -7.1222825050354
    9. '("' → logprob: -7.2472825050354
    10. '0' → logprob: -7.3722825050354

Token 2658: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '100' → logprob: -17.125
    3. ' ' → logprob: -17.75
    4. '   ' → logprob: -19.75
    5. '１' → logprob: -20.125
    6. '2' → logprob: -20.875
    7. '999' → logprob: -21.0
    8. '10' → logprob: -21.0
    9. '```' → logprob: -21.25
    10. '
' → logprob: -21.75

Token 2659: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.842555426876061e-06
    2. ')
' → logprob: -12.500004768371582
    3. ')}' → logprob: -15.500004768371582
    4. '))' → logprob: -16.0000057220459
    5. '`)' → logprob: -16.0000057220459
    6. '       ' → logprob: -16.0000057220459
    7. '   ' → logprob: -16.3750057220459
    8. ' )' → logprob: -16.6250057220459
    9. '())' → logprob: -16.7500057220459
    10. '})' → logprob: -17.0000057220459

Token 2660: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2661: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.5760044455528259
    2. '__' → logprob: -0.8260044455528259
    3. '___' → logprob: -9.951004028320312
    4. '____' → logprob: -11.701004028320312
    5. '_' → logprob: -11.951004028320312
    6. '_name' → logprob: -13.826004028320312
    7. ' ___' → logprob: -14.951004028320312
    8. '(__' → logprob: -15.201004028320312
    9. '_____' → logprob: -15.326004028320312
    10. ' ' → logprob: -15.451004028320312

Token 2662: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.013691749423742294
    2. '==' → logprob: -4.5136919021606445
    3. 'if' → logprob: -7.0136919021606445
    4. ' ==' → logprob: -7.5136919021606445
    5. '```' → logprob: -7.6386919021606445
    6. '=="' → logprob: -8.388691902160645
    7. '__.__' → logprob: -9.013691902160645
    8. '__.' → logprob: -9.388691902160645
    9. '__":
' → logprob: -9.763691902160645
    10. '=='' → logprob: -10.013691902160645

Token 2663: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0029708107467740774
    2. '==' → logprob: -6.5029706954956055
    3. '```' → logprob: -7.6279706954956055
    4. '=='' → logprob: -8.627970695495605
    5. '__':
' → logprob: -9.002970695495605
    6. '__":
' → logprob: -9.127970695495605
    7. '__.__' → logprob: -9.127970695495605
    8. '=="' → logprob: -9.127970695495605
    9. '__('' → logprob: -9.877970695495605
    10. ' ==' → logprob: -10.127970695495605

Token 2664: '=="' (ID: 24027)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.4828781187534332
    2. '==' → logprob: -1.3578780889511108
    3. '=="' → logprob: -2.6078782081604004
    4. '=='' → logprob: -3.7328782081604004
    5. ' ==' → logprob: -3.9828782081604004
    6. '```' → logprob: -4.9828782081604
    7. '__":
' → logprob: -7.1078782081604
    8. '__':
' → logprob: -8.357877731323242
    9. '__.__' → logprob: -8.607877731323242
    10. '==
' → logprob: -8.857877731323242

Token 2665: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.4984353184700012
    2. ''' → logprob: -1.2484352588653564
    3. '"' → logprob: -2.2484352588653564
    4. 'main' → logprob: -14.248435020446777
    5. ' "__' → logprob: -14.498435020446777
    6. '___' → logprob: -15.248435020446777
    7. ' __' → logprob: -15.498435020446777
    8. ' '__' → logprob: -15.748435020446777
    9. '```' → logprob: -17.623435974121094
    10. '____' → logprob: -17.623435974121094

Token 2666: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -9.729906196298543e-06
    2. 'name' → logprob: -11.750009536743164
    3. '"' → logprob: -13.625009536743164
    4. '__' → logprob: -14.750009536743164
    5. ''' → logprob: -16.875009536743164
    6. ' main' → logprob: -17.250009536743164
    7. '_main' → logprob: -18.125009536743164
    8. '"name' → logprob: -20.000009536743164
    9. '(main' → logprob: -20.375009536743164
    10. '	main' → logprob: -21.125009536743164

Token 2667: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.06106757000088692
    2. '__' → logprob: -2.936067581176758
    3. ':
' → logprob: -5.686067581176758
    4. '__':
' → logprob: -6.186067581176758
    5. '():
' → logprob: -7.686067581176758
    6. ':' → logprob: -9.561067581176758
    7. '```' → logprob: -10.186067581176758
    8. '":
' → logprob: -10.936067581176758
    9. '.__' → logprob: -10.936067581176758
    10. '__
' → logprob: -11.061067581176758

Token 2668: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002912454307079315
    2. 'solve' → logprob: -6.002912521362305
    3. '```' → logprob: -7.877912521362305
    4. ' solve' → logprob: -10.377912521362305
    5. '    
' → logprob: -11.752912521362305
    6. '``' → logprob: -12.252912521362305
    7. '.solve' → logprob: -12.502912521362305
    8. '	s' → logprob: -12.877912521362305
    9. '   ' → logprob: -13.127912521362305
    10. ' ' → logprob: -13.877912521362305

Token 2669: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' (adapté à ' solve') → logprob: -2.696889623621246e-06
    2. '   ' → logprob: -13.12500286102295
    3. ' solve' → logprob: -14.37500286102295
    4. 'main' → logprob: -17.000001907348633
    5. '.solve' → logprob: -17.375001907348633
    6. '```' → logprob: -19.875001907348633
    7. 'import' → logprob: -20.625001907348633
    8. 'resolve' → logprob: -21.500001907348633
    9. 'save' → logprob: -21.500001907348633
    10. 'simulate' → logprob: -21.750001907348633

Token 2670: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0007382771000266075
    2. '()
' → logprob: -7.375738143920898
    3. '()\' → logprob: -10.125738143920898
    4. '();' → logprob: -10.500738143920898
    5. '()<' → logprob: -11.625738143920898
    6. '():' → logprob: -11.875738143920898
    7. '(' → logprob: -12.125738143920898
    8. '<|end|>' → logprob: -12.250738143920898
    9. '()">' → logprob: -12.750738143920898
    10. '()`' → logprob: -13.125738143920898


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 2668
Tokens correctement prédits (1ère position, stricte): 925
Tokens correctement prédits (1ère position, avec adaptation): 1021
Tokens correctement prédits (top 10): 1949
Précision stricte (1ère position): 34.67%
Précision adaptée (1ère position): 38.27%
Précision (top 10): 73.05%
================================================================================
