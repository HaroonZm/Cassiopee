================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:22
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N=int(input())
cnt=0
while N>1:
    N=(N+2)//3
    cnt+=1
print(cnt)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: '=int' (ID: 37431)
  → Token d'amorce (pas de prédiction)

Token 2: '(input' (ID: 10054)
  → Token d'amorce (pas de prédiction)

Token 3: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4692799150943756
    2. ')' → logprob: -1.0942798852920532
    3. '()' → logprob: -3.7192800045013428
    4. '())' → logprob: -4.469279766082764
    5. '(
' → logprob: -7.344279766082764
    6. '```' → logprob: -7.594279766082764
    7. '')' → logprob: -7.844279766082764
    8. '")' → logprob: -7.844279766082764
    9. '`)' → logprob: -7.969279766082764
    10. '<|end|>' → logprob: -8.469280242919922

Token 4: 'cnt' (ID: 33160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.086573839187622
    2. '*' → logprob: -1.336573839187622
    3. ')' → logprob: -2.461573839187622
    4. '#' → logprob: -2.586573839187622
    5. 's' → logprob: -3.211573839187622
    6. 'if' → logprob: -3.461573839187622
    7. '\n' → logprob: -3.461573839187622
    8. 'i' → logprob: -3.961573839187622
    9. '+' → logprob: -3.961573839187622
    10. '\' → logprob: -4.211573600769043

Token 5: '=' (ID: 28)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08359286934137344
    2. '+' → logprob: -2.7085928916931152
    3. '_' → logprob: -4.833592891693115
    4. '=' → logprob: -5.583592891693115
    5. '+=' → logprob: -7.708592891693115
    6. '\[' → logprob: -7.833592891693115
    7. '(' → logprob: -8.208592414855957
    8. '++' → logprob: -8.958592414855957
    9. ']' → logprob: -9.208592414855957
    10. 's' → logprob: -9.583592414855957

Token 6: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005637573776766658
    2. ' ' → logprob: -7.500563621520996
    3. '1' → logprob: -11.625563621520996
    4. ''' → logprob: -15.125563621520996
    5. '[' → logprob: -15.125563621520996
    6. 'int' → logprob: -15.500563621520996
    7. 'N' → logprob: -15.750563621520996
    8. '"' → logprob: -15.875563621520996
    9. '`' → logprob: -16.000564575195312
    10. '{}' → logprob: -16.125564575195312

Token 7: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6800493597984314
    2. '
' → logprob: -1.5550494194030762
    3. '\n' → logprob: -1.5550494194030762
    4. ' for' → logprob: -3.555049419403076
    5. '\' → logprob: -4.180049419403076
    6. '' → logprob: -4.305049419403076
    7. ' 
' → logprob: -4.930049419403076
    8. '```' → logprob: -5.930049419403076
    9. '  
' → logprob: -6.680049419403076
    10. '<|end|>' → logprob: -7.680049419403076

Token 8: 'while' (ID: 7032)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06739101558923721
    2. '
' → logprob: -2.8173909187316895
    3. ' for' → logprob: -6.3173909187316895
    4. '\n' → logprob: -6.8173909187316895
    5. '' → logprob: -6.9423909187316895
    6. '```' → logprob: -7.0673909187316895
    7. ' 
' → logprob: -7.9423909187316895
    8. '  
' → logprob: -9.442391395568848
    9. '\' → logprob: -9.567391395568848
    10. '
' → logprob: -10.067391395568848

Token 9: ' N' (ID: 478)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3489537239074707
    2. ' N' → logprob: -1.3489537239074707
    3. ' cnt' → logprob: -3.4739537239074707
    4. '  ' → logprob: -6.348953723907471
    5. 'cnt' → logprob: -6.598953723907471
    6. ' ' → logprob: -8.473953247070312
    7. ' not' → logprob: -8.473953247070312
    8. 'N' → logprob: -8.723953247070312
    9. ' nt' → logprob: -9.348953247070312
    10. ' (' → logprob: -9.598953247070312

Token 10: '>' (ID: 29)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.3484727144241333
    2. '>' → logprob: -1.2234727144241333
    3. ' ' → logprob: -11.848472595214844
    4. ' !=' → logprob: -12.473472595214844
    5. ' >=' → logprob: -12.598472595214844
    6. '>=' → logprob: -12.973472595214844
    7. '">' → logprob: -13.098472595214844
    8. '!=' → logprob: -13.098472595214844
    9. ' >
' → logprob: -13.723472595214844
    10. '<' → logprob: -13.973472595214844

Token 11: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03373248875141144
    2. ' ' → logprob: -3.4087324142456055
    3. '1' → logprob: -9.408732414245605
    4. '=' → logprob: -13.408732414245605
    5. '>' → logprob: -13.658732414245605
    6. '9' → logprob: -14.283732414245605
    7. '10' → logprob: -15.158732414245605
    8. '2' → logprob: -15.471232414245605
    9. '5' → logprob: -15.596232414245605
    10. '100' → logprob: -16.346233367919922

Token 12: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0013699998380616307
    2. ':
' → logprob: -7.001369953155518
    3. ' :' → logprob: -7.751369953155518
    4. ' :
' → logprob: -11.501370429992676
    5. '):' → logprob: -12.751370429992676
    6. '   ' → logprob: -12.751370429992676
    7. ':**' → logprob: -12.751370429992676
    8. '```' → logprob: -13.501370429992676
    9. '>:' → logprob: -13.751370429992676
    10. ' and' → logprob: -13.876370429992676

Token 13: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3455059230327606
    2. '    ' → logprob: -2.220505952835083
    3. '```' → logprob: -2.220505952835083
    4. ' ' → logprob: -4.095505714416504
    5. '     
' → logprob: -4.595505714416504
    6. ' 
' → logprob: -4.720505714416504
    7. ' ```' → logprob: -4.845505714416504
    8. '    
' → logprob: -5.345505714416504
    9. '`' → logprob: -5.345505714416504
    10. '``' → logprob: -5.845505714416504

Token 14: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.5904035568237305
    2. ' ' → logprob: -1.7154035568237305
    3. '    ' → logprob: -2.2154035568237305
    4. ' ```' → logprob: -3.0904035568237305
    5. '```' → logprob: -3.4654035568237305
    6. ' `' → logprob: -3.8404035568237305
    7. '   ' → logprob: -4.2154035568237305
    8. ' 
' → logprob: -4.3404035568237305
    9. 'N' (adapté à ' N') → logprob: -4.7154035568237305
    10. '     
' → logprob: -5.0904035568237305

Token 15: '=(' (ID: 9893)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.39012426137924194
    2. '//=' → logprob: -1.1401243209838867
    3. '//' → logprob: -6.640124320983887
    4. ' ' → logprob: -7.390124320983887
    5. '=' → logprob: -7.890124320983887
    6. ' >>=' → logprob: -8.015124320983887
    7. '```' → logprob: -8.265124320983887
    8. ' =' → logprob: -8.640124320983887
    9. '    ' → logprob: -10.390124320983887
    10. ' -=' → logprob: -10.390124320983887

Token 16: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.012822527438402176
    2. ' N' → logprob: -4.38782262802124
    3. ')' → logprob: -9.012822151184082
    4. '2' → logprob: -9.512822151184082
    5. 'int' → logprob: -10.387822151184082
    6. ' ' → logprob: -11.012822151184082
    7. '(' → logprob: -11.012822151184082
    8. ' (' → logprob: -11.387822151184082
    9. '3' → logprob: -11.762822151184082
    10. '1' → logprob: -12.262822151184082

Token 17: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2973273992538452
    2. '-' → logprob: -1.5473273992538452
    3. '//' → logprob: -3.5473275184631348
    4. '%' → logprob: -4.672327518463135
    5. ')//' → logprob: -5.422327518463135
    6. ' +' → logprob: -7.047327518463135
    7. ' //' → logprob: -7.672327518463135
    8. ' -' → logprob: -8.797327041625977
    9. ')' → logprob: -8.922327041625977
    10. ' )' → logprob: -10.422327041625977

Token 18: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002465582510922104
    2. ' ' → logprob: -8.50024700164795
    3. 'N' → logprob: -10.75024700164795
    4. '2' → logprob: -11.50024700164795
    5. '(' → logprob: -12.62524700164795
    6. 'cnt' → logprob: -12.62524700164795
    7. '(N' → logprob: -13.50024700164795
    8. '-' → logprob: -14.25024700164795
    9. '3' → logprob: -14.68774700164795
    10. ' N' → logprob: -14.75024700164795

Token 19: ')//' (ID: 60375)
  Prédit: ')//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -0.014597570523619652
    2. ')' → logprob: -4.639597415924072
    3. ' )' → logprob: -5.389597415924072
    4. ')>>' → logprob: -8.76459789276123
    5. '-' → logprob: -9.76459789276123
    6. '3' → logprob: -11.13959789276123
    7. '//' → logprob: -11.26459789276123
    8. ')/' → logprob: -11.76459789276123
    9. '1' → logprob: -12.76459789276123
    10. '2' → logprob: -12.88959789276123

Token 20: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.000940642727073282
    2. '2' → logprob: -7.000940799713135
    3. ' ' → logprob: -10.500940322875977
    4. '4' → logprob: -14.000940322875977
    5. '5' → logprob: -15.000940322875977
    6. '6' → logprob: -16.000940322875977
    7. '   ' → logprob: -16.000940322875977
    8. '```' → logprob: -17.000940322875977
    9. '7' → logprob: -17.063440322875977
    10. '  ' → logprob: -17.125940322875977

Token 21: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4122408926486969
    2. '<|end|>' → logprob: -2.037240982055664
    3. '    ' → logprob: -2.287240982055664
    4. ' ' → logprob: -3.162240982055664
    5. '+' → logprob: -3.787240982055664
    6. '    
' → logprob: -4.412240982055664
    7. '  ' → logprob: -4.912240982055664
    8. '```' → logprob: -5.412240982055664
    9. '
' → logprob: -5.537240982055664
    10. ' 
' → logprob: -5.662240982055664

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019770100712776184
    2. '    
' → logprob: -5.26977014541626
    3. 'cnt' → logprob: -5.51977014541626
    4. '
' → logprob: -5.76977014541626
    5. '```' → logprob: -6.01977014541626
    6. '    ' → logprob: -6.39477014541626
    7. ' 
' → logprob: -6.76977014541626
    8. '\n' → logprob: -7.89477014541626
    9. '\' → logprob: -8.269769668579102
    10. '   
' → logprob: -8.519769668579102

Token 23: ' cnt' (ID: 27340)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.600599467754364
    2. 'cnt' (adapté à ' cnt') → logprob: -0.850599467754364
    3. ' cnt' → logprob: -3.850599527359009
    4. '    ' → logprob: -7.22559928894043
    5. '```' → logprob: -7.22559928894043
    6. '	cnt' → logprob: -7.60059928894043
    7. '       ' → logprob: -8.10059928894043
    8. '    
' → logprob: -8.10059928894043
    9. ' ' → logprob: -8.47559928894043
    10. '  ' → logprob: -9.72559928894043

Token 24: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.030315350741147995
    2. ' +=' → logprob: -3.655315399169922
    3. '+' → logprob: -5.530315399169922
    4. '+='' → logprob: -11.280315399169922
    5. '+="' → logprob: -11.655315399169922
    6. '=' → logprob: -11.655315399169922
    7. ']+=' → logprob: -12.655315399169922
    8. '+++' → logprob: -12.780315399169922
    9. '+=(' → logprob: -12.780315399169922
    10. '++' → logprob: -13.280315399169922

Token 25: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.639096970204264e-05
    2. ' ' → logprob: -9.250096321105957
    3. '   ' → logprob: -16.500097274780273
    4. '2' → logprob: -16.625097274780273
    5. '  ' → logprob: -17.750097274780273
    6. '3' → logprob: -18.000097274780273
    7. '+' → logprob: -18.500097274780273
    8. '```' → logprob: -18.687597274780273
    9. '１' → logprob: -19.000097274780273
    10. 'N' → logprob: -19.062597274780273

Token 26: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03349653631448746
    2. ')' → logprob: -4.158496379852295
    3. '<|end|>' → logprob: -5.408496379852295
    4. '\n' → logprob: -5.658496379852295
    5. '
' → logprob: -5.658496379852295
    6. '#' → logprob: -6.283496379852295
    7. ' print' → logprob: -6.908496379852295
    8. '  
' → logprob: -7.658496379852295
    9. '\' → logprob: -7.658496379852295
    10. ' ' → logprob: -7.908496379852295

Token 27: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1406490057706833
    2. '\n' → logprob: -3.2656490802764893
    3. '<|end|>' → logprob: -3.3906490802764893
    4. '
' → logprob: -3.5156490802764893
    5. '\' → logprob: -5.01564884185791
    6. '```' → logprob: -5.39064884185791
    7. '   ' → logprob: -5.51564884185791
    8. '#' → logprob: -5.64064884185791
    9. ' print' → logprob: -5.89064884185791
    10. ')' → logprob: -5.89064884185791

Token 28: '(cnt' (ID: 102125)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0036575528793036938
    2. '(cnt' → logprob: -5.628657341003418
    3. '('' → logprob: -10.503657341003418
    4. '("("' → logprob: -11.253657341003418
    5. '()' → logprob: -11.628657341003418
    6. '(`' → logprob: -13.128657341003418
    7. '("' → logprob: -13.503657341003418
    8. '(count' → logprob: -14.003657341003418
    9. '((' → logprob: -14.128657341003418
    10. '(

' → logprob: -14.378657341003418

Token 29: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. '))' → logprob: -17.0
    3. ' )' → logprob: -17.0
    4. ')`' → logprob: -17.875
    5. '')' → logprob: -18.625
    6. ')
' → logprob: -19.375
    7. '`)' → logprob: -19.375
    8. ')}' → logprob: -20.0
    9. '）' → logprob: -20.0
    10. '}' → logprob: -20.25


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 27
Tokens correctement prédits (1ère position, stricte): 12
Tokens correctement prédits (1ère position, avec adaptation): 12
Tokens correctement prédits (top 10): 23
Précision stricte (1ère position): 44.44%
Précision adaptée (1ère position): 44.44%
Précision (top 10): 85.19%
================================================================================
