================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:01:05
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
input=sys.stdin.readline

m=int(input())
for _ in range(m):
    initial_amount=int(input())
    years=int(input())
    n=int(input())
    max_final=0
    for __ in range(n):
        t,r,c=input().split()
        t=int(t)
        r=float(r)
        c=int(c)
        if t==1:
            balance=initial_amount
            for _ in range(years):
                interest=round(balance*r)
                balance=balance+interest-c
            final=balance
        else:
            balance=initial_amount
            cum_interest=0
            for _ in range(years):
                interest=round(balance*r)
                cum_interest+=interest
                balance=balance - c
            final=balance+cum_interest
        if final>max_final:
            max_final=final
    print(max_final)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.21183328330516815
    2. '.' → logprob: -2.3368332386016846
    3. '<|end|>' → logprob: -2.8368332386016846
    4. '\' → logprob: -4.711833477020264
    5. 'newline' → logprob: -5.086833477020264
    6. 'import' → logprob: -5.086833477020264
    7. '
' → logprob: -5.711833477020264
    8. '' → logprob: -5.836833477020264
    9. '<|end|>' → logprob: -5.836833477020264
    10. '\r' → logprob: -6.336833477020264

Token 4: '=sys' (ID: 149200)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.048905275762081146
    2. '.' → logprob: -3.048905372619629
    3. ' (' → logprob: -9.298905372619629
    4. '(
' → logprob: -9.423905372619629
    5. ')' → logprob: -10.173905372619629
    6. '()' → logprob: -11.173905372619629
    7. '[' → logprob: -11.298905372619629
    8. ' ' → logprob: -11.423905372619629
    9. ''s' → logprob: -11.548905372619629
    10. '```' → logprob: -11.923905372619629

Token 5: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -7.386147626675665e-05
    2. '[' → logprob: -10.375073432922363
    3. ' .' → logprob: -11.250073432922363
    4. '.readline' → logprob: -11.375073432922363
    5. '.
' → logprob: -11.875073432922363
    6. '.

' → logprob: -13.375073432922363
    7. '```' → logprob: -13.750073432922363
    8. ''.' → logprob: -14.125073432922363
    9. '<|end|>' → logprob: -14.125073432922363
    10. '.get' → logprob: -14.125073432922363

Token 6: '.readline' (ID: 74673)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0904015451669693
    2. '.readline' → logprob: -2.4654016494750977
    3. '.read' → logprob: -6.590401649475098
    4. '.Read' → logprob: -10.840401649475098
    5. '```' → logprob: -10.840401649475098
    6. '.​' → logprob: -11.340401649475098
    7. '.
' → logprob: -12.340401649475098
    8. '[' → logprob: -12.340401649475098
    9. '.readlines' → logprob: -12.465401649475098
    10. '.get' → logprob: -12.840401649475098

Token 7: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5976415872573853
    2. '(' → logprob: -0.8476415872573853
    3. '(
' → logprob: -4.222641468048096
    4. '()
' → logprob: -5.597641468048096
    5. '().' → logprob: -6.847641468048096
    6. '(

' → logprob: -6.972641468048096
    7. '
' → logprob: -8.097641944885254
    8. ')' → logprob: -8.472641944885254
    9. '()

' → logprob: -8.847641944885254
    10. ' ()' → logprob: -9.347641944885254

Token 8: 'm' (ID: 76)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47553005814552307
    2. '()' → logprob: -0.9755300283432007
    3. '().' → logprob: -7.10053014755249
    4. '()
' → logprob: -8.475529670715332
    5. '(
' → logprob: -8.475529670715332
    6. ')' → logprob: -10.600529670715332
    7. '#' → logprob: -10.725529670715332
    8. '()

' → logprob: -10.975529670715332
    9. 'a' → logprob: -11.100529670715332
    10. '()\' → logprob: -11.100529670715332

Token 9: '=int' (ID: 37431)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.36886999011039734
    2. '()' → logprob: -1.7438700199127197
    3. '.' → logprob: -2.8688700199127197
    4. 'ath' → logprob: -3.8688700199127197
    5. ' =' → logprob: -3.9938700199127197
    6. '().' → logprob: -4.743869781494141
    7. '(' → logprob: -5.243869781494141
    8. 'e' → logprob: -5.493869781494141
    9. '=' → logprob: -5.493869781494141
    10. 's' → logprob: -5.618869781494141

Token 10: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.20603168499656e-05
    2. '(m' → logprob: -11.125061988830566
    3. ' (' → logprob: -11.500061988830566
    4. '(
' → logprob: -11.625061988830566
    5. '(input' → logprob: -12.000061988830566
    6. '("("' → logprob: -12.500061988830566
    7. '('' → logprob: -12.750061988830566
    8. '```' → logprob: -13.125061988830566
    9. '(sys' → logprob: -13.375061988830566
    10. '(`' → logprob: -13.375061988830566

Token 11: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.10189715027809143
    2. '()' → logprob: -2.3518972396850586
    3. ')' → logprob: -6.476897239685059
    4. ' ())' → logprob: -9.601897239685059
    5. '(' → logprob: -9.976897239685059
    6. '().' → logprob: -10.726897239685059
    7. '())
' → logprob: -12.351897239685059
    8. '()))' → logprob: -12.976897239685059
    9. '();)' → logprob: -13.101897239685059
    10. '()
' → logprob: -13.851897239685059

Token 12: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7966703176498413
    2. 'n' → logprob: -1.7966703176498413
    3. 'data' → logprob: -2.046670436859131
    4. ')' → logprob: -3.046670436859131
    5. 'a' → logprob: -3.296670436859131
    6. 's' → logprob: -3.546670436859131
    7. '\n' → logprob: -3.921670436859131
    8. '\' → logprob: -3.921670436859131
    9. 'd' → logprob: -4.171670436859131
    10. '[' → logprob: -4.671670436859131

Token 13: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.012074200436472893
    2. ' i' → logprob: -4.512073993682861
    3. '  ' → logprob: -7.637073993682861
    4. ' ' → logprob: -8.38707447052002
    5. ' ‌' → logprob: -9.01207447052002
    6. ' space' → logprob: -9.88707447052002
    7. ' ​' → logprob: -10.38707447052002
    8. ' range' → logprob: -10.88707447052002
    9. ' ▁' → logprob: -11.13707447052002
    10. ' m' → logprob: -11.13707447052002

Token 14: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003851143876090646
    2. 'in' → logprob: -5.628850936889648
    3. ' ' → logprob: -8.378850936889648
    4. 'n' → logprob: -11.878850936889648
    5. 'range' → logprob: -11.878850936889648
    6. '	in' → logprob: -13.378850936889648
    7. ' _' → logprob: -13.878850936889648
    8. 'import' → logprob: -14.378850936889648
    9. ' n' → logprob: -14.503850936889648
    10. ',' → logprob: -14.503850936889648

Token 15: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16022777557373047
    2. ' range' → logprob: -1.9102277755737305
    3. '	range' → logprob: -13.78522777557373
    4. '_range' → logprob: -14.28522777557373
    5. '(range' → logprob: -14.41022777557373
    6. 'm' → logprob: -14.41022777557373
    7. 'rang' → logprob: -15.28522777557373
    8. '_' → logprob: -15.91022777557373
    9. ' xrange' → logprob: -16.035228729248047
    10. 'input' → logprob: -16.285228729248047

Token 16: '(m' (ID: 2145)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04692809283733368
    2. ' (' → logprob: -3.1719281673431396
    3. '(m' → logprob: -5.5469279289245605
    4. '(n' → logprob: -11.921928405761719
    5. '(
' → logprob: -12.421928405761719
    6. '(range' → logprob: -12.546928405761719
    7. '(int' → logprob: -13.421928405761719
    8. ' ' → logprob: -13.546928405761719
    9. '(len' → logprob: -14.046928405761719
    10. ' m' → logprob: -14.296928405761719

Token 17: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.021083638072013855
    2. ')' → logprob: -3.8960835933685303
    3. ':' → logprob: -7.896083831787109
    4. ' ):' → logprob: -8.89608383178711
    5. '):
' → logprob: -11.14608383178711
    6. ' )' → logprob: -11.52108383178711
    7. ':)' → logprob: -13.77108383178711
    8. '+' → logprob: -13.89608383178711
    9. '():' → logprob: -13.89608383178711
    10. ' ' → logprob: -14.02108383178711

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013940182514488697
    2. ' s' → logprob: -6.138940334320068
    3. 'a' → logprob: -6.263940334320068
    4. 'data' → logprob: -6.638940334320068
    5. ' data' → logprob: -7.013940334320068
    6. ' ' → logprob: -7.263940334320068
    7. 'n' → logprob: -7.263940334320068
    8. '    ' → logprob: -7.388940334320068
    9. ' line' → logprob: -7.388940334320068
    10. ' word' → logprob: -7.513940334320068

Token 19: ' initial' (ID: 4871)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7031770944595337
    2. 'a' → logprob: -2.078176975250244
    3. 'data' → logprob: -2.328176975250244
    4. 'x' → logprob: -2.453176975250244
    5. 'num' → logprob: -2.953176975250244
    6. 's' → logprob: -2.953176975250244
    7. ' n' → logprob: -4.078176975250244
    8. '   ' → logprob: -4.078176975250244
    9. ' a' → logprob: -5.203176975250244
    10. 'number' → logprob: -5.203176975250244

Token 20: '_amount' (ID: 29145)
  Prédit: '_string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_string' → logprob: -1.4503250122070312
    2. '=' → logprob: -2.0753250122070312
    3. '_' → logprob: -2.3253250122070312
    4. '_stack' → logprob: -2.4503250122070312
    5. '_position' → logprob: -2.7003250122070312
    6. '_state' → logprob: -2.7003250122070312
    7. '_pos' → logprob: -3.0753250122070312
    8. '_positions' → logprob: -3.2003250122070312
    9. '_value' → logprob: -3.4503250122070312
    10. ',' → logprob: -3.7003250122070312

Token 21: '=int' (ID: 37431)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5881800055503845
    2. ',' → logprob: -1.9631800651550293
    3. ')' → logprob: -2.4631800651550293
    4. '=' → logprob: -2.8381800651550293
    5. '_' → logprob: -3.2131800651550293
    6. '<|end|>' → logprob: -3.5881800651550293
    7. '    ' → logprob: -4.213180065155029
    8. '.' → logprob: -4.213180065155029
    9. '   ' → logprob: -4.213180065155029
    10. ' ' → logprob: -4.338180065155029

Token 22: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3135395050048828
    2. '(input' → logprob: -1.3135395050048828
    3. ' (' → logprob: -9.438539505004883
    4. '()' → logprob: -9.813539505004883
    5. 'input' → logprob: -9.938539505004883
    6. '(
' → logprob: -10.563539505004883
    7. ')' → logprob: -11.813539505004883
    8. ''' → logprob: -11.938539505004883
    9. '(open' → logprob: -11.938539505004883
    10. '('' → logprob: -12.063539505004883

Token 23: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.10137605667114258
    2. '()' → logprob: -2.3513760566711426
    3. ')' → logprob: -6.851376056671143
    4. '())
' → logprob: -10.101375579833984
    5. '(' → logprob: -10.851375579833984
    6. '()
' → logprob: -10.851375579833984
    7. ' ())' → logprob: -11.101375579833984
    8. '()))' → logprob: -12.476375579833984
    9. '();)' → logprob: -12.851375579833984
    10. '())

' → logprob: -13.101375579833984

Token 24: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4140078127384186
    2. 'balance' → logprob: -2.9140079021453857
    3. ' n' → logprob: -3.2890079021453857
    4. ' balance' → logprob: -3.4140079021453857
    5. ' amount' → logprob: -3.6640079021453857
    6. 'n' → logprob: -3.7890079021453857
    7. ' current' → logprob: -4.164007663726807
    8. ' for' → logprob: -4.664007663726807
    9. ' total' → logprob: -4.664007663726807
    10. 'total' → logprob: -4.789007663726807

Token 25: ' years' (ID: 2101)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -1.4924814701080322
    2. 'balance' → logprob: -1.7424814701080322
    3. 'current' → logprob: -2.1174814701080322
    4. 'amount' → logprob: -2.1174814701080322
    5. 'change' → logprob: -2.6174814701080322
    6. 'coin' → logprob: -3.3674814701080322
    7. 'count' → logprob: -3.7424814701080322
    8. 'n' → logprob: -4.117481231689453
    9. 'money' → logprob: -4.117481231689453
    10. 'dp' → logprob: -4.367481231689453

Token 26: '=int' (ID: 37431)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6054582595825195
    2. '=' → logprob: -0.8554582595825195
    3. ' +=' → logprob: -3.8554582595825195
    4. '+=' → logprob: -6.2304582595825195
    5. '<|end|>' → logprob: -6.3554582595825195
    6. '   ' → logprob: -6.7304582595825195
    7. ')' → logprob: -7.2304582595825195
    8. '_' → logprob: -7.7304582595825195
    9. '+' → logprob: -7.8554582595825195
    10. '    ' → logprob: -7.9804582595825195

Token 27: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0003418991982471198
    2. '(' → logprob: -8.12534236907959
    3. ' (' → logprob: -10.12534236907959
    4. 'input' → logprob: -12.75034236907959
    5. '[input' → logprob: -13.50034236907959
    6. '=input' → logprob: -14.25034236907959
    7. ')' → logprob: -15.25034236907959
    8. '<input' → logprob: -15.87534236907959
    9. '(
' → logprob: -16.250341415405273
    10. '(int' → logprob: -16.625341415405273

Token 28: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.6437345743179321
    2. '()' → logprob: -1.2687345743179321
    3. ')' → logprob: -1.6437345743179321
    4. '())
' → logprob: -9.0187349319458
    5. '()
' → logprob: -10.2687349319458
    6. ' ())' → logprob: -10.6437349319458
    7. ')
' → logprob: -11.1437349319458
    8. ' )' → logprob: -11.6437349319458
    9. '(' → logprob: -12.1437349319458
    10. '();)' → logprob: -12.6437349319458

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43522489070892334
    2. 'rate' → logprob: -1.9352248907089233
    3. ' for' → logprob: -2.060225009918213
    4. ' rate' → logprob: -3.935225009918213
    5. 'for' → logprob: -4.310225009918213
    6. 'balance' → logprob: -4.560225009918213
    7. '    
' → logprob: -5.560225009918213
    8. 's' → logprob: -5.685225009918213
    9. 'investment' → logprob: -5.935225009918213
    10. 'interest' → logprob: -6.310225009918213

Token 30: ' n' (ID: 297)
  Prédit: 'rate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rate' → logprob: -0.11285712569952011
    2. 'balance' → logprob: -3.7378571033477783
    3. 'r' → logprob: -3.8628571033477783
    4. '   ' → logprob: -4.487857341766357
    5. 'investment' → logprob: -5.112857341766357
    6. ' rate' → logprob: -5.362857341766357
    7. 'current' → logprob: -5.487857341766357
    8. 'n' (adapté à ' n') → logprob: -5.737857341766357
    9. 'interest' → logprob: -5.737857341766357
    10. 'for' → logprob: -5.862857341766357

Token 31: '=int' (ID: 37431)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4862723648548126
    2. '=int' → logprob: -2.3612723350524902
    3. 'ext' → logprob: -2.6112723350524902
    4. ' =' → logprob: -2.6112723350524902
    5. '_' → logprob: -3.1112723350524902
    6. '_rate' → logprob: -3.8612723350524902
    7. 'um' → logprob: -4.23627233505249
    8. 'et' → logprob: -4.36127233505249
    9. '0' → logprob: -4.36127233505249
    10. '_=' → logprob: -5.73627233505249

Token 32: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00038169484469108284
    2. '(' → logprob: -8.125381469726562
    3. ' (' → logprob: -9.500381469726562
    4. 'input' → logprob: -11.875381469726562
    5. '()' → logprob: -13.625381469726562
    6. '(int' → logprob: -14.000381469726562
    7. '=input' → logprob: -14.000381469726562
    8. '[input' → logprob: -15.500381469726562
    9. '(
' → logprob: -16.250381469726562
    10. '(initial' → logprob: -16.375381469726562

Token 33: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.275273859500885
    2. '()' → logprob: -1.6502737998962402
    3. '())' → logprob: -3.0252737998962402
    4. '()
' → logprob: -10.525274276733398
    5. ')
' → logprob: -11.025274276733398
    6. '(' → logprob: -11.775274276733398
    7. '))' → logprob: -12.025274276733398
    8. '`)' → logprob: -12.025274276733398
    9. ' )' → logprob: -12.150274276733398
    10. '())
' → logprob: -12.775274276733398

Token 34: '   ' (ID: 271)
  Prédit: 'rate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rate' → logprob: -0.5061274170875549
    2. '   ' → logprob: -2.25612735748291
    3. 'rates' → logprob: -3.13112735748291
    4. 'for' → logprob: -3.13112735748291
    5. 'balance' → logprob: -3.25612735748291
    6. ' for' → logprob: -3.63112735748291
    7. 'total' → logprob: -3.75612735748291
    8. 's' → logprob: -3.88112735748291
    9. ' rate' → logprob: -4.75612735748291
    10. 'investment' → logprob: -4.75612735748291

Token 35: ' max' (ID: 2999)
  Prédit: 'rate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rate' → logprob: -1.0788414478302002
    2. 'dp' → logprob: -1.2038414478302002
    3. 'rates' → logprob: -1.4538414478302002
    4. 'for' → logprob: -3.8288414478302
    5. 'result' → logprob: -4.578841209411621
    6. 'balance' → logprob: -4.703841209411621
    7. '   ' → logprob: -4.703841209411621
    8. 'investment' → logprob: -4.703841209411621
    9. 'total' → logprob: -4.953841209411621
    10. 'data' → logprob: -5.203841209411621

Token 36: '_final' (ID: 46468)
  Prédit: '_profit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_profit' → logprob: -0.846076250076294
    2. '_amount' → logprob: -1.221076250076294
    3. '_' → logprob: -2.221076250076294
    4. '_rate' → logprob: -2.596076250076294
    5. '_value' → logprob: -3.096076250076294
    6. '_in' → logprob: -4.846076011657715
    7. '_val' → logprob: -4.971076011657715
    8. '_money' → logprob: -5.221076011657715
    9. '_return' → logprob: -5.221076011657715
    10. '_interest' → logprob: -5.471076011657715

Token 37: '=' (ID: 28)
  Prédit: '_amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_amount' → logprob: -0.12855762243270874
    2. '_' → logprob: -2.3785576820373535
    3. '_value' → logprob: -3.6285576820373535
    4. '_profit' → logprob: -8.128557205200195
    5. '_amt' → logprob: -8.503557205200195
    6. '_money' → logprob: -8.753557205200195
    7. '=' → logprob: -9.253557205200195
    8. '_final' → logprob: -9.253557205200195
    9. '_income' → logprob: -9.378557205200195
    10. '_balance' → logprob: -9.628557205200195

Token 38: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.021848240867257118
    2. '-' → logprob: -4.521848201751709
    3. 'initial' → logprob: -4.896848201751709
    4. ' ' → logprob: -5.896848201751709
    5. 'float' → logprob: -8.646848678588867
    6. ' -' → logprob: -8.646848678588867
    7. ' initial' → logprob: -9.021848678588867
    8. 'max' → logprob: -11.146848678588867
    9. '[' → logprob: -11.896848678588867
    10. '(initial' → logprob: -11.896848678588867

Token 39: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22400589287281036
    2. '<|end|>' → logprob: -2.224005937576294
    3. '\n' → logprob: -2.724005937576294
    4. ' for' → logprob: -4.849005699157715
    5. ' 
' → logprob: -5.099005699157715
    6. 'for' → logprob: -5.474005699157715
    7. '    
' → logprob: -6.474005699157715
    8. '<|end|>' → logprob: -6.724005699157715
    9. '' → logprob: -6.849005699157715
    10. '\' → logprob: -6.849005699157715

Token 40: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6131098866462708
    2. '\n' → logprob: -1.613109827041626
    3. '<|end|>' → logprob: -1.863109827041626
    4. ' for' → logprob: -3.363109827041626
    5. 'for' → logprob: -3.613109827041626
    6. ' 
' → logprob: -4.238110065460205
    7. '   ' → logprob: -4.613110065460205
    8. '    
' → logprob: -5.363110065460205
    9. '\' → logprob: -5.988110065460205
    10. 'n' → logprob: -6.113110065460205

Token 41: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.27402395009994507
    2. ' for' → logprob: -1.5240240097045898
    3. '   ' → logprob: -4.52402400970459
    4. '\n' → logprob: -4.77402400970459
    5. ' 
' → logprob: -7.77402400970459
    6. '\t' → logprob: -7.77402400970459
    7. '	for' → logprob: -7.77402400970459
    8. ' ' → logprob: -8.02402400970459
    9. '0' → logprob: -8.89902400970459
    10. 'n' → logprob: -9.02402400970459

Token 42: ' __' (ID: 2516)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.016480393707752228
    2. ' i' → logprob: -4.641480445861816
    3. ' ' → logprob: -5.266480445861816
    4. '_' → logprob: -7.141480445861816
    5. ' n' → logprob: -7.641480445861816
    6. ' range' → logprob: -8.766480445861816
    7. ' in' → logprob: -9.766480445861816
    8. ' ‌' → logprob: -11.516480445861816
    9. ' j' → logprob: -11.641480445861816
    10. ' __' → logprob: -12.016480445861816

Token 43: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0127028226852417
    2. 'in' → logprob: -4.387702941894531
    3. ' ' → logprob: -8.637702941894531
    4. 'range' → logprob: -12.012702941894531
    5. '_' → logprob: -12.512702941894531
    6. ' _' → logprob: -13.637702941894531
    7. '    ' → logprob: -14.137702941894531
    8. '  ' → logprob: -14.262702941894531
    9. ' i' → logprob: -14.637702941894531
    10. ' range' → logprob: -15.012702941894531

Token 44: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.575941801071167
    2. ' range' → logprob: -0.825941801071167
    3. '	range' → logprob: -13.950942039489746
    4. '(range' → logprob: -14.450942039489746
    5. '_range' → logprob: -15.825942039489746
    6. ' ' → logprob: -15.825942039489746
    7. 'rang' → logprob: -15.950942039489746
    8. 'in' → logprob: -16.20094108581543
    9. 'n' → logprob: -16.45094108581543
    10. 'r' → logprob: -16.70094108581543

Token 45: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.36538761854171753
    2. ' (' → logprob: -1.3653876781463623
    3. ' n' → logprob: -3.2403876781463623
    4. '(' → logprob: -4.490387439727783
    5. 'n' → logprob: -8.240387916564941
    6. ' ' → logprob: -8.990387916564941
    7. '(range' → logprob: -10.740387916564941
    8. ' range' → logprob: -11.490387916564941
    9. '(s' → logprob: -13.740387916564941
    10. '(m' → logprob: -13.990387916564941

Token 46: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002653182251378894
    2. '):
' → logprob: -6.752653121948242
    3. ')' → logprob: -7.002653121948242
    4. ':' → logprob: -8.377653121948242
    5. '   ' → logprob: -8.502653121948242
    6. '+' → logprob: -9.377653121948242
    7. ' ):' → logprob: -10.002653121948242
    8. '):
' → logprob: -12.752653121948242
    9. '():' → logprob: -13.627653121948242
    10. ',' → logprob: -14.127653121948242

Token 47: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.037419285625219345
    2. '    ' → logprob: -3.912419319152832
    3. '   ' → logprob: -4.912419319152832
    4. ' ' → logprob: -5.412419319152832
    5. '<|end|>' → logprob: -6.787419319152832
    6. '        
' → logprob: -7.787419319152832
    7. '    
' → logprob: -7.912419319152832
    8. '	   ' → logprob: -8.162419319152832
    9. 'amount' → logprob: -8.287419319152832
    10. '        ' → logprob: -8.287419319152832

Token 48: ' t' (ID: 260)
  Prédit: 'rate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rate' → logprob: -0.24429883062839508
    2. ' rate' → logprob: -1.9942988157272339
    3. ' p' → logprob: -3.9942989349365234
    4. 'r' → logprob: -4.494298934936523
    5. 'p' → logprob: -4.869298934936523
    6. ' r' → logprob: -5.244298934936523
    7. 'rates' → logprob: -5.369298934936523
    8. ' interest' → logprob: -5.369298934936523
    9. 'a' → logprob: -5.494298934936523
    10. ' a' → logprob: -5.744298934936523

Token 49: ',r' (ID: 33654)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3423197567462921
    2. ',r' → logprob: -2.4673197269439697
    3. 'ype' → logprob: -2.9673197269439697
    4. ',p' → logprob: -3.2173197269439697
    5. 'erm' → logprob: -3.9673197269439697
    6. 'ime' → logprob: -4.217319965362549
    7. ',x' → logprob: -5.092319965362549
    8. ',i' → logprob: -5.092319965362549
    9. 'erms' → logprob: -5.092319965362549
    10. 'emp' → logprob: -5.217319965362549

Token 50: ',c' (ID: 22261)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.44432538747787476
    2. '=input' → logprob: -1.5693254470825195
    3. ' =' → logprob: -3.1943254470825195
    4. ',r' → logprob: -3.5693254470825195
    5. ',input' → logprob: -3.5693254470825195
    6. ',' → logprob: -4.1943254470825195
    7. ',a' → logprob: -5.3193254470825195
    8. '=list' → logprob: -5.6943254470825195
    9. '=int' → logprob: -5.8193254470825195
    10. ',t' → logprob: -5.8193254470825195

Token 51: '=input' (ID: 87911)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07564303278923035
    2. '=input' → logprob: -2.9506430625915527
    3. ' =' → logprob: -4.075643062591553
    4. '=list' → logprob: -6.075643062591553
    5. 'map' → logprob: -8.200642585754395
    6. ',' → logprob: -8.450642585754395
    7. '=[' → logprob: -8.825642585754395
    8. ',map' → logprob: -9.200642585754395
    9. '=sys' → logprob: -9.450642585754395
    10. '=int' → logprob: -9.575642585754395

Token 52: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0003289096348453313
    2. '()' → logprob: -8.12532901763916
    3. '.split' → logprob: -11.25032901763916
    4. ' ().' → logprob: -11.25032901763916
    5. '())' → logprob: -13.25032901763916
    6. ')' → logprob: -13.75032901763916
    7. '(' → logprob: -13.75032901763916
    8. '()).' → logprob: -14.00032901763916
    9. '.strip' → logprob: -14.62532901763916
    10. 'split' → logprob: -14.75032901763916

Token 53: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0034228316508233547
    2. 'strip' → logprob: -5.753422737121582
    3. 'rstrip' → logprob: -8.378422737121582
    4. ' split' → logprob: -11.378422737121582
    5. 'spl' → logprob: -13.003422737121582
    6. 'rs' → logprob: -13.503422737121582
    7. 'sp' → logprob: -16.5034236907959
    8. 's' → logprob: -16.5034236907959
    9. '(split' → logprob: -17.0034236907959
    10. '.split' → logprob: -17.0034236907959

Token 54: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0009525521309114993
    2. '(' → logprob: -8.50095272064209
    3. '()
' → logprob: -8.75095272064209
    4. '<|end|>' → logprob: -8.75095272064209
    5. ')' → logprob: -9.50095272064209
    6. ',' → logprob: -9.62595272064209
    7. '('' → logprob: -9.75095272064209
    8. ' ()' → logprob: -9.87595272064209
    9. '<|end|>' → logprob: -10.37595272064209
    10. '()\' → logprob: -10.75095272064209

Token 55: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 56: ' t' (ID: 260)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.032383114099502563
    2. 'int' → logprob: -4.782382965087891
    3. ' t' → logprob: -4.782382965087891
    4. ' 
' → logprob: -5.657382965087891
    5. '<|end|>' → logprob: -6.282382965087891
    6. ' r' → logprob: -6.407382965087891
    7. 'r' → logprob: -6.657382965087891
    8. 't' (adapté à ' t') → logprob: -6.782382965087891
    9. ' int' → logprob: -6.782382965087891
    10. ')' → logprob: -7.157382965087891

Token 57: '=int' (ID: 37431)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3551096022129059
    2. '=int' → logprob: -1.2301095724105835
    3. ' =' → logprob: -5.605109691619873
    4. ',' → logprob: -6.355109691619873
    5. '=float' → logprob: -7.480109691619873
    6. '==' → logprob: -7.980109691619873
    7. '_=' → logprob: -9.980109214782715
    8. ',int' → logprob: -10.605109214782715
    9. 'int' → logprob: -10.730109214782715
    10. '=input' → logprob: -10.730109214782715

Token 58: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.0004898841143585742
    2. '(' → logprob: -7.625489711761475
    3. ' (' → logprob: -14.250490188598633
    4. 't' → logprob: -14.500490188598633
    5. ')' → logprob: -15.500490188598633
    6. '(token' → logprob: -16.250490188598633
    7. ' ' → logprob: -16.375490188598633
    8. '(
' → logprob: -16.625490188598633
    9. '(tokens' → logprob: -16.750490188598633
    10. '	t' → logprob: -17.250490188598633

Token 59: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08949421346187592
    2. ')
' → logprob: -2.464494228363037
    3. ' )' → logprob: -8.214493751525879
    4. ' )
' → logprob: -8.839493751525879
    5. ')t' → logprob: -9.714493751525879
    6. '<|end|>' → logprob: -10.214493751525879
    7. ')
' → logprob: -11.339493751525879
    8. ')c' → logprob: -11.464493751525879
    9. ')

' → logprob: -12.214493751525879
    10. ')#' → logprob: -12.964493751525879

Token 60: '       ' (ID: 309)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.27754008769989014
    2. 'r' → logprob: -1.6525400876998901
    3. ',r' → logprob: -3.7775402069091797
    4. '<|end|>' → logprob: -3.9025402069091797
    5. ' ' → logprob: -5.15254020690918
    6. ',' → logprob: -7.65254020690918
    7. '<|end|>' → logprob: -8.27754020690918
    8. '	r' → logprob: -8.27754020690918
    9. '  ' → logprob: -8.52754020690918
    10. '   ' → logprob: -8.65254020690918

Token 61: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -2.963691804325208e-05
    2. ' r' → logprob: -10.750029563903809
    3. 'c' → logprob: -12.500029563903809
    4. 'int' → logprob: -13.000029563903809
    5. 'float' → logprob: -13.375029563903809
    6. ' ' → logprob: -15.500029563903809
    7. '   ' → logprob: -16.000030517578125
    8. '	r' → logprob: -17.125030517578125
    9. '  ' → logprob: -17.250030517578125
    10. 't' → logprob: -18.000030517578125

Token 62: '=float' (ID: 80332)
  Prédit: '=int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=int' → logprob: -0.0017759765032678843
    2. '=' → logprob: -6.501775741577148
    3. '=float' → logprob: -8.626775741577148
    4. ' =' → logprob: -9.376775741577148
    5. '*=' → logprob: -12.626775741577148
    6. 'int' → logprob: -13.376775741577148
    7. '+=' → logprob: -13.376775741577148
    8. '==' → logprob: -14.001775741577148
    9. '=input' → logprob: -14.751775741577148
    10. ',int' → logprob: -14.751775741577148

Token 63: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.01951293833553791
    2. '(' → logprob: -4.019513130187988
    3. ' (' → logprob: -6.644513130187988
    4. ')' → logprob: -10.394513130187988
    5. 'r' → logprob: -11.519513130187988
    6. '(c' → logprob: -12.019513130187988
    7. '(t' → logprob: -12.769513130187988
    8. '(
' → logprob: -12.769513130187988
    9. ' ' → logprob: -13.769513130187988
    10. '   ' → logprob: -13.769513130187988

Token 64: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2815339267253876
    2. ')
' → logprob: -1.40653395652771
    3. ')c' → logprob: -8.656534194946289
    4. ')
' → logprob: -9.156534194946289
    5. ' )
' → logprob: -10.281534194946289
    6. ' )' → logprob: -10.531534194946289
    7. '       ' → logprob: -10.781534194946289
    8. ')

' → logprob: -11.531534194946289
    9. ')*' → logprob: -12.531534194946289
    10. '<|end|>' → logprob: -13.156534194946289

Token 65: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3139311373233795
    2. '<|end|>' → logprob: -1.6889311075210571
    3. 'c' → logprob: -3.4389312267303467
    4. '	c' → logprob: -3.8139312267303467
    5. ' c' → logprob: -4.063930988311768
    6. ' ' → logprob: -5.188930988311768
    7. '   ' → logprob: -6.563930988311768
    8. '        ' → logprob: -6.813930988311768
    9. ',c' → logprob: -7.063930988311768
    10. '        
' → logprob: -7.063930988311768

Token 66: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.11673582345247269
    2. 'c' (adapté à ' c') → logprob: -2.2417359352111816
    3. ' if' → logprob: -6.241735935211182
    4. 'if' → logprob: -7.241735935211182
    5. ' ' → logprob: -9.241735458374023
    6. ',c' → logprob: -9.491735458374023
    7. '   ' → logprob: -9.554235458374023
    8. ' for' → logprob: -9.554235458374023
    9. '```' → logprob: -9.679235458374023
    10. ' final' → logprob: -9.741735458374023

Token 67: '=int' (ID: 37431)
  Prédit: '=int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=int' → logprob: -0.009966200217604637
    2. '=float' → logprob: -4.6349663734436035
    3. '=' → logprob: -8.634965896606445
    4. 'int' → logprob: -11.134965896606445
    5. ' =' → logprob: -11.384965896606445
    6. '==' → logprob: -13.384965896606445
    7. '=input' → logprob: -13.634965896606445
    8. '=str' → logprob: -14.509965896606445
    9. '=
' → logprob: -15.134965896606445
    10. ',int' → logprob: -15.259965896606445

Token 68: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -6.630610641877865e-06
    2. ')c' → logprob: -12.875006675720215
    3. '(' → logprob: -13.625006675720215
    4. ' (' → logprob: -13.875006675720215
    5. ')' → logprob: -14.500006675720215
    6. 'c' → logprob: -14.750006675720215
    7. '```' → logprob: -15.000006675720215
    8. '(input' → logprob: -15.625006675720215
    9. '   ' → logprob: -15.750006675720215
    10. ')(' → logprob: -16.1250057220459

Token 69: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03396125137805939
    2. ')
' → logprob: -3.408961296081543
    3. ')

' → logprob: -8.783961296081543
    4. ')
' → logprob: -9.658961296081543
    5. '   ' → logprob: -9.783961296081543
    6. ' )' → logprob: -11.158961296081543
    7. ')t' → logprob: -11.908961296081543
    8. '       ' → logprob: -12.033961296081543
    9. ' )
' → logprob: -13.158961296081543
    10. ')**' → logprob: -13.408961296081543

Token 70: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7699393033981323
    2. '   ' → logprob: -1.0199393033981323
    3. ' if' → logprob: -2.269939422607422
    4. 'if' → logprob: -3.894939422607422
    5. 'final' → logprob: -4.394939422607422
    6. ' final' → logprob: -4.894939422607422
    7. 'amount' → logprob: -5.144939422607422
    8. ' amount' → logprob: -5.519939422607422
    9. '        
' → logprob: -5.769939422607422
    10. '    
' → logprob: -6.144939422607422

Token 71: ' if' (ID: 538)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'final' → logprob: -0.6084734797477722
    2. 'amount' → logprob: -1.358473539352417
    3. ' final' → logprob: -3.108473539352417
    4. ' amount' → logprob: -3.108473539352417
    5. 'if' (adapté à ' if') → logprob: -3.608473539352417
    6. 'amt' → logprob: -3.733473539352417
    7. 'current' → logprob: -4.608473300933838
    8. ' if' → logprob: -4.858473300933838
    9. 'money' → logprob: -4.983473300933838
    10. 'total' → logprob: -5.233473300933838

Token 72: ' t' (ID: 260)
  Prédit: ' initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' initial' → logprob: -0.8832921385765076
    2. ' t' → logprob: -1.3832921981811523
    3. ' c' → logprob: -1.7582921981811523
    4. ' r' → logprob: -2.1332921981811523
    5. ' years' → logprob: -3.6332921981811523
    6. ' ' → logprob: -5.508292198181152
    7. 'initial' → logprob: -5.633292198181152
    8. 't' → logprob: -6.133292198181152
    9. '(initial' → logprob: -6.383292198181152
    10. ' (' → logprob: -6.383292198181152

Token 73: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.27648136019706726
    2. ' ==' → logprob: -1.9014813899993896
    3. '<=' → logprob: -3.2764813899993896
    4. '>=' → logprob: -3.7764813899993896
    5. '>' → logprob: -4.5264811515808105
    6. ' <=' → logprob: -4.5264811515808105
    7. ' >=' → logprob: -5.2764811515808105
    8. ' >' → logprob: -5.9014811515808105
    9. '*' → logprob: -7.2764811515808105
    10. '<' → logprob: -7.4014811515808105

Token 74: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3613116443157196
    2. '0' → logprob: -1.486311674118042
    3. 'years' → logprob: -3.236311674118042
    4. ' ' → logprob: -3.611311674118042
    5. ' years' → logprob: -5.111311435699463
    6. '2' → logprob: -5.736311435699463
    7. 'initial' → logprob: -7.611311435699463
    8. '3' → logprob: -8.236311912536621
    9. ' initial' → logprob: -9.298811912536621
    10. 'year' → logprob: -9.611311912536621

Token 75: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011012798640877008
    2. ' and' → logprob: -7.501101493835449
    3. ' :' → logprob: -7.626101493835449
    4. ':
' → logprob: -10.50110149383545
    5. 'and' → logprob: -11.50110149383545
    6. ',' → logprob: -11.50110149383545
    7. ' or' → logprob: -11.62610149383545
    8. '<|end|>' → logprob: -13.75110149383545
    9. ':return' → logprob: -15.12610149383545
    10. ':

' → logprob: -15.25110149383545

Token 76: '           ' (ID: 352)
  Prédit: ' initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' initial' → logprob: -0.9698009490966797
    2. ' max' → logprob: -1.8448009490966797
    3. '0' → logprob: -2.2198009490966797
    4. ':' → logprob: -2.3448009490966797
    5. 'initial' → logprob: -3.0948009490966797
    6. ' c' → logprob: -3.3448009490966797
    7. 'r' → logprob: -3.5948009490966797
    8. ' r' → logprob: -3.7198009490966797
    9. 'max' → logprob: -3.8448009490966797
    10. '   ' → logprob: -4.09480094909668

Token 77: ' balance' (ID: 10636)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.678615927696228
    2. ' final' → logprob: -1.553615927696228
    3. ' initial' → logprob: -1.928615927696228
    4. 'max' → logprob: -2.9286160469055176
    5. 'final' → logprob: -3.3036160469055176
    6. ' amount' → logprob: -3.9286160469055176
    7. 'initial' → logprob: -4.428616046905518
    8. 'amount' → logprob: -5.428616046905518
    9. ' current' → logprob: -5.803616046905518
    10. '   ' → logprob: -6.678616046905518

Token 78: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2765783667564392
    2. '*=' → logprob: -2.151578426361084
    3. '+=' → logprob: -2.526578426361084
    4. ' =' → logprob: -3.651578426361084
    5. ' +=' → logprob: -5.276578426361084
    6. '*' → logprob: -5.401578426361084
    7. ' *=' → logprob: -5.651578426361084
    8. '=(' → logprob: -5.776578426361084
    9. '+=(' → logprob: -6.401578426361084
    10. '=max' → logprob: -8.151577949523926

Token 79: 'initial' (ID: 17493)
  Prédit: 'initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.14732173085212708
    2. ' initial' → logprob: -2.0223217010498047
    3. '(initial' → logprob: -5.897321701049805
    4. 'int' → logprob: -7.397321701049805
    5. 'balance' → logprob: -7.897321701049805
    6. ' (' → logprob: -8.022321701049805
    7. 'float' → logprob: -9.022321701049805
    8. '   ' → logprob: -9.022321701049805
    9. '(' → logprob: -9.647321701049805
    10. ' int' → logprob: -9.772321701049805

Token 80: '_amount' (ID: 29145)
  Prédit: '_amount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_amount' → logprob: -3.173704271830502e-06
    2. '_balance' → logprob: -13.37500286102295
    3. 'amount' → logprob: -13.87500286102295
    4. '_am' → logprob: -15.87500286102295
    5. '_' → logprob: -16.000003814697266
    6. ' _' → logprob: -16.000003814697266
    7. '_amt' → logprob: -16.750003814697266
    8. '-' → logprob: -17.625003814697266
    9. '_AMOUNT' → logprob: -18.000003814697266
    10. '_a' → logprob: -18.000003814697266

Token 81: '
' (ID: 198)
  Prédit: '*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.09634794294834137
    2. '*' → logprob: -2.5963480472564697
    3. '
' → logprob: -4.846347808837891
    4. '+' → logprob: -5.471347808837891
    5. ' *' → logprob: -5.721347808837891
    6. ' +' → logprob: -7.721347808837891
    7. '*((' → logprob: -7.721347808837891
    8. '<|end|>' → logprob: -8.34634780883789
    9. '+(' → logprob: -8.72134780883789
    10. ' *(' → logprob: -9.22134780883789

Token 82: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 83: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.44204363226890564
    2. 'for' (adapté à ' for') → logprob: -1.067043662071228
    3. '           ' → logprob: -5.067043781280518
    4. 'balance' → logprob: -5.692043781280518
    5. '
' → logprob: -6.692043781280518
    6. ' balance' → logprob: -7.942043781280518
    7. ' *' → logprob: -8.31704330444336
    8. 'while' → logprob: -8.69204330444336
    9. '       ' → logprob: -8.81704330444336
    10. '+' → logprob: -8.81704330444336

Token 84: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.0028467215597629547
    2. '_' → logprob: -6.252846717834473
    3. ' i' → logprob: -7.252846717834473
    4. ' y' → logprob: -9.002846717834473
    5. ' ' → logprob: -10.002846717834473
    6. 'y' → logprob: -11.502846717834473
    7. ' __' → logprob: -11.752846717834473
    8. 'i' → logprob: -12.127846717834473
    9. ' year' → logprob: -12.377846717834473
    10. '_y' → logprob: -12.377846717834473

Token 85: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22593145072460175
    2. 'in' → logprob: -1.6009314060211182
    3. 'range' → logprob: -8.225931167602539
    4. ' ' → logprob: -8.475931167602539
    5. ' range' → logprob: -11.100931167602539
    6. '<|end|>' → logprob: -11.725931167602539
    7. '  ' → logprob: -12.600931167602539
    8. 'n' → logprob: -13.475931167602539
    9. '1' → logprob: -13.538431167602539
    10. '   ' → logprob: -13.725931167602539

Token 86: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07891391962766647
    2. ' range' → logprob: -2.578913927078247
    3. '(range' → logprob: -12.078913688659668
    4. '	range' → logprob: -12.328913688659668
    5. 'year' → logprob: -12.953913688659668
    6. ' ' → logprob: -12.953913688659668
    7. 'years' → logprob: -13.203913688659668
    8. '<|end|>' → logprob: -13.453913688659668
    9. 'ran' → logprob: -13.828913688659668
    10. 'rang' → logprob: -13.828913688659668

Token 87: '(year' (ID: 58075)
  Prédit: ' years'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' years' → logprob: -0.03607450798153877
    2. 'years' → logprob: -3.41107439994812
    3. '(year' → logprob: -6.036074638366699
    4. ' year' → logprob: -11.2860746383667
    5. 'year' → logprob: -11.6610746383667
    6. '(' → logprob: -11.9110746383667
    7. ' (' → logprob: -12.5360746383667
    8. '_year' → logprob: -13.6610746383667
    9. ' ' → logprob: -14.5360746383667
    10. ' y' → logprob: -14.6610746383667

Token 88: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0005159787251614034
    2. 'years' → logprob: -8.250515937805176
    3. ' s' → logprob: -9.750515937805176
    4. '1' → logprob: -10.250515937805176
    5. '   ' → logprob: -10.875515937805176
    6. '```' → logprob: -11.188015937805176
    7. ')' → logprob: -11.313015937805176
    8. 'rs' → logprob: -11.500515937805176
    9. ' ' → logprob: -11.625515937805176
    10. '       ' → logprob: -11.813015937805176

Token 89: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0012054694816470146
    2. '):
' → logprob: -6.8762054443359375
    3. ' ):' → logprob: -9.251205444335938
    4. ':' → logprob: -10.251205444335938
    5. ')' → logprob: -10.876205444335938
    6. '+' → logprob: -12.001205444335938
    7. '   ' → logprob: -12.126205444335938
    8. '**' → logprob: -13.501205444335938
    9. '-' → logprob: -13.501205444335938
    10. '*' → logprob: -14.001205444335938

Token 90: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.13460542261600494
    2. ' balance' → logprob: -2.5096054077148438
    3. '                ' → logprob: -3.7596054077148438
    4. '            ' → logprob: -4.634605407714844
    5. ' ' → logprob: -6.259605407714844
    6. 'balance' → logprob: -6.384605407714844
    7. '<|end|>' → logprob: -6.634605407714844
    8. '                
' → logprob: -6.759605407714844
    9. '(balance' → logprob: -7.134605407714844
    10. '              ' → logprob: -7.134605407714844

Token 91: ' interest' (ID: 3425)
  Prédit: ' balance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' balance' → logprob: -0.5763787031173706
    2. 'balance' → logprob: -0.8263787031173706
    3. '.balance' → logprob: -9.32637882232666
    4. '(balance' → logprob: -9.32637882232666
    5. '```' → logprob: -9.82637882232666
    6. '_balance' → logprob: -9.82637882232666
    7. '               ' → logprob: -9.95137882232666
    8. '                   ' → logprob: -10.95137882232666
    9. '            ' → logprob: -11.20137882232666
    10. '<|end|>' → logprob: -11.20137882232666

Token 92: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.033427365124225616
    2. '_amount' → logprob: -4.1584272384643555
    3. '=(' → logprob: -5.1584272384643555
    4. '+=' → logprob: -5.6584272384643555
    5. ' =' → logprob: -5.9084272384643555
    6. '=b' → logprob: -6.9084272384643555
    7. 'amount' → logprob: -7.5334272384643555
    8. '_rate' → logprob: -7.6584272384643555
    9. 'earned' → logprob: -7.6584272384643555
    10. '*=' → logprob: -7.9084272384643555

Token 93: 'round' (ID: 1964)
  Prédit: 'balance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'balance' → logprob: -0.0048474459908902645
    2. ' balance' → logprob: -5.379847526550293
    3. '(balance' → logprob: -9.504847526550293
    4. 'bal' → logprob: -9.754847526550293
    5. 'int' → logprob: -9.879847526550293
    6. 'r' → logprob: -11.629847526550293
    7. 'b' → logprob: -11.754847526550293
    8. '0' → logprob: -12.129847526550293
    9. 'round' → logprob: -12.254847526550293
    10. '   ' → logprob: -13.129847526550293

Token 94: '(balance' (ID: 159939)
  Prédit: '(balance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(balance' → logprob: -0.00011391390580683947
    2. 'balance' → logprob: -9.750113487243652
    3. '(' → logprob: -10.125113487243652
    4. ' balance' → logprob: -12.250113487243652
    5. '(b' → logprob: -12.375113487243652
    6. '((' → logprob: -12.875113487243652
    7. ' (' → logprob: -13.375113487243652
    8. '(round' → logprob: -14.500113487243652
    9. '(amount' → logprob: -14.625113487243652
    10. '(float' → logprob: -14.875113487243652

Token 95: '*r' (ID: 92096)
  Prédit: '*r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*r' → logprob: -0.23005379736423492
    2. '*' → logprob: -1.6050537824630737
    3. ' *' → logprob: -5.480053901672363
    4. '*c' → logprob: -8.355053901672363
    5. '*(' → logprob: -9.480053901672363
    6. '*t' → logprob: -9.480053901672363
    7. '*object' → logprob: -11.480053901672363
    8. ' ' → logprob: -11.730053901672363
    9. '+r' → logprob: -11.855053901672363
    10. '*p' → logprob: -12.105053901672363

Token 96: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.36576542258262634
    2. '/' → logprob: -1.6157654523849487
    3. ' /' → logprob: -2.990765333175659
    4. ')
' → logprob: -3.740765333175659
    5. ' )' → logprob: -3.865765333175659
    6. ',' → logprob: -5.240765571594238
    7. ' )
' → logprob: -5.490765571594238
    8. '*' → logprob: -6.740765571594238
    9. ' ,' → logprob: -7.365765571594238
    10. ')

' → logprob: -8.240765571594238

Token 97: '               ' (ID: 506)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6449205279350281
    2. '               ' → logprob: -1.1449205875396729
    3. '           ' → logprob: -2.769920587539673
    4. '+' → logprob: -3.394920587539673
    5. '<|end|>' → logprob: -3.519920587539673
    6. ')' → logprob: -4.269920349121094
    7. '                   ' → logprob: -5.519920349121094
    8. 'balance' → logprob: -5.644920349121094
    9. ')
' → logprob: -6.644920349121094
    10. '       ' → logprob: -6.644920349121094

Token 98: ' balance' (ID: 10636)
  Prédit: ' balance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' balance' → logprob: -0.4296707808971405
    2. 'balance' (adapté à ' balance') → logprob: -1.054670810699463
    3. '+' → logprob: -7.679670810699463
    4. '(balance' → logprob: -9.304670333862305
    5. ' if' → logprob: -9.554670333862305
    6. 'if' → logprob: -9.929670333862305
    7. ' +' → logprob: -10.054670333862305
    8. 'alance' → logprob: -10.179670333862305
    9. '
' → logprob: -10.304670333862305
    10. '.balance' → logprob: -10.429670333862305

Token 99: '=' (ID: 28)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0017647859640419483
    2. ' +=' → logprob: -6.50176477432251
    3. '=' → logprob: -8.501765251159668
    4. '+' → logprob: -10.501765251159668
    5. '+=(' → logprob: -10.626765251159668
    6. '+='' → logprob: -12.876765251159668
    7. ']+=' → logprob: -13.001765251159668
    8. '-=' → logprob: -13.751765251159668
    9. '+="' → logprob: -14.126765251159668
    10. ' =' → logprob: -14.876765251159668

Token 100: 'balance' (ID: 37647)
  Prédit: 'balance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'balance' → logprob: -0.07004836201667786
    2. ' balance' → logprob: -2.6950483322143555
    3. '(balance' → logprob: -9.320048332214355
    4. 'round' → logprob: -11.945048332214355
    5. 'int' → logprob: -12.195048332214355
    6. 'balances' → logprob: -12.445048332214355
    7. 'max' → logprob: -13.445048332214355
    8. 'bal' → logprob: -13.570048332214355
    9. ' ' → logprob: -13.820048332214355
    10. 'balanced' → logprob: -14.195048332214355

Token 101: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0317547433078289
    2. ' +' → logprob: -3.531754732131958
    3. '+c' → logprob: -6.656754970550537
    4. '-' → logprob: -7.656754970550537
    5. ' -' → logprob: -9.031754493713379
    6. '-interest' → logprob: -9.281754493713379
    7. '+r' → logprob: -11.656754493713379
    8. '+t' → logprob: -11.906754493713379
    9. ' plus' → logprob: -12.531754493713379
    10. '+b' → logprob: -12.781754493713379

Token 102: 'interest' (ID: 21931)
  Prédit: 'interest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interest' → logprob: -0.006732422858476639
    2. ' interest' → logprob: -5.00673246383667
    3. 'int' → logprob: -12.006731986999512
    4. 'inter' → logprob: -12.006731986999512
    5. 'balance' → logprob: -13.006731986999512
    6. '_interest' → logprob: -13.756731986999512
    7. ' ' → logprob: -14.631731986999512
    8. '-interest' → logprob: -15.631731986999512
    9. 'c' → logprob: -15.756731986999512
    10. '   ' → logprob: -15.881731986999512

Token 103: '-c' (ID: 3452)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 104: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -1.1526334285736084
    2. '           ' → logprob: -1.5276334285736084
    3. ' else' → logprob: -1.7776334285736084
    4. '<|end|>' → logprob: -1.9026334285736084
    5. '       ' → logprob: -2.5276334285736084
    6. '
' → logprob: -3.5276334285736084
    7. 'elif' → logprob: -4.4026336669921875
    8. ' if' → logprob: -4.7776336669921875
    9. 'print' → logprob: -5.2776336669921875
    10. ' elif' → logprob: -6.1526336669921875

Token 105: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 106: ' final' (ID: 1721)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.127609521150589
    2. '           ' → logprob: -3.3776094913482666
    3. '   ' → logprob: -3.6276094913482666
    4. '       ' → logprob: -3.7526094913482666
    5. 'if' → logprob: -3.8776094913482666
    6. ' max' → logprob: -5.252609729766846
    7. 'max' → logprob: -5.627609729766846
    8. ' else' → logprob: -5.752609729766846
    9. 'else' → logprob: -6.002609729766846
    10. ' ' → logprob: -9.002609252929688

Token 107: '=' (ID: 28)
  Prédit: '_amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_amount' → logprob: -0.0007952123996801674
    2. '_balance' → logprob: -7.375795364379883
    3. '=' → logprob: -9.125795364379883
    4. '_amt' → logprob: -10.375795364379883
    5. '_' → logprob: -11.875795364379883
    6. 'amount' → logprob: -12.000795364379883
    7. '=_' → logprob: -12.500795364379883
    8. '_value' → logprob: -12.500795364379883
    9. '_final' → logprob: -12.500795364379883
    10. '_AMOUNT' → logprob: -13.875795364379883

Token 108: 'balance' (ID: 37647)
  Prédit: 'balance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'balance' → logprob: -0.000229046301683411
    2. 'max' → logprob: -8.875228881835938
    3. ' balance' → logprob: -9.375228881835938
    4. 'bal' → logprob: -12.750228881835938
    5. '   ' → logprob: -15.125228881835938
    6. ' max' → logprob: -15.250228881835938
    7. 'round' → logprob: -15.625228881835938
    8. 'balanced' → logprob: -15.625228881835938
    9. '(balance' → logprob: -15.875228881835938
    10. 'balances' → logprob: -16.125228881835938

Token 109: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03554956987500191
    2. '           ' → logprob: -3.7855496406555176
    3. '<|end|>' → logprob: -4.535549640655518
    4. 'else' → logprob: -7.660549640655518
    5. '<|end|>' → logprob: -7.910549640655518
    6. 'elif' → logprob: -8.66054916381836
    7. '
' → logprob: -8.66054916381836
    8. '   ' → logprob: -10.03554916381836
    9. ' if' → logprob: -10.16054916381836
    10. '```' → logprob: -10.28554916381836

Token 110: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07217439264059067
    2. '<|end|>' → logprob: -2.822174310684204
    3. '           ' → logprob: -5.072174549102783
    4. 'else' → logprob: -6.572174549102783
    5. ' else' → logprob: -6.697174549102783
    6. '<|end|>' → logprob: -7.072174549102783
    7. 'elif' → logprob: -9.072174072265625
    8. '```' → logprob: -9.822174072265625
    9. '
' → logprob: -10.072174072265625
    10. ' elif' → logprob: -10.197174072265625

Token 111: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.5560178160667419
    2. ' else' → logprob: -1.3060178756713867
    3. '       ' → logprob: -1.9310178756713867
    4. 'elif' → logprob: -4.931017875671387
    5. ' elif' → logprob: -6.431017875671387
    6. '<|end|>' → logprob: -6.681017875671387
    7. '
' → logprob: -8.681017875671387
    8. '	else' → logprob: -9.431017875671387
    9. '```' → logprob: -9.931017875671387
    10. 'if' → logprob: -10.306017875671387

Token 112: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2814689576625824
    2. ':
' → logprob: -1.4064689874649048
    3. ' :
' → logprob: -8.406469345092773
    4. ' :' → logprob: -10.156469345092773
    5. '{' → logprob: -11.406469345092773
    6. ':
' → logprob: -11.656469345092773
    7. '<|end|>' → logprob: -11.781469345092773
    8. '           ' → logprob: -12.031469345092773
    9. '
' → logprob: -12.156469345092773
    10. ':

' → logprob: -12.156469345092773

Token 113: '           ' (ID: 352)
  Prédit: ' balance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' balance' → logprob: -0.4506191611289978
    2. '           ' → logprob: -1.3256192207336426
    3. 'balance' → logprob: -2.5756192207336426
    4. '       ' → logprob: -5.325619220733643
    5. ' final' → logprob: -5.450619220733643
    6. '```' → logprob: -5.575619220733643
    7. '   ' → logprob: -5.950619220733643
    8. '
' → logprob: -6.075619220733643
    9. '        ' → logprob: -6.825619220733643
    10. 'final' → logprob: -7.950619220733643

Token 114: ' balance' (ID: 10636)
  Prédit: 'balance'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'balance' (adapté à ' balance') → logprob: -0.2735595107078552
    2. ' balance' → logprob: -1.5235595703125
    3. 'final' → logprob: -4.6485595703125
    4. ' final' → logprob: -6.1485595703125
    5. 'principal' → logprob: -6.7735595703125
    6. 'total' → logprob: -7.3985595703125
    7. 'deposit' → logprob: -7.3985595703125
    8. 'interest' → logprob: -7.5235595703125
    9. 'rate' → logprob: -7.5235595703125
    10. 'period' → logprob: -8.0235595703125

Token 115: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00418299064040184
    2. '+=' → logprob: -6.129182815551758
    3. '*=' → logprob: -6.629182815551758
    4. ' =' → logprob: -8.004182815551758
    5. '=int' → logprob: -8.879182815551758
    6. '=input' → logprob: -9.629182815551758
    7. '=float' → logprob: -10.754182815551758
    8. ' +=' → logprob: -11.004182815551758
    9. '=max' → logprob: -11.129182815551758
    10. '-=' → logprob: -11.379182815551758

Token 116: 'initial' (ID: 17493)
  Prédit: 'initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.004594011232256889
    2. ' initial' → logprob: -6.129593849182129
    3. '(initial' → logprob: -6.504593849182129
    4. 'balance' → logprob: -7.504593849182129
    5. '0' → logprob: -9.004593849182129
    6. 'round' → logprob: -10.004593849182129
    7. 'c' → logprob: -10.629593849182129
    8. '-' → logprob: -10.754593849182129
    9. '(' → logprob: -10.879593849182129
    10. 'float' → logprob: -11.004593849182129

Token 117: '_amount' (ID: 29145)
  Prédit: '_amount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_amount' → logprob: -0.00012523093027994037
    2. 'amount' → logprob: -9.00012493133545
    3. '_balance' → logprob: -14.12512493133545
    4. 'Amount' → logprob: -14.37512493133545
    5. '```' → logprob: -15.50012493133545
    6. '_amt' → logprob: -16.625125885009766
    7. '_am' → logprob: -17.125125885009766
    8. '_AMOUNT' → logprob: -17.125125885009766
    9. ' amount' → logprob: -17.500125885009766
    10. ' _' → logprob: -17.875125885009766

Token 118: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 119: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12903006374835968
    2. 'for' → logprob: -2.7540299892425537
    3. '       ' → logprob: -3.7540299892425537
    4. ' for' → logprob: -4.004030227661133
    5. '   ' → logprob: -4.254030227661133
    6. '```' → logprob: -6.629030227661133
    7. '
' → logprob: -9.379030227661133
    8. 'year' → logprob: -10.629030227661133
    9. 'years' → logprob: -11.004030227661133
    10. '	for' → logprob: -11.754030227661133

Token 120: ' cum' (ID: 10023)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007858111523091793
    2. ' for' → logprob: -5.1328582763671875
    3. 'interest' → logprob: -7.6328582763671875
    4. '           ' → logprob: -7.8828582763671875
    5. 'rate' → logprob: -8.007858276367188
    6. 'balance' → logprob: -8.757858276367188
    7. 'total' → logprob: -9.382858276367188
    8. 'final' → logprob: -9.382858276367188
    9. 'year' → logprob: -9.632858276367188
    10. 'period' → logprob: -10.132858276367188

Token 121: '_interest' (ID: 180237)
  Prédit: '_interest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_interest' → logprob: -1.1914411783218384
    2. '=' → logprob: -1.6914411783218384
    3. 'balance' → logprob: -2.191441059112549
    4. 'r' → logprob: -2.691441059112549
    5. '_balance' → logprob: -2.816441059112549
    6. 'ulative' → logprob: -3.566441059112549
    7. 'interest' → logprob: -3.816441059112549
    8. 'mul' → logprob: -3.816441059112549
    9. 'sum' → logprob: -3.941441059112549
    10. 'rate' → logprob: -4.066441059112549

Token 122: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0004664193547796458
    2. ' =' → logprob: -8.375466346740723
    3. '=float' → logprob: -9.500466346740723
    4. '+=' → logprob: -10.000466346740723
    5. '=(' → logprob: -10.375466346740723
    6. '=[]' → logprob: -11.375466346740723
    7. '=-' → logprob: -11.500466346740723
    8. '=sum' → logprob: -11.750466346740723
    9. '=[' → logprob: -11.875466346740723
    10. '=int' → logprob: -11.875466346740723

Token 123: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03005327098071575
    2. 'balance' → logprob: -3.9050533771514893
    3. '1' → logprob: -5.28005313873291
    4. 'initial' → logprob: -5.78005313873291
    5. '(' → logprob: -8.03005313873291
    6. 'round' → logprob: -8.15505313873291
    7. 'int' → logprob: -9.03005313873291
    8. '(balance' → logprob: -9.15505313873291
    9. '(initial' → logprob: -9.28005313873291
    10. '[' → logprob: -9.53005313873291

Token 124: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2529788613319397
    2. '           ' → logprob: -1.627978801727295
    3. '<|end|>' → logprob: -4.127978801727295
    4. ' for' → logprob: -5.252978801727295
    5. 'for' → logprob: -6.627978801727295
    6. '   ' → logprob: -7.002978801727295
    7. '\n' → logprob: -7.252978801727295
    8. '            
' → logprob: -7.752978801727295
    9. '  
' → logprob: -7.877978801727295
    10. '       ' → logprob: -8.252979278564453

Token 125: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.030593212693929672
    2. '
' → logprob: -3.905593156814575
    3. ' for' → logprob: -5.405593395233154
    4. '   ' → logprob: -6.280593395233154
    5. 'for' → logprob: -6.405593395233154
    6. '<|end|>' → logprob: -7.155593395233154
    7. '       ' → logprob: -7.405593395233154
    8. '```' → logprob: -7.905593395233154
    9. '	for' → logprob: -10.405592918395996
    10. '	       ' → logprob: -10.530592918395996

Token 126: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.006285440642386675
    2. ' for' → logprob: -5.256285667419434
    3. 'balance' → logprob: -7.881285667419434
    4. 'prev' → logprob: -8.756285667419434
    5. 'interest' → logprob: -9.006285667419434
    6. 'principal' → logprob: -9.631285667419434
    7. 'year' → logprob: -9.756285667419434
    8. 'while' → logprob: -10.006285667419434
    9. 'current' → logprob: -10.381285667419434
    10. '
' → logprob: -10.631285667419434

Token 127: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03184134513139725
    2. ' _' → logprob: -3.531841278076172
    3. '_year' → logprob: -6.531841278076172
    4. ' year' → logprob: -8.406841278076172
    5. ' i' → logprob: -9.156841278076172
    6. 'year' → logprob: -9.656841278076172
    7. ' in' → logprob: -9.906841278076172
    8. '_y' → logprob: -10.406841278076172
    9. '_range' → logprob: -10.656841278076172
    10. '_i' → logprob: -10.656841278076172

Token 128: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6990383267402649
    2. ' in' → logprob: -0.6990383267402649
    3. 'range' → logprob: -5.199038505554199
    4. ' range' → logprob: -8.4490385055542
    5. ' ' → logprob: -9.5740385055542
    6. '_' → logprob: -10.8240385055542
    7. 'years' → logprob: -10.9490385055542
    8. ' _' → logprob: -11.3240385055542
    9. 'year' → logprob: -12.3240385055542
    10. ' years' → logprob: -12.4490385055542

Token 129: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07892449200153351
    2. ' range' → logprob: -2.5789244174957275
    3. '(range' → logprob: -10.453924179077148
    4. '_' → logprob: -12.578924179077148
    5. '(' → logprob: -13.703924179077148
    6. 'year' → logprob: -15.078924179077148
    7. ' ' → logprob: -15.078924179077148
    8. 'years' → logprob: -15.203924179077148
    9. '	range' → logprob: -15.953924179077148
    10. ' years' → logprob: -15.953924179077148

Token 130: '(year' (ID: 58075)
  Prédit: '(year'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(year' → logprob: -0.0002326224057469517
    2. ' (' → logprob: -8.500232696533203
    3. ' years' → logprob: -11.125232696533203
    4. 'years' → logprob: -11.375232696533203
    5. '(' → logprob: -13.250232696533203
    6. '(month' → logprob: -15.375232696533203
    7. 'year' → logprob: -15.500232696533203
    8. '(range' → logprob: -15.625232696533203
    9. '(c' → logprob: -16.000232696533203
    10. 'c' → logprob: -16.750232696533203

Token 131: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.01441875658929348
    2. 'years' → logprob: -4.264418601989746
    3. ' years' → logprob: -8.764418601989746
    4. ' s' → logprob: -10.139418601989746
    5. 'range' → logprob: -11.514418601989746
    6. '1' → logprob: -12.014418601989746
    7. 'year' → logprob: -12.139418601989746
    8. '```' → logprob: -12.514418601989746
    9. 'ars' → logprob: -12.889418601989746
    10. '   ' → logprob: -12.889418601989746

Token 132: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.018460465595126152
    2. '):' → logprob: -4.018460273742676
    3. '+' → logprob: -9.393460273742676
    4. ':
' → logprob: -9.518460273742676
    5. ':' → logprob: -9.893460273742676
    6. '):

' → logprob: -10.643460273742676
    7. '-' → logprob: -10.768460273742676
    8. '):
' → logprob: -11.143460273742676
    9. '           ' → logprob: -11.518460273742676
    10. '   ' → logprob: -11.643460273742676

Token 133: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.791675329208374
    2. ' interest' → logprob: -0.791675329208374
    3. 'interest' → logprob: -3.166675329208374
    4. ' cum' → logprob: -3.541675329208374
    5. '           ' → logprob: -4.666675567626953
    6. '   ' → logprob: -5.791675567626953
    7. ' balance' → logprob: -5.916675567626953
    8. 'cum' → logprob: -6.166675567626953
    9. ' cumulative' → logprob: -6.541675567626953
    10. ' if' → logprob: -6.916675567626953

Token 134: ' interest' (ID: 3425)
  Prédit: 'interest'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interest' (adapté à ' interest') → logprob: -0.0872645229101181
    2. ' interest' → logprob: -2.7122645378112793
    3. 'cum' → logprob: -4.337264537811279
    4. 'balance' → logprob: -6.462264537811279
    5. ' cum' → logprob: -6.837264537811279
    6. 'if' → logprob: -8.462264060974121
    7. '   ' → logprob: -8.712264060974121
    8. ' balance' → logprob: -8.837264060974121
    9. 'c' → logprob: -8.837264060974121
    10. '           ' → logprob: -9.337264060974121

Token 135: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012571336701512337
    2. '=int' → logprob: -5.012571334838867
    3. '=c' → logprob: -5.512571334838867
    4. '=b' → logprob: -7.137571334838867
    5. '=float' → logprob: -8.137571334838867
    6. '=(' → logprob: -8.137571334838867
    7. '+=' → logprob: -9.137571334838867
    8. '=t' → logprob: -9.137571334838867
    9. '=max' → logprob: -9.887571334838867
    10. '=batch' → logprob: -9.887571334838867

Token 136: 'round' (ID: 1964)
  Prédit: 'round'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'round' → logprob: -0.6480497121810913
    2. 'balance' → logprob: -0.7730497121810913
    3. 'int' → logprob: -4.273049831390381
    4. ' balance' → logprob: -7.773049831390381
    5. '(balance' → logprob: -8.273049354553223
    6. '(round' → logprob: -8.398049354553223
    7. ' round' → logprob: -8.773049354553223
    8. 'max' → logprob: -9.523049354553223
    9. '(' → logprob: -9.648049354553223
    10. 'initial' → logprob: -9.898049354553223

Token 137: '(balance' (ID: 159939)
  Prédit: '(balance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(balance' → logprob: -0.004282822832465172
    2. 'balance' → logprob: -6.1292829513549805
    3. '(c' → logprob: -7.0042829513549805
    4. '((' → logprob: -7.0042829513549805
    5. '(b' → logprob: -8.87928295135498
    6. '(initial' → logprob: -9.50428295135498
    7. '(' → logprob: -10.50428295135498
    8. 'initial' → logprob: -11.75428295135498
    9. 'bal' → logprob: -12.12928295135498
    10. ' balance' → logprob: -12.12928295135498

Token 138: '*r' (ID: 92096)
  Prédit: '*r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*r' → logprob: -0.059289757162332535
    2. '*' → logprob: -2.9342896938323975
    3. '*c' → logprob: -5.684289932250977
    4. ' *' → logprob: -7.434289932250977
    5. '+' → logprob: -9.434289932250977
    6. '+r' → logprob: -9.559289932250977
    7. ')' → logprob: -9.559289932250977
    8. 'r' → logprob: -9.809289932250977
    9. '*t' → logprob: -10.184289932250977
    10. '*(' → logprob: -11.059289932250977

Token 139: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5790024995803833
    2. ')' → logprob: -0.8290024995803833
    3. '+' → logprob: -6.204002380371094
    4. '+c' → logprob: -7.704002380371094
    5. ' +' → logprob: -8.329002380371094
    6. '               ' → logprob: -8.454002380371094
    7. ')

' → logprob: -10.204002380371094
    8. ')
' → logprob: -10.454002380371094
    9. ')+' → logprob: -11.329002380371094
    10. '*' → logprob: -11.704002380371094

Token 140: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7802748680114746
    2. 'cum' → logprob: -1.0302748680114746
    3. ' cum' → logprob: -1.9052748680114746
    4. '           ' → logprob: -3.6552748680114746
    5. 'balance' → logprob: -5.905274868011475
    6. '       ' → logprob: -6.405274868011475
    7. '
' → logprob: -6.405274868011475
    8. 'c' → logprob: -6.530274868011475
    9. '+' → logprob: -7.280274868011475
    10. ' balance' → logprob: -7.530274868011475

Token 141: ' cum' (ID: 10023)
  Prédit: 'cum'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cum' (adapté à ' cum') → logprob: -0.13336694240570068
    2. 'balance' → logprob: -2.2583670616149902
    3. ' cum' → logprob: -4.00836706161499
    4. ' balance' → logprob: -6.75836706161499
    5. 'c' → logprob: -8.133366584777832
    6. 'if' → logprob: -8.383366584777832
    7. 'interest' → logprob: -8.383366584777832
    8. 'bal' → logprob: -9.633366584777832
    9. '           ' → logprob: -9.758366584777832
    10. '   ' → logprob: -10.383366584777832

Token 142: '_interest' (ID: 180237)
  Prédit: '_interest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_interest' → logprob: -0.00013691288768313825
    2. '_inter' → logprob: -9.625137329101562
    3. '+=' → logprob: -10.500137329101562
    4. 'interest' → logprob: -11.375137329101562
    5. '=' → logprob: -11.625137329101562
    6. '_balance' → logprob: -11.875137329101562
    7. '+' → logprob: -12.125137329101562
    8. '=_' → logprob: -12.875137329101562
    9. ' +=' → logprob: -13.625137329101562
    10. '_int' → logprob: -13.875137329101562

Token 143: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.019381405785679817
    2. '=' → logprob: -4.019381523132324
    3. ' +=' → logprob: -7.019381523132324
    4. '=c' → logprob: -8.644381523132324
    5. '+=(' → logprob: -9.019381523132324
    6. '+' → logprob: -11.269381523132324
    7. ']+=' → logprob: -11.269381523132324
    8. '+c' → logprob: -12.644381523132324
    9. '=sum' → logprob: -13.644381523132324
    10. '+='' → logprob: -13.644381523132324

Token 144: 'interest' (ID: 21931)
  Prédit: 'interest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interest' → logprob: -0.0005632805987261236
    2. ' interest' → logprob: -7.875563144683838
    3. 'int' → logprob: -9.000563621520996
    4. 'round' → logprob: -9.875563621520996
    5. 'balance' → logprob: -12.000563621520996
    6. 'inter' → logprob: -14.375563621520996
    7. ' ' → logprob: -15.750563621520996
    8. 'inte' → logprob: -15.875563621520996
    9. 'final' → logprob: -16.25056266784668
    10. '
' → logprob: -16.37556266784668

Token 145: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.46257463097572327
    2. '               ' → logprob: -1.0875746011734009
    3. 'balance' → logprob: -3.5875747203826904
    4. '           ' → logprob: -5.712574481964111
    5. ' balance' → logprob: -7.212574481964111
    6. '       ' → logprob: -7.837574481964111
    7. '
' → logprob: -8.33757495880127
    8. ',' → logprob: -8.71257495880127
    9. '<|end|>' → logprob: -8.71257495880127
    10. '                
' → logprob: -9.21257495880127

Token 146: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12333423644304276
    2. 'balance' → logprob: -2.6233341693878174
    3. '
' → logprob: -3.3733341693878174
    4. '```' → logprob: -5.4983344078063965
    5. ' balance' → logprob: -5.7483344078063965
    6. '           ' → logprob: -6.8733344078063965
    7. '       ' → logprob: -7.9983344078063965
    8. '
' → logprob: -9.123333930969238
    9. '   ' → logprob: -9.123333930969238
    10. '``' → logprob: -9.373333930969238

Token 147: ' balance' (ID: 10636)
  Prédit: 'balance'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'balance' (adapté à ' balance') → logprob: -0.013784989714622498
    2. ' balance' → logprob: -4.763784885406494
    3. 'if' → logprob: -6.013784885406494
    4. 'final' → logprob: -6.763784885406494
    5. 'c' → logprob: -7.513784885406494
    6. 'principal' → logprob: -8.388785362243652
    7. '#' → logprob: -8.638785362243652
    8. 'interest' → logprob: -8.638785362243652
    9. 'pass' → logprob: -9.388785362243652
    10. 'total' → logprob: -9.888785362243652

Token 148: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.23799633979797363
    2. '+=' → logprob: -1.9879963397979736
    3. '-=' → logprob: -2.6129963397979736
    4. '*=' → logprob: -7.4879961013793945
    5. '-' → logprob: -7.9879961013793945
    6. '=c' → logprob: -8.612996101379395
    7. 'balance' → logprob: -9.362996101379395
    8. '=b' → logprob: -9.362996101379395
    9. ' +=' → logprob: -9.612996101379395
    10. ' -=' → logprob: -10.112996101379395

Token 149: 'balance' (ID: 37647)
  Prédit: 'balance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'balance' → logprob: -0.0013648776803165674
    2. ' balance' → logprob: -6.876364707946777
    3. '(balance' → logprob: -8.751364707946777
    4. 'max' → logprob: -9.501364707946777
    5. 'round' → logprob: -10.376364707946777
    6. 'initial' → logprob: -10.501364707946777
    7. 'bal' → logprob: -10.876364707946777
    8. 'interest' → logprob: -12.501364707946777
    9. 'c' → logprob: -12.626364707946777
    10. 'ball' → logprob: -13.251364707946777

Token 150: ' -' (ID: 533)
  Prédit: '-c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-c' → logprob: -0.2109757661819458
    2. '+' → logprob: -2.4609756469726562
    3. '-' → logprob: -2.7109756469726562
    4. '+c' → logprob: -3.3359756469726562
    5. ' -' → logprob: -5.960975646972656
    6. ' +' → logprob: -8.710975646972656
    7. '+r' → logprob: -12.335975646972656
    8. '+-' → logprob: -12.335975646972656
    9. '+t' → logprob: -12.460975646972656
    10. '-growth' → logprob: -12.460975646972656

Token 151: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0003229494614060968
    2. ' c' → logprob: -8.625323295593262
    3. '(c' → logprob: -9.500323295593262
    4. 'interest' → logprob: -10.750323295593262
    5. 'round' → logprob: -11.500323295593262
    6. 'cum' → logprob: -12.125323295593262
    7. '	c' → logprob: -12.250323295593262
    8. '   ' → logprob: -12.625323295593262
    9. '           ' → logprob: -12.875323295593262
    10. 'balance' → logprob: -12.875323295593262

Token 152: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07479286193847656
    2. '
' → logprob: -3.1997928619384766
    3. '<|end|>' → logprob: -4.574792861938477
    4. ' +' → logprob: -5.449792861938477
    5. '       ' → logprob: -5.699792861938477
    6. '+
' → logprob: -5.949792861938477
    7. '           ' → logprob: -5.949792861938477
    8. '               ' → logprob: -6.199792861938477
    9. '```' → logprob: -6.449792861938477
    10. '        
' → logprob: -6.824792861938477

Token 153: '           ' (ID: 352)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'final' → logprob: -0.026148177683353424
    2. '           ' → logprob: -4.276148319244385
    3. '       ' → logprob: -5.276148319244385
    4. ' final' → logprob: -5.651148319244385
    5. 'balance' → logprob: -6.901148319244385
    6. '               ' → logprob: -7.026148319244385
    7. '```' → logprob: -8.026147842407227
    8. 'if' → logprob: -8.026147842407227
    9. 'total' → logprob: -8.526147842407227
    10. 'max' → logprob: -8.776147842407227

Token 154: ' final' (ID: 1721)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'final' (adapté à ' final') → logprob: -0.009469185955822468
    2. ' final' → logprob: -4.759469032287598
    3. '       ' → logprob: -7.884469032287598
    4. 'if' → logprob: -8.259469032287598
    5. '           ' → logprob: -9.509469032287598
    6. 'max' → logprob: -9.884469032287598
    7. '   ' → logprob: -10.634469032287598
    8. 'total' → logprob: -11.134469032287598
    9. ' if' → logprob: -11.384469032287598
    10. '
' → logprob: -11.384469032287598

Token 155: '=' (ID: 28)
  Prédit: '=c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=c' → logprob: -0.38868188858032227
    2. '=' → logprob: -1.1386818885803223
    3. '=b' → logprob: -6.638681888580322
    4. '=max' → logprob: -7.888681888580322
    5. ' =' → logprob: -9.763681411743164
    6. '=cut' → logprob: -10.888681411743164
    7. '=batch' → logprob: -11.388681411743164
    8. '=min' → logprob: -11.763681411743164
    9. '=int' → logprob: -12.763681411743164
    10. '=f' → logprob: -12.763681411743164

Token 156: 'balance' (ID: 37647)
  Prédit: 'balance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'balance' → logprob: -0.14395256340503693
    2. 'initial' → logprob: -2.2689526081085205
    3. 'cum' → logprob: -3.6439526081085205
    4. ' balance' → logprob: -5.893952369689941
    5. ' initial' → logprob: -7.643952369689941
    6. 'max' → logprob: -7.643952369689941
    7. 'bal' → logprob: -8.268952369689941
    8. ' cum' → logprob: -8.768952369689941
    9. '(balance' → logprob: -9.018952369689941
    10. 'interest' → logprob: -10.018952369689941

Token 157: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5010812878608704
    2. '<|end|>' → logprob: -1.3760812282562256
    3. ' if' → logprob: -3.2510812282562256
    4. ' +' → logprob: -3.3760812282562256
    5. 'if' → logprob: -3.5010812282562256
    6. '
' → logprob: -4.501081466674805
    7. '       ' → logprob: -4.626081466674805
    8. '   ' → logprob: -5.001081466674805
    9. '           ' → logprob: -5.751081466674805
    10. '+c' → logprob: -6.376081466674805

Token 158: 'cum' (ID: 89165)
  Prédit: 'cum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cum' → logprob: -0.00038074489566497505
    2. ' cum' → logprob: -7.875380516052246
    3. 'round' → logprob: -14.875380516052246
    4. 'int' → logprob: -15.125380516052246
    5. ' ' → logprob: -19.375381469726562
    6. '	c' → logprob: -20.000381469726562
    7. 'c' → logprob: -20.125381469726562
    8. 'cu' → logprob: -20.250381469726562
    9. 'ceil' → logprob: -20.500381469726562
    10. '   ' → logprob: -20.750381469726562

Token 159: '_interest' (ID: 180237)
  Prédit: '_interest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_interest' → logprob: -0.00019209683523513377
    2. '_inter' → logprob: -8.875191688537598
    3. 'interest' → logprob: -9.875191688537598
    4. 'inter' → logprob: -15.375191688537598
    5. 'Interest' → logprob: -15.750191688537598
    6. 'int' → logprob: -16.000192642211914
    7. ' interest' → logprob: -16.125192642211914
    8. '_income' → logprob: -17.000192642211914
    9. '_int' → logprob: -17.125192642211914
    10. '-interest' → logprob: -17.375192642211914

Token 160: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27417683601379395
    2. '
' → logprob: -1.524176836013794
    3. '<|end|>' → logprob: -4.399176597595215
    4. '        
' → logprob: -5.524176597595215
    5. ' if' → logprob: -6.149176597595215
    6. 'if' → logprob: -6.899176597595215
    7. '           ' → logprob: -7.149176597595215
    8. '   ' → logprob: -7.649176597595215
    9. '
' → logprob: -7.899176597595215
    10. '            
' → logprob: -8.899176597595215

Token 161: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.40492165088653564
    2. '<|end|>' → logprob: -1.2799216508865356
    3. '       ' → logprob: -3.279921531677246
    4. ' if' → logprob: -4.529921531677246
    5. 'if' → logprob: -6.154921531677246
    6. '<|end|>' → logprob: -7.029921531677246
    7. ' 
' → logprob: -7.154921531677246
    8. '        
' → logprob: -7.279921531677246
    9. '  
' → logprob: -7.654921531677246
    10. '            
' → logprob: -8.279921531677246

Token 162: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.31181520223617554
    2. 'if' (adapté à ' if') → logprob: -1.9368152618408203
    3. '
' → logprob: -2.3118152618408203
    4. '       ' → logprob: -4.43681526184082
    5. '   ' → logprob: -4.93681526184082
    6. 'max' → logprob: -6.18681526184082
    7. ' max' → logprob: -6.93681526184082
    8. '           ' → logprob: -7.06181526184082
    9. '        
' → logprob: -7.43681526184082
    10. ' 
' → logprob: -7.93681526184082

Token 163: ' final' (ID: 1721)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'final' → logprob: -0.5759429931640625
    2. ' final' → logprob: -0.8259429931640625
    3. '(final' → logprob: -12.700942993164062
    4. '	final' → logprob: -15.825942993164062
    5. '       ' → logprob: -16.075942993164062
    6. '   ' → logprob: -16.450942993164062
    7. '_final' → logprob: -16.950942993164062
    8. ' max' → logprob: -17.575942993164062
    9. '           ' → logprob: -17.825942993164062
    10. 'max' → logprob: -17.950942993164062

Token 164: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.1602286994457245
    2. ' >' → logprob: -1.9102287292480469
    3. ' ' → logprob: -13.785228729248047
    4. '   ' → logprob: -13.910228729248047
    5. '">' → logprob: -14.660228729248047
    6. '  ' → logprob: -14.660228729248047
    7. '<|end|>' → logprob: -14.785228729248047
    8. '>end' → logprob: -15.785228729248047
    9. ' ' → logprob: -16.035228729248047
    10. 'max' → logprob: -16.285228729248047

Token 165: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0009115827269852161
    2. ' max' → logprob: -7.000911712646484
    3. '   ' → logprob: -18.125911712646484
    4. '	max' → logprob: -18.250911712646484
    5. '       ' → logprob: -18.500911712646484
    6. '
' → logprob: -18.625911712646484
    7. '           ' → logprob: -19.250911712646484
    8. '(max' → logprob: -19.625911712646484
    9. '=max' → logprob: -19.750911712646484
    10. '0' → logprob: -20.000911712646484

Token 166: '_final' (ID: 46468)
  Prédit: '_final'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_final' → logprob: -2.2200749754119897e-06
    2. 'final' → logprob: -13.250001907348633
    3. '_max' → logprob: -15.125001907348633
    4. '_FINAL' → logprob: -17.375001907348633
    5. '_' → logprob: -17.750001907348633
    6. '_Final' → logprob: -18.000001907348633
    7. 'Final' → logprob: -18.250001907348633
    8. '```' → logprob: -18.250001907348633
    9. '_finalize' → logprob: -19.250001907348633
    10. ' final' → logprob: -19.375001907348633

Token 167: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09025408327579498
    2. ':
' → logprob: -2.465254068374634
    3. ':max' → logprob: -7.090254306793213
    4. '=max' → logprob: -8.215253829956055
    5. 'max' → logprob: -9.840253829956055
    6. '=' → logprob: -10.090253829956055
    7. ' :' → logprob: -10.465253829956055
    8. '           ' → logprob: -10.590253829956055
    9. '       ' → logprob: -10.590253829956055
    10. '   ' → logprob: -11.215253829956055

Token 168: '           ' (ID: 352)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.10961761325597763
    2. 'max' → logprob: -2.8596177101135254
    3. '           ' → logprob: -3.1096177101135254
    4. '       ' → logprob: -7.484617710113525
    5. '(max' → logprob: -8.109617233276367
    6. '=max' → logprob: -8.109617233276367
    7. '
' → logprob: -8.609617233276367
    8. ',max' → logprob: -9.234617233276367
    9. '0' → logprob: -9.484617233276367
    10. '	max' → logprob: -9.609617233276367

Token 169: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.2014227956533432
    2. ' max' → logprob: -1.7014228105545044
    3. '           ' → logprob: -11.826422691345215
    4. '
' → logprob: -13.576422691345215
    5. '               ' → logprob: -14.951422691345215
    6. '_max' → logprob: -15.326422691345215
    7. '	max' → logprob: -15.576422691345215
    8. '   ' → logprob: -16.07642364501953
    9. '(max' → logprob: -16.95142364501953
    10. '```' → logprob: -17.45142364501953

Token 170: '_final' (ID: 46468)
  Prédit: '_final'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_final' → logprob: -5.512236498361744e-07
    2. 'final' → logprob: -14.500000953674316
    3. '_max' → logprob: -17.5
    4. '_FINAL' → logprob: -17.875
    5. '_finalize' → logprob: -17.875
    6. '_' → logprob: -18.25
    7. '_Final' → logprob: -18.5
    8. '```' → logprob: -19.375
    9. 'Final' → logprob: -19.5
    10. ' final' → logprob: -20.375

Token 171: '=' (ID: 28)
  Prédit: '=max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=max' → logprob: -0.048873595893383026
    2. '=' → logprob: -3.0488736629486084
    3. ' =' → logprob: -8.173873901367188
    4. '=sys' → logprob: -13.673873901367188
    5. '=
' → logprob: -13.923873901367188
    6. '=f' → logprob: -14.298873901367188
    7. '=

' → logprob: -14.423873901367188
    8. '=len' → logprob: -15.048873901367188
    9. '=int' → logprob: -15.798873901367188
    10. '=value' → logprob: -15.798873901367188

Token 172: 'final' (ID: 17196)
  Prédit: 'final'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'final' → logprob: -1.306760805164231e-05
    2. ' final' → logprob: -11.25001335144043
    3. '(final' → logprob: -21.50001335144043
    4. '	final' → logprob: -23.87501335144043
    5. '   ' → logprob: -24.12501335144043
    6. '_final' → logprob: -24.75001335144043
    7. 'int' → logprob: -24.87501335144043
    8. 'fin' → logprob: -25.50001335144043
    9. '.final' → logprob: -25.50001335144043
    10. 'f' → logprob: -26.00001335144043

Token 173: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.033050987869501114
    2. '
' → logprob: -3.658051013946533
    3. '   ' → logprob: -5.783051013946533
    4. ' print' → logprob: -6.033051013946533
    5. ')
' → logprob: -7.783051013946533
    6. '    
' → logprob: -8.283050537109375
    7. ' 
' → logprob: -8.283050537109375
    8. ')' → logprob: -9.283050537109375
    9. '  
' → logprob: -9.408050537109375
    10. '<|end|>' → logprob: -9.908050537109375

Token 174: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006347153801470995
    2. ' print' → logprob: -5.381347179412842
    3. '
' → logprob: -6.881347179412842
    4. '   ' → logprob: -7.756347179412842
    5. '```' → logprob: -9.631346702575684
    6. '<|end|>' → logprob: -9.631346702575684
    7. ' 
' → logprob: -10.131346702575684
    8. '\n' → logprob: -10.506346702575684
    9. ')' → logprob: -10.506346702575684
    10. ')
' → logprob: -11.131346702575684

Token 175: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0001426346570951864
    2. ' print' → logprob: -8.875143051147461
    3. '
' → logprob: -13.750143051147461
    4. ')' → logprob: -14.000143051147461
    5. '   ' → logprob: -15.000143051147461
    6. '```' → logprob: -15.000143051147461
    7. ')
' → logprob: -16.12514305114746
    8. '(print' → logprob: -17.75014305114746
    9. '    
' → logprob: -18.00014305114746
    10. '#print' → logprob: -18.00014305114746

Token 176: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.00038169484469108284
    2. '(' → logprob: -8.000381469726562
    3. 'max' → logprob: -10.125381469726562
    4. '()' → logprob: -12.500381469726562
    5. ' (' → logprob: -13.500381469726562
    6. '(f' → logprob: -14.750381469726562
    7. ' max' → logprob: -15.000381469726562
    8. '('' → logprob: -15.750381469726562
    9. '=max' → logprob: -16.375381469726562
    10. '("' → logprob: -16.875381469726562

Token 177: '_final' (ID: 46468)
  Prédit: '_final'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_final' → logprob: -1.0280383548888494e-06
    2. '_max' → logprob: -14.000000953674316
    3. 'final' → logprob: -16.000001907348633
    4. 'Final' → logprob: -18.125001907348633
    5. '_finalize' → logprob: -18.250001907348633
    6. '_Final' → logprob: -18.625001907348633
    7. '_FINAL' → logprob: -19.000001907348633
    8. ' final' → logprob: -19.250001907348633
    9. '(final' → logprob: -19.500001907348633
    10. ')_' → logprob: -19.750001907348633

Token 178: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.45848218582978e-06
    2. ')
' → logprob: -13.62500286102295
    3. ' )' → logprob: -14.50000286102295
    4. ')`' → logprob: -15.37500286102295
    5. '`)' → logprob: -15.75000286102295
    6. '())' → logprob: -16.375001907348633
    7. '')' → logprob: -16.375001907348633
    8. '))' → logprob: -16.750001907348633
    9. '()' → logprob: -17.000001907348633
    10. ')}' → logprob: -17.500001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 176
Tokens correctement prédits (1ère position, stricte): 79
Tokens correctement prédits (1ère position, avec adaptation): 90
Tokens correctement prédits (top 10): 149
Précision stricte (1ère position): 44.89%
Précision adaptée (1ère position): 51.14%
Précision (top 10): 84.66%
================================================================================
