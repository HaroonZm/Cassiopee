================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:19:48
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from abc import ABC, abstractmethod
from typing import List


class WaterChargeTier(ABC):
    @abstractmethod
    def applicable_volume(self, volume: int) -> int:
        pass

    @abstractmethod
    def charge_for(self, volume: int) -> int:
        pass


class Tier1(WaterChargeTier):
    def __init__(self):
        self.basic_charge = 1150
        self.max_volume = 10

    def applicable_volume(self, volume: int) -> int:
        return min(volume, self.max_volume)

    def charge_for(self, volume: int) -> int:
        # For Tier 1, charge is fixed basic charge regardless usage up to 10 m3
        if volume > 0:
            return self.basic_charge
        else:
            return 0  # no charge if no usage


class Tier2(WaterChargeTier):
    def __init__(self):
        self.unit_price = 125
        self.start = 10
        self.end = 20

    def applicable_volume(self, volume: int) -> int:
        if volume <= self.start:
            return 0
        return min(volume, self.end) - self.start

    def charge_for(self, volume: int) -> int:
        v = self.applicable_volume(volume)
        return v * self.unit_price


class Tier3(WaterChargeTier):
    def __init__(self):
        self.unit_price = 140
        self.start = 20
        self.end = 30

    def applicable_volume(self, volume: int) -> int:
        if volume <= self.start:
            return 0
        return min(volume, self.end) - self.start

    def charge_for(self, volume: int) -> int:
        v = self.applicable_volume(volume)
        return v * self.unit_price


class Tier4(WaterChargeTier):
    def __init__(self):
        self.unit_price = 160
        self.start = 30

    def applicable_volume(self, volume: int) -> int:
        if volume <= self.start:
            return 0
        return volume - self.start

    def charge_for(self, volume: int) -> int:
        v = self.applicable_volume(volume)
        return v * self.unit_price


class WaterChargeCalculator:
    def __init__(self):
        self.tiers: List[WaterChargeTier] = [Tier1(), Tier2(), Tier3(), Tier4()]
        self.last_month_charge = 4280

    def calculate(self, volume: int) -> int:
        # sum charges from all tiers
        total = 0
        # Note: Tier1 returns basic charge only if volume > 0 to avoid charging if 0 usage
        # So order matters as Tier1 fixed charge is always there if usage positive
        total += self.tiers[0].charge_for(volume)
        for tier in self.tiers[1:]:
            total += tier.charge_for(volume)
        return total

    def calculate_savings(self, volume: int) -> int:
        current_charge = self.calculate(volume)
        return self.last_month_charge - current_charge


class InputHandler:
    def __init__(self, calculator: WaterChargeCalculator):
        self.calculator = calculator

    def process(self):
        while True:
            line = input().strip()
            if line == '-1':
                break
            try:
                w = int(line)
                if not (0 <= w <= 100):
                    # per problem constraint, but skip or ignore invalid inputs
                    continue
            except ValueError:
                continue
            savings = self.calculator.calculate_savings(w)
            print(savings)


def main():
    calculator = WaterChargeCalculator()
    handler = InputHandler(calculator)
    handler.process()


if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' abc' (ID: 75094)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' ABC' (ID: 33047)
  Prédit: ' ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ABC' → logprob: -0.3141176700592041
    2. 'ABC' → logprob: -1.314117670059204
    3. 'abc' → logprob: -8.814117431640625
    4. 'ABCDE' → logprob: -8.814117431640625
    5. 'AB' → logprob: -9.064117431640625
    6. ' A' → logprob: -9.314117431640625
    7. ' ' → logprob: -9.314117431640625
    8. 'abstract' → logprob: -9.689117431640625
    9. 'import' → logprob: -9.814117431640625
    10. ' abc' → logprob: -10.189117431640625

Token 4: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.08215300738811493
    2. ',' → logprob: -2.582153081893921
    3. 'import' → logprob: -6.707152843475342
    4. '```' → logprob: -7.582152843475342
    5. '.
' → logprob: -8.2071533203125
    6. ':' → logprob: -8.5821533203125
    7. '' → logprob: -8.5821533203125
    8. '.

' → logprob: -8.7071533203125
    9. '<|end|>' → logprob: -9.5821533203125
    10. ',
' → logprob: -9.5821533203125

Token 5: ' abstract' (ID: 13004)
  Prédit: 'abstract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.21897414326667786
    2. ' abstract' → logprob: -1.7189741134643555
    3. 'Abstract' → logprob: -4.0939741134643555
    4. '```' → logprob: -8.468974113464355
    5. ' ' → logprob: -8.718974113464355
    6. 'Meta' → logprob: -9.218974113464355
    7. '.abstract' → logprob: -9.343974113464355
    8. ' A' → logprob: -10.468974113464355
    9. ' Abstract' → logprob: -11.343974113464355
    10. '`' → logprob: -11.343974113464355

Token 6: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.002010241150856018
    2. 'm' → logprob: -6.252010345458984
    3. 'classmethod' → logprob: -10.502010345458984
    4. 'meth' → logprob: -10.752010345458984
    5. 'met' → logprob: -11.252010345458984
    6. 'me' → logprob: -11.752010345458984
    7. 'meta' → logprob: -13.002010345458984
    8. 'abstract' → logprob: -13.127010345458984
    9. 'staticmethod' → logprob: -13.252010345458984
    10. 'ethod' → logprob: -13.502010345458984

Token 7: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.053840529173612595
    2. '```' → logprob: -3.5538406372070312
    3. '

' → logprob: -4.803840637207031
    4. '\n' → logprob: -5.428840637207031
    5. 'class' → logprob: -5.553840637207031
    6. '
' → logprob: -5.928840637207031
    7. '\' → logprob: -6.928840637207031
    8. '' → logprob: -7.428840637207031
    9. '  
' → logprob: -7.553840637207031
    10. '``' → logprob: -7.553840637207031

Token 8: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1726326197385788
    2. '

' → logprob: -2.1726326942443848
    3. '```' → logprob: -3.5476326942443848
    4. 'class' → logprob: -4.422632694244385
    5. '' → logprob: -7.047632694244385
    6. '
' → logprob: -7.047632694244385
    7. '\n' → logprob: -7.672632694244385
    8. '``' → logprob: -7.672632694244385
    9. ' 

' → logprob: -8.297632217407227
    10. '
 
' → logprob: -8.672632217407227

Token 9: ' typing' (ID: 34152)
  Prédit: ' typing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.02580157481133938
    2. ' collections' → logprob: -4.025801658630371
    3. ' dat' → logprob: -5.525801658630371
    4. 'typing' → logprob: -6.525801658630371
    5. ' io' → logprob: -7.650801658630371
    6. ' abc' → logprob: -8.025801658630371
    7. ' os' → logprob: -8.275801658630371
    8. ' sys' → logprob: -8.400801658630371
    9. 'collections' → logprob: -8.650801658630371
    10. ' math' → logprob: -8.775801658630371

Token 10: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.06249941512942314
    2. 'import' → logprob: -2.812499523162842
    3. '.' → logprob: -9.062499046325684
    4. '```' → logprob: -9.187499046325684
    5. '<|end|>' → logprob: -9.562499046325684
    6. ' ' → logprob: -9.812499046325684
    7. '_import' → logprob: -10.062499046325684
    8. ' as' → logprob: -10.437499046325684
    9. '.import' → logprob: -10.687499046325684
    10. '	import' → logprob: -10.937499046325684

Token 11: ' List' (ID: 2655)
  Prédit: ' Any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Any' → logprob: -0.35420724749565125
    2. 'Any' → logprob: -1.4792072772979736
    3. ' List' → logprob: -3.8542072772979736
    4. ' Union' → logprob: -4.1042070388793945
    5. ' Protocol' → logprob: -4.3542070388793945
    6. ' Callable' → logprob: -4.7292070388793945
    7. 'List' → logprob: -5.8542070388793945
    8. 'Protocol' → logprob: -6.3542070388793945
    9. ' Optional' → logprob: -6.3542070388793945
    10. 'Union' → logprob: -6.4792070388793945

Token 12: '


' (ID: 2499)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.4728611409664154
    2. '
' → logprob: -1.2228611707687378
    3. '```' → logprob: -2.8478610515594482
    4. 'class' → logprob: -3.9728610515594482
    5. '``' → logprob: -6.347861289978027
    6. '\n' → logprob: -6.597861289978027
    7. '<|end|>' → logprob: -6.972861289978027
    8. '


' → logprob: -7.597861289978027
    9. ' class' → logprob: -8.222861289978027
    10. '
' → logprob: -8.472861289978027

Token 13: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -1.0683535037969705e-05
    2. '
' → logprob: -11.75001049041748
    3. ' class' → logprob: -13.62501049041748
    4. '```' → logprob: -13.75001049041748
    5. '"class' → logprob: -15.75001049041748
    6. 'clas' → logprob: -16.125011444091797
    7. '``' → logprob: -17.125011444091797
    8. '<class' → logprob: -17.250011444091797
    9. 'c' → logprob: -17.500011444091797
    10. 'cla' → logprob: -17.750011444091797

Token 14: ' Water' (ID: 12303)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.41723090410232544
    2. ' Abstract' → logprob: -1.1672308444976807
    3. ' ABC' → logprob: -4.91723108291626
    4. ' Object' → logprob: -5.91723108291626
    5. ' My' → logprob: -6.16723108291626
    6. ' Task' → logprob: -6.41723108291626
    7. ' Base' → logprob: -6.54223108291626
    8. ' Serializer' → logprob: -6.54223108291626
    9. ' Space' → logprob: -6.91723108291626
    10. ' AI' → logprob: -7.04223108291626

Token 15: 'Charge' (ID: 46218)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.49303460121154785
    2. ':' → logprob: -0.9930346012115479
    3. '():' → logprob: -4.368034362792969
    4. ':
' → logprob: -6.243034362792969
    5. 'Bottle' → logprob: -6.993034362792969
    6. ',' → logprob: -8.118034362792969
    7. 'Source' → logprob: -8.243034362792969
    8. 'Provider' → logprob: -8.743034362792969
    9. '(
' → logprob: -8.743034362792969
    10. 'Processor' → logprob: -8.868034362792969

Token 16: 'Tier' (ID: 79698)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02700556255877018
    2. ':' → logprob: -3.652005672454834
    3. '():' → logprob: -7.902005672454834
    4. '(Abstract' → logprob: -8.652005195617676
    5. 'Calculator' → logprob: -10.277005195617676
    6. '(Base' → logprob: -10.277005195617676
    7. '(:' → logprob: -11.277005195617676
    8. 'Calculation' → logprob: -11.527005195617676
    9. 'Calcul' → logprob: -12.152005195617676
    10. '):' → logprob: -12.152005195617676

Token 17: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0805475264787674
    2. ':' → logprob: -2.580547571182251
    3. '(Abstract' → logprob: -6.455547332763672
    4. ' :' → logprob: -9.955547332763672
    5. '():' → logprob: -11.080547332763672
    6. '):' → logprob: -12.455547332763672
    7. '(:' → logprob: -12.580547332763672
    8. ' (' → logprob: -12.580547332763672
    9. ':
' → logprob: -13.080547332763672
    10. ':**' → logprob: -13.455547332763672

Token 18: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.0001398929744027555
    2. ')' → logprob: -9.750140190124512
    3. 'Abstract' → logprob: -10.500140190124512
    4. '):' → logprob: -10.750140190124512
    5. ' ABC' → logprob: -10.875140190124512
    6. 'abstract' → logprob: -12.625140190124512
    7. 'abc' → logprob: -12.625140190124512
    8. ',' → logprob: -13.750140190124512
    9. 'int' → logprob: -13.750140190124512
    10. 'AB' → logprob: -13.750140190124512

Token 19: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00025871701654978096
    2. ')' → logprob: -8.375258445739746
    3. ':' → logprob: -11.000258445739746
    4. ' ):' → logprob: -12.625258445739746
    5. '):
' → logprob: -13.000258445739746
    6. '>):' → logprob: -13.250258445739746
    7. ',' → logprob: -13.500258445739746
    8. '>:' → logprob: -14.500258445739746
    9. '<|end|>' → logprob: -14.625258445739746
    10. ')>' → logprob: -14.875258445739746

Token 20: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2556881606578827
    2. '   ' → logprob: -1.505688190460205
    3. '    
' → logprob: -6.255688190460205
    4. ':
' → logprob: -6.755688190460205
    5. '
' → logprob: -9.130687713623047
    6. ' :' → logprob: -9.255687713623047
    7. '```' → logprob: -9.255687713623047
    8. '    ' → logprob: -9.630687713623047
    9. '  
' → logprob: -9.880687713623047
    10. '  ' → logprob: -10.130687713623047

Token 21: ' @' (ID: 759)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5912014245986938
    2. '
' → logprob: -0.9662014245986938
    3. '    
' → logprob: -3.2162013053894043
    4. ' 
' → logprob: -4.966201305389404
    5. 'def' → logprob: -5.466201305389404
    6. '```' → logprob: -5.591201305389404
    7. '\n' → logprob: -6.091201305389404
    8. ':' → logprob: -6.466201305389404
    9. '  
' → logprob: -7.091201305389404
    10. '' → logprob: -7.216201305389404

Token 22: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -8.2994620242971e-06
    2. 'ab' → logprob: -12.375008583068848
    3. 'abs' → logprob: -12.875008583068848
    4. 'staticmethod' → logprob: -14.750008583068848
    5. 'property' → logprob: -14.750008583068848
    6. 'abc' → logprob: -14.750008583068848
    7. 'classmethod' → logprob: -16.50000762939453
    8. ' abstract' → logprob: -16.75000762939453
    9. '.abstract' → logprob: -16.87500762939453
    10. 'a' → logprob: -17.75000762939453

Token 23: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.00524798734113574
    2. '_method' → logprob: -5.255248069763184
    3. 'meth' → logprob: -12.005248069763184
    4. 'classmethod' → logprob: -12.380248069763184
    5. '_' → logprob: -13.880248069763184
    6. 'staticmethod' → logprob: -14.130248069763184
    7. 'm' → logprob: -14.505248069763184
    8. 'abstract' → logprob: -14.755248069763184
    9. '_m' → logprob: -15.005248069763184
    10. 'ethod' → logprob: -15.505248069763184

Token 24: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7363834977149963
    2. 'def' → logprob: -0.7363834977149963
    3. ' def' → logprob: -3.8613834381103516
    4. '\' → logprob: -4.361383438110352
    5. '    
' → logprob: -5.861383438110352
    6. '(' → logprob: -6.236383438110352
    7. '   ' → logprob: -7.236383438110352
    8. '\n' → logprob: -7.861383438110352
    9. '(
' → logprob: -7.861383438110352
    10. '<|end|>' → logprob: -7.986383438110352

Token 25: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7030558586120605
    2. 'method' → logprob: -0.9530558586120605
    3. '
' → logprob: -2.5780558586120605
    4. '(' → logprob: -3.9530558586120605
    5. '    
' → logprob: -5.2030558586120605
    6. ' def' → logprob: -5.3280558586120605
    7. '_method' → logprob: -5.7030558586120605
    8. 'abstract' → logprob: -6.2030558586120605
    9. '(method' → logprob: -6.7030558586120605
    10. '('' → logprob: -7.2030558586120605

Token 26: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0004331725067459047
    2. ' def' → logprob: -8.000432968139648
    3. '
' → logprob: -10.250432968139648
    4. 'property' → logprob: -10.750432968139648
    5. 'classmethod' → logprob: -11.750432968139648
    6. '   ' → logprob: -12.000432968139648
    7. '```' → logprob: -12.375432968139648
    8. 'abstract' → logprob: -12.375432968139648
    9. 'staticmethod' → logprob: -12.500432968139648
    10. 'calculate' → logprob: -12.750432968139648

Token 27: ' applicable' (ID: 12781)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -0.01931079849600792
    2. 'calculate' → logprob: -4.39431095123291
    3. ' get' → logprob: -5.26931095123291
    4. ' apply' → logprob: -7.14431095123291
    5. ' compute' → logprob: -7.26931095123291
    6. 'get' → logprob: -10.26931095123291
    7. ' calc' → logprob: -10.76931095123291
    8. 'compute' → logprob: -11.39431095123291
    9. ' evaluate' → logprob: -11.51931095123291
    10. ' calculates' → logprob: -11.64431095123291

Token 28: '_volume' (ID: 64366)
  Prédit: '_amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_amount' → logprob: -0.6080853343009949
    2. '_' → logprob: -0.8580853343009949
    3. '_price' → logprob: -4.8580851554870605
    4. '_to' → logprob: -5.1080851554870605
    5. '(' → logprob: -5.3580851554870605
    6. '_fee' → logprob: -5.8580851554870605
    7. '_for' → logprob: -6.2330851554870605
    8. '_area' → logprob: -7.1080851554870605
    9. '_charge' → logprob: -7.2330851554870605
    10. '_token' → logprob: -7.2330851554870605

Token 29: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.02663581632077694
    2. '(' → logprob: -3.6516358852386475
    3. 's' → logprob: -8.526636123657227
    4. ')' → logprob: -10.401636123657227
    5. ' (' → logprob: -10.776636123657227
    6. '(s' → logprob: -11.151636123657227
    7. ':' → logprob: -11.276636123657227
    8. '_' → logprob: -11.651636123657227
    9. 'self' → logprob: -11.651636123657227
    10. '```' → logprob: -11.651636123657227

Token 30: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.48878905177116394
    2. ')' → logprob: -1.1137890815734863
    3. ',' → logprob: -2.9887890815734863
    4. ':' → logprob: -5.363789081573486
    5. 'self' → logprob: -6.363789081573486
    6. ')->' → logprob: -6.738789081573486
    7. ' ):' → logprob: -9.488788604736328
    8. '_self' → logprob: -9.988788604736328
    9. ' )' → logprob: -10.113788604736328
    10. ',)' → logprob: -10.363788604736328

Token 31: ' volume' (ID: 10945)
  Prédit: ' volume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' volume' → logprob: -0.3665606677532196
    2. ' self' → logprob: -1.741560697555542
    3. 'self' → logprob: -2.616560697555542
    4. 'volume' → logprob: -2.866560697555542
    5. ')' → logprob: -7.116560459136963
    6. 'vol' → logprob: -8.991560935974121
    7. ' )' → logprob: -9.241560935974121
    8. ' vol' → logprob: -9.741560935974121
    9. ' water' → logprob: -9.741560935974121
    10. ' consumption' → logprob: -9.804060935974121

Token 32: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004202105570584536
    2. '):' → logprob: -5.504201889038086
    3. ')' → logprob: -9.629201889038086
    4. ':int' → logprob: -10.004201889038086
    5. ' :' → logprob: -12.504201889038086
    6. ' ):' → logprob: -12.879201889038086
    7. '_volume' → logprob: -13.254201889038086
    8. ':)' → logprob: -13.504201889038086
    9. ',' → logprob: -14.754201889038086
    10. '):
' → logprob: -15.004201889038086

Token 33: ' int' (ID: 677)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.07415320724248886
    2. 'float' → logprob: -3.199153184890747
    3. ' int' → logprob: -3.824153184890747
    4. 'int' → logprob: -5.324153423309326
    5. ')' → logprob: -5.949153423309326
    6. ' ' → logprob: -6.824153423309326
    7. ' )' → logprob: -9.074152946472168
    8. 'flo' → logprob: -9.699152946472168
    9. '	float' → logprob: -10.449152946472168
    10. ' ' → logprob: -10.949152946472168

Token 34: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.52788148727268e-05
    2. '):' → logprob: -10.625064849853516
    3. ' )' → logprob: -11.125064849853516
    4. ',' → logprob: -11.125064849853516
    5. ':' → logprob: -11.750064849853516
    6. ')->' → logprob: -13.375064849853516
    7. ',)' → logprob: -14.375064849853516
    8. '   ' → logprob: -14.500064849853516
    9. '`)' → logprob: -15.500064849853516
    10. '=' → logprob: -15.875064849853516

Token 35: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.433829159708694e-05
    2. ':' → logprob: -10.62507438659668
    3. ' ->' → logprob: -10.75007438659668
    4. '->' → logprob: -11.12507438659668
    5. '   ' → logprob: -12.50007438659668
    6. ' )' → logprob: -12.50007438659668
    7. ')->' → logprob: -13.00007438659668
    8. ',' → logprob: -13.25007438659668
    9. '):' → logprob: -13.62507438659668
    10. ',)' → logprob: -14.50007438659668

Token 36: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0623956061899662
    2. ' int' → logprob: -2.8123955726623535
    3. 'List' → logprob: -8.312396049499512
    4. 'None' → logprob: -10.187396049499512
    5. 'bool' → logprob: -10.437396049499512
    6. ' List' → logprob: -10.562396049499512
    7. ' ' → logprob: -10.812396049499512
    8. '	int' → logprob: -10.937396049499512
    9. ' None' → logprob: -11.562396049499512
    10. '   ' → logprob: -11.937396049499512

Token 37: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00044127836008556187
    2. ':return' → logprob: -8.500441551208496
    3. '<|end|>' → logprob: -8.875441551208496
    4. ':
' → logprob: -10.125441551208496
    5. '):' → logprob: -10.375441551208496
    6. '   ' → logprob: -11.500441551208496
    7. ')' → logprob: -12.750441551208496
    8. ' :' → logprob: -12.875441551208496
    9. ':def' → logprob: -13.000441551208496
    10. '<|end|>' → logprob: -13.125441551208496

Token 38: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 39: ' pass' (ID: 1853)
  Prédit: ' pass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.3725137412548065
    2. 'pass' (adapté à ' pass') → logprob: -1.372513771057129
    3. '       ' → logprob: -3.122513771057129
    4. '...' → logprob: -4.747513771057129
    5. '\n' → logprob: -5.872513771057129
    6. '<|end|>' → logprob: -6.747513771057129
    7. '   ' → logprob: -8.872513771057129
    8. '	pass' → logprob: -8.997513771057129
    9. '\r' → logprob: -9.497513771057129
    10. ' ' → logprob: -9.497513771057129

Token 40: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5096014142036438
    2. '   ' → logprob: -1.634601354598999
    3. '<|end|>' → logprob: -2.009601354598999
    4. '

' → logprob: -3.884601354598999
    5. '    
' → logprob: -4.009601593017578
    6. ' 
' → logprob: -4.509601593017578
    7. '<|end|>' → logprob: -5.634601593017578
    8. 'n' → logprob: -5.634601593017578
    9. ' ' → logprob: -5.884601593017578
    10. '\n' → logprob: -6.009601593017578

Token 41: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.32434651255607605
    2. '   ' → logprob: -1.4493465423583984
    3. '    
' → logprob: -4.324346542358398
    4. 'class' → logprob: -4.449346542358398
    5. '<|end|>' → logprob: -4.574346542358398
    6. ' 
' → logprob: -6.324346542358398
    7. '

' → logprob: -6.574346542358398
    8. '<|end|>' → logprob: -6.949346542358398
    9. '```' → logprob: -7.574346542358398
    10. '\n' → logprob: -7.699346542358398

Token 42: ' @' (ID: 759)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46749603748321533
    2. '
' → logprob: -1.2174960374832153
    3. '<|end|>' → logprob: -3.092495918273926
    4. '    
' → logprob: -4.217495918273926
    5. ' ' → logprob: -5.467495918273926
    6. '<|end|>' → logprob: -5.717495918273926
    7. 'def' → logprob: -5.967495918273926
    8. ' 
' → logprob: -6.217495918273926
    9. '

' → logprob: -6.967495918273926
    10. 'newline' → logprob: -7.217495918273926

Token 43: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.0023819496855139732
    2. 'property' → logprob: -6.127381801605225
    3. 'staticmethod' → logprob: -8.752382278442383
    4. 'classmethod' → logprob: -10.627382278442383
    5. 'abc' → logprob: -11.252382278442383
    6. ' abstract' → logprob: -14.627382278442383
    7. 'abs' → logprob: -14.752382278442383
    8. 'app' → logprob: -15.377382278442383
    9. '.abstract' → logprob: -15.627382278442383
    10. 'override' → logprob: -16.252382278442383

Token 44: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.003482351079583168
    2. 'def' → logprob: -5.878482341766357
    3. '_method' → logprob: -7.503482341766357
    4. '<|end|>' → logprob: -10.378482818603516
    5. 'token' → logprob: -10.503482818603516
    6. ' method' → logprob: -11.128482818603516
    7. '	method' → logprob: -11.503482818603516
    8. 'staticmethod' → logprob: -11.878482818603516
    9. '.method' → logprob: -12.003482818603516
    10. 'ethod' → logprob: -12.253482818603516

Token 45: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12289977073669434
    2. 'def' → logprob: -2.2478997707366943
    3. ' def' → logprob: -4.997900009155273
    4. '
' → logprob: -5.997900009155273
    5. '\' → logprob: -8.372900009155273
    6. '<|end|>' → logprob: -8.497900009155273
    7. '    
' → logprob: -8.997900009155273
    8. ' 
' → logprob: -9.372900009155273
    9. '   ' → logprob: -10.122900009155273
    10. '```' → logprob: -10.497900009155273

Token 46: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007597992196679115
    2. 'method' → logprob: -5.257597923278809
    3. '
' → logprob: -6.382597923278809
    4. ' def' → logprob: -7.382597923278809
    5. 'classmethod' → logprob: -10.882597923278809
    6. 'staticmethod' → logprob: -11.632597923278809
    7. 'property' → logprob: -12.632597923278809
    8. 'definition' → logprob: -12.632597923278809
    9. '   ' → logprob: -12.882597923278809
    10. '    
' → logprob: -13.132597923278809

Token 47: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.17771175503730774
    2. 'property' → logprob: -2.4277117252349854
    3. 'classmethod' → logprob: -3.6777117252349854
    4. 'method' → logprob: -4.0527119636535645
    5. 'staticmethod' → logprob: -4.5527119636535645
    6. 'float' → logprob: -4.5527119636535645
    7. '
' → logprob: -4.6777119636535645
    8. ' def' → logprob: -7.6777119636535645
    9. 'int' → logprob: -8.427711486816406
    10. 'fee' → logprob: -8.677711486816406

Token 48: ' charge' (ID: 8363)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -0.4237465560436249
    2. ' get' → logprob: -2.0487465858459473
    3. 'calculate' → logprob: -2.0487465858459473
    4. ' unit' → logprob: -3.2987465858459473
    5. 'get' → logprob: -4.298746585845947
    6. ' cost' → logprob: -4.673746585845947
    7. ' compute' → logprob: -5.298746585845947
    8. 'def' → logprob: -5.423746585845947
    9. ' rate' → logprob: -5.423746585845947
    10. ' def' → logprob: -5.423746585845947

Token 49: '_for' (ID: 11903)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.03837549313902855
    2. '(' → logprob: -3.7883753776550293
    3. '_amount' → logprob: -4.538375377655029
    4. '_per' → logprob: -5.663375377655029
    5. '_' → logprob: -8.038375854492188
    6. '   ' → logprob: -8.788375854492188
    7. 's' → logprob: -9.163375854492188
    8. '```' → logprob: -9.538375854492188
    9. '_for' → logprob: -9.663375854492188
    10. '_rate' → logprob: -10.163375854492188

Token 50: '(self' (ID: 2402)
  Prédit: '_volume'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_volume' → logprob: -0.014797737821936607
    2. '<|end|>' → logprob: -5.514797687530518
    3. '_' → logprob: -6.014797687530518
    4. '(self' → logprob: -6.264797687530518
    5. '<|end|>' → logprob: -6.639797687530518
    6. 'volume' → logprob: -6.764797687530518
    7. '_amount' → logprob: -6.764797687530518
    8. '(volume' → logprob: -7.889797687530518
    9. '_charge' → logprob: -8.139798164367676
    10. ' volume' → logprob: -8.514798164367676

Token 51: ',' (ID: 11)
  Prédit: '_volume'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_volume' → logprob: -0.12277926504611969
    2. 'volume' → logprob: -2.872779369354248
    3. ')' → logprob: -3.372779369354248
    4. ',' → logprob: -4.497779369354248
    5. '_' → logprob: -5.122779369354248
    6. ' volume' → logprob: -5.872779369354248
    7. ' )' → logprob: -6.872779369354248
    8. 'self' → logprob: -7.372779369354248
    9. '<|end|>' → logprob: -7.497779369354248
    10. '_amount' → logprob: -7.622779369354248

Token 52: ' volume' (ID: 10945)
  Prédit: ' volume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' volume' → logprob: -0.14793962240219116
    2. 'volume' → logprob: -2.022939682006836
    3. 'self' → logprob: -5.897939682006836
    4. ' self' → logprob: -6.022939682006836
    5. ' volumen' → logprob: -10.897939682006836
    6. '<|end|>' → logprob: -11.772939682006836
    7. ' amount' → logprob: -11.897939682006836
    8. 'amount' → logprob: -12.147939682006836
    9. 'vol' → logprob: -12.147939682006836
    10. '```' → logprob: -12.522939682006836

Token 53: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003583456273190677
    2. ')' → logprob: -8.625358581542969
    3. '):' → logprob: -9.000358581542969
    4. ':int' → logprob: -10.250358581542969
    5. '<|end|>' → logprob: -12.375358581542969
    6. '_volume' → logprob: -12.500358581542969
    7. ' :' → logprob: -12.750358581542969
    8. '<|end|>' → logprob: -12.750358581542969
    9. ',' → logprob: -13.500358581542969
    10. ' )' → logprob: -13.625358581542969

Token 54: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.31328681111335754
    2. ' int' → logprob: -1.3132867813110352
    3. ')' → logprob: -10.938286781311035
    4. '[int' → logprob: -13.188286781311035
    5. ':int' → logprob: -13.188286781311035
    6. ' ' → logprob: -14.313286781311035
    7. '	int' → logprob: -14.438286781311035
    8. '=int' → logprob: -14.563286781311035
    9. '<|end|>' → logprob: -14.563286781311035
    10. ' )' → logprob: -14.813286781311035

Token 55: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00022797346173319966
    2. '):' → logprob: -8.500227928161621
    3. '   ' → logprob: -11.000227928161621
    4. ':' → logprob: -12.375227928161621
    5. ' )' → logprob: -12.750227928161621
    6. '       ' → logprob: -15.000227928161621
    7. ')->' → logprob: -15.250227928161621
    8. '):
' → logprob: -16.375228881835938
    9. ' ' → logprob: -16.750228881835938
    10. '`)' → logprob: -17.000228881835938

Token 56: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.6112406253814697
    2. ')' → logprob: -1.1112406253814697
    3. '->' → logprob: -2.1112406253814697
    4. ':' → logprob: -5.861240386962891
    5. ')->' → logprob: -5.861240386962891
    6. '   ' → logprob: -6.736240386962891
    7. '>' → logprob: -10.11124038696289
    8. '):' → logprob: -10.11124038696289
    9. '(' → logprob: -10.61124038696289
    10. '()' → logprob: -10.86124038696289

Token 57: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.7588772177696228
    2. ' float' → logprob: -0.7588772177696228
    3. 'int' → logprob: -2.8838772773742676
    4. 'float' → logprob: -4.883877277374268
    5. ' ' → logprob: -9.75887680053711
    6. ' ' → logprob: -10.25887680053711
    7. '   ' → logprob: -10.88387680053711
    8. '	float' → logprob: -12.13387680053711
    9. '    ' → logprob: -12.75887680053711
    10. ' None' → logprob: -13.13387680053711

Token 58: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02453167550265789
    2. '<|end|>' → logprob: -3.774531602859497
    3. '   ' → logprob: -8.149531364440918
    4. '):' → logprob: -8.399531364440918
    5. ':return' → logprob: -8.524531364440918
    6. '       ' → logprob: -8.649531364440918
    7. '<|end|>' → logprob: -8.899531364440918
    8. ' :' → logprob: -9.399531364440918
    9. ':
' → logprob: -9.524531364440918
    10. '():' → logprob: -10.024531364440918

Token 59: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 60: ' pass' (ID: 1853)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' (adapté à ' pass') → logprob: -0.45306798815727234
    2. '       ' → logprob: -1.3280680179595947
    3. ' pass' → logprob: -2.3280680179595947
    4. '   ' → logprob: -6.578067779541016
    5. '<|end|>' → logprob: -8.453067779541016
    6. '    ' → logprob: -9.578067779541016
    7. '	pass' → logprob: -9.703067779541016
    8. '```' → logprob: -10.578067779541016
    9. '        ' → logprob: -10.828067779541016
    10. '\n' → logprob: -11.328067779541016

Token 61: '


' (ID: 2499)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4777195155620575
    2. '

' → logprob: -1.2277195453643799
    3. 'class' → logprob: -2.47771954536438
    4. '


' → logprob: -6.227719306945801
    5. '```' → logprob: -7.477719306945801
    6. ' class' → logprob: -9.2277193069458
    7. '\n' → logprob: -9.6027193069458
    8. '<|end|>' → logprob: -9.7277193069458
    9. '<class' → logprob: -10.8527193069458
    10. '
' → logprob: -10.9777193069458

Token 62: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0625162124633789
    2. '
' → logprob: -2.812516212463379
    3. '

' → logprob: -7.687516212463379
    4. '```' → logprob: -9.562516212463379
    5. '
' → logprob: -11.562516212463379
    6. ' class' → logprob: -12.687516212463379
    7. '  
' → logprob: -13.187516212463379
    8. '<class' → logprob: -13.937516212463379
    9. '


' → logprob: -14.187516212463379
    10. '    
' → logprob: -14.562516212463379

Token 63: ' Tier' (ID: 44983)
  Prédit: ' Basic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Basic' → logprob: -0.38038453459739685
    2. ' Flat' → logprob: -1.6303845643997192
    3. ' Fixed' → logprob: -2.7553844451904297
    4. ' Single' → logprob: -4.13038444519043
    5. ' Linear' → logprob: -4.75538444519043
    6. ' Tier' → logprob: -4.88038444519043
    7. ' Residential' → logprob: -5.38038444519043
    8. ' Water' → logprob: -5.63038444519043
    9. ' Simple' → logprob: -5.75538444519043
    10. 'Flat' → logprob: -6.00538444519043

Token 64: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.44116175174713135
    2. 'One' → logprob: -1.1911617517471313
    3. 'ed' → logprob: -3.316161632537842
    4. '0' → logprob: -4.191161632537842
    5. '(' → logprob: -7.816161632537842
    6. 'Zero' → logprob: -7.816161632537842
    7. ':' → logprob: -7.941161632537842
    8. 'A' → logprob: -9.066162109375
    9. 'Water' → logprob: -10.816162109375
    10. ' ' → logprob: -10.816162109375

Token 65: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.03836551308631897
    2. '(' → logprob: -3.538365602493286
    3. ':' → logprob: -4.913365364074707
    4. 'Water' → logprob: -6.913365364074707
    5. ' :' → logprob: -8.913365364074707
    6. 'Charge' → logprob: -9.788365364074707
    7. ' (' → logprob: -11.663365364074707
    8. 'W' → logprob: -12.038365364074707
    9. '():' → logprob: -12.038365364074707
    10. 'Volume' → logprob: -12.038365364074707

Token 66: 'ater' (ID: 1005)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6067054271697998
    2. 'ater' → logprob: -0.8567054271697998
    3. 'ate' → logprob: -4.106705665588379
    4. 'at' → logprob: -4.356705665588379
    5. '1' → logprob: -8.731705665588379
    6. '```' → logprob: -9.106705665588379
    7. ')' → logprob: -9.231705665588379
    8. 'Water' → logprob: -9.356705665588379
    9. '   ' → logprob: -9.356705665588379
    10. 'ATER' → logprob: -10.669205665588379

Token 67: 'Charge' (ID: 46218)
  Prédit: 'Charge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Charge' → logprob: -5.676981345459353e-06
    2. ' Charge' → logprob: -12.375005722045898
    3. 'C' → logprob: -14.625005722045898
    4. '_charge' → logprob: -14.625005722045898
    5. 'charge' → logprob: -16.0000057220459
    6. 'Charg' → logprob: -16.2500057220459
    7. ')' → logprob: -17.1250057220459
    8. 'Char' → logprob: -17.3750057220459
    9. 'Charges' → logprob: -17.7500057220459
    10. '```' → logprob: -17.8750057220459

Token 68: 'Tier' (ID: 79698)
  Prédit: 'Tier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tier' → logprob: -0.00798596628010273
    2. 'Charge' → logprob: -5.132986068725586
    3. ')' → logprob: -6.882986068725586
    4. 'T' → logprob: -8.382986068725586
    5. 'Volume' → logprob: -8.632986068725586
    6. '```' → logprob: -8.882986068725586
    7. 'er' → logprob: -9.132986068725586
    8. '(T' → logprob: -9.632986068725586
    9. '(' → logprob: -9.632986068725586
    10. '):' → logprob: -10.382986068725586

Token 69: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004630315117537975
    2. '):
' → logprob: -5.379630088806152
    3. '):
' → logprob: -12.504630088806152
    4. ':' → logprob: -12.754630088806152
    5. ')' → logprob: -13.129630088806152
    6. '):

' → logprob: -14.129630088806152
    7. '   ' → logprob: -15.129630088806152
    8. ' ):' → logprob: -15.379630088806152
    9. ',' → logprob: -15.629630088806152
    10. '():' → logprob: -17.12963104248047

Token 70: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25554922223091125
    2. ':' → logprob: -1.5055491924285889
    3. ' def' → logprob: -6.505549430847168
    4. 'def' → logprob: -7.630549430847168
    5. '<|end|>' → logprob: -7.630549430847168
    6. ':
' → logprob: -8.630549430847168
    7. '4' → logprob: -8.755549430847168
    8. '    
' → logprob: -9.005549430847168
    9. '    ' → logprob: -9.380549430847168
    10. '
' → logprob: -9.630549430847168

Token 71: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.8435754776000977
    2. 'def' (adapté à ' def') → logprob: -0.8435754776000977
    3. '   ' → logprob: -1.9685754776000977
    4. '    ' → logprob: -13.218575477600098
    5. '	def' → logprob: -14.468575477600098
    6. '```' → logprob: -14.468575477600098
    7. ' indentation' → logprob: -14.593575477600098
    8. ' ' → logprob: -14.593575477600098
    9. '  ' → logprob: -15.093575477600098
    10. 'IND' → logprob: -15.593575477600098

Token 72: ' __' (ID: 2516)
  Prédit: ' applicable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' applicable' → logprob: -0.0010590101592242718
    2. 'app' → logprob: -7.001059055328369
    3. '_app' → logprob: -9.251058578491211
    4. ' def' → logprob: -11.251058578491211
    5. ' ' → logprob: -11.376058578491211
    6. ' ' → logprob: -11.876058578491211
    7. 'def' → logprob: -12.001058578491211
    8. ' app' → logprob: -12.251058578491211
    9. ' __' → logprob: -13.001058578491211
    10. ' _' → logprob: -13.001058578491211

Token 73: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. 'ini' → logprob: -16.875
    3. 'app' → logprob: -17.125
    4. 'in' → logprob: -17.75
    5. 'inite' → logprob: -18.75
    6. 'ap' → logprob: -18.875
    7. 'int' → logprob: -19.75
    8. ' init' → logprob: -19.75
    9. 'call' → logprob: -21.0
    10. 'i' → logprob: -21.0

Token 74: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0031682176049798727
    2. '__' → logprob: -6.253168106079102
    3. '(self' → logprob: -6.753168106079102
    4. '__(
' → logprob: -10.503168106079102
    5. '(' → logprob: -10.878168106079102
    6. '__((' → logprob: -11.503168106079102
    7. ' (' → logprob: -11.878168106079102
    8. '_(' → logprob: -12.878168106079102
    9. '__('' → logprob: -13.628168106079102
    10. 'self' → logprob: -13.628168106079102

Token 75: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01819700375199318
    2. ' self' → logprob: -4.018197059631348
    3. ')' → logprob: -10.893197059631348
    4. '   ' → logprob: -11.768197059631348
    5. '       ' → logprob: -11.893197059631348
    6. ' ' → logprob: -12.018197059631348
    7. '0' → logprob: -12.893197059631348
    8. ',' → logprob: -13.018197059631348
    9. '	self' → logprob: -13.518197059631348
    10. '    ' → logprob: -15.143197059631348

Token 76: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011065175058320165
    2. 'self' → logprob: -7.1261067390441895
    3. ' ,' → logprob: -8.751106262207031
    4. ')' → logprob: -9.626106262207031
    5. '(self' → logprob: -10.626106262207031
    6. ',self' → logprob: -10.626106262207031
    7. '):' → logprob: -10.876106262207031
    8. ' ' → logprob: -12.126106262207031
    9. '   ' → logprob: -13.501106262207031
    10. ' self' → logprob: -13.626106262207031

Token 77: '       ' (ID: 309)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.44087129831314087
    2. 'self' → logprob: -1.065871238708496
    3. ' ' → logprob: -5.440871238708496
    4. '100' → logprob: -5.940871238708496
    5. '20' → logprob: -6.815871238708496
    6. '       ' → logprob: -7.065871238708496
    7. '10' → logprob: -7.190871238708496
    8. '0' → logprob: -7.190871238708496
    9. '   ' → logprob: -8.065871238708496
    10. '50' → logprob: -8.065871238708496

Token 78: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.37373679876327515
    2. ' self' → logprob: -1.49873685836792
    3. '       ' → logprob: -2.49873685836792
    4. ' super' → logprob: -6.37373685836792
    5. 'pass' → logprob: -6.62373685836792
    6. 'super' → logprob: -6.74873685836792
    7. ' pass' → logprob: -7.62373685836792
    8. ' ' → logprob: -7.74873685836792
    9. '   ' → logprob: -7.74873685836792
    10. '
' → logprob: -8.373736381530762

Token 79: '.basic' (ID: 64834)
  Prédit: '._'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '._' → logprob: -0.1722816824913025
    2. '_volume' → logprob: -2.6722817420959473
    3. '_max' → logprob: -3.2972817420959473
    4. '_limit' → logprob: -4.047281742095947
    5. '_charge' → logprob: -4.922281742095947
    6. '_amount' → logprob: -5.172281742095947
    7. '_capacity' → logprob: -5.797281742095947
    8. '_range' → logprob: -6.297281742095947
    9. '_threshold' → logprob: -6.297281742095947
    10. '_rate' → logprob: -6.422281742095947

Token 80: '_charge' (ID: 110838)
  Prédit: '_charge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_charge' → logprob: -0.9244524240493774
    2. '_volume' → logprob: -1.1744524240493774
    3. '_qu' → logprob: -2.174452304840088
    4. '_limit' → logprob: -2.424452304840088
    5. '_allow' → logprob: -3.799452304840088
    6. '_unit' → logprob: -3.799452304840088
    7. '_units' → logprob: -4.049452304840088
    8. '_fee' → logprob: -4.049452304840088
    9. '_rate' → logprob: -5.299452304840088
    10. '_amount' → logprob: -6.674452304840088

Token 81: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0430578850209713
    2. '=' → logprob: -3.168057918548584
    3. ':' → logprob: -11.418057441711426
    4. ' ' → logprob: -11.543057441711426
    5. '   ' → logprob: -11.793057441711426
    6. '_' → logprob: -11.793057441711426
    7. 's' → logprob: -11.918057441711426
    8. '_amount' → logprob: -11.918057441711426
    9. '  ' → logprob: -12.918057441711426
    10. '<|end|>' → logprob: -14.168057441711426

Token 82: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.8300555348396301
    2. ' ' → logprob: -1.9550554752349854
    3. '500' → logprob: -2.0800554752349854
    4. '50' → logprob: -2.5800554752349854
    5. '10' → logprob: -2.9550554752349854
    6. '20' → logprob: -3.3300554752349854
    7. '300' → logprob: -3.5800554752349854
    8. '200' → logprob: -3.8300554752349854
    9. '30' → logprob: -4.0800557136535645
    10. '15' → logprob: -4.7050557136535645

Token 83: '115' (ID: 11999)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.8413655757904053
    2. '500' → logprob: -1.8413655757904053
    3. '300' → logprob: -2.4663655757904053
    4. '30' → logprob: -2.9663655757904053
    5. '15' → logprob: -3.2163655757904053
    6. '50' → logprob: -3.4663655757904053
    7. '200' → logprob: -3.4663655757904053
    8. '10' → logprob: -3.5913655757904053
    9. '167' → logprob: -3.5913655757904053
    10. '150' → logprob: -3.9663655757904053

Token 84: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11441967636346817
    2. '       ' → logprob: -2.48941969871521
    3. '000' → logprob: -4.614419460296631
    4. '   ' → logprob: -5.364419460296631
    5. '        ' → logprob: -6.239419460296631
    6. '    
' → logprob: -6.239419460296631
    7. ',' → logprob: -6.614419460296631
    8. '    ' → logprob: -6.739419460296631
    9. '        
' → logprob: -7.489419460296631
    10. 'self' → logprob: -7.489419460296631

Token 85: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6344673037528992
    2. '
' → logprob: -1.509467363357544
    3. '<|end|>' → logprob: -1.509467363357544
    4. '   ' → logprob: -4.384467124938965
    5. '    
' → logprob: -5.884467124938965
    6. '        ' → logprob: -5.884467124938965
    7. '<|end|>' → logprob: -6.134467124938965
    8. '    ' → logprob: -6.134467124938965
    9. 'self' → logprob: -6.259467124938965
    10. ' ' → logprob: -6.884467124938965

Token 86: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0995841026306152
    2. '<|end|>' → logprob: -1.2245841026306152
    3. '    
' → logprob: -1.5995841026306152
    4. ' ' → logprob: -2.9745841026306152
    5. '   ' → logprob: -3.0995841026306152
    6. '    ' → logprob: -3.0995841026306152
    7. ' 
' → logprob: -5.099584102630615
    8. '       ' → logprob: -5.349584102630615
    9. '' → logprob: -5.724584102630615
    10. '        ' → logprob: -5.849584102630615

Token 87: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00252512632869184
    2. ' self' → logprob: -6.752525329589844
    3. '       ' → logprob: -7.127525329589844
    4. 'super' → logprob: -7.627525329589844
    5. 'def' → logprob: -10.502525329589844
    6. '   ' → logprob: -11.752525329589844
    7. '	self' → logprob: -12.752525329589844
    8. '100' → logprob: -12.877525329589844
    9. ' ' → logprob: -12.877525329589844
    10. 'pass' → logprob: -13.127525329589844

Token 88: '.max' (ID: 11883)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4686080515384674
    2. '._' → logprob: -2.5936081409454346
    3. '_rate' → logprob: -2.8436081409454346
    4. '_limit' → logprob: -3.0936081409454346
    5. '_max' → logprob: -3.4686081409454346
    6. '_volume' → logprob: -3.9686081409454346
    7. '_charge' → logprob: -3.9686081409454346
    8. '.rate' → logprob: -4.2186079025268555
    9. '.basic' → logprob: -4.2186079025268555
    10. '.volume' → logprob: -4.5936079025268555

Token 89: '_volume' (ID: 64366)
  Prédit: '_volume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_volume' → logprob: -0.0009056262206286192
    2. '_' → logprob: -7.375905513763428
    3. '_usage' → logprob: -8.875905990600586
    4. '_limit' → logprob: -9.875905990600586
    5. '_vol' → logprob: -10.375905990600586
    6. '_capacity' → logprob: -11.375905990600586
    7. 'volume' → logprob: -11.500905990600586
    8. '_unit' → logprob: -11.625905990600586
    9. 'imum' → logprob: -12.250905990600586
    10. '_quantity' → logprob: -13.250905990600586

Token 90: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011113489978015423
    2. '=' → logprob: -4.51111364364624
    3. '<|end|>' → logprob: -10.011113166809082
    4. ' ' → logprob: -11.636113166809082
    5. 's' → logprob: -12.386113166809082
    6. '<|end|>' → logprob: -12.886113166809082
    7. '  ' → logprob: -13.636113166809082
    8. '```' → logprob: -13.636113166809082
    9. '1' → logprob: -14.261113166809082
    10. '_' → logprob: -14.886113166809082

Token 91: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.0507972240447998
    2. '30' → logprob: -1.0507972240447998
    3. '20' → logprob: -2.0507972240448
    4. '15' → logprob: -2.6757972240448
    5. '5' → logprob: -3.3007972240448
    6. ' ' → logprob: -3.6757972240448
    7. '100' → logprob: -4.050797462463379
    8. '3' → logprob: -4.800797462463379
    9. '50' → logprob: -4.800797462463379
    10. '300' → logprob: -6.300797462463379

Token 92: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.5273625254631042
    2. '15' → logprob: -1.777362585067749
    3. '30' → logprob: -1.777362585067749
    4. '20' → logprob: -3.152362585067749
    5. '5' → logprob: -4.65236234664917
    6. '100' → logprob: -5.02736234664917
    7. '50' → logprob: -5.65236234664917
    8. '3' → logprob: -5.77736234664917
    9. '200' → logprob: -7.15236234664917
    10. '300' → logprob: -7.15236234664917

Token 93: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 94: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07421385496854782
    2. '    
' → logprob: -3.699213743209839
    3. '   ' → logprob: -3.824213743209839
    4. '<|end|>' → logprob: -4.324213981628418
    5. 'def' → logprob: -4.949213981628418
    6. '  
' → logprob: -6.199213981628418
    7. ' 
' → logprob: -7.074213981628418
    8. '   
' → logprob: -7.574213981628418
    9. ' def' → logprob: -8.324213981628418
    10. '

' → logprob: -8.449213981628418

Token 95: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.032205019146203995
    2. ' def' → logprob: -4.032205104827881
    3. '   ' → logprob: -4.282205104827881
    4. ' ' → logprob: -9.657204627990723
    5. '    
' → logprob: -10.657204627990723
    6. '  ' → logprob: -10.907204627990723
    7. '
' → logprob: -11.282204627990723
    8. '	def' → logprob: -11.532204627990723
    9. '  
' → logprob: -12.657204627990723
    10. ' 
' → logprob: -12.782204627990723

Token 96: ' applicable' (ID: 12781)
  Prédit: ' applicable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' applicable' → logprob: -0.01861891709268093
    2. 'app' → logprob: -4.018619060516357
    3. '_app' → logprob: -8.1436185836792
    4. ' app' → logprob: -9.6436185836792
    5. ' ' → logprob: -10.1436185836792
    6. 'def' → logprob: -10.6436185836792
    7. ' def' → logprob: -11.2686185836792
    8. ' ' → logprob: -11.8936185836792
    9. '.app' → logprob: -11.8936185836792
    10. '_' → logprob: -12.1436185836792

Token 97: '_volume' (ID: 64366)
  Prédit: '_volume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_volume' → logprob: -0.00043496055877767503
    2. '_' → logprob: -7.750434875488281
    3. ' _' → logprob: -13.250434875488281
    4. '_amount' → logprob: -14.250434875488281
    5. '_vol' → logprob: -14.875434875488281
    6. '_space' → logprob: -15.125434875488281
    7. '_value' → logprob: -15.250434875488281
    8. '_voltage' → logprob: -15.500434875488281
    9. '_version' → logprob: -15.875434875488281
    10. '_VOLUME' → logprob: -16.25043487548828

Token 98: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.4201922118663788
    2. ' (' → logprob: -1.1701922416687012
    3. '(' → logprob: -3.420192241668701
    4. ' ' → logprob: -10.295191764831543
    5. '(volume' → logprob: -11.170191764831543
    6. ' self' → logprob: -12.295191764831543
    7. '   ' → logprob: -12.670191764831543
    8. '(
' → logprob: -13.420191764831543
    9. '(space' → logprob: -13.670191764831543
    10. '       ' → logprob: -13.795191764831543

Token 99: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01604093797504902
    2. ' ,' → logprob: -4.141040802001953
    3. '(volume' → logprob: -13.016040802001953
    4. ')' → logprob: -13.891040802001953
    5. '<|end|>' → logprob: -14.016040802001953
    6. ',value' → logprob: -14.266040802001953
    7. '):' → logprob: -15.141040802001953
    8. ',
' → logprob: -15.266040802001953
    9. 'self' → logprob: -15.266040802001953
    10. ' ' → logprob: -15.516040802001953

Token 100: ' volume' (ID: 10945)
  Prédit: ' volume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' volume' → logprob: -0.004622253589332104
    2. 'volume' → logprob: -5.379622459411621
    3. ' ' → logprob: -14.379622459411621
    4. ' self' → logprob: -14.754622459411621
    5. ' volumen' → logprob: -14.879622459411621
    6. '(volume' → logprob: -15.254622459411621
    7. 'Volume' → logprob: -15.754622459411621
    8. '_volume' → logprob: -16.379621505737305
    9. 'self' → logprob: -16.379621505737305
    10. ' vol' → logprob: -16.504621505737305

Token 101: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14879509806632996
    2. '):' → logprob: -2.1487951278686523
    3. ')' → logprob: -4.148795127868652
    4. ' ):' → logprob: -5.648795127868652
    5. ' :' → logprob: -6.898795127868652
    6. ' )' → logprob: -7.398795127868652
    7. '):
' → logprob: -7.523795127868652
    8. ':int' → logprob: -9.273795127868652
    9. '   ' → logprob: -10.898795127868652
    10. ' ):
' → logprob: -11.148795127868652

Token 102: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.16077716648578644
    2. 'int' → logprob: -1.91077721118927
    3. ')' → logprob: -7.9107770919799805
    4. ' ' → logprob: -8.66077709197998
    5. ' )' → logprob: -12.91077709197998
    6. ':int' → logprob: -12.91077709197998
    7. '10' → logprob: -13.28577709197998
    8. ' min' → logprob: -13.53577709197998
    9. '[int' → logprob: -14.03577709197998
    10. '(int' → logprob: -14.03577709197998

Token 103: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013315865769982338
    2. '):' → logprob: -4.513315677642822
    3. ' )' → logprob: -6.263315677642822
    4. ':' → logprob: -8.63831615447998
    5. '):
' → logprob: -9.01331615447998
    6. ' ):' → logprob: -9.88831615447998
    7. ')->' → logprob: -12.13831615447998
    8. '   ' → logprob: -13.26331615447998
    9. '):

' → logprob: -14.01331615447998
    10. ' ):
' → logprob: -14.01331615447998

Token 104: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2595442533493042
    2. ' ->' → logprob: -1.7595442533493042
    3. '->' → logprob: -3.7595443725585938
    4. ')' → logprob: -4.134544372558594
    5. '>' → logprob: -5.009544372558594
    6. ' :' → logprob: -5.634544372558594
    7. ')->' → logprob: -5.634544372558594
    8. '):' → logprob: -6.259544372558594
    9. ' >' → logprob: -7.634544372558594
    10. ':return' → logprob: -8.509544372558594

Token 105: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5484944581985474
    2. 'int' → logprob: -1.0484944581985474
    3. ' min' → logprob: -2.673494338989258
    4. 'min' → logprob: -6.173494338989258
    5. ' ' → logprob: -7.423494338989258
    6. '0' → logprob: -11.923494338989258
    7. '10' → logprob: -12.048494338989258
    8. '(int' → logprob: -12.548494338989258
    9. ' return' → logprob: -13.673494338989258
    10. '<int' → logprob: -13.923494338989258

Token 106: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00038693982060067356
    2. '):' → logprob: -8.750387191772461
    3. ':
' → logprob: -9.625387191772461
    4. '<|end|>' → logprob: -9.625387191772461
    5. '       ' → logprob: -10.000387191772461
    6. ' :' → logprob: -10.875387191772461
    7. ':return' → logprob: -11.875387191772461
    8. '   ' → logprob: -11.875387191772461
    9. ',' → logprob: -12.375387191772461
    10. '):
' → logprob: -12.500387191772461

Token 107: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01564823091030121
    2. ' return' → logprob: -4.265648365020752
    3. 'return' → logprob: -7.265648365020752
    4. '   ' → logprob: -8.140647888183594
    5. ' if' → logprob: -8.140647888183594
    6. '```' → logprob: -10.265647888183594
    7. '    ' → logprob: -10.515647888183594
    8. '        
' → logprob: -10.640647888183594
    9. '        ' → logprob: -10.890647888183594
    10. ')' → logprob: -11.140647888183594

Token 108: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03940483555197716
    2. ' return' → logprob: -3.78940486907959
    3. '       ' → logprob: -4.53940486907959
    4. 'min' → logprob: -5.28940486907959
    5. ' min' → logprob: -8.41440486907959
    6. 'if' → logprob: -9.78940486907959
    7. '   ' → logprob: -11.53940486907959
    8. '```' → logprob: -12.16440486907959
    9. ' if' → logprob: -12.66440486907959
    10. '	return' → logprob: -12.78940486907959

Token 109: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.00034714414505288005
    2. 'min' → logprob: -8.000347137451172
    3. ' volume' → logprob: -11.500347137451172
    4. ' max' → logprob: -13.500347137451172
    5. ' ' → logprob: -16.750347137451172
    6. '	min' → logprob: -16.875347137451172
    7. ' self' → logprob: -17.000347137451172
    8. ' ' → logprob: -17.875347137451172
    9. '10' → logprob: -18.375347137451172
    10. '0' → logprob: -18.875347137451172

Token 110: '(volume' (ID: 162071)
  Prédit: '(volume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(volume' → logprob: -0.0005937820533290505
    2. '(' → logprob: -7.750593662261963
    3. '(self' → logprob: -8.750594139099121
    4. ' (' → logprob: -12.500594139099121
    5. '(max' → logprob: -14.500594139099121
    6. '(vol' → logprob: -14.875594139099121
    7. 'volume' → logprob: -16.625593185424805
    8. '(quantity' → logprob: -16.875593185424805
    9. '(
' → logprob: -17.750593185424805
    10. ' volume' → logprob: -17.750593185424805

Token 111: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0028060602489858866
    2. ' ,' → logprob: -5.877806186676025
    3. ',self' → logprob: -14.377805709838867
    4. ' ' → logprob: -15.502805709838867
    5. 'self' → logprob: -15.627805709838867
    6. '1' → logprob: -16.877805709838867
    7. ' self' → logprob: -16.877805709838867
    8. ',
' → logprob: -17.377805709838867
    9. '`,' → logprob: -17.377805709838867
    10. ')' → logprob: -17.377805709838867

Token 112: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.0070674666203558445
    2. 'self' → logprob: -5.132067680358887
    3. '10' → logprob: -6.882067680358887
    4. ' ' → logprob: -9.257067680358887
    5. ' ' → logprob: -11.632067680358887
    6. ')' → logprob: -12.007067680358887
    7. ' )' → logprob: -14.257067680358887
    8. '	self' → logprob: -14.882067680358887
    9. '_self' → logprob: -15.132067680358887
    10. '1' → logprob: -15.882067680358887

Token 113: '.max' (ID: 11883)
  Prédit: '.max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.max' → logprob: -0.0015303362160921097
    2. '.' → logprob: -6.501530170440674
    3. ' .' → logprob: -10.501530647277832
    4. 'max' → logprob: -15.001530647277832
    5. '.maximum' → logprob: -17.126529693603516
    6. ' max' → logprob: -17.376529693603516
    7. '	max' → logprob: -17.501529693603516
    8. '.min' → logprob: -17.751529693603516
    9. '.Max' → logprob: -18.001529693603516
    10. ' ' → logprob: -19.001529693603516

Token 114: '_volume' (ID: 64366)
  Prédit: '_volume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_volume' → logprob: -1.0280383548888494e-06
    2. '_' → logprob: -14.125000953674316
    3. ' _' → logprob: -15.750000953674316
    4. '_vol' → logprob: -17.000001907348633
    5. '   ' → logprob: -17.875001907348633
    6. '_version' → logprob: -17.875001907348633
    7. '_VOLUME' → logprob: -17.875001907348633
    8. '_quantity' → logprob: -18.000001907348633
    9. ')' → logprob: -18.250001907348633
    10. ')_' → logprob: -18.375001907348633

Token 115: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.463036435074173e-05
    2. ')
' → logprob: -10.875024795532227
    3. '<|end|>' → logprob: -12.875024795532227
    4. ' )' → logprob: -13.000024795532227
    5. ')return' → logprob: -14.875024795532227
    6. '   ' → logprob: -16.125024795532227
    7. ')

' → logprob: -16.250024795532227
    8. '       ' → logprob: -16.500024795532227
    9. '<|end|>' → logprob: -17.000024795532227
    10. '}' → logprob: -17.000024795532227

Token 116: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8084077835083008
    2. '<|end|>' → logprob: -0.9334077835083008
    3. '
' → logprob: -2.058407783508301
    4. '```' → logprob: -4.308407783508301
    5. '<|end|>' → logprob: -4.308407783508301
    6. '    
' → logprob: -5.683407783508301
    7. ' ' → logprob: -7.558407783508301
    8. '  ' → logprob: -7.683407783508301
    9. '\n' → logprob: -7.933407783508301
    10. '  
' → logprob: -7.933407783508301

Token 117: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.08434753119945526
    2. '   ' → logprob: -3.0843474864959717
    3. ' def' → logprob: -3.4593474864959717
    4. '
' → logprob: -5.834347724914551
    5. '```' → logprob: -8.33434772491455
    6. ' ' → logprob: -8.58434772491455
    7. '    
' → logprob: -8.83434772491455
    8. ' 
' → logprob: -9.95934772491455
    9. ')' → logprob: -10.45934772491455
    10. '<|end|>' → logprob: -10.70934772491455

Token 118: ' charge' (ID: 8363)
  Prédit: ' charge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' charge' → logprob: -0.006773514673113823
    2. 'charge' → logprob: -5.006773471832275
    3. ' def' → logprob: -10.381773948669434
    4. '_charge' → logprob: -10.881773948669434
    5. 'def' → logprob: -12.506773948669434
    6. 'Charge' → logprob: -13.131773948669434
    7. ' ' → logprob: -13.256773948669434
    8. ' charges' → logprob: -14.506773948669434
    9. ' charged' → logprob: -15.131773948669434
    10. 'charged' → logprob: -16.506772994995117

Token 119: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -0.0009138475870713592
    2. '_' → logprob: -7.000913619995117
    3. ' _' → logprob: -13.625913619995117
    4. 'for' → logprob: -14.500913619995117
    5. '_
' → logprob: -16.500913619995117
    6. '   ' → logprob: -16.750913619995117
    7. ')_' → logprob: -16.875913619995117
    8. '_FOR' → logprob: -16.875913619995117
    9. ' for' → logprob: -17.125913619995117
    10. '```' → logprob: -17.250913619995117

Token 120: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.18068090081214905
    2. '(' → logprob: -1.9306808710098267
    3. ' (' → logprob: -3.930680990219116
    4. '(volume' → logprob: -7.805680751800537
    5. '<|end|>' → logprob: -9.305681228637695
    6. ' ' → logprob: -10.055681228637695
    7. 'self' → logprob: -10.930681228637695
    8. '(
' → logprob: -11.430681228637695
    9. ' self' → logprob: -11.430681228637695
    10. '(space' → logprob: -11.555681228637695

Token 121: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016861737822182477
    2. ' ,' → logprob: -8.875168800354004
    3. 'app' → logprob: -11.625168800354004
    4. '(volume' → logprob: -12.125168800354004
    5. 'volume' → logprob: -12.375168800354004
    6. ',
' → logprob: -13.125168800354004
    7. 'self' → logprob: -13.375168800354004
    8. '):' → logprob: -13.500168800354004
    9. '<|end|>' → logprob: -13.750168800354004
    10. ')' → logprob: -14.000168800354004

Token 122: ' volume' (ID: 10945)
  Prédit: ' volume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' volume' → logprob: -0.008796324953436852
    2. 'volume' → logprob: -4.758796215057373
    3. ' applicable' → logprob: -9.008796691894531
    4. ' self' → logprob: -10.758796691894531
    5. 'app' → logprob: -10.883796691894531
    6. ' ' → logprob: -12.258796691894531
    7. '(volume' → logprob: -12.633796691894531
    8. 'self' → logprob: -12.758796691894531
    9. '   ' → logprob: -13.133796691894531
    10. ' app' → logprob: -14.133796691894531

Token 123: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0309312604367733
    2. '):' → logprob: -3.530931234359741
    3. ':int' → logprob: -7.40593147277832
    4. ')' → logprob: -7.78093147277832
    5. '):
' → logprob: -9.53093147277832
    6. ' ):' → logprob: -10.28093147277832
    7. ' :' → logprob: -10.53093147277832
    8. ' ' → logprob: -12.28093147277832
    9. '):

' → logprob: -12.53093147277832
    10. ' )' → logprob: -13.15593147277832

Token 124: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.47995880246162415
    2. 'int' → logprob: -0.9799587726593018
    3. ')' → logprob: -5.354959011077881
    4. ' ' → logprob: -7.354959011077881
    5. ' volume' → logprob: -8.729958534240723
    6. ' )' → logprob: -8.854958534240723
    7. '(int' → logprob: -9.604958534240723
    8. ':int' → logprob: -9.979958534240723
    9. 'volume' → logprob: -10.104958534240723
    10. '   ' → logprob: -11.604958534240723

Token 125: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16056296229362488
    2. '):' → logprob: -1.9105629920959473
    3. ' )' → logprob: -8.785562515258789
    4. ')->' → logprob: -9.910562515258789
    5. ':' → logprob: -10.035562515258789
    6. ' ):' → logprob: -10.035562515258789
    7. '   ' → logprob: -10.410562515258789
    8. '):
' → logprob: -11.535562515258789
    9. '       ' → logprob: -12.285562515258789
    10. ' ' → logprob: -13.910562515258789

Token 126: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004064270760864019
    2. ' ->' → logprob: -6.754064083099365
    3. ' :' → logprob: -7.129064083099365
    4. '->' → logprob: -7.504064083099365
    5. '):' → logprob: -7.629064083099365
    6. '       ' → logprob: -8.004064559936523
    7. ':return' → logprob: -8.254064559936523
    8. '   ' → logprob: -8.754064559936523
    9. ')' → logprob: -9.754064559936523
    10. '<|end|>' → logprob: -10.379064559936523

Token 127: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.3887757956981659
    2. 'int' → logprob: -1.1387758255004883
    3. '(int' → logprob: -6.388775825500488
    4. ' (' → logprob: -8.888775825500488
    5. ' ' → logprob: -9.888775825500488
    6. ':int' → logprob: -11.513775825500488
    7. ' self' → logprob: -12.013775825500488
    8. 'self' → logprob: -13.013775825500488
    9. '(' → logprob: -13.138775825500488
    10. ' min' → logprob: -13.638775825500488

Token 128: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0018371299374848604
    2. ':
' → logprob: -6.501837253570557
    3. '       ' → logprob: -8.501836776733398
    4. ':return' → logprob: -9.751836776733398
    5. '):' → logprob: -9.876836776733398
    6. '():' → logprob: -12.126836776733398
    7. ' :' → logprob: -12.126836776733398
    8. '):
' → logprob: -12.501836776733398
    9. ':
' → logprob: -13.501836776733398
    10. '   ' → logprob: -13.876836776733398

Token 129: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0026289233937859535
    2. ' return' → logprob: -6.377628803253174
    3. 'return' → logprob: -7.752628803253174
    4. ' if' → logprob: -7.877628803253174
    5. 'if' → logprob: -10.127629280090332
    6. '   ' → logprob: -10.877629280090332
    7. '
' → logprob: -11.002629280090332
    8. ' total' → logprob: -12.002629280090332
    9. 'volume' → logprob: -12.502629280090332
    10. 'total' → logprob: -12.627629280090332

Token 130: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.011083661578595638
    2. 'if' → logprob: -4.636083602905273
    3. '       ' → logprob: -7.511083602905273
    4. ' return' → logprob: -7.761083602905273
    5. 'total' → logprob: -9.011083602905273
    6. '   ' → logprob: -9.636083602905273
    7. 'volume' → logprob: -9.761083602905273
    8. 'charge' → logprob: -9.761083602905273
    9. 'self' → logprob: -11.261083602905273
    10. '```' → logprob: -11.761083602905273

Token 131: ' For' (ID: 2214)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.14379926025867462
    2. ' return' → logprob: -2.768799304962158
    3. 'app' → logprob: -3.893799304962158
    4. 'if' → logprob: -4.143799304962158
    5. '       ' → logprob: -4.268799304962158
    6. 'volume' → logprob: -4.768799304962158
    7. 'charge' → logprob: -5.393799304962158
    8. '   ' → logprob: -5.768799304962158
    9. ' if' → logprob: -6.643799304962158
    10. ' volume' → logprob: -6.893799304962158

Token 132: ' Tier' (ID: 44983)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5567333102226257
    2. ' volume' → logprob: -1.0567333698272705
    3. 'self' → logprob: -2.8067333698272705
    4. 'volume' → logprob: -4.806733131408691
    5. ' volumes' → logprob: -5.431733131408691
    6. ' the' → logprob: -5.556733131408691
    7. ' applicable' → logprob: -6.806733131408691
    8. ' water' → logprob: -7.306733131408691
    9. 'vol' → logprob: -9.181733131408691
    10. ' ' → logprob: -9.306733131408691

Token 133: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03363786265254021
    2. ' volume' → logprob: -3.783637762069702
    3. ' ' → logprob: -5.158638000488281
    4. 'volume' → logprob: -5.783638000488281
    5. '_volume' → logprob: -7.033638000488281
    6. '   ' → logprob: -8.408638000488281
    7. ' volumes' → logprob: -8.533638000488281
    8. '(volume' → logprob: -9.783638000488281
    9. 'ed' → logprob: -10.033638000488281
    10. 'Volume' → logprob: -10.658638000488281

Token 134: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005586316110566258
    2. ' ' → logprob: -7.500558853149414
    3. 'volume' → logprob: -12.750558853149414
    4. ' volume' → logprob: -14.500558853149414
    5. '   ' → logprob: -14.875558853149414
    6. 'vol' → logprob: -15.250558853149414
    7. '```' → logprob: -15.375558853149414
    8. 'Volume' → logprob: -15.625558853149414
    9. ',' → logprob: -15.625558853149414
    10. ' volumes' → logprob: -16.000558853149414

Token 135: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17135347425937653
    2. 'return' → logprob: -2.671353578567505
    3. ' return' → logprob: -3.046353578567505
    4. ':' → logprob: -4.421353340148926
    5. '   ' → logprob: -4.671353340148926
    6. ' if' → logprob: -4.796353340148926
    7. '
' → logprob: -5.671353340148926
    8. 'if' → logprob: -6.171353340148926
    9. ':return' → logprob: -6.671353340148926
    10. ',' → logprob: -7.171353340148926

Token 136: ' charge' (ID: 8363)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6693010926246643
    2. ' return' → logprob: -1.0443010330200195
    3. 'if' → logprob: -2.6693010330200195
    4. ' if' → logprob: -2.9193010330200195
    5. 'charge' → logprob: -5.1693010330200195
    6. '       ' → logprob: -5.5443010330200195
    7. ' charge' → logprob: -6.2943010330200195
    8. ' volume' → logprob: -8.04430103302002
    9. 'volume' → logprob: -8.29430103302002
    10. ' total' → logprob: -8.29430103302002

Token 137: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24050815403461456
    2. '=' → logprob: -1.6155081987380981
    3. 'return' → logprob: -4.990508079528809
    4. ' return' → logprob: -6.115508079528809
    5. ' is' → logprob: -6.615508079528809
    6. ' if' → logprob: -7.740508079528809
    7. '_volume' → logprob: -7.865508079528809
    8. '_for' → logprob: -7.990508079528809
    9. ' for' → logprob: -7.990508079528809
    10. 'if' → logprob: -8.240508079528809

Token 138: ' fixed' (ID: 13213)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.11302120983600616
    2. 'self' → logprob: -2.2380211353302
    3. ' the' → logprob: -9.613020896911621
    4. ' ' → logprob: -10.363020896911621
    5. ' volume' → logprob: -10.488020896911621
    6. ' max' → logprob: -10.738020896911621
    7. '(self' → logprob: -11.863020896911621
    8. '0' → logprob: -12.113020896911621
    9. '```' → logprob: -12.363020896911621
    10. '       ' → logprob: -12.488020896911621

Token 139: ' basic' (ID: 9439)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6831991076469421
    2. 'self' → logprob: -2.433199167251587
    3. 'return' → logprob: -2.683199167251587
    4. '   ' → logprob: -2.808199167251587
    5. ' +' → logprob: -3.058199167251587
    6. ' return' → logprob: -3.558199167251587
    7. '=' → logprob: -3.558199167251587
    8. '       ' → logprob: -3.683199167251587
    9. '<|end|>' → logprob: -3.808199167251587
    10. ' if' → logprob: -3.933199167251587

Token 140: ' charge' (ID: 8363)
  Prédit: '_charge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_charge' → logprob: -0.002876080572605133
    2. 'charge' → logprob: -6.002876281738281
    3. ' charge' → logprob: -8.502876281738281
    4. '_' → logprob: -8.877876281738281
    5. ' _' → logprob: -11.002876281738281
    6. '_ch' → logprob: -11.377876281738281
    7. '_fee' → logprob: -11.627876281738281
    8. '_price' → logprob: -12.002876281738281
    9. ' +' → logprob: -12.502876281738281
    10. '   ' → logprob: -12.752876281738281

Token 141: ' regardless' (ID: 23994)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 142: ' usage' (ID: 16622)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.010345128364861012
    2. '<|end|>' → logprob: -5.260344982147217
    3. 'of' → logprob: -5.385344982147217
    4. ' if' → logprob: -8.760345458984375
    5. '    ' → logprob: -8.885345458984375
    6. ' ' → logprob: -9.510345458984375
    7. '  ' → logprob: -10.385345458984375
    8. 'if' → logprob: -10.385345458984375
    9. '<|end|>' → logprob: -10.760345458984375
    10. '   ' → logprob: -10.760345458984375

Token 143: ' up' (ID: 869)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22861486673355103
    2. '<|end|>' → logprob: -1.6036148071289062
    3. '<|end|>' → logprob: -7.228614807128906
    4. '
' → logprob: -7.228614807128906
    5. ' if' → logprob: -7.853614807128906
    6. '   ' → logprob: -7.978614807128906
    7. ',' → logprob: -8.603614807128906
    8. 'return' → logprob: -8.728614807128906
    9. ' +' → logprob: -8.728614807128906
    10. '.' → logprob: -9.228614807128906

Token 144: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.0067733959294855595
    2. ' to' → logprob: -5.006773471832275
    3. '20' → logprob: -11.256772994995117
    4. 't' → logprob: -11.506772994995117
    5. '10' → logprob: -11.506772994995117
    6. ' ' → logprob: -11.631772994995117
    7. '
' → logprob: -13.006772994995117
    8. '0' → logprob: -13.256772994995117
    9. 'o' → logprob: -13.506772994995117
    10. '  ' → logprob: -13.506772994995117

Token 145: ' ' (ID: 220)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.34105613827705383
    2. ' self' → logprob: -1.3410561084747314
    3. '10' → logprob: -3.7160561084747314
    4. ' ' → logprob: -5.9660563468933105
    5. ' the' → logprob: -8.716055870056152
    6. ' max' → logprob: -8.716055870056152
    7. 'max' → logprob: -8.966055870056152
    8. 'the' → logprob: -10.341055870056152
    9. '	self' → logprob: -11.716055870056152
    10. '   ' → logprob: -12.591055870056152

Token 146: '10' (ID: 702)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01253979280591011
    2. ' self' → logprob: -4.762539863586426
    3. '10' → logprob: -5.637539863586426
    4. 'max' → logprob: -8.137539863586426
    5. ' ' → logprob: -10.012539863586426
    6. ' max' → logprob: -11.387539863586426
    7. 'the' → logprob: -12.637539863586426
    8. ' the' → logprob: -14.137539863586426
    9. '	self' → logprob: -14.512539863586426
    10. '100' → logprob: -14.512539863586426

Token 147: ' m' (ID: 284)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 148: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0851752907037735
    2. '³' → logprob: -3.0851752758026123
    3. '^' → logprob: -3.3351752758026123
    4. ' ' → logprob: -8.710175514221191
    5. '**' → logprob: -9.585175514221191
    6. '```' → logprob: -10.460175514221191
    7. ' ^' → logprob: -11.210175514221191
    8. 'ethod' → logprob: -11.585175514221191
    9. 'l' → logprob: -12.210175514221191
    10. ' three' → logprob: -12.335175514221191

Token 149: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 150: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 151: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0061512114480137825
    2. '       ' → logprob: -5.25615119934082
    3. ' return' → logprob: -7.00615119934082
    4. 'if' (adapté à ' if') → logprob: -11.50615119934082
    5. '	return' → logprob: -15.00615119934082
    6. '   ' → logprob: -15.38115119934082
    7. '```' → logprob: -16.75615119934082
    8. ' if' → logprob: -17.25615119934082
    9. '           ' → logprob: -17.88115119934082
    10. 'eturn' → logprob: -18.25615119934082

Token 152: ' volume' (ID: 10945)
  Prédit: ' volume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' volume' → logprob: -0.016660373657941818
    2. 'volume' → logprob: -4.141660213470459
    3. ' self' → logprob: -7.641660213470459
    4. 'self' → logprob: -9.141660690307617
    5. ' ' → logprob: -10.891660690307617
    6. '0' → logprob: -12.016660690307617
    7. '(volume' → logprob: -12.016660690307617
    8. ' volumen' → logprob: -13.266660690307617
    9. 'Volume' → logprob: -13.516660690307617
    10. ' ' → logprob: -13.891660690307617

Token 153: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.7861369252204895
    2. ' <=' → logprob: -1.0361368656158447
    3. '>' → logprob: -2.0361368656158447
    4. '<=' → logprob: -2.9111368656158447
    5. '==' → logprob: -6.161137104034424
    6. ' ==' → logprob: -6.411137104034424
    7. ' >=' → logprob: -7.786137104034424
    8. ' ' → logprob: -8.411136627197266
    9. '>=' → logprob: -8.536136627197266
    10. '=' → logprob: -11.411136627197266

Token 154: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.108318567276001
    2. '0' → logprob: -1.233318567276001
    3. ' self' → logprob: -1.358318567276001
    4. 'self' → logprob: -2.108318567276001
    5. '=' → logprob: -11.733318328857422
    6. '10' → logprob: -11.983318328857422
    7. '	self' → logprob: -12.358318328857422
    8. '=self' → logprob: -12.608318328857422
    9. ' ' → logprob: -13.108318328857422
    10. '  ' → logprob: -13.608318328857422

Token 155: '0' (ID: 15)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.21626603603363037
    2. '0' → logprob: -1.7162660360336304
    3. ' self' → logprob: -4.34126615524292
    4. ' ' → logprob: -6.59126615524292
    5. '10' → logprob: -7.96626615524292
    6. '	self' → logprob: -13.341265678405762
    7. '=self' → logprob: -14.341265678405762
    8. '(self' → logprob: -15.591265678405762
    9. '=' → logprob: -15.716265678405762
    10. '  ' → logprob: -15.966265678405762

Token 156: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00584796629846096
    2. ' and' → logprob: -6.005847930908203
    3. ' :' → logprob: -6.255847930908203
    4. ':
' → logprob: -6.755847930908203
    5. ':return' → logprob: -8.380847930908203
    6. 'and' → logprob: -11.130847930908203
    7. '):' → logprob: -11.380847930908203
    8. '<|end|>' → logprob: -11.505847930908203
    9. ' ' → logprob: -12.505847930908203
    10. ' :
' → logprob: -12.505847930908203

Token 157: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8119410872459412
    2. '           ' → logprob: -1.686941146850586
    3. ':' → logprob: -1.811941146850586
    4. ':
' → logprob: -1.936941146850586
    5. ' return' → logprob: -3.436941146850586
    6. ':return' → logprob: -4.436941146850586
    7. '<|end|>' → logprob: -5.186941146850586
    8. '
' → logprob: -5.186941146850586
    9. 'return' → logprob: -5.311941146850586
    10. ',' → logprob: -7.311941146850586

Token 158: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03807833418250084
    2. ' return' → logprob: -3.2880783081054688
    3. '       ' → logprob: -10.538078308105469
    4. '           ' → logprob: -11.663078308105469
    5. '
' → logprob: -14.163078308105469
    6. '	return' → logprob: -14.288078308105469
    7. '   ' → logprob: -15.163078308105469
    8. ':return' → logprob: -17.28807830810547
    9. 'eturn' → logprob: -17.66307830810547
    10. ' ' → logprob: -17.91307830810547

Token 159: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.04858873412013054
    2. 'self' → logprob: -3.048588752746582
    3. ' ' → logprob: -14.173588752746582
    4. ' ' → logprob: -15.423588752746582
    5. '	self' → logprob: -15.548588752746582
    6. '(self' → logprob: -16.173587799072266
    7. '115' → logprob: -16.923587799072266
    8. '[self' → logprob: -17.298587799072266
    9. '       ' → logprob: -17.423587799072266
    10. '```' → logprob: -18.548587799072266

Token 160: '.basic' (ID: 64834)
  Prédit: '.basic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.basic' → logprob: -0.00012296605564188212
    2. '.' → logprob: -9.125123023986816
    3. ' .' → logprob: -11.375123023986816
    4. 'basic' → logprob: -13.000123023986816
    5. '.base' → logprob: -16.7501220703125
    6. '.bas' → logprob: -16.8751220703125
    7. '.Basic' → logprob: -17.2501220703125
    8. ' ' → logprob: -17.8751220703125
    9. '.best' → logprob: -18.2501220703125
    10. '.space' → logprob: -18.5001220703125

Token 161: '_charge' (ID: 110838)
  Prédit: '_charge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_charge' → logprob: -0.0001266613689949736
    2. 'charge' → logprob: -9.000126838684082
    3. '_' → logprob: -13.625126838684082
    4. ' _' → logprob: -14.375126838684082
    5. '_fee' → logprob: -14.375126838684082
    6. '_ch' → logprob: -15.625126838684082
    7. ' charge' → logprob: -15.750126838684082
    8. 'Charge' → logprob: -16.500125885009766
    9. '_price' → logprob: -17.000125885009766
    10. '_char' → logprob: -17.250125885009766

Token 162: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002819851040840149
    2. 'else' → logprob: -6.627820014953613
    3. '<|end|>' → logprob: -6.877820014953613
    4. 'return' → logprob: -8.627820014953613
    5. ' else' → logprob: -8.627820014953613
    6. '
' → logprob: -9.877820014953613
    7. '<|end|>' → logprob: -10.752820014953613
    8. '   ' → logprob: -12.002820014953613
    9. '	' → logprob: -12.377820014953613
    10. ' return' → logprob: -12.752820014953613

Token 163: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008711484260857105
    2. 'else' → logprob: -5.133711338043213
    3. ' else' → logprob: -6.133711338043213
    4. 'return' → logprob: -7.758711338043213
    5. '<|end|>' → logprob: -9.258711814880371
    6. '	' → logprob: -10.633711814880371
    7. ' return' → logprob: -10.883711814880371
    8. '   ' → logprob: -11.008711814880371
    9. '0' → logprob: -11.633711814880371
    10. '	else' → logprob: -13.008711814880371

Token 164: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7523038387298584
    2. 'else' (adapté à ' else') → logprob: -1.2523038387298584
    3. 'return' → logprob: -1.8773038387298584
    4. ' else' → logprob: -3.1273038387298584
    5. '0' → logprob: -3.3773038387298584
    6. '   ' → logprob: -4.7523040771484375
    7. ' return' → logprob: -6.2523040771484375
    8. '
' → logprob: -7.1273040771484375
    9. ' ' → logprob: -9.002304077148438
    10. '        
' → logprob: -9.502304077148438

Token 165: ':
' (ID: 734)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11805202066898346
    2. ' ' → logprob: -2.2430520057678223
    3. '       ' → logprob: -6.493052005767822
    4. '           ' → logprob: -6.493052005767822
    5. '   ' → logprob: -7.368052005767822
    6. 'return' → logprob: -7.368052005767822
    7. ':' → logprob: -7.743052005767822
    8. ' return' → logprob: -7.868052005767822
    9. ':return' → logprob: -9.61805248260498
    10. ':
' → logprob: -10.99305248260498

Token 166: '           ' (ID: 352)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.64839569455944e-05
    2. ' ' → logprob: -9.500076293945312
    3. '       ' → logprob: -13.750076293945312
    4. '           ' → logprob: -15.000076293945312
    5. '   ' → logprob: -16.125076293945312
    6. 'return' → logprob: -16.375076293945312
    7. '               ' → logprob: -19.500076293945312
    8. ' return' → logprob: -20.375076293945312
    9. '  ' → logprob: -20.625076293945312
    10. '        ' → logprob: -21.250076293945312

Token 167: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00040457461727783084
    2. 'return' (adapté à ' return') → logprob: -8.000404357910156
    3. ' ' → logprob: -9.625404357910156
    4. ' return' → logprob: -12.875404357910156
    5. '           ' → logprob: -14.750404357910156
    6. '   ' → logprob: -16.125404357910156
    7. '       ' → logprob: -16.250404357910156
    8. '000' → logprob: -20.250404357910156
    9. '  ' → logprob: -20.375404357910156
    10. '00' → logprob: -20.500404357910156

Token 168: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010914575977949426
    2. ' ' → logprob: -9.12510871887207
    3. '   ' → logprob: -16.12510871887207
    4. ' ' → logprob: -17.87510871887207
    5. '  ' → logprob: -18.62510871887207
    6. '       ' → logprob: -19.75010871887207
    7. '000' → logprob: -19.75010871887207
    8. '    ' → logprob: -19.87510871887207
    9. '۰' → logprob: -19.87510871887207
    10. '00' → logprob: -20.18760871887207

Token 169: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.451116051815916e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -16.375024795532227
    4. ' ' → logprob: -17.625024795532227
    5. '۰' → logprob: -18.000024795532227
    6. '  ' → logprob: -18.000024795532227
    7. '000' → logprob: -18.125024795532227
    8. '０' → logprob: -18.625024795532227
    9. '00' → logprob: -18.750024795532227
    10. '    ' → logprob: -20.000024795532227

Token 170: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 171: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 172: ' no' (ID: 860)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 173: ' charge' (ID: 8363)
  Prédit: ' charge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' charge' → logprob: -0.09488166868686676
    2. 'charge' → logprob: -2.594881772994995
    3. '_charge' → logprob: -4.969881534576416
    4. '<|end|>' → logprob: -4.969881534576416
    5. ' ' → logprob: -6.969881534576416
    6. ' usage' → logprob: -7.969881534576416
    7. '_' → logprob: -8.219882011413574
    8. '<|end|>' → logprob: -9.344882011413574
    9. ' charges' → logprob: -10.094882011413574
    10. 'space' → logprob: -10.219882011413574

Token 174: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 175: ' no' (ID: 860)
  Prédit: ' volume'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' volume' → logprob: -0.6352294683456421
    2. 'volume' → logprob: -0.7602294683456421
    3. ' no' → logprob: -7.010229587554932
    4. '0' → logprob: -7.010229587554932
    5. 'no' → logprob: -7.510229587554932
    6. 'usage' → logprob: -9.510229110717773
    7. 'zero' → logprob: -9.760229110717773
    8. ' usage' → logprob: -9.760229110717773
    9. ' zero' → logprob: -10.010229110717773
    10. '(volume' → logprob: -11.260229110717773

Token 176: ' usage' (ID: 16622)
  Prédit: ' usage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' usage' → logprob: -0.5341320633888245
    2. ' volume' → logprob: -1.9091320037841797
    3. 'usage' → logprob: -2.1591320037841797
    4. 'volume' → logprob: -2.5341320037841797
    5. ' water' → logprob: -3.1591320037841797
    6. ' consumption' → logprob: -3.7841320037841797
    7. 'water' → logprob: -5.28413200378418
    8. '_usage' → logprob: -8.03413200378418
    9. 'cons' → logprob: -9.15913200378418
    10. '_volume' → logprob: -10.53413200378418

Token 177: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 178: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06570325791835785
    2. 'class' → logprob: -2.9407031536102295
    3. '

' → logprob: -4.940703392028809
    4. '<|end|>' → logprob: -5.690703392028809
    5. ' class' → logprob: -9.565703392028809
    6. '```' → logprob: -9.940703392028809
    7. '<|end|>' → logprob: -10.565703392028809
    8. '


' → logprob: -10.690703392028809
    9. '
' → logprob: -10.940703392028809
    10. '  
' → logprob: -11.065703392028809

Token 179: ' Tier' (ID: 44983)
  Prédit: 'Tier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tier' → logprob: -0.018193256109952927
    2. ' Tier' → logprob: -4.018193244934082
    3. 'tier' → logprob: -10.143193244934082
    4. 'class' → logprob: -13.518193244934082
    5. ' tier' → logprob: -13.643193244934082
    6. 'T' → logprob: -13.768193244934082
    7. 'Ti' → logprob: -16.5181941986084
    8. 'Water' → logprob: -17.0181941986084
    9. 'Tie' → logprob: -17.0181941986084
    10. '-tier' → logprob: -17.2681941986084

Token 180: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '23' → logprob: -17.5
    3. ' ' → logprob: -17.625
    4. '234' → logprob: -17.875
    5. '２' → logprob: -19.875
    6. '3' → logprob: -19.875
    7. '```' → logprob: -20.625
    8. '12' → logprob: -20.75
    9. '0' → logprob: -20.75
    10. '۲' → logprob: -21.25

Token 181: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.00011927806917810813
    2. ' (' → logprob: -9.62511920928955
    3. '(' → logprob: -9.87511920928955
    4. ' `(' → logprob: -14.37511920928955
    5. '(T' → logprob: -14.87511920928955
    6. ' ' → logprob: -15.25011920928955
    7. '(w' → logprob: -15.87511920928955
    8. '```' → logprob: -16.375120162963867
    9. '(World' → logprob: -16.500120162963867
    10. 'Water' → logprob: -17.125120162963867

Token 182: 'ater' (ID: 1005)
  Prédit: 'ater'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ater' → logprob: -0.0025918271858245134
    2. 'Water' → logprob: -6.002591609954834
    3. 'a' → logprob: -9.877592086791992
    4. ' ater' → logprob: -10.877592086791992
    5. '(' → logprob: -11.377592086791992
    6. 'ate' → logprob: -11.877592086791992
    7. 'water' → logprob: -12.002592086791992
    8. 'atter' → logprob: -12.377592086791992
    9. '```' → logprob: -12.752592086791992
    10. 'atering' → logprob: -13.127592086791992

Token 183: 'Charge' (ID: 46218)
  Prédit: 'Charge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Charge' → logprob: -0.00018280261429026723
    2. '_charge' → logprob: -8.87518310546875
    3. 'charge' → logprob: -11.25018310546875
    4. '_' → logprob: -11.37518310546875
    5. ' Charge' → logprob: -11.75018310546875
    6. '(' → logprob: -11.75018310546875
    7. ' charge' → logprob: -14.50018310546875
    8. ')' → logprob: -14.62518310546875
    9. 'Charges' → logprob: -14.87518310546875
    10. '(W' → logprob: -15.75018310546875

Token 184: 'Tier' (ID: 79698)
  Prédit: 'Tier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tier' → logprob: -0.29076942801475525
    2. '(W' → logprob: -1.4157694578170776
    3. 'Charge' → logprob: -5.790769577026367
    4. 'T' → logprob: -6.290769577026367
    5. '(T' → logprob: -6.290769577026367
    6. '(' → logprob: -6.915769577026367
    7. 'Water' → logprob: -7.290769577026367
    8. ')' → logprob: -8.040769577026367
    9. 'tier' → logprob: -8.415769577026367
    10. '_T' → logprob: -8.790769577026367

Token 185: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.693273663520813
    2. '):' → logprob: -0.693273663520813
    3. '):
' → logprob: -9.193273544311523
    4. '   ' → logprob: -10.943273544311523
    5. '):

' → logprob: -12.943273544311523
    6. ')' → logprob: -12.943273544311523
    7. ':' → logprob: -13.693273544311523
    8. ' ):' → logprob: -15.318273544311523
    9. ' ):
' → logprob: -15.568273544311523
    10. '(' → logprob: -16.318273544311523

Token 186: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013991198502480984
    2. 'def' → logprob: -5.138991355895996
    3. ' def' → logprob: -5.138991355895996
    4. '):
' → logprob: -6.763991355895996
    5. ':' → logprob: -7.763991355895996
    6. ':
' → logprob: -8.013991355895996
    7. '):' → logprob: -9.263991355895996
    8. ')' → logprob: -9.263991355895996
    9. '	def' → logprob: -10.388991355895996
    10. ':def' → logprob: -11.138991355895996

Token 187: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.05360722914338112
    2. ' def' → logprob: -3.178607225418091
    3. '   ' → logprob: -4.55360746383667
    4. '
' → logprob: -12.053606986999512
    5. '	def' → logprob: -12.053606986999512
    6. ' ' → logprob: -12.178606986999512
    7. '  ' → logprob: -12.553606986999512
    8. '```' → logprob: -14.303606986999512
    9. '    ' → logprob: -15.428606986999512
    10. '    
' → logprob: -15.428606986999512

Token 188: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.4730895161628723
    2. 'def' → logprob: -1.5980894565582275
    3. ' def' → logprob: -1.9730894565582275
    4. ' __' → logprob: -4.098089694976807
    5. '_init' → logprob: -4.348089694976807
    6. 'init' → logprob: -5.598089694976807
    7. '```' → logprob: -6.473089694976807
    8. '\' → logprob: -8.723089218139648
    9. '___' → logprob: -8.848089218139648
    10. '  ' → logprob: -9.223089218139648

Token 189: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.2262478917837143
    2. '_init' → logprob: -1.7262479066848755
    3. 'def' → logprob: -4.101247787475586
    4. '__' → logprob: -4.851247787475586
    5. ' def' → logprob: -10.226247787475586
    6. ' __' → logprob: -10.351247787475586
    7. ' init' → logprob: -10.351247787475586
    8. '   ' → logprob: -10.726247787475586
    9. '_def' → logprob: -11.101247787475586
    10. '```' → logprob: -11.726247787475586

Token 190: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.12700317800045013
    2. '(self' → logprob: -2.1270031929016113
    3. '   ' → logprob: -10.502002716064453
    4. '       ' → logprob: -11.252002716064453
    5. '_(' → logprob: -11.252002716064453
    6. ' (' → logprob: -12.252002716064453
    7. '(' → logprob: -12.502002716064453
    8. '```' → logprob: -12.502002716064453
    9. '()(' → logprob: -13.377002716064453
    10. '__(
' → logprob: -13.627002716064453

Token 191: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.236549335066229e-05
    2. '):
' → logprob: -11.125021934509277
    3. ' self' → logprob: -12.000021934509277
    4. ')' → logprob: -14.500021934509277
    5. '       ' → logprob: -15.125021934509277
    6. '(self' → logprob: -15.250021934509277
    7. '   ' → logprob: -15.750021934509277
    8. ')
' → logprob: -16.500022888183594
    9. '0' → logprob: -16.500022888183594
    10. '
' → logprob: -17.375022888183594

Token 192: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.006851531565189362
    2. '():
' → logprob: -5.756851673126221
    3. '       ' → logprob: -6.631851673126221
    4. '):' → logprob: -7.131851673126221
    5. 'self' → logprob: -7.256851673126221
    6. '()):
' → logprob: -7.631851673126221
    7. '   ' → logprob: -8.756851196289062
    8. '(self' → logprob: -9.006851196289062
    9. '()' → logprob: -11.131851196289062
    10. '():' → logprob: -11.381851196289062

Token 193: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2321053445339203
    2. 'self' → logprob: -1.6071053743362427
    3. '):
' → logprob: -6.107105255126953
    4. '(self' → logprob: -6.482105255126953
    5. '():
' → logprob: -6.732105255126953
    6. '   ' → logprob: -7.357105255126953
    7. '():' → logprob: -7.732105255126953
    8. ' self' → logprob: -8.232105255126953
    9. '()' → logprob: -8.357105255126953
    10. '):' → logprob: -10.107105255126953

Token 194: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0009178895270451903
    2. '       ' → logprob: -7.250917911529541
    3. 'super' → logprob: -8.875917434692383
    4. ' self' → logprob: -10.000917434692383
    5. '   ' → logprob: -10.750917434692383
    6. '	self' → logprob: -14.125917434692383
    7. ' ' → logprob: -15.125917434692383
    8. 'def' → logprob: -15.875917434692383
    9. '  ' → logprob: -16.875917434692383
    10. ' super' → logprob: -17.125917434692383

Token 195: '.unit' (ID: 51513)
  Prédit: '.basic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.basic' → logprob: -0.06166556105017662
    2. 'basic' → logprob: -2.9366655349731445
    3. '.' → logprob: -6.0616655349731445
    4. ' .' → logprob: -6.4366655349731445
    5. '.rate' → logprob: -7.3116655349731445
    6. ' basic' → logprob: -7.4366655349731445
    7. '_basic' → logprob: -8.186665534973145
    8. 'rate' → logprob: -8.311665534973145
    9. '.unit' → logprob: -8.311665534973145
    10. 'unit' → logprob: -9.061665534973145

Token 196: '_price' (ID: 18814)
  Prédit: '_charge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_charge' → logprob: -0.11011651903390884
    2. '_price' → logprob: -2.485116481781006
    3. '_rate' → logprob: -3.985116481781006
    4. '_cost' → logprob: -6.735116481781006
    5. 'charge' → logprob: -7.610116481781006
    6. '_fee' → logprob: -7.860116481781006
    7. '_volume' → logprob: -8.485116958618164
    8. 'rate' → logprob: -10.360116958618164
    9. 'price' → logprob: -10.985116958618164
    10. '_unit' → logprob: -11.235116958618164

Token 197: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026309238746762276
    2. '=' → logprob: -3.6513092517852783
    3. '   ' → logprob: -12.1513090133667
    4. ' ' → logprob: -13.5263090133667
    5. ':' → logprob: -13.7763090133667
    6. 's' → logprob: -15.0263090133667
    7. '<|end|>' → logprob: -15.4013090133667
    8. '  ' → logprob: -15.5263090133667
    9. '    ' → logprob: -16.026309967041016
    10. ' ' → logprob: -16.588809967041016

Token 198: ' ' (ID: 220)
  Prédit: '115'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '115' → logprob: -1.871084451675415
    2. '140' → logprob: -2.746084451675415
    3. '130' → logprob: -2.871084451675415
    4. '110' → logprob: -2.996084451675415
    5. '135' → logprob: -3.121084451675415
    6. '120' → logprob: -3.121084451675415
    7. '160' → logprob: -3.246084451675415
    8. '165' → logprob: -3.246084451675415
    9. '145' → logprob: -3.371084451675415
    10. '155' → logprob: -3.496084451675415

Token 199: '125' (ID: 10676)
  Prédit: '115'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '115' → logprob: -1.8193447589874268
    2. '160' → logprob: -1.9443447589874268
    3. '105' → logprob: -2.4443447589874268
    4. '130' → logprob: -2.4443447589874268
    5. '165' → logprob: -3.0693447589874268
    6. '60' → logprob: -3.1943447589874268
    7. '140' → logprob: -3.3193447589874268
    8. '135' → logprob: -3.4443447589874268
    9. '95' → logprob: -3.5693447589874268
    10. '90' → logprob: -3.6943447589874268

Token 200: '
' (ID: 198)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003323507495224476
    2. '5' → logprob: -6.628323554992676
    3. '<|end|>' → logprob: -7.003323554992676
    4. 'per' → logprob: -8.628323554992676
    5. '7' → logprob: -9.128323554992676
    6. ' ' → logprob: -9.128323554992676
    7. '   ' → logprob: -9.503323554992676
    8. '6' → logprob: -9.628323554992676
    9. '4' → logprob: -9.628323554992676
    10. '50' → logprob: -9.628323554992676

Token 201: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002314880257472396
    2. 'self' → logprob: -6.127315044403076
    3. ' self' → logprob: -9.627314567565918
    4. '<|end|>' → logprob: -10.127314567565918
    5. '   ' → logprob: -11.377314567565918
    6. '	self' → logprob: -12.877314567565918
    7. ' ' → logprob: -13.002314567565918
    8. '	' → logprob: -13.127314567565918
    9. '
' → logprob: -13.627314567565918
    10. '[self' → logprob: -14.377314567565918

Token 202: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0014780828496441245
    2. '       ' → logprob: -6.87647819519043
    3. ' self' → logprob: -7.75147819519043
    4. '   ' → logprob: -11.62647819519043
    5. '	self' → logprob: -13.12647819519043
    6. ' ' → logprob: -13.37647819519043
    7. '
' → logprob: -14.12647819519043
    8. '      ' → logprob: -15.25147819519043
    9. '     ' → logprob: -15.25147819519043
    10. '           ' → logprob: -15.25147819519043

Token 203: '.start' (ID: 10181)
  Prédit: '.max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.max' → logprob: -0.14412514865398407
    2. 'max' → logprob: -2.01912522315979
    3. '.' → logprob: -7.019124984741211
    4. ' .' → logprob: -9.144124984741211
    5. '_max' → logprob: -9.519124984741211
    6. '	max' → logprob: -9.644124984741211
    7. ' max' → logprob: -9.769124984741211
    8. '.basic' → logprob: -9.769124984741211
    9. '10' → logprob: -10.394124984741211
    10. '.min' → logprob: -10.519124984741211

Token 204: ' =' (ID: 314)
  Prédit: '_volume'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_volume' → logprob: -0.002403124002739787
    2. 'ing' → logprob: -6.377403259277344
    3. ' =' → logprob: -8.377403259277344
    4. '=' → logprob: -8.877403259277344
    5. '_range' → logprob: -9.127403259277344
    6. '_unit' → logprob: -9.752403259277344
    7. '<|end|>' → logprob: -10.002403259277344
    8. 'volume' → logprob: -11.002403259277344
    9. '_VOLUME' → logprob: -11.252403259277344
    10. '_threshold' → logprob: -11.252403259277344

Token 205: ' ' (ID: 220)
  Prédit: '11'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -0.014195124618709087
    2. '10' → logprob: -4.264194965362549
    3. ' ' → logprob: -11.264195442199707
    4. 'self' → logprob: -11.264195442199707
    5. '=' → logprob: -14.076695442199707
    6. 'Tier' → logprob: -14.201695442199707
    7. '110' → logprob: -14.389195442199707
    8. '1' → logprob: -14.764195442199707
    9. '１１' → logprob: -14.889195442199707
    10. '12' → logprob: -14.951695442199707

Token 206: '10' (ID: 702)
  Prédit: '11'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -0.014232965186238289
    2. '10' → logprob: -4.264233112335205
    3. 'self' → logprob: -10.014232635498047
    4. 'Tier' → logprob: -11.639232635498047
    5. ' ' → logprob: -13.451732635498047
    6. '110' → logprob: -13.639232635498047
    7. '1' → logprob: -13.701732635498047
    8. '１１' → logprob: -13.764232635498047
    9. '6' → logprob: -14.139232635498047
    10. '111' → logprob: -14.264232635498047

Token 207: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6014353036880493
    2. '<|end|>' → logprob: -1.3514353036880493
    3. '
' → logprob: -2.2264351844787598
    4. '   ' → logprob: -2.8514351844787598
    5. 'self' → logprob: -3.8514351844787598
    6. '<|end|>' → logprob: -5.97643518447876
    7. ' ' → logprob: -7.47643518447876
    8. '    
' → logprob: -7.72643518447876
    9. ' self' → logprob: -7.72643518447876
    10. ',' → logprob: -7.85143518447876

Token 208: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018651438876986504
    2. 'self' → logprob: -4.393651485443115
    3. '   ' → logprob: -5.143651485443115
    4. ' self' → logprob: -8.768651008605957
    5. '<|end|>' → logprob: -10.143651008605957
    6. '
' → logprob: -10.393651008605957
    7. 'def' → logprob: -11.143651008605957
    8. '	self' → logprob: -11.268651008605957
    9. ' ' → logprob: -11.518651008605957
    10. ',' → logprob: -12.643651008605957

Token 209: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00615345872938633
    2. '       ' → logprob: -5.381153583526611
    3. '   ' → logprob: -6.631153583526611
    4. ' self' → logprob: -8.881153106689453
    5. 'def' → logprob: -10.006153106689453
    6. '	self' → logprob: -11.381153106689453
    7. ' ' → logprob: -12.006153106689453
    8. '  ' → logprob: -13.006153106689453
    9. '     ' → logprob: -13.631153106689453
    10. '      ' → logprob: -13.881153106689453

Token 210: '.end' (ID: 10289)
  Prédit: '.max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.max' → logprob: -0.34044137597084045
    2. '.' → logprob: -1.965441346168518
    3. 'max' → logprob: -2.0904414653778076
    4. ' .' → logprob: -4.0904412269592285
    5. '   ' → logprob: -5.7154412269592285
    6. ' max' → logprob: -5.9654412269592285
    7. '.end' → logprob: -6.8404412269592285
    8. ' ' → logprob: -8.340441703796387
    9. 'end' → logprob: -8.715441703796387
    10. 'def' → logprob: -8.715441703796387

Token 211: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12695153057575226
    2. '=' → logprob: -2.1269514560699463
    3. ' ' → logprob: -11.626951217651367
    4. '   ' → logprob: -12.001951217651367
    5. ':' → logprob: -13.376951217651367
    6. '20' → logprob: -13.626951217651367
    7. '30' → logprob: -14.376951217651367
    8. ' =
' → logprob: -14.751951217651367
    9. '25' → logprob: -14.876951217651367
    10. '    ' → logprob: -14.876951217651367

Token 212: ' ' (ID: 220)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -0.027746636420488358
    2. '30' → logprob: -3.6527466773986816
    3. '25' → logprob: -7.152746677398682
    4. ' ' → logprob: -8.527746200561523
    5. '50' → logprob: -8.777746200561523
    6. '15' → logprob: -8.902746200561523
    7. '40' → logprob: -9.902746200561523
    8. '0' → logprob: -10.965246200561523
    9. '100' → logprob: -11.152746200561523
    10. '35' → logprob: -11.652746200561523

Token 213: '20' (ID: 455)
  Prédit: '20'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -0.008589514531195164
    2. '30' → logprob: -5.008589744567871
    3. '25' → logprob: -6.383589744567871
    4. '50' → logprob: -9.133589744567871
    5. '15' → logprob: -10.883589744567871
    6. '40' → logprob: -11.008589744567871
    7. '100' → logprob: -11.758589744567871
    8. ' ' → logprob: -12.258589744567871
    9. '0' → logprob: -12.446089744567871
    10. '200' → logprob: -12.633589744567871

Token 214: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 215: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02718946523964405
    2. 'def' → logprob: -3.6521894931793213
    3. '<|end|>' → logprob: -7.277189254760742
    4. ' def' → logprob: -9.402189254760742
    5. '    
' → logprob: -9.777189254760742
    6. '<|end|>' → logprob: -10.402189254760742
    7. '
' → logprob: -11.152189254760742
    8. '	def' → logprob: -12.527189254760742
    9. '  
' → logprob: -12.652189254760742
    10. ')' → logprob: -13.402189254760742

Token 216: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0024135883431881666
    2. '   ' → logprob: -6.502413749694824
    3. ' def' → logprob: -7.002413749694824
    4. '	def' → logprob: -14.252413749694824
    5. '    
' → logprob: -15.377413749694824
    6. '
' → logprob: -15.752413749694824
    7. ' ' → logprob: -16.752412796020508
    8. '  ' → logprob: -17.377412796020508
    9. '  
' → logprob: -19.002412796020508
    10. '    ' → logprob: -19.252412796020508

Token 217: ' applicable' (ID: 12781)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.048660267144441605
    2. ' applicable' → logprob: -3.0486602783203125
    3. 'def' → logprob: -9.923660278320312
    4. 'ap' → logprob: -11.173660278320312
    5. ' app' → logprob: -12.798660278320312
    6. '   ' → logprob: -13.423660278320312
    7. 'apply' → logprob: -13.798660278320312
    8. '_app' → logprob: -14.048660278320312
    9. ' ' → logprob: -14.173660278320312
    10. ' ' → logprob: -14.173660278320312

Token 218: '_volume' (ID: 64366)
  Prédit: '_volume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_volume' → logprob: -6.56364209135063e-05
    2. '_' → logprob: -9.750065803527832
    3. '_amount' → logprob: -13.500065803527832
    4. '_length' → logprob: -13.875065803527832
    5. '_space' → logprob: -13.875065803527832
    6. '_voltage' → logprob: -14.500065803527832
    7. 'def' → logprob: -14.875065803527832
    8. '_version' → logprob: -15.000065803527832
    9. ' _' → logprob: -15.250065803527832
    10. '_vol' → logprob: -15.250065803527832

Token 219: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.7491250875755213e-05
    2. '(' → logprob: -10.625027656555176
    3. 'self' → logprob: -13.000027656555176
    4. ' (' → logprob: -14.000027656555176
    5. '   ' → logprob: -17.37502670288086
    6. ' self' → logprob: -17.37502670288086
    7. '       ' → logprob: -17.75002670288086
    8. '(
' → logprob: -17.87502670288086
    9. ' ' → logprob: -18.25002670288086
    10. '(s' → logprob: -18.37502670288086

Token 220: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001441780710592866
    2. '(self' → logprob: -6.751441955566406
    3. 'self' → logprob: -8.876441955566406
    4. ' ,' → logprob: -9.126441955566406
    5. ',self' → logprob: -11.001441955566406
    6. ' (' → logprob: -13.126441955566406
    7. ' self' → logprob: -13.876441955566406
    8. '   ' → logprob: -13.876441955566406
    9. '(' → logprob: -14.251441955566406
    10. ')' → logprob: -14.626441955566406

Token 221: ' volume' (ID: 10945)
  Prédit: 'volume'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'volume' → logprob: -0.47916415333747864
    2. ' volume' → logprob: -1.4791641235351562
    3. 'self' → logprob: -1.9791641235351562
    4. ' self' → logprob: -4.229164123535156
    5. '   ' → logprob: -10.604164123535156
    6. '       ' → logprob: -10.854164123535156
    7. 'def' → logprob: -11.104164123535156
    8. '(volume' → logprob: -11.229164123535156
    9. ' ' → logprob: -11.729164123535156
    10. 'vol' → logprob: -11.854164123535156

Token 222: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08992815017700195
    2. ')' → logprob: -2.589928150177002
    3. '):' → logprob: -4.714928150177002
    4. ' :' → logprob: -7.464928150177002
    5. ':int' → logprob: -7.714928150177002
    6. '   ' → logprob: -7.839928150177002
    7. '):
' → logprob: -8.589927673339844
    8. ',' → logprob: -9.464927673339844
    9. ' )' → logprob: -9.714927673339844
    10. '       ' → logprob: -9.839927673339844

Token 223: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.313289076089859
    2. ' int' → logprob: -1.3132890462875366
    3. ')' → logprob: -11.063288688659668
    4. ' ' → logprob: -13.063288688659668
    5. ' min' → logprob: -13.063288688659668
    6. '[int' → logprob: -13.063288688659668
    7. '(int' → logprob: -13.813288688659668
    8. 'min' → logprob: -13.813288688659668
    9. ':int' → logprob: -14.313288688659668
    10. '   ' → logprob: -14.438288688659668

Token 224: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.923874702304602e-05
    2. ' )' → logprob: -9.375089645385742
    3. '   ' → logprob: -13.250089645385742
    4. '):' → logprob: -13.625089645385742
    5. '):
' → logprob: -14.250089645385742
    6. ':' → logprob: -15.125089645385742
    7. '       ' → logprob: -16.375089645385742
    8. ')->' → logprob: -16.500089645385742
    9. ' ' → logprob: -17.000089645385742
    10. 'def' → logprob: -17.250089645385742

Token 225: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.522663414478302
    2. ')' → logprob: -1.7726633548736572
    3. ' ->' → logprob: -1.7726633548736572
    4. '->' → logprob: -2.7726633548736572
    5. '   ' → logprob: -6.647663593292236
    6. '>' → logprob: -7.022663593292236
    7. '       ' → logprob: -7.022663593292236
    8. ' ' → logprob: -7.772663593292236
    9. ' :' → logprob: -8.147663116455078
    10. '-' → logprob: -8.522663116455078

Token 226: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.25113001465797424
    2. ' int' → logprob: -1.6261299848556519
    3. 'max' → logprob: -4.376130104064941
    4. ' max' → logprob: -4.501130104064941
    5. ' min' → logprob: -6.751130104064941
    6. 'min' → logprob: -7.626130104064941
    7. 'return' → logprob: -10.751130104064941
    8. ' return' → logprob: -10.876130104064941
    9. '(int' → logprob: -11.751130104064941
    10. ' ' → logprob: -12.126130104064941

Token 227: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06936325132846832
    2. ':
' → logprob: -2.9443633556365967
    3. '       ' → logprob: -4.319363117218018
    4. ':return' → logprob: -7.819363117218018
    5. '):
' → logprob: -7.944363117218018
    6. 'return' → logprob: -8.944363594055176
    7. ',' → logprob: -10.069363594055176
    8. ' return' → logprob: -10.819363594055176
    9. ')' → logprob: -10.819363594055176
    10. '):' → logprob: -11.069363594055176

Token 228: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02989049255847931
    2. ' return' → logprob: -3.779890537261963
    3. 'return' → logprob: -5.779890537261963
    4. ' max' → logprob: -5.779890537261963
    5. 'max' → logprob: -8.904890060424805
    6. ' if' → logprob: -9.154890060424805
    7. '```' → logprob: -9.404890060424805
    8. ' min' → logprob: -10.279890060424805
    9. '   ' → logprob: -11.279890060424805
    10. '0' → logprob: -11.279890060424805

Token 229: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8642389178276062
    2. ' return' → logprob: -0.9892389178276062
    3. '       ' → logprob: -1.614238977432251
    4. 'max' → logprob: -5.614238739013672
    5. ' max' → logprob: -5.614238739013672
    6. ' if' → logprob: -8.614238739013672
    7. 'if' (adapté à ' if') → logprob: -8.739238739013672
    8. '```' → logprob: -10.364238739013672
    9. '   ' → logprob: -10.989238739013672
    10. '	return' → logprob: -11.864238739013672

Token 230: ' volume' (ID: 10945)
  Prédit: ' volume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' volume' → logprob: -0.1427154541015625
    2. 'volume' → logprob: -2.0177154541015625
    3. 'max' → logprob: -10.892715454101562
    4. ' max' → logprob: -11.642715454101562
    5. '(volume' → logprob: -12.892715454101562
    6. ' ' → logprob: -13.267715454101562
    7. 'min' → logprob: -13.267715454101562
    8. '   ' → logprob: -13.392715454101562
    9. ' min' → logprob: -13.642715454101562
    10. 'Volume' → logprob: -14.767715454101562

Token 231: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.5467299818992615
    2. ' >' → logprob: -1.0467300415039062
    3. '>' → logprob: -3.0467300415039062
    4. '<=' → logprob: -3.7967300415039062
    5. ' <' → logprob: -9.296730041503906
    6. ' ' → logprob: -11.296730041503906
    7. '<' → logprob: -11.421730041503906
    8. ' >=' → logprob: -13.546730041503906
    9. '>=' → logprob: -14.796730041503906
    10. '   ' → logprob: -14.921730041503906

Token 232: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0380721352994442
    2. ' self' → logprob: -3.288072109222412
    3. '10' → logprob: -10.41307258605957
    4. ' ' → logprob: -14.91307258605957
    5. '	self' → logprob: -15.66307258605957
    6. '=self' → logprob: -16.66307258605957
    7. '0' → logprob: -17.28807258605957
    8. '   ' → logprob: -17.78807258605957
    9. '(self' → logprob: -18.78807258605957
    10. ',self' → logprob: -19.53807258605957

Token 233: '.start' (ID: 10181)
  Prédit: '.start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.start' → logprob: -0.004080301150679588
    2. 'start' → logprob: -5.504080295562744
    3. '.' → logprob: -13.629080772399902
    4. ' start' → logprob: -14.379080772399902
    5. '.end' → logprob: -17.504079818725586
    6. '	start' → logprob: -18.004079818725586
    7. '10' → logprob: -18.629079818725586
    8. ' .' → logprob: -19.004079818725586
    9. 'Start' → logprob: -19.004079818725586
    10. '_start' → logprob: -19.004079818725586

Token 234: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.06027384474873543
    2. ':' → logprob: -2.9352738857269287
    3. ' or' → logprob: -5.31027364730835
    4. ':return' → logprob: -8.935274124145508
    5. '       ' → logprob: -9.060274124145508
    6. '           ' → logprob: -9.685274124145508
    7. ' :
' → logprob: -10.435274124145508
    8. '   ' → logprob: -10.810274124145508
    9. '+' → logprob: -11.060274124145508
    10. '0' → logprob: -11.435274124145508

Token 235: '           ' (ID: 352)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015454530948773026
    2. '           ' → logprob: -7.001545429229736
    3. '       ' → logprob: -7.501545429229736
    4. 'return' → logprob: -9.876545906066895
    5. ' ' → logprob: -10.626545906066895
    6. ':
' → logprob: -14.001545906066895
    7. '   ' → logprob: -14.001545906066895
    8. '	       ' → logprob: -14.126545906066895
    9. ':' → logprob: -14.251545906066895
    10. ' return' → logprob: -14.376545906066895

Token 236: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009087922982871532
    2. 'return' (adapté à ' return') → logprob: -4.759088039398193
    3. '           ' → logprob: -7.759088039398193
    4. ' ' → logprob: -10.759087562561035
    5. ' return' → logprob: -11.009087562561035
    6. '       ' → logprob: -11.884087562561035
    7. '   ' → logprob: -13.759087562561035
    8. '               ' → logprob: -15.134087562561035
    9. '	return' → logprob: -15.634087562561035
    10. '
' → logprob: -16.38408851623535

Token 237: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017970333283301443
    2. ' ' → logprob: -8.625179290771484
    3. '           ' → logprob: -16.125179290771484
    4. '       ' → logprob: -17.625179290771484
    5. '   ' → logprob: -18.125179290771484
    6. '۰' → logprob: -20.500179290771484
    7. '               ' → logprob: -22.000179290771484
    8. '000' → logprob: -22.000179290771484
    9. '         ' → logprob: -22.250179290771484
    10. '00' → logprob: -22.250179290771484

Token 238: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -18.375001907348633
    4. '۰' → logprob: -19.500001907348633
    5. '000' → logprob: -20.500001907348633
    6. '０' → logprob: -21.125001907348633
    7. '00' → logprob: -21.250001907348633
    8. '       ' → logprob: -21.375001907348633
    9. '০' → logprob: -21.750001907348633
    10. '०' → logprob: -22.062501907348633

Token 239: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.043065305799245834
    2. '<|end|>' → logprob: -3.293065309524536
    3. '
' → logprob: -6.043065071105957
    4. '        
' → logprob: -7.418065071105957
    5. '<|end|>' → logprob: -7.418065071105957
    6. 'elif' → logprob: -7.543065071105957
    7. ' elif' → logprob: -8.918065071105957
    8. '   ' → logprob: -8.918065071105957
    9. '\n' → logprob: -9.293065071105957
    10. '	' → logprob: -9.793065071105957

Token 240: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014234490226954222
    2. 'elif' → logprob: -6.751423358917236
    3. 'return' → logprob: -9.376423835754395
    4. ' elif' → logprob: -9.751423835754395
    5. '
' → logprob: -10.501423835754395
    6. '        
' → logprob: -10.626423835754395
    7. ',' → logprob: -11.001423835754395
    8. '<|end|>' → logprob: -11.376423835754395
    9. ')' → logprob: -12.376423835754395
    10. 'else' → logprob: -12.626423835754395

Token 241: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24568693339824677
    2. 'return' (adapté à ' return') → logprob: -1.6206868886947632
    3. 'elif' → logprob: -4.245687007904053
    4. 'else' → logprob: -5.620687007904053
    5. ' return' → logprob: -6.370687007904053
    6. ' elif' → logprob: -9.120686531066895
    7. 'min' → logprob: -9.120686531066895
    8. '
' → logprob: -9.495686531066895
    9. '        
' → logprob: -10.120686531066895
    10. ' else' → logprob: -10.370686531066895

Token 242: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.6931523084640503
    2. 'min' → logprob: -0.6931523084640503
    3. '	min' → logprob: -12.69315242767334
    4. 'max' → logprob: -13.94315242767334
    5. ' max' → logprob: -14.81815242767334
    6. '   ' → logprob: -15.44315242767334
    7. '(min' → logprob: -15.94315242767334
    8. '       ' → logprob: -16.193151473999023
    9. '[min' → logprob: -16.193151473999023
    10. ' ' → logprob: -16.443151473999023

Token 243: '(volume' (ID: 162071)
  Prédit: '(volume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(volume' → logprob: -5.200166469876422e-06
    2. '(' → logprob: -12.375004768371582
    3. 'volume' → logprob: -14.375004768371582
    4. '(max' → logprob: -15.625004768371582
    5. ' (' → logprob: -16.2500057220459
    6. '((' → logprob: -16.7500057220459
    7. '(vol' → logprob: -17.0000057220459
    8. ' volume' → logprob: -18.3750057220459
    9. '(quantity' → logprob: -18.8750057220459
    10. '(amount' → logprob: -19.5000057220459

Token 244: ',' (ID: 11)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4302248954772949
    2. ',' → logprob: -1.055224895477295
    3. ' ,' → logprob: -6.805224895477295
    4. '-' → logprob: -7.805224895477295
    5. ' ' → logprob: -12.680225372314453
    6. ',
' → logprob: -13.930225372314453
    7. '   ' → logprob: -14.430225372314453
    8. ' ' → logprob: -14.555225372314453
    9. ')' → logprob: -14.805225372314453
    10. ' -,' → logprob: -14.805225372314453

Token 245: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5759403109550476
    2. ' self' → logprob: -0.8259403109550476
    3. '20' → logprob: -14.825940132141113
    4. '       ' → logprob: -15.075940132141113
    5. '	self' → logprob: -16.57594108581543
    6. ')' → logprob: -16.82594108581543
    7. '(self' → logprob: -16.82594108581543
    8. ' ' → logprob: -17.20094108581543
    9. '[self' → logprob: -17.70094108581543
    10. '10' → logprob: -17.82594108581543

Token 246: '.end' (ID: 10289)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5114141702651978
    2. '.end' → logprob: -1.7614141702651978
    3. ' self' → logprob: -1.8864141702651978
    4. 'end' → logprob: -2.636414051055908
    5. ' end' → logprob: -5.761414051055908
    6. '.self' → logprob: -6.886414051055908
    7. ')' → logprob: -7.886414051055908
    8. '20' → logprob: -8.261414527893066
    9. '.' → logprob: -8.886414527893066
    10. ' ' → logprob: -9.011414527893066

Token 247: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007179115782491863
    2. ' )' → logprob: -7.250718116760254
    3. ' -' → logprob: -12.250718116760254
    4. ')-' → logprob: -13.500718116760254
    5. '-' → logprob: -13.875718116760254
    6. '}' → logprob: -16.375717163085938
    7. '-)' → logprob: -16.375717163085938
    8. '   ' → logprob: -16.375717163085938
    9. '）' → logprob: -16.875717163085938
    10. '`)' → logprob: -16.875717163085938

Token 248: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0061340294778347015
    2. '-' → logprob: -5.256134033203125
    3. ')' → logprob: -7.131134033203125
    4. ' ' → logprob: -10.006134033203125
    5. ' ' → logprob: -11.256134033203125
    6. '        ' → logprob: -11.631134033203125
    7. ')-' → logprob: -11.756134033203125
    8. ' –' → logprob: -12.256134033203125
    9. '       ' → logprob: -12.506134033203125
    10. ',' → logprob: -12.506134033203125

Token 249: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6931501626968384
    2. 'self' → logprob: -0.6931501626968384
    3. '	self' → logprob: -13.068150520324707
    4. ' ' → logprob: -15.318150520324707
    5. '10' → logprob: -15.443150520324707
    6. '       ' → logprob: -15.943150520324707
    7. '(self' → logprob: -16.31814956665039
    8. ' ' → logprob: -16.69314956665039
    9. '<|end|>' → logprob: -17.06814956665039
    10. '=self' → logprob: -17.19314956665039

Token 250: '.start' (ID: 10181)
  Prédit: '.start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.start' → logprob: -0.018164223060011864
    2. 'start' → logprob: -4.018164157867432
    3. '.' → logprob: -11.26816463470459
    4. ' start' → logprob: -14.64316463470459
    5. '.end' → logprob: -14.89316463470459
    6. '_start' → logprob: -15.01816463470459
    7. '	start' → logprob: -15.64316463470459
    8. ' .' → logprob: -16.018163681030273
    9. '[start' → logprob: -17.018163681030273
    10. 'Start' → logprob: -17.143163681030273

Token 251: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19475674629211426
    2. '<|end|>' → logprob: -1.9447567462921143
    3. '
' → logprob: -3.4447567462921143
    4. '<|end|>' → logprob: -6.694756507873535
    5. 'def' → logprob: -8.069756507873535
    6. '```' → logprob: -8.319756507873535
    7. '    
' → logprob: -9.569756507873535
    8. '

' → logprob: -9.944756507873535
    9. ' def' → logprob: -9.944756507873535
    10. '  ' → logprob: -10.944756507873535

Token 252: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 253: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.04413827136158943
    2. '
' → logprob: -4.169138431549072
    3. '   ' → logprob: -4.169138431549072
    4. '<|end|>' → logprob: -5.044138431549072
    5. ' def' → logprob: -5.294138431549072
    6. '<|end|>' → logprob: -8.419137954711914
    7. '    
' → logprob: -8.794137954711914
    8. '

' → logprob: -9.169137954711914
    9. '	def' → logprob: -9.419137954711914
    10. '```' → logprob: -9.544137954711914

Token 254: ' charge' (ID: 8363)
  Prédit: 'charge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'charge' → logprob: -0.01251224149018526
    2. ' charge' → logprob: -4.38751220703125
    3. 'def' → logprob: -13.63751220703125
    4. 'charged' → logprob: -15.01251220703125
    5. '_charge' → logprob: -15.26251220703125
    6. '   ' → logprob: -15.76251220703125
    7. ' ' → logprob: -15.88751220703125
    8. '
' → logprob: -16.01251220703125
    9. 'char' → logprob: -16.38751220703125
    10. 'Charge' → logprob: -16.76251220703125

Token 255: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -6.704273118884885e-07
    2. '_' → logprob: -14.500000953674316
    3. 'for' → logprob: -16.75
    4. '_FOR' → logprob: -18.25
    5. 'For' → logprob: -18.375
    6. ' for' → logprob: -18.75
    7. ' _' → logprob: -19.0
    8. '_For' → logprob: -19.75
    9. ')_' → logprob: -19.875
    10. '_f' → logprob: -20.5

Token 256: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0013727305922657251
    2. '(' → logprob: -6.626372814178467
    3. ' (' → logprob: -10.126372337341309
    4. 'self' → logprob: -12.376372337341309
    5. ' self' → logprob: -13.626372337341309
    6. '(
' → logprob: -13.751372337341309
    7. ' ' → logprob: -16.501373291015625
    8. '	self' → logprob: -16.751373291015625
    9. '   ' → logprob: -17.001373291015625
    10. '(s' → logprob: -17.126373291015625

Token 257: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04568791016936302
    2. '(volume' → logprob: -3.1706879138946533
    3. ' (' → logprob: -6.295687675476074
    4. ' ,' → logprob: -8.045687675476074
    5. ' volume' → logprob: -8.295687675476074
    6. 'volume' → logprob: -8.795687675476074
    7. ')' → logprob: -10.045687675476074
    8. '(' → logprob: -10.295687675476074
    9. '(self' → logprob: -11.295687675476074
    10. 'self' → logprob: -12.170687675476074

Token 258: ' volume' (ID: 10945)
  Prédit: ' volume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' volume' → logprob: -0.15907157957553864
    2. 'volume' → logprob: -2.159071683883667
    3. ' self' → logprob: -4.034071445465088
    4. 'self' → logprob: -4.284071445465088
    5. '(volume' → logprob: -10.534071922302246
    6. '       ' → logprob: -10.659071922302246
    7. 'def' → logprob: -11.034071922302246
    8. 'int' → logprob: -11.284071922302246
    9. '   ' → logprob: -11.284071922302246
    10. ' ' → logprob: -11.534071922302246

Token 259: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02559371292591095
    2. ')' → logprob: -4.0255937576293945
    3. '):' → logprob: -5.2755937576293945
    4. ',' → logprob: -6.5255937576293945
    5. '(volume' → logprob: -8.525593757629395
    6. '   ' → logprob: -8.900593757629395
    7. ' :' → logprob: -9.275593757629395
    8. '(' → logprob: -9.525593757629395
    9. '(self' → logprob: -9.650593757629395
    10. ' (' → logprob: -9.900593757629395

Token 260: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.160516157746315
    2. ' int' → logprob: -1.9105161428451538
    3. ' volume' → logprob: -8.660515785217285
    4. 'volume' → logprob: -9.160515785217285
    5. '(int' → logprob: -12.785515785217285
    6. '[int' → logprob: -12.910515785217285
    7. ' ' → logprob: -13.285515785217285
    8. 'self' → logprob: -13.285515785217285
    9. ':int' → logprob: -13.535515785217285
    10. '   ' → logprob: -13.785515785217285

Token 261: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06214537471532822
    2. '):' → logprob: -2.812145471572876
    3. '):
' → logprob: -9.187145233154297
    4. ':' → logprob: -9.687145233154297
    5. '   ' → logprob: -11.687145233154297
    6. ' )' → logprob: -13.562145233154297
    7. ')->' → logprob: -13.812145233154297
    8. '       ' → logprob: -13.937145233154297
    9. ' ):' → logprob: -14.187145233154297
    10. '):

' → logprob: -14.937145233154297

Token 262: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01354957465082407
    2. '       ' → logprob: -5.0135498046875
    3. '   ' → logprob: -5.8885498046875
    4. ':
' → logprob: -6.7635498046875
    5. ':return' → logprob: -7.1385498046875
    6. ' ->' → logprob: -7.6385498046875
    7. ' :' → logprob: -7.6385498046875
    8. '->' → logprob: -8.1385498046875
    9. '<|end|>' → logprob: -8.5135498046875
    10. '        ' → logprob: -9.5135498046875

Token 263: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6937633752822876
    2. ' int' → logprob: -0.6937633752822876
    3. '(int' → logprob: -7.443763256072998
    4. ' self' → logprob: -11.818763732910156
    5. ' (' → logprob: -12.068763732910156
    6. ' return' → logprob: -12.318763732910156
    7. 'self' → logprob: -12.443763732910156
    8. 'return' → logprob: -13.193763732910156
    9. ' ' → logprob: -13.193763732910156
    10. '   ' → logprob: -13.443763732910156

Token 264: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08739778399467468
    2. ':
' → logprob: -2.962397813796997
    3. '       ' → logprob: -3.462397813796997
    4. ':return' → logprob: -8.587397575378418
    5. '(self' → logprob: -9.337397575378418
    6. '():' → logprob: -9.337397575378418
    7. '   ' → logprob: -9.462397575378418
    8. '():
' → logprob: -9.462397575378418
    9. '):
' → logprob: -10.337397575378418
    10. '(' → logprob: -10.462397575378418

Token 265: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016026156023144722
    2. 'return' → logprob: -4.641026020050049
    3. '   ' → logprob: -5.266026020050049
    4. 'volume' → logprob: -7.641026020050049
    5. ' return' → logprob: -8.016026496887207
    6. 'app' → logprob: -8.891026496887207
    7. 'amount' → logprob: -10.891026496887207
    8. 'ap' → logprob: -11.016026496887207
    9. 'quantity' → logprob: -11.141026496887207
    10. '```' → logprob: -11.266026496887207

Token 266: ' v' (ID: 323)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.8079922199249268
    2. 'return' → logprob: -0.9329922199249268
    3. '       ' → logprob: -2.8079922199249268
    4. 'units' → logprob: -3.0579922199249268
    5. 'volume' → logprob: -3.8079922199249268
    6. 'ap' → logprob: -4.307991981506348
    7. 'unit' → logprob: -5.682991981506348
    8. 'vol' → logprob: -5.807991981506348
    9. 'amount' → logprob: -6.182991981506348
    10. 'usage' → logprob: -6.432991981506348

Token 267: ' =' (ID: 314)
  Prédit: 'ol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ol' → logprob: -0.16818509995937347
    2. ' =' → logprob: -1.9181851148605347
    3. '=' → logprob: -4.918185234069824
    4. '   ' → logprob: -8.168185234069824
    5. 'OLUME' → logprob: -8.293185234069824
    6. '       ' → logprob: -10.918185234069824
    7. 'OL' → logprob: -11.043185234069824
    8. 'app' → logprob: -11.918185234069824
    9. '_app' → logprob: -12.168185234069824
    10. ' ' → logprob: -12.543185234069824

Token 268: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.47411423921585083
    2. ' self' → logprob: -0.9741142392158508
    3. 'max' → logprob: -11.224114418029785
    4. ' max' → logprob: -11.474114418029785
    5. ' min' → logprob: -11.724114418029785
    6. 'min' → logprob: -12.724114418029785
    7. '       ' → logprob: -13.599114418029785
    8. '	self' → logprob: -14.599114418029785
    9. '(self' → logprob: -14.974114418029785
    10. '   ' → logprob: -15.599114418029785

Token 269: '.app' (ID: 2689)
  Prédit: '.app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.app' → logprob: -0.006821220740675926
    2. 'app' → logprob: -5.006821155548096
    3. '.' → logprob: -9.506821632385254
    4. ' .' → logprob: -11.131821632385254
    5. '.ap' → logprob: -11.256821632385254
    6. ' applicable' → logprob: -13.506821632385254
    7. '@app' → logprob: -14.131821632385254
    8. '_app' → logprob: -14.506821632385254
    9. '   ' → logprob: -14.881821632385254
    10. '.apply' → logprob: -15.381821632385254

Token 270: 'licable' (ID: 127292)
  Prédit: 'licable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'licable' → logprob: -0.00033713103039190173
    2. 'lic' → logprob: -8.000337600708008
    3. 'liable' → logprob: -13.875337600708008
    4. 'lical' → logprob: -15.125337600708008
    5. 'licant' → logprob: -15.375337600708008
    6. 'lica' → logprob: -16.125337600708008
    7. 'li' → logprob: -17.000337600708008
    8. 'l' → logprob: -17.500337600708008
    9. 'lie' → logprob: -17.875337600708008
    10. 'lication' → logprob: -17.875337600708008

Token 271: '_volume' (ID: 64366)
  Prédit: '_volume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_volume' → logprob: -5.6696149840718135e-05
    2. '_' → logprob: -9.875056266784668
    3. 'volume' → logprob: -12.375056266784668
    4. '_v' → logprob: -15.125056266784668
    5. ' _' → logprob: -16.000057220458984
    6. '_vol' → logprob: -16.000057220458984
    7. '_voltage' → logprob: -16.000057220458984
    8. ' volume' → logprob: -16.125057220458984
    9. '(volume' → logprob: -16.125057220458984
    10. '_VOLUME' → logprob: -16.375057220458984

Token 272: '(volume' (ID: 162071)
  Prédit: '(volume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(volume' → logprob: -0.00012797261297237128
    2. '(' → logprob: -9.000127792358398
    3. ' (' → logprob: -13.000127792358398
    4. '(vol' → logprob: -13.125127792358398
    5. '(value' → logprob: -16.3751277923584
    6. '(v' → logprob: -16.6251277923584
    7. '(quantity' → logprob: -16.8751277923584
    8. '(amount' → logprob: -17.6251277923584
    9. '(version' → logprob: -17.6251277923584
    10. '(
' → logprob: -18.1251277923584

Token 273: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002888086950406432
    2. ')
' → logprob: -5.877888202667236
    3. ' )' → logprob: -9.627887725830078
    4. ' )
' → logprob: -12.252887725830078
    5. ')
' → logprob: -12.752887725830078
    6. ')*' → logprob: -12.877887725830078
    7. '       ' → logprob: -13.002887725830078
    8. ')

' → logprob: -13.127887725830078
    9. '   ' → logprob: -13.502887725830078
    10. '```' → logprob: -15.002887725830078

Token 274: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2082853764295578
    2. 'return' → logprob: -2.458285331726074
    3. ' return' → logprob: -2.833285331726074
    4. '
' → logprob: -3.208285331726074
    5. '        
' → logprob: -6.833285331726074
    6. '   ' → logprob: -7.458285331726074
    7. '	return' → logprob: -7.583285331726074
    8. '  
' → logprob: -8.208285331726074
    9. '<|end|>' → logprob: -8.208285331726074
    10. '	' → logprob: -8.958285331726074

Token 275: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.009941070340573788
    2. ' return' → logprob: -4.759941101074219
    3. '       ' → logprob: -6.634941101074219
    4. '
' → logprob: -12.009941101074219
    5. '	return' → logprob: -12.259941101074219
    6. '   ' → logprob: -14.884941101074219
    7. '        
' → logprob: -14.884941101074219
    8. '```' → logprob: -15.509941101074219
    9. 'eturn' → logprob: -16.13494110107422
    10. ':return' → logprob: -17.25994110107422

Token 276: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.47790905833244324
    2. ' v' → logprob: -0.9779090881347656
    3. 'self' → logprob: -5.727909088134766
    4. ' self' → logprob: -7.477909088134766
    5. 'int' → logprob: -13.227909088134766
    6. '	v' → logprob: -13.477909088134766
    7. ' ' → logprob: -14.227909088134766
    8. '   ' → logprob: -14.602909088134766
    9. ' int' → logprob: -15.727909088134766
    10. ' ' → logprob: -15.852909088134766

Token 277: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.04308289289474487
    2. '*' → logprob: -3.1680829524993896
    3. '*self' → logprob: -9.543083190917969
    4. ' ' → logprob: -12.043083190917969
    5. ' ' → logprob: -12.668083190917969
    6. 'self' → logprob: -13.293083190917969
    7. ' self' → logprob: -14.168083190917969
    8. '```' → logprob: -15.293083190917969
    9. '   ' → logprob: -16.04308319091797
    10. '  ' → logprob: -16.91808319091797

Token 278: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20141500234603882
    2. ' self' → logprob: -1.7014150619506836
    3. '125' → logprob: -13.826415061950684
    4. ' ' → logprob: -15.326415061950684
    5. '	self' → logprob: -16.451414108276367
    6. '(self' → logprob: -16.701414108276367
    7. '       ' → logprob: -17.076414108276367
    8. '=self' → logprob: -17.201414108276367
    9. '   ' → logprob: -18.076414108276367
    10. '
' → logprob: -18.076414108276367

Token 279: '.unit' (ID: 51513)
  Prédit: '.unit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.unit' → logprob: -0.0002943479048553854
    2. '.' → logprob: -8.50029468536377
    3. ' .' → logprob: -9.50029468536377
    4. 'unit' → logprob: -11.12529468536377
    5. '.user' → logprob: -13.87529468536377
    6. ' unit' → logprob: -16.000293731689453
    7. '	unit' → logprob: -17.000293731689453
    8. '.token' → logprob: -17.125293731689453
    9. '.units' → logprob: -17.500293731689453
    10. '.Unit' → logprob: -17.750293731689453

Token 280: '_price' (ID: 18814)
  Prédit: '_price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -4.320199877838604e-07
    2. 'price' → logprob: -15.875
    3. '_' → logprob: -16.5
    4. '_PRICE' → logprob: -16.625
    5. ' _' → logprob: -17.75
    6. '125' → logprob: -18.375
    7. '_prices' → logprob: -18.375
    8. '	price' → logprob: -19.0
    9. 'Price' → logprob: -19.375
    10. '_rate' → logprob: -19.5

Token 281: '


' (ID: 2499)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6349601745605469
    2. '<|end|>' → logprob: -0.7599601745605469
    3. '

' → logprob: -6.634960174560547
    4. 'class' → logprob: -7.634960174560547
    5. '<|end|>' → logprob: -7.884960174560547
    6. '


' → logprob: -9.134960174560547
    7. '```' → logprob: -10.134960174560547
    8. '\n' → logprob: -11.759960174560547
    9. ' class' → logprob: -11.759960174560547
    10. '<class' → logprob: -12.259960174560547

Token 282: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0006491714157164097
    2. '
' → logprob: -7.3756489753723145
    3. '```' → logprob: -11.625649452209473
    4. ' class' → logprob: -12.375649452209473
    5. '<|end|>' → logprob: -12.750649452209473
    6. '<class' → logprob: -12.750649452209473
    7. '

' → logprob: -12.875649452209473
    8. '"class' → logprob: -14.625649452209473
    9. '<|end|>' → logprob: -15.125649452209473
    10. '``' → logprob: -16.375648498535156

Token 283: ' Tier' (ID: 44983)
  Prédit: 'Tier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tier' → logprob: -0.0004895264864899218
    2. ' Tier' → logprob: -7.625489711761475
    3. 'class' → logprob: -14.750489234924316
    4. 'tier' → logprob: -15.125489234924316
    5. ' tier' → logprob: -15.250489234924316
    6. '
' → logprob: -16.125490188598633
    7. 'Tie' → logprob: -16.250490188598633
    8. 'T' → logprob: -17.000490188598633
    9. 'Terr' → logprob: -17.625490188598633
    10. 'Type' → logprob: -17.875490188598633

Token 284: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '(' → logprob: -17.125
    4. '
' → logprob: -19.625
    5. 'Three' → logprob: -19.75
    6. 'class' → logprob: -20.75
    7. '4' → logprob: -20.875
    8. '1' → logprob: -21.0
    9. '۳' → logprob: -21.125
    10. '   ' → logprob: -21.125

Token 285: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -5.228561349213123e-05
    2. '(' → logprob: -9.875052452087402
    3. '(T' → logprob: -14.375052452087402
    4. ' (' → logprob: -16.250051498413086
    5. 'class' → logprob: -17.375051498413086
    6. '```' → logprob: -17.500051498413086
    7. '(L' → logprob: -17.625051498413086
    8. '(S' → logprob: -18.000051498413086
    9. 'Water' → logprob: -18.000051498413086
    10. '(World' → logprob: -18.125051498413086

Token 286: 'ater' (ID: 1005)
  Prédit: 'ater'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ater' → logprob: -0.02242005430161953
    2. 'class' → logprob: -4.3974199295043945
    3. 'Water' → logprob: -5.1474199295043945
    4. '(T' → logprob: -6.1474199295043945
    5. '(W' → logprob: -7.7724199295043945
    6. 'ATER' → logprob: -7.8974199295043945
    7. 'atter' → logprob: -8.147419929504395
    8. '1' → logprob: -9.272419929504395
    9. '```' → logprob: -9.272419929504395
    10. '(' → logprob: -9.397419929504395

Token 287: 'Charge' (ID: 46218)
  Prédit: 'Charge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Charge' → logprob: -6.869017852295656e-06
    2. '_charge' → logprob: -12.375006675720215
    3. 'charge' → logprob: -13.500006675720215
    4. ' Charge' → logprob: -14.625006675720215
    5. '(' → logprob: -15.375006675720215
    6. 'Price' → logprob: -15.875006675720215
    7. 'class' → logprob: -16.37500762939453
    8. 'Charges' → logprob: -16.75000762939453
    9. '_' → logprob: -16.87500762939453
    10. '```' → logprob: -17.50000762939453

Token 288: 'Tier' (ID: 79698)
  Prédit: 'Tier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tier' → logprob: -0.040933966636657715
    2. '(T' → logprob: -3.2909340858459473
    3. '(' → logprob: -6.790934085845947
    4. 'Charge' → logprob: -7.290934085845947
    5. 'Volume' → logprob: -8.165933609008789
    6. 'tier' → logprob: -8.665933609008789
    7. 'T' → logprob: -8.915933609008789
    8. '```' → logprob: -9.665933609008789
    9. ')' → logprob: -10.290933609008789
    10. 'Price' → logprob: -10.290933609008789

Token 289: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.020686227828264236
    2. '):' → logprob: -3.895686149597168
    3. '):
' → logprob: -9.020686149597168
    4. '):

' → logprob: -11.645686149597168
    5. '   ' → logprob: -12.020686149597168
    6. '(W' → logprob: -12.020686149597168
    7. ')' → logprob: -13.395686149597168
    8. ':' → logprob: -15.520686149597168
    9. ' ):
' → logprob: -15.770686149597168
    10. 'class' → logprob: -15.770686149597168

Token 290: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017981117125600576
    2. 'def' → logprob: -6.876798152923584
    3. ' def' → logprob: -7.376798152923584
    4. '```' → logprob: -9.001797676086426
    5. 'class' → logprob: -11.251797676086426
    6. '	def' → logprob: -14.126797676086426
    7. '  ' → logprob: -14.501797676086426
    8. ')' → logprob: -14.501797676086426
    9. ':' → logprob: -14.501797676086426
    10. '    ' → logprob: -14.751797676086426

Token 291: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.011870074085891247
    2. ' def' → logprob: -4.51186990737915
    3. '   ' → logprob: -7.13686990737915
    4. '```' → logprob: -10.636870384216309
    5. 'class' → logprob: -13.511870384216309
    6. '	def' → logprob: -14.011870384216309
    7. '``' → logprob: -16.636869430541992
    8. '__' → logprob: -16.636869430541992
    9. ':def' → logprob: -17.011869430541992
    10. ' ' → logprob: -17.136869430541992

Token 292: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5706997513771057
    2. 'def' → logprob: -1.695699691772461
    3. ' __' → logprob: -1.695699691772461
    4. ' def' → logprob: -2.695699691772461
    5. 'init' → logprob: -8.570699691772461
    6. '```' → logprob: -8.945699691772461
    7. '_init' → logprob: -9.445699691772461
    8. '.__' → logprob: -11.695699691772461
    9. '___' → logprob: -12.445699691772461
    10. ' init' → logprob: -12.445699691772461

Token 293: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.00011653638648567721
    2. 'def' → logprob: -9.125116348266602
    3. 'int' → logprob: -12.625116348266602
    4. ' init' → logprob: -13.500116348266602
    5. 'it' → logprob: -13.875116348266602
    6. '```' → logprob: -14.125116348266602
    7. '(init' → logprob: -15.500116348266602
    8. '   ' → logprob: -15.750116348266602
    9. '  ' → logprob: -15.875116348266602
    10. '	init' → logprob: -16.2501163482666

Token 294: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.03850535303354263
    2. '(self' → logprob: -3.2885053157806396
    3. '__' → logprob: -9.038505554199219
    4. 'self' → logprob: -9.163505554199219
    5. '   ' → logprob: -9.288505554199219
    6. '__(
' → logprob: -9.288505554199219
    7. '(' → logprob: -10.538505554199219
    8. '       ' → logprob: -11.288505554199219
    9. '```' → logprob: -12.288505554199219
    10. '_(' → logprob: -12.913505554199219

Token 295: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.4121114822482923e-06
    2. ' self' → logprob: -12.875003814697266
    3. '(self' → logprob: -15.375003814697266
    4. '       ' → logprob: -15.625003814697266
    5. '
' → logprob: -15.750003814697266
    6. '   ' → logprob: -15.875003814697266
    7. ')' → logprob: -16.875003814697266
    8. '):
' → logprob: -17.250003814697266
    9. '0' → logprob: -17.750003814697266
    10. '10' → logprob: -17.750003814697266

Token 296: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04726926609873772
    2. '():
' → logprob: -3.922269344329834
    3. '       ' → logprob: -4.422269344329834
    4. '):' → logprob: -5.297269344329834
    5. '()):
' → logprob: -5.672269344329834
    6. '(self' → logprob: -6.297269344329834
    7. '   ' → logprob: -6.422269344329834
    8. 'self' → logprob: -6.672269344329834
    9. '():' → logprob: -7.297269344329834
    10. '()' → logprob: -8.172268867492676

Token 297: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03814636915922165
    2. '       ' → logprob: -3.2881462574005127
    3. ' self' → logprob: -9.538146018981934
    4. '   ' → logprob: -10.788146018981934
    5. '```' → logprob: -11.913146018981934
    6. '(self' → logprob: -13.163146018981934
    7. '0' → logprob: -13.413146018981934
    8. 'def' → logprob: -14.788146018981934
    9. '	self' → logprob: -15.163146018981934
    10. ' ' → logprob: -15.163146018981934

Token 298: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.002505386248230934
    2. '       ' → logprob: -6.002505302429199
    3. ' self' → logprob: -10.5025053024292
    4. '	self' → logprob: -14.3775053024292
    5. '0' → logprob: -14.7525053024292
    6. '   ' → logprob: -14.8775053024292
    7. ' ' → logprob: -15.5025053024292
    8. '(self' → logprob: -15.7525053024292
    9. 'super' → logprob: -15.7525053024292
    10. 'def' → logprob: -16.002506256103516

Token 299: '.unit' (ID: 51513)
  Prédit: '.unit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.unit' → logprob: -0.12726563215255737
    2. 'unit' → logprob: -2.127265691757202
    3. ' .' → logprob: -9.377265930175781
    4. '.' → logprob: -9.502265930175781
    5. ' unit' → logprob: -9.627265930175781
    6. '   ' → logprob: -9.877265930175781
    7. 'class' → logprob: -11.002265930175781
    8. '_unit' → logprob: -11.252265930175781
    9. '	unit' → logprob: -11.252265930175781
    10. 'def' → logprob: -12.377265930175781

Token 300: '_price' (ID: 18814)
  Prédit: '_price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -9.73446003627032e-05
    2. 'price' → logprob: -9.250097274780273
    3. 'Price' → logprob: -15.000097274780273
    4. '_PRICE' → logprob: -15.375097274780273
    5. '   ' → logprob: -15.750097274780273
    6. '	price' → logprob: -16.000097274780273
    7. '_rate' → logprob: -16.375097274780273
    8. '=' → logprob: -16.375097274780273
    9. ' =' → logprob: -16.750097274780273
    10. ' price' → logprob: -16.750097274780273

Token 301: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31329044699668884
    2. ' =' → logprob: -1.3132904767990112
    3. '125' → logprob: -11.0632905960083
    4. '   ' → logprob: -11.9382905960083
    5. ':' → logprob: -12.3132905960083
    6. ' ' → logprob: -14.3132905960083
    7. 's' → logprob: -15.4382905960083
    8. '```' → logprob: -15.9382905960083
    9. '126' → logprob: -16.250789642333984
    10. '       ' → logprob: -16.438289642333984

Token 302: ' ' (ID: 220)
  Prédit: '150'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '150' → logprob: -1.1280598640441895
    2. '140' → logprob: -1.8780598640441895
    3. '155' → logprob: -2.0030598640441895
    4. '175' → logprob: -2.5030598640441895
    5. '135' → logprob: -3.1280598640441895
    6. '165' → logprob: -3.1280598640441895
    7. '200' → logprob: -3.2530598640441895
    8. '145' → logprob: -3.2530598640441895
    9. '160' → logprob: -3.3780598640441895
    10. '170' → logprob: -4.3780598640441895

Token 303: '140' (ID: 10165)
  Prédit: '150'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '150' → logprob: -1.625724196434021
    2. '140' → logprob: -2.0007243156433105
    3. '200' → logprob: -2.2507243156433105
    4. '135' → logprob: -2.2507243156433105
    5. '175' → logprob: -2.3757243156433105
    6. '155' → logprob: -2.3757243156433105
    7. '165' → logprob: -2.6257243156433105
    8. '160' → logprob: -3.1257243156433105
    9. '145' → logprob: -3.5007243156433105
    10. '185' → logprob: -4.1257243156433105

Token 304: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02857809141278267
    2. '
' → logprob: -3.653578042984009
    3. 'self' → logprob: -6.278578281402588
    4. '   ' → logprob: -8.02857780456543
    5. '<|end|>' → logprob: -10.77857780456543
    6. ' self' → logprob: -11.65357780456543
    7. ',' → logprob: -11.77857780456543
    8. ' ' → logprob: -11.90357780456543
    9. '	self' → logprob: -12.27857780456543
    10. '        
' → logprob: -12.65357780456543

Token 305: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01652131974697113
    2. 'self' → logprob: -4.141521453857422
    3. '   ' → logprob: -8.141521453857422
    4. '
' → logprob: -8.891521453857422
    5. ' self' → logprob: -10.391521453857422
    6. '	self' → logprob: -11.641521453857422
    7. '	' → logprob: -12.141521453857422
    8. ' ' → logprob: -12.516521453857422
    9. ',' → logprob: -12.516521453857422
    10. 'def' → logprob: -13.141521453857422

Token 306: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.014306885190308094
    2. '       ' → logprob: -4.264307022094727
    3. ' self' → logprob: -8.889307022094727
    4. ' ' → logprob: -13.514307022094727
    5. '	self' → logprob: -13.514307022094727
    6. '
' → logprob: -13.889307022094727
    7. '   ' → logprob: -14.014307022094727
    8. '(self' → logprob: -15.014307022094727
    9. 'from' → logprob: -15.389307022094727
    10. 'def' → logprob: -16.514307022094727

Token 307: '.start' (ID: 10181)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.05633983388543129
    2. '.start' → logprob: -2.931339740753174
    3. ' start' → logprob: -6.931339740753174
    4. '   ' → logprob: -8.056340217590332
    5. '       ' → logprob: -10.556340217590332
    6. '.' → logprob: -10.556340217590332
    7. '_start' → logprob: -10.556340217590332
    8. ' ' → logprob: -10.681340217590332
    9. '	start' → logprob: -11.431340217590332
    10. ' .' → logprob: -11.556340217590332

Token 308: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687291741371155
    2. ' =' → logprob: -1.1368728876113892
    3. '   ' → logprob: -14.136873245239258
    4. ' ' → logprob: -14.136873245239258
    5. '=
' → logprob: -16.136873245239258
    6. '20' → logprob: -16.386873245239258
    7. ':' → logprob: -16.636873245239258
    8. '10' → logprob: -17.136873245239258
    9. ' =
' → logprob: -17.136873245239258
    10. '＝' → logprob: -17.511873245239258

Token 309: ' ' (ID: 220)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.750001907348633
    3. '30' → logprob: -14.750001907348633
    4. '21' → logprob: -17.125001907348633
    5. '25' → logprob: -17.500001907348633
    6. '２０' → logprob: -17.875001907348633
    7. '   ' → logprob: -18.000001907348633
    8. '2' → logprob: -18.875001907348633
    9. '=' → logprob: -19.250001907348633
    10. '200' → logprob: -19.250001907348633

Token 310: '20' (ID: 455)
  Prédit: '20'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -6.153795766294934e-06
    2. '30' → logprob: -12.375005722045898
    3. ' ' → logprob: -14.125005722045898
    4. '25' → logprob: -15.125005722045898
    5. '21' → logprob: -15.812505722045898
    6. '2' → logprob: -15.875005722045898
    7. '２０' → logprob: -15.875005722045898
    8. '50' → logprob: -17.0000057220459
    9. '19' → logprob: -17.1875057220459
    10. '40' → logprob: -17.2500057220459

Token 311: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39243605732917786
    2. 'self' → logprob: -1.3924360275268555
    3. '
' → logprob: -2.6424360275268555
    4. '   ' → logprob: -5.5174360275268555
    5. ' self' → logprob: -8.017436027526855
    6. '<|end|>' → logprob: -8.267436027526855
    7. ',' → logprob: -9.892436027526855
    8. '	self' → logprob: -10.017436027526855
    9. 'def' → logprob: -10.142436027526855
    10. '(self' → logprob: -10.392436027526855

Token 312: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1845211684703827
    2. 'self' → logprob: -1.934521198272705
    3. '   ' → logprob: -4.434521198272705
    4. '
' → logprob: -4.434521198272705
    5. ' self' → logprob: -8.434520721435547
    6. ' ' → logprob: -10.934520721435547
    7. 'def' → logprob: -11.934520721435547
    8. '        
' → logprob: -11.934520721435547
    9. '           ' → logprob: -12.184520721435547
    10. '    
' → logprob: -12.184520721435547

Token 313: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.03687518462538719
    2. '30' → logprob: -3.4118752479553223
    3. '       ' → logprob: -6.286875247955322
    4. '40' → logprob: -8.036874771118164
    5. '50' → logprob: -8.286874771118164
    6. '25' → logprob: -8.411874771118164
    7. ' self' → logprob: -8.536874771118164
    8. '60' → logprob: -8.786874771118164
    9. '20' → logprob: -9.161874771118164
    10. '35' → logprob: -11.036874771118164

Token 314: '.end' (ID: 10289)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.042212795466184616
    2. '.end' → logprob: -4.167212963104248
    3. ' end' → logprob: -4.167212963104248
    4. '   ' → logprob: -5.167212963104248
    5. 'self' → logprob: -5.792212963104248
    6. ' ' → logprob: -7.417212963104248
    7. '20' → logprob: -8.29221248626709
    8. '       ' → logprob: -8.41721248626709
    9. '	end' → logprob: -8.66721248626709
    10. ' self' → logprob: -9.41721248626709

Token 315: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06196993216872215
    2. '=' → logprob: -2.8119699954986572
    3. ' ' → logprob: -13.811969757080078
    4. '   ' → logprob: -15.186969757080078
    5. '30' → logprob: -15.811969757080078
    6. '<|end|>' → logprob: -16.061969757080078
    7. ':' → logprob: -16.186969757080078
    8. '20' → logprob: -16.186969757080078
    9. 'def' → logprob: -16.311969757080078
    10. '  ' → logprob: -16.811969757080078

Token 316: ' ' (ID: 220)
  Prédit: '30'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '30' → logprob: -0.030982809141278267
    2. '40' → logprob: -3.905982732772827
    3. '50' → logprob: -5.155982971191406
    4. '35' → logprob: -5.405982971191406
    5. '100' → logprob: -10.280982971191406
    6. '60' → logprob: -10.655982971191406
    7. '45' → logprob: -10.780982971191406
    8. '25' → logprob: -11.280982971191406
    9. '300' → logprob: -11.905982971191406
    10. ' ' → logprob: -12.093482971191406

Token 317: '30' (ID: 1130)
  Prédit: '30'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '30' → logprob: -0.04428983852267265
    2. '40' → logprob: -3.9192898273468018
    3. '50' → logprob: -4.044290065765381
    4. '35' → logprob: -5.169290065765381
    5. '45' → logprob: -9.981789588928223
    6. '60' → logprob: -9.981789588928223
    7. '100' → logprob: -10.106789588928223
    8. '25' → logprob: -10.231789588928223
    9. ' ' → logprob: -11.106789588928223
    10. '300' → logprob: -11.794289588928223

Token 318: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22015510499477386
    2. '<|end|>' → logprob: -1.720155119895935
    3. 'def' → logprob: -4.595155239105225
    4. '
' → logprob: -5.220155239105225
    5. '<|end|>' → logprob: -6.095155239105225
    6. '```' → logprob: -7.595155239105225
    7. ' def' → logprob: -8.970154762268066
    8. '    
' → logprob: -9.720154762268066
    9. '  ' → logprob: -10.345154762268066
    10. ' ' → logprob: -11.220154762268066

Token 319: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006095519755035639
    2. 'def' → logprob: -5.1310954093933105
    3. ' def' → logprob: -9.006095886230469
    4. '```' → logprob: -11.131095886230469
    5. '<|end|>' → logprob: -11.381095886230469
    6. '    
' → logprob: -11.381095886230469
    7. '  ' → logprob: -12.881095886230469
    8. '    ' → logprob: -14.256095886230469
    9. ' ' → logprob: -14.256095886230469
    10. '	def' → logprob: -14.506095886230469

Token 320: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00029708960209973156
    2. ' def' → logprob: -8.250297546386719
    3. '   ' → logprob: -10.250297546386719
    4. '	def' → logprob: -15.500297546386719
    5. '    
' → logprob: -16.62529754638672
    6. '```' → logprob: -17.00029754638672
    7. '
' → logprob: -17.62529754638672
    8. ' ' → logprob: -18.00029754638672
    9. ':def' → logprob: -18.50029754638672
    10. '  
' → logprob: -19.50029754638672

Token 321: ' applicable' (ID: 12781)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.02202981896698475
    2. ' applicable' → logprob: -3.8970298767089844
    3. 'def' → logprob: -6.522029876708984
    4. '   ' → logprob: -11.772029876708984
    5. ' app' → logprob: -13.022029876708984
    6. 'ap' → logprob: -13.147029876708984
    7. ' def' → logprob: -13.522029876708984
    8. 'Applicable' → logprob: -13.522029876708984
    9. ' ' → logprob: -14.522029876708984
    10. '@app' → logprob: -15.272029876708984

Token 322: '_volume' (ID: 64366)
  Prédit: '_volume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_volume' → logprob: -2.339278580620885e-06
    2. '_' → logprob: -13.750001907348633
    3. 'volume' → logprob: -14.500001907348633
    4. 'def' → logprob: -14.750001907348633
    5. 'Volume' → logprob: -17.000001907348633
    6. '   ' → logprob: -17.000001907348633
    7. ' _' → logprob: -17.375001907348633
    8. '_vol' → logprob: -17.500001907348633
    9. '\' → logprob: -17.875001907348633
    10. '_voltage' → logprob: -17.875001907348633

Token 323: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -14.750000953674316
    3. ' (' → logprob: -16.25
    4. 'self' → logprob: -16.625
    5. '   ' → logprob: -17.75
    6. 'def' → logprob: -18.125
    7. '       ' → logprob: -19.375
    8. ' ' → logprob: -20.5
    9. '(
' → logprob: -21.0
    10. '	self' → logprob: -21.625

Token 324: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.194110756041482e-05
    2. 'self' → logprob: -10.125061988830566
    3. '(' → logprob: -11.500061988830566
    4. ',' → logprob: -11.750061988830566
    5. ')' → logprob: -13.125061988830566
    6. ' (' → logprob: -13.750061988830566
    7. ' self' → logprob: -15.250061988830566
    8. '   ' → logprob: -15.500061988830566
    9. 'def' → logprob: -16.00006103515625
    10. ',self' → logprob: -16.12506103515625

Token 325: ' volume' (ID: 10945)
  Prédit: 'volume'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'volume' → logprob: -0.6937698721885681
    2. 'self' → logprob: -1.443769931793213
    3. ' volume' → logprob: -1.443769931793213
    4. ' self' → logprob: -3.568769931793213
    5. 'def' → logprob: -11.193769454956055
    6. 'vol' → logprob: -11.318769454956055
    7. ' ' → logprob: -11.943769454956055
    8. '(volume' → logprob: -12.443769454956055
    9. 'int' → logprob: -12.568769454956055
    10. '   ' → logprob: -13.068769454956055

Token 326: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20260089635849
    2. ':' → logprob: -1.7026009559631348
    3. '   ' → logprob: -7.077600955963135
    4. '       ' → logprob: -8.952600479125977
    5. '(self' → logprob: -9.327600479125977
    6. '):' → logprob: -9.452600479125977
    7. '->' → logprob: -10.952600479125977
    8. ')->' → logprob: -11.952600479125977
    9. '):
' → logprob: -12.327600479125977
    10. 'def' → logprob: -12.327600479125977

Token 327: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.10020720958709717
    2. ' int' → logprob: -2.3502073287963867
    3. '(int' → logprob: -15.725207328796387
    4. '   ' → logprob: -15.850207328796387
    5. ' ' → logprob: -15.975207328796387
    6. '[int' → logprob: -16.47520637512207
    7. ':int' → logprob: -17.35020637512207
    8. '=int' → logprob: -17.72520637512207
    9. ')' → logprob: -17.97520637512207
    10. '	int' → logprob: -18.22520637512207

Token 328: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. '   ' → logprob: -14.125001907348633
    3. ' )' → logprob: -14.625001907348633
    4. ')->' → logprob: -15.250001907348633
    5. ':' → logprob: -15.750001907348633
    6. '->' → logprob: -16.625001907348633
    7. '       ' → logprob: -17.625001907348633
    8. '):' → logprob: -18.000001907348633
    9. '):
' → logprob: -18.125001907348633
    10. '`)' → logprob: -18.750001907348633

Token 329: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0014846279518678784
    2. '->' → logprob: -6.751484394073486
    3. ' ->' → logprob: -9.001484870910645
    4. ':
' → logprob: -9.626484870910645
    5. '       ' → logprob: -10.126484870910645
    6. '   ' → logprob: -10.126484870910645
    7. ')' → logprob: -11.251484870910645
    8. 'def' → logprob: -11.376484870910645
    9. 'if' → logprob: -11.876484870910645
    10. ' if' → logprob: -13.001484870910645

Token 330: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.001502717612311244
    2. ' int' → logprob: -6.501502513885498
    3. 'if' → logprob: -15.626502990722656
    4. ' ' → logprob: -16.876502990722656
    5. '[int' → logprob: -17.001502990722656
    6. 'return' → logprob: -17.126502990722656
    7. '10' → logprob: -17.251502990722656
    8. '   ' → logprob: -17.376502990722656
    9. '	int' → logprob: -17.501502990722656
    10. '(int' → logprob: -17.751502990722656

Token 331: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013255171477794647
    2. '       ' → logprob: -4.7632551193237305
    3. ':
' → logprob: -5.3882551193237305
    4. ')' → logprob: -10.76325511932373
    5. '->' → logprob: -11.51325511932373
    6. '   ' → logprob: -12.26325511932373
    7. ' ->' → logprob: -12.26325511932373
    8. ':return' → logprob: -12.26325511932373
    9. '):
' → logprob: -13.01325511932373
    10. '[' → logprob: -13.13825511932373

Token 332: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021195925772190094
    2. 'if' → logprob: -4.021195888519287
    3. '   ' → logprob: -5.896195888519287
    4. ' if' → logprob: -8.521196365356445
    5. '```' → logprob: -9.521196365356445
    6. '
' → logprob: -11.271196365356445
    7. '           ' → logprob: -13.521196365356445
    8. '     ' → logprob: -13.646196365356445
    9. 'def' → logprob: -13.896196365356445
    10. ' ' → logprob: -14.271196365356445

Token 333: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0009850544156506658
    2. '       ' → logprob: -7.500985145568848
    3. ' if' → logprob: -7.750985145568848
    4. '```' → logprob: -13.750985145568848
    5. '   ' → logprob: -15.000985145568848
    6. '
' → logprob: -15.625985145568848
    7. '``' → logprob: -17.37598419189453
    8. '	if' → logprob: -17.50098419189453
    9. 'return' → logprob: -17.75098419189453
    10. ' ' → logprob: -18.75098419189453

Token 334: ' volume' (ID: 10945)
  Prédit: ' volume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' volume' → logprob: -0.12692853808403015
    2. 'volume' → logprob: -2.1269285678863525
    3. '(volume' → logprob: -14.876928329467773
    4. '.volume' → logprob: -18.126928329467773
    5. 'Volume' → logprob: -18.251928329467773
    6. ' volumen' → logprob: -18.251928329467773
    7. 'vol' → logprob: -19.251928329467773
    8. ' ' → logprob: -19.376928329467773
    9. 'v' → logprob: -19.751928329467773
    10. '_volume' → logprob: -19.876928329467773

Token 335: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.10020763427019119
    2. '<=' → logprob: -2.350207567214966
    3. ' <' → logprob: -14.475207328796387
    4. ' ' → logprob: -16.100208282470703
    5. '<' → logprob: -16.225208282470703
    6. ' ≤' → logprob: -16.350208282470703
    7. ')<=' → logprob: -16.850208282470703
    8. '```' → logprob: -17.600208282470703
    9. '≤' → logprob: -18.100208282470703
    10. ']<=' → logprob: -18.225208282470703

Token 336: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.062039948999881744
    2. ' self' → logprob: -2.812039852142334
    3. '20' → logprob: -9.562040328979492
    4. ' ' → logprob: -13.687040328979492
    5. '	self' → logprob: -15.062040328979492
    6. '   ' → logprob: -16.187040328979492
    7. '[self' → logprob: -16.562040328979492
    8. '(self' → logprob: -16.562040328979492
    9. '=self' → logprob: -16.812040328979492
    10. '0' → logprob: -17.062040328979492

Token 337: '.start' (ID: 10181)
  Prédit: '.start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.start' → logprob: -0.02037171460688114
    2. 'start' → logprob: -4.020371913909912
    3. 'self' → logprob: -6.145371913909912
    4. '.' → logprob: -10.145371437072754
    5. '20' → logprob: -10.520371437072754
    6. '.self' → logprob: -12.145371437072754
    7. ' start' → logprob: -13.020371437072754
    8. ' self' → logprob: -13.395371437072754
    9. ' ' → logprob: -15.770371437072754
    10. '_start' → logprob: -16.02037239074707

Token 338: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.11579302698373795
    2. ':' → logprob: -2.365792989730835
    3. '           ' → logprob: -4.240793228149414
    4. '       ' → logprob: -6.990793228149414
    5. ':return' → logprob: -9.365793228149414
    6. '):
' → logprob: -10.490793228149414
    7. '():
' → logprob: -11.240793228149414
    8. '0' → logprob: -12.990793228149414
    9. ':

' → logprob: -12.990793228149414
    10. ' :
' → logprob: -13.115793228149414

Token 339: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012487401254475117
    2. '0' → logprob: -5.137487411499023
    3. 'return' → logprob: -5.137487411499023
    4. '       ' → logprob: -7.512487411499023
    5. ' return' → logprob: -9.137487411499023
    6. '   ' → logprob: -12.387487411499023
    7. ' ' → logprob: -12.762487411499023
    8. '1' → logprob: -14.012487411499023
    9. '
' → logprob: -14.512487411499023
    10. '10' → logprob: -14.637487411499023

Token 340: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6116925477981567
    2. '           ' → logprob: -0.8616925477981567
    3. 'return' (adapté à ' return') → logprob: -3.361692428588867
    4. ' return' → logprob: -7.986692428588867
    5. '       ' → logprob: -9.861692428588867
    6. ' ' → logprob: -9.986692428588867
    7. '   ' → logprob: -13.236692428588867
    8. '	return' → logprob: -13.861692428588867
    9. '               ' → logprob: -13.986692428588867
    10. '8' → logprob: -14.111692428588867

Token 341: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011048882268369198
    2. ' ' → logprob: -4.511048793792725
    3. '           ' → logprob: -14.011049270629883
    4. '       ' → logprob: -15.511049270629883
    5. '   ' → logprob: -17.886049270629883
    6. '۰' → logprob: -20.761049270629883
    7. '        ' → logprob: -20.886049270629883
    8. '         ' → logprob: -20.886049270629883
    9. '  ' → logprob: -21.261049270629883
    10. '               ' → logprob: -21.636049270629883

Token 342: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '       ' → logprob: -18.250003814697266
    4. '           ' → logprob: -19.500003814697266
    5. '   ' → logprob: -20.875003814697266
    6. '00' → logprob: -21.625003814697266
    7. '000' → logprob: -21.875003814697266
    8. '۰' → logprob: -22.125003814697266
    9. 'self' → logprob: -22.250003814697266
    10. 'return' → logprob: -22.875003814697266

Token 343: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004164913552813232
    2. 'return' → logprob: -8.12541675567627
    3. ' return' → logprob: -9.87541675567627
    4. '
' → logprob: -10.00041675567627
    5. '   ' → logprob: -11.25041675567627
    6. '	' → logprob: -12.37541675567627
    7. '           ' → logprob: -13.62541675567627
    8. '<|end|>' → logprob: -13.62541675567627
    9. ',' → logprob: -14.00041675567627
    10. '```' → logprob: -14.62541675567627

Token 344: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00014942926645744592
    2. 'return' → logprob: -9.000149726867676
    3. '   ' → logprob: -11.625149726867676
    4. '
' → logprob: -11.750149726867676
    5. ' return' → logprob: -12.000149726867676
    6. '```' → logprob: -13.875149726867676
    7. '	' → logprob: -14.500149726867676
    8. '           ' → logprob: -14.500149726867676
    9. ',' → logprob: -15.000149726867676
    10. ')' → logprob: -15.875149726867676

Token 345: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06536631286144257
    2. '       ' → logprob: -2.815366268157959
    3. ' return' → logprob: -5.690366268157959
    4. '   ' → logprob: -11.565366744995117
    5. '	return' → logprob: -12.440366744995117
    6. '```' → logprob: -15.190366744995117
    7. ' ' → logprob: -15.690366744995117
    8. '           ' → logprob: -16.190366744995117
    9. 'eturn' → logprob: -16.440366744995117
    10. '
' → logprob: -16.440366744995117

Token 346: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.3132631778717041
    2. 'min' → logprob: -1.313263177871704
    3. '(min' → logprob: -14.188262939453125
    4. '	min' → logprob: -15.438262939453125
    5. 'max' → logprob: -15.688262939453125
    6. ' max' → logprob: -16.063262939453125
    7. '[min' → logprob: -16.063262939453125
    8. ' ' → logprob: -17.188262939453125
    9. ' ' → logprob: -17.563262939453125
    10. ' minimum' → logprob: -17.813262939453125

Token 347: '(volume' (ID: 162071)
  Prédit: '(volume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(volume' → logprob: -5.512236498361744e-07
    2. 'volume' → logprob: -15.625000953674316
    3. '(vol' → logprob: -16.125
    4. ' (' → logprob: -16.5
    5. '(' → logprob: -17.75
    6. '(quantity' → logprob: -18.0
    7. '(version' → logprob: -18.0
    8. '(value' → logprob: -19.625
    9. ' volume' → logprob: -20.375
    10. '(min' → logprob: -20.375

Token 348: ',' (ID: 11)
  Prédit: '(volume'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(volume' → logprob: -0.2014273703098297
    2. ',' → logprob: -1.7014273405075073
    3. '(' → logprob: -12.076427459716797
    4. ' ,' → logprob: -12.451427459716797
    5. ' (' → logprob: -13.201427459716797
    6. 'volume' → logprob: -13.826427459716797
    7. '(vol' → logprob: -13.951427459716797
    8. ' volume' → logprob: -14.951427459716797
    9. '(version' → logprob: -15.451427459716797
    10. '.volume' → logprob: -16.951427459716797

Token 349: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12696485221385956
    2. ' self' → logprob: -2.126964807510376
    3. '30' → logprob: -10.751964569091797
    4. '       ' → logprob: -11.376964569091797
    5. '(self' → logprob: -14.126964569091797
    6. '	self' → logprob: -14.376964569091797
    7. ' ' → logprob: -14.501964569091797
    8. '        ' → logprob: -14.751964569091797
    9. '[self' → logprob: -15.001964569091797
    10. '   ' → logprob: -15.501964569091797

Token 350: '.end' (ID: 10289)
  Prédit: '.end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.end' → logprob: -0.0001600347168277949
    2. 'self' → logprob: -9.125160217285156
    3. '.' → logprob: -10.625160217285156
    4. 'end' → logprob: -10.625160217285156
    5. '30' → logprob: -13.375160217285156
    6. '.self' → logprob: -14.625160217285156
    7. ' .' → logprob: -16.125160217285156
    8. '3' → logprob: -16.625160217285156
    9. '	end' → logprob: -16.625160217285156
    10. ':end' → logprob: -17.000160217285156

Token 351: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.511406809295295e-06
    2. ' )' → logprob: -12.125006675720215
    3. ')-' → logprob: -14.500006675720215
    4. '()' → logprob: -15.750006675720215
    5. ' -' → logprob: -16.7500057220459
    6. ']' → logprob: -16.7500057220459
    7. '   ' → logprob: -17.0000057220459
    8. '-' → logprob: -17.2500057220459
    9. '}' → logprob: -17.5000057220459
    10. ',' → logprob: -17.6250057220459

Token 352: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.007617506198585033
    2. '-' → logprob: -4.882617473602295
    3. ')' → logprob: -11.757617950439453
    4. ' ' → logprob: -13.132617950439453
    5. ',' → logprob: -13.882617950439453
    6. ' ' → logprob: -16.257617950439453
    7. '   ' → logprob: -16.757617950439453
    8. '-self' → logprob: -16.882617950439453
    9. '()-' → logprob: -17.007617950439453
    10. ' –' → logprob: -17.007617950439453

Token 353: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16022585332393646
    2. ' self' → logprob: -1.9102258682250977
    3. '20' → logprob: -13.660225868225098
    4. '       ' → logprob: -15.410225868225098
    5. '	self' → logprob: -15.535225868225098
    6. ' ' → logprob: -15.785225868225098
    7. '(self' → logprob: -16.91022491455078
    8. 'Self' → logprob: -18.03522491455078
    9. '=self' → logprob: -18.91022491455078
    10. '   ' → logprob: -18.91022491455078

Token 354: '.start' (ID: 10181)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.4893319010734558
    2. '.start' → logprob: -0.9893319010734558
    3. 'self' → logprob: -4.2393317222595215
    4. '20' → logprob: -7.3643317222595215
    5. '.' → logprob: -10.11433219909668
    6. '.self' → logprob: -10.86433219909668
    7. ' start' → logprob: -11.36433219909668
    8. '_start' → logprob: -11.98933219909668
    9. '.end' → logprob: -12.86433219909668
    10. ' self' → logprob: -13.23933219909668

Token 355: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018646057695150375
    2. '<|end|>' → logprob: -4.143646240234375
    3. '
' → logprob: -6.518646240234375
    4. '```' → logprob: -7.518646240234375
    5. '<|end|>' → logprob: -7.893646240234375
    6. '    
' → logprob: -9.268646240234375
    7. 'def' → logprob: -9.518646240234375
    8. '  
' → logprob: -11.018646240234375
    9. '  ' → logprob: -11.518646240234375
    10. '

' → logprob: -12.268646240234375

Token 356: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0035988790914416313
    2. '<|end|>' → logprob: -6.503598690032959
    3. '```' → logprob: -6.753598690032959
    4. 'def' → logprob: -7.128598690032959
    5. '    
' → logprob: -10.253599166870117
    6. '<|end|>' → logprob: -10.253599166870117
    7. '  ' → logprob: -11.003599166870117
    8. ' def' → logprob: -11.128599166870117
    9. ' ' → logprob: -11.753599166870117
    10. '  
' → logprob: -11.878599166870117

Token 357: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.005824041087180376
    2. '   ' → logprob: -5.755824089050293
    3. ' def' → logprob: -6.005824089050293
    4. '```' → logprob: -9.505824089050293
    5. '
' → logprob: -9.880824089050293
    6. ' ' → logprob: -10.880824089050293
    7. '<|end|>' → logprob: -10.880824089050293
    8. '    
' → logprob: -12.130824089050293
    9. '	def' → logprob: -12.505824089050293
    10. '

' → logprob: -13.505824089050293

Token 358: ' charge' (ID: 8363)
  Prédit: 'charge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'charge' → logprob: -0.0005537479883059859
    2. ' charge' → logprob: -7.500553607940674
    3. 'def' → logprob: -14.125554084777832
    4. '_charge' → logprob: -17.375553131103516
    5. 'charged' → logprob: -19.625553131103516
    6. 'charges' → logprob: -20.750553131103516
    7. ' def' → logprob: -20.875553131103516
    8. '
' → logprob: -21.250553131103516
    9. '   ' → logprob: -21.375553131103516
    10. 'Charge' → logprob: -21.375553131103516

Token 359: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -7.896309739408025e-07
    2. 'for' → logprob: -14.500000953674316
    3. '_' → logprob: -15.750000953674316
    4. '   ' → logprob: -17.375
    5. 'For' → logprob: -18.0
    6. '_FOR' → logprob: -18.75
    7. ' for' → logprob: -19.0
    8. ' _' → logprob: -19.5
    9. '_f' → logprob: -19.75
    10. '_For' → logprob: -20.0

Token 360: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0008903791895136237
    2. 'self' → logprob: -7.375890254974365
    3. '(' → logprob: -8.375890731811523
    4. 'def' → logprob: -11.000890731811523
    5. '   ' → logprob: -11.750890731811523
    6. ' self' → logprob: -12.875890731811523
    7. '(
' → logprob: -13.000890731811523
    8. '       ' → logprob: -13.250890731811523
    9. ' (' → logprob: -13.250890731811523
    10. ' ' → logprob: -16.250890731811523

Token 361: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.024924539029598236
    2. 'def' → logprob: -4.7749247550964355
    3. 'self' → logprob: -4.8999247550964355
    4. ')' → logprob: -5.6499247550964355
    5. '   ' → logprob: -5.8999247550964355
    6. '(' → logprob: -7.0249247550964355
    7. '(volume' → logprob: -7.5249247550964355
    8. '       ' → logprob: -8.024924278259277
    9. ' (' → logprob: -8.274924278259277
    10. ',' → logprob: -8.274924278259277

Token 362: ' volume' (ID: 10945)
  Prédit: ' volume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' volume' → logprob: -0.5810853242874146
    2. 'volume' → logprob: -0.8310853242874146
    3. 'self' → logprob: -5.456085205078125
    4. ' self' → logprob: -7.081085205078125
    5. '   ' → logprob: -11.956085205078125
    6. 'def' → logprob: -12.456085205078125
    7. '       ' → logprob: -12.456085205078125
    8. ' ' → logprob: -12.956085205078125
    9. '(volume' → logprob: -13.081085205078125
    10. '    ' → logprob: -14.081085205078125

Token 363: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004680749494582415
    2. '   ' → logprob: -6.504680633544922
    3. ')' → logprob: -6.629680633544922
    4. '       ' → logprob: -6.879680633544922
    5. 'self' → logprob: -8.129680633544922
    6. '(self' → logprob: -8.129680633544922
    7. '```' → logprob: -10.004680633544922
    8. '(' → logprob: -10.379680633544922
    9. '):' → logprob: -10.754680633544922
    10. 'def' → logprob: -10.879680633544922

Token 364: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.4740907549858093
    2. 'int' → logprob: -0.9740907549858093
    3. ' def' → logprob: -11.849090576171875
    4. '(int' → logprob: -12.974090576171875
    5. '[int' → logprob: -13.349090576171875
    6. 'def' → logprob: -13.849090576171875
    7. '   ' → logprob: -14.599090576171875
    8. ' ' → logprob: -14.974090576171875
    9. ':int' → logprob: -15.599090576171875
    10. '       ' → logprob: -15.724090576171875

Token 365: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.2166411478538066e-05
    2. '   ' → logprob: -10.375052452087402
    3. '):' → logprob: -11.750052452087402
    4. '       ' → logprob: -12.000052452087402
    5. ':' → logprob: -12.625052452087402
    6. ' )' → logprob: -13.000052452087402
    7. 'self' → logprob: -15.000052452087402
    8. ',' → logprob: -15.625052452087402
    9. ' ' → logprob: -15.625052452087402
    10. '):
' → logprob: -15.875052452087402

Token 366: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.42381125688552856
    2. '       ' → logprob: -1.1738111972808838
    3. '(' → logprob: -3.923811197280884
    4. '(self' → logprob: -5.548811435699463
    5. ':
' → logprob: -5.548811435699463
    6. '   ' → logprob: -5.673811435699463
    7. '->' → logprob: -5.923811435699463
    8. '=' → logprob: -7.798811435699463
    9. '(v' → logprob: -8.048810958862305
    10. '[' → logprob: -8.923810958862305

Token 367: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.201422318816185
    2. ' int' → logprob: -1.7014223337173462
    3. '(int' → logprob: -11.701422691345215
    4. '[int' → logprob: -14.451422691345215
    5. 'return' → logprob: -16.0764217376709
    6. 'def' → logprob: -16.8264217376709
    7. ':int' → logprob: -18.0764217376709
    8. 'self' → logprob: -18.2014217376709
    9. ' def' → logprob: -18.4514217376709
    10. ' return' → logprob: -18.8264217376709

Token 368: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.32154059410095215
    2. ':
' → logprob: -1.3215405941009521
    3. '       ' → logprob: -4.821540832519531
    4. '   ' → logprob: -8.946540832519531
    5. '):
' → logprob: -11.446540832519531
    6. ':
' → logprob: -11.696540832519531
    7. ':

' → logprob: -11.821540832519531
    8. ':return' → logprob: -12.446540832519531
    9. '(' → logprob: -12.571540832519531
    10. '->' → logprob: -12.696540832519531

Token 369: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01454340573400259
    2. 'v' → logprob: -4.264543533325195
    3. '   ' → logprob: -7.889543533325195
    4. ' v' → logprob: -13.514543533325195
    5. '```' → logprob: -13.514543533325195
    6. '
' → logprob: -13.764543533325195
    7. '           ' → logprob: -14.139543533325195
    8. '     ' → logprob: -15.014543533325195
    9. '      ' → logprob: -15.764543533325195
    10. '	v' → logprob: -16.139543533325195

Token 370: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.000215457082958892
    2. '       ' → logprob: -8.500215530395508
    3. ' v' → logprob: -11.375215530395508
    4. '
' → logprob: -15.250215530395508
    5. '   ' → logprob: -15.875215530395508
    6. '```' → logprob: -16.125215530395508
    7. '	v' → logprob: -18.000215530395508
    8. 'volume' → logprob: -18.750215530395508
    9. '``' → logprob: -19.375215530395508
    10. 'return' → logprob: -19.500215530395508

Token 371: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269282102584839
    2. '=' → logprob: -2.1269283294677734
    3. '=self' → logprob: -16.251928329467773
    4. '       ' → logprob: -17.001928329467773
    5. '   ' → logprob: -17.126928329467773
    6. ' ' → logprob: -18.626928329467773
    7. 'self' → logprob: -18.876928329467773
    8. 'v' → logprob: -19.501928329467773
    9. ':' → logprob: -19.501928329467773
    10. '=v' → logprob: -19.876928329467773

Token 372: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0380416102707386
    2. ' self' → logprob: -3.288041591644287
    3. '(self' → logprob: -17.538042068481445
    4. '       ' → logprob: -17.663042068481445
    5. '	self' → logprob: -17.663042068481445
    6. 'v' → logprob: -18.288042068481445
    7. '=self' → logprob: -18.663042068481445
    8. '0' → logprob: -20.038042068481445
    9. '[self' → logprob: -20.038042068481445
    10. 'Self' → logprob: -20.163042068481445

Token 373: '.app' (ID: 2689)
  Prédit: '.app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.app' → logprob: -0.06197172403335571
    2. 'app' → logprob: -2.811971664428711
    3. ' applicable' → logprob: -13.561971664428711
    4. 'Applicable' → logprob: -13.686971664428711
    5. ' .' → logprob: -14.811971664428711
    6. '@app' → logprob: -15.061971664428711
    7. '.' → logprob: -15.561971664428711
    8. '_app' → logprob: -15.686971664428711
    9. '.ap' → logprob: -15.686971664428711
    10. '```' → logprob: -16.06197166442871

Token 374: 'licable' (ID: 127292)
  Prédit: 'licable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'licable' → logprob: -6.778209353797138e-05
    2. 'lic' → logprob: -10.125067710876465
    3. 'liable' → logprob: -10.500067710876465
    4. 'l' → logprob: -16.62506866455078
    5. 'lical' → logprob: -17.37506866455078
    6. 'li' → logprob: -17.50006866455078
    7. 'licant' → logprob: -17.62506866455078
    8. 'latable' → logprob: -18.12506866455078
    9. 'plic' → logprob: -18.25006866455078
    10. 'le' → logprob: -18.62506866455078

Token 375: '_volume' (ID: 64366)
  Prédit: '_volume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_volume' → logprob: -3.7697225252486533e-06
    2. 'volume' → logprob: -13.000003814697266
    3. 'Volume' → logprob: -13.625003814697266
    4. '_vol' → logprob: -16.500003814697266
    5. '_voltage' → logprob: -16.750003814697266
    6. '_' → logprob: -17.375003814697266
    7. '_VOLUME' → logprob: -17.500003814697266
    8. '\' → logprob: -18.375003814697266
    9. '   ' → logprob: -18.500003814697266
    10. '       ' → logprob: -18.750003814697266

Token 376: '(volume' (ID: 162071)
  Prédit: '(volume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(volume' → logprob: -4.320199877838604e-07
    2. 'volume' → logprob: -15.0
    3. '(vol' → logprob: -17.125
    4. ' (' → logprob: -18.0
    5. '(version' → logprob: -18.625
    6. ' volume' → logprob: -19.0
    7. '(value' → logprob: -19.0
    8. '(' → logprob: -19.375
    9. '(quantity' → logprob: -19.625
    10. '(amount' → logprob: -20.625

Token 377: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.048601794987916946
    2. ')' → logprob: -3.0486018657684326
    3. '       ' → logprob: -11.423602104187012
    4. ')
' → logprob: -12.798602104187012
    5. '   ' → logprob: -14.548602104187012
    6. ')

' → logprob: -15.673602104187012
    7. ' )
' → logprob: -16.173601150512695
    8. ')return' → logprob: -16.798601150512695
    9. '
' → logprob: -17.548601150512695
    10. ')v' → logprob: -18.548601150512695

Token 378: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.037711042910814285
    2. 'return' → logprob: -3.9127111434936523
    3. '
' → logprob: -4.162711143493652
    4. ' return' → logprob: -6.787711143493652
    5. '   ' → logprob: -8.537711143493652
    6. '        
' → logprob: -9.662711143493652
    7. '*' → logprob: -11.162711143493652
    8. '  
' → logprob: -11.162711143493652
    9. '<|end|>' → logprob: -11.662711143493652
    10. '    
' → logprob: -12.162711143493652

Token 379: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -8.304016228066757e-05
    2. ' return' → logprob: -9.500082969665527
    3. '       ' → logprob: -11.750082969665527
    4. '
' → logprob: -16.125083923339844
    5. '   ' → logprob: -17.375083923339844
    6. '	return' → logprob: -18.625083923339844
    7. '```' → logprob: -20.000083923339844
    8. '        
' → logprob: -20.375083923339844
    9. 'eturn' → logprob: -21.625083923339844
    10. '``' → logprob: -22.750083923339844

Token 380: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.20141392946243286
    2. 'v' → logprob: -1.701413869857788
    3. '	v' → logprob: -15.076414108276367
    4. 'self' → logprob: -15.701414108276367
    5. ' ' → logprob: -16.201414108276367
    6. ' ' → logprob: -16.326414108276367
    7. '   ' → logprob: -17.076414108276367
    8. '_v' → logprob: -17.951414108276367
    9. '(v' → logprob: -18.076414108276367
    10. '$v' → logprob: -18.076414108276367

Token 381: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.03804252669215202
    2. '*' → logprob: -3.2880425453186035
    3. ' ' → logprob: -14.288042068481445
    4. ' ' → logprob: -15.163042068481445
    5. '   ' → logprob: -16.038042068481445
    6. '**' → logprob: -16.913042068481445
    7. '*self' → logprob: -17.413042068481445
    8. '#' → logprob: -18.288042068481445
    9. '```' → logprob: -18.288042068481445
    10. ' **' → logprob: -18.475542068481445

Token 382: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01815006136894226
    2. ' self' → logprob: -4.0181498527526855
    3. '140' → logprob: -16.768150329589844
    4. ' ' → logprob: -17.768150329589844
    5. '	self' → logprob: -17.768150329589844
    6. '(self' → logprob: -19.018150329589844
    7. '[self' → logprob: -19.893150329589844
    8. '
' → logprob: -20.268150329589844
    9. ' ' → logprob: -20.518150329589844
    10. '   ' → logprob: -20.643150329589844

Token 383: '.unit' (ID: 51513)
  Prédit: '.unit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.unit' → logprob: -4.1080467781284824e-05
    2. 'unit' → logprob: -10.250041007995605
    3. '.' → logprob: -12.125041007995605
    4. ' .' → logprob: -15.750041007995605
    5. ' unit' → logprob: -17.000041961669922
    6. '.user' → logprob: -17.375041961669922
    7. '	unit' → logprob: -18.000041961669922
    8. '.units' → logprob: -19.125041961669922
    9. '.Unit' → logprob: -19.500041961669922
    10. 'Unit' → logprob: -20.125041961669922

Token 384: '_price' (ID: 18814)
  Prédit: '_price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -0.0001422770437784493
    2. 'price' → logprob: -8.875142097473145
    3. 'unit' → logprob: -13.750142097473145
    4. '_PRICE' → logprob: -14.625142097473145
    5. 'Price' → logprob: -15.250142097473145
    6. '140' → logprob: -15.875142097473145
    7. '125' → logprob: -16.00014305114746
    8. ' price' → logprob: -16.62514305114746
    9. '_prices' → logprob: -17.00014305114746
    10. ' _' → logprob: -17.12514305114746

Token 385: '


' (ID: 2499)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20609162747859955
    2. 'class' → logprob: -1.7060916423797607
    3. '

' → logprob: -5.581091403961182
    4. '<|end|>' → logprob: -7.081091403961182
    5. '```' → logprob: -10.33109188079834
    6. ' class' → logprob: -11.83109188079834
    7. '
' → logprob: -12.08109188079834
    8. '<|end|>' → logprob: -12.58109188079834
    9. '<class' → logprob: -12.70609188079834
    10. '


' → logprob: -12.95609188079834

Token 386: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -8.77627644513268e-06
    2. '```' → logprob: -12.500008583068848
    3. '<class' → logprob: -12.875008583068848
    4. '<|end|>' → logprob: -13.875008583068848
    5. ' class' → logprob: -14.000008583068848
    6. '
' → logprob: -14.875008583068848
    7. '"class' → logprob: -15.625008583068848
    8. '#' → logprob: -16.500009536743164
    9. 'classmethod' → logprob: -17.250009536743164
    10. 'Class' → logprob: -17.625009536743164

Token 387: ' Tier' (ID: 44983)
  Prédit: 'Tier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tier' → logprob: -0.5760585069656372
    2. ' Tier' → logprob: -0.8260585069656372
    3. 'class' → logprob: -9.076058387756348
    4. 'tier' → logprob: -14.076058387756348
    5. '4' → logprob: -14.201058387756348
    6. 'T' → logprob: -14.576058387756348
    7. ' tier' → logprob: -14.701058387756348
    8. 'def' → logprob: -14.951058387756348
    9. '#' → logprob: -15.576058387756348
    10. ' class' → logprob: -15.701058387756348

Token 388: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: 0.0
    2. '5' → logprob: -17.5
    3. ' ' → logprob: -19.625
    4. '3' → logprob: -20.125
    5. 'class' → logprob: -20.125
    6. '```' → logprob: -20.375
    7. '۴' → logprob: -20.5
    8. '(' → logprob: -20.875
    9. '' → logprob: -21.125
    10. '４' → logprob: -21.625

Token 389: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -8.673547563375905e-05
    2. '(' → logprob: -9.375086784362793
    3. '(T' → logprob: -13.750086784362793
    4. 'class' → logprob: -15.500086784362793
    5. '(S' → logprob: -16.250085830688477
    6. '(World' → logprob: -16.250085830688477
    7. '```' → logprob: -16.500085830688477
    8. 'Water' → logprob: -17.250085830688477
    9. '(Abstract' → logprob: -17.375085830688477
    10. ':' → logprob: -17.500085830688477

Token 390: 'ater' (ID: 1005)
  Prédit: 'ater'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ater' → logprob: -0.1130509153008461
    2. 'Water' → logprob: -2.238050937652588
    3. '(W' → logprob: -8.86305046081543
    4. 'water' → logprob: -9.86305046081543
    5. 'atter' → logprob: -11.73805046081543
    6. 'ATER' → logprob: -11.98805046081543
    7. '(' → logprob: -12.36305046081543
    8. 'ate' → logprob: -12.48805046081543
    9. 'atering' → logprob: -13.36305046081543
    10. '_water' → logprob: -13.36305046081543

Token 391: 'Charge' (ID: 46218)
  Prédit: 'Charge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Charge' → logprob: -0.0004832233826164156
    2. '_' → logprob: -7.75048303604126
    3. '(' → logprob: -10.125483512878418
    4. '_charge' → logprob: -11.500483512878418
    5. ' Charge' → logprob: -14.375483512878418
    6. 'charge' → logprob: -14.875483512878418
    7. '```' → logprob: -14.875483512878418
    8. '(W' → logprob: -16.1254825592041
    9. 'Charges' → logprob: -16.1254825592041
    10. 'Charg' → logprob: -16.2504825592041

Token 392: 'Tier' (ID: 79698)
  Prédit: 'Tier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tier' → logprob: -0.009869301691651344
    2. 'Charge' → logprob: -5.38486909866333
    3. '(' → logprob: -6.50986909866333
    4. 'Water' → logprob: -6.50986909866333
    5. '(T' → logprob: -6.50986909866333
    6. '(W' → logprob: -7.38486909866333
    7. 'T' → logprob: -10.009869575500488
    8. 'tier' → logprob: -10.384869575500488
    9. '_T' → logprob: -10.884869575500488
    10. '-tier' → logprob: -11.759869575500488

Token 393: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.9858888387680054
    2. '(W' → logprob: -1.1108888387680054
    3. '):' → logprob: -1.2358888387680054
    4. '(' → logprob: -5.485888957977295
    5. ':' → logprob: -6.485888957977295
    6. '   ' → logprob: -7.985888957977295
    7. '(T' → logprob: -8.235888481140137
    8. ':
' → logprob: -8.235888481140137
    9. ')' → logprob: -8.610888481140137
    10. '):
' → logprob: -9.235888481140137

Token 394: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00023619852436240762
    2. 'def' → logprob: -8.500236511230469
    3. ' def' → logprob: -10.750236511230469
    4. '```' → logprob: -11.500236511230469
    5. ':' → logprob: -14.625236511230469
    6. '	def' → logprob: -15.250236511230469
    7. 'class' → logprob: -15.500236511230469
    8. ')' → logprob: -16.75023651123047
    9. '       ' → logprob: -17.00023651123047
    10. '  ' → logprob: -17.62523651123047

Token 395: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.03823794797062874
    2. '   ' → logprob: -3.288238048553467
    3. ' def' → logprob: -8.538237571716309
    4. '```' → logprob: -14.538237571716309
    5. '	def' → logprob: -15.788237571716309
    6. '  ' → logprob: -17.663238525390625
    7. '       ' → logprob: -19.163238525390625
    8. '``' → logprob: -19.288238525390625
    9. ' ' → logprob: -19.288238525390625
    10. '    ' → logprob: -19.538238525390625

Token 396: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.26643335819244385
    2. 'def' → logprob: -1.5164333581924438
    3. ' __' → logprob: -4.641433238983154
    4. ' def' → logprob: -5.391433238983154
    5. 'init' → logprob: -9.141433715820312
    6. '```' → logprob: -9.641433715820312
    7. '_init' → logprob: -11.141433715820312
    8. '\' → logprob: -12.391433715820312
    9. '___' → logprob: -12.891433715820312
    10. '.__' → logprob: -13.266433715820312

Token 397: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0002845768758561462
    2. 'def' → logprob: -9.250284194946289
    3. '__' → logprob: -9.500284194946289
    4. '_init' → logprob: -9.750284194946289
    5. ' init' → logprob: -10.000284194946289
    6. '```' → logprob: -12.000284194946289
    7. ' __' → logprob: -12.625284194946289
    8. ' def' → logprob: -15.250284194946289
    9. '``' → logprob: -17.00028419494629
    10. '(init' → logprob: -17.12528419494629

Token 398: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5787957906723022
    2. '__(' → logprob: -0.8287957906723022
    3. 'self' → logprob: -6.453795909881592
    4. '   ' → logprob: -7.578795909881592
    5. '(' → logprob: -7.828795909881592
    6. '__' → logprob: -9.328795433044434
    7. '```' → logprob: -9.328795433044434
    8. 'def' → logprob: -9.578795433044434
    9. 'class' → logprob: -10.203795433044434
    10. '_(' → logprob: -10.828795433044434

Token 399: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.7697225252486533e-06
    2. ' self' → logprob: -12.500003814697266
    3. '
' → logprob: -18.250003814697266
    4. '0' → logprob: -18.375003814697266
    5. '(self' → logprob: -18.625003814697266
    6. '   ' → logprob: -19.125003814697266
    7. 'def' → logprob: -20.125003814697266
    8. '20' → logprob: -20.250003814697266
    9. '```' → logprob: -20.375003814697266
    10. '       ' → logprob: -20.375003814697266

Token 400: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.006159147247672081
    2. 'self' → logprob: -5.88115930557251
    3. '       ' → logprob: -6.38115930557251
    4. '   ' → logprob: -7.50615930557251
    5. '():
' → logprob: -7.50615930557251
    6. '):' → logprob: -8.256158828735352
    7. '(self' → logprob: -8.881158828735352
    8. '()):
' → logprob: -9.006158828735352
    9. '
' → logprob: -11.381158828735352
    10. '```' → logprob: -12.006158828735352

Token 401: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0012741618556901813
    2. '       ' → logprob: -6.751274108886719
    3. '   ' → logprob: -9.501274108886719
    4. ' self' → logprob: -10.501274108886719
    5. 'def' → logprob: -14.126274108886719
    6. '0' → logprob: -15.251274108886719
    7. '```' → logprob: -15.376274108886719
    8. '(self' → logprob: -15.626274108886719
    9. '
' → logprob: -15.751274108886719
    10. ' ' → logprob: -16.25127410888672

Token 402: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.02337067946791649
    2. '       ' → logprob: -3.7733707427978516
    3. ' self' → logprob: -9.273370742797852
    4. '   ' → logprob: -10.523370742797852
    5. '	self' → logprob: -13.148370742797852
    6. '0' → logprob: -14.023370742797852
    7. ' ' → logprob: -14.273370742797852
    8. '           ' → logprob: -15.523370742797852
    9. '
' → logprob: -16.27337074279785
    10. '(self' → logprob: -16.39837074279785

Token 403: '.unit' (ID: 51513)
  Prédit: '.unit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.unit' → logprob: -0.25207382440567017
    2. 'unit' → logprob: -1.5020737648010254
    3. ' unit' → logprob: -10.002074241638184
    4. '_unit' → logprob: -10.252074241638184
    5. 'Unit' → logprob: -10.752074241638184
    6. '	unit' → logprob: -10.752074241638184
    7. ' .' → logprob: -12.627074241638184
    8. '.' → logprob: -12.627074241638184
    9. 'basic' → logprob: -12.752074241638184
    10. '.basic' → logprob: -12.877074241638184

Token 404: '_price' (ID: 18814)
  Prédit: '_price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -9.9728669738397e-05
    2. 'price' → logprob: -9.250100135803223
    3. 'Price' → logprob: -13.250100135803223
    4. '   ' → logprob: -14.000100135803223
    5. '	price' → logprob: -14.750100135803223
    6. ' price' → logprob: -15.375100135803223
    7. '_PRICE' → logprob: -15.500100135803223
    8. '_charge' → logprob: -17.250099182128906
    9. '```' → logprob: -18.250099182128906
    10. '价格' → logprob: -18.250099182128906

Token 405: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519353926181793
    2. '=' → logprob: -1.501935362815857
    3. '   ' → logprob: -12.251935005187988
    4. ' ' → logprob: -13.876935005187988
    5. ':' → logprob: -15.626935005187988
    6. '125' → logprob: -15.876935005187988
    7. '<|end|>' → logprob: -16.126935958862305
    8. '  ' → logprob: -16.501935958862305
    9. '    ' → logprob: -17.501935958862305
    10. ')' → logprob: -17.751935958862305

Token 406: ' ' (ID: 220)
  Prédit: '160'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '160' → logprob: -0.1318262815475464
    2. '175' → logprob: -3.131826400756836
    3. '165' → logprob: -3.256826400756836
    4. '200' → logprob: -4.006826400756836
    5. '170' → logprob: -5.006826400756836
    6. '210' → logprob: -5.381826400756836
    7. '185' → logprob: -5.631826400756836
    8. '180' → logprob: -5.881826400756836
    9. '155' → logprob: -6.256826400756836
    10. '195' → logprob: -6.381826400756836

Token 407: '160' (ID: 9444)
  Prédit: '165'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '165' → logprob: -0.8174492716789246
    2. '160' → logprob: -1.1924493312835693
    3. '175' → logprob: -2.9424493312835693
    4. '200' → logprob: -2.9424493312835693
    5. '185' → logprob: -3.3174493312835693
    6. '155' → logprob: -3.5674493312835693
    7. '170' → logprob: -3.5674493312835693
    8. '180' → logprob: -4.19244909286499
    9. '210' → logprob: -4.31744909286499
    10. '195' → logprob: -4.69244909286499

Token 408: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14151613414287567
    2. 'self' → logprob: -2.1415162086486816
    3. '   ' → logprob: -4.266516208648682
    4. '	' → logprob: -9.141515731811523
    5. ' self' → logprob: -9.391515731811523
    6. '	self' → logprob: -9.516515731811523
    7. ' ' → logprob: -9.641515731811523
    8. '
' → logprob: -10.016515731811523
    9. ',' → logprob: -11.266515731811523
    10. 'def' → logprob: -11.516515731811523

Token 409: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0818728432059288
    2. 'self' → logprob: -2.5818729400634766
    3. '   ' → logprob: -5.831872940063477
    4. ' self' → logprob: -10.956872940063477
    5. 'def' → logprob: -11.081872940063477
    6. ' ' → logprob: -12.331872940063477
    7. '	self' → logprob: -12.581872940063477
    8. '	' → logprob: -13.206872940063477
    9. '
' → logprob: -14.081872940063477
    10. '```' → logprob: -14.331872940063477

Token 410: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.000157293034135364
    2. '       ' → logprob: -8.875157356262207
    3. ' self' → logprob: -11.125157356262207
    4. '   ' → logprob: -13.500157356262207
    5. '	self' → logprob: -14.375157356262207
    6. 'def' → logprob: -15.000157356262207
    7. ' ' → logprob: -15.625157356262207
    8. 'from' → logprob: -16.62515640258789
    9. '(self' → logprob: -16.87515640258789
    10. '
' → logprob: -17.50015640258789

Token 411: '.start' (ID: 10181)
  Prédit: '.start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.start' → logprob: -0.12697650492191315
    2. 'start' → logprob: -2.126976490020752
    3. ' start' → logprob: -10.62697696685791
    4. ' .' → logprob: -11.00197696685791
    5. '   ' → logprob: -12.62697696685791
    6. '.' → logprob: -13.62697696685791
    7. '	start' → logprob: -13.87697696685791
    8. '_start' → logprob: -14.12697696685791
    9. ' ' → logprob: -15.25197696685791
    10. 'Start' → logprob: -15.62697696685791

Token 412: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132627606391907
    2. ' =' → logprob: -1.313262701034546
    3. '   ' → logprob: -14.688262939453125
    4. ' ' → logprob: -14.938262939453125
    5. ':' → logprob: -15.813262939453125
    6. '<|end|>' → logprob: -17.188262939453125
    7. '  ' → logprob: -18.063262939453125
    8. ',' → logprob: -18.188262939453125
    9. '       ' → logprob: -18.188262939453125
    10. '10' → logprob: -18.313262939453125

Token 413: ' ' (ID: 220)
  Prédit: '30'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '30' → logprob: -1.5928495486150496e-05
    2. ' ' → logprob: -11.125016212463379
    3. '３０' → logprob: -15.437516212463379
    4. '300' → logprob: -15.812516212463379
    5. '>' → logprob: -15.875016212463379
    6. '40' → logprob: -16.125015258789062
    7. '۳۰' → logprob: -16.312515258789062
    8. '=' → logprob: -16.687515258789062
    9. '   ' → logprob: -16.750015258789062
    10. '३०' → logprob: -17.187515258789062

Token 414: '30' (ID: 1130)
  Prédit: '30'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '30' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.625001907348633
    3. '300' → logprob: -15.750001907348633
    4. '３０' → logprob: -16.000001907348633
    5. '۳۰' → logprob: -16.625001907348633
    6. '=' → logprob: -16.812501907348633
    7. '40' → logprob: -16.937501907348633
    8. '३०' → logprob: -17.000001907348633
    9. '>' → logprob: -17.625001907348633
    10. '31' → logprob: -17.625001907348633

Token 415: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14459998905658722
    2. '   ' → logprob: -2.6445999145507812
    3. 'self' → logprob: -3.0195999145507812
    4. '
' → logprob: -4.269599914550781
    5. 'def' → logprob: -8.894599914550781
    6. '<|end|>' → logprob: -8.894599914550781
    7. ' ' → logprob: -9.019599914550781
    8. ' self' → logprob: -9.269599914550781
    9. ',' → logprob: -10.019599914550781
    10. '        
' → logprob: -10.144599914550781

Token 416: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04395586624741554
    2. 'def' → logprob: -3.7939558029174805
    3. '<|end|>' → logprob: -4.0439558029174805
    4. '```' → logprob: -6.5439558029174805
    5. '<|end|>' → logprob: -7.1689558029174805
    6. '
' → logprob: -7.9189558029174805
    7. ' def' → logprob: -8.66895580291748
    8. '    
' → logprob: -9.54395580291748
    9. ' ' → logprob: -10.41895580291748
    10. ':' → logprob: -10.54395580291748

Token 417: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.003069925820454955
    2. '   ' → logprob: -5.878069877624512
    3. ' def' → logprob: -8.378069877624512
    4. '```' → logprob: -10.878069877624512
    5. '<|end|>' → logprob: -11.878069877624512
    6. 'class' → logprob: -12.128069877624512
    7. '	def' → logprob: -13.628069877624512
    8. ':def' → logprob: -14.378069877624512
    9. '    
' → logprob: -14.503069877624512
    10. '<|end|>' → logprob: -14.878069877624512

Token 418: ' applicable' (ID: 12781)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.04044054076075554
    2. 'def' → logprob: -3.290440559387207
    3. ' applicable' → logprob: -6.040440559387207
    4. ' def' → logprob: -11.665440559387207
    5. '   ' → logprob: -13.415440559387207
    6. 'ap' → logprob: -13.540440559387207
    7. ' app' → logprob: -13.540440559387207
    8. '@app' → logprob: -13.790440559387207
    9. 'Applicable' → logprob: -13.790440559387207
    10. '_app' → logprob: -15.290440559387207

Token 419: '_volume' (ID: 64366)
  Prédit: '_volume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_volume' → logprob: -0.0004995359340682626
    2. 'def' → logprob: -7.625499725341797
    3. 'volume' → logprob: -11.625499725341797
    4. 'Volume' → logprob: -13.625499725341797
    5. '   ' → logprob: -14.125499725341797
    6. '_' → logprob: -14.625499725341797
    7. '_VOLUME' → logprob: -16.625499725341797
    8. '```' → logprob: -16.750499725341797
    9. '_vol' → logprob: -17.250499725341797
    10. '_version' → logprob: -17.375499725341797

Token 420: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.8624639324116288e-06
    2. '(' → logprob: -13.875001907348633
    3. 'self' → logprob: -14.875001907348633
    4. 'def' → logprob: -15.500001907348633
    5. ' (' → logprob: -15.500001907348633
    6. '   ' → logprob: -16.375001907348633
    7. ',' → logprob: -17.500001907348633
    8. ' ' → logprob: -18.250001907348633
    9. '(
' → logprob: -18.500001907348633
    10. ' self' → logprob: -18.625001907348633

Token 421: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.25310584902763367
    2. ',' → logprob: -1.503105878829956
    3. 'self' → logprob: -6.878105640411377
    4. ')' → logprob: -9.378106117248535
    5. '(' → logprob: -10.753106117248535
    6. 'def' → logprob: -11.253106117248535
    7. ',self' → logprob: -11.253106117248535
    8. ' (' → logprob: -12.253106117248535
    9. ' self' → logprob: -13.253106117248535
    10. '),' → logprob: -13.253106117248535

Token 422: ' volume' (ID: 10945)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.8792773485183716
    2. ' self' → logprob: -1.3792773485183716
    3. ' volume' → logprob: -1.6292773485183716
    4. 'volume' → logprob: -2.129277229309082
    5. 'def' → logprob: -4.254277229309082
    6. ' def' → logprob: -5.629277229309082
    7. ' ' → logprob: -8.629277229309082
    8. '   ' → logprob: -9.754277229309082
    9. '       ' → logprob: -10.504277229309082
    10. 'vol' → logprob: -11.004277229309082

Token 423: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3725438714027405
    2. '(self' → logprob: -1.2475438117980957
    3. '(' → logprob: -4.747543811798096
    4. ':' → logprob: -4.872543811798096
    5. '   ' → logprob: -5.997543811798096
    6. ',' → logprob: -6.247543811798096
    7. '       ' → logprob: -6.372543811798096
    8. 'self' → logprob: -7.497543811798096
    9. '):' → logprob: -7.997543811798096
    10. ' (' → logprob: -8.497544288635254

Token 424: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00193280098028481
    2. ' int' → logprob: -6.251932621002197
    3. '   ' → logprob: -13.001933097839355
    4. ')' → logprob: -13.501933097839355
    5. ' ' → logprob: -15.501933097839355
    6. '(int' → logprob: -15.751933097839355
    7. 'def' → logprob: -15.876933097839355
    8. '       ' → logprob: -16.12693214416504
    9. '  ' → logprob: -17.75193214416504
    10. '[int' → logprob: -17.87693214416504

Token 425: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004050514253322035
    2. ':' → logprob: -7.8754048347473145
    3. '   ' → logprob: -11.125405311584473
    4. ' )' → logprob: -12.375405311584473
    5. '       ' → logprob: -12.500405311584473
    6. ',' → logprob: -14.125405311584473
    7. ' ' → logprob: -15.000405311584473
    8. '->' → logprob: -15.750405311584473
    9. ')->' → logprob: -15.875405311584473
    10. '>' → logprob: -16.000404357910156

Token 426: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.347765181795694e-05
    2. ':
' → logprob: -10.375053405761719
    3. '->' → logprob: -11.625053405761719
    4. ' ->' → logprob: -12.500053405761719
    5. '       ' → logprob: -12.750053405761719
    6. ')' → logprob: -13.250053405761719
    7. '   ' → logprob: -13.375053405761719
    8. ' :' → logprob: -13.375053405761719
    9. ' if' → logprob: -15.000053405761719
    10. ',' → logprob: -15.000053405761719

Token 427: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -7.493430894101039e-05
    2. ' int' → logprob: -9.500075340270996
    3. '(int' → logprob: -17.75007438659668
    4. 'max' → logprob: -18.62507438659668
    5. 'def' → logprob: -18.75007438659668
    6. '[int' → logprob: -19.50007438659668
    7. 'if' → logprob: -20.12507438659668
    8. '10' → logprob: -20.37507438659668
    9. '	int' → logprob: -20.87507438659668
    10. ' ' → logprob: -21.00007438659668

Token 428: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.050103213638067245
    2. '->' → logprob: -3.425103187561035
    3. '       ' → logprob: -5.300103187561035
    4. ')' → logprob: -5.550103187561035
    5. ' ->' → logprob: -5.800103187561035
    6. 'if' → logprob: -6.425103187561035
    7. ':
' → logprob: -7.050103187561035
    8. ' if' → logprob: -7.425103187561035
    9. '(' → logprob: -7.800103187561035
    10. '   ' → logprob: -8.050103187561035

Token 429: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003741887048818171
    2. ' if' → logprob: -8.625373840332031
    3. 'if' → logprob: -8.750373840332031
    4. 'return' → logprob: -10.625373840332031
    5. ' return' → logprob: -11.875373840332031
    6. '```' → logprob: -12.875373840332031
    7. '   ' → logprob: -13.375373840332031
    8. '	' → logprob: -15.250373840332031
    9. '``' → logprob: -16.00037384033203
    10. '           ' → logprob: -16.00037384033203

Token 430: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.08463302254676819
    2. 'return' → logprob: -3.0846331119537354
    3. ' if' → logprob: -3.8346331119537354
    4. '       ' → logprob: -4.334632873535156
    5. ' return' → logprob: -7.834632873535156
    6. 'max' → logprob: -8.209632873535156
    7. '```' → logprob: -11.459632873535156
    8. ' max' → logprob: -12.209632873535156
    9. '``' → logprob: -12.709632873535156
    10. '   ' → logprob: -15.084632873535156

Token 431: ' volume' (ID: 10945)
  Prédit: ' volume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' volume' → logprob: -0.3132627606391907
    2. 'volume' → logprob: -1.313262701034546
    3. '(volume' → logprob: -14.688262939453125
    4. ' ' → logprob: -15.563262939453125
    5. '   ' → logprob: -15.938262939453125
    6. ' ' → logprob: -16.563262939453125
    7. 'Volume' → logprob: -17.563262939453125
    8. 'quantity' → logprob: -17.813262939453125
    9. 'v' → logprob: -17.813262939453125
    10. 'vol' → logprob: -17.813262939453125

Token 432: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.3868741989135742
    2. '<=' → logprob: -1.1368741989135742
    3. '>' → logprob: -13.011874198913574
    4. ' >' → logprob: -14.511874198913574
    5. '<' → logprob: -15.761874198913574
    6. ' <' → logprob: -15.886874198913574
    7. ' ' → logprob: -16.51187515258789
    8. '   ' → logprob: -16.88687515258789
    9. '==' → logprob: -18.51187515258789
    10. '>=' → logprob: -18.63687515258789

Token 433: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0034385151229798794
    2. ' self' → logprob: -5.753438472747803
    3. '30' → logprob: -8.253438949584961
    4. ' ' → logprob: -15.253438949584961
    5. '	self' → logprob: -17.12843894958496
    6. '(self' → logprob: -17.37843894958496
    7. '=self' → logprob: -17.37843894958496
    8. '   ' → logprob: -17.75343894958496
    9. '0' → logprob: -18.00343894958496
    10. '3' → logprob: -20.00343894958496

Token 434: '.start' (ID: 10181)
  Prédit: '.start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.start' → logprob: -0.018615640699863434
    2. 'start' → logprob: -4.01861572265625
    3. '30' → logprob: -7.76861572265625
    4. 'self' → logprob: -10.26861572265625
    5. '.' → logprob: -11.89361572265625
    6. '.self' → logprob: -14.14361572265625
    7. ' start' → logprob: -14.51861572265625
    8. ' ' → logprob: -16.26861572265625
    9. '	start' → logprob: -17.39361572265625
    10. ' self' → logprob: -18.64361572265625

Token 435: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.11913935840129852
    2. ':' → logprob: -2.8691394329071045
    3. '           ' → logprob: -2.9941394329071045
    4. '       ' → logprob: -5.244139194488525
    5. ':return' → logprob: -9.369139671325684
    6. '0' → logprob: -9.744139671325684
    7. '):
' → logprob: -10.869139671325684
    8. ' or' → logprob: -11.869139671325684
    9. ' :
' → logprob: -11.869139671325684
    10. '   ' → logprob: -11.994139671325684

Token 436: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007104513701051474
    2. '0' → logprob: -5.257104396820068
    3. 'return' → logprob: -6.507104396820068
    4. ' return' → logprob: -8.257104873657227
    5. '       ' → logprob: -9.257104873657227
    6. '   ' → logprob: -11.882104873657227
    7. '	       ' → logprob: -12.882104873657227
    8. '```' → logprob: -12.882104873657227
    9. '
' → logprob: -13.382104873657227
    10. '1' → logprob: -13.632104873657227

Token 437: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.033294543623924255
    2. '           ' → logprob: -3.533294439315796
    3. 'return' (adapté à ' return') → logprob: -6.283294677734375
    4. ' ' → logprob: -6.658294677734375
    5. ' return' → logprob: -7.908294677734375
    6. '       ' → logprob: -11.158294677734375
    7. '   ' → logprob: -12.408294677734375
    8. '               ' → logprob: -15.408294677734375
    9. '8' → logprob: -15.533294677734375
    10. '```' → logprob: -15.533294677734375

Token 438: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002614550176076591
    2. ' ' → logprob: -8.250261306762695
    3. '       ' → logprob: -17.375261306762695
    4. '           ' → logprob: -17.875261306762695
    5. '   ' → logprob: -18.125261306762695
    6. 'return' → logprob: -20.875261306762695
    7. '```' → logprob: -21.125261306762695
    8. '000' → logprob: -21.250261306762695
    9. '۰' → logprob: -21.562761306762695
    10. '=' → logprob: -21.625261306762695

Token 439: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.024604277219623e-05
    2. ' ' → logprob: -10.125040054321289
    3. '       ' → logprob: -17.25004005432129
    4. '           ' → logprob: -17.25004005432129
    5. '   ' → logprob: -18.37504005432129
    6. 'return' → logprob: -19.00004005432129
    7. '000' → logprob: -19.87504005432129
    8. '```' → logprob: -20.00004005432129
    9. '00' → logprob: -20.75004005432129
    10. '=' → logprob: -20.75004005432129

Token 440: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03894069045782089
    2. 'return' → logprob: -3.413940668106079
    3. '
' → logprob: -5.413940906524658
    4. ' return' → logprob: -7.413940906524658
    5. '	' → logprob: -9.2889404296875
    6. '   ' → logprob: -10.0389404296875
    7. '	return' → logprob: -10.4139404296875
    8. 'else' → logprob: -11.4139404296875
    9. '        
' → logprob: -11.6639404296875
    10. '           ' → logprob: -11.7889404296875

Token 441: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017897412180900574
    2. 'return' → logprob: -4.267897605895996
    3. '
' → logprob: -5.892897605895996
    4. ' return' → logprob: -7.517897605895996
    5. '   ' → logprob: -8.517897605895996
    6. '	' → logprob: -9.392897605895996
    7. '        
' → logprob: -10.267897605895996
    8. '	return' → logprob: -10.392897605895996
    9. '  
' → logprob: -10.767897605895996
    10. '    
' → logprob: -11.142897605895996

Token 442: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.025670401751995087
    2. '       ' → logprob: -3.775670289993286
    3. ' return' → logprob: -6.025670528411865
    4. '        
' → logprob: -12.650670051574707
    5. '	return' → logprob: -13.525670051574707
    6. '
' → logprob: -13.775670051574707
    7. 'volume' → logprob: -15.900670051574707
    8. '   ' → logprob: -16.525671005249023
    9. '```' → logprob: -16.775671005249023
    10. '\
' → logprob: -17.150671005249023

Token 443: ' volume' (ID: 10945)
  Prédit: ' volume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' volume' → logprob: -0.1269315630197525
    2. 'volume' → logprob: -2.126931667327881
    3. '(volume' → logprob: -13.001931190490723
    4. ' ' → logprob: -15.376931190490723
    5. ' volumen' → logprob: -15.501931190490723
    6. ' (' → logprob: -16.12693214416504
    7. '   ' → logprob: -16.37693214416504
    8. 'vol' → logprob: -16.50193214416504
    9. '       ' → logprob: -16.62693214416504
    10. ' vol' → logprob: -16.62693214416504

Token 444: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0036013787612318993
    2. '-' → logprob: -5.628601551055908
    3. '-self' → logprob: -14.12860107421875
    4. ' ' → logprob: -15.62860107421875
    5. ' ' → logprob: -15.75360107421875
    6. ' -
' → logprob: -16.00360107421875
    7. ' self' → logprob: -16.00360107421875
    8. 'self' → logprob: -18.12860107421875
    9. ',' → logprob: -18.25360107421875
    10. '   ' → logprob: -18.37860107421875

Token 445: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0024758970830589533
    2. ' self' → logprob: -6.002475738525391
    3. '       ' → logprob: -16.50247573852539
    4. '30' → logprob: -16.75247573852539
    5. '	self' → logprob: -18.62747573852539
    6. '   ' → logprob: -19.25247573852539
    7. ' ' → logprob: -19.37747573852539
    8. '(self' → logprob: -20.50247573852539
    9. '           ' → logprob: -21.00247573852539
    10. ' ' → logprob: -21.25247573852539

Token 446: '.start' (ID: 10181)
  Prédit: '.start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.start' → logprob: -0.002478508511558175
    2. 'start' → logprob: -6.00247859954834
    3. 'self' → logprob: -13.50247859954834
    4. '.' → logprob: -14.00247859954834
    5. '30' → logprob: -14.62747859954834
    6. '.self' → logprob: -16.127477645874023
    7. ' start' → logprob: -17.002477645874023
    8. '4' → logprob: -18.002477645874023
    9. '	start' → logprob: -18.252477645874023
    10. ' .' → logprob: -18.252477645874023

Token 447: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16348619759082794
    2. '
' → logprob: -2.0384862422943115
    3. '<|end|>' → logprob: -4.288486003875732
    4. '    
' → logprob: -5.913486003875732
    5. '```' → logprob: -6.413486003875732
    6. 'def' → logprob: -6.788486003875732
    7. ' def' → logprob: -7.913486003875732
    8. '  
' → logprob: -7.913486003875732
    9. ' 
' → logprob: -8.03848648071289
    10. '<|end|>' → logprob: -9.28848648071289

Token 448: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1599990427494049
    2. 'def' → logprob: -2.284999132156372
    3. '```' → logprob: -3.784999132156372
    4. '
' → logprob: -4.659998893737793
    5. ' def' → logprob: -4.784998893737793
    6. '    
' → logprob: -5.784998893737793
    7. ' 
' → logprob: -7.159998893737793
    8. '<|end|>' → logprob: -7.659998893737793
    9. '  
' → logprob: -7.909998893737793
    10. ' ' → logprob: -8.159998893737793

Token 449: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.08781202137470245
    2. '   ' → logprob: -2.5878119468688965
    3. ' def' → logprob: -5.3378119468688965
    4. '```' → logprob: -6.0878119468688965
    5. '
' → logprob: -6.7128119468688965
    6. '    
' → logprob: -8.087812423706055
    7. '<|end|>' → logprob: -9.087812423706055
    8. '  
' → logprob: -10.212812423706055
    9. ' ' → logprob: -10.212812423706055
    10. ')' → logprob: -10.212812423706055

Token 450: ' charge' (ID: 8363)
  Prédit: 'charge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'charge' → logprob: -0.005234002135694027
    2. ' charge' → logprob: -5.2552337646484375
    3. '_charge' → logprob: -16.380233764648438
    4. 'char' → logprob: -17.380233764648438
    5. 'charged' → logprob: -17.630233764648438
    6. 'def' → logprob: -17.880233764648438
    7. 'ch' → logprob: -18.130233764648438
    8. 'Charge' → logprob: -18.505233764648438
    9. 'charges' → logprob: -18.755233764648438
    10. 'charg' → logprob: -18.880233764648438

Token 451: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -15.25
    3. 'for' → logprob: -17.75
    4. '_FOR' → logprob: -19.75
    5. ' _' → logprob: -19.875
    6. '_For' → logprob: -20.5
    7. '   ' → logprob: -20.875
    8. ' for' → logprob: -21.0
    9. 'For' → logprob: -21.0
    10. ')_' → logprob: -21.5

Token 452: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00029744720086455345
    2. '(' → logprob: -8.250297546386719
    3. 'self' → logprob: -10.375297546386719
    4. ' (' → logprob: -12.875297546386719
    5. '(
' → logprob: -13.500297546386719
    6. '(s' → logprob: -14.625297546386719
    7. ' self' → logprob: -15.625297546386719
    8. 'def' → logprob: -15.875297546386719
    9. '   ' → logprob: -16.25029754638672
    10. ' ' → logprob: -16.50029754638672

Token 453: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.001321669202297926
    2. 'self' → logprob: -7.001321792602539
    3. '(' → logprob: -8.251321792602539
    4. 'def' → logprob: -9.251321792602539
    5. ' (' → logprob: -10.501321792602539
    6. '   ' → logprob: -11.626321792602539
    7. ')' → logprob: -12.001321792602539
    8. ' self' → logprob: -12.876321792602539
    9. ' ' → logprob: -13.251321792602539
    10. '[' → logprob: -13.376321792602539

Token 454: ' volume' (ID: 10945)
  Prédit: 'volume'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'volume' → logprob: -0.5761492848396301
    2. ' volume' → logprob: -0.8261492848396301
    3. 'self' → logprob: -8.576148986816406
    4. ' self' → logprob: -11.076148986816406
    5. '       ' → logprob: -13.326148986816406
    6. '   ' → logprob: -13.701148986816406
    7. 'vol' → logprob: -14.326148986816406
    8. '(volume' → logprob: -14.576148986816406
    9. 'def' → logprob: -14.826148986816406
    10. ' ' → logprob: -15.201148986816406

Token 455: ':' (ID: 25)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.524878740310669
    2. ':' → logprob: -1.024878740310669
    3. ')' → logprob: -4.02487850189209
    4. '   ' → logprob: -4.52487850189209
    5. '(' → logprob: -4.89987850189209
    6. 'self' → logprob: -5.27487850189209
    7. ',' → logprob: -5.27487850189209
    8. '=' → logprob: -6.77487850189209
    9. '       ' → logprob: -7.02487850189209
    10. '[' → logprob: -8.39987850189209

Token 456: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.9977519512176514
    2. 'self' → logprob: -1.2477519512176514
    3. ' self' → logprob: -1.2477519512176514
    4. ' int' → logprob: -2.8727519512176514
    5. ' def' → logprob: -8.99775218963623
    6. 'def' → logprob: -9.24775218963623
    7. ' ' → logprob: -9.62275218963623
    8. '   ' → logprob: -9.74775218963623
    9. 'return' → logprob: -10.62275218963623
    10. ')' → logprob: -10.74775218963623

Token 457: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.911954500945285e-05
    2. 'self' → logprob: -9.750088691711426
    3. '):' → logprob: -11.250088691711426
    4. '   ' → logprob: -11.750088691711426
    5. '       ' → logprob: -12.000088691711426
    6. '(self' → logprob: -12.875088691711426
    7. ' )' → logprob: -15.250088691711426
    8. ')->' → logprob: -15.750088691711426
    9. ':' → logprob: -15.875088691711426
    10. 'def' → logprob: -16.125089645385742

Token 458: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.3591330945491791
    2. ':' → logprob: -1.8591331243515015
    3. '(' → logprob: -2.609133005142212
    4. '->' → logprob: -3.984133005142212
    5. '       ' → logprob: -4.359133243560791
    6. 'self' → logprob: -4.359133243560791
    7. 'def' → logprob: -5.234133243560791
    8. '[' → logprob: -5.234133243560791
    9. '   ' → logprob: -5.359133243560791
    10. '=' → logprob: -5.609133243560791

Token 459: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0011703446507453918
    2. ' int' → logprob: -6.7511701583862305
    3. 'self' → logprob: -15.87617015838623
    4. '(int' → logprob: -17.751171112060547
    5. '[int' → logprob: -18.251171112060547
    6. ':int' → logprob: -18.876171112060547
    7. 'def' → logprob: -20.251171112060547
    8. 'return' → logprob: -20.376171112060547
    9. '<int' → logprob: -21.001171112060547
    10. '=int' → logprob: -21.251171112060547

Token 460: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08066640794277191
    2. '       ' → logprob: -2.7056663036346436
    3. '   ' → logprob: -5.455666542053223
    4. '(self' → logprob: -5.955666542053223
    5. ' self' → logprob: -7.455666542053223
    6. 'self' → logprob: -7.455666542053223
    7. '(' → logprob: -7.580666542053223
    8. ':
' → logprob: -7.830666542053223
    9. '->' → logprob: -8.330666542053223
    10. ')' → logprob: -8.455666542053223

Token 461: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1270972490310669
    2. 'v' → logprob: -2.1270971298217773
    3. ' v' → logprob: -9.127097129821777
    4. '   ' → logprob: -9.752097129821777
    5. '```' → logprob: -14.377097129821777
    6. 'return' → logprob: -14.502097129821777
    7. '	v' → logprob: -14.627097129821777
    8. '
' → logprob: -15.502097129821777
    9. '      ' → logprob: -16.127098083496094
    10. '        
' → logprob: -16.502098083496094

Token 462: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.002265636110678315
    2. '       ' → logprob: -6.252265453338623
    3. ' v' → logprob: -8.002265930175781
    4. 'return' → logprob: -13.627265930175781
    5. '```' → logprob: -14.627265930175781
    6. '   ' → logprob: -15.252265930175781
    7. 'self' → logprob: -15.752265930175781
    8. '	v' → logprob: -16.37726593017578
    9. '``' → logprob: -16.37726593017578
    10. '
' → logprob: -16.75226593017578

Token 463: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687199354171753
    2. '=' → logprob: -1.1368720531463623
    3. '=self' → logprob: -14.761872291564941
    4. '   ' → logprob: -15.261872291564941
    5. ':' → logprob: -15.761872291564941
    6. 'v' → logprob: -16.886871337890625
    7. '       ' → logprob: -17.386871337890625
    8. ' ' → logprob: -17.511871337890625
    9. '=v' → logprob: -17.511871337890625
    10. '    ' → logprob: -18.261871337890625

Token 464: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.061967797577381134
    2. ' self' → logprob: -2.8119678497314453
    3. '       ' → logprob: -15.936967849731445
    4. '	self' → logprob: -18.311967849731445
    5. '   ' → logprob: -20.186967849731445
    6. '(self' → logprob: -20.686967849731445
    7. '=self' → logprob: -21.061967849731445
    8. '[self' → logprob: -21.936967849731445
    9. 'v' → logprob: -22.061967849731445
    10. '```' → logprob: -22.686967849731445

Token 465: '.app' (ID: 2689)
  Prédit: '.app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.app' → logprob: -0.0009242036612704396
    2. 'app' → logprob: -7.000924110412598
    3. '.ap' → logprob: -12.000924110412598
    4. '.' → logprob: -12.500924110412598
    5. ' .' → logprob: -13.750924110412598
    6. '@app' → logprob: -14.000924110412598
    7. '_app' → logprob: -15.750924110412598
    8. '.appcompat' → logprob: -16.000925064086914
    9. '	app' → logprob: -16.125925064086914
    10. '```' → logprob: -16.125925064086914

Token 466: 'licable' (ID: 127292)
  Prédit: 'licable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'licable' → logprob: -6.32523515378125e-05
    2. 'liable' → logprob: -10.250062942504883
    3. 'lic' → logprob: -10.500062942504883
    4. 'lical' → logprob: -16.125062942504883
    5. 'plic' → logprob: -16.625062942504883
    6. 'l' → logprob: -16.625062942504883
    7. 'li' → logprob: -16.750062942504883
    8. 'lica' → logprob: -17.125062942504883
    9. 'licant' → logprob: -17.375062942504883
    10. 'le' → logprob: -18.750062942504883

Token 467: '_volume' (ID: 64366)
  Prédit: '_volume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_volume' → logprob: -4.723352049040841e-06
    2. 'volume' → logprob: -12.500004768371582
    3. '_' → logprob: -14.500004768371582
    4. 'Volume' → logprob: -15.125004768371582
    5. '_
' → logprob: -16.875003814697266
    6. '_vol' → logprob: -17.125003814697266
    7. '_voltage' → logprob: -17.125003814697266
    8. '_VOLUME' → logprob: -17.375003814697266
    9. '\' → logprob: -18.000003814697266
    10. '
' → logprob: -18.125003814697266

Token 468: '(volume' (ID: 162071)
  Prédit: '(volume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(volume' → logprob: -1.0280383548888494e-06
    2. 'volume' → logprob: -14.250000953674316
    3. '(vol' → logprob: -15.250000953674316
    4. '(' → logprob: -16.625001907348633
    5. ' (' → logprob: -16.875001907348633
    6. ' volume' → logprob: -18.125001907348633
    7. '(quantity' → logprob: -18.250001907348633
    8. '(value' → logprob: -18.375001907348633
    9. '(version' → logprob: -18.875001907348633
    10. '(v' → logprob: -19.625001907348633

Token 469: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.313347727060318
    2. ')
' → logprob: -1.3133476972579956
    3. '       ' → logprob: -9.688347816467285
    4. ')
' → logprob: -11.688347816467285
    5. '   ' → logprob: -12.188347816467285
    6. ')return' → logprob: -12.438347816467285
    7. ' )
' → logprob: -13.313347816467285
    8. ')

' → logprob: -13.563347816467285
    9. ' )' → logprob: -13.563347816467285
    10. ')v' → logprob: -14.563347816467285

Token 470: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6736268401145935
    2. '
' → logprob: -1.2986268997192383
    3. ' *' → logprob: -2.1736268997192383
    4. '*' → logprob: -3.4236268997192383
    5. ' return' → logprob: -3.5486268997192383
    6. 'return' → logprob: -3.5486268997192383
    7. ' 
' → logprob: -5.048626899719238
    8. ' ' → logprob: -6.673626899719238
    9. '<|end|>' → logprob: -6.673626899719238
    10. 'self' → logprob: -7.173626899719238

Token 471: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -2.9875325708417222e-05
    2. ' return' → logprob: -10.500029563903809
    3. '       ' → logprob: -13.000029563903809
    4. '	return' → logprob: -17.500030517578125
    5. '   ' → logprob: -18.125030517578125
    6. '
' → logprob: -18.875030517578125
    7. 'eturn' → logprob: -20.750030517578125
    8. '```' → logprob: -21.000030517578125
    9. '{return' → logprob: -22.875030517578125
    10. ':return' → logprob: -23.125030517578125

Token 472: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.16022564470767975
    2. 'v' → logprob: -1.9102256298065186
    3. 'self' → logprob: -14.410225868225098
    4. '	v' → logprob: -15.160225868225098
    5. ' ' → logprob: -16.16022491455078
    6. '   ' → logprob: -16.16022491455078
    7. ' ' → logprob: -16.28522491455078
    8. 'int' → logprob: -16.28522491455078
    9. '
' → logprob: -16.53522491455078
    10. '0' → logprob: -16.66022491455078

Token 473: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.03367197886109352
    2. '*' → logprob: -3.4086720943450928
    3. '*self' → logprob: -10.783672332763672
    4. ' ' → logprob: -12.908672332763672
    5. ' ' → logprob: -13.408672332763672
    6. '   ' → logprob: -14.783672332763672
    7. 'self' → logprob: -15.033672332763672
    8. '```' → logprob: -15.533672332763672
    9. '**' → logprob: -15.658672332763672
    10. '*object' → logprob: -16.283672332763672

Token 474: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0015023599844425917
    2. ' self' → logprob: -6.501502513885498
    3. '	self' → logprob: -18.251502990722656
    4. '   ' → logprob: -19.501502990722656
    5. ' ' → logprob: -19.626502990722656
    6. '160' → logprob: -20.001502990722656
    7. '(self' → logprob: -20.126502990722656
    8. '
' → logprob: -20.501502990722656
    9. '[self' → logprob: -20.876502990722656
    10. '       ' → logprob: -21.251502990722656

Token 475: '.unit' (ID: 51513)
  Prédit: '.unit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.unit' → logprob: -0.0005968777113594115
    2. '.' → logprob: -7.50059700012207
    3. ' .' → logprob: -10.62559700012207
    4. 'unit' → logprob: -10.87559700012207
    5. '.user' → logprob: -14.75059700012207
    6. ' unit' → logprob: -16.37559700012207
    7. '.token' → logprob: -16.62559700012207
    8. '.units' → logprob: -16.62559700012207
    9. '	unit' → logprob: -18.00059700012207
    10. '.space' → logprob: -18.50059700012207

Token 476: '_price' (ID: 18814)
  Prédit: '_price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -0.03820247948169708
    2. 'price' → logprob: -3.2882025241851807
    3. 'unit' → logprob: -8.788202285766602
    4. 'self' → logprob: -12.538202285766602
    5. '.price' → logprob: -13.538202285766602
    6. 'Price' → logprob: -13.663202285766602
    7. '160' → logprob: -15.038202285766602
    8. ' price' → logprob: -15.038202285766602
    9. '_PRICE' → logprob: -15.288202285766602
    10. '100' → logprob: -15.538202285766602

Token 477: '


' (ID: 2499)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.3168509304523468
    2. '
' → logprob: -1.3168509006500244
    3. '

' → logprob: -5.6918511390686035
    4. 'def' → logprob: -9.316850662231445
    5. '<|end|>' → logprob: -9.941850662231445
    6. '```' → logprob: -10.316850662231445
    7. '


' → logprob: -10.941850662231445
    8. '
' → logprob: -11.941850662231445
    9. ' class' → logprob: -12.191850662231445
    10. '<class' → logprob: -13.066850662231445

Token 478: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -1.0802738870552275e-05
    2. '
' → logprob: -11.50001049041748
    3. '```' → logprob: -14.50001049041748
    4. 'def' → logprob: -16.375011444091797
    5. '<class' → logprob: -17.125011444091797
    6. '"class' → logprob: -17.250011444091797
    7. ' class' → logprob: -17.375011444091797
    8. '``' → logprob: -18.000011444091797
    9. '

' → logprob: -18.125011444091797
    10. '  
' → logprob: -18.250011444091797

Token 479: ' Water' (ID: 12303)
  Prédit: 'Water'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Water' → logprob: -0.004460504744201899
    2. ' Water' → logprob: -5.629460334777832
    3. 'Residential' → logprob: -7.879460334777832
    4. 'House' → logprob: -8.629460334777832
    5. 'Meter' → logprob: -9.004460334777832
    6. 'Tier' → logprob: -9.879460334777832
    7. 'Customer' → logprob: -10.254460334777832
    8. 'Consumer' → logprob: -11.004460334777832
    9. 'User' → logprob: -11.254460334777832
    10. 'Domestic' → logprob: -11.379460334777832

Token 480: 'Charge' (ID: 46218)
  Prédit: 'Charge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Charge' → logprob: -0.004668761044740677
    2. 'Bill' → logprob: -6.379668712615967
    3. 'Usage' → logprob: -6.629668712615967
    4. 'Fee' → logprob: -7.629668712615967
    5. 'Billing' → logprob: -7.754668712615967
    6. 'Charges' → logprob: -8.004669189453125
    7. 'Meter' → logprob: -8.629669189453125
    8. 'Rate' → logprob: -9.379669189453125
    9. 'Consumer' → logprob: -10.004669189453125
    10. 'Consumption' → logprob: -10.879669189453125

Token 481: 'Calculator' (ID: 50159)
  Prédit: 'Calculator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Calculator' → logprob: -0.0039380560629069805
    2. ':' → logprob: -6.0039381980896
    3. 'Estimator' → logprob: -7.3789381980896
    4. 'Calculation' → logprob: -7.6289381980896
    5. ':
' → logprob: -9.753937721252441
    6. 'Bracket' → logprob: -9.878937721252441
    7. '():' → logprob: -9.878937721252441
    8. 'Meter' → logprob: -9.878937721252441
    9. '(' → logprob: -11.003937721252441
    10. 'Usage' → logprob: -11.378937721252441

Token 482: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00013250234769657254
    2. '():' → logprob: -9.62513256072998
    3. '(' → logprob: -10.75013256072998
    4. '):' → logprob: -10.87513256072998
    5. ':
' → logprob: -11.12513256072998
    6. '(W' → logprob: -12.00013256072998
    7. ':def' → logprob: -13.50013256072998
    8. ' :' → logprob: -13.62513256072998
    9. '>:' → logprob: -14.00013256072998
    10. ':**' → logprob: -14.62513256072998

Token 483: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002831464516930282
    2. ' def' → logprob: -8.750283241271973
    3. 'def' → logprob: -9.000283241271973
    4. '```' → logprob: -13.750283241271973
    5. '   ' → logprob: -15.750283241271973
    6. '    
' → logprob: -17.625282287597656
    7. ':' → logprob: -18.000282287597656
    8. 'class' → logprob: -18.375282287597656
    9. '	def' → logprob: -18.750282287597656
    10. '   ' → logprob: -18.875282287597656

Token 484: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.008666571229696274
    2. ' def' → logprob: -4.758666515350342
    3. '   ' → logprob: -10.3836669921875
    4. 'tiers' → logprob: -10.8836669921875
    5. ' tiers' → logprob: -13.5086669921875
    6. 'de' → logprob: -14.8836669921875
    7. 'tier' → logprob: -15.2586669921875
    8. '	def' → logprob: -15.6336669921875
    9. 'class' → logprob: -16.7586669921875
    10. ' ' → logprob: -17.0086669921875

Token 485: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0322275273501873
    2. '__' → logprob: -3.5322275161743164
    3. 'def' → logprob: -6.657227516174316
    4. ' def' → logprob: -6.782227516174316
    5. '_init' → logprob: -10.532227516174316
    6. ' ' → logprob: -11.032227516174316
    7. '   ' → logprob: -12.782227516174316
    8. 'init' → logprob: -13.157227516174316
    9. ' init' → logprob: -13.282227516174316
    10. '.__' → logprob: -13.657227516174316

Token 486: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. 'def' → logprob: -17.25
    3. '```' → logprob: -18.625
    4. ' init' → logprob: -18.875
    5. '_init' → logprob: -19.125
    6. '   ' → logprob: -19.625
    7. '	init' → logprob: -20.625
    8. '(init' → logprob: -22.0
    9. 'inite' → logprob: -22.25
    10. '__' → logprob: -22.75

Token 487: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -3.380904672667384e-05
    2. '__(
' → logprob: -10.875033378601074
    3. '(self' → logprob: -11.375033378601074
    4. '__' → logprob: -12.875033378601074
    5. '_(' → logprob: -14.625033378601074
    6. '<>(' → logprob: -16.12503433227539
    7. '```' → logprob: -16.25003433227539
    8. '__('' → logprob: -17.12503433227539
    9. '__((' → logprob: -17.87503433227539
    10. '__("' → logprob: -17.87503433227539

Token 488: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.114600834436715e-05
    2. '):
' → logprob: -9.750091552734375
    3. ')' → logprob: -11.125091552734375
    4. ' self' → logprob: -11.875091552734375
    5. '
' → logprob: -12.000091552734375
    6. ')(' → logprob: -13.375091552734375
    7. '   ' → logprob: -13.750091552734375
    8. '	self' → logprob: -14.250091552734375
    9. '(self' → logprob: -14.375091552734375
    10. '       ' → logprob: -14.625091552734375

Token 489: '):
' (ID: 1883)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.44600996375083923
    2. ',' → logprob: -1.0710099935531616
    3. '):' → logprob: -4.946010112762451
    4. '):
' → logprob: -4.946010112762451
    5. '(self' → logprob: -6.071010112762451
    6. ',self' → logprob: -8.196009635925293
    7. ' self' → logprob: -9.321009635925293
    8. '_self' → logprob: -9.821009635925293
    9. ')' → logprob: -9.946009635925293
    10. '   ' → logprob: -10.696009635925293

Token 490: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009862465085461736
    2. '       ' → logprob: -7.500986099243164
    3. ' self' → logprob: -7.750986099243164
    4. '   ' → logprob: -13.000986099243164
    5. '(self' → logprob: -15.500986099243164
    6. '	self' → logprob: -15.500986099243164
    7. '
' → logprob: -15.625986099243164
    8. ' ' → logprob: -17.500986099243164
    9. '```' → logprob: -18.000986099243164
    10. '     ' → logprob: -19.250986099243164

Token 491: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.007153053302317858
    2. '       ' → logprob: -5.257153034210205
    3. ' self' → logprob: -6.257153034210205
    4. '	self' → logprob: -15.007153511047363
    5. '   ' → logprob: -15.132153511047363
    6. ' ' → logprob: -17.132152557373047
    7. '(self' → logprob: -17.382152557373047
    8. '```' → logprob: -18.507152557373047
    9. '[self' → logprob: -18.632152557373047
    10. 's' → logprob: -19.382152557373047

Token 492: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -0.029987098649144173
    2. ' .' → logprob: -3.904987096786499
    3. 'tiers' → logprob: -5.404987335205078
    4. '.' → logprob: -5.529987335205078
    5. '._' → logprob: -8.154987335205078
    6. '.ch' → logprob: -8.154987335205078
    7. ' tiers' → logprob: -8.529987335205078
    8. 'T' → logprob: -10.029987335205078
    9. '_t' → logprob: -10.279987335205078
    10. '.T' → logprob: -11.404987335205078

Token 493: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -3.130576806142926e-05
    2. 'ier' → logprob: -10.625031471252441
    3. 'i' → logprob: -13.125031471252441
    4. 'tiers' → logprob: -13.250031471252441
    5. '#' → logprob: -14.125031471252441
    6. '_' → logprob: -14.750031471252441
    7. '```' → logprob: -14.875031471252441
    8. '   ' → logprob: -15.125031471252441
    9. 'iert' → logprob: -15.375031471252441
    10. 'ieres' → logprob: -15.750031471252441

Token 494: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002194755943492055
    2. '=' → logprob: -6.127194881439209
    3. ':' → logprob: -11.62719440460205
    4. ' =[' → logprob: -14.50219440460205
    5. ' ' → logprob: -16.752195358276367
    6. '=[
' → logprob: -17.377195358276367
    7. '=[' → logprob: -17.502195358276367
    8. ' ' → logprob: -18.252195358276367
    9. ' :' → logprob: -18.252195358276367
    10. '=[]' → logprob: -18.252195358276367

Token 495: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.0009704180411063135
    2. ' List' → logprob: -7.000970363616943
    3. '[List' → logprob: -9.750970840454102
    4. '	List' → logprob: -14.875970840454102
    5. '[' → logprob: -16.5009708404541
    6. '   ' → logprob: -16.7509708404541
    7. ' ' → logprob: -17.5009708404541
    8. '[
' → logprob: -17.6259708404541
    9. 'list' → logprob: -18.3759708404541
    10. '       ' → logprob: -18.8759708404541

Token 496: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0007310202927328646
    2. ' =' → logprob: -7.625730991363525
    3. '[
' → logprob: -9.000731468200684
    4. '=' → logprob: -9.375731468200684
    5. '[int' → logprob: -10.875731468200684
    6. '=[' → logprob: -12.250731468200684
    7. '=[
' → logprob: -12.375731468200684
    8. '[self' → logprob: -12.750731468200684
    9. '```' → logprob: -13.750731468200684
    10. 'Water' → logprob: -14.625731468200684

Token 497: 'Water' (ID: 27874)
  Prédit: 'Water'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Water' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -14.750000953674316
    3. ']' → logprob: -16.625
    4. ' Water' → logprob: -17.625
    5. 'water' → logprob: -20.0
    6. ')' → logprob: -20.625
    7. '```' → logprob: -20.875
    8. 'W' → logprob: -21.25
    9. '_water' → logprob: -21.625
    10. '   ' → logprob: -21.75

Token 498: 'Charge' (ID: 46218)
  Prédit: 'Charge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Charge' → logprob: -7.896309739408025e-07
    2. '_charge' → logprob: -14.250000953674316
    3. 'charge' → logprob: -17.0
    4. ' Charge' → logprob: -17.625
    5. '_' → logprob: -19.5
    6. 'Charging' → logprob: -19.5
    7. 'Charges' → logprob: -19.625
    8. 'Charg' → logprob: -19.75
    9. 'Change' → logprob: -20.0
    10. ']' → logprob: -21.0

Token 499: 'Tier' (ID: 79698)
  Prédit: 'Tier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tier' → logprob: -1.2664456789934775e-06
    2. 'tier' → logprob: -13.875000953674316
    3. ']' → logprob: -16.375001907348633
    4. 'Water' → logprob: -16.500001907348633
    5. '[T' → logprob: -17.375001907348633
    6. '[' → logprob: -18.000001907348633
    7. '-tier' → logprob: -18.000001907348633
    8. '```' → logprob: -18.500001907348633
    9. 'ier' → logprob: -19.125001907348633
    10. 'T' → logprob: -19.250001907348633

Token 500: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -4.3822154111694545e-05
    2. '[' → logprob: -10.125043869018555
    3. ']=' → logprob: -12.750043869018555
    4. ' ]' → logprob: -14.000043869018555
    5. '`]' → logprob: -18.500043869018555
    6. '']' → logprob: -18.750043869018555
    7. '=' → logprob: -19.000043869018555
    8. ')' → logprob: -19.375043869018555
    9. ']
' → logprob: -19.875043869018555
    10. '[]' → logprob: -20.000043869018555

Token 501: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740794599056244
    2. ' =' → logprob: -0.9740794897079468
    3. '[' → logprob: -13.724079132080078
    4. ' ' → logprob: -14.349079132080078
    5. ']' → logprob: -15.099079132080078
    6. ')' → logprob: -15.474079132080078
    7. '<|end|>' → logprob: -16.849079132080078
    8. ' =[' → logprob: -17.224079132080078
    9. '＝' → logprob: -17.599079132080078
    10. '=[]' → logprob: -17.724079132080078

Token 502: ' [' (ID: 723)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.5264644026756287
    2. '[' → logprob: -1.0264644622802734
    3. '[T' → logprob: -3.2764644622802734
    4. ' [' → logprob: -5.026464462280273
    5. ' [
' → logprob: -5.026464462280273
    6. '[t' → logprob: -8.901464462280273
    7. '[self' → logprob: -12.401464462280273
    8. '[List' → logprob: -12.526464462280273
    9. '[int' → logprob: -13.151464462280273
    10. '[]' → logprob: -13.526464462280273

Token 503: 'Tier' (ID: 79698)
  Prédit: 'Tier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tier' → logprob: -5.5577775128767826e-06
    2. '       ' → logprob: -12.750005722045898
    3. ' Tier' → logprob: -13.125005722045898
    4. '   ' → logprob: -14.500005722045898
    5. '           ' → logprob: -16.2500057220459
    6. '
' → logprob: -19.0000057220459
    7. '     ' → logprob: -19.3750057220459
    8. 'tier' → logprob: -19.6250057220459
    9. 'T' → logprob: -20.1250057220459
    10. '               ' → logprob: -20.5000057220459

Token 504: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '
' → logprob: -18.75
    3. '(' → logprob: -19.5
    4. ' ' → logprob: -20.0
    5. '4' → logprob: -20.25
    6. '```' → logprob: -20.25
    7. '१' → logprob: -21.8125
    8. '１' → logprob: -21.8125
    9. ')' → logprob: -21.875
    10. '

' → logprob: -21.9375

Token 505: '(),' (ID: 2547)
  Prédit: '(),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -2.463036435074173e-05
    2. '()' → logprob: -11.375024795532227
    3. '(),
' → logprob: -11.750024795532227
    4. ' (),' → logprob: -12.750024795532227
    5. ',' → logprob: -13.250024795532227
    6. '(),

' → logprob: -14.750024795532227
    7. '(),"' → logprob: -16.625024795532227
    8. '(),
' → logprob: -17.250024795532227
    9. '(),'' → logprob: -17.875024795532227
    10. '()
' → logprob: -18.375024795532227

Token 506: ' Tier' (ID: 44983)
  Prédit: 'Tier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tier' → logprob: -1.9027791495318525e-05
    2. ' Tier' → logprob: -10.875019073486328
    3. 'tier' → logprob: -18.625019073486328
    4. 'Ti' → logprob: -19.125019073486328
    5. 'T' → logprob: -19.375019073486328
    6. '
' → logprob: -20.250019073486328
    7. ' tier' → logprob: -20.500019073486328
    8. 'Tie' → logprob: -20.625019073486328
    9. '```' → logprob: -20.750019073486328
    10. '   ' → logprob: -21.000019073486328

Token 507: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. ' ' → logprob: -18.875
    3. '
' → logprob: -19.375
    4. '```' → logprob: -19.375
    5. '(' → logprob: -20.125
    6. '1' → logprob: -20.5
    7. '２' → logprob: -20.625
    8. '۲' → logprob: -21.25
    9. ',' → logprob: -21.4375
    10. 'Tier' → logprob: -21.5

Token 508: '(),' (ID: 2547)
  Prédit: '(),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -2.856408536899835e-05
    2. '()' → logprob: -10.500028610229492
    3. '(),
' → logprob: -15.125028610229492
    4. '(),

' → logprob: -15.500028610229492
    5. '(),"' → logprob: -15.625028610229492
    6. '(),'' → logprob: -15.875028610229492
    7. ',' → logprob: -16.500028610229492
    8. ' (),' → logprob: -17.375028610229492
    9. '()],' → logprob: -17.375028610229492
    10. '()]' → logprob: -19.125028610229492

Token 509: ' Tier' (ID: 44983)
  Prédit: 'Tier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tier' → logprob: -5.836499985889532e-05
    2. ' Tier' → logprob: -9.7500581741333
    3. '   ' → logprob: -17.750059127807617
    4. '
' → logprob: -20.000059127807617
    5. '       ' → logprob: -20.000059127807617
    6. 'tier' → logprob: -20.000059127807617
    7. ' ' → logprob: -20.250059127807617
    8. ' tier' → logprob: -20.875059127807617
    9. '	T' → logprob: -21.125059127807617
    10. 'T' → logprob: -21.375059127807617

Token 510: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.625000953674316
    3. ',' → logprob: -15.250000953674316
    4. '(' → logprob: -18.625
    5. '1' → logprob: -18.625
    6. '   ' → logprob: -19.125
    7. '(),' → logprob: -19.875
    8. '       ' → logprob: -21.0
    9. '  ' → logprob: -21.125
    10. ' ,' → logprob: -21.25

Token 511: '(),' (ID: 2547)
  Prédit: '(),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -2.935296834039036e-06
    2. '()' → logprob: -12.87500286102295
    3. ',' → logprob: -15.75000286102295
    4. ' (),' → logprob: -16.500003814697266
    5. '()]' → logprob: -16.750003814697266
    6. '(),
' → logprob: -17.375003814697266
    7. '(),

' → logprob: -18.750003814697266
    8. '(),"' → logprob: -18.875003814697266
    9. '()],' → logprob: -18.875003814697266
    10. '(),'' → logprob: -19.250003814697266

Token 512: ' Tier' (ID: 44983)
  Prédit: 'Tier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tier' → logprob: -7.493430894101039e-05
    2. ' Tier' → logprob: -9.500075340270996
    3. '   ' → logprob: -19.62507438659668
    4. '       ' → logprob: -21.12507438659668
    5. ' ' → logprob: -21.87507438659668
    6. 'tier' → logprob: -22.00007438659668
    7. '
' → logprob: -22.25007438659668
    8. 'Layer' → logprob: -22.62507438659668
    9. ' tier' → logprob: -22.62507438659668
    10. 'Tie' → logprob: -23.37507438659668

Token 513: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: 0.0
    2. 'ier' → logprob: -19.375
    3. ')' → logprob: -20.5
    4. ' ' → logprob: -20.625
    5. '
' → logprob: -21.0
    6. '```' → logprob: -21.0
    7. ']' → logprob: -21.125
    8. '(' → logprob: -21.125
    9. '()' → logprob: -22.0
    10. '' → logprob: -22.125

Token 514: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -6.2729995988775045e-06
    2. '()' → logprob: -12.000006675720215
    3. '()]
' → logprob: -17.1250057220459
    4. '())' → logprob: -18.3750057220459
    5. '()}' → logprob: -18.6250057220459
    6. ']()' → logprob: -18.8750057220459
    7. '(),' → logprob: -18.8750057220459
    8. ']' → logprob: -20.0000057220459
    9. ' ()' → logprob: -20.2500057220459
    10. '（）' → logprob: -20.5000057220459

Token 515: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23412106931209564
    2. '
' → logprob: -1.8591210842132568
    3. 'def' → logprob: -3.234121084213257
    4. '    
' → logprob: -4.484120845794678
    5. '<|end|>' → logprob: -6.609120845794678
    6. ' def' → logprob: -7.859120845794678
    7. '  
' → logprob: -8.859121322631836
    8. '```' → logprob: -9.359121322631836
    9. '

' → logprob: -9.984121322631836
    10. ')' → logprob: -9.984121322631836

Token 516: ' self' (ID: 1051)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03217905014753342
    2. '
' → logprob: -3.907179117202759
    3. 'self' (adapté à ' self') → logprob: -4.78217887878418
    4. '   ' → logprob: -6.40717887878418
    5. '

' → logprob: -7.28217887878418
    6. ' def' → logprob: -7.28217887878418
    7. '       ' → logprob: -9.90717887878418
    8. '```' → logprob: -10.53217887878418
    9. '    
' → logprob: -10.90717887878418
    10. ' self' → logprob: -11.28217887878418

Token 517: '.last' (ID: 15748)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.23466449975967407
    2. '.total' → logprob: -2.2346644401550293
    3. '.basic' → logprob: -2.7346644401550293
    4. '.base' → logprob: -4.484664440155029
    5. '_total' → logprob: -5.734664440155029
    6. '.volume' → logprob: -6.109664440155029
    7. '._' → logprob: -6.109664440155029
    8. '.unit' → logprob: -6.109664440155029
    9. 'total' → logprob: -6.359664440155029
    10. 'def' → logprob: -6.484664440155029

Token 518: '_month' (ID: 43330)
  Prédit: '_volume'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_volume' → logprob: -0.724811851978302
    2. '_charge' → logprob: -1.3498117923736572
    3. '_basic' → logprob: -2.8498117923736572
    4. '_t' → logprob: -2.9748117923736572
    5. '_cal' → logprob: -3.0998117923736572
    6. '_payment' → logprob: -4.224812030792236
    7. '_meter' → logprob: -4.474812030792236
    8. '_updated' → logprob: -4.599812030792236
    9. '_paid' → logprob: -4.724812030792236
    10. '_index' → logprob: -4.974812030792236

Token 519: '_charge' (ID: 110838)
  Prédit: '_usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_usage' → logprob: -0.4180319309234619
    2. '_volume' → logprob: -1.168031930923462
    3. '_read' → logprob: -4.918031692504883
    4. '=' → logprob: -5.168031692504883
    5. '_meter' → logprob: -5.168031692504883
    6. '_' → logprob: -5.668031692504883
    7. '_consum' → logprob: -6.293031692504883
    8. '_amount' → logprob: -6.418031692504883
    9. '_water' → logprob: -6.418031692504883
    10. ' =' → logprob: -7.168031692504883

Token 520: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5775895118713379
    2. '=' → logprob: -0.8275895118713379
    3. ':' → logprob: -6.452589511871338
    4. '=None' → logprob: -10.57758903503418
    5. 's' → logprob: -10.95258903503418
    6. '   ' → logprob: -11.45258903503418
    7. ' ' → logprob: -12.07758903503418
    8. '_amount' → logprob: -12.32758903503418
    9. 'd' → logprob: -13.70258903503418
    10. ',' → logprob: -13.82758903503418

Token 521: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0041387188248336315
    2. 'None' → logprob: -6.379138946533203
    3. ' ' → logprob: -6.629138946533203
    4. '100' → logprob: -8.629138946533203
    5. '120' → logprob: -9.379138946533203
    6. ' None' → logprob: -9.504138946533203
    7. '300' → logprob: -9.629138946533203
    8. '115' → logprob: -9.629138946533203
    9. '200' → logprob: -9.879138946533203
    10. '150' → logprob: -9.879138946533203

Token 522: '428' (ID: 36950)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03567024692893028
    2. 'None' → logprob: -3.535670280456543
    3. '115' → logprob: -6.785670280456543
    4. '100' → logprob: -7.035670280456543
    5. '120' → logprob: -8.285670280456543
    6. '300' → logprob: -8.285670280456543
    7. '110' → logprob: -8.410670280456543
    8. '500' → logprob: -8.410670280456543
    9. '150' → logprob: -8.410670280456543
    10. '200' → logprob: -8.535670280456543

Token 523: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5887933373451233
    2. '   ' → logprob: -1.0887932777404785
    3. 'def' → logprob: -2.5887932777404785
    4. '50' → logprob: -4.5887932777404785
    5. '    
' → logprob: -4.9637932777404785
    6. '       ' → logprob: -5.7137932777404785
    7. '
' → logprob: -5.8387932777404785
    8. '5' → logprob: -5.9637932777404785
    9. '00' → logprob: -5.9637932777404785
    10. '500' → logprob: -6.7137932777404785

Token 524: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.013912666589021683
    2. '   ' → logprob: -4.638912677764893
    3. '<|end|>' → logprob: -6.013912677764893
    4. '    
' → logprob: -7.388912677764893
    5. 'def' → logprob: -7.513912677764893
    6. '<|end|>' → logprob: -7.888912677764893
    7. '

' → logprob: -9.888912200927734
    8. ' def' → logprob: -10.138912200927734
    9. '  
' → logprob: -10.888912200927734
    10. ' 
' → logprob: -11.513912200927734

Token 525: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01999892108142376
    2. 'def' → logprob: -4.269999027252197
    3. '
' → logprob: -5.269999027252197
    4. '    
' → logprob: -7.394999027252197
    5. ' def' → logprob: -10.019998550415039
    6. '<|end|>' → logprob: -12.269998550415039
    7. '```' → logprob: -12.394998550415039
    8. '  
' → logprob: -13.269998550415039
    9. '        
' → logprob: -13.519998550415039
    10. '	def' → logprob: -14.019998550415039

Token 526: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -9.388769103679806e-05
    2. ' def' → logprob: -9.500093460083008
    3. '   ' → logprob: -10.875093460083008
    4. '@' → logprob: -18.000093460083008
    5. '
' → logprob: -18.125093460083008
    6. '```' → logprob: -18.500093460083008
    7. ' ' → logprob: -18.750093460083008
    8. '	def' → logprob: -19.000093460083008
    9. '    
' → logprob: -19.125093460083008
    10. '@property' → logprob: -19.500093460083008

Token 527: ' calculate' (ID: 17950)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -0.5261694192886353
    2. ' calculate' → logprob: -0.9011694192886353
    3. 'total' → logprob: -6.276169300079346
    4. ' total' → logprob: -7.151169300079346
    5. 'def' → logprob: -9.151169776916504
    6. 'calc' → logprob: -9.651169776916504
    7. 'compute' → logprob: -10.026169776916504
    8. ' compute' → logprob: -10.276169776916504
    9. 'current' → logprob: -10.776169776916504
    10. 'monthly' → logprob: -11.026169776916504

Token 528: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.43633440136909485
    2. '_total' → logprob: -1.4363343715667725
    3. '_charge' → logprob: -2.1863343715667725
    4. '(' → logprob: -6.061334609985352
    5. '_month' → logprob: -7.561334609985352
    6. '_fee' → logprob: -9.061334609985352
    7. '_ch' → logprob: -9.186334609985352
    8. '_' → logprob: -9.436334609985352
    9. '_water' → logprob: -9.436334609985352
    10. '_self' → logprob: -9.811334609985352

Token 529: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9945141077041626
    2. '_total' → logprob: -1.3695141077041626
    3. '_' → logprob: -1.7445141077041626
    4. '_charge' → logprob: -1.9945141077041626
    5. '_volume' → logprob: -3.369513988494873
    6. 'self' → logprob: -4.119513988494873
    7. '_amount' → logprob: -5.994513988494873
    8. '_fee' → logprob: -6.244513988494873
    9. '_,' → logprob: -6.369513988494873
    10. '_self' → logprob: -6.869513988494873

Token 530: ' volume' (ID: 10945)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.0011653900146484
    2. ' volume' → logprob: -1.2511653900146484
    3. ' self' → logprob: -1.3761653900146484
    4. 'volume' → logprob: -2.3761653900146484
    5. ' usage' → logprob: -8.376165390014648
    6. ' current' → logprob: -8.751165390014648
    7. 'usage' → logprob: -9.001165390014648
    8. ' water' → logprob: -9.751165390014648
    9. 'current' → logprob: -9.876165390014648
    10. '   ' → logprob: -9.876165390014648

Token 531: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.384836888173595e-05
    2. '):' → logprob: -9.7500638961792
    3. ' :' → logprob: -13.1250638961792
    4. ')' → logprob: -13.3750638961792
    5. ':int' → logprob: -13.3750638961792
    6. ' ):' → logprob: -15.7500638961792
    7. '):
' → logprob: -16.000062942504883
    8. '   ' → logprob: -16.500062942504883
    9. '_:' → logprob: -18.500062942504883
    10. ' )' → logprob: -18.500062942504883

Token 532: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6931610703468323
    2. ' int' → logprob: -0.6931610703468323
    3. ')' → logprob: -11.318161010742188
    4. '(int' → logprob: -14.318161010742188
    5. ':int' → logprob: -14.818161010742188
    6. '[int' → logprob: -15.943161010742188
    7. '=int' → logprob: -16.068161010742188
    8. ',int' → logprob: -16.068161010742188
    9. ' )' → logprob: -16.318161010742188
    10. '   ' → logprob: -16.318161010742188

Token 533: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0325924449716695e-05
    2. '   ' → logprob: -12.12501049041748
    3. ' )' → logprob: -12.75001049041748
    4. '):' → logprob: -13.37501049041748
    5. ')->' → logprob: -16.125009536743164
    6. '       ' → logprob: -16.250009536743164
    7. '):
' → logprob: -16.625009536743164
    8. ':' → logprob: -16.625009536743164
    9. '`)' → logprob: -17.750009536743164
    10. ',)' → logprob: -18.375009536743164

Token 534: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07586648315191269
    2. '->' → logprob: -3.075866460800171
    3. ' ->' → logprob: -3.825866460800171
    4. ')' → logprob: -5.82586669921875
    5. ')->' → logprob: -6.70086669921875
    6. '   ' → logprob: -7.32586669921875
    7. '()->' → logprob: -9.70086669921875
    8. '():' → logprob: -9.95086669921875
    9. ':
' → logprob: -9.95086669921875
    10. '):' → logprob: -10.07586669921875

Token 535: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.3870088458061218
    2. 'int' → logprob: -1.1370089054107666
    3. ' dict' → logprob: -10.137008666992188
    4. '(int' → logprob: -10.262008666992188
    5. 'dict' → logprob: -10.887008666992188
    6. ' List' → logprob: -11.387008666992188
    7. 'List' → logprob: -12.262008666992188
    8. '   ' → logprob: -12.387008666992188
    9. ' sum' → logprob: -12.637008666992188
    10. ' (' → logprob: -12.762008666992188

Token 536: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00466176075860858
    2. ':
' → logprob: -5.379661560058594
    3. '       ' → logprob: -11.129661560058594
    4. '):' → logprob: -11.129661560058594
    5. '   ' → logprob: -11.879661560058594
    6. '):
' → logprob: -13.254661560058594
    7. '():' → logprob: -13.504661560058594
    8. ':def' → logprob: -14.379661560058594
    9. ':return' → logprob: -15.254661560058594
    10. ',' → logprob: -15.379661560058594

Token 537: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0951688289642334
    2. 'total' → logprob: -2.4701688289642334
    3. ' total' → logprob: -5.7201690673828125
    4. 'charge' → logprob: -6.0951690673828125
    5. 'result' → logprob: -8.345169067382812
    6. '
' → logprob: -8.345169067382812
    7. 'return' → logprob: -10.095169067382812
    8. 'amount' → logprob: -10.470169067382812
    9. '```' → logprob: -10.470169067382812
    10. 'subtotal' → logprob: -10.470169067382812

Token 538: ' #' (ID: 1069)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.018024330958724022
    2. 'charge' → logprob: -4.143024444580078
    3. 'return' → logprob: -6.393024444580078
    4. '       ' → logprob: -8.268024444580078
    5. ' total' → logprob: -10.143024444580078
    6. 'sum' → logprob: -12.518024444580078
    7. 'amount' → logprob: -12.643024444580078
    8. 'result' → logprob: -12.643024444580078
    9. '```' → logprob: -13.143024444580078
    10. 'charges' → logprob: -13.518024444580078

Token 539: ' sum' (ID: 4215)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.03446213901042938
    2. 'return' → logprob: -3.7844622135162354
    3. 'charge' → logprob: -4.534461975097656
    4. ' total' → logprob: -8.034461975097656
    5. 'charges' → logprob: -10.284461975097656
    6. '       ' → logprob: -10.409461975097656
    7. ' return' → logprob: -11.659461975097656
    8. '   ' → logprob: -11.784461975097656
    9. 'sum' → logprob: -12.409461975097656
    10. ' charge' → logprob: -12.534461975097656

Token 540: ' charges' (ID: 14843)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11571021378040314
    2. '(
' → logprob: -3.4907102584838867
    3. 'sum' → logprob: -3.7407102584838867
    4. '(sum' → logprob: -3.8657102584838867
    5. 'charge' → logprob: -4.865710258483887
    6. '([' → logprob: -4.990710258483887
    7. '(t' → logprob: -5.115710258483887
    8. ' sum' → logprob: -5.240710258483887
    9. '(self' → logprob: -5.865710258483887
    10. ' charge' → logprob: -6.240710258483887

Token 541: ' from' (ID: 591)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1044094562530518
    2. '       ' → logprob: -1.2294094562530518
    3. '(' → logprob: -2.1044094562530518
    4. '=' → logprob: -2.1044094562530518
    5. '(
' → logprob: -2.7294094562530518
    6. 'result' → logprob: -4.229409217834473
    7. '   ' → logprob: -4.604409217834473
    8. 'total' → logprob: -4.979409217834473
    9. 'charge' → logprob: -4.979409217834473
    10. '(self' → logprob: -5.354409217834473

Token 542: ' all' (ID: 722)
  Prédit: 'tier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tier' → logprob: -0.04010826349258423
    2. ' tier' → logprob: -3.5401082038879395
    3. 'sum' → logprob: -5.0401082038879395
    4. 'self' → logprob: -5.6651082038879395
    5. 'charge' → logprob: -9.165108680725098
    6. ' sum' → logprob: -9.290108680725098
    7. 't' → logprob: -9.665108680725098
    8. ' self' → logprob: -9.915108680725098
    9. 'tiers' → logprob: -11.165108680725098
    10. 'all' → logprob: -12.165108680725098

Token 543: ' tiers' (ID: 72536)
  Prédit: 'tier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tier' → logprob: -0.0018008425831794739
    2. ' tier' → logprob: -6.501801013946533
    3. 'self' → logprob: -8.501800537109375
    4. '   ' → logprob: -9.751800537109375
    5. 't' → logprob: -11.251800537109375
    6. 'tiers' → logprob: -11.501800537109375
    7. '```' → logprob: -12.876800537109375
    8. 'ti' → logprob: -13.126800537109375
    9. '       ' → logprob: -13.251800537109375
    10. ' ' → logprob: -13.751800537109375

Token 544: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02469520829617977
    2. 'total' → logprob: -3.8996951580047607
    3. ' total' → logprob: -6.27469539642334
    4. 'result' → logprob: -6.89969539642334
    5. 'return' → logprob: -7.77469539642334
    6. '
' → logprob: -8.27469539642334
    7. 'charge' → logprob: -8.27469539642334
    8. '        
' → logprob: -10.02469539642334
    9. ' result' → logprob: -10.27469539642334
    10. 'sum' → logprob: -10.39969539642334

Token 545: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021472018212080002
    2. 'total' → logprob: -4.021471977233887
    3. 'return' → logprob: -6.396471977233887
    4. 'charge' → logprob: -6.896471977233887
    5. 'result' → logprob: -8.146471977233887
    6. ' total' → logprob: -8.146471977233887
    7. 'sum' → logprob: -11.021471977233887
    8. ' return' → logprob: -11.396471977233887
    9. 'amount' → logprob: -11.896471977233887
    10. ' charge' → logprob: -12.271471977233887

Token 546: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.40599650144577026
    2. 'return' → logprob: -1.155996561050415
    3. 'charge' → logprob: -4.155996322631836
    4. '       ' → logprob: -6.155996322631836
    5. 'sum' → logprob: -7.655996322631836
    6. ' total' → logprob: -8.280996322631836
    7. 'result' → logprob: -8.280996322631836
    8. ' return' → logprob: -9.030996322631836
    9. 'amount' → logprob: -10.905996322631836
    10. 'charges' → logprob: -11.405996322631836

Token 547: ' =' (ID: 314)
  Prédit: '_charge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_charge' → logprob: -0.2885914146900177
    2. ' =' → logprob: -1.7885913848876953
    3. '_' → logprob: -2.5385913848876953
    4. '=' → logprob: -5.538591384887695
    5. '_ch' → logprob: -7.913591384887695
    6. ' +=' → logprob: -9.288591384887695
    7. '_amount' → logprob: -10.413591384887695
    8. ' _' → logprob: -10.663591384887695
    9. '_price' → logprob: -11.163591384887695
    10. '_cost' → logprob: -11.538591384887695

Token 548: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01107234600931406
    2. ' ' → logprob: -4.511072158813477
    3. ' sum' → logprob: -11.136072158813477
    4. 'sum' → logprob: -11.761072158813477
    5. 'self' → logprob: -13.761072158813477
    6. ' self' → logprob: -14.011072158813477
    7. '   ' → logprob: -16.011072158813477
    8. '       ' → logprob: -16.136072158813477
    9. '=' → logprob: -17.511072158813477
    10. '100' → logprob: -18.448572158813477

Token 549: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0031825865153223276
    2. 'sum' → logprob: -5.753182411193848
    3. ' sum' → logprob: -12.878182411193848
    4. ' ' → logprob: -13.378182411193848
    5. 'self' → logprob: -14.128182411193848
    6. '   ' → logprob: -18.253183364868164
    7. '
' → logprob: -19.128183364868164
    8. '

' → logprob: -20.253183364868164
    9. '(sum' → logprob: -20.253183364868164
    10. '```' → logprob: -20.253183364868164

Token 550: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.049485642462968826
    2. '
' → logprob: -3.174485683441162
    3. ' for' → logprob: -5.674485683441162
    4. '<|end|>' → logprob: -6.174485683441162
    5. 'for' → logprob: -8.299485206604004
    6. '        
' → logprob: -8.424485206604004
    7. '<|end|>' → logprob: -9.424485206604004
    8. ',' → logprob: -9.799485206604004
    9. '' → logprob: -10.049485206604004
    10. '	' → logprob: -10.049485206604004

Token 551: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030766157433390617
    2. ' for' → logprob: -3.655766248703003
    3. '
' → logprob: -6.155766010284424
    4. 'for' → logprob: -6.655766010284424
    5. '<|end|>' → logprob: -7.780766010284424
    6. '        
' → logprob: -8.030766487121582
    7. '   ' → logprob: -9.405766487121582
    8. ' 
' → logprob: -9.905766487121582
    9. '        ' → logprob: -10.405766487121582
    10. '    
' → logprob: -10.655766487121582

Token 552: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1475488543510437
    2. ' for' → logprob: -2.1475489139556885
    3. '       ' → logprob: -3.8975489139556885
    4. '
' → logprob: -9.14754867553711
    5. '   ' → logprob: -12.14754867553711
    6. '	for' → logprob: -12.64754867553711
    7. '        
' → logprob: -13.39754867553711
    8. '```' → logprob: -14.77254867553711
    9. ' ' → logprob: -15.14754867553711
    10. '           ' → logprob: -15.77254867553711

Token 553: ' Note' (ID: 12225)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007879284210503101
    2. ' for' → logprob: -5.007879257202148
    3. '       ' → logprob: -6.757879257202148
    4. '   ' → logprob: -13.757879257202148
    5. '
' → logprob: -15.632879257202148
    6. '```' → logprob: -15.882879257202148
    7. '	for' → logprob: -16.25787925720215
    8. ' ' → logprob: -17.63287925720215
    9. '        
' → logprob: -17.88287925720215
    10. '           ' → logprob: -18.50787925720215

Token 554: ':' (ID: 25)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.14536824822425842
    2. '       ' → logprob: -2.1453683376312256
    3. 'for' → logprob: -4.1453680992126465
    4. '        ' → logprob: -6.5203680992126465
    5. '    ' → logprob: -7.8953680992126465
    6. ' ' → logprob: -8.270368576049805
    7. '   ' → logprob: -8.270368576049805
    8. ' in' → logprob: -10.770368576049805
    9. '      ' → logprob: -11.395368576049805
    10. '  ' → logprob: -11.395368576049805

Token 555: ' Tier' (ID: 44983)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12784789502620697
    2. 'for' → logprob: -2.127847909927368
    3. '       ' → logprob: -7.002847671508789
    4. '
' → logprob: -12.377847671508789
    5. '   ' → logprob: -13.002847671508789
    6. '	for' → logprob: -13.252847671508789
    7. '        
' → logprob: -14.502847671508789
    8. '```' → logprob: -14.627847671508789
    9. '        ' → logprob: -14.752847671508789
    10. ' ' → logprob: -15.252847671508789

Token 556: '1' (ID: 16)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1986926794052124
    2. ' in' → logprob: -1.4486926794052124
    3. ' for' → logprob: -1.5736926794052124
    4. 's' → logprob: -1.8236926794052124
    5. '1' → logprob: -3.448692798614502
    6. 'in' → logprob: -3.823692798614502
    7. '   ' → logprob: -3.948692798614502
    8. ':' → logprob: -4.573692798614502
    9. ' =' → logprob: -5.698692798614502
    10. '=' → logprob: -6.073692798614502

Token 557: ' returns' (ID: 7377)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5932765007019043
    2. '_charge' → logprob: -1.5932765007019043
    3. ' is' → logprob: -3.0932765007019043
    4. '=' → logprob: -3.0932765007019043
    5. ':' → logprob: -3.4682765007019043
    6. ',' → logprob: -3.7182765007019043
    7. 'charge' → logprob: -4.093276500701904
    8. ' for' → logprob: -4.343276500701904
    9. '_volume' → logprob: -4.343276500701904
    10. ' charge' → logprob: -4.843276500701904

Token 558: ' basic' (ID: 9439)
  Prédit: 'fixed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fixed' → logprob: -1.0166041851043701
    2. 'self' → logprob: -1.6416041851043701
    3. 'basic' → logprob: -2.26660418510437
    4. ' fixed' → logprob: -2.39160418510437
    5. ' basic' → logprob: -2.76660418510437
    6. ' self' → logprob: -2.89160418510437
    7. 'a' → logprob: -3.14160418510437
    8. '115' → logprob: -3.51660418510437
    9. ' a' → logprob: -3.51660418510437
    10. ' the' → logprob: -5.016604423522949

Token 559: ' charge' (ID: 8363)
  Prédit: '_charge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_charge' → logprob: -0.3199436366558075
    2. 'charge' → logprob: -1.8199436664581299
    3. ' charge' → logprob: -2.19494366645813
    4. '       ' → logprob: -9.31994342803955
    5. '   ' → logprob: -9.56994342803955
    6. '_' → logprob: -9.94494342803955
    7. ' if' → logprob: -9.94494342803955
    8. '_fee' → logprob: -10.19494342803955
    9. 'Charge' → logprob: -10.69494342803955
    10. 'if' → logprob: -10.81994342803955

Token 560: ' only' (ID: 1606)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4138098657131195
    2. '       ' → logprob: -1.413809895515442
    3. 'for' → logprob: -2.5388097763061523
    4. '
' → logprob: -4.288809776306152
    5. '        
' → logprob: -6.538809776306152
    6. ',' → logprob: -7.913809776306152
    7. '   ' → logprob: -8.038809776306152
    8. '<|end|>' → logprob: -8.288809776306152
    9. '  
' → logprob: -9.288809776306152
    10. '    
' → logprob: -9.288809776306152

Token 561: ' if' (ID: 538)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20355640351772308
    2. '       ' → logprob: -1.9535564184188843
    3. 'for' → logprob: -3.5785562992095947
    4. '
' → logprob: -4.453556537628174
    5. '        
' → logprob: -6.703556537628174
    6. ',' → logprob: -7.953556537628174
    7. '   ' → logprob: -8.078556060791016
    8. '<|end|>' → logprob: -8.453556060791016
    9. '    
' → logprob: -8.703556060791016
    10. '	for' → logprob: -8.953556060791016

Token 562: ' volume' (ID: 10945)
  Prédit: 'volume'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'volume' → logprob: -0.012529898434877396
    2. ' volume' → logprob: -4.3875298500061035
    3. '   ' → logprob: -12.137530326843262
    4. 'total' → logprob: -12.637530326843262
    5. '       ' → logprob: -12.887530326843262
    6. '(volume' → logprob: -13.012530326843262
    7. '     ' → logprob: -13.637530326843262
    8. '           ' → logprob: -14.137530326843262
    9. 'v' → logprob: -14.262530326843262
    10. 'app' → logprob: -14.512530326843262

Token 563: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.428720086812973
    2. ' >' → logprob: -1.0537201166152954
    3. 'greater' → logprob: -12.428720474243164
    4. ' ' → logprob: -12.678720474243164
    5. '&gt' → logprob: -12.928720474243164
    6. '   ' → logprob: -13.053720474243164
    7. ' greater' → logprob: -13.428720474243164
    8. '<|end|>' → logprob: -13.678720474243164
    9. ' is' → logprob: -13.928720474243164
    10. ' ' → logprob: -14.053720474243164

Token 564: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00861456897109747
    2. ' ' → logprob: -4.758614540100098
    3. '<|end|>' → logprob: -17.258615493774414
    4. '>' → logprob: -17.633615493774414
    5. 'zero' → logprob: -17.883615493774414
    6. ' zero' → logprob: -18.508615493774414
    7. '   ' → logprob: -18.633615493774414
    8. '  ' → logprob: -18.883615493774414
    9. ' ' → logprob: -19.008615493774414
    10. '```' → logprob: -19.508615493774414

Token 565: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007100477814674377
    2. ' ' → logprob: -7.2507100105285645
    3. 'zero' → logprob: -16.500709533691406
    4. ' zero' → logprob: -17.500709533691406
    5. ' ' → logprob: -18.000709533691406
    6. '  ' → logprob: -18.750709533691406
    7. '<|end|>' → logprob: -19.188209533691406
    8. '10' → logprob: -19.313209533691406
    9. '
' → logprob: -19.375709533691406
    10. '.' → logprob: -19.500709533691406

Token 566: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08699682354927063
    2. '
' → logprob: -2.7119967937469482
    3. ' for' → logprob: -4.211997032165527
    4. 'for' → logprob: -7.086997032165527
    5. '        
' → logprob: -7.336997032165527
    6. '<|end|>' → logprob: -7.961997032165527
    7. ',' → logprob: -9.086997032165527
    8. '   ' → logprob: -9.961997032165527
    9. '    
' → logprob: -10.961997032165527
    10. '<|end|>' → logprob: -11.211997032165527

Token 567: ' avoid' (ID: 8397)
  Prédit: ' cover'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cover' → logprob: -1.8700534105300903
    2. 'include' → logprob: -2.245053291320801
    3. ' ensure' → logprob: -2.245053291320801
    4. 'account' → logprob: -2.370053291320801
    5. ' account' → logprob: -2.495053291320801
    6. 'ensure' → logprob: -2.495053291320801
    7. ' include' → logprob: -2.620053291320801
    8. 'handle' → logprob: -3.120053291320801
    9. 'continue' → logprob: -3.120053291320801
    10. 'cover' → logprob: -3.370053291320801

Token 568: ' charging' (ID: 34237)
  Prédit: ' double'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' double' → logprob: -0.6409518718719482
    2. 'double' → logprob: -0.7659518718719482
    3. 'charging' → logprob: -5.890952110290527
    4. ' charging' → logprob: -6.765952110290527
    5. 'count' → logprob: -7.390952110290527
    6. ' multiple' → logprob: -7.515952110290527
    7. 'multiple' → logprob: -7.515952110290527
    8. 'over' → logprob: -7.515952110290527
    9. ' over' → logprob: -7.765952110290527
    10. 'duplicate' → logprob: -8.015952110290527

Token 569: ' if' (ID: 538)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.04601774737238884
    2. 'for' → logprob: -3.296017646789551
    3. '       ' → logprob: -5.546017646789551
    4. ',' → logprob: -7.921017646789551
    5. ' in' → logprob: -7.921017646789551
    6. '
' → logprob: -7.921017646789551
    7. '   ' → logprob: -8.04601764678955
    8. '        
' → logprob: -8.04601764678955
    9. '<|end|>' → logprob: -8.42101764678955
    10. '    
' → logprob: -8.92101764678955

Token 570: ' ' (ID: 220)
  Prédit: ' volume'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' volume' → logprob: -0.7564881443977356
    2. 'volume' → logprob: -0.8814881443977356
    3. '0' → logprob: -2.256488084793091
    4. 'no' → logprob: -5.88148832321167
    5. ' no' → logprob: -5.88148832321167
    6. 'zero' → logprob: -6.00648832321167
    7. ' zero' → logprob: -6.50648832321167
    8. 'total' → logprob: -7.00648832321167
    9. ' ' → logprob: -7.63148832321167
    10. ' total' → logprob: -8.256487846374512

Token 571: '0' (ID: 15)
  Prédit: 'volume'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'volume' → logprob: -0.6393287181854248
    2. ' volume' → logprob: -1.2643287181854248
    3. '0' → logprob: -1.7643287181854248
    4. 'zero' → logprob: -4.889328956604004
    5. 'no' → logprob: -5.389328956604004
    6. ' zero' → logprob: -5.514328956604004
    7. ' no' → logprob: -6.764328956604004
    8. ' ' → logprob: -7.139328956604004
    9. '```' → logprob: -8.514328956604004
    10. '
' → logprob: -8.764328956604004

Token 572: ' usage' (ID: 16622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.77629154920578
    2. ' for' → logprob: -0.90129154920578
    3. '
' → logprob: -2.401291608810425
    4. 'for' → logprob: -4.526291370391846
    5. '<|end|>' → logprob: -4.526291370391846
    6. '        
' → logprob: -4.651291370391846
    7. ',' → logprob: -5.276291370391846
    8. '   ' → logprob: -6.276291370391846
    9. '.' → logprob: -6.651291370391846
    10. '<|end|>' → logprob: -7.151291370391846

Token 573: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017671853303909302
    2. '
' → logprob: -4.142672061920166
    3. ' for' → logprob: -6.892672061920166
    4. '        
' → logprob: -8.142671585083008
    5. '<|end|>' → logprob: -9.017671585083008
    6. 'for' → logprob: -9.142671585083008
    7. ',' → logprob: -10.142671585083008
    8. '   ' → logprob: -10.892671585083008
    9. '<|end|>' → logprob: -12.017671585083008
    10. '  
' → logprob: -12.017671585083008

Token 574: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002231736434623599
    2. 'for' → logprob: -6.502231597900391
    3. ' for' → logprob: -7.377231597900391
    4. '
' → logprob: -9.25223159790039
    5. '   ' → logprob: -12.37723159790039
    6. '        
' → logprob: -12.87723159790039
    7. ',' → logprob: -14.87723159790039
    8. '           ' → logprob: -15.37723159790039
    9. '```' → logprob: -15.75223159790039
    10. '      ' → logprob: -16.00223159790039

Token 575: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1130499541759491
    2. '       ' → logprob: -2.3630499839782715
    3. ' for' → logprob: -4.3630499839782715
    4. '   ' → logprob: -11.738049507141113
    5. '
' → logprob: -11.988049507141113
    6. '	for' → logprob: -12.113049507141113
    7. 'total' → logprob: -14.363049507141113
    8. '```' → logprob: -14.363049507141113
    9. '	' → logprob: -15.113049507141113
    10. '        
' → logprob: -15.238049507141113

Token 576: ' So' (ID: 2632)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15017810463905334
    2. ' for' → logprob: -2.1501781940460205
    3. '       ' → logprob: -3.7751781940460205
    4. '
' → logprob: -10.525177955627441
    5. '   ' → logprob: -11.025177955627441
    6. '```' → logprob: -13.275177955627441
    7. '        
' → logprob: -13.400177955627441
    8. '	for' → logprob: -13.400177955627441
    9. ' ' → logprob: -15.025177955627441
    10. '           ' → logprob: -16.275178909301758

Token 577: ' order' (ID: 2569)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6982086300849915
    2. 'for' → logprob: -0.6982086300849915
    3. '       ' → logprob: -5.323208808898926
    4. '   ' → logprob: -9.573208808898926
    5. 'total' → logprob: -10.573208808898926
    6. '
' → logprob: -10.698208808898926
    7. ' total' → logprob: -11.573208808898926
    8. '        ' → logprob: -11.698208808898926
    9. ' ' → logprob: -11.698208808898926
    10. '        
' → logprob: -11.948208808898926

Token 578: ' matters' (ID: 19854)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7889266610145569
    2. ' for' → logprob: -1.663926601409912
    3. '       ' → logprob: -2.038926601409912
    4. ' in' → logprob: -2.038926601409912
    5. 'in' → logprob: -3.288926601409912
    6. ' =' → logprob: -3.538926601409912
    7. '   ' → logprob: -5.413926601409912
    8. '=' → logprob: -5.413926601409912
    9. ' is' → logprob: -5.663926601409912
    10. ':' → logprob: -5.788926601409912

Token 579: ' as' (ID: 472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21813152730464935
    2. ' for' → logprob: -2.2181315422058105
    3. '
' → logprob: -2.5931315422058105
    4. 'for' → logprob: -4.5931315422058105
    5. '        
' → logprob: -6.5931315422058105
    6. '   ' → logprob: -8.218131065368652
    7. '  
' → logprob: -9.093131065368652
    8. '    
' → logprob: -9.218131065368652
    9. '	for' → logprob: -9.343131065368652
    10. ' 
' → logprob: -9.593131065368652

Token 580: ' Tier' (ID: 44983)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7063165307044983
    2. 'for' → logprob: -0.7063165307044983
    3. '       ' → logprob: -5.0813164710998535
    4. ' follows' → logprob: -5.4563164710998535
    5. ' it' → logprob: -7.8313164710998535
    6. 'f' → logprob: -7.9563164710998535
    7. ' is' → logprob: -8.081316947937012
    8. 'total' → logprob: -8.331316947937012
    9. ' total' → logprob: -8.706316947937012
    10. 'is' → logprob: -8.706316947937012

Token 581: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0037956847809255123
    2. '       ' → logprob: -6.503795623779297
    3. '   ' → logprob: -6.878795623779297
    4. 's' → logprob: -7.503795623779297
    5. ' for' → logprob: -8.628795623779297
    6. 'for' → logprob: -8.628795623779297
    7. '4' → logprob: -8.753795623779297
    8. ' ' → logprob: -9.378795623779297
    9. 'self' → logprob: -10.628795623779297
    10. ' t' → logprob: -11.378795623779297

Token 582: ' fixed' (ID: 13213)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6979714035987854
    2. ' for' → logprob: -1.6979713439941406
    3. '       ' → logprob: -2.9479713439941406
    4. ' is' → logprob: -3.1979713439941406
    5. ' in' → logprob: -3.3229713439941406
    6. '   ' → logprob: -3.6979713439941406
    7. 'charges' → logprob: -3.6979713439941406
    8. ':' → logprob: -3.8229713439941406
    9. ' charges' → logprob: -4.322971343994141
    10. 'charge' → logprob: -4.697971343994141

Token 583: ' charge' (ID: 8363)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.19243817031383514
    2. 'for' → logprob: -2.1924381256103516
    3. '       ' → logprob: -2.8174381256103516
    4. '   ' → logprob: -6.567438125610352
    5. '        
' → logprob: -6.817438125610352
    6. '
' → logprob: -8.442438125610352
    7. ':' → logprob: -8.567438125610352
    8. ',' → logprob: -8.942438125610352
    9. '    
' → logprob: -9.692438125610352
    10. ' ' → logprob: -9.817438125610352

Token 584: ' is' (ID: 382)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23944096267223358
    2. ' for' → logprob: -1.73944091796875
    3. 'for' → logprob: -3.36444091796875
    4. '
' → logprob: -6.23944091796875
    5. ',' → logprob: -8.23944091796875
    6. '        
' → logprob: -8.86444091796875
    7. '<|end|>' → logprob: -8.86444091796875
    8. ':' → logprob: -9.98944091796875
    9. '   ' → logprob: -10.36444091796875
    10. ' in' → logprob: -10.36444091796875

Token 585: ' always' (ID: 3324)
  Prédit: 'always'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'always' → logprob: -1.1017805337905884
    2. 'ap' → logprob: -1.6017805337905884
    3. 'first' → logprob: -1.6017805337905884
    4. ' always' → logprob: -2.101780414581299
    5. 'included' → logprob: -3.476780414581299
    6. 'added' → logprob: -3.601780414581299
    7. ' first' → logprob: -4.101780414581299
    8. ' applied' → logprob: -4.476780414581299
    9. 'handled' → logprob: -4.476780414581299
    10. 'for' → logprob: -4.726780414581299

Token 586: ' there' (ID: 1354)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.6450982689857483
    2. 'ap' → logprob: -1.5200982093811035
    3. 'added' → logprob: -1.6450982093811035
    4. ' first' → logprob: -4.0200982093811035
    5. 'included' → logprob: -4.3950982093811035
    6. 'charged' → logprob: -4.5200982093811035
    7. 'for' → logprob: -4.8950982093811035
    8. ' applied' → logprob: -5.6450982093811035
    9. 'if' → logprob: -6.1450982093811035
    10. ' added' → logprob: -6.2700982093811035

Token 587: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2714815139770508
    2. ' for' → logprob: -1.6464815139770508
    3. 'for' → logprob: -3.271481513977051
    4. '
' → logprob: -5.271481513977051
    5. ',' → logprob: -7.396481513977051
    6. '   ' → logprob: -7.771481513977051
    7. '        
' → logprob: -7.896481513977051
    8. '<|end|>' → logprob: -9.14648151397705
    9. '	for' → logprob: -9.39648151397705
    10. '    
' → logprob: -9.64648151397705

Token 588: ' usage' (ID: 16622)
  Prédit: ' volume'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' volume' → logprob: -0.31348252296447754
    2. 'volume' → logprob: -1.3134825229644775
    3. '>' → logprob: -8.688482284545898
    4. ' ' → logprob: -11.438482284545898
    5. '   ' → logprob: -11.813482284545898
    6. '```' → logprob: -12.063482284545898
    7. ' >' → logprob: -12.313482284545898
    8. ' ' → logprob: -12.313482284545898
    9. '(volume' → logprob: -12.563482284545898
    10. '  ' → logprob: -13.063482284545898

Token 589: ' positive' (ID: 8841)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1937735676765442
    2. ' for' → logprob: -1.8187735080718994
    3. 'for' → logprob: -4.9437737464904785
    4. ',' → logprob: -5.8187737464904785
    5. '.' → logprob: -6.6937737464904785
    6. ' except' → logprob: -7.3187737464904785
    7. ':' → logprob: -7.8187737464904785
    8. '<|end|>' → logprob: -8.06877326965332
    9. ' in' → logprob: -8.19377326965332
    10. 'except' → logprob: -9.06877326965332

Token 590: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2456434816122055
    2. '
' → logprob: -1.6206434965133667
    3. ' for' → logprob: -4.245643615722656
    4. 'for' → logprob: -5.370643615722656
    5. '        
' → logprob: -7.995643615722656
    6. '<|end|>' → logprob: -8.120643615722656
    7. '   ' → logprob: -9.120643615722656
    8. ',' → logprob: -9.370643615722656
    9. '<|end|>' → logprob: -10.120643615722656
    10. '
' → logprob: -10.745643615722656

Token 591: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005276449490338564
    2. ' for' → logprob: -5.505276679992676
    3. 'for' → logprob: -6.755276679992676
    4. '
' → logprob: -11.380276679992676
    5. '   ' → logprob: -11.505276679992676
    6. '        
' → logprob: -12.880276679992676
    7. '	' → logprob: -13.505276679992676
    8. '```' → logprob: -13.505276679992676
    9. ',' → logprob: -13.880276679992676
    10. '           ' → logprob: -14.005276679992676

Token 592: ' total' (ID: 3609)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42450591921806335
    2. 'for' → logprob: -1.1745059490203857
    3. ' for' → logprob: -3.2995059490203857
    4. '   ' → logprob: -10.674506187438965
    5. '
' → logprob: -12.424506187438965
    6. '	for' → logprob: -12.674506187438965
    7. '```' → logprob: -13.424506187438965
    8. '        
' → logprob: -14.299506187438965
    9. ' ' → logprob: -14.674506187438965
    10. '      ' → logprob: -15.049506187438965

Token 593: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.14606685936450958
    2. '+=' → logprob: -2.146066904067993
    3. '=' → logprob: -4.021066665649414
    4. ' =' → logprob: -6.896066665649414
    5. '+' → logprob: -12.146066665649414
    6. ' ' → logprob: -12.521066665649414
    7. ']+=' → logprob: -14.646066665649414
    8. '+=(' → logprob: -14.646066665649414
    9. 'for' → logprob: -15.021066665649414
    10. '   ' → logprob: -15.646066665649414

Token 594: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.000885134213604033
    2. ' self' → logprob: -7.125885009765625
    3. 'sum' → logprob: -10.375885009765625
    4. '(self' → logprob: -11.375885009765625
    5. 'max' → logprob: -11.500885009765625
    6. '0' → logprob: -11.625885009765625
    7. 'Tier' → logprob: -11.625885009765625
    8. 'next' → logprob: -12.375885009765625
    9. '1' → logprob: -13.000885009765625
    10. '[self' → logprob: -14.750885009765625

Token 595: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -0.00023226479243021458
    2. 't' → logprob: -8.500232696533203
    3. '.' → logprob: -11.000232696533203
    4. ' .' → logprob: -12.625232696533203
    5. 'tiers' → logprob: -13.125232696533203
    6. '	t' → logprob: -13.500232696533203
    7. '
' → logprob: -14.750232696533203
    8. '.T' → logprob: -15.125232696533203
    9. '._' → logprob: -15.125232696533203
    10. 'ayers' → logprob: -15.250232696533203

Token 596: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0001696902181720361
    2. 'ier' → logprob: -9.00016975402832
    3. 'otal' → logprob: -10.25016975402832
    4. 'tiers' → logprob: -13.12516975402832
    5. 'ot' → logprob: -13.37516975402832
    6. 'ers' → logprob: -13.75016975402832
    7. '1' → logprob: -14.00016975402832
    8. 'i' → logprob: -14.12516975402832
    9. '\' → logprob: -14.50016975402832
    10. '```' → logprob: -14.50016975402832

Token 597: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. '0' → logprob: -16.0
    3. ' [' → logprob: -16.375
    4. '[
' → logprob: -16.5
    5. '\[' → logprob: -17.0
    6. '
' → logprob: -17.75
    7. '```' → logprob: -18.125
    8. 's' → logprob: -18.5
    9. '[-' → logprob: -19.0
    10. '()[' → logprob: -19.125

Token 598: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '
' → logprob: -17.125001907348633
    4. '   ' → logprob: -17.562501907348633
    5. '1' → logprob: -17.875001907348633
    6. '۰' → logprob: -18.000001907348633
    7. '０' → logprob: -18.187501907348633
    8. '٠' → logprob: -19.187501907348633
    9. '[' → logprob: -19.375001907348633
    10. '

' → logprob: -19.500001907348633

Token 599: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.00020270596724003553
    2. '.' → logprob: -9.000203132629395
    3. ').' → logprob: -10.125203132629395
    4. ']' → logprob: -10.375203132629395
    5. '}.' → logprob: -12.625203132629395
    6. ' ].' → logprob: -12.875203132629395
    7. ''].' → logprob: -15.000203132629395
    8. ']).' → logprob: -15.250203132629395
    9. '"].' → logprob: -15.500203132629395
    10. '   ' → logprob: -15.500203132629395

Token 600: 'charge' (ID: 16623)
  Prédit: 'charge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'charge' → logprob: 0.0
    2. 'app' → logprob: -17.5
    3. ' charge' → logprob: -17.875
    4. 'charged' → logprob: -21.625
    5. '_charge' → logprob: -21.625
    6. '`' → logprob: -22.0
    7. 'charg' → logprob: -23.125
    8. 'Charge' → logprob: -23.125
    9. 'charges' → logprob: -23.375
    10. '   ' → logprob: -23.875

Token 601: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: 0.0
    2. '_' → logprob: -17.5
    3. 'for' → logprob: -20.125
    4. ' _' → logprob: -20.375
    5. '_For' → logprob: -20.375
    6. ')_' → logprob: -20.625
    7. '(_' → logprob: -20.625
    8. '_FOR' → logprob: -20.875
    9. '```' → logprob: -20.875
    10. 'For' → logprob: -21.0

Token 602: '(volume' (ID: 162071)
  Prédit: '(volume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(volume' → logprob: -0.0007200572872534394
    2. '(' → logprob: -7.250720024108887
    3. ' (' → logprob: -11.750720024108887
    4. '(vol' → logprob: -13.750720024108887
    5. '(
' → logprob: -14.000720024108887
    6. 'volume' → logprob: -15.625720024108887
    7. ' volume' → logprob: -16.750720977783203
    8. '(amount' → logprob: -17.250720977783203
    9. '(quantity' → logprob: -17.750720977783203
    10. '(

' → logprob: -18.000720977783203

Token 603: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.843177233240567e-05
    2. ' )' → logprob: -11.250018119812012
    3. ')
' → logprob: -12.250018119812012
    4. '       ' → logprob: -15.250018119812012
    5. '   ' → logprob: -16.375019073486328
    6. '))' → logprob: -16.625019073486328
    7. '),' → logprob: -17.000019073486328
    8. ')+' → logprob: -17.125019073486328
    9. ')}' → logprob: -17.250019073486328
    10. ']' → logprob: -18.000019073486328

Token 604: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16245199739933014
    2. '       ' → logprob: -2.287451982498169
    3. 'for' → logprob: -3.662451982498169
    4. ' for' → logprob: -3.912451982498169
    5. '<|end|>' → logprob: -7.287452220916748
    6. '   ' → logprob: -7.412452220916748
    7. '        
' → logprob: -7.537452220916748
    8. '```' → logprob: -7.787452220916748
    9. '  
' → logprob: -9.03745174407959
    10. '    
' → logprob: -9.41245174407959

Token 605: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.013697277754545212
    2. '       ' → logprob: -4.513697147369385
    3. ' for' → logprob: -6.013697147369385
    4. '
' → logprob: -8.888697624206543
    5. '   ' → logprob: -10.263697624206543
    6. 'total' → logprob: -11.138697624206543
    7. '	for' → logprob: -11.513697624206543
    8. '```' → logprob: -13.513697624206543
    9. '        
' → logprob: -14.263697624206543
    10. '[' → logprob: -15.263697624206543

Token 606: ' tier' (ID: 42072)
  Prédit: 'tier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tier' → logprob: -0.20652051270008087
    2. ' tier' → logprob: -1.7065205574035645
    3. 'i' → logprob: -5.7065205574035645
    4. ' i' → logprob: -6.4565205574035645
    5. '   ' → logprob: -9.081520080566406
    6. ' ' → logprob: -10.581520080566406
    7. 't' → logprob: -10.956520080566406
    8. 'ti' → logprob: -11.206520080566406
    9. '  ' → logprob: -11.831520080566406
    10. '       ' → logprob: -12.706520080566406

Token 607: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.062419235706329346
    2. 'in' → logprob: -2.8124191761016846
    3. '[' → logprob: -8.562418937683105
    4. ' ' → logprob: -9.937418937683105
    5. '_idx' → logprob: -10.187418937683105
    6. '   ' → logprob: -10.312418937683105
    7. 'i' → logprob: -10.562418937683105
    8. ' i' → logprob: -10.687418937683105
    9. '_index' → logprob: -10.812418937683105
    10. '_' → logprob: -11.312418937683105

Token 608: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04859066382050514
    2. ' self' → logprob: -3.048590660095215
    3. '	self' → logprob: -13.298590660095215
    4. '(self' → logprob: -14.173590660095215
    5. '       ' → logprob: -14.298590660095215
    6. '[self' → logprob: -16.04859161376953
    7. '   ' → logprob: -16.17359161376953
    8. 'elf' → logprob: -16.79859161376953
    9. ' ' → logprob: -17.42359161376953
    10. '=self' → logprob: -17.79859161376953

Token 609: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -0.0002993544621858746
    2. '.' → logprob: -8.250299453735352
    3. ' .' → logprob: -10.250299453735352
    4. 's' → logprob: -13.250299453735352
    5. '.s' → logprob: -15.250299453735352
    6. '	t' → logprob: -15.500299453735352
    7. '[' → logprob: -16.00029945373535
    8. 'self' → logprob: -16.87529945373535
    9. ' ' → logprob: -17.00029945373535
    10. '._' → logprob: -17.75029945373535

Token 610: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.00036502102739177644
    2. '[' → logprob: -8.125365257263184
    3. 'ers' → logprob: -11.000365257263184
    4. 'ier' → logprob: -11.000365257263184
    5. 'self' → logprob: -11.250365257263184
    6. 's' → logprob: -11.500365257263184
    7. 'irs' → logprob: -12.875365257263184
    8. '```' → logprob: -13.000365257263184
    9. 'tiers' → logprob: -13.375365257263184
    10. '       ' → logprob: -13.500365257263184

Token 611: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0564331205387134e-05
    2. '1' → logprob: -11.50001049041748
    3. '[
' → logprob: -15.75001049041748
    4. ' [' → logprob: -16.375011444091797
    5. 's' → logprob: -16.875011444091797
    6. '()[' → logprob: -17.375011444091797
    7. '   ' → logprob: -17.500011444091797
    8. '2' → logprob: -17.750011444091797
    9. 'from' → logprob: -18.375011444091797
    10. '(' → logprob: -19.125011444091797

Token 612: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -15.625000953674316
    4. '
' → logprob: -15.750000953674316
    5. 'range' → logprob: -17.750001907348633
    6. 'from' → logprob: -18.000001907348633
    7. '```' → logprob: -18.125001907348633
    8. '       ' → logprob: -18.625001907348633
    9. '[' → logprob: -18.625001907348633
    10. '

' → logprob: -19.375001907348633

Token 613: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3585760295391083
    2. '[' → logprob: -1.2335760593414307
    3. '1' → logprob: -4.608575820922852
    4. ' :' → logprob: -9.983575820922852
    5. ']:' → logprob: -10.858575820922852
    6. '2' → logprob: -11.358575820922852
    7. ':]' → logprob: -11.483575820922852
    8. '(' → logprob: -11.483575820922852
    9. '():' → logprob: -12.108575820922852
    10. '   ' → logprob: -12.733575820922852

Token 614: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.4380856156349182
    2. ']:' → logprob: -1.0630855560302734
    3. ':' → logprob: -5.688085556030273
    4. '   ' → logprob: -5.938085556030273
    5. '       ' → logprob: -6.688085556030273
    6. ']:
' → logprob: -7.313085556030273
    7. ' ]' → logprob: -7.938085556030273
    8. ']' → logprob: -8.063085556030273
    9. ':
' → logprob: -8.188085556030273
    10. '():
' → logprob: -8.313085556030273

Token 615: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08202429860830307
    2. 'total' → logprob: -3.207024335861206
    3. '   ' → logprob: -4.207024097442627
    4. ' total' → logprob: -4.457024097442627
    5. '       ' → logprob: -5.457024097442627
    6. '
' → logprob: -5.957024097442627
    7. '(total' → logprob: -6.707024097442627
    8. '<|end|>' → logprob: -6.957024097442627
    9. '            
' → logprob: -7.207024097442627
    10. '    
' → logprob: -7.832024097442627

Token 616: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.0523364320397377
    2. ' total' → logprob: -3.0523364543914795
    3. '       ' → logprob: -6.0523362159729
    4. '           ' → logprob: -6.8023362159729
    5. '   ' → logprob: -8.302336692810059
    6. '
' → logprob: -11.052336692810059
    7. '	total' → logprob: -11.552336692810059
    8. ' ' → logprob: -13.677336692810059
    9. '(total' → logprob: -14.427336692810059
    10. ',total' → logprob: -14.552336692810059

Token 617: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.38692158460617065
    2. ' +=' → logprob: -1.1369216442108154
    3. '   ' → logprob: -10.386921882629395
    4. '+' → logprob: -11.886921882629395
    5. '    ' → logprob: -12.761921882629395
    6. ']+=' → logprob: -12.886921882629395
    7. '	' → logprob: -13.011921882629395
    8. '+=(' → logprob: -13.261921882629395
    9. '       ' → logprob: -13.886921882629395
    10. '=' → logprob: -14.011921882629395

Token 618: ' tier' (ID: 42072)
  Prédit: 'tier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tier' → logprob: -0.4740861654281616
    2. ' tier' → logprob: -0.9740861654281616
    3. '   ' → logprob: -12.599085807800293
    4. 't' → logprob: -13.474085807800293
    5. ' ' → logprob: -13.724085807800293
    6. '-tier' → logprob: -14.099085807800293
    7. '	t' → logprob: -14.474085807800293
    8. '```' → logprob: -15.349085807800293
    9. '(t' → logprob: -15.474085807800293
    10. '  ' → logprob: -15.724085807800293

Token 619: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -5.319370302458992e-06
    2. ' .' → logprob: -12.375005722045898
    3. 'charge' → logprob: -15.000005722045898
    4. '.char' → logprob: -15.000005722045898
    5. '​.' → logprob: -17.0000057220459
    6. '.ch' → logprob: -17.2500057220459
    7. '.credit' → logprob: -17.2500057220459
    8. '.claim' → logprob: -17.2500057220459
    9. '   ' → logprob: -17.6250057220459
    10. '.calculate' → logprob: -18.0000057220459

Token 620: 'charge' (ID: 16623)
  Prédit: 'charge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'charge' → logprob: 0.0
    2. ' charge' → logprob: -17.0
    3. '_charge' → logprob: -20.5
    4. 'charged' → logprob: -22.75
    5. 'Charge' → logprob: -23.75
    6. '   ' → logprob: -23.875
    7. 'charg' → logprob: -24.375
    8. 'charges' → logprob: -25.0
    9. 'charger' → logprob: -25.25
    10. '```' → logprob: -25.375

Token 621: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -3.128163257315464e-07
    2. ' _' → logprob: -16.875
    3. 'for' → logprob: -16.875
    4. '_' → logprob: -17.25
    5. ')_' → logprob: -18.625
    6. '_FOR' → logprob: -18.625
    7. '   ' → logprob: -18.75
    8. '_f' → logprob: -18.75
    9. 'For' → logprob: -19.125
    10. '```' → logprob: -19.25

Token 622: '(volume' (ID: 162071)
  Prédit: '(volume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(volume' → logprob: -0.003229994559660554
    2. '(' → logprob: -5.753230094909668
    3. ' (' → logprob: -10.003230094909668
    4. '(
' → logprob: -12.878230094909668
    5. 'volume' → logprob: -13.128230094909668
    6. '(vol' → logprob: -13.628230094909668
    7. ' volume' → logprob: -14.003230094909668
    8. '(quantity' → logprob: -16.25322914123535
    9. '```' → logprob: -16.50322914123535
    10. '(value' → logprob: -16.50322914123535

Token 623: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00861729308962822
    2. ')
' → logprob: -4.758617401123047
    3. '       ' → logprob: -13.133617401123047
    4. ')

' → logprob: -15.133617401123047
    5. ' )' → logprob: -15.383617401123047
    6. ')
' → logprob: -15.633617401123047
    7. ')return' → logprob: -16.258617401123047
    8. '   ' → logprob: -16.758617401123047
    9. ')`' → logprob: -18.008617401123047
    10. '))' → logprob: -18.883617401123047

Token 624: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03161811828613281
    2. '
' → logprob: -3.656618118286133
    3. 'return' → logprob: -5.406618118286133
    4. ' return' → logprob: -7.281618118286133
    5. '   ' → logprob: -10.156618118286133
    6. '        
' → logprob: -10.406618118286133
    7. '
' → logprob: -11.156618118286133
    8. '```' → logprob: -11.406618118286133
    9. '<|end|>' → logprob: -12.406618118286133
    10. '    
' → logprob: -12.406618118286133

Token 625: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5942925810813904
    2. '
' → logprob: -1.3442926406860352
    3. 'return' (adapté à ' return') → logprob: -1.8442926406860352
    4. ' return' → logprob: -3.594292640686035
    5. '   ' → logprob: -6.844292640686035
    6. '        
' → logprob: -8.094292640686035
    7. '	return' → logprob: -8.844292640686035
    8. '    
' → logprob: -10.094292640686035
    9. '
' → logprob: -10.219292640686035
    10. '  
' → logprob: -10.594292640686035

Token 626: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.3868713676929474
    2. ' total' → logprob: -1.136871337890625
    3. '	total' → logprob: -15.761871337890625
    4. '   ' → logprob: -16.386871337890625
    5. '(total' → logprob: -16.636871337890625
    6. 'int' → logprob: -17.511871337890625
    7. '0' → logprob: -17.511871337890625
    8. '_total' → logprob: -18.011871337890625
    9. ' ' → logprob: -18.261871337890625
    10. '
' → logprob: -18.261871337890625

Token 627: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 628: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5556773543357849
    2. '<|end|>' → logprob: -1.4306774139404297
    3. 'class' → logprob: -2.1806774139404297
    4. '   ' → logprob: -2.6806774139404297
    5. '
' → logprob: -6.30567741394043
    6. '<|end|>' → logprob: -6.68067741394043
    7. ' ' → logprob: -7.30567741394043
    8. '```' → logprob: -7.43067741394043
    9. '#' → logprob: -7.55567741394043
    10. ' def' → logprob: -8.55567741394043

Token 629: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.004218009300529957
    2. '   ' → logprob: -5.504218101501465
    3. ' def' → logprob: -9.004218101501465
    4. 'class' → logprob: -12.254218101501465
    5. '
' → logprob: -12.629218101501465
    6. '	def' → logprob: -12.754218101501465
    7. '<|end|>' → logprob: -13.004218101501465
    8. '```' → logprob: -13.379218101501465
    9. ' ' → logprob: -14.004218101501465
    10. '#' → logprob: -15.254218101501465

Token 630: ' calculate' (ID: 17950)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -0.8023383021354675
    2. 'apply' → logprob: -1.9273383617401123
    3. 'compare' → logprob: -2.0523383617401123
    4. 'get' → logprob: -2.9273383617401123
    5. 'adjust' → logprob: -2.9273383617401123
    6. 'last' → logprob: -3.6773383617401123
    7. 'update' → logprob: -3.8023383617401123
    8. 'predict' → logprob: -4.302338123321533
    9. 'is' → logprob: -4.427338123321533
    10. 'estimate' → logprob: -4.427338123321533

Token 631: '_s' (ID: 1278)
  Prédit: '_last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_last' → logprob: -1.0543731451034546
    2. '_difference' → logprob: -1.1793731451034546
    3. '_in' → logprob: -2.429373264312744
    4. '_change' → logprob: -3.054373264312744
    5. '_discount' → logprob: -3.054373264312744
    6. '_diff' → logprob: -3.679373264312744
    7. '_previous' → logprob: -4.054373264312744
    8. '_after' → logprob: -4.054373264312744
    9. '_average' → logprob: -4.429373264312744
    10. '_next' → logprob: -4.554373264312744

Token 632: 'avings' (ID: 55868)
  Prédit: 'ub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ub' → logprob: -1.500370979309082
    2. 'urcharge' → logprob: -1.875370979309082
    3. 'ame' → logprob: -2.000370979309082
    4. 'ince' → logprob: -3.000370979309082
    5. 'ur' → logprob: -3.125370979309082
    6. 't' → logprob: -3.125370979309082
    7. 'tage' → logprob: -3.250370979309082
    8. 'e' → logprob: -3.250370979309082
    9. 'ubs' → logprob: -3.750370979309082
    10. 'tep' → logprob: -3.875370979309082

Token 633: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.000264315924141556
    2. '(' → logprob: -8.250264167785645
    3. ' (' → logprob: -14.000264167785645
    4. 'self' → logprob: -14.125264167785645
    5. '_(' → logprob: -14.750264167785645
    6. '_for' → logprob: -14.750264167785645
    7. '   ' → logprob: -15.750264167785645
    8. '(
' → logprob: -15.875264167785645
    9. '_' → logprob: -16.50026512145996
    10. '(volume' → logprob: -16.50026512145996

Token 634: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012809454929083586
    2. 'self' → logprob: -6.751280784606934
    3. ' ,' → logprob: -9.751280784606934
    4. '(self' → logprob: -10.876280784606934
    5. ',self' → logprob: -11.001280784606934
    6. '   ' → logprob: -11.626280784606934
    7. '       ' → logprob: -12.376280784606934
    8. ',
' → logprob: -13.626280784606934
    9. '_,' → logprob: -14.126280784606934
    10. '_volume' → logprob: -15.126280784606934

Token 635: ' volume' (ID: 10945)
  Prédit: 'volume'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'volume' → logprob: -0.5675081014633179
    2. ' volume' → logprob: -1.0675081014633179
    3. 'current' → logprob: -3.1925082206726074
    4. ' current' → logprob: -3.4425082206726074
    5. 'previous' → logprob: -5.692508220672607
    6. 'self' → logprob: -6.067508220672607
    7. 'new' → logprob: -6.067508220672607
    8. ' new' → logprob: -6.317508220672607
    9. 'last' → logprob: -6.817508220672607
    10. ' previous' → logprob: -7.317508220672607

Token 636: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001625379954930395
    2. ',' → logprob: -8.750162124633789
    3. '):' → logprob: -13.625162124633789
    4. '   ' → logprob: -13.750162124633789
    5. ' :' → logprob: -14.250162124633789
    6. ':int' → logprob: -14.375162124633789
    7. ')' → logprob: -15.125162124633789
    8. '):
' → logprob: -16.37516212463379
    9. ' ,' → logprob: -16.50016212463379
    10. 'self' → logprob: -17.12516212463379

Token 637: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.038083501160144806
    2. 'int' → logprob: -3.288083553314209
    3. ')' → logprob: -10.66308307647705
    4. ':int' → logprob: -11.41308307647705
    5. '(int' → logprob: -13.16308307647705
    6. '[int' → logprob: -13.28808307647705
    7. ',' → logprob: -13.53808307647705
    8. '=int' → logprob: -14.41308307647705
    9. ' )' → logprob: -14.53808307647705
    10. ',int' → logprob: -14.53808307647705

Token 638: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001354402513243258
    2. ',' → logprob: -6.626354217529297
    3. '   ' → logprob: -11.251354217529297
    4. ':' → logprob: -11.876354217529297
    5. ' )' → logprob: -12.251354217529297
    6. '):' → logprob: -12.876354217529297
    7. ',)' → logprob: -14.501354217529297
    8. ' ' → logprob: -15.626354217529297
    9. '       ' → logprob: -16.126354217529297
    10. ')->' → logprob: -16.626354217529297

Token 639: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9087437391281128
    2. ')' → logprob: -1.1587437391281128
    3. '       ' → logprob: -2.6587438583374023
    4. '(self' → logprob: -2.7837438583374023
    5. '   ' → logprob: -3.0337438583374023
    6. '->' → logprob: -3.2837438583374023
    7. ')->' → logprob: -3.5337438583374023
    8. ' ->' → logprob: -3.7837438583374023
    9. '(' → logprob: -5.658743858337402
    10. ',' → logprob: -5.658743858337402

Token 640: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.2014193832874298
    2. 'int' → logprob: -1.7014193534851074
    3. '(int' → logprob: -12.576419830322266
    4. '	int' → logprob: -14.076419830322266
    5. '[int' → logprob: -14.326419830322266
    6. ' ' → logprob: -15.076419830322266
    7. ':int' → logprob: -15.326419830322266
    8. '=int' → logprob: -15.451419830322266
    9. 'Optional' → logprob: -15.576419830322266
    10. ' Optional' → logprob: -15.701419830322266

Token 641: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.734682023525238
    2. ':' → logprob: -0.984682023525238
    3. '(self' → logprob: -2.359682083129883
    4. '   ' → logprob: -3.359682083129883
    5. '(' → logprob: -4.984682083129883
    6. ':
' → logprob: -5.109682083129883
    7. ')' → logprob: -6.609682083129883
    8. ',' → logprob: -7.484682083129883
    9. 'self' → logprob: -7.609682083129883
    10. '):' → logprob: -7.734682083129883

Token 642: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032671953085809946
    2. '   ' → logprob: -6.503267288208008
    3. ' savings' → logprob: -7.378267288208008
    4. '```' → logprob: -8.378267288208008
    5. '
' → logprob: -8.628267288208008
    6. '    ' → logprob: -8.628267288208008
    7. ' return' → logprob: -9.378267288208008
    8. '	' → logprob: -9.878267288208008
    9. '        
' → logprob: -9.878267288208008
    10. ' if' → logprob: -10.128267288208008

Token 643: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.48854976892471313
    2. 'return' → logprob: -1.4885497093200684
    3. '       ' → logprob: -2.6135497093200684
    4. ' current' → logprob: -3.4885497093200684
    5. 'charge' → logprob: -3.6135497093200684
    6. 'new' → logprob: -4.238549709320068
    7. ' return' → logprob: -4.738549709320068
    8. 'total' → logprob: -5.613549709320068
    9. ' new' → logprob: -6.738549709320068
    10. ' charge' → logprob: -7.988549709320068

Token 644: '_charge' (ID: 110838)
  Prédit: '_charge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_charge' → logprob: -0.004147730302065611
    2. 'charge' → logprob: -6.504147529602051
    3. '_total' → logprob: -6.879147529602051
    4. '_cost' → logprob: -7.129147529602051
    5. ' =' → logprob: -8.12914752960205
    6. '=' → logprob: -8.50414752960205
    7. '_usage' → logprob: -9.12914752960205
    8. '_bill' → logprob: -9.25414752960205
    9. '_fee' → logprob: -10.25414752960205
    10. '_' → logprob: -11.00414752960205

Token 645: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20143301784992218
    2. '=' → logprob: -1.7014330625534058
    3. '=self' → logprob: -11.326433181762695
    4. 'self' → logprob: -12.826433181762695
    5. '(self' → logprob: -13.201433181762695
    6. '       ' → logprob: -13.951433181762695
    7. ' self' → logprob: -14.326433181762695
    8. ' ' → logprob: -15.201433181762695
    9. '   ' → logprob: -15.451433181762695
    10. ':' → logprob: -15.701433181762695

Token 646: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5759521722793579
    2. ' self' → logprob: -0.8259521722793579
    3. '       ' → logprob: -11.325952529907227
    4. '	self' → logprob: -15.200952529907227
    5. '(self' → logprob: -15.450952529907227
    6. ' ' → logprob: -16.825952529907227
    7. '=self' → logprob: -16.950952529907227
    8. ' ' → logprob: -17.200952529907227
    9. '[self' → logprob: -17.450952529907227
    10. '           ' → logprob: -17.825952529907227

Token 647: '.calculate' (ID: 67851)
  Prédit: '.calculate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.calculate' → logprob: -0.00026407750556245446
    2. '.' → logprob: -8.375264167785645
    3. 'calculate' → logprob: -10.375264167785645
    4. ' .' → logprob: -13.125264167785645
    5. '   ' → logprob: -16.375263214111328
    6. '.compute' → logprob: -17.250263214111328
    7. '.Calculate' → logprob: -17.250263214111328
    8. ' calculate' → logprob: -17.375263214111328
    9. '.calc' → logprob: -17.500263214111328
    10. 'alculate' → logprob: -17.750263214111328

Token 648: '(volume' (ID: 162071)
  Prédit: '(volume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(volume' → logprob: -1.7432603272027336e-06
    2. '(vol' → logprob: -13.625001907348633
    3. '(' → logprob: -14.750001907348633
    4. '(amount' → logprob: -17.875001907348633
    5. 'volume' → logprob: -18.000001907348633
    6. ' (' → logprob: -18.250001907348633
    7. '(quantity' → logprob: -18.875001907348633
    8. '(
' → logprob: -19.375001907348633
    9. '(value' → logprob: -19.375001907348633
    10. '(version' → logprob: -19.625001907348633

Token 649: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2015834003686905
    2. ')' → logprob: -1.7015833854675293
    3. '       ' → logprob: -8.701583862304688
    4. ')
' → logprob: -13.201583862304688
    5. ')

' → logprob: -13.826583862304688
    6. ' )
' → logprob: -14.951583862304688
    7. '   ' → logprob: -15.451583862304688
    8. '
' → logprob: -15.701583862304688
    9. '```' → logprob: -16.451583862304688
    10. ' )' → logprob: -17.576583862304688

Token 650: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06960257887840271
    2. 'return' → logprob: -2.9446024894714355
    3. ' return' → logprob: -4.3196024894714355
    4. '
' → logprob: -6.6946024894714355
    5. '	' → logprob: -10.819602966308594
    6. '   ' → logprob: -10.944602966308594
    7. '	return' → logprob: -11.819602966308594
    8. '        
' → logprob: -11.944602966308594
    9. '```' → logprob: -11.944602966308594
    10. 'if' → logprob: -12.944602966308594

Token 651: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0017137357499450445
    2. '       ' → logprob: -6.626713752746582
    3. 's' → logprob: -8.251713752746582
    4. 'if' → logprob: -9.251713752746582
    5. ' return' → logprob: -10.626713752746582
    6. 'saving' → logprob: -12.501713752746582
    7. 'difference' → logprob: -13.876713752746582
    8. 'save' → logprob: -14.251713752746582
    9. '#' → logprob: -15.001713752746582
    10. '   ' → logprob: -15.501713752746582

Token 652: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12697714567184448
    2. ' self' → logprob: -2.1269772052764893
    3. ' max' → logprob: -10.37697696685791
    4. 'max' → logprob: -11.00197696685791
    5. '       ' → logprob: -14.00197696685791
    6. ' ' → logprob: -15.75197696685791
    7. '(self' → logprob: -15.87697696685791
    8. '	self' → logprob: -16.001977920532227
    9. ' ' → logprob: -18.251977920532227
    10. '        
' → logprob: -18.376977920532227

Token 653: '.last' (ID: 15748)
  Prédit: '.last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.last' → logprob: -2.15310683415737e-05
    2. '.' → logprob: -11.375021934509277
    3. 'last' → logprob: -11.750021934509277
    4. '.current' → logprob: -13.750021934509277
    5. ' .' → logprob: -15.000021934509277
    6. '.previous' → logprob: -15.250021934509277
    7. '   ' → logprob: -16.87502098083496
    8. '
' → logprob: -17.12502098083496
    9. '.user' → logprob: -17.25002098083496
    10. '_.' → logprob: -17.37502098083496

Token 654: '_month' (ID: 43330)
  Prédit: '_month'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_month' → logprob: -4.7994282795116305e-05
    2. '_' → logprob: -10.00004768371582
    3. '```' → logprob: -14.50004768371582
    4. '_MONTH' → logprob: -14.75004768371582
    5. '_money' → logprob: -15.00004768371582
    6. 'month' → logprob: -15.50004768371582
    7. '_week' → logprob: -15.75004768371582
    8. ' _' → logprob: -16.00004768371582
    9. '\' → logprob: -16.37504768371582
    10. 's' → logprob: -16.37504768371582

Token 655: '_charge' (ID: 110838)
  Prédit: '_charge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_charge' → logprob: -7.941850526549388e-06
    2. '_' → logprob: -12.625007629394531
    3. 'charge' → logprob: -13.000007629394531
    4. '-' → logprob: -13.875007629394531
    5. '_ch' → logprob: -15.250007629394531
    6. 's' → logprob: -15.750007629394531
    7. ' -' → logprob: -15.750007629394531
    8. ' _' → logprob: -16.00000762939453
    9. '-_' → logprob: -16.62500762939453
    10. '_credit' → logprob: -16.75000762939453

Token 656: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.12692883610725403
    2. '-' → logprob: -2.1269288063049316
    3. ' ' → logprob: -15.25192928314209
    4. ' ' → logprob: -15.37692928314209
    5. '   ' → logprob: -15.50192928314209
    6. '-current' → logprob: -16.251928329467773
    7. ' -
' → logprob: -18.501928329467773
    8. '-self' → logprob: -18.626928329467773
    9. '−' → logprob: -18.626928329467773
    10. '       ' → logprob: -19.126928329467773

Token 657: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.011047814972698689
    2. ' current' → logprob: -4.511047840118408
    3. '	current' → logprob: -18.51104736328125
    4. '$current' → logprob: -20.76104736328125
    5. '       ' → logprob: -21.13604736328125
    6. '_current' → logprob: -21.38604736328125
    7. '.current' → logprob: -21.51104736328125
    8. 'Current' → logprob: -21.88604736328125
    9. '(current' → logprob: -22.01104736328125
    10. 'urrent' → logprob: -23.01104736328125

Token 658: '_charge' (ID: 110838)
  Prédit: '_charge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_charge' → logprob: -2.816093228830141e-06
    2. 'charge' → logprob: -13.12500286102295
    3. '_' → logprob: -14.62500286102295
    4. '_char' → logprob: -15.87500286102295
    5. '_chart' → logprob: -15.87500286102295
    6. 's' → logprob: -16.750001907348633
    7. 'Charge' → logprob: -17.250001907348633
    8. '_s' → logprob: -18.625001907348633
    9. '_ch' → logprob: -18.750001907348633
    10. 'arge' → logprob: -18.750001907348633

Token 659: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 660: 'class' (ID: 1444)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.44060245156288147
    2. 'def' → logprob: -1.565602421760559
    3. '<|end|>' → logprob: -2.0656025409698486
    4. '```' → logprob: -3.9406025409698486
    5. '<|end|>' → logprob: -7.5656023025512695
    6. ')' → logprob: -8.81560230255127
    7. '.' → logprob: -8.81560230255127
    8. '

' → logprob: -10.31560230255127
    9. 'a' → logprob: -10.44060230255127
    10. ' ' → logprob: -10.56560230255127

Token 661: ' Input' (ID: 10090)
  Prédit: ' Water'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Water' → logprob: -0.18503440916538239
    2. 'Water' → logprob: -2.5600345134735107
    3. ' Customer' → logprob: -4.185034275054932
    4. ' User' → logprob: -4.310034275054932
    5. ' Usage' → logprob: -4.685034275054932
    6. ' Monthly' → logprob: -4.810034275054932
    7. ' Test' → logprob: -4.935034275054932
    8. 'User' → logprob: -5.185034275054932
    9. 'Usage' → logprob: -5.310034275054932
    10. 'Test' → logprob: -5.935034275054932

Token 662: 'Handler' (ID: 4139)
  Prédit: 'Handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: -0.18974605202674866
    2. 'Data' → logprob: -2.689746141433716
    3. 'Processor' → logprob: -3.564746141433716
    4. 'Output' → logprob: -3.939746141433716
    5. 'Validator' → logprob: -4.314745903015137
    6. 'Reader' → logprob: -4.439745903015137
    7. 'Form' → logprob: -4.814745903015137
    8. 'Parser' → logprob: -5.814745903015137
    9. 'Consumer' → logprob: -5.939745903015137
    10. 'Helper' → logprob: -6.064745903015137

Token 663: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00030185774085111916
    2. '():' → logprob: -8.8753023147583
    3. ':
' → logprob: -9.6253023147583
    4. '<|end|>' → logprob: -9.6253023147583
    5. '):' → logprob: -12.0003023147583
    6. '(QWidget' → logprob: -12.7503023147583
    7. ':**' → logprob: -13.0003023147583
    8. '(' → logprob: -13.0003023147583
    9. ':def' → logprob: -13.1253023147583
    10. '```' → logprob: -13.2503023147583

Token 664: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06509938836097717
    2. ' def' → logprob: -2.8150994777679443
    3. 'class' → logprob: -6.815099239349365
    4. ' class' → logprob: -6.940099239349365
    5. 'def' → logprob: -7.190099239349365
    6. '```' → logprob: -8.190099716186523
    7. '	def' → logprob: -12.315099716186523
    8. 'import' → logprob: -12.690099716186523
    9. '    ' → logprob: -12.690099716186523
    10. '‌' → logprob: -12.940099716186523

Token 665: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.02328578010201454
    2. ' def' → logprob: -3.7732858657836914
    3. '@' → logprob: -10.148285865783691
    4. '   ' → logprob: -14.148285865783691
    5. ' @' → logprob: -15.273285865783691
    6. 'class' → logprob: -15.648285865783691
    7. '	def' → logprob: -17.898284912109375
    8. 'staticmethod' → logprob: -18.398284912109375
    9. '```' → logprob: -18.648284912109375
    10. 'import' → logprob: -18.773284912109375

Token 666: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.3274436891078949
    2. ' __' → logprob: -1.9524437189102173
    3. ' def' → logprob: -2.9524435997009277
    4. 'def' → logprob: -3.4524435997009277
    5. ' init' → logprob: -3.4524435997009277
    6. '__' → logprob: -3.9524435997009277
    7. '_init' → logprob: -6.702443599700928
    8. 'int' → logprob: -7.077443599700928
    9. 'staticmethod' → logprob: -8.702444076538086
    10. 'n' → logprob: -9.077444076538086

Token 667: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -4.320199877838604e-07
    2. 'int' → logprob: -15.125
    3. 'new' → logprob: -17.125
    4. ' init' → logprob: -17.875
    5. 'nit' → logprob: -18.25
    6. 'call' → logprob: -20.0
    7. 'ini' → logprob: -20.375
    8. 'inite' → logprob: -20.5
    9. '_init' → logprob: -20.875
    10. 'iter' → logprob: -21.25

Token 668: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0019928740803152323
    2. '(self' → logprob: -6.251992702484131
    3. '(' → logprob: -10.626993179321289
    4. '__' → logprob: -10.751993179321289
    5. '__(
' → logprob: -11.501993179321289
    6. 'self' → logprob: -12.001993179321289
    7. '   ' → logprob: -14.126993179321289
    8. '_(' → logprob: -14.376993179321289
    9. '```' → logprob: -14.626993179321289
    10. '
' → logprob: -15.751993179321289

Token 669: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00022845028433948755
    2. ')' → logprob: -9.125228881835938
    3. '):
' → logprob: -9.750228881835938
    4. '   ' → logprob: -10.250228881835938
    5. ' self' → logprob: -11.125228881835938
    6. '(self' → logprob: -12.125228881835938
    7. '       ' → logprob: -13.000228881835938
    8. ')(' → logprob: -13.500228881835938
    9. '):' → logprob: -14.250228881835938
    10. '
' → logprob: -14.500228881835938

Token 670: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16425201296806335
    2. '):
' → logprob: -2.1642520427703857
    3. 'self' → logprob: -3.5392520427703857
    4. ',' → logprob: -4.914251804351807
    5. '):
' → logprob: -8.914252281188965
    6. '   ' → logprob: -9.914252281188965
    7. '(self' → logprob: -10.539252281188965
    8. '():' → logprob: -11.039252281188965
    9. ' self' → logprob: -11.914252281188965
    10. ')' → logprob: -12.164252281188965

Token 671: ' calculator' (ID: 44484)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.7497529983520508
    2. 'last' → logprob: -1.3747529983520508
    3. 'previous' → logprob: -2.624752998352051
    4. 'input' → logprob: -2.999752998352051
    5. ' last' → logprob: -3.499752998352051
    6. 'water' → logprob: -3.624752998352051
    7. '):' → logprob: -4.249752998352051
    8. 'max' → logprob: -4.249752998352051
    9. 'volume' → logprob: -4.499752998352051
    10. 'current' → logprob: -4.624752998352051

Token 672: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010793719440698624
    2. ':' → logprob: -4.635793685913086
    3. '):
' → logprob: -7.010793685913086
    4. ',' → logprob: -9.135793685913086
    5. ' ):' → logprob: -11.385793685913086
    6. '   ' → logprob: -11.885793685913086
    7. ')' → logprob: -12.135793685913086
    8. '):
' → logprob: -13.635793685913086
    9. '():' → logprob: -14.260793685913086
    10. ' ' → logprob: -14.760793685913086

Token 673: ' Water' (ID: 12303)
  Prédit: 'Water'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Water' → logprob: -0.01814994215965271
    2. ' Water' → logprob: -4.0181498527526855
    3. ')' → logprob: -16.518150329589844
    4. ' water' → logprob: -17.143150329589844
    5. '_water' → logprob: -18.018150329589844
    6. ' ' → logprob: -19.393150329589844
    7. ' ' → logprob: -19.643150329589844
    8. '   ' → logprob: -21.018150329589844
    9. 'Calculator' → logprob: -21.393150329589844
    10. 'W' → logprob: -21.393150329589844

Token 674: 'Charge' (ID: 46218)
  Prédit: 'Charge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Charge' → logprob: -2.45848218582978e-06
    2. '_charge' → logprob: -13.00000286102295
    3. 'charge' → logprob: -16.250001907348633
    4. ' Charge' → logprob: -17.250001907348633
    5. ' charge' → logprob: -20.125001907348633
    6. 'Charges' → logprob: -20.250001907348633
    7. '-charge' → logprob: -20.500001907348633
    8. 'Calculate' → logprob: -20.875001907348633
    9. 'Charging' → logprob: -20.875001907348633
    10. 'Charg' → logprob: -21.000001907348633

Token 675: 'Calculator' (ID: 50159)
  Prédit: 'Calculator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Calculator' → logprob: -3.500108141452074e-05
    2. 'Charge' → logprob: -11.500035285949707
    3. '   ' → logprob: -11.625035285949707
    4. 'calculator' → logprob: -11.875035285949707
    5. ' ' → logprob: -12.500035285949707
    6. ' Calculator' → logprob: -13.125035285949707
    7. '  ' → logprob: -14.000035285949707
    8. 'Calculate' → logprob: -14.500035285949707
    9. 'Calculation' → logprob: -15.000035285949707
    10. ' calculator' → logprob: -15.125035285949707

Token 676: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01831253431737423
    2. '):
' → logprob: -4.018312454223633
    3. ')' → logprob: -8.768312454223633
    4. '):
' → logprob: -12.393312454223633
    5. ',' → logprob: -13.518312454223633
    6. '   ' → logprob: -14.143312454223633
    7. ' ):' → logprob: -14.768312454223633
    8. ':' → logprob: -15.143312454223633
    9. ' ' → logprob: -16.893312454223633
    10. '):

' → logprob: -17.893312454223633

Token 677: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39295536279678345
    2. '       ' → logprob: -1.1429553031921387
    3. 'self' → logprob: -5.767955303192139
    4. 'def' → logprob: -7.142955303192139
    5. '):
' → logprob: -7.517955303192139
    6. '<|end|>' → logprob: -7.642955303192139
    7. ' def' → logprob: -8.267955780029297
    8. ',' → logprob: -8.392955780029297
    9. ')' → logprob: -8.767955780029297
    10. ' self' → logprob: -9.517955780029297

Token 678: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.007886620238423347
    2. '       ' → logprob: -5.0078864097595215
    3. ' self' → logprob: -6.7578864097595215
    4. '	self' → logprob: -11.75788688659668
    5. '   ' → logprob: -14.13288688659668
    6. ' ' → logprob: -16.13288688659668
    7. '	' → logprob: -16.38288688659668
    8. '(self' → logprob: -17.50788688659668
    9. '_self' → logprob: -18.13288688659668
    10. '[self' → logprob: -18.25788688659668

Token 679: '.cal' (ID: 40302)
  Prédit: '.cal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cal' → logprob: -0.00012725738633889705
    2. '._' → logprob: -9.625126838684082
    3. '.' → logprob: -10.750126838684082
    4. 'calculator' → logprob: -11.500126838684082
    5. '	cal' → logprob: -11.625126838684082
    6. ' .' → logprob: -11.875126838684082
    7. '.calc' → logprob: -12.125126838684082
    8. '.calculate' → logprob: -12.750126838684082
    9. '   ' → logprob: -13.750126838684082
    10. '.Cal' → logprob: -13.875126838684082

Token 680: 'culator' (ID: 23033)
  Prédit: 'culator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'culator' → logprob: -6.623244553338736e-05
    2. 'ulator' → logprob: -10.125065803527832
    3. 'calculator' → logprob: -10.875065803527832
    4. 'c' → logprob: -12.625065803527832
    5. 'cul' → logprob: -12.625065803527832
    6. 'lator' → logprob: -15.625065803527832
    7. 'cut' → logprob: -16.00006675720215
    8. '```' → logprob: -16.87506675720215
    9. 'culate' → logprob: -17.37506675720215
    10. 'cular' → logprob: -17.50006675720215

Token 681: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31329551339149475
    2. '=' → logprob: -1.3132954835891724
    3. '   ' → logprob: -10.438295364379883
    4. ':' → logprob: -13.313295364379883
    5. ' ' → logprob: -14.313295364379883
    6. '.' → logprob: -14.438295364379883
    7. ',' → logprob: -15.063295364379883
    8. '	' → logprob: -15.313295364379883
    9. '    ' → logprob: -15.438295364379883
    10. '  ' → logprob: -15.438295364379883

Token 682: ' calculator' (ID: 44484)
  Prédit: 'calculator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calculator' → logprob: -0.00033546582562848926
    2. ' calculator' → logprob: -8.000335693359375
    3. 'cal' → logprob: -17.125335693359375
    4. 'calendar' → logprob: -18.625335693359375
    5. 'Calculator' → logprob: -19.500335693359375
    6. 'calcul' → logprob: -19.750335693359375
    7. 'calc' → logprob: -20.625335693359375
    8. 'calculate' → logprob: -20.875335693359375
    9. '	cal' → logprob: -22.250335693359375
    10. '   ' → logprob: -22.875335693359375

Token 683: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018355604261159897
    2. '
' → logprob: -4.018355369567871
    3. '    
' → logprob: -8.643355369567871
    4. 'def' → logprob: -11.143355369567871
    5. '<|end|>' → logprob: -11.768355369567871
    6. '```' → logprob: -12.643355369567871
    7. ' def' → logprob: -13.393355369567871
    8. '<|end|>' → logprob: -15.143355369567871
    9. '  
' → logprob: -15.268355369567871
    10. ',' → logprob: -15.268355369567871

Token 684: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06270376592874527
    2. ' def' → logprob: -3.062703847885132
    3. 'def' → logprob: -4.312703609466553
    4. '	def' → logprob: -8.062704086303711
    5. '
' → logprob: -8.562704086303711
    6. '<|end|>' → logprob: -9.812704086303711
    7. ' ' → logprob: -10.812704086303711
    8. '```' → logprob: -11.062704086303711
    9. '  ' → logprob: -12.187704086303711
    10. '<|end|>' → logprob: -12.562704086303711

Token 685: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.002500152215361595
    2. ' def' → logprob: -6.002500057220459
    3. '   ' → logprob: -10.627500534057617
    4. '	def' → logprob: -16.127500534057617
    5. '
' → logprob: -16.877500534057617
    6. 'de' → logprob: -18.002500534057617
    7. '```' → logprob: -18.627500534057617
    8. ':def' → logprob: -21.002500534057617
    9. 'import' → logprob: -21.502500534057617
    10. 'ndef' → logprob: -21.627500534057617

Token 686: ' process' (ID: 2273)
  Prédit: 'handle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'handle' → logprob: -0.8733751773834229
    2. ' handle' → logprob: -1.7483751773834229
    3. 'process' → logprob: -1.9983751773834229
    4. ' process' → logprob: -2.498375177383423
    5. 'read' → logprob: -2.748375177383423
    6. ' get' → logprob: -2.998375177383423
    7. ' read' → logprob: -3.498375177383423
    8. 'get' → logprob: -3.623375177383423
    9. ' prompt' → logprob: -5.623374938964844
    10. 'run' → logprob: -5.748374938964844

Token 687: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.023446373641490936
    2. '_input' → logprob: -3.8984463214874268
    3. '(' → logprob: -6.148446559906006
    4. '_volume' → logprob: -7.773446559906006
    5. '_line' → logprob: -9.273446083068848
    6. '_' → logprob: -9.523446083068848
    7. '_self' → logprob: -10.398446083068848
    8. '_amount' → logprob: -10.398446083068848
    9. '_(' → logprob: -10.523446083068848
    10. '_payment' → logprob: -10.773446083068848

Token 688: '):
' (ID: 1883)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.9697229266166687
    2. '_volume' → logprob: -1.2197229862213135
    3. '_' → logprob: -1.7197229862213135
    4. ',' → logprob: -2.7197229862213135
    5. 'self' → logprob: -3.0947229862213135
    6. '):' → logprob: -4.469722747802734
    7. '_line' → logprob: -4.719722747802734
    8. '_self' → logprob: -5.844722747802734
    9. '_amount' → logprob: -6.219722747802734
    10. '_user' → logprob: -6.344722747802734

Token 689: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002957783581223339
    2. '```' → logprob: -9.250295639038086
    3. '
' → logprob: -9.375295639038086
    4. 'self' → logprob: -10.375295639038086
    5. 'input' → logprob: -10.625295639038086
    6. 'try' → logprob: -10.875295639038086
    7. '        
' → logprob: -11.625295639038086
    8. '   ' → logprob: -12.000295639038086
    9. 'while' → logprob: -12.125295639038086
    10. 'volume' → logprob: -12.250295639038086

Token 690: ' while' (ID: 2049)
  Prédit: 'volume'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'volume' → logprob: -0.20752109587192535
    2. 'try' → logprob: -2.5825212001800537
    3. 'while' (adapté à ' while') → logprob: -2.8325212001800537
    4. ' volume' → logprob: -3.2075212001800537
    5. '       ' → logprob: -4.832520961761475
    6. ' while' → logprob: -6.207520961761475
    7. ' try' → logprob: -6.332520961761475
    8. 'n' → logprob: -7.957520961761475
    9. 'amount' → logprob: -9.332521438598633
    10. 'input' → logprob: -9.832521438598633

Token 691: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.6931686401367188
    2. ' True' → logprob: -0.6931686401367188
    3. '(True' → logprob: -10.818168640136719
    4. '=True' → logprob: -13.568168640136719
    5. '
' → logprob: -16.81816864013672
    6. 'true' → logprob: -16.94316864013672
    7. '_true' → logprob: -17.56816864013672
    8. '1' → logprob: -18.31816864013672
    9. '_TRUE' → logprob: -19.69316864013672
    10. '  ' → logprob: -19.81816864013672

Token 692: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5746884942054749
    2. ':' → logprob: -0.9496884942054749
    3. ':
' → logprob: -3.32468843460083
    4. ',' → logprob: -4.32468843460083
    5. '():
' → logprob: -7.82468843460083
    6. '():' → logprob: -8.699688911437988
    7. '.' → logprob: -9.324688911437988
    8. '<|end|>' → logprob: -10.074688911437988
    9. '<|end|>' → logprob: -10.199688911437988
    10. '(' → logprob: -10.199688911437988

Token 693: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00016623330884613097
    2. 'try' → logprob: -9.375165939331055
    3. ' try' → logprob: -9.750165939331055
    4. '```' → logprob: -11.125165939331055
    5. 'input' → logprob: -13.000165939331055
    6. ' line' → logprob: -13.625165939331055
    7. '	       ' → logprob: -14.000165939331055
    8. '            
' → logprob: -14.375165939331055
    9. 'volume' → logprob: -14.375165939331055
    10. '          ' → logprob: -14.750165939331055

Token 694: ' line' (ID: 2543)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.6857930421829224
    2. ' try' → logprob: -0.8107930421829224
    3. 'input' → logprob: -4.310792922973633
    4. 'user' → logprob: -4.310792922973633
    5. ' user' → logprob: -4.435792922973633
    6. '           ' → logprob: -5.060792922973633
    7. ' input' → logprob: -5.435792922973633
    8. 'volume' → logprob: -7.060792922973633
    9. ' volume' → logprob: -7.435792922973633
    10. 'line' (adapté à ' line') → logprob: -8.185792922973633

Token 695: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020542705431580544
    2. '=' → logprob: -3.895542621612549
    3. ':' → logprob: -15.395543098449707
    4. '.' → logprob: -15.645543098449707
    5. 's' → logprob: -15.770543098449707
    6. '=line' → logprob: -15.770543098449707
    7. '=input' → logprob: -16.02054214477539
    8. ' ' → logprob: -17.02054214477539
    9. '_' → logprob: -17.64554214477539
    10. '_input' → logprob: -18.02054214477539

Token 696: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2014133334159851
    2. ' input' → logprob: -1.7014133930206299
    3. '(input' → logprob: -18.576414108276367
    4. '=input' → logprob: -18.826414108276367
    5. '	input' → logprob: -19.951414108276367
    6. '<input' → logprob: -20.701414108276367
    7. '_input' → logprob: -21.701414108276367
    8. '```' → logprob: -21.826414108276367
    9. ' ' → logprob: -23.076414108276367
    10. ',input' → logprob: -23.076414108276367

Token 697: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0626499131321907
    2. '().' → logprob: -2.812649965286255
    3. '(' → logprob: -7.687649726867676
    4. '()
' → logprob: -9.312649726867676
    5. '("")' → logprob: -9.937649726867676
    6. '=' → logprob: -10.687649726867676
    7. '('' → logprob: -10.812649726867676
    8. ' ()' → logprob: -11.937649726867676
    9. '()

' → logprob: -12.187649726867676
    10. '("").' → logprob: -12.312649726867676

Token 698: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -1.9361264946837764e-07
    2. 'rstrip' → logprob: -15.75
    3. ' strip' → logprob: -19.5
    4. '.strip' → logprob: -20.75
    5. 'isdigit' → logprob: -22.5
    6. '_strip' → logprob: -22.75
    7. 'split' → logprob: -23.0
    8. '-strip' → logprob: -23.375
    9. '(strip' → logprob: -23.375
    10. 'str' → logprob: -23.875

Token 699: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.16025783121585846
    2. '()
' → logprob: -1.9102578163146973
    3. '()
' → logprob: -11.410258293151855
    4. '(' → logprob: -11.785258293151855
    5. '()

' → logprob: -12.535258293151855
    6. '())' → logprob: -13.410258293151855
    7. '()\' → logprob: -13.410258293151855
    8. ')' → logprob: -13.535258293151855
    9. '():
' → logprob: -13.785258293151855
    10. '()<' → logprob: -14.285258293151855

Token 700: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005994563456624746
    2. '       ' → logprob: -6.13099479675293
    3. 'if' → logprob: -6.13099479675293
    4. ' if' → logprob: -6.75599479675293
    5. '<|end|>' → logprob: -8.00599479675293
    6. '<|end|>' → logprob: -10.25599479675293
    7. '		' → logprob: -10.50599479675293
    8. '	       ' → logprob: -11.38099479675293
    9. '          ' → logprob: -11.50599479675293
    10. '   ' → logprob: -11.88099479675293

Token 701: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -3.650518920039758e-06
    2. ' if' → logprob: -13.125003814697266
    3. '           ' → logprob: -13.375003814697266
    4. '
' → logprob: -18.875003814697266
    5. 'try' → logprob: -19.000003814697266
    6. '#' → logprob: -19.125003814697266
    7. 'If' → logprob: -19.250003814697266
    8. '            
' → logprob: -19.375003814697266
    9. '       ' → logprob: -20.000003814697266
    10. '```' → logprob: -20.500003814697266

Token 702: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.4271678328514099
    2. ' not' → logprob: -1.6771678924560547
    3. 'not' → logprob: -2.3021678924560547
    4. ' line' → logprob: -2.8021678924560547
    5. '(line' → logprob: -11.927167892456055
    6. '#line' → logprob: -11.927167892456055
    7. '	line' → logprob: -12.427167892456055
    8. '[line' → logprob: -13.302167892456055
    9. ' ' → logprob: -13.802167892456055
    10. '=line' → logprob: -14.177167892456055

Token 703: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.02330324426293373
    2. ' ==' → logprob: -3.773303270339966
    3. '()==' → logprob: -11.023303031921387
    4. '.lower' → logprob: -11.023303031921387
    5. '==
' → logprob: -12.023303031921387
    6. '=="' → logprob: -12.023303031921387
    7. '=' → logprob: -12.148303031921387
    8. '=='' → logprob: -12.773303031921387
    9. '===' → logprob: -12.773303031921387
    10. ')==' → logprob: -14.273303031921387

Token 704: ' '-' (ID: 17489)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6763531565666199
    2. '""' → logprob: -1.1763532161712646
    3. '''' → logprob: -2.1763532161712646
    4. '"":' → logprob: -2.9263532161712646
    5. ''ex' → logprob: -4.8013529777526855
    6. ''' → logprob: -4.9263529777526855
    7. ''end' → logprob: -7.5513529777526855
    8. ''q' → logprob: -11.301353454589844
    9. '":' → logprob: -11.676353454589844
    10. ''e' → logprob: -11.801353454589844

Token 705: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008526319288648665
    2. '-' → logprob: -7.125852584838867
    3. ''' → logprob: -10.625852584838867
    4. '\n' → logprob: -12.500852584838867
    5. '-end' → logprob: -13.125852584838867
    6. '<|end|>' → logprob: -13.125852584838867
    7. '<|end|>' → logprob: -13.500852584838867
    8. '':' → logprob: -13.625852584838867
    9. 'END' → logprob: -13.625852584838867
    10. '"' → logprob: -13.750852584838867

Token 706: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.14532949030399323
    2. '':
' → logprob: -2.020329475402832
    3. ''' → logprob: -7.020329475402832
    4. '':
' → logprob: -7.270329475402832
    5. ':' → logprob: -7.645329475402832
    6. ''):
' → logprob: -8.270329475402832
    7. ':
' → logprob: -8.895329475402832
    8. ''or' → logprob: -9.520329475402832
    9. '<|end|>' → logprob: -10.020329475402832
    10. ' or' → logprob: -11.020329475402832

Token 707: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007210109033621848
    2. '           ' → logprob: -7.250720977783203
    3. ':' → logprob: -12.750720977783203
    4. '                   ' → logprob: -12.875720977783203
    5. '              ' → logprob: -12.875720977783203
    6. '       ' → logprob: -14.125720977783203
    7. 'break' → logprob: -14.625720977783203
    8. '             ' → logprob: -14.750720977783203
    9. '   ' → logprob: -15.500720977783203
    10. '	           ' → logprob: -15.500720977783203

Token 708: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5842517614364624
    2. 'break' (adapté à ' break') → logprob: -0.8342517614364624
    3. ' break' → logprob: -4.834251880645752
    4. '           ' → logprob: -8.459251403808594
    5. 'return' → logprob: -9.584251403808594
    6. '	break' → logprob: -10.584251403808594
    7. '                   ' → logprob: -10.959251403808594
    8. '			' → logprob: -14.459251403808594
    9. '_break' → logprob: -15.209251403808594
    10. '   ' → logprob: -15.334251403808594

Token 709: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.624555291840807e-05
    2. '            
' → logprob: -9.875076293945312
    3. '<|end|>' → logprob: -11.750076293945312
    4. '       ' → logprob: -12.000076293945312
    5. 'try' → logprob: -12.750076293945312
    6. '          ' → logprob: -13.125076293945312
    7. '               ' → logprob: -13.375076293945312
    8. ' try' → logprob: -14.125076293945312
    9. '```' → logprob: -14.375076293945312
    10. ',' → logprob: -14.750076293945312

Token 710: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.453737710718997e-05
    2. '       ' → logprob: -11.125044822692871
    3. '            
' → logprob: -11.625044822692871
    4. '<|end|>' → logprob: -12.125044822692871
    5. '```' → logprob: -12.125044822692871
    6. '          ' → logprob: -12.750044822692871
    7. 'try' → logprob: -13.125044822692871
    8. '               ' → logprob: -14.125044822692871
    9. '   ' → logprob: -14.125044822692871
    10. '	       ' → logprob: -14.250044822692871

Token 711: ' try' (ID: 2075)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' (adapté à ' try') → logprob: -0.16137675940990448
    2. 'volume' → logprob: -1.911376714706421
    3. 'if' → logprob: -7.036376953125
    4. '           ' → logprob: -8.536376953125
    5. ' try' → logprob: -9.911376953125
    6. ' volume' → logprob: -11.411376953125
    7. 'quantity' → logprob: -11.786376953125
    8. '```' → logprob: -12.911376953125
    9. '            
' → logprob: -13.661376953125
    10. 'vol' → logprob: -13.911376953125

Token 712: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3882106840610504
    2. ':
' → logprob: -1.138210654258728
    3. '               ' → logprob: -7.263210773468018
    4. '<|end|>' → logprob: -8.01321029663086
    5. '):
' → logprob: -9.51321029663086
    6. '           ' → logprob: -10.26321029663086
    7. '<|end|>' → logprob: -10.51321029663086
    8. '       ' → logprob: -10.51321029663086
    9. ' :' → logprob: -10.76321029663086
    10. '{' → logprob: -11.07571029663086

Token 713: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00012035090912831947
    2. 'volume' → logprob: -9.750120162963867
    3. ' volume' → logprob: -10.500120162963867
    4. '           ' → logprob: -11.375120162963867
    5. '	           ' → logprob: -12.000120162963867
    6. '   ' → logprob: -12.125120162963867
    7. '                   ' → logprob: -13.375120162963867
    8. '                ' → logprob: -13.500120162963867
    9. '              ' → logprob: -13.500120162963867
    10. '<|end|>' → logprob: -13.875120162963867

Token 714: ' w' (ID: 286)
  Prédit: 'volume'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'volume' → logprob: -0.048629265278577805
    2. ' volume' → logprob: -3.0486292839050293
    3. '                   ' → logprob: -11.423628807067871
    4. 'quantity' → logprob: -11.673628807067871
    5. 'amount' → logprob: -12.048628807067871
    6. 'vol' → logprob: -12.173628807067871
    7. '   ' → logprob: -12.423628807067871
    8. '               ' → logprob: -12.673628807067871
    9. 'v' → logprob: -13.173628807067871
    10. 'value' → logprob: -14.423628807067871

Token 715: ' =' (ID: 314)
  Prédit: 'ater'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ater' → logprob: -0.0008011689060367644
    2. 'volume' → logprob: -7.250801086425781
    3. 'a' → logprob: -10.750801086425781
    4. '_volume' → logprob: -10.750801086425781
    5. ' =' → logprob: -11.500801086425781
    6. 'ate' → logprob: -11.750801086425781
    7. 'atering' → logprob: -12.000801086425781
    8. '   ' → logprob: -12.000801086425781
    9. 'eight' → logprob: -12.375801086425781
    10. ' volume' → logprob: -13.125801086425781

Token 716: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0001584850688232109
    2. ' int' → logprob: -8.750158309936523
    3. '(int' → logprob: -22.375158309936523
    4. '[int' → logprob: -22.375158309936523
    5. 'float' → logprob: -23.250158309936523
    6. '=int' → logprob: -23.375158309936523
    7. ' ' → logprob: -23.750158309936523
    8. '	int' → logprob: -23.750158309936523
    9. '   ' → logprob: -23.875158309936523
    10. '<int' → logprob: -24.375158309936523

Token 717: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -7.941850526549388e-06
    2. '(' → logprob: -11.750007629394531
    3. 'line' → logprob: -17.50000762939453
    4. ' line' → logprob: -18.87500762939453
    5. '=line' → logprob: -19.00000762939453
    6. '[line' → logprob: -19.25000762939453
    7. '#line' → logprob: -20.12500762939453
    8. '(Line' → logprob: -21.12500762939453
    9. ' (' → logprob: -21.25000762939453
    10. ',line' → logprob: -21.37500762939453

Token 718: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013335748808458447
    2. ')
' → logprob: -6.876333713531494
    3. '               ' → logprob: -8.126333236694336
    4. ')
' → logprob: -13.376333236694336
    5. ' )' → logprob: -13.501333236694336
    6. '           ' → logprob: -13.751333236694336
    7. '                   ' → logprob: -14.751333236694336
    8. '              ' → logprob: -16.376333236694336
    9. '                ' → logprob: -16.876333236694336
    10. '())' → logprob: -17.126333236694336

Token 719: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009555285796523094
    2. '           ' → logprob: -7.250955581665039
    3. '                ' → logprob: -9.625955581665039
    4. '              ' → logprob: -10.250955581665039
    5. '	           ' → logprob: -10.500955581665039
    6. '                
' → logprob: -10.500955581665039
    7. '<|end|>' → logprob: -10.625955581665039
    8. '                   ' → logprob: -11.375955581665039
    9. 'except' → logprob: -11.750955581665039
    10. '			' → logprob: -12.000955581665039

Token 720: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6941208243370056
    2. 'charge' → logprob: -1.6941208839416504
    3. ' charge' → logprob: -1.6941208839416504
    4. ' if' → logprob: -2.8191208839416504
    5. 'if' (adapté à ' if') → logprob: -3.3191208839416504
    6. 's' → logprob: -4.06912088394165
    7. 'result' → logprob: -4.69412088394165
    8. ' result' → logprob: -5.19412088394165
    9. ' savings' → logprob: -6.31912088394165
    10. 'total' → logprob: -7.19412088394165

Token 721: ' not' (ID: 625)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.014863976277410984
    2. ' w' → logprob: -4.389863967895508
    3. '0' → logprob: -6.139863967895508
    4. '               ' → logprob: -9.514863967895508
    5. '                   ' → logprob: -9.889863967895508
    6. ' ' → logprob: -10.639863967895508
    7. '           ' → logprob: -11.014863967895508
    8. '   ' → logprob: -11.389863967895508
    9. 'not' → logprob: -12.639863967895508
    10. '       ' → logprob: -12.889863967895508

Token 722: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5810049772262573
    2. '(' → logprob: -0.9560049772262573
    3. ' ' → logprob: -3.456005096435547
    4. '0' → logprob: -3.706005096435547
    5. ' w' → logprob: -10.081005096435547
    6. '1' → logprob: -10.456005096435547
    7. '(w' → logprob: -11.081005096435547
    8. 'w' → logprob: -11.456005096435547
    9. '100' → logprob: -12.956005096435547
    10. '(-' → logprob: -13.456005096435547

Token 723: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005507678724825382
    2. '1' → logprob: -8.000551223754883
    3. ' ' → logprob: -8.625551223754883
    4. 'w' → logprob: -10.500551223754883
    5. '-' → logprob: -13.375551223754883
    6. '(' → logprob: -13.375551223754883
    7. '100' → logprob: -13.938051223754883
    8. '10' → logprob: -14.063051223754883
    9. '   ' → logprob: -14.375551223754883
    10. '5' → logprob: -14.563051223754883

Token 724: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.16022422909736633
    2. ' <=' → logprob: -1.910224199295044
    3. ')<=' → logprob: -16.41022491455078
    4. '<' → logprob: -17.41022491455078
    5. ' ' → logprob: -17.66022491455078
    6. '   ' → logprob: -18.16022491455078
    7. '```' → logprob: -18.41022491455078
    8. '           ' → logprob: -18.91022491455078
    9. ']<=' → logprob: -19.28522491455078
    10. '≤' → logprob: -19.53522491455078

Token 725: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.00038014890742488205
    2. ' w' → logprob: -7.875380039215088
    3. '   ' → logprob: -18.00037956237793
    4. '	w' → logprob: -18.62537956237793
    5. ')' → logprob: -19.50037956237793
    6. ' ' → logprob: -20.62537956237793
    7. 'int' → logprob: -20.87537956237793
    8. '  ' → logprob: -20.87537956237793
    9. '       ' → logprob: -21.12537956237793
    10. 'wend' → logprob: -21.37537956237793

Token 726: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.1603666990995407
    2. '<=' → logprob: -1.9103666543960571
    3. ' and' → logprob: -8.910367012023926
    4. 'and' → logprob: -12.535367012023926
    5. ')<=' → logprob: -13.035367012023926
    6. ')' → logprob: -14.410367012023926
    7. ' ' → logprob: -14.910367012023926
    8. ' ≤' → logprob: -15.910367012023926
    9. '           ' → logprob: -16.16036605834961
    10. 'w' → logprob: -16.28536605834961

Token 727: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.048044200986623764
    2. '200' → logprob: -4.423044204711914
    3. '120' → logprob: -5.048044204711914
    4. '999' → logprob: -5.048044204711914
    5. '150' → logprob: -5.298044204711914
    6. '50' → logprob: -5.673044204711914
    7. '500' → logprob: -5.798044204711914
    8. '300' → logprob: -5.798044204711914
    9. '40' → logprob: -5.923044204711914
    10. '400' → logprob: -6.423044204711914

Token 728: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.1261226385831833
    2. '50' → logprob: -3.6261227130889893
    3. '40' → logprob: -4.00112247467041
    4. '200' → logprob: -4.00112247467041
    5. '300' → logprob: -4.75112247467041
    6. '120' → logprob: -4.75112247467041
    7. '150' → logprob: -5.00112247467041
    8. '999' → logprob: -5.00112247467041
    9. '500' → logprob: -5.25112247467041
    10. '400' → logprob: -5.25112247467041

Token 729: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.042771704494953156
    2. '0' → logprob: -3.792771816253662
    3. '):' → logprob: -4.042771816253662
    4. '000' → logprob: -6.667771816253662
    5. '00' → logprob: -7.792771816253662
    6. '):
' → logprob: -9.542771339416504
    7. ')' → logprob: -11.042771339416504
    8. ' ):
' → logprob: -11.417771339416504
    9. '):

' → logprob: -12.417771339416504
    10. '_' → logprob: -14.667771339416504

Token 730: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.8670179997570813e-05
    2. '               ' → logprob: -11.250019073486328
    3. '                       ' → logprob: -12.875019073486328
    4. '                    
' → logprob: -14.000019073486328
    5. '                  ' → logprob: -14.500019073486328
    6. '           ' → logprob: -14.750019073486328
    7. '```' → logprob: -14.875019073486328
    8. '                    ' → logprob: -15.125019073486328
    9. ' print' → logprob: -15.625019073486328
    10. '                 ' → logprob: -16.000019073486328

Token 731: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2207086831331253
    2. ' print' → logprob: -1.7207087278366089
    3. '                   ' → logprob: -3.9707086086273193
    4. 'continue' → logprob: -8.970708847045898
    5. '               ' → logprob: -9.720708847045898
    6. ' continue' → logprob: -10.595708847045898
    7. '   ' → logprob: -10.970708847045898
    8. '                       ' → logprob: -11.220708847045898
    9. 'raise' → logprob: -12.845708847045898
    10. '           ' → logprob: -13.720708847045898

Token 732: ' per' (ID: 777)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006528026424348354
    2. ' print' → logprob: -5.131527900695801
    3. '                   ' → logprob: -7.756527900695801
    4. 'continue' → logprob: -8.8815279006958
    5. '               ' → logprob: -10.5065279006958
    6. ' continue' → logprob: -12.6315279006958
    7. '                       ' → logprob: -14.3815279006958
    8. '           ' → logprob: -14.7565279006958
    9. '   ' → logprob: -15.2565279006958
    10. '                ' → logprob: -16.256528854370117

Token 733: ' problem' (ID: 4792)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6186304092407227
    2. 'haps' → logprob: -0.8686304092407227
    3. ' print' → logprob: -4.243630409240723
    4. '           ' → logprob: -5.118630409240723
    5. '               ' → logprob: -5.118630409240723
    6. 'continue' → logprob: -5.618630409240723
    7. 't' → logprob: -6.243630409240723
    8. '                   ' → logprob: -6.368630409240723
    9. 'formance' → logprob: -6.493630409240723
    10. 'form' → logprob: -7.243630409240723

Token 734: ' constraint' (ID: 44762)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.5863208770751953
    2. '                   ' → logprob: -1.0863208770751953
    3. '               ' → logprob: -2.5863208770751953
    4. 'print' → logprob: -3.9613208770751953
    5. ' continue' → logprob: -4.836320877075195
    6. '           ' → logprob: -6.586320877075195
    7. 'continue' → logprob: -6.961320877075195
    8. '                       ' → logprob: -7.336320877075195
    9. '   ' → logprob: -8.211320877075195
    10. ' return' → logprob: -8.461320877075195

Token 735: ',' (ID: 11)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0013584480620920658
    2. ' continue' → logprob: -7.251358509063721
    3. '               ' → logprob: -7.501358509063721
    4. 'continue' → logprob: -10.501358032226562
    5. '                       ' → logprob: -10.751358032226562
    6. ' print' → logprob: -10.751358032226562
    7. '                    
' → logprob: -12.001358032226562
    8. '           ' → logprob: -12.251358032226562
    9. '                    ' → logprob: -12.626358032226562
    10. 'print' → logprob: -13.126358032226562

Token 736: ' but' (ID: 889)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.33880555629730225
    2. ' print' → logprob: -1.5888055562973022
    3. 'print' → logprob: -2.588805675506592
    4. 'continue' → logprob: -5.588805675506592
    5. ' continue' → logprob: -5.713805675506592
    6. '               ' → logprob: -7.213805675506592
    7. '   ' → logprob: -8.713805198669434
    8. '                       ' → logprob: -9.838805198669434
    9. '           ' → logprob: -10.838805198669434
    10. '	               ' → logprob: -10.963805198669434

Token 737: ' skip' (ID: 16677)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.20954978466033936
    2. ' continue' → logprob: -2.459549903869629
    3. 'print' → logprob: -2.709549903869629
    4. '                   ' → logprob: -3.709549903869629
    5. ' print' → logprob: -5.084549903869629
    6. '               ' → logprob: -5.084549903869629
    7. '           ' → logprob: -10.334549903869629
    8. 'break' → logprob: -10.709549903869629
    9. 'return' → logprob: -10.959549903869629
    10. '   ' → logprob: -10.959549903869629

Token 738: ' or' (ID: 503)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.26586174964904785
    2. ' continue' → logprob: -2.390861749649048
    3. '               ' → logprob: -2.515861749649048
    4. '                   ' → logprob: -2.890861749649048
    5. '
' → logprob: -5.890861511230469
    6. '           ' → logprob: -6.265861511230469
    7. '   ' → logprob: -8.265861511230469
    8. ' ' → logprob: -8.765861511230469
    9. '                ' → logprob: -9.515861511230469
    10. '                
' → logprob: -9.640861511230469

Token 739: ' ignore' (ID: 17887)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.6957120299339294
    2. 'continue' → logprob: -0.6957120299339294
    3. 'print' → logprob: -6.445712089538574
    4. ' print' → logprob: -6.945712089538574
    5. '           ' → logprob: -11.945712089538574
    6. 'raise' → logprob: -13.820712089538574
    7. '```' → logprob: -14.195712089538574
    8. '   ' → logprob: -14.445712089538574
    9. 'break' → logprob: -14.445712089538574
    10. ' raise' → logprob: -14.820712089538574

Token 740: ' invalid' (ID: 15796)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5692030787467957
    2. '               ' → logprob: -1.1942031383514404
    3. ' continue' → logprob: -2.3192031383514404
    4. 'continue' → logprob: -3.4442031383514404
    5. '           ' → logprob: -7.569202899932861
    6. '   ' → logprob: -9.31920337677002
    7. '                       ' → logprob: -9.56920337677002
    8. '	continue' → logprob: -10.69420337677002
    9. ' ' → logprob: -11.06920337677002
    10. '                ' → logprob: -11.06920337677002

Token 741: ' inputs' (ID: 21963)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.3573063015937805
    2. ' inputs' → logprob: -1.8573062419891357
    3. ' input' → logprob: -2.9823062419891357
    4. 'inputs' → logprob: -3.2323062419891357
    5. 'input' → logprob: -3.3573062419891357
    6. '               ' → logprob: -5.107306480407715
    7. 'continue' → logprob: -5.357306480407715
    8. ' entries' → logprob: -5.982306480407715
    9. ' continue' → logprob: -5.982306480407715
    10. 'lines' → logprob: -6.607306480407715

Token 742: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.002812363440170884
    2. '               ' → logprob: -5.877812385559082
    3. 'continue' → logprob: -12.877812385559082
    4. '                       ' → logprob: -12.877812385559082
    5. ' continue' → logprob: -13.752812385559082
    6. '           ' → logprob: -14.877812385559082
    7. ',' → logprob: -15.252812385559082
    8. '
' → logprob: -15.252812385559082
    9. '				' → logprob: -15.877812385559082
    10. '                  ' → logprob: -16.127811431884766

Token 743: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0001426346570951864
    2. '                       ' → logprob: -9.750143051147461
    3. '               ' → logprob: -10.250143051147461
    4. ' continue' → logprob: -10.375143051147461
    5. 'continue' → logprob: -11.125143051147461
    6. '           ' → logprob: -14.000143051147461
    7. '   ' → logprob: -14.250143051147461
    8. '				' → logprob: -14.750143051147461
    9. '```' → logprob: -15.125143051147461
    10. '       ' → logprob: -15.625143051147461

Token 744: ' continue' (ID: 4901)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5013874173164368
    2. 'continue' (adapté à ' continue') → logprob: -1.001387357711792
    3. ' continue' → logprob: -3.751387357711792
    4. '               ' → logprob: -5.876387596130371
    5. '                       ' → logprob: -7.501387596130371
    6. '   ' → logprob: -9.751387596130371
    7. '           ' → logprob: -10.876387596130371
    8. '	continue' → logprob: -11.376387596130371
    9. '       ' → logprob: -12.876387596130371
    10. 'return' → logprob: -13.376387596130371

Token 745: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0029617734253406525
    2. '                
' → logprob: -5.8779616355896
    3. '<|end|>' → logprob: -9.877962112426758
    4. '                    
' → logprob: -10.502962112426758
    5. '                   ' → logprob: -11.002962112426758
    6. '           ' → logprob: -11.377962112426758
    7. '                ' → logprob: -11.502962112426758
    8. '  
' → logprob: -12.002962112426758
    9. '```' → logprob: -12.002962112426758
    10. '               
' → logprob: -12.002962112426758

Token 746: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -2.6656825866666622e-05
    2. '                
' → logprob: -11.00002670288086
    3. '                   ' → logprob: -13.00002670288086
    4. '           ' → logprob: -13.12502670288086
    5. 'else' → logprob: -13.62502670288086
    6. '              ' → logprob: -14.12502670288086
    7. '```' → logprob: -14.25002670288086
    8. '                ' → logprob: -14.75002670288086
    9. '<|end|>' → logprob: -14.75002670288086
    10. ' else' → logprob: -15.00002670288086

Token 747: ' except' (ID: 6384)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3173118233680725
    2. '               ' → logprob: -1.3173117637634277
    3. '            
' → logprob: -5.817311763763428
    4. '                
' → logprob: -7.567311763763428
    5. 'else' → logprob: -8.942312240600586
    6. ' else' → logprob: -9.067312240600586
    7. '<|end|>' → logprob: -9.567312240600586
    8. '       ' → logprob: -9.817312240600586
    9. '
' → logprob: -9.942312240600586
    10. 'except' (adapté à ' except') → logprob: -10.567312240600586

Token 748: ' Value' (ID: 9963)
  Prédit: ' Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -0.3156822919845581
    2. 'Value' → logprob: -1.315682291984558
    3. '(Value' → logprob: -6.315682411193848
    4. '	Value' → logprob: -7.690682411193848
    5. '_value' → logprob: -9.815682411193848
    6. '.Value' → logprob: -9.940682411193848
    7. '_Value' → logprob: -10.440682411193848
    8. '<Value' → logprob: -11.565682411193848
    9. '<|end|>' → logprob: -12.065682411193848
    10. ' value' → logprob: -12.940682411193848

Token 749: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.03810655325651169
    2. 'rror' → logprob: -3.2881064414978027
    3. 'alue' → logprob: -10.538106918334961
    4. 'ror' → logprob: -10.538106918334961
    5. 'error' → logprob: -11.413106918334961
    6. 'Value' → logprob: -14.913106918334961
    7. 'SError' → logprob: -15.038106918334961
    8. 'LError' → logprob: -15.288106918334961
    9. 'Errors' → logprob: -16.16310691833496
    10. '_error' → logprob: -17.03810691833496

Token 750: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029931453987956047
    2. ':
' → logprob: -3.5299315452575684
    3. '           ' → logprob: -9.15493106842041
    4. '               ' → logprob: -9.77993106842041
    5. '):' → logprob: -12.77993106842041
    6. '):
' → logprob: -12.90493106842041
    7. '<|end|>' → logprob: -13.02993106842041
    8. ':

' → logprob: -13.65493106842041
    9. ' :' → logprob: -13.65493106842041
    10. ':return' → logprob: -13.90493106842041

Token 751: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000145137935760431
    2. ' continue' → logprob: -9.375144958496094
    3. '           ' → logprob: -9.875144958496094
    4. 'continue' → logprob: -11.750144958496094
    5. '   ' → logprob: -15.000144958496094
    6. '                   ' → logprob: -16.000144958496094
    7. '	           ' → logprob: -16.250144958496094
    8. '              ' → logprob: -16.750144958496094
    9. '		       ' → logprob: -17.000144958496094
    10. '       ' → logprob: -17.000144958496094

Token 752: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03310577571392059
    2. 'continue' (adapté à ' continue') → logprob: -3.5331058502197266
    3. ' continue' → logprob: -5.783105850219727
    4. '           ' → logprob: -8.283105850219727
    5. '                   ' → logprob: -11.658105850219727
    6. '   ' → logprob: -12.033105850219727
    7. '	continue' → logprob: -13.283105850219727
    8. '			' → logprob: -14.283105850219727
    9. '	           ' → logprob: -15.783105850219727
    10. '```' → logprob: -15.783105850219727

Token 753: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0018799698445945978
    2. '            
' → logprob: -6.376880168914795
    3. '<|end|>' → logprob: -9.626879692077637
    4. '
' → logprob: -10.126879692077637
    5. '```' → logprob: -11.126879692077637
    6. '        
' → logprob: -11.376879692077637
    7. '       ' → logprob: -11.751879692077637
    8. '           
' → logprob: -11.751879692077637
    9. '               ' → logprob: -11.876879692077637
    10. '    
' → logprob: -12.001879692077637

Token 754: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -9.17420256882906e-05
    2. '            
' → logprob: -9.875091552734375
    3. '
' → logprob: -10.875091552734375
    4. '```' → logprob: -11.500091552734375
    5. '       ' → logprob: -11.750091552734375
    6. '        
' → logprob: -13.875091552734375
    7. '               ' → logprob: -14.375091552734375
    8. '    
' → logprob: -14.750091552734375
    9. '          ' → logprob: -15.250091552734375
    10. '           
' → logprob: -15.375091552734375

Token 755: ' savings' (ID: 22381)
  Prédit: 'charge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'charge' → logprob: -0.11029332876205444
    2. '           ' → logprob: -2.485293388366699
    3. ' charge' → logprob: -4.485293388366699
    4. 'total' → logprob: -5.860293388366699
    5. 's' → logprob: -6.110293388366699
    6. 'result' → logprob: -6.235293388366699
    7. 'current' → logprob: -6.485293388366699
    8. '            
' → logprob: -8.4852933883667
    9. '```' → logprob: -8.8602933883667
    10. 'print' → logprob: -8.9852933883667

Token 756: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003601021133363247
    2. '=' → logprob: -5.62860107421875
    3. 's' → logprob: -15.25360107421875
    4. '_' → logprob: -15.62860107421875
    5. '_s' → logprob: -15.87860107421875
    6. '	' → logprob: -16.00360107421875
    7. ' ' → logprob: -16.37860107421875
    8. '   ' → logprob: -16.50360107421875
    9. '_for' → logprob: -17.37860107421875
    10. '=s' → logprob: -17.62860107421875

Token 757: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03804194927215576
    2. ' self' → logprob: -3.2880420684814453
    3. '           ' → logprob: -15.288042068481445
    4. '(self' → logprob: -16.038042068481445
    5. '=self' → logprob: -17.288042068481445
    6. '	self' → logprob: -17.538042068481445
    7. '       ' → logprob: -17.788042068481445
    8. '
' → logprob: -18.538042068481445
    9. '[self' → logprob: -18.663042068481445
    10. '```' → logprob: -18.788042068481445

Token 758: '.cal' (ID: 40302)
  Prédit: '.cal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cal' → logprob: -1.688212614681106e-05
    2. 'calculator' → logprob: -11.250017166137695
    3. '.' → logprob: -13.750017166137695
    4. 'cal' → logprob: -13.875017166137695
    5. '	cal' → logprob: -13.875017166137695
    6. ' .' → logprob: -14.625017166137695
    7. '.calc' → logprob: -15.250017166137695
    8. '.calculate' → logprob: -16.125017166137695
    9. '.Cal' → logprob: -18.625017166137695
    10. '   ' → logprob: -18.875017166137695

Token 759: 'culator' (ID: 23033)
  Prédit: 'culator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'culator' → logprob: -0.45068153738975525
    2. 'culated' → logprob: -1.9506815671920776
    3. 'cul' → logprob: -2.075681447982788
    4. 'culate' → logprob: -2.825681447982788
    5. 'c' → logprob: -4.200681686401367
    6. 'cu' → logprob: -5.075681686401367
    7. ' savings' → logprob: -5.450681686401367
    8. 'Savings' → logprob: -6.075681686401367
    9. '       ' → logprob: -6.325681686401367
    10. '(self' → logprob: -6.575681686401367

Token 760: '.calculate' (ID: 67851)
  Prédit: '.calculate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.calculate' → logprob: -1.5048530030981055e-06
    2. '.' → logprob: -14.000001907348633
    3. '.compute' → logprob: -15.125001907348633
    4. 'calculate' → logprob: -15.875001907348633
    5. '.cal' → logprob: -16.375001907348633
    6. '.calc' → logprob: -17.250001907348633
    7. ' .' → logprob: -17.500001907348633
    8. '.process' → logprob: -18.500001907348633
    9. '.evaluate' → logprob: -18.500001907348633
    10. '.Calculate' → logprob: -19.000001907348633

Token 761: '_s' (ID: 1278)
  Prédit: '(w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.2600274384021759
    2. '_s' → logprob: -1.7600274085998535
    3. 's' → logprob: -2.8850274085998535
    4. '(s' → logprob: -6.8850274085998535
    5. '(' → logprob: -10.510027885437012
    6. 'S' → logprob: -12.635027885437012
    7. '```' → logprob: -12.635027885437012
    8. ' (' → logprob: -12.885027885437012
    9. 'Savings' → logprob: -12.885027885437012
    10. ' savings' → logprob: -13.385027885437012

Token 762: 'avings' (ID: 55868)
  Prédit: 'avings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avings' → logprob: -6.704273118884885e-07
    2. 'av' → logprob: -15.125000953674316
    3. 'v' → logprob: -16.0
    4. 'aving' → logprob: -16.875
    5. 'arnings' → logprob: -17.25
    6. '(' → logprob: -17.25
    7. 's' → logprob: -17.25
    8. 'a' → logprob: -17.25
    9. 'Savings' → logprob: -17.75
    10. ' savings' → logprob: -19.125

Token 763: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.0001564586127642542
    2. '(' → logprob: -9.62515640258789
    3. ' (' → logprob: -9.62515640258789
    4. '(s' → logprob: -11.25015640258789
    5. '(volume' → logprob: -11.50015640258789
    6. '           ' → logprob: -15.00015640258789
    7. '(
' → logprob: -15.62515640258789
    8. '(v' → logprob: -15.75015640258789
    9. '(vol' → logprob: -16.00015640258789
    10. '((' → logprob: -16.87515640258789

Token 764: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3138074576854706
    2. ')
' → logprob: -1.313807487487793
    3. '           ' → logprob: -7.813807487487793
    4. ')
' → logprob: -9.063807487487793
    5. '       ' → logprob: -10.813807487487793
    6. '               ' → logprob: -13.063807487487793
    7. '          ' → logprob: -14.438807487487793
    8. ' )
' → logprob: -14.688807487487793
    9. ' )' → logprob: -14.813807487487793
    10. '   ' → logprob: -14.938807487487793

Token 765: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.804671233519912e-05
    2. 'print' → logprob: -9.37508773803711
    3. '```' → logprob: -13.50008773803711
    4. ' print' → logprob: -13.62508773803711
    5. '       ' → logprob: -14.75008773803711
    6. '		' → logprob: -16.87508773803711
    7. '               ' → logprob: -17.25008773803711
    8. '            
' → logprob: -18.12508773803711
    9. '   ' → logprob: -18.62508773803711
    10. '
' → logprob: -18.87508773803711

Token 766: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -8.113290095934644e-05
    2. '           ' → logprob: -9.500081062316895
    3. ' print' → logprob: -12.000081062316895
    4. '	print' → logprob: -19.75008201599121
    5. '```' → logprob: -20.12508201599121
    6. '#print' → logprob: -21.62508201599121
    7. '.print' → logprob: -22.37508201599121
    8. '       ' → logprob: -22.75008201599121
    9. 'println' → logprob: -22.87508201599121
    10. '``' → logprob: -23.37508201599121

Token 767: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.002216392196714878
    2. '(f' → logprob: -6.252216339111328
    3. '(' → logprob: -9.002216339111328
    4. '(abs' → logprob: -9.377216339111328
    5. '(max' → logprob: -10.252216339111328
    6. 's' → logprob: -10.252216339111328
    7. '(-' → logprob: -12.377216339111328
    8. 'f' → logprob: -13.502216339111328
    9. 'max' → logprob: -13.752216339111328
    10. 'abs' → logprob: -14.002216339111328

Token 768: 'avings' (ID: 55868)
  Prédit: 'avings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avings' → logprob: -0.0001717166742309928
    2. 'av' → logprob: -9.625171661376953
    3. 'aved' → logprob: -10.000171661376953
    4. '{' → logprob: -11.000171661376953
    5. 'v' → logprob: -12.250171661376953
    6. '(s' → logprob: -12.625171661376953
    7. ' savings' → logprob: -12.875171661376953
    8. 'aving' → logprob: -13.125171661376953
    9. 's' → logprob: -13.250171661376953
    10. 'ave' → logprob: -13.250171661376953

Token 769: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00045605594641529024
    2. '())' → logprob: -7.750455856323242
    3. '()' → logprob: -10.625455856323242
    4. ' )' → logprob: -15.000455856323242
    5. ')
' → logprob: -15.375455856323242
    6. ')`' → logprob: -15.875455856323242
    7. '(' → logprob: -16.000455856323242
    8. '   ' → logprob: -16.125455856323242
    9. '))' → logprob: -16.375455856323242
    10. '       ' → logprob: -17.125455856323242

Token 770: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00011200665176147595
    2. 'calculator' → logprob: -9.75011157989502
    3. '```' → logprob: -10.00011157989502
    4. ' if' → logprob: -12.12511157989502
    5. '#' → logprob: -13.87511157989502
    6. 'Calculator' → logprob: -14.62511157989502
    7. 'calc' → logprob: -14.75011157989502
    8. 'input' → logprob: -15.37511157989502
    9. '
' → logprob: -15.62511157989502
    10. 'cal' → logprob: -15.87511157989502

Token 771: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -5.991464786347933e-05
    2. '_main' → logprob: -10.500060081481934
    3. 'main' → logprob: -11.125060081481934
    4. ' run' → logprob: -11.125060081481934
    5. '_' → logprob: -13.625060081481934
    6. ' _' → logprob: -14.500060081481934
    7. ' process' → logprob: -15.250060081481934
    8. '	main' → logprob: -15.375060081481934
    9. ' __' → logprob: -16.000059127807617
    10. ' test' → logprob: -16.500059127807617

Token 772: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.4617256056226324e-05
    2. '():
' → logprob: -11.875014305114746
    3. ' ():' → logprob: -11.875014305114746
    4. '()' → logprob: -14.875014305114746
    5. '():
' → logprob: -16.250015258789062
    6. '_' → logprob: -16.625015258789062
    7. '()>' → logprob: -18.500015258789062
    8. '(' → logprob: -19.125015258789062
    9. '():

' → logprob: -19.125015258789062
    10. '().' → logprob: -19.500015258789062

Token 773: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004285195842385292
    2. 'calculator' → logprob: -5.7542853355407715
    3. '	cal' → logprob: -7.6292853355407715
    4. 'cal' → logprob: -7.7542853355407715
    5. '(cal' → logprob: -9.004284858703613
    6. 'calc' → logprob: -10.379284858703613
    7. '_cal' → logprob: -11.504284858703613
    8. '   ' → logprob: -12.004284858703613
    9. ' calculator' → logprob: -12.629284858703613
    10. '```' → logprob: -12.754284858703613

Token 774: ' calculator' (ID: 44484)
  Prédit: 'calculator'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calculator' (adapté à ' calculator') → logprob: -0.007638805545866489
    2. 'calc' → logprob: -5.382638931274414
    3. ' calculator' → logprob: -6.007638931274414
    4. '   ' → logprob: -7.632638931274414
    5. 'cal' → logprob: -9.882638931274414
    6. ' calc' → logprob: -11.257638931274414
    7. 'calcul' → logprob: -13.007638931274414
    8. 'Calculator' → logprob: -14.007638931274414
    9. '	cal' → logprob: -14.007638931274414
    10. 'c' → logprob: -14.632638931274414

Token 775: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889121770858765
    2. '=' → logprob: -2.5788912773132324
    3. '()' → logprob: -13.953890800476074
    4. '   ' → logprob: -15.078890800476074
    5. ')' → logprob: -16.32889175415039
    6. '	' → logprob: -16.95389175415039
    7. ' ' → logprob: -16.95389175415039
    8. ' =
' → logprob: -17.45389175415039
    9. ' =
' → logprob: -17.45389175415039
    10. '=create' → logprob: -17.57889175415039

Token 776: ' Water' (ID: 12303)
  Prédit: 'Water'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Water' → logprob: -0.0004306692280806601
    2. ' Water' → logprob: -7.750430583953857
    3. ' water' → logprob: -25.125431060791016
    4. 'Wat' → logprob: -27.000431060791016
    5. ' ' → logprob: -27.375431060791016
    6. '_water' → logprob: -27.625431060791016
    7. ' ' → logprob: -27.750431060791016
    8. 'W' → logprob: -27.875431060791016
    9. 'water' → logprob: -28.000431060791016
    10. '水' → logprob: -29.250431060791016

Token 777: 'Charge' (ID: 46218)
  Prédit: 'Charge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Charge' → logprob: 0.0
    2. '_charge' → logprob: -18.625
    3. 'charge' → logprob: -19.25
    4. ' Charge' → logprob: -19.25
    5. 'Charg' → logprob: -20.625
    6. 'Charges' → logprob: -20.75
    7. 'Change' → logprob: -21.125
    8. 'Calculate' → logprob: -22.375
    9. 'Charging' → logprob: -22.625
    10. 'Credit' → logprob: -22.75

Token 778: 'Calculator' (ID: 50159)
  Prédit: 'Calculator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Calculator' → logprob: -1.9361264946837764e-07
    2. 'calculator' → logprob: -16.0
    3. 'Water' → logprob: -18.75
    4. 'culator' → logprob: -19.875
    5. 'Cal' → logprob: -20.75
    6. 'cal' → logprob: -21.0
    7. ' Calculator' → logprob: -21.5
    8. 'Calc' → logprob: -21.75
    9. 'Generator' → logprob: -21.75
    10. 'Calculate' → logprob: -22.0

Token 779: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14404453337192535
    2. '
' → logprob: -2.2690446376800537
    3. 'input' → logprob: -4.144044399261475
    4. 'handler' → logprob: -4.519044399261475
    5. 'ih' → logprob: -5.769044399261475
    6. '    
' → logprob: -8.394044876098633
    7. '
' → logprob: -8.519044876098633
    8. ' ih' → logprob: -8.644044876098633
    9. 'Input' → logprob: -9.144044876098633
    10. ' input' → logprob: -9.769044876098633

Token 780: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.037549275904893875
    2. 'input' → logprob: -3.7875492572784424
    3. 'handler' → logprob: -5.1625494956970215
    4. '
' → logprob: -5.4125494956970215
    5. ' input' → logprob: -6.1625494956970215
    6. 'ih' → logprob: -7.1625494956970215
    7. 'Input' → logprob: -7.2875494956970215
    8. ' ih' → logprob: -8.537549018859863
    9. '    
' → logprob: -9.537549018859863
    10. ' handler' → logprob: -9.662549018859863

Token 781: ' handler' (ID: 13310)
  Prédit: 'handler'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'handler' (adapté à ' handler') → logprob: -0.006724249105900526
    2. 'input' → logprob: -5.0067243576049805
    3. 'ih' → logprob: -12.50672435760498
    4. 'Input' → logprob: -12.88172435760498
    5. ' handler' → logprob: -13.00672435760498
    6. 'handle' → logprob: -16.256723403930664
    7. ' input' → logprob: -16.506723403930664
    8. '   ' → logprob: -16.506723403930664
    9. '
' → logprob: -16.881723403930664
    10. 'import' → logprob: -17.631723403930664

Token 782: ' =' (ID: 314)
  Prédit: '.process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.process' → logprob: -0.1148255318403244
    2. '.' → logprob: -3.114825487136841
    3. '.handle' → logprob: -3.114825487136841
    4. '.cal' → logprob: -4.36482572555542
    5. '(cal' → logprob: -6.23982572555542
    6. '=' → logprob: -6.48982572555542
    7. '.calculate' → logprob: -6.73982572555542
    8. ' =' → logprob: -6.86482572555542
    9. '.handler' → logprob: -7.61482572555542
    10. '(process' → logprob: -8.114825248718262

Token 783: ' Input' (ID: 10090)
  Prédit: ' Input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Input' → logprob: -0.16022412478923798
    2. 'Input' → logprob: -1.9102240800857544
    3. '	Input' → logprob: -16.91022491455078
    4. ' input' → logprob: -19.41022491455078
    5. '_Input' → logprob: -19.53522491455078
    6. '_input' → logprob: -19.91022491455078
    7. '<Input' → logprob: -20.28522491455078
    8. '\Input' → logprob: -21.16022491455078
    9. '(Input' → logprob: -22.78522491455078
    10. '.Input' → logprob: -22.91022491455078

Token 784: 'Handler' (ID: 4139)
  Prédit: 'Handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: 0.0
    2. 'handler' → logprob: -18.125
    3. '_Handler' → logprob: -20.125
    4. 'Handle' → logprob: -20.625
    5. 'andler' → logprob: -21.125
    6. ' Handler' → logprob: -21.375
    7. '_HANDLER' → logprob: -22.0
    8. '_handler' → logprob: -22.25
    9. '.Handler' → logprob: -23.375
    10. 'Hand' → logprob: -23.625

Token 785: '(cal' (ID: 92785)
  Prédit: '(cal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cal' → logprob: -9.253090865968261e-06
    2. '(calc' → logprob: -11.875009536743164
    3. '(c' → logprob: -13.875009536743164
    4. 'calculator' → logprob: -14.375009536743164
    5. '(' → logprob: -14.750009536743164
    6. '   ' → logprob: -16.000009536743164
    7. '(car' → logprob: -16.000009536743164
    8. 'cal' → logprob: -16.750009536743164
    9. '(
' → logprob: -17.500009536743164
    10. '(calendar' → logprob: -17.500009536743164

Token 786: 'culator' (ID: 23033)
  Prédit: 'culator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'culator' → logprob: -0.007024850230664015
    2. 'ulator' → logprob: -5.007024765014648
    3. 'calculator' → logprob: -8.132024765014648
    4. 'cul' → logprob: -12.382024765014648
    5. 'ator' → logprob: -12.507024765014648
    6. 'c' → logprob: -12.507024765014648
    7. 'lator' → logprob: -13.132024765014648
    8. 'ac' → logprob: -14.882024765014648
    9. '   ' → logprob: -15.007024765014648
    10. 'cal' → logprob: -15.257024765014648

Token 787: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21638739109039307
    2. ')
' → logprob: -1.716387391090393
    3. '   ' → logprob: -4.2163872718811035
    4. 'handler' → logprob: -10.466387748718262
    5. ')
' → logprob: -10.716387748718262
    6. ' ' → logprob: -11.216387748718262
    7. '()' → logprob: -11.341387748718262
    8. '()
' → logprob: -11.591387748718262
    9. '())
' → logprob: -11.716387748718262
    10. '(handler' → logprob: -12.216387748718262

Token 788: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.062422823160886765
    2. 'handler' → logprob: -2.812422752380371
    3. '
' → logprob: -7.812422752380371
    4. ' handler' → logprob: -10.687422752380371
    5. '	handler' → logprob: -10.937422752380371
    6. '    
' → logprob: -11.687422752380371
    7. '
' → logprob: -14.812422752380371
    8. '(handler' → logprob: -14.937422752380371
    9. '```' → logprob: -15.437422752380371
    10. 'handlers' → logprob: -15.812422752380371

Token 789: ' handler' (ID: 13310)
  Prédit: 'handler'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'handler' (adapté à ' handler') → logprob: -4.320199877838604e-07
    2. ' handler' → logprob: -15.0
    3. '	handler' → logprob: -19.75
    4. '   ' → logprob: -20.5
    5. '.handler' → logprob: -22.75
    6. 'handle' → logprob: -24.125
    7. '(handler' → logprob: -24.25
    8. 'Handler' → logprob: -24.375
    9. 'handlers' → logprob: -25.0
    10. '_handler' → logprob: -25.375

Token 790: '.process' (ID: 28604)
  Prédit: '.process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.process' → logprob: -2.7729658540920354e-05
    2. '.' → logprob: -10.500027656555176
    3. 'process' → logprob: -15.625027656555176
    4. '.handle' → logprob: -17.250028610229492
    5. '.run' → logprob: -17.500028610229492
    6. '.start' → logprob: -19.750028610229492
    7. '.perform' → logprob: -20.375028610229492
    8. '.pro' → logprob: -20.500028610229492
    9. '	process' → logprob: -20.500028610229492
    10. ' .' → logprob: -21.000028610229492

Token 791: '()


' (ID: 29771)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.014694477431476116
    2. '()
' → logprob: -4.264694690704346
    3. 'if' → logprob: -8.389694213867188
    4. '()

' → logprob: -8.514694213867188
    5. '<|end|>' → logprob: -9.889694213867188
    6. '()\' → logprob: -11.139694213867188
    7. '(
' → logprob: -11.139694213867188
    8. '
' → logprob: -12.014694213867188
    9. '()%' → logprob: -12.139694213867188
    10. '```' → logprob: -12.764694213867188

Token 792: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00026169343618676066
    2. '```' → logprob: -8.250261306762695
    3. ' if' → logprob: -15.125261306762695
    4. '``' → logprob: -17.000261306762695
    5. '
' → logprob: -18.000261306762695
    6. '    
' → logprob: -18.625261306762695
    7. 'main' → logprob: -19.125261306762695
    8. '#if' → logprob: -19.875261306762695
    9. '  
' → logprob: -20.125261306762695
    10. '	if' → logprob: -20.250261306762695

Token 793: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.17977041006088257
    2. '__' → logprob: -1.8047704696655273
    3. 'name' → logprob: -11.179770469665527
    4. '_name' → logprob: -12.179770469665527
    5. '___' → logprob: -13.179770469665527
    6. ' ' → logprob: -13.929770469665527
    7. '_' → logprob: -14.179770469665527
    8. ' name' → logprob: -14.179770469665527
    9. ' ' → logprob: -14.429770469665527
    10. '​' → logprob: -14.554770469665527

Token 794: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.001281779957935214
    2. '==' → logprob: -6.75128173828125
    3. ' ==' → logprob: -9.25128173828125
    4. 'name' → logprob: -12.62628173828125
    5. '__.__' → logprob: -12.75128173828125
    6. '=="' → logprob: -13.12628173828125
    7. '=='' → logprob: -13.25128173828125
    8. ' __' → logprob: -13.25128173828125
    9. '__.' → logprob: -14.12628173828125
    10. '___' → logprob: -14.37628173828125

Token 795: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -3.976922744186595e-05
    2. '==' → logprob: -10.250040054321289
    3. '__.__' → logprob: -12.750040054321289
    4. '```' → logprob: -14.750040054321289
    5. ' ==' → logprob: -14.875040054321289
    6. '____' → logprob: -15.750040054321289
    7. '___' → logprob: -16.25004005432129
    8. '__('' → logprob: -16.37504005432129
    9. '__.' → logprob: -16.37504005432129
    10. '__
' → logprob: -16.62504005432129

Token 796: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7086562514305115
    2. '__' → logprob: -0.7086562514305115
    3. ' ==' → logprob: -4.208656311035156
    4. '=="' → logprob: -7.708656311035156
    5. '=='' → logprob: -9.708656311035156
    6. '===' → logprob: -12.458656311035156
    7. '=' → logprob: -12.583656311035156
    8. '___' → logprob: -13.333656311035156
    9. '==
' → logprob: -13.708656311035156
    10. '_' → logprob: -14.208656311035156

Token 797: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.12693609297275543
    2. ''' → logprob: -2.126936197280884
    3. '__' → logprob: -11.876935958862305
    4. ' "__' → logprob: -14.251935958862305
    5. ''"' → logprob: -15.626935958862305
    6. ' '__' → logprob: -16.376935958862305
    7. '"'' → logprob: -16.501935958862305
    8. '"name' → logprob: -17.376935958862305
    9. ''name' → logprob: -18.251935958862305
    10. '   ' → logprob: -18.751935958862305

Token 798: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.5765817761421204
    2. '__' → logprob: -0.8265817761421204
    3. '"' → logprob: -7.826581954956055
    4. 'name' → logprob: -8.576581954956055
    5. ''' → logprob: -10.076581954956055
    6. '_main' → logprob: -11.826581954956055
    7. '__":
' → logprob: -13.326581954956055
    8. ' main' → logprob: -14.201581954956055
    9. '==' → logprob: -14.826581954956055
    10. '"name' → logprob: -14.951581954956055

Token 799: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.5762135982513428
    2. '__' → logprob: -0.8262135982513428
    3. '__':
' → logprob: -8.326213836669922
    4. '__.' → logprob: -11.326213836669922
    5. '__["' → logprob: -11.826213836669922
    6. '__
' → logprob: -11.951213836669922
    7. '__.__' → logprob: -12.951213836669922
    8. '__
' → logprob: -13.451213836669922
    9. '__:' → logprob: -13.951213836669922
    10. '__("' → logprob: -14.451213836669922

Token 800: '   ' (ID: 271)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2287282943725586
    2. 'main' → logprob: -1.6037282943725586
    3. '"' → logprob: -6.103728294372559
    4. ' main' → logprob: -7.478728294372559
    5. ''' → logprob: -8.103728294372559
    6. ' __' → logprob: -9.478728294372559
    7. '   ' → logprob: -9.728728294372559
    8. ' ' → logprob: -10.978728294372559
    9. '_main' → logprob: -11.353728294372559
    10. '	main' → logprob: -11.603728294372559

Token 801: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -17.0
    3. '	main' → logprob: -21.0
    4. '   ' → logprob: -24.25
    5. '_main' → logprob: -25.125
    6. '.main' → logprob: -25.5
    7. '(main' → logprob: -27.125
    8. 'mai' → logprob: -28.375
    9. '
' → logprob: -28.875
    10. 'import' → logprob: -28.875

Token 802: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 800
Tokens correctement prédits (1ère position, stricte): 371
Tokens correctement prédits (1ère position, avec adaptation): 425
Tokens correctement prédits (top 10): 684
Précision stricte (1ère position): 46.38%
Précision adaptée (1ère position): 53.12%
Précision (top 10): 85.50%
================================================================================
