================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:11:22
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
graph = {}

for _ in range(n):
    data = input().split()
    r = int(data[0])
    k = int(data[1])
    neighbors = list(map(int, data[2:2+k]))
    graph[r] = neighbors

p = int(input())

for _ in range(p):
    s, d, v = map(int, input().split())
    from collections import deque
    queue = deque()
    queue.append((s, 1))  # (current router, path length)
    visited = {s: 1}
    found = False
    while queue:
        current, dist = queue.popleft()
        if current == d:
            # les "dist" compte les routeurs traversés, TTL doit au moins être dist
            if v >= dist:
                print(dist)
            else:
                print("NA")
            found = True
            break
        if current in graph:
            for nxt in graph[current]:
                if nxt not in visited:
                    visited[nxt] = dist + 1
                    queue.append((nxt, dist + 1))
    if not found:
        print("NA")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -5.7530574849806726e-05
    2. ''' → logprob: -10.750057220458984
    3. '('' → logprob: -11.125057220458984
    4. '(
' → logprob: -11.750057220458984
    5. '(n' → logprob: -13.000057220458984
    6. '```' → logprob: -13.125057220458984
    7. '("("' → logprob: -13.125057220458984
    8. '()' → logprob: -13.500057220458984
    9. '`' → logprob: -13.500057220458984
    10. '[' → logprob: -14.125057220458984

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0733630508184433
    2. ')' → logprob: -2.8233630657196045
    3. '()' → logprob: -4.698362827301025
    4. '())' → logprob: -6.948362827301025
    5. '```' → logprob: -8.198363304138184
    6. '(
' → logprob: -8.448363304138184
    7. '('' → logprob: -8.948363304138184
    8. '(()' → logprob: -9.073363304138184
    9. '`' → logprob: -9.198363304138184
    10. '("("' → logprob: -9.698363304138184

Token 5: 'graph' (ID: 7978)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9191706776618958
    2. 'i' → logprob: -1.169170618057251
    3. 'for' → logprob: -1.669170618057251
    4. 's' → logprob: -3.169170618057251
    5. '*' → logprob: -4.66917085647583
    6. ')' → logprob: -4.91917085647583
    7. 'x' → logprob: -5.04417085647583
    8. '#' → logprob: -5.16917085647583
    9. '`' → logprob: -5.16917085647583
    10. 'a' → logprob: -5.54417085647583

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0017006490379571915
    2. '.' → logprob: -7.1267008781433105
    3. ')' → logprob: -8.001700401306152
    4. '[]' → logprob: -8.376700401306152
    5. '[n' → logprob: -9.126700401306152
    6. '[
' → logprob: -10.376700401306152
    7. '\[' → logprob: -10.376700401306152
    8. ' =' → logprob: -10.626700401306152
    9. '_' → logprob: -10.876700401306152
    10. '['' → logprob: -10.876700401306152

Token 7: ' {}

' (ID: 21724)
  Prédit: ' {}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' {}' → logprob: -0.48676788806915283
    2. '{}' → logprob: -0.9867678880691528
    3. ' []' → logprob: -4.861767768859863
    4. '[' → logprob: -6.611767768859863
    5. '[]' → logprob: -6.736767768859863
    6. ' [[]' → logprob: -6.736767768859863
    7. ' defaultdict' → logprob: -7.611767768859863
    8. ' [' → logprob: -8.361767768859863
    9. ' {' → logprob: -8.611767768859863
    10. '{' → logprob: -8.986767768859863

Token 8: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.2723104848410003e-05
    2. '```' → logprob: -11.000022888183594
    3. ' for' → logprob: -12.250022888183594
    4. 'f' → logprob: -14.375022888183594
    5. '``' → logprob: -15.125022888183594
    6. '
' → logprob: -15.500022888183594
    7. '`' → logprob: -16.125022888183594
    8. 'n' → logprob: -17.375022888183594
    9. 'fo' → logprob: -18.125022888183594
    10. 'i' → logprob: -18.250022888183594

Token 9: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4816814363002777
    2. ' i' → logprob: -0.9816814661026001
    3. ' node' → logprob: -5.2316813468933105
    4. 'i' → logprob: -6.6066813468933105
    5. ' _' → logprob: -7.7316813468933105
    6. '  ' → logprob: -7.9816813468933105
    7. '_' → logprob: -10.106681823730469
    8. ' v' → logprob: -11.231681823730469
    9. 'node' → logprob: -11.606681823730469
    10. '   ' → logprob: -12.106681823730469

Token 10: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10200707614421844
    2. 'in' → logprob: -2.3520071506500244
    3. ' ' → logprob: -6.727006912231445
    4. ' i' → logprob: -8.227006912231445
    5. 'i' → logprob: -8.977006912231445
    6. '  ' → logprob: -8.977006912231445
    7. 'n' → logprob: -10.477006912231445
    8. ' n' → logprob: -11.477006912231445
    9. '	in' → logprob: -11.852006912231445
    10. '   ' → logprob: -12.102006912231445

Token 11: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12692883610725403
    2. ' range' → logprob: -2.1269288063049316
    3. '	range' → logprob: -15.62692928314209
    4. ' ' → logprob: -16.251928329467773
    5. '```' → logprob: -16.376928329467773
    6. 'rang' → logprob: -16.376928329467773
    7. '_range' → logprob: -16.751928329467773
    8. '(range' → logprob: -16.751928329467773
    9. 'ran' → logprob: -17.376928329467773
    10. 'n' → logprob: -17.376928329467773

Token 12: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11201094090938568
    2. ' (' → logprob: -2.487010955810547
    3. '(n' → logprob: -4.112010955810547
    4. ' ' → logprob: -5.112010955810547
    5. ' n' → logprob: -8.612010955810547
    6. '(range' → logprob: -9.862010955810547
    7. ' )' → logprob: -10.237010955810547
    8. '  ' → logprob: -10.362010955810547
    9. '(space' → logprob: -10.362010955810547
    10. 'n' → logprob: -11.362010955810547

Token 13: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014284208416938782
    2. ')' → logprob: -4.264284133911133
    3. ' ):' → logprob: -9.764284133911133
    4. ':' → logprob: -10.514284133911133
    5. '):
' → logprob: -10.889284133911133
    6. ' )' → logprob: -11.764284133911133
    7. '+' → logprob: -12.514284133911133
    8. ',' → logprob: -14.014284133911133
    9. '```' → logprob: -14.014284133911133
    10. '   ' → logprob: -14.264284133911133

Token 14: '   ' (ID: 271)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.9324766397476196
    2. '   ' → logprob: -1.6824766397476196
    3. '     
' → logprob: -2.30747652053833
    4. ' ' → logprob: -2.43247652053833
    5. ' graph' → logprob: -2.55747652053833
    6. '    
' → logprob: -3.43247652053833
    7. ' line' → logprob: -3.43247652053833
    8. ' input' → logprob: -3.68247652053833
    9. '```' → logprob: -4.43247652053833
    10. 'graph' → logprob: -4.80747652053833

Token 15: ' data' (ID: 1238)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.42758962512016296
    2. ' node' → logprob: -1.4275896549224854
    3. 'line' → logprob: -2.8025896549224854
    4. 'node' → logprob: -3.4275896549224854
    5. ' city' → logprob: -5.052589416503906
    6. '   ' → logprob: -6.177589416503906
    7. 'name' → logprob: -6.552589416503906
    8. 'city' → logprob: -6.677589416503906
    9. ' name' → logprob: -7.427589416503906
    10. ' vertex' → logprob: -8.052589416503906

Token 16: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.030027003958821297
    2. '=' → logprob: -3.530026912689209
    3. '[' → logprob: -8.530027389526367
    4. ' ' → logprob: -10.780027389526367
    5. '.' → logprob: -11.655027389526367
    6. '  ' → logprob: -11.655027389526367
    7. '   ' → logprob: -12.030027389526367
    8. '[]' → logprob: -12.155027389526367
    9. '['' → logprob: -12.530027389526367
    10. ']' → logprob: -12.530027389526367

Token 17: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.6445026397705078
    2. 'input' → logprob: -0.7695026397705078
    3. ' list' → logprob: -5.019502639770508
    4. 'list' → logprob: -5.269502639770508
    5. ' ' → logprob: -11.144502639770508
    6. '=input' → logprob: -11.144502639770508
    7. '[input' → logprob: -11.519502639770508
    8. 'data' → logprob: -11.769502639770508
    9. ' data' → logprob: -12.019502639770508
    10. 'int' → logprob: -12.644502639770508

Token 18: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07574614882469177
    2. '(' → logprob: -2.8257460594177246
    3. '().' → logprob: -4.325746059417725
    4. '('' → logprob: -8.200746536254883
    5. '("' → logprob: -9.700746536254883
    6. '("("' → logprob: -10.575746536254883
    7. '())' → logprob: -10.700746536254883
    8. ')' → logprob: -10.950746536254883
    9. '.' → logprob: -11.075746536254883
    10. '("")' → logprob: -11.700746536254883

Token 19: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0003398726985324174
    2. 'strip' → logprob: -8.00033950805664
    3. 'rstrip' → logprob: -12.50033950805664
    4. ' split' → logprob: -15.12533950805664
    5. 'sp' → logprob: -15.62533950805664
    6. 'spl' → logprob: -15.87533950805664
    7. '(split' → logprob: -16.00033950805664
    8. 'plit' → logprob: -17.12533950805664
    9. '```' → logprob: -17.75033950805664
    10. 'replace' → logprob: -18.25033950805664

Token 20: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5466318130493164
    2. '('' → logprob: -1.0466318130493164
    3. '(' → logprob: -2.7966318130493164
    4. '("("' → logprob: -4.796631813049316
    5. '("' → logprob: -7.921631813049316
    6. '(`' → logprob: -9.546631813049316
    7. '```' → logprob: -9.921631813049316
    8. '())' → logprob: -10.671631813049316
    9. '((' → logprob: -10.671631813049316
    10. '`()' → logprob: -10.796631813049316

Token 21: '   ' (ID: 271)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.9164853692054749
    2. ' node' → logprob: -1.41648530960083
    3. '   ' → logprob: -1.54148530960083
    4. 'graph' → logprob: -2.91648530960083
    5. 'node' → logprob: -4.16648530960083
    6. ')' → logprob: -4.91648530960083
    7. ' if' → logprob: -5.04148530960083
    8. '    ' → logprob: -5.16648530960083
    9. ' ' → logprob: -5.16648530960083
    10. ' name' → logprob: -5.16648530960083

Token 22: ' r' (ID: 428)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.34352177381515503
    2. ' node' → logprob: -2.2185218334198
    3. 'u' → logprob: -2.9685218334198
    4. 'city' → logprob: -2.9685218334198
    5. 'name' → logprob: -3.2185218334198
    6. 'vertex' → logprob: -4.468521595001221
    7. ' city' → logprob: -4.968521595001221
    8. 'graph' → logprob: -5.093521595001221
    9. 'key' → logprob: -6.218521595001221
    10. 'user' → logprob: -6.218521595001221

Token 23: ' =' (ID: 314)
  Prédit: 'oom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'oom' → logprob: -0.6463361382484436
    2. 'oot' → logprob: -2.271336078643799
    3. 'oute' → logprob: -2.271336078643799
    4. 'o' → logprob: -3.021336078643799
    5. 'ef' → logprob: -3.271336078643799
    6. 'a' → logprob: -3.646336078643799
    7. 'oad' → logprob: -3.896336078643799
    8. 'outer' → logprob: -4.021336078643799
    9. 'eg' → logprob: -4.146336078643799
    10. '[' → logprob: -4.521336078643799

Token 24: ' int' (ID: 677)
  Prédit: ' data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.7880660891532898
    2. 'data' → logprob: -1.0380661487579346
    3. ' int' → logprob: -2.2880661487579346
    4. 'int' → logprob: -2.4130661487579346
    5. ' ' → logprob: -9.288065910339355
    6. '(data' → logprob: -12.288065910339355
    7. 'r' → logprob: -12.663065910339355
    8. ' dat' → logprob: -12.788065910339355
    9. 'a' → logprob: -13.100565910339355
    10. '  ' → logprob: -13.163065910339355

Token 25: '(data' (ID: 4819)
  Prédit: '(data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -0.040255628526210785
    2. '(' → logprob: -3.290255546569824
    3. ' (' → logprob: -6.290255546569824
    4. 'data' → logprob: -8.040255546569824
    5. ' data' → logprob: -10.790255546569824
    6. ' ' → logprob: -11.915255546569824
    7. '('' → logprob: -13.040255546569824
    8. '(r' → logprob: -13.415255546569824
    9. '(
' → logprob: -13.540255546569824
    10. ')' → logprob: -14.915255546569824

Token 26: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0802738870552275e-05
    2. '[-' → logprob: -11.62501049041748
    3. ')' → logprob: -14.25001049041748
    4. '(' → logprob: -14.25001049041748
    5. '1' → logprob: -15.62501049041748
    6. ' [' → logprob: -16.375011444091797
    7. '```' → logprob: -16.750011444091797
    8. '0' → logprob: -17.250011444091797
    9. '\[' → logprob: -17.375011444091797
    10. '[
' → logprob: -17.875011444091797

Token 27: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.026951966807246208
    2. '1' → logprob: -3.651952028274536
    3. '-' → logprob: -8.026951789855957
    4. '2' → logprob: -8.151951789855957
    5. ' ' → logprob: -11.026951789855957
    6. '3' → logprob: -11.276951789855957
    7. '```' → logprob: -13.026951789855957
    8. '4' → logprob: -13.651951789855957
    9. '   ' → logprob: -13.964451789855957
    10. '[' → logprob: -14.589451789855957

Token 28: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0008586966432631016
    2. ')' → logprob: -7.625858783721924
    3. '])
' → logprob: -8.625858306884766
    4. ']' → logprob: -9.000858306884766
    5. ' ])' → logprob: -10.500858306884766
    6. ''])' → logprob: -10.875858306884766
    7. '])-' → logprob: -12.500858306884766
    8. '[' → logprob: -12.750858306884766
    9. '],' → logprob: -13.125858306884766
    10. ')])' → logprob: -13.125858306884766

Token 29: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 30: ' k' (ID: 372)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.6334792375564575
    2. ' node' → logprob: -2.258479118347168
    3. 'v' → logprob: -3.383479118347168
    4. ' graph' → logprob: -3.508479118347168
    5. ' for' → logprob: -3.758479118347168
    6. ' r' → logprob: -3.758479118347168
    7. ' city' → logprob: -3.758479118347168
    8. ' if' → logprob: -3.883479118347168
    9. ' u' → logprob: -3.883479118347168
    10. ' name' → logprob: -4.008479118347168

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006002148147672415
    2. '=' → logprob: -5.131001949310303
    3. ' ' → logprob: -9.631002426147461
    4. '    ' → logprob: -13.256002426147461
    5. '  ' → logprob: -13.381002426147461
    6. '   ' → logprob: -13.631002426147461
    7. '	' → logprob: -14.131002426147461
    8. 'ernel' → logprob: -14.756002426147461
    9. '_' → logprob: -15.006002426147461
    10. 'ernels' → logprob: -15.131002426147461

Token 32: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.08904590457677841
    2. ' int' → logprob: -2.464046001434326
    3. 'data' → logprob: -10.339045524597168
    4. 'len' → logprob: -10.714045524597168
    5. ' ' → logprob: -11.464045524597168
    6. '[int' → logprob: -11.589045524597168
    7. '(int' → logprob: -11.714045524597168
    8. ' data' → logprob: -11.839045524597168
    9. '   ' → logprob: -12.464045524597168
    10. '1' → logprob: -12.464045524597168

Token 33: '(data' (ID: 4819)
  Prédit: '(data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -0.00014585316239390522
    2. '(' → logprob: -9.00014591217041
    3. ' (' → logprob: -11.00014591217041
    4. '[data' → logprob: -12.62514591217041
    5. 'data' → logprob: -14.00014591217041
    6. '(input' → logprob: -14.75014591217041
    7. '(int' → logprob: -15.00014591217041
    8. '[' → logprob: -15.37514591217041
    9. ')' → logprob: -16.000144958496094
    10. '   ' → logprob: -16.000144958496094

Token 34: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0006691903108730912
    2. ')' → logprob: -7.625669002532959
    3. '-' → logprob: -9.625669479370117
    4. '+' → logprob: -10.250669479370117
    5. '1' → logprob: -10.250669479370117
    6. '[-' → logprob: -11.375669479370117
    7. '])' → logprob: -11.750669479370117
    8. '   ' → logprob: -12.125669479370117
    9. '(' → logprob: -12.250669479370117
    10. ']' → logprob: -13.500669479370117

Token 35: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003099599271081388
    2. '2' → logprob: -8.500309944152832
    3. '0' → logprob: -10.250309944152832
    4. ' ' → logprob: -10.375309944152832
    5. '])' → logprob: -11.250309944152832
    6. '3' → logprob: -11.687809944152832
    7. '-' → logprob: -12.437809944152832
    8. ']' → logprob: -12.875309944152832
    9. '   ' → logprob: -13.500309944152832
    10. '```' → logprob: -13.562809944152832

Token 36: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3173505365848541
    2. '])' → logprob: -1.3173505067825317
    3. ']' → logprob: -5.692350387573242
    4. ')]' → logprob: -8.567350387573242
    5. ')])' → logprob: -8.692350387573242
    6. ')
' → logprob: -9.317350387573242
    7. ' )' → logprob: -9.317350387573242
    8. '   ' → logprob: -9.942350387573242
    9. ' ])' → logprob: -10.067350387573242
    10. ''])' → logprob: -10.692350387573242

Token 37: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29731041193008423
    2. 'graph' → logprob: -1.9223103523254395
    3. 'for' → logprob: -3.2973103523254395
    4. ')' → logprob: -3.9223103523254395
    5. '    
' → logprob: -4.4223103523254395
    6. ' for' → logprob: -4.5473103523254395
    7. ' graph' → logprob: -4.6723103523254395
    8. '<|end|>' → logprob: -5.0473103523254395
    9. ' 
' → logprob: -5.9223103523254395
    10. '
' → logprob: -6.0473103523254395

Token 38: ' neighbors' (ID: 31655)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.5487649440765381
    2. ' graph' → logprob: -1.673764944076538
    3. '   ' → logprob: -1.923764944076538
    4. 'for' → logprob: -3.548764944076538
    5. ')' → logprob: -4.423765182495117
    6. ' for' → logprob: -4.548765182495117
    7. '<|end|>' → logprob: -4.673765182495117
    8. 'if' → logprob: -4.923765182495117
    9. ' if' → logprob: -5.298765182495117
    10. '	graph' → logprob: -5.298765182495117

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269986629486084
    2. '=' → logprob: -2.1269986629486084
    3. 's' → logprob: -11.251998901367188
    4. ')' → logprob: -11.251998901367188
    5. '[:]' → logprob: -11.251998901367188
    6. ':' → logprob: -11.751998901367188
    7. '[' → logprob: -11.876998901367188
    8. '.' → logprob: -12.001998901367188
    9. '.append' → logprob: -13.001998901367188
    10. '[]' → logprob: -13.751998901367188

Token 40: ' list' (ID: 1562)
  Prédit: ' data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.36051684617996216
    2. ' list' → logprob: -1.8605167865753174
    3. 'data' → logprob: -2.2355167865753174
    4. 'list' → logprob: -3.3605167865753174
    5. ' [' → logprob: -6.3605170249938965
    6. ' []' → logprob: -6.7355170249938965
    7. '[' → logprob: -7.2355170249938965
    8. ' set' → logprob: -7.3605170249938965
    9. '[]' → logprob: -7.7355170249938965
    10. 'set' → logprob: -7.8605170249938965

Token 41: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.01036777999252081
    2. '(data' → logprob: -4.6353678703308105
    3. '(' → logprob: -7.6353678703308105
    4. '(int' → logprob: -9.385367393493652
    5. '()' → logprob: -10.260367393493652
    6. '(range' → logprob: -12.635367393493652
    7. '(

' → logprob: -13.510367393493652
    8. '(graph' → logprob: -13.885367393493652
    9. '(
' → logprob: -14.010367393493652
    10. 'map' → logprob: -14.135367393493652

Token 42: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00011248346709180623
    2. '(' → logprob: -9.375112533569336
    3. 'int' → logprob: -10.750112533569336
    4. '(lambda' → logprob: -13.375112533569336
    5. '=int' → logprob: -13.875112533569336
    6. ' (' → logprob: -14.000112533569336
    7. '<int' → logprob: -14.125112533569336
    8. ',int' → logprob: -14.625112533569336
    9. ' int' → logprob: -14.875112533569336
    10. ')' → logprob: -15.250112533569336

Token 43: ',' (ID: 11)
  Prédit: ',data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',data' → logprob: -0.6231851577758789
    2. '(data' → logprob: -1.248185157775879
    3. ',' → logprob: -1.748185157775879
    4. ' ,' → logprob: -6.498185157775879
    5. ',input' → logprob: -7.873185157775879
    6. ',(' → logprob: -8.248185157775879
    7. '(' → logprob: -8.498185157775879
    8. ' (' → logprob: -8.498185157775879
    9. '(input' → logprob: -11.123185157775879
    10. '   ' → logprob: -11.373185157775879

Token 44: ' data' (ID: 1238)
  Prédit: ' data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.16034628450870514
    2. 'data' → logprob: -1.910346269607544
    3. ' input' → logprob: -9.410346031188965
    4. 'input' → logprob: -10.660346031188965
    5. '(data' → logprob: -12.160346031188965
    6. ')' → logprob: -12.910346031188965
    7. ')data' → logprob: -12.910346031188965
    8. '	data' → logprob: -13.160346031188965
    9. ' ' → logprob: -14.160346031188965
    10. ',data' → logprob: -14.285346031188965

Token 45: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0001170132018160075
    2. '[data' → logprob: -9.625117301940918
    3. '   ' → logprob: -11.250117301940918
    4. '))' → logprob: -12.250117301940918
    5. 'data' → logprob: -12.375117301940918
    6. ')' → logprob: -12.375117301940918
    7. '(' → logprob: -12.625117301940918
    8. '[]' → logprob: -12.625117301940918
    9. '```' → logprob: -13.125117301940918
    10. ' [' → logprob: -13.375117301940918

Token 46: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003087678924202919
    2. '3' → logprob: -8.375308990478516
    3. '[' → logprob: -10.125308990478516
    4. '   ' → logprob: -11.625308990478516
    5. ' ' → logprob: -11.750308990478516
    6. '1' → logprob: -12.000308990478516
    7. '```' → logprob: -12.375308990478516
    8. '4' → logprob: -12.875308990478516
    9. '(' → logprob: -13.250308990478516
    10. '])' → logprob: -13.875308990478516

Token 47: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3133346438407898
    2. ':]' → logprob: -1.3133347034454346
    3. ':],' → logprob: -10.813334465026855
    4. ':)' → logprob: -10.938334465026855
    5. ' :' → logprob: -11.563334465026855
    6. ']))' → logprob: -11.938334465026855
    7. ':].' → logprob: -11.938334465026855
    8. ']:' → logprob: -12.188334465026855
    9. ' :]' → logprob: -13.313334465026855
    10. ':-' → logprob: -14.063334465026855

Token 48: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.316755473613739
    2. ']))' → logprob: -1.3167555332183838
    3. 'k' → logprob: -6.191755294799805
    4. ']' → logprob: -7.816755294799805
    5. ' ' → logprob: -8.066755294799805
    6. '(' → logprob: -8.191755294799805
    7. 'r' → logprob: -8.441755294799805
    8. '   ' → logprob: -9.691755294799805
    9. '(r' → logprob: -10.441755294799805
    10. '])))' → logprob: -10.691755294799805

Token 49: '+k' (ID: 110434)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08966922760009766
    2. '+k' → logprob: -2.5896692276000977
    3. ' +' → logprob: -4.589669227600098
    4. '2' → logprob: -8.089669227600098
    5. '+r' → logprob: -8.589669227600098
    6. ' ' → logprob: -10.714669227600098
    7. '   ' → logprob: -10.714669227600098
    8. '+n' → logprob: -10.964669227600098
    9. '+m' → logprob: -12.339669227600098
    10. '＋' → logprob: -13.714669227600098

Token 50: ']))
' (ID: 24801)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.006122417747974396
    2. ']' → logprob: -5.131122589111328
    3. '])' → logprob: -9.381122589111328
    4. '))' → logprob: -10.506122589111328
    5. ')))' → logprob: -10.506122589111328
    6. ']))
' → logprob: -10.756122589111328
    7. ')' → logprob: -11.006122589111328
    8. '])))' → logprob: -12.381122589111328
    9. ')])' → logprob: -12.631122589111328
    10. ')]' → logprob: -12.756122589111328

Token 51: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006655337754637003
    2. 'graph' → logprob: -6.256655216217041
    3. '
' → logprob: -6.381655216217041
    4. '    
' → logprob: -7.131655216217041
    5. 'for' → logprob: -7.381655216217041
    6. ')' → logprob: -7.756655216217041
    7. '<|end|>' → logprob: -8.1316556930542
    8. ' for' → logprob: -8.3816556930542
    9. ' graph' → logprob: -8.6316556930542
    10. '```' → logprob: -9.0066556930542

Token 52: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.06976190209388733
    2. ')' → logprob: -3.6947619915008545
    3. '   ' → logprob: -4.069761753082275
    4. ' graph' → logprob: -4.319761753082275
    5. '
' → logprob: -5.194761753082275
    6. '	graph' → logprob: -5.694761753082275
    7. '\n' → logprob: -6.819761753082275
    8. ':' → logprob: -8.194762229919434
    9. ')
' → logprob: -8.194762229919434
    10. '(graph' → logprob: -8.194762229919434

Token 53: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.3133494555950165
    2. '[' → logprob: -1.3133494853973389
    3. '[n' → logprob: -10.188349723815918
    4. '.setdefault' → logprob: -11.813349723815918
    5. '[data' → logprob: -11.813349723815918
    6. '```' → logprob: -12.063349723815918
    7. '\[' → logprob: -12.313349723815918
    8. '[`' → logprob: -12.563349723815918
    9. '[g' → logprob: -12.938349723815918
    10. '[...]' → logprob: -12.938349723815918

Token 54: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009292102768085897
    2. ']=' → logprob: -7.000929355621338
    3. '])' → logprob: -11.75092887878418
    4. ' ]' → logprob: -12.00092887878418
    5. '[' → logprob: -12.87592887878418
    6. '=' → logprob: -15.12592887878418
    7. '']' → logprob: -16.25092887878418
    8. ')' → logprob: -16.25092887878418
    9. ')]' → logprob: -16.25092887878418
    10. '"]' → logprob: -16.50092887878418

Token 55: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001023162854835391
    2. '[' → logprob: -7.376023292541504
    3. ' =' → logprob: -7.876023292541504
    4. '.setdefault' → logprob: -12.626023292541504
    5. '[:]' → logprob: -12.626023292541504
    6. ']' → logprob: -12.876023292541504
    7. '=[' → logprob: -12.876023292541504
    8. '=[]' → logprob: -13.126023292541504
    9. ')' → logprob: -13.876023292541504
    10. ']=' → logprob: -15.001023292541504

Token 56: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.47411197423934937
    2. ' neighbors' → logprob: -0.9741119742393494
    3. 'ne' → logprob: -11.099111557006836
    4. 'neighbor' → logprob: -11.599111557006836
    5. '_neighbors' → logprob: -12.224111557006836
    6. ' neighbours' → logprob: -13.099111557006836
    7. 'Neighbors' → logprob: -14.474111557006836
    8. ' neighbor' → logprob: -14.599111557006836
    9. ' ' → logprob: -14.724111557006836
    10. '(ne' → logprob: -14.974111557006836

Token 57: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4141415059566498
    2. '\n' → logprob: -1.7891415357589722
    3. '
' → logprob: -2.5391414165496826
    4. 'n' → logprob: -4.164141654968262
    5. '<|end|>' → logprob: -4.289141654968262
    6. 'r' → logprob: -4.539141654968262
    7. '#' → logprob: -4.664141654968262
    8. '.' → logprob: -5.039141654968262
    9. ' ' → logprob: -5.164141654968262
    10. ')' → logprob: -5.289141654968262

Token 58: 'p' (ID: 79)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12804876267910004
    2. 'q' → logprob: -3.7530486583709717
    3. 'd' → logprob: -3.8780486583709717
    4. 'r' → logprob: -4.128048896789551
    5. 'u' → logprob: -4.253048896789551
    6. 't' → logprob: -4.878048896789551
    7. 'n' → logprob: -4.878048896789551
    8. 'print' → logprob: -5.253048896789551
    9. 'm' → logprob: -5.378048896789551
    10. '#' → logprob: -5.878048896789551

Token 59: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -7.195421494543552e-05
    2. 'rin' → logprob: -10.62507152557373
    3. 'print' → logprob: -11.75007152557373
    4. 'ri' → logprob: -11.87507152557373
    5. 'ar' → logprob: -12.75007152557373
    6. '[r' → logprob: -12.87507152557373
    7. ' r' → logprob: -13.00007152557373
    8. 'ath' → logprob: -13.00007152557373
    9. 'riv' → logprob: -13.50007152557373
    10. '_r' → logprob: -13.50007152557373

Token 60: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5535446405410767
    2. '[]' → logprob: -1.9285446405410767
    3. ' []' → logprob: -2.178544521331787
    4. ' int' → logprob: -2.553544521331787
    5. 'graph' → logprob: -3.803544521331787
    6. '0' → logprob: -3.928544521331787
    7. 'list' → logprob: -4.553544521331787
    8. '[int' → logprob: -4.553544521331787
    9. ' ' → logprob: -5.428544521331787
    10. ' list' → logprob: -5.678544521331787

Token 61: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.42886579036712646
    2. '(' → logprob: -1.0538657903671265
    3. '()' → logprob: -9.928865432739258
    4. 'input' → logprob: -10.303865432739258
    5. ' (' → logprob: -10.803865432739258
    6. '('' → logprob: -10.928865432739258
    7. '(in' → logprob: -11.303865432739258
    8. '(data' → logprob: -11.803865432739258
    9. '(int' → logprob: -12.303865432739258
    10. '((' → logprob: -12.553865432739258

Token 62: '())

' (ID: 27654)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.9391396641731262
    2. ')' → logprob: -1.1891396045684814
    3. '())' → logprob: -1.1891396045684814
    4. '()
' → logprob: -10.189139366149902
    5. '(' → logprob: -11.064139366149902
    6. '())
' → logprob: -11.814139366149902
    7. ' ())' → logprob: -13.314139366149902
    8. ' )' → logprob: -13.564139366149902
    9. '();)' → logprob: -13.564139366149902
    10. ')
' → logprob: -13.689139366149902

Token 63: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.28084298968315125
    2. 'q' → logprob: -2.9058430194854736
    3. 'result' → logprob: -3.4058430194854736
    4. 'd' → logprob: -3.4058430194854736
    5. 'f' → logprob: -4.0308427810668945
    6. 'p' → logprob: -4.1558427810668945
    7. 't' → logprob: -4.4058427810668945
    8. 'path' → logprob: -4.5308427810668945
    9. 'u' → logprob: -4.6558427810668945
    10. 'r' → logprob: -4.6558427810668945

Token 64: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.6226304769515991
    2. ' ' → logprob: -0.8726304769515991
    3. ' i' → logprob: -3.4976305961608887
    4. '_' → logprob: -4.247630596160889
    5. ' p' → logprob: -7.247630596160889
    6. ' node' → logprob: -8.37263011932373
    7. ' ‌' → logprob: -10.62263011932373
    8. '  ' → logprob: -11.24763011932373
    9. ' ▁' → logprob: -11.49763011932373
    10. 'i' → logprob: -11.87263011932373

Token 65: ' in' (ID: 306)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.47138750553131104
    2. ' in' → logprob: -1.346387505531311
    3. '_' → logprob: -2.4713873863220215
    4. ' p' → logprob: -4.4713873863220215
    5. ' _' → logprob: -4.8463873863220215
    6. '  ' → logprob: -5.2213873863220215
    7. ' i' → logprob: -5.7213873863220215
    8. 'in' → logprob: -6.0963873863220215
    9. ')' → logprob: -8.97138786315918
    10. ' range' → logprob: -8.97138786315918

Token 66: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.22587589919567108
    2. ' range' → logprob: -1.6008758544921875
    3. 'p' → logprob: -8.475875854492188
    4. 'graph' → logprob: -9.350875854492188
    5. '(range' → logprob: -9.600875854492188
    6. ' graph' → logprob: -10.100875854492188
    7. ' p' → logprob: -10.475875854492188
    8. '_' → logprob: -11.725875854492188
    9. '_range' → logprob: -12.100875854492188
    10. '	range' → logprob: -12.975875854492188

Token 67: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.4902372360229492
    2. '(' → logprob: -1.1152372360229492
    3. ' (' → logprob: -2.990237236022949
    4. ' p' → logprob: -4.740237236022949
    5. 'p' → logprob: -7.740237236022949
    6. ' ' → logprob: -8.74023723602295
    7. ')' → logprob: -9.99023723602295
    8. ' )' → logprob: -11.61523723602295
    9. '(n' → logprob: -11.74023723602295
    10. '()' → logprob: -12.36523723602295

Token 68: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006032008212059736
    2. ')' → logprob: -5.1310319900512695
    3. ':' → logprob: -10.00603199005127
    4. ' ):' → logprob: -10.25603199005127
    5. '):
' → logprob: -10.88103199005127
    6. ' )' → logprob: -13.50603199005127
    7. '   ' → logprob: -13.88103199005127
    8. '():' → logprob: -14.13103199005127
    9. ',' → logprob: -15.50603199005127
    10. ']:' → logprob: -15.75603199005127

Token 69: '   ' (ID: 271)
  Prédit: ' data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.09089672565460205
    2. '   ' → logprob: -2.8408966064453125
    3. 'data' → logprob: -4.2158966064453125
    4. ' query' → logprob: -5.3408966064453125
    5. ' line' → logprob: -6.0908966064453125
    6. ' s' → logprob: -6.3408966064453125
    7. '   ' → logprob: -7.3408966064453125
    8. '    ' → logprob: -7.4658966064453125
    9. ' parts' → logprob: -7.7158966064453125
    10. ' input' → logprob: -7.7158966064453125

Token 70: ' s' (ID: 265)
  Prédit: ' query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' query' → logprob: -0.6866617202758789
    2. ' path' → logprob: -2.311661720275879
    3. 'query' → logprob: -2.436661720275879
    4. ' data' → logprob: -3.186661720275879
    5. ' u' → logprob: -3.311661720275879
    6. ' s' → logprob: -3.311661720275879
    7. ' q' → logprob: -3.561661720275879
    8. ' line' → logprob: -3.936661720275879
    9. 'path' → logprob: -4.311661720275879
    10. ' start' → logprob: -4.311661720275879

Token 71: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13970130681991577
    2. ' ' → logprob: -2.3897013664245605
    3. ',' → logprob: -4.8897013664245605
    4. 'p' → logprob: -5.0147013664245605
    5. 't' → logprob: -5.2647013664245605
    6. '=' → logprob: -5.2647013664245605
    7. 'paces' → logprob: -5.7647013664245605
    8. ')' → logprob: -6.2647013664245605
    9. 'pace' → logprob: -6.5147013664245605
    10. ' ,' → logprob: -6.8897013664245605

Token 72: ' d' (ID: 272)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.14226865768432617
    2. 'd' → logprob: -2.267268657684326
    3. 'g' → logprob: -4.517268657684326
    4. 'e' → logprob: -4.642268657684326
    5. ' t' → logprob: -5.017268657684326
    6. ' d' → logprob: -6.892268657684326
    7. ' ' → logprob: -8.017269134521484
    8. ' e' → logprob: -9.392269134521484
    9. 'l' → logprob: -9.767269134521484
    10. ' g' → logprob: -9.892269134521484

Token 73: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740966260433197
    2. '=' → logprob: -0.9740966558456421
    3. ',' → logprob: -11.099096298217773
    4. '=input' → logprob: -12.974096298217773
    5. ' ' → logprob: -14.224096298217773
    6. ')' → logprob: -14.349096298217773
    7. '=int' → logprob: -15.599096298217773
    8. '=line' → logprob: -15.974096298217773
    9. ' =
' → logprob: -16.724096298217773
    10. '  ' → logprob: -16.849096298217773

Token 74: ' v' (ID: 323)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.0931600332260132
    2. 'l' → logprob: -1.2181600332260132
    3. ' t' → logprob: -2.5931601524353027
    4. ' =' → logprob: -2.5931601524353027
    5. 'c' → logprob: -3.0931601524353027
    6. ' l' → logprob: -3.2181601524353027
    7. '_' → logprob: -3.3431601524353027
    8. '=' → logprob: -3.8431601524353027
    9. '_=' → logprob: -4.218160152435303
    10. 'w' → logprob: -4.468160152435303

Token 75: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602490097284317
    2. '=' → logprob: -1.9102489948272705
    3. ',' → logprob: -11.160248756408691
    4. '=input' → logprob: -12.035248756408691
    5. ' ' → logprob: -13.285248756408691
    6. ')' → logprob: -14.160248756408691
    7. '  ' → logprob: -14.910248756408691
    8. '   ' → logprob: -15.035248756408691
    9. '=int' → logprob: -15.160248756408691
    10. 's' → logprob: -16.035249710083008

Token 76: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.10775387287139893
    2. 'map' → logprob: -2.6077537536621094
    3. ' input' → logprob: -3.7327537536621094
    4. 'input' → logprob: -5.482753753662109
    5. ' list' → logprob: -8.35775375366211
    6. ' ' → logprob: -9.73275375366211
    7. 'list' → logprob: -10.23275375366211
    8. '   ' → logprob: -11.98275375366211
    9. '[' → logprob: -12.10775375366211
    10. ' ' → logprob: -12.35775375366211

Token 77: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6360086798667908
    2. '(int' → logprob: -0.7610086798667908
    3. '(lambda' → logprob: -6.5110087394714355
    4. '(input' → logprob: -6.8860087394714355
    5. '("("' → logprob: -8.636008262634277
    6. '(str' → logprob: -9.261008262634277
    7. '<|end|>' → logprob: -9.261008262634277
    8. '(eval' → logprob: -9.386008262634277
    9. ' (' → logprob: -9.886008262634277
    10. '(tuple' → logprob: -10.011008262634277

Token 78: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.10015026479959488
    2. ',input' → logprob: -2.4751503467559814
    3. ',' → logprob: -5.475150108337402
    4. ')' → logprob: -5.725150108337402
    5. '(' → logprob: -6.600150108337402
    6. 'input' → logprob: -7.225150108337402
    7. '()' → logprob: -7.225150108337402
    8. ')(' → logprob: -7.475150108337402
    9. '(),' → logprob: -9.100150108337402
    10. '=input' → logprob: -9.225150108337402

Token 79: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.029823284596204758
    2. ' input' → logprob: -3.5298233032226562
    3. ')' → logprob: -10.029823303222656
    4. '(input' → logprob: -10.654823303222656
    5. '=input' → logprob: -13.154823303222656
    6. ',input' → logprob: -13.154823303222656
    7. '	input' → logprob: -14.654823303222656
    8. '_input' → logprob: -15.404823303222656
    9. '[input' → logprob: -15.529823303222656
    10. '   ' → logprob: -15.904823303222656

Token 80: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0008135587559081614
    2. '()' → logprob: -7.1258134841918945
    3. ' ().' → logprob: -12.500813484191895
    4. ')' → logprob: -12.750813484191895
    5. '(' → logprob: -13.625813484191895
    6. '())' → logprob: -14.500813484191895
    7. '()
' → logprob: -14.750813484191895
    8. '   ' → logprob: -16.50081443786621
    9. '()
' → logprob: -17.62581443786621
    10. ' ' → logprob: -17.75081443786621

Token 81: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00012761499965563416
    2. 'strip' → logprob: -9.000127792358398
    3. 'rstrip' → logprob: -13.250127792358398
    4. '(split' → logprob: -13.375127792358398
    5. ' split' → logprob: -15.125127792358398
    6. ')' → logprob: -15.375127792358398
    7. 'plit' → logprob: -15.625127792358398
    8. 'replace' → logprob: -16.3751277923584
    9. '```' → logprob: -17.6251277923584
    10. 's' → logprob: -17.8751277923584

Token 82: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00021831797494087368
    2. '()' → logprob: -8.875218391418457
    3. '))' → logprob: -10.250218391418457
    4. '())' → logprob: -10.500218391418457
    5. ')
' → logprob: -11.875218391418457
    6. ')`' → logprob: -12.875218391418457
    7. '`)' → logprob: -13.375218391418457
    8. ' )' → logprob: -13.625218391418457
    9. '')' → logprob: -14.250218391418457
    10. ')")' → logprob: -14.875218391418457

Token 83: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 84: ' from' (ID: 591)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.39439401030540466
    2. ' if' → logprob: -1.894394040107727
    3. 'if' → logprob: -3.0193939208984375
    4. ' 
' → logprob: -3.1443939208984375
    5. '    ' → logprob: -4.1443939208984375
    6. '   ' → logprob: -4.2693939208984375
    7. '<|end|>' → logprob: -4.2693939208984375
    8. '
' → logprob: -5.0193939208984375
    9. 'v' → logprob: -5.6443939208984375
    10. '\n' → logprob: -5.7693939208984375

Token 85: ' collections' (ID: 22690)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9540542960166931
    2. '_node' → logprob: -1.204054355621338
    3. ' collections' → logprob: -1.579054355621338
    4. 'collections' → logprob: -2.829054355621338
    5. 's' → logprob: -4.704054355621338
    6. ' =' → logprob: -4.829054355621338
    7. '=' → logprob: -5.329054355621338
    8. '_vertex' → logprob: -5.704054355621338
    9. '_nodes' → logprob: -5.704054355621338
    10. ' queue' → logprob: -5.704054355621338

Token 86: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6341379880905151
    2. ' import' → logprob: -0.7591379880905151
    3. 'port' → logprob: -7.134138107299805
    4. ' ' → logprob: -8.134138107299805
    5. '	import' → logprob: -8.884138107299805
    6. 't' → logprob: -9.134138107299805
    7. '```' → logprob: -10.009138107299805
    8. 'ort' → logprob: -10.259138107299805
    9. '.' → logprob: -10.759138107299805
    10. ' defaultdict' → logprob: -11.134138107299805

Token 87: ' deque' (ID: 90347)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.0031944699585437775
    2. 'deque' → logprob: -5.753194332122803
    3. ' collections' → logprob: -11.253194808959961
    4. 'queue' → logprob: -12.878194808959961
    5. 'collection' → logprob: -14.378194808959961
    6. 'd' → logprob: -15.253194808959961
    7. 'de' → logprob: -15.503194808959961
    8. 'c' → logprob: -15.753194808959961
    9. 's' → logprob: -16.87819480895996
    10. ' deque' → logprob: -17.25319480895996

Token 88: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2711232602596283
    2. ' 
' → logprob: -2.521123170852661
    3. 'q' → logprob: -3.646123170852661
    4. '' → logprob: -3.896123170852661
    5. 'd' → logprob: -4.14612340927124
    6. '    
' → logprob: -4.27112340927124
    7. 'n' → logprob: -4.39612340927124
    8. 'deque' → logprob: -4.39612340927124
    9. 'queue' → logprob: -4.52112340927124
    10. '<|end|>' → logprob: -4.77112340927124

Token 89: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.47273603081703186
    2. ' 
' → logprob: -1.8477360010147095
    3. 'n' → logprob: -2.722736120223999
    4. '<|end|>' → logprob: -3.222736120223999
    5. 'q' → logprob: -3.597736120223999
    6. '' → logprob: -4.34773588180542
    7. '  
' → logprob: -4.47273588180542
    8. 'b' → logprob: -4.47273588180542
    9. ')' → logprob: -4.59773588180542
    10. 'd' → logprob: -4.97273588180542

Token 90: ' queue' (ID: 13661)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.67347252368927
    2. ' ' → logprob: -1.17347252368927
    3. 'queue' (adapté à ' queue') → logprob: -2.2984724044799805
    4. ' queue' → logprob: -3.6734724044799805
    5. 'q' → logprob: -4.1734724044799805
    6. ' q' → logprob: -4.4234724044799805
    7. '
' → logprob: -5.4234724044799805
    8. 'deque' → logprob: -5.7984724044799805
    9. 'n' → logprob: -6.0484724044799805
    10. '     
' → logprob: -6.1734724044799805

Token 91: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5382499694824219
    2. '=' → logprob: -1.0382499694824219
    3. '<|end|>' → logprob: -3.163249969482422
    4. '(' → logprob: -4.538249969482422
    5. '.' → logprob: -5.788249969482422
    6. ')' → logprob: -5.788249969482422
    7. '<|end|>' → logprob: -7.038249969482422
    8. '.append' → logprob: -7.038249969482422
    9. '=[]' → logprob: -7.913249969482422
    10. ' ' → logprob: -8.663249969482422

Token 92: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.2014368176460266
    2. 'deque' → logprob: -1.7014367580413818
    3. ' de' → logprob: -11.576436996459961
    4. 'Deque' → logprob: -12.201436996459961
    5. 'de' → logprob: -12.201436996459961
    6. '(de' → logprob: -13.826436996459961
    7. ' dequeue' → logprob: -13.951436996459961
    8. '	de' → logprob: -14.326436996459961
    9. ' dq' → logprob: -14.451436996459961
    10. ' defaultdict' → logprob: -15.326436996459961

Token 93: '()
' (ID: 1234)
  Prédit: '([('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '([(' → logprob: -0.36668676137924194
    2. '([' → logprob: -1.3666868209838867
    3. '(' → logprob: -3.4916868209838867
    4. '()' → logprob: -3.8666868209838867
    5. '([
' → logprob: -7.866686820983887
    6. '[(' → logprob: -8.991686820983887
    7. '([]' → logprob: -9.866686820983887
    8. '([...' → logprob: -10.491686820983887
    9. '((' → logprob: -10.741686820983887
    10. '([{' → logprob: -11.366686820983887

Token 94: '   ' (ID: 271)
  Prédit: '(queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(queue' → logprob: -0.4593730866909027
    2. '<|end|>' → logprob: -1.709373116493225
    3. '   ' → logprob: -2.4593729972839355
    4. '[' → logprob: -3.0843729972839355
    5. 'queue' → logprob: -3.9593729972839355
    6. '(' → logprob: -3.9593729972839355
    7. ')' → logprob: -5.5843729972839355
    8. ' (' → logprob: -6.0843729972839355
    9. ' queue' → logprob: -6.2093729972839355
    10. ' ' → logprob: -6.5843729972839355

Token 95: ' queue' (ID: 13661)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.43804752826690674
    2. 'queue' (adapté à ' queue') → logprob: -1.3130475282669067
    3. '[' → logprob: -3.938047409057617
    4. '(queue' → logprob: -4.063047409057617
    5. ' s' → logprob: -4.563047409057617
    6. ' queue' → logprob: -4.688047409057617
    7. 'space' → logprob: -5.063047409057617
    8. '(s' → logprob: -5.188047409057617
    9. ' (' → logprob: -5.563047409057617
    10. '[s' → logprob: -5.813047409057617

Token 96: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.010182414203882217
    2. '.' → logprob: -4.6351823806762695
    3. '.enqueue' → logprob: -8.13518238067627
    4. '.extend' → logprob: -9.38518238067627
    5. '.put' → logprob: -10.88518238067627
    6. '.push' → logprob: -10.88518238067627
    7. '.add' → logprob: -13.01018238067627
    8. '.p' → logprob: -13.26018238067627
    9. '.clear' → logprob: -13.26018238067627
    10. '.setdefault' → logprob: -13.38518238067627

Token 97: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.015192308463156223
    2. '(s' → logprob: -4.26519250869751
    3. '(' → logprob: -6.89019250869751
    4. '(v' → logprob: -11.890192031860352
    5. '([' → logprob: -12.890192031860352
    6. '([(' → logprob: -15.015192031860352
    7. '(r' → logprob: -15.390192031860352
    8. '(((' → logprob: -15.765192031860352
    9. 's' → logprob: -16.01519203186035
    10. '[(' → logprob: -16.14019203186035

Token 98: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00010759611177491024
    2. ' s' → logprob: -9.250107765197754
    3. '(s' → logprob: -11.500107765197754
    4. '   ' → logprob: -14.625107765197754
    5. ')' → logprob: -15.000107765197754
    6. ')s' → logprob: -16.000106811523438
    7. '{s' → logprob: -16.125106811523438
    8. 'v' → logprob: -16.375106811523438
    9. '[s' → logprob: -16.375106811523438
    10. ' (' → logprob: -16.500106811523438

Token 99: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.465036105713807e-06
    2. ' ,' → logprob: -12.875007629394531
    3. ')' → logprob: -13.250007629394531
    4. ',
' → logprob: -14.125007629394531
    5. ',)' → logprob: -14.250007629394531
    6. ',None' → logprob: -14.375007629394531
    7. '))' → logprob: -15.625007629394531
    8. ',v' → logprob: -15.875007629394531
    9. ',,,' → logprob: -15.875007629394531
    10. ',,' → logprob: -16.25000762939453

Token 100: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3954944312572479
    2. 'v' → logprob: -1.1454944610595703
    3. ' ' → logprob: -5.27049446105957
    4. ' v' → logprob: -5.77049446105957
    5. '1' → logprob: -8.39549446105957
    6. ')' → logprob: -10.52049446105957
    7. '100' → logprob: -11.33299446105957
    8. ')v' → logprob: -11.45799446105957
    9. '[v' → logprob: -11.77049446105957
    10. 'd' → logprob: -12.20799446105957

Token 101: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6939058899879456
    2. 'v' → logprob: -0.6939058899879456
    3. '1' → logprob: -7.693905830383301
    4. '100' → logprob: -8.9439058303833
    5. '[v' → logprob: -10.5689058303833
    6. 'd' → logprob: -10.8189058303833
    7. ' ' → logprob: -10.9439058303833
    8. ' v' → logprob: -11.0689058303833
    9. '[]' → logprob: -11.4439058303833
    10. '[' → logprob: -11.6314058303833

Token 102: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00973802711814642
    2. ',' → logprob: -5.009737968444824
    3. ')' → logprob: -6.134737968444824
    4. ' ))' → logprob: -7.384737968444824
    5. '0' → logprob: -8.759737968444824
    6. ' ,' → logprob: -11.259737968444824
    7. '3' → logprob: -11.509737968444824
    8. '1' → logprob: -11.634737968444824
    9. ' )' → logprob: -11.759737968444824
    10. '7' → logprob: -12.009737968444824

Token 103: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2859264016151428
    2. '   ' → logprob: -2.660926342010498
    3. '\n' → logprob: -3.035926342010498
    4. 'newline' → logprob: -3.285926342010498
    5. ' 
' → logprob: -3.910926342010498
    6. '<|end|>' → logprob: -4.035926342010498
    7. '    
' → logprob: -4.285926342010498
    8. ')' → logprob: -4.535926342010498
    9. '  
' → logprob: -4.785926342010498
    10. '' → logprob: -5.035926342010498

Token 104: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6569202542304993
    2. '<|end|>' → logprob: -1.2819201946258545
    3. '
' → logprob: -2.4069201946258545
    4. '\n' → logprob: -2.7819201946258545
    5. '   ' → logprob: -4.031920433044434
    6. ':' → logprob: -4.906920433044434
    7. 'newline' → logprob: -4.906920433044434
    8. ' 
' → logprob: -5.656920433044434
    9. '```' → logprob: -5.906920433044434
    10. '    
' → logprob: -6.281920433044434

Token 105: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3306504189968109
    2. ')' → logprob: -2.0806503295898438
    3. ' )' → logprob: -2.4556503295898438
    4. '<|end|>' → logprob: -4.330650329589844
    5. ' (' → logprob: -4.705650329589844
    6. 'v' → logprob: -5.080650329589844
    7. ' s' → logprob: -5.330650329589844
    8. ' visited' → logprob: -5.580650329589844
    9. 'space' → logprob: -5.580650329589844
    10. ''' → logprob: -5.705650329589844

Token 106: 'current' (ID: 5804)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.08260224014520645
    2. 'current' → logprob: -2.5826022624969482
    3. 'vertex' → logprob: -6.207602024078369
    4. 'position' → logprob: -6.832602024078369
    5. ' node' → logprob: -7.832602024078369
    6. 'location' → logprob: -9.582602500915527
    7. 'room' → logprob: -9.707602500915527
    8. ' current' → logprob: -10.207602500915527
    9. 'city' → logprob: -10.332602500915527
    10. 'curr' → logprob: -13.082602500915527

Token 107: ' router' (ID: 15288)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.5915990471839905
    2. '_node' → logprob: -0.8415990471839905
    3. ' node' → logprob: -4.341598987579346
    4. ',' → logprob: -6.716598987579346
    5. 'position' → logprob: -7.966598987579346
    6. '_vertex' → logprob: -8.216599464416504
    7. '_position' → logprob: -8.966599464416504
    8. ',node' → logprob: -9.091599464416504
    9. 'city' → logprob: -9.341599464416504
    10. '_location' → logprob: -9.341599464416504

Token 108: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.825890159234405e-05
    2. ' ,' → logprob: -10.000068664550781
    3. ',
' → logprob: -11.500068664550781
    4. ',current' → logprob: -12.625068664550781
    5. ',node' → logprob: -12.875068664550781
    6. 's' → logprob: -13.125068664550781
    7. ',state' → logprob: -13.750068664550781
    8. '<|end|>' → logprob: -14.875068664550781
    9. ',value' → logprob: -15.250068664550781
    10. 'position' → logprob: -15.250068664550781

Token 109: ' path' (ID: 3104)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.8984065651893616
    2. 'steps' → logprob: -1.7734065055847168
    3. 'h' → logprob: -1.8984065055847168
    4. 'depth' → logprob: -2.398406505584717
    5. 'time' → logprob: -2.773406505584717
    6. 'hop' → logprob: -3.273406505584717
    7. ' hops' → logprob: -3.773406505584717
    8. 'path' → logprob: -5.023406505584717
    9. 'current' → logprob: -5.023406505584717
    10. ' distance' → logprob: -5.023406505584717

Token 110: ' length' (ID: 5517)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.882964551448822
    2. 'length' → logprob: -1.0079646110534668
    3. ' length' → logprob: -1.5079646110534668
    4. '_len' → logprob: -9.757964134216309
    5. 'len' → logprob: -10.132964134216309
    6. 'leng' → logprob: -12.257964134216309
    7. '-length' → logprob: -12.382964134216309
    8. 'Length' → logprob: -12.757964134216309
    9. ')' → logprob: -13.132964134216309
    10. ' ' → logprob: -13.382964134216309

Token 111: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.3319124011322856e-05
    2. ')
' → logprob: -11.500022888183594
    3. ',' → logprob: -12.375022888183594
    4. '))' → logprob: -12.875022888183594
    5. ' )' → logprob: -13.125022888183594
    6. '<|end|>' → logprob: -13.125022888183594
    7. '+' → logprob: -14.375022888183594
    8. '),' → logprob: -14.625022888183594
    9. '<|end|>' → logprob: -15.250022888183594
    10. '   ' → logprob: -15.250022888183594

Token 112: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 113: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.019064273685216904
    2. ' visited' → logprob: -4.519064426422119
    3. '   ' → logprob: -5.644064426422119
    4. 'found' → logprob: -5.644064426422119
    5. '
' → logprob: -8.519063949584961
    6. ' found' → logprob: -8.519063949584961
    7. 'distance' → logprob: -9.019063949584961
    8. 'seen' → logprob: -9.769063949584961
    9. ' 
' → logprob: -9.894063949584961
    10. 'while' → logprob: -9.894063949584961

Token 114: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00866858009248972
    2. '=' → logprob: -4.758668422698975
    3. '=set' → logprob: -10.633668899536133
    4. '<|end|>' → logprob: -11.258668899536133
    5. '.add' → logprob: -11.758668899536133
    6. ')' → logprob: -12.383668899536133
    7. ' ' → logprob: -13.133668899536133
    8. '.setdefault' → logprob: -14.133668899536133
    9. '[' → logprob: -14.133668899536133
    10. ',' → logprob: -15.008668899536133

Token 115: ' {' (ID: 354)
  Prédit: ' set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.861181378364563
    2. 'set' → logprob: -1.361181378364563
    3. '{' → logprob: -1.611181378364563
    4. ' {' → logprob: -2.1111812591552734
    5. '{}' → logprob: -8.611181259155273
    6. '{s' → logprob: -10.611181259155273
    7. ' {}' → logprob: -11.486181259155273
    8. '	set' → logprob: -12.111181259155273
    9. '=set' → logprob: -12.486181259155273
    10. ' ' → logprob: -12.986181259155273

Token 116: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.018216434866189957
    2. ' s' → logprob: -4.018216609954834
    3. ' ' → logprob: -10.768216133117676
    4. '}' → logprob: -11.018216133117676
    5. '   ' → logprob: -11.393216133117676
    6. '}s' → logprob: -12.393216133117676
    7. ')' → logprob: -13.143216133117676
    8. '(s' → logprob: -13.268216133117676
    9. ' }' → logprob: -13.393216133117676
    10. '0' → logprob: -13.768216133117676

Token 117: ':' (ID: 25)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.0013932115398347378
    2. ',' → logprob: -7.3763933181762695
    3. ' }' → logprob: -7.3763933181762695
    4. ':' → logprob: -9.37639331817627
    5. ')' → logprob: -10.37639331817627
    6. '}
' → logprob: -10.75139331817627
    7. '})' → logprob: -14.00139331817627
    8. '}

' → logprob: -14.37639331817627
    9. '<|end|>' → logprob: -15.12639331817627
    10. '   ' → logprob: -15.25139331817627

Token 118: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6595661044120789
    2. '0' → logprob: -0.9095661044120789
    3. ' ' → logprob: -2.6595661640167236
    4. 'v' → logprob: -4.7845659255981445
    5. 'True' → logprob: -6.9095659255981445
    6. ' v' → logprob: -7.5345659255981445
    7. ' True' → logprob: -8.159565925598145
    8. 'None' → logprob: -11.784565925598145
    9. 'False' → logprob: -11.909565925598145
    10. '-' → logprob: -12.159565925598145

Token 119: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6089058518409729
    2. '1' → logprob: -0.9839058518409729
    3. 'v' → logprob: -2.608905792236328
    4. 'True' → logprob: -4.858905792236328
    5. ' ' → logprob: -7.483905792236328
    6. 'False' → logprob: -9.483905792236328
    7. '100' → logprob: -10.233905792236328
    8. 'None' → logprob: -10.483905792236328
    9. ' True' → logprob: -10.858905792236328
    10. ' v' → logprob: -11.233905792236328

Token 120: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.00010676169040380046
    2. '   ' → logprob: -10.125106811523438
    3. ',' → logprob: -10.500106811523438
    4. ' }' → logprob: -10.875106811523438
    5. ')' → logprob: -11.375106811523438
    6. '}
' → logprob: -12.000106811523438
    7. '})' → logprob: -13.125106811523438
    8. '<|end|>' → logprob: -15.875106811523438
    9. ')}' → logprob: -16.375106811523438
    10. ' ' → logprob: -16.500106811523438

Token 121: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 122: ' found' (ID: 2491)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.125376895070076
    2. ' while' → logprob: -2.5003769397735596
    3. '
' → logprob: -3.7503769397735596
    4. '<|end|>' → logprob: -5.2503767013549805
    5. '   ' → logprob: -5.6253767013549805
    6. '    
' → logprob: -6.0003767013549805
    7. ')' → logprob: -8.75037670135498
    8. '\n' → logprob: -8.75037670135498
    9. ' 
' → logprob: -9.12537670135498
    10. '  
' → logprob: -9.12537670135498

Token 123: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16245219111442566
    2. '=' → logprob: -1.912452220916748
    3. ' ' → logprob: -6.537452220916748
    4. '_' → logprob: -7.412452220916748
    5. ':' → logprob: -9.53745174407959
    6. ',' → logprob: -9.78745174407959
    7. ')' → logprob: -11.78745174407959
    8. '=False' → logprob: -11.91245174407959
    9. 'if' → logprob: -12.03745174407959
    10. '_space' → logprob: -12.16245174407959

Token 124: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.10021044313907623
    2. ' False' → logprob: -2.350210428237915
    3. 'True' → logprob: -13.350210189819336
    4. '0' → logprob: -13.475210189819336
    5. ' True' → logprob: -14.600210189819336
    6. '=False' → logprob: -15.975210189819336
    7. '(False' → logprob: -16.475210189819336
    8. '   ' → logprob: -17.350210189819336
    9. '.False' → logprob: -18.100210189819336
    10. 'None' → logprob: -18.850210189819336

Token 125: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18214938044548035
    2. '<|end|>' → logprob: -2.3071494102478027
    3. '   ' → logprob: -3.5571494102478027
    4. ')' → logprob: -4.932149410247803
    5. ',' → logprob: -5.057149410247803
    6. '    
' → logprob: -5.307149410247803
    7. '\n' → logprob: -5.307149410247803
    8. ' 
' → logprob: -5.432149410247803
    9. '  
' → logprob: -5.557149410247803
    10. ':' → logprob: -5.682149410247803

Token 126: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5082937479019165
    2. '   ' → logprob: -1.3832937479019165
    3. '\n' → logprob: -2.633293628692627
    4. '    
' → logprob: -3.758293628692627
    5. 'newline' → logprob: -4.508293628692627
    6. ':' → logprob: -5.008293628692627
    7. '' → logprob: -5.008293628692627
    8. '<|end|>' → logprob: -5.133293628692627
    9. ' 
' → logprob: -5.508293628692627
    10. 'for' → logprob: -5.883293628692627

Token 127: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.7299859523773193
    2. ' while' → logprob: -1.3549859523773193
    3. '   ' → logprob: -1.9799859523773193
    4. ' 
' → logprob: -3.1049859523773193
    5. 'for' → logprob: -3.4799859523773193
    6. ' for' → logprob: -4.229986190795898
    7. '    
' → logprob: -4.729986190795898
    8. ' ' → logprob: -5.229986190795898
    9. '
' → logprob: -5.854986190795898
    10. 'newline' → logprob: -5.854986190795898

Token 128: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.10023525357246399
    2. ' queue' → logprob: -2.3502352237701416
    3. 'len' → logprob: -11.600234985351562
    4. '	queue' → logprob: -11.600234985351562
    5. '(queue' → logprob: -12.725234985351562
    6. ' ' → logprob: -12.725234985351562
    7. '   ' → logprob: -13.475234985351562
    8. ' len' → logprob: -13.475234985351562
    9. 'que' → logprob: -14.350234985351562
    10. 'not' → logprob: -15.350234985351562

Token 129: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00026073982007801533
    2. ' and' → logprob: -9.250260353088379
    3. 'and' → logprob: -9.625260353088379
    4. '.' → logprob: -10.625260353088379
    5. ':
' → logprob: -10.750260353088379
    6. '):' → logprob: -10.750260353088379
    7. '.pop' → logprob: -11.875260353088379
    8. '>:' → logprob: -12.750260353088379
    9. ':not' → logprob: -12.750260353088379
    10. ')' → logprob: -13.375260353088379

Token 130: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009907185100018978
    2. '    ' → logprob: -5.509907245635986
    3. ',' → logprob: -6.134907245635986
    4. '   ' → logprob: -6.759907245635986
    5. ' (' → logprob: -7.134907245635986
    6. '        
' → logprob: -8.134906768798828
    7. '     ' → logprob: -8.509906768798828
    8. '      ' → logprob: -8.884906768798828
    9. ' 
' → logprob: -9.134906768798828
    10. ' current' → logprob: -9.259906768798828

Token 131: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.08949748426675797
    2. 'cur' → logprob: -3.5894975662231445
    3. 'curr' → logprob: -3.7144975662231445
    4. 'node' → logprob: -3.9644975662231445
    5. ' current' → logprob: -5.0894975662231445
    6. 'u' → logprob: -5.4644975662231445
    7. 'router' → logprob: -5.7144975662231445
    8. '   ' → logprob: -8.214497566223145
    9. ' node' → logprob: -8.464497566223145
    10. '(current' → logprob: -8.714497566223145

Token 132: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1398757123970427e-05
    2. '_,' → logprob: -12.000011444091797
    3. ' ,' → logprob: -13.500011444091797
    4. ',node' → logprob: -13.875011444091797
    5. ',current' → logprob: -14.125011444091797
    6. '‌,' → logprob: -14.750011444091797
    7. '[' → logprob: -14.875011444091797
    8. '_' → logprob: -15.250011444091797
    9. '_router' → logprob: -15.375011444091797
    10. ',_' → logprob: -15.750011444091797

Token 133: ' dist' (ID: 3601)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.06919562816619873
    2. 'path' → logprob: -3.0691957473754883
    3. 'dist' → logprob: -4.819195747375488
    4. ' length' → logprob: -4.819195747375488
    5. 'depth' → logprob: -6.319195747375488
    6. 'distance' → logprob: -6.569195747375488
    7. ' path' → logprob: -7.444195747375488
    8. ' dist' → logprob: -8.569195747375488
    9. 'steps' → logprob: -9.069195747375488
    10. 'step' → logprob: -10.194195747375488

Token 134: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11286915838718414
    2. '=' → logprob: -2.2378692626953125
    3. ')' → logprob: -10.237869262695312
    4. '   ' → logprob: -12.362869262695312
    5. '+' → logprob: -12.862869262695312
    6. '    ' → logprob: -13.737869262695312
    7. ',' → logprob: -14.112869262695312
    8. ' =)' → logprob: -14.362869262695312
    9. ' ' → logprob: -14.862869262695312
    10. ' +=' → logprob: -14.987869262695312

Token 135: ' queue' (ID: 13661)
  Prédit: ' queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.07889287173748016
    2. 'queue' → logprob: -2.578892946243286
    3. ' ' → logprob: -13.328892707824707
    4. '	queue' → logprob: -14.203892707824707
    5. '(queue' → logprob: -14.328892707824707
    6. '.queue' → logprob: -15.828892707824707
    7. ' ' → logprob: -16.828893661499023
    8. ' que' → logprob: -17.328893661499023
    9. 'que' → logprob: -17.828893661499023
    10. ' space' → logprob: -18.703893661499023

Token 136: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.013141646049916744
    2. '.' → logprob: -5.138141632080078
    3. '.pop' → logprob: -5.138141632080078
    4. '.append' → logprob: -7.013141632080078
    5. '=' → logprob: -8.513141632080078
    6. ')' → logprob: -9.638141632080078
    7. ' =' → logprob: -10.138141632080078
    8. ' .' → logprob: -10.263141632080078
    9. '.extend' → logprob: -10.513141632080078
    10. ' p' → logprob: -11.388141632080078

Token 137: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.16027185320854187
    2. 'op' → logprob: -1.9102718830108643
    3. 'ople' → logprob: -10.160271644592285
    4. 'o' → logprob: -12.410271644592285
    5. 'opl' → logprob: -13.035271644592285
    6. 'opt' → logprob: -14.035271644592285
    7. 'opf' → logprob: -14.285271644592285
    8. 'opup' → logprob: -14.910271644592285
    9. 'ope' → logprob: -14.910271644592285
    10. 'append' → logprob: -16.5352725982666

Token 138: '()
' (ID: 1234)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1318204253911972
    2. '()' → logprob: -2.1318204402923584
    3. '<|end|>' → logprob: -5.631820201873779
    4. '   ' → logprob: -7.631820201873779
    5. '()
' → logprob: -8.131820678710938
    6. '       ' → logprob: -9.006820678710938
    7. '<|end|>' → logprob: -9.006820678710938
    8. ')
' → logprob: -9.131820678710938
    9. ' ' → logprob: -10.381820678710938
    10. '())' → logprob: -10.881820678710938

Token 139: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4020386040210724
    2. '<|end|>' → logprob: -1.90203857421875
    3. ' ' → logprob: -2.27703857421875
    4. '   ' → logprob: -4.02703857421875
    5. '    ' → logprob: -4.27703857421875
    6. ' 
' → logprob: -4.40203857421875
    7. ',' → logprob: -4.40203857421875
    8. 'if' → logprob: -4.77703857421875
    9. ')' → logprob: -5.15203857421875
    10. ':' → logprob: -6.40203857421875

Token 140: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1007237359881401
    2. ' ' → logprob: -3.3507237434387207
    3. '<|end|>' → logprob: -3.6007237434387207
    4. 'if' (adapté à ' if') → logprob: -3.7257237434387207
    5. ' 
' → logprob: -4.850723743438721
    6. '
' → logprob: -7.600723743438721
    7. '<|end|>' → logprob: -7.975723743438721
    8. '\n' → logprob: -9.225723266601562
    9. '    ' → logprob: -9.350723266601562
    10. ' If' → logprob: -9.475723266601562

Token 141: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.2519291639328003
    2. ' current' → logprob: -1.5019291639328003
    3. '(current' → logprob: -17.001928329467773
    4. '	current' → logprob: -17.251928329467773
    5. 'dist' → logprob: -18.251928329467773
    6. 'urrent' → logprob: -18.751928329467773
    7. '[current' → logprob: -18.876928329467773
    8. '$current' → logprob: -19.001928329467773
    9. '   ' → logprob: -19.376928329467773
    10. 'cur' → logprob: -19.626928329467773

Token 142: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04858827963471413
    2. '==' → logprob: -3.048588275909424
    3. ' ' → logprob: -15.048588752746582
    4. ' ' → logprob: -15.048588752746582
    5. '=' → logprob: -15.548588752746582
    6. ')' → logprob: -16.548587799072266
    7. ')==' → logprob: -18.298587799072266
    8. ' =' → logprob: -18.423587799072266
    9. ' not' → logprob: -18.548587799072266
    10. ']==' → logprob: -18.798587799072266

Token 143: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.0052350712940096855
    2. 'd' → logprob: -5.255235195159912
    3. ' ' → logprob: -14.255234718322754
    4. '	d' → logprob: -14.880234718322754
    5. ' ' → logprob: -15.130234718322754
    6. ')d' → logprob: -17.75523567199707
    7. '  ' → logprob: -18.88023567199707
    8. '   ' → logprob: -19.13023567199707
    9. '```' → logprob: -19.50523567199707
    10. ''d' → logprob: -19.50523567199707

Token 144: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09049923717975616
    2. ' and' → logprob: -2.46549916267395
    3. 'and' → logprob: -6.840499401092529
    4. '):' → logprob: -8.965498924255371
    5. ' or' → logprob: -8.965498924255371
    6. ':
' → logprob: -9.090498924255371
    7. ')' → logprob: -10.090498924255371
    8. ' :' → logprob: -10.090498924255371
    9. '<|end|>' → logprob: -10.840498924255371
    10. ':return' → logprob: -12.340498924255371

Token 145: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016730595380067825
    2. ' and' → logprob: -4.266730785369873
    3. ':' → logprob: -6.766730785369873
    4. ' print' → logprob: -7.891730785369873
    5. '       ' → logprob: -8.516730308532715
    6. '
' → logprob: -8.891730308532715
    7. ' or' → logprob: -9.266730308532715
    8. ':
' → logprob: -9.266730308532715
    9. ' break' → logprob: -9.391730308532715
    10. '            
' → logprob: -9.391730308532715

Token 146: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.09268659353256226
    2. ' print' → logprob: -2.592686653137207
    3. 'if' → logprob: -4.717686653137207
    4. ' if' → logprob: -5.467686653137207
    5. '           ' → logprob: -8.217686653137207
    6. 'v' → logprob: -9.342686653137207
    7. 'break' → logprob: -9.592686653137207
    8. ' v' → logprob: -10.467686653137207
    9. ' break' → logprob: -10.842686653137207
    10. '   ' → logprob: -11.092686653137207

Token 147: ' les' (ID: 1341)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1559206247329712
    2. 'if' → logprob: -2.6559205055236816
    3. ' print' → logprob: -3.0309205055236816
    4. ' if' → logprob: -4.030920505523682
    5. 'found' → logprob: -5.280920505523682
    6. ' found' → logprob: -7.280920505523682
    7. 'answer' → logprob: -8.03092098236084
    8. '   ' → logprob: -8.03092098236084
    9. 'break' → logprob: -8.03092098236084
    10. '           ' → logprob: -8.40592098236084

Token 148: ' "' (ID: 392)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.005580455996096134
    2. 'sons' → logprob: -5.630580425262451
    3. 'son' → logprob: -6.755580425262451
    4. 'sen' → logprob: -7.755580425262451
    5. 'st' → logprob: -8.75558090209961
    6. 't' → logprob: -9.38058090209961
    7. 'se' → logprob: -10.25558090209961
    8. 'print' → logprob: -11.00558090209961
    9. 'sum' → logprob: -12.00558090209961
    10. 'd' → logprob: -12.13058090209961

Token 149: 'dist' (ID: 24126)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.10763034969568253
    2. 'sons' → logprob: -2.3576302528381348
    3. 'son' → logprob: -5.857630252838135
    4. 'print' → logprob: -5.857630252838135
    5. 't' → logprob: -6.857630252838135
    6. ' s' → logprob: -8.482630729675293
    7. ' print' → logprob: -9.732630729675293
    8. 'distance' → logprob: -10.232630729675293
    9. 'st' → logprob: -10.357630729675293
    10. 'dist' → logprob: -10.607630729675293

Token 150: '"' (ID: 1)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.7467767596244812
    2. 's' → logprob: -0.8717767596244812
    3. '"' → logprob: -3.121776819229126
    4. '-' → logprob: -3.496776819229126
    5. ' ==' → logprob: -4.746776580810547
    6. ' +' → logprob: -5.121776580810547
    7. ' s' → logprob: -5.746776580810547
    8. ' ' → logprob: -5.871776580810547
    9. ' "' → logprob: -5.996776580810547
    10. ' *' → logprob: -6.621776580810547

Token 151: ' compte' (ID: 19657)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7195100784301758
    2. '<|end|>' → logprob: -1.8445100784301758
    3. ' print' → logprob: -2.719510078430176
    4. '+' → logprob: -2.719510078430176
    5. ' =' → logprob: -3.219510078430176
    6. '=' → logprob: -3.719510078430176
    7. ')' → logprob: -3.844510078430176
    8. ' +' → logprob: -3.969510078430176
    9. ' +=' → logprob: -4.344510078430176
    10. ' <=' → logprob: -4.594510078430176

Token 152: ' les' (ID: 1341)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5423689484596252
    2. 'for' → logprob: -1.7923688888549805
    3. 's' → logprob: -1.9173688888549805
    4. 'inue' → logprob: -4.1673688888549805
    5. ' ' → logprob: -4.4173688888549805
    6. 'pour' → logprob: -4.6673688888549805
    7. 'les' → logprob: -4.7923688888549805
    8. ' pour' → logprob: -4.7923688888549805
    9. '<|end|>' → logprob: -4.9173688888549805
    10. 'r' → logprob: -5.2923688888549805

Token 153: ' route' (ID: 9656)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2584224939346313
    2. 'pas' → logprob: -1.6334224939346313
    3. 'pass' → logprob: -2.008422374725342
    4. 'route' → logprob: -2.383422374725342
    5. 'sal' → logprob: -3.133422374725342
    6. 'no' → logprob: -3.133422374725342
    7. 'pa' → logprob: -3.383422374725342
    8. 'nombre' → logprob: -3.633422374725342
    9. 'h' → logprob: -4.008422374725342
    10. '"' → logprob: -4.258422374725342

Token 154: 'urs' (ID: 1628)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6408681273460388
    2. 'urs' → logprob: -0.7658681273460388
    3. 'rs' → logprob: -4.890868186950684
    4. 'ur' → logprob: -7.640868186950684
    5. 'r' → logprob: -9.015868186950684
    6. 'ments' → logprob: -9.765868186950684
    7. '```' → logprob: -10.890868186950684
    8. '(s' → logprob: -12.015868186950684
    9. '#' → logprob: -12.140868186950684
    10. 'aux' → logprob: -12.953368186950684

Token 155: ' travers' (ID: 26957)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3316759467124939
    2. ')' → logprob: -2.4566760063171387
    3. ' +' → logprob: -2.5816760063171387
    4. ',' → logprob: -3.7066760063171387
    5. 'visited' → logprob: -3.7066760063171387
    6. ' plus' → logprob: -4.456676006317139
    7. ' )' → logprob: -4.456676006317139
    8. '.' → logprob: -4.581676006317139
    9. ' visited' → logprob: -5.206676006317139
    10. ' ,' → logprob: -5.331676006317139

Token 156: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.09503322094678879
    2. 'es' → logprob: -2.4700331687927246
    3. 's' → logprob: -5.220033168792725
    4. 'é' → logprob: -8.470033645629883
    5. '#' → logprob: -8.970033645629883
    6. 'ées' → logprob: -9.095033645629883
    7. '```' → logprob: -10.720033645629883
    8. '   ' → logprob: -10.845033645629883
    9. '\x' → logprob: -11.220033645629883
    10. 'Ã' → logprob: -11.220033645629883

Token 157: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014751927927136421
    2. ',' → logprob: -4.63975191116333
    3. '       ' → logprob: -6.13975191116333
    4. 'print' → logprob: -7.51475191116333
    5. ':' → logprob: -8.139752388000488
    6. '
' → logprob: -8.389752388000488
    7. ' print' → logprob: -8.514752388000488
    8. '            
' → logprob: -8.514752388000488
    9. '<|end|>' → logprob: -8.639752388000488
    10. '<|end|>' → logprob: -8.639752388000488

Token 158: ' TTL' (ID: 194586)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4291946589946747
    2. 'break' → logprob: -1.804194688796997
    3. ' print' → logprob: -2.929194688796997
    4. ' break' → logprob: -2.929194688796997
    5. '           ' → logprob: -3.179194688796997
    6. ' if' → logprob: -4.804194450378418
    7. '       ' → logprob: -4.929194450378418
    8. '#' → logprob: -5.554194450378418
    9. ' #' → logprob: -5.804194450378418
    10. '               ' → logprob: -5.929194450378418

Token 159: ' doit' (ID: 21822)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.3843795657157898
    2. ' <=' → logprob: -1.7593796253204346
    3. '>=' → logprob: -2.5093796253204346
    4. '<=' → logprob: -4.3843793869018555
    5. '+' → logprob: -4.7593793869018555
    6. '-' → logprob: -4.8843793869018555
    7. ' ==' → logprob: -4.8843793869018555
    8. ' ' → logprob: -5.1343793869018555
    9. ' >' → logprob: -5.5093793869018555
    10. ' +' → logprob: -5.6343793869018555

Token 160: ' au' (ID: 2791)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.5643197894096375
    2. '>=' → logprob: -1.4393198490142822
    3. '>' → logprob: -2.6893198490142822
    4. ' être' → logprob: -2.6893198490142822
    5. ' etre' → logprob: -3.6893198490142822
    6. ' >=' → logprob: -4.689319610595703
    7. 'etre' → logprob: -4.939319610595703
    8. 'êt' → logprob: -6.189319610595703
    9. 'êtres' → logprob: -6.314319610595703
    10. ''être' → logprob: -6.439319610595703

Token 161: ' moins' (ID: 15924)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.007305599283427
    2. 'mo' → logprob: -5.88230562210083
    3. '-mo' → logprob: -7.00730562210083
    4. 'plus' → logprob: -7.00730562210083
    5. 'm' → logprob: -7.13230562210083
    6. 'menos' → logprob: -7.88230562210083
    7. 'minimum' → logprob: -7.88230562210083
    8. '-' → logprob: -7.88230562210083
    9. 'minus' → logprob: -8.257305145263672
    10. ' moins' → logprob: -8.757305145263672

Token 162: ' être' (ID: 9104)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.1774807870388031
    2. 'val' → logprob: -2.552480697631836
    3. ' être' → logprob: -3.302480697631836
    4. 'égal' → logprob: -4.052480697631836
    5. '=' → logprob: -5.177480697631836
    6. ' val' → logprob: -5.802480697631836
    7. ' égal' → logprob: -5.927480697631836
    8. 'etre' → logprob: -6.052480697631836
    9. 'egal' → logprob: -6.052480697631836
    10. ' etre' → logprob: -6.177480697631836

Token 163: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.007722083013504744
    2. ' dist' → logprob: -4.882721900939941
    3. 'equal' → logprob: -9.507721900939941
    4. ' equal' → logprob: -10.882721900939941
    5. '	dist' → logprob: -11.757721900939941
    6. ' égal' → logprob: -12.507721900939941
    7. '(dist' → logprob: -13.007721900939941
    8. 'égal' → logprob: -13.132721900939941
    9. ' ég' → logprob: -14.132721900939941
    10. ' ' → logprob: -14.257721900939941

Token 164: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5327884554862976
    2. '           ' → logprob: -1.0327885150909424
    3. ':' → logprob: -3.7827885150909424
    4. '               ' → logprob: -4.532788276672363
    5. '   ' → logprob: -5.407788276672363
    6. 'if' → logprob: -5.532788276672363
    7. ',' → logprob: -6.032788276672363
    8. ')' → logprob: -6.032788276672363
    9. ' if' → logprob: -6.032788276672363
    10. '#' → logprob: -6.157788276672363

Token 165: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0021466929465532303
    2. ' if' → logprob: -6.3771467208862305
    3. 'if' → logprob: -8.37714672088623
    4. '       ' → logprob: -8.62714672088623
    5. '<|end|>' → logprob: -11.25214672088623
    6. ',' → logprob: -12.12714672088623
    7. '               ' → logprob: -12.25214672088623
    8. '<|end|>' → logprob: -13.00214672088623
    9. ' and' → logprob: -13.12714672088623
    10. '   ' → logprob: -13.25214672088623

Token 166: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.25260788202285767
    2. 'print' → logprob: -1.627607822418213
    3. ' if' → logprob: -3.752607822418213
    4. ' print' → logprob: -6.502607822418213
    5. 'found' → logprob: -6.752607822418213
    6. '           ' → logprob: -8.127608299255371
    7. 'break' → logprob: -8.752608299255371
    8. '   ' → logprob: -9.002608299255371
    9. 'result' → logprob: -10.252608299255371
    10. ' found' → logprob: -10.627608299255371

Token 167: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.2971101701259613
    2. ' v' → logprob: -1.4221101999282837
    3. 'dist' → logprob: -4.672110080718994
    4. ' dist' → logprob: -5.297110080718994
    5. ' TTL' → logprob: -7.672110080718994
    6. 'TTL' → logprob: -8.172110557556152
    7. '   ' → logprob: -8.422110557556152
    8. 'ttl' → logprob: -8.672110557556152
    9. ' ttl' → logprob: -8.672110557556152
    10. ' ' → logprob: -10.359610557556152

Token 168: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.08924795687198639
    2. '>=' → logprob: -2.464247941970825
    3. ' ' → logprob: -8.339247703552246
    4. ' <' → logprob: -10.339247703552246
    5. '<' → logprob: -11.714247703552246
    6. ')>=' → logprob: -11.839247703552246
    7. '>' → logprob: -11.964247703552246
    8. ')' → logprob: -12.464247703552246
    9. ']>=' → logprob: -12.464247703552246
    10. ' ' → logprob: -13.464247703552246

Token 169: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.07889220863580704
    2. ' dist' → logprob: -2.578892230987549
    3. '	dist' → logprob: -13.70389175415039
    4. '   ' → logprob: -14.45389175415039
    5. ' ' → logprob: -15.07889175415039
    6. '(dist' → logprob: -15.45389175415039
    7. ' ' → logprob: -16.95389175415039
    8. '_dist' → logprob: -16.95389175415039
    9. '.dist' → logprob: -17.07889175415039
    10. 'dis' → logprob: -17.07889175415039

Token 170: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02419578842818737
    2. ':
' → logprob: -4.399195671081543
    3. '):' → logprob: -4.524195671081543
    4. '):
' → logprob: -8.149195671081543
    5. '           ' → logprob: -8.524195671081543
    6. ' :' → logprob: -9.524195671081543
    7. '               ' → logprob: -9.774195671081543
    8. '       ' → logprob: -9.899195671081543
    9. ' and' → logprob: -9.899195671081543
    10. ')' → logprob: -10.149195671081543

Token 171: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0026392722502350807
    2. 'print' → logprob: -6.502639293670654
    3. ' print' → logprob: -7.752639293670654
    4. '           ' → logprob: -7.877639293670654
    5. ':
' → logprob: -9.127638816833496
    6. '
' → logprob: -9.502638816833496
    7. '                   ' → logprob: -10.377638816833496
    8. ',' → logprob: -11.252638816833496
    9. '):
' → logprob: -11.252638816833496
    10. '                
' → logprob: -11.252638816833496

Token 172: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.533462643623352
    2. ' print' → logprob: -0.908462643623352
    3. '               ' → logprob: -4.9084625244140625
    4. '                   ' → logprob: -6.1584625244140625
    5. '           ' → logprob: -7.7834625244140625
    6. '
' → logprob: -8.658462524414062
    7. ' found' → logprob: -9.408462524414062
    8. '   ' → logprob: -10.283462524414062
    9. '       ' → logprob: -10.783462524414062
    10. 'found' → logprob: -11.158462524414062

Token 173: '(dist' (ID: 78981)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.027515405789017677
    2. '(' → logprob: -3.777515411376953
    3. '('' → logprob: -5.777515411376953
    4. '(current' → logprob: -7.652515411376953
    5. '(True' → logprob: -8.402515411376953
    6. '"' → logprob: -8.527515411376953
    7. ' ("' → logprob: -9.027515411376953
    8. '   ' → logprob: -10.027515411376953
    9. '(dist' → logprob: -10.277515411376953
    10. '(f' → logprob: -11.402515411376953

Token 174: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.06206616759300232
    2. ')' → logprob: -2.812066078186035
    3. ')
' → logprob: -9.687066078186035
    4. ' )
' → logprob: -10.812066078186035
    5. '               ' → logprob: -12.187066078186035
    6. ')`
' → logprob: -12.812066078186035
    7. '           ' → logprob: -12.937066078186035
    8. ')

' → logprob: -13.312066078186035
    9. ' )' → logprob: -13.562066078186035
    10. '   ' → logprob: -14.187066078186035

Token 175: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.024590883404016495
    2. '               ' → logprob: -4.149590969085693
    3. 'else' → logprob: -4.774590969085693
    4. ' else' → logprob: -9.899590492248535
    5. 'elif' → logprob: -11.524590492248535
    6. '                
' → logprob: -12.274590492248535
    7. '                   ' → logprob: -12.774590492248535
    8. '            
' → logprob: -12.899590492248535
    9. '       ' → logprob: -13.399590492248535
    10. '
' → logprob: -13.524590492248535

Token 176: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.47783780097961426
    2. 'else' (adapté à ' else') → logprob: -0.9778378009796143
    3. ' else' → logprob: -5.727837562561035
    4. '               ' → logprob: -7.727837562561035
    5. '       ' → logprob: -10.477837562561035
    6. 'elif' → logprob: -10.727837562561035
    7. 'continue' → logprob: -13.102837562561035
    8. 'return' → logprob: -13.227837562561035
    9. 'break' → logprob: -13.852837562561035
    10. '		' → logprob: -13.852837562561035

Token 177: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04827776551246643
    2. ':
' → logprob: -3.5482778549194336
    3. ':' → logprob: -4.048277854919434
    4. ' :
' → logprob: -7.673277854919434
    5. '           ' → logprob: -8.673277854919434
    6. ' :' → logprob: -9.048277854919434
    7. '       ' → logprob: -9.798277854919434
    8. ',' → logprob: -10.298277854919434
    9. 'print' → logprob: -11.048277854919434
    10. ' print' → logprob: -11.298277854919434

Token 178: '               ' (ID: 506)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07559649646282196
    2. '               ' → logprob: -2.825596570968628
    3. ' print' → logprob: -4.325596332550049
    4. '       ' → logprob: -8.825596809387207
    5. '           ' → logprob: -8.825596809387207
    6. '   ' → logprob: -11.450596809387207
    7. '                   ' → logprob: -12.825596809387207
    8. '	print' → logprob: -13.950596809387207
    9. '```' → logprob: -14.325596809387207
    10. ' ' → logprob: -14.575596809387207

Token 179: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.03395652770996094
    2. ' print' → logprob: -3.408956527709961
    3. '               ' → logprob: -8.408956527709961
    4. '   ' → logprob: -9.783956527709961
    5. '       ' → logprob: -11.408956527709961
    6. '           ' → logprob: -11.783956527709961
    7. ' ' → logprob: -12.283956527709961
    8. '	print' → logprob: -12.783956527709961
    9. '                   ' → logprob: -13.408956527709961
    10. '"' → logprob: -14.533956527709961

Token 180: '("' (ID: 568)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0208295583724976
    2. '(' → logprob: -1.1458295583724976
    3. '("' → logprob: -1.7708295583724976
    4. '('' → logprob: -2.770829677581787
    5. '"' → logprob: -3.145829677581787
    6. '(-' → logprob: -3.895829677581787
    7. ''' → logprob: -4.520829677581787
    8. '-' → logprob: -5.020829677581787
    9. 'TTL' → logprob: -5.520829677581787
    10. '(T' → logprob: -7.270829677581787

Token 181: 'NA' (ID: 9555)
  Prédit: 'Impossible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Impossible' → logprob: -1.1653646230697632
    2. 'NA' → logprob: -1.2903646230697632
    3. '"' → logprob: -2.1653647422790527
    4. 'hop' → logprob: -2.7903647422790527
    5. 'un' → logprob: -3.2903647422790527
    6. '-' → logprob: -3.4153647422790527
    7. '0' → logprob: -3.5403647422790527
    8. 'infection' → logprob: -4.290364742279053
    9. ' impossible' → logprob: -4.540364742279053
    10. 'Not' → logprob: -4.540364742279053

Token 182: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0036447341553866863
    2. '")
' → logprob: -5.628644943237305
    3. '")
' → logprob: -10.753644943237305
    4. 'L' → logprob: -11.503644943237305
    5. 'C' → logprob: -12.878644943237305
    6. '"' → logprob: -13.128644943237305
    7. ' ")' → logprob: -13.378644943237305
    8. ')' → logprob: -13.378644943237305
    9. ')")' → logprob: -13.503644943237305
    10. 'T' → logprob: -14.128644943237305

Token 183: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00293692946434021
    2. '               ' → logprob: -5.877936840057373
    3. '       ' → logprob: -9.002937316894531
    4. 'continue' → logprob: -12.127937316894531
    5. '   ' → logprob: -13.502937316894531
    6. 'else' → logprob: -13.627937316894531
    7. '                   ' → logprob: -15.377937316894531
    8. ' continue' → logprob: -15.627937316894531
    9. '
' → logprob: -16.00293731689453
    10. 'elif' → logprob: -16.50293731689453

Token 184: ' found' (ID: 2491)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00012976066500414163
    2. 'break' → logprob: -9.000129699707031
    3. '               ' → logprob: -12.750129699707031
    4. '       ' → logprob: -13.375129699707031
    5. ' break' → logprob: -14.625129699707031
    6. 'continue' → logprob: -14.875129699707031
    7. '
' → logprob: -15.125129699707031
    8. 'return' → logprob: -15.500129699707031
    9. '                   ' → logprob: -15.875129699707031
    10. '		' → logprob: -16.12512969970703

Token 185: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5050801634788513
    2. ' =' → logprob: -1.005080223083496
    3. '=True' → logprob: -3.880080223083496
    4. '=False' → logprob: -5.255080223083496
    5. '<|end|>' → logprob: -5.505080223083496
    6. 'break' → logprob: -8.505080223083496
    7. ' ' → logprob: -9.255080223083496
    8. '_break' → logprob: -9.380080223083496
    9. '   ' → logprob: -10.005080223083496
    10. '=true' → logprob: -10.255080223083496

Token 186: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.3868710398674011
    2. ' True' → logprob: -1.136871099472046
    3. '(True' → logprob: -18.386871337890625
    4. '=True' → logprob: -18.636871337890625
    5. 'true' → logprob: -21.511871337890625
    6. 'False' → logprob: -21.511871337890625
    7. '   ' → logprob: -22.261871337890625
    8. ' ' → logprob: -22.386871337890625
    9. ' Tru' → logprob: -22.761871337890625
    10. '.True' → logprob: -23.136871337890625

Token 187: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00047940885997377336
    2. '       ' → logprob: -7.750479221343994
    3. '               ' → logprob: -10.500479698181152
    4. '   ' → logprob: -11.500479698181152
    5. '<|end|>' → logprob: -11.875479698181152
    6. '                   ' → logprob: -14.125479698181152
    7. '		' → logprob: -14.125479698181152
    8. '
' → logprob: -14.250479698181152
    9. '    
' → logprob: -15.125479698181152
    10. '\n' → logprob: -15.250479698181152

Token 188: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015466450713574886
    2. '       ' → logprob: -6.501546859741211
    3. '   ' → logprob: -10.251546859741211
    4. '               ' → logprob: -12.251546859741211
    5. '<|end|>' → logprob: -13.251546859741211
    6. '		' → logprob: -13.876546859741211
    7. '	       ' → logprob: -14.376546859741211
    8. '                   ' → logprob: -15.876546859741211
    9. 'continue' → logprob: -16.00154685974121
    10. ' continue' → logprob: -16.12654685974121

Token 189: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10119108855724335
    2. 'break' (adapté à ' break') → logprob: -2.3511910438537598
    3. ' break' → logprob: -7.72619104385376
    4. '       ' → logprob: -8.101191520690918
    5. '	break' → logprob: -9.226191520690918
    6. '   ' → logprob: -9.726191520690918
    7. '               ' → logprob: -9.851191520690918
    8. '		' → logprob: -11.226191520690918
    9. '
' → logprob: -11.726191520690918
    10. '                   ' → logprob: -12.476191520690918

Token 190: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07000323385000229
    2. '   ' → logprob: -2.6950032711029053
    3. ' for' → logprob: -10.070003509521484
    4. 'for' → logprob: -10.945003509521484
    5. '```' → logprob: -12.945003509521484
    6. ',' → logprob: -13.695003509521484
    7. '<|end|>' → logprob: -14.070003509521484
    8. '           ' → logprob: -14.320003509521484
    9. '    ' → logprob: -14.820003509521484
    10. 'else' → logprob: -14.820003509521484

Token 191: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02725013718008995
    2. '       ' → logprob: -3.652250051498413
    3. '    
' → logprob: -7.652250289916992
    4. ' for' → logprob: -8.277250289916992
    5. ' 
' → logprob: -9.652250289916992
    6. '        
' → logprob: -10.277250289916992
    7. '    ' → logprob: -10.527250289916992
    8. '<|end|>' → logprob: -10.777250289916992
    9. 'for' → logprob: -11.152250289916992
    10. ')' → logprob: -11.152250289916992

Token 192: ' if' (ID: 538)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12798991799354553
    2. 'for' → logprob: -2.1279900074005127
    3. '   ' → logprob: -7.002989768981934
    4. '       ' → logprob: -9.627989768981934
    5. ' 
' → logprob: -10.002989768981934
    6. '    
' → logprob: -11.252989768981934
    7. '        
' → logprob: -11.377989768981934
    8. '	for' → logprob: -11.752989768981934
    9. '
' → logprob: -12.877989768981934
    10. ' ' → logprob: -13.752989768981934

Token 193: ' current' (ID: 2208)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6757767200469971
    2. 'current' → logprob: -1.425776720046997
    3. ' dist' → logprob: -2.050776720046997
    4. ' current' → logprob: -2.550776720046997
    5. 'v' → logprob: -3.300776720046997
    6. ' v' → logprob: -5.175776481628418
    7. 'visited' → logprob: -7.300776481628418
    8. 'not' → logprob: -8.050776481628418
    9. ' not' → logprob: -8.675776481628418
    10. 'graph' → logprob: -9.175776481628418

Token 194: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004987424239516258
    2. ' not' → logprob: -5.3799872398376465
    3. 'in' → logprob: -8.004987716674805
    4. ' ' → logprob: -11.379987716674805
    5. 'not' → logprob: -11.504987716674805
    6. ' !=' → logprob: -12.879987716674805
    7. ')' → logprob: -12.879987716674805
    8. '_' → logprob: -13.504987716674805
    9. ',' → logprob: -13.754987716674805
    10. ' ' → logprob: -14.004987716674805

Token 195: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.00033546582562848926
    2. ' graph' → logprob: -8.000335693359375
    3. 'visited' → logprob: -17.000335693359375
    4. '	graph' → logprob: -17.500335693359375
    5. '(graph' → logprob: -20.875335693359375
    6. 'Graph' → logprob: -21.000335693359375
    7. '   ' → logprob: -21.750335693359375
    8. ' ' → logprob: -22.000335693359375
    9. 'graphs' → logprob: -22.125335693359375
    10. 'queue' → logprob: -22.125335693359375

Token 196: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011252141557633877
    2. ':
' → logprob: -6.876125335693359
    3. ' and' → logprob: -9.37612533569336
    4. 'and' → logprob: -12.75112533569336
    5. ' :' → logprob: -13.25112533569336
    6. '):' → logprob: -13.62612533569336
    7. '.keys' → logprob: -14.25112533569336
    8. ':
' → logprob: -14.25112533569336
    9. '   ' → logprob: -14.87612533569336
    10. ':

' → logprob: -16.50112533569336

Token 197: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7496590614318848
    2. ':' → logprob: -1.3746590614318848
    3. ' for' → logprob: -1.6246590614318848
    4. ' and' → logprob: -3.2496590614318848
    5. ':
' → logprob: -4.124659061431885
    6. '           ' → logprob: -4.124659061431885
    7. '<|end|>' → logprob: -5.999659061431885
    8. '   ' → logprob: -6.249659061431885
    9. ',' → logprob: -7.749659061431885
    10. '	       ' → logprob: -7.874659061431885

Token 198: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20266962051391602
    2. 'for' (adapté à ' for') → logprob: -1.702669620513916
    3. '       ' → logprob: -6.702669620513916
    4. '   ' → logprob: -11.077669143676758
    5. '           ' → logprob: -12.077669143676758
    6. '	for' → logprob: -12.202669143676758
    7. ' ' → logprob: -13.702669143676758
    8. ' ' → logprob: -15.577669143676758
    9. '               ' → logprob: -15.952669143676758
    10. '	       ' → logprob: -16.202669143676758

Token 199: ' nxt' (ID: 160200)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.16045838594436646
    2. ' neighbor' → logprob: -1.9104583263397217
    3. 'ne' → logprob: -9.4104585647583
    4. 'nei' → logprob: -9.5354585647583
    5. ' nei' → logprob: -10.4104585647583
    6. 'next' → logprob: -10.6604585647583
    7. 'node' → logprob: -11.5354585647583
    8. 'nbr' → logprob: -11.7854585647583
    9. 'n' → logprob: -12.5354585647583
    10. ' next' → logprob: -13.4104585647583

Token 200: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.033711403608322144
    2. 'in' → logprob: -3.4087114334106445
    3. '_' → logprob: -10.658711433410645
    4. ' ' → logprob: -11.158711433410645
    5. ',' → logprob: -11.658711433410645
    6. '	in' → logprob: -12.158711433410645
    7. 'n' → logprob: -12.783711433410645
    8. '_in' → logprob: -13.033711433410645
    9. '<|end|>' → logprob: -13.283711433410645
    10. ')' → logprob: -13.533711433410645

Token 201: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.25193271040916443
    2. 'graph' → logprob: -1.5019327402114868
    3. '	graph' → logprob: -12.751933097839355
    4. '(graph' → logprob: -14.376933097839355
    5. '   ' → logprob: -16.87693214416504
    6. ' ' → logprob: -18.12693214416504
    7. '_graph' → logprob: -18.25193214416504
    8. '.graph' → logprob: -18.62693214416504
    9. 'Graph' → logprob: -19.00193214416504
    10. ' ' → logprob: -19.25193214416504

Token 202: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -7.896309739408025e-07
    2. 'current' → logprob: -14.750000953674316
    3. '[' → logprob: -15.750000953674316
    4. '[cur' → logprob: -16.125
    5. '   ' → logprob: -17.375
    6. ' current' → logprob: -17.875
    7. ' [' → logprob: -18.125
    8. '[curr' → logprob: -18.875
    9. '(current' → logprob: -19.5
    10. ',current' → logprob: -19.875

Token 203: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.12843601405620575
    2. ']:
' → logprob: -2.2534360885620117
    3. ':' → logprob: -4.378436088562012
    4. ']' → logprob: -7.003436088562012
    5. '):' → logprob: -7.128436088562012
    6. ':
' → logprob: -7.628436088562012
    7. '):
' → logprob: -7.753436088562012
    8. '       ' → logprob: -9.253436088562012
    9. '   ' → logprob: -9.503436088562012
    10. '}:' → logprob: -10.003436088562012

Token 204: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003971186000853777
    2. ' if' → logprob: -6.003971099853516
    3. ':' → logprob: -7.378971099853516
    4. ':
' → logprob: -8.128971099853516
    5. '                
' → logprob: -8.378971099853516
    6. '           ' → logprob: -10.003971099853516
    7. ',' → logprob: -10.253971099853516
    8. ' ' → logprob: -10.503971099853516
    9. ' :' → logprob: -10.503971099853516
    10. '	           ' → logprob: -10.503971099853516

Token 205: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.12324771285057068
    2. '                ' → logprob: -3.1232476234436035
    3. '                   ' → logprob: -3.1232476234436035
    4. ' ' → logprob: -4.4982476234436035
    5. 'if' (adapté à ' if') → logprob: -4.7482476234436035
    6. '                    ' → logprob: -5.6232476234436035
    7. '               ' → logprob: -6.1232476234436035
    8. ' not' → logprob: -7.6232476234436035
    9. '                 ' → logprob: -7.6232476234436035
    10. '                    
' → logprob: -7.9982476234436035

Token 206: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6931889057159424
    2. ' nxt' → logprob: -0.6931889057159424
    3. 'nx' → logprob: -11.693188667297363
    4. ' ' → logprob: -11.693188667297363
    5. '(n' → logprob: -12.443188667297363
    6. ' n' → logprob: -12.693188667297363
    7. '   ' → logprob: -12.818188667297363
    8. 'n't' → logprob: -13.068188667297363
    9. 'not' → logprob: -13.193188667297363
    10. ' not' → logprob: -13.193188667297363

Token 207: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0017030329909175634
    2. 'not' → logprob: -6.376703262329102
    3. '	not' → logprob: -15.126703262329102
    4. ')' → logprob: -15.251703262329102
    5. ' in' → logprob: -15.626703262329102
    6. ' ' → logprob: -17.6267032623291
    7. ' no' → logprob: -17.6267032623291
    8. ' )' → logprob: -18.5017032623291
    9. 'in' → logprob: -18.6267032623291
    10. ':not' → logprob: -18.8767032623291

Token 208: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0220330897718668
    2. 'visited' → logprob: -4.397033214569092
    3. 'in' → logprob: -4.772033214569092
    4. ' visited' → logprob: -7.147033214569092
    5. ' ' → logprob: -9.272032737731934
    6. ')' → logprob: -9.772032737731934
    7. '   ' → logprob: -10.897032737731934
    8. ',' → logprob: -11.272032737731934
    9. '[' → logprob: -11.772032737731934
    10. '           ' → logprob: -12.147032737731934

Token 209: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.0380416102707386
    2. ' visited' → logprob: -3.288041591644287
    3. 'visit' → logprob: -17.413042068481445
    4. ' ' → logprob: -17.538042068481445
    5. 'Visited' → logprob: -18.038042068481445
    6. 'vis' → logprob: -18.288042068481445
    7. '
' → logprob: -18.288042068481445
    8. '```' → logprob: -18.663042068481445
    9. 'seen' → logprob: -19.288042068481445
    10. '   ' → logprob: -19.288042068481445

Token 210: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.6562377214431763
    2. ' and' → logprob: -0.9062377214431763
    3. ':' → logprob: -3.4062376022338867
    4. ':
' → logprob: -3.7812376022338867
    5. '                   ' → logprob: -5.031237602233887
    6. '               ' → logprob: -5.531237602233887
    7. 'and' → logprob: -5.531237602233887
    8. '           ' → logprob: -6.406237602233887
    9. '   ' → logprob: -6.531237602233887
    10. '                       ' → logprob: -6.906237602233887

Token 211: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.002778012305498123
    2. ' and' → logprob: -7.002778053283691
    3. ':
' → logprob: -7.502778053283691
    4. '                       ' → logprob: -8.127778053283691
    5. ' or' → logprob: -9.002778053283691
    6. '               ' → logprob: -9.127778053283691
    7. '                    
' → logprob: -9.127778053283691
    8. '                    ' → logprob: -9.377778053283691
    9. 'visited' → logprob: -9.502778053283691
    10. '                ' → logprob: -9.627778053283691

Token 212: ' visited' (ID: 18416)
  Prédit: ' visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.2480713129043579
    2. ' queue' → logprob: -1.748071312904358
    3. 'visited' (adapté à ' visited') → logprob: -3.4980711936950684
    4. '                       ' → logprob: -4.873071193695068
    5. 'queue' → logprob: -5.373071193695068
    6. '                   ' → logprob: -5.998071193695068
    7. '
' → logprob: -8.998071670532227
    8. '                    ' → logprob: -9.748071670532227
    9. '   ' → logprob: -10.248071670532227
    10. '               ' → logprob: -10.248071670532227

Token 213: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -3.0590548703912646e-05
    2. '[' → logprob: -11.375030517578125
    3. '   ' → logprob: -12.125030517578125
    4. '[next' → logprob: -12.875030517578125
    5. 'n' → logprob: -13.250030517578125
    6. '```' → logprob: -13.250030517578125
    7. ' [' → logprob: -13.625030517578125
    8. '
' → logprob: -13.750030517578125
    9. '	n' → logprob: -13.875030517578125
    10. ',' → logprob: -14.125030517578125

Token 214: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.0028859488666057587
    2. 'ext' → logprob: -6.377885818481445
    3. 'x' → logprob: -7.127885818481445
    4. '[n' → logprob: -9.752885818481445
    5. '   ' → logprob: -9.877885818481445
    6. ' nxt' → logprob: -9.877885818481445
    7. '[' → logprob: -10.002885818481445
    8. '```' → logprob: -10.127885818481445
    9. ']' → logprob: -10.252885818481445
    10. 't' → logprob: -10.627885818481445

Token 215: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -7.123899558791891e-05
    2. ']=' → logprob: -9.87507152557373
    3. '=' → logprob: -11.87507152557373
    4. ' ]' → logprob: -12.25007152557373
    5. ')' → logprob: -12.37507152557373
    6. ' =' → logprob: -12.50007152557373
    7. '}' → logprob: -16.500070571899414
    8. '']' → logprob: -16.750070571899414
    9. ' ' → logprob: -17.750070571899414
    10. '   ' → logprob: -18.000070571899414

Token 216: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889056205749512
    2. ' =' → logprob: -2.578890562057495
    3. ']' → logprob: -14.203890800476074
    4. ']=' → logprob: -16.328889846801758
    5. ')' → logprob: -17.453889846801758
    6. ' ' → logprob: -18.953889846801758
    7. '=v' → logprob: -19.078889846801758
    8. '[' → logprob: -19.703889846801758
    9. ')=' → logprob: -19.703889846801758
    10. '＝' → logprob: -19.953889846801758

Token 217: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0011703446507453918
    2. ' dist' → logprob: -6.7511701583862305
    3. '	dist' → logprob: -16.501171112060547
    4. '   ' → logprob: -16.626171112060547
    5. '(dist' → logprob: -18.876171112060547
    6. '                   ' → logprob: -18.876171112060547
    7. 'd' → logprob: -19.501171112060547
    8. 'Dist' → logprob: -20.001171112060547
    9. '               ' → logprob: -20.876171112060547
    10. '.dist' → logprob: -20.876171112060547

Token 218: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.575939953327179
    2. ' +' → logprob: -0.825939953327179
    3. '＋' → logprob: -15.825940132141113
    4. '                   ' → logprob: -15.950940132141113
    5. ' ' → logprob: -16.575939178466797
    6. ' plus' → logprob: -16.700939178466797
    7. ' +
' → logprob: -17.825939178466797
    8. '   ' → logprob: -17.950939178466797
    9. '+
' → logprob: -18.075939178466797
    10. ' ' → logprob: -18.700939178466797

Token 219: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003357006062287837
    2. ' ' → logprob: -8.000335693359375
    3. '   ' → logprob: -15.375335693359375
    4. '```' → logprob: -16.875335693359375
    5. ' ' → logprob: -17.250335693359375
    6. '  ' → logprob: -18.062835693359375
    7. '
' → logprob: -18.125335693359375
    8. '+' → logprob: -18.750335693359375
    9. '<|end|>' → logprob: -19.187835693359375
    10. '[' → logprob: -19.375335693359375

Token 220: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -18.625001907348633
    4. '```' → logprob: -19.125001907348633
    5. '
' → logprob: -20.250001907348633
    6. '  ' → logprob: -20.875001907348633
    7. '۱' → logprob: -22.062501907348633
    8. '0' → logprob: -22.312501907348633
    9. '<|end|>' → logprob: -22.500001907348633
    10. '+' → logprob: -22.500001907348633

Token 221: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04956085607409477
    2. '
' → logprob: -3.049560785293579
    3. '                    
' → logprob: -7.674561023712158
    4. '				' → logprob: -9.049560546875
    5. ' queue' → logprob: -9.174560546875
    6. 'queue' → logprob: -9.174560546875
    7. '(queue' → logprob: -10.674560546875
    8. '		           ' → logprob: -11.049560546875
    9. '           ' → logprob: -11.174560546875
    10. ',' → logprob: -11.174560546875

Token 222: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0010553185129538178
    2. '
' → logprob: -7.5010552406311035
    3. '                    
' → logprob: -8.751055717468262
    4. 'queue' → logprob: -9.251055717468262
    5. '				' → logprob: -9.376055717468262
    6. ' queue' → logprob: -9.376055717468262
    7. '		           ' → logprob: -11.251055717468262
    8. '           ' → logprob: -11.501055717468262
    9. '               ' → logprob: -11.626055717468262
    10. '       ' → logprob: -11.876055717468262

Token 223: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.02325141802430153
    2. ' queue' → logprob: -3.773251533508301
    3. '                   ' → logprob: -12.1482515335083
    4. '	queue' → logprob: -15.0232515335083
    5. '(queue' → logprob: -15.8982515335083
    6. '.queue' → logprob: -16.523250579833984
    7. '   ' → logprob: -18.148250579833984
    8. '```' → logprob: -18.773250579833984
    9. '           ' → logprob: -19.148250579833984
    10. '               ' → logprob: -19.398250579833984

Token 224: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.1279553291387856e-05
    2. '.' → logprob: -12.125011444091797
    3. '.enqueue' → logprob: -12.750011444091797
    4. '.p' → logprob: -13.750011444091797
    5. 'append' → logprob: -14.250011444091797
    6. '.extend' → logprob: -14.250011444091797
    7. ' .' → logprob: -15.500011444091797
    8. '.put' → logprob: -15.750011444091797
    9. ').' → logprob: -16.000011444091797
    10. '.app' → logprob: -17.500011444091797

Token 225: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.04985169321298599
    2. '(' → logprob: -3.049851655960083
    3. '(n' → logprob: -6.674851894378662
    4. ' (' → logprob: -15.049851417541504
    5. ' ((' → logprob: -15.549851417541504
    6. '(('' → logprob: -15.674851417541504
    7. '(
' → logprob: -15.924851417541504
    8. '(((' → logprob: -16.04985237121582
    9. '(next' → logprob: -16.54985237121582
    10. '(nx' → logprob: -16.79985237121582

Token 226: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.248469718324486e-05
    2. ' nxt' → logprob: -10.750022888183594
    3. '   ' → logprob: -15.000022888183594
    4. '(n' → logprob: -15.375022888183594
    5. '[n' → logprob: -16.250022888183594
    6. 'nx' → logprob: -16.375022888183594
    7. '	n' → logprob: -16.875022888183594
    8. '```' → logprob: -17.000022888183594
    9. ' ' → logprob: -17.125022888183594
    10. 'n't' → logprob: -17.125022888183594

Token 227: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -1.2113979209971149e-05
    2. 'x' → logprob: -11.375012397766113
    3. '   ' → logprob: -15.125012397766113
    4. 't' → logprob: -15.875012397766113
    5. '```' → logprob: -16.750011444091797
    6. ',' → logprob: -18.125011444091797
    7. '
' → logprob: -18.375011444091797
    8. ' xt' → logprob: -18.500011444091797
    9. 'txt' → logprob: -18.625011444091797
    10. '[' → logprob: -18.750011444091797

Token 228: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.074907287256792e-05
    2. ' ,' → logprob: -10.12506103515625
    3. ',n' → logprob: -11.37506103515625
    4. '),' → logprob: -11.87506103515625
    5. 'n' → logprob: -14.25006103515625
    6. ')' → logprob: -14.75006103515625
    7. ',
' → logprob: -15.25006103515625
    8. '   ' → logprob: -15.37506103515625
    9. '(n' → logprob: -15.50006103515625
    10. '',' → logprob: -16.50006103515625

Token 229: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.05488375201821327
    2. ' dist' → logprob: -2.9298837184906006
    3. '(dist' → logprob: -14.30488395690918
    4. '	dist' → logprob: -14.67988395690918
    5. 'Dist' → logprob: -15.80488395690918
    6. ' ' → logprob: -16.67988395690918
    7. '   ' → logprob: -16.67988395690918
    8. 'd' → logprob: -17.30488395690918
    9. '_dist' → logprob: -17.42988395690918
    10. '.dist' → logprob: -17.55488395690918

Token 230: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5759396553039551
    2. '+' → logprob: -0.8259396553039551
    3. ' ' → logprob: -16.450939178466797
    4. ' ' → logprob: -16.450939178466797
    5. ')' → logprob: -17.075939178466797
    6. ' plus' → logprob: -17.825939178466797
    7. '                   ' → logprob: -17.950939178466797
    8. '+
' → logprob: -18.200939178466797
    9. ')+' → logprob: -18.200939178466797
    10. ' +
' → logprob: -18.200939178466797

Token 231: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002969703928101808
    2. ' ' → logprob: -8.125296592712402
    3. '   ' → logprob: -14.875296592712402
    4. ')' → logprob: -15.125296592712402
    5. '```' → logprob: -15.375296592712402
    6. '
' → logprob: -17.68779754638672
    7. '  ' → logprob: -18.06279754638672
    8. '))' → logprob: -18.18779754638672
    9. '                   ' → logprob: -18.37529754638672
    10. '<|end|>' → logprob: -18.62529754638672

Token 232: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -11.875006675720215
    3. '```' → logprob: -17.00000762939453
    4. '   ' → logprob: -18.18750762939453
    5. ')' → logprob: -18.50000762939453
    6. '2' → logprob: -19.75000762939453
    7. '１' → logprob: -19.81250762939453
    8. '۱' → logprob: -19.81250762939453
    9. '  ' → logprob: -20.31250762939453
    10. '-' → logprob: -20.31250762939453

Token 233: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00011856284982059151
    2. '))
' → logprob: -9.250118255615234
    3. ')' → logprob: -10.750118255615234
    4. ')))' → logprob: -14.375118255615234
    5. ' ))' → logprob: -15.625118255615234
    6. '                   ' → logprob: -16.500118255615234
    7. '   ' → logprob: -17.750118255615234
    8. '               ' → logprob: -17.875118255615234
    9. ')
' → logprob: -18.000118255615234
    10. '       ' → logprob: -18.625118255615234

Token 234: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0017857291968539357
    2. 'else' → logprob: -6.626785755157471
    3. 'print' → logprob: -8.501785278320312
    4. ' if' → logprob: -8.626785278320312
    5. '   ' → logprob: -10.001785278320312
    6. '```' → logprob: -12.126785278320312
    7. '#' → logprob: -12.501785278320312
    8. ')' → logprob: -12.626785278320312
    9. 'elif' → logprob: -12.751785278320312
    10. 'for' → logprob: -12.751785278320312

Token 235: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.008666571229696274
    2. '   ' → logprob: -4.758666515350342
    3. ' if' → logprob: -9.8836669921875
    4. '```' → logprob: -14.8836669921875
    5. '
' → logprob: -15.1336669921875
    6. 'If' → logprob: -15.2586669921875
    7. 'else' → logprob: -16.3836669921875
    8. '	if' → logprob: -17.1336669921875
    9. '    
' → logprob: -17.1336669921875
    10. ';if' → logprob: -17.6336669921875

Token 236: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.47408029437065125
    2. 'not' → logprob: -0.9740803241729736
    3. '   ' → logprob: -13.599080085754395
    4. '	not' → logprob: -13.724080085754395
    5. '
' → logprob: -14.974080085754395
    6. ' ' → logprob: -15.724080085754395
    7. 'n' → logprob: -15.849080085754395
    8. 'found' → logprob: -16.09908103942871
    9. ' no' → logprob: -16.47408103942871
    10. ' ' → logprob: -16.72408103942871

Token 237: ' found' (ID: 2491)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.1269284337759018
    2. ' found' → logprob: -2.1269283294677734
    3. '	found' → logprob: -14.876928329467773
    4. '(found' → logprob: -17.376928329467773
    5. ' ' → logprob: -18.376928329467773
    6. 'Found' → logprob: -18.626928329467773
    7. '_found' → logprob: -18.626928329467773
    8. ' ' → logprob: -18.751928329467773
    9. 'find' → logprob: -19.876928329467773
    10. '   ' → logprob: -20.251928329467773

Token 238: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007612424436956644
    2. ':
' → logprob: -4.882612228393555
    3. '   ' → logprob: -12.632612228393555
    4. 'print' → logprob: -14.257612228393555
    5. '():
' → logprob: -14.632612228393555
    6. ':

' → logprob: -14.757612228393555
    7. ' :' → logprob: -14.882612228393555
    8. '       ' → logprob: -15.007612228393555
    9. '():' → logprob: -15.257612228393555
    10. '):' → logprob: -15.882612228393555

Token 239: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021728919818997383
    2. '   ' → logprob: -4.521728992462158
    3. 'print' → logprob: -4.771728992462158
    4. ' print' → logprob: -6.146728992462158
    5. '           ' → logprob: -12.146728515625
    6. '     ' → logprob: -13.146728515625
    7. '
' → logprob: -13.396728515625
    8. '        
' → logprob: -13.521728515625
    9. '    
' → logprob: -13.521728515625
    10. '    ' → logprob: -13.896728515625

Token 240: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.000989103689789772
    2. ' print' → logprob: -7.500988960266113
    3. '   ' → logprob: -7.750988960266113
    4. '       ' → logprob: -12.125988960266113
    5. '```' → logprob: -16.25098991394043
    6. '  ' → logprob: -16.75098991394043
    7. '	print' → logprob: -16.87598991394043
    8. ' ' → logprob: -17.12598991394043
    9. '           ' → logprob: -18.00098991394043
    10. '    ' → logprob: -18.50098991394043

Token 241: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -1.0445127372804563e-05
    2. '(' → logprob: -11.50001049041748
    3. '('' → logprob: -15.50001049041748
    4. ' ("' → logprob: -17.625009536743164
    5. '("")' → logprob: -18.250009536743164
    6. '()' → logprob: -19.250009536743164
    7. '("("' → logprob: -19.625009536743164
    8. '(("' → logprob: -19.875009536743164
    9. '(
' → logprob: -20.250009536743164
    10. '"' → logprob: -20.500009536743164

Token 242: 'NA' (ID: 9555)
  Prédit: 'NA'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NA' → logprob: -0.00015872348740231246
    2. '"' → logprob: -8.750158309936523
    3. ' NA' → logprob: -15.750158309936523
    4. '"N' → logprob: -17.625158309936523
    5. ''' → logprob: -18.375158309936523
    6. 'na' → logprob: -18.500158309936523
    7. 'N' → logprob: -18.750158309936523
    8. 'Na' → logprob: -19.250158309936523
    9. '("' → logprob: -19.250158309936523
    10. 'NO' → logprob: -20.375158309936523

Token 243: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0001991298486245796
    2. ')' → logprob: -9.000199317932129
    3. ')")' → logprob: -9.500199317932129
    4. '")
' → logprob: -14.625199317932129
    5. '}")' → logprob: -15.125199317932129
    6. '')' → logprob: -17.500198364257812
    7. '")}' → logprob: -18.250198364257812
    8. '`)' → logprob: -18.375198364257812
    9. ')"' → logprob: -18.625198364257812
    10. '”)' → logprob: -18.875198364257812


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 241
Tokens correctement prédits (1ère position, stricte): 91
Tokens correctement prédits (1ère position, avec adaptation): 101
Tokens correctement prédits (top 10): 196
Précision stricte (1ère position): 37.76%
Précision adaptée (1ère position): 41.91%
Précision (top 10): 81.33%
================================================================================
