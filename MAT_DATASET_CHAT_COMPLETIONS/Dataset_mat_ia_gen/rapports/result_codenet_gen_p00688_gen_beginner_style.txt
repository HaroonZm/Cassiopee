================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:59:38
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def find_factors(n):
    factors = []
    for i in range(1, abs(n)+1):
        if n % i == 0:
            factors.append(i)
            factors.append(-i)
    return factors

while True:
    line = input()
    if line == '':
        break
    a, b, c = map(int, line.split())
    if a == 0 and b == 0 and c == 0:
        break

    found = False

    # p and r positive integers such that p*r = a
    possible_p = []
    for i in range(1, a+1):
        if a % i == 0:
            possible_p.append(i)

    # iterate over p and r
    for p in possible_p:
        r = a // p
        # q and s integers such that q*s = c
        possible_q = find_factors(c)
        possible_s = find_factors(c)
        for q in possible_q:
            if q == 0:
                continue
            for s in possible_s:
                if s == 0:
                    continue
                if q * s == c and p * s + q * r == b:
                    # check conditions for uniqueness
                    if p > 0 and r > 0:
                        if (p > r) or (p == r and q >= s):
                            print(p, q, r, s)
                            found = True
                            break
            if found:
                break
        if found:
            break

    if not found:
        print("Impossible")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' find' (ID: 1646)
  → Token d'amorce (pas de prédiction)

Token 2: '_f' (ID: 1337)
  → Token d'amorce (pas de prédiction)

Token 3: 'actors' (ID: 37126)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2849844694137573
    2. 'i' → logprob: -1.4099844694137573
    3. 'o' → logprob: -1.9099844694137573
    4. 'ind' → logprob: -2.034984588623047
    5. 'a' → logprob: -2.409984588623047
    6. 'irst' → logprob: -3.659984588623047
    7. 'or' → logprob: -3.909984588623047
    8. 'u' → logprob: -3.909984588623047
    9. '_i' → logprob: -4.909984588623047
    10. 'actor' → logprob: -5.034984588623047

Token 4: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011216760613024235
    2. '_' → logprob: -4.636216640472412
    3. '```' → logprob: -7.511216640472412
    4. '(_:' → logprob: -8.01121711730957
    5. '(_' → logprob: -8.38621711730957
    6. '(:' → logprob: -9.76121711730957
    7. '():' → logprob: -10.26121711730957
    8. ' (' → logprob: -10.38621711730957
    9. '(**' → logprob: -10.51121711730957
    10. '_:' → logprob: -10.76121711730957

Token 5: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02533002197742462
    2. ')' → logprob: -3.775330066680908
    3. ':' → logprob: -6.275330066680908
    4. '```' → logprob: -9.65032958984375
    5. '):
' → logprob: -10.15032958984375
    6. '(' → logprob: -11.15032958984375
    7. '[' → logprob: -11.27532958984375
    8. '():' → logprob: -11.52532958984375
    9. ')：' → logprob: -11.65032958984375
    10. ' ):' → logprob: -12.15032958984375

Token 6: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005386014468967915
    2. '```' → logprob: -5.755385875701904
    3. '   ' → logprob: -6.505385875701904
    4. '():' → logprob: -8.505386352539062
    5. ':
' → logprob: -8.755386352539062
    6. '':' → logprob: -9.630386352539062
    7. '":' → logprob: -9.630386352539062
    8. '`:' → logprob: -9.880386352539062
    9. '``' → logprob: -10.130386352539062
    10. '):' → logprob: -10.880386352539062

Token 7: ' factors' (ID: 11652)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.1965354084968567
    2. '   ' → logprob: -2.071535348892212
    3. '[' → logprob: -3.821535348892212
    4. ':' → logprob: -4.446535587310791
    5. '`' → logprob: -5.821535587310791
    6. '\' → logprob: -5.946535587310791
    7. 'f' → logprob: -6.071535587310791
    8. '``' → logprob: -6.196535587310791
    9. '_' → logprob: -6.196535587310791
    10. ''' → logprob: -6.696535587310791

Token 8: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4710799753665924
    2. '=' → logprob: -1.72107994556427
    3. ' =' → logprob: -1.84607994556427
    4. 's' → logprob: -3.9710800647735596
    5. '[' → logprob: -4.7210798263549805
    6. '[:]' → logprob: -5.5960798263549805
    7. '.' → logprob: -6.4710798263549805
    8. '(' → logprob: -6.8460798263549805
    9. '```' → logprob: -6.9710798263549805
    10. '.append' → logprob: -7.0960798263549805

Token 9: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.03829313442111015
    2. '[]' → logprob: -3.2882931232452393
    3. '[' → logprob: -9.03829288482666
    4. ' [' → logprob: -9.28829288482666
    5. ' ' → logprob: -10.16329288482666
    6. ' set' → logprob: -13.66329288482666
    7. 'set' → logprob: -15.78829288482666
    8. '[:]' → logprob: -16.288293838500977
    9. '[n' → logprob: -16.413293838500977
    10. ' []
' → logprob: -16.413293838500977

Token 10: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8657747507095337
    2. '```' → logprob: -1.1157747507095337
    3. '\' → logprob: -2.365774631500244
    4. '    
' → logprob: -2.615774631500244
    5. 'for' → logprob: -3.865774631500244
    6. ' for' → logprob: -4.240774631500244
    7. '``' → logprob: -4.865774631500244
    8. '\n' → logprob: -5.115774631500244
    9. '`' → logprob: -5.240774631500244
    10. '
' → logprob: -5.365774631500244

Token 11: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8549759984016418
    2. '```' → logprob: -1.354975938796997
    3. '   ' → logprob: -1.729975938796997
    4. 'for' (adapté à ' for') → logprob: -2.604975938796997
    5. '    
' → logprob: -3.979975938796997
    6. '    ' → logprob: -3.979975938796997
    7. '\' → logprob: -4.604976177215576
    8. '     
' → logprob: -5.104976177215576
    9. ' 
' → logprob: -5.479976177215576
    10. '`' → logprob: -5.854976177215576

Token 12: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6341587901115417
    2. ' i' → logprob: -0.7591587901115417
    3. 'i' → logprob: -6.509158611297607
    4. ' range' → logprob: -10.884159088134766
    5. '  ' → logprob: -11.884159088134766
    6. ' _' → logprob: -12.134159088134766
    7. ' ```' → logprob: -12.134159088134766
    8. ' in' → logprob: -12.259159088134766
    9. '```' → logprob: -12.259159088134766
    10. ' ‌' → logprob: -12.509159088134766

Token 13: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0034591832663863897
    2. 'in' → logprob: -5.8784589767456055
    3. ' ' → logprob: -7.6284589767456055
    4. 'n' → logprob: -9.753458976745605
    5. '  ' → logprob: -10.753458976745605
    6. ' n' → logprob: -10.753458976745605
    7. '   ' → logprob: -10.878458976745605
    8. ' range' → logprob: -11.628458976745605
    9. 'range' → logprob: -11.628458976745605
    10. '```' → logprob: -12.003458976745605

Token 14: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.001730040879920125
    2. 'range' → logprob: -6.376729965209961
    3. ' ' → logprob: -10.501729965209961
    4. '(range' → logprob: -15.876729965209961
    5. '	range' → logprob: -16.37672996520996
    6. ' xrange' → logprob: -16.50172996520996
    7. '_range' → logprob: -17.75172996520996
    8. '1' → logprob: -17.87672996520996
    9. ' ' → logprob: -18.12672996520996
    10. ' in' → logprob: -18.50172996520996

Token 15: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.236549335066229e-05
    2. ' (' → logprob: -11.000021934509277
    3. '(n' → logprob: -12.500021934509277
    4. ' ' → logprob: -14.500021934509277
    5. '1' → logprob: -14.750021934509277
    6. '(len' → logprob: -15.375021934509277
    7. '(i' → logprob: -15.500021934509277
    8. '```' → logprob: -15.875021934509277
    9. '(
' → logprob: -16.125022888183594
    10. ')' → logprob: -16.750022888183594

Token 16: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0022313790395855904
    2. ' ' → logprob: -6.127231597900391
    3. '2' → logprob: -10.00223159790039
    4. '   ' → logprob: -15.12723159790039
    5. 'n' → logprob: -15.37723159790039
    6. '(' → logprob: -15.62723159790039
    7. '```' → logprob: -16.00223159790039
    8. ')' → logprob: -16.75223159790039
    9. ' n' → logprob: -17.37723159790039
    10. '0' → logprob: -18.50223159790039

Token 17: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008979357779026031
    2. ' ,' → logprob: -4.758979320526123
    3. ',n' → logprob: -8.008979797363281
    4. 'n' → logprob: -11.508979797363281
    5. ' ' → logprob: -11.883979797363281
    6. '(n' → logprob: -11.883979797363281
    7. ' n' → logprob: -12.383979797363281
    8. ',
' → logprob: -13.883979797363281
    9. '```' → logprob: -14.633979797363281
    10. ',int' → logprob: -14.758979797363281

Token 18: ' abs' (ID: 8443)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.03804275393486023
    2. 'n' → logprob: -3.2880427837371826
    3. 'int' → logprob: -14.788043022155762
    4. ' int' → logprob: -14.788043022155762
    5. '	n' → logprob: -15.163043022155762
    6. ' ' → logprob: -15.663043022155762
    7. '(n' → logprob: -17.038042068481445
    8. ')n' → logprob: -17.038042068481445
    9. ' ' → logprob: -17.788042068481445
    10. '```' → logprob: -18.288042068481445

Token 19: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.07891060411930084
    2. '(' → logprob: -2.5789105892181396
    3. 'n' → logprob: -11.578910827636719
    4. ' (' → logprob: -11.828910827636719
    5. '(
' → logprob: -13.328910827636719
    6. '(i' → logprob: -13.578910827636719
    7. '(num' → logprob: -15.078910827636719
    8. ')' → logprob: -15.953910827636719
    9. ' ' → logprob: -15.953910827636719
    10. ' n' → logprob: -16.07891082763672

Token 20: ')+' (ID: 16161)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030376411974430084
    2. ')+' → logprob: -3.530376434326172
    3. '+' → logprob: -7.905376434326172
    4. ' )' → logprob: -8.780376434326172
    5. ' ' → logprob: -9.905376434326172
    6. ' +' → logprob: -11.030376434326172
    7. '))' → logprob: -11.655376434326172
    8. '```' → logprob: -11.655376434326172
    9. ')):
' → logprob: -12.030376434326172
    10. '   ' → logprob: -13.280376434326172

Token 21: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001398929744027555
    2. ' ' → logprob: -8.875140190124512
    3. '   ' → logprob: -17.625139236450195
    4. '2' → logprob: -17.625139236450195
    5. '```' → logprob: -18.000139236450195
    6. '+' → logprob: -18.375139236450195
    7. ')' → logprob: -18.625139236450195
    8. '(' → logprob: -19.875139236450195
    9. '۱' → logprob: -20.000139236450195
    10. '１' → logprob: -20.000139236450195

Token 22: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005061906762421131
    2. ':' → logprob: -5.630062103271484
    3. ')' → logprob: -6.880062103271484
    4. ' ):' → logprob: -8.130062103271484
    5. '):
' → logprob: -9.130062103271484
    6. ',' → logprob: -11.005062103271484
    7. '   ' → logprob: -12.630062103271484
    8. ' ' → logprob: -13.005062103271484
    9. ' if' → logprob: -13.630062103271484
    10. 'if' → logprob: -13.880062103271484

Token 23: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4654918909072876
    2. '    ' → logprob: -1.9654918909072876
    3. ':' → logprob: -2.340491771697998
    4. ' if' → logprob: -2.715491771697998
    5. '       ' → logprob: -2.965491771697998
    6. ' ' → logprob: -4.590491771697998
    7. ' :' → logprob: -6.215491771697998
    8. '<|end|>' → logprob: -6.715491771697998
    9. '):' → logprob: -6.840491771697998
    10. '  ' → logprob: -7.090491771697998

Token 24: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.059000320732593536
    2. 'if' (adapté à ' if') → logprob: -3.059000253677368
    3. '       ' → logprob: -5.309000492095947
    4. '   ' → logprob: -6.059000492095947
    5. '    ' → logprob: -6.684000492095947
    6. ' ' → logprob: -7.059000492095947
    7. '<|end|>' → logprob: -7.309000492095947
    8. ':' → logprob: -9.059000015258789
    9. '        ' → logprob: -9.809000015258789
    10. '```' → logprob: -10.684000015258789

Token 25: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0011858227662742138
    2. 'n' → logprob: -6.751185894012451
    3. ' ' → logprob: -11.876185417175293
    4. ' (' → logprob: -12.626185417175293
    5. '(n' → logprob: -12.751185417175293
    6. ' ' → logprob: -14.001185417175293
    7. '	n' → logprob: -14.001185417175293
    8. ')n' → logprob: -15.876185417175293
    9. '(' → logprob: -16.25118637084961
    10. '<|end|>' → logprob: -16.37618637084961

Token 26: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.02633386291563511
    2. '%' → logprob: -3.651333808898926
    3. ' ' → logprob: -10.526333808898926
    4. '%i' → logprob: -12.401333808898926
    5. ' ' → logprob: -13.526333808898926
    6. ' %#' → logprob: -15.651333808898926
    7. ' %=' → logprob: -15.901333808898926
    8. '%s' → logprob: -16.026334762573242
    9. '%x' → logprob: -16.276334762573242
    10. '  ' → logprob: -16.401334762573242

Token 27: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.47410276532173157
    2. 'i' → logprob: -0.9741027355194092
    3. ' ' → logprob: -11.224102973937988
    4. '	i' → logprob: -11.599102973937988
    5. '<|end|>' → logprob: -14.349102973937988
    6. ' ' → logprob: -14.724102973937988
    7. '```' → logprob: -14.724102973937988
    8. '[i' → logprob: -14.849102973937988
    9. '  ' → logprob: -15.474102973937988
    10. '0' → logprob: -15.474102973937988

Token 28: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.005298623349517584
    2. '==' → logprob: -5.255298614501953
    3. ' ' → logprob: -10.505298614501953
    4. ' =' → logprob: -10.630298614501953
    5. '=' → logprob: -11.380298614501953
    6. ' ===' → logprob: -14.630298614501953
    7. ')==' → logprob: -14.880298614501953
    8. ' ' → logprob: -15.130298614501953
    9. ')' → logprob: -15.380298614501953
    10. '===' → logprob: -15.755298614501953

Token 29: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.31326231360435486
    2. '0' → logprob: -1.3132623434066772
    3. ' ' → logprob: -14.813261985778809
    4. '<|end|>' → logprob: -15.813261985778809
    5. '   ' → logprob: -17.188262939453125
    6. '  ' → logprob: -17.313262939453125
    7. '```' → logprob: -17.313262939453125
    8. '۰' → logprob: -17.688262939453125
    9. ' ' → logprob: -18.563262939453125
    10. ')' → logprob: -19.438262939453125

Token 30: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0024756586644798517
    2. ' ' → logprob: -6.002475738525391
    3. ' ' → logprob: -19.62747573852539
    4. '   ' → logprob: -19.75247573852539
    5. '۰' → logprob: -20.12747573852539
    6. '  ' → logprob: -20.75247573852539
    7. '```' → logprob: -20.87747573852539
    8. '00' → logprob: -21.87747573852539
    9. ' ' → logprob: -21.87747573852539
    10. '٠' → logprob: -22.00247573852539

Token 31: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015719952061772346
    2. '):' → logprob: -6.501572132110596
    3. ':
' → logprob: -9.876571655273438
    4. ' :' → logprob: -12.001571655273438
    5. ':**' → logprob: -12.376571655273438
    6. '       ' → logprob: -13.001571655273438
    7. '):
' → logprob: -13.501571655273438
    8. ':return' → logprob: -13.626571655273438
    9. '           ' → logprob: -14.376571655273438
    10. ')' → logprob: -14.626571655273438

Token 32: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0032639806158840656
    2. ' factors' → logprob: -6.8782639503479
    3. '            
' → logprob: -7.1282639503479
    4. '<|end|>' → logprob: -7.3782639503479
    5. '            ' → logprob: -9.128264427185059
    6. ')' → logprob: -9.128264427185059
    7. '       ' → logprob: -9.753264427185059
    8. ' 
' → logprob: -9.753264427185059
    9. '               ' → logprob: -10.003264427185059
    10. ' ' → logprob: -10.128264427185059

Token 33: ' factors' (ID: 11652)
  Prédit: ' factors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factors' → logprob: -0.006340991705656052
    2. '           ' → logprob: -5.256340980529785
    3. '               ' → logprob: -7.506340980529785
    4. 'f' → logprob: -8.506340980529785
    5. 'Factors' → logprob: -8.631340980529785
    6. ' ' → logprob: -10.131340980529785
    7. ' f' → logprob: -10.381340980529785
    8. '            ' → logprob: -10.506340980529785
    9. ' factores' → logprob: -10.506340980529785
    10. ' Factors' → logprob: -11.631340980529785

Token 34: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.012532960623502731
    2. '.' → logprob: -4.387533187866211
    3. '.app' → logprob: -12.262533187866211
    4. ' .' → logprob: -12.262533187866211
    5. '.add' → logprob: -12.387533187866211
    6. '.Append' → logprob: -12.762533187866211
    7. 'append' → logprob: -13.637533187866211
    8. '<|end|>' → logprob: -13.637533187866211
    9. '.py' → logprob: -13.762533187866211
    10. '.ap' → logprob: -13.887533187866211

Token 35: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.018151111900806427
    2. '(' → logprob: -4.01815128326416
    3. '(
' → logprob: -13.76815128326416
    4. '(

' → logprob: -16.143150329589844
    5. '(n' → logprob: -18.518150329589844
    6. '((' → logprob: -19.268150329589844
    7. '(I' → logprob: -19.268150329589844
    8. ' (' → logprob: -19.393150329589844
    9. '(x' → logprob: -20.143150329589844
    10. '()' → logprob: -20.143150329589844

Token 36: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.650518920039758e-06
    2. ')
' → logprob: -12.625003814697266
    3. ' )' → logprob: -15.750003814697266
    4. ')return' → logprob: -16.625003814697266
    5. '   ' → logprob: -16.875003814697266
    6. '`)' → logprob: -17.500003814697266
    7. ')`' → logprob: -18.500003814697266
    8. ')n' → logprob: -18.875003814697266
    9. ')

' → logprob: -19.125003814697266
    10. ')i' → logprob: -19.250003814697266

Token 37: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13143199682235718
    2. '
' → logprob: -2.256432056427002
    3. 'return' → logprob: -5.006432056427002
    4. ' return' → logprob: -5.506432056427002
    5. '    
' → logprob: -5.756432056427002
    6. '\n' → logprob: -6.381432056427002
    7. '	return' → logprob: -7.381432056427002
    8. '```' → logprob: -7.381432056427002
    9. '  
' → logprob: -7.881432056427002
    10. ' ' → logprob: -8.131431579589844

Token 38: ' factors' (ID: 11652)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9001883268356323
    2. 'return' → logprob: -0.9001883268356323
    3. ' return' → logprob: -1.9001883268356323
    4. '
' → logprob: -4.025188446044922
    5. ' ' → logprob: -5.025188446044922
    6. '\n' → logprob: -6.275188446044922
    7. ' 
' → logprob: -6.400188446044922
    8. '       ' → logprob: -6.650188446044922
    9. '	return' → logprob: -6.650188446044922
    10. ')' → logprob: -6.775188446044922

Token 39: '.append' (ID: 3709)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 40: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.005948706530034542
    2. '(' → logprob: -5.130948543548584
    3. '-' → logprob: -11.505949020385742
    4. '(abs' → logprob: -11.880949020385742
    5. '(
' → logprob: -13.755949020385742
    6. '(int' → logprob: -14.005949020385742
    7. '(n' → logprob: -14.630949020385742
    8. '(-(' → logprob: -15.505949020385742
    9. '(

' → logprob: -15.630949020385742
    10. '-n' → logprob: -16.380949020385742

Token 41: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.320199877838604e-07
    2. ' i' → logprob: -14.75
    3. '	i' → logprob: -20.75
    4. '<|end|>' → logprob: -20.75
    5. '_i' → logprob: -21.25
    6. '   ' → logprob: -21.25
    7. '(i' → logprob: -21.375
    8. ')i' → logprob: -21.875
    9. '<|end|>' → logprob: -22.0
    10. 'I' → logprob: -22.125

Token 42: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.9160102712921798e-05
    2. ')
' → logprob: -10.500029563903809
    3. '       ' → logprob: -13.750029563903809
    4. '           ' → logprob: -16.000028610229492
    5. '   ' → logprob: -16.000028610229492
    6. '))' → logprob: -16.125028610229492
    7. ' )' → logprob: -16.250028610229492
    8. ')`' → logprob: -17.000028610229492
    9. ')

' → logprob: -17.875028610229492
    10. ')
' → logprob: -18.500028610229492

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4126908779144287
    2. '
' → logprob: -1.1626908779144287
    3. '\n' → logprob: -4.287691116333008
    4. '<|end|>' → logprob: -4.662691116333008
    5. ')' → logprob: -8.162691116333008
    6. 'return' → logprob: -8.287691116333008
    7. '       ' → logprob: -8.287691116333008
    8. '    
' → logprob: -8.412691116333008
    9. ' return' → logprob: -8.412691116333008
    10. '```' → logprob: -8.537691116333008

Token 44: ' return' (ID: 622)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.038220152258872986
    2. '   ' → logprob: -4.038219928741455
    3. '\n' → logprob: -4.663219928741455
    4. '<|end|>' → logprob: -5.538219928741455
    5. '    
' → logprob: -6.163219928741455
    6. 'return' (adapté à ' return') → logprob: -6.663219928741455
    7. '  
' → logprob: -6.913219928741455
    8. '```' → logprob: -7.538219928741455
    9. ' return' → logprob: -8.413220405578613
    10. ' 
' → logprob: -8.413220405578613

Token 45: ' factors' (ID: 11652)
  Prédit: ' factors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factors' → logprob: -0.04310035705566406
    2. 'f' → logprob: -3.168100357055664
    3. ' f' → logprob: -9.668100357055664
    4. ' ' → logprob: -11.293100357055664
    5. 'factor' → logprob: -11.293100357055664
    6. ' factores' → logprob: -13.293100357055664
    7. '   ' → logprob: -13.793100357055664
    8. ' sorted' → logprob: -13.793100357055664
    9. ' list' → logprob: -13.918100357055664
    10. '	f' → logprob: -14.043100357055664

Token 46: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 47: 'while' (ID: 7032)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 48: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.00023619852436240762
    2. 'True' → logprob: -8.875236511230469
    3. ' ' → logprob: -10.250236511230469
    4. ' not' → logprob: -10.375236511230469
    5. ' n' → logprob: -10.625236511230469
    6. ' input' → logprob: -12.750236511230469
    7. '(True' → logprob: -13.750236511230469
    8. '  ' → logprob: -14.500236511230469
    9. ' condition' → logprob: -14.750236511230469
    10. ' true' → logprob: -16.12523651123047

Token 49: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20290507376194
    2. ' :' → logprob: -1.7029050588607788
    3. '():' → logprob: -6.952905178070068
    4. '   ' → logprob: -8.70290470123291
    5. ' :
' → logprob: -8.70290470123291
    6. ':
' → logprob: -9.82790470123291
    7. '(' → logprob: -9.95290470123291
    8. '(:' → logprob: -10.57790470123291
    9. '):' → logprob: -11.45290470123291
    10. ' ):' → logprob: -11.70290470123291

Token 50: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011841575615108013
    2. ' input' → logprob: -7.876183986663818
    3. '    
' → logprob: -8.001184463500977
    4. 'input' → logprob: -9.126184463500977
    5. 'n' → logprob: -9.376184463500977
    6. '```' → logprob: -9.501184463500977
    7. ' user' → logprob: -10.126184463500977
    8. ':' → logprob: -10.626184463500977
    9. '(' → logprob: -10.876184463500977
    10. ' n' → logprob: -11.126184463500977

Token 51: ' line' (ID: 2543)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.2570405006408691
    2. ' number' → logprob: -1.2570405006408691
    3. 'n' → logprob: -1.8820405006408691
    4. 'number' → logprob: -2.382040500640869
    5. ' try' → logprob: -2.632040500640869
    6. 'num' → logprob: -3.382040500640869
    7. ' user' → logprob: -3.757040500640869
    8. ' num' → logprob: -3.882040500640869
    9. 'try' → logprob: -4.007040500640869
    10. 'user' → logprob: -4.757040500640869

Token 52: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0008065330912359059
    2. '=' → logprob: -7.1258063316345215
    3. ' ' → logprob: -13.50080680847168
    4. '_' → logprob: -15.00080680847168
    5. 's' → logprob: -15.62580680847168
    6. '  ' → logprob: -15.75080680847168
    7. '   ' → logprob: -17.12580680847168
    8. '_input' → logprob: -18.00080680847168
    9. '=input' → logprob: -18.00080680847168
    10. '(' → logprob: -18.50080680847168

Token 53: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.029750604182481766
    2. 'input' → logprob: -3.5297505855560303
    3. '=input' → logprob: -16.15475082397461
    4. '_input' → logprob: -18.27975082397461
    5. '(input' → logprob: -18.77975082397461
    6. '	input' → logprob: -19.77975082397461
    7. '<input' → logprob: -19.77975082397461
    8. '   ' → logprob: -20.02975082397461
    9. '```' → logprob: -20.02975082397461
    10. ',input' → logprob: -21.15475082397461

Token 54: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25792166590690613
    2. '()' → logprob: -1.5079216957092285
    3. '('' → logprob: -5.2579216957092285
    4. '("("' → logprob: -8.00792121887207
    5. '("' → logprob: -8.50792121887207
    6. '("")' → logprob: -8.63292121887207
    7. '().' → logprob: -11.63292121887207
    8. '()(' → logprob: -12.38292121887207
    9. '(">' → logprob: -12.50792121887207
    10. ' ()' → logprob: -12.50792121887207

Token 55: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 56: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.01982455886900425
    2. '<|end|>' → logprob: -4.769824504852295
    3. ' ' → logprob: -5.019824504852295
    4. 'if' (adapté à ' if') → logprob: -6.019824504852295
    5. '   ' → logprob: -7.269824504852295
    6. '<|end|>' → logprob: -8.019824981689453
    7. '    ' → logprob: -8.144824981689453
    8. '.strip' → logprob: -8.394824981689453
    9. ' =' → logprob: -8.644824981689453
    10. ' try' → logprob: -9.269824981689453

Token 57: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.02338780276477337
    2. ' line' → logprob: -3.773387908935547
    3. 'not' → logprob: -9.273387908935547
    4. ' ' → logprob: -10.148387908935547
    5. 'line' → logprob: -11.648387908935547
    6. ' ' → logprob: -14.898387908935547
    7. '	not' → logprob: -16.898387908935547
    8. '	line' → logprob: -17.148387908935547
    9. '#line' → logprob: -17.148387908935547
    10. '  ' → logprob: -17.898387908935547

Token 58: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0023606636095792055
    2. '.strip' → logprob: -6.752360820770264
    3. ' .' → logprob: -7.752360820770264
    4. '.startswith' → logprob: -7.877360820770264
    5. '==' → logprob: -8.127360343933105
    6. '.' → logprob: -9.752360343933105
    7. ' ' → logprob: -11.252360343933105
    8. '()==' → logprob: -12.377360343933105
    9. '.lower' → logprob: -13.502360343933105
    10. ' =="' → logprob: -13.502360343933105

Token 59: ' '':
' (ID: 125614)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -1.1740171909332275
    2. ''' → logprob: -1.4240171909332275
    3. '""' → logprob: -2.1740171909332275
    4. '''' → logprob: -2.2990171909332275
    5. ' ""' → logprob: -2.5490171909332275
    6. ' ''' → logprob: -2.9240171909332275
    7. ' '' → logprob: -2.9240171909332275
    8. ' "' → logprob: -3.0490171909332275
    9. ''t' → logprob: -7.299016952514648
    10. ' ' → logprob: -7.549016952514648

Token 60: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026319805532693863
    2. ':' → logprob: -4.401319980621338
    3. '   ' → logprob: -4.401319980621338
    4. '    ' → logprob: -6.776319980621338
    5. ' :' → logprob: -9.02631950378418
    6. ' ' → logprob: -9.90131950378418
    7. ' break' → logprob: -10.02631950378418
    8. '      ' → logprob: -10.65131950378418
    9. '        ' → logprob: -11.02631950378418
    10. '     ' → logprob: -11.02631950378418

Token 61: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4203118085861206
    2. '   ' → logprob: -1.4203118085861206
    3. ' break' → logprob: -2.29531192779541
    4. 'break' (adapté à ' break') → logprob: -7.67031192779541
    5. '	break' → logprob: -8.29531192779541
    6. ' ' → logprob: -10.17031192779541
    7. '           ' → logprob: -10.54531192779541
    8. '   ' → logprob: -13.17031192779541
    9. '    ' → logprob: -13.67031192779541
    10. '_break' → logprob: -13.92031192779541

Token 62: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020742865279316902
    2. '    
' → logprob: -4.270742893218994
    3. '
' → logprob: -5.145742893218994
    4. '<|end|>' → logprob: -8.145742416381836
    5. 'n' → logprob: -8.270742416381836
    6. '  
' → logprob: -9.520742416381836
    7. '<|end|>' → logprob: -10.770742416381836
    8. '   
' → logprob: -10.770742416381836
    9. ' 
' → logprob: -10.895742416381836
    10. '        
' → logprob: -11.270742416381836

Token 63: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009703795425593853
    2. '
' → logprob: -5.384703636169434
    3. '    
' → logprob: -6.009703636169434
    4. 'n' → logprob: -6.134703636169434
    5. '<|end|>' → logprob: -8.384703636169434
    6. ' n' → logprob: -9.384703636169434
    7. '  
' → logprob: -10.134703636169434
    8. 'try' → logprob: -11.134703636169434
    9. '```' → logprob: -11.259703636169434
    10. '   
' → logprob: -11.384703636169434

Token 64: ' a' (ID: 261)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6221879124641418
    2. '   ' → logprob: -1.247187852859497
    3. 'n' → logprob: -1.747187852859497
    4. ' try' → logprob: -7.247188091278076
    5. ' number' → logprob: -7.872188091278076
    6. 'num' → logprob: -8.872187614440918
    7. ' numbers' → logprob: -9.122187614440918
    8. ' num' → logprob: -9.122187614440918
    9. 'try' → logprob: -9.497187614440918
    10. ' print' → logprob: -10.122187614440918

Token 65: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023458484560251236
    2. '=' → logprob: -4.398458480834961
    3. ' ' → logprob: -5.023458480834961
    4. ',' → logprob: -5.523458480834961
    5. ' ,' → logprob: -8.273458480834961
    6. 'r' → logprob: -10.273458480834961
    7. '=int' → logprob: -11.773458480834961
    8. '.' → logprob: -12.523458480834961
    9. '  ' → logprob: -12.773458480834961
    10. ' =
' → logprob: -13.523458480834961

Token 66: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.07331828773021698
    2. ' ' → logprob: -3.0733182430267334
    3. 'b' → logprob: -3.8233182430267334
    4. '<|end|>' → logprob: -6.6983184814453125
    5. ' =' → logprob: -7.0733184814453125
    6. 'space' → logprob: -8.948318481445312
    7. '=' → logprob: -9.198318481445312
    8. 's' → logprob: -9.823318481445312
    9. ' space' → logprob: -10.573318481445312
    10. '<|end|>' → logprob: -10.573318481445312

Token 67: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.001730987336486578
    2. '=' → logprob: -6.376730918884277
    3. ',' → logprob: -10.501730918884277
    4. ' ' → logprob: -14.126730918884277
    5. ' ,' → logprob: -15.626730918884277
    6. '<|end|>' → logprob: -15.876730918884277
    7. ' =
' → logprob: -16.126731872558594
    8. ')' → logprob: -16.751731872558594
    9. '=int' → logprob: -17.751731872558594
    10. ' =)' → logprob: -18.001731872558594

Token 68: ' c' (ID: 274)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16254380345344543
    2. 'c' → logprob: -2.662543773651123
    3. ' c' → logprob: -3.162543773651123
    4. '=' → logprob: -3.787543773651123
    5. ' ' → logprob: -4.287543773651123
    6. '*' → logprob: -7.787543773651123
    7. '_' → logprob: -8.287544250488281
    8. ' *' → logprob: -8.412544250488281
    9. ' _' → logprob: -8.912544250488281
    10. '*c' → logprob: -9.787544250488281

Token 69: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012511532753705978
    2. '=' → logprob: -4.387511730194092
    3. ',' → logprob: -13.387511253356934
    4. ' ' → logprob: -15.762511253356934
    5. ')' → logprob: -16.01251220703125
    6. ' =
' → logprob: -16.88751220703125
    7. '=int' → logprob: -17.26251220703125
    8. '=line' → logprob: -17.51251220703125
    9. '    ' → logprob: -17.63751220703125
    10. '<|end|>' → logprob: -17.88751220703125

Token 70: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.020672567188739777
    2. 'map' → logprob: -4.020672798156738
    3. ' line' → logprob: -6.020672798156738
    4. 'line' → logprob: -9.395672798156738
    5. ' [' → logprob: -12.770672798156738
    6. '[' → logprob: -13.145672798156738
    7. '	map' → logprob: -13.645672798156738
    8. '[line' → logprob: -14.145672798156738
    9. ' ' → logprob: -14.895672798156738
    10. '   ' → logprob: -15.270672798156738

Token 71: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.1024344265460968
    2. '(' → logprob: -2.3524343967437744
    3. '(str' → logprob: -6.2274346351623535
    4. '(lambda' → logprob: -9.477434158325195
    5. '(float' → logprob: -9.602434158325195
    6. '(eval' → logprob: -9.727434158325195
    7. '(list' → logprob: -11.352434158325195
    8. '(input' → logprob: -11.602434158325195
    9. 'int' → logprob: -11.852434158325195
    10. '(line' → logprob: -11.852434158325195

Token 72: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0011718906462192535
    2. ')' → logprob: -7.251172065734863
    3. '(' → logprob: -8.001172065734863
    4. ' line' → logprob: -9.751172065734863
    5. ',line' → logprob: -10.001172065734863
    6. '=line' → logprob: -11.751172065734863
    7. '[line' → logprob: -12.376172065734863
    8. '#line' → logprob: -12.876172065734863
    9. '	line' → logprob: -13.376172065734863
    10. ',' → logprob: -13.501172065734863

Token 73: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.16035360097885132
    2. 'line' → logprob: -1.910353660583496
    3. ')' → logprob: -9.160353660583496
    4. '	line' → logprob: -11.535353660583496
    5. '(line' → logprob: -11.910353660583496
    6. '[line' → logprob: -12.285353660583496
    7. '=line' → logprob: -13.910353660583496
    8. '#line' → logprob: -14.035353660583496
    9. ',line' → logprob: -14.160353660583496
    10. ' )' → logprob: -15.160353660583496

Token 74: '.split' (ID: 10347)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.08755572140216827
    2. '.split' → logprob: -2.5875556468963623
    3. '.strip' → logprob: -5.462555885314941
    4. '.' → logprob: -5.462555885314941
    5. ' .' → logprob: -9.962555885314941
    6. '()' → logprob: -10.087555885314941
    7. ')' → logprob: -10.337555885314941
    8. 'split' → logprob: -11.587555885314941
    9. ').' → logprob: -12.462555885314941
    10. '.readline' → logprob: -13.337555885314941

Token 75: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3107898533344269
    2. '('' → logprob: -1.4357898235321045
    3. '()' → logprob: -4.060790061950684
    4. ')' → logprob: -4.935790061950684
    5. '(' → logprob: -5.560790061950684
    6. '(','' → logprob: -7.185790061950684
    7. '()))' → logprob: -9.310790061950684
    8. ' ())' → logprob: -10.560790061950684
    9. '("' → logprob: -10.810790061950684
    10. '(',' → logprob: -11.810790061950684

Token 76: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.569688081741333
    2. '<|end|>' → logprob: -0.944688081741333
    3. ' if' → logprob: -4.569687843322754
    4. ' 
' → logprob: -4.944687843322754
    5. '   ' → logprob: -5.194687843322754
    6. '    
' → logprob: -5.319687843322754
    7. '<|end|>' → logprob: -5.944687843322754
    8. 'def' → logprob: -5.944687843322754
    9. 'if' → logprob: -6.194687843322754
    10. '  
' → logprob: -6.694687843322754

Token 77: ' if' (ID: 538)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.0352529287338257
    2. ' roots' → logprob: -1.9102529287338257
    3. 'd' → logprob: -2.7852530479431152
    4. ' if' → logprob: -2.9102530479431152
    5. '    
' → logprob: -3.0352530479431152
    6. '<|end|>' → logprob: -3.1602530479431152
    7. 'roots' → logprob: -3.5352530479431152
    8. 'delta' → logprob: -3.6602530479431152
    9. '   ' → logprob: -3.7852530479431152
    10. '
' → logprob: -3.9102530479431152

Token 78: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.07694579660892487
    2. 'a' → logprob: -2.8269457817077637
    3. ' b' → logprob: -4.701945781707764
    4. ' (' → logprob: -5.701945781707764
    5. 'b' → logprob: -6.576945781707764
    6. '(' → logprob: -7.951945781707764
    7. ' c' → logprob: -8.326946258544922
    8. '(a' → logprob: -8.326946258544922
    9. ' ' → logprob: -9.451946258544922
    10. ' abs' → logprob: -9.576946258544922

Token 79: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1878114640712738
    2. ' !=' → logprob: -1.9378114938735962
    3. '==' → logprob: -3.8128113746643066
    4. '!=' → logprob: -5.437811374664307
    5. '=' → logprob: -7.937811374664307
    6. ' ' → logprob: -8.187811851501465
    7. ' =' → logprob: -9.562811851501465
    8. '0' → logprob: -11.937811851501465
    9. ':' → logprob: -12.125311851501465
    10. '**' → logprob: -12.125311851501465

Token 80: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03806673735380173
    2. ' ' → logprob: -3.2880666255950928
    3. 'b' → logprob: -10.913066864013672
    4. ' b' → logprob: -13.038066864013672
    5. '=' → logprob: -13.538066864013672
    6. '<|end|>' → logprob: -13.913066864013672
    7. '1' → logprob: -14.288066864013672
    8. '   ' → logprob: -14.788066864013672
    9. '  ' → logprob: -14.788066864013672
    10. '==' → logprob: -15.225566864013672

Token 81: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009410003549419343
    2. ' ' → logprob: -7.000940799713135
    3. 'b' → logprob: -10.500941276550293
    4. '1' → logprob: -13.750941276550293
    5. ' b' → logprob: -15.500941276550293
    6. '  ' → logprob: -15.563441276550293
    7. '=' → logprob: -16.125940322875977
    8. '   ' → logprob: -16.250940322875977
    9. '<|end|>' → logprob: -16.688440322875977
    10. '۰' → logprob: -16.813440322875977

Token 82: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1314343959093094
    2. ' and' → logprob: -2.131434440612793
    3. 'and' → logprob: -5.881434440612793
    4. ' or' → logprob: -7.131434440612793
    5. ':
' → logprob: -7.506434440612793
    6. ' :' → logprob: -8.631434440612793
    7. '<|end|>' → logprob: -9.006434440612793
    8. ':return' → logprob: -10.631434440612793
    9. '   ' → logprob: -11.631434440612793
    10. '<|end|>' → logprob: -12.131434440612793

Token 83: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.04306827485561371
    2. 'b' → logprob: -3.1680681705474854
    3. ' ' → logprob: -9.918067932128906
    4. '<|end|>' → logprob: -10.918067932128906
    5. ' ' → logprob: -14.293067932128906
    6. '	b' → logprob: -14.793067932128906
    7. '<|end|>' → logprob: -15.293067932128906
    8. '  ' → logprob: -16.418067932128906
    9. '>b' → logprob: -16.543067932128906
    10. ' c' → logprob: -16.668067932128906

Token 84: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.00818012934178114
    2. '<|end|>' → logprob: -5.133180141448975
    3. '==' → logprob: -6.383180141448975
    4. ' ' → logprob: -7.633180141448975
    5. ' and' → logprob: -10.258179664611816
    6. ' =' → logprob: -10.883179664611816
    7. '<|end|>' → logprob: -11.383179664611816
    8. '0' → logprob: -12.758179664611816
    9. ' ' → logprob: -13.383179664611816
    10. '  ' → logprob: -14.133179664611816

Token 85: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008669526316225529
    2. ' ' → logprob: -4.758669376373291
    3. '<|end|>' → logprob: -10.00866985321045
    4. 'c' → logprob: -12.25866985321045
    5. ' and' → logprob: -12.88366985321045
    6. '<|end|>' → logprob: -14.38366985321045
    7. 'and' → logprob: -14.50866985321045
    8. '  ' → logprob: -14.63366985321045
    9. ' c' → logprob: -15.13366985321045
    10. '   ' → logprob: -15.88366985321045

Token 86: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00018268341955263168
    2. ' ' → logprob: -8.62518310546875
    3. '<|end|>' → logprob: -13.25018310546875
    4. 'c' → logprob: -14.12518310546875
    5. ' and' → logprob: -15.37518310546875
    6. 'and' → logprob: -16.00018310546875
    7. '  ' → logprob: -16.50018310546875
    8. '```' → logprob: -17.25018310546875
    9. 's' → logprob: -17.75018310546875
    10. '   ' → logprob: -17.81268310546875

Token 87: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0021948604844510555
    2. 'and' → logprob: -6.127194881439209
    3. '<|end|>' → logprob: -12.37719440460205
    4. ' ' → logprob: -12.50219440460205
    5. '	and' → logprob: -14.75219440460205
    6. '0' → logprob: -14.87719440460205
    7. '   ' → logprob: -15.00219440460205
    8. '<|end|>' → logprob: -15.37719440460205
    9. ':' → logprob: -15.50219440460205
    10. '  ' → logprob: -17.127195358276367

Token 88: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.6329199075698853
    2. 'c' → logprob: -0.7579199075698853
    3. '0' → logprob: -8.507920265197754
    4. ' ' → logprob: -9.757920265197754
    5. '<|end|>' → logprob: -10.382920265197754
    6. '   ' → logprob: -11.382920265197754
    7. '	c' → logprob: -11.632920265197754
    8. '  ' → logprob: -12.382920265197754
    9. '    ' → logprob: -13.257920265197754
    10. ' ' → logprob: -14.132920265197754

Token 89: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.00314277783036232
    2. '==' → logprob: -5.878142833709717
    3. ' ' → logprob: -8.253142356872559
    4. '<|end|>' → logprob: -9.878142356872559
    5. ' =' → logprob: -12.003142356872559
    6. ' !=' → logprob: -12.128142356872559
    7. ' ' → logprob: -12.253142356872559
    8. '0' → logprob: -12.378142356872559
    9. '<|end|>' → logprob: -13.253142356872559
    10. '=' → logprob: -13.753142356872559

Token 90: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01815626211464405
    2. ' ' → logprob: -4.018156051635742
    3. '   ' → logprob: -12.768156051635742
    4. '  ' → logprob: -13.830656051635742
    5. '<|end|>' → logprob: -13.830656051635742
    6. ' ' → logprob: -14.643156051635742
    7. '۰' → logprob: -15.830656051635742
    8. '    ' → logprob: -16.080656051635742
    9. '<|end|>' → logprob: -16.330656051635742
    10. '```' → logprob: -16.705656051635742

Token 91: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012415809032972902
    2. ' ' → logprob: -9.000123977661133
    3. '<|end|>' → logprob: -14.625123977661133
    4. '   ' → logprob: -15.875123977661133
    5. '  ' → logprob: -16.250123977661133
    6. '۰' → logprob: -17.687623977661133
    7. '```' → logprob: -17.750123977661133
    8. '<|end|>' → logprob: -17.937623977661133
    9. ' ' → logprob: -18.812623977661133
    10. ')' → logprob: -19.000123977661133

Token 92: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0020246391650289297
    2. ':
' → logprob: -6.3770246505737305
    3. '   ' → logprob: -8.62702465057373
    4. '       ' → logprob: -8.87702465057373
    5. ' :' → logprob: -13.00202465057373
    6. '.' → logprob: -15.12702465057373
    7. '    ' → logprob: -15.37702465057373
    8. ',' → logprob: -15.75202465057373
    9. '):' → logprob: -15.87702465057373
    10. ' :
' → logprob: -16.252023696899414

Token 93: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03817013278603554
    2. ':' → logprob: -3.288170099258423
    3. ':
' → logprob: -9.288169860839844
    4. '   ' → logprob: -10.788169860839844
    5. '           ' → logprob: -12.288169860839844
    6. ' :' → logprob: -13.038169860839844
    7. '      ' → logprob: -13.163169860839844
    8. ' break' → logprob: -13.663169860839844
    9. '     ' → logprob: -13.788169860839844
    10. '	' → logprob: -14.288169860839844

Token 94: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.182315394282341
    2. ' break' → logprob: -1.8073153495788574
    3. 'break' (adapté à ' break') → logprob: -6.432315349578857
    4. '   ' → logprob: -7.057315349578857
    5. '	break' → logprob: -9.682315826416016
    6. '           ' → logprob: -10.557315826416016
    7. ' ' → logprob: -12.182315826416016
    8. ' ' → logprob: -14.432315826416016
    9. '      ' → logprob: -14.557315826416016
    10. '        
' → logprob: -14.807315826416016

Token 95: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.024800928309559822
    2. '   ' → logprob: -4.399800777435303
    3. '    
' → logprob: -5.024800777435303
    4. '<|end|>' → logprob: -5.274800777435303
    5. '

' → logprob: -8.524801254272461
    6. '  
' → logprob: -9.399801254272461
    7. '<|end|>' → logprob: -9.524801254272461
    8. '```' → logprob: -9.774801254272461
    9. ' 
' → logprob: -10.649801254272461
    10. '   
' → logprob: -11.024801254272461

Token 96: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2596464157104492
    2. '
' → logprob: -1.6346464157104492
    3. '    
' → logprob: -3.509646415710449
    4. 'if' → logprob: -6.634646415710449
    5. '```' → logprob: -7.384646415710449
    6. '<|end|>' → logprob: -7.384646415710449
    7. '   
' → logprob: -8.13464641571045
    8. ' if' → logprob: -8.25964641571045
    9. '  
' → logprob: -8.50964641571045
    10. ' 
' → logprob: -9.00964641571045

Token 97: ' found' (ID: 2491)
  Prédit: 'dis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dis' → logprob: -0.7492889165878296
    2. 'D' → logprob: -1.1242889165878296
    3. 'd' → logprob: -2.624289035797119
    4. 'import' → logprob: -2.749289035797119
    5. '   ' → logprob: -3.374289035797119
    6. 'delta' → logprob: -4.249289035797119
    7. 'det' → logprob: -4.874289035797119
    8. '```' → logprob: -6.249289035797119
    9. 'roots' → logprob: -6.249289035797119
    10. '#' → logprob: -6.499289035797119

Token 98: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.013634827919304371
    2. '=' → logprob: -4.51363468170166
    3. '_factor' → logprob: -7.26363468170166
    4. '_f' → logprob: -7.38863468170166
    5. '_' → logprob: -7.38863468170166
    6. '<|end|>' → logprob: -8.76363468170166
    7. ' ' → logprob: -9.63863468170166
    8. ':' → logprob: -9.76363468170166
    9. '_ro' → logprob: -10.01363468170166
    10. '=False' → logprob: -10.13863468170166

Token 99: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.07891997694969177
    2. ' False' → logprob: -2.5789198875427246
    3. '[]' → logprob: -10.453920364379883
    4. '(False' → logprob: -14.578920364379883
    5. '   ' → logprob: -15.078920364379883
    6. ' []' → logprob: -15.328920364379883
    7. 'F' → logprob: -15.953920364379883
    8. '0' → logprob: -16.328920364379883
    9. 'True' → logprob: -16.828920364379883
    10. ' ' → logprob: -17.078920364379883

Token 100: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14446814358234406
    2. '<|end|>' → logprob: -2.769468069076538
    3. '
' → logprob: -3.019468069076538
    4. '    
' → logprob: -3.894468069076538
    5. ' for' → logprob: -7.144468307495117
    6. '<|end|>' → logprob: -8.019468307495117
    7. ':' → logprob: -8.269468307495117
    8. '  
' → logprob: -8.519468307495117
    9. '    ' → logprob: -8.519468307495117
    10. ',' → logprob: -8.644468307495117

Token 101: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022990841418504715
    2. '
' → logprob: -4.147990703582764
    3. '    
' → logprob: -5.397990703582764
    4. ' for' → logprob: -6.647990703582764
    5. '    ' → logprob: -7.772990703582764
    6. 'for' → logprob: -8.272991180419922
    7. '<|end|>' → logprob: -8.522991180419922
    8. ' 
' → logprob: -9.147991180419922
    9. '  
' → logprob: -10.272991180419922
    10. '   
' → logprob: -10.647991180419922

Token 102: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21317969262599945
    2. '   ' → logprob: -1.7131797075271606
    3. ' for' → logprob: -4.463179588317871
    4. 'roots' → logprob: -9.213179588317871
    5. '```' → logprob: -11.213179588317871
    6. ' roots' → logprob: -11.338179588317871
    7. 'if' → logprob: -11.588179588317871
    8. '	for' → logprob: -11.713179588317871
    9. 'x' → logprob: -11.838179588317871
    10. '  ' → logprob: -12.088179588317871

Token 103: ' p' (ID: 275)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.38317614793777466
    2. 'for' → logprob: -1.5081760883331299
    3. '   ' → logprob: -2.38317608833313
    4. ' factors' → logprob: -5.758176326751709
    5. 'f' → logprob: -6.883176326751709
    6. ' candidates' → logprob: -9.50817584991455
    7. ' roots' → logprob: -9.50817584991455
    8. ' f' → logprob: -9.63317584991455
    9. ' ' → logprob: -9.75817584991455
    10. 'factor' → logprob: -10.25817584991455

Token 104: ' and' (ID: 326)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7442429065704346
    2. 'f' → logprob: -1.1192429065704346
    3. 'otential' → logprob: -2.4942429065704346
    4. 'r' → logprob: -3.3692429065704346
    5. 'oss' → logprob: -3.6192429065704346
    6. '   ' → logprob: -3.9942429065704346
    7. 'ro' → logprob: -4.3692426681518555
    8. ' for' → logprob: -5.2442426681518555
    9. '#' → logprob: -6.1192426681518555
    10. 'roots' → logprob: -6.2442426681518555

Token 105: ' r' (ID: 428)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.4287978708744049
    2. ' q' → logprob: -1.0537978410720825
    3. 'n' → logprob: -10.928797721862793
    4. '   ' → logprob: -11.053797721862793
    5. 's' → logprob: -11.303797721862793
    6. ' s' → logprob: -11.803797721862793
    7. ' ' → logprob: -11.803797721862793
    8. '<|end|>' → logprob: -12.053797721862793
    9. ' n' → logprob: -12.303797721862793
    10. '	q' → logprob: -12.553797721862793

Token 106: ' positive' (ID: 8841)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.0613361597061157
    2. ' =' → logprob: -1.1863361597061157
    3. ' for' → logprob: -1.4363361597061157
    4. 'for' → logprob: -3.186336040496826
    5. '   ' → logprob: -3.436336040496826
    6. 'in' → logprob: -4.561336040496826
    7. '<|end|>' → logprob: -4.811336040496826
    8. '=' → logprob: -5.061336040496826
    9. ' are' → logprob: -5.186336040496826
    10. '    ' → logprob: -5.936336040496826

Token 107: ' integers' (ID: 54912)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7542956471443176
    2. 'for' → logprob: -1.0042955875396729
    3. '<|end|>' → logprob: -2.379295587539673
    4. '   ' → logprob: -2.754295587539673
    5. '<|end|>' → logprob: -5.379295825958252
    6. ',' → logprob: -7.879295825958252
    7. ' ' → logprob: -7.879295825958252
    8. 's' → logprob: -8.379295349121094
    9. ' =' → logprob: -8.504295349121094
    10. ':' → logprob: -8.504295349121094

Token 108: ' such' (ID: 2238)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0167690459638834
    2. ' for' → logprob: -4.516768932342529
    3. '<|end|>' → logprob: -5.641768932342529
    4. 'for' → logprob: -6.391768932342529
    5. ',' → logprob: -8.641769409179688
    6. '<|end|>' → logprob: -9.016769409179688
    7. '  ' → logprob: -10.391769409179688
    8. '    ' → logprob: -10.391769409179688
    9. '    
' → logprob: -10.516769409179688
    10. ' ' → logprob: -10.516769409179688

Token 109: ' that' (ID: 484)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'that' → logprob: -0.36021748185157776
    2. ' that' → logprob: -1.2352174520492554
    3. '   ' → logprob: -4.735217571258545
    4. '#' → logprob: -5.985217571258545
    5. '_that' → logprob: -9.110217094421387
    6. 'as' → logprob: -9.485217094421387
    7. ' as' → logprob: -9.610217094421387
    8. '       ' → logprob: -9.985217094421387
    9. 'That' → logprob: -10.360217094421387
    10. '	that' → logprob: -11.235217094421387

Token 110: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.03922351449728012
    2. ' p' → logprob: -3.4142234325408936
    3. '   ' → logprob: -5.414223670959473
    4. '(p' → logprob: -8.164223670959473
    5. '0' → logprob: -8.289223670959473
    6. 'for' → logprob: -9.289223670959473
    7. '1' → logprob: -9.289223670959473
    8. 'r' → logprob: -9.664223670959473
    9. 'a' → logprob: -9.914223670959473
    10. ' (' → logprob: -9.914223670959473

Token 111: '*r' (ID: 92096)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.08094438165426254
    2. ' and' → logprob: -3.955944299697876
    3. '*' → logprob: -4.080944538116455
    4. ' =' → logprob: -4.580944538116455
    5. ',' → logprob: -4.955944538116455
    6. ' <=' → logprob: -5.330944538116455
    7. ' in' → logprob: -5.455944538116455
    8. '<|end|>' → logprob: -5.955944538116455
    9. ' >' → logprob: -6.205944538116455
    10. '=' → logprob: -6.330944538116455

Token 112: ' =' (ID: 314)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.15763671696186066
    2. ' <=' → logprob: -2.2826366424560547
    3. '==' → logprob: -3.2826366424560547
    4. '<=' → logprob: -5.782636642456055
    5. '<|end|>' → logprob: -6.282636642456055
    6. ' =' → logprob: -7.407636642456055
    7. '=' → logprob: -7.657636642456055
    8. '   ' → logprob: -9.782636642456055
    9. '<|end|>' → logprob: -10.032636642456055
    10. ' ' → logprob: -10.282636642456055

Token 113: ' a' (ID: 261)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.003936036955565214
    2. ' c' → logprob: -6.003935813903809
    3. 'a' → logprob: -6.753935813903809
    4. '   ' → logprob: -8.753935813903809
    5. '(c' → logprob: -10.128935813903809
    6. 'abs' → logprob: -10.378935813903809
    7. ' ' → logprob: -11.378935813903809
    8. '  ' → logprob: -11.628935813903809
    9. '-c' → logprob: -11.753935813903809
    10. ' (' → logprob: -12.003935813903809

Token 114: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03038322739303112
    2. ' for' → logprob: -4.030383110046387
    3. 'for' → logprob: -4.780383110046387
    4. '<|end|>' → logprob: -6.155383110046387
    5. '
' → logprob: -7.030383110046387
    6. '    
' → logprob: -7.530383110046387
    7. '<|end|>' → logprob: -9.905383110046387
    8. '    ' → logprob: -10.155383110046387
    9. ',' → logprob: -10.280383110046387
    10. '  ' → logprob: -11.280383110046387

Token 115: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005073175765573978
    2. 'for' → logprob: -5.880073070526123
    3. ' for' → logprob: -6.130073070526123
    4. '<|end|>' → logprob: -9.755073547363281
    5. '
' → logprob: -11.255073547363281
    6. '    
' → logprob: -12.255073547363281
    7. '<|end|>' → logprob: -12.255073547363281
    8. '	for' → logprob: -13.130073547363281
    9. ',' → logprob: -13.505073547363281
    10. '```' → logprob: -13.630073547363281

Token 116: ' possible' (ID: 4149)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07490158826112747
    2. 'for' → logprob: -2.699901580810547
    3. ' for' → logprob: -5.324901580810547
    4. '<|end|>' → logprob: -10.324901580810547
    5. '    
' → logprob: -10.574901580810547
    6. 'f' → logprob: -11.324901580810547
    7. '	for' → logprob: -12.949901580810547
    8. '       ' → logprob: -13.324901580810547
    9. 'found' → logprob: -13.574901580810547
    10. '
' → logprob: -13.574901580810547

Token 117: '_p' (ID: 1359)
  Prédit: '_f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.7413486838340759
    2. '_p' → logprob: -1.1163487434387207
    3. '_ps' → logprob: -1.8663487434387207
    4. 'f' → logprob: -3.4913487434387207
    5. '_pr' → logprob: -5.116348743438721
    6. '_values' → logprob: -6.366348743438721
    7. 's' → logprob: -6.991348743438721
    8. 'p' → logprob: -7.491348743438721
    9. '_pairs' → logprob: -7.616348743438721
    10. 'ps' → logprob: -8.366348266601562

Token 118: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.30509600043296814
    2. ' =' → logprob: -1.4300960302352905
    3. '=' → logprob: -3.805095911026001
    4. '_' → logprob: -7.30509614944458
    5. '_s' → logprob: -7.93009614944458
    6. ' s' → logprob: -9.180095672607422
    7. ',' → logprob: -9.305095672607422
    8. ' ' → logprob: -9.555095672607422
    9. '<|end|>' → logprob: -10.555095672607422
    10. '_values' → logprob: -10.805095672607422

Token 119: ' []
' (ID: 8911)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.07657375186681747
    2. ' find' → logprob: -2.9515738487243652
    3. '[' → logprob: -4.076573848724365
    4. ' [' → logprob: -6.076573848724365
    5. '[]' → logprob: -6.451573848724365
    6. '[]
' → logprob: -8.701573371887207
    7. ' []' → logprob: -9.076573371887207
    8. '(find' → logprob: -10.201573371887207
    9. '[get' → logprob: -10.326573371887207
    10. ' ' → logprob: -10.451573371887207

Token 120: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.019094686955213547
    2. ' for' → logprob: -4.144094467163086
    3. '   ' → logprob: -5.894094467163086
    4. ' =' → logprob: -9.519094467163086
    5. '=' → logprob: -10.019094467163086
    6. '<|end|>' → logprob: -10.019094467163086
    7. '[' → logprob: -10.144094467163086
    8. '[]' → logprob: -10.644094467163086
    9. 'and' → logprob: -11.019094467163086
    10. ' and' → logprob: -11.894094467163086

Token 121: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0456218495965004
    2. 'possible' → logprob: -3.170621871948242
    3. ' for' → logprob: -7.170621871948242
    4. 'find' → logprob: -7.170621871948242
    5. 'p' → logprob: -8.045621871948242
    6. 'found' → logprob: -8.420621871948242
    7. 'if' → logprob: -8.545621871948242
    8. 'def' → logprob: -8.920621871948242
    9. '   ' → logprob: -9.420621871948242
    10. 'f' → logprob: -9.795621871948242

Token 122: ' i' (ID: 575)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5195738077163696
    2. ' p' → logprob: -1.0195738077163696
    3. ' i' → logprob: -3.51957368850708
    4. 'i' → logprob: -4.26957368850708
    5. 'factor' → logprob: -8.144574165344238
    6. 'f' → logprob: -8.769574165344238
    7. ' factor' → logprob: -8.769574165344238
    8. ' ' → logprob: -9.144574165344238
    9. ' f' → logprob: -9.894574165344238
    10. '	p' → logprob: -11.144574165344238

Token 123: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0701359361410141
    2. 'in' → logprob: -2.6951358318328857
    3. ' ' → logprob: -8.695136070251465
    4. '    ' → logprob: -11.570136070251465
    5. '   ' → logprob: -12.070136070251465
    6. '  ' → logprob: -12.070136070251465
    7. 'n' → logprob: -12.195136070251465
    8. 'range' → logprob: -13.695136070251465
    9. '```' → logprob: -13.945136070251465
    10. '	in' → logprob: -14.070136070251465

Token 124: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.26616790890693665
    2. 'find' → logprob: -2.1411678791046143
    3. ' range' → logprob: -2.2661678791046143
    4. ' find' → logprob: -4.391168117523193
    5. ' ' → logprob: -11.016167640686035
    6. '(range' → logprob: -11.766167640686035
    7. '(find' → logprob: -11.828667640686035
    8. '	find' → logprob: -11.828667640686035
    9. '[' → logprob: -12.391167640686035
    10. '	range' → logprob: -12.453667640686035

Token 125: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.8206473871250637e-05
    2. '1' → logprob: -11.000028610229492
    3. '(-' → logprob: -11.750028610229492
    4. ' (' → logprob: -13.250028610229492
    5. '(abs' → logprob: -14.000028610229492
    6. '(
' → logprob: -15.750028610229492
    7. ',' → logprob: -15.875028610229492
    8. ' ' → logprob: -16.000028610229492
    9. 'abs' → logprob: -16.125028610229492
    10. '   ' → logprob: -16.500028610229492

Token 126: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006197464535944164
    2. ' ' → logprob: -8.125619888305664
    3. 'abs' → logprob: -8.250619888305664
    4. '-' → logprob: -10.000619888305664
    5. ' abs' → logprob: -12.250619888305664
    6. 'int' → logprob: -12.625619888305664
    7. '   ' → logprob: -12.625619888305664
    8. ' -' → logprob: -13.250619888305664
    9. 'a' → logprob: -14.250619888305664
    10. '  ' → logprob: -14.625619888305664

Token 127: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006020514760166407
    2. ' ,' → logprob: -5.631020545959473
    3. 'abs' → logprob: -6.381020545959473
    4. ',a' → logprob: -8.131020545959473
    5. 'a' → logprob: -8.381020545959473
    6. '(abs' → logprob: -9.256020545959473
    7. ' abs' → logprob: -10.006020545959473
    8. ',
' → logprob: -10.256020545959473
    9. ',int' → logprob: -12.131020545959473
    10. '(' → logprob: -12.756020545959473

Token 128: ' a' (ID: 261)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.038120560348033905
    2. ' abs' → logprob: -3.2881205081939697
    3. 'a' → logprob: -9.91312026977539
    4. 'int' → logprob: -11.03812026977539
    5. '(abs' → logprob: -11.91312026977539
    6. '   ' → logprob: -12.78812026977539
    7. ' a' → logprob: -13.41312026977539
    8. ' ' → logprob: -14.03812026977539
    9. ' int' → logprob: -14.28812026977539
    10. 'ab' → logprob: -14.91312026977539

Token 129: '+' (ID: 10)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3132665753364563
    2. '+' → logprob: -1.3132665157318115
    3. '//' → logprob: -13.43826675415039
    4. ' //' → logprob: -13.81326675415039
    5. ' ' → logprob: -14.06326675415039
    6. '+i' → logprob: -14.81326675415039
    7. ')+' → logprob: -15.93826675415039
    8. '()+' → logprob: -16.31326675415039
    9. '+r' → logprob: -16.31326675415039
    10. '   ' → logprob: -16.43826675415039

Token 130: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004095143172889948
    2. ' ' → logprob: -5.504095077514648
    3. '+' → logprob: -11.629095077514648
    4. 'abs' → logprob: -12.754095077514648
    5. ' +' → logprob: -12.879095077514648
    6. ' abs' → logprob: -13.129095077514648
    7. '2' → logprob: -16.00409507751465
    8. '(abs' → logprob: -16.50409507751465
    9. ')' → logprob: -17.12909507751465
    10. '(' → logprob: -17.37909507751465

Token 131: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1614075005054474
    2. '):' → logprob: -1.911407470703125
    3. ' ):
' → logprob: -7.286407470703125
    4. '):
' → logprob: -7.911407470703125
    5. ' ):' → logprob: -9.411407470703125
    6. '   ' → logprob: -10.286407470703125
    7. ' ' → logprob: -12.786407470703125
    8. '):

' → logprob: -12.911407470703125
    9. ':' → logprob: -12.911407470703125
    10. ')' → logprob: -13.286407470703125

Token 132: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09087485074996948
    2. ' if' → logprob: -2.8408749103546143
    3. '<|end|>' → logprob: -3.9658749103546143
    4. ':' → logprob: -5.840874671936035
    5. '   ' → logprob: -5.965874671936035
    6. ':
' → logprob: -6.465874671936035
    7. '<|end|>' → logprob: -6.715874671936035
    8. ',' → logprob: -7.715874671936035
    9. '
' → logprob: -8.215874671936035
    10. ' ' → logprob: -9.090874671936035

Token 133: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7060164213180542
    2. ' if' → logprob: -0.7060164213180542
    3. 'if' (adapté à ' if') → logprob: -5.331016540527344
    4. '<|end|>' → logprob: -5.456016540527344
    5. '   ' → logprob: -5.831016540527344
    6. ' ' → logprob: -7.706016540527344
    7. '<|end|>' → logprob: -9.331016540527344
    8. '           ' → logprob: -9.831016540527344
    9. '	if' → logprob: -10.456016540527344
    10. ',' → logprob: -11.331016540527344

Token 134: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5759472250938416
    2. ' a' → logprob: -0.8259472250938416
    3. '	a' → logprob: -12.700946807861328
    4. '   ' → logprob: -12.825946807861328
    5. ' ' → logprob: -14.075946807861328
    6. '(a' → logprob: -14.950946807861328
    7. '>a' → logprob: -15.450946807861328
    8. ' ' → logprob: -15.575946807861328
    9. '_a' → logprob: -16.075946807861328
    10. ' (' → logprob: -16.450946807861328

Token 135: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.16168764233589172
    2. '%' → logprob: -1.9116876125335693
    3. '%i' → logprob: -6.536687850952148
    4. ' ' → logprob: -11.786687850952148
    5. '%s' → logprob: -13.286687850952148
    6. '%d' → logprob: -13.411687850952148
    7. '%e' → logprob: -13.786687850952148
    8. ' ' → logprob: -14.661687850952148
    9. '%c' → logprob: -14.786687850952148
    10. '%x' → logprob: -15.786687850952148

Token 136: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00103352265432477
    2. ' i' → logprob: -6.876033306121826
    3. '   ' → logprob: -14.876033782958984
    4. ' ' → logprob: -15.626033782958984
    5. '	i' → logprob: -15.876033782958984
    6. '<|end|>' → logprob: -17.626033782958984
    7. '  ' → logprob: -17.876033782958984
    8. '`' → logprob: -18.126033782958984
    9. '```' → logprob: -18.376033782958984
    10. '[i' → logprob: -18.626033782958984

Token 137: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5232917666435242
    2. ' ==' → logprob: -0.8982917666435242
    3. '0' → logprob: -9.02329158782959
    4. ')==' → logprob: -10.64829158782959
    5. ' ' → logprob: -12.02329158782959
    6. '===' → logprob: -12.27329158782959
    7. '=' → logprob: -12.39829158782959
    8. ')' → logprob: -12.64829158782959
    9. ']==' → logprob: -13.27329158782959
    10. '<|end|>' → logprob: -13.27329158782959

Token 138: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012356207298580557
    2. ' ' → logprob: -9.000123977661133
    3. '   ' → logprob: -16.625123977661133
    4. '۰' → logprob: -18.250123977661133
    5. '```' → logprob: -18.812623977661133
    6. '  ' → logprob: -19.187623977661133
    7. 'i' → logprob: -19.687623977661133
    8. '<|end|>' → logprob: -19.937623977661133
    9. '00' → logprob: -20.062623977661133
    10. 'r' → logprob: -20.062623977661133

Token 139: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -17.75001335144043
    4. '۰' → logprob: -19.56251335144043
    5. '```' → logprob: -19.62501335144043
    6. 'i' → logprob: -19.87501335144043
    7. '00' → logprob: -20.31251335144043
    8. '  ' → logprob: -20.31251335144043
    9. 'r' → logprob: -20.56251335144043
    10. '
' → logprob: -20.68751335144043

Token 140: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17986960709095
    2. ':
' → logprob: -1.8048696517944336
    3. '       ' → logprob: -10.054869651794434
    4. '   ' → logprob: -10.179869651794434
    5. '):
' → logprob: -11.054869651794434
    6. 'possible' → logprob: -12.054869651794434
    7. '):' → logprob: -12.679869651794434
    8. ' possible' → logprob: -12.679869651794434
    9. ' and' → logprob: -12.804869651794434
    10. ':

' → logprob: -12.929869651794434

Token 141: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17559513449668884
    2. '           ' → logprob: -1.9255951642990112
    3. '   ' → logprob: -4.800595283508301
    4. 'possible' → logprob: -5.050595283508301
    5. ' possible' → logprob: -7.425595283508301
    6. '```' → logprob: -12.3005952835083
    7. '               ' → logprob: -12.5505952835083
    8. '	       ' → logprob: -12.6755952835083
    9. '_possible' → logprob: -13.0505952835083
    10. ',' → logprob: -13.1755952835083

Token 142: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' (adapté à ' possible') → logprob: -0.004114969167858362
    2. ' possible' → logprob: -5.504115104675293
    3. '   ' → logprob: -10.379115104675293
    4. '           ' → logprob: -12.254115104675293
    5. '       ' → logprob: -15.004115104675293
    6. '_possible' → logprob: -15.629115104675293
    7. 'Possible' → logprob: -16.254114151000977
    8. ' posible' → logprob: -16.879114151000977
    9. 'poss' → logprob: -17.004114151000977
    10. ' possibile' → logprob: -17.504114151000977

Token 143: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -3.786196975852363e-05
    2. 'p' → logprob: -10.250038146972656
    3. '_i' → logprob: -14.250038146972656
    4. 's' → logprob: -14.375038146972656
    5. '_' → logprob: -15.500038146972656
    6. 'i' → logprob: -15.500038146972656
    7. '```' → logprob: -15.875038146972656
    8. 'a' → logprob: -16.250038146972656
    9. 'r' → logprob: -16.375038146972656
    10. '\' → logprob: -16.625038146972656

Token 144: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0029888746794313192
    2. '.' → logprob: -5.877988815307617
    3. ' .' → logprob: -8.627988815307617
    4. '.app' → logprob: -13.502988815307617
    5. '.add' → logprob: -13.627988815307617
    6. '.ap' → logprob: -13.877988815307617
    7. '.py' → logprob: -14.502988815307617
    8. '.extend' → logprob: -15.627988815307617
    9. ').' → logprob: -16.002988815307617
    10. '.push' → logprob: -16.877988815307617

Token 145: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.12863318622112274
    2. 'i' → logprob: -2.1286332607269287
    3. ' i' → logprob: -6.37863302230835
    4. ' (' → logprob: -12.503633499145508
    5. '(' → logprob: -13.003633499145508
    6. '   ' → logprob: -16.003633499145508
    7. '	i' → logprob: -16.128633499145508
    8. '(
' → logprob: -17.003633499145508
    9. ')i' → logprob: -17.503633499145508
    10. '{i' → logprob: -18.378633499145508

Token 146: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.1080467781284824e-05
    2. ')
' → logprob: -10.625041007995605
    3. ' )' → logprob: -11.500041007995605
    4. '   ' → logprob: -12.375041007995605
    5. ')

' → logprob: -14.125041007995605
    6. '<|end|>' → logprob: -15.000041007995605
    7. '       ' → logprob: -15.625041007995605
    8. ' ' → logprob: -15.625041007995605
    9. ',' → logprob: -15.875041007995605
    10. '<|end|>' → logprob: -16.125041961669922

Token 147: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006063174922019243
    2. '
' → logprob: -5.506062984466553
    3. ' for' → logprob: -7.131062984466553
    4. '<|end|>' → logprob: -7.131062984466553
    5. '<|end|>' → logprob: -9.256063461303711
    6. ',' → logprob: -9.631063461303711
    7. 'for' → logprob: -9.881063461303711
    8. '    
' → logprob: -10.256063461303711
    9. '#' → logprob: -10.256063461303711
    10. 'possible' → logprob: -11.006063461303711

Token 148: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15771257877349854
    2. 'for' → logprob: -2.407712459564209
    3. ' for' → logprob: -3.532712459564209
    4. 'possible' → logprob: -3.657712459564209
    5. ' possible' → logprob: -8.532712936401367
    6. '#' (adapté à ' #') → logprob: -8.782712936401367
    7. '
' → logprob: -8.907712936401367
    8. '  ' → logprob: -9.282712936401367
    9. '    
' → logprob: -9.657712936401367
    10. 'r' → logprob: -9.657712936401367

Token 149: ' iterate' (ID: 63166)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.20743690431118011
    2. 'for' → logprob: -2.2074368000030518
    3. '#' → logprob: -3.0824368000030518
    4. '   ' → logprob: -3.7074368000030518
    5. 'q' → logprob: -6.207437038421631
    6. 'p' → logprob: -6.457437038421631
    7. 'r' → logprob: -6.832437038421631
    8. 'Possible' → logprob: -7.582437038421631
    9. 'For' → logprob: -7.957437038421631
    10. ' possible' → logprob: -8.207436561584473

Token 150: ' over' (ID: 1072)
  Prédit: ' over'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' over' → logprob: -0.3845707178115845
    2. 'over' → logprob: -1.5095707178115845
    3. '   ' → logprob: -2.509570598602295
    4. ' through' → logprob: -4.259570598602295
    5. 'through' → logprob: -6.759570598602295
    6. 'for' → logprob: -7.759570598602295
    7. '(' → logprob: -8.134571075439453
    8. ' for' → logprob: -8.259571075439453
    9. '(p' → logprob: -8.384571075439453
    10. 'possible' → logprob: -8.759571075439453

Token 151: ' p' (ID: 275)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.7138769626617432
    2. 'possible' → logprob: -0.7138769626617432
    3. ' p' → logprob: -4.963876724243164
    4. ' all' → logprob: -5.088876724243164
    5. 'p' → logprob: -5.213876724243164
    6. 'all' → logprob: -6.713876724243164
    7. 'r' → logprob: -9.088876724243164
    8. ' the' → logprob: -9.088876724243164
    9. 'the' → logprob: -9.963876724243164
    10. ' each' → logprob: -9.963876724243164

Token 152: ' and' (ID: 326)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.404600590467453
    2. ' and' → logprob: -1.9046006202697754
    3. 'for' → logprob: -2.4046006202697754
    4. '   ' → logprob: -3.0296006202697754
    5. ' in' → logprob: -3.7796006202697754
    6. ',' → logprob: -4.279600620269775
    7. 'and' → logprob: -5.404600620269775
    8. '<|end|>' → logprob: -6.654600620269775
    9. 'in' → logprob: -7.529600620269775
    10. ' ' → logprob: -7.904600620269775

Token 153: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.41413167119026184
    2. 'possible' → logprob: -1.5391316413879395
    3. '[' → logprob: -3.6641316413879395
    4. ' [' → logprob: -3.7891316413879395
    5. ' possible' → logprob: -3.7891316413879395
    6. ' r' → logprob: -4.1641316413879395
    7. '[r' → logprob: -4.9141316413879395
    8. '[-' → logprob: -4.9141316413879395
    9. 'range' → logprob: -6.1641316413879395
    10. ' ' → logprob: -6.4141316413879395

Token 154: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014052796177566051
    2. '
' → logprob: -5.014052867889404
    3. ' for' → logprob: -5.014052867889404
    4. 'for' → logprob: -7.639052867889404
    5. '<|end|>' → logprob: -9.389052391052246
    6. ':' → logprob: -9.889052391052246
    7. '    
' → logprob: -11.014052391052246
    8. ':
' → logprob: -11.639052391052246
    9. ',' → logprob: -11.639052391052246
    10. '       ' → logprob: -12.514052391052246

Token 155: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001999534899368882
    2. ' for' → logprob: -6.251999378204346
    3. '<|end|>' → logprob: -10.251999855041504
    4. 'for' → logprob: -11.376999855041504
    5. '
' → logprob: -11.501999855041504
    6. '<|end|>' → logprob: -12.501999855041504
    7. ' and' → logprob: -12.626999855041504
    8. ':' → logprob: -13.001999855041504
    9. ',' → logprob: -13.251999855041504
    10. ' to' → logprob: -14.001999855041504

Token 156: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1187046691775322
    2. 'for' (adapté à ' for') → logprob: -2.6187045574188232
    3. ' for' → logprob: -3.2437045574188232
    4. '
' → logprob: -11.868704795837402
    5. '<|end|>' → logprob: -12.618704795837402
    6. '```' → logprob: -13.743704795837402
    7. '	for' → logprob: -13.868704795837402
    8. '    
' → logprob: -14.243704795837402
    9. '       ' → logprob: -15.368704795837402
    10. '<|end|>' → logprob: -16.368703842163086

Token 157: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.004681338090449572
    2. 'p' → logprob: -5.37968111038208
    3. ' ' → logprob: -10.254681587219238
    4. '_' → logprob: -11.754681587219238
    5. '_p' → logprob: -12.129681587219238
    6. ' ' → logprob: -12.754681587219238
    7. ' _' → logprob: -13.004681587219238
    8. ' r' → logprob: -13.129681587219238
    9. '   ' → logprob: -13.504681587219238
    10. '	p' → logprob: -13.629681587219238

Token 158: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014169970527291298
    2. 'in' → logprob: -4.264170169830322
    3. ' ' → logprob: -12.764169692993164
    4. 'p' → logprob: -13.889169692993164
    5. '_in' → logprob: -14.514169692993164
    6. 's' → logprob: -15.139169692993164
    7. '	in' → logprob: -15.264169692993164
    8. 'i' → logprob: -15.264169692993164
    9. '   ' → logprob: -15.389169692993164
    10. '  ' → logprob: -15.389169692993164

Token 159: ' possible' (ID: 4149)
  Prédit: ' possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.16022706031799316
    2. 'possible' → logprob: -1.9102270603179932
    3. 'Possible' → logprob: -13.160226821899414
    4. ' posible' → logprob: -15.035226821899414
    5. 'poss' → logprob: -15.410226821899414
    6. '_possible' → logprob: -15.535226821899414
    7. ' ' → logprob: -16.660226821899414
    8. ' possibile' → logprob: -16.910226821899414
    9. ' range' → logprob: -17.035226821899414
    10. '   ' → logprob: -17.285226821899414

Token 160: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -4.961759259458631e-06
    2. '_' → logprob: -12.500004768371582
    3. '_possible' → logprob: -14.250004768371582
    4. '_r' → logprob: -15.750004768371582
    5. 'p' → logprob: -16.6250057220459
    6. '}_' → logprob: -16.7500057220459
    7. ' _' → logprob: -17.0000057220459
    8. '```' → logprob: -17.2500057220459
    9. 's' → logprob: -17.3750057220459
    10. 'possible' → logprob: -17.5000057220459

Token 161: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.873571692267433e-05
    2. ':
' → logprob: -9.875068664550781
    3. ' :' → logprob: -11.250068664550781
    4. ' in' → logprob: -13.250068664550781
    5. ',' → logprob: -13.875068664550781
    6. '   ' → logprob: -14.250068664550781
    7. ' for' → logprob: -15.375068664550781
    8. ':
' → logprob: -15.750068664550781
    9. ':**' → logprob: -15.875068664550781
    10. '):' → logprob: -16.25006866455078

Token 162: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05433991923928261
    2. ':' → logprob: -4.05433988571167
    3. '<|end|>' → logprob: -4.05433988571167
    4. '   ' → logprob: -5.55433988571167
    5. ':
' → logprob: -5.55433988571167
    6. ',' → logprob: -5.55433988571167
    7. ' and' → logprob: -6.42933988571167
    8. '
' → logprob: -6.67933988571167
    9. ' for' → logprob: -6.80433988571167
    10. '<|end|>' → logprob: -7.05433988571167

Token 163: ' r' (ID: 428)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2288292795419693
    2. '       ' → logprob: -2.1038293838500977
    3. ' r' → logprob: -3.2288293838500977
    4. 'r' (adapté à ' r') → logprob: -3.4788293838500977
    5. 'for' → logprob: -4.853829383850098
    6. '   ' → logprob: -5.978829383850098
    7. ' if' → logprob: -6.728829383850098
    8. '<|end|>' → logprob: -8.478829383850098
    9. 'if' → logprob: -9.603829383850098
    10. '	for' → logprob: -9.728829383850098

Token 164: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04310927167534828
    2. '=' → logprob: -3.418109178543091
    3. 's' → logprob: -4.79310941696167
    4. ' in' → logprob: -7.29310941696167
    5. ' for' → logprob: -8.043108940124512
    6. ' ' → logprob: -9.793108940124512
    7. 'for' → logprob: -9.918108940124512
    8. '_candidates' → logprob: -11.418108940124512
    9. ' s' → logprob: -13.043108940124512
    10. '_' → logprob: -13.168108940124512

Token 165: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.31326761841773987
    2. 'a' → logprob: -1.3132675886154175
    3. ' ' → logprob: -12.438267707824707
    4. '	a' → logprob: -14.438267707824707
    5. 'int' → logprob: -14.438267707824707
    6. ' p' → logprob: -15.813267707824707
    7. '    ' → logprob: -15.938267707824707
    8. '  ' → logprob: -16.06326675415039
    9. 'p' → logprob: -16.43826675415039
    10. '   ' → logprob: -16.56326675415039

Token 166: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.38688650727272034
    2. ' //' → logprob: -1.136886477470398
    3. '/' → logprob: -11.636886596679688
    4. ' /' → logprob: -12.386886596679688
    5. ' ' → logprob: -13.761886596679688
    6. 'p' → logprob: -14.636886596679688
    7. '/p' → logprob: -14.636886596679688
    8. ' ' → logprob: -15.511886596679688
    9. '#' → logprob: -16.386886596679688
    10. '   ' → logprob: -16.886886596679688

Token 167: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0001584850688232109
    2. ' p' → logprob: -8.750158309936523
    3. '<p' → logprob: -17.500158309936523
    4. '   ' → logprob: -19.750158309936523
    5. ' ' → logprob: -20.125158309936523
    6. '
' → logprob: -21.125158309936523
    7. '	p' → logprob: -21.125158309936523
    8. 'user' → logprob: -21.750158309936523
    9. '*p' → logprob: -21.875158309936523
    10. '  ' → logprob: -21.875158309936523

Token 168: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026768026873469353
    2. ' for' → logprob: -4.026768207550049
    3. 'for' → logprob: -5.651768207550049
    4. '   ' → logprob: -6.276768207550049
    5. '
' → logprob: -6.776768207550049
    6. '<|end|>' → logprob: -6.776768207550049
    7. '        
' → logprob: -7.401768207550049
    8. '           ' → logprob: -9.77676773071289
    9. ',' → logprob: -10.02676773071289
    10. '     ' → logprob: -10.90176773071289

Token 169: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2264612913131714
    2. '   ' → logprob: -2.351461410522461
    3. '
' → logprob: -2.476461410522461
    4. ' for' → logprob: -4.351461410522461
    5. '        
' → logprob: -5.476461410522461
    6. '    
' → logprob: -6.226461410522461
    7. '<|end|>' → logprob: -6.351461410522461
    8. 'for' → logprob: -7.226461410522461
    9. '  
' → logprob: -7.351461410522461
    10. ',' → logprob: -8.226461410522461

Token 170: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.26970174908638
    2. '       ' → logprob: -1.8947017192840576
    3. ' for' → logprob: -3.3947017192840576
    4. '#' (adapté à ' #') → logprob: -3.7697017192840576
    5. '   ' → logprob: -4.019701957702637
    6. 'if' → logprob: -4.644701957702637
    7. 'possible' → logprob: -6.769701957702637
    8. ' #' → logprob: -8.269701957702637
    9. ' if' → logprob: -9.269701957702637
    10. '	for' → logprob: -9.769701957702637

Token 171: ' q' (ID: 2335)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5090052485466003
    2. 'possible' → logprob: -1.7590053081512451
    3. '#' → logprob: -2.009005308151245
    4. 'f' → logprob: -3.259005308151245
    5. 'q' → logprob: -3.884005308151245
    6. 'if' → logprob: -4.134005069732666
    7. 'p' → logprob: -6.009005069732666
    8. '   ' → logprob: -6.134005069732666
    9. 'qs' → logprob: -6.384005069732666
    10. 'factor' → logprob: -6.384005069732666

Token 172: ' and' (ID: 326)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1908750534057617
    2. 's' → logprob: -1.8158750534057617
    3. 'for' → logprob: -1.8158750534057617
    4. '_candidates' → logprob: -2.4408750534057617
    5. '_values' → logprob: -2.8158750534057617
    6. 'and' → logprob: -3.1908750534057617
    7. '_possible' → logprob: -3.1908750534057617
    8. ' for' → logprob: -3.5658750534057617
    9. ' and' → logprob: -3.6908750534057617
    10. '_range' → logprob: -4.440875053405762

Token 173: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0894361138343811
    2. ' s' → logprob: -2.4644360542297363
    3. '<|end|>' → logprob: -8.964436531066895
    4. ' for' → logprob: -9.089436531066895
    5. 'for' → logprob: -9.589436531066895
    6. '
' → logprob: -9.964436531066895
    7. ' ' → logprob: -10.714436531066895
    8. ')' → logprob: -10.839436531066895
    9. '   ' → logprob: -11.214436531066895
    10. '-' → logprob: -11.464436531066895

Token 174: ' integers' (ID: 54912)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5707324147224426
    2. ' =' → logprob: -2.570732355117798
    3. ':' → logprob: -2.695732355117798
    4. ' are' → logprob: -2.820732355117798
    5. 'for' → logprob: -2.945732355117798
    6. '       ' → logprob: -3.070732355117798
    7. ' in' → logprob: -3.320732355117798
    8. '<|end|>' → logprob: -3.445732355117798
    9. ' possible' → logprob: -4.570732593536377
    10. '#' → logprob: -4.570732593536377

Token 175: ' such' (ID: 2238)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 176: ' that' (ID: 484)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'that' → logprob: -0.029614869505167007
    2. ' that' → logprob: -3.7796149253845215
    3. '       ' → logprob: -5.2796149253845215
    4. '#' → logprob: -7.0296149253845215
    5. 'at' → logprob: -8.529614448547363
    6. 'hat' → logprob: -9.654614448547363
    7. '           ' → logprob: -9.904614448547363
    8. '   ' → logprob: -11.404614448547363
    9. '	that' → logprob: -11.779614448547363
    10. '```' → logprob: -11.779614448547363

Token 177: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.10531701147556305
    2. 'for' → logprob: -2.9803171157836914
    3. 'p' → logprob: -3.3553171157836914
    4. '#' → logprob: -5.480317115783691
    5. ' q' → logprob: -5.605317115783691
    6. '       ' → logprob: -6.105317115783691
    7. ' for' → logprob: -6.605317115783691
    8. '   ' → logprob: -6.605317115783691
    9. '<|end|>' → logprob: -7.730317115783691
    10. ' p' → logprob: -8.980317115783691

Token 178: '*s' (ID: 71191)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7196919322013855
    2. 'f' → logprob: -2.4696919918060303
    3. 'for' → logprob: -2.4696919918060303
    4. ' and' → logprob: -2.8446919918060303
    5. ' for' → logprob: -3.0946919918060303
    6. 'and' → logprob: -3.0946919918060303
    7. '=' → logprob: -3.3446919918060303
    8. 's' → logprob: -3.4696919918060303
    9. '<|end|>' → logprob: -3.5946919918060303
    10. '+' → logprob: -4.594691753387451

Token 179: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20355066657066345
    2. ' =' → logprob: -1.7035506963729858
    3. ' ==' → logprob: -6.828550815582275
    4. '==' → logprob: -7.078550815582275
    5. '=-' → logprob: -9.328550338745117
    6. '<|end|>' → logprob: -9.578550338745117
    7. '+' → logprob: -11.828550338745117
    8. '==-' → logprob: -12.328550338745117
    9. '<|end|>' → logprob: -12.328550338745117
    10. '=c' → logprob: -12.578550338745117

Token 180: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.001061390619724989
    2. ' c' → logprob: -6.87606143951416
    3. 'b' → logprob: -11.00106143951416
    4. '   ' → logprob: -11.62606143951416
    5. '  ' → logprob: -14.00106143951416
    6. ' ' → logprob: -14.25106143951416
    7. '	c' → logprob: -14.50106143951416
    8. '    ' → logprob: -14.75106143951416
    9. '
' → logprob: -15.87606143951416
    10. '-c' → logprob: -16.001060485839844

Token 181: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05556396022439003
    2. ' for' → logprob: -3.0555639266967773
    3. '<|end|>' → logprob: -5.430563926696777
    4. 'for' → logprob: -6.680563926696777
    5. '        
' → logprob: -7.805563926696777
    6. '<|end|>' → logprob: -8.180563926696777
    7. ',' → logprob: -8.555563926696777
    8. '
' → logprob: -8.930563926696777
    9. ':' → logprob: -9.430563926696777
    10. '   ' → logprob: -9.680563926696777

Token 182: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001066631986759603
    2. ' for' → logprob: -7.5010666847229
    3. '        
' → logprob: -8.626066207885742
    4. '<|end|>' → logprob: -8.751066207885742
    5. '           ' → logprob: -9.626066207885742
    6. ',' → logprob: -10.376066207885742
    7. '   ' → logprob: -10.876066207885742
    8. 'for' → logprob: -11.126066207885742
    9. '
' → logprob: -11.376066207885742
    10. '<|end|>' → logprob: -12.001066207885742

Token 183: ' possible' (ID: 4149)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5844999551773071
    2. 'possible' (adapté à ' possible') → logprob: -1.0844999551773071
    3. '       ' → logprob: -2.7094998359680176
    4. 'f' → logprob: -3.8344998359680176
    5. '   ' → logprob: -4.834499835968018
    6. 'q' → logprob: -5.709499835968018
    7. ' for' → logprob: -6.209499835968018
    8. 'qs' → logprob: -6.209499835968018
    9. ' possible' → logprob: -8.209500312805176
    10. '           ' → logprob: -8.459500312805176

Token 184: '_q' (ID: 19384)
  Prédit: '_q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_q' → logprob: -0.2992819845676422
    2. '_f' → logprob: -1.6742819547653198
    3. '_s' → logprob: -3.0492820739746094
    4. 'q' → logprob: -4.924282073974609
    5. 'f' → logprob: -5.049282073974609
    6. '_values' → logprob: -5.174282073974609
    7. 's' → logprob: -6.049282073974609
    8. 'qs' → logprob: -7.299282073974609
    9. '_c' → logprob: -7.799282073974609
    10. '_vals' → logprob: -8.04928207397461

Token 185: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.010031593963503838
    2. '=' → logprob: -4.635031700134277
    3. 's' → logprob: -8.260031700134277
    4. ' ' → logprob: -12.135031700134277
    5. '=[]' → logprob: -12.635031700134277
    6. 'f' → logprob: -13.135031700134277
    7. 'for' → logprob: -13.385031700134277
    8. '<|end|>' → logprob: -14.135031700134277
    9. ',' → logprob: -14.385031700134277
    10. '   ' → logprob: -14.635031700134277

Token 186: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.03780471906065941
    2. ' find' → logprob: -3.41280460357666
    3. '[]' → logprob: -5.91280460357666
    4. '[]
' → logprob: -7.16280460357666
    5. '[' → logprob: -7.91280460357666
    6. ' []' → logprob: -8.91280460357666
    7. ' [' → logprob: -10.53780460357666
    8. '	find' → logprob: -10.66280460357666
    9. '   ' → logprob: -10.91280460357666
    10. ' ' → logprob: -10.91280460357666

Token 187: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -1.0280383548888494e-06
    2. 'f' → logprob: -13.875000953674316
    3. '_' → logprob: -17.500001907348633
    4. '_factor' → logprob: -17.750001907348633
    5. '_q' → logprob: -18.500001907348633
    6. '```' → logprob: -18.875001907348633
    7. 'Factors' → logprob: -19.000001907348633
    8. '_s' → logprob: -19.625001907348633
    9. ' factors' → logprob: -20.000001907348633
    10. 's' → logprob: -20.750001907348633

Token 188: 'actors' (ID: 37126)
  Prédit: 'actors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actors' → logprob: -6.670925358776003e-05
    2. 'f' → logprob: -9.875066757202148
    3. 'ctors' → logprob: -11.375066757202148
    4. 'actor' → logprob: -14.000066757202148
    5. 'Factors' → logprob: -14.000066757202148
    6. 'acters' → logprob: -14.250066757202148
    7. '```' → logprob: -15.250066757202148
    8. 'act' → logprob: -15.375066757202148
    9. 'ectors' → logprob: -15.500066757202148
    10. ' factors' → logprob: -15.500066757202148

Token 189: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -3.5597102396423e-05
    2. '(' → logprob: -10.500035285949707
    3. '(C' → logprob: -12.625035285949707
    4. '(abs' → logprob: -12.875035285949707
    5. 'c' → logprob: -13.625035285949707
    6. ' (' → logprob: -14.375035285949707
    7. '((' → logprob: -16.250036239624023
    8. '(com' → logprob: -17.000036239624023
    9. '(int' → logprob: -17.250036239624023
    10. '(
' → logprob: -17.250036239624023

Token 190: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00023560250701848418
    2. ')
' → logprob: -8.500235557556152
    3. '())' → logprob: -11.375235557556152
    4. '()' → logprob: -12.000235557556152
    5. '(' → logprob: -12.250235557556152
    6. ' )' → logprob: -12.500235557556152
    7. ')`' → logprob: -13.375235557556152
    8. ')
' → logprob: -13.875235557556152
    9. '   ' → logprob: -14.375235557556152
    10. ')c' → logprob: -14.500235557556152

Token 191: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010182792320847511
    2. ' for' → logprob: -7.001018047332764
    3. 'for' → logprob: -9.751018524169922
    4. '   ' → logprob: -10.626018524169922
    5. '<|end|>' → logprob: -11.501018524169922
    6. '
' → logprob: -11.876018524169922
    7. '        
' → logprob: -12.876018524169922
    8. '           ' → logprob: -13.501018524169922
    9. '<|end|>' → logprob: -14.126018524169922
    10. ',' → logprob: -14.251018524169922

Token 192: ' possible' (ID: 4149)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.072709821164608
    2. ' for' → logprob: -3.197709798812866
    3. 'for' → logprob: -3.572709798812866
    4. '   ' → logprob: -6.822710037231445
    5. '<|end|>' → logprob: -9.572710037231445
    6. '           ' → logprob: -11.072710037231445
    7. ' ' → logprob: -12.322710037231445
    8. '	for' → logprob: -12.322710037231445
    9. '
' → logprob: -13.322710037231445
    10. ',' → logprob: -13.447710037231445

Token 193: '_s' (ID: 1278)
  Prédit: '_q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_q' → logprob: -0.0008172504603862762
    2. '_s' → logprob: -7.25081729888916
    3. '_' → logprob: -9.25081729888916
    4. 'q' → logprob: -12.25081729888916
    5. 's' → logprob: -12.62581729888916
    6. '_p' → logprob: -13.37581729888916
    7. '_r' → logprob: -14.75081729888916
    8. '=' → logprob: -15.25081729888916
    9. '```' → logprob: -15.75081729888916
    10. '_f' → logprob: -16.250816345214844

Token 194: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020710527896881
    2. '=' → logprob: -2.3502070903778076
    3. ' ' → logprob: -15.600207328796387
    4. 's' → logprob: -16.47520637512207
    5. ':' → logprob: -16.85020637512207
    6. 'for' → logprob: -17.35020637512207
    7. '.' → logprob: -17.47520637512207
    8. '  ' → logprob: -17.60020637512207
    9. ',' → logprob: -17.85020637512207
    10. '   ' → logprob: -17.97520637512207

Token 195: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.1748521775007248
    2. 'possible' → logprob: -1.9248521327972412
    3. ' find' → logprob: -4.29985237121582
    4. ' possible' → logprob: -7.04985237121582
    5. 'poss' → logprob: -10.17485237121582
    6. '(find' → logprob: -11.42485237121582
    7. 'found' → logprob: -11.67485237121582
    8. '	find' → logprob: -12.54985237121582
    9. '[' → logprob: -12.79985237121582
    10. 'list' → logprob: -13.11235237121582

Token 196: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -1.3425219549390022e-05
    2. 'f' → logprob: -11.87501335144043
    3. '_' → logprob: -12.25001335144043
    4. '_q' → logprob: -14.50001335144043
    5. '_s' → logprob: -14.75001335144043
    6. 'Factors' → logprob: -15.37501335144043
    7. 's' → logprob: -16.00001335144043
    8. '_factor' → logprob: -16.00001335144043
    9. '\' → logprob: -16.25001335144043
    10. '```' → logprob: -16.50001335144043

Token 197: 'actors' (ID: 37126)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.10834045708179474
    2. 'actors' → logprob: -2.3583405017852783
    3. '_f' → logprob: -4.858340263366699
    4. 'ctors' → logprob: -8.8583402633667
    5. 's' → logprob: -9.2333402633667
    6. 'possible' → logprob: -10.1083402633667
    7. 'actor' → logprob: -11.4833402633667
    8. '_q' → logprob: -11.8583402633667
    9. 'acters' → logprob: -11.9833402633667
    10. '_' → logprob: -11.9833402633667

Token 198: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -7.465036105713807e-06
    2. '(' → logprob: -12.125007629394531
    3. '(q' → logprob: -13.750007629394531
    4. 'c' → logprob: -15.000007629394531
    5. ' (' → logprob: -15.875007629394531
    6. '(-' → logprob: -16.00000762939453
    7. ')c' → logprob: -16.25000762939453
    8. '<|end|>' → logprob: -16.75000762939453
    9. ')' → logprob: -17.62500762939453
    10. '(
' → logprob: -17.87500762939453

Token 199: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01606803573668003
    2. ')
' → logprob: -4.141067981719971
    3. '   ' → logprob: -11.016068458557129
    4. ')

' → logprob: -11.391068458557129
    5. ' )' → logprob: -13.641068458557129
    6. ')
' → logprob: -14.016068458557129
    7. '       ' → logprob: -14.016068458557129
    8. '):
' → logprob: -14.266068458557129
    9. ' ' → logprob: -14.641068458557129
    10. '<|end|>' → logprob: -15.391068458557129

Token 200: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.042447615414857864
    2. '<|end|>' → logprob: -3.292447566986084
    3. ' for' → logprob: -5.917447566986084
    4. '   ' → logprob: -7.417447566986084
    5. '<|end|>' → logprob: -7.917447566986084
    6. ',' → logprob: -8.542448043823242
    7. '           ' → logprob: -8.667448043823242
    8. 'for' → logprob: -8.917448043823242
    9. ')' → logprob: -9.542448043823242
    10. '        
' → logprob: -10.542448043823242

Token 201: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6415994167327881
    2. '       ' → logprob: -0.8915994167327881
    3. '   ' → logprob: -3.516599416732788
    4. 'for' (adapté à ' for') → logprob: -4.016599655151367
    5. '<|end|>' → logprob: -4.391599655151367
    6. '	for' → logprob: -6.766599655151367
    7. '
' → logprob: -6.891599655151367
    8. ' ' → logprob: -8.266599655151367
    9. '        
' → logprob: -8.516599655151367
    10. '\n' → logprob: -8.766599655151367

Token 202: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.2519362270832062
    2. 'q' → logprob: -1.5019361972808838
    3. ' p' → logprob: -13.126935958862305
    4. '   ' → logprob: -13.626935958862305
    5. 'p' → logprob: -13.751935958862305
    6. '	q' → logprob: -13.751935958862305
    7. '_q' → logprob: -14.126935958862305
    8. ' ' → logprob: -15.376935958862305
    9. '    ' → logprob: -15.751935958862305
    10. ' s' → logprob: -15.876935958862305

Token 203: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00977616012096405
    2. 'in' → logprob: -4.6347761154174805
    3. ' ' → logprob: -11.75977611541748
    4. ',' → logprob: -12.38477611541748
    5. '	in' → logprob: -12.75977611541748
    6. 'space' → logprob: -13.50977611541748
    7. 'n' → logprob: -14.00977611541748
    8. 's' → logprob: -14.13477611541748
    9. 'import' → logprob: -14.63477611541748
    10. ' ,' → logprob: -15.13477611541748

Token 204: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.575941264629364
    2. ' possible' → logprob: -0.825941264629364
    3. ' posible' → logprob: -13.95094108581543
    4. '_possible' → logprob: -14.20094108581543
    5. 'Possible' → logprob: -15.95094108581543
    6. 'poss' → logprob: -16.82594108581543
    7. ' possibile' → logprob: -16.95094108581543
    8. ' possível' → logprob: -17.32594108581543
    9. ' posibles' → logprob: -18.07594108581543
    10. ' possibles' → logprob: -18.20094108581543

Token 205: '_q' (ID: 19384)
  Prédit: '_q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_q' → logprob: -0.00483985710889101
    2. '_s' → logprob: -5.629839897155762
    3. 's' → logprob: -6.879839897155762
    4. '_f' → logprob: -9.379839897155762
    5. 'q' → logprob: -10.379839897155762
    6. 'in' → logprob: -10.504839897155762
    7. 'possible' → logprob: -10.629839897155762
    8. '[' → logprob: -12.254839897155762
    9. '_' → logprob: -12.254839897155762
    10. ':' → logprob: -12.254839897155762

Token 206: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004299084190279245
    2. '       ' → logprob: -6.254299163818359
    3. ':
' → logprob: -7.004299163818359
    4. ',' → logprob: -7.254299163818359
    5. ' in' → logprob: -7.879299163818359
    6. '   ' → logprob: -8.62929916381836
    7. '<|end|>' → logprob: -9.25429916381836
    8. ' for' → logprob: -10.25429916381836
    9. '<|end|>' → logprob: -11.50429916381836
    10. '=' → logprob: -11.75429916381836

Token 207: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09131788462400436
    2. ' for' → logprob: -2.591317892074585
    3. 'for' → logprob: -4.466317653656006
    4. '       ' → logprob: -7.216317653656006
    5. ':
' → logprob: -9.716318130493164
    6. ',' → logprob: -10.091318130493164
    7. '               ' → logprob: -11.216318130493164
    8. ':' → logprob: -12.216318130493164
    9. '   ' → logprob: -12.966318130493164
    10. ' and' → logprob: -14.091318130493164

Token 208: ' if' (ID: 538)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1172017976641655
    2. 'for' → logprob: -2.242201805114746
    3. '           ' → logprob: -6.117201805114746
    4. '               ' → logprob: -6.242201805114746
    5. ' s' → logprob: -9.117201805114746
    6. ' if' → logprob: -9.742201805114746
    7. 's' → logprob: -10.617201805114746
    8. 'if' (adapté à ' if') → logprob: -11.492201805114746
    9. ' ' → logprob: -12.617201805114746
    10. '            ' → logprob: -12.742201805114746

Token 209: ' q' (ID: 2335)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.502576470375061
    2. 'q' → logprob: -1.502576470375061
    3. '(a' → logprob: -2.2525763511657715
    4. ' c' → logprob: -2.3775763511657715
    5. ' q' → logprob: -2.6275763511657715
    6. 'p' → logprob: -2.7525763511657715
    7. 'a' → logprob: -3.1275763511657715
    8. ' (' → logprob: -3.3775763511657715
    9. 'r' → logprob: -3.5025763511657715
    10. '(p' → logprob: -3.6275763511657715

Token 210: ' ==' (ID: 951)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3554529547691345
    2. ' *' → logprob: -1.3554530143737793
    3. '*s' → logprob: -3.7304530143737793
    4. 's' → logprob: -5.355453014373779
    5. ' ==' → logprob: -5.355453014373779
    6. '==' → logprob: -5.980453014373779
    7. '*q' → logprob: -6.355453014373779
    8. '<|end|>' → logprob: -6.480453014373779
    9. ' !=' → logprob: -6.730453014373779
    10. '!=' → logprob: -7.480453014373779

Token 211: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001502717612311244
    2. ' ' → logprob: -6.501502513885498
    3. '
' → logprob: -16.126502990722656
    4. 's' → logprob: -16.626502990722656
    5. '

' → logprob: -16.876502990722656
    6. '   ' → logprob: -17.626502990722656
    7. '<|end|>' → logprob: -17.751502990722656
    8. 'q' → logprob: -18.126502990722656
    9. '=' → logprob: -18.501502990722656
    10. '
' → logprob: -18.564002990722656

Token 212: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9146995327901095e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -16.375019073486328
    4. 's' → logprob: -17.000019073486328
    5. '       ' → logprob: -17.937519073486328
    6. '  ' → logprob: -18.187519073486328
    7. '
' → logprob: -18.750019073486328
    8. '```' → logprob: -18.750019073486328
    9. '         ' → logprob: -18.812519073486328
    10. '           ' → logprob: -19.062519073486328

Token 213: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.26877400279045105
    2. ':
' → logprob: -1.7687740325927734
    3. '               ' → logprob: -2.8937740325927734
    4. ' or' → logprob: -5.143774032592773
    5. ' continue' → logprob: -5.893774032592773
    6. '           ' → logprob: -7.268774032592773
    7. 'continue' → logprob: -8.268774032592773
    8. ':return' → logprob: -9.268774032592773
    9. ' and' → logprob: -10.393774032592773
    10. '	continue' → logprob: -10.643774032592773

Token 214: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006614480633288622
    2. ' continue' → logprob: -5.131614685058594
    3. 'continue' → logprob: -7.381614685058594
    4. '           ' → logprob: -10.006614685058594
    5. '       ' → logprob: -12.381614685058594
    6. ' continues' → logprob: -12.631614685058594
    7. '	continue' → logprob: -13.131614685058594
    8. '   ' → logprob: -13.256614685058594
    9. '                   ' → logprob: -13.381614685058594
    10. ':' → logprob: -13.506614685058594

Token 215: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.029165035113692284
    2. 'continue' (adapté à ' continue') → logprob: -4.029165267944336
    3. '               ' → logprob: -4.529165267944336
    4. '           ' → logprob: -9.529165267944336
    5. '	continue' → logprob: -10.279165267944336
    6. '                   ' → logprob: -10.529165267944336
    7. '   ' → logprob: -10.654165267944336
    8. '       ' → logprob: -12.529165267944336
    9. ' continues' → logprob: -13.904165267944336
    10. '_continue' → logprob: -14.279165267944336

Token 216: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.613945101387799e-05
    2. '
' → logprob: -10.500085830688477
    3. '<|end|>' → logprob: -10.750085830688477
    4. '            
' → logprob: -11.375085830688477
    5. ' for' → logprob: -11.750085830688477
    6. ' 
' → logprob: -12.500085830688477
    7. '            ' → logprob: -12.625085830688477
    8. '               ' → logprob: -13.125085830688477
    9. '       ' → logprob: -13.375085830688477
    10. '```' → logprob: -13.625085830688477

Token 217: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00020926215802319348
    2. ' for' → logprob: -9.000208854675293
    3. '<|end|>' → logprob: -10.375208854675293
    4. '```' → logprob: -10.625208854675293
    5. '       ' → logprob: -11.125208854675293
    6. '               ' → logprob: -12.375208854675293
    7. 'for' → logprob: -13.375208854675293
    8. '            
' → logprob: -13.375208854675293
    9. '   ' → logprob: -13.500208854675293
    10. '
' → logprob: -13.500208854675293

Token 218: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002320818370208144
    2. ' for' → logprob: -6.127320766448975
    3. '
' → logprob: -9.752321243286133
    4. 'for' (adapté à ' for') → logprob: -10.127321243286133
    5. '<|end|>' → logprob: -11.502321243286133
    6. '       ' → logprob: -11.627321243286133
    7. '               ' → logprob: -12.127321243286133
    8. '		' → logprob: -13.002321243286133
    9. '   ' → logprob: -13.002321243286133
    10. '	       ' → logprob: -13.502321243286133

Token 219: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00861456897109747
    2. ' s' → logprob: -4.758614540100098
    3. 'r' → logprob: -17.133615493774414
    4. '_s' → logprob: -18.258615493774414
    5. '	s' → logprob: -19.633615493774414
    6. '`s' → logprob: -20.008615493774414
    7. 'q' → logprob: -20.008615493774414
    8. 'S' → logprob: -20.008615493774414
    9. '   ' → logprob: -20.258615493774414
    10. '<s' → logprob: -20.258615493774414

Token 220: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009757975116372108
    2. 'in' → logprob: -4.634757995605469
    3. 's' → logprob: -14.259757995605469
    4. ' ' → logprob: -14.634757995605469
    5. '	in' → logprob: -15.009757995605469
    6. 'import' → logprob: -15.259757995605469
    7. 'n' → logprob: -15.634757995605469
    8. '```' → logprob: -16.75975799560547
    9. '<|end|>' → logprob: -17.75975799560547
    10. 'inthe' → logprob: -17.88475799560547

Token 221: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.00015860427811276168
    2. ' possible' → logprob: -8.750158309936523
    3. 'poss' → logprob: -16.875158309936523
    4. 'pos' → logprob: -18.000158309936523
    5. ' posible' → logprob: -18.375158309936523
    6. '_possible' → logprob: -18.750158309936523
    7. 'Possible' → logprob: -21.625158309936523
    8. ' ' → logprob: -22.125158309936523
    9. '   ' → logprob: -22.250158309936523
    10. ' possível' → logprob: -22.500158309936523

Token 222: '_s' (ID: 1278)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.322363942861557
    2. '_q' → logprob: -1.4473639726638794
    3. '_s' → logprob: -3.32236385345459
    4. 'possible' → logprob: -5.94736385345459
    5. 'f' → logprob: -6.44736385345459
    6. '_f' → logprob: -9.44736385345459
    7. 'q' → logprob: -11.57236385345459
    8. '_' → logprob: -12.07236385345459
    9. '_possible' → logprob: -12.57236385345459
    10. 'Q' → logprob: -12.94736385345459

Token 223: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03263387084007263
    2. '               ' → logprob: -4.5326337814331055
    3. ':
' → logprob: -4.7826337814331055
    4. '           ' → logprob: -4.9076337814331055
    5. '<|end|>' → logprob: -5.6576337814331055
    6. '       ' → logprob: -7.0326337814331055
    7. ',' → logprob: -8.782633781433105
    8. '                       ' → logprob: -9.157633781433105
    9. '<|end|>' → logprob: -9.157633781433105
    10. '   ' → logprob: -9.407633781433105

Token 224: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0001801801408873871
    2. '           ' → logprob: -9.3751802444458
    3. ' if' → logprob: -10.3751802444458
    4. '                ' → logprob: -11.2501802444458
    5. '                   ' → logprob: -11.5001802444458
    6. '<|end|>' → logprob: -11.5001802444458
    7. '                       ' → logprob: -11.6251802444458
    8. '       ' → logprob: -12.2501802444458
    9. '                               ' → logprob: -12.3751802444458
    10. '            ' → logprob: -12.7501802444458

Token 225: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.18947376310825348
    2. '               ' → logprob: -1.9394737482070923
    3. 'if' (adapté à ' if') → logprob: -3.939473867416382
    4. '       ' → logprob: -4.814473628997803
    5. '           ' → logprob: -7.314473628997803
    6. '                   ' → logprob: -8.564474105834961
    7. '                       ' → logprob: -8.689474105834961
    8. ' ' → logprob: -9.939474105834961
    9. '                ' → logprob: -10.314474105834961
    10. '   ' → logprob: -10.689474105834961

Token 226: ' s' (ID: 265)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.837572455406189
    2. 'p' → logprob: -1.337572455406189
    3. ' q' → logprob: -1.587572455406189
    4. ' p' → logprob: -2.3375725746154785
    5. 's' → logprob: -6.8375725746154785
    6. ' s' → logprob: -7.3375725746154785
    7. '   ' → logprob: -7.3375725746154785
    8. '(p' → logprob: -8.08757209777832
    9. '(q' → logprob: -8.58757209777832
    10. 'r' → logprob: -8.58757209777832

Token 227: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.020946940407156944
    2. '==' → logprob: -3.895946979522705
    3. ' !=' → logprob: -8.395946502685547
    4. ' +' → logprob: -9.395946502685547
    5. '+' → logprob: -9.770946502685547
    6. ' *' → logprob: -10.895946502685547
    7. '*' → logprob: -12.020946502685547
    8. '!=' → logprob: -12.020946502685547
    9. ' ' → logprob: -12.770946502685547
    10. ')' → logprob: -14.145946502685547

Token 228: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6931548714637756
    2. ' ' → logprob: -0.6931548714637756
    3. ' q' → logprob: -13.068155288696289
    4. 'q' → logprob: -13.568155288696289
    5. '   ' → logprob: -13.568155288696289
    6. '  ' → logprob: -14.193155288696289
    7. 's' → logprob: -15.193155288696289
    8. ' ' → logprob: -15.443155288696289
    9. '       ' → logprob: -15.630655288696289
    10. 'c' → logprob: -15.693155288696289

Token 229: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0031857939902693033
    2. ' ' → logprob: -5.753185749053955
    3. 'c' → logprob: -12.753186225891113
    4. 'q' → logprob: -13.253186225891113
    5. '   ' → logprob: -14.128186225891113
    6. ' q' → logprob: -14.503186225891113
    7. ' c' → logprob: -14.815686225891113
    8. '  ' → logprob: -14.815686225891113
    9. '    ' → logprob: -16.003185272216797
    10. '(' → logprob: -16.190685272216797

Token 230: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.746546745300293
    2. ' or' → logprob: -1.621546745300293
    3. ':
' → logprob: -1.996546745300293
    4. ':' → logprob: -2.246546745300293
    5. '               ' → logprob: -2.621546745300293
    6. '<|end|>' → logprob: -5.496546745300293
    7. '           ' → logprob: -6.121546745300293
    8. '                       ' → logprob: -6.121546745300293
    9. ' and' → logprob: -6.871546745300293
    10. '                  ' → logprob: -6.996546745300293

Token 231: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.06293214857578278
    2. '               ' → logprob: -3.062932252883911
    3. ' continue' → logprob: -4.687932014465332
    4. 'continue' → logprob: -6.062932014465332
    5. '           ' → logprob: -6.812932014465332
    6. '                       ' → logprob: -6.812932014465332
    7. '       ' → logprob: -8.187932014465332
    8. '	continue' → logprob: -9.812932014465332
    9. '   ' → logprob: -9.937932014465332
    10. ' continues' → logprob: -10.312932014465332

Token 232: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.09922504425048828
    2. 'continue' (adapté à ' continue') → logprob: -2.5992250442504883
    3. '                       ' → logprob: -4.099225044250488
    4. '                   ' → logprob: -5.849225044250488
    5. '               ' → logprob: -8.099225044250488
    6. '       ' → logprob: -8.849225044250488
    7. '	continue' → logprob: -8.974225044250488
    8. '           ' → logprob: -10.224225044250488
    9. '   ' → logprob: -10.599225044250488
    10. '                           ' → logprob: -12.099225044250488

Token 233: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00010819212911883369
    2. '                
' → logprob: -10.375107765197754
    3. '<|end|>' → logprob: -10.625107765197754
    4. '                   ' → logprob: -10.750107765197754
    5. '                ' → logprob: -11.625107765197754
    6. '           ' → logprob: -12.000107765197754
    7. '       ' → logprob: -12.500107765197754
    8. '<|end|>' → logprob: -12.875107765197754
    9. '              ' → logprob: -13.125107765197754
    10. '
' → logprob: -13.250107765197754

Token 234: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00014811802248004824
    2. '<|end|>' → logprob: -9.250147819519043
    3. '                
' → logprob: -11.125147819519043
    4. '                   ' → logprob: -11.500147819519043
    5. '                ' → logprob: -11.625147819519043
    6. '<|end|>' → logprob: -12.500147819519043
    7. '           ' → logprob: -12.875147819519043
    8. '```' → logprob: -13.125147819519043
    9. '       ' → logprob: -13.250147819519043
    10. ' if' → logprob: -13.250147819519043

Token 235: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07151582837104797
    2. ' if' → logprob: -3.3215157985687256
    3. 'if' (adapté à ' if') → logprob: -3.6965157985687256
    4. '       ' → logprob: -5.071516036987305
    5. '                   ' → logprob: -6.446516036987305
    6. '   ' → logprob: -9.321516036987305
    7. '           ' → logprob: -9.821516036987305
    8. '                ' → logprob: -10.696516036987305
    9. '                       ' → logprob: -11.196516036987305
    10. '                
' → logprob: -11.321516036987305

Token 236: ' q' (ID: 2335)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.5790461897850037
    2. 'p' → logprob: -0.8290461897850037
    3. '(p' → logprob: -6.954046249389648
    4. ' (' → logprob: -7.204046249389648
    5. ' b' → logprob: -7.829046249389648
    6. 'b' → logprob: -8.079046249389648
    7. '   ' → logprob: -8.579046249389648
    8. ' ' → logprob: -8.704046249389648
    9. 'q' → logprob: -9.079046249389648
    10. ' q' → logprob: -9.204046249389648

Token 237: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.08491131663322449
    2. '*s' → logprob: -2.709911346435547
    3. '*' → logprob: -4.209911346435547
    4. '*r' → logprob: -12.459911346435547
    5. ' ' → logprob: -12.584911346435547
    6. 's' → logprob: -12.959911346435547
    7. '**' → logprob: -13.209911346435547
    8. '*q' → logprob: -14.584911346435547
    9. '*u' → logprob: -14.709911346435547
    10. ' +' → logprob: -14.709911346435547

Token 238: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0028202086687088013
    2. ' s' → logprob: -5.877820014953613
    3. '                   ' → logprob: -12.252820014953613
    4. '               ' → logprob: -12.752820014953613
    5. ' ' → logprob: -13.377820014953613
    6. '
' → logprob: -13.377820014953613
    7. '   ' → logprob: -13.752820014953613
    8. '                       ' → logprob: -14.502820014953613
    9. '+' → logprob: -15.127820014953613
    10. '                               ' → logprob: -15.127820014953613

Token 239: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.16073696315288544
    2. ' ==' → logprob: -1.9107369184494019
    3. '=' → logprob: -8.160737037658691
    4. '<|end|>' → logprob: -9.410737037658691
    5. ')==' → logprob: -10.160737037658691
    6. '!=' → logprob: -10.285737037658691
    7. '==
' → logprob: -10.910737037658691
    8. ']==' → logprob: -11.410737037658691
    9. '==-' → logprob: -11.410737037658691
    10. ')' → logprob: -11.660737037658691

Token 240: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0003805064770858735
    2. ' c' → logprob: -7.875380516052246
    3. '               ' → logprob: -16.25037956237793
    4. '   ' → logprob: -16.50037956237793
    5. '	c' → logprob: -16.50037956237793
    6. ')c' → logprob: -16.75037956237793
    7. '                   ' → logprob: -17.75037956237793
    8. ' ' → logprob: -18.50037956237793
    9. '  ' → logprob: -18.75037956237793
    10. '*c' → logprob: -18.87537956237793

Token 241: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.007950364612042904
    2. 'and' → logprob: -5.257950305938721
    3. '               ' → logprob: -6.507950305938721
    4. '                   ' → logprob: -6.882950305938721
    5. ':' → logprob: -9.882950782775879
    6. '                ' → logprob: -10.257950782775879
    7. '                  ' → logprob: -10.257950782775879
    8. '              ' → logprob: -10.757950782775879
    9. '                       ' → logprob: -11.132950782775879
    10. ':
' → logprob: -11.382950782775879

Token 242: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0016257872339338064
    2. ' p' → logprob: -7.126626014709473
    3. 'b' → logprob: -7.751626014709473
    4. '(p' → logprob: -8.251626014709473
    5. 'q' → logprob: -10.001626014709473
    6. '   ' → logprob: -11.251626014709473
    7. '                   ' → logprob: -11.251626014709473
    8. '               ' → logprob: -11.376626014709473
    9. '(b' → logprob: -11.876626014709473
    10. 'r' → logprob: -11.876626014709473

Token 243: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.066444993019104
    2. '*' → logprob: -2.8164448738098145
    3. '*q' → logprob: -5.9414448738098145
    4. '*s' → logprob: -6.4414448738098145
    5. '*r' → logprob: -8.816445350646973
    6. '*p' → logprob: -10.316445350646973
    7. '<|end|>' → logprob: -10.691445350646973
    8. ')' → logprob: -12.066445350646973
    9. 's' → logprob: -12.316445350646973
    10. ' ' → logprob: -12.441445350646973

Token 244: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.055024683475494385
    2. 'r' → logprob: -2.9300246238708496
    3. ' s' → logprob: -8.930025100708008
    4. ' r' → logprob: -11.680025100708008
    5. '<|end|>' → logprob: -14.305025100708008
    6. 't' → logprob: -15.430025100708008
    7. ' ' → logprob: -15.930025100708008
    8. 'd' → logprob: -16.305025100708008
    9. 'rs' → logprob: -16.430025100708008
    10. '(' → logprob: -17.055025100708008

Token 245: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.17979681491851807
    2. ' +' → logprob: -1.804796814918518
    3. ' plus' → logprob: -11.429797172546387
    4. '+b' → logprob: -11.429797172546387
    5. '+p' → logprob: -11.679797172546387
    6. '==' → logprob: -12.304797172546387
    7. 'plus' → logprob: -13.179797172546387
    8. '```' → logprob: -13.304797172546387
    9. '<|end|>' → logprob: -13.554797172546387
    10. '+++' → logprob: -13.679797172546387

Token 246: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -6.742448022123426e-05
    2. ' q' → logprob: -9.750067710876465
    3. 'r' → logprob: -11.625067710876465
    4. '   ' → logprob: -16.50006675720215
    5. '	q' → logprob: -16.87506675720215
    6. ' ' → logprob: -18.12506675720215
    7. '  ' → logprob: -19.12506675720215
    8. '(q' → logprob: -19.37506675720215
    9. '    ' → logprob: -19.87506675720215
    10. ' r' → logprob: -20.12506675720215

Token 247: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3966199457645416
    2. '*' → logprob: -1.1466199159622192
    3. '*r' → logprob: -4.64661979675293
    4. '<|end|>' → logprob: -9.77161979675293
    5. 'r' → logprob: -10.89661979675293
    6. '*p' → logprob: -11.52161979675293
    7. ' ' → logprob: -12.39661979675293
    8. ')' → logprob: -12.64661979675293
    9. '**' → logprob: -13.02161979675293
    10. '=' → logprob: -13.14661979675293

Token 248: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -8.518582762917504e-05
    2. ' r' → logprob: -9.37508487701416
    3. '   ' → logprob: -15.50008487701416
    4. '
' → logprob: -15.75008487701416
    5. ' ' → logprob: -17.625085830688477
    6. '	r' → logprob: -18.375085830688477
    7. '```' → logprob: -19.125085830688477
    8. '  ' → logprob: -19.375085830688477
    9. '
' → logprob: -19.625085830688477
    10. '_r' → logprob: -20.000085830688477

Token 249: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.023264816030859947
    2. '==' → logprob: -3.7732648849487305
    3. '===' → logprob: -12.39826488494873
    4. ' ' → logprob: -12.64826488494873
    5. ' ===' → logprob: -12.77326488494873
    6. ')==' → logprob: -13.02326488494873
    7. '=' → logprob: -13.14826488494873
    8. '<|end|>' → logprob: -13.52326488494873
    9. '==-' → logprob: -14.14826488494873
    10. ']==' → logprob: -14.39826488494873

Token 250: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0006279678200371563
    2. ' b' → logprob: -7.3756279945373535
    3. '   ' → logprob: -13.500627517700195
    4. '    ' → logprob: -17.000627517700195
    5. '	b' → logprob: -17.125627517700195
    6. ' ' → logprob: -17.875627517700195
    7. '  ' → logprob: -18.375627517700195
    8. ')b' → logprob: -19.750627517700195
    9. '```' → logprob: -19.875627517700195
    10. '-b' → logprob: -20.375627517700195

Token 251: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002509904792532325
    2. ':
' → logprob: -6.002510070800781
    3. ' :' → logprob: -10.752510070800781
    4. ' and' → logprob: -12.377510070800781
    5. '):' → logprob: -12.752510070800781
    6. ':return' → logprob: -13.002510070800781
    7. ':
' → logprob: -14.002510070800781
    8. ':

' → logprob: -15.002510070800781
    9. '):
' → logprob: -15.002510070800781
    10. ' :
' → logprob: -15.127510070800781

Token 252: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.09684862941503525
    2. ':' → logprob: -2.471848726272583
    3. ':
' → logprob: -4.971848487854004
    4. '                       ' → logprob: -7.596848487854004
    5. '                    
' → logprob: -8.846848487854004
    6. '               ' → logprob: -9.096848487854004
    7. ' :' → logprob: -10.221848487854004
    8. '                           ' → logprob: -10.846848487854004
    9. ' and' → logprob: -10.971848487854004
    10. ',' → logprob: -10.971848487854004

Token 253: ' #' (ID: 1069)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.039046283811330795
    2. 'print' → logprob: -3.414046287536621
    3. ' found' → logprob: -5.789046287536621
    4. '                   ' → logprob: -6.414046287536621
    5. '   ' → logprob: -7.414046287536621
    6. 'found' → logprob: -10.164046287536621
    7. '    ' → logprob: -11.039046287536621
    8. '                       ' → logprob: -12.289046287536621
    9. 'Found' → logprob: -12.289046287536621
    10. '                    ' → logprob: -12.414046287536621

Token 254: ' check' (ID: 2371)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.20025666058063507
    2. 'print' → logprob: -1.8252567052841187
    3. ' found' → logprob: -3.950256586074829
    4. 'found' → logprob: -7.075256824493408
    5. ' q' → logprob: -9.07525634765625
    6. '   ' → logprob: -10.70025634765625
    7. '#' → logprob: -11.07525634765625
    8. '                   ' → logprob: -11.32525634765625
    9. 'q' → logprob: -11.82525634765625
    10. ' #' → logprob: -11.95025634765625

Token 255: ' conditions' (ID: 6409)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3241160213947296
    2. '   ' → logprob: -1.6991159915924072
    3. ' found' → logprob: -3.3241159915924072
    4. ' p' → logprob: -4.074116230010986
    5. ' print' → logprob: -4.324116230010986
    6. ' q' → logprob: -5.199116230010986
    7. '                   ' → logprob: -5.449116230010986
    8. 'print' → logprob: -5.449116230010986
    9. '    ' → logprob: -5.574116230010986
    10. 'if' → logprob: -6.074116230010986

Token 256: ' for' (ID: 395)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -5.621933451038785e-05
    2. ',' → logprob: -10.625056266784668
    3. '                       ' → logprob: -11.750056266784668
    4. '               ' → logprob: -12.125056266784668
    5. '<|end|>' → logprob: -12.125056266784668
    6. '                    
' → logprob: -12.625056266784668
    7. '
' → logprob: -12.875056266784668
    8. '<|end|>' → logprob: -13.625056266784668
    9. '           ' → logprob: -13.750056266784668
    10. '                    ' → logprob: -14.125056266784668

Token 257: ' uniqueness' (ID: 105230)
  Prédit: ' q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.5285910964012146
    2. 'q' → logprob: -1.4035911560058594
    3. ' p' → logprob: -2.6535911560058594
    4. 'p' → logprob: -3.1535911560058594
    5. ' (' → logprob: -4.778591156005859
    6. '(' → logprob: -5.028591156005859
    7. 'factor' → logprob: -5.028591156005859
    8. '   ' → logprob: -5.153591156005859
    9. 'found' → logprob: -5.653591156005859
    10. ' found' → logprob: -5.778591156005859

Token 258: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.006241129711270332
    2. '
' → logprob: -5.131241321563721
    3. '                    
' → logprob: -8.881240844726562
    4. ',' → logprob: -9.631240844726562
    5. '<|end|>' → logprob: -9.881240844726562
    6. '               ' → logprob: -11.756240844726562
    7. '           ' → logprob: -12.006240844726562
    8. '                    ' → logprob: -12.131240844726562
    9. '<|end|>' → logprob: -12.131240844726562
    10. '                       ' → logprob: -12.131240844726562

Token 259: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00022845028433948755
    2. '<|end|>' → logprob: -9.250228881835938
    3. '               ' → logprob: -10.125228881835938
    4. '                       ' → logprob: -10.250228881835938
    5. '           ' → logprob: -11.000228881835938
    6. '```' → logprob: -11.750228881835938
    7. '                    ' → logprob: -11.875228881835938
    8. ',' → logprob: -12.125228881835938
    9. '                    
' → logprob: -12.250228881835938
    10. '       ' → logprob: -12.375228881835938

Token 260: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.08060581982135773
    2. ' print' → logprob: -2.7056057453155518
    3. 'print' → logprob: -5.705605983734131
    4. '   ' → logprob: -6.330605983734131
    5. ' found' → logprob: -6.330605983734131
    6. '       ' → logprob: -6.580605983734131
    7. ' if' → logprob: -6.830605983734131
    8. '                       ' → logprob: -7.705605983734131
    9. '               ' → logprob: -7.955605983734131
    10. '           ' → logprob: -8.455605506896973

Token 261: ' p' (ID: 275)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.05161700025200844
    2. ' p' → logprob: -4.17661714553833
    3. ' found' → logprob: -4.17661714553833
    4. 'not' → logprob: -4.30161714553833
    5. ' (' → logprob: -6.30161714553833
    6. 'p' → logprob: -6.67661714553833
    7. 'found' → logprob: -6.80161714553833
    8. ' a' → logprob: -7.17661714553833
    9. '(not' → logprob: -8.301616668701172
    10. ' True' → logprob: -8.551616668701172

Token 262: ' >' (ID: 1424)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.8945010304450989
    2. '==' → logprob: -1.519500970840454
    3. ' !=' → logprob: -2.144500970840454
    4. '!=' → logprob: -2.394500970840454
    5. ' *' → logprob: -2.519500970840454
    6. '*' → logprob: -2.644500970840454
    7. '<=' → logprob: -5.269501209259033
    8. ' <=' → logprob: -5.269501209259033
    9. '*p' → logprob: -6.894501209259033
    10. '*s' → logprob: -7.894501209259033

Token 263: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.030182231217622757
    2. 'r' → logprob: -3.780182123184204
    3. ' ' → logprob: -5.030182361602783
    4. ' r' → logprob: -8.155181884765625
    5. 's' → logprob: -9.530181884765625
    6. 'q' → logprob: -12.655181884765625
    7. '   ' → logprob: -13.092681884765625
    8. '1' → logprob: -13.217681884765625
    9. '-' → logprob: -13.217681884765625
    10. ' s' → logprob: -13.530181884765625

Token 264: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.038796667009592056
    2. 'r' → logprob: -3.2887966632843018
    3. ' ' → logprob: -7.538796901702881
    4. 's' → logprob: -8.788796424865723
    5. ' r' → logprob: -9.663796424865723
    6. '   ' → logprob: -13.538796424865723
    7. '1' → logprob: -13.663796424865723
    8. 'q' → logprob: -13.976296424865723
    9. ' s' → logprob: -14.788796424865723
    10. '-' → logprob: -14.851296424865723

Token 265: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03900455683469772
    2. 'and' → logprob: -3.2890045642852783
    3. ' or' → logprob: -7.164004325866699
    4. '<|end|>' → logprob: -9.1640043258667
    5. ':' → logprob: -9.5390043258667
    6. 'or' → logprob: -12.6640043258667
    7. '):' → logprob: -13.4140043258667
    8. '<|end|>' → logprob: -13.4140043258667
    9. ' ' → logprob: -13.5390043258667
    10. ',' → logprob: -13.5390043258667

Token 266: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.023396071046590805
    2. 's' → logprob: -4.523396015167236
    3. 'q' → logprob: -4.773396015167236
    4. ' r' → logprob: -5.773396015167236
    5. 'p' → logprob: -7.773396015167236
    6. ' s' → logprob: -9.148396492004395
    7. ' q' → logprob: -9.398396492004395
    8. '   ' → logprob: -9.773396492004395
    9. ' ' → logprob: -11.648396492004395
    10. '(r' → logprob: -11.898396492004395

Token 267: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.47408369183540344
    2. '>' → logprob: -0.974083662033081
    3. ' >=' → logprob: -13.59908390045166
    4. '>=' → logprob: -13.72408390045166
    5. ' ' → logprob: -13.84908390045166
    6. '   ' → logprob: -14.34908390045166
    7. 'and' → logprob: -15.09908390045166
    8. ')>' → logprob: -15.22408390045166
    9. '[' → logprob: -15.53658390045166
    10. '<' → logprob: -15.59908390045166

Token 268: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03366725519299507
    2. ' ' → logprob: -3.4086673259735107
    3. ' p' → logprob: -11.28366756439209
    4. 'p' → logprob: -12.28366756439209
    5. '=' → logprob: -13.53366756439209
    6. '<|end|>' → logprob: -13.65866756439209
    7. '>' → logprob: -14.15866756439209
    8. '   ' → logprob: -15.40866756439209
    9. '  ' → logprob: -15.47116756439209
    10. '.' → logprob: -16.533666610717773

Token 269: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019361276645213366
    2. ' ' → logprob: -6.251935958862305
    3. 'p' → logprob: -12.501935958862305
    4. ' p' → logprob: -13.251935958862305
    5. '>' → logprob: -14.126935958862305
    6. '<|end|>' → logprob: -15.064435958862305
    7. '   ' → logprob: -15.126935958862305
    8. '=' → logprob: -16.064435958862305
    9. '  ' → logprob: -16.126935958862305
    10. '۰' → logprob: -16.626935958862305

Token 270: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06981859356164932
    2. ':' → logprob: -3.1948184967041016
    3. 'and' → logprob: -4.069818496704102
    4. '                   ' → logprob: -5.069818496704102
    5. '                       ' → logprob: -6.194818496704102
    6. ':
' → logprob: -6.944818496704102
    7. '               ' → logprob: -10.694818496704102
    8. ',' → logprob: -11.194818496704102
    9. ' :' → logprob: -11.569818496704102
    10. '                  ' → logprob: -11.694818496704102

Token 271: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0676402896642685
    2. ' and' → logprob: -3.0676403045654297
    3. '                   ' → logprob: -4.19264030456543
    4. ':' → logprob: -6.19264030456543
    5. ':
' → logprob: -6.81764030456543
    6. 'and' → logprob: -7.81764030456543
    7. '                           ' → logprob: -10.19264030456543
    8. '                        
' → logprob: -10.56764030456543
    9. '               ' → logprob: -10.81764030456543
    10. ' or' → logprob: -10.81764030456543

Token 272: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.097508430480957
    2. ' print' → logprob: -1.097508430480957
    3. '                   ' → logprob: -1.722508430480957
    4. '                       ' → logprob: -2.972508430480957
    5. ' found' → logprob: -3.347508430480957
    6. 'found' → logprob: -3.472508430480957
    7. '                           ' → logprob: -4.597508430480957
    8. ' if' → logprob: -4.597508430480957
    9. 'if' (adapté à ' if') → logprob: -4.972508430480957
    10. ' q' → logprob: -5.847508430480957

Token 273: ' (' (ID: 350)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.5734520554542542
    2. 'not' → logprob: -1.9484519958496094
    3. ' not' → logprob: -2.0734519958496094
    4. ' q' → logprob: -2.4484519958496094
    5. '(q' → logprob: -3.5734519958496094
    6. 'p' → logprob: -4.073451995849609
    7. '(not' → logprob: -4.198451995849609
    8. '(p' → logprob: -4.823451995849609
    9. ' (' → logprob: -5.698451995849609
    10. ' p' → logprob: -5.823451995849609

Token 274: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5176024436950684
    2. 'q' → logprob: -1.8926024436950684
    3. ' p' → logprob: -2.3926024436950684
    4. '(p' → logprob: -3.0176024436950684
    5. ' q' → logprob: -3.2676024436950684
    6. '(q' → logprob: -3.7676024436950684
    7. ' not' → logprob: -3.8926024436950684
    8. 'not' → logprob: -4.267602443695068
    9. ' (' → logprob: -4.767602443695068
    10. '(not' → logprob: -6.142602443695068

Token 275: ' >' (ID: 1424)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.36719635128974915
    2. ' !=' → logprob: -1.4921963214874268
    3. ',' → logprob: -3.2421963214874268
    4. '==' → logprob: -3.4921963214874268
    5. '!=' → logprob: -4.867196559906006
    6. ' ,' → logprob: -6.367196559906006
    7. ' <=' → logprob: -6.492196559906006
    8. ' >' → logprob: -6.742196559906006
    9. ' >=' → logprob: -8.742196083068848
    10. ',s' → logprob: -8.742196083068848

Token 276: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.14667071402072906
    2. ' r' → logprob: -2.2716708183288574
    3. '0' → logprob: -3.5216708183288574
    4. ' ' → logprob: -5.896670818328857
    5. '1' → logprob: -7.271670818328857
    6. 'q' → logprob: -8.7716703414917
    7. ' q' → logprob: -9.7716703414917
    8. 'p' → logprob: -10.8966703414917
    9. ' p' → logprob: -10.8966703414917
    10. 's' → logprob: -11.6466703414917

Token 277: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07354015111923218
    2. ' or' → logprob: -2.698540210723877
    3. 'or' → logprob: -5.698540210723877
    4. ' )' → logprob: -8.323539733886719
    5. '                       ' → logprob: -13.823539733886719
    6. ' and' → logprob: -14.698539733886719
    7. 'and' → logprob: -14.948539733886719
    8. '
' → logprob: -15.323539733886719
    9. '                   ' → logprob: -15.323539733886719
    10. '                           ' → logprob: -15.573539733886719

Token 278: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.03262001648545265
    2. '                           ' → logprob: -3.7826199531555176
    3. 'or' → logprob: -4.907619953155518
    4. ':' → logprob: -6.532619953155518
    5. '                       ' → logprob: -8.282620429992676
    6. '           ' → logprob: -9.532620429992676
    7. ' and' → logprob: -9.657620429992676
    8. ' ' → logprob: -10.907620429992676
    9. '                            ' → logprob: -11.157620429992676
    10. '                          ' → logprob: -11.282620429992676

Token 279: ' (' (ID: 350)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.5790520906448364
    2. ' (' → logprob: -0.8290520906448364
    3. '(' → logprob: -6.329051971435547
    4. '((' → logprob: -7.579051971435547
    5. '(q' → logprob: -7.954051971435547
    6. '(r' → logprob: -8.329051971435547
    7. ' ((' → logprob: -9.204051971435547
    8. '   ' → logprob: -10.454051971435547
    9. '(s' → logprob: -10.954051971435547
    10. ' ' → logprob: -11.329051971435547

Token 280: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.7567896246910095
    2. '(p' → logprob: -0.7567896246910095
    3. ' p' → logprob: -3.5067896842956543
    4. ' (' → logprob: -3.5067896842956543
    5. '(' → logprob: -6.506789684295654
    6. 'q' → logprob: -10.444289207458496
    7. '((' → logprob: -10.944289207458496
    8. '(q' → logprob: -11.131789207458496
    9. '
' → logprob: -11.194289207458496
    10. ' ' → logprob: -11.444289207458496

Token 281: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5748446583747864
    2. ' <' → logprob: -1.3248445987701416
    3. ' >' → logprob: -2.3248445987701416
    4. '==' → logprob: -2.9498445987701416
    5. ' !=' → logprob: -5.199844837188721
    6. ' >=' → logprob: -5.574844837188721
    7. ' ' → logprob: -5.699844837188721
    8. '<' → logprob: -5.699844837188721
    9. '>' → logprob: -5.949844837188721
    10. ',' → logprob: -6.824844837188721

Token 282: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.006725199054926634
    2. ' r' → logprob: -5.006725311279297
    3. ' ' → logprob: -12.131725311279297
    4. 'p' → logprob: -13.506725311279297
    5. '
' → logprob: -14.506725311279297
    6. ' p' → logprob: -15.006725311279297
    7. '1' → logprob: -15.006725311279297
    8. '                           ' → logprob: -15.381725311279297
    9. '0' → logprob: -15.631725311279297
    10. '   ' → logprob: -15.756725311279297

Token 283: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.023326190188527107
    2. 'and' → logprob: -3.7733261585235596
    3. ')' → logprob: -10.02332592010498
    4. '                           ' → logprob: -11.14832592010498
    5. ' ' → logprob: -12.52332592010498
    6. '   ' → logprob: -12.64832592010498
    7. '                       ' → logprob: -12.64832592010498
    8. '           ' → logprob: -12.89832592010498
    9. '):
' → logprob: -12.89832592010498
    10. '    ' → logprob: -14.02332592010498

Token 284: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.001314285909757018
    2. ' q' → logprob: -7.001314163208008
    3. '(q' → logprob: -8.001314163208008
    4. '   ' → logprob: -10.501314163208008
    5. 'abs' → logprob: -11.751314163208008
    6. 's' → logprob: -12.251314163208008
    7. ' (' → logprob: -12.376314163208008
    8. '    ' → logprob: -12.626314163208008
    9. '(' → logprob: -12.751314163208008
    10. '           ' → logprob: -12.751314163208008

Token 285: ' >=' (ID: 5064)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.2395697832107544
    2. '>' → logprob: -1.9895697832107544
    3. ' <' → logprob: -3.114569664001465
    4. '<' → logprob: -3.614569664001465
    5. ' >=' → logprob: -5.864569664001465
    6. '>=' → logprob: -6.739569664001465
    7. ' <=' → logprob: -7.364569664001465
    8. '<=' → logprob: -8.364569664001465
    9. ' ' → logprob: -10.364569664001465
    10. ')' → logprob: -10.989569664001465

Token 286: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.055533405393362045
    2. '0' → logprob: -2.9305334091186523
    3. ' s' → logprob: -7.555533409118652
    4. 'q' → logprob: -9.805533409118652
    5. '-s' → logprob: -10.680533409118652
    6. ' ' → logprob: -10.805533409118652
    7. '   ' → logprob: -10.930533409118652
    8. '-' → logprob: -13.305533409118652
    9. '  ' → logprob: -13.805533409118652
    10. 'r' → logprob: -13.805533409118652

Token 287: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.006845495663583279
    2. '):' → logprob: -5.256845474243164
    3. '):
' → logprob: -7.631845474243164
    4. '                       ' → logprob: -7.756845474243164
    5. '                           ' → logprob: -8.131845474243164
    6. '                   ' → logprob: -8.756845474243164
    7. ' ):
' → logprob: -9.006845474243164
    8. ')' → logprob: -9.881845474243164
    9. ':
' → logprob: -10.756845474243164
    10. ':' → logprob: -11.381845474243164

Token 288: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.024770572781562805
    2. ':
' → logprob: -4.274770736694336
    3. '                       ' → logprob: -5.149770736694336
    4. ' continue' → logprob: -6.274770736694336
    5. 'continue' → logprob: -6.649770736694336
    6. '                   ' → logprob: -6.774770736694336
    7. ':' → logprob: -8.899770736694336
    8. '                               ' → logprob: -9.274770736694336
    9. '
' → logprob: -9.899770736694336
    10. '           ' → logprob: -10.274770736694336

Token 289: ' print' (ID: 2123)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.15036499500274658
    2. 'continue' → logprob: -2.400364875793457
    3. ' continue' → logprob: -3.400364875793457
    4. '                           ' → logprob: -4.775364875793457
    5. '   ' → logprob: -5.150364875793457
    6. '                       ' → logprob: -7.025364875793457
    7. '                   ' → logprob: -9.150364875793457
    8. ' ' → logprob: -9.900364875793457
    9. '           ' → logprob: -10.025364875793457
    10. '                                   ' → logprob: -10.150364875793457

Token 290: '(p' (ID: 2407)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.1710101217031479
    2. 'f' → logprob: -2.7960100173950195
    3. '(p' → logprob: -2.9210100173950195
    4. '(f' → logprob: -3.9210100173950195
    5. '"' → logprob: -4.0460100173950195
    6. ' p' → logprob: -7.0460100173950195
    7. 'a' → logprob: -7.0460100173950195
    8. ''' → logprob: -7.2960100173950195
    9. '0' → logprob: -7.6710100173950195
    10. '("' → logprob: -7.6710100173950195

Token 291: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00484293419867754
    2. ' ,' → logprob: -5.754842758178711
    3. ')' → logprob: -7.629842758178711
    4. ',q' → logprob: -7.629842758178711
    5. ',p' → logprob: -8.129842758178711
    6. ',r' → logprob: -8.879842758178711
    7. ',end' → logprob: -9.754842758178711
    8. ' *' → logprob: -9.754842758178711
    9. ',s' → logprob: -10.504842758178711
    10. '*' → logprob: -10.754842758178711

Token 292: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.47961169481277466
    2. 'r' → logprob: -0.9796116948127747
    3. 's' → logprob: -5.229611873626709
    4. 'p' → logprob: -9.35461139678955
    5. ' q' → logprob: -10.22961139678955
    6. ' r' → logprob: -11.60461139678955
    7. '   ' → logprob: -11.60461139678955
    8. ' ' → logprob: -12.72961139678955
    9. '     ' → logprob: -12.85461139678955
    10. ')' → logprob: -13.29211139678955

Token 293: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022653979249298573
    2. ',s' → logprob: -7.002265453338623
    3. ',r' → logprob: -7.127265453338623
    4. ' ,' → logprob: -7.752265453338623
    5. ')' → logprob: -9.877264976501465
    6. 's' → logprob: -10.502264976501465
    7. ',p' → logprob: -11.002264976501465
    8. ',q' → logprob: -11.252264976501465
    9. 'r' → logprob: -12.502264976501465
    10. ' s' → logprob: -12.877264976501465

Token 294: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -4.60414821645827e-06
    2. ' r' → logprob: -12.500004768371582
    3. '   ' → logprob: -14.625004768371582
    4. 's' → logprob: -16.000003814697266
    5. '
' → logprob: -16.250003814697266
    6. ' ' → logprob: -17.125003814697266
    7. '  ' → logprob: -17.750003814697266
    8. '	r' → logprob: -17.750003814697266
    9. 'p' → logprob: -18.125003814697266
    10. '     ' → logprob: -18.625003814697266

Token 295: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009326597792096436
    2. ',s' → logprob: -7.125932693481445
    3. ' ,' → logprob: -9.250932693481445
    4. 's' → logprob: -10.750932693481445
    5. ',q' → logprob: -12.125932693481445
    6. ' s' → logprob: -13.125932693481445
    7. ')' → logprob: -13.125932693481445
    8. ',r' → logprob: -14.625932693481445
    9. ',p' → logprob: -14.750932693481445
    10. ',
' → logprob: -15.250932693481445

Token 296: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00975679699331522
    2. ' s' → logprob: -4.634756565093994
    3. ')' → logprob: -14.634757041931152
    4. '   ' → logprob: -15.884757041931152
    5. ' ' → logprob: -16.259756088256836
    6. ' ' → logprob: -17.384756088256836
    7. ',' → logprob: -17.509756088256836
    8. '	s' → logprob: -17.759756088256836
    9. '    ' → logprob: -17.884756088256836
    10. ')s' → logprob: -18.072256088256836

Token 297: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5795097351074219
    2. ')' → logprob: -0.8295097351074219
    3. '                           ' → logprob: -5.704509735107422
    4. '                       ' → logprob: -8.829509735107422
    5. ')
' → logprob: -10.079509735107422
    6. '                   ' → logprob: -11.329509735107422
    7. ',' → logprob: -11.704509735107422
    8. '                               ' → logprob: -11.829509735107422
    9. ')

' → logprob: -12.954509735107422
    10. '           ' → logprob: -13.079509735107422

Token 298: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.002415014896541834
    2. ')' → logprob: -6.502415180206299
    3. '                   ' → logprob: -8.12741470336914
    4. '                       ' → logprob: -8.12741470336914
    5. '<|end|>' → logprob: -9.50241470336914
    6. '                            ' → logprob: -9.75241470336914
    7. '                            
' → logprob: -9.75241470336914
    8. '
' → logprob: -10.25241470336914
    9. ',' → logprob: -10.62741470336914
    10. '                               ' → logprob: -10.62741470336914

Token 299: ' found' (ID: 2491)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' (adapté à ' found') → logprob: -0.6804206371307373
    2. '                           ' → logprob: -1.1804206371307373
    3. 'break' → logprob: -1.8054206371307373
    4. ' found' → logprob: -4.555420875549316
    5. 'exit' → logprob: -4.805420875549316
    6. '
' → logprob: -7.055420875549316
    7. ' break' → logprob: -7.055420875549316
    8. 'import' → logprob: -7.805420875549316
    9. '                       ' → logprob: -8.430420875549316
    10. '   ' → logprob: -8.555420875549316

Token 300: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3937493860721588
    2. '=' → logprob: -1.1437493562698364
    3. '=True' → logprob: -5.018749237060547
    4. '=False' → logprob: -8.893749237060547
    5. '   ' → logprob: -10.393749237060547
    6. '                               ' → logprob: -11.268749237060547
    7. ' =
' → logprob: -11.643749237060547
    8. '                           ' → logprob: -11.643749237060547
    9. '=
' → logprob: -11.893749237060547
    10. '<|end|>' → logprob: -12.018749237060547

Token 301: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0001584850688232109
    2. ' True' → logprob: -8.750158309936523
    3. '(True' → logprob: -18.750158309936523
    4. '=True' → logprob: -19.000158309936523
    5. '   ' → logprob: -20.500158309936523
    6. 'true' → logprob: -21.750158309936523
    7. 'Tr' → logprob: -21.750158309936523
    8. 'TRUE' → logprob: -23.750158309936523
    9. 'False' → logprob: -24.000158309936523
    10. '.True' → logprob: -24.125158309936523

Token 302: '
' (ID: 198)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0013640470569953322
    2. '                   ' → logprob: -7.376364231109619
    3. '                       ' → logprob: -8.376363754272461
    4. '               ' → logprob: -8.876363754272461
    5. '                            
' → logprob: -9.001363754272461
    6. '                               ' → logprob: -9.501363754272461
    7. '                            ' → logprob: -9.751363754272461
    8. '           ' → logprob: -10.251363754272461
    9. '<|end|>' → logprob: -10.751363754272461
    10. 'if' → logprob: -11.626363754272461

Token 303: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0038529320154339075
    2. '                   ' → logprob: -6.753852844238281
    3. '                               ' → logprob: -7.128852844238281
    4. '                       ' → logprob: -7.128852844238281
    5. '               ' → logprob: -7.378852844238281
    6. '                            ' → logprob: -9.003852844238281
    7. '           ' → logprob: -9.253852844238281
    8. '                            
' → logprob: -9.503852844238281
    9. 'if' → logprob: -9.628852844238281
    10. '                                   ' → logprob: -10.378852844238281

Token 304: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.0006862253649160266
    2. ' break' → logprob: -7.500686168670654
    3. '                           ' → logprob: -9.250686645507812
    4. '                               ' → logprob: -11.500686645507812
    5. '   ' → logprob: -11.875686645507812
    6. '                   ' → logprob: -12.375686645507812
    7. 'return' → logprob: -12.375686645507812
    8. '
' → logprob: -12.625686645507812
    9. '	break' → logprob: -13.000686645507812
    10. '                       ' → logprob: -13.000686645507812

Token 305: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.31000807881355286
    2. '           ' → logprob: -1.9350080490112305
    3. '                   ' → logprob: -3.4350080490112305
    4. '                           ' → logprob: -3.4350080490112305
    5. '       ' → logprob: -3.6850080490112305
    6. '                       ' → logprob: -4.8100080490112305
    7. '                               ' → logprob: -5.3100080490112305
    8. '
' → logprob: -5.5600080490112305
    9. '                ' → logprob: -6.4350080490112305
    10. '<|end|>' → logprob: -6.4350080490112305

Token 306: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2097255140542984
    2. '           ' → logprob: -2.0847256183624268
    3. '                   ' → logprob: -4.084725379943848
    4. '                           ' → logprob: -4.209725379943848
    5. '       ' → logprob: -4.334725379943848
    6. '                               ' → logprob: -4.834725379943848
    7. '                       ' → logprob: -6.084725379943848
    8. '                ' → logprob: -6.334725379943848
    9. '         ' → logprob: -6.584725379943848
    10. '              ' → logprob: -6.584725379943848

Token 307: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04596833512187004
    2. '   ' → logprob: -4.295968532562256
    3. '               ' → logprob: -4.295968532562256
    4. '                               ' → logprob: -5.295968532562256
    5. '                   ' → logprob: -5.545968532562256
    6. '           ' → logprob: -5.545968532562256
    7. '                           ' → logprob: -6.420968532562256
    8. '                       ' → logprob: -7.170968532562256
    9. '        ' → logprob: -8.045968055725098
    10. '         ' → logprob: -8.170968055725098

Token 308: ' found' (ID: 2491)
  Prédit: ' found'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' found' → logprob: -0.31326258182525635
    2. 'found' → logprob: -1.3132625818252563
    3. '	found' → logprob: -14.188262939453125
    4. '   ' → logprob: -16.688262939453125
    5. ' ' → logprob: -16.938262939453125
    6. '(found' → logprob: -17.188262939453125
    7. ' ' → logprob: -17.563262939453125
    8. 'Found' → logprob: -17.938262939453125
    9. '_found' → logprob: -18.438262939453125
    10. 'f' → logprob: -19.188262939453125

Token 309: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6269547343254089
    2. ':' → logprob: -1.5019547939300537
    3. '               ' → logprob: -2.0019547939300537
    4. '       ' → logprob: -3.6269547939300537
    5. '                               ' → logprob: -4.001954555511475
    6. '                       ' → logprob: -4.001954555511475
    7. '                           ' → logprob: -4.626954555511475
    8. '   ' → logprob: -4.626954555511475
    9. '=True' → logprob: -5.251954555511475
    10. '==' → logprob: -5.501954555511475

Token 310: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0014653427060693502
    2. ' break' → logprob: -7.501465320587158
    3. 'break' → logprob: -7.751465320587158
    4. '                   ' → logprob: -8.376465797424316
    5. '           ' → logprob: -8.876465797424316
    6. '                       ' → logprob: -9.626465797424316
    7. '       ' → logprob: -11.001465797424316
    8. '                           ' → logprob: -11.376465797424316
    9. '                               ' → logprob: -11.501465797424316
    10. '   ' → logprob: -12.626465797424316

Token 311: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.09179434180259705
    2. '               ' → logprob: -2.84179425239563
    3. ' break' → logprob: -3.59179425239563
    4. '           ' → logprob: -7.091794490814209
    5. '                   ' → logprob: -7.716794490814209
    6. '       ' → logprob: -7.841794490814209
    7. '   ' → logprob: -8.84179401397705
    8. '                       ' → logprob: -11.09179401397705
    9. '	break' → logprob: -12.34179401397705
    10. '                           ' → logprob: -13.84179401397705

Token 312: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009992876090109348
    2. '   ' → logprob: -4.884993076324463
    3. '<|end|>' → logprob: -6.759993076324463
    4. '               ' → logprob: -7.509993076324463
    5. '           ' → logprob: -8.009992599487305
    6. '                   ' → logprob: -9.384992599487305
    7. '                           ' → logprob: -9.509992599487305
    8. '                               ' → logprob: -9.634992599487305
    9. '                       ' → logprob: -10.134992599487305
    10. '<|end|>' → logprob: -11.509992599487305

Token 313: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2684250771999359
    2. '<|end|>' → logprob: -1.5184251070022583
    3. '   ' → logprob: -4.393424987792969
    4. '        ' → logprob: -7.268424987792969
    5. '<|end|>' → logprob: -7.268424987792969
    6. '    ' → logprob: -7.643424987792969
    7. ')' → logprob: -7.768424987792969
    8. '               ' → logprob: -7.893424987792969
    9. '           ' → logprob: -8.768424987792969
    10. '                               ' → logprob: -9.018424987792969

Token 314: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20838208496570587
    2. '       ' → logprob: -1.7083821296691895
    3. '<|end|>' → logprob: -5.0833821296691895
    4. '    ' → logprob: -8.083381652832031
    5. '           ' → logprob: -9.333381652832031
    6. '               ' → logprob: -9.708381652832031
    7. ')' → logprob: -9.958381652832031
    8. ' if' → logprob: -10.208381652832031
    9. 'if' (adapté à ' if') → logprob: -10.333381652832031
    10. '<|end|>' → logprob: -10.458381652832031

Token 315: ' found' (ID: 2491)
  Prédit: ' found'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' found' → logprob: -0.0040785204619169235
    2. 'found' → logprob: -5.504078388214111
    3. '(found' → logprob: -16.129077911376953
    4. '	found' → logprob: -16.879077911376953
    5. 'Found' → logprob: -18.254077911376953
    6. '_found' → logprob: -18.879077911376953
    7. '   ' → logprob: -19.254077911376953
    8. ' Found' → logprob: -21.129077911376953
    9. ' ' → logprob: -21.629077911376953
    10. ' not' → logprob: -22.004077911376953

Token 316: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1638731211423874
    2. ':
' → logprob: -1.9138730764389038
    3. '           ' → logprob: -5.913873195648193
    4. '       ' → logprob: -7.288873195648193
    5. '   ' → logprob: -8.538872718811035
    6. '               ' → logprob: -10.913872718811035
    7. ':

' → logprob: -12.038872718811035
    8. '                           ' → logprob: -12.163872718811035
    9. '          ' → logprob: -12.538872718811035
    10. '==' → logprob: -12.538872718811035

Token 317: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005830573500134051
    2. ' break' → logprob: -7.500583171844482
    3. 'break' → logprob: -10.625582695007324
    4. '       ' → logprob: -12.500582695007324
    5. '   ' → logprob: -13.375582695007324
    6. '               ' → logprob: -14.500582695007324
    7. '          ' → logprob: -17.50058364868164
    8. '	break' → logprob: -18.25058364868164
    9. ' True' → logprob: -18.37558364868164
    10. '		' → logprob: -18.50058364868164

Token 318: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.0036480571143329144
    2. ' break' → logprob: -5.753648281097412
    3. '           ' → logprob: -7.753648281097412
    4. '   ' → logprob: -10.503647804260254
    5. '       ' → logprob: -11.253647804260254
    6. '	break' → logprob: -14.253647804260254
    7. '               ' → logprob: -16.12864875793457
    8. '  ' → logprob: -18.62864875793457
    9. ' ' → logprob: -19.37864875793457
    10. '_break' → logprob: -19.50364875793457

Token 319: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 320: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 321: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 322: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.06197037547826767
    2. 'not' → logprob: -2.8119704723358154
    3. ' found' → logprob: -13.936970710754395
    4. '   ' → logprob: -14.311970710754395
    5. '	not' → logprob: -15.061970710754395
    6. '!' → logprob: -15.436970710754395
    7. '
' → logprob: -15.436970710754395
    8. 'found' → logprob: -15.561970710754395
    9. ' ' → logprob: -15.936970710754395
    10. '(not' → logprob: -17.061969757080078

Token 323: ' found' (ID: 2491)
  Prédit: ' found'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' found' → logprob: -0.003178782993927598
    2. 'found' → logprob: -5.753178596496582
    3. '	found' → logprob: -14.003178596496582
    4. '(found' → logprob: -16.1281795501709
    5. '_found' → logprob: -16.2531795501709
    6. 'Found' → logprob: -17.0031795501709
    7. ' ' → logprob: -17.7531795501709
    8. '   ' → logprob: -18.2531795501709
    9. ' ' → logprob: -18.8781795501709
    10. ' not' → logprob: -19.8781795501709

Token 324: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2523544728755951
    2. ':
' → logprob: -1.5023545026779175
    3. '   ' → logprob: -8.127354621887207
    4. '       ' → logprob: -9.752354621887207
    5. '():
' → logprob: -10.627354621887207
    6. ' :' → logprob: -10.877354621887207
    7. ' :
' → logprob: -11.127354621887207
    8. '):
' → logprob: -12.002354621887207
    9. ':

' → logprob: -12.752354621887207
    10. ':
' → logprob: -14.002354621887207

Token 325: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13439784944057465
    2. '       ' → logprob: -2.1343977451324463
    3. 'print' → logprob: -5.384397983551025
    4. ' print' → logprob: -5.884397983551025
    5. '```' → logprob: -10.134397506713867
    6. '    
' → logprob: -11.509397506713867
    7. ',' → logprob: -12.134397506713867
    8. '	print' → logprob: -12.384397506713867
    9. '<|end|>' → logprob: -12.634397506713867
    10. '        
' → logprob: -12.884397506713867

Token 326: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.01966572366654873
    2. ' print' → logprob: -4.144665718078613
    3. '   ' → logprob: -5.644665718078613
    4. '       ' → logprob: -9.394665718078613
    5. '	print' → logprob: -12.519665718078613
    6. '           ' → logprob: -14.519665718078613
    7. '    ' → logprob: -15.144665718078613
    8. ' ' → logprob: -15.144665718078613
    9. '  ' → logprob: -15.269665718078613
    10. '```' → logprob: -15.769665718078613

Token 327: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.7398808002471924
    2. 'No' → logprob: -1.6148808002471924
    3. '(' → logprob: -2.6148808002471924
    4. '(-' → logprob: -2.7398808002471924
    5. '(No' → logprob: -2.7398808002471924
    6. '0' → logprob: -3.3648808002471924
    7. 'Impossible' → logprob: -3.9898808002471924
    8. 'None' → logprob: -3.9898808002471924
    9. '('' → logprob: -4.114880561828613
    10. 'NO' → logprob: -4.989880561828613

Token 328: 'Impossible' (ID: 192245)
  Prédit: 'No'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.0035063496325165033
    2. 'Impossible' → logprob: -7.003506183624268
    3. '"No' → logprob: -7.003506183624268
    4. 'None' → logprob: -7.503506183624268
    5. 'no' → logprob: -8.253506660461426
    6. 'Cannot' → logprob: -8.628506660461426
    7. 'IMP' → logprob: -9.503506660461426
    8. 'NO' → logprob: -9.503506660461426
    9. 'Not' → logprob: -9.628506660461426
    10. '0' → logprob: -10.003506660461426

Token 329: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -1.1756367712223437e-05
    2. ')' → logprob: -11.500011444091797
    3. '")
' → logprob: -14.000011444091797
    4. ')")' → logprob: -14.375011444091797
    5. '')' → logprob: -17.000011444091797
    6. '<|end|>' → logprob: -17.625011444091797
    7. '");' → logprob: -17.750011444091797
    8. '"' → logprob: -17.750011444091797
    9. '")}' → logprob: -18.125011444091797
    10. '!")' → logprob: -18.125011444091797


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 327
Tokens correctement prédits (1ère position, stricte): 140
Tokens correctement prédits (1ère position, avec adaptation): 147
Tokens correctement prédits (top 10): 280
Précision stricte (1ère position): 42.81%
Précision adaptée (1ère position): 44.95%
Précision (top 10): 85.63%
================================================================================
