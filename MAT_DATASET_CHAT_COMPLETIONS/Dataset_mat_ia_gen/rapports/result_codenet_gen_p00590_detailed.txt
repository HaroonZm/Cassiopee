================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:16:06
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Solution complète en Python pour le problème "Pair of Primes"
# L'approche consiste à:
# 1. Lire chaque valeur N donnée en entrée jusqu'à la fin des données.
# 2. Identifier les nombres premiers entre 1 et N en utilisant le crible d'Ératosthène pour une efficacité optimale.
# 3. Pour chaque i de 1 à N, on forme une paire (i, N-i+1).
# 4. On compte combien de ces paires sont composées de deux nombres premiers.
# 5. On affiche le résultat pour chaque N.

import sys

def sieve(max_n):
    """
    Crée un tableau de booléens indiquant si chaque nombre de 0 à max_n est premier.
    Utilise le crible d'Ératosthène.
    """
    is_prime = [True] * (max_n + 1)
    is_prime[0], is_prime[1] = False, False  # 0 et 1 ne sont pas premiers
    for i in range(2, int(max_n ** 0.5) + 1):
        if is_prime[i]:
            for j in range(i*i, max_n + 1, i):
                is_prime[j] = False
    return is_prime

def count_prime_pairs(n, is_prime):
    """
    Compte le nombre de paires (i, n - i + 1) où i et n - i + 1 sont premiers.
    """
    count = 0
    for i in range(1, n+1):
        j = n - i + 1
        # Vérifier que les deux nombres dans la paire sont premiers
        if is_prime[i] and is_prime[j]:
            count += 1
    return count

def main():
    max_n = 10000  # bornes du problème
    # Pré-calcul des nombres premiers pour tous les N possibles
    is_prime = sieve(max_n)

    for line in sys.stdin:
        line = line.strip()
        if not line:
            continue
        n = int(line)
        result = count_prime_pairs(n, is_prime)
        print(result)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Solution' (ID: 20858)
  → Token d'amorce (pas de prédiction)

Token 2: ' complète' (ID: 75660)
  → Token d'amorce (pas de prédiction)

Token 3: ' en' (ID: 469)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7497876882553101
    2. '```' → logprob: -0.7497876882553101
    3. 'def' → logprob: -4.2497878074646
    4. '#' → logprob: -4.3747878074646
    5. ' :' → logprob: -4.4997878074646
    6. '\n' → logprob: -4.8747878074646
    7. '``' → logprob: -5.9997878074646
    8. '\' → logprob: -6.3747878074646
    9. '`' → logprob: -6.8747878074646
    10. ' ```' → logprob: -7.4997878074646

Token 4: ' Python' (ID: 26534)
  Prédit: 'python'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'python' → logprob: -0.02568945661187172
    2. 'Python' → logprob: -4.025689601898193
    3. ' python' → logprob: -5.400689601898193
    4. ' Python' → logprob: -6.275689601898193
    5. 'fr' → logprob: -7.275689601898193
    6. '```' → logprob: -8.400689125061035
    7. 'py' → logprob: -8.900689125061035
    8. ' français' → logprob: -10.025689125061035
    9. '_python' → logprob: -12.775689125061035
    10. '.py' → logprob: -12.900689125061035

Token 5: ' pour' (ID: 1930)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7597295045852661
    2. '```' → logprob: -0.7597295045852661
    3. '\' → logprob: -4.009729385375977
    4. 'def' → logprob: -4.259729385375977
    5. '\n' → logprob: -4.259729385375977
    6. '#' → logprob: -5.384729385375977
    7. ' :' → logprob: -5.384729385375977
    8. '``' → logprob: -5.759729385375977
    9. ':def' → logprob: -6.009729385375977
    10. '
' → logprob: -7.384729385375977

Token 6: ' le' (ID: 505)
  Prédit: ' résoudre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' résoudre' → logprob: -1.521314263343811
    2. ' la' → logprob: -1.896314263343811
    3. '```' → logprob: -2.0213141441345215
    4. ' l' → logprob: -2.1463141441345215
    5. ' le' → logprob: -2.3963141441345215
    6. ' créer' → logprob: -2.5213141441345215
    7. 'l' → logprob: -3.1463141441345215
    8. ' traiter' → logprob: -3.8963141441345215
    9. 'le' → logprob: -4.0213141441345215
    10. ' gérer' → logprob: -4.1463141441345215

Token 7: ' problème' (ID: 35630)
  Prédit: ' tri'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tri' → logprob: -1.4585773944854736
    2. '#' → logprob: -1.7085773944854736
    3. 'pro' → logprob: -1.7085773944854736
    4. 'tri' → logprob: -1.9585773944854736
    5. ' problème' → logprob: -2.5835773944854736
    6. ' trie' → logprob: -3.8335773944854736
    7. ' code' → logprob: -3.8335773944854736
    8. ' #' → logprob: -3.9585773944854736
    9. ' probl' → logprob: -4.4585771560668945
    10. 's' → logprob: -4.5835771560668945

Token 8: ' "' (ID: 392)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6544009447097778
    2. ' :' → logprob: -0.7794009447097778
    3. '#' → logprob: -4.779400825500488
    4. '```' → logprob: -5.154400825500488
    5. ' ' → logprob: -6.154400825500488
    6. '\' → logprob: -6.654400825500488
    7. 's' → logprob: -7.029400825500488
    8. '.' → logprob: -7.529400825500488
    9. '\n' → logprob: -8.279400825500488
    10. '"""' → logprob: -8.404400825500488

Token 9: 'Pair' (ID: 15573)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.2424925565719604
    2. 'n' → logprob: -1.8674925565719604
    3. 's' → logprob: -2.24249267578125
    4. '```' → logprob: -2.86749267578125
    5. '"' → logprob: -3.86749267578125
    6. 'voy' → logprob: -3.99249267578125
    7. '#' → logprob: -4.24249267578125
    8. 'https' → logprob: -4.24249267578125
    9. ' N' → logprob: -4.24249267578125
    10. 'Bonjour' → logprob: -4.24249267578125

Token 10: ' of' (ID: 328)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.12376060336828232
    2. '"' → logprob: -3.49876070022583
    3. 'e' → logprob: -3.62376070022583
    4. 'sum' → logprob: -3.99876070022583
    5. 'Sum' → logprob: -3.99876070022583
    6. 'ing' → logprob: -5.62376070022583
    7. ' de' → logprob: -6.24876070022583
    8. ' sum' → logprob: -6.49876070022583
    9. 'Programming' → logprob: -6.49876070022583
    10. 'é' → logprob: -6.49876070022583

Token 11: ' Pr' (ID: 2284)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -1.198368787765503
    2. ' integers' → logprob: -1.323368787765503
    3. 'inte' → logprob: -1.698368787765503
    4. ' numbers' → logprob: -2.073368787765503
    5. 's' → logprob: -3.573368787765503
    6. 'arrays' → logprob: -3.698368787765503
    7. ' arrays' → logprob: -4.323369026184082
    8. 'nums' → logprob: -5.198369026184082
    9. 'Numbers' → logprob: -5.323369026184082
    10. ' shoes' → logprob: -5.323369026184082

Token 12: 'imes' (ID: 2332)
  Prédit: 'ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ob' → logprob: -1.5043776035308838
    2. 'o' → logprob: -1.6293776035308838
    3. 'int' → logprob: -1.8793776035308838
    4. '#' → logprob: -1.8793776035308838
    5. 'oble' → logprob: -2.004377603530884
    6. '```' → logprob: -3.004377603530884
    7. 'e' → logprob: -3.879377603530884
    8. 'i' → logprob: -4.254377365112305
    9. 'import' → logprob: -5.004377365112305
    10. 'obl' → logprob: -5.129377365112305

Token 13: '"
' (ID: 1092)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03421621397137642
    2. ':' → logprob: -3.9092161655426025
    3. '"' → logprob: -4.909216403961182
    4. ')' → logprob: -6.659216403961182
    5. ' s' → logprob: -6.659216403961182
    6. '```' → logprob: -6.909216403961182
    7. '"""' → logprob: -6.909216403961182
    8. ''' → logprob: -7.659216403961182
    9. ' :' → logprob: -7.784216403961182
    10. '":' → logprob: -8.034215927124023

Token 14: '#' (ID: 2)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3599535822868347
    2. 's' → logprob: -1.8599536418914795
    3. ' :' → logprob: -2.7349536418914795
    4. '```' → logprob: -3.1099536418914795
    5. 'def' → logprob: -3.4849536418914795
    6. '\' → logprob: -6.2349534034729
    7. ':
' → logprob: -7.3599534034729
    8. ':def' → logprob: -7.4849534034729
    9. ':

' → logprob: -7.6099534034729
    10. '``' → logprob: -7.6099534034729

Token 15: ' L' (ID: 451)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.008676023222506046
    2. ' def' → logprob: -5.883676052093506
    3. ' ```' → logprob: -5.883676052093506
    4. 'def' → logprob: -6.758676052093506
    5. ' #' → logprob: -7.383676052093506
    6. '```' → logprob: -8.633675575256348
    7. ' from' → logprob: -8.758675575256348
    8. '#' → logprob: -8.758675575256348
    9. ' 
' → logprob: -9.258675575256348
    10. ' ​' → logprob: -9.508675575256348

Token 16: ''appro' (ID: 134343)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2098805904388428
    2. 'i' → logprob: -1.2098805904388428
    3. 'e' → logprob: -1.8348805904388428
    4. 'a' → logprob: -2.3348805904388428
    5. 'iste' → logprob: -3.7098805904388428
    6. ''i' → logprob: -3.7098805904388428
    7. '```' → logprob: -3.8348805904388428
    8. ''' → logprob: -3.9598805904388428
    9. 'im' → logprob: -4.459880828857422
    10. 'ine' → logprob: -5.334880828857422

Token 17: 'che' (ID: 926)
  Prédit: 'che'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'che' → logprob: -0.036965832114219666
    2. '#' → logprob: -4.036965847015381
    3. 'x' → logprob: -4.161965847015381
    4. 'visionnement' → logprob: -7.161965847015381
    5. 'm' → logprob: -7.786965847015381
    6. 'ache' → logprob: -8.286965370178223
    7. 'b' → logprob: -8.661965370178223
    8. 'ch' → logprob: -8.661965370178223
    9. 'xi' → logprob: -8.911965370178223
    10. 'h' → logprob: -9.036965370178223

Token 18: ' consiste' (ID: 46504)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.302335262298584
    2. ' :' → logprob: -1.427335262298584
    3. ':' → logprob: -4.302335262298584
    4. 's' → logprob: -5.552335262298584
    5. ' =' → logprob: -6.677335262298584
    6. ' s' → logprob: -6.802335262298584
    7. ' ' → logprob: -7.927335262298584
    8. ' #' → logprob: -8.302335739135742
    9. ' la' → logprob: -9.177335739135742
    10. ' :
' → logprob: -9.302335739135742

Token 19: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.022284235805273056
    2. ' ' → logprob: -3.8972842693328857
    3. 'à' → logprob: -6.772284030914307
    4. ' a' → logprob: -8.022284507751465
    5. ' ' → logprob: -9.647284507751465
    6. ' to' → logprob: -10.272284507751465
    7. ' essentiellement' → logprob: -10.397284507751465
    8. '  ' → logprob: -10.647284507751465
    9. ' au' → logprob: -10.772284507751465
    10. ' =' → logprob: -11.397284507751465

Token 20: ':
' (ID: 734)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -1.0189114809036255
    2. ' trouver' → logprob: -1.3939114809036255
    3. 'chercher' → logprob: -1.7689114809036255
    4. ' vérifier' → logprob: -2.643911361694336
    5. 'util' → logprob: -3.768911361694336
    6. ' utiliser' → logprob: -3.893911361694336
    7. ' rechercher' → logprob: -4.018911361694336
    8. ' chercher' → logprob: -4.018911361694336
    9. 'v' → logprob: -4.143911361694336
    10. '#' → logprob: -4.518911361694336

Token 21: '#' (ID: 2)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5251144766807556
    2. ' #' → logprob: -1.5251145362854004
    3. '#' → logprob: -2.4001145362854004
    4. ' trouver' → logprob: -3.5251145362854004
    5. ' utiliser' → logprob: -4.9001145362854
    6. ' calcul' → logprob: -5.4001145362854
    7. ' rechercher' → logprob: -5.4001145362854
    8. ' définir' → logprob: -5.5251145362854
    9. ' def' → logprob: -5.7751145362854
    10. ' a' → logprob: -5.7751145362854

Token 22: ' ' (ID: 220)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7788099050521851
    2. ' trouver' → logprob: -1.153809905052185
    3. ' #' → logprob: -2.9038100242614746
    4. ' rechercher' → logprob: -3.7788100242614746
    5. ' Trou' → logprob: -4.028810024261475
    6. ' utiliser' → logprob: -4.153810024261475
    7. ' identifier' → logprob: -4.653810024261475
    8. ' explorer' → logprob: -4.653810024261475
    9. ' écrire' → logprob: -4.903810024261475
    10. ' calcul' → logprob: -5.028810024261475

Token 23: '1' (ID: 16)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.4878188371658325
    2. ' utiliser' → logprob: -1.4878188371658325
    3. ' génér' → logprob: -2.112818717956543
    4. '-' → logprob: -2.237818717956543
    5. 'g' → logprob: -2.487818717956543
    6. '1' → logprob: -3.362818717956543
    7. ' -' → logprob: -3.737818717956543
    8. ' trouver' → logprob: -3.862818717956543
    9. 'util' → logprob: -3.862818717956543
    10. ' calcul' → logprob: -3.987818717956543

Token 24: '.' (ID: 13)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07841100543737411
    2. '.' → logprob: -3.203411102294922
    3. ' )' → logprob: -5.078411102294922
    4. ')' → logprob: -5.203411102294922
    5. ' space' → logprob: -5.953411102294922
    6. ' .' → logprob: -6.203411102294922
    7. ' créer' → logprob: -6.578411102294922
    8. ' utiliser' → logprob: -6.828411102294922
    9. ' #' → logprob: -7.078411102294922
    10. '-' → logprob: -7.078411102294922

Token 25: ' Lire' (ID: 57624)
  Prédit: ' Gén'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Gén' → logprob: -0.9359187483787537
    2. ' génér' → logprob: -1.6859188079833984
    3. ' utiliser' → logprob: -2.9359188079833984
    4. '#' → logprob: -3.1859188079833984
    5. ' Dé' → logprob: -3.4359188079833984
    6. ' calcul' → logprob: -3.5609188079833984
    7. ' import' → logprob: -3.8109188079833984
    8. ' #' → logprob: -3.9359188079833984
    9. ' créer' → logprob: -3.9359188079833984
    10. ' ' → logprob: -4.060918807983398

Token 26: ' chaque' (ID: 21194)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0025757751427590847
    2. ' l' → logprob: -6.127575874328613
    3. 'l' → logprob: -8.502575874328613
    4. '  ' → logprob: -10.252575874328613
    5. ' la' → logprob: -10.377575874328613
    6. '_' → logprob: -10.627575874328613
    7. ' ' → logprob: -10.877575874328613
    8. ' le' → logprob: -11.127575874328613
    9. ' les' → logprob: -11.377575874328613
    10. 's' → logprob: -11.627575874328613

Token 27: ' valeur' (ID: 41664)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13547144830226898
    2. ' nombre' → logprob: -2.5104713439941406
    3. ' ligne' → logprob: -3.6354713439941406
    4. 'nombre' → logprob: -5.385471343994141
    5. ' entier' → logprob: -5.760471343994141
    6. 'ligne' → logprob: -6.635471343994141
    7. 'l' → logprob: -6.760471343994141
    8. ' numéro' → logprob: -7.135471343994141
    9. ' nombres' → logprob: -7.385471343994141
    10. '  ' → logprob: -7.510471343994141

Token 28: ' N' (ID: 478)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.847116231918335
    2. ' d' → logprob: -1.097116231918335
    3. ' de' → logprob: -2.222116231918335
    4. ',' → logprob: -3.347116231918335
    5. 'entrée' → logprob: -3.972116231918335
    6. 'd' → logprob: -4.722116470336914
    7. ' ,' → logprob: -4.722116470336914
    8. 'n' → logprob: -4.847116470336914
    9. ' n' → logprob: -5.097116470336914
    10. 's' → logprob: -5.097116470336914

Token 29: ' donnée' (ID: 130126)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5211153030395508
    2. ' ' → logprob: -1.2711153030395508
    3. ' ,' → logprob: -3.146115303039551
    4. '.' → logprob: -3.771115303039551
    5. ':' → logprob: -4.271115303039551
    6. ' (' → logprob: -4.646115303039551
    7. 's' → logprob: -5.146115303039551
    8. '\' → logprob: -5.271115303039551
    9. '<|end|>' → logprob: -5.521115303039551
    10. '#' → logprob: -6.271115303039551

Token 30: ' en' (ID: 469)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5942850708961487
    2. ',' → logprob: -1.344285011291504
    3. '.' → logprob: -3.094285011291504
    4. '<|end|>' → logprob: -3.344285011291504
    5. '#' → logprob: -3.969285011291504
    6. ':' → logprob: -4.094285011291504
    7. '\' → logprob: -4.094285011291504
    8. ' ,' → logprob: -4.719285011291504
    9. '```' → logprob: -4.844285011291504
    10. 's' → logprob: -4.969285011291504

Token 31: ' entrée' (ID: 95590)
  Prédit: ' entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entrée' → logprob: -0.8137696981430054
    2. 'entrée' → logprob: -1.1887696981430054
    3. ' input' → logprob: -1.4387696981430054
    4. 'l' → logprob: -5.688769817352295
    5. 'input' → logprob: -5.688769817352295
    6. ' l' → logprob: -6.688769817352295
    7. ' ' → logprob: -6.688769817352295
    8. ' entr' → logprob: -6.813769817352295
    9. ' stdin' → logprob: -6.938769817352295
    10. '```' → logprob: -7.188769817352295

Token 32: ' jusqu' (ID: 21961)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9142194986343384
    2. ' ' → logprob: -1.1642194986343384
    3. ' ,' → logprob: -2.789219379425049
    4. ':' → logprob: -3.039219379425049
    5. '#' → logprob: -3.414219379425049
    6. '```' → logprob: -3.414219379425049
    7. '.' → logprob: -3.539219379425049
    8. '\' → logprob: -4.164219379425049
    9. '<|end|>' → logprob: -4.289219379425049
    10. ' :' → logprob: -4.664219379425049

Token 33: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.003393021412193775
    2. '’à' → logprob: -6.378393173217773
    3. 'à' → logprob: -7.753393173217773
    4. ''' → logprob: -7.878393173217773
    5. ' à' → logprob: -7.878393173217773
    6. ''au' → logprob: -8.128393173217773
    7. ''a' → logprob: -9.253393173217773
    8. '_' → logprob: -9.753393173217773
    9. ' ' → logprob: -10.253393173217773
    10. 'a' → logprob: -12.503393173217773

Token 34: ' la' (ID: 557)
  Prédit: ' EOF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' EOF' → logprob: -0.4272814095020294
    2. 'EOF' → logprob: -2.177281379699707
    3. ' ce' → logprob: -2.302281379699707
    4. ' la' → logprob: -2.552281379699707
    5. 'ce' → logprob: -3.927281379699707
    6. ' ' → logprob: -4.052281379699707
    7. '0' → logprob: -4.677281379699707
    8. 'la' → logprob: -5.052281379699707
    9. '```' → logprob: -7.052281379699707
    10. '-' → logprob: -7.552281379699707

Token 35: ' fin' (ID: 2131)
  Prédit: ' fin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fin' → logprob: -0.32961398363113403
    2. 'fin' → logprob: -1.8296139240264893
    3. ' EOF' → logprob: -3.0796139240264893
    4. 'EOF' → logprob: -3.5796139240264893
    5. '0' → logprob: -4.079614162445068
    6. ' ' → logprob: -4.204614162445068
    7. '-' → logprob: -5.579614162445068
    8. 'n' → logprob: -5.704614162445068
    9. 'f' → logprob: -6.079614162445068
    10. '```' → logprob: -6.954614162445068

Token 36: ' des' (ID: 731)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.01145320013165474
    2. ' des' → logprob: -5.261453151702881
    3. ' du' → logprob: -6.136453151702881
    4. '```' → logprob: -7.011453151702881
    5. 'def' → logprob: -7.636453151702881
    6. 'de' → logprob: -7.886453151702881
    7. ' of' → logprob: -8.011453628540039
    8. '#' → logprob: -8.261453628540039
    9. 'du' → logprob: -8.386453628540039
    10. '\' → logprob: -9.011453628540039

Token 37: ' données' (ID: 30580)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.00810350850224495
    2. 'entrée' → logprob: -5.883103370666504
    3. ' fichier' → logprob: -6.258103370666504
    4. 'l' → logprob: -6.258103370666504
    5. 'input' → logprob: -8.133103370666504
    6. ' ' → logprob: -8.258103370666504
    7. '#' → logprob: -8.383103370666504
    8. 'file' → logprob: -8.633103370666504
    9. '-' → logprob: -9.758103370666504
    10. '_' → logprob: -10.008103370666504

Token 38: '.
' (ID: 558)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.1288476288318634
    2. ':' → logprob: -3.378847599029541
    3. '
' → logprob: -3.378847599029541
    4. '\' → logprob: -3.753847599029541
    5. 'def' → logprob: -5.003847599029541
    6. ',' → logprob: -5.503847599029541
    7. 'import' → logprob: -5.753847599029541
    8. '#' → logprob: -5.753847599029541
    9. '.' → logprob: -6.003847599029541
    10. '\n' → logprob: -6.128847599029541

Token 39: '#' (ID: 2)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.11521080881357193
    2. '\' → logprob: -3.115210771560669
    3. '#' → logprob: -3.365210771560669
    4. ' ' → logprob: -5.115211009979248
    5. 'def' → logprob: -5.115211009979248
    6. '``' → logprob: -5.740211009979248
    7. '2' → logprob: -5.865211009979248
    8. ' ```' → logprob: -5.990211009979248
    9. '`' → logprob: -6.490211009979248
    10. '
' → logprob: -6.490211009979248

Token 40: ' ' (ID: 220)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.12303533405065536
    2. ' ```' → logprob: -3.623035430908203
    3. '#' → logprob: -3.748035430908203
    4. 'def' → logprob: -3.998035430908203
    5. ' ' → logprob: -4.123035430908203
    6. 'n' → logprob: -4.748035430908203
    7. '\' → logprob: -4.873035430908203
    8. 'd' → logprob: -5.623035430908203
    9. '``' → logprob: -6.123035430908203
    10. '`' → logprob: -6.748035430908203

Token 41: '2' (ID: 17)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6566143035888672
    2. '```' → logprob: -1.0316143035888672
    3. ' while' → logprob: -2.406614303588867
    4. 'import' → logprob: -4.656614303588867
    5. '#' → logprob: -5.156614303588867
    6. '``' → logprob: -5.156614303588867
    7. ' ```' → logprob: -5.781614303588867
    8. 'def' → logprob: -5.781614303588867
    9. ' ' → logprob: -6.281614303588867
    10. 'wh' → logprob: -6.906614303588867

Token 42: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0018467707559466362
    2. '#' → logprob: -7.251846790313721
    3. ' ' → logprob: -7.876846790313721
    4. ' .' → logprob: -8.251846313476562
    5. '```' → logprob: -9.126846313476562
    6. ' #' → logprob: -9.251846313476562
    7. ' ' → logprob: -9.376846313476562
    8. '   ' → logprob: -9.876846313476562
    9. '  ' → logprob: -10.126846313476562
    10. 'def' → logprob: -10.751846313476562

Token 43: ' Identifier' (ID: 70050)
  Prédit: ' calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -1.1230361461639404
    2. ' for' → logprob: -2.1230361461639404
    3. ' Pour' → logprob: -2.4980361461639404
    4. ' Calcul' → logprob: -2.6230361461639404
    5. ' vérifier' → logprob: -2.7480361461639404
    6. ' Trou' → logprob: -3.3730361461639404
    7. ' utiliser' → logprob: -3.4980361461639404
    8. ' pour' → logprob: -3.8730361461639404
    9. ' import' → logprob: -3.8730361461639404
    10. ' Dé' → logprob: -3.9980361461639404

Token 44: ' les' (ID: 1341)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3316208124160767
    2. ' l' → logprob: -1.7066208124160767
    3. ' les' → logprob: -1.9566208124160767
    4. ' ' → logprob: -2.331620693206787
    5. ' deux' → logprob: -2.456620693206787
    6. 'les' → logprob: -2.831620693206787
    7. ' le' → logprob: -3.331620693206787
    8. ' la' → logprob: -3.456620693206787
    9. 'le' → logprob: -3.831620693206787
    10. 'l' → logprob: -3.831620693206787

Token 45: ' nombres' (ID: 76205)
  Prédit: ' deux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deux' → logprob: -0.3139178156852722
    2. 'de' → logprob: -2.188917875289917
    3. ' nombres' → logprob: -2.563917875289917
    4. ' ' → logprob: -3.938917875289917
    5. ' two' → logprob: -4.313917636871338
    6. ' pairs' → logprob: -4.313917636871338
    7. ' p' → logprob: -4.438917636871338
    8. ' plus' → logprob: -4.813917636871338
    9. ' espaces' → logprob: -6.188917636871338
    10. 'prem' → logprob: -6.751417636871338

Token 46: ' premiers' (ID: 59140)
  Prédit: ' premiers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' premiers' → logprob: -0.10239343345165253
    2. ' ' → logprob: -3.102393388748169
    3. 'prem' → logprob: -3.102393388748169
    4. ' p' → logprob: -5.977393627166748
    5. ' premi' → logprob: -6.977393627166748
    6. ' premier' → logprob: -7.227393627166748
    7. '_' → logprob: -7.352393627166748
    8. ' ' → logprob: -7.602393627166748
    9. ' primi' → logprob: -7.977393627166748
    10. ' premières' → logprob: -8.22739315032959

Token 47: ' entre' (ID: 3853)
  Prédit: ' suivants'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' suivants' → logprob: -1.3162778615951538
    2. ' à' → logprob: -1.4412778615951538
    3. ' ' → logprob: -2.4412779808044434
    4. ' p' → logprob: -2.5662779808044434
    5. 's' → logprob: -3.0662779808044434
    6. ',' → logprob: -3.3162779808044434
    7. ' plus' → logprob: -3.5662779808044434
    8. ' jusqu' → logprob: -3.5662779808044434
    9. ' entre' → logprob: -3.9412779808044434
    10. 'à' → logprob: -3.9412779808044434

Token 48: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.055052660405635834
    2. ' ' → logprob: -3.0550527572631836
    3. '1' → logprob: -5.305052757263184
    4. 'de' → logprob: -6.680052757263184
    5. 'l' → logprob: -9.930052757263184
    6. ' N' → logprob: -10.555052757263184
    7. 'le' → logprob: -10.680052757263184
    8. '0' → logprob: -10.930052757263184
    9. 'la' → logprob: -11.305052757263184
    10. ' deux' → logprob: -11.367552757263184

Token 49: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.038139376789331436
    2. '1' → logprob: -3.5381393432617188
    3. ' ' → logprob: -4.913139343261719
    4. 'de' → logprob: -7.163139343261719
    5. '0' → logprob: -9.538139343261719
    6. 'l' → logprob: -10.413139343261719
    7. '```' → logprob: -10.413139343261719
    8. 'le' → logprob: -11.225639343261719
    9. 'la' → logprob: -11.725639343261719
    10. ' N' → logprob: -11.850639343261719

Token 50: ' et' (ID: 859)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4426463544368744
    2. ' et' → logprob: -1.3176463842391968
    3. 'et' → logprob: -2.4426462650299072
    4. '2' → logprob: -7.067646503448486
    5. '  ' → logprob: -7.942646503448486
    6. ' and' → logprob: -8.067646026611328
    7. 's' → logprob: -8.442646026611328
    8. '0' → logprob: -8.692646026611328
    9. '   ' → logprob: -8.692646026611328
    10. 'e' → logprob: -8.817646026611328

Token 51: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.07295266538858414
    2. 'N' → logprob: -2.8229527473449707
    3. ' ' → logprob: -4.572952747344971
    4. '100' → logprob: -8.447952270507812
    5. ' ' → logprob: -9.322952270507812
    6. ' n' → logprob: -9.697952270507812
    7. '2' → logprob: -10.322952270507812
    8. 'n' → logprob: -10.447952270507812
    9. '  ' → logprob: -10.822952270507812
    10. ' \(' → logprob: -10.947952270507812

Token 52: ' en' (ID: 469)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.14793552458286285
    2. ',' → logprob: -2.397935628890991
    3. '#' → logprob: -4.022935390472412
    4. '3' → logprob: -4.147935390472412
    5. 's' → logprob: -5.522935390472412
    6. '```' → logprob: -6.022935390472412
    7. ' ' → logprob: -6.272935390472412
    8. '\' → logprob: -7.397935390472412
    9. '.
' → logprob: -7.397935390472412
    10. ',
' → logprob: -7.647935390472412

Token 53: ' utilisant' (ID: 92474)
  Prédit: ' utilisant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utilisant' → logprob: -0.00776243070140481
    2. 'util' → logprob: -5.132762432098389
    3. ' ' → logprob: -8.25776195526123
    4. 'é' → logprob: -8.50776195526123
    5. ' using' → logprob: -8.63276195526123
    6. '```' → logprob: -8.88276195526123
    7. ' les' → logprob: -9.25776195526123
    8. ''util' → logprob: -9.50776195526123
    9. ' utilis' → logprob: -9.50776195526123
    10. 's' → logprob: -9.63276195526123

Token 54: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.8901985883712769
    2. 'le' → logprob: -1.3901985883712769
    3. ' la' → logprob: -2.2651987075805664
    4. ' un' → logprob: -2.5151987075805664
    5. 'l' → logprob: -2.7651987075805664
    6. 'la' → logprob: -4.015198707580566
    7. ' l' → logprob: -4.015198707580566
    8. ' une' → logprob: -4.265198707580566
    9. 'une' → logprob: -4.765198707580566
    10. 's' → logprob: -4.765198707580566

Token 55: ' cr' (ID: 1769)
  Prédit: ' cr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cr' → logprob: -0.010045989416539669
    2. 's' → logprob: -5.635046005249023
    3. ' sieve' → logprob: -5.635046005249023
    4. ' S' → logprob: -6.385046005249023
    5. ' Cr' → logprob: -7.635046005249023
    6. 'cr' → logprob: -8.760046005249023
    7. ' ' → logprob: -9.010046005249023
    8. ' crib' → logprob: -9.135046005249023
    9. 'é' → logprob: -9.885046005249023
    10. ' s' → logprob: -10.260046005249023

Token 56: 'ible' (ID: 1430)
  Prédit: 'ible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ible' → logprob: -0.05085376277565956
    2. 'i' → logprob: -3.800853729248047
    3. 'iv' → logprob: -5.050853729248047
    4. 'é' → logprob: -5.425853729248047
    5. '```' → logprob: -6.050853729248047
    6. '#' → logprob: -6.175853729248047
    7. 'ib' → logprob: -6.300853729248047
    8. 'ibl' → logprob: -6.300853729248047
    9. 'ivé' → logprob: -6.550853729248047
    10. 'o' → logprob: -6.675853729248047

Token 57: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.40775495767593384
    2. ' d' → logprob: -1.157754898071289
    3. 's' → logprob: -4.782754898071289
    4. 'e' → logprob: -6.032754898071289
    5. 'S' → logprob: -6.157754898071289
    6. ' ' → logprob: -6.282754898071289
    7. ' de' → logprob: -6.782754898071289
    8. '```' → logprob: -7.032754898071289
    9. 'de' → logprob: -7.282754898071289
    10. ' d'S' → logprob: -7.407754898071289

Token 58: ''É' (ID: 87944)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.5859856605529785
    2. 'É' → logprob: -0.8359856605529785
    3. ''É' → logprob: -4.8359856605529785
    4. 'Er' → logprob: -6.9609856605529785
    5. '’É' → logprob: -8.21098518371582
    6. 'S' → logprob: -8.21098518371582
    7. 'È' → logprob: -8.96098518371582
    8. '```' → logprob: -9.33598518371582
    9. '埃' → logprob: -9.33598518371582
    10. 'Ég' → logprob: -10.21098518371582

Token 59: 'rat' (ID: 11990)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.20672713220119476
    2. 'rat' → logprob: -1.706727147102356
    3. '	r' → logprob: -6.831727027893066
    4. 'ra' → logprob: -6.831727027893066
    5. 'rast' → logprob: -7.081727027893066
    6. 'R' → logprob: -7.456727027893066
    7. 'ras' → logprob: -8.206727027893066
    8. 'rats' → logprob: -8.331727027893066
    9. '```' → logprob: -8.956727027893066
    10. 'rac' → logprob: -8.956727027893066

Token 60: 'ost' (ID: 564)
  Prédit: 'ost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -0.002319033956155181
    2. 'os' → logprob: -7.002318859100342
    3. ' ost' → logprob: -7.002318859100342
    4. 'o' → logprob: -8.8773193359375
    5. 'h' → logprob: -9.2523193359375
    6. 'oste' → logprob: -9.5023193359375
    7. 'oth' → logprob: -10.5023193359375
    8. 'osest' → logprob: -10.7523193359375
    9. '_host' → logprob: -11.1273193359375
    10. 'host' → logprob: -11.2523193359375

Token 61: 'h' (ID: 71)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.3047603666782379
    2. 'ène' → logprob: -1.9297603368759155
    3. 'enes' → logprob: -2.929760456085205
    4. 'ènes' → logprob: -3.179760456085205
    5. '`' → logprob: -5.054760456085205
    6. '#' → logprob: -5.679760456085205
    7. 'h' → logprob: -5.929760456085205
    8. 'e' → logprob: -5.929760456085205
    9. 'è' → logprob: -6.179760456085205
    10. 'èn' → logprob: -6.804760456085205

Token 62: 'ène' (ID: 22902)
  Prédit: 'ène'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ène' → logprob: -0.5811763405799866
    2. 'enes' → logprob: -1.2061762809753418
    3. 'ènes' → logprob: -2.956176280975342
    4. 'ene' → logprob: -3.206176280975342
    5. 'es' → logprob: -3.706176280975342
    6. '#' → logprob: -4.706176280975342
    7. '`' → logprob: -5.331176280975342
    8. 'e' → logprob: -5.456176280975342
    9. '%C' → logprob: -7.331176280975342
    10. 'en' → logprob: -7.581176280975342

Token 63: ' pour' (ID: 1930)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.07714688032865524
    2. 's' → logprob: -3.8271467685699463
    3. '.
' → logprob: -3.8271467685699463
    4. ',' → logprob: -4.452147006988525
    5. '#' → logprob: -4.952147006988525
    6. ',
' → logprob: -5.452147006988525
    7. ':' → logprob: -6.577147006988525
    8. 'e' → logprob: -6.952147006988525
    9. ' ' → logprob: -6.952147006988525
    10. '#
' → logprob: -7.327147006988525

Token 64: ' une' (ID: 2463)
  Prédit: ' trouver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' trouver' → logprob: -1.069502592086792
    2. ' mar' → logprob: -1.319502592086792
    3. ' déterminer' → logprob: -2.069502592086792
    4. ' génér' → logprob: -2.444502592086792
    5. ' optimiser' → logprob: -3.319502592086792
    6. ' identifier' → logprob: -4.069502830505371
    7. ' détect' → logprob: -4.194502830505371
    8. 'optim' → logprob: -4.319502830505371
    9. ' filtr' → logprob: -4.569502830505371
    10. ' ' → logprob: -5.069502830505371

Token 65: ' efficacité' (ID: 162480)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8435841798782349
    2. ' large' → logprob: -1.4685841798782349
    3. ' gamme' → logprob: -2.5935840606689453
    4. ' efficacité' → logprob: -3.5935840606689453
    5. 'e' → logprob: -4.218584060668945
    6. ' bonne' → logprob: -4.406084060668945
    7. ' effic' → logprob: -4.468584060668945
    8. ' range' → logprob: -4.656084060668945
    9. ' approche' → logprob: -4.656084060668945
    10. ' méthode' → logprob: -4.718584060668945

Token 66: ' optimale' (ID: 72604)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0954853817820549
    2. '```' → logprob: -3.8454854488372803
    3. ' ' → logprob: -4.220485210418701
    4. ',' → logprob: -4.595485210418701
    5. ' .' → logprob: -4.720485210418701
    6. ':' → logprob: -4.845485210418701
    7. '.
' → logprob: -5.220485210418701
    8. 's' → logprob: -5.345485210418701
    9. ' ,' → logprob: -5.720485210418701
    10. '#' → logprob: -5.970485210418701

Token 67: '.
' (ID: 558)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3135372996330261
    2. 'import' → logprob: -2.188537359237671
    3. '
' → logprob: -2.813537359237671
    4. '.' → logprob: -2.813537359237671
    5. '```' → logprob: -3.938537359237671
    6. 'def' → logprob: -5.313537120819092
    7. '#
' → logprob: -5.813537120819092
    8. ',' → logprob: -6.063537120819092
    9. ':' → logprob: -6.938537120819092
    10. ',
' → logprob: -7.063537120819092

Token 68: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.22399312257766724
    2. '```' → logprob: -2.3489930629730225
    3. '\' → logprob: -2.9739930629730225
    4. 'import' → logprob: -4.223993301391602
    5. '#
' → logprob: -4.473993301391602
    6. 'def' → logprob: -4.598993301391602
    7. '
' → logprob: -6.098993301391602
    8. '``' → logprob: -6.348993301391602
    9. ' ' → logprob: -6.473993301391602
    10. '3' → logprob: -6.598993301391602

Token 69: ' ' (ID: 220)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.08669409155845642
    2. '```' → logprob: -3.0866940021514893
    3. 'def' → logprob: -4.336694240570068
    4. ' ' → logprob: -5.211694240570068
    5. 'import' → logprob: -5.336694240570068
    6. 'd' → logprob: -5.336694240570068
    7. ' #' → logprob: -5.711694240570068
    8. ' 
' → logprob: -6.711694240570068
    9. 'n' → logprob: -6.836694240570068
    10. '\' → logprob: -7.086694240570068

Token 70: '3' (ID: 18)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.04037952423095703
    2. 'def' → logprob: -4.165379524230957
    3. '3' → logprob: -4.290379524230957
    4. 'import' → logprob: -5.040379524230957
    5. '```' → logprob: -6.290379524230957
    6. 's' → logprob: -7.540379524230957
    7. ' #' → logprob: -7.915379524230957
    8. 'n' → logprob: -8.415379524230957
    9. ' ' → logprob: -8.415379524230957
    10. 'from' → logprob: -8.540379524230957

Token 71: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.19305428862571716
    2. '#' → logprob: -1.9430543184280396
    3. ' #' → logprob: -3.81805419921875
    4. '4' → logprob: -6.06805419921875
    5. ' ' → logprob: -6.56805419921875
    6. ' .' → logprob: -6.94305419921875
    7. '```' → logprob: -6.94305419921875
    8. ' Identifier' → logprob: -7.06805419921875
    9. ' ' → logprob: -8.00555419921875
    10. ' identifier' → logprob: -8.38055419921875

Token 72: ' Pour' (ID: 13931)
  Prédit: ' Trou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Trou' → logprob: -0.12972240149974823
    2. 'Trou' → logprob: -3.3797223567962646
    3. ' Pour' → logprob: -3.8797223567962646
    4. ' Re' → logprob: -3.8797223567962646
    5. 'Pour' → logprob: -4.254722595214844
    6. ' Vér' → logprob: -4.879722595214844
    7. 'for' → logprob: -5.629722595214844
    8. ' Identifier' → logprob: -6.129722595214844
    9. ' Dé' → logprob: -6.254722595214844
    10. ' for' → logprob: -6.379722595214844

Token 73: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.02300238236784935
    2. ' ' → logprob: -4.2730021476745605
    3. ' trouver' → logprob: -5.7730021476745605
    4. ' each' → logprob: -6.1480021476745605
    5. ' i' → logprob: -6.2730021476745605
    6. 'cha' → logprob: -8.523002624511719
    7. '  ' → logprob: -8.648002624511719
    8. '   ' → logprob: -8.898002624511719
    9. ' identifier' → logprob: -8.898002624511719
    10. ' chacune' → logprob: -9.023002624511719

Token 74: ' i' (ID: 575)
  Prédit: ' nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.3357687294483185
    2. 'nombre' → logprob: -2.085768699645996
    3. ' N' → logprob: -2.335768699645996
    4. 'N' → logprob: -4.710768699645996
    5. ' pair' → logprob: -4.710768699645996
    6. ' nombres' → logprob: -4.710768699645996
    7. ' ' → logprob: -4.960768699645996
    8. ' paire' → logprob: -5.460768699645996
    9. 'pair' → logprob: -5.585768699645996
    10. 'prime' → logprob: -5.710768699645996

Token 75: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.45503339171409607
    2. 'n' → logprob: -1.8300334215164185
    3. ' in' → logprob: -3.080033302307129
    4. ' dans' → logprob: -3.205033302307129
    5. ' de' → logprob: -3.205033302307129
    6. ' n' → logprob: -3.955033302307129
    7. ' entre' → logprob: -4.580033302307129
    8. ' compris' → logprob: -5.080033302307129
    9. ' ' → logprob: -5.205033302307129
    10. 'de' → logprob: -5.205033302307129

Token 76: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5428220629692078
    2. '1' → logprob: -1.1678221225738525
    3. '2' → logprob: -2.2928221225738525
    4. ' range' → logprob: -5.167821884155273
    5. 'range' → logprob: -7.042821884155273
    6. '0' → logprob: -8.667821884155273
    7. ' ' → logprob: -10.042821884155273
    8. 'l' → logprob: -10.917821884155273
    9. ' la' → logprob: -11.292821884155273
    10. ' l' → logprob: -11.980321884155273

Token 77: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.034018632024526596
    2. ' ' → logprob: -4.034018516540527
    3. '1' → logprob: -4.159018516540527
    4. 'range' → logprob: -10.034018516540527
    5. ' range' → logprob: -10.409018516540527
    6. '0' → logprob: -11.159018516540527
    7. 'de' → logprob: -11.284018516540527
    8. '```' → logprob: -12.784018516540527
    9. '3' → logprob: -12.909018516540527
    10. '   ' → logprob: -12.909018516540527

Token 78: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.19243000447750092
    2. ' ' → logprob: -1.817430019378662
    3. 'à' → logprob: -4.817430019378662
    4. ' a' → logprob: -5.692430019378662
    5. ' to' → logprob: -8.567429542541504
    6. ',' → logprob: -8.692429542541504
    7. ' jusqu' → logprob: -9.067429542541504
    8. '  ' → logprob: -9.192429542541504
    9. ' ,' → logprob: -9.192429542541504
    10. '   ' → logprob: -9.317429542541504

Token 79: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.106599822640419
    2. 'N' → logprob: -2.356599807739258
    3. ' ' → logprob: -5.106599807739258
    4. 'n' → logprob: -8.981599807739258
    5. ' n' → logprob: -9.106599807739258
    6. ' i' → logprob: -10.481599807739258
    7. ' ' → logprob: -11.481599807739258
    8. 'int' → logprob: -11.731599807739258
    9. 'i' → logprob: -11.981599807739258
    10. '	N' → logprob: -12.231599807739258

Token 80: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04453009366989136
    2. ' :' → logprob: -3.544530153274536
    3. ',' → logprob: -4.669529914855957
    4. '+' → logprob: -5.544529914855957
    5. ' ' → logprob: -7.669529914855957
    6. ' ,' → logprob: -8.169529914855957
    7. ':
' → logprob: -8.169529914855957
    8. '+:' → logprob: -9.294529914855957
    9. ' :
' → logprob: -10.419529914855957
    10. '   ' → logprob: -10.919529914855957

Token 81: ' on' (ID: 402)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3040663003921509
    2. ' vérifier' → logprob: -1.6790663003921509
    3. ' rechercher' → logprob: -3.8040661811828613
    4. 'v' → logprob: -4.679066181182861
    5. 'chercher' → logprob: -4.679066181182861
    6. ' chercher' → logprob: -4.804066181182861
    7. ' ```' → logprob: -5.179066181182861
    8. ' if' → logprob: -5.679066181182861
    9. '   ' → logprob: -5.929066181182861
    10. '    ' → logprob: -5.929066181182861

Token 82: ' forme' (ID: 27450)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7174184918403625
    2. 'cherche' → logprob: -1.8424184322357178
    3. ' vér' → logprob: -2.0924184322357178
    4. ' cherche' → logprob: -2.8424184322357178
    5. ' recherche' → logprob: -3.3424184322357178
    6. 'v' → logprob: -3.3424184322357178
    7. ' vérifier' → logprob: -3.3424184322357178
    8. ' check' → logprob: -3.9674184322357178
    9. 'chercher' → logprob: -4.717418670654297
    10. ' teste' → logprob: -4.967418670654297

Token 83: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22057434916496277
    2. ' un' → logprob: -1.8455743789672852
    3. ' une' → logprob: -4.595574378967285
    4. ' la' → logprob: -4.845574378967285
    5. ' deux' → logprob: -4.845574378967285
    6. ' des' → logprob: -5.345574378967285
    7. 's' → logprob: -6.345574378967285
    8. ' le' → logprob: -6.720574378967285
    9. ' pairs' → logprob: -6.845574378967285
    10. 'une' → logprob: -7.095574378967285

Token 84: ' paire' (ID: 148856)
  Prédit: ' paire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' paire' → logprob: -0.2778472900390625
    2. ' ' → logprob: -1.5278472900390625
    3. ' combinaison' → logprob: -4.4028472900390625
    4. ' pair' → logprob: -4.9028472900390625
    5. 'pair' → logprob: -6.6528472900390625
    6. 's' → logprob: -7.2778472900390625
    7. ' couple' → logprob: -7.2778472900390625
    8. ' ' → logprob: -8.465347290039062
    9. ' espace' → logprob: -8.590347290039062
    10. '  ' → logprob: -8.652847290039062

Token 85: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4111219346523285
    2. '(' → logprob: -1.1611219644546509
    3. ' ' → logprob: -3.9111218452453613
    4. 's' → logprob: -6.911121845245361
    5. '(i' → logprob: -7.161121845245361
    6. ' ,' → logprob: -7.661121845245361
    7. ',' → logprob: -7.661121845245361
    8. '(s' → logprob: -8.53612232208252
    9. ' de' → logprob: -8.78612232208252
    10. '(p' → logprob: -9.16112232208252

Token 86: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.41301244497299194
    2. ' i' → logprob: -1.1630125045776367
    3. ' (' → logprob: -4.413012504577637
    4. ',' → logprob: -4.913012504577637
    5. ')' → logprob: -6.038012504577637
    6. ' ,' → logprob: -6.413012504577637
    7. '(i' → logprob: -6.788012504577637
    8. ' ' → logprob: -7.663012504577637
    9. ',i' → logprob: -8.288012504577637
    10. ' )' → logprob: -8.913012504577637

Token 87: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005818232893943787
    2. ' ,' → logprob: -5.2558183670043945
    3. ' ' → logprob: -8.380818367004395
    4. '+' → logprob: -8.880818367004395
    5. ')' → logprob: -9.255818367004395
    6. ',)' → logprob: -10.255818367004395
    7. '*' → logprob: -11.380818367004395
    8. '   ' → logprob: -11.505818367004395
    9. ' +' → logprob: -11.880818367004395
    10. '-' → logprob: -11.880818367004395

Token 88: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.26568520069122314
    2. 'N' → logprob: -1.5156852006912231
    3. ' j' → logprob: -5.140685081481934
    4. ' i' → logprob: -5.890685081481934
    5. ' ' → logprob: -6.265685081481934
    6. 'j' → logprob: -6.390685081481934
    7. 'i' → logprob: -7.515685081481934
    8. '  ' → logprob: -8.765685081481934
    9. ' n' → logprob: -8.765685081481934
    10. 'n' → logprob: -9.015685081481934

Token 89: '-i' (ID: 18499)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1263246089220047
    2. '-' → logprob: -2.2513246536254883
    3. '-i' → logprob: -4.376324653625488
    4. ')' → logprob: -7.501324653625488
    5. ' )' → logprob: -9.251324653625488
    6. ' ' → logprob: -9.251324653625488
    7. '−' → logprob: -10.376324653625488
    8. ',' → logprob: -10.751324653625488
    9. ' −' → logprob: -11.626324653625488
    10. ' ' → logprob: -12.126324653625488

Token 90: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015439033741131425
    2. ' )' → logprob: -6.501543998718262
    3. '),' → logprob: -11.376543998718262
    4. ' ' → logprob: -11.376543998718262
    5. ').' → logprob: -11.876543998718262
    6. '))' → logprob: -13.001543998718262
    7. '+' → logprob: -13.751543998718262
    8. '#' → logprob: -14.126543998718262
    9. ' ' → logprob: -14.126543998718262
    10. ')#' → logprob: -14.126543998718262

Token 91: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010616290383040905
    2. ' ' → logprob: -6.87606143951416
    3. ')' → logprob: -11.00106143951416
    4. '2' → logprob: -11.50106143951416
    5. '```' → logprob: -14.62606143951416
    6. ' )' → logprob: -14.87606143951416
    7. '0' → logprob: -15.12606143951416
    8. '  ' → logprob: -15.75106143951416
    9. '3' → logprob: -15.93856143951416
    10. '4' → logprob: -16.501062393188477

Token 92: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0126524418592453
    2. ' )' → logprob: -4.387652397155762
    3. ' ' → logprob: -9.512652397155762
    4. ').' → logprob: -10.762652397155762
    5. '),' → logprob: -11.387652397155762
    6. '):' → logprob: -11.637652397155762
    7. ' ' → logprob: -12.387652397155762
    8. ')`' → logprob: -12.637652397155762
    9. '))' → logprob: -12.887652397155762
    10. '#' → logprob: -13.387652397155762

Token 93: '#' (ID: 2)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8296875953674316
    2. '
' → logprob: -1.5796875953674316
    3. ' ' → logprob: -2.8296875953674316
    4. '#' → logprob: -2.8296875953674316
    5. '\' → logprob: -2.8296875953674316
    6. ':' → logprob: -3.0796875953674316
    7. 'def' → logprob: -3.2046875953674316
    8. ' 
' → logprob: -4.079687595367432
    9. ' ```' → logprob: -4.579687595367432
    10. ':
' → logprob: -5.204687595367432

Token 94: ' ' (ID: 220)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9924821257591248
    2. '#' → logprob: -1.2424821853637695
    3. '
' → logprob: -2.6174821853637695
    4. 'for' → logprob: -2.7424821853637695
    5. ' ' → logprob: -3.1174821853637695
    6. '\' → logprob: -3.3674821853637695
    7. ' ```' → logprob: -3.3674821853637695
    8. ' 
' → logprob: -3.9924821853637695
    9. ' for' → logprob: -4.2424821853637695
    10. 'def' → logprob: -4.6174821853637695

Token 95: '4' (ID: 19)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7529019117355347
    2. '#' → logprob: -0.8779019117355347
    3. '4' → logprob: -3.127902030944824
    4. 'def' → logprob: -3.877902030944824
    5. '```' → logprob: -4.252902030944824
    6. ' for' → logprob: -4.752902030944824
    7. ' ' → logprob: -4.877902030944824
    8. 'if' → logprob: -5.752902030944824
    9. '   ' → logprob: -5.752902030944824
    10. ':' → logprob: -6.002902030944824

Token 96: '.' (ID: 13)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7077847123146057
    2. ' #' → logprob: -1.707784652709961
    3. ' ' → logprob: -2.207784652709961
    4. '.' → logprob: -2.207784652709961
    5. 'for' → logprob: -3.832784652709961
    6. ' for' → logprob: -3.832784652709961
    7. '   ' → logprob: -3.832784652709961
    8. ' if' → logprob: -5.207784652709961
    9. ' ' → logprob: -5.582784652709961
    10. ':' → logprob: -5.957784652709961

Token 97: ' On' (ID: 2160)
  Prédit: ' Vér'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Vér' → logprob: -0.8708634972572327
    2. 'V' → logprob: -1.245863437652588
    3. ' vérifier' → logprob: -2.620863437652588
    4. 'for' → logprob: -2.745863437652588
    5. ' for' → logprob: -2.870863437652588
    6. '#' → logprob: -3.745863437652588
    7. ' V' → logprob: -3.870863437652588
    8. 'v' → logprob: -3.995863437652588
    9. 'Verifier' → logprob: -4.620863437652588
    10. ' ' → logprob: -5.120863437652588

Token 98: ' compte' (ID: 19657)
  Prédit: ' vér'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' vér' → logprob: -0.5948892831802368
    2. 'v' → logprob: -0.8448892831802368
    3. 'cherche' → logprob: -4.969889163970947
    4. 'ver' → logprob: -5.969889163970947
    5. ' teste' → logprob: -5.969889163970947
    6. ' vérifier' → logprob: -5.969889163970947
    7. ' ' → logprob: -7.344889163970947
    8. ' cherche' → logprob: -7.469889163970947
    9. ' v' → logprob: -7.469889163970947
    10. ' recherche' → logprob: -8.469889640808105

Token 99: ' combien' (ID: 106648)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8415565490722656
    2. ' les' → logprob: -2.2165565490722656
    3. '(' → logprob: -2.3415565490722656
    4. 's' → logprob: -2.9665565490722656
    5. 'les' → logprob: -3.2165565490722656
    6. ' (' → logprob: -3.2165565490722656
    7. ' le' → logprob: -3.5915565490722656
    8. ' =' → logprob: -3.5915565490722656
    9. '  ' → logprob: -4.091556549072266
    10. ')' → logprob: -4.091556549072266

Token 100: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.12815605103969574
    2. ' d' → logprob: -2.5031559467315674
    3. ' ' → logprob: -4.3781561851501465
    4. 's' → logprob: -4.6281561851501465
    5. 'de' → logprob: -5.7531561851501465
    6. '  ' → logprob: -6.2531561851501465
    7. '#' → logprob: -6.6281561851501465
    8. ' les' → logprob: -6.6281561851501465
    9. 'd' → logprob: -6.7531561851501465
    10. 'les' → logprob: -6.8781561851501465

Token 101: ' ces' (ID: 10532)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.8362197279930115
    2. ' pairs' → logprob: -1.5862197875976562
    3. 'i' → logprob: -1.9612197875976562
    4. ' ces' → logprob: -2.3362197875976562
    5. ' ' → logprob: -3.0862197875976562
    6. ' p' → logprob: -3.5862197875976562
    7. ' nombres' → logprob: -4.086219787597656
    8. 'ces' → logprob: -4.961219787597656
    9. 'pairs' → logprob: -5.586219787597656
    10. ' fois' → logprob: -5.711219787597656

Token 102: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.6317769289016724
    2. ' pairs' → logprob: -1.5067769289016724
    3. ' ' → logprob: -2.006776809692383
    4. 'p' → logprob: -2.881776809692383
    5. ' paire' → logprob: -4.131776809692383
    6. ' i' → logprob: -4.756776809692383
    7. 'pairs' → logprob: -5.506776809692383
    8. ' nombres' → logprob: -5.631776809692383
    9. 'pa' → logprob: -5.881776809692383
    10. ' couples' → logprob: -5.881776809692383

Token 103: 'aires' (ID: 8507)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.18592803180217743
    2. 'aires' → logprob: -2.0609281063079834
    3. 'r' → logprob: -4.310927867889404
    4. 'air' → logprob: -4.685927867889404
    5. 'ai' → logprob: -5.560927867889404
    6. 'airs' → logprob: -5.560927867889404
    7. '```' → logprob: -6.060927867889404
    8. 'aire' → logprob: -6.435927867889404
    9. '``' → logprob: -6.810927867889404
    10. '`' → logprob: -7.248427867889404

Token 104: ' sont' (ID: 5242)
  Prédit: ' sont'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sont' → logprob: -0.4894551932811737
    2. ' ' → logprob: -1.614455223083496
    3. 's' → logprob: -1.739455223083496
    4. ' (' → logprob: -5.864455223083496
    5. ' qui' → logprob: -6.239455223083496
    6. ' ' → logprob: -6.864455223083496
    7. '  ' → logprob: -7.239455223083496
    8. ' de' → logprob: -7.364455223083496
    9. ' s' → logprob: -7.614455223083496
    10. ' est' → logprob: -7.739455223083496

Token 105: ' compos' (ID: 14635)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.03278960660099983
    2. 'des' → logprob: -3.907789707183838
    3. 'prem' → logprob: -5.407789707183838
    4. ' ' → logprob: -5.907789707183838
    5. ' premiers' → logprob: -6.782789707183838
    6. ' premi' → logprob: -7.032789707183838
    7. ' premières' → logprob: -7.282789707183838
    8. ' primes' → logprob: -7.907789707183838
    9. ' constitu' → logprob: -8.40778923034668
    10. ' prime' → logprob: -8.40778923034668

Token 106: 'ées' (ID: 5161)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5952973365783691
    2. 'tes' → logprob: -1.0952973365783691
    3. 's' → logprob: -2.345297336578369
    4. 'te' → logprob: -5.345297336578369
    5. 'ées' → logprob: -5.595297336578369
    6. 'ts' → logprob: -5.845297336578369
    7. 'té' → logprob: -5.845297336578369
    8. 'é' → logprob: -7.220297336578369
    9. 'ètes' → logprob: -7.220297336578369
    10. 'és' → logprob: -7.345297336578369

Token 107: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.5195190906524658
    2. ' de' → logprob: -1.0195190906524658
    3. ' ' → logprob: -3.394519090652466
    4. 'd' → logprob: -5.644518852233887
    5. 'de' → logprob: -5.894518852233887
    6. ' uniquement' → logprob: -6.644518852233887
    7. '  ' → logprob: -6.769518852233887
    8. 's' → logprob: -7.144518852233887
    9. ' of' → logprob: -8.894518852233887
    10. ' exclusivement' → logprob: -9.019518852233887

Token 108: ' deux' (ID: 10301)
  Prédit: ' deux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deux' → logprob: -0.08921850472688675
    2. 'de' → logprob: -2.5892186164855957
    3. ' ' → logprob: -4.964218616485596
    4. '2' → logprob: -6.589218616485596
    5. ' two' → logprob: -7.089218616485596
    6. ' des' → logprob: -7.964218616485596
    7. ' de' → logprob: -8.339218139648438
    8. '```' → logprob: -9.589218139648438
    9. 'ux' → logprob: -9.964218139648438
    10. 's' → logprob: -9.964218139648438

Token 109: ' nombres' (ID: 76205)
  Prédit: ' nombres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.8433952927589417
    2. ' espaces' → logprob: -0.9683952927589417
    3. ' premiers' → logprob: -2.218395233154297
    4. 'prem' → logprob: -3.093395233154297
    5. ' ' → logprob: -3.968395233154297
    6. 'pr' → logprob: -5.718395233154297
    7. '  ' → logprob: -6.218395233154297
    8. 'n' → logprob: -6.218395233154297
    9. 'esp' → logprob: -6.843395233154297
    10. ' espace' → logprob: -7.093395233154297

Token 110: ' premiers' (ID: 59140)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.08752502501010895
    2. ' premiers' → logprob: -2.7125251293182373
    3. ' ' → logprob: -4.962524890899658
    4. ' ' → logprob: -5.712524890899658
    5. 's' → logprob: -6.712524890899658
    6. '_' → logprob: -7.212524890899658
    7. ' p' → logprob: -7.462524890899658
    8. '   ' → logprob: -7.712524890899658
    9. '```' → logprob: -7.712524890899658
    10. '  
' → logprob: -8.087525367736816

Token 111: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5455044507980347
    2. '
' → logprob: -2.420504570007324
    3. 's' → logprob: -2.795504570007324
    4. '```' → logprob: -2.920504570007324
    5. 'def' → logprob: -2.920504570007324
    6. '#' → logprob: -3.045504570007324
    7. ',' → logprob: -4.170504570007324
    8. '.
' → logprob: -4.170504570007324
    9. 'import' → logprob: -4.295504570007324
    10. ':' → logprob: -4.420504570007324

Token 112: '#' (ID: 2)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5322267413139343
    2. 'def' → logprob: -1.407226800918579
    3. '
' → logprob: -2.282226800918579
    4. '#' → logprob: -4.0322265625
    5. '\' → logprob: -4.4072265625
    6. 'n' → logprob: -4.5322265625
    7. '\n' → logprob: -5.2822265625
    8. 'import' → logprob: -5.2822265625
    9. '

' → logprob: -5.6572265625
    10. ':' → logprob: -6.0322265625

Token 113: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18010061979293823
    2. '```' → logprob: -2.555100679397583
    3. 'def' → logprob: -2.930100679397583
    4. 'n' → logprob: -4.680100440979004
    5. '

' → logprob: -5.305100440979004
    6. 'import' → logprob: -5.305100440979004
    7. '#' → logprob: -5.305100440979004
    8. '\' → logprob: -6.180100440979004
    9. '\n' → logprob: -6.430100440979004
    10. '' → logprob: -6.555100440979004

Token 114: '5' (ID: 20)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.04794023185968399
    2. 'def' → logprob: -3.297940254211426
    3. '#' → logprob: -5.297940254211426
    4. 'n' → logprob: -6.172940254211426
    5. '```' → logprob: -6.547940254211426
    6. 'i' → logprob: -7.797940254211426
    7. '\' → logprob: -8.172940254211426
    8. 'import' → logprob: -8.547940254211426
    9. 'p' → logprob: -8.672940254211426
    10. 'de' → logprob: -9.422940254211426

Token 115: '.' (ID: 13)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2587146461009979
    2. ' #' → logprob: -1.5087146759033203
    3. ' def' → logprob: -6.38371467590332
    4. 'def' → logprob: -6.75871467590332
    5. ' On' → logprob: -7.38371467590332
    6. ' ' → logprob: -7.38371467590332
    7. ' Le' → logprob: -7.63371467590332
    8. ' ' → logprob: -8.00871467590332
    9. 'On' → logprob: -8.88371467590332
    10. '```' → logprob: -8.88371467590332

Token 116: ' On' (ID: 2160)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.26954999566078186
    2. 'Afficher' → logprob: -2.394550085067749
    3. ' Aff' → logprob: -3.019550085067749
    4. ' #' → logprob: -3.394550085067749
    5. ' print' → logprob: -3.519550085067749
    6. 'print' → logprob: -4.14454984664917
    7. ' afficher' → logprob: -6.01954984664917
    8. 'Aff' → logprob: -6.14454984664917
    9. ' impr' → logprob: -6.64454984664917
    10. 'aff' → logprob: -6.64454984664917

Token 117: ' affiche' (ID: 127479)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.6259298324584961
    2. 'print' → logprob: -2.125929832458496
    3. 'continue' → logprob: -2.625929832458496
    4. ' continue' → logprob: -3.000929832458496
    5. '#' → logprob: -3.375929832458496
    6. ' compte' → logprob: -3.625929832458496
    7. ' print' → logprob: -3.750929832458496
    8. ' #' → logprob: -3.750929832458496
    9. 'return' → logprob: -4.250929832458496
    10. ' comp' → logprob: -4.500929832458496

Token 118: ' le' (ID: 505)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.34523341059684753
    2. ' le' → logprob: -1.84523344039917
    3. '(len' → logprob: -2.72023344039917
    4. ' la' → logprob: -3.09523344039917
    5. ' ' → logprob: -4.72023344039917
    6. ' len' → logprob: -5.97023344039917
    7. '("' → logprob: -6.34523344039917
    8. ' (' → logprob: -6.47023344039917
    9. '()' → logprob: -6.72023344039917
    10. '(count' → logprob: -7.09523344039917

Token 119: ' résultat' (ID: 62556)
  Prédit: ' nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.1706925928592682
    2. ' résultat' → logprob: -1.9206925630569458
    3. 's' → logprob: -5.420692443847656
    4. 'nombre' → logprob: -5.545692443847656
    5. ' resultat' → logprob: -7.545692443847656
    6. ' code' → logprob: -7.670692443847656
    7. 'rés' → logprob: -7.670692443847656
    8. ' s' → logprob: -9.170692443847656
    9. ' résultats' → logprob: -9.295692443847656
    10. 'r' → logprob: -9.670692443847656

Token 120: ' pour' (ID: 1930)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.508766233921051
    2. 'def' → logprob: -1.7587661743164062
    3. '```' → logprob: -2.0087661743164062
    4. 'import' → logprob: -3.0087661743164062
    5. '

' → logprob: -3.8837661743164062
    6. 'n' → logprob: -4.508766174316406
    7. '#' → logprob: -5.133766174316406
    8. '\n' → logprob: -7.008766174316406
    9. '' → logprob: -7.383766174316406
    10. '
' → logprob: -7.508766174316406

Token 121: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.009189045056700706
    2. ' each' → logprob: -4.884189128875732
    3. 'each' → logprob: -7.384189128875732
    4. ' chacune' → logprob: -7.384189128875732
    5. 'Chaque' → logprob: -8.634188652038574
    6. ' chacun' → logprob: -10.009188652038574
    7. ' Chaque' → logprob: -10.634188652038574
    8. 'cha' → logprob: -11.259188652038574
    9. '```' → logprob: -11.259188652038574
    10. ' cada' → logprob: -11.509188652038574

Token 122: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.5967720150947571
    2. 'N' → logprob: -1.0967719554901123
    3. ' test' → logprob: -3.4717719554901123
    4. 'entrée' → logprob: -3.7217719554901123
    5. ' input' → logprob: -4.096772193908691
    6. ' ' → logprob: -4.096772193908691
    7. ' cas' → logprob: -4.346772193908691
    8. ' entrée' → logprob: -5.971772193908691
    9. 'val' → logprob: -6.096772193908691
    10. 'n' → logprob: -6.471772193908691

Token 123: '.

' (ID: 364)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6614412069320679
    2. '
' → logprob: -0.9114412069320679
    3. '```' → logprob: -2.7864413261413574
    4. 'import' → logprob: -4.536441326141357
    5. 'n' → logprob: -6.036441326141357
    6. '#' → logprob: -6.411441326141357
    7. '

' → logprob: -6.536441326141357
    8. ':' → logprob: -6.911441326141357
    9. '\' → logprob: -7.036441326141357
    10. '\n' → logprob: -7.536441326141357

Token 124: 'import' (ID: 561)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4869420528411865
    2. '```' → logprob: -1.2369420528411865
    3. 'n' → logprob: -3.3619420528411865
    4. 'import' → logprob: -3.4869420528411865
    5. 'd' → logprob: -3.9869420528411865
    6. '#' → logprob: -4.986942291259766
    7. '
' → logprob: -6.486942291259766
    8. '\' → logprob: -7.111942291259766
    9. 'from' → logprob: -7.236942291259766
    10. '``' → logprob: -7.486942291259766

Token 125: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.019305303692817688
    2. ' math' → logprob: -4.019305229187012
    3. 'sys' → logprob: -6.769305229187012
    4. 'math' → logprob: -12.144305229187012
    5. '	sys' → logprob: -14.394305229187012
    6. '=sys' → logprob: -15.394305229187012
    7. ' ' → logprob: -16.394306182861328
    8. '(sys' → logprob: -16.519306182861328
    9. '```' → logprob: -17.144306182861328
    10. ' itertools' → logprob: -17.644306182861328

Token 126: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8625043630599976
    2. 'def' → logprob: -0.9875043630599976
    3. '

' → logprob: -2.112504482269287
    4. 'import' → logprob: -2.487504482269287
    5. '
' → logprob: -7.487504482269287
    6. '


' → logprob: -8.612504005432129
    7. '```' → logprob: -8.987504005432129
    8. 'from' → logprob: -9.362504005432129
    9. '#' → logprob: -9.487504005432129
    10. '
 
' → logprob: -10.112504005432129

Token 127: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004179429262876511
    2. 'import' → logprob: -5.87917947769165
    3. 'MAX' → logprob: -7.50417947769165
    4. 'for' → logprob: -8.254179000854492
    5. 'pr' → logprob: -8.379179000854492
    6. 'max' → logprob: -8.629179000854492
    7. '```' → logprob: -9.754179000854492
    8. 'from' → logprob: -9.754179000854492
    9. 'prime' → logprob: -11.129179000854492
    10. '#' → logprob: -11.879179000854492

Token 128: ' sieve' (ID: 142781)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.22943229973316193
    2. ' sieve' → logprob: -2.6044323444366455
    3. ' pair' → logprob: -3.2294323444366455
    4. ' compter' → logprob: -3.8544323444366455
    5. ' prime' → logprob: -3.9794323444366455
    6. 'count' → logprob: -4.354432106018066
    7. ' main' → logprob: -4.354432106018066
    8. ' is' → logprob: -4.354432106018066
    9. ' paire' → logprob: -5.729432106018066
    10. ' primes' → logprob: -5.854432106018066

Token 129: '(max' (ID: 17178)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.9238158464431763
    2. '(' → logprob: -1.2988158464431763
    3. '_' → logprob: -1.5488158464431763
    4. '_s' → logprob: -2.7988157272338867
    5. '_of' → logprob: -3.7988157272338867
    6. ' (' → logprob: -3.9238157272338867
    7. '(limit' → logprob: -5.673815727233887
    8. '(max' → logprob: -5.923815727233887
    9. '_(' → logprob: -5.923815727233887
    10. '_array' → logprob: -6.798815727233887

Token 130: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -1.0720806121826172
    2. '_' → logprob: -1.4470806121826172
    3. '_num' → logprob: -1.4470806121826172
    4. '_number' → logprob: -2.197080612182617
    5. '_val' → logprob: -3.822080612182617
    6. '_limit' → logprob: -4.072080612182617
    7. '_prime' → logprob: -4.197080612182617
    8. '):' → logprob: -4.447080612182617
    9. '_value' → logprob: -5.697080612182617
    10. '_size' → logprob: -5.822080612182617

Token 131: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005048964521847665
    2. ')' → logprob: -8.000504493713379
    3. '):
' → logprob: -8.875504493713379
    4. ' ):' → logprob: -11.375504493713379
    5. '_' → logprob: -11.500504493713379
    6. ':' → logprob: -12.750504493713379
    7. '):
' → logprob: -13.625504493713379
    8. '=' → logprob: -13.625504493713379
    9. 'e' → logprob: -14.750504493713379
    10. '(n' → logprob: -14.750504493713379

Token 132: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0031368397176265717
    2. ' sieve' → logprob: -6.12813663482666
    3. ' primes' → logprob: -7.25313663482666
    4. ' is' → logprob: -10.12813663482666
    5. ' prime' → logprob: -10.25313663482666
    6. '    ' → logprob: -10.37813663482666
    7. 'prime' → logprob: -10.50313663482666
    8. 'pr' → logprob: -10.62813663482666
    9. ' ' → logprob: -11.00313663482666
    10. '	pr' → logprob: -11.37813663482666

Token 133: ' """
' (ID: 7037)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prime' → logprob: -1.0557410717010498
    2. 'is' → logprob: -1.4307410717010498
    3. '   ' → logprob: -1.5557410717010498
    4. 'pr' → logprob: -2.43074107170105
    5. ' sieve' → logprob: -2.80574107170105
    6. ' is' → logprob: -3.55574107170105
    7. ' primes' → logprob: -3.93074107170105
    8. ' prime' → logprob: -5.680741310119629
    9. 's' → logprob: -6.555741310119629
    10. 'n' → logprob: -8.680741310119629

Token 134: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0047824266366660595
    2. 'n' → logprob: -6.504782199859619
    3. ' sieve' → logprob: -6.879782199859619
    4. 'prime' → logprob: -7.629782199859619
    5. ' n' → logprob: -7.754782199859619
    6. 'pr' → logprob: -7.754782199859619
    7. ' is' → logprob: -8.254782676696777
    8. ' primes' → logprob: -8.504782676696777
    9. 'is' → logprob: -8.879782676696777
    10. ' size' → logprob: -9.754782676696777

Token 135: ' Cr' (ID: 5790)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14006687700748444
    2. ' sieve' → logprob: -2.7650668621063232
    3. ' is' → logprob: -3.6400668621063232
    4. ' primes' → logprob: -4.640067100524902
    5. 'pr' → logprob: -4.765067100524902
    6. 'prime' → logprob: -5.265067100524902
    7. ' size' → logprob: -6.015067100524902
    8. 'n' → logprob: -6.015067100524902
    9. ' n' → logprob: -6.140067100524902
    10. 'is' → logprob: -6.265067100524902

Token 136: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.02322404272854328
    2. 'é' → logprob: -4.648223876953125
    3. 'éer' → logprob: -4.898223876953125
    4. 'e' → logprob: -5.148223876953125
    5. 'ee' → logprob: -9.898223876953125
    6. 'ea' → logprob: -10.398223876953125
    7. 'éal' → logprob: -11.023223876953125
    8. 'ées' → logprob: -12.773223876953125
    9. 'è' → logprob: -13.898223876953125
    10. 'eef' → logprob: -14.148223876953125

Token 137: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.055982135236263275
    2. ' une' → logprob: -3.3059821128845215
    3. 'un' → logprob: -4.1809821128845215
    4. 'une' → logprob: -6.3059821128845215
    5. '   ' → logprob: -7.5559821128845215
    6. '_un' → logprob: -10.55598258972168
    7. 's' → logprob: -10.93098258972168
    8. 'n' → logprob: -10.93098258972168
    9. '[]' → logprob: -11.43098258972168
    10. '[' → logprob: -11.43098258972168

Token 138: ' tableau' (ID: 67053)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.9596872329711914
    2. 'list' → logprob: -1.5846872329711914
    3. ' tableau' → logprob: -1.5846872329711914
    4. '   ' → logprob: -2.8346872329711914
    5. '[' → logprob: -2.9596872329711914
    6. 's' → logprob: -3.9596872329711914
    7. ' sieve' → logprob: -4.334687232971191
    8. 'table' → logprob: -4.459687232971191
    9. ' [' → logprob: -4.834687232971191
    10. ' liste' → logprob: -4.834687232971191

Token 139: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.15147294104099274
    2. ' de' → logprob: -2.401473045349121
    3. ' [' → logprob: -4.651473045349121
    4. '   ' → logprob: -4.651473045349121
    5. 'de' → logprob: -5.026473045349121
    6. ' des' → logprob: -5.151473045349121
    7. '[]' → logprob: -5.276473045349121
    8. '[n' → logprob: -5.401473045349121
    9. ' of' → logprob: -6.151473045349121
    10. 'des' → logprob: -7.026473045349121

Token 140: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.8051475286483765
    2. 'bool' → logprob: -0.8051475286483765
    3. ' bo' → logprob: -2.555147647857666
    4. 'bo' → logprob: -3.680147647857666
    5. ' boolean' → logprob: -7.055147647857666
    6. 'pr' → logprob: -7.555147647857666
    7. 'boolean' → logprob: -7.805147647857666
    8. ' cr' → logprob: -8.055147171020508
    9. '[' → logprob: -8.305147171020508
    10. 'True' → logprob: -8.805147171020508

Token 141: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.006132722366601229
    2. '[' → logprob: -6.00613260269165
    3. 'éan' → logprob: -6.00613260269165
    4. 'ean' → logprob: -7.00613260269165
    5. 'és' → logprob: -9.881133079528809
    6. '[]' → logprob: -10.381133079528809
    7. '#' → logprob: -10.506133079528809
    8. '[len' → logprob: -10.631133079528809
    9. '[i' → logprob: -11.006133079528809
    10. '   ' → logprob: -11.256133079528809

Token 142: 'ens' (ID: 696)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.1815624237060547
    2. 'ens' → logprob: -1.8065624237060547
    3. 'an' → logprob: -7.681562423706055
    4. 'en' → logprob: -8.056562423706055
    5. 'é' → logprob: -8.431562423706055
    6. 's' → logprob: -8.806562423706055
    7. '[' → logprob: -9.056562423706055
    8. '#' → logprob: -9.181562423706055
    9. 'éns' → logprob: -9.306562423706055
    10. 'ns' → logprob: -9.556562423706055

Token 143: ' indiqu' (ID: 100773)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6529655456542969
    2. '[' → logprob: -1.4029655456542969
    3. '   ' → logprob: -2.527965545654297
    4. '[n' → logprob: -3.152965545654297
    5. ' de' → logprob: -3.277965545654297
    6. '[max' → logprob: -4.277965545654297
    7. ',' → logprob: -4.402965545654297
    8. '[size' → logprob: -5.027965545654297
    9. ' True' → logprob: -5.277965545654297
    10. ' of' → logprob: -5.402965545654297

Token 144: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -3.4881879400927573e-05
    2. 'ent' → logprob: -10.750035285949707
    3. 'e' → logprob: -12.000035285949707
    4. '[]' → logprob: -13.125035285949707
    5. 'a' → logprob: -13.375035285949707
    6. '[' → logprob: -13.750035285949707
    7. '   ' → logprob: -14.625035285949707
    8. '['' → logprob: -14.750035285949707
    9. '```' → logprob: -15.000035285949707
    10. 'er' → logprob: -15.375035285949707

Token 145: ' si' (ID: 1784)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.8020219206809998
    2. ' True' → logprob: -1.4270219802856445
    3. ' si' → logprob: -1.6770219802856445
    4. ' la' → logprob: -2.6770219802856445
    5. 'si' → logprob: -4.1770219802856445
    6. ' les' → logprob: -4.5520219802856445
    7. ' pour' → logprob: -5.0520219802856445
    8. ' quelles' → logprob: -5.4270219802856445
    9. ' quels' → logprob: -5.4270219802856445
    10. ' if' → logprob: -6.3020219802856445

Token 146: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.4868432283401489
    2. ' un' → logprob: -1.111843228340149
    3. ' ' → logprob: -4.861843109130859
    4. ' les' → logprob: -4.986843109130859
    5. ' i' → logprob: -4.986843109130859
    6. 'un' → logprob: -5.236843109130859
    7. 'les' → logprob: -5.361843109130859
    8. ' une' → logprob: -5.486843109130859
    9. '   ' → logprob: -5.611843109130859
    10. 'i' → logprob: -5.611843109130859

Token 147: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.030635876581072807
    2. 'nombre' → logprob: -4.405635833740234
    3. ' i' → logprob: -4.655635833740234
    4. ' number' → logprob: -5.405635833740234
    5. ' numéro' → logprob: -6.905635833740234
    6. 'i' → logprob: -7.405635833740234
    7. ' n' → logprob: -7.405635833740234
    8. ' nombres' → logprob: -7.655635833740234
    9. 'n' → logprob: -7.905635833740234
    10. 'number' → logprob: -8.405635833740234

Token 148: ' de' (ID: 334)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.47542694211006165
    2. 'est' → logprob: -0.9754269123077393
    3. 'jus' → logprob: -7.725427150726318
    4. '   ' → logprob: -7.975427150726318
    5. ' jusqu' → logprob: -8.22542667388916
    6. '```' → logprob: -9.60042667388916
    7. 'prime' → logprob: -10.22542667388916
    8. 'prem' → logprob: -10.22542667388916
    9. '_est' → logprob: -10.35042667388916
    10. ''est' → logprob: -10.97542667388916

Token 149: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2776332199573517
    2. ' ' → logprob: -1.5276331901550293
    3. '2' → logprob: -3.7776331901550293
    4. '1' → logprob: -6.027633190155029
    5. '   ' → logprob: -10.277633666992188
    6. '  ' → logprob: -11.277633666992188
    7. ' True' → logprob: -11.402633666992188
    8. 'True' → logprob: -11.527633666992188
    9. ' [' → logprob: -12.402633666992188
    10. '```' → logprob: -12.527633666992188

Token 150: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02382790669798851
    2. '2' → logprob: -3.7738277912139893
    3. ' ' → logprob: -7.648828029632568
    4. '1' → logprob: -9.77382755279541
    5. '[' → logprob: -10.39882755279541
    6. 'max' → logprob: -11.89882755279541
    7. 'range' → logprob: -12.52382755279541
    8. 'l' → logprob: -13.77382755279541
    9. '   ' → logprob: -14.02382755279541
    10. 'à' → logprob: -14.14882755279541

Token 151: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.05848673731088638
    2. 'à' → logprob: -2.9334867000579834
    3. ' ' → logprob: -5.8084869384765625
    4. ' a' → logprob: -7.9334869384765625
    5. 'a' → logprob: -9.058486938476562
    6. '   ' → logprob: -10.308486938476562
    7. ' ' → logprob: -10.933486938476562
    8. '  ' → logprob: -11.058486938476562
    9. ' jusqu' → logprob: -11.058486938476562
    10. ' up' → logprob: -11.433486938476562

Token 152: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.023248156532645226
    2. 'max' → logprob: -3.7732481956481934
    3. ' ' → logprob: -13.523247718811035
    4. '[max' → logprob: -14.023247718811035
    5. '	max' → logprob: -15.648247718811035
    6. '(max' → logprob: -15.898247718811035
    7. '   ' → logprob: -16.27324867248535
    8. '  ' → logprob: -17.14824867248535
    9. ' ' → logprob: -17.14824867248535
    10. ',max' → logprob: -17.14824867248535

Token 153: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.0019294669618830085
    2. '_' → logprob: -6.25192928314209
    3. ' _' → logprob: -14.62692928314209
    4. '_i' → logprob: -16.251930236816406
    5. ' ' → logprob: -16.876930236816406
    6. '_d' → logprob: -17.501930236816406
    7. '```' → logprob: -17.501930236816406
    8. 'n' → logprob: -17.626930236816406
    9. '_s' → logprob: -18.001930236816406
    10. '   ' → logprob: -18.376930236816406

Token 154: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.08902867883443832
    2. 'est' → logprob: -2.4640285968780518
    3. '```' → logprob: -9.964028358459473
    4. ' is' → logprob: -11.089028358459473
    5. ' ' → logprob: -11.214028358459473
    6. ''est' → logprob: -12.089028358459473
    7. '(est' → logprob: -12.964028358459473
    8. '   ' → logprob: -13.464028358459473
    9. '_est' → logprob: -13.964028358459473
    10. 'es' → logprob: -14.839028358459473

Token 155: ' premier' (ID: 15506)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.023539412766695023
    2. ' premier' → logprob: -3.7735393047332764
    3. 'prime' → logprob: -8.898539543151855
    4. 'prima' → logprob: -9.273539543151855
    5. 'pr' → logprob: -11.023539543151855
    6. ' primo' → logprob: -11.398539543151855
    7. ' prime' → logprob: -11.898539543151855
    8. '```' → logprob: -12.273539543151855
    9. ' ' → logprob: -12.523539543151855
    10. '   ' → logprob: -12.773539543151855

Token 156: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2447742521762848
    2. ':' → logprob: -2.744774341583252
    3. '   ' → logprob: -3.369774341583252
    4. ' ou' → logprob: -3.369774341583252
    5. ',' → logprob: -4.369774341583252
    6. ' True' → logprob: -4.369774341583252
    7. '[' → logprob: -4.494774341583252
    8. ' or' → logprob: -4.869774341583252
    9. '.
' → logprob: -4.869774341583252
    10. 's' → logprob: -5.119774341583252

Token 157: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005553900729864836
    2. '\n' → logprob: -6.880553722381592
    3. ' ' → logprob: -7.130553722381592
    4. '    
' → logprob: -7.255553722381592
    5. '
' → logprob: -7.380553722381592
    6. '"""' → logprob: -7.630553722381592
    7. '  
' → logprob: -8.00555419921875
    8. ' """
' → logprob: -8.13055419921875
    9. '   
' → logprob: -8.50555419921875
    10. '"""
' → logprob: -8.63055419921875

Token 158: ' Util' (ID: 13564)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09385299682617188
    2. '
' → logprob: -2.843852996826172
    3. '    
' → logprob: -4.968852996826172
    4. '```' → logprob: -5.093852996826172
    5. '\n' → logprob: -5.218852996826172
    6. '"""
' → logprob: -5.843852996826172
    7. '  
' → logprob: -6.093852996826172
    8. 'n' → logprob: -6.218852996826172
    9. '"""' → logprob: -6.343852996826172
    10. ' 
' → logprob: -7.218852996826172

Token 159: 'ise' (ID: 1096)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.33561962842941284
    2. 's' → logprob: -1.7106196880340576
    3. 'ser' → logprob: -2.3356196880340576
    4. 'ses' → logprob: -5.4606194496154785
    5. 'sage' → logprob: -6.8356194496154785
    6. 'ise' → logprob: -7.7106194496154785
    7. 'sent' → logprob: -7.9606194496154785
    8. '```' → logprob: -8.335619926452637
    9. 'sers' → logprob: -8.585619926452637
    10. 'sen' → logprob: -8.835619926452637

Token 160: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.42633670568466187
    2. 'le' → logprob: -1.3013367652893066
    3. ' un' → logprob: -2.8013367652893066
    4. ' une' → logprob: -4.801336765289307
    5. ' la' → logprob: -6.426336765289307
    6. 'un' → logprob: -6.926336765289307
    7. '   ' → logprob: -7.426336765289307
    8. ' l' → logprob: -7.676336765289307
    9. 'une' → logprob: -7.676336765289307
    10. 'e' → logprob: -7.926336765289307

Token 161: ' cr' (ID: 1769)
  Prédit: ' cr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cr' → logprob: -0.08042950928211212
    2. 'cr' → logprob: -2.9554295539855957
    3. 's' → logprob: -5.080429553985596
    4. ' sieve' → logprob: -5.080429553985596
    5. ' S' → logprob: -5.205429553985596
    6. '"' → logprob: -6.205429553985596
    7. ' Cr' → logprob: -6.455429553985596
    8. 'S' → logprob: -7.330429553985596
    9. 'Cr' → logprob: -7.830429553985596
    10. '   ' → logprob: -7.830429553985596

Token 162: 'ible' (ID: 1430)
  Prédit: 'ible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ible' → logprob: -0.0002286886883666739
    2. 'ib' → logprob: -8.875228881835938
    3. 'ibl' → logprob: -10.750228881835938
    4. 'i' → logprob: -11.125228881835938
    5. 'ble' → logprob: -11.500228881835938
    6. ' ' → logprob: -11.750228881835938
    7. '   ' → logprob: -12.125228881835938
    8. 'ibele' → logprob: -12.500228881835938
    9. 'ibles' → logprob: -12.875228881835938
    10. 'ibe' → logprob: -12.875228881835938

Token 163: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6332643032073975
    2. ' d' → logprob: -0.7582643032073975
    3. 's' → logprob: -8.008264541625977
    4. ' de' → logprob: -9.133264541625977
    5. '_d' → logprob: -9.633264541625977
    6. '   ' → logprob: -10.258264541625977
    7. 'de' → logprob: -10.508264541625977
    8. 'def' → logprob: -10.883264541625977
    9. ' of' → logprob: -11.133264541625977
    10. ' ' → logprob: -11.633264541625977

Token 164: ''É' (ID: 87944)
  Prédit: ''É'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''É' → logprob: -0.005155601073056459
    2. 'É' → logprob: -5.755155563354492
    3. '’É' → logprob: -6.255155563354492
    4. ' É' → logprob: -10.130155563354492
    5. ''é' → logprob: -11.505155563354492
    6. ''E' → logprob: -13.630155563354492
    7. '_' → logprob: -13.755155563354492
    8. ''' → logprob: -13.755155563354492
    9. 'E' → logprob: -15.130155563354492
    10. '```' → logprob: -15.130155563354492

Token 165: 'rat' (ID: 11990)
  Prédit: 'rat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rat' → logprob: -0.009884759783744812
    2. 'r' → logprob: -4.634884834289551
    3. 'rats' → logprob: -9.63488483428955
    4. 'arat' → logprob: -11.00988483428955
    5. 'рат' → logprob: -11.25988483428955
    6. 'art' → logprob: -11.63488483428955
    7. 'Rat' → logprob: -11.75988483428955
    8. 'R' → logprob: -12.00988483428955
    9. 'rast' → logprob: -12.75988483428955
    10. 'at' → logprob: -12.75988483428955

Token 166: 'ost' (ID: 564)
  Prédit: 'ost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -0.0005724519141949713
    2. 'os' → logprob: -7.625572681427002
    3. 'oth' → logprob: -10.500572204589844
    4. ' ost' → logprob: -10.625572204589844
    5. 'o' → logprob: -11.875572204589844
    6. 'h' → logprob: -12.375572204589844
    7. 'oste' → logprob: -12.375572204589844
    8. '
' → logprob: -12.875572204589844
    9. 'osph' → logprob: -13.625572204589844
    10. 'ot' → logprob: -13.750572204589844

Token 167: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.8073956370353699
    2. 'ost' → logprob: -1.4323956966400146
    3. 'th' → logprob: -1.9323956966400146
    4. 'oth' → logprob: -2.3073956966400146
    5. 'os' → logprob: -3.3073956966400146
    6. 'o' → logprob: -4.0573954582214355
    7. 'ène' → logprob: -5.4323954582214355
    8. 'st' → logprob: -5.9323954582214355
    9. 'osph' → logprob: -6.6823954582214355
    10. 'othèque' → logprob: -6.9323954582214355

Token 168: 'ène' (ID: 22902)
  Prédit: 'ène'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ène' → logprob: -0.14698196947574615
    2. 'ost' → logprob: -2.146981954574585
    3. 'o' → logprob: -5.021982192993164
    4. 'os' → logprob: -5.146982192993164
    5. 'l' → logprob: -6.896982192993164
    6. 'th' → logprob: -7.021982192993164
    7. 'ene' → logprob: -7.146982192993164
    8. 'ème' → logprob: -7.146982192993164
    9. 'ò' → logprob: -7.521982192993164
    10. 'h' → logprob: -7.646982192993164

Token 169: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18824677169322968
    2. '.' → logprob: -2.563246726989746
    3. ' pour' → logprob: -3.563246726989746
    4. ':' → logprob: -3.688246726989746
    5. '.
' → logprob: -4.688246726989746
    6. ' ' → logprob: -4.813246726989746
    7. ' (' → logprob: -5.563246726989746
    8. ' :' → logprob: -5.563246726989746
    9. '(max' → logprob: -5.563246726989746
    10. ',' → logprob: -6.188246726989746

Token 170: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008946668240241706
    2. '    
' → logprob: -7.875894546508789
    3. 'def' → logprob: -8.875894546508789
    4. '
' → logprob: -9.375894546508789
    5. '\n' → logprob: -9.875894546508789
    6. '```' → logprob: -10.125894546508789
    7. '   
' → logprob: -10.375894546508789
    8. ':' → logprob: -10.375894546508789
    9. '"""' → logprob: -10.625894546508789
    10. 'n' → logprob: -10.875894546508789

Token 171: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04591004550457001
    2. '
' → logprob: -4.045909881591797
    3. '\n' → logprob: -4.295909881591797
    4. '"""
' (adapté à ' """
') → logprob: -5.545909881591797
    5. '    
' → logprob: -6.045909881591797
    6. '  
' → logprob: -6.420909881591797
    7. ' """
' → logprob: -6.545909881591797
    8. '"""' → logprob: -6.795909881591797
    9. '```' → logprob: -7.045909881591797
    10. ' 
' → logprob: -7.170909881591797

Token 172: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16071797907352448
    2. ' sieve' → logprob: -2.1607179641723633
    3. ' primes' → logprob: -3.9107179641723633
    4. ' prime' → logprob: -5.285717964172363
    5. ' is' → logprob: -5.410717964172363
    6. 'prime' → logprob: -6.035717964172363
    7. 'pr' → logprob: -8.285717964172363
    8. 'n' → logprob: -8.410717964172363
    9. 'is' → logprob: -8.535717964172363
    10. 's' → logprob: -8.660717964172363

Token 173: ' is' (ID: 382)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.28418654203414917
    2. 'is' (adapté à ' is') → logprob: -1.534186601638794
    3. 'pr' → logprob: -3.784186601638794
    4. '   ' → logprob: -5.159186363220215
    5. ' sieve' → logprob: -6.909186363220215
    6. ' prime' → logprob: -7.034186363220215
    7. ' primes' → logprob: -7.409186363220215
    8. ' is' → logprob: -7.409186363220215
    9. 's' → logprob: -8.909186363220215
    10. 'prim' → logprob: -11.034186363220215

Token 174: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.00019066639652010053
    2. 'prime' → logprob: -9.000190734863281
    3. '_pr' → logprob: -9.875190734863281
    4. '_' → logprob: -11.125190734863281
    5. '_Pr' → logprob: -14.375190734863281
    6. 'Prime' → logprob: -15.875190734863281
    7. '   ' → logprob: -16.25019073486328
    8. '_p' → logprob: -16.37519073486328
    9. 'pr' → logprob: -16.62519073486328
    10. ' prime' → logprob: -16.87519073486328

Token 175: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048605985939502716
    2. '=' → logprob: -3.0486059188842773
    3. '=[' → logprob: -11.173605918884277
    4. '[' → logprob: -12.923605918884277
    5. ' =[' → logprob: -13.173605918884277
    6. ' ' → logprob: -16.298606872558594
    7. '   ' → logprob: -16.798606872558594
    8. '```' → logprob: -17.173606872558594
    9. 's' → logprob: -17.423606872558594
    10. '	' → logprob: -17.423606872558594

Token 176: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12693114578723907
    2. ' [' → logprob: -2.1269311904907227
    3. ' ' → logprob: -13.376931190490723
    4. '   ' → logprob: -14.251931190490723
    5. '[n' → logprob: -15.501931190490723
    6. '[max' → logprob: -15.751931190490723
    7. '[int' → logprob: -16.876930236816406
    8. '[N' → logprob: -17.126930236816406
    9. '[s' → logprob: -17.126930236816406
    10. '  ' → logprob: -17.126930236816406

Token 177: 'True' (ID: 4710)
  Prédit: 'True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -9.088346359931165e-07
    2. 'False' → logprob: -14.750000953674316
    3. ' True' → logprob: -14.750000953674316
    4. '(True' → logprob: -18.375
    5. 'Tr' → logprob: -20.375
    6. '   ' → logprob: -21.625
    7. '=True' → logprob: -23.0
    8. '1' → logprob: -23.125
    9. 'None' → logprob: -23.375
    10. '.True' → logprob: -24.875

Token 178: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09410680830478668
    2. ' for' → logprob: -2.469106912612915
    3. ',' → logprob: -6.219106674194336
    4. ']*' → logprob: -6.344106674194336
    5. 'for' → logprob: -7.344106674194336
    6. ']*(' → logprob: -7.969106674194336
    7. ' ' → logprob: -8.969106674194336
    8. ' ]' → logprob: -8.969106674194336
    9. ')' → logprob: -10.094106674194336
    10. '	for' → logprob: -10.344106674194336

Token 179: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2793269753456116
    2. ',' → logprob: -1.7793269157409668
    3. ']*(' → logprob: -3.404326915740967
    4. ' for' → logprob: -3.654326915740967
    5. '*' → logprob: -5.279326915740967
    6. ')' → logprob: -6.029326915740967
    7. 'for' → logprob: -6.154326915740967
    8. ']*' → logprob: -6.404326915740967
    9. ' *' → logprob: -6.654326915740967
    10. ']+' → logprob: -7.154326915740967

Token 180: ' (' (ID: 350)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.00010437761375214905
    2. ' (' → logprob: -9.250103950500488
    3. '(' → logprob: -12.000103950500488
    4. '[max' → logprob: -14.250103950500488
    5. 'max' → logprob: -14.375103950500488
    6. '((' → logprob: -15.375103950500488
    7. '   ' → logprob: -15.500103950500488
    8. '(MAX' → logprob: -15.750103950500488
    9. '(min' → logprob: -16.500104904174805
    10. ' ' → logprob: -16.750104904174805

Token 181: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -2.1008713702030946e-06
    2. '(max' → logprob: -13.250001907348633
    3. ' max' → logprob: -15.125001907348633
    4. '[max' → logprob: -20.500001907348633
    5. '	max' → logprob: -20.875001907348633
    6. '=max' → logprob: -22.125001907348633
    7. '   ' → logprob: -22.250001907348633
    8. 'maxlength' → logprob: -22.500001907348633
    9. ',max' → logprob: -22.750001907348633
    10. 'ma' → logprob: -22.875001907348633

Token 182: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -7.827200897736475e-05
    2. '+' → logprob: -9.750078201293945
    3. '_' → logprob: -11.375078201293945
    4. ' _' → logprob: -13.125078201293945
    5. ' +' → logprob: -13.250078201293945
    6. '_i' → logprob: -13.500078201293945
    7. '   ' → logprob: -13.875078201293945
    8. 'n' → logprob: -14.500078201293945
    9. '_max' → logprob: -15.000078201293945
    10. '```' → logprob: -15.500078201293945

Token 183: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0017038638470694423
    2. ' +' → logprob: -6.37670373916626
    3. '+
' → logprob: -13.501704216003418
    4. ')' → logprob: -16.2517032623291
    5. ' +
' → logprob: -17.3767032623291
    6. ' plus' → logprob: -17.5017032623291
    7. '
' → logprob: -17.5017032623291
    8. '+[' → logprob: -17.5017032623291
    9. '```' → logprob: -18.0017032623291
    10. '+)' → logprob: -18.0017032623291

Token 184: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.848420551046729e-05
    2. ' ' → logprob: -9.7500581741333
    3. '   ' → logprob: -16.500059127807617
    4. '2' → logprob: -16.750059127807617
    5. '```' → logprob: -16.750059127807617
    6. '  ' → logprob: -18.062559127807617
    7. '7' → logprob: -18.562559127807617
    8. ')' → logprob: -18.875059127807617
    9. '１' → logprob: -18.937559127807617
    10. '
' → logprob: -18.937559127807617

Token 185: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -17.3750057220459
    4. '2' → logprob: -18.0000057220459
    5. '```' → logprob: -18.1250057220459
    6. '0' → logprob: -18.5625057220459
    7. '
' → logprob: -18.6875057220459
    8. 'True' → logprob: -19.1875057220459
    9. '１' → logprob: -19.3125057220459
    10. ')' → logprob: -19.5000057220459

Token 186: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026352662593126297
    2. ')
' → logprob: -3.651352643966675
    3. ')
' → logprob: -10.651352882385254
    4. '   ' → logprob: -10.776352882385254
    5. 'except' → logprob: -12.526352882385254
    6. ')

' → logprob: -13.401352882385254
    7. ' )' → logprob: -14.151352882385254
    8. ')#' → logprob: -15.026352882385254
    9. ' except' → logprob: -15.276352882385254
    10. '#' → logprob: -15.526352882385254

Token 187: '   ' (ID: 271)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.20403741300106049
    2. '   ' → logprob: -1.7040374279022217
    3. ' is' → logprob: -5.954037189483643
    4. '    
' → logprob: -11.3290376663208
    5. '
' → logprob: -12.7040376663208
    6. 'for' → logprob: -12.7040376663208
    7. '	is' → logprob: -12.8290376663208
    8. '```' → logprob: -13.3290376663208
    9. 'import' → logprob: -14.5790376663208
    10. ' ' → logprob: -14.5790376663208

Token 188: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' (adapté à ' is') → logprob: -0.0010692507494241
    2. '   ' → logprob: -6.876069068908691
    3. ' is' → logprob: -10.251069068908691
    4. 'import' → logprob: -14.501069068908691
    5. ' ' → logprob: -15.376069068908691
    6. '    
' → logprob: -15.876069068908691
    7. '```' → logprob: -16.126070022583008
    8. '	is' → logprob: -17.001070022583008
    9. '0' → logprob: -17.126070022583008
    10. 'for' → logprob: -17.251070022583008

Token 189: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -6.277553620748222e-05
    2. 'prime' → logprob: -10.250062942504883
    3. '_' → logprob: -11.125062942504883
    4. '   ' → logprob: -12.125062942504883
    5. '_pr' → logprob: -14.000062942504883
    6. ' _' → logprob: -14.125062942504883
    7. '  ' → logprob: -14.250062942504883
    8. ' ' → logprob: -14.375062942504883
    9. '_p' → logprob: -14.625062942504883
    10. '[' → logprob: -14.875062942504883

Token 190: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.935296834039036e-06
    2. ' [' → logprob: -13.25000286102295
    3. '=' → logprob: -14.25000286102295
    4. ' =' → logprob: -15.62500286102295
    5. 'import' → logprob: -16.750003814697266
    6. '```' → logprob: -17.250003814697266
    7. '<|end|>' → logprob: -17.500003814697266
    8. '[
' → logprob: -18.000003814697266
    9. ' ' → logprob: -18.250003814697266
    10. '[:' → logprob: -18.250003814697266

Token 191: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016210438683629036
    2. '2' → logprob: -4.516210556030273
    3. '1' → logprob: -5.516210556030273
    4. ' ' → logprob: -7.016210556030273
    5. ')' → logprob: -8.766210556030273
    6. ']' → logprob: -10.266210556030273
    7. '   ' → logprob: -11.266210556030273
    8. ':' → logprob: -11.766210556030273
    9. 'import' → logprob: -12.016210556030273
    10. '```' → logprob: -13.016210556030273

Token 192: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0012491621309891343
    2. ')' → logprob: -7.001249313354492
    3. ']=' → logprob: -8.876249313354492
    4. ' ]' → logprob: -9.126249313354492
    5. '=' → logprob: -10.376249313354492
    6. 'False' → logprob: -10.751249313354492
    7. '   ' → logprob: -10.876249313354492
    8. ' =' → logprob: -11.751249313354492
    9. '=False' → logprob: -12.376249313354492
    10. ',' → logprob: -13.376249313354492

Token 193: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0031848405487835407
    2. 'is' → logprob: -5.753184795379639
    3. ' False' → logprob: -13.378185272216797
    4. ' ' → logprob: -13.628185272216797
    5. 'False' → logprob: -13.753185272216797
    6. ' ' → logprob: -13.753185272216797
    7. '<|end|>' → logprob: -14.128185272216797
    8. ' True' → logprob: -14.878185272216797
    9. '	is' → logprob: -15.003185272216797
    10. '  ' → logprob: -15.003185272216797

Token 194: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.00011856284982059151
    2. 'prime' → logprob: -9.125118255615234
    3. '[' → logprob: -12.500118255615234
    4. '_true' → logprob: -12.625118255615234
    5. 'Prime' → logprob: -14.125118255615234
    6. '_pr' → logprob: -14.375118255615234
    7. '_' → logprob: -14.750118255615234
    8. 'pr' → logprob: -15.625118255615234
    9. ']' → logprob: -15.750118255615234
    10. 'is' → logprob: -16.250118255615234

Token 195: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00043126524542458355
    2. ' =' → logprob: -7.875431060791016
    3. '=' → logprob: -11.000431060791016
    4. '<|end|>' → logprob: -11.000431060791016
    5. '[
' → logprob: -11.500431060791016
    6. '=True' → logprob: -12.875431060791016
    7. '1' → logprob: -13.125431060791016
    8. ' [' → logprob: -13.375431060791016
    9. '```' → logprob: -15.125431060791016
    10. ']' → logprob: -15.250431060791016

Token 196: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.292907877039397e-06
    2. ' ' → logprob: -12.87500286102295
    3. 'True' → logprob: -15.12500286102295
    4. 'False' → logprob: -15.25000286102295
    5. '  ' → logprob: -18.500003814697266
    6. '   ' → logprob: -18.562503814697266
    7. '```' → logprob: -18.562503814697266
    8. '۱' → logprob: -18.750003814697266
    9. ' True' → logprob: -18.812503814697266
    10. 'is' → logprob: -18.875003814697266

Token 197: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5144011974334717
    2. ']' → logprob: -1.2644011974334717
    3. ' =' → logprob: -2.1394011974334717
    4. ']=' → logprob: -6.639401435852051
    5. ')' → logprob: -7.389401435852051
    6. ' ]' → logprob: -10.26440143585205
    7. '=False' → logprob: -11.51440143585205
    8. '[' → logprob: -11.51440143585205
    9. '=True' → logprob: -11.88940143585205
    10. ')=' → logprob: -11.88940143585205

Token 198: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132626414299011
    2. ' =' → logprob: -1.313262701034546
    3. '=False' → logprob: -14.063262939453125
    4. '=True' → logprob: -16.563262939453125
    5. ')' → logprob: -17.688262939453125
    6. ']' → logprob: -17.813262939453125
    7. '=
' → logprob: -18.188262939453125
    8. '＝' → logprob: -18.438262939453125
    9. ' =
' → logprob: -18.563262939453125
    10. ' ' → logprob: -18.563262939453125

Token 199: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.005234594456851482
    2. ' False' → logprob: -5.255234718322754
    3. '[' → logprob: -14.380234718322754
    4. '(False' → logprob: -15.255234718322754
    5. '=False' → logprob: -17.630233764648438
    6. 'F' → logprob: -18.005233764648438
    7. '   ' → logprob: -19.380233764648438
    8. 'True' → logprob: -19.880233764648438
    9. ' ' → logprob: -20.255233764648438
    10. 'Fa' → logprob: -20.380233764648438

Token 200: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.26541388034820557
    2. '<|end|>' → logprob: -1.5154138803482056
    3. '
' → logprob: -4.765413761138916
    4. '<|end|>' → logprob: -5.765413761138916
    5. ',
' → logprob: -6.765413761138916
    6. ',None' → logprob: -8.640414237976074
    7. ')' → logprob: -9.765414237976074
    8. '   ' → logprob: -9.890414237976074
    9. '    
' → logprob: -9.890414237976074
    10. '  
' → logprob: -10.390414237976074

Token 201: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.47407710552215576
    2. ' False' → logprob: -0.9740771055221558
    3. '(False' → logprob: -16.224077224731445
    4. '=False' → logprob: -18.599077224731445
    5. '_false' → logprob: -19.224077224731445
    6. '0' → logprob: -19.349077224731445
    7. ' True' → logprob: -19.724077224731445
    8. ' ' → logprob: -19.724077224731445
    9. '.False' → logprob: -19.849077224731445
    10. '[' → logprob: -19.974077224731445

Token 202: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.009961245581507683
    2. '   ' → logprob: -4.759961128234863
    3. '    
' → logprob: -7.759961128234863
    4. '
' → logprob: -7.884961128234863
    5. 'for' → logprob: -8.509961128234863
    6. ' for' → logprob: -9.384961128234863
    7. ' 
' → logprob: -9.634961128234863
    8. '  
' → logprob: -9.634961128234863
    9. '\n' → logprob: -9.884961128234863
    10. '

' → logprob: -10.384961128234863

Token 203: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.001682559377513826
    2. '   ' → logprob: -7.126682758331299
    3. 'for' → logprob: -7.876682758331299
    4. '
' → logprob: -8.62668228149414
    5. '    
' → logprob: -8.62668228149414
    6. ' for' → logprob: -10.12668228149414
    7. '  
' → logprob: -10.12668228149414
    8. ' 
' → logprob: -10.37668228149414
    9. '\n' → logprob: -11.25168228149414
    10. '' → logprob: -11.87668228149414

Token 204: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 205: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.23244063556194305
    2. 'False' → logprob: -2.607440710067749
    3. 'is' → logprob: -2.857440710067749
    4. '#' → logprob: -2.857440710067749
    5. 'for' → logprob: -4.35744047164917
    6. '<|end|>' → logprob: -6.73244047164917
    7. 'indices' → logprob: -7.48244047164917
    8. ' ' → logprob: -7.48244047164917
    9. 'True' → logprob: -7.60744047164917
    10. 'prem' → logprob: -7.85744047164917

Token 206: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4501561224460602
    2. '<|end|>' → logprob: -1.4501560926437378
    3. ' and' → logprob: -2.2001562118530273
    4. ' et' → logprob: -5.200156211853027
    5. '   ' → logprob: -5.575156211853027
    6. '<|end|>' → logprob: -5.950156211853027
    7. 'and' → logprob: -6.700156211853027
    8. ' ,' → logprob: -6.950156211853027
    9. ' ' → logprob: -7.450156211853027
    10. ')' → logprob: -7.450156211853027

Token 207: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.061967913061380386
    2. ' ' → logprob: -2.8119678497314453
    3. ' ' → logprob: -16.186967849731445
    4. '  ' → logprob: -16.561967849731445
    5. '   ' → logprob: -18.561967849731445
    6. '```' → logprob: -20.311967849731445
    7. '    ' → logprob: -21.561967849731445
    8. 'au' → logprob: -21.936967849731445
    9. 'le' → logprob: -22.186967849731445
    10. '0' → logprob: -22.311967849731445

Token 208: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002614550176076591
    2. ' ' → logprob: -8.250261306762695
    3. '  ' → logprob: -16.625261306762695
    4. '   ' → logprob: -17.125261306762695
    5. ' ' → logprob: -20.125261306762695
    6. '

' → logprob: -20.375261306762695
    7. '```' → logprob: -20.875261306762695
    8. '    ' → logprob: -21.250261306762695
    9. '
' → logprob: -21.875261306762695
    10. '１' → logprob: -22.000261306762695

Token 209: ' ne' (ID: 453)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 210: ' sont' (ID: 5242)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.009809094481170177
    2. ' sont' → logprob: -4.6348090171813965
    3. ' ' → logprob: -10.759809494018555
    4. '#' → logprob: -11.759809494018555
    5. 'pas' → logprob: -11.759809494018555
    6. ' pas' → logprob: -12.759809494018555
    7. '
' → logprob: -13.134809494018555
    8. '[]' → logprob: -13.509809494018555
    9. ' are' → logprob: -13.509809494018555
    10. ' =' → logprob: -13.884809494018555

Token 211: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.0006314247148111463
    2. 'prem' → logprob: -7.625631332397461
    3. 'prime' → logprob: -9.500631332397461
    4. 'pr' → logprob: -10.125631332397461
    5. ' pas' → logprob: -11.000631332397461
    6. 'p' → logprob: -12.250631332397461
    7. 'plus' → logprob: -12.375631332397461
    8. 'prima' → logprob: -14.375631332397461
    9. 'pl' → logprob: -15.000631332397461
    10. '   ' → logprob: -15.125631332397461

Token 212: ' premiers' (ID: 59140)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.02272588014602661
    2. 'pr' → logprob: -4.397726058959961
    3. ' premiers' → logprob: -4.647726058959961
    4. 'prime' → logprob: -8.522726058959961
    5. ' des' → logprob: -9.272726058959961
    6. 'prima' → logprob: -9.272726058959961
    7. 'prim' → logprob: -9.647726058959961
    8. 'des' → logprob: -10.147726058959961
    9. ' primo' → logprob: -10.772726058959961
    10. ' premier' → logprob: -10.897726058959961

Token 213: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05746136233210564
    2. '   ' → logprob: -2.9324612617492676
    3. '    
' → logprob: -6.557461261749268
    4. 'for' → logprob: -7.682461261749268
    5. '\n' → logprob: -8.432461738586426
    6. '
' → logprob: -8.557461738586426
    7. '  
' → logprob: -9.182461738586426
    8. ' for' → logprob: -9.682461738586426
    9. '```' → logprob: -9.932461738586426
    10. ' 
' → logprob: -10.932461738586426

Token 214: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13357724249362946
    2. '   ' → logprob: -2.133577346801758
    3. 'for' → logprob: -5.508577346801758
    4. '    
' → logprob: -6.508577346801758
    5. ' for' → logprob: -7.508577346801758
    6. '
' → logprob: -8.258577346801758
    7. '  
' → logprob: -9.133577346801758
    8. '\n' → logprob: -9.633577346801758
    9. ' 
' → logprob: -10.008577346801758
    10. '```' → logprob: -11.008577346801758

Token 215: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.007905653677880764
    2. ' for' → logprob: -5.00790548324585
    3. '   ' → logprob: -6.75790548324585
    4. 'i' → logprob: -11.007905960083008
    5. 'import' → logprob: -11.632905960083008
    6. '
' → logprob: -14.507905960083008
    7. ' i' → logprob: -14.632905960083008
    8. '	for' → logprob: -14.757905960083008
    9. '```' → logprob: -14.882905960083008
    10. ' ' → logprob: -15.382905960083008

Token 216: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6954055428504944
    2. ' i' → logprob: -0.6954055428504944
    3. ' p' → logprob: -6.44540548324585
    4. 'p' → logprob: -7.32040548324585
    5. '	i' → logprob: -12.820405960083008
    6. ' num' → logprob: -13.570405960083008
    7. ' number' → logprob: -13.820405960083008
    8. 'num' → logprob: -14.570405960083008
    9. 'x' → logprob: -14.945405960083008
    10. 'number' → logprob: -16.070405960083008

Token 217: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004666388034820557
    2. 'in' → logprob: -5.379666328430176
    3. ' ' → logprob: -10.254666328430176
    4. '  ' → logprob: -13.504666328430176
    5. 'import' → logprob: -13.629666328430176
    6. '2' → logprob: -13.629666328430176
    7. '	in' → logprob: -13.754666328430176
    8. '1' → logprob: -13.879666328430176
    9. 'range' → logprob: -14.129666328430176
    10. ' i' → logprob: -14.129666328430176

Token 218: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.07888989895582199
    2. 'range' → logprob: -2.578889846801758
    3. '2' → logprob: -16.703889846801758
    4. '	range' → logprob: -17.453889846801758
    5. ' ' → logprob: -17.578889846801758
    6. ' xrange' → logprob: -19.453889846801758
    7. '(range' → logprob: -19.578889846801758
    8. '  ' → logprob: -20.953889846801758
    9. ' in' → logprob: -21.203889846801758
    10. '.range' → logprob: -21.328889846801758

Token 219: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.615255839889869e-05
    2. '2' → logprob: -9.250096321105957
    3. ' ' → logprob: -17.62509536743164
    4. ' (' → logprob: -18.50009536743164
    5. '(
' → logprob: -21.25009536743164
    6. '```' → logprob: -22.00009536743164
    7. '   ' → logprob: -22.25009536743164
    8. '[' → logprob: -22.50009536743164
    9. 'import' → logprob: -23.12509536743164
    10. '	' → logprob: -23.75009536743164

Token 220: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '(' → logprob: -19.625
    4. '   ' → logprob: -20.375
    5. '```' → logprob: -20.75
    6. 'int' → logprob: -22.25
    7. '２' → logprob: -22.5
    8. '۲' → logprob: -22.625
    9. 'import' → logprob: -23.0
    10. '	' → logprob: -23.25

Token 221: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019512299913913012
    2. ' ,' → logprob: -6.251951217651367
    3. ' ' → logprob: -11.126951217651367
    4. ',int' → logprob: -12.501951217651367
    5. 'import' → logprob: -13.876951217651367
    6. '   ' → logprob: -14.001951217651367
    7. ')' → logprob: -14.251951217651367
    8. '):' → logprob: -14.501951217651367
    9. 'int' → logprob: -15.001951217651367
    10. '  ' → logprob: -15.876951217651367

Token 222: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.004238666035234928
    2. ' int' → logprob: -5.504238605499268
    3. '   ' → logprob: -8.754239082336426
    4. '(int' → logprob: -13.629239082336426
    5. '	int' → logprob: -14.129239082336426
    6. ' ' → logprob: -14.879239082336426
    7. '  ' → logprob: -16.37923812866211
    8. '    ' → logprob: -17.25423812866211
    9. '<int' → logprob: -18.87923812866211
    10. ':int' → logprob: -18.87923812866211

Token 223: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -1.688212614681106e-05
    2. '((' → logprob: -11.875017166137695
    3. '(' → logprob: -12.125017166137695
    4. 'max' → logprob: -12.750017166137695
    5. ' max' → logprob: -14.000017166137695
    6. '(pow' → logprob: -15.125017166137695
    7. ' (' → logprob: -16.000017166137695
    8. '(len' → logprob: -16.125017166137695
    9. '(s' → logprob: -16.375017166137695
    10. '(m' → logprob: -17.625017166137695

Token 224: '_n' (ID: 2170)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.18652085959911346
    2. 'max' → logprob: -2.06152081489563
    3. '_n' → logprob: -3.56152081489563
    4. '**' → logprob: -5.561521053314209
    5. '_max' → logprob: -5.686521053314209
    6. '(' → logprob: -5.811521053314209
    7. '=max' → logprob: -6.686521053314209
    8. '[max' → logprob: -6.811521053314209
    9. ' max' → logprob: -7.311521053314209
    10. 'n' → logprob: -8.93652057647705

Token 225: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.00692351907491684
    2. '(' → logprob: -5.256923675537109
    3. ' **' → logprob: -6.506923675537109
    4. ' (' → logprob: -9.38192367553711
    5. '(max' → logprob: -10.13192367553711
    6. ')' → logprob: -11.13192367553711
    7. '+' → logprob: -11.50692367553711
    8. ' ' → logprob: -11.75692367553711
    9. '.sqrt' → logprob: -12.00692367553711
    10. '(i' → logprob: -12.13192367553711

Token 226: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.127333340875339e-06
    2. ' ' → logprob: -12.500003814697266
    3. '(' → logprob: -15.250003814697266
    4. '.' → logprob: -16.625003814697266
    5. '2' → logprob: -18.875003814697266
    6. '   ' → logprob: -19.875003814697266
    7. ')' → logprob: -20.375003814697266
    8. '{' → logprob: -20.375003814697266
    9. '

' → logprob: -20.375003814697266
    10. ' ' → logprob: -20.875003814697266

Token 227: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.250000953674316
    3. '.' → logprob: -15.125000953674316
    4. '(' → logprob: -17.000001907348633
    5. '2' → logprob: -19.000001907348633
    6. '   ' → logprob: -19.625001907348633
    7. '{' → logprob: -20.125001907348633
    8. '```' → logprob: -20.500001907348633
    9. ')' → logprob: -20.750001907348633
    10. '

' → logprob: -21.125001907348633

Token 228: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00034952821442857385
    2. '0' → logprob: -8.000349998474121
    3. '5' → logprob: -11.750349998474121
    4. '2' → logprob: -12.875349998474121
    5. ' .' → logprob: -13.625349998474121
    6. '   ' → logprob: -14.375349998474121
    7. ' ' → logprob: -15.000349998474121
    8. '```' → logprob: -15.000349998474121
    9. '1' → logprob: -15.125349998474121
    10. '    ' → logprob: -15.250349998474121

Token 229: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: 0.0
    2. '```' → logprob: -17.5
    3. '   ' → logprob: -18.125
    4. '0' → logprob: -18.625
    5. '.' → logprob: -18.875
    6. '4' → logprob: -18.875
    7. '
' → logprob: -19.0
    8. '

' → logprob: -19.375
    9. '``' → logprob: -19.4375
    10. '6' → logprob: -20.0625

Token 230: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0021331331226974726
    2. ')+' → logprob: -6.252133369445801
    3. ' )' → logprob: -8.5021333694458
    4. '+' → logprob: -14.1271333694458
    5. '()' → logprob: -15.2521333694458
    6. '   ' → logprob: -15.8771333694458
    7. ' +' → logprob: -16.127132415771484
    8. '')' → logprob: -16.252132415771484
    9. '())' → logprob: -16.627132415771484
    10. '+)' → logprob: -16.752132415771484

Token 231: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4748525619506836
    2. ' +' → logprob: -0.9748525619506836
    3. ')' → logprob: -7.474852561950684
    4. ')+' → logprob: -8.724852561950684
    5. '()+' → logprob: -11.099852561950684
    6. ' ' → logprob: -11.224852561950684
    7. '()' → logprob: -11.724852561950684
    8. '   ' → logprob: -12.099852561950684
    9. ']+' → logprob: -13.724852561950684
    10. ' )' → logprob: -14.599852561950684

Token 232: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.0722858102526516e-05
    2. ' ' → logprob: -10.125041007995605
    3. '(' → logprob: -15.000041007995605
    4. '   ' → logprob: -15.375041007995605
    5. '2' → logprob: -18.25004005432129
    6. '```' → logprob: -18.25004005432129
    7. '  ' → logprob: -18.37504005432129
    8. '    ' → logprob: -18.75004005432129
    9. ' (' → logprob: -19.12504005432129
    10. '
' → logprob: -19.12504005432129

Token 233: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '2' → logprob: -16.750003814697266
    4. '
' → logprob: -19.000003814697266
    5. '   ' → logprob: -19.250003814697266
    6. ')' → logprob: -19.375003814697266
    7. '  ' → logprob: -20.500003814697266
    8. '```' → logprob: -20.750003814697266
    9. '

' → logprob: -21.250003814697266
    10. '    ' → logprob: -21.750003814697266

Token 234: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008436953066848218
    2. ':' → logprob: -7.500843524932861
    3. '):
' → logprob: -8.25084400177002
    4. ')' → logprob: -10.87584400177002
    5. ' ):' → logprob: -12.00084400177002
    6. '   ' → logprob: -12.62584400177002
    7. ',' → logprob: -14.75084400177002
    8. ']:' → logprob: -15.25084400177002
    9. ' :' → logprob: -15.62584400177002
    10. '):
' → logprob: -16.125843048095703

Token 235: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1571613997220993
    2. '   ' → logprob: -2.5321614742279053
    3. '       ' → logprob: -2.9071614742279053
    4. '    ' → logprob: -5.282161235809326
    5. ' :' → logprob: -5.907161235809326
    6. ':
' → logprob: -5.907161235809326
    7. '<|end|>' → logprob: -8.907161712646484
    8. ' :
' → logprob: -9.032161712646484
    9. ' ' → logprob: -9.157161712646484
    10. '    
' → logprob: -9.282161712646484

Token 236: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3830430209636688
    2. ' if' → logprob: -1.7580430507659912
    3. '       ' → logprob: -2.508043050765991
    4. 'if' (adapté à ' if') → logprob: -3.008043050765991
    5. '    ' → logprob: -4.383042812347412
    6. ':' → logprob: -6.758042812347412
    7. '           ' → logprob: -7.758042812347412
    8. '    
' → logprob: -8.13304328918457
    9. ' ' → logprob: -9.00804328918457
    10. '  ' → logprob: -9.13304328918457

Token 237: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0028067755047231913
    2. 'is' → logprob: -5.877806663513184
    3. ' ' → logprob: -14.002806663513184
    4. ' not' → logprob: -14.377806663513184
    5. ' ' → logprob: -14.877806663513184
    6. '	is' → logprob: -15.752806663513184
    7. 'not' → logprob: -17.6278076171875
    8. '  ' → logprob: -17.6278076171875
    9. 'space' → logprob: -17.7528076171875
    10. 's' → logprob: -18.1278076171875

Token 238: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -6.754368223482743e-05
    2. '_' → logprob: -9.875067710876465
    3. ' _' → logprob: -11.875067710876465
    4. 'prime' → logprob: -12.125067710876465
    5. '_pr' → logprob: -13.250067710876465
    6. ' ' → logprob: -15.250067710876465
    7. 'is' → logprob: -15.500067710876465
    8. '_true' → logprob: -15.625067710876465
    9. '_p' → logprob: -16.12506675720215
    10. ')_' → logprob: -16.25006675720215

Token 239: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0004309076175559312
    2. '[' → logprob: -7.750431060791016
    3. '[I' → logprob: -16.125431060791016
    4. ' [' → logprob: -17.250431060791016
    5. 'i' → logprob: -18.000431060791016
    6. '[
' → logprob: -18.125431060791016
    7. '[j' → logprob: -18.875431060791016
    8. '[u' → logprob: -19.000431060791016
    9. '[s' → logprob: -19.625431060791016
    10. '[int' → logprob: -20.000431060791016

Token 240: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.11283912509679794
    2. '):' → logprob: -2.7378392219543457
    3. ':' → logprob: -3.2378392219543457
    4. ']' → logprob: -6.487839221954346
    5. '=' → logprob: -7.612839221954346
    6. '[' → logprob: -8.612838745117188
    7. ' ):' → logprob: -9.112838745117188
    8. ']==' → logprob: -9.362838745117188
    9. ']=' → logprob: -9.487838745117188
    10. ']):' → logprob: -9.612838745117188

Token 241: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029932256788015366
    2. ':
' → logprob: -4.279932022094727
    3. '           ' → logprob: -4.654932022094727
    4. '       ' → logprob: -5.404932022094727
    5. ' :' → logprob: -6.904932022094727
    6. ' for' → logprob: -8.779932022094727
    7. ' :
' → logprob: -8.779932022094727
    8. 'for' → logprob: -9.279932022094727
    9. '   ' → logprob: -9.404932022094727
    10. '):' → logprob: -10.529932022094727

Token 242: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.04507412761449814
    2. 'for' (adapté à ' for') → logprob: -3.420074224472046
    3. '   ' → logprob: -4.545073986053467
    4. '       ' → logprob: -7.420073986053467
    5. '    ' → logprob: -9.170074462890625
    6. ' j' → logprob: -10.795074462890625
    7. ' ' → logprob: -11.670074462890625
    8. '           ' → logprob: -12.920074462890625
    9. '  ' → logprob: -13.170074462890625
    10. ' k' → logprob: -13.420074462890625

Token 243: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.25192946195602417
    2. 'j' → logprob: -1.501929521560669
    3. '	j' → logprob: -15.25192928314209
    4. ' multiple' → logprob: -16.376930236816406
    5. 'multiple' → logprob: -19.126930236816406
    6. '   ' → logprob: -19.501930236816406
    7. ' ' → logprob: -19.751930236816406
    8. ' multiples' → logprob: -20.126930236816406
    9. '$j' → logprob: -20.376930236816406
    10. '_j' → logprob: -20.501930236816406

Token 244: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006009256467223167
    2. 'in' → logprob: -5.131009101867676
    3. ' i' → logprob: -9.756009101867676
    4. '	in' → logprob: -12.006009101867676
    5. '=' → logprob: -12.381009101867676
    6. ' =' → logprob: -12.631009101867676
    7. ' ' → logprob: -13.006009101867676
    8. 'i' → logprob: -13.756009101867676
    9. '<|end|>' → logprob: -13.881009101867676
    10. '=i' → logprob: -14.131009101867676

Token 245: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03835025429725647
    2. ' range' → logprob: -3.2883503437042236
    3. 'i' → logprob: -8.163350105285645
    4. ' i' → logprob: -11.038350105285645
    5. '   ' → logprob: -11.913350105285645
    6. '(range' → logprob: -14.788350105285645
    7. '	range' → logprob: -15.038350105285645
    8. ' ' → logprob: -15.913350105285645
    9. '(i' → logprob: -15.913350105285645
    10. '  ' → logprob: -17.41335105895996

Token 246: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.5048530030981055e-06
    2. '(' → logprob: -13.500001907348633
    3. 'i' → logprob: -16.500001907348633
    4. ' i' → logprob: -18.125001907348633
    5. ' (' → logprob: -18.500001907348633
    6. '(j' → logprob: -19.125001907348633
    7. '[i' → logprob: -19.500001907348633
    8. '(
' → logprob: -20.125001907348633
    9. '	i' → logprob: -20.250001907348633
    10. '(ii' → logprob: -20.500001907348633

Token 247: '*i' (ID: 51147)
  Prédit: '*i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.06429607421159744
    2. '*' → logprob: -2.814296007156372
    3. ' *' → logprob: -6.064296245574951
    4. 'i' → logprob: -13.689295768737793
    5. '*j' → logprob: -15.564295768737793
    6. '   ' → logprob: -17.93929672241211
    7. ' i' → logprob: -18.06429672241211
    8. ' ' → logprob: -18.43929672241211
    9. ',' → logprob: -19.31429672241211
    10. '*,' → logprob: -19.56429672241211

Token 248: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013902351493015885
    2. ',max' → logprob: -6.62639045715332
    3. ' ,' → logprob: -9.87639045715332
    4. ',j' → logprob: -12.12639045715332
    5. ',len' → logprob: -12.25139045715332
    6. ',i' → logprob: -13.37639045715332
    7. 'max' → logprob: -15.00139045715332
    8. ',num' → logprob: -15.12639045715332
    9. ',n' → logprob: -15.50139045715332
    10. ',m' → logprob: -15.50139045715332

Token 249: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0004307884373702109
    2. ' max' → logprob: -7.750430583953857
    3. '(max' → logprob: -16.250431060791016
    4. '	max' → logprob: -19.500431060791016
    5. '   ' → logprob: -19.875431060791016
    6. ',max' → logprob: -20.625431060791016
    7. '[max' → logprob: -20.625431060791016
    8. ' ' → logprob: -22.000431060791016
    9. '.max' → logprob: -22.625431060791016
    10. '=max' → logprob: -23.000431060791016

Token 250: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -1.1756367712223437e-05
    2. 'n' → logprob: -11.750011444091797
    3. 'max' → logprob: -13.250011444091797
    4. '_max' → logprob: -14.125011444091797
    5. '+' → logprob: -14.500011444091797
    6. '_i' → logprob: -15.250011444091797
    7. '_j' → logprob: -15.875011444091797
    8. ')' → logprob: -16.375011444091797
    9. '+n' → logprob: -17.000011444091797
    10. 'N' → logprob: -17.250011444091797

Token 251: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005233882926404476
    2. ' +' → logprob: -5.2552337646484375
    3. '+
' → logprob: -16.630233764648438
    4. ' plus' → logprob: -18.505233764648438
    5. '
' → logprob: -19.255233764648438
    6. '+,' → logprob: -20.130233764648438
    7. '＋' → logprob: -20.130233764648438
    8. ',' → logprob: -20.255233764648438
    9. '+j' → logprob: -20.505233764648438
    10. 'plus' → logprob: -20.630233764648438

Token 252: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -19.6250057220459
    4. '
' → logprob: -20.1250057220459
    5. '```' → logprob: -20.2500057220459
    6. '  ' → logprob: -20.8750057220459
    7. ')' → logprob: -20.8750057220459
    8. '

' → logprob: -21.1875057220459
    9. '۱' → logprob: -21.5000057220459
    10. '१' → logprob: -21.6875057220459

Token 253: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -17.875001907348633
    4. '
' → logprob: -19.500001907348633
    5. ')' → logprob: -19.875001907348633
    6. '```' → logprob: -20.187501907348633
    7. '  ' → logprob: -20.250001907348633
    8. '

' → logprob: -20.312501907348633
    9. '１' → logprob: -20.375001907348633
    10. '১' → logprob: -20.625001907348633

Token 254: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0036478189285844564
    2. ',i' → logprob: -5.628647804260254
    3. ' ,' → logprob: -10.378647804260254
    4. ',j' → logprob: -11.128647804260254
    5. '(i' → logprob: -14.503647804260254
    6. '   ' → logprob: -15.003647804260254
    7. ',
' → logprob: -15.503647804260254
    8. '```' → logprob: -15.503647804260254
    9. 'i' → logprob: -16.00364875793457
    10. ',k' → logprob: -16.37864875793457

Token 255: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00020354038861114532
    2. ' i' → logprob: -8.500203132629395
    3. '   ' → logprob: -17.62520408630371
    4. '	i' → logprob: -18.50020408630371
    5. ')i' → logprob: -18.87520408630371
    6. ')' → logprob: -19.12520408630371
    7. '```' → logprob: -20.37520408630371
    8. ' ' → logprob: -21.00020408630371
    9. '(i' → logprob: -21.37520408630371
    10. '{i' → logprob: -21.62520408630371

Token 256: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08985525369644165
    2. '):
' → logprob: -2.464855194091797
    3. ',i' → logprob: -8.089855194091797
    4. ',' → logprob: -8.214855194091797
    5. '*i' → logprob: -9.214855194091797
    6. '):
' → logprob: -9.964855194091797
    7. ')' → logprob: -9.964855194091797
    8. '+i' → logprob: -10.089855194091797
    9. ':' → logprob: -10.589855194091797
    10. 'i' → logprob: -11.089855194091797

Token 257: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.027776548638939857
    2. ' is' → logprob: -3.7777764797210693
    3. 'is' → logprob: -5.402776718139648
    4. '           ' → logprob: -12.152776718139648
    5. '                   ' → logprob: -12.402776718139648
    6. '                
' → logprob: -13.027776718139648
    7. '   ' → logprob: -13.777776718139648
    8. '                       ' → logprob: -13.902776718139648
    9. '              ' → logprob: -14.027776718139648
    10. '                ' → logprob: -14.527776718139648

Token 258: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' (adapté à ' is') → logprob: -0.062274642288684845
    2. ' is' → logprob: -2.812274694442749
    3. '                   ' → logprob: -8.187274932861328
    4. '               ' → logprob: -10.562274932861328
    5. '   ' → logprob: -13.312274932861328
    6. '                       ' → logprob: -14.812274932861328
    7. '	is' → logprob: -15.062274932861328
    8. '           ' → logprob: -15.437274932861328
    9. '                  ' → logprob: -15.562274932861328
    10. '                ' → logprob: -16.687274932861328

Token 259: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -5.3596853831550106e-05
    2. 'prime' → logprob: -9.875053405761719
    3. '_' → logprob: -13.500053405761719
    4. 'is' → logprob: -15.500053405761719
    5. '_pr' → logprob: -15.625053405761719
    6. 'pr' → logprob: -17.25005340576172
    7. 'Prime' → logprob: -17.37505340576172
    8. '\' → logprob: -18.12505340576172
    9. '[' → logprob: -18.25005340576172
    10. '_prior' → logprob: -18.37505340576172

Token 260: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -9.372294698550832e-06
    2. '[' → logprob: -11.625009536743164
    3. '[i' → logprob: -14.750009536743164
    4. ' [' → logprob: -17.875009536743164
    5. '[js' → logprob: -18.125009536743164
    6. '[
' → logprob: -18.625009536743164
    7. '```' → logprob: -18.750009536743164
    8. '][' → logprob: -19.375009536743164
    9. 'j' → logprob: -19.750009536743164
    10. '[J' → logprob: -20.125009536743164

Token 261: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00021617230959236622
    2. ']=' → logprob: -8.625216484069824
    3. '=' → logprob: -10.250216484069824
    4. ' ]' → logprob: -14.250216484069824
    5. ' =' → logprob: -15.625216484069824
    6. '[' → logprob: -15.875216484069824
    7. ')' → logprob: -16.000215530395508
    8. ']
' → logprob: -16.625215530395508
    9. '=False' → logprob: -19.375215530395508
    10. 'False' → logprob: -20.625215530395508

Token 262: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011059258133172989
    2. ' =' → logprob: -4.511059284210205
    3. '=False' → logprob: -11.386058807373047
    4. ']=' → logprob: -17.136058807373047
    5. ']' → logprob: -17.511058807373047
    6. '=True' → logprob: -17.636058807373047
    7. 'False' → logprob: -18.261058807373047
    8. '=
' → logprob: -18.761058807373047
    9. '＝' → logprob: -19.511058807373047
    10. '[' → logprob: -20.386058807373047

Token 263: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.306760805164231e-05
    2. ' False' → logprob: -11.25001335144043
    3. '(False' → logprob: -21.37501335144043
    4. 'F' → logprob: -22.00001335144043
    5. '=False' → logprob: -22.50001335144043
    6. '   ' → logprob: -23.37501335144043
    7. 'false' → logprob: -24.00001335144043
    8. 'True' → logprob: -24.75001335144043
    9. '.False' → logprob: -24.75001335144043
    10. '_false' → logprob: -25.00001335144043

Token 264: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14564692974090576
    2. '
' → logprob: -2.1456470489501953
    3. '    
' → logprob: -4.145647048950195
    4. 'return' → logprob: -7.395647048950195
    5. '  
' → logprob: -7.895647048950195
    6. 'def' → logprob: -7.895647048950195
    7. '\n' → logprob: -8.520647048950195
    8. '<|end|>' → logprob: -8.520647048950195
    9. '
' → logprob: -8.645647048950195
    10. '

' → logprob: -9.145647048950195

Token 265: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005494566285051405
    2. '
' → logprob: -8.37554931640625
    3. 'return' → logprob: -8.50054931640625
    4. '    
' → logprob: -9.25054931640625
    5. ' return' → logprob: -11.37554931640625
    6. '	return' → logprob: -13.00054931640625
    7. 'def' → logprob: -13.25054931640625
    8. '       ' → logprob: -13.50054931640625
    9. '```' → logprob: -14.50054931640625
    10. '  
' → logprob: -14.87554931640625

Token 266: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.10081039369106293
    2. '   ' → logprob: -2.3508102893829346
    3. ' return' → logprob: -7.475810527801514
    4. '
' → logprob: -10.600810050964355
    5. 'def' → logprob: -12.225810050964355
    6. '    
' → logprob: -13.100810050964355
    7. '	return' → logprob: -13.225810050964355
    8. ' ' → logprob: -13.600810050964355
    9. '```' → logprob: -14.100810050964355
    10. '       ' → logprob: -14.850810050964355

Token 267: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.01814994215965271
    2. ' is' → logprob: -4.0181498527526855
    3. '```' → logprob: -19.643150329589844
    4. '(is' → logprob: -19.768150329589844
    5. '	is' → logprob: -20.643150329589844
    6. '[' → logprob: -21.268150329589844
    7. '`' → logprob: -21.643150329589844
    8. '   ' → logprob: -22.518150329589844
    9. ' ' → logprob: -22.643150329589844
    10. '_is' → logprob: -23.143150329589844

Token 268: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -8.554343366995454e-05
    2. 'prime' → logprob: -9.375085830688477
    3. 'Prime' → logprob: -15.875085830688477
    4. '_' → logprob: -16.250085830688477
    5. '_pr' → logprob: -16.250085830688477
    6. 'is' → logprob: -16.500085830688477
    7. 'r' → logprob: -17.500085830688477
    8. '\' → logprob: -17.875085830688477
    9. 't' → logprob: -18.000085830688477
    10. 'pr' → logprob: -18.375085830688477

Token 269: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03140131011605263
    2. '
' → logprob: -3.7814013957977295
    3. 'for' → logprob: -5.03140115737915
    4. '

' → logprob: -7.53140115737915
    5. '```' → logprob: -7.65640115737915
    6. '  
' → logprob: -8.406401634216309
    7. '    
' → logprob: -8.656401634216309
    8. '<|end|>' → logprob: -9.656401634216309
    9. ' for' → logprob: -10.406401634216309
    10. '' → logprob: -10.906401634216309

Token 270: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.014577476307749748
    2. 'def' → logprob: -4.264577388763428
    3. 'max' → logprob: -8.514577865600586
    4. '
' → logprob: -9.139577865600586
    5. ' for' → logprob: -9.389577865600586
    6. '```' → logprob: -11.014577865600586
    7. '

' → logprob: -13.014577865600586
    8. 'while' → logprob: -13.764577865600586
    9. '    
' → logprob: -14.014577865600586
    10. '  
' → logprob: -14.639577865600586

Token 271: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.02956579625606537
    2. 'main' → logprob: -3.9045658111572266
    3. ' count' → logprob: -5.029565811157227
    4. 'pair' → logprob: -6.279565811157227
    5. ' main' → logprob: -8.029565811157227
    6. 'process' → logprob: -9.029565811157227
    7. 'solve' → logprob: -9.279565811157227
    8. 'pairs' → logprob: -11.154565811157227
    9. ' pair' → logprob: -12.404565811157227
    10. ' solve' → logprob: -12.779565811157227

Token 272: '_prime' (ID: 98616)
  Prédit: '_pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -0.020180143415927887
    2. '_pair' → logprob: -4.2701802253723145
    3. '_prime' → logprob: -5.3951802253723145
    4. '_pr' → logprob: -6.6451802253723145
    5. '_' → logprob: -9.645179748535156
    6. '_p' → logprob: -10.645179748535156
    7. '(_' → logprob: -10.770179748535156
    8. '(' → logprob: -10.770179748535156
    9. 'pairs' → logprob: -11.020179748535156
    10. '_double' → logprob: -13.020179748535156

Token 273: '_pairs' (ID: 90005)
  Prédit: '_pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -0.0002811199810821563
    2. '_pair' → logprob: -8.87528133392334
    3. 'pairs' → logprob: -8.87528133392334
    4. 's' → logprob: -14.50028133392334
    5. 'pair' → logprob: -14.50028133392334
    6. ' pairs' → logprob: -15.12528133392334
    7. '_' → logprob: -16.375280380249023
    8. 'Pairs' → logprob: -16.625280380249023
    9. '_pal' → logprob: -18.000280380249023
    10. '_p' → logprob: -18.125280380249023

Token 274: '(n' (ID: 2406)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.06722597032785416
    2. '(max' → logprob: -2.817225933074951
    3. '(n' → logprob: -5.567225933074951
    4. '(' → logprob: -6.567225933074951
    5. '(num' → logprob: -11.69222640991211
    6. ' (' → logprob: -12.31722640991211
    7. '(MAX' → logprob: -13.31722640991211
    8. '(input' → logprob: -14.06722640991211
    9. '(Max' → logprob: -14.94222640991211
    10. '():' → logprob: -15.06722640991211

Token 275: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00022952310973778367
    2. '):
' → logprob: -8.500229835510254
    3. ')' → logprob: -10.875229835510254
    4. ' ):' → logprob: -12.375229835510254
    5. ':' → logprob: -13.250229835510254
    6. '):
' → logprob: -14.500229835510254
    7. '(n' → logprob: -14.875229835510254
    8. 'n' → logprob: -16.625228881835938
    9. '}:' → logprob: -17.375228881835938
    10. '   ' → logprob: -17.500228881835938

Token 276: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.2813859283924103
    2. 'is' → logprob: -1.406385898590088
    3. ' primes' → logprob: -8.781386375427246
    4. 'pr' → logprob: -10.281386375427246
    5. '   ' → logprob: -10.781386375427246
    6. ')' → logprob: -11.406386375427246
    7. 'prime' → logprob: -12.656386375427246
    8. ')is' → logprob: -12.781386375427246
    9. ' sieve' → logprob: -13.281386375427246
    10. '):
' → logprob: -13.406386375427246

Token 277: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.005241821985691786
    2. '_' → logprob: -5.255241870880127
    3. ' _' → logprob: -12.255241394042969
    4. '_pr' → logprob: -13.505241394042969
    5. '_p' → logprob: -14.255241394042969
    6. ')_' → logprob: -14.880241394042969
    7. 'prime' → logprob: -15.505241394042969
    8. '_pal' → logprob: -16.00524139404297
    9. '_pair' → logprob: -16.25524139404297
    10. ''_' → logprob: -16.63024139404297

Token 278: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0015241486253216863
    2. '):
' → logprob: -6.501523971557617
    3. '):
' → logprob: -11.501523971557617
    4. ')' → logprob: -11.626523971557617
    5. ' ):' → logprob: -13.126523971557617
    6. '):

' → logprob: -15.126523971557617
    7. ':' → logprob: -15.626523971557617
    8. '   ' → logprob: -16.501523971557617
    9. '[]):' → logprob: -16.876523971557617
    10. ')):' → logprob: -17.251523971557617

Token 279: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.225939872208983e-05
    2. 'count' → logprob: -11.000032424926758
    3. '```' → logprob: -12.500032424926758
    4. ' count' → logprob: -12.750032424926758
    5. 'n' → logprob: -13.125032424926758
    6. '	count' → logprob: -13.375032424926758
    7. '    
' → logprob: -13.875032424926758
    8. 'counter' → logprob: -14.500032424926758
    9. '  ' → logprob: -14.500032424926758
    10. 'pairs' → logprob: -14.750032424926758

Token 280: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020820386707782745
    2. ' count' → logprob: -4.645820617675781
    3. 'count' → logprob: -4.645820617675781
    4. ' result' → logprob: -7.770820617675781
    5. ' counter' → logprob: -8.395820617675781
    6. 'result' → logprob: -8.520820617675781
    7. '    
' → logprob: -8.645820617675781
    8. 'counter' → logprob: -9.020820617675781
    9. 'pairs' → logprob: -10.020820617675781
    10. ' pairs' → logprob: -10.145820617675781

Token 281: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2197563350200653
    2. ' count' → logprob: -2.2197563648223877
    3. 'count' → logprob: -2.4697563648223877
    4. ' counter' → logprob: -6.469756126403809
    5. 'counter' → logprob: -6.844756126403809
    6. 'def' → logprob: -7.719756126403809
    7. ' result' → logprob: -8.219756126403809
    8. 'cnt' → logprob: -8.719756126403809
    9. 'result' → logprob: -8.844756126403809
    10. ' ' → logprob: -9.594756126403809

Token 282: ' Comp' (ID: 5211)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0016267409082502127
    2. ' count' → logprob: -7.126626968383789
    3. 'def' → logprob: -7.751626968383789
    4. 'counter' → logprob: -8.501626968383789
    5. '   ' → logprob: -8.751626968383789
    6. 'result' → logprob: -10.751626968383789
    7. 'cnt' → logprob: -12.626626968383789
    8. 'counts' → logprob: -12.876626968383789
    9. 'comp' → logprob: -13.376626968383789
    10. 'total' → logprob: -14.001626968383789

Token 283: 'te' (ID: 411)
  Prédit: 'te'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'te' → logprob: -0.0047367531806230545
    2. 't' → logprob: -5.50473690032959
    3. 'tte' → logprob: -8.50473690032959
    4. 'ter' → logprob: -8.62973690032959
    5. '   ' → logprob: -9.00473690032959
    6. '#' → logprob: -10.75473690032959
    7. 'té' → logprob: -11.12973690032959
    8. '
' → logprob: -11.25473690032959
    9. ' te' → logprob: -11.37973690032959
    10. 'ute' → logprob: -11.50473690032959

Token 284: ' le' (ID: 505)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.840325653553009
    2. '_pairs' → logprob: -0.965325653553009
    3. 'pairs' → logprob: -3.0903255939483643
    4. '(' → logprob: -3.0903255939483643
    5. ' pairs' → logprob: -3.5903255939483643
    6. ' le' → logprob: -4.090325832366943
    7. 'le' → logprob: -4.215325832366943
    8. '=' → logprob: -4.465325832366943
    9. '  ' → logprob: -5.715325832366943
    10. 'nombre' → logprob: -5.840325832366943

Token 285: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.08493704348802567
    2. ' nombre' → logprob: -2.58493709564209
    3. 's' → logprob: -6.45993709564209
    4. 'pairs' → logprob: -6.45993709564209
    5. 'pair' → logprob: -7.45993709564209
    6. 'count' → logprob: -7.58493709564209
    7. 'sum' → logprob: -7.95993709564209
    8. 'n' → logprob: -7.95993709564209
    9. '=' → logprob: -8.20993709564209
    10. ' pairs' → logprob: -8.95993709564209

Token 286: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.01930401287972927
    2. 'de' → logprob: -4.644303798675537
    3. '_de' → logprob: -5.144303798675537
    4. '   ' → logprob: -6.394303798675537
    5. '_' → logprob: -7.394303798675537
    6. ' =' → logprob: -7.769303798675537
    7. ' ' → logprob: -7.894303798675537
    8. '=' → logprob: -8.769304275512695
    9. 'def' → logprob: -9.269304275512695
    10. '_pairs' → logprob: -9.394304275512695

Token 287: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6604104042053223
    2. 'pairs' → logprob: -0.7854104042053223
    3. ' pairs' → logprob: -5.035410404205322
    4. ' p' → logprob: -5.285410404205322
    5. 'i' → logprob: -5.285410404205322
    6. 'prime' → logprob: -5.535410404205322
    7. 'pair' → logprob: -5.535410404205322
    8. 'pa' → logprob: -6.660410404205322
    9. ' paire' → logprob: -8.410409927368164
    10. ' i' → logprob: -8.410409927368164

Token 288: 'aires' (ID: 8507)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.075515866279602
    2. 'aires' → logprob: -1.325515866279602
    3. 'airs' → logprob: -1.325515866279602
    4. 'a' → logprob: -3.0755157470703125
    5. 'i' → logprob: -3.9505157470703125
    6. ' p' → logprob: -4.0755157470703125
    7. 'air' → logprob: -4.7005157470703125
    8. 'pairs' → logprob: -5.2005157470703125
    9. 'aire' → logprob: -5.3255157470703125
    10. ' i' → logprob: -5.7005157470703125

Token 289: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.1142093613743782
    2. '(' → logprob: -2.6142094135284424
    3. '(i' → logprob: -3.3642094135284424
    4. '(n' → logprob: -10.114209175109863
    5. ' ' → logprob: -10.864209175109863
    6. ' de' → logprob: -10.989209175109863
    7. '(
' → logprob: -11.739209175109863
    8. ' i' → logprob: -12.364209175109863
    9. ' `(' → logprob: -12.614209175109863
    10. ' (
' → logprob: -12.864209175109863

Token 290: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004370305687189102
    2. ' i' → logprob: -5.504370212554932
    3. '(i' → logprob: -9.37937068939209
    4. ')' → logprob: -9.37937068939209
    5. '   ' → logprob: -9.62937068939209
    6. 'n' → logprob: -10.50437068939209
    7. ' ' → logprob: -11.87937068939209
    8. ' (' → logprob: -12.12937068939209
    9. '  ' → logprob: -12.37937068939209
    10. ')i' → logprob: -12.37937068939209

Token 291: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001519503304734826
    2. ' ,' → logprob: -6.501519680023193
    3. ')' → logprob: -12.126519203186035
    4. ',i' → logprob: -12.876519203186035
    5. '=' → logprob: -13.001519203186035
    6. 'def' → logprob: -13.501519203186035
    7. 's' → logprob: -13.501519203186035
    8. '   ' → logprob: -14.376519203186035
    9. ',
' → logprob: -14.376519203186035
    10. '  ' → logprob: -14.876519203186035

Token 292: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5906081199645996
    2. ' n' → logprob: -0.8406081199645996
    3. 'i' → logprob: -5.3406081199646
    4. 'N' → logprob: -5.9656081199646
    5. ' i' → logprob: -6.0906081199646
    6. ' N' → logprob: -6.8406081199646
    7. 'j' → logprob: -7.0906081199646
    8. ' ' → logprob: -7.0906081199646
    9. ' j' → logprob: -7.4656081199646
    10. '  ' → logprob: -7.7156081199646

Token 293: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.32759198546409607
    2. '-i' → logprob: -1.8275920152664185
    3. '-' → logprob: -2.202591896057129
    4. ')' → logprob: -5.702591896057129
    5. '+' → logprob: -5.952591896057129
    6. '//' → logprob: -6.577591896057129
    7. ',' → logprob: -8.202591896057129
    8. '   ' → logprob: -8.827591896057129
    9. ' +' → logprob: -9.452591896057129
    10. ' //' → logprob: -9.702591896057129

Token 294: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -9.698698704596609e-05
    2. ' i' → logprob: -9.250097274780273
    3. 'n' → logprob: -15.250097274780273
    4. '(i' → logprob: -15.500097274780273
    5. ')' → logprob: -16.000097274780273
    6. '	i' → logprob: -16.125097274780273
    7. '   ' → logprob: -16.250097274780273
    8. '```' → logprob: -16.875097274780273
    9. ' ' → logprob: -17.250097274780273
    10. '
' → logprob: -17.500097274780273

Token 295: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004085758700966835
    2. ' +' → logprob: -5.504085540771484
    3. ')' → logprob: -11.879085540771484
    4. '```' → logprob: -15.879085540771484
    5. '   ' → logprob: -16.504085540771484
    6. '1' → logprob: -16.754085540771484
    7. 'plus' → logprob: -17.254085540771484
    8. '+)' → logprob: -17.254085540771484
    9. '-' → logprob: -17.254085540771484
    10. ' ' → logprob: -17.504085540771484

Token 296: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003902775060851127
    2. ' ' → logprob: -7.87539005279541
    3. '2' → logprob: -11.87539005279541
    4. ')' → logprob: -12.87539005279541
    5. 'i' → logprob: -15.25039005279541
    6. '```' → logprob: -15.37539005279541
    7. '   ' → logprob: -15.75039005279541
    8. '  ' → logprob: -16.875391006469727
    9. ' )' → logprob: -17.875391006469727
    10. '

' → logprob: -18.125391006469727

Token 297: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.666993507067673e-05
    2. ' ' → logprob: -10.625036239624023
    3. '2' → logprob: -11.375036239624023
    4. 'i' → logprob: -14.875036239624023
    5. '0' → logprob: -15.500036239624023
    6. ')' → logprob: -15.750036239624023
    7. '```' → logprob: -17.250036239624023
    8. '   ' → logprob: -17.875036239624023
    9. ' i' → logprob: -19.062536239624023
    10. '

' → logprob: -19.312536239624023

Token 298: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00023858259373810142
    2. '):' → logprob: -8.625238418579102
    3. ' )' → logprob: -9.875238418579102
    4. '):
' → logprob: -12.375238418579102
    5. ')
' → logprob: -13.500238418579102
    6. '   ' → logprob: -14.250238418579102
    7. '')' → logprob: -15.000238418579102
    8. ')`' → logprob: -15.375238418579102
    9. 'def' → logprob: -15.625238418579102
    10. ' ' → logprob: -16.2502384185791

Token 299: ' où' (ID: 15113)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1177787184715271
    2. ':' → logprob: -2.242778778076172
    3. ' for' → logprob: -7.242778778076172
    4. ',' → logprob: -7.367778778076172
    5. ')' → logprob: -7.367778778076172
    6. '):' → logprob: -7.617778778076172
    7. '  ' → logprob: -7.867778778076172
    8. ' :' → logprob: -8.117778778076172
    9. ':
' → logprob: -8.242778778076172
    10. 'def' → logprob: -8.742778778076172

Token 300: ' i' (ID: 575)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.4328416585922241
    2. ' is' → logprob: -1.3078416585922241
    3. 'i' → logprob: -3.3078417778015137
    4. ' i' → logprob: -3.3078417778015137
    5. '1' → logprob: -5.932841777801514
    6. '0' → logprob: -6.057841777801514
    7. ' ' → logprob: -6.182841777801514
    8. ' both' → logprob: -7.557841777801514
    9. 'both' → logprob: -9.307841300964355
    10. '   ' → logprob: -10.307841300964355

Token 301: ' et' (ID: 859)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10663927346467972
    2. ')' → logprob: -3.1066393852233887
    3. ' est' → logprob: -4.106639385223389
    4. 'in' → logprob: -4.981639385223389
    5. ',' → logprob: -4.981639385223389
    6. ' i' → logprob: -5.481639385223389
    7. '=' → logprob: -5.731639385223389
    8. ' is' → logprob: -6.231639385223389
    9. ' ,' → logprob: -6.356639385223389
    10. ' en' → logprob: -6.481639385223389

Token 302: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0600208044052124
    2. ' n' → logprob: -1.1850208044052124
    3. 'is' → logprob: -1.5600208044052124
    4. ' is' → logprob: -2.185020923614502
    5. '(n' → logprob: -3.935020923614502
    6. ' (' → logprob: -5.310020923614502
    7. '   ' → logprob: -8.435020446777344
    8. '(' → logprob: -8.435020446777344
    9. '(is' → logprob: -9.310020446777344
    10. '    ' → logprob: -10.310020446777344

Token 303: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.647495687007904
    2. '-i' → logprob: -1.0224957466125488
    3. '-' → logprob: -2.147495746612549
    4. ')' → logprob: -10.14749526977539
    5. '   ' → logprob: -10.39749526977539
    6. 'i' → logprob: -10.89749526977539
    7. ' are' → logprob: -11.02249526977539
    8. '#' → logprob: -11.64749526977539
    9. ' sont' → logprob: -11.89749526977539
    10. '```' → logprob: -12.39749526977539

Token 304: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0013263145228847861
    2. ' i' → logprob: -6.626326084136963
    3. '	i' → logprob: -16.126325607299805
    4. '_i' → logprob: -16.501325607299805
    5. '<|end|>' → logprob: -16.501325607299805
    6. ' ' → logprob: -16.751325607299805
    7. '   ' → logprob: -17.001325607299805
    8. '(i' → logprob: -17.751325607299805
    9. '```' → logprob: -18.126325607299805
    10. ')i' → logprob: -18.251325607299805

Token 305: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004137768410146236
    2. ' +' → logprob: -5.504137992858887
    3. '   ' → logprob: -10.504137992858887
    4. '```' → logprob: -11.379137992858887
    5. '+i' → logprob: -11.629137992858887
    6. '
' → logprob: -12.879137992858887
    7. ' are' → logprob: -13.504137992858887
    8. '+
' → logprob: -13.504137992858887
    9. ' ' → logprob: -13.754137992858887
    10. '  ' → logprob: -14.254137992858887

Token 306: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002806894714012742
    2. ' ' → logprob: -5.877806663513184
    3. '0' → logprob: -14.127806663513184
    4. '2' → logprob: -14.252806663513184
    5. '```' → logprob: -14.627806663513184
    6. 'i' → logprob: -16.5028076171875
    7. '   ' → logprob: -16.6278076171875
    8. '  ' → logprob: -16.7528076171875
    9. ' ' → logprob: -18.0028076171875
    10. '`' → logprob: -18.5653076171875

Token 307: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001415618316968903
    2. ' ' → logprob: -8.875141143798828
    3. '0' → logprob: -13.625141143798828
    4. '```' → logprob: -15.375141143798828
    5. '   ' → logprob: -16.125141143798828
    6. '2' → logprob: -16.250141143798828
    7. '  ' → logprob: -16.750141143798828
    8. 'i' → logprob: -17.375141143798828
    9. '`' → logprob: -18.125141143798828
    10. '    ' → logprob: -18.187641143798828

Token 308: ' sont' (ID: 5242)
  Prédit: ' sont'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sont' → logprob: -0.26488736271858215
    2. ')' → logprob: -1.6398873329162598
    3. 's' → logprob: -3.3898873329162598
    4. ' are' → logprob: -5.63988733291626
    5. '   ' → logprob: -8.514887809753418
    6. 'are' → logprob: -8.514887809753418
    7. 'ont' → logprob: -8.764887809753418
    8. '=' → logprob: -8.764887809753418
    9. ' )' → logprob: -8.889887809753418
    10. '```' → logprob: -9.389887809753418

Token 309: ' premiers' (ID: 59140)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.7982667088508606
    2. 'pr' → logprob: -1.1732666492462158
    3. ' premiers' → logprob: -2.173266649246216
    4. ' tous' → logprob: -3.173266649246216
    5. ' primes' → logprob: -3.173266649246216
    6. 't' → logprob: -3.548266649246216
    7. 'prime' → logprob: -5.423266887664795
    8. ' premi' → logprob: -6.423266887664795
    9. 'prima' → logprob: -6.423266887664795
    10. 'prim' → logprob: -6.923266887664795

Token 310: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.44142457842826843
    2. '   ' → logprob: -1.0664246082305908
    3. '):' → logprob: -4.941424369812012
    4. ',' → logprob: -6.441424369812012
    5. ':
' → logprob: -6.566424369812012
    6. ')' → logprob: -7.066424369812012
    7. ' :' → logprob: -7.816424369812012
    8. '  ' → logprob: -8.066424369812012
    9. '.' → logprob: -8.191424369812012
    10. '):
' → logprob: -9.191424369812012

Token 311: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.4153549020411447e-05
    2. '
' → logprob: -10.75002384185791
    3. '    
' → logprob: -13.37502384185791
    4. 'n' → logprob: -14.62502384185791
    5. 'def' → logprob: -14.62502384185791
    6. '```' → logprob: -15.87502384185791
    7. 'count' → logprob: -17.375024795532227
    8. '   
' → logprob: -17.375024795532227
    9. '       ' → logprob: -17.625024795532227
    10. '  ' → logprob: -17.750024795532227

Token 312: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.856408536899835e-05
    2. '
' → logprob: -11.000028610229492
    3. '    
' → logprob: -12.500028610229492
    4. 'def' → logprob: -12.625028610229492
    5. '```' → logprob: -13.000028610229492
    6. 'n' → logprob: -13.750028610229492
    7. 'count' → logprob: -13.875028610229492
    8. ' count' → logprob: -15.750028610229492
    9. '       ' → logprob: -16.625028610229492
    10. ' for' → logprob: -16.875028610229492

Token 313: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001533547299914062
    2. 'count' → logprob: -6.501533508300781
    3. ' count' → logprob: -11.126533508300781
    4. 'result' → logprob: -11.376533508300781
    5. 'def' → logprob: -12.751533508300781
    6. 'counter' → logprob: -14.001533508300781
    7. 'cnt' → logprob: -14.501533508300781
    8. ' result' → logprob: -14.876533508300781
    9. '	count' → logprob: -15.626533508300781
    10. 'c' → logprob: -16.25153350830078

Token 314: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.00010783452307805419
    2. '   ' → logprob: -9.625107765197754
    3. ' count' → logprob: -10.500107765197754
    4. 'counter' → logprob: -11.375107765197754
    5. 'result' → logprob: -13.250107765197754
    6. 'cnt' → logprob: -14.750107765197754
    7. 'total' → logprob: -14.875107765197754
    8. 'comp' → logprob: -16.25010871887207
    9. '	count' → logprob: -17.25010871887207
    10. ' ' → logprob: -17.62510871887207

Token 315: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014163628220558167
    2. '=' → logprob: -4.264163494110107
    3. ',' → logprob: -16.889163970947266
    4. '  ' → logprob: -17.889163970947266
    5. '   ' → logprob: -17.889163970947266
    6. ' +=' → logprob: -18.139163970947266
    7. ' ' → logprob: -18.264163970947266
    8. ' ' → logprob: -18.639163970947266
    9. '_' → logprob: -19.014163970947266
    10. ' =
' → logprob: -19.639163970947266

Token 316: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005240872036665678
    2. ' ' → logprob: -5.2552409172058105
    3. ' n' → logprob: -12.380240440368652
    4. 'n' → logprob: -13.130240440368652
    5. '(' → logprob: -14.380240440368652
    6. ' (' → logprob: -15.630240440368652
    7. '   ' → logprob: -16.38024139404297
    8. 'sum' → logprob: -17.00524139404297
    9. '(n' → logprob: -17.63024139404297
    10. ' sum' → logprob: -18.13024139404297

Token 317: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.894790981779806e-05
    2. 'n' → logprob: -10.125048637390137
    3. ' ' → logprob: -11.875048637390137
    4. '(' → logprob: -13.750048637390137
    5. 'sum' → logprob: -14.875048637390137
    6. '(n' → logprob: -15.500048637390137
    7. ' n' → logprob: -16.000049591064453
    8. 'int' → logprob: -17.375049591064453
    9. 'len' → logprob: -18.562549591064453
    10. '```' → logprob: -18.812549591064453

Token 318: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05193779617547989
    2. '   ' → logprob: -3.0519378185272217
    3. ' for' → logprob: -6.051937580108643
    4. '  
' → logprob: -8.0519380569458
    5. '    
' → logprob: -8.3019380569458
    6. 'for' → logprob: -8.5519380569458
    7. ' 
' → logprob: -9.3019380569458
    8. '\n' → logprob: -9.5519380569458
    9. '
' → logprob: -10.5519380569458
    10. '   
' → logprob: -11.4269380569458

Token 319: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13236922025680542
    2. ' for' → logprob: -2.25736927986145
    3. '
' → logprob: -4.132369041442871
    4. ' 
' → logprob: -7.007369041442871
    5. '    
' → logprob: -7.132369041442871
    6. '  
' → logprob: -7.507369041442871
    7. '\n' → logprob: -8.132369041442871
    8. 'for' → logprob: -8.132369041442871
    9. '```' → logprob: -8.757369041442871
    10. '	for' → logprob: -9.257369041442871

Token 320: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00715341093018651
    2. '   ' → logprob: -5.257153511047363
    3. ' for' → logprob: -6.257153511047363
    4. '	for' → logprob: -14.757153511047363
    5. 'n' → logprob: -15.757153511047363
    6. '```' → logprob: -15.757153511047363
    7. ' ' → logprob: -16.132152557373047
    8. '
' → logprob: -16.382152557373047
    9. 'half' → logprob: -16.382152557373047
    10. '  ' → logprob: -17.132152557373047

Token 321: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0336470827460289
    2. 'i' → logprob: -3.408647060394287
    3. '	i' → logprob: -13.908647537231445
    4. ' ' → logprob: -15.658647537231445
    5. ' ' → logprob: -16.033647537231445
    6. '(i' → logprob: -16.783647537231445
    7. '   ' → logprob: -16.908647537231445
    8. 'range' → logprob: -17.158647537231445
    9. '```' → logprob: -17.283647537231445
    10. ' range' → logprob: -17.533647537231445

Token 322: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005273242015391588
    2. 'in' → logprob: -5.255273342132568
    3. ' ' → logprob: -11.00527286529541
    4. '1' → logprob: -12.13027286529541
    5. ' i' → logprob: -12.25527286529541
    6. ',' → logprob: -12.50527286529541
    7. '   ' → logprob: -13.25527286529541
    8. 'i' → logprob: -14.00527286529541
    9. ' ,' → logprob: -14.13027286529541
    10. '```' → logprob: -14.25527286529541

Token 323: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10020763427019119
    2. ' range' → logprob: -2.350207567214966
    3. '1' → logprob: -14.350207328796387
    4. '(range' → logprob: -15.350207328796387
    5. '	range' → logprob: -16.100208282470703
    6. ' ' → logprob: -16.725208282470703
    7. '```' → logprob: -18.600208282470703
    8. 'in' → logprob: -19.475208282470703
    9. '   ' → logprob: -19.600208282470703
    10. ' in' → logprob: -20.100208282470703

Token 324: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0013290488859638572
    2. '1' → logprob: -6.626328945159912
    3. '(n' → logprob: -13.25132942199707
    4. ' ' → logprob: -14.62632942199707
    5. '   ' → logprob: -14.62632942199707
    6. ' (' → logprob: -15.12632942199707
    7. ',' → logprob: -16.75132942199707
    8. '(
' → logprob: -17.37632942199707
    9. '[' → logprob: -17.62632942199707
    10. 'n' → logprob: -17.87632942199707

Token 325: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3544423381972592e-05
    2. 'n' → logprob: -11.62501335144043
    3. ' ' → logprob: -12.37501335144043
    4. '   ' → logprob: -15.50001335144043
    5. '(' → logprob: -15.75001335144043
    6. ' n' → logprob: -18.75001335144043
    7. '```' → logprob: -18.75001335144043
    8. '(n' → logprob: -19.06251335144043
    9. 'int' → logprob: -19.25001335144043
    10. '１' → logprob: -19.37501335144043

Token 326: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001427538663847372
    2. ' ,' → logprob: -9.500143051147461
    3. ',n' → logprob: -9.625143051147461
    4. '   ' → logprob: -14.000143051147461
    5. ',
' → logprob: -14.625143051147461
    6. 'n' → logprob: -14.625143051147461
    7. ' n' → logprob: -18.37514305114746
    8. '1' → logprob: -18.62514305114746
    9. ',

' → logprob: -18.62514305114746
    10. '‌,' → logprob: -18.87514305114746

Token 327: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.05560139939188957
    2. ' n' → logprob: -3.4306013584136963
    3. '(n' → logprob: -3.9306013584136963
    4. ' (' → logprob: -6.180601596832275
    5. '(' → logprob: -11.555601119995117
    6. '   ' → logprob: -12.555601119995117
    7. '	n' → logprob: -13.930601119995117
    8. ' ' → logprob: -15.180601119995117
    9. ')n' → logprob: -15.180601119995117
    10. '((' → logprob: -15.430601119995117

Token 328: '+' (ID: 10)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.14770765602588654
    2. ' //' → logprob: -2.39770770072937
    3. '+' → logprob: -3.27270770072937
    4. ' +' → logprob: -4.772707462310791
    5. '   ' → logprob: -11.27270793914795
    6. ' ' → logprob: -11.89770793914795
    7. '
' → logprob: -12.77270793914795
    8. '):
' → logprob: -12.77270793914795
    9. '#' → logprob: -13.02270793914795
    10. ')' → logprob: -14.77270793914795

Token 329: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7385154428193346e-05
    2. ' ' → logprob: -10.25003719329834
    3. '2' → logprob: -13.25003719329834
    4. '   ' → logprob: -16.250038146972656
    5. '
' → logprob: -17.250038146972656
    6. ')' → logprob: -18.437538146972656
    7. '```' → logprob: -18.750038146972656
    8. '  ' → logprob: -19.125038146972656
    9. '１' → logprob: -19.250038146972656
    10. '):
' → logprob: -19.437538146972656

Token 330: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.03812342509627342
    2. '):' → logprob: -3.288123369216919
    3. '   ' → logprob: -10.03812313079834
    4. '):
' → logprob: -11.03812313079834
    5. ' ):
' → logprob: -11.53812313079834
    6. ')' → logprob: -11.78812313079834
    7. ':' → logprob: -12.66312313079834
    8. ':
' → logprob: -13.91312313079834
    9. ' ):' → logprob: -15.16312313079834
    10. '):

' → logprob: -15.28812313079834

Token 331: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022520762868225574
    2. ' if' → logprob: -7.002252101898193
    3. ' ' → logprob: -7.502252101898193
    4. '<|end|>' → logprob: -7.752252101898193
    5. '   ' → logprob: -8.627251625061035
    6. '    ' → logprob: -9.877251625061035
    7. '        
' → logprob: -10.127251625061035
    8. 'if' → logprob: -11.127251625061035
    9. '      ' → logprob: -11.252251625061035
    10. ' 
' → logprob: -11.377251625061035

Token 332: ' j' (ID: 441)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2858656644821167
    2. ' if' → logprob: -1.5358656644821167
    3. '       ' → logprob: -3.4108657836914062
    4. '   ' → logprob: -8.285865783691406
    5. 'j' (adapté à ' j') → logprob: -9.410865783691406
    6. '	if' → logprob: -11.785865783691406
    7. ' ' → logprob: -12.410865783691406
    8. '    ' → logprob: -13.410865783691406
    9. '+' → logprob: -13.535865783691406
    10. ' j' → logprob: -13.535865783691406

Token 333: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014172375202179
    2. ' =' → logprob: -1.7014172077178955
    3. '=n' → logprob: -12.701416969299316
    4. '=
' → logprob: -14.326416969299316
    5. '=i' → logprob: -15.951416969299316
    6. ' =
' → logprob: -16.201417922973633
    7. ')' → logprob: -16.451417922973633
    8. ',' → logprob: -17.826417922973633
    9. '＝' → logprob: -17.826417922973633
    10. ' ' → logprob: -17.826417922973633

Token 334: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.20141461491584778
    2. ' n' → logprob: -1.7014145851135254
    3. '	n' → logprob: -13.951415061950684
    4. '   ' → logprob: -14.951415061950684
    5. '(n' → logprob: -16.576414108276367
    6. ')n' → logprob: -17.201414108276367
    7. '?n' → logprob: -17.576414108276367
    8. '_n' → logprob: -18.076414108276367
    9. ' ' → logprob: -18.451414108276367
    10. '  ' → logprob: -18.576414108276367

Token 335: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.47410595417022705
    2. ' -' → logprob: -0.974105954170227
    3. '-i' → logprob: -10.474105834960938
    4. ' ' → logprob: -15.099105834960938
    5. '   ' → logprob: -15.474105834960938
    6. '+' → logprob: -15.599105834960938
    7. 'i' → logprob: -17.849105834960938
    8. '  ' → logprob: -18.099105834960938
    9. '```' → logprob: -18.224105834960938
    10. ')' → logprob: -18.349105834960938

Token 336: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.4855663721391466e-05
    2. ' i' → logprob: -11.125015258789062
    3. '   ' → logprob: -19.000015258789062
    4. '	i' → logprob: -19.250015258789062
    5. '*i' → logprob: -19.750015258789062
    6. '[i' → logprob: -19.750015258789062
    7. ' ' → logprob: -19.875015258789062
    8. '(i' → logprob: -20.250015258789062
    9. '_i' → logprob: -21.000015258789062
    10. '<|end|>' → logprob: -21.375015258789062

Token 337: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0031830633524805307
    2. ' +' → logprob: -5.753182888031006
    3. '+i' → logprob: -12.253183364868164
    4. 'i' → logprob: -15.628183364868164
    5. '1' → logprob: -15.878183364868164
    6. '   ' → logprob: -16.878183364868164
    7. '+j' → logprob: -17.253183364868164
    8. ')' → logprob: -17.378183364868164
    9. '0' → logprob: -17.503183364868164
    10. '```' → logprob: -17.628183364868164

Token 338: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001398929744027555
    2. ' ' → logprob: -8.875140190124512
    3. '   ' → logprob: -18.500139236450195
    4. '```' → logprob: -18.875139236450195
    5. '0' → logprob: -19.000139236450195
    6. '  ' → logprob: -21.625139236450195
    7. '`' → logprob: -22.625139236450195
    8. '    ' → logprob: -22.625139236450195
    9. '１' → logprob: -22.750139236450195
    10. '       ' → logprob: -22.750139236450195

Token 339: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.650518920039758e-06
    2. ' ' → logprob: -12.625003814697266
    3. '0' → logprob: -15.375003814697266
    4. '```' → logprob: -17.875003814697266
    5. '   ' → logprob: -18.875003814697266
    6. 'i' → logprob: -19.875003814697266
    7. '１' → logprob: -20.625003814697266
    8. '  ' → logprob: -20.812503814697266
    9. '`' → logprob: -21.375003814697266
    10. '2' → logprob: -21.750003814697266

Token 340: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5271055698394775
    2. '
' → logprob: -1.4021055698394775
    3. '       ' → logprob: -2.0271055698394775
    4. '<|end|>' → logprob: -4.027105331420898
    5. '  
' → logprob: -5.652105331420898
    6. ')' → logprob: -5.902105331420898
    7. '    
' → logprob: -6.277105331420898
    8. ' if' → logprob: -6.652105331420898
    9. ' 
' → logprob: -6.902105331420898
    10. '        
' → logprob: -7.027105331420898

Token 341: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016087667318060994
    2. '   ' → logprob: -6.876608848571777
    3. '<|end|>' → logprob: -7.876608848571777
    4. '        
' → logprob: -10.126608848571777
    5. ' if' → logprob: -10.376608848571777
    6. ' ' → logprob: -10.626608848571777
    7. '```' → logprob: -10.626608848571777
    8. '           ' → logprob: -11.001608848571777
    9. '
' → logprob: -11.501608848571777
    10. '  
' → logprob: -11.626608848571777

Token 342: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.11413926631212234
    2. ' if' → logprob: -2.6141393184661865
    3. '       ' → logprob: -3.3641393184661865
    4. '   ' → logprob: -10.114139556884766
    5. ' ' → logprob: -13.364139556884766
    6. '	if' → logprob: -13.864139556884766
    7. '```' → logprob: -15.614139556884766
    8. '           ' → logprob: -16.114139556884766
    9. '    ' → logprob: -16.364139556884766
    10. '      ' → logprob: -16.864139556884766

Token 343: ' Vér' (ID: 159169)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.019656725227832794
    2. ' if' → logprob: -4.019656658172607
    3. '       ' → logprob: -6.519656658172607
    4. '   ' → logprob: -10.394657135009766
    5. ' ' → logprob: -14.519657135009766
    6. '	if' → logprob: -15.519657135009766
    7. '```' → logprob: -16.019657135009766
    8. '  ' → logprob: -17.394657135009766
    9. '           ' → logprob: -17.644657135009766
    10. '    ' → logprob: -17.644657135009766

Token 344: 'ifier' (ID: 4550)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5724582672119141
    2. 'ifie' → logprob: -0.9474582672119141
    3. 'ifier' → logprob: -3.947458267211914
    4. '   ' → logprob: -4.572458267211914
    5. 'ify' → logprob: -4.947458267211914
    6. 'ifiez' → logprob: -5.197458267211914
    7. 'ifi' → logprob: -5.697458267211914
    8. '       ' → logprob: -6.822458267211914
    9. 'ification' → logprob: -7.447458267211914
    10. 'ifies' → logprob: -8.822458267211914

Token 345: ' que' (ID: 661)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1269996017217636
    2. 'if' → logprob: -2.126999616622925
    3. '   ' → logprob: -10.376999855041504
    4. 'is' → logprob: -11.001999855041504
    5. ' is' → logprob: -11.126999855041504
    6. '       ' → logprob: -12.001999855041504
    7. '    ' → logprob: -14.001999855041504
    8. '	if' → logprob: -14.126999855041504
    9. ' ' → logprob: -14.251999855041504
    10. ' ' → logprob: -15.501999855041504

Token 346: ' les' (ID: 1341)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.00524217588827014
    2. ' is' → logprob: -5.255242347717285
    3. 'i' → logprob: -11.880242347717285
    4. 'j' → logprob: -14.380242347717285
    5. ' i' → logprob: -14.380242347717285
    6. ' ' → logprob: -16.38024139404297
    7. '   ' → logprob: -16.38024139404297
    8. ' j' → logprob: -16.50524139404297
    9. 'if' → logprob: -17.25524139404297
    10. '	is' → logprob: -17.88024139404297

Token 347: ' deux' (ID: 10301)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.019704874604940414
    2. 'i' → logprob: -4.644704818725586
    3. ' is' → logprob: -4.644704818725586
    4. ' i' → logprob: -8.394704818725586
    5. ' ' → logprob: -11.144704818725586
    6. 'j' → logprob: -11.519704818725586
    7. ' two' → logprob: -12.144704818725586
    8. '   ' → logprob: -12.269704818725586
    9. ' deux' → logprob: -12.394704818725586
    10. 'est' → logprob: -12.644704818725586

Token 348: ' nombres' (ID: 76205)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.06163451820611954
    2. 'if' → logprob: -3.1866345405578613
    3. ' is' → logprob: -4.561634540557861
    4. ' if' → logprob: -5.936634540557861
    5. 'i' → logprob: -6.061634540557861
    6. ' are' → logprob: -6.811634540557861
    7. 'pr' → logprob: -7.811634540557861
    8. ' and' → logprob: -8.186634063720703
    9. 'and' → logprob: -8.186634063720703
    10. 'are' → logprob: -8.311634063720703

Token 349: ' dans' (ID: 2671)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05876149237155914
    2. ' sont' → logprob: -3.1837615966796875
    3. ' are' → logprob: -5.5587615966796875
    4. 'i' → logprob: -5.8087615966796875
    5. '<|end|>' → logprob: -6.0587615966796875
    6. ' i' → logprob: -6.1837615966796875
    7. 'are' → logprob: -6.6837615966796875
    8. 'et' → logprob: -7.3087615966796875
    9. 'if' → logprob: -7.6837615966796875
    10. 'pr' → logprob: -7.8087615966796875

Token 350: ' la' (ID: 557)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.11037510633468628
    2. 'i' → logprob: -2.735375165939331
    3. ' is' → logprob: -3.360375165939331
    4. ' i' → logprob: -6.110374927520752
    5. 'range' → logprob: -6.360374927520752
    6. 'l' → logprob: -8.73537540435791
    7. ' range' → logprob: -8.73537540435791
    8. '   ' → logprob: -8.86037540435791
    9. '[i' → logprob: -8.98537540435791
    10. 'j' → logprob: -9.98537540435791

Token 351: ' paire' (ID: 148856)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.44123736023902893
    2. 'if' → logprob: -1.5662373304367065
    3. ' paire' → logprob: -2.441237449645996
    4. 'pa' → logprob: -3.066237449645996
    5. ' if' → logprob: -5.191237449645996
    6. 'p' → logprob: -5.191237449645996
    7. ' pair' → logprob: -6.566237449645996
    8. 'pairs' → logprob: -7.941237449645996
    9. 'paired' → logprob: -8.066237449645996
    10. 'range' → logprob: -8.066237449645996

Token 352: ' sont' (ID: 5242)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.350931316614151
    2. ' if' → logprob: -1.8509312868118286
    3. ' sont' → logprob: -2.850931406021118
    4. ' are' → logprob: -3.725931406021118
    5. '   ' → logprob: -4.225931167602539
    6. 's' → logprob: -4.350931167602539
    7. 'if' → logprob: -4.350931167602539
    8. ' and' → logprob: -5.850931167602539
    9. ' et' → logprob: -6.100931167602539
    10. '<|end|>' → logprob: -6.475931167602539

Token 353: ' premiers' (ID: 59140)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.3429001271724701
    2. 'pr' → logprob: -1.3429001569747925
    3. ' premiers' → logprob: -3.967900037765503
    4. 'prime' → logprob: -5.217900276184082
    5. 'prim' → logprob: -5.717900276184082
    6. ' primi' → logprob: -7.967900276184082
    7. 'prima' → logprob: -7.967900276184082
    8. 'is' → logprob: -8.217900276184082
    9. ' primes' → logprob: -8.342900276184082
    10. ' prime' → logprob: -9.092900276184082

Token 354: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000559108448214829
    2. ' if' → logprob: -8.250558853149414
    3. '<|end|>' → logprob: -8.750558853149414
    4. '   ' → logprob: -10.125558853149414
    5. ',' → logprob: -10.125558853149414
    6. '        
' → logprob: -11.000558853149414
    7. '```' → logprob: -11.500558853149414
    8. ' and' → logprob: -12.000558853149414
    9. 'if' → logprob: -12.125558853149414
    10. ' ' → logprob: -12.375558853149414

Token 355: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.35706390615087e-05
    2. ' if' → logprob: -10.750033378601074
    3. '   ' → logprob: -11.875033378601074
    4. ',' → logprob: -13.625033378601074
    5. '        
' → logprob: -13.875033378601074
    6. '<|end|>' → logprob: -14.375033378601074
    7. 'if' → logprob: -14.625033378601074
    8. ' ' → logprob: -14.750033378601074
    9. '      ' → logprob: -15.000033378601074
    10. '           ' → logprob: -15.625033378601074

Token 356: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5975160598754883
    2. ' if' → logprob: -0.8475160598754883
    3. '       ' → logprob: -3.8475160598754883
    4. '   ' → logprob: -11.597516059875488
    5. '	if' → logprob: -12.972516059875488
    6. ' ' → logprob: -13.847516059875488
    7. ' ' → logprob: -15.847516059875488
    8. '```' → logprob: -16.847515106201172
    9. 'If' → logprob: -17.097515106201172
    10. '	' → logprob: -17.222515106201172

Token 357: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.6931508779525757
    2. ' is' → logprob: -0.6931508779525757
    3. '   ' → logprob: -13.568150520324707
    4. ' i' → logprob: -14.068150520324707
    5. ' ' → logprob: -14.318150520324707
    6. 'i' → logprob: -14.443150520324707
    7. '	is' → logprob: -15.693150520324707
    8. '(is' → logprob: -16.068151473999023
    9. ' ' → logprob: -16.318151473999023
    10. '    ' → logprob: -17.193151473999023

Token 358: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -8.923874702304602e-05
    2. '_' → logprob: -9.375089645385742
    3. ' _' → logprob: -12.875089645385742
    4. 'prime' → logprob: -13.625089645385742
    5. '_pr' → logprob: -14.625089645385742
    6. ''_' → logprob: -16.875089645385742
    7. '[_' → logprob: -17.500089645385742
    8. '```' → logprob: -17.875089645385742
    9. ' prime' → logprob: -18.750089645385742
    10. '_is' → logprob: -18.750089645385742

Token 359: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.1008713702030946e-06
    2. '[j' → logprob: -13.625001907348633
    3. 'i' → logprob: -14.250001907348633
    4. '[' → logprob: -15.875001907348633
    5. '[
' → logprob: -17.875001907348633
    6. ' [' → logprob: -18.625001907348633
    7. '   ' → logprob: -19.875001907348633
    8. '(i' → logprob: -20.375001907348633
    9. ' i' → logprob: -20.625001907348633
    10. '

' → logprob: -21.250001907348633

Token 360: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.010846307501196861
    2. ' and' → logprob: -4.885846138000488
    3. 'and' → logprob: -5.760846138000488
    4. ' ]' → logprob: -9.385846138000488
    5. '   ' → logprob: -14.260846138000488
    6. 'et' → logprob: -15.135846138000488
    7. ' ' → logprob: -15.135846138000488
    8. '[' → logprob: -15.135846138000488
    9. ')' → logprob: -15.135846138000488
    10. ']==' → logprob: -15.260846138000488

Token 361: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07889056205749512
    2. 'and' → logprob: -2.578890562057495
    3. ' ' → logprob: -15.453890800476074
    4. '    ' → logprob: -15.953890800476074
    5. '        ' → logprob: -16.203889846801758
    6. 'et' → logprob: -16.703889846801758
    7. '	and' → logprob: -16.828889846801758
    8. '       ' → logprob: -16.953889846801758
    9. ' ' → logprob: -16.953889846801758
    10. ' и' → logprob: -17.078889846801758

Token 362: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.47407761216163635
    2. ' is' → logprob: -0.974077582359314
    3. '   ' → logprob: -15.099077224731445
    4. ' ' → logprob: -15.599077224731445
    5. ' ' → logprob: -16.724077224731445
    6. '    ' → logprob: -16.849077224731445
    7. '	is' → logprob: -16.849077224731445
    8. '           ' → logprob: -17.849077224731445
    9. '(is' → logprob: -17.974077224731445
    10. '  ' → logprob: -18.224077224731445

Token 363: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.00020973898062948138
    2. 'prime' → logprob: -8.50020980834961
    3. '[j' → logprob: -13.37520980834961
    4. '_true' → logprob: -13.62520980834961
    5. '[' → logprob: -14.25020980834961
    6. 'Prime' → logprob: -15.00020980834961
    7. '[i' → logprob: -15.00020980834961
    8. '_pr' → logprob: -15.12520980834961
    9. '```' → logprob: -15.37520980834961
    10. '_' → logprob: -15.50020980834961

Token 364: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.8624639324116288e-06
    2. '[' → logprob: -13.250001907348633
    3. '[
' → logprob: -17.250001907348633
    4. '[i' → logprob: -18.250001907348633
    5. ' [' → logprob: -18.625001907348633
    6. 'j' → logprob: -19.375001907348633
    7. '   ' → logprob: -19.625001907348633
    8. '[js' → logprob: -20.125001907348633
    9. '][' → logprob: -21.750001907348633
    10. ']' → logprob: -22.125001907348633

Token 365: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0011872532777488232
    2. ']:
' → logprob: -7.001187324523926
    3. ']' → logprob: -8.751187324523926
    4. ':' → logprob: -9.626187324523926
    5. '):' → logprob: -10.376187324523926
    6. ']:
' → logprob: -12.001187324523926
    7. '"]:' → logprob: -12.626187324523926
    8. ']==' → logprob: -12.751187324523926
    9. '']:' → logprob: -13.251187324523926
    10. ']):' → logprob: -13.626187324523926

Token 366: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.200166469876422e-06
    2. '	       ' → logprob: -14.000004768371582
    3. 'count' → logprob: -14.000004768371582
    4. '
' → logprob: -14.375004768371582
    5. '               ' → logprob: -14.375004768371582
    6. '            
' → logprob: -14.500004768371582
    7. '		' → logprob: -14.500004768371582
    8. '       ' → logprob: -14.750004768371582
    9. '```' → logprob: -14.875004768371582
    10. '          ' → logprob: -15.500004768371582

Token 367: ' count' (ID: 3605)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6178544759750366
    2. 'count' (adapté à ' count') → logprob: -1.3678544759750366
    3. '           ' → logprob: -1.6178544759750366
    4. ' count' → logprob: -5.117854595184326
    5. '               ' → logprob: -6.367854595184326
    6. '   ' → logprob: -8.867854118347168
    7. '	count' → logprob: -9.992854118347168
    8. '
' → logprob: -11.742854118347168
    9. '```' → logprob: -11.992854118347168
    10. '[count' → logprob: -12.117854118347168

Token 368: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.1002805307507515
    2. ' +=' → logprob: -2.350280523300171
    3. ']+=' → logprob: -10.47528076171875
    4. '+' → logprob: -10.97528076171875
    5. '   ' → logprob: -10.97528076171875
    6. '           ' → logprob: -12.22528076171875
    7. '    ' → logprob: -13.10028076171875
    8. '=' → logprob: -13.85028076171875
    9. '            ' → logprob: -13.97528076171875
    10. ')' → logprob: -13.97528076171875

Token 369: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -19.25001335144043
    4. '```' → logprob: -21.25001335144043
    5. '
' → logprob: -23.50001335144043
    6. '１' → logprob: -23.75001335144043
    7. ' ' → logprob: -23.75001335144043
    8. '  ' → logprob: -23.87501335144043
    9. '۱' → logprob: -24.25001335144043
    10. '2' → logprob: -24.75001335144043

Token 370: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.875
    3. '```' → logprob: -21.125
    4. '   ' → logprob: -23.125
    5. '１' → logprob: -24.125
    6. '۱' → logprob: -24.25
    7. '2' → logprob: -24.875
    8. '१' → logprob: -25.25
    9. '<|end|>' → logprob: -25.375
    10. '
' → logprob: -25.75

Token 371: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0351334773004055
    2. '
' → logprob: -4.035133361816406
    3. '<|end|>' → logprob: -4.535133361816406
    4. '    
' → logprob: -5.535133361816406
    5. '  
' → logprob: -7.410133361816406
    6. '<|end|>' → logprob: -7.535133361816406
    7. ' return' → logprob: -8.285133361816406
    8. 'return' → logprob: -8.410133361816406
    9. '	return' → logprob: -8.535133361816406
    10. ' 
' → logprob: -9.035133361816406

Token 372: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00012558852904476225
    2. 'return' → logprob: -9.125125885009766
    3. ' return' → logprob: -11.125125885009766
    4. '
' → logprob: -13.625125885009766
    5. '	return' → logprob: -15.500125885009766
    6. '    
' → logprob: -16.000125885009766
    7. '       ' → logprob: -16.250125885009766
    8. '```' → logprob: -16.500125885009766
    9. '   ' → logprob: -18.250125885009766
    10. ' ' → logprob: -18.500125885009766

Token 373: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2026437222957611
    2. 'return' (adapté à ' return') → logprob: -1.7026437520980835
    3. ' return' → logprob: -6.702643871307373
    4. '
' → logprob: -14.452643394470215
    5. '```' → logprob: -14.577643394470215
    6. ' ' → logprob: -14.702643394470215
    7. '	return' → logprob: -15.452643394470215
    8. '    
' → logprob: -15.827643394470215
    9. '       ' → logprob: -16.32764434814453
    10. ':return' → logprob: -16.82764434814453

Token 374: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.12692810595035553
    2. ' count' → logprob: -2.1269280910491943
    3. '(count' → logprob: -19.126928329467773
    4. '	count' → logprob: -19.501928329467773
    5. '[count' → logprob: -20.001928329467773
    6. '_count' → logprob: -21.251928329467773
    7. 'counts' → logprob: -21.751928329467773
    8. ' ' → logprob: -21.876928329467773
    9. '   ' → logprob: -22.001928329467773
    10. '=count' → logprob: -22.001928329467773

Token 375: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02571803703904152
    2. '
' → logprob: -4.4007182121276855
    3. 'def' → logprob: -4.4007182121276855
    4. '```' → logprob: -7.9007182121276855
    5. ' for' → logprob: -8.525717735290527
    6. 'if' → logprob: -8.900717735290527
    7. '#' → logprob: -9.275717735290527
    8. '  
' → logprob: -11.025717735290527
    9. '    
' → logprob: -11.650717735290527
    10. 'while' → logprob: -11.900717735290527

Token 376: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00018196819291915745
    2. 'if' → logprob: -8.750182151794434
    3. 'def' → logprob: -10.750182151794434
    4. '#' → logprob: -13.250182151794434
    5. ' for' → logprob: -15.250182151794434
    6. '```' → logprob: -18.125181198120117
    7. 'while' → logprob: -19.125181198120117
    8. 'import' → logprob: -19.750181198120117
    9. '
' → logprob: -21.125181198120117
    10. 'with' → logprob: -21.875181198120117

Token 377: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.02975071594119072
    2. 'main' → logprob: -3.5297508239746094
    3. ' process' → logprob: -15.65475082397461
    4. 'process' → logprob: -16.40475082397461
    5. ' solve' → logprob: -17.27975082397461
    6. ' solution' → logprob: -17.40475082397461
    7. 'solve' → logprob: -18.02975082397461
    8. '	main' → logprob: -18.40475082397461
    9. 'solution' → logprob: -19.40475082397461
    10. '_main' → logprob: -20.15475082397461

Token 378: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -2.463036435074173e-05
    2. '():
' → logprob: -11.000024795532227
    3. ' ():' → logprob: -12.250024795532227
    4. '(' → logprob: -13.125024795532227
    5. '()' → logprob: -14.250024795532227
    6. ':' → logprob: -15.750024795532227
    7. '(":' → logprob: -15.875024795532227
    8. '():
' → logprob: -16.375024795532227
    9. '(:' → logprob: -17.000024795532227
    10. '():

' → logprob: -17.500024795532227

Token 379: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25471311807632446
    2. ' for' → logprob: -1.5047130584716797
    3. 'for' → logprob: -6.50471305847168
    4. ' max' → logprob: -7.12971305847168
    5. 'import' → logprob: -8.50471305847168
    6. ' import' → logprob: -9.00471305847168
    7. '```' → logprob: -9.50471305847168
    8. 'max' → logprob: -10.37971305847168
    9. ' try' → logprob: -10.37971305847168
    10. 'try' → logprob: -12.25471305847168

Token 380: ' max' (ID: 2999)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7988460659980774
    2. 'max' (adapté à ' max') → logprob: -0.7988460659980774
    3. ' for' → logprob: -2.5488460063934326
    4. ' max' → logprob: -4.048846244812012
    5. 'import' → logprob: -5.798846244812012
    6. '   ' → logprob: -6.798846244812012
    7. 'try' → logprob: -7.798846244812012
    8. ' import' → logprob: -9.298846244812012
    9. ' try' → logprob: -10.923846244812012
    10. ' lines' → logprob: -11.423846244812012

Token 381: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.0013172623002901673
    2. '_' → logprob: -6.751317024230957
    3. '_num' → logprob: -9.501317024230957
    4. '_val' → logprob: -10.251317024230957
    5. '_input' → logprob: -11.126317024230957
    6. '_number' → logprob: -12.126317024230957
    7. '_value' → logprob: -12.376317024230957
    8. 'n' → logprob: -13.001317024230957
    9. '_line' → logprob: -13.126317024230957
    10. '_N' → logprob: -13.251317024230957

Token 382: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759406089782715
    2. ' =' → logprob: -0.8259406089782715
    3. '   ' → logprob: -14.32594108581543
    4. ' ' → logprob: -14.82594108581543
    5. 'import' → logprob: -16.70094108581543
    6. ',' → logprob: -16.95094108581543
    7. '=int' → logprob: -17.07594108581543
    8. '  ' → logprob: -17.32594108581543
    9. '=None' → logprob: -17.32594108581543
    10. '=
' → logprob: -18.45094108581543

Token 383: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -13.50000286102295
    3. '10' → logprob: -13.62500286102295
    4. 'int' → logprob: -16.500001907348633
    5. '100' → logprob: -16.625001907348633
    6. '1' → logprob: -17.375001907348633
    7. '   ' → logprob: -18.125001907348633
    8. 'max' → logprob: -18.875001907348633
    9. '  ' → logprob: -20.375001907348633
    10. '=' → logprob: -21.375001907348633

Token 384: '100' (ID: 1353)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5213274309644476e-05
    2. '10' → logprob: -11.125015258789062
    3. '100' → logprob: -15.375015258789062
    4. '1' → logprob: -16.375015258789062
    5. 'int' → logprob: -17.125015258789062
    6. 'max' → logprob: -18.000015258789062
    7. ' ' → logprob: -18.750015258789062
    8. '2' → logprob: -21.625015258789062
    9. '000' → logprob: -21.750015258789062
    10. '-' → logprob: -21.875015258789062

Token 385: '00' (ID: 504)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7832554578781128
    2. '000' → logprob: -0.7832554578781128
    3. '
' → logprob: -2.5332555770874023
    4. '00' → logprob: -5.283255577087402
    5. 'import' → logprob: -7.408255577087402
    6. '  
' → logprob: -8.033255577087402
    7. '```' → logprob: -8.783255577087402
    8. '
' → logprob: -9.158255577087402
    9. '  ' → logprob: -9.283255577087402
    10. '    
' → logprob: -9.408255577087402

Token 386: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0007586462306790054
    2. '   ' → logprob: -8.375758171081543
    3. '
' → logprob: -8.375758171081543
    4. '    
' → logprob: -9.000758171081543
    5. '  
' → logprob: -9.500758171081543
    6. 'for' → logprob: -10.375758171081543
    7. 'import' → logprob: -11.000758171081543
    8. '\n' → logprob: -11.125758171081543
    9. '   
' → logprob: -11.500758171081543
    10. ' 
' → logprob: -11.750758171081543

Token 387: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.32809391617774963
    2. '
' → logprob: -1.5780938863754272
    3. '   ' → logprob: -2.828094005584717
    4. ' for' → logprob: -4.703094005584717
    5. '    
' → logprob: -6.578094005584717
    6. 'import' → logprob: -6.828094005584717
    7. '#' → logprob: -6.828094005584717
    8. '```' → logprob: -7.953094005584717
    9. 'try' → logprob: -8.328093528747559
    10. '  
' → logprob: -8.703093528747559

Token 388: ' born' (ID: 12275)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6512894034385681
    2. 'import' → logprob: -1.651289463043213
    3. 'for' → logprob: -1.776289463043213
    4. ' import' → logprob: -3.026289463043213
    5. ' max' → logprob: -3.901289463043213
    6. ' try' → logprob: -4.026289463043213
    7. '```' → logprob: -4.901289463043213
    8. '#' → logprob: -5.026289463043213
    9. ' while' → logprob: -5.401289463043213
    10. 'max' → logprob: -5.526289463043213

Token 389: 'es' (ID: 268)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0001721934968372807
    2. 'ed' → logprob: -9.62517261505127
    3. '=' → logprob: -10.00017261505127
    4. ' =' → logprob: -11.25017261505127
    5. '_max' → logprob: -11.25017261505127
    6. 'é' → logprob: -11.87517261505127
    7. '   ' → logprob: -12.25017261505127
    8. '=max' → logprob: -12.50017261505127
    9. 'max' → logprob: -12.62517261505127
    10. 'es' → logprob: -13.00017261505127

Token 390: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.046839259564876556
    2. 'import' → logprob: -4.296839237213135
    3. '    
' → logprob: -4.796839237213135
    4. 'max' → logprob: -5.421839237213135
    5. 'def' → logprob: -5.796839237213135
    6. ' maximale' → logprob: -5.921839237213135
    7. ' max' → logprob: -6.046839237213135
    8. '
' → logprob: -6.421839237213135
    9. '  
' → logprob: -6.421839237213135
    10. ' =' → logprob: -6.546839237213135

Token 391: ' problème' (ID: 35630)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.025563618168234825
    2. ' problème' → logprob: -4.650563716888428
    3. 'proble' → logprob: -5.025563716888428
    4. 'input' → logprob: -6.150563716888428
    5. 'n' → logprob: -6.650563716888428
    6. 'nombre' → logprob: -6.775563716888428
    7. 'entrée' → logprob: -7.025563716888428
    8. 'd' → logprob: -7.150563716888428
    9. 's' → logprob: -7.400563716888428
    10. 'programme' → logprob: -7.400563716888428

Token 392: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0408795028924942
    2. '
' → logprob: -3.540879487991333
    3. '    
' → logprob: -4.540879726409912
    4. 'for' → logprob: -9.290879249572754
    5. 'import' → logprob: -9.415879249572754
    6. 'while' → logprob: -9.415879249572754
    7. '  
' → logprob: -9.915879249572754
    8. ' for' → logprob: -10.790879249572754
    9. '   
' → logprob: -11.040879249572754
    10. '	
' → logprob: -11.540879249572754

Token 393: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03553852438926697
    2. '
' → logprob: -3.9105384349823
    3. '    
' → logprob: -4.285538673400879
    4. ' for' → logprob: -7.285538673400879
    5. 'for' → logprob: -8.160538673400879
    6. ' while' → logprob: -10.285538673400879
    7. 'while' → logprob: -10.410538673400879
    8. 'import' → logprob: -10.535538673400879
    9. '  
' → logprob: -11.035538673400879
    10. '```' → logprob: -11.535538673400879

Token 394: ' #' (ID: 1069)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.00014013137842994183
    2. ' is' → logprob: -9.500140190124512
    3. 'import' → logprob: -10.250140190124512
    4. '   ' → logprob: -10.625140190124512
    5. 'for' → logprob: -13.250140190124512
    6. 'input' → logprob: -13.750140190124512
    7. 'pr' → logprob: -14.250140190124512
    8. 'inputs' → logprob: -14.250140190124512
    9. 'data' → logprob: -15.375140190124512
    10. 'sys' → logprob: -15.375140190124512

Token 395: ' Pré' (ID: 86400)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0014049944002181292
    2. ' is' → logprob: -6.751404762268066
    3. 'for' → logprob: -9.001404762268066
    4. 'import' → logprob: -9.876404762268066
    5. 'input' → logprob: -11.001404762268066
    6. 'inputs' → logprob: -11.501404762268066
    7. '   ' → logprob: -11.751404762268066
    8. 'lines' → logprob: -12.376404762268066
    9. 'sys' → logprob: -12.501404762268066
    10. 'pr' → logprob: -12.751404762268066

Token 396: '-cal' (ID: 84920)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0345265194773674
    2. '_is' → logprob: -4.409526348114014
    3. 'parer' → logprob: -4.909526348114014
    4. ' is' → logprob: -5.909526348114014
    5. 'pare' → logprob: -6.534526348114014
    6. 'prime' → logprob: -6.659526348114014
    7. '_' → logprob: -6.784526348114014
    8. 'fix' → logprob: -6.784526348114014
    9. '_prime' → logprob: -7.034526348114014
    10. 's' → logprob: -7.284526348114014

Token 397: 'cul' (ID: 2885)
  Prédit: 'cul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cul' → logprob: -0.022825391963124275
    2. 'c' → logprob: -4.022825241088867
    3. 'al' → logprob: -6.272825241088867
    4. 'culated' → logprob: -6.772825241088867
    5. 'culation' → logprob: -8.022825241088867
    6. 'cule' → logprob: -8.147825241088867
    7. 'ul' → logprob: -8.147825241088867
    8. 'om' → logprob: -8.397825241088867
    9. 'par' → logprob: -9.147825241088867
    10. 'cu' → logprob: -9.897825241088867

Token 398: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8304053544998169
    2. 'is' → logprob: -1.205405354499817
    3. ' is' → logprob: -1.330405354499817
    4. ' ' → logprob: -9.830405235290527
    5. ' de' → logprob: -10.455405235290527
    6. '    ' → logprob: -10.955405235290527
    7. ' =' → logprob: -10.955405235290527
    8. '  ' → logprob: -11.205405235290527
    9. ' est' → logprob: -11.580405235290527
    10. '    
' → logprob: -11.830405235290527

Token 399: ' nombres' (ID: 76205)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.015148267149925232
    2. 'pr' → logprob: -4.265148162841797
    3. ' is' → logprob: -7.390148162841797
    4. 'prime' → logprob: -8.265148162841797
    5. ' primes' → logprob: -9.515148162841797
    6. 'prem' → logprob: -11.015148162841797
    7. 'n' → logprob: -12.515148162841797
    8. 'val' → logprob: -12.765148162841797
    9. ' primal' → logprob: -12.765148162841797
    10. 'table' → logprob: -13.265148162841797

Token 400: ' premiers' (ID: 59140)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.0002659847668837756
    2. 'pr' → logprob: -8.500266075134277
    3. '_' → logprob: -10.375266075134277
    4. ' premiers' → logprob: -11.000266075134277
    5. '_p' → logprob: -11.500266075134277
    6. '   ' → logprob: -13.250266075134277
    7. 'prim' → logprob: -13.875266075134277
    8. 'prima' → logprob: -14.500266075134277
    9. 'import' → logprob: -14.875266075134277
    10. 'prime' → logprob: -15.750266075134277

Token 401: ' pour' (ID: 1930)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.3814028203487396
    2. ' is' → logprob: -1.506402850151062
    3. '   ' → logprob: -2.3814027309417725
    4. '
' → logprob: -6.006402969360352
    5. '    
' → logprob: -8.006402969360352
    6. '	is' → logprob: -9.381402969360352
    7. '
' → logprob: -11.006402969360352
    8. ' ' → logprob: -11.631402969360352
    9. ' =' → logprob: -11.756402969360352
    10. ':' → logprob: -12.256402969360352

Token 402: ' tous' (ID: 10688)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0009233691962435842
    2. ' max' → logprob: -7.000923156738281
    3. 'is' → logprob: -11.625923156738281
    4. 'range' → logprob: -14.000923156738281
    5. 'le' → logprob: -14.375923156738281
    6. 'all' → logprob: -14.750923156738281
    7. '=max' → logprob: -14.750923156738281
    8. '(max' → logprob: -15.250923156738281
    9. '[max' → logprob: -15.875923156738281
    10. ' is' → logprob: -16.37592315673828

Token 403: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.7187238335609436
    2. 'les' → logprob: -0.8437238335609436
    3. 'max' → logprob: -3.593723773956299
    4. 'n' → logprob: -3.718723773956299
    5. ' n' → logprob: -4.468723773956299
    6. '_n' → logprob: -4.968723773956299
    7. ' max' → logprob: -5.343723773956299
    8. '_' → logprob: -6.343723773956299
    9. '```' → logprob: -6.593723773956299
    10. ' jusqu' → logprob: -6.968723773956299

Token 404: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.14239665865898132
    2. 'val' → logprob: -2.5173966884613037
    3. 'max' → logprob: -3.5173966884613037
    4. 'ent' → logprob: -4.142396450042725
    5. ' nombres' → logprob: -6.392396450042725
    6. 'num' → logprob: -6.642396450042725
    7. 'nombre' → logprob: -7.142396450042725
    8. 'N' → logprob: -7.142396450042725
    9. 'values' → logprob: -7.267396450042725
    10. 'numbers' → logprob: -8.017396926879883

Token 405: ' possibles' (ID: 97753)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.036501701921224594
    2. ' is' → logprob: -3.41150164604187
    3. '   ' → logprob: -6.161501884460449
    4. 'max' → logprob: -7.661501884460449
    5. '
' → logprob: -9.28650188446045
    6. ' jusqu' → logprob: -10.03650188446045
    7. 'est' → logprob: -10.66150188446045
    8. 'import' → logprob: -11.28650188446045
    9. '    
' → logprob: -11.41150188446045
    10. '	is' → logprob: -11.53650188446045

Token 406: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021864913403987885
    2. ' is' → logprob: -4.521864891052246
    3. 'is' → logprob: -4.771864891052246
    4. '
' → logprob: -6.146864891052246
    5. '    
' → logprob: -8.896864891052246
    6. '  ' → logprob: -12.396864891052246
    7. '	is' → logprob: -12.396864891052246
    8. '
' → logprob: -13.146864891052246
    9. ',' → logprob: -13.271864891052246
    10. '   
' → logprob: -13.896864891052246

Token 407: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06537558138370514
    2. ' is' → logprob: -2.940375566482544
    3. 'is' → logprob: -4.565375804901123
    4. '    
' → logprob: -10.690375328063965
    5. '
' → logprob: -12.440375328063965
    6. '```' → logprob: -13.440375328063965
    7. '	is' → logprob: -13.440375328063965
    8. '  ' → logprob: -14.065375328063965
    9. '   ' → logprob: -14.690375328063965
    10. ' ' → logprob: -15.065375328063965

Token 408: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' (adapté à ' is') → logprob: -0.000462366413557902
    2. ' is' → logprob: -7.750462532043457
    3. '   ' → logprob: -10.375462532043457
    4. '    
' → logprob: -16.25046157836914
    5. 'prime' → logprob: -16.37546157836914
    6. '```' → logprob: -16.50046157836914
    7. '	is' → logprob: -17.87546157836914
    8. 'pr' → logprob: -18.00046157836914
    9. 'max' → logprob: -18.37546157836914
    10. '  ' → logprob: -18.75046157836914

Token 409: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.07147388160228729
    2. '_' → logprob: -2.6964738368988037
    3. ' _' → logprob: -6.946474075317383
    4. '_pr' → logprob: -8.071474075317383
    5. '_p' → logprob: -9.946474075317383
    6. '_pi' → logprob: -10.071474075317383
    7. '_pal' → logprob: -10.571474075317383
    8. '_s' → logprob: -11.071474075317383
    9. ''_' → logprob: -11.071474075317383
    10. '=_' → logprob: -11.446474075317383

Token 410: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868711292743683
    2. ' =' → logprob: -1.136871099472046
    3. '=s' → logprob: -16.386871337890625
    4. '＝' → logprob: -17.136871337890625
    5. '[' → logprob: -18.136871337890625
    6. '=

' → logprob: -18.761871337890625
    7. ',' → logprob: -19.261871337890625
    8. ')' → logprob: -19.261871337890625
    9. '=create' → logprob: -19.511871337890625
    10. ' =
' → logprob: -19.636871337890625

Token 411: ' sieve' (ID: 142781)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0019287518225610256
    2. ' sieve' → logprob: -6.251928806304932
    3. 'sie' → logprob: -16.001928329467773
    4. '	s' → logprob: -18.126928329467773
    5. ' s' → logprob: -19.001928329467773
    6. '(s' → logprob: -19.376928329467773
    7. ' ' → logprob: -19.751928329467773
    8. '[s' → logprob: -20.376928329467773
    9. '```' → logprob: -20.376928329467773
    10. '=s' → logprob: -20.501928329467773

Token 412: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.0032933284528553486
    2. '(' → logprob: -5.753293514251709
    3. 'max' → logprob: -9.12829303741455
    4. ' (' → logprob: -12.25329303741455
    5. ' max' → logprob: -13.62829303741455
    6. '100' → logprob: -14.50329303741455
    7. '(
' → logprob: -15.25329303741455
    8. '[max' → logprob: -15.75329303741455
    9. ' ' → logprob: -16.753293991088867
    10. '=max' → logprob: -17.253293991088867

Token 413: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: 0.0
    2. '_' → logprob: -18.0
    3. ')' → logprob: -18.625
    4. 'n' → logprob: -20.625
    5. '=' → logprob: -21.375
    6. '_max' → logprob: -21.5
    7. '```' → logprob: -21.625
    8. '_i' → logprob: -22.125
    9. 'max' → logprob: -22.125
    10. '_x' → logprob: -22.375

Token 414: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ' )' → logprob: -13.625001907348633
    3. ')
' → logprob: -15.625001907348633
    4. ')

' → logprob: -17.125001907348633
    5. '))' → logprob: -18.500001907348633
    6. ')
' → logprob: -19.125001907348633
    7. ')`' → logprob: -19.375001907348633
    8. ')#' → logprob: -19.500001907348633
    9. '   ' → logprob: -19.750001907348633
    10. '#' → logprob: -20.750001907348633

Token 415: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45372113585472107
    2. ' for' → logprob: -1.7037211656570435
    3. 'for' → logprob: -1.7037211656570435
    4. '
' → logprob: -7.578721046447754
    5. '    
' → logprob: -8.578721046447754
    6. '```' → logprob: -11.328721046447754
    7. 'while' → logprob: -11.828721046447754
    8. ' while' → logprob: -12.328721046447754
    9. '	for' → logprob: -13.453721046447754
    10. 'import' → logprob: -13.953721046447754

Token 416: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -2.5776860184123507e-06
    2. ' for' → logprob: -13.00000286102295
    3. 'try' → logprob: -16.000001907348633
    4. '   ' → logprob: -16.125001907348633
    5. 'import' → logprob: -18.875001907348633
    6. 'lines' → logprob: -20.250001907348633
    7. 'while' → logprob: -20.250001907348633
    8. '    
' → logprob: -21.625001907348633
    9. '
' → logprob: -21.875001907348633
    10. '	for' → logprob: -22.250001907348633

Token 417: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.002092445967718959
    2. 'line' → logprob: -6.252092361450195
    3. ' ligne' → logprob: -8.752092361450195
    4. 'ligne' → logprob: -12.752092361450195
    5. '	line' → logprob: -12.877092361450195
    6. '_line' → logprob: -16.377092361450195
    7. 'Line' → logprob: -16.502092361450195
    8. '(line' → logprob: -16.502092361450195
    9. ' linha' → logprob: -16.627092361450195
    10. ' lijn' → logprob: -17.502092361450195

Token 418: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0011743901995941997
    2. 'in' → logprob: -6.751174449920654
    3. ' ' → logprob: -13.251173973083496
    4. '_' → logprob: -14.626173973083496
    5. '_in' → logprob: -14.751173973083496
    6. 'import' → logprob: -15.001173973083496
    7. 's' → logprob: -15.126173973083496
    8. '	in' → logprob: -15.376173973083496
    9. '()' → logprob: -15.626173973083496
    10. ' ' → logprob: -16.001174926757812

Token 419: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.023246407508850098
    2. ' sys' → logprob: -3.7732462882995605
    3. '=sys' → logprob: -14.273246765136719
    4. '(sys' → logprob: -15.773246765136719
    5. '	sys' → logprob: -16.02324676513672
    6. 'stdin' → logprob: -19.39824676513672
    7. '```' → logprob: -20.52324676513672
    8. 'in' → logprob: -20.89824676513672
    9. 'import' → logprob: -21.02324676513672
    10. '_sys' → logprob: -21.14824676513672

Token 420: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0002765902318060398
    2. '.readline' → logprob: -9.000276565551758
    3. 'stdin' → logprob: -9.125276565551758
    4. '.' → logprob: -10.250276565551758
    5. '(stdin' → logprob: -12.250276565551758
    6. '.stdout' → logprob: -13.500276565551758
    7. ' stdin' → logprob: -13.875276565551758
    8. 'in' → logprob: -14.250276565551758
    9. '.readlines' → logprob: -14.750276565551758
    10. 'import' → logprob: -15.375276565551758

Token 421: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007364775985479355
    2. ':
' → logprob: -5.507364749908447
    3. ' in' → logprob: -6.757364749908447
    4. '.readline' → logprob: -6.882364749908447
    5. '.strip' → logprob: -7.882364749908447
    6. '.rstrip' → logprob: -8.257365226745605
    7. '):' → logprob: -9.007365226745605
    8. '():' → logprob: -9.507365226745605
    9. '():
' → logprob: -9.882365226745605
    10. '.readlines' → logprob: -10.007365226745605

Token 422: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.636995792388916
    2. '   ' → logprob: -0.761995792388916
    3. ' n' → logprob: -6.386995792388916
    4. 'n' → logprob: -7.261995792388916
    5. ':' → logprob: -7.386995792388916
    6. ' line' → logprob: -8.011995315551758
    7. ':
' → logprob: -8.136995315551758
    8. '```' → logprob: -8.136995315551758
    9. '    
' → logprob: -8.261995315551758
    10. '        
' → logprob: -9.761995315551758

Token 423: ' line' (ID: 2543)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5367124676704407
    2. ' n' → logprob: -1.036712408065796
    3. 'line' (adapté à ' line') → logprob: -3.911712408065796
    4. '       ' → logprob: -4.036712646484375
    5. '   ' → logprob: -4.286712646484375
    6. ' line' → logprob: -4.786712646484375
    7. 'N' → logprob: -7.536712646484375
    8. ' N' → logprob: -9.161712646484375
    9. ' if' → logprob: -9.536712646484375
    10. '	n' → logprob: -9.536712646484375

Token 424: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01040611881762743
    2. ' =' → logprob: -4.635406017303467
    3. '.strip' → logprob: -8.260406494140625
    4. '=line' → logprob: -8.635406494140625
    5. '_strip' → logprob: -9.010406494140625
    6. 'strip' → logprob: -9.385406494140625
    7. '.rstrip' → logprob: -13.260406494140625
    8. 'rstrip' → logprob: -13.510406494140625
    9. 's' → logprob: -14.010406494140625
    10. '.=' → logprob: -14.260406494140625

Token 425: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -2.7610454708337784e-05
    2. ' line' → logprob: -10.500027656555176
    3. '=line' → logprob: -22.87502670288086
    4. '	line' → logprob: -23.87502670288086
    5. '(line' → logprob: -24.75002670288086
    6. '#line' → logprob: -25.25002670288086
    7. 'ligne' → logprob: -25.50002670288086
    8. 'lin' → logprob: -25.75002670288086
    9. 'Line' → logprob: -27.00002670288086
    10. 'li' → logprob: -27.12502670288086

Token 426: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.000993987312540412
    2. 'strip' → logprob: -7.2509942054748535
    3. '.rstrip' → logprob: -8.250993728637695
    4. '.' → logprob: -10.750993728637695
    5. '.readline' → logprob: -14.500993728637695
    6. 'rstrip' → logprob: -15.000993728637695
    7. ' strip' → logprob: -15.125993728637695
    8. '_strip' → logprob: -15.750993728637695
    9. '().' → logprob: -16.000993728637695
    10. '(strip' → logprob: -16.375993728637695

Token 427: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5920826196670532
    2. '()
' → logprob: -1.7170826196670532
    3. '       ' → logprob: -2.2170825004577637
    4. '<|end|>' → logprob: -2.2170825004577637
    5. ')' → logprob: -4.342082500457764
    6. '<|end|>' → logprob: -4.467082500457764
    7. '
' → logprob: -4.717082500457764
    8. '   ' → logprob: -4.967082500457764
    9. 'if' → logprob: -5.842082500457764
    10. '        
' → logprob: -7.092082500457764

Token 428: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03485686331987381
    2. 'if' → logprob: -4.034856796264648
    3. ' if' → logprob: -4.159856796264648
    4. '        
' → logprob: -7.909856796264648
    5. '<|end|>' → logprob: -7.909856796264648
    6. '   ' → logprob: -9.284856796264648
    7. '```' → logprob: -10.784856796264648
    8. '<|end|>' → logprob: -11.034856796264648
    9. ',' → logprob: -11.284856796264648
    10. '	if' → logprob: -11.534856796264648

Token 429: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0004473540757317096
    2. ' if' → logprob: -7.7504472732543945
    3. '       ' → logprob: -11.000447273254395
    4. '   ' → logprob: -18.25044822692871
    5. '	if' → logprob: -18.25044822692871
    6. 'If' → logprob: -18.50044822692871
    7. '        
' → logprob: -19.87544822692871
    8. '```' → logprob: -20.25044822692871
    9. ';if' → logprob: -20.50044822692871
    10. 'try' → logprob: -21.37544822692871

Token 430: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.018229544162750244
    2. 'not' → logprob: -4.0182294845581055
    3. ' line' → logprob: -9.518229484558105
    4. 'line' → logprob: -12.018229484558105
    5. ' no' → logprob: -18.143230438232422
    6. '	not' → logprob: -18.768230438232422
    7. ' ' → logprob: -19.143230438232422
    8. '!' → logprob: -19.518230438232422
    9. '#line' → logprob: -19.643230438232422
    10. 'n' → logprob: -19.893230438232422

Token 431: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0004306692280806601
    2. ' line' → logprob: -7.750430583953857
    3. '	line' → logprob: -21.750431060791016
    4. '#line' → logprob: -22.625431060791016
    5. '(line' → logprob: -22.875431060791016
    6. ' ' → logprob: -23.375431060791016
    7. 'ligne' → logprob: -23.625431060791016
    8. 'len' → logprob: -23.625431060791016
    9. 'lin' → logprob: -24.000431060791016
    10. 'li' → logprob: -24.250431060791016

Token 432: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07026706635951996
    2. ':
' → logprob: -2.6952669620513916
    3. ':return' → logprob: -8.195266723632812
    4. '<|end|>' → logprob: -10.945266723632812
    5. '=' → logprob: -11.570266723632812
    6. '):' → logprob: -12.570266723632812
    7. '):
' → logprob: -12.570266723632812
    8. ' or' → logprob: -12.695266723632812
    9. '():
' → logprob: -12.945266723632812
    10. '==' → logprob: -12.945266723632812

Token 433: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00013572083844337612
    2. ':' → logprob: -9.50013542175293
    3. ' break' → logprob: -11.00013542175293
    4. '       ' → logprob: -11.62513542175293
    5. 'break' → logprob: -11.75013542175293
    6. '		' → logprob: -11.87513542175293
    7. '	       ' → logprob: -12.37513542175293
    8. ':
' → logprob: -12.37513542175293
    9. '               ' → logprob: -12.87513542175293
    10. '   ' → logprob: -13.25013542175293

Token 434: ' continue' (ID: 4901)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.014322984963655472
    2. '           ' → logprob: -4.514322757720947
    3. ' break' → logprob: -5.764322757720947
    4. '	break' → logprob: -9.514323234558105
    5. '       ' → logprob: -10.389323234558105
    6. 'continue' (adapté à ' continue') → logprob: -11.264323234558105
    7. '               ' → logprob: -11.639323234558105
    8. 'return' → logprob: -13.264323234558105
    9. '_break' → logprob: -13.764323234558105
    10. '	       ' → logprob: -14.264323234558105

Token 435: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00027087211492471397
    2. '        
' → logprob: -8.37527084350586
    3. '<|end|>' → logprob: -10.87527084350586
    4. '
' → logprob: -11.50027084350586
    5. '   ' → logprob: -12.87527084350586
    6. 'n' → logprob: -13.50027084350586
    7. '```' → logprob: -13.62527084350586
    8. ',' → logprob: -13.75027084350586
    9. '    
' → logprob: -13.75027084350586
    10. '  
' → logprob: -14.00027084350586

Token 436: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.347765181795694e-05
    2. 'n' → logprob: -10.750053405761719
    3. '        
' → logprob: -10.875053405761719
    4. '   ' → logprob: -12.625053405761719
    5. '<|end|>' → logprob: -12.625053405761719
    6. ' n' → logprob: -12.750053405761719
    7. '```' → logprob: -14.500053405761719
    8. ',' → logprob: -14.500053405761719
    9. '           ' → logprob: -14.625053405761719
    10. '      ' → logprob: -14.750053405761719

Token 437: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.0002149802603526041
    2. 'N' → logprob: -8.750214576721191
    3. ' n' → logprob: -10.125214576721191
    4. '       ' → logprob: -11.250214576721191
    5. 'try' → logprob: -13.125214576721191
    6. '   ' → logprob: -13.500214576721191
    7. '```' → logprob: -17.000215530395508
    8. '	n' → logprob: -17.125215530395508
    9. '_n' → logprob: -17.750215530395508
    10. ' N' → logprob: -18.625215530395508

Token 438: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10029411315917969
    2. ' =' → logprob: -2.3502941131591797
    3. '=int' → logprob: -9.35029411315918
    4. 'int' → logprob: -15.35029411315918
    5. '＝' → logprob: -16.22529411315918
    6. ')' → logprob: -16.72529411315918
    7. '   ' → logprob: -16.72529411315918
    8. '=

' → logprob: -16.97529411315918
    9. '	' → logprob: -17.47529411315918
    10. ',' → logprob: -17.60029411315918

Token 439: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0009114635176956654
    2. ' int' → logprob: -7.000911235809326
    3. '[int' → logprob: -20.875911712646484
    4. '=int' → logprob: -21.250911712646484
    5. '(int' → logprob: -21.625911712646484
    6. '<int' → logprob: -23.125911712646484
    7. '	int' → logprob: -24.750911712646484
    8. ':int' → logprob: -25.250911712646484
    9. '```' → logprob: -26.125911712646484
    10. ']int' → logprob: -26.750911712646484

Token 440: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -4.167648876318708e-05
    2. '(' → logprob: -10.250041961669922
    3. 'line' → logprob: -12.000041961669922
    4. ' line' → logprob: -15.750041961669922
    5. '=line' → logprob: -17.125041961669922
    6. '[line' → logprob: -17.500041961669922
    7. '#line' → logprob: -18.500041961669922
    8. ' (' → logprob: -18.625041961669922
    9. '(n' → logprob: -18.750041961669922
    10. '(
' → logprob: -19.000041961669922

Token 441: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.696889623621246e-06
    2. ')
' → logprob: -13.12500286102295
    3. ' )' → logprob: -14.87500286102295
    4. '))' → logprob: -16.625001907348633
    5. ')#' → logprob: -16.750001907348633
    6. '<|end|>' → logprob: -17.375001907348633
    7. ')}' → logprob: -18.000001907348633
    8. '),' → logprob: -18.625001907348633
    9. ')`' → logprob: -18.625001907348633
    10. ')

' → logprob: -18.625001907348633

Token 442: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.836499985889532e-05
    2. '<|end|>' → logprob: -10.1250581741333
    3. '        
' → logprob: -11.7500581741333
    4. '   ' → logprob: -12.6250581741333
    5. '```' → logprob: -12.8750581741333
    6. 'result' → logprob: -13.8750581741333
    7. '<|end|>' → logprob: -14.1250581741333
    8. '           ' → logprob: -14.6250581741333
    9. 'print' → logprob: -14.6250581741333
    10. '      ' → logprob: -14.8750581741333

Token 443: ' result' (ID: 1534)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.11007113754749298
    2. 'result' (adapté à ' result') → logprob: -3.2350711822509766
    3. ' print' → logprob: -3.3600711822509766
    4. '       ' → logprob: -3.7350711822509766
    5. ' result' → logprob: -5.360071182250977
    6. 'count' → logprob: -6.485071182250977
    7. ' count' → logprob: -10.485071182250977
    8. '	print' → logprob: -13.360071182250977
    9. '```' → logprob: -13.360071182250977
    10. 'res' → logprob: -13.485071182250977

Token 444: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005233882926404476
    2. '=' → logprob: -5.2552337646484375
    3. '   ' → logprob: -17.130233764648438
    4. ')' → logprob: -17.380233764648438
    5. ' ' → logprob: -18.755233764648438
    6. ' =
' → logprob: -19.255233764648438
    7. ' ' → logprob: -19.255233764648438
    8. '＝' → logprob: -19.755233764648438
    9. ' =)' → logprob: -19.755233764648438
    10. '  ' → logprob: -19.880233764648438

Token 445: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0009114635176956654
    2. ' count' → logprob: -7.000911235809326
    3. '(count' → logprob: -21.125911712646484
    4. '	count' → logprob: -23.000911712646484
    5. '[count' → logprob: -23.125911712646484
    6. '=count' → logprob: -23.375911712646484
    7. 'print' → logprob: -23.750911712646484
    8. 'counts' → logprob: -24.375911712646484
    9. '$count' → logprob: -25.125911712646484
    10. 'counter' → logprob: -25.125911712646484

Token 446: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -1.6166903151315637e-05
    2. '_' → logprob: -11.500016212463379
    3. 'prime' → logprob: -12.750016212463379
    4. '_pair' → logprob: -13.750016212463379
    5. '(n' → logprob: -13.750016212463379
    6. '```' → logprob: -15.250016212463379
    7. '_pairs' → logprob: -15.750016212463379
    8. '_n' → logprob: -16.625015258789062
    9. 'Prime' → logprob: -16.750015258789062
    10. '\' → logprob: -16.750015258789062

Token 447: '_pairs' (ID: 90005)
  Prédit: '_pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -0.00014919086243025959
    2. '_prime' → logprob: -9.00014877319336
    3. 'pairs' → logprob: -10.62514877319336
    4. '_' → logprob: -14.50014877319336
    5. '_pair' → logprob: -15.25014877319336
    6. '```' → logprob: -15.62514877319336
    7. 'Pairs' → logprob: -15.87514877319336
    8. 'prime' → logprob: -15.87514877319336
    9. 's' → logprob: -16.12514877319336
    10. ' pairs' → logprob: -16.75014877319336

Token 448: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00014132341311778873
    2. '(' → logprob: -8.875141143798828
    3. ' (' → logprob: -13.875141143798828
    4. '(
' → logprob: -14.625141143798828
    5. '(noun' → logprob: -18.500141143798828
    6. '(result' → logprob: -19.000141143798828
    7. '(

' → logprob: -19.000141143798828
    8. '(N' → logprob: -19.250141143798828
    9. '﻿' → logprob: -19.875141143798828
    10. '```' → logprob: -19.875141143798828

Token 449: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5094070477061905e-05
    2. ',is' → logprob: -11.375015258789062
    3. ' ,' → logprob: -12.750015258789062
    4. ',
' → logprob: -14.500015258789062
    5. ')' → logprob: -16.250015258789062
    6. '   ' → logprob: -18.125015258789062
    7. ' is' → logprob: -18.750015258789062
    8. '(is' → logprob: -19.125015258789062
    9. ',)' → logprob: -19.500015258789062
    10. 'is' → logprob: -19.625015258789062

Token 450: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.03804275393486023
    2. ' is' → logprob: -3.2880427837371826
    3. ')' → logprob: -13.663043022155762
    4. ')is' → logprob: -16.413042068481445
    5. ' ' → logprob: -18.663042068481445
    6. '_is' → logprob: -18.788042068481445
    7. '```' → logprob: -18.913042068481445
    8. '   ' → logprob: -19.163042068481445
    9. '	is' → logprob: -19.413042068481445
    10. ' ' → logprob: -20.663042068481445

Token 451: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.00012415809032972902
    2. 'prime' → logprob: -9.000123977661133
    3. '_' → logprob: -14.250123977661133
    4. 'is' → logprob: -17.625123977661133
    5. '```' → logprob: -17.625123977661133
    6. '_pr' → logprob: -17.875123977661133
    7. 'Prime' → logprob: -18.000123977661133
    8. '_true' → logprob: -18.500123977661133
    9. ')' → logprob: -18.500123977661133
    10. ' prime' → logprob: -18.500123977661133

Token 452: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.20142211019992828
    2. ')' → logprob: -1.701422095298767
    3. ')
' → logprob: -11.826421737670898
    4. '       ' → logprob: -13.951421737670898
    5. '   ' → logprob: -15.201421737670898
    6. ' )
' → logprob: -15.826421737670898
    7. ')`
' → logprob: -16.0764217376709
    8. ')

' → logprob: -16.2014217376709
    9. ' )' → logprob: -18.3264217376709
    10. ')#' → logprob: -18.9514217376709

Token 453: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004132780246436596
    2. 'print' → logprob: -5.5041327476501465
    3. ' print' → logprob: -9.879133224487305
    4. '   ' → logprob: -13.504133224487305
    5. '```' → logprob: -13.754133224487305
    6. '        
' → logprob: -14.629133224487305
    7. '
' → logprob: -16.004133224487305
    8. '	print' → logprob: -17.254133224487305
    9. '           ' → logprob: -18.254133224487305
    10. '	' → logprob: -19.629133224487305

Token 454: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -7.505351095460355e-05
    2. ' print' → logprob: -9.500075340270996
    3. '       ' → logprob: -16.50007438659668
    4. '
' → logprob: -19.12507438659668
    5. '   ' → logprob: -20.50007438659668
    6. '```' → logprob: -20.87507438659668
    7. '	print' → logprob: -21.75007438659668
    8. '        
' → logprob: -22.62507438659668
    9. 'pr' → logprob: -23.50007438659668
    10. '#print' → logprob: -24.37507438659668

Token 455: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -1.981667537620524e-06
    2. '(' → logprob: -13.250001907348633
    3. 'result' → logprob: -16.875001907348633
    4. '(res' → logprob: -17.375001907348633
    5. '(f' → logprob: -18.250001907348633
    6. '(results' → logprob: -19.125001907348633
    7. '(resultado' → logprob: -20.000001907348633
    8. '=result' → logprob: -20.125001907348633
    9. ',result' → logprob: -21.000001907348633
    10. ' (' → logprob: -21.000001907348633

Token 456: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ')`' → logprob: -16.875
    3. ' )' → logprob: -17.125
    4. '))' → logprob: -17.625
    5. '())' → logprob: -18.375
    6. ')
' → logprob: -18.875
    7. '()' → logprob: -19.125
    8. ')}' → logprob: -19.25
    9. '`)' → logprob: -19.75
    10. '),' → logprob: -20.125

Token 457: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 458: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0061079589650034904
    2. '__' → logprob: -5.506107807159424
    3. '_' → logprob: -6.381107807159424
    4. ' _' → logprob: -8.506108283996582
    5. ' ' → logprob: -9.756108283996582
    6. ' ___' → logprob: -10.631108283996582
    7. '___' → logprob: -10.631108283996582
    8. '_name' → logprob: -11.756108283996582
    9. ' ' → logprob: -12.006108283996582
    10. '  ' → logprob: -13.256108283996582

Token 459: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.1760258823633194
    2. ' ==' → logprob: -2.051025867462158
    3. '==' → logprob: -4.301025867462158
    4. ' __' → logprob: -4.926025867462158
    5. '.__' → logprob: -5.301025867462158
    6. 'name' → logprob: -6.676025867462158
    7. '__.__' → logprob: -6.801025867462158
    8. '=="' → logprob: -7.051025867462158
    9. '[' → logprob: -7.301025867462158
    10. '("__' → logprob: -8.176026344299316

Token 460: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0001785112835932523
    2. '==' → logprob: -8.750178337097168
    3. '__.__' → logprob: -11.250178337097168
    4. '=="' → logprob: -12.250178337097168
    5. ' ==' → logprob: -13.250178337097168
    6. '=='' → logprob: -16.625179290771484
    7. '__.' → logprob: -16.750179290771484
    8. '__["' → logprob: -16.750179290771484
    9. '___' → logprob: -16.875179290771484
    10. '____' → logprob: -17.250179290771484

Token 461: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.4276600182056427
    2. '==' → logprob: -1.1776599884033203
    3. ' ==' → logprob: -3.4276599884033203
    4. '=="' → logprob: -4.92765998840332
    5. '=='' → logprob: -8.42765998840332
    6. '__.__' → logprob: -10.80265998840332
    7. '===' → logprob: -11.67765998840332
    8. '=' → logprob: -12.30265998840332
    9. '.__' → logprob: -12.92765998840332
    10. '___' → logprob: -13.05265998840332

Token 462: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.03805548697710037
    2. ''' → logprob: -3.288055419921875
    3. '__' → logprob: -11.663055419921875
    4. ' "__' → logprob: -12.413055419921875
    5. '"name' → logprob: -14.663055419921875
    6. '"user' → logprob: -14.663055419921875
    7. ' '__' → logprob: -16.413055419921875
    8. ''name' → logprob: -17.163055419921875
    9. '("__' → logprob: -17.538055419921875
    10. ''user' → logprob: -17.663055419921875

Token 463: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.652451464906335e-05
    2. '__' → logprob: -11.125016212463379
    3. 'name' → logprob: -13.875016212463379
    4. '_main' → logprob: -14.375016212463379
    5. ' main' → logprob: -15.750016212463379
    6. 'ma' → logprob: -16.500017166137695
    7. 'm' → logprob: -17.500017166137695
    8. 'mp' → logprob: -18.625017166137695
    9. 'maine' → logprob: -18.625017166137695
    10. '__":
' → logprob: -19.000017166137695

Token 464: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.029784509912133217
    2. '__' → logprob: -3.5297844409942627
    3. '__':
' → logprob: -10.404784202575684
    4. '__:' → logprob: -13.154784202575684
    5. '__["' → logprob: -14.279784202575684
    6. '":' → logprob: -14.779784202575684
    7. '```' → logprob: -15.654784202575684
    8. '__",' → logprob: -15.904784202575684
    9. '_' → logprob: -16.40478515625
    10. '__("' → logprob: -16.77978515625

Token 465: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.6286106983898208e-05
    2. ' main' → logprob: -11.125016212463379
    3. '	main' → logprob: -14.000016212463379
    4. '   ' → logprob: -14.875016212463379
    5. '_main' → logprob: -15.000016212463379
    6. 'm' → logprob: -17.875017166137695
    7. '(main' → logprob: -18.000017166137695
    8. 'ma' → logprob: -18.125017166137695
    9. 'mainwindow' → logprob: -18.125017166137695
    10. 'maine' → logprob: -18.250017166137695

Token 466: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -16.75
    3. '	main' → logprob: -22.5
    4. 'ma' → logprob: -22.625
    5. 'mai' → logprob: -22.625
    6. 'm' → logprob: -22.875
    7. '   ' → logprob: -25.125
    8. 'maine' → logprob: -25.25
    9. 'mainwindow' → logprob: -25.875
    10. '.main' → logprob: -25.875

Token 467: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 465
Tokens correctement prédits (1ère position, stricte): 185
Tokens correctement prédits (1ère position, avec adaptation): 198
Tokens correctement prédits (top 10): 377
Précision stricte (1ère position): 39.78%
Précision adaptée (1ère position): 42.58%
Précision (top 10): 81.08%
================================================================================
