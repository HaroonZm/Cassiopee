================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:12:11
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def is_set(cards):
    # cards: list of (num, color) of length 3
    nums = [c[0] for c in cards]
    colors = [c[1] for c in cards]
    # all same color
    if len(set(colors)) != 1:
        return False
    # all same number
    if len(set(nums)) == 1:
        return True
    # consecutive numbers, no wrap-around
    sorted_nums = sorted(nums)
    return sorted_nums[0] + 1 == sorted_nums[1] and sorted_nums[1] + 1 == sorted_nums[2]

def can_form_sets(cards, used, depth=0):
    # cards: list of 9 cards (num,color)
    # used: boolean list if card is used
    # depth: number of sets formed so far
    if depth == 3:
        return True
    # try all combinations of 3 cards not used
    n = len(cards)
    for i in range(n):
        if used[i]:
            continue
        for j in range(i+1, n):
            if used[j]:
                continue
            for k in range(j+1, n):
                if used[k]:
                    continue
                triple = [cards[i], cards[j], cards[k]]
                if is_set(triple):
                    used[i] = used[j] = used[k] = True
                    if can_form_sets(cards, used, depth+1):
                        return True
                    used[i] = used[j] = used[k] = False
    return False

T = int(input())
for _ in range(T):
    nums = list(map(int, input().split()))
    colors = input().split()
    cards = list(zip(nums, colors))
    used = [False]*9
    print(1 if can_form_sets(cards, used) else 0)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' is' (ID: 382)
  → Token d'amorce (pas de prédiction)

Token 2: '_set' (ID: 5451)
  → Token d'amorce (pas de prédiction)

Token 3: '(cards' (ID: 161529)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.041248712688684464
    2. '_' → logprob: -3.2912487983703613
    3. '(_' → logprob: -7.416248798370361
    4. '_(' → logprob: -7.416248798370361
    5. '_parent' → logprob: -7.791248798370361
    6. 'def' → logprob: -8.166248321533203
    7. '(_:' → logprob: -8.291248321533203
    8. '(a' → logprob: -8.916248321533203
    9. '```' → logprob: -9.291248321533203
    10. '_a' → logprob: -9.791248321533203

Token 4: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005655251909047365
    2. ')' → logprob: -5.755655288696289
    3. '[' → logprob: -6.130655288696289
    4. '[]):' → logprob: -8.880655288696289
    5. ':' → logprob: -9.505655288696289
    6. '   ' → logprob: -11.130655288696289
    7. '):
' → logprob: -11.380655288696289
    8. '```' → logprob: -11.630655288696289
    9. '<|end|>' → logprob: -12.005655288696289
    10. ' ):' → logprob: -12.630655288696289

Token 5: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7973301410675049
    2. '   ' → logprob: -0.9223301410675049
    3. '(' → logprob: -2.297330141067505
    4. '```' → logprob: -3.422330141067505
    5. '():' → logprob: -4.422329902648926
    6. ' ' → logprob: -7.047329902648926
    7. '``' → logprob: -7.422329902648926
    8. '(
' → logprob: -7.422329902648926
    9. '    
' → logprob: -7.672329902648926
    10. ':
' → logprob: -7.922329902648926

Token 6: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028659528121352196
    2. '```' → logprob: -4.403659343719482
    3. '(' → logprob: -5.403659343719482
    4. ' ' → logprob: -5.653659343719482
    5. '[' → logprob: -5.778659343719482
    6. ':' → logprob: -7.153659343719482
    7. '``' → logprob: -7.528659343719482
    8. '_' → logprob: -7.528659343719482
    9. ' if' → logprob: -7.778659343719482
    10. ''' → logprob: -8.27865982055664

Token 7: ' cards' (ID: 10541)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.0715210437774658
    2. ' len' → logprob: -1.0715210437774658
    3. '   ' → logprob: -2.071521043777466
    4. ' set' → logprob: -3.196521043777466
    5. 'len' → logprob: -3.321521043777466
    6. 'return' → logprob: -3.821521043777466
    7. ' cards' → logprob: -3.946521043777466
    8. ' s' → logprob: -4.196520805358887
    9. ' ' → logprob: -4.196520805358887
    10. ' all' → logprob: -4.571520805358887

Token 8: ':' (ID: 25)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3760243058204651
    2. '.' → logprob: -2.0010242462158203
    3. ' =' → logprob: -3.1260242462158203
    4. ')' → logprob: -3.6260242462158203
    5. ' ==' → logprob: -3.6260242462158203
    6. '=' → logprob: -4.12602424621582
    7. '<|end|>' → logprob: -4.25102424621582
    8. ':' → logprob: -5.12602424621582
    9. '"' → logprob: -5.12602424621582
    10. ''' → logprob: -5.25102424621582

Token 9: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -1.0112439393997192
    2. ' set' → logprob: -1.7612439393997192
    3. ' List' → logprob: -1.7612439393997192
    4. ' ' → logprob: -2.0112438201904297
    5. ' str' → logprob: -3.1362438201904297
    6. ' [' → logprob: -3.6362438201904297
    7. 'list' → logprob: -4.51124382019043
    8. '   ' → logprob: -4.63624382019043
    9. ' cards' → logprob: -4.63624382019043
    10. ')' → logprob: -4.88624382019043

Token 10: ' of' (ID: 328)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09348783642053604
    2. '```' → logprob: -3.9684877395629883
    3. ')' → logprob: -4.093487739562988
    4. '(' → logprob: -4.093487739562988
    5. '[
' → logprob: -5.093487739562988
    6. '<|end|>' → logprob: -5.093487739562988
    7. '.' → logprob: -5.343487739562988
    8. '[]' → logprob: -5.343487739562988
    9. '   ' → logprob: -5.593487739562988
    10. ''' → logprob: -5.593487739562988

Token 11: ' (' (ID: 350)
  Prédit: ' str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.3111886978149414
    2. ' tuples' → logprob: -2.0611886978149414
    3. ' three' → logprob: -2.9361886978149414
    4. ' strings' → logprob: -3.5611886978149414
    5. 'str' → logprob: -3.9361886978149414
    6. ' ' → logprob: -4.561188697814941
    7. ' dict' → logprob: -4.686188697814941
    8. ' card' → logprob: -5.311188697814941
    9. ' lists' → logprob: -5.561188697814941
    10. ' cards' → logprob: -5.686188697814941

Token 12: 'num' (ID: 4571)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.1874350905418396
    2. 'str' → logprob: -2.1874351501464844
    3. ' int' → logprob: -3.6874351501464844
    4. 'tuple' → logprob: -4.187435150146484
    5. ' str' → logprob: -4.812435150146484
    6. 'rank' → logprob: -5.437435150146484
    7. ' tuple' → logprob: -6.312435150146484
    8. '   ' → logprob: -6.437435150146484
    9. ' rank' → logprob: -6.812435150146484
    10. ' ' → logprob: -7.937435150146484

Token 13: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01601477712392807
    2. ')' → logprob: -4.891014575958252
    3. 's' → logprob: -5.016014575958252
    4. ' ,' → logprob: -6.891014575958252
    5. ',num' → logprob: -8.01601505279541
    6. ',int' → logprob: -8.89101505279541
    7. ',char' → logprob: -10.39101505279541
    8. '<|end|>' → logprob: -10.39101505279541
    9. ',)' → logprob: -10.51601505279541
    10. '   ' → logprob: -10.76601505279541

Token 14: ' color' (ID: 3089)
  Prédit: 'shape'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shape' → logprob: -0.6610936522483826
    2. 'color' → logprob: -0.9110936522483826
    3. ' color' → logprob: -3.1610937118530273
    4. ' shape' → logprob: -4.411093711853027
    5. 'sh' → logprob: -4.786093711853027
    6. 'symbol' → logprob: -5.161093711853027
    7. ' ' → logprob: -5.661093711853027
    8. 'shade' → logprob: -6.036093711853027
    9. 'type' → logprob: -6.411093711853027
    10. ' symbol' → logprob: -6.536093711853027

Token 15: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09230872243642807
    2. ',' → logprob: -2.467308759689331
    3. 's' → logprob: -5.717308521270752
    4. ')s' → logprob: -10.21730899810791
    5. '_,' → logprob: -11.71730899810791
    6. '_' → logprob: -12.09230899810791
    7. '),' → logprob: -12.46730899810791
    8. '```' → logprob: -12.71730899810791
    9. ')_' → logprob: -12.84230899810791
    10. ' ,' → logprob: -12.96730899810791

Token 16: ' of' (ID: 328)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5946382880210876
    2. '   ' → logprob: -0.9696382880210876
    3. ')' → logprob: -3.8446383476257324
    4. '):' → logprob: -4.344638347625732
    5. ':
' → logprob: -4.469638347625732
    6. '[' → logprob: -5.219638347625732
    7. ',' → logprob: -5.844638347625732
    8. '```' → logprob: -5.844638347625732
    9. ' ' → logprob: -6.219638347625732
    10. '<|end|>' → logprob: -6.469638347625732

Token 17: ' length' (ID: 5517)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7251288890838623
    2. ' ' → logprob: -1.3501288890838623
    3. ' tuples' → logprob: -1.9751288890838623
    4. ' cards' → logprob: -3.7251288890838623
    5. ' three' → logprob: -3.8501288890838623
    6. 's' → logprob: -4.350129127502441
    7. ' )' → logprob: -4.725129127502441
    8. '_' → logprob: -4.725129127502441
    9. ' str' → logprob: -4.850129127502441
    10. ' tuple' → logprob: -4.850129127502441

Token 18: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13031525909900665
    2. '3' → logprob: -2.1303153038024902
    3. '4' → logprob: -5.88031530380249
    4. '  ' → logprob: -8.380314826965332
    5. '```' → logprob: -9.130314826965332
    6. '6' → logprob: -10.130314826965332
    7. '1' → logprob: -10.255314826965332
    8. '`' → logprob: -10.505314826965332
    9. '   ' → logprob: -10.880314826965332
    10. ')' → logprob: -10.880314826965332

Token 19: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.020549828186631203
    2. ' ' → logprob: -3.895549774169922
    3. '  ' → logprob: -12.645549774169922
    4. '   ' → logprob: -13.395549774169922
    5. '4' → logprob: -14.020549774169922
    6. '_' → logprob: -14.020549774169922
    7. 'len' → logprob: -15.083049774169922
    8. ')' → logprob: -15.208049774169922
    9. '1' → logprob: -15.395549774169922
    10. '```' → logprob: -16.458049774169922

Token 20: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2699510455131531
    2. '   ' → logprob: -1.6449511051177979
    3. '[' → logprob: -4.144950866699219
    4. ':
' → logprob: -4.394950866699219
    5. ')' → logprob: -5.644950866699219
    6. '```' → logprob: -5.894950866699219
    7. '):' → logprob: -6.019950866699219
    8. ' ' → logprob: -6.144950866699219
    9. '(' → logprob: -7.769950866699219
    10. ',' → logprob: -7.894950866699219

Token 21: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10820929706096649
    2. ':' → logprob: -2.3582093715667725
    3. '):' → logprob: -5.733209133148193
    4. ')' → logprob: -5.858209133148193
    5. '```' → logprob: -8.108209609985352
    6. '    
' → logprob: -8.358209609985352
    7. ':
' → logprob: -8.483209609985352
    8. ' :' → logprob: -8.733209609985352
    9. '    ' → logprob: -9.108209609985352
    10. ',' → logprob: -9.108209609985352

Token 22: ' nums' (ID: 18117)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20743556320667267
    2. '   ' → logprob: -1.9574356079101562
    3. '[' → logprob: -3.9574356079101562
    4. '```' → logprob: -4.707435607910156
    5. ' ' → logprob: -5.332435607910156
    6. ':
' → logprob: -6.332435607910156
    7. ':return' → logprob: -6.457435607910156
    8. '\n' → logprob: -6.457435607910156
    9. ''' → logprob: -6.582435607910156
    10. ' :' → logprob: -7.082435607910156

Token 23: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4395248591899872
    2. '[' → logprob: -2.3145248889923096
    3. ' =' → logprob: -2.3145248889923096
    4. '=' → logprob: -2.5645248889923096
    5. ')' → logprob: -3.4395248889923096
    6. ',' → logprob: -4.0645246505737305
    7. '.' → logprob: -4.4395246505737305
    8. '[]' → logprob: -5.4395246505737305
    9. ' _' → logprob: -5.8145246505737305
    10. '[:]' → logprob: -6.0645246505737305

Token 24: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.415179580450058
    2. '[' → logprob: -2.165179491043091
    3. '[c' → logprob: -2.290179491043091
    4. '{' → logprob: -2.665179491043091
    5. ' {' → logprob: -3.540179491043091
    6. ' set' → logprob: -4.41517972946167
    7. '[len' → logprob: -4.79017972946167
    8. 'set' → logprob: -5.79017972946167
    9. '[num' → logprob: -7.79017972946167
    10. '[list' → logprob: -8.040179252624512

Token 25: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6978851556777954
    2. 'card' → logprob: -0.6978851556777954
    3. 'cards' → logprob: -5.572885036468506
    4. ' card' → logprob: -7.447885036468506
    5. ' c' → logprob: -8.572885513305664
    6. 'x' → logprob: -9.072885513305664
    7. 'num' → logprob: -10.822885513305664
    8. ' cards' → logprob: -11.697885513305664
    9. 'int' → logprob: -12.072885513305664
    10. '   ' → logprob: -13.447885513305664

Token 26: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '[num' → logprob: -17.25
    3. '\[' → logprob: -17.75
    4. '[i' → logprob: -19.125
    5. ' [' → logprob: -19.375
    6. '[-' → logprob: -19.5
    7. '[
' → logprob: -19.625
    8. '```' → logprob: -19.75
    9. '[len' → logprob: -20.25
    10. '()[' → logprob: -21.125

Token 27: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '   ' → logprob: -18.375001907348633
    4. '1' → logprob: -18.500001907348633
    5. '[' → logprob: -18.875001907348633
    6. ')' → logprob: -19.312501907348633
    7. '```' → logprob: -19.625001907348633
    8. '۰' → logprob: -19.750001907348633
    9. 'num' → logprob: -20.125001907348633
    10. ']' → logprob: -20.187501907348633

Token 28: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0022124657407402992
    2. ')' → logprob: -6.3772125244140625
    3. ' for' → logprob: -8.002212524414062
    4. ' ]' → logprob: -9.002212524414062
    5. 'for' → logprob: -10.502212524414062
    6. ')]' → logprob: -12.252212524414062
    7. '   ' → logprob: -12.752212524414062
    8. '],' → logprob: -12.752212524414062
    9. ']]' → logprob: -13.127212524414062
    10. ']==' → logprob: -13.127212524414062

Token 29: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12715214490890503
    2. 'for' → logprob: -2.12715220451355
    3. ',' → logprob: -9.002152442932129
    4. '   ' → logprob: -10.377152442932129
    5. ' ' → logprob: -10.377152442932129
    6. ')' → logprob: -11.252152442932129
    7. '```' → logprob: -11.752152442932129
    8. '	for' → logprob: -12.252152442932129
    9. '    ' → logprob: -12.377152442932129
    10. ']' → logprob: -13.002152442932129

Token 30: ' c' (ID: 274)
  Prédit: ' cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cards' → logprob: -0.003892353270202875
    2. ' c' → logprob: -5.878892421722412
    3. 'cards' → logprob: -7.128892421722412
    4. 'c' → logprob: -8.378891944885254
    5. ' ' → logprob: -10.753891944885254
    6. ' card' → logprob: -11.003891944885254
    7. '(cards' → logprob: -11.878891944885254
    8. '_cards' → logprob: -12.503891944885254
    9. '.cards' → logprob: -13.128891944885254
    10. ' the' → logprob: -13.378891944885254

Token 31: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5285610556602478
    2. 'in' → logprob: -1.5285611152648926
    3. 'n' → logprob: -1.6535611152648926
    4. 'c' → logprob: -7.028561115264893
    5. 's' → logprob: -7.528561115264893
    6. '	in' → logprob: -8.653560638427734
    7. 'i' → logprob: -8.778560638427734
    8. ' ' → logprob: -9.028560638427734
    9. '_' → logprob: -9.278560638427734
    10. '   ' → logprob: -9.528560638427734

Token 32: ' cards' (ID: 10541)
  Prédit: ' cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cards' → logprob: -0.5760098099708557
    2. 'cards' → logprob: -0.8260098099708557
    3. '(cards' → logprob: -9.701009750366211
    4. '.cards' → logprob: -11.826009750366211
    5. '/cards' → logprob: -14.201009750366211
    6. 'c' → logprob: -14.576009750366211
    7. ' ' → logprob: -15.201009750366211
    8. '_cards' → logprob: -15.326009750366211
    9. 'card' → logprob: -16.70100975036621
    10. 'cars' → logprob: -16.70100975036621

Token 33: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0011647457722574472
    2. '   ' → logprob: -7.25116491317749
    3. ' ]' → logprob: -8.001164436340332
    4. ')' → logprob: -9.126164436340332
    5. ')]' → logprob: -12.501164436340332
    6. ',' → logprob: -12.751164436340332
    7. '])' → logprob: -14.376164436340332
    8. ']
' → logprob: -14.501164436340332
    9. ' ' → logprob: -14.626164436340332
    10. '`]' → logprob: -15.251164436340332

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3302289545536041
    2. 'colors' → logprob: -1.8302289247512817
    3. ' colors' → logprob: -2.2052290439605713
    4. ',' → logprob: -5.955228805541992
    5. ')' → logprob: -6.080228805541992
    6. ' color' → logprob: -6.580228805541992
    7. 's' → logprob: -7.205228805541992
    8. ' if' → logprob: -7.330228805541992
    9. ' s' → logprob: -7.330228805541992
    10. '_colors' → logprob: -7.705228805541992

Token 35: ' colors' (ID: 10803)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colors' (adapté à ' colors') → logprob: -0.6672765016555786
    2. ' colors' → logprob: -0.7922765016555786
    3. '   ' → logprob: -4.292276382446289
    4. ' all' → logprob: -6.042276382446289
    5. ' if' → logprob: -6.167276382446289
    6. ' s' → logprob: -6.292276382446289
    7. ' ' → logprob: -6.792276382446289
    8. ' \' → logprob: -6.917276382446289
    9. ' cols' → logprob: -7.042276382446289
    10. ' counts' → logprob: -7.042276382446289

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03805997222661972
    2. '=' → logprob: -3.288059949874878
    3. '[' → logprob: -11.788060188293457
    4. ')' → logprob: -12.538060188293457
    5. ' =[' → logprob: -12.913060188293457
    6. ' ' → logprob: -13.038060188293457
    7. ']' → logprob: -13.788060188293457
    8. '<|end|>' → logprob: -15.163060188293457
    9. '  ' → logprob: -15.413060188293457
    10. ' =)' → logprob: -15.538060188293457

Token 37: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.029856359586119652
    2. '[c' → logprob: -3.5298564434051514
    3. '[' → logprob: -9.15485668182373
    4. ' ' → logprob: -16.029855728149414
    5. ' c' → logprob: -17.654855728149414
    6. '[f' → logprob: -18.154855728149414
    7. ' `[' → logprob: -18.279855728149414
    8. ' ' → logprob: -18.279855728149414
    9. '[t' → logprob: -19.029855728149414
    10. '([' → logprob: -19.404855728149414

Token 38: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.4855663721391466e-05
    2. ' c' → logprob: -11.125015258789062
    3. '   ' → logprob: -17.125015258789062
    4. '	c' → logprob: -17.500015258789062
    5. ')c' → logprob: -18.125015258789062
    6. ' ' → logprob: -20.000015258789062
    7. '  ' → logprob: -20.000015258789062
    8. '    ' → logprob: -20.625015258789062
    9. '```' → logprob: -20.875015258789062
    10. 'с' → logprob: -21.000015258789062

Token 39: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.088346359931165e-07
    2. '][' → logprob: -15.000000953674316
    3. ' [' → logprob: -15.375000953674316
    4. '```' → logprob: -15.500000953674316
    5. ''[' → logprob: -17.125
    6. '1' → logprob: -17.25
    7. '\[' → logprob: -17.75
    8. ')[' → logprob: -18.25
    9. '>[' → logprob: -18.375
    10. '   ' → logprob: -18.875

Token 40: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.869017852295656e-06
    2. '0' → logprob: -12.125006675720215
    3. '```' → logprob: -14.625006675720215
    4. ' ' → logprob: -15.000006675720215
    5. '[' → logprob: -15.125006675720215
    6. '-' → logprob: -16.75000762939453
    7. '' → logprob: -16.87500762939453
    8. ']' → logprob: -16.93750762939453
    9. '
' → logprob: -17.37500762939453
    10. '۱' → logprob: -17.87500762939453

Token 41: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3259323835372925
    2. 'for' → logprob: -1.9509323835372925
    3. ' for' → logprob: -2.075932502746582
    4. ')' → logprob: -4.575932502746582
    5. ' ]' → logprob: -8.950932502746582
    6. '   ' → logprob: -9.450932502746582
    7. ' ' → logprob: -10.700932502746582
    8. '```' → logprob: -11.325932502746582
    9. ')]' → logprob: -11.825932502746582
    10. '	for' → logprob: -12.450932502746582

Token 42: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06199413165450096
    2. 'for' → logprob: -2.8119940757751465
    3. ')' → logprob: -10.811994552612305
    4. ' in' → logprob: -12.811994552612305
    5. ']' → logprob: -13.311994552612305
    6. ' ' → logprob: -13.561994552612305
    7. '	for' → logprob: -15.061994552612305
    8. '```' → logprob: -15.811994552612305
    9. 'in' → logprob: -16.686994552612305
    10. '   ' → logprob: -16.686994552612305

Token 43: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5236921906471252
    2. ' c' → logprob: -0.8986921906471252
    3. ' cards' → logprob: -7.5236921310424805
    4. 'cards' → logprob: -11.02369213104248
    5. ' card' → logprob: -12.27369213104248
    6. '_' → logprob: -13.39869213104248
    7. ' in' → logprob: -13.77369213104248
    8. ' ' → logprob: -13.89869213104248
    9. 'card' → logprob: -13.89869213104248
    10. '	c' → logprob: -14.14869213104248

Token 44: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007674653083086014
    2. 'in' → logprob: -4.882674694061279
    3. 'c' → logprob: -10.007674217224121
    4. ' ' → logprob: -12.257674217224121
    5. 's' → logprob: -12.257674217224121
    6. ']' → logprob: -12.382674217224121
    7. 'n' → logprob: -12.507674217224121
    8. 'cards' → logprob: -13.382674217224121
    9. '[' → logprob: -14.132674217224121
    10. ' cards' → logprob: -14.382674217224121

Token 45: ' cards' (ID: 10541)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.5761038661003113
    2. ' cards' → logprob: -0.8261038661003113
    3. '(cards' → logprob: -8.951104164123535
    4. '.cards' → logprob: -10.951104164123535
    5. 'c' → logprob: -11.576104164123535
    6. 'colors' → logprob: -12.201104164123535
    7. '_cards' → logprob: -13.701104164123535
    8. '/cards' → logprob: -14.201104164123535
    9. ')' → logprob: -15.576104164123535
    10. ' ' → logprob: -15.951104164123535

Token 46: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002514455991331488
    2. ')' → logprob: -8.875251770019531
    3. '   ' → logprob: -9.875251770019531
    4. ')]' → logprob: -10.375251770019531
    5. ' ]' → logprob: -11.000251770019531
    6. '])' → logprob: -11.500251770019531
    7. ']
' → logprob: -13.625251770019531
    8. '`]' → logprob: -15.500251770019531
    9. '()]' → logprob: -15.750251770019531
    10. '']' → logprob: -15.750251770019531

Token 47: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002361498074606061
    2. '
' → logprob: -7.502361297607422
    3. '    
' → logprob: -7.627361297607422
    4. 'return' → logprob: -8.252361297607422
    5. 'n' → logprob: -8.752361297607422
    6. '\n' → logprob: -8.752361297607422
    7. '```' → logprob: -8.877361297607422
    8. ')' → logprob: -8.877361297607422
    9. '<|end|>' → logprob: -9.627361297607422
    10. ' ' → logprob: -10.002361297607422

Token 48: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8776343464851379
    2. 'i' → logprob: -1.7526342868804932
    3. ' if' → logprob: -1.7526342868804932
    4. '   ' → logprob: -2.252634286880493
    5. ' ' → logprob: -2.752634286880493
    6. 'n' → logprob: -3.752634286880493
    7. 'return' → logprob: -4.627634525299072
    8. ' i' → logprob: -5.127634525299072
    9. 'r' → logprob: -5.377634525299072
    10. ')' → logprob: -5.377634525299072

Token 49: ' all' (ID: 722)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.25877824425697327
    2. ' if' → logprob: -1.6337782144546509
    3. 'return' → logprob: -4.008778095245361
    4. '   ' → logprob: -5.008778095245361
    5. ' return' → logprob: -5.258778095245361
    6. 'all' → logprob: -7.258778095245361
    7. ' all' → logprob: -7.758778095245361
    8. 'for' → logprob: -8.00877857208252
    9. ' ' → logprob: -8.13377857208252
    10. 'def' → logprob: -8.13377857208252

Token 50: ' same' (ID: 2684)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006413076189346611
    2. '(
' → logprob: -7.625641345977783
    3. '(len' → logprob: -9.875640869140625
    4. '_' → logprob: -10.375640869140625
    5. 'def' → logprob: -10.875640869140625
    6. '(

' → logprob: -11.500640869140625
    7. ' (' → logprob: -11.875640869140625
    8. 's' → logprob: -12.000640869140625
    9. 'len' → logprob: -12.125640869140625
    10. '(nums' → logprob: -12.500640869140625

Token 51: ' color' (ID: 3089)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.5599384903907776
    2. '   ' → logprob: -1.0599384307861328
    3. ' ' → logprob: -3.184938430786133
    4. '    ' → logprob: -4.184938430786133
    5. ' if' → logprob: -4.309938430786133
    6. 'or' → logprob: -5.684938430786133
    7. '  ' → logprob: -6.434938430786133
    8. '<|end|>' → logprob: -6.559938430786133
    9. ')' → logprob: -6.684938430786133
    10. ' and' → logprob: -6.809938430786133

Token 52: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003434942802414298
    2. ' or' → logprob: -6.378435134887695
    3. ' if' → logprob: -7.253435134887695
    4. ' ' → logprob: -8.128435134887695
    5. '<|end|>' → logprob: -8.878435134887695
    6. '    ' → logprob: -9.253435134887695
    7. '  ' → logprob: -9.503435134887695
    8. 'return' → logprob: -9.503435134887695
    9. ')' → logprob: -9.753435134887695
    10. ',' → logprob: -9.878435134887695

Token 53: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27779847383499146
    2. ' if' → logprob: -2.0277984142303467
    3. ' or' → logprob: -2.4027984142303467
    4. ' ' → logprob: -4.902798652648926
    5. 'if' → logprob: -5.777798652648926
    6. ',' → logprob: -6.277798652648926
    7. ' return' → logprob: -6.402798652648926
    8. 'or' → logprob: -6.902798652648926
    9. 'return' → logprob: -6.902798652648926
    10. ')' → logprob: -7.152798652648926

Token 54: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5781238675117493
    2. ' if' → logprob: -0.9531238675117493
    3. ' return' → logprob: -3.2031238079071045
    4. 'return' → logprob: -4.828124046325684
    5. 'if' (adapté à ' if') → logprob: -5.578124046325684
    6. ' or' → logprob: -7.953124046325684
    7. ' ' → logprob: -8.078124046325684
    8. '    ' → logprob: -8.578124046325684
    9. ')' → logprob: -9.578124046325684
    10. '  ' → logprob: -10.328124046325684

Token 55: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.10547535866498947
    2. ' colors' → logprob: -2.605475425720215
    3. 'len' → logprob: -4.230475425720215
    4. ' all' → logprob: -4.605475425720215
    5. 'colors' → logprob: -6.480475425720215
    6. 'all' → logprob: -9.480475425720215
    7. ' ' → logprob: -9.605475425720215
    8. '(len' → logprob: -12.105475425720215
    9. ' color' → logprob: -13.480475425720215
    10. ' set' → logprob: -13.480475425720215

Token 56: '(set' (ID: 25904)
  Prédit: '(set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(set' → logprob: -0.00043913270928896964
    2. '(' → logprob: -7.750439167022705
    3. '(colors' → logprob: -12.000438690185547
    4. ' (' → logprob: -13.625438690185547
    5. '({' → logprob: -15.125438690185547
    6. '(s' → logprob: -15.750438690185547
    7. '```' → logprob: -15.875438690185547
    8. 'set' → logprob: -15.875438690185547
    9. ' set' → logprob: -16.250438690185547
    10. '(color' → logprob: -16.625438690185547

Token 57: '(colors' (ID: 131922)
  Prédit: '(colors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(colors' → logprob: -0.0001375089050270617
    2. ' (' → logprob: -9.000137329101562
    3. '(nums' → logprob: -12.375137329101562
    4. '(color' → logprob: -12.500137329101562
    5. 'colors' → logprob: -13.250137329101562
    6. '(cols' → logprob: -13.500137329101562
    7. '(cards' → logprob: -13.625137329101562
    8. ' colors' → logprob: -14.125137329101562
    9. '(numbers' → logprob: -14.875137329101562
    10. '(' → logprob: -15.375137329101562

Token 58: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0039496938697993755
    2. ' ))' → logprob: -5.6289496421813965
    3. ')' → logprob: -8.128950119018555
    4. '()))' → logprob: -10.003950119018555
    5. ' )' → logprob: -12.628950119018555
    6. ')))' → logprob: -12.878950119018555
    7. ' ' → logprob: -13.503950119018555
    8. '   ' → logprob: -14.503950119018555
    9. ''))' → logprob: -15.253950119018555
    10. ')==' → logprob: -15.378950119018555

Token 59: ' !=' (ID: 1666)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.20063234865665436
    2. ' !=' → logprob: -2.325632333755493
    3. ')' → logprob: -3.450632333755493
    4. ' ' → logprob: -3.450632333755493
    5. '==' → logprob: -4.075632572174072
    6. ' )' → logprob: -6.075632572174072
    7. '!=' → logprob: -7.825632572174072
    8. '=' → logprob: -8.450632095336914
    9. '  ' → logprob: -8.700632095336914
    10. ')==' → logprob: -9.075632095336914

Token 60: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.47563326358795166
    2. ' ' → logprob: -0.9756332635879517
    3. '3' → logprob: -6.475633144378662
    4. '  ' → logprob: -11.72563362121582
    5. ' ' → logprob: -12.85063362121582
    6. '   ' → logprob: -13.22563362121582
    7. '```' → logprob: -13.72563362121582
    8. '    ' → logprob: -15.35063362121582
    9. '

' → logprob: -16.22563362121582
    10. ')' → logprob: -16.41313362121582

Token 61: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015562419139314443
    2. ' ' → logprob: -9.000155448913574
    3. '3' → logprob: -10.375155448913574
    4. '```' → logprob: -14.500155448913574
    5. '  ' → logprob: -15.875155448913574
    6. '   ' → logprob: -16.00015640258789
    7. 'len' → logprob: -16.62515640258789
    8. ' ' → logprob: -16.75015640258789
    9. '

' → logprob: -17.25015640258789
    10. '{' → logprob: -17.31265640258789

Token 62: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010937846964225173
    2. '):' → logprob: -7.001093864440918
    3. ' or' → logprob: -9.501093864440918
    4. ':return' → logprob: -9.751093864440918
    5. ':
' → logprob: -10.626093864440918
    6. ')' → logprob: -11.876093864440918
    7. ' and' → logprob: -12.001093864440918
    8. '   ' → logprob: -12.251093864440918
    9. ' :' → logprob: -12.376093864440918
    10. '       ' → logprob: -14.126093864440918

Token 63: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00010163593105971813
    2. '   ' → logprob: -9.500102043151855
    3. '    ' → logprob: -11.375102043151855
    4. ' return' → logprob: -11.500102043151855
    5. 'return' → logprob: -13.250102043151855
    6. ',' → logprob: -14.375102043151855
    7. '     ' → logprob: -14.625102043151855
    8. ':' → logprob: -14.875102043151855
    9. '           ' → logprob: -14.875102043151855
    10. '      ' → logprob: -15.375102043151855

Token 64: ' return' (ID: 622)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.17248113453388214
    2. '       ' → logprob: -2.047481060028076
    3. '   ' → logprob: -3.922481060028076
    4. ' return' → logprob: -5.047481060028076
    5. 'return' (adapté à ' return') → logprob: -6.172481060028076
    6. ' ' → logprob: -7.672481060028076
    7. '     
' → logprob: -8.922481536865234
    8. '        ' → logprob: -9.422481536865234
    9. '```' → logprob: -9.422481536865234
    10. '     ' → logprob: -9.422481536865234

Token 65: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.576118528842926
    2. ' False' → logprob: -0.826118528842926
    3. ' None' → logprob: -9.326118469238281
    4. 'None' → logprob: -9.826118469238281
    5. ' True' → logprob: -10.951118469238281
    6. 'True' → logprob: -11.451118469238281
    7. 'F' → logprob: -12.576118469238281
    8. ' F' → logprob: -13.076118469238281
    9. ' ' → logprob: -13.701118469238281
    10. '(False' → logprob: -15.451118469238281

Token 66: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4721470773220062
    2. '\n' → logprob: -1.7221471071243286
    3. '<|end|>' → logprob: -1.9721471071243286
    4. '
' → logprob: -3.597146987915039
    5. '    
' → logprob: -4.222146987915039
    6. '\' → logprob: -5.722146987915039
    7. ')' → logprob: -5.722146987915039
    8. '  
' → logprob: -6.097146987915039
    9. ' ' → logprob: -6.597146987915039
    10. '  ' → logprob: -6.722146987915039

Token 67: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020632749423384666
    2. '\n' → logprob: -4.520632743835449
    3. '    
' → logprob: -5.395632743835449
    4. '
' → logprob: -6.520632743835449
    5. '    ' → logprob: -6.895632743835449
    6. '  ' → logprob: -7.645632743835449
    7. '<|end|>' → logprob: -7.645632743835449
    8. '  
' → logprob: -8.02063274383545
    9. '\' → logprob: -8.64563274383545
    10. ' ' → logprob: -8.77063274383545

Token 68: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03084665536880493
    2. '\n' → logprob: -4.28084659576416
    3. '    ' → logprob: -5.78084659576416
    4. '<|end|>' → logprob: -5.90584659576416
    5. '  ' → logprob: -6.03084659576416
    6. 'n' → logprob: -6.03084659576416
    7. ' ' → logprob: -6.53084659576416
    8. '    
' → logprob: -6.78084659576416
    9. ',' → logprob: -7.53084659576416
    10. '\' → logprob: -7.65584659576416

Token 69: ' all' (ID: 722)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8481454849243164
    2. 'nums' → logprob: -1.0981454849243164
    3. 'all' → logprob: -1.9731454849243164
    4. ' all' → logprob: -3.3481454849243164
    5. ' if' → logprob: -3.7231454849243164
    6. 'len' → logprob: -4.473145484924316
    7. ' nums' → logprob: -5.098145484924316
    8. 'return' → logprob: -5.223145484924316
    9. '#' → logprob: -5.348145484924316
    10. 'num' → logprob: -5.473145484924316

Token 70: ' same' (ID: 2684)
  Prédit: ' same'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' same' → logprob: -0.4560639560222626
    2. 'same' → logprob: -1.081063985824585
    3. ' nums' → logprob: -4.581063747406006
    4. 'nums' → logprob: -5.456063747406006
    5. ' numbers' → logprob: -5.706063747406006
    6. ' different' → logprob: -5.956063747406006
    7. ' equal' → logprob: -6.831063747406006
    8. ' the' → logprob: -7.081063747406006
    9. 's' → logprob: -7.206063747406006
    10. ' or' → logprob: -7.331063747406006

Token 71: ' number' (ID: 2086)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.3201853036880493
    2. ' or' → logprob: -2.0701851844787598
    3. 'nums' → logprob: -2.0701851844787598
    4. 'or' → logprob: -5.07018518447876
    5. 'number' → logprob: -5.32018518447876
    6. 'numbers' → logprob: -5.57018518447876
    7. ' num' → logprob: -5.69518518447876
    8. ' nums' → logprob: -6.57018518447876
    9. ' number' → logprob: -7.32018518447876
    10. 'def' → logprob: -7.44518518447876

Token 72: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11458861082792282
    2. '<|end|>' → logprob: -2.239588499069214
    3. '<|end|>' → logprob: -6.739588737487793
    4. ' or' → logprob: -8.239588737487793
    5. '    
' → logprob: -9.364588737487793
    6. '```' → logprob: -9.739588737487793
    7. ',' → logprob: -10.239588737487793
    8. '  ' → logprob: -10.864588737487793
    9. ' if' → logprob: -10.864588737487793
    10. '
' → logprob: -10.989588737487793

Token 73: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01938093826174736
    2. '<|end|>' → logprob: -4.019381046295166
    3. ' or' → logprob: -7.019381046295166
    4. '<|end|>' → logprob: -8.894380569458008
    5. ' if' → logprob: -9.144380569458008
    6. '```' → logprob: -11.019380569458008
    7. '    
' → logprob: -11.144380569458008
    8. 'or' → logprob: -11.144380569458008
    9. 'if' → logprob: -11.644380569458008
    10. ',' → logprob: -11.769380569458008

Token 74: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030220631510019302
    2. ' if' → logprob: -3.9052207469940186
    3. 'if' (adapté à ' if') → logprob: -4.6552205085754395
    4. '<|end|>' → logprob: -9.655220985412598
    5. 'If' → logprob: -10.905220985412598
    6. '```' → logprob: -11.280220985412598
    7. '    ' → logprob: -12.155220985412598
    8. '<|end|>' → logprob: -12.405220985412598
    9. '    
' → logprob: -12.655220985412598
    10. ' or' → logprob: -12.780220985412598

Token 75: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.09252814948558807
    2. 'len' → logprob: -2.4675281047821045
    3. ' nums' → logprob: -5.967528343200684
    4. 'nums' → logprob: -7.467528343200684
    5. ' ' → logprob: -8.592528343200684
    6. ' not' → logprob: -8.842528343200684
    7. ' all' → logprob: -10.842528343200684
    8. 'not' → logprob: -10.905028343200684
    9. '   ' → logprob: -10.967528343200684
    10. '  ' → logprob: -11.280028343200684

Token 76: '(set' (ID: 25904)
  Prédit: '(set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(set' → logprob: -0.00023619852436240762
    2. '(' → logprob: -8.750236511230469
    3. ' (' → logprob: -9.500236511230469
    4. '(s' → logprob: -13.500236511230469
    5. ' set' → logprob: -14.375236511230469
    6. '=set' → logprob: -15.500236511230469
    7. '(unique' → logprob: -16.12523651123047
    8. ' ' → logprob: -16.25023651123047
    9. '(Set' → logprob: -16.25023651123047
    10. 'set' → logprob: -16.50023651123047

Token 77: '(nums' (ID: 40372)
  Prédit: '(nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nums' → logprob: -2.057743949990254e-05
    2. ' (' → logprob: -11.125020980834961
    3. '(numbers' → logprob: -12.125020980834961
    4. '(' → logprob: -15.750020980834961
    5. ')' → logprob: -16.25002098083496
    6. '(ids' → logprob: -16.75002098083496
    7. ' nums' → logprob: -17.12502098083496
    8. 'nums' → logprob: -17.75002098083496
    9. '(vals' → logprob: -18.12502098083496
    10. '(chars' → logprob: -18.12502098083496

Token 78: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0007835414726287127
    2. ' ))' → logprob: -7.250783443450928
    3. '   ' → logprob: -10.375783920288086
    4. ')' → logprob: -11.125783920288086
    5. '    ' → logprob: -11.500783920288086
    6. ')))' → logprob: -11.875783920288086
    7. ' ' → logprob: -13.000783920288086
    8. '       ' → logprob: -13.125783920288086
    9. '  ' → logprob: -13.625783920288086
    10. '()))' → logprob: -13.625783920288086

Token 79: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.6447856426239014
    2. '!=' → logprob: -1.7697856426239014
    3. '==' → logprob: -1.8947856426239014
    4. ' ==' → logprob: -2.2697856426239014
    5. ' not' → logprob: -3.0197856426239014
    6. 'not' → logprob: -6.6447858810424805
    7. ' ' → logprob: -8.14478588104248
    8. ')' → logprob: -8.76978588104248
    9. '()!=' → logprob: -8.89478588104248
    10. '   ' → logprob: -9.01978588104248

Token 80: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3410278260707855
    2. ' ' → logprob: -1.591027855873108
    3. '3' → logprob: -2.4660277366638184
    4. '0' → logprob: -8.716028213500977
    5. '   ' → logprob: -10.091028213500977
    6. '2' → logprob: -10.153528213500977
    7. '  ' → logprob: -10.403528213500977
    8. '```' → logprob: -11.716028213500977
    9. '=' → logprob: -11.903528213500977
    10. '    ' → logprob: -12.216028213500977

Token 81: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4481474459171295
    2. '3' → logprob: -1.1981474161148071
    3. ' ' → logprob: -2.9481475353240967
    4. '2' → logprob: -5.448147296905518
    5. '0' → logprob: -6.073147296905518
    6. '   ' → logprob: -8.698147773742676
    7. 'len' → logprob: -9.573147773742676
    8. '  ' → logprob: -9.885647773742676
    9. '```' → logprob: -10.635647773742676
    10. ' len' → logprob: -11.323147773742676

Token 82: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000742803153116256
    2. ':return' → logprob: -7.7507429122924805
    3. ' :' → logprob: -8.87574291229248
    4. ':
' → logprob: -9.25074291229248
    5. ' or' → logprob: -10.25074291229248
    6. '   ' → logprob: -10.62574291229248
    7. '):' → logprob: -12.37574291229248
    8. '    ' → logprob: -12.62574291229248
    9. '       ' → logprob: -12.87574291229248
    10. '=' → logprob: -13.50074291229248

Token 83: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0035074150655418634
    2. ':' → logprob: -6.253507614135742
    3. '   ' → logprob: -6.503507614135742
    4. ',' → logprob: -10.878507614135742
    5. ':return' → logprob: -10.878507614135742
    6. ' return' → logprob: -12.378507614135742
    7. '```' → logprob: -12.378507614135742
    8. ' or' → logprob: -12.503507614135742
    9. '<|end|>' → logprob: -12.503507614135742
    10. '           ' → logprob: -12.628507614135742

Token 84: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008924534544348717
    2. '   ' → logprob: -4.75892448425293
    3. ' return' → logprob: -8.50892448425293
    4. 'return' (adapté à ' return') → logprob: -10.25892448425293
    5. '    ' → logprob: -10.63392448425293
    6. '           ' → logprob: -11.63392448425293
    7. '     ' → logprob: -12.13392448425293
    8. ' ' → logprob: -12.13392448425293
    9. ':' → logprob: -12.63392448425293
    10. '      ' → logprob: -12.63392448425293

Token 85: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.6182721257209778
    2. 'True' → logprob: -0.8682721257209778
    3. 'False' → logprob: -3.618272066116333
    4. ' False' → logprob: -4.243272304534912
    5. ' ' → logprob: -8.493271827697754
    6. 'Tr' → logprob: -11.243271827697754
    7. '  ' → logprob: -11.243271827697754
    8. 'T' → logprob: -11.868271827697754
    9. '   ' → logprob: -12.243271827697754
    10. 'F' → logprob: -12.368271827697754

Token 86: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01156019326299429
    2. '    
' → logprob: -4.761559963226318
    3. '   
' → logprob: -6.761559963226318
    4. '
' → logprob: -7.636559963226318
    5. '  
' → logprob: -8.011560440063477
    6. '  ' → logprob: -8.511560440063477
    7. ' 
' → logprob: -8.636560440063477
    8. '    ' → logprob: -9.261560440063477
    9. '     
' → logprob: -9.261560440063477
    10. 'n' → logprob: -9.386560440063477

Token 87: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0037007967475801706
    2. '    
' → logprob: -5.7537007331848145
    3. '   
' → logprob: -8.128701210021973
    4. '  ' → logprob: -10.253701210021973
    5. ',' → logprob: -10.503701210021973
    6. '     
' → logprob: -10.628701210021973
    7. '  
' → logprob: -10.753701210021973
    8. ' 
' → logprob: -10.878701210021973
    9. '    ' → logprob: -11.003701210021973
    10. ' ' → logprob: -11.378701210021973

Token 88: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14399921894073486
    2. '#' (adapté à ' #') → logprob: -3.6439990997314453
    3. ' #' → logprob: -3.8939990997314453
    4. 'n' → logprob: -4.143999099731445
    5. ' ' → logprob: -4.393999099731445
    6. 'if' → logprob: -4.393999099731445
    7. '    
' → logprob: -4.643999099731445
    8. ' if' → logprob: -5.018999099731445
    9. '  ' → logprob: -5.143999099731445
    10. '    ' → logprob: -5.268999099731445

Token 89: ' consecutive' (ID: 40840)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8494924306869507
    2. 'len' → logprob: -0.8494924306869507
    3. 'return' → logprob: -3.2244925498962402
    4. 'all' → logprob: -3.3494925498962402
    5. ' if' → logprob: -4.22449254989624
    6. ' all' → logprob: -4.47449254989624
    7. 's' → logprob: -5.34949254989624
    8. ' len' → logprob: -5.34949254989624
    9. '#' → logprob: -5.47449254989624
    10. 'sorted' → logprob: -5.47449254989624

Token 90: ' numbers' (ID: 8663)
  Prédit: ' nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nums' → logprob: -0.869124710559845
    2. ' if' → logprob: -1.3691246509552002
    3. 'nums' → logprob: -1.9941246509552002
    4. ' ' → logprob: -2.3691246509552
    5. 'if' → logprob: -3.8691246509552
    6. '<|end|>' → logprob: -4.244124889373779
    7. ',' → logprob: -4.369124889373779
    8. '_nums' → logprob: -4.369124889373779
    9. '_' → logprob: -4.994124889373779
    10. '(nums' → logprob: -5.869124889373779

Token 91: ',' (ID: 11)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6111531257629395
    2. '   ' → logprob: -2.2361531257629395
    3. 'nums' → logprob: -2.3611531257629395
    4. ' nums' → logprob: -2.7361531257629395
    5. 'if' → logprob: -2.8611531257629395
    6. 'n' → logprob: -3.1111531257629395
    7. ' for' → logprob: -4.2361531257629395
    8. '<|end|>' → logprob: -4.3611531257629395
    9. ',' → logprob: -4.7361531257629395
    10. ' ' → logprob: -4.9861531257629395

Token 92: ' no' (ID: 860)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7278895378112793
    2. ' sorted' → logprob: -1.7278895378112793
    3. 'nums' → logprob: -2.1028895378112793
    4. ' nums' → logprob: -2.2278895378112793
    5. 'sorted' → logprob: -3.3528895378112793
    6. 'if' → logprob: -3.4778895378112793
    7. ' return' → logprob: -3.7278895378112793
    8. 'return' → logprob: -5.102889537811279
    9. ' all' → logprob: -5.227889537811279
    10. '   ' → logprob: -6.227889537811279

Token 93: ' wrap' (ID: 20404)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.26214897632598877
    2. 'w' → logprob: -2.637148857116699
    3. 'n' → logprob: -2.762148857116699
    4. 's' → logprob: -3.637148857116699
    5. '<|end|>' → logprob: -4.137148857116699
    6. ',' → logprob: -4.762148857116699
    7. ' ' → logprob: -4.887148857116699
    8. 'r' → logprob: -5.012148857116699
    9. ')' → logprob: -5.012148857116699
    10. 'ne' → logprob: -5.887148857116699

Token 94: '-around' (ID: 74344)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8112460374832153
    2. '<|end|>' → logprob: -1.8112460374832153
    3. '-' → logprob: -2.561245918273926
    4. ' if' → logprob: -2.936245918273926
    5. ':' → logprob: -3.061245918273926
    6. ',' → logprob: -3.186245918273926
    7. '   ' → logprob: -3.311245918273926
    8. ')' → logprob: -3.561245918273926
    9. '1' → logprob: -3.811245918273926
    10. 's' → logprob: -4.311245918273926

Token 95: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 96: '   ' (ID: 271)
  Prédit: ' nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nums' → logprob: -1.1364530324935913
    2. ' if' → logprob: -1.2614530324935913
    3. 'nums' → logprob: -1.7614530324935913
    4. ' for' → logprob: -2.136453151702881
    5. '   ' → logprob: -3.136453151702881
    6. 'if' → logprob: -3.136453151702881
    7. 'for' → logprob: -4.386453151702881
    8. ' return' → logprob: -6.136453151702881
    9. ' sorted' → logprob: -6.386453151702881
    10. 'n' → logprob: -7.511453151702881

Token 97: ' sorted' (ID: 20099)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.5831639170646667
    2. 'if' → logprob: -1.2081639766693115
    3. ' if' → logprob: -2.4581639766693115
    4. ' nums' → logprob: -3.9581639766693115
    5. 'return' → logprob: -4.583163738250732
    6. 'sorted' (adapté à ' sorted') → logprob: -4.833163738250732
    7. 'for' → logprob: -4.958163738250732
    8. ' for' → logprob: -5.083163738250732
    9. ' return' → logprob: -5.833163738250732
    10. ' sorted' → logprob: -6.333163738250732

Token 98: '_nums' (ID: 128266)
  Prédit: '_nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nums' → logprob: -0.03540264442563057
    2. '(' → logprob: -3.785402536392212
    3. '(nums' → logprob: -4.785402774810791
    4. '_' → logprob: -6.535402774810791
    5. 'nums' → logprob: -6.785402774810791
    6. '_num' → logprob: -7.410402774810791
    7. '_numbers' → logprob: -7.910402774810791
    8. 'Nums' → logprob: -9.535402297973633
    9. '(
' → logprob: -10.785402297973633
    10. 's' → logprob: -10.785402297973633

Token 99: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11367514729499817
    2. '=' → logprob: -2.238675117492676
    3. '(' → logprob: -7.613675117492676
    4. ' ' → logprob: -9.363675117492676
    5. '_' → logprob: -9.863675117492676
    6. 's' → logprob: -9.988675117492676
    7. ')' → logprob: -10.363675117492676
    8. ' =[' → logprob: -10.363675117492676
    9. '[' → logprob: -10.738675117492676
    10. '<|end|>' → logprob: -10.988675117492676

Token 100: ' sorted' (ID: 20099)
  Prédit: ' sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sorted' → logprob: -0.2014172375202179
    2. 'sorted' → logprob: -1.7014172077178955
    3. ' ' → logprob: -13.201416969299316
    4. '(sorted' → logprob: -13.701416969299316
    5. '.sorted' → logprob: -15.201416969299316
    6. '   ' → logprob: -15.451416969299316
    7. 's' → logprob: -15.576416969299316
    8. 'sort' → logprob: -15.701416969299316
    9. ' ' → logprob: -16.951417922973633
    10. '[' → logprob: -16.951417922973633

Token 101: '(nums' (ID: 40372)
  Prédit: '(nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nums' → logprob: -7.941850526549388e-06
    2. '(' → logprob: -12.500007629394531
    3. 'nums' → logprob: -12.625007629394531
    4. ' (' → logprob: -14.875007629394531
    5. '(numbers' → logprob: -15.500007629394531
    6. '(num' → logprob: -15.750007629394531
    7. ' nums' → logprob: -16.25000762939453
    8. '(cards' → logprob: -16.37500762939453
    9. '(set' → logprob: -18.50000762939453
    10. '([' → logprob: -18.62500762939453

Token 102: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0067279222421348095
    2. ')
' → logprob: -5.006727695465088
    3. ' )' → logprob: -11.756728172302246
    4. ')

' → logprob: -13.131728172302246
    5. '   ' → logprob: -13.756728172302246
    6. ' )
' → logprob: -14.256728172302246
    7. ')
' → logprob: -14.506728172302246
    8. ' ' → logprob: -16.25672721862793
    9. '))' → logprob: -16.63172721862793
    10. ']' → logprob: -16.88172721862793

Token 103: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06682897359132767
    2. ' if' → logprob: -3.441828966140747
    3. 'if' → logprob: -3.441828966140747
    4. '[' → logprob: -9.191828727722168
    5. ' for' → logprob: -9.191828727722168
    6. 'for' → logprob: -9.441828727722168
    7. ')' → logprob: -9.441828727722168
    8. '    
' → logprob: -9.691828727722168
    9. '    ' → logprob: -10.066828727722168
    10. ' ' → logprob: -10.191828727722168

Token 104: ' return' (ID: 622)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10162139683961868
    2. ' if' → logprob: -3.101621389389038
    3. '   ' → logprob: -3.226621389389038
    4. 'return' (adapté à ' return') → logprob: -4.476621627807617
    5. ' return' → logprob: -7.976621627807617
    6. 'for' → logprob: -8.601621627807617
    7. ' for' → logprob: -10.476621627807617
    8. ' ' → logprob: -10.976621627807617
    9. '```' → logprob: -12.351621627807617
    10. '  ' → logprob: -12.601621627807617

Token 105: ' sorted' (ID: 20099)
  Prédit: ' sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sorted' → logprob: -0.22057731449604034
    2. 'sorted' → logprob: -1.720577359199524
    3. '(sorted' → logprob: -4.095577239990234
    4. ' all' → logprob: -6.470577239990234
    5. ' (' → logprob: -7.220577239990234
    6. 'all' → logprob: -10.720577239990234
    7. ' ' → logprob: -10.720577239990234
    8. '(' → logprob: -12.970577239990234
    9. ' len' → logprob: -13.220577239990234
    10. 'len' → logprob: -13.345577239990234

Token 106: '_nums' (ID: 128266)
  Prédit: '_nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nums' → logprob: -0.00035870319698005915
    2. '(nums' → logprob: -8.375358581542969
    3. '_num' → logprob: -10.375358581542969
    4. '(_' → logprob: -10.500358581542969
    5. '(sorted' → logprob: -11.125358581542969
    6. '_sorted' → logprob: -11.250358581542969
    7. 'nums' → logprob: -11.250358581542969
    8. '(' → logprob: -11.750358581542969
    9. '_numbers' → logprob: -12.125358581542969
    10. '_' → logprob: -12.625358581542969

Token 107: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.14114725589752197
    2. '==' → logprob: -2.1411471366882324
    3. ' ==' → logprob: -4.266147136688232
    4. ']==' → logprob: -10.76614761352539
    5. '==
' → logprob: -10.76614761352539
    6. '[-' → logprob: -11.26614761352539
    7. '[
' → logprob: -12.39114761352539
    8. ' [' → logprob: -12.64114761352539
    9. ')==' → logprob: -12.64114761352539
    10. ' ' → logprob: -12.76614761352539

Token 108: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.043648611754179
    2. '1' → logprob: -3.2936487197875977
    3. '2' → logprob: -5.293648719787598
    4. ' ' → logprob: -7.668648719787598
    5. '-' → logprob: -9.293648719787598
    6. ']' → logprob: -13.043648719787598
    7. ' -' → logprob: -13.481148719787598
    8. '
' → logprob: -13.793648719787598
    9. '[' → logprob: -13.856148719787598
    10. '   ' → logprob: -14.481148719787598

Token 109: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.05586816370487213
    2. '+' → logprob: -2.930868148803711
    3. ' ==' → logprob: -7.305868148803711
    4. ' ' → logprob: -8.305868148803711
    5. '==' → logprob: -9.805868148803711
    6. ')+' → logprob: -12.930868148803711
    7. ' +
' → logprob: -13.055868148803711
    8. ']+' → logprob: -13.305868148803711
    9. ' plus' → logprob: -13.680868148803711
    10. ',' → logprob: -14.305868148803711

Token 110: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.16024261713027954
    2. '+' → logprob: -1.9102425575256348
    3. ' ==' → logprob: -11.535243034362793
    4. '==' → logprob: -11.785243034362793
    5. ' ' → logprob: -14.160243034362793
    6. ' ' → logprob: -16.285242080688477
    7. ' +
' → logprob: -17.035242080688477
    8. '2' → logprob: -17.660242080688477
    9. '1' → logprob: -17.660242080688477
    10. ' plus' → logprob: -17.660242080688477

Token 111: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5821729898452759
    2. '1' → logprob: -0.8321729898452759
    3. ' ' → logprob: -5.082172870635986
    4. '```' → logprob: -12.457173347473145
    5. '
' → logprob: -13.207173347473145
    6. '  ' → logprob: -13.707173347473145
    7. ' 
' → logprob: -15.832173347473145
    8. '   ' → logprob: -16.082172393798828
    9. '

' → logprob: -16.207172393798828
    10. ' ' → logprob: -16.394672393798828

Token 112: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5760437250137329
    2. '1' → logprob: -0.8260437250137329
    3. ' ' → logprob: -9.201044082641602
    4. '
' → logprob: -12.951044082641602
    5. '```' → logprob: -14.576044082641602
    6. '  ' → logprob: -15.326044082641602
    7. '

' → logprob: -15.826044082641602
    8. '3' → logprob: -17.0760440826416
    9. '<|end|>' → logprob: -17.4510440826416
    10. '۲' → logprob: -17.8260440826416

Token 113: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1314927041530609
    2. '==' → logprob: -2.1314926147460938
    3. ' ' → logprob: -5.506492614746094
    4. '=' → logprob: -7.881492614746094
    5. 'sorted' → logprob: -10.506492614746094
    6. ' sorted' → logprob: -10.631492614746094
    7. ')' → logprob: -11.131492614746094
    8. ' =' → logprob: -11.256492614746094
    9. ')==' → logprob: -11.631492614746094
    10. ' in' → logprob: -12.131492614746094

Token 114: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.023246875032782555
    2. ' sorted' → logprob: -3.7732467651367188
    3. '(sorted' → logprob: -13.898246765136719
    4. '_sorted' → logprob: -15.773246765136719
    5. '.sorted' → logprob: -15.773246765136719
    6. ' ' → logprob: -16.64824676513672
    7. '   ' → logprob: -17.27324676513672
    8. 's' → logprob: -17.39824676513672
    9. 'sort' → logprob: -17.52324676513672
    10. 'Sorted' → logprob: -18.77324676513672

Token 115: '_nums' (ID: 128266)
  Prédit: '_nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nums' → logprob: -0.0003948072553612292
    2. 'ed' → logprob: -9.000394821166992
    3. '_num' → logprob: -9.125394821166992
    4. '_' → logprob: -9.125394821166992
    5. '_n' → logprob: -11.000394821166992
    6. ' _' → logprob: -11.625394821166992
    7. 'e' → logprob: -12.000394821166992
    8. '```' → logprob: -12.875394821166992
    9. 'nums' → logprob: -13.125394821166992
    10. 'er' → logprob: -13.375394821166992

Token 116: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00899541936814785
    2. '2' → logprob: -5.008995532989502
    3. '1' → logprob: -6.133995532989502
    4. ' ' → logprob: -10.633995056152344
    5. '```' → logprob: -10.758995056152344
    6. ' [' → logprob: -11.008995056152344
    7. '[
' → logprob: -11.508995056152344
    8. '   ' → logprob: -12.508995056152344
    9. 's' → logprob: -12.508995056152344
    10. '\[' → logprob: -12.508995056152344

Token 117: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.423219696851447e-05
    2. ' ' → logprob: -10.125083923339844
    3. '2' → logprob: -10.500083923339844
    4. '0' → logprob: -11.125083923339844
    5. ']' → logprob: -14.625083923339844
    6. '   ' → logprob: -14.875083923339844
    7. '  ' → logprob: -15.375083923339844
    8. '[' → logprob: -15.500083923339844
    9. '-' → logprob: -15.687583923339844
    10. '```' → logprob: -15.750083923339844

Token 118: ']' (ID: 60)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.010126006789505482
    2. 'and' → logprob: -4.760126113891602
    3. ' ' → logprob: -6.510126113891602
    4. ')' → logprob: -11.135126113891602
    5. '<|end|>' → logprob: -12.885126113891602
    6. '    ' → logprob: -14.010126113891602
    7. ' ==' → logprob: -14.260126113891602
    8. '  ' → logprob: -14.510126113891602
    9. ']' → logprob: -14.510126113891602
    10. '	and' → logprob: -14.885126113891602

Token 119: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.034277964383363724
    2. 'and' → logprob: -3.40927791595459
    3. ' ' → logprob: -7.53427791595459
    4. '<|end|>' → logprob: -9.28427791595459
    5. '<|end|>' → logprob: -14.15927791595459
    6. ' ' → logprob: -14.15927791595459
    7. '	and' → logprob: -14.28427791595459
    8. ' or' → logprob: -14.40927791595459
    9. '    ' → logprob: -14.65927791595459
    10. '  ' → logprob: -15.03427791595459

Token 120: ' sorted' (ID: 20099)
  Prédit: ' sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sorted' → logprob: -0.0005966392927803099
    2. 'sorted' → logprob: -7.500596523284912
    3. ' ' → logprob: -10.12559700012207
    4. '(sorted' → logprob: -13.62559700012207
    5. ' ' → logprob: -13.75059700012207
    6. '    ' → logprob: -14.12559700012207
    7. '.sorted' → logprob: -15.87559700012207
    8. '_sorted' → logprob: -16.00059700012207
    9. ' '' → logprob: -16.50059700012207
    10. ' s' → logprob: -16.62559700012207

Token 121: '_nums' (ID: 128266)
  Prédit: '_nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nums' → logprob: -0.005266126710921526
    2. 'ed' → logprob: -5.255266189575195
    3. '_num' → logprob: -10.505266189575195
    4. '_numbers' → logprob: -13.880266189575195
    5. 'e' → logprob: -14.255266189575195
    6. ' _' → logprob: -14.255266189575195
    7. '_sorted' → logprob: -14.380266189575195
    8. '_ed' → logprob: -14.630266189575195
    9. '[_' → logprob: -15.255266189575195
    10. '._' → logprob: -15.380266189575195

Token 122: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.688212614681106e-05
    2. '_[' → logprob: -12.125017166137695
    3. '[_' → logprob: -12.750017166137695
    4. ' [' → logprob: -13.000017166137695
    5. '```' → logprob: -13.375017166137695
    6. '__[' → logprob: -13.500017166137695
    7. '\[' → logprob: -13.625017166137695
    8. '`' → logprob: -15.125017166137695
    9. '_' → logprob: -15.250017166137695
    10. ')[' → logprob: -15.375017166137695

Token 123: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.009860442951321602
    2. '1' → logprob: -4.634860515594482
    3. '0' → logprob: -9.509860038757324
    4. ' ' → logprob: -10.759860038757324
    5. '[' → logprob: -12.134860038757324
    6. '-' → logprob: -13.259860038757324
    7. '```' → logprob: -13.509860038757324
    8. '   ' → logprob: -15.009860038757324
    9. '  ' → logprob: -17.00986099243164
    10. '
' → logprob: -17.13486099243164

Token 124: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.020568285137414932
    2. '+' → logprob: -3.895568370819092
    3. ' ' → logprob: -10.645567893981934
    4. ' +
' → logprob: -14.270567893981934
    5. '[' → logprob: -14.395567893981934
    6. ' plus' → logprob: -15.270567893981934
    7. '   ' → logprob: -15.395567893981934
    8. '  ' → logprob: -15.895567893981934
    9. ' ' → logprob: -16.27056884765625
    10. ')' → logprob: -16.39556884765625

Token 125: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5759428143501282
    2. ' +' → logprob: -0.8259428143501282
    3. ' ' → logprob: -13.450942993164062
    4. '＋' → logprob: -14.700942993164062
    5. ' plus' → logprob: -14.825942993164062
    6. ' ' → logprob: -15.075942993164062
    7. '[' → logprob: -15.450942993164062
    8. '<' → logprob: -15.575942993164062
    9. ' +
' → logprob: -15.825942993164062
    10. '+
' → logprob: -16.200942993164062

Token 126: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.029839113354682922
    2. ' ' → logprob: -3.529839038848877
    3. '2' → logprob: -9.779839515686035
    4. '<|end|>' → logprob: -10.529839515686035
    5. '```' → logprob: -12.904839515686035
    6. '0' → logprob: -13.279839515686035
    7. ')' → logprob: -15.404839515686035
    8. '  ' → logprob: -15.779839515686035
    9. '`' → logprob: -15.779839515686035
    10. '<|end|>' → logprob: -16.02983856201172

Token 127: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07131072133779526
    2. '2' → logprob: -2.6963107585906982
    3. ' ' → logprob: -6.696310520172119
    4. 'sorted' → logprob: -8.946310997009277
    5. '```' → logprob: -12.571310997009277
    6. '0' → logprob: -13.821310997009277
    7. '  ' → logprob: -14.196310997009277
    8. '   ' → logprob: -14.821310997009277
    9. '(sorted' → logprob: -14.946310997009277
    10. '
' → logprob: -15.071310997009277

Token 128: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.251936137676239
    2. ' ==' → logprob: -1.5019361972808838
    3. '=' → logprob: -12.251935958862305
    4. '==
' → logprob: -14.001935958862305
    5. '===' → logprob: -14.626935958862305
    6. ' ' → logprob: -15.001935958862305
    7. ')' → logprob: -15.751935958862305
    8. ')==' → logprob: -16.001935958862305
    9. '==(' → logprob: -16.251935958862305
    10. ']==' → logprob: -16.376935958862305

Token 129: ' sorted' (ID: 20099)
  Prédit: ' sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sorted' → logprob: -0.16022838652133942
    2. 'sorted' → logprob: -1.9102283716201782
    3. '(sorted' → logprob: -13.285228729248047
    4. ' ' → logprob: -13.910228729248047
    5. '_sorted' → logprob: -14.035228729248047
    6. '.sorted' → logprob: -14.910228729248047
    7. '   ' → logprob: -15.285228729248047
    8. 's' → logprob: -16.410228729248047
    9. ' ' → logprob: -17.410228729248047
    10. '    ' → logprob: -17.785228729248047

Token 130: '_nums' (ID: 128266)
  Prédit: '_nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nums' → logprob: -3.893480243277736e-05
    2. 'nums' → logprob: -10.250039100646973
    3. 'sorted' → logprob: -13.250039100646973
    4. 'Nums' → logprob: -14.125039100646973
    5. '_num' → logprob: -14.625039100646973
    6. 'ed' → logprob: -14.875039100646973
    7. '_sorted' → logprob: -17.000038146972656
    8. 's' → logprob: -18.000038146972656
    9. '(nums' → logprob: -18.375038146972656
    10. 'ums' → logprob: -18.875038146972656

Token 131: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.816093228830141e-06
    2. '```' → logprob: -14.00000286102295
    3. '2' → logprob: -14.50000286102295
    4. ' [' → logprob: -14.62500286102295
    5. ' ' → logprob: -15.00000286102295
    6. '[
' → logprob: -15.37500286102295
    7. '\[' → logprob: -15.75000286102295
    8. '__[' → logprob: -16.625001907348633
    9. '   ' → logprob: -16.875001907348633
    10. '[-' → logprob: -17.500001907348633

Token 132: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.153795766294934e-06
    2. '0' → logprob: -12.750005722045898
    3. ' ' → logprob: -12.750005722045898
    4. '-' → logprob: -15.375005722045898
    5. '   ' → logprob: -17.0000057220459
    6. '```' → logprob: -17.5000057220459
    7. '  ' → logprob: -17.8750057220459
    8. ']' → logprob: -18.8750057220459
    9. '1' → logprob: -19.1875057220459
    10. '۲' → logprob: -19.3750057220459

Token 133: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6405310816480778e-05
    2. '}' → logprob: -12.125016212463379
    3. ' )' → logprob: -12.125016212463379
    4. '<|end|>' → logprob: -13.000016212463379
    5. ')return' → logprob: -13.375016212463379
    6. ')
' → logprob: -14.250016212463379
    7. ']' → logprob: -14.875016212463379
    8. ')#' → logprob: -16.000017166137695
    9. '))' → logprob: -16.625017166137695
    10. ' ' → logprob: -16.875017166137695

Token 134: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 135: ' can' (ID: 665)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.2533296048641205
    2. ' main' → logprob: -2.7533295154571533
    3. ' find' → logprob: -2.7533295154571533
    4. 'is' → logprob: -3.1283295154571533
    5. ' check' → logprob: -4.503329753875732
    6. ' test' → logprob: -4.753329753875732
    7. 'main' → logprob: -6.128329753875732
    8. ' best' → logprob: -6.253329753875732
    9. ' card' → logprob: -6.253329753875732
    10. ' possible' → logprob: -6.253329753875732

Token 136: '_form' (ID: 18664)
  Prédit: '_play'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_play' → logprob: -0.5709016919136047
    2. '_add' → logprob: -2.32090163230896
    3. '_make' → logprob: -2.32090163230896
    4. '_' → logprob: -2.82090163230896
    5. '_form' → logprob: -2.82090163230896
    6. '_find' → logprob: -3.94590163230896
    7. '_continue' → logprob: -4.070901870727539
    8. '_take' → logprob: -4.195901870727539
    9. '_claim' → logprob: -4.320901870727539
    10. '_draw' → logprob: -4.445901870727539

Token 137: '_sets' (ID: 56707)
  Prédit: '_set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.002451638225466013
    2. '_sets' → logprob: -6.502451419830322
    3. '_' → logprob: -7.502451419830322
    4. '(cards' → logprob: -8.12745189666748
    5. '_a' → logprob: -10.37745189666748
    6. '_subset' → logprob: -11.00245189666748
    7. '_three' → logprob: -11.12745189666748
    8. '_hand' → logprob: -11.62745189666748
    9. '(' → logprob: -12.12745189666748
    10. '_trip' → logprob: -12.50245189666748

Token 138: '(cards' (ID: 161529)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47745656967163086
    2. '(cards' → logprob: -0.9774565696716309
    3. ' (' → logprob: -7.227456569671631
    4. '(s' → logprob: -7.727456569671631
    5. '(items' → logprob: -7.727456569671631
    6. '(c' → logprob: -7.727456569671631
    7. '(deck' → logprob: -8.352457046508789
    8. '_' → logprob: -8.477457046508789
    9. '(lst' → logprob: -8.852457046508789
    10. '(card' → logprob: -8.852457046508789

Token 139: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011870192363858223
    2. '(cards' → logprob: -4.886870384216309
    3. ',' → logprob: -6.386870384216309
    4. ')' → logprob: -6.511870384216309
    5. ' ):' → logprob: -7.511870384216309
    6. ':' → logprob: -8.511870384216309
    7. '):
' → logprob: -9.136870384216309
    8. '(' → logprob: -9.761870384216309
    9. '[]):' → logprob: -10.011870384216309
    10. '   ' → logprob: -10.136870384216309

Token 140: ' used' (ID: 2061)
  Prédit: ' sets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sets' → logprob: -0.5738620162010193
    2. ' hand' → logprob: -1.573862075805664
    3. ' cards' → logprob: -2.573862075805664
    4. ' n' → logprob: -3.198862075805664
    5. ' ' → logprob: -3.573862075805664
    6. ' k' → logprob: -3.823862075805664
    7. '3' → logprob: -4.948862075805664
    8. ' groups' → logprob: -4.948862075805664
    9. ' depth' → logprob: -5.198862075805664
    10. ' deck' → logprob: -5.323862075805664

Token 141: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003190666902810335
    2. '):
' → logprob: -6.503190517425537
    3. ')' → logprob: -6.878190517425537
    4. ' ):' → logprob: -8.628190994262695
    5. '_cards' → logprob: -8.753190994262695
    6. '_sets' → logprob: -9.628190994262695
    7. '_' → logprob: -9.628190994262695
    8. ',' → logprob: -9.878190994262695
    9. 's' → logprob: -10.253190994262695
    10. '):

' → logprob: -10.878190994262695

Token 142: ' depth' (ID: 13636)
  Prédit: ' sets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sets' → logprob: -0.5409958362579346
    2. ' idx' → logprob: -1.7909958362579346
    3. ' index' → logprob: -2.4159958362579346
    4. ' start' → logprob: -3.0409958362579346
    5. ' target' → logprob: -3.5409958362579346
    6. ' k' → logprob: -4.4159955978393555
    7. 'index' → logprob: -4.4159955978393555
    8. 'sets' → logprob: -4.6659955978393555
    9. ' ' → logprob: -4.7909955978393555
    10. 'idx' → logprob: -5.0409955978393555

Token 143: '=' (ID: 28)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.252739280462265
    2. ',' → logprob: -1.5027393102645874
    3. '=' → logprob: -7.877739429473877
    4. ' ):' → logprob: -8.877738952636719
    5. '):
' → logprob: -9.002738952636719
    6. ')' → logprob: -9.002738952636719
    7. ' ,' → logprob: -10.877738952636719
    8. ':' → logprob: -11.252738952636719
    9. ' ' → logprob: -12.877738952636719
    10. '   ' → logprob: -13.627738952636719

Token 144: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3835548460483551
    2. '3' → logprob: -1.6335548162460327
    3. ' ' → logprob: -2.1335549354553223
    4. '1' → logprob: -5.383554935455322
    5. ')' → logprob: -8.383554458618164
    6. ' len' → logprob: -10.258554458618164
    7. 'len' → logprob: -11.133554458618164
    8. '2' → logprob: -11.383554458618164
    9. '4' → logprob: -11.508554458618164
    10. ' )' → logprob: -11.883554458618164

Token 145: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0002624086628202349
    2. ')' → logprob: -8.625262260437012
    3. ' ):' → logprob: -10.250262260437012
    4. ',' → logprob: -10.375262260437012
    5. '):
' → logprob: -11.125262260437012
    6. ':' → logprob: -13.625262260437012
    7. '   ' → logprob: -16.125263214111328
    8. '[]):' → logprob: -17.125263214111328
    9. ']:' → logprob: -17.250263214111328
    10. '):

' → logprob: -17.625263214111328

Token 146: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023919278755784035
    2. ':' → logprob: -3.7739193439483643
    3. ',' → logprob: -8.148919105529785
    4. '<|end|>' → logprob: -9.023919105529785
    5. ' if' → logprob: -9.148919105529785
    6. ' ' → logprob: -10.773919105529785
    7. '    
' → logprob: -10.773919105529785
    8. '    ' → logprob: -10.898919105529785
    9. '  ' → logprob: -11.148919105529785
    10. '(' → logprob: -11.273919105529785

Token 147: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.10432311147451401
    2. '   ' → logprob: -2.604323148727417
    3. ' n' → logprob: -3.979323148727417
    4. '    ' → logprob: -6.354322910308838
    5. ' 
' → logprob: -6.354322910308838
    6. 'n' → logprob: -6.854322910308838
    7. 'if' → logprob: -7.479322910308838
    8. ' ' → logprob: -7.479322910308838
    9. '    
' → logprob: -7.979322910308838
    10. ' indentation' → logprob: -8.729323387145996

Token 148: ' cards' (ID: 10541)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.30532950162887573
    2. ' n' → logprob: -2.0553295612335205
    3. 'if' → logprob: -2.3053295612335205
    4. 'n' → logprob: -3.8053295612335205
    5. '   ' → logprob: -4.430329322814941
    6. 'from' → logprob: -8.305329322814941
    7. ' for' → logprob: -8.555329322814941
    8. ' indent' → logprob: -8.805329322814941
    9. 'def' → logprob: -8.930329322814941
    10. ' from' → logprob: -9.305329322814941

Token 149: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3412775695323944
    2. '):' → logprob: -1.4662775993347168
    3. ' =' → logprob: -3.841277599334717
    4. ')' → logprob: -4.091277599334717
    5. ',' → logprob: -4.716277599334717
    6. '<|end|>' → logprob: -5.591277599334717
    7. '=' → logprob: -6.466277599334717
    8. '<|end|>' → logprob: -7.091277599334717
    9. '):
' → logprob: -7.216277599334717
    10. '[' → logprob: -7.216277599334717

Token 150: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.021969184279441833
    2. 'list' → logprob: -3.8969690799713135
    3. ' List' → logprob: -7.146969318389893
    4. 'List' → logprob: -7.896969318389893
    5. ' [' → logprob: -8.646968841552734
    6. '[' → logprob: -10.396968841552734
    7. ' ' → logprob: -10.396968841552734
    8. '[list' → logprob: -11.896968841552734
    9. '   ' → logprob: -12.271968841552734
    10. ' set' → logprob: -12.396968841552734

Token 151: ' of' (ID: 328)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0472698211669922
    2. '<|end|>' → logprob: -1.2972698211669922
    3. ' of' → logprob: -1.7972698211669922
    4. ',' → logprob: -2.422269821166992
    5. '   ' → logprob: -2.797269821166992
    6. '[' → logprob: -3.547269821166992
    7. '<|end|>' → logprob: -4.297269821166992
    8. ':' → logprob: -4.797269821166992
    9. '  ' → logprob: -7.047269821166992
    10. ' =' → logprob: -7.172269821166992

Token 152: ' ' (ID: 220)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.37498605251312256
    2. ' (' → logprob: -2.124986171722412
    3. ' int' → logprob: -2.249986171722412
    4. '(int' → logprob: -3.249986171722412
    5. ' tuples' → logprob: -3.749986171722412
    6. ' cards' → logprob: -5.124986171722412
    7. 'str' → logprob: -5.624986171722412
    8. 'cards' → logprob: -5.749986171722412
    9. ' tuple' → logprob: -5.999986171722412
    10. '(' → logprob: -6.374986171722412

Token 153: '9' (ID: 24)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.7962144613265991
    2. '(int' → logprob: -1.0462144613265991
    3. '(' → logprob: -2.2962145805358887
    4. ' (' → logprob: -3.6712145805358887
    5. '(str' → logprob: -4.171214580535889
    6. 'list' → logprob: -4.546214580535889
    7. 'tuple' → logprob: -4.671214580535889
    8. 'str' → logprob: -4.921214580535889
    9. '[int' → logprob: -5.046214580535889
    10. ' tuples' → logprob: -5.171214580535889

Token 154: ' cards' (ID: 10541)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.27613627910614014
    2. ',' → logprob: -1.6511362791061401
    3. ' ,' → logprob: -4.15113639831543
    4. ' cards' → logprob: -4.27613639831543
    5. ' (' → logprob: -5.27613639831543
    6. ' )' → logprob: -5.52613639831543
    7. '<|end|>' → logprob: -5.90113639831543
    8. ' tuples' → logprob: -6.27613639831543
    9. ' ' → logprob: -6.90113639831543
    10. '_' → logprob: -7.02613639831543

Token 155: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7976047992706299
    2. ',' → logprob: -1.4226047992706299
    3. '   ' → logprob: -1.6726047992706299
    4. '<|end|>' → logprob: -2.29760479927063
    5. ')' → logprob: -5.172604560852051
    6. ' ' → logprob: -5.547604560852051
    7. '<|end|>' → logprob: -6.047604560852051
    8. ' if' → logprob: -6.172604560852051
    9. '
' → logprob: -6.672604560852051
    10. ' ,' → logprob: -7.172604560852051

Token 156: 'num' (ID: 4571)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11011074483394623
    2. ' )' → logprob: -2.3601107597351074
    3. '[' → logprob: -5.610110759735107
    4. '   ' → logprob: -5.985110759735107
    5. ' (' → logprob: -6.610110759735107
    6. '  ' → logprob: -7.360110759735107
    7. ' ' → logprob: -8.23511028289795
    8. ',' → logprob: -8.98511028289795
    9. '    ' → logprob: -8.98511028289795
    10. ' [' → logprob: -9.11011028289795

Token 157: ',color' (ID: 101983)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10080835223197937
    2. ')' → logprob: -2.3508083820343018
    3. ' ,' → logprob: -8.725808143615723
    4. '[' → logprob: -8.850808143615723
    5. '   ' → logprob: -9.475808143615723
    6. ',
' → logprob: -9.475808143615723
    7. ' )' → logprob: -9.850808143615723
    8. '<|end|>' → logprob: -10.975808143615723
    9. ',)' → logprob: -10.975808143615723
    10. ' ' → logprob: -11.600808143615723

Token 158: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010660359403118491
    2. ',' → logprob: -6.876066207885742
    3. '),' → logprob: -11.001066207885742
    4. '):' → logprob: -11.376066207885742
    5. '[' → logprob: -13.376066207885742
    6. ']' → logprob: -13.876066207885742
    7. ')
' → logprob: -14.001066207885742
    8. ' )' → logprob: -14.001066207885742
    9. '):
' → logprob: -15.751066207885742
    10. '   ' → logprob: -15.751066207885742

Token 159: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12874796986579895
    2. '<|end|>' → logprob: -3.0037479400634766
    3. ':' → logprob: -3.5037479400634766
    4. ',' → logprob: -3.7537479400634766
    5. ' ' → logprob: -5.128747940063477
    6. ' if' → logprob: -5.503747940063477
    7. ')' → logprob: -5.503747940063477
    8. '  ' → logprob: -7.128747940063477
    9. '<|end|>' → logprob: -7.503747940063477
    10. ' ,' → logprob: -7.753747940063477

Token 160: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3883066475391388
    2. '   ' → logprob: -1.5133066177368164
    3. ' if' → logprob: -2.6383066177368164
    4. 'if' → logprob: -4.763306617736816
    5. '  ' → logprob: -5.013306617736816
    6. '<|end|>' → logprob: -5.388306617736816
    7. ' 
' → logprob: -6.013306617736816
    8. ':' → logprob: -6.513306617736816
    9. '    ' → logprob: -6.513306617736816
    10. ',' → logprob: -6.638306617736816

Token 161: ' used' (ID: 2061)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.044880736619234085
    2. 'if' → logprob: -3.5448806285858154
    3. ' n' → logprob: -4.7948808670043945
    4. ' indent' → logprob: -6.2948808670043945
    5. 'n' → logprob: -6.5448808670043945
    6. ' for' → logprob: -6.7948808670043945
    7. '   ' → logprob: -7.0448808670043945
    8. 'indent' → logprob: -7.6698808670043945
    9. ' indentation' → logprob: -7.9198808670043945
    10. ' ' → logprob: -9.044880867004395

Token 162: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.17999666929244995
    2. ':' → logprob: -2.4299967288970947
    3. ' =' → logprob: -3.4299967288970947
    4. '<|end|>' → logprob: -3.8049967288970947
    5. ')' → logprob: -4.554996490478516
    6. ',' → logprob: -5.429996490478516
    7. '<|end|>' → logprob: -6.304996490478516
    8. ' ):' → logprob: -6.429996490478516
    9. '=' → logprob: -6.929996490478516
    10. '):
' → logprob: -7.429996490478516

Token 163: ' boolean' (ID: 3870)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.5759708285331726
    2. '[' → logprob: -0.8259708285331726
    3. ' set' → logprob: -10.950970649719238
    4. 'set' → logprob: -12.325970649719238
    5. '[List' → logprob: -12.700970649719238
    6. ' list' → logprob: -12.825970649719238
    7. '[list' → logprob: -13.825970649719238
    8. '[int' → logprob: -14.200970649719238
    9. ' ' → logprob: -14.325970649719238
    10. '[len' → logprob: -14.700970649719238

Token 164: ' list' (ID: 1562)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.795805037021637
    2. '_' → logprob: -1.2958049774169922
    3. '_list' → logprob: -2.045804977416992
    4. ']' → logprob: -2.920804977416992
    5. '[]' → logprob: -3.420804977416992
    6. ' ' → logprob: -4.170804977416992
    7. ')' → logprob: -4.295804977416992
    8. '_array' → logprob: -5.295804977416992
    9. '<|end|>' → logprob: -5.420804977416992
    10. ' array' → logprob: -5.920804977416992

Token 165: ' if' (ID: 538)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07720988988876343
    2. ' of' → logprob: -2.952209949493408
    3. '<|end|>' → logprob: -4.577209949493408
    4. '   ' → logprob: -5.202209949493408
    5. '[]' → logprob: -6.202209949493408
    6. ',' → logprob: -7.202209949493408
    7. ')' → logprob: -7.202209949493408
    8. ' for' → logprob: -7.202209949493408
    9. ' ' → logprob: -7.452209949493408
    10. ' [' → logprob: -8.32720947265625

Token 166: ' card' (ID: 4766)
  Prédit: ' cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cards' → logprob: -0.15384073555469513
    2. ' ' → logprob: -3.0288407802581787
    3. ' used' → logprob: -3.0288407802581787
    4. ' card' → logprob: -3.4038407802581787
    5. ' True' → logprob: -5.5288405418396
    6. 'cards' → logprob: -5.7788405418396
    7. ' the' → logprob: -6.4038405418396
    8. ' each' → logprob: -7.4038405418396
    9. ' a' → logprob: -7.4038405418396
    10. ' index' → logprob: -7.6538405418396

Token 167: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.4307887554168701
    2. ' used' → logprob: -1.8057887554168701
    3. 's' → logprob: -2.30578875541687
    4. '_' → logprob: -3.68078875541687
    5. ' ' → logprob: -4.055788993835449
    6. '[' → logprob: -4.555788993835449
    7. ' has' → logprob: -5.055788993835449
    8. '_used' → logprob: -5.055788993835449
    9. ' selected' → logprob: -5.180788993835449
    10. ']' → logprob: -5.930788993835449

Token 168: ' used' (ID: 2061)
  Prédit: ' used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.005342262797057629
    2. 'used' → logprob: -5.880342483520508
    3. ' True' → logprob: -6.005342483520508
    4. 'True' → logprob: -10.005342483520508
    5. '_used' → logprob: -11.380342483520508
    6. ' selected' → logprob: -11.880342483520508
    7. ' ' → logprob: -12.880342483520508
    8. ' already' → logprob: -14.130342483520508
    9. ' taken' → logprob: -14.380342483520508
    10. ' False' → logprob: -15.130342483520508

Token 169: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 170: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10396057367324829
    2. '   ' → logprob: -2.3539605140686035
    3. ' :' → logprob: -6.2289605140686035
    4. ',' → logprob: -7.7289605140686035
    5. ')' → logprob: -8.228960990905762
    6. '[' → logprob: -8.603960990905762
    7. ' ' → logprob: -8.728960990905762
    8. '):' → logprob: -8.728960990905762
    9. '<|end|>' → logprob: -9.103960990905762
    10. ':
' → logprob: -9.228960990905762

Token 171: ' #' (ID: 1069)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.37676891684532166
    2. '   ' → logprob: -1.501768946647644
    3. 'n' → logprob: -2.7517688274383545
    4. ' if' → logprob: -4.001769065856934
    5. '    ' → logprob: -6.001769065856934
    6. '    
' → logprob: -6.501769065856934
    7. ' ' → logprob: -6.751769065856934
    8. ' for' → logprob: -6.876769065856934
    9. ' 
' → logprob: -7.001769065856934
    10. ' indent' → logprob: -7.626769065856934

Token 172: ' depth' (ID: 13636)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5599124431610107
    2. 'if' → logprob: -1.5599124431610107
    3. 'n' → logprob: -2.0599124431610107
    4. ' n' → logprob: -3.0599124431610107
    5. ' for' → logprob: -4.30991268157959
    6. '   ' → logprob: -4.30991268157959
    7. 'for' → logprob: -5.18491268157959
    8. ' indent' → logprob: -5.30991268157959
    9. 'indent' → logprob: -6.18491268157959
    10. ' result' → logprob: -6.43491268157959

Token 173: ':' (ID: 25)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10631154477596283
    2. '==' → logprob: -2.356311559677124
    3. ' >=' → logprob: -5.231311321258545
    4. '=' → logprob: -8.356311798095703
    5. '>=' → logprob: -8.731311798095703
    6. ' >' → logprob: -9.481311798095703
    7. ' ' → logprob: -9.856311798095703
    8. ' <' → logprob: -9.981311798095703
    9. '+' → logprob: -10.481311798095703
    10. ')' → logprob: -10.481311798095703

Token 174: ' number' (ID: 2086)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05565440282225609
    2. '3' → logprob: -3.430654287338257
    3. '0' → logprob: -5.055654525756836
    4. '9' → logprob: -5.305654525756836
    5. ' depth' → logprob: -5.305654525756836
    6. ' int' → logprob: -5.680654525756836
    7. 'int' → logprob: -6.805654525756836
    8. 'depth' → logprob: -7.305654525756836
    9. ' len' → logprob: -9.430654525756836
    10. '1' → logprob: -10.430654525756836

Token 175: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2337317019701004
    2. ' of' → logprob: -2.858731746673584
    3. ' =' → logprob: -3.358731746673584
    4. ':' → logprob: -3.608731746673584
    5. ' ' → logprob: -3.608731746673584
    6. ')' → logprob: -4.233731746673584
    7. '   ' → logprob: -4.483731746673584
    8. 'def' → logprob: -4.608731746673584
    9. '<|end|>' → logprob: -4.983731746673584
    10. '+' → logprob: -5.608731746673584

Token 176: ' sets' (ID: 11982)
  Prédit: ' sets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sets' → logprob: -0.036872658878564835
    2. ' cards' → logprob: -4.036872863769531
    3. 'sets' → logprob: -4.286872863769531
    4. ' ' → logprob: -6.161872863769531
    5. 'cards' → logprob: -6.911872863769531
    6. ' completed' → logprob: -7.661872863769531
    7. '_sets' → logprob: -7.786872863769531
    8. ' formed' → logprob: -8.286872863769531
    9. ' used' → logprob: -9.286872863769531
    10. ' tokens' → logprob: -9.286872863769531

Token 177: ' formed' (ID: 20680)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.042776837944984436
    2. '<|end|>' → logprob: -3.9177768230438232
    3. '   ' → logprob: -4.042777061462402
    4. ' ' → logprob: -6.167777061462402
    5. ' :' → logprob: -7.542777061462402
    6. ':
' → logprob: -7.917777061462402
    7. '<|end|>' → logprob: -8.042777061462402
    8. ' and' → logprob: -8.542777061462402
    9. ' if' → logprob: -8.792777061462402
    10. ')' → logprob: -8.792777061462402

Token 178: ' so' (ID: 813)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4835087060928345
    2. '   ' → logprob: -0.9835087060928345
    3. '<|end|>' → logprob: -5.358508586883545
    4. ':
' → logprob: -6.358508586883545
    5. '
' → logprob: -7.233508586883545
    6. ' ' → logprob: -7.733508586883545
    7. '    
' → logprob: -7.858508586883545
    8. '[' → logprob: -8.233509063720703
    9. '<|end|>' → logprob: -8.608509063720703
    10. ')' → logprob: -8.608509063720703

Token 179: ' far' (ID: 4150)
  Prédit: 'far'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'far' → logprob: -0.04863312840461731
    2. ' far' → logprob: -3.048633098602295
    3. '_far' → logprob: -10.173633575439453
    4. ' ' → logprob: -12.173633575439453
    5. '   ' → logprob: -14.298633575439453
    6. 'f' → logprob: -14.423633575439453
    7. 'Far' → logprob: -14.423633575439453
    8. 'for' → logprob: -14.673633575439453
    9. '  ' → logprob: -16.173633575439453
    10. 'fa' → logprob: -16.423633575439453

Token 180: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13222384452819824
    2. '   ' → logprob: -2.1322238445281982
    3. ':
' → logprob: -6.132224082946777
    4. ' ' → logprob: -7.257224082946777
    5. '    
' → logprob: -7.382224082946777
    6. '
' → logprob: -7.632224082946777
    7. '<|end|>' → logprob: -8.382224082946777
    8. ')' → logprob: -8.507224082946777
    9. ' 
' → logprob: -9.007224082946777
    10. ',' → logprob: -9.132224082946777

Token 181: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20589013397693634
    2. '   ' → logprob: -1.70589017868042
    3. '<|end|>' → logprob: -5.83089017868042
    4. ':
' → logprob: -7.95589017868042
    5. '):' → logprob: -8.455889701843262
    6. ' ' → logprob: -8.455889701843262
    7. ',' → logprob: -8.580889701843262
    8. ')' → logprob: -8.705889701843262
    9. ' :' → logprob: -9.580889701843262
    10. '  ' → logprob: -9.830889701843262

Token 182: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21766597032546997
    2. ' if' → logprob: -1.8426659107208252
    3. 'if' (adapté à ' if') → logprob: -3.342665910720825
    4. '
' → logprob: -7.217666149139404
    5. ' ' → logprob: -8.092665672302246
    6. '  ' → logprob: -8.592665672302246
    7. '    
' → logprob: -8.717665672302246
    8. '<|end|>' → logprob: -8.842665672302246
    9. ' 
' → logprob: -9.467665672302246
    10. '    ' → logprob: -9.717665672302246

Token 183: ' depth' (ID: 13636)
  Prédit: ' depth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' depth' → logprob: -0.0026055064518004656
    2. 'depth' → logprob: -6.002605438232422
    3. ' ' → logprob: -9.127605438232422
    4. '(depth' → logprob: -11.752605438232422
    5. ' len' → logprob: -12.127605438232422
    6. ' ' → logprob: -12.377605438232422
    7. ' dept' → logprob: -13.627605438232422
    8. ' depths' → logprob: -13.877605438232422
    9. '_depth' → logprob: -14.377605438232422
    10. '-depth' → logprob: -15.127605438232422

Token 184: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.023858986794948578
    2. '==' → logprob: -3.7738590240478516
    3. ' >=' → logprob: -7.648859024047852
    4. ' ' → logprob: -9.148859024047852
    5. '>=' → logprob: -11.273859024047852
    6. ' ' → logprob: -12.148859024047852
    7. '<|end|>' → logprob: -12.648859024047852
    8. '=' → logprob: -12.773859024047852
    9. ' =' → logprob: -13.773859024047852
    10. ')' → logprob: -13.898859024047852

Token 185: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0008062947308644652
    2. ' ' → logprob: -7.1258063316345215
    3. '   ' → logprob: -13.875805854797363
    4. '  ' → logprob: -15.125805854797363
    5. ' ' → logprob: -16.68830680847168
    6. '    ' → logprob: -16.81330680847168
    7. ' three' → logprob: -16.93830680847168
    8. '	' → logprob: -17.00080680847168
    9. '۳' → logprob: -17.12580680847168
    10. '３' → logprob: -17.43830680847168

Token 186: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00011212585377506912
    2. ' ' → logprob: -9.125112533569336
    3. '   ' → logprob: -12.875112533569336
    4. '  ' → logprob: -15.687612533569336
    5. '    ' → logprob: -17.000112533569336
    6. '۳' → logprob: -17.250112533569336
    7. '３' → logprob: -17.562612533569336
    8. '
' → logprob: -17.687612533569336
    9. '

' → logprob: -17.750112533569336
    10. '	' → logprob: -17.812612533569336

Token 187: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002368393586948514
    2. ':
' → logprob: -6.127368450164795
    3. ':return' → logprob: -8.627367973327637
    4. ' :' → logprob: -13.127367973327637
    5. ' and' → logprob: -13.627367973327637
    6. '   ' → logprob: -14.627367973327637
    7. ' or' → logprob: -15.377367973327637
    8. '):' → logprob: -16.252368927001953
    9. ' :
' → logprob: -16.877368927001953
    10. ':
' → logprob: -17.002368927001953

Token 188: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5500103235244751
    2. '       ' → logprob: -0.9250103235244751
    3. '
' → logprob: -4.5500102043151855
    4. ':' → logprob: -4.6750102043151855
    5. ':
' → logprob: -6.4250102043151855
    6. ':return' → logprob: -6.5500102043151855
    7. '    
' → logprob: -6.6750102043151855
    8. '<|end|>' → logprob: -7.4250102043151855
    9. ' return' → logprob: -7.6750102043151855
    10. '  
' → logprob: -8.300010681152344

Token 189: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7318207025527954
    2. ' return' → logprob: -1.1068207025527954
    3. '   ' → logprob: -1.7318207025527954
    4. 'return' (adapté à ' return') → logprob: -4.481820583343506
    5. '
' → logprob: -10.481821060180664
    6. '	return' → logprob: -11.106821060180664
    7. ':return' → logprob: -11.856821060180664
    8. '    ' → logprob: -12.106821060180664
    9. ' ' → logprob: -12.231821060180664
    10. '    
' → logprob: -12.481821060180664

Token 190: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.1269284337759018
    2. 'True' → logprob: -2.1269283294677734
    3. '(True' → logprob: -15.376928329467773
    4. '   ' → logprob: -16.126928329467773
    5. '=True' → logprob: -19.251928329467773
    6. '    ' → logprob: -21.001928329467773
    7. ' Tru' → logprob: -21.126928329467773
    8. 'Tr' → logprob: -21.251928329467773
    9. ' ' → logprob: -21.376928329467773
    10. ' ' → logprob: -21.501928329467773

Token 191: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6616971492767334
    2. '    
' → logprob: -1.4116971492767334
    3. '   ' → logprob: -1.6616971492767334
    4. '  
' → logprob: -3.6616971492767334
    5. '\n' → logprob: -4.4116973876953125
    6. ' 
' → logprob: -5.0366973876953125
    7. '<|end|>' → logprob: -5.6616973876953125
    8. '   
' → logprob: -6.2866973876953125
    9. '  ' → logprob: -9.036697387695312
    10. ' ' → logprob: -9.286697387695312

Token 192: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05220746248960495
    2. '    
' → logprob: -3.4272074699401855
    3. '
' → logprob: -4.0522074699401855
    4. ' 
' → logprob: -8.177206993103027
    5. '  
' → logprob: -8.302206993103027
    6. ' for' → logprob: -8.427206993103027
    7. '   
' → logprob: -9.552206993103027
    8. '<|end|>' → logprob: -9.802206993103027
    9. '\n' → logprob: -10.177206993103027
    10. 'for' → logprob: -11.177206993103027

Token 193: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2251700609922409
    2. ' for' → logprob: -2.225170135498047
    3. 'for' → logprob: -3.100170135498047
    4. 'idx' → logprob: -4.725170135498047
    5. 'start' → logprob: -5.100170135498047
    6. 'n' → logprob: -5.225170135498047
    7. 'indices' → logprob: -5.350170135498047
    8. ' idx' → logprob: -5.600170135498047
    9. '    
' → logprob: -5.850170135498047
    10. ' start' → logprob: -5.975170135498047

Token 194: ' try' (ID: 2075)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.47222939133644104
    2. ' n' → logprob: -1.9722293615341187
    3. 'for' → logprob: -1.9722293615341187
    4. 'n' → logprob: -2.347229480743408
    5. '   ' → logprob: -6.222229480743408
    6. ' indices' → logprob: -8.59722900390625
    7. 'indices' → logprob: -9.47222900390625
    8. ' start' → logprob: -9.47222900390625
    9. ' ' → logprob: -10.34722900390625
    10. 'start' → logprob: -10.34722900390625

Token 195: ' all' (ID: 722)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.22851477563381195
    2. '   ' → logprob: -2.6035146713256836
    3. ' to' → logprob: -3.1035146713256836
    4. ' all' → logprob: -3.3535146713256836
    5. ' ' → logprob: -4.103514671325684
    6. ' i' → logprob: -4.228514671325684
    7. 'for' → logprob: -5.103514671325684
    8. ':' → logprob: -5.353514671325684
    9. '    ' → logprob: -5.603514671325684
    10. ' idx' → logprob: -6.728514671325684

Token 196: ' combinations' (ID: 43835)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.430140882730484
    2. ' for' → logprob: -1.3051408529281616
    3. 'i' → logprob: -3.555140972137451
    4. ' indices' → logprob: -3.930140972137451
    5. ' cards' → logprob: -4.430140972137451
    6. 'for' → logprob: -5.180140972137451
    7. 'indices' → logprob: -5.305140972137451
    8. ' combinations' → logprob: -5.805140972137451
    9. '   ' → logprob: -6.180140972137451
    10. 'cards' → logprob: -6.430140972137451

Token 197: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28498902916908264
    2. ' for' → logprob: -2.65998911857605
    3. ' from' → logprob: -3.53498911857605
    4. 'import' → logprob: -3.65998911857605
    5. '
' → logprob: -3.78498911857605
    6. 'from' → logprob: -4.034988880157471
    7. ' ' → logprob: -4.034988880157471
    8. '    
' → logprob: -4.034988880157471
    9. ' 
' → logprob: -5.159988880157471
    10. ':' → logprob: -5.284988880157471

Token 198: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.4882124662399292
    2. '[' → logprob: -1.9882124662399292
    3. ' range' → logprob: -2.7382125854492188
    4. 'range' → logprob: -2.8632125854492188
    5. 'from' → logprob: -3.1132125854492188
    6. ' ' → logprob: -3.6132125854492188
    7. '[i' → logprob: -3.8632125854492188
    8. ' [' → logprob: -4.488212585449219
    9. '9' → logprob: -5.238212585449219
    10. 'i' → logprob: -5.613212585449219

Token 199: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.3456331491470337
    2. '[' → logprob: -2.095633029937744
    3. 'range' → logprob: -2.220633029937744
    4. '9' → logprob: -3.720633029937744
    5. '[i' → logprob: -3.845633029937744
    6. 'i' → logprob: -4.970633029937744
    7. ' range' → logprob: -5.470633029937744
    8. 'from' → logprob: -6.845633029937744
    9. ' ' → logprob: -7.345633029937744
    10. ' [' → logprob: -7.595633029937744

Token 200: ' cards' (ID: 10541)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3203829526901245
    2. ' ' → logprob: -1.9453829526901245
    3. '   ' → logprob: -3.070383071899414
    4. '<|end|>' → logprob: -3.320383071899414
    5. ' from' → logprob: -3.945383071899414
    6. 'for' → logprob: -4.570383071899414
    7. '  ' → logprob: -5.570383071899414
    8. ',' → logprob: -5.695383071899414
    9. '
' → logprob: -5.695383071899414
    10. 'from' → logprob: -6.195383071899414

Token 201: ' not' (ID: 625)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5885665416717529
    2. '
' → logprob: -1.713566541671753
    3. ' for' → logprob: -1.963566541671753
    4. '<|end|>' → logprob: -2.588566541671753
    5. ':' → logprob: -4.213566780090332
    6. ',' → logprob: -4.338566780090332
    7. '    
' → logprob: -5.463566780090332
    8. '<|end|>' → logprob: -6.088566780090332
    9. ' 
' → logprob: -6.213566780090332
    10. '  
' → logprob: -6.338566780090332

Token 202: ' used' (ID: 2061)
  Prédit: ' used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.18349644541740417
    2. 'used' → logprob: -1.8084964752197266
    3. ' in' → logprob: -5.808496475219727
    4. '_used' → logprob: -7.808496475219727
    5. 'in' → logprob: -8.308496475219727
    6. ' ' → logprob: -9.933496475219727
    7. '   ' → logprob: -10.933496475219727
    8. '.used' → logprob: -11.808496475219727
    9. '[' → logprob: -12.558496475219727
    10. '  ' → logprob: -12.683496475219727

Token 203: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 204: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6765291690826416
    2. '   ' → logprob: -1.0515291690826416
    3. '    
' → logprob: -3.5515291690826416
    4. '
' → logprob: -3.5515291690826416
    5. '  
' → logprob: -3.9265291690826416
    6. ' 
' → logprob: -4.4265289306640625
    7. ' ' → logprob: -4.8015289306640625
    8. ' for' → logprob: -4.8015289306640625
    9. '\n' → logprob: -4.9265289306640625
    10. '\' → logprob: -4.9265289306640625

Token 205: ' n' (ID: 297)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.46063241362571716
    2. '   ' → logprob: -1.8356324434280396
    3. ' from' → logprob: -1.9606324434280396
    4. 'for' → logprob: -3.83563232421875
    5. 'from' → logprob: -3.83563232421875
    6. 'n' (adapté à ' n') → logprob: -4.46063232421875
    7. ' n' → logprob: -4.58563232421875
    8. ' import' → logprob: -6.58563232421875
    9. 'import' → logprob: -6.83563232421875
    10. '
' → logprob: -7.96063232421875

Token 206: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16938699781894684
    2. '=' → logprob: -1.9193869829177856
    3. '   ' → logprob: -5.044386863708496
    4. ' ' → logprob: -6.169386863708496
    5. '=len' → logprob: -8.169386863708496
    6. '  ' → logprob: -9.169386863708496
    7. 'um' → logprob: -9.544386863708496
    8. 'o' → logprob: -10.294386863708496
    9. ' for' → logprob: -11.044386863708496
    10. '    ' → logprob: -11.044386863708496

Token 207: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.2629598379135132
    2. ' len' → logprob: -1.5129598379135132
    3. '9' → logprob: -4.512959957122803
    4. ' ' → logprob: -12.887959480285645
    5. '(len' → logprob: -13.887959480285645
    6. '   ' → logprob: -15.012959480285645
    7. '=len' → logprob: -15.512959480285645
    8. '[len' → logprob: -16.01296043395996
    9. '	len' → logprob: -16.13796043395996
    10. ',len' → logprob: -18.01296043395996

Token 208: '(cards' (ID: 161529)
  Prédit: '(cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cards' → logprob: -0.000735177774913609
    2. '(' → logprob: -7.250735282897949
    3. 'cards' → logprob: -10.62573528289795
    4. 'used' → logprob: -14.37573528289795
    5. ' cards' → logprob: -15.50073528289795
    6. '(card' → logprob: -17.250734329223633
    7. ' (' → logprob: -17.375734329223633
    8. '(users' → logprob: -17.625734329223633
    9. '/cards' → logprob: -17.875734329223633
    10. '(
' → logprob: -18.250734329223633

Token 209: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019957278855144978
    2. ')
' → logprob: -6.25199556350708
    3. ' )' → logprob: -9.626996040344238
    4. ' )
' → logprob: -14.626996040344238
    5. ')

' → logprob: -14.751996040344238
    6. '   ' → logprob: -15.126996040344238
    7. '
' → logprob: -17.251995086669922
    8. '))' → logprob: -17.501995086669922
    9. ')
' → logprob: -17.501995086669922
    10. ')n' → logprob: -17.501995086669922

Token 210: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.25821545720100403
    2. '   ' → logprob: -1.7582154273986816
    3. 'for' → logprob: -3.3832154273986816
    4. '
' → logprob: -4.758215427398682
    5. ' 
' → logprob: -4.883215427398682
    6. '    
' → logprob: -6.133215427398682
    7. '  
' → logprob: -6.383215427398682
    8. '	for' → logprob: -8.13321590423584
    9. '   
' → logprob: -8.13321590423584
    10. ' ' → logprob: -8.13321590423584

Token 211: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.029824769124388695
    2. 'for' (adapté à ' for') → logprob: -3.529824733734131
    3. ' from' → logprob: -10.154825210571289
    4. '   ' → logprob: -10.904825210571289
    5. 'from' → logprob: -11.904825210571289
    6. ' ' → logprob: -12.279825210571289
    7. ' import' → logprob: -13.279825210571289
    8. ' i' → logprob: -13.404825210571289
    9. ' f' → logprob: -14.154825210571289
    10. 'import' → logprob: -14.154825210571289

Token 212: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.575945258140564
    2. ' i' → logprob: -0.825945258140564
    3. '	i' → logprob: -12.200944900512695
    4. ' ' → logprob: -14.825944900512695
    5. 'a' → logprob: -15.075944900512695
    6. '   ' → logprob: -16.200944900512695
    7. '_i' → logprob: -16.825944900512695
    8. '  ' → logprob: -17.950944900512695
    9. '```' → logprob: -18.325944900512695
    10. ' a' → logprob: -18.575944900512695

Token 213: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02717171609401703
    2. 'in' → logprob: -3.6521716117858887
    3. ' ' → logprob: -7.152171611785889
    4. '=' → logprob: -10.902172088623047
    5. ' i' → logprob: -10.902172088623047
    6. '  ' → logprob: -10.902172088623047
    7. '1' → logprob: -12.152172088623047
    8. '0' → logprob: -12.402172088623047
    9. ' =' → logprob: -12.527172088623047
    10. ',' → logprob: -12.902172088623047

Token 214: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3868771195411682
    2. 'range' → logprob: -1.1368770599365234
    3. ' ' → logprob: -12.136877059936523
    4. '	range' → logprob: -15.511877059936523
    5. '   ' → logprob: -15.636877059936523
    6. '(range' → logprob: -15.886877059936523
    7. ' xrange' → logprob: -16.011877059936523
    8. '  ' → logprob: -16.386877059936523
    9. 'r' → logprob: -17.886877059936523
    10. '0' → logprob: -18.261877059936523

Token 215: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0015949610387906432
    2. 'n' → logprob: -6.8765950202941895
    3. '(' → logprob: -7.8765950202941895
    4. ' n' → logprob: -8.626594543457031
    5. ' (' → logprob: -12.876594543457031
    6. '(i' → logprob: -15.001594543457031
    7. '0' → logprob: -15.376594543457031
    8. '	n' → logprob: -16.62659454345703
    9. '(
' → logprob: -17.00159454345703
    10. ' ' → logprob: -18.00159454345703

Token 216: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.027266494929790497
    2. '):
' → logprob: -3.777266502380371
    3. '-' → logprob: -5.777266502380371
    4. ' ):' → logprob: -7.527266502380371
    5. ' -' → logprob: -8.152266502380371
    6. ')' → logprob: -9.902266502380371
    7. '   ' → logprob: -10.652266502380371
    8. ' ):
' → logprob: -11.902266502380371
    9. '):

' → logprob: -12.652266502380371
    10. ' ' → logprob: -13.152266502380371

Token 217: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0209379196166992
    2. ' ' → logprob: -1.2709379196166992
    3. '<|end|>' → logprob: -1.6459379196166992
    4. ' if' → logprob: -2.020937919616699
    5. '   ' → logprob: -3.895937919616699
    6. '    ' → logprob: -5.270937919616699
    7. ':' → logprob: -5.645937919616699
    8. '<|end|>' → logprob: -6.645937919616699
    9. '  ' → logprob: -7.145937919616699
    10. ' 
' → logprob: -7.520937919616699

Token 218: ' if' (ID: 538)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20036263763904572
    2. ' if' → logprob: -1.8253626823425293
    3. 'for' → logprob: -3.9503626823425293
    4. 'if' (adapté à ' if') → logprob: -6.950362682342529
    5. ' ' → logprob: -9.075362205505371
    6. '   ' → logprob: -9.700362205505371
    7. '    ' → logprob: -11.700362205505371
    8. '	for' → logprob: -11.825362205505371
    9. '	if' → logprob: -12.825362205505371
    10. '       ' → logprob: -13.075362205505371

Token 219: ' used' (ID: 2061)
  Prédit: ' used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.6717190742492676
    2. ' not' → logprob: -0.7967190742492676
    3. 'used' → logprob: -3.4217190742492676
    4. 'not' → logprob: -5.171719074249268
    5. ' ' → logprob: -10.54671859741211
    6. '   ' → logprob: -12.79671859741211
    7. '	not' → logprob: -13.79671859741211
    8. '  ' → logprob: -14.29671859741211
    9. ' ' → logprob: -14.67171859741211
    10. '.used' → logprob: -14.79671859741211

Token 220: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00021295747137628496
    2. '[' → logprob: -8.500212669372559
    3. ' [' → logprob: -11.625212669372559
    4. '[
' → logprob: -15.750212669372559
    5. '[I' → logprob: -17.000213623046875
    6. ' ' → logprob: -17.125213623046875
    7. '[n' → logprob: -17.250213623046875
    8. '```' → logprob: -17.375213623046875
    9. '[j' → logprob: -17.500213623046875
    10. '
' → logprob: -17.625213623046875

Token 221: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.5191305875778198
    2. ']==' → logprob: -2.1441307067871094
    3. '==' → logprob: -2.6441307067871094
    4. '):' → logprob: -3.0191307067871094
    5. ']' → logprob: -3.2691307067871094
    6. ' ):' → logprob: -3.3941307067871094
    7. ':' → logprob: -3.5191307067871094
    8. ']:
' → logprob: -3.6441307067871094
    9. ' ]' → logprob: -4.269130706787109
    10. '):
' → logprob: -4.394130706787109

Token 222: '           ' (ID: 352)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.08454527705907822
    2. '           ' → logprob: -2.584545373916626
    3. 'continue' → logprob: -5.459545135498047
    4. '       ' → logprob: -6.709545135498047
    5. ' continues' → logprob: -9.959545135498047
    6. '               ' → logprob: -10.209545135498047
    7. '	continue' → logprob: -10.959545135498047
    8. '   ' → logprob: -11.209545135498047
    9. ':' → logprob: -11.334545135498047
    10. ' continued' → logprob: -11.584545135498047

Token 223: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.000634639582131058
    2. 'continue' (adapté à ' continue') → logprob: -7.375634670257568
    3. ' 
' → logprob: -12.50063419342041
    4. ' ' → logprob: -13.50063419342041
    5. ' continues' → logprob: -13.62563419342041
    6. '	continue' → logprob: -14.00063419342041
    7. '_continue' → logprob: -15.37563419342041
    8. ' continued' → logprob: -15.62563419342041
    9. 'contin' → logprob: -15.75063419342041
    10. ' Continue' → logprob: -16.250635147094727

Token 224: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1039667129516602
    2. '    
' → logprob: -1.7289667129516602
    3. '   ' → logprob: -2.10396671295166
    4. '  
' → logprob: -2.22896671295166
    5. ' 
' → logprob: -2.47896671295166
    6. '<|end|>' → logprob: -2.47896671295166
    7. '   
' → logprob: -3.10396671295166
    8. '       ' → logprob: -3.85396671295166
    9. '     
' → logprob: -5.35396671295166
    10. ' for' → logprob: -5.47896671295166

Token 225: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4753938913345337
    2. 'for' → logprob: -1.4753938913345337
    3. '   ' → logprob: -2.350393772125244
    4. ' 
' → logprob: -3.350393772125244
    5. '  
' → logprob: -4.975393772125244
    6. '    
' → logprob: -5.350393772125244
    7. '   
' → logprob: -5.975393772125244
    8. '
' → logprob: -6.100393772125244
    9. '     
' → logprob: -7.475393772125244
    10. 'n' → logprob: -7.725393772125244

Token 226: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.04416906461119652
    2. 'for' (adapté à ' for') → logprob: -3.1691689491271973
    3. ' 
' → logprob: -6.919168949127197
    4. ' ' → logprob: -9.044169425964355
    5. ' ' → logprob: -11.419169425964355
    6. '
' → logprob: -11.419169425964355
    7. '  
' → logprob: -11.419169425964355
    8. '   ' → logprob: -11.919169425964355
    9. '<|end|>' → logprob: -11.919169425964355
    10. '	for' → logprob: -12.169169425964355

Token 227: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.029750952497124672
    2. 'j' → logprob: -3.5297510623931885
    3. '	j' → logprob: -15.52975082397461
    4. '    ' → logprob: -15.65475082397461
    5. ' ' → logprob: -16.02975082397461
    6. ' ' → logprob: -18.02975082397461
    7. ',j' → logprob: -18.02975082397461
    8. 'space' → logprob: -18.27975082397461
    9. '   ' → logprob: -18.77975082397461
    10. '_j' → logprob: -18.77975082397461

Token 228: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0011545089073479176
    2. ' ' → logprob: -7.00115442276001
    3. 'in' → logprob: -8.376154899597168
    4. ' i' → logprob: -11.501154899597168
    5. '<|end|>' → logprob: -14.876154899597168
    6. ' =' → logprob: -15.001154899597168
    7. '  ' → logprob: -15.001154899597168
    8. 'range' → logprob: -15.251154899597168
    9. ' range' → logprob: -15.626154899597168
    10. '=' → logprob: -15.876154899597168

Token 229: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12692862749099731
    2. ' range' → logprob: -2.1269285678863525
    3. '(range' → logprob: -15.126928329467773
    4. ' ' → logprob: -15.501928329467773
    5. '   ' → logprob: -17.626928329467773
    6. '  ' → logprob: -18.126928329467773
    7. '	range' → logprob: -18.626928329467773
    8. 'i' → logprob: -18.751928329467773
    9. '    ' → logprob: -19.751928329467773
    10. ' i' → logprob: -20.251928329467773

Token 230: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.023669928312301636
    2. ' i' → logprob: -3.898669958114624
    3. 'i' → logprob: -6.898669719696045
    4. '(n' → logprob: -6.898669719696045
    5. ' (' → logprob: -7.023669719696045
    6. ' range' → logprob: -9.398670196533203
    7. '(' → logprob: -9.648670196533203
    8. ' n' → logprob: -10.273670196533203
    9. 'n' → logprob: -11.398670196533203
    10. 'range' → logprob: -11.398670196533203

Token 231: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.023246292024850845
    2. ' +' → logprob: -3.7732462882995605
    3. '+n' → logprob: -14.523246765136719
    4. '1' → logprob: -16.64824676513672
    5. '+
' → logprob: -16.77324676513672
    6. '+i' → logprob: -17.77324676513672
    7. '   ' → logprob: -18.39824676513672
    8. ' +
' → logprob: -18.52324676513672
    9. '+)' → logprob: -19.02324676513672
    10. ' ' → logprob: -19.02324676513672

Token 232: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.591415437171236e-05
    2. ' ' → logprob: -9.375096321105957
    3. 'n' → logprob: -11.750096321105957
    4. ' n' → logprob: -13.125096321105957
    5. '
' → logprob: -14.750096321105957
    6. '   ' → logprob: -15.000096321105957
    7. ',' → logprob: -16.50009536743164
    8. '```' → logprob: -16.68759536743164
    9. '           ' → logprob: -16.93759536743164
    10. '2' → logprob: -17.06259536743164

Token 233: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3156161308288574
    2. ',n' → logprob: -1.3156161308288574
    3. ' ,' → logprob: -6.065616130828857
    4. ',j' → logprob: -10.815616607666016
    5. 'n' → logprob: -12.190616607666016
    6. '+' → logprob: -13.315616607666016
    7. '1' → logprob: -13.940616607666016
    8. '(n' → logprob: -14.690616607666016
    9. ',
' → logprob: -14.815616607666016
    10. ',i' → logprob: -14.815616607666016

Token 234: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0009115827269852161
    2. ' n' → logprob: -7.000911712646484
    3. '   ' → logprob: -16.250911712646484
    4. ')' → logprob: -18.125911712646484
    5. ' ' → logprob: -18.125911712646484
    6. '	n' → logprob: -18.250911712646484
    7. '(n' → logprob: -18.750911712646484
    8. '<|end|>' → logprob: -19.125911712646484
    9. ')n' → logprob: -19.125911712646484
    10. '    ' → logprob: -19.375911712646484

Token 235: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.313283234834671
    2. '):
' → logprob: -1.3132832050323486
    3. '):
' → logprob: -11.81328296661377
    4. ':' → logprob: -12.18828296661377
    5. ')' → logprob: -12.56328296661377
    6. '):

' → logprob: -12.81328296661377
    7. ' ):' → logprob: -14.06328296661377
    8. '   ' → logprob: -14.43828296661377
    9. 'n' → logprob: -14.93828296661377
    10. ' ):
' → logprob: -15.81328296661377

Token 236: '           ' (ID: 352)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8713459968566895
    2. '       ' → logprob: -1.6213459968566895
    3. '<|end|>' → logprob: -1.6213459968566895
    4. ' ' → logprob: -1.7463459968566895
    5. '        ' → logprob: -5.1213459968566895
    6. '           ' → logprob: -5.8713459968566895
    7. ' ' → logprob: -6.7463459968566895
    8. ' 
' → logprob: -7.4963459968566895
    9. '<|end|>' → logprob: -8.121345520019531
    10. 'if' → logprob: -8.371345520019531

Token 237: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.008405114524066448
    2. '           ' → logprob: -5.3834052085876465
    3. 'if' (adapté à ' if') → logprob: -6.0084052085876465
    4. '<|end|>' → logprob: -7.3834052085876465
    5. '            ' → logprob: -7.6334052085876465
    6. ' ' → logprob: -9.133404731750488
    7. ' 
' → logprob: -9.883404731750488
    8. '               ' → logprob: -11.383404731750488
    9. '        ' → logprob: -11.883404731750488
    10. '    ' → logprob: -12.258404731750488

Token 238: ' used' (ID: 2061)
  Prédit: ' used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.0002694416616577655
    2. 'used' → logprob: -8.250269889831543
    3. ' not' → logprob: -11.750269889831543
    4. ' ' → logprob: -15.250269889831543
    5. ' ' → logprob: -17.875268936157227
    6. 'not' → logprob: -19.000268936157227
    7. '.used' → logprob: -19.000268936157227
    8. '_used' → logprob: -19.125268936157227
    9. '   ' → logprob: -19.500268936157227
    10. ' usado' → logprob: -19.875268936157227

Token 239: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -4.0126840758603066e-05
    2. '[' → logprob: -10.125040054321289
    3. ' [' → logprob: -16.75004005432129
    4. '[i' → logprob: -16.87504005432129
    5. '[
' → logprob: -17.37504005432129
    6. '[js' → logprob: -18.25004005432129
    7. '```' → logprob: -18.25004005432129
    8. '[J' → logprob: -20.00004005432129
    9. ' ' → logprob: -20.25004005432129
    10. '

' → logprob: -20.75004005432129

Token 240: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.12235680222511292
    2. ']' → logprob: -2.74735689163208
    3. ':' → logprob: -3.24735689163208
    4. ']:
' → logprob: -4.87235689163208
    5. '):' → logprob: -6.62235689163208
    6. ' or' → logprob: -6.87235689163208
    7. '[' → logprob: -7.24735689163208
    8. ' ]' → logprob: -8.247356414794922
    9. '   ' → logprob: -8.372356414794922
    10. '       ' → logprob: -8.622356414794922

Token 241: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.38130685687065125
    2. ' continue' → logprob: -1.2563068866729736
    3. 'continue' → logprob: -4.1313066482543945
    4. '           ' → logprob: -4.1313066482543945
    5. '       ' → logprob: -9.756306648254395
    6. '	continue' → logprob: -10.006306648254395
    7. '   ' → logprob: -10.256306648254395
    8. '_continue' → logprob: -11.381306648254395
    9. ' continues' → logprob: -11.506306648254395
    10. '              ' → logprob: -11.631306648254395

Token 242: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.038542866706848145
    2. 'continue' (adapté à ' continue') → logprob: -3.2885427474975586
    3. ' True' → logprob: -7.788542747497559
    4. 'True' → logprob: -10.038542747497559
    5. '               ' → logprob: -10.788542747497559
    6. '           ' → logprob: -11.163542747497559
    7. '   ' → logprob: -12.413542747497559
    8. '	continue' → logprob: -13.288542747497559
    9. '                   ' → logprob: -13.913542747497559
    10. ' ' → logprob: -14.163542747497559

Token 243: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00010711929644457996
    2. '
' → logprob: -10.500106811523438
    3. '       ' → logprob: -10.500106811523438
    4. '		' → logprob: -11.375106811523438
    5. '               ' → logprob: -11.375106811523438
    6. ' for' → logprob: -11.875106811523438
    7. '            
' → logprob: -12.375106811523438
    8. ' 
' → logprob: -12.500106811523438
    9. '   ' → logprob: -12.625106811523438
    10. '<|end|>' → logprob: -13.000106811523438

Token 244: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008955012308433652
    2. '       ' → logprob: -7.3758955001831055
    3. ' for' → logprob: -8.500895500183105
    4. 'for' → logprob: -10.750895500183105
    5. '               ' → logprob: -11.125895500183105
    6. '   ' → logprob: -11.250895500183105
    7. '            
' → logprob: -12.375895500183105
    8. '```' → logprob: -13.125895500183105
    9. ' 
' → logprob: -13.250895500183105
    10. '            ' → logprob: -13.250895500183105

Token 245: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.057422418147325516
    2. 'for' (adapté à ' for') → logprob: -2.932422399520874
    3. '           ' → logprob: -6.057422637939453
    4. '       ' → logprob: -8.682422637939453
    5. '   ' → logprob: -11.057422637939453
    6. '	for' → logprob: -13.182422637939453
    7. '               ' → logprob: -13.307422637939453
    8. '
' → logprob: -13.307422637939453
    9. ' ' → logprob: -13.307422637939453
    10. ' 
' → logprob: -13.557422637939453

Token 246: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.16022422909736633
    2. 'k' → logprob: -1.910224199295044
    3. '	k' → logprob: -18.41022491455078
    4. ' ' → logprob: -18.78522491455078
    5. ',k' → logprob: -19.03522491455078
    6. '_k' → logprob: -19.16022491455078
    7. ' x' → logprob: -19.41022491455078
    8. 'x' → logprob: -19.66022491455078
    9. ' к' → logprob: -19.91022491455078
    10. '(k' → logprob: -19.91022491455078

Token 247: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00013154871703591198
    2. ' ' → logprob: -9.125131607055664
    3. 'in' → logprob: -10.750131607055664
    4. ' k' → logprob: -14.500131607055664
    5. '<|end|>' → logprob: -16.250131607055664
    6. ' в' → logprob: -16.625131607055664
    7. '(k' → logprob: -16.875131607055664
    8. ' (' → logprob: -16.875131607055664
    9. '```' → logprob: -16.875131607055664
    10. 'range' → logprob: -17.000131607055664

Token 248: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6941171884536743
    2. ' range' → logprob: -0.9441171884536743
    3. '(range' → logprob: -2.1941170692443848
    4. '(j' → logprob: -12.694117546081543
    5. '	range' → logprob: -14.444117546081543
    6. ' (' → logprob: -14.569117546081543
    7. '(k' → logprob: -15.319117546081543
    8. '.range' → logprob: -15.444117546081543
    9. '   ' → logprob: -16.069116592407227
    10. '_range' → logprob: -16.069116592407227

Token 249: '(j' (ID: 4997)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.0024870727211236954
    2. '(j' → logprob: -6.0024871826171875
    3. 'k' → logprob: -11.877487182617188
    4. '(' → logprob: -13.752487182617188
    5. '           ' → logprob: -13.752487182617188
    6. '               ' → logprob: -13.877487182617188
    7. ' (' → logprob: -14.002487182617188
    8. '                   ' → logprob: -15.877487182617188
    9. '   ' → logprob: -16.002487182617188
    10. ' k' → logprob: -16.127487182617188

Token 250: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -7.584239938296378e-06
    2. ' +' → logprob: -12.125007629394531
    3. '+k' → logprob: -13.125007629394531
    4. '1' → logprob: -15.750007629394531
    5. 'k' → logprob: -18.25000762939453
    6. '+
' → logprob: -19.12500762939453
    7. '3' → logprob: -19.50000762939453
    8. '   ' → logprob: -20.37500762939453
    9. '           ' → logprob: -21.00000762939453
    10. '()+' → logprob: -21.12500762939453

Token 251: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0445127372804563e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -16.250009536743164
    4. ',' → logprob: -16.750009536743164
    5. '           ' → logprob: -18.062509536743164
    6. '```' → logprob: -18.125009536743164
    7. '2' → logprob: -18.187509536743164
    8. '  ' → logprob: -18.250009536743164
    9. '+' → logprob: -18.375009536743164
    10. ' k' → logprob: -18.500009536743164

Token 252: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004317603074014187
    2. ',n' → logprob: -5.504317760467529
    3. 'n' → logprob: -9.129317283630371
    4. ' ,' → logprob: -9.254317283630371
    5. ',k' → logprob: -10.504317283630371
    6. '+' → logprob: -13.004317283630371
    7. 'k' → logprob: -13.254317283630371
    8. ' n' → logprob: -13.504317283630371
    9. '+,' → logprob: -14.504317283630371
    10. '1' → logprob: -14.504317283630371

Token 253: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07888989895582199
    2. ' n' → logprob: -2.578889846801758
    3. '           ' → logprob: -16.703889846801758
    4. ' ' → logprob: -16.828889846801758
    5. 'k' → logprob: -16.953889846801758
    6. ')n' → logprob: -17.203889846801758
    7. '	n' → logprob: -17.453889846801758
    8. '   ' → logprob: -17.703889846801758
    9. ')' → logprob: -18.453889846801758
    10. '(n' → logprob: -18.578889846801758

Token 254: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.350513756275177
    2. '):' → logprob: -1.2255136966705322
    3. ':' → logprob: -7.100513935089111
    4. ')' → logprob: -7.850513935089111
    5. '<|end|>' → logprob: -8.225513458251953
    6. '```' → logprob: -8.850513458251953
    7. '):

' → logprob: -9.225513458251953
    8. '{' → logprob: -9.975513458251953
    9. ':
' → logprob: -10.100513458251953
    10. '           ' → logprob: -10.475513458251953

Token 255: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5257079005241394
    2. '               ' → logprob: -0.9007079005241394
    3. '<|end|>' → logprob: -6.650707721710205
    4. ' if' → logprob: -7.275707721710205
    5. '                               ' → logprob: -8.400708198547363
    6. '                   ' → logprob: -9.275708198547363
    7. '                           ' → logprob: -9.775708198547363
    8. '            ' → logprob: -9.900708198547363
    9. '       ' → logprob: -10.400708198547363
    10. '		' → logprob: -10.775708198547363

Token 256: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.04428322985768318
    2. '               ' → logprob: -3.169283151626587
    3. '           ' → logprob: -7.419283390045166
    4. '                   ' → logprob: -7.544283390045166
    5. 'if' (adapté à ' if') → logprob: -9.169282913208008
    6. '                ' → logprob: -10.419282913208008
    7. '       ' → logprob: -11.794282913208008
    8. '   ' → logprob: -12.669282913208008
    9. '<|end|>' → logprob: -13.044282913208008
    10. ' ' → logprob: -13.294282913208008

Token 257: ' used' (ID: 2061)
  Prédit: ' used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.004125061444938183
    2. 'used' → logprob: -5.504125118255615
    3. ' not' → logprob: -10.004124641418457
    4. '   ' → logprob: -13.879124641418457
    5. 'not' → logprob: -15.379124641418457
    6. ' ' → logprob: -16.504125595092773
    7. '_used' → logprob: -16.629125595092773
    8. '.used' → logprob: -16.754125595092773
    9. 'Used' → logprob: -17.254125595092773
    10. '    ' → logprob: -17.379125595092773

Token 258: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -1.7432603272027336e-06
    2. '[' → logprob: -13.375001907348633
    3. 'k' → logprob: -16.625001907348633
    4. ' [' → logprob: -18.125001907348633
    5. '[
' → logprob: -18.750001907348633
    6. '```' → logprob: -18.875001907348633
    7. '[i' → logprob: -19.625001907348633
    8. '[j' → logprob: -19.625001907348633
    9. '[key' → logprob: -20.000001907348633
    10. '(k' → logprob: -20.375001907348633

Token 259: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.04829878360033035
    2. ']:
' → logprob: -3.1732988357543945
    3. ']' → logprob: -5.4232988357543945
    4. ':' → logprob: -7.4232988357543945
    5. '):' → logprob: -9.548298835754395
    6. '[' → logprob: -10.173298835754395
    7. ']:

' → logprob: -10.423298835754395
    8. ']==' → logprob: -10.673298835754395
    9. '):
' → logprob: -10.798298835754395
    10. ']>' → logprob: -11.173298835754395

Token 260: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0933787077665329
    2. '                   ' → logprob: -2.593378782272339
    3. ' continue' → logprob: -4.96837854385376
    4. 'continue' → logprob: -5.34337854385376
    5. ' True' → logprob: -6.59337854385376
    6. 'True' → logprob: -6.96837854385376
    7. '   ' → logprob: -8.593379020690918
    8. '           ' → logprob: -9.343379020690918
    9. '=True' → logprob: -11.468379020690918
    10. '                       ' → logprob: -11.593379020690918

Token 261: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.07894399762153625
    2. ' continue' → logprob: -2.578943967819214
    3. '                   ' → logprob: -9.953944206237793
    4. '               ' → logprob: -12.328944206237793
    5. '   ' → logprob: -14.078944206237793
    6. '                       ' → logprob: -14.453944206237793
    7. '	continue' → logprob: -14.828944206237793
    8. '           ' → logprob: -15.203944206237793
    9. '       ' → logprob: -16.328943252563477
    10. ' ' → logprob: -16.953943252563477

Token 262: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09806834161281586
    2. '                ' → logprob: -3.4730682373046875
    3. '                   ' → logprob: -3.4730682373046875
    4. '                
' → logprob: -5.0980682373046875
    5. '
' → logprob: -5.2230682373046875
    6. '                    
' → logprob: -5.3480682373046875
    7. '<|end|>' → logprob: -5.7230682373046875
    8. '  
' → logprob: -5.9730682373046875
    9. ' 
' → logprob: -6.3480682373046875
    10. '                        
' → logprob: -7.2230682373046875

Token 263: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007535171695053577
    2. '                
' → logprob: -5.632534980773926
    3. '
' → logprob: -6.007534980773926
    4. '                ' → logprob: -7.757534980773926
    5. '  
' → logprob: -8.382534980773926
    6. '                   ' → logprob: -8.507534980773926
    7. '                    
' → logprob: -8.757534980773926
    8. '       ' → logprob: -9.632534980773926
    9. ' 
' → logprob: -9.632534980773926
    10. '           ' → logprob: -9.882534980773926

Token 264: ' triple' (ID: 41563)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.31644001603126526
    2. ' if' → logprob: -1.8164399862289429
    3. '                   ' → logprob: -3.4414401054382324
    4. '                
' → logprob: -3.4414401054382324
    5. '
' → logprob: -4.066440105438232
    6. ' 
' → logprob: -4.566440105438232
    7. '                    
' → logprob: -4.941440105438232
    8. '                ' → logprob: -5.316440105438232
    9. '                 
' → logprob: -6.941440105438232
    10. 'if' → logprob: -7.191440105438232

Token 265: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004222639836370945
    2. '=' → logprob: -5.504222869873047
    3. '_cards' → logprob: -8.879222869873047
    4. 's' → logprob: -12.879222869873047
    5. ' ' → logprob: -14.004222869873047
    6. '   ' → logprob: -14.754222869873047
    7. '_' → logprob: -14.754222869873047
    8. '    ' → logprob: -15.254222869873047
    9. ')' → logprob: -15.754222869873047
    10. '	' → logprob: -16.129222869873047

Token 266: ' [' (ID: 723)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.16137686371803284
    2. ' [' → logprob: -1.9113768339157104
    3. '[' → logprob: -7.161376953125
    4. '(cards' → logprob: -8.036376953125
    5. ' cards' → logprob: -10.161376953125
    6. ' (' → logprob: -12.286376953125
    7. 'cards' → logprob: -12.286376953125
    8. '[
' → logprob: -13.661376953125
    9. '   ' → logprob: -13.786376953125
    10. '(c' → logprob: -14.161376953125

Token 267: 'cards' (ID: 40956)
  Prédit: 'cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.0011723674833774567
    2. ' cards' → logprob: -6.7511725425720215
    3. '(cards' → logprob: -13.626172065734863
    4. '.cards' → logprob: -15.001172065734863
    5. 'card' → logprob: -15.251172065734863
    6. '   ' → logprob: -15.501172065734863
    7. '/cards' → logprob: -16.87617301940918
    8. '_cards' → logprob: -17.12617301940918
    9. ' ' → logprob: -17.37617301940918
    10. 'cars' → logprob: -17.75117301940918

Token 268: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.7120533811976202e-05
    2. 'i' → logprob: -11.125017166137695
    3. '[' → logprob: -13.000017166137695
    4. '[j' → logprob: -17.875017166137695
    5. ' [' → logprob: -18.500017166137695
    6. '[I' → logprob: -19.125017166137695
    7. '[t' → logprob: -19.625017166137695
    8. '[a' → logprob: -19.750017166137695
    9. '```' → logprob: -19.750017166137695
    10. '[
' → logprob: -19.875017166137695

Token 269: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04911389946937561
    2. '],' → logprob: -3.0491139888763428
    3. ' ,' → logprob: -7.674113750457764
    4. ']' → logprob: -10.674114227294922
    5. ',i' → logprob: -11.549114227294922
    6. '[i' → logprob: -12.174114227294922
    7. '),' → logprob: -12.424114227294922
    8. ' ],' → logprob: -12.549114227294922
    9. ',
' → logprob: -12.799114227294922
    10. ',k' → logprob: -12.924114227294922

Token 270: ' cards' (ID: 10541)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.12694227695465088
    2. ' cards' → logprob: -2.1269421577453613
    3. '(cards' → logprob: -11.37694263458252
    4. '.cards' → logprob: -13.50194263458252
    5. 'card' → logprob: -14.12694263458252
    6. 'c' → logprob: -15.37694263458252
    7. '/cards' → logprob: -16.001941680908203
    8. ' ' → logprob: -16.126941680908203
    9. ' ' → logprob: -16.876941680908203
    10. 'codes' → logprob: -16.876941680908203

Token 271: '[j' (ID: 7895)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.3009188175201416
    2. '],' → logprob: -1.6759188175201416
    3. '[j' → logprob: -2.8009188175201416
    4. ',' → logprob: -5.0509185791015625
    5. 'k' → logprob: -6.4259185791015625
    6. '[' → logprob: -6.5509185791015625
    7. ']' → logprob: -7.3009185791015625
    8. ',k' → logprob: -7.4259185791015625
    9. 'j' → logprob: -7.5509185791015625
    10. '[i' → logprob: -7.9259185791015625

Token 272: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0001830410328693688
    2. ',' → logprob: -8.75018310546875
    3. ' ],' → logprob: -11.75018310546875
    4. ']' → logprob: -11.87518310546875
    5. '],
' → logprob: -12.25018310546875
    6. ',k' → logprob: -12.75018310546875
    7. ' ,' → logprob: -13.62518310546875
    8. 'k' → logprob: -15.62518310546875
    9. '],

' → logprob: -15.87518310546875
    10. ']],' → logprob: -16.75018310546875

Token 273: ' cards' (ID: 10541)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.023249322548508644
    2. ' cards' → logprob: -3.773249387741089
    3. '(cards' → logprob: -13.273249626159668
    4. '.cards' → logprob: -13.898249626159668
    5. 'card' → logprob: -15.023249626159668
    6. ' ' → logprob: -15.398249626159668
    7. '/cards' → logprob: -16.52324867248535
    8. '   ' → logprob: -16.64824867248535
    9. '             ' → logprob: -16.77324867248535
    10. '         ' → logprob: -16.89824867248535

Token 274: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.20229186117649078
    2. 'k' → logprob: -1.7022918462753296
    3. ']' → logprob: -7.202291965484619
    4. '[' → logprob: -9.952291488647461
    5. '[
' → logprob: -10.577291488647461
    6. '{k' → logprob: -10.577291488647461
    7. '(k' → logprob: -11.577291488647461
    8. '```' → logprob: -12.327291488647461
    9. '],' → logprob: -12.452291488647461
    10. ' k' → logprob: -12.577291488647461

Token 275: ']]
' (ID: 29446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00029613598599098623
    2. ']
' → logprob: -8.625296592712402
    3. ']]' → logprob: -9.750296592712402
    4. ')]' → logprob: -9.875296592712402
    5. ' ]' → logprob: -12.125296592712402
    6. ']}' → logprob: -14.500296592712402
    7. ']

' → logprob: -15.250296592712402
    8. ']]
' → logprob: -16.000295639038086
    9. '`]' → logprob: -16.125295639038086
    10. '}]' → logprob: -16.500295639038086

Token 276: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002702758414670825
    2. '                
' → logprob: -6.252702713012695
    3. '<|end|>' → logprob: -7.877702713012695
    4. ' if' → logprob: -8.627702713012695
    5. '                ' → logprob: -9.002702713012695
    6. '
' → logprob: -10.752702713012695
    7. '<|end|>' → logprob: -11.502702713012695
    8. '                    
' → logprob: -12.127702713012695
    9. '              ' → logprob: -12.252702713012695
    10. '                   ' → logprob: -12.252702713012695

Token 277: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.054409805685281754
    2. ' if' → logprob: -3.0544097423553467
    3. '                
' → logprob: -5.804409980773926
    4. 'if' (adapté à ' if') → logprob: -6.179409980773926
    5. '
' → logprob: -8.179409980773926
    6. '                ' → logprob: -8.429409980773926
    7. ' 
' → logprob: -9.429409980773926
    8. '<|end|>' → logprob: -10.054409980773926
    9. '  
' → logprob: -11.429409980773926
    10. '                   ' → logprob: -11.429409980773926

Token 278: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0006776464288122952
    2. 'is' → logprob: -7.500677585601807
    3. ' not' → logprob: -9.000678062438965
    4. 'not' → logprob: -13.625678062438965
    5. ' ' → logprob: -17.00067710876465
    6. '	is' → logprob: -17.62567710876465
    7. ' ' → logprob: -18.75067710876465
    8. '   ' → logprob: -20.75067710876465
    9. '  ' → logprob: -21.25067710876465
    10. '(is' → logprob: -21.37567710876465

Token 279: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -2.1008713702030946e-06
    2. '_' → logprob: -13.500001907348633
    3. ' _' → logprob: -14.625001907348633
    4. '_SET' → logprob: -16.375001907348633
    5. '_sets' → logprob: -17.250001907348633
    6. ')' → logprob: -17.250001907348633
    7. ')_' → logprob: -17.625001907348633
    8. ' set' → logprob: -18.000001907348633
    9. 'set' → logprob: -18.000001907348633
    10. '"_' → logprob: -18.500001907348633

Token 280: '(tr' (ID: 14363)
  Prédit: '(tr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tr' → logprob: -5.8126592193730175e-05
    2. '(' → logprob: -9.8750581741333
    3. ' (' → logprob: -12.0000581741333
    4. 'tr' → logprob: -16.250057220458984
    5. '(trim' → logprob: -16.750057220458984
    6. '(
' → logprob: -17.250057220458984
    7. ')' → logprob: -17.500057220458984
    8. ')(' → logprob: -17.625057220458984
    9. '((' → logprob: -17.875057220458984
    10. ' triple' → logprob: -18.250057220458984

Token 281: 'iple' (ID: 5335)
  Prédit: 'iple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iple' → logprob: -4.56102097814437e-05
    2. 'ple' → logprob: -10.625045776367188
    3. 'ip' → logprob: -11.625045776367188
    4. 'iples' → logprob: -12.000045776367188
    5. 'i' → logprob: -14.000045776367188
    6. ')' → logprob: -14.125045776367188
    7. 'ipe' → logprob: -14.375045776367188
    8. '```' → logprob: -14.500045776367188
    9. 'ible' → logprob: -14.750045776367188
    10. '           ' → logprob: -15.000045776367188

Token 282: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01419406570494175
    2. '):
' → logprob: -4.264194011688232
    3. ')' → logprob: -11.01419448852539
    4. ':' → logprob: -11.51419448852539
    5. ' ):' → logprob: -13.38919448852539
    6. '):

' → logprob: -14.01419448852539
    7. '):
' → logprob: -14.13919448852539
    8. '   ' → logprob: -15.01419448852539
    9. ':
' → logprob: -15.51419448852539
    10. '                   ' → logprob: -15.76419448852539

Token 283: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.008581005036830902
    2. '               ' → logprob: -5.383581161499023
    3. '                    
' → logprob: -6.258581161499023
    4. '
' → logprob: -7.383581161499023
    5. ':
' → logprob: -7.758581161499023
    6. '                       ' → logprob: -8.258581161499023
    7. ' used' → logprob: -9.008581161499023
    8. '           ' → logprob: -9.133581161499023
    9. '                
' → logprob: -9.508581161499023
    10. ':' → logprob: -9.508581161499023

Token 284: ' used' (ID: 2061)
  Prédit: ' used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.23454712331295013
    2. '                   ' → logprob: -1.6095471382141113
    3. '               ' → logprob: -5.109547138214111
    4. '                    
' → logprob: -7.359547138214111
    5. '                ' → logprob: -7.609547138214111
    6. '                    ' → logprob: -7.984547138214111
    7. '                       ' → logprob: -7.984547138214111
    8. 'used' (adapté à ' used') → logprob: -8.234546661376953
    9. '
' → logprob: -8.234546661376953
    10. '   ' → logprob: -8.609546661376953

Token 285: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.5
    3. '[k' → logprob: -16.25
    4. '[j' → logprob: -19.25
    5. '[I' → logprob: -19.625
    6. ' [' → logprob: -20.0
    7. '```' → logprob: -20.5
    8. '[u' → logprob: -22.0
    9. '[idx' → logprob: -22.125
    10. '[:]' → logprob: -22.5

Token 286: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004827465454582125
    2. ']=' → logprob: -7.875482559204102
    3. ' ]' → logprob: -9.375482559204102
    4. '=' → logprob: -11.625482559204102
    5. '],' → logprob: -12.125482559204102
    6. ' =' → logprob: -12.875482559204102
    7. '=True' → logprob: -14.625482559204102
    8. ',' → logprob: -15.625482559204102
    9. ')' → logprob: -16.0004825592041
    10. ']
' → logprob: -16.3754825592041

Token 287: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07893749326467514
    2. ' =' → logprob: -2.578937530517578
    3. ',' → logprob: -10.453937530517578
    4. '=True' → logprob: -10.953937530517578
    5. ']' → logprob: -14.078937530517578
    6. '[' → logprob: -15.328937530517578
    7. ']=' → logprob: -15.703937530517578
    8. ')' → logprob: -16.703937530517578
    9. '=False' → logprob: -16.703937530517578
    10. '=true' → logprob: -17.578937530517578

Token 288: ' used' (ID: 2061)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.001170225441455841
    2. ' True' → logprob: -6.7511701583862305
    3. '=True' → logprob: -19.876171112060547
    4. '(True' → logprob: -20.626171112060547
    5. '1' → logprob: -22.376171112060547
    6. '.True' → logprob: -23.876171112060547
    7. '   ' → logprob: -24.126171112060547
    8. 'true' → logprob: -24.376171112060547
    9. 'Tr' → logprob: -24.626171112060547
    10. 'False' → logprob: -24.751171112060547

Token 289: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.015247014351189137
    2. '[i' → logprob: -4.765246868133545
    3. 'True' → logprob: -5.515246868133545
    4. 'j' → logprob: -6.140246868133545
    5. '[k' → logprob: -8.015247344970703
    6. '[' → logprob: -9.515247344970703
    7. ' True' → logprob: -11.390247344970703
    8. 'False' → logprob: -12.265247344970703
    9. 'k' → logprob: -12.515247344970703
    10. 'i' → logprob: -12.765247344970703

Token 290: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0329316109418869
    2. '=' → logprob: -3.7829315662384033
    3. ' =' → logprob: -5.032931804656982
    4. ']=' → logprob: -5.782931804656982
    5. '=True' → logprob: -10.907931327819824
    6. ' ]' → logprob: -11.282931327819824
    7. '<|end|>' → logprob: -12.782931327819824
    8. '']' → logprob: -13.282931327819824
    9. 'True' → logprob: -13.782931327819824
    10. ')' → logprob: -14.657931327819824

Token 291: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12694858014583588
    2. ' =' → logprob: -2.126948595046997
    3. '=True' → logprob: -10.876948356628418
    4. '=
' → logprob: -14.001948356628418
    5. ']' → logprob: -15.626948356628418
    6. 'True' → logprob: -16.001949310302734
    7. '=False' → logprob: -16.376949310302734
    8. ' =
' → logprob: -16.376949310302734
    9. '[' → logprob: -16.876949310302734
    10. '<|end|>' → logprob: -17.001949310302734

Token 292: ' used' (ID: 2061)
  Prédit: ' used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.7341092228889465
    2. 'used' → logprob: -0.9841092228889465
    3. 'True' → logprob: -1.9841091632843018
    4. ' True' → logprob: -4.734109401702881
    5. 'Used' → logprob: -13.859108924865723
    6. '(True' → logprob: -14.859108924865723
    7. 'true' → logprob: -15.859108924865723
    8. '=True' → logprob: -15.984108924865723
    9. '_used' → logprob: -16.23410987854004
    10. 'use' → logprob: -16.48410987854004

Token 293: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -8.518582762917504e-05
    2. 'k' → logprob: -9.37508487701416
    3. '[' → logprob: -16.125085830688477
    4. ' [' → logprob: -16.500085830688477
    5. ' k' → logprob: -17.000085830688477
    6. 'True' → logprob: -17.375085830688477
    7. '```' → logprob: -18.000085830688477
    8. '[
' → logprob: -18.625085830688477
    9. '{k' → logprob: -18.875085830688477
    10. '   ' → logprob: -19.625085830688477

Token 294: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16130362451076508
    2. ' =' → logprob: -1.9113036394119263
    3. '=True' → logprob: -6.911303520202637
    4. ']' → logprob: -10.036303520202637
    5. 'True' → logprob: -10.536303520202637
    6. ']=' → logprob: -11.911303520202637
    7. ' True' → logprob: -12.286303520202637
    8. ')' → logprob: -15.286303520202637
    9. '<|end|>' → logprob: -15.411303520202637
    10. '(True' → logprob: -15.536303520202637

Token 295: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2018636167049408
    2. ' =' → logprob: -1.7018636465072632
    3. '=True' → logprob: -7.951863765716553
    4. 'True' → logprob: -9.576863288879395
    5. ' True' → logprob: -10.451863288879395
    6. ' ' → logprob: -17.70186424255371
    7. '(True' → logprob: -17.95186424255371
    8. '                   ' → logprob: -18.20186424255371
    9. '[' → logprob: -18.70186424255371
    10. ' =
' → logprob: -19.32686424255371

Token 296: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.3868710398674011
    2. 'True' → logprob: -1.136871099472046
    3. '(True' → logprob: -17.761871337890625
    4. '=True' → logprob: -19.761871337890625
    5. ' Tru' → logprob: -22.136871337890625
    6. '1' → logprob: -22.261871337890625
    7. '.True' → logprob: -23.136871337890625
    8. ' ' → logprob: -23.761871337890625
    9. ' ' → logprob: -23.886871337890625
    10. 'False' → logprob: -23.886871337890625

Token 297: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39154884219169617
    2. '                   ' → logprob: -1.1415488719940186
    3. '                    
' → logprob: -6.0165486335754395
    4. '               ' → logprob: -6.5165486335754395
    5. '<|end|>' → logprob: -8.516549110412598
    6. '    
' → logprob: -9.141549110412598
    7. '  
' → logprob: -9.391549110412598
    8. '
' → logprob: -9.516549110412598
    9. '                
' → logprob: -10.016549110412598
    10. '           ' → logprob: -10.641549110412598

Token 298: '                   ' (ID: 699)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.018399957567453384
    2. '                   ' → logprob: -4.893400192260742
    3. '               ' → logprob: -5.268400192260742
    4. '                    
' → logprob: -5.893400192260742
    5. '  
' → logprob: -7.143400192260742
    6. '    
' → logprob: -7.643400192260742
    7. '                
' → logprob: -7.768400192260742
    8. '<|end|>' → logprob: -7.768400192260742
    9. ' 
' → logprob: -8.393400192260742
    10. '
' → logprob: -9.018400192260742

Token 299: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4754532277584076
    2. '                   ' → logprob: -1.22545325756073
    3. ' if' → logprob: -2.4754531383514404
    4. '               ' → logprob: -7.7254533767700195
    5. '
' → logprob: -9.60045337677002
    6. '           ' → logprob: -9.85045337677002
    7. '       ' → logprob: -10.22545337677002
    8. '   ' → logprob: -10.60045337677002
    9. 'result' → logprob: -11.72545337677002
    10. '                    
' → logprob: -11.85045337677002

Token 300: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.006715728435665369
    2. 'can' → logprob: -5.006715774536133
    3. '	can' → logprob: -15.131715774536133
    4. '_can' → logprob: -16.381715774536133
    5. '(can' → logprob: -16.881715774536133
    6. 'Can' → logprob: -17.756715774536133
    7. '.can' → logprob: -20.006715774536133
    8. ' ' → logprob: -21.506715774536133
    9. ' ' → logprob: -21.881715774536133
    10. ' could' → logprob: -22.381715774536133

Token 301: '_form' (ID: 18664)
  Prédit: '_form'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_form' → logprob: -2.8206473871250637e-05
    2. '_forms' → logprob: -10.625028610229492
    3. '_' → logprob: -13.000028610229492
    4. '_can' → logprob: -14.125028610229492
    5. '_for' → logprob: -15.000028610229492
    6. ' _' → logprob: -15.500028610229492
    7. '_Form' → logprob: -16.125028610229492
    8. '_continue' → logprob: -16.500028610229492
    9. '_follow' → logprob: -17.000028610229492
    10. '_from' → logprob: -17.250028610229492

Token 302: '_sets' (ID: 56707)
  Prédit: '_sets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sets' → logprob: -3.464347173576243e-05
    2. '_cards' → logprob: -10.62503433227539
    3. '_set' → logprob: -12.25003433227539
    4. ' sets' → logprob: -13.12503433227539
    5. 'sets' → logprob: -13.75003433227539
    6. 's' → logprob: -14.37503433227539
    7. '_forms' → logprob: -14.62503433227539
    8. '```' → logprob: -15.12503433227539
    9. '_can' → logprob: -15.25003433227539
    10. '_form' → logprob: -15.62503433227539

Token 303: '(cards' (ID: 161529)
  Prédit: '(cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cards' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -15.125000953674316
    3. ' (' → logprob: -15.375000953674316
    4. '(
' → logprob: -17.875
    5. '(card' → logprob: -18.75
    6. '/cards' → logprob: -20.0
    7. 'cards' → logprob: -20.5
    8. ' cards' → logprob: -20.625
    9. '.cards' → logprob: -21.75
    10. '(deck' → logprob: -21.875

Token 304: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.070975071750581e-05
    2. '   ' → logprob: -11.000030517578125
    3. '(' → logprob: -11.750030517578125
    4. ' ,' → logprob: -12.625030517578125
    5. 'used' → logprob: -13.250030517578125
    6. ',
' → logprob: -14.625030517578125
    7. '```' → logprob: -15.625030517578125
    8. ' used' → logprob: -15.750030517578125
    9. ')' → logprob: -16.250030517578125
    10. '),' → logprob: -17.000030517578125

Token 305: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.0004306692280806601
    2. ' used' → logprob: -7.750430583953857
    3. '   ' → logprob: -18.875431060791016
    4. '.used' → logprob: -20.875431060791016
    5. '_used' → logprob: -21.500431060791016
    6. ' ' → logprob: -21.875431060791016
    7. 'Used' → logprob: -22.125431060791016
    8. '-used' → logprob: -22.125431060791016
    9. 'use' → logprob: -22.500431060791016
    10. 'user' → logprob: -23.875431060791016

Token 306: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.107425062713446e-06
    2. ' ,' → logprob: -11.875006675720215
    3. ',
' → logprob: -16.75000762939453
    4. '(depth' → logprob: -18.00000762939453
    5. 'depth' → logprob: -18.25000762939453
    6. ')' → logprob: -18.37500762939453
    7. '   ' → logprob: -18.62500762939453
    8. ',

' → logprob: -19.25000762939453
    9. '```' → logprob: -19.25000762939453
    10. ' ' → logprob: -19.50000762939453

Token 307: ' depth' (ID: 13636)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.0019286326132714748
    2. ' depth' → logprob: -6.251928806304932
    3. '   ' → logprob: -16.376928329467773
    4. '(depth' → logprob: -16.751928329467773
    5. '       ' → logprob: -21.501928329467773
    6. '
' → logprob: -21.626928329467773
    7. '    ' → logprob: -21.626928329467773
    8. '_depth' → logprob: -21.751928329467773
    9. ' ' → logprob: -22.001928329467773
    10. '                   ' → logprob: -22.001928329467773

Token 308: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5759398937225342
    2. ' +' → logprob: -0.8259398937225342
    3. '＋' → logprob: -15.450940132141113
    4. ' plus' → logprob: -17.075939178466797
    5. ' ' → logprob: -17.075939178466797
    6. ')' → logprob: -17.575939178466797
    7. '+
' → logprob: -17.950939178466797
    8. ')+' → logprob: -18.575939178466797
    9. '+)' → logprob: -18.700939178466797
    10. ' +
' → logprob: -18.700939178466797

Token 309: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.375004768371582
    3. '   ' → logprob: -14.375004768371582
    4. ')' → logprob: -15.875004768371582
    5. '
' → logprob: -17.3750057220459
    6. '```' → logprob: -17.8750057220459
    7. '  ' → logprob: -19.7500057220459
    8. '    ' → logprob: -20.0000057220459
    9. ',' → logprob: -20.2500057220459
    10. ' )' → logprob: -20.5000057220459

Token 310: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.061982251703739166
    2. '):' → logprob: -2.8119821548461914
    3. '):
' → logprob: -11.686982154846191
    4. ')' → logprob: -12.936982154846191
    5. '):

' → logprob: -13.061982154846191
    6. ' ):
' → logprob: -13.686982154846191
    7. '   ' → logprob: -15.686982154846191
    8. ' ):' → logprob: -15.811982154846191
    9. '():
' → logprob: -17.061983108520508
    10. '                       ' → logprob: -17.436983108520508

Token 311: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0001446611131541431
    2. ' return' → logprob: -9.625144958496094
    3. '
' → logprob: -9.750144958496094
    4. '                        
' → logprob: -11.750144958496094
    5. 'return' → logprob: -12.375144958496094
    6. '                           ' → logprob: -12.750144958496094
    7. '                   ' → logprob: -12.875144958496094
    8. '                        ' → logprob: -14.250144958496094
    9. '                      ' → logprob: -15.125144958496094
    10. '                               ' → logprob: -15.375144958496094

Token 312: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4223942160606384
    2. 'return' (adapté à ' return') → logprob: -1.1723942756652832
    3. '                       ' → logprob: -3.797394275665283
    4. '                   ' → logprob: -5.047394275665283
    5. '                           ' → logprob: -5.547394275665283
    6. '   ' → logprob: -6.297394275665283
    7. '                               ' → logprob: -9.047393798828125
    8. '           ' → logprob: -9.797393798828125
    9. '	return' → logprob: -10.047393798828125
    10. '               ' → logprob: -10.297393798828125

Token 313: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -1.676292231422849e-05
    2. ' True' → logprob: -11.000017166137695
    3. '=True' → logprob: -22.625017166137695
    4. '(True' → logprob: -23.250017166137695
    5. '   ' → logprob: -24.625017166137695
    6. 'true' → logprob: -24.750017166137695
    7. 'Tr' → logprob: -25.500017166137695
    8. '
' → logprob: -26.875017166137695
    9. ' ' → logprob: -26.875017166137695
    10. 'False' → logprob: -27.125017166137695

Token 314: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -7.791440293658525e-05
    2. '
' → logprob: -9.625078201293945
    3. '                    
' → logprob: -11.625078201293945
    4. '               ' → logprob: -13.250078201293945
    5. '                    ' → logprob: -14.750078201293945
    6. '                  ' → logprob: -15.750078201293945
    7. '                   
' → logprob: -15.750078201293945
    8. '                       ' → logprob: -15.750078201293945
    9. '           ' → logprob: -16.250078201293945
    10. '                        
' → logprob: -16.875078201293945

Token 315: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -8.65707261255011e-06
    2. '               ' → logprob: -12.000008583068848
    3. '
' → logprob: -13.500008583068848
    4. '                    
' → logprob: -14.750008583068848
    5. '                    ' → logprob: -15.375008583068848
    6. '           ' → logprob: -15.625008583068848
    7. '                  ' → logprob: -15.750008583068848
    8. '                       ' → logprob: -16.250009536743164
    9. '       ' → logprob: -17.250009536743164
    10. '   ' → logprob: -18.250009536743164

Token 316: ' used' (ID: 2061)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.23330999910831451
    2. ' used' → logprob: -1.7333099842071533
    3. 'used' (adapté à ' used') → logprob: -3.4833099842071533
    4. '               ' → logprob: -7.483310222625732
    5. '   ' → logprob: -9.608309745788574
    6. '           ' → logprob: -10.858309745788574
    7. '       ' → logprob: -11.358309745788574
    8. '                       ' → logprob: -12.233309745788574
    9. '                    ' → logprob: -12.608309745788574
    10. '                 ' → logprob: -12.733309745788574

Token 317: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.375
    3. '[k' → logprob: -16.75
    4. '[j' → logprob: -18.0
    5. 'i' → logprob: -19.25
    6. '```' → logprob: -19.875
    7. '[I' → logprob: -20.625
    8. '[u' → logprob: -21.125
    9. '   ' → logprob: -21.625
    10. '[index' → logprob: -21.875

Token 318: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -5.550411151489243e-05
    2. ']=' → logprob: -9.875055313110352
    3. ' =' → logprob: -13.000055313110352
    4. '=' → logprob: -14.000055313110352
    5. '],' → logprob: -14.875055313110352
    6. ' ]' → logprob: -15.500055313110352
    7. '[j' → logprob: -16.25005531311035
    8. '[i' → logprob: -16.37505531311035
    9. '[' → logprob: -17.12505531311035
    10. ']
' → logprob: -17.37505531311035

Token 319: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.003180094063282013
    2. ' =' → logprob: -5.753180027008057
    3. '=
' → logprob: -13.753180503845215
    4. '=False' → logprob: -14.003180503845215
    5. '=j' → logprob: -15.253180503845215
    6. ',' → logprob: -15.878180503845215
    7. '=k' → logprob: -16.7531795501709
    8. ']' → logprob: -17.7531795501709
    9. '=

' → logprob: -18.1281795501709
    10. '=i' → logprob: -18.5031795501709

Token 320: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.38739344477653503
    2. 'False' → logprob: -1.1373934745788574
    3. ' False' → logprob: -8.2623929977417
    4. ' used' → logprob: -8.2623929977417
    5. '   ' → logprob: -12.5123929977417
    6. 'use' → logprob: -13.7623929977417
    7. 'false' → logprob: -15.1373929977417
    8. 'True' → logprob: -15.3873929977417
    9. 'Used' → logprob: -15.7623929977417
    10. '       ' → logprob: -16.012393951416016

Token 321: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.6652312874794006
    2. 'j' → logprob: -1.4152312278747559
    3. 'False' → logprob: -1.4152312278747559
    4. ' False' → logprob: -9.415231704711914
    5. '[' → logprob: -11.415231704711914
    6. ' j' → logprob: -12.790231704711914
    7. '	j' → logprob: -12.915231704711914
    8. '   ' → logprob: -13.040231704711914
    9. '[
' → logprob: -13.290231704711914
    10. ']' → logprob: -13.915231704711914

Token 322: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01108437217772007
    2. ' =' → logprob: -4.51108455657959
    3. ']' → logprob: -10.26108455657959
    4. ']=' → logprob: -14.13608455657959
    5. '=k' → logprob: -14.88608455657959
    6. 'False' → logprob: -15.76108455657959
    7. '=False' → logprob: -15.76108455657959
    8. '=
' → logprob: -16.636083602905273
    9. '=

' → logprob: -17.011083602905273
    10. '<|end|>' → logprob: -17.761083602905273

Token 323: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.009762817993760109
    2. ' =' → logprob: -4.634762763977051
    3. '=False' → logprob: -12.50976276397705
    4. '=k' → logprob: -13.25976276397705
    5. 'False' → logprob: -13.75976276397705
    6. '=
' → logprob: -15.75976276397705
    7. 'k' → logprob: -16.634763717651367
    8. '=

' → logprob: -17.509763717651367
    9. ']' → logprob: -17.759763717651367
    10. '<|end|>' → logprob: -17.884763717651367

Token 324: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.031106578186154366
    2. 'False' → logprob: -3.531106472015381
    3. ' used' → logprob: -6.656106472015381
    4. 'k' → logprob: -10.281106948852539
    5. ' False' → logprob: -10.281106948852539
    6. 'Used' → logprob: -16.53110694885254
    7. '[k' → logprob: -16.53110694885254
    8. 'unused' → logprob: -16.90610694885254
    9. 'false' → logprob: -16.90610694885254
    10. '
' → logprob: -17.15610694885254

Token 325: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.002497183158993721
    2. 'k' → logprob: -6.00249719619751
    3. 'False' → logprob: -10.877496719360352
    4. '[' → logprob: -13.127496719360352
    5. '[
' → logprob: -15.252496719360352
    6. '{k' → logprob: -16.12749671936035
    7. '=k' → logprob: -16.87749671936035
    8. '=' → logprob: -16.87749671936035
    9. ' k' → logprob: -17.12749671936035
    10. '[i' → logprob: -17.25249671936035

Token 326: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02332455664873123
    2. ' =' → logprob: -3.773324489593506
    3. ']' → logprob: -9.773324966430664
    4. '=False' → logprob: -11.148324966430664
    5. 'False' → logprob: -12.023324966430664
    6. ']=' → logprob: -13.398324966430664
    7. '[' → logprob: -15.898324966430664
    8. ' False' → logprob: -17.523324966430664
    9. ')' → logprob: -17.773324966430664
    10. '                   ' → logprob: -18.023324966430664

Token 327: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.007746221497654915
    2. ' =' → logprob: -5.00774621963501
    3. '=False' → logprob: -7.13274621963501
    4. 'False' → logprob: -8.382746696472168
    5. ' False' → logprob: -12.757746696472168
    6. '(False' → logprob: -16.50774574279785
    7. '<|end|>' → logprob: -17.13274574279785
    8. '=True' → logprob: -17.50774574279785
    9. '[' → logprob: -17.75774574279785
    10. 'false' → logprob: -19.38274574279785

Token 328: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0002613358374219388
    2. ' False' → logprob: -8.250261306762695
    3. '(False' → logprob: -19.125261306762695
    4. '=False' → logprob: -20.625261306762695
    5. 'F' → logprob: -21.375261306762695
    6. 'false' → logprob: -21.625261306762695
    7. '.False' → logprob: -22.375261306762695
    8. '_false' → logprob: -22.625261306762695
    9. 'True' → logprob: -22.875261306762695
    10. 'Fa' → logprob: -23.375261306762695

Token 329: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9022281169891357
    2. '<|end|>' → logprob: -1.0272281169891357
    3. '
' → logprob: -2.6522281169891357
    4. '   ' → logprob: -3.1522281169891357
    5. '\n' → logprob: -3.1522281169891357
    6. '           ' → logprob: -3.6522281169891357
    7. '       ' → logprob: -4.527228355407715
    8. '                   ' → logprob: -4.777228355407715
    9. 'return' → logprob: -4.902228355407715
    10. ' return' → logprob: -5.402228355407715

Token 330: '   ' (ID: 271)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.21587014198303223
    2. '                   ' → logprob: -2.0908701419830322
    3. ' return' → logprob: -4.215869903564453
    4. '                ' → logprob: -4.465869903564453
    5. '           ' → logprob: -4.715869903564453
    6. '   ' → logprob: -4.840869903564453
    7. 'return' → logprob: -5.215869903564453
    8. '                       ' → logprob: -5.465869903564453
    9. '<|end|>' → logprob: -5.465869903564453
    10. '                           ' → logprob: -6.215869903564453

Token 331: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12752997875213623
    2. 'return' (adapté à ' return') → logprob: -2.127530097961426
    3. ' return' → logprob: -7.627530097961426
    4. '       ' → logprob: -9.877530097961426
    5. '    
' → logprob: -10.627530097961426
    6. '
' → logprob: -10.752530097961426
    7. '           ' → logprob: -12.627530097961426
    8. '               ' → logprob: -12.627530097961426
    9. ' ' → logprob: -12.877530097961426
    10. '	return' → logprob: -13.002530097961426

Token 332: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0002613358374219388
    2. ' False' → logprob: -8.250261306762695
    3. '(False' → logprob: -20.250261306762695
    4. '=False' → logprob: -23.250261306762695
    5. 'false' → logprob: -23.500261306762695
    6. '_false' → logprob: -24.250261306762695
    7. '   ' → logprob: -24.750261306762695
    8. '.False' → logprob: -25.375261306762695
    9. 'True' → logprob: -27.000261306762695
    10. 'FALSE' → logprob: -27.000261306762695

Token 333: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 334: 'T' (ID: 51)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5677030682563782
    2. '<|end|>' → logprob: -0.9427030682563782
    3. 'used' → logprob: -4.3177032470703125
    4. '<|end|>' → logprob: -4.4427032470703125
    5. '```' → logprob: -5.0677032470703125
    6. '
' → logprob: -5.5677032470703125
    7. ' used' → logprob: -5.8177032470703125
    8. '[' → logprob: -6.0677032470703125
    9. 'def' → logprob: -6.1927032470703125
    10. 'n' → logprob: -8.067703247070312

Token 335: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22904689610004425
    2. '=' → logprob: -1.6040469408035278
    3. ' ' → logprob: -6.229046821594238
    4. 'C' → logprob: -7.104046821594238
    5. '.' → logprob: -8.229046821594238
    6. ',' → logprob: -8.979046821594238
    7. '  ' → logprob: -9.104046821594238
    8. '[' → logprob: -9.854046821594238
    9. '=int' → logprob: -9.979046821594238
    10. '_' → logprob: -10.104046821594238

Token 336: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.018181433901190758
    2. ' int' → logprob: -4.018181324005127
    3. '1' → logprob: -11.018181800842285
    4. '[int' → logprob: -12.018181800842285
    5. '10' → logprob: -12.143181800842285
    6. ' ' → logprob: -13.268181800842285
    7. '(int' → logprob: -14.393181800842285
    8. '=int' → logprob: -14.893181800842285
    9. '3' → logprob: -15.393181800842285
    10. '  ' → logprob: -15.518181800842285

Token 337: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0040613021701574326
    2. ' (' → logprob: -5.629061222076416
    3. '('' → logprob: -8.379061698913574
    4. '(input' → logprob: -8.504061698913574
    5. ' ' → logprob: -11.879061698913574
    6. '(
' → logprob: -12.629061698913574
    7. '(T' → logprob: -12.629061698913574
    8. '("' → logprob: -12.629061698913574
    9. '()' → logprob: -12.879061698913574
    10. 'input' → logprob: -13.004061698913574

Token 338: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.07893043756484985
    2. '()' → logprob: -2.578930377960205
    3. ')' → logprob: -10.578930854797363
    4. '())
' → logprob: -12.078930854797363
    5. '(' → logprob: -12.578930854797363
    6. '().' → logprob: -12.828930854797363
    7. '()
' → logprob: -13.203930854797363
    8. ' ())' → logprob: -14.078930854797363
    9. '()>' → logprob: -14.953930854797363
    10. '();)' → logprob: -16.078929901123047

Token 339: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.014539191499352455
    2. '
' → logprob: -4.2645392417907715
    3. ' for' → logprob: -7.8895392417907715
    4. ' 
' → logprob: -15.139538764953613
    5. '

' → logprob: -15.264538764953613
    6. 'while' → logprob: -15.514538764953613
    7. '<|end|>' → logprob: -16.13953971862793
    8. '
' → logprob: -16.76453971862793
    9. '```' → logprob: -17.13953971862793
    10. '\n' → logprob: -17.13953971862793

Token 340: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.00015908108616713434
    2. '_' → logprob: -8.75015926361084
    3. ' ' → logprob: -14.62515926361084
    4. ' ' → logprob: -16.125158309936523
    5. ' ‌' → logprob: -17.250158309936523
    6. ' i' → logprob: -17.625158309936523
    7. ' _
' → logprob: -18.125158309936523
    8. ' ​' → logprob: -19.125158309936523
    9. ' t' → logprob: -19.500158309936523
    10. ' ▁' → logprob: -20.125158309936523

Token 341: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026879558339715004
    2. 'in' → logprob: -3.6518795490264893
    3. ' _' → logprob: -8.15187931060791
    4. ' ' → logprob: -8.77687931060791
    5. '_' → logprob: -9.15187931060791
    6. 'range' → logprob: -11.27687931060791
    7. ' i' → logprob: -12.27687931060791
    8. '<|end|>' → logprob: -12.52687931060791
    9. 'i' → logprob: -13.40187931060791
    10. 'n' → logprob: -13.52687931060791

Token 342: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019286326132714748
    2. ' range' → logprob: -6.251928806304932
    3. 'T' → logprob: -18.376928329467773
    4. 'r' → logprob: -21.501928329467773
    5. 'rang' → logprob: -21.751928329467773
    6. ' ' → logprob: -22.626928329467773
    7. '(range' → logprob: -22.626928329467773
    8. '	range' → logprob: -22.751928329467773
    9. ' T' → logprob: -23.251928329467773
    10. '  ' → logprob: -23.501928329467773

Token 343: '(T' (ID: 7014)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.39529022574424744
    2. ' T' → logprob: -1.2702902555465698
    3. ' (' → logprob: -3.3952901363372803
    4. '(T' → logprob: -4.520290374755859
    5. ' range' → logprob: -7.645290374755859
    6. 'T' → logprob: -7.645290374755859
    7. ' ' → logprob: -8.02029037475586
    8. '(range' → logprob: -10.52029037475586
    9. 'range' → logprob: -11.27029037475586
    10. ' ()' → logprob: -12.64529037475586

Token 344: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0014950995100662112
    2. ':' → logprob: -7.376494884490967
    3. '):
' → logprob: -7.376494884490967
    4. ' ):' → logprob: -8.376495361328125
    5. ')' → logprob: -12.251495361328125
    6. '():' → logprob: -12.626495361328125
    7. ',' → logprob: -13.501495361328125
    8. '}:' → logprob: -14.251495361328125
    9. ']:' → logprob: -14.876495361328125
    10. ' :' → logprob: -14.876495361328125

Token 345: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34481921792030334
    2. ' cards' → logprob: -1.344819188117981
    3. '    
' → logprob: -4.469819068908691
    4. ' 
' → logprob: -5.094819068908691
    5. 'cards' → logprob: -5.594819068908691
    6. '(cards' → logprob: -5.719819068908691
    7. ' input' → logprob: -6.219819068908691
    8. '    ' → logprob: -6.594819068908691
    9. '```' → logprob: -7.594819068908691
    10. ' n' → logprob: -7.594819068908691

Token 346: ' nums' (ID: 18117)
  Prédit: ' cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cards' → logprob: -0.18222211301326752
    2. 'cards' → logprob: -1.8072221279144287
    3. '_cards' → logprob: -7.68222188949585
    4. ' line' → logprob: -7.80722188949585
    5. 'c' → logprob: -8.557222366333008
    6. ' raw' → logprob: -8.557222366333008
    7. 'data' → logprob: -8.682222366333008
    8. ' data' → logprob: -8.932222366333008
    9. 'raw' → logprob: -9.057222366333008
    10. 'nums' (adapté à ' nums') → logprob: -9.057222366333008

Token 347: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1952820122241974
    2. '=' → logprob: -1.820281982421875
    3. ',' → logprob: -4.195281982421875
    4. ' ,' → logprob: -8.320281982421875
    5. ',color' → logprob: -9.945281982421875
    6. '_colors' → logprob: -11.445281982421875
    7. 'colors' → logprob: -11.445281982421875
    8. 's' → logprob: -11.695281982421875
    9. 'color' → logprob: -12.320281982421875
    10. '=color' → logprob: -12.445281982421875

Token 348: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.01816680282354355
    2. ' list' → logprob: -4.018167018890381
    3. 'input' → logprob: -11.018166542053223
    4. ' input' → logprob: -14.893166542053223
    5. 'map' → logprob: -16.39316749572754
    6. '[list' → logprob: -16.64316749572754
    7. '[' → logprob: -17.01816749572754
    8. '=list' → logprob: -18.14316749572754
    9. '[input' → logprob: -18.26816749572754
    10. ' [' → logprob: -19.26816749572754

Token 349: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -4.127333340875339e-06
    2. 'map' → logprob: -12.875003814697266
    3. '(' → logprob: -13.500003814697266
    4. ' map' → logprob: -17.375003814697266
    5. '(range' → logprob: -18.625003814697266
    6. '(int' → logprob: -19.000003814697266
    7. '_map' → logprob: -19.250003814697266
    8. '	map' → logprob: -19.250003814697266
    9. '()' → logprob: -19.500003814697266
    10. ',map' → logprob: -19.750003814697266

Token 350: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0009780287509784102
    2. '(' → logprob: -7.375977993011475
    3. 'int' → logprob: -8.125978469848633
    4. '(str' → logprob: -10.500978469848633
    5. '(input' → logprob: -10.875978469848633
    6. '(
' → logprob: -12.500978469848633
    7. '<int' → logprob: -13.500978469848633
    8. 'str' → logprob: -13.875978469848633
    9. ',int' → logprob: -14.125978469848633
    10. '=int' → logprob: -14.125978469848633

Token 351: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.19756029546260834
    2. ',' → logprob: -1.9475603103637695
    3. '(input' → logprob: -3.3225603103637695
    4. 'input' → logprob: -7.6975603103637695
    5. '(' → logprob: -9.44756031036377
    6. ' ,' → logprob: -10.44756031036377
    7. ' input' → logprob: -11.44756031036377
    8. ' (' → logprob: -12.07256031036377
    9. '=input' → logprob: -12.94756031036377
    10. '   ' → logprob: -13.07256031036377

Token 352: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0031777136027812958
    2. ' input' → logprob: -5.753177642822266
    3. '(input' → logprob: -17.753177642822266
    4. ',input' → logprob: -18.128177642822266
    5. '=input' → logprob: -19.128177642822266
    6. ')' → logprob: -19.253177642822266
    7. '_input' → logprob: -19.503177642822266
    8. '   ' → logprob: -19.753177642822266
    9. '<input' → logprob: -20.878177642822266
    10. '	input' → logprob: -21.253177642822266

Token 353: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.935296834039036e-06
    2. '()' → logprob: -12.87500286102295
    3. '(' → logprob: -15.75000286102295
    4. ' ().' → logprob: -16.625003814697266
    5. 'split' → logprob: -18.875003814697266
    6. ' .' → logprob: -19.000003814697266
    7. '.split' → logprob: -19.000003814697266
    8. '.' → logprob: -19.375003814697266
    9. '()))' → logprob: -19.750003814697266
    10. 's' → logprob: -20.375003814697266

Token 354: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0007119550718925893
    2. 'strip' → logprob: -7.250711917877197
    3. ' split' → logprob: -13.375712394714355
    4. 'rstrip' → logprob: -15.500712394714355
    5. '().' → logprob: -15.750712394714355
    6. '(split' → logprob: -16.25071144104004
    7. 'spl' → logprob: -16.50071144104004
    8. 's' → logprob: -17.50071144104004
    9. ' strip' → logprob: -18.75071144104004
    10. '.split' → logprob: -19.87571144104004

Token 355: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0181108471006155
    2. '))' → logprob: -4.518110752105713
    3. '()' → logprob: -5.268110752105713
    4. '()))
' → logprob: -6.393110752105713
    5. '(' → logprob: -8.518111228942871
    6. '())' → logprob: -12.893111228942871
    7. '()));' → logprob: -13.018111228942871
    8. '()))

' → logprob: -13.143111228942871
    9. '))
' → logprob: -13.268111228942871
    10. '()))
' → logprob: -14.268111228942871

Token 356: '   ' (ID: 271)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.06288928538560867
    2. ' colors' → logprob: -2.812889337539673
    3. 'cards' → logprob: -7.312889099121094
    4. ' cards' → logprob: -8.812889099121094
    5. '   ' → logprob: -9.937889099121094
    6. '(colors' → logprob: -11.187889099121094
    7. '_colors' → logprob: -11.437889099121094
    8. 'color' → logprob: -11.937889099121094
    9. '<|end|>' → logprob: -11.937889099121094
    10. 'nums' → logprob: -12.812889099121094

Token 357: ' colors' (ID: 10803)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colors' (adapté à ' colors') → logprob: -0.0005477914237417281
    2. 'cols' → logprob: -7.875547885894775
    3. ' colors' → logprob: -9.375547409057617
    4. 'cards' → logprob: -9.500547409057617
    5. 'color' → logprob: -12.250547409057617
    6. 's' → logprob: -13.750547409057617
    7. 'col' → logprob: -13.750547409057617
    8. 'chars' → logprob: -14.625547409057617
    9. '    
' → logprob: -15.000547409057617
    10. '   ' → logprob: -16.625547409057617

Token 358: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014133334159851
    2. ' =' → logprob: -1.7014133930206299
    3. '＝' → logprob: -17.451414108276367
    4. ' =
' → logprob: -17.576414108276367
    5. '=
' → logprob: -17.951414108276367
    6. ')' → logprob: -18.201414108276367
    7. ',' → logprob: -18.326414108276367
    8. '_=' → logprob: -18.451414108276367
    9. ' ' → logprob: -18.701414108276367
    10. '=input' → logprob: -18.701414108276367

Token 359: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.01933862827718258
    2. ' input' → logprob: -4.019338607788086
    3. 'list' → logprob: -6.769338607788086
    4. ' list' → logprob: -10.144338607788086
    5. '[input' → logprob: -16.269338607788086
    6. '=input' → logprob: -16.519338607788086
    7. '(input' → logprob: -16.894338607788086
    8. ' ' → logprob: -17.144338607788086
    9. '   ' → logprob: -17.644338607788086
    10. '	input' → logprob: -18.269338607788086

Token 360: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.56102097814437e-05
    2. '()' → logprob: -10.000045776367188
    3. ' ().' → logprob: -16.250045776367188
    4. '(' → logprob: -16.875045776367188
    5. '.split' → logprob: -18.000045776367188
    6. '()
' → logprob: -18.250045776367188
    7. '.' → logprob: -21.000045776367188
    8. '())' → logprob: -21.500045776367188
    9. '()).' → logprob: -21.625045776367188
    10. '()[' → logprob: -21.625045776367188

Token 361: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.25192928314208984
    2. 'strip' → logprob: -1.5019292831420898
    3. 'rstrip' → logprob: -16.001930236816406
    4. ' split' → logprob: -16.501930236816406
    5. ' strip' → logprob: -16.751930236816406
    6. '_split' → logprob: -20.626930236816406
    7. '(split' → logprob: -21.376930236816406
    8. 'spl' → logprob: -22.126930236816406
    9. '_strip' → logprob: -22.751930236816406
    10. '.strip' → logprob: -23.001930236816406

Token 362: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.002495991066098213
    2. '()
' → logprob: -6.002495765686035
    3. '(' → logprob: -11.502495765686035
    4. ' ()' → logprob: -12.002495765686035
    5. '())' → logprob: -13.377495765686035
    6. '()[' → logprob: -14.752495765686035
    7. '()

' → logprob: -14.752495765686035
    8. '   ' → logprob: -14.752495765686035
    9. ')' → logprob: -14.877495765686035
    10. '()]' → logprob: -15.002495765686035

Token 363: '   ' (ID: 271)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.04387567192316055
    2. ' cards' → logprob: -3.7938756942749023
    3. '   ' → logprob: -3.9188756942749023
    4. '```' → logprob: -7.918875694274902
    5. '(cards' → logprob: -9.418875694274902
    6. '.cards' → logprob: -10.043875694274902
    7. '_cards' → logprob: -10.043875694274902
    8. '/cards' → logprob: -11.793875694274902
    9. '``' → logprob: -12.543875694274902
    10. '<|end|>' → logprob: -12.668875694274902

Token 364: ' cards' (ID: 10541)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' (adapté à ' cards') → logprob: -0.0016088859410956502
    2. ' cards' → logprob: -6.501608848571777
    3. '   ' → logprob: -9.376608848571777
    4. '_cards' → logprob: -12.001608848571777
    5. '```' → logprob: -12.126608848571777
    6. '(cards' → logprob: -12.376608848571777
    7. '.cards' → logprob: -12.626608848571777
    8. '/cards' → logprob: -14.126608848571777
    9. '    
' → logprob: -14.751608848571777
    10. '
' → logprob: -14.876608848571777

Token 365: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020699352025986
    2. '=' → logprob: -2.3502070903778076
    3. ' =[' → logprob: -16.10020637512207
    4. '=[]' → logprob: -16.22520637512207
    5. ' =
' → logprob: -16.72520637512207
    6. '=[' → logprob: -16.97520637512207
    7. '<|end|>' → logprob: -17.35020637512207
    8. '[' → logprob: -18.47520637512207
    9. '＝' → logprob: -18.60020637512207
    10. '=
' → logprob: -18.60020637512207

Token 366: ' list' (ID: 1562)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.01564846560359001
    2. ' [(' → logprob: -4.515648365020752
    3. 'list' → logprob: -5.515648365020752
    4. ' list' → logprob: -7.515648365020752
    5. '[list' → logprob: -10.76564884185791
    6. '[' → logprob: -14.39064884185791
    7. '[]' → logprob: -15.64064884185791
    8. '[((' → logprob: -16.015647888183594
    9. '([(' → logprob: -16.015647888183594
    10. '[
' → logprob: -16.640647888183594

Token 367: '(zip' (ID: 87520)
  Prédit: '(zip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(zip' → logprob: -0.00012833021173719317
    2. 'zip' → logprob: -9.875128746032715
    3. '=' → logprob: -10.375128746032715
    4. '((' → logprob: -10.875128746032715
    5. ' =' → logprob: -11.250128746032715
    6. '   ' → logprob: -11.500128746032715
    7. ' zip' → logprob: -13.875128746032715
    8. '(
' → logprob: -14.125128746032715
    9. '(' → logprob: -14.125128746032715
    10. '.zip' → logprob: -14.750128746032715

Token 368: '(nums' (ID: 40372)
  Prédit: '(nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nums' → logprob: -3.8889261304575484e-06
    2. 'nums' → logprob: -12.625003814697266
    3. '(' → logprob: -15.875003814697266
    4. ' (' → logprob: -15.875003814697266
    5. '(numbers' → logprob: -16.250003814697266
    6. ' nums' → logprob: -17.250003814697266
    7. ')' → logprob: -17.250003814697266
    8. '   ' → logprob: -19.625003814697266
    9. '_nums' → logprob: -20.250003814697266
    10. '(num' → logprob: -20.500003814697266

Token 369: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011777279432862997
    2. ' ,' → logprob: -6.751177787780762
    3. '(colors' → logprob: -12.501177787780762
    4. 'colors' → logprob: -12.876177787780762
    5. ' colors' → logprob: -15.001177787780762
    6. ',
' → logprob: -15.001177787780762
    7. ',color' → logprob: -15.251177787780762
    8. '   ' → logprob: -16.251176834106445
    9. '),' → logprob: -16.251176834106445
    10. '(' → logprob: -16.626176834106445

Token 370: ' colors' (ID: 10803)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.07889143377542496
    2. ' colors' → logprob: -2.5788915157318115
    3. '(colors' → logprob: -14.45389175415039
    4. '   ' → logprob: -14.70389175415039
    5. '.colors' → logprob: -15.70389175415039
    6. ' ' → logprob: -15.82889175415039
    7. 'color' → logprob: -16.20389175415039
    8. '    ' → logprob: -16.45389175415039
    9. ' colores' → logprob: -16.95389175415039
    10. '_colors' → logprob: -17.07889175415039

Token 371: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -5.371605948312208e-05
    2. ')' → logprob: -9.875053405761719
    3. '))
' → logprob: -13.875053405761719
    4. ')))' → logprob: -14.625053405761719
    5. ' ))' → logprob: -14.875053405761719
    6. '()))' → logprob: -15.125053405761719
    7. '   ' → logprob: -16.25005340576172
    8. '[' → logprob: -17.25005340576172
    9. ' ' → logprob: -18.25005340576172
    10. '));' → logprob: -18.37505340576172

Token 372: '   ' (ID: 271)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.505923330783844
    2. '   ' → logprob: -1.2559232711791992
    3. ' used' → logprob: -2.505923271179199
    4. 'if' → logprob: -3.630923271179199
    5. ' if' → logprob: -5.505923271179199
    6. 'print' → logprob: -10.3809232711792
    7. '```' → logprob: -10.6309232711792
    8. '
' → logprob: -11.6309232711792
    9. '    
' → logprob: -11.8809232711792
    10. '_used' → logprob: -12.3809232711792

Token 373: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' (adapté à ' used') → logprob: -0.020288201048970222
    2. 'if' → logprob: -4.520287990570068
    3. ' used' → logprob: -5.395287990570068
    4. 'print' → logprob: -5.395287990570068
    5. ' if' → logprob: -9.395288467407227
    6. '   ' → logprob: -10.520288467407227
    7. ' print' → logprob: -11.770288467407227
    8. 'result' → logprob: -13.895288467407227
    9. '    
' → logprob: -13.895288467407227
    10. 'Used' → logprob: -15.020288467407227

Token 374: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.575939953327179
    2. '=' → logprob: -0.825939953327179
    3. '=[' → logprob: -15.325940132141113
    4. '＝' → logprob: -16.575939178466797
    5. ' =[' → logprob: -16.575939178466797
    6. '   ' → logprob: -17.075939178466797
    7. '[' → logprob: -17.325939178466797
    8. '=[]' → logprob: -17.575939178466797
    9. ')' → logprob: -17.575939178466797
    10. '[:]' → logprob: -18.075939178466797

Token 375: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0011703446507453918
    2. ' [' → logprob: -6.7511701583862305
    3. '[len' → logprob: -16.626171112060547
    4. '   ' → logprob: -18.376171112060547
    5. '[n' → logprob: -18.501171112060547
    6. ' ' → logprob: -20.251171112060547
    7. '[num' → logprob: -21.251171112060547
    8. '[int' → logprob: -21.501171112060547
    9. '[length' → logprob: -21.501171112060547
    10. '[N' → logprob: -21.876171112060547

Token 376: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -3.128163257315464e-07
    2. ' False' → logprob: -15.25
    3. '(False' → logprob: -20.75
    4. '0' → logprob: -21.875
    5. '   ' → logprob: -23.25
    6. '=False' → logprob: -24.375
    7. '.False' → logprob: -24.625
    8. 'True' → logprob: -24.875
    9. ']' → logprob: -25.25
    10. 'false' → logprob: -25.875

Token 377: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.010114792734384537
    2. ']*' → logprob: -5.260114669799805
    3. ' for' → logprob: -5.385114669799805
    4. ' ]' → logprob: -8.760114669799805
    5. 'for' → logprob: -9.385114669799805
    6. ')' → logprob: -10.635114669799805
    7. ',' → logprob: -11.510114669799805
    8. ']+' → logprob: -12.885114669799805
    9. ']*(' → logprob: -13.510114669799805
    10. '<|end|>' → logprob: -13.510114669799805

Token 378: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -7.896309739408025e-07
    2. 'len' → logprob: -14.125000953674316
    3. ' ' → logprob: -17.0
    4. '(' → logprob: -18.5
    5. '```' → logprob: -19.0
    6. '   ' → logprob: -19.125
    7. '(len' → logprob: -20.375
    8. '９' → logprob: -20.875
    9. 'nine' → logprob: -21.0
    10. ' len' → logprob: -21.125

Token 379: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.020219972357153893
    2. '   ' → logprob: -4.145219802856445
    3. ' if' → logprob: -5.770219802856445
    4. 'if' → logprob: -7.770219802856445
    5. ' 
' → logprob: -8.645219802856445
    6. '<|end|>' → logprob: -8.770219802856445
    7. '    
' → logprob: -9.020219802856445
    8. '  
' → logprob: -9.520219802856445
    9. 'print' → logprob: -9.770219802856445
    10. ' print' → logprob: -10.645219802856445

Token 380: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.23487238585948944
    2. 'if' → logprob: -2.234872341156006
    3. '   ' → logprob: -2.484872341156006
    4. ' if' → logprob: -4.359872341156006
    5. ' print' → logprob: -5.109872341156006
    6. '```' → logprob: -9.359872817993164
    7. '<|end|>' → logprob: -9.859872817993164
    8. '    
' → logprob: -11.609872817993164
    9. '
' → logprob: -11.609872817993164
    10. 'for' → logprob: -12.859872817993164

Token 381: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.008733703754842281
    2. 'if' → logprob: -4.758733749389648
    3. ' print' → logprob: -9.383733749389648
    4. ' if' → logprob: -10.383733749389648
    5. '   ' → logprob: -13.133733749389648
    6. 'result' → logprob: -13.383733749389648
    7. '    
' → logprob: -15.383733749389648
    8. '
' → logprob: -16.00873374938965
    9. 'answer' → logprob: -16.38373374938965
    10. '```' → logprob: -16.50873374938965

Token 382: '(' (ID: 7)
  Prédit: '(can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(can' → logprob: -0.4836675524711609
    2. '("' → logprob: -0.9836675524711609
    3. '(' → logprob: -4.858667373657227
    4. '('' → logprob: -6.608667373657227
    5. 'can' → logprob: -8.233667373657227
    6. '(int' → logprob: -9.358667373657227
    7. '"' → logprob: -9.608667373657227
    8. '(bool' → logprob: -11.983667373657227
    9. '(True' → logprob: -13.108667373657227
    10. ' can' → logprob: -13.483667373657227

Token 383: '1' (ID: 16)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.006758709903806448
    2. '"' → logprob: -5.006758689880371
    3. '1' → logprob: -10.756758689880371
    4. '(can' → logprob: -11.381758689880371
    5. ''' → logprob: -11.631758689880371
    6. 'int' → logprob: -13.506758689880371
    7. ' can' → logprob: -15.006758689880371
    8. 'True' → logprob: -17.381759643554688
    9. '   ' → logprob: -17.506759643554688
    10. '.can' → logprob: -17.881759643554688

Token 384: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.011847100220620632
    2. 'if' → logprob: -4.511847019195557
    3. ')' → logprob: -7.136847019195557
    4. '()' → logprob: -12.761847496032715
    5. '   ' → logprob: -15.761847496032715
    6. '	if' → logprob: -15.886847496032715
    7. '*' → logprob: -16.1368465423584
    8. ' ' → logprob: -16.3868465423584
    9. ' )' → logprob: -16.3868465423584
    10. '```' → logprob: -16.3868465423584

Token 385: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.0004309076175559312
    2. ' can' → logprob: -7.750431060791016
    3. '(can' → logprob: -15.500431060791016
    4. '	can' → logprob: -18.875431060791016
    5. '_can' → logprob: -19.500431060791016
    6. '.can' → logprob: -19.750431060791016
    7. '   ' → logprob: -21.625431060791016
    8. 'Can' → logprob: -23.250431060791016
    9. ')' → logprob: -23.250431060791016
    10. '-can' → logprob: -23.750431060791016

Token 386: '_form' (ID: 18664)
  Prédit: '_form'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_form' → logprob: -7.941850526549388e-06
    2. '_forms' → logprob: -12.625007629394531
    3. '_' → logprob: -13.125007629394531
    4. '_can' → logprob: -13.500007629394531
    5. 'form' → logprob: -14.125007629394531
    6. '_for' → logprob: -15.375007629394531
    7. '_used' → logprob: -17.12500762939453
    8. '_FORM' → logprob: -17.25000762939453
    9. '_use' → logprob: -17.37500762939453
    10. '_Form' → logprob: -17.87500762939453

Token 387: '_sets' (ID: 56707)
  Prédit: '_form'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_form' → logprob: -0.20219935476779938
    2. '_sets' → logprob: -1.7021993398666382
    3. 'form' → logprob: -7.702199459075928
    4. '_forms' → logprob: -8.07719898223877
    5. '_set' → logprob: -11.57719898223877
    6. '_cards' → logprob: -12.07719898223877
    7. '_' → logprob: -13.32719898223877
    8. '```' → logprob: -13.45219898223877
    9. '-form' → logprob: -13.95219898223877
    10. 'atform' → logprob: -14.95219898223877

Token 388: '(cards' (ID: 161529)
  Prédit: '(cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cards' → logprob: -4.320199877838604e-07
    2. ' (' → logprob: -15.0
    3. '(c' → logprob: -16.375
    4. '(' → logprob: -17.375
    5. '(card' → logprob: -18.125
    6. '(
' → logprob: -18.125
    7. '/cards' → logprob: -19.0
    8. ' cards' → logprob: -19.125
    9. '(chars' → logprob: -19.875
    10. ')' → logprob: -20.25

Token 389: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9623810658231378e-05
    2. ' ,' → logprob: -10.875020027160645
    3. '(' → logprob: -15.000020027160645
    4. ',
' → logprob: -16.250019073486328
    5. 'used' → logprob: -16.375019073486328
    6. ')' → logprob: -17.750019073486328
    7. '   ' → logprob: -17.750019073486328
    8. '```' → logprob: -17.875019073486328
    9. '(),' → logprob: -18.875019073486328
    10. ' used' → logprob: -18.875019073486328

Token 390: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.004078639671206474
    2. ' used' → logprob: -5.5040788650512695
    3. '   ' → logprob: -15.25407886505127
    4. ' ' → logprob: -18.754077911376953
    5. '.used' → logprob: -18.754077911376953
    6. '    ' → logprob: -18.879077911376953
    7. '-used' → logprob: -19.254077911376953
    8. 'Used' → logprob: -19.254077911376953
    9. '  ' → logprob: -19.504077911376953
    10. '_used' → logprob: -19.879077911376953

Token 391: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014246409991756082
    2. ',' → logprob: -6.626424789428711
    3. ' else' → logprob: -9.876424789428711
    4. ',)' → logprob: -11.001424789428711
    5. 'else' → logprob: -11.126424789428711
    6. ' )' → logprob: -11.251424789428711
    7. '```' → logprob: -14.751424789428711
    8. '))' → logprob: -14.876424789428711
    9. ' ' → logprob: -15.001424789428711
    10. '[' → logprob: -15.126424789428711

Token 392: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.2014232873916626
    2. 'else' → logprob: -1.7014232873916626
    3. ')' → logprob: -11.576423645019531
    4. ' )' → logprob: -15.576423645019531
    5. ' ' → logprob: -15.951423645019531
    6. '```' → logprob: -16.07642364501953
    7. '	else' → logprob: -16.70142364501953
    8. '==' → logprob: -17.45142364501953
    9. '_else' → logprob: -17.70142364501953
    10. '()' → logprob: -18.20142364501953

Token 393: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019286326132714748
    2. ' ' → logprob: -6.251928806304932
    3. ')' → logprob: -18.626928329467773
    4. ''' → logprob: -20.251928329467773
    5. '   ' → logprob: -20.251928329467773
    6. '(' → logprob: -20.501928329467773
    7. '"' → logprob: -21.001928329467773
    8. ' ' → logprob: -22.376928329467773
    9. '  ' → logprob: -22.751928329467773
    10. '`' → logprob: -22.751928329467773

Token 394: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. ')' → logprob: -22.0
    4. '   ' → logprob: -22.75
    5. '(' → logprob: -22.875
    6. '۰' → logprob: -23.375
    7. '０' → logprob: -23.75
    8. '
' → logprob: -23.875
    9. '```' → logprob: -24.125
    10. '`' → logprob: -24.5

Token 395: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. ')
' → logprob: -13.625001907348633
    3. '))' → logprob: -15.625001907348633
    4. ' )' → logprob: -16.000001907348633
    5. ')`' → logprob: -16.500001907348633
    6. '`)' → logprob: -16.875001907348633
    7. '')' → logprob: -17.875001907348633
    8. ')}' → logprob: -18.750001907348633
    9. '")' → logprob: -19.250001907348633
    10. '())' → logprob: -19.500001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 393
Tokens correctement prédits (1ère position, stricte): 180
Tokens correctement prédits (1ère position, avec adaptation): 187
Tokens correctement prédits (top 10): 336
Précision stricte (1ère position): 45.80%
Précision adaptée (1ère position): 47.58%
Précision (top 10): 85.50%
================================================================================
