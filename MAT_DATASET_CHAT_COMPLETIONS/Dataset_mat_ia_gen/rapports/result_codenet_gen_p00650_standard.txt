================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:58:29
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)

def dfs(u):
    visited[u] = True
    for v in graph[u]:
        if not visited[v]:
            dfs(v)

while True:
    n, m = map(int, sys.stdin.readline().split())
    if n == 0 and m == 0:
        break
    graph = [[] for _ in range(n)]
    redges = [[] for _ in range(n)]
    total = 0
    edges = []
    for _ in range(m):
        x, y, c = map(int, sys.stdin.readline().split())
        edges.append((x, y, c))
        total += c
        graph[x].append(y)
        redges[y].append(x)
    # Build residual graph for min cut
    # We'll find the min cut after partitioning rooms from 0 side
    # Use Dinic or BFS for min cut; here n<=100 so BFS + DFS is OK
    # But we only need to find vertices reachable from node 0 in original graph and reverse graph
    visited = [False]*n
    dfs(0)
    visited_r = [False]*n
    def dfs_r(u):
        visited_r[u] = True
        for v in redges[u]:
            if not visited_r[v]:
                dfs_r(v)
    dfs_r(0)
    res = 0
    for x,y,c in edges:
        # Edges from reachable(set S) to unreachable(set T) nodes are crossing the cut
        if visited[x] and not visited[y]:
            res += c
    print(res)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.21183328330516815
    2. '.' → logprob: -2.3368332386016846
    3. '<|end|>' → logprob: -2.8368332386016846
    4. '\' → logprob: -4.711833477020264
    5. 'newline' → logprob: -5.086833477020264
    6. 'import' → logprob: -5.086833477020264
    7. '
' → logprob: -5.711833477020264
    8. '' → logprob: -5.836833477020264
    9. '<|end|>' → logprob: -5.836833477020264
    10. '\r' → logprob: -6.336833477020264

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -9.007317567011341e-05
    2. '[' → logprob: -11.250089645385742
    3. '.import' → logprob: -11.625089645385742
    4. '.readline' → logprob: -11.750089645385742
    5. '```' → logprob: -11.750089645385742
    6. ' .' → logprob: -12.000089645385742
    7. '.
' → logprob: -12.500089645385742
    8. '.`' → logprob: -12.625089645385742
    9. '`.' → logprob: -12.875089645385742
    10. '.user' → logprob: -12.875089645385742

Token 5: 'rec' (ID: 9285)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trace' → logprob: -1.2891126871109009
    2. 't' → logprob: -1.4141126871109009
    3. 'default' → logprob: -2.0391125679016113
    4. '_' → logprob: -2.5391125679016113
    5. 's' → logprob: -2.9141125679016113
    6. 'encoding' → logprob: -3.6641125679016113
    7. 'limit' → logprob: -3.9141125679016113
    8. '_version' → logprob: -4.289112567901611
    9. 'rl' → logprob: -4.539112567901611
    10. 'sys' → logprob: -4.539112567901611

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0012878556735813618
    2. 'ursive' → logprob: -7.626287937164307
    3. 'sys' → logprob: -8.251287460327148
    4. 'urs' → logprob: -9.126287460327148
    5. 'set' → logprob: -9.251287460327148
    6. 'ur' → logprob: -9.751287460327148
    7. '_sys' → logprob: -10.126287460327148
    8. '_limit' → logprob: -10.126287460327148
    9. 'ursor' → logprob: -10.501287460327148
    10. 'limit' → logprob: -10.501287460327148

Token 7: 'limit' (ID: 19698)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.48665714263916016
    2. 'limit' → logprob: -0.9866571426391602
    3. '_depth' → logprob: -4.48665714263916
    4. 'depth' → logprob: -7.48665714263916
    5. '_' → logprob: -8.36165714263916
    6. '_rate' → logprob: -9.98665714263916
    7. 'lim' → logprob: -10.23665714263916
    8. '(' → logprob: -10.36165714263916
    9. '_factor' → logprob: -10.48665714263916
    10. '_stack' → logprob: -10.61165714263916

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.7835754988482222e-05
    2. '(
' → logprob: -11.625018119812012
    3. ' (' → logprob: -12.375018119812012
    4. '(

' → logprob: -13.375018119812012
    5. '(.' → logprob: -14.000018119812012
    6. '("("' → logprob: -14.500018119812012
    7. '((' → logprob: -14.750018119812012
    8. '('' → logprob: -15.000018119812012
    9. '```' → logprob: -15.125018119812012
    10. '(()' → logprob: -15.875018119812012

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.07906417548656464
    2. '100' → logprob: -2.579064130783081
    3. ' ' → logprob: -9.07906436920166
    4. '500' → logprob: -10.45406436920166
    5. '300' → logprob: -11.07906436920166
    6. '999' → logprob: -12.07906436920166
    7. '  ' → logprob: -12.45406436920166
    8. '   ' → logprob: -13.32906436920166
    9. '1' → logprob: -13.70406436920166
    10. '150' → logprob: -13.82906436920166

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005634739995002747
    2. '00' → logprob: -6.005634784698486
    3. '000' → logprob: -6.005634784698486
    4. '4' → logprob: -7.505634784698486
    5. '6' → logprob: -9.130634307861328
    6. '5' → logprob: -11.755634307861328
    7. '```' → logprob: -12.255634307861328
    8. ')' → logprob: -12.505634307861328
    9. '3' → logprob: -12.630634307861328
    10. '**' → logprob: -12.630634307861328

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00714417127892375
    2. '9' → logprob: -5.632143974304199
    3. '6' → logprob: -5.757143974304199
    4. '8' → logprob: -7.882143974304199
    5. '```' → logprob: -15.8821439743042
    6. ' ' → logprob: -16.507144927978516
    7. '(' → logprob: -17.132144927978516
    8. '5' → logprob: -17.757144927978516
    9. '``' → logprob: -18.382144927978516
    10. '999' → logprob: -18.382144927978516

Token 12: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.36574100604048e-06
    2. '))' → logprob: -13.000004768371582
    3. ' )' → logprob: -13.250004768371582
    4. ')
' → logprob: -15.875004768371582
    5. ')))' → logprob: -18.125003814697266
    6. '```' → logprob: -18.125003814697266
    7. ')`' → logprob: -18.125003814697266
    8. '),' → logprob: -18.500003814697266
    9. ' ' → logprob: -18.500003814697266
    10. '`)' → logprob: -18.750003814697266

Token 13: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.47230008244514465
    2. '\' → logprob: -1.2223000526428223
    3. '\n' → logprob: -3.7223000526428223
    4. '```' → logprob: -4.097300052642822
    5. '
' → logprob: -4.222300052642822
    6. ')' → logprob: -5.222300052642822
    7. '`' → logprob: -5.472300052642822
    8. 'import' → logprob: -5.597300052642822
    9. '#' → logprob: -5.597300052642822
    10. '

' → logprob: -6.597300052642822

Token 14: ' dfs' (ID: 51252)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06509348005056381
    2. ' factorial' → logprob: -3.065093517303467
    3. ' dfs' → logprob: -4.440093517303467
    4. ' f' → logprob: -6.690093517303467
    5. ' factor' → logprob: -7.315093517303467
    6. ' space' → logprob: -7.690093517303467
    7. ' my' → logprob: -8.065093040466309
    8. ' fibonacci' → logprob: -8.315093040466309
    9. '_' → logprob: -8.565093040466309
    10. ' a' → logprob: -8.565093040466309

Token 15: '(u' (ID: 17057)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0033850567415356636
    2. '(node' → logprob: -6.128385066986084
    3. '_' → logprob: -6.878385066986084
    4. '_(' → logprob: -10.253384590148926
    5. '(_' → logprob: -10.753384590148926
    6. '(x' → logprob: -11.003384590148926
    7. '(tree' → logprob: -11.378384590148926
    8. ' (' → logprob: -12.253384590148926
    9. '(f' → logprob: -12.503384590148926
    10. '(n' → logprob: -12.503384590148926

Token 16: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009797411039471626
    2. '):' → logprob: -4.6347975730896
    3. ' ,' → logprob: -11.259797096252441
    4. ')' → logprob: -11.384797096252441
    5. ',u' → logprob: -11.509797096252441
    6. ':' → logprob: -12.759797096252441
    7. ' ):' → logprob: -13.634797096252441
    8. ',v' → logprob: -14.134797096252441
    9. ',p' → logprob: -15.134797096252441
    10. 'u' → logprob: -15.259797096252441

Token 17: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.633281946182251
    2. '   ' → logprob: -0.758281946182251
    3. ':
' → logprob: -9.008281707763672
    4. '    
' → logprob: -9.133281707763672
    5. '```' → logprob: -9.258281707763672
    6. ':\' → logprob: -9.508281707763672
    7. ' :' → logprob: -9.633281707763672
    8. ':return' → logprob: -9.633281707763672
    9. '\' → logprob: -10.008281707763672
    10. '    ' → logprob: -10.508281707763672

Token 18: ' visited' (ID: 18416)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34111469984054565
    2. ' if' → logprob: -1.4661147594451904
    3. 'if' → logprob: -3.4661147594451904
    4. ' for' → logprob: -3.8411147594451904
    5. 'for' → logprob: -5.341114521026611
    6. '    ' → logprob: -8.46611499786377
    7. ' stack' → logprob: -8.46611499786377
    8. 'stack' → logprob: -9.46611499786377
    9. '    
' → logprob: -10.09111499786377
    10. 'global' → logprob: -10.34111499786377

Token 19: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.0028337687253952026
    2. '[' → logprob: -5.877833843231201
    3. '.add' → logprob: -10.877833366394043
    4. '[user' → logprob: -12.377833366394043
    5. '.setdefault' → logprob: -13.752833366394043
    6. '```' → logprob: -13.752833366394043
    7. '   ' → logprob: -14.252833366394043
    8. '[]' → logprob: -14.377833366394043
    9. 'u' → logprob: -14.752833366394043
    10. '.append' → logprob: -14.877833366394043

Token 20: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002727793762460351
    2. ']=' → logprob: -8.250272750854492
    3. ' ]' → logprob: -12.000272750854492
    4. ')' → logprob: -12.250272750854492
    5. ']==' → logprob: -15.625272750854492
    6. '=' → logprob: -16.000272750854492
    7. '[' → logprob: -16.250272750854492
    8. '])' → logprob: -16.750272750854492
    9. '=True' → logprob: -17.125272750854492
    10. ']
' → logprob: -17.500272750854492

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5760228633880615
    2. '=' → logprob: -0.8260228633880615
    3. '=True' → logprob: -10.70102310180664
    4. ' |=' → logprob: -10.70102310180664
    5. '[' → logprob: -10.82602310180664
    6. ' +=' → logprob: -12.07602310180664
    7. '+=' → logprob: -12.82602310180664
    8. ')' → logprob: -12.82602310180664
    9. ' ' → logprob: -13.07602310180664
    10. ']' → logprob: -13.70102310180664

Token 22: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.4742405414581299
    2. 'True' → logprob: -0.9742405414581299
    3. '1' → logprob: -8.72424030303955
    4. ' ' → logprob: -14.59924030303955
    5. '   ' → logprob: -16.099241256713867
    6. '(True' → logprob: -16.099241256713867
    7. '=True' → logprob: -16.224241256713867
    8. 'False' → logprob: -16.849241256713867
    9. '0' → logprob: -17.974241256713867
    10. '    ' → logprob: -18.724241256713867

Token 23: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025162079837173223
    2. '    
' → logprob: -6.377516269683838
    3. '
' → logprob: -8.25251579284668
    4. '<|end|>' → logprob: -8.50251579284668
    5. '```' → logprob: -8.75251579284668
    6. ' for' → logprob: -9.37751579284668
    7. '\n' → logprob: -10.62751579284668
    8. 'for' → logprob: -11.12751579284668
    9. '\' → logprob: -11.50251579284668
    10. ',' → logprob: -11.75251579284668

Token 24: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007217261008918285
    2. '    
' → logprob: -7.3757219314575195
    3. ' for' → logprob: -10.62572193145752
    4. '
' → logprob: -11.00072193145752
    5. '```' → logprob: -11.25072193145752
    6. 'for' → logprob: -11.37572193145752
    7. '<|end|>' → logprob: -11.50072193145752
    8. ',' → logprob: -12.37572193145752
    9. '\n' → logprob: -12.62572193145752
    10. '    ' → logprob: -13.25072193145752

Token 25: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.008655345998704433
    2. ' for' → logprob: -4.758655548095703
    3. '   ' → logprob: -10.133655548095703
    4. 'print' → logprob: -14.508655548095703
    5. 'global' → logprob: -15.008655548095703
    6. '```' → logprob: -16.383655548095703
    7. '	for' → logprob: -16.633655548095703
    8. 'if' → logprob: -17.133655548095703
    9. 'count' → logprob: -17.258655548095703
    10. ' ' → logprob: -17.383655548095703

Token 26: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.06995644420385361
    2. 'v' → logprob: -2.6949565410614014
    3. '	v' → logprob: -11.94495677947998
    4. '```' → logprob: -12.44495677947998
    5. ' w' → logprob: -12.56995677947998
    6. ' ' → logprob: -13.19495677947998
    7. '(v' → logprob: -13.94495677947998
    8. 'w' → logprob: -14.31995677947998
    9. ' nxt' → logprob: -14.69495677947998
    10. ' nei' → logprob: -14.69495677947998

Token 27: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020573768764734268
    2. 'in' → logprob: -3.895573854446411
    3. ' ' → logprob: -11.645573616027832
    4. '	in' → logprob: -11.770573616027832
    5. ',' → logprob: -11.895573616027832
    6. 's' → logprob: -13.395573616027832
    7. ',in' → logprob: -13.520573616027832
    8. '   ' → logprob: -13.895573616027832
    9. ' ,' → logprob: -14.020573616027832
    10. 'import' → logprob: -14.145573616027832

Token 28: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.04858703166246414
    2. ' graph' → logprob: -3.7985870838165283
    3. 'adj' → logprob: -3.7985870838165283
    4. 'g' → logprob: -6.923586845397949
    5. 'G' → logprob: -7.048586845397949
    6. 'range' → logprob: -7.423586845397949
    7. ' adj' → logprob: -9.79858684539795
    8. ' adjacency' → logprob: -10.67358684539795
    9. 'edges' → logprob: -10.92358684539795
    10. ' range' → logprob: -10.92358684539795

Token 29: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.843177233240567e-05
    2. '[' → logprob: -12.250018119812012
    3. 'u' → logprob: -12.250018119812012
    4. ':' → logprob: -12.500018119812012
    5. '   ' → logprob: -13.000018119812012
    6. '```' → logprob: -13.375018119812012
    7. '	u' → logprob: -15.125018119812012
    8. ' u' → logprob: -15.250018119812012
    9. ' [' → logprob: -16.000019073486328
    10. ',u' → logprob: -16.125019073486328

Token 30: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -3.6789137084269896e-05
    2. ']' → logprob: -10.25003719329834
    3. '):' → logprob: -14.50003719329834
    4. '']:' → logprob: -15.50003719329834
    5. ']:
' → logprob: -15.87503719329834
    6. ':' → logprob: -15.87503719329834
    7. ' ]' → logprob: -16.125036239624023
    8. ']):' → logprob: -16.375036239624023
    9. ']:
' → logprob: -16.625036239624023
    10. '"]:' → logprob: -17.000036239624023

Token 31: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005403200164437294
    2. ':' → logprob: -5.6304030418396
    3. ' if' → logprob: -6.8804030418396
    4. 'if' → logprob: -7.6304030418396
    5. '   ' → logprob: -9.130403518676758
    6. ',' → logprob: -10.130403518676758
    7. '        
' → logprob: -10.755403518676758
    8. '    ' → logprob: -10.880403518676758
    9. '<|end|>' → logprob: -10.880403518676758
    10. ':
' → logprob: -11.005403518676758

Token 32: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5401079058647156
    2. '       ' → logprob: -1.2901079654693604
    3. 'if' (adapté à ' if') → logprob: -2.0401079654693604
    4. '           ' → logprob: -4.665107727050781
    5. '<|end|>' → logprob: -7.540107727050781
    6. '   ' → logprob: -7.665107727050781
    7. '        ' → logprob: -7.915107727050781
    8. ' ' → logprob: -7.915107727050781
    9. ',' → logprob: -8.790107727050781
    10. '    ' → logprob: -8.915107727050781

Token 33: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.014166445471346378
    2. 'not' → logprob: -4.264166355133057
    3. ' v' → logprob: -13.389166831970215
    4. ' visited' → logprob: -14.639166831970215
    5. ' no' → logprob: -15.389166831970215
    6. '	not' → logprob: -15.514166831970215
    7. ' ' → logprob: -15.639166831970215
    8. 'v' → logprob: -15.889166831970215
    9. 'visited' → logprob: -15.889166831970215
    10. ' ' → logprob: -16.6391658782959

Token 34: ' visited' (ID: 18416)
  Prédit: ' visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.07889165729284286
    2. 'visited' → logprob: -2.5788917541503906
    3. ' v' → logprob: -13.95389175415039
    4. ' ' → logprob: -14.82889175415039
    5. ' ' → logprob: -15.57889175415039
    6. 'v' → logprob: -15.70389175415039
    7. ' visit' → logprob: -16.07889175415039
    8. '   ' → logprob: -17.07889175415039
    9. 'Visited' → logprob: -17.45389175415039
    10. 'vist' → logprob: -18.07889175415039

Token 35: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.981667537620524e-06
    2. '[' → logprob: -13.375001907348633
    3. 'v' → logprob: -15.500001907348633
    4. '```' → logprob: -17.000001907348633
    5. '[u' → logprob: -18.125001907348633
    6. '[V' → logprob: -18.500001907348633
    7. ' [' → logprob: -19.000001907348633
    8. '	v' → logprob: -19.750001907348633
    9. '][' → logprob: -20.000001907348633
    10. '   ' → logprob: -20.125001907348633

Token 36: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0016930309357121587
    2. ']' → logprob: -6.626693248748779
    3. ']:
' → logprob: -8.001692771911621
    4. ':' → logprob: -11.376692771911621
    5. ']:
' → logprob: -11.751692771911621
    6. ' ]' → logprob: -12.251692771911621
    7. ']:

' → logprob: -12.626692771911621
    8. '']:' → logprob: -13.376692771911621
    9. '"]:' → logprob: -14.001692771911621
    10. ']):' → logprob: -14.501692771911621

Token 37: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0022624251432716846
    2. 'dfs' → logprob: -7.127262592315674
    3. ' dfs' → logprob: -7.377262592315674
    4. '            
' → logprob: -7.502262592315674
    5. '       ' → logprob: -9.002262115478516
    6. '```' → logprob: -10.377262115478516
    7. '          ' → logprob: -10.627262115478516
    8. '               ' → logprob: -11.127262115478516
    9. 'd' → logprob: -11.252262115478516
    10. '        
' → logprob: -11.627262115478516

Token 38: ' dfs' (ID: 51252)
  Prédit: ' dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.6458086371421814
    2. 'dfs' (adapté à ' dfs') → logprob: -0.7708086371421814
    3. '               ' → logprob: -4.395808696746826
    4. '           ' → logprob: -7.520808696746826
    5. 'd' → logprob: -9.895808219909668
    6. 'df' → logprob: -10.270808219909668
    7. '   ' → logprob: -10.270808219909668
    8. '                
' → logprob: -10.770808219909668
    9. ' DFS' → logprob: -11.020808219909668
    10. '       ' → logprob: -11.145808219909668

Token 39: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.00023119196703191847
    2. '(' → logprob: -8.37523078918457
    3. ' (' → logprob: -14.50023078918457
    4. '((' → logprob: -17.25023078918457
    5. '(iv' → logprob: -17.62523078918457
    6. '```' → logprob: -18.12523078918457
    7. '(
' → logprob: -18.37523078918457
    8. '(u' → logprob: -18.62523078918457
    9. '(V' → logprob: -19.37523078918457
    10. ')(' → logprob: -19.50023078918457

Token 40: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018788566812872887
    2. '(v' → logprob: -4.0187883377075195
    3. ')v' → logprob: -7.5187883377075195
    4. '(' → logprob: -10.39378833770752
    5. '(u' → logprob: -10.76878833770752
    6. 'v' → logprob: -11.26878833770752
    7. ')`' → logprob: -11.64378833770752
    8. '))' → logprob: -12.01878833770752
    9. ')
' → logprob: -12.14378833770752
    10. '   ' → logprob: -12.26878833770752

Token 41: 'while' (ID: 7032)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 42: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.0037175347097218037
    2. 'True' → logprob: -5.753717422485352
    3. ' not' → logprob: -8.003717422485352
    4. ' len' → logprob: -9.128717422485352
    5. ' sys' → logprob: -9.878717422485352
    6. '(True' → logprob: -10.503717422485352
    7. ' ' → logprob: -12.128717422485352
    8. ' input' → logprob: -12.253717422485352
    9. 'not' → logprob: -13.753717422485352
    10. '=True' → logprob: -14.253717422485352

Token 43: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00025966696557588875
    2. ' :' → logprob: -8.875259399414062
    3. '():' → logprob: -9.125259399414062
    4. ':
' → logprob: -12.625259399414062
    5. '):' → logprob: -12.625259399414062
    6. ':**' → logprob: -13.000259399414062
    7. ',' → logprob: -15.125259399414062
    8. '(' → logprob: -15.375259399414062
    9. '   ' → logprob: -15.625259399414062
    10. ':

' → logprob: -15.875259399414062

Token 44: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004395817406475544
    2. ' try' → logprob: -5.629395961761475
    3. '```' → logprob: -8.254395484924316
    4. '    
' → logprob: -8.629395484924316
    5. ' line' → logprob: -9.004395484924316
    6. 'try' → logprob: -9.129395484924316
    7. ' input' → logprob: -10.379395484924316
    8. '   ' → logprob: -10.629395484924316
    9. ' readline' → logprob: -10.754395484924316
    10. ' ```' → logprob: -11.504395484924316

Token 45: ' n' (ID: 297)
  Prédit: ' try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' try' → logprob: -0.15968023240566254
    2. ' line' → logprob: -2.409680128097534
    3. '   ' → logprob: -3.159680128097534
    4. 'try' → logprob: -4.284680366516113
    5. '```' → logprob: -7.159680366516113
    6. ' s' → logprob: -8.534680366516113
    7. '    ' → logprob: -8.659680366516113
    8. 'line' → logprob: -9.159680366516113
    9. ' input' → logprob: -9.659680366516113
    10. ' n' → logprob: -10.284680366516113

Token 46: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.021216580644249916
    2. '=' → logprob: -4.52121639251709
    3. ',' → logprob: -4.77121639251709
    4. ' ,' → logprob: -6.89621639251709
    5. '=input' → logprob: -8.77121639251709
    6. ' >' → logprob: -8.89621639251709
    7. ' ==' → logprob: -9.02121639251709
    8. ' ' → logprob: -9.39621639251709
    9. '=int' → logprob: -9.64621639251709
    10. '>' → logprob: -9.89621639251709

Token 47: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.003933779429644346
    2. 'k' → logprob: -6.128933906555176
    3. '=' → logprob: -6.753933906555176
    4. ' m' → logprob: -7.753933906555176
    5. ' =' → logprob: -10.128933906555176
    6. '*m' → logprob: -10.753933906555176
    7. 'd' → logprob: -11.253933906555176
    8. 'q' → logprob: -11.253933906555176
    9. 't' → logprob: -11.753933906555176
    10. 'a' → logprob: -11.878933906555176

Token 48: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693209946155548
    2. '=' → logprob: -2.126932144165039
    3. '=input' → logprob: -13.126932144165039
    4. ',' → logprob: -13.626932144165039
    5. ' ' → logprob: -15.251932144165039
    6. '    ' → logprob: -16.00193214416504
    7. ')' → logprob: -16.00193214416504
    8. ' =",' → logprob: -16.50193214416504
    9. '=line' → logprob: -16.75193214416504
    10. '   ' → logprob: -16.87693214416504

Token 49: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.07890564948320389
    2. 'map' → logprob: -2.5789055824279785
    3. ' input' → logprob: -12.328906059265137
    4. ' ' → logprob: -12.703906059265137
    5. '	map' → logprob: -12.953906059265137
    6. 'input' → logprob: -13.328906059265137
    7. '0' → logprob: -13.703906059265137
    8. ' sys' → logprob: -13.828906059265137
    9. ' list' → logprob: -14.078906059265137
    10. '(map' → logprob: -14.578906059265137

Token 50: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.05816253647208214
    2. '(input' → logprob: -3.0581624507904053
    3. '(' → logprob: -4.683162689208984
    4. '(list' → logprob: -8.933162689208984
    5. '(str' → logprob: -9.058162689208984
    6. 'input' → logprob: -11.683162689208984
    7. '(eval' → logprob: -12.683162689208984
    8. '(in' → logprob: -12.808162689208984
    9. '(tuple' → logprob: -13.058162689208984
    10. 'int' → logprob: -13.058162689208984

Token 51: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4298984110355377
    2. ',input' → logprob: -1.0548983812332153
    3. 'input' → logprob: -6.804898262023926
    4. '(input' → logprob: -10.179898262023926
    5. '(' → logprob: -11.429898262023926
    6. ',int' → logprob: -11.554898262023926
    7. ' ,' → logprob: -11.679898262023926
    8. 'sys' → logprob: -11.929898262023926
    9. '   ' → logprob: -12.054898262023926
    10. ' input' → logprob: -12.929898262023926

Token 52: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.023049667477607727
    2. 'sys' → logprob: -4.398049831390381
    3. ' input' → logprob: -4.648049831390381
    4. ' sys' → logprob: -7.023049831390381
    5. ' ' → logprob: -12.148049354553223
    6. ')' → logprob: -13.273049354553223
    7. '   ' → logprob: -13.773049354553223
    8. 'str' → logprob: -13.898049354553223
    9. '```' → logprob: -14.273049354553223
    10. '(input' → logprob: -14.398049354553223

Token 53: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0041927252896130085
    2. '.readline' → logprob: -5.50419282913208
    3. '.argv' → logprob: -9.254192352294922
    4. '.input' → logprob: -11.504192352294922
    5. '.' → logprob: -12.629192352294922
    6. '.stdout' → logprob: -13.254192352294922
    7. '.read' → logprob: -14.379192352294922
    8. '.setdefault' → logprob: -14.504192352294922
    9. '.std' → logprob: -14.629192352294922
    10. 'stdin' → logprob: -14.754192352294922

Token 54: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.5928495486150496e-05
    2. '.' → logprob: -11.500016212463379
    3. '.read' → logprob: -12.375016212463379
    4. '.readlines' → logprob: -13.750016212463379
    5. ').' → logprob: -15.875016212463379
    6. ')' → logprob: -16.125015258789062
    7. '.stdin' → logprob: -16.625015258789062
    8. '().' → logprob: -16.875015258789062
    9. ' readline' → logprob: -17.000015258789062
    10. 'read' → logprob: -17.500015258789062

Token 55: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -9.782141569303349e-05
    2. '()' → logprob: -9.25009822845459
    3. ' ().' → logprob: -13.50009822845459
    4. '(' → logprob: -16.125097274780273
    5. '()
' → logprob: -16.375097274780273
    6. '   ' → logprob: -17.250097274780273
    7. '())' → logprob: -17.375097274780273
    8. '.readline' → logprob: -17.500097274780273
    9. '()).' → logprob: -18.250097274780273
    10. ' ' → logprob: -18.375097274780273

Token 56: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.040430933237075806
    2. 'strip' → logprob: -3.290431022644043
    3. 'rstrip' → logprob: -6.040431022644043
    4. ' split' → logprob: -12.915431022644043
    5. 'read' → logprob: -13.040431022644043
    6. '(split' → logprob: -14.415431022644043
    7. 'rs' → logprob: -15.290431022644043
    8. 'decode' → logprob: -15.665431022644043
    9. ')' → logprob: -15.790431022644043
    10. ' strip' → logprob: -16.040430068969727

Token 57: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.006549816578626633
    2. '()' → logprob: -5.381549835205078
    3. ')' → logprob: -6.381549835205078
    4. '()))' → logprob: -8.631549835205078
    5. '())
' → logprob: -10.131549835205078
    6. '(' → logprob: -12.131549835205078
    7. '))' → logprob: -12.506549835205078
    8. '('' → logprob: -12.631549835205078
    9. '())

' → logprob: -13.756549835205078
    10. ' ())' → logprob: -13.756549835205078

Token 58: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 59: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5249263048171997
    2. '<|end|>' → logprob: -1.6499263048171997
    3. '   ' → logprob: -1.7749263048171997
    4. 'if' (adapté à ' if') → logprob: -3.39992618560791
    5. ' 
' → logprob: -5.39992618560791
    6. ' ' → logprob: -5.52492618560791
    7. '  ' → logprob: -6.52492618560791
    8. '
' → logprob: -6.89992618560791
    9. '    
' → logprob: -7.14992618560791
    10. '    ' → logprob: -7.77492618560791

Token 60: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.00081153231440112
    2. 'n' → logprob: -7.125811576843262
    3. ' not' → logprob: -12.000811576843262
    4. ' ' → logprob: -13.875811576843262
    5. 'not' → logprob: -17.500810623168945
    6. ' (' → logprob: -17.500810623168945
    7. '	n' → logprob: -17.750810623168945
    8. '(n' → logprob: -17.875810623168945
    9. ' ' → logprob: -18.125810623168945
    10. ' н' → logprob: -19.625810623168945

Token 61: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10024474561214447
    2. '==' → logprob: -2.3502447605133057
    3. '=' → logprob: -11.600244522094727
    4. ' <=' → logprob: -11.600244522094727
    5. ' =' → logprob: -12.475244522094727
    6. '<=' → logprob: -12.725244522094727
    7. ')==' → logprob: -12.975244522094727
    8. ' ' → logprob: -13.225244522094727
    9. ')' → logprob: -13.225244522094727
    10. ' <' → logprob: -13.475244522094727

Token 62: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002502055838704109
    2. ' ' → logprob: -6.002501964569092
    3. 'm' → logprob: -10.87750244140625
    4. ' m' → logprob: -13.37750244140625
    5. '```' → logprob: -13.75250244140625
    6. '  ' → logprob: -13.87750244140625
    7. '   ' → logprob: -13.94000244140625
    8. '    ' → logprob: -15.50250244140625
    9. ' ' → logprob: -15.56500244140625
    10. '=' → logprob: -15.62750244140625

Token 63: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1160349458805285e-05
    2. ' ' → logprob: -11.625011444091797
    3. 'm' → logprob: -14.562511444091797
    4. '۰' → logprob: -15.062511444091797
    5. '```' → logprob: -15.187511444091797
    6. 'and' → logprob: -15.750011444091797
    7. '０' → logprob: -15.875011444091797
    8. '০' → logprob: -16.000011444091797
    9. '०' → logprob: -17.000011444091797
    10. 'o' → logprob: -17.250011444091797

Token 64: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03374655172228813
    2. 'and' → logprob: -3.4087464809417725
    3. ':' → logprob: -10.033746719360352
    4. ' or' → logprob: -10.408746719360352
    5. ' ' → logprob: -10.658746719360352
    6. '	and' → logprob: -13.033746719360352
    7. ' ' → logprob: -15.533746719360352
    8. '   ' → logprob: -15.783746719360352
    9. '  ' → logprob: -15.783746719360352
    10. ' a' → logprob: -16.03374671936035

Token 65: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.07889111340045929
    2. 'm' → logprob: -2.5788910388946533
    3. '   ' → logprob: -14.578890800476074
    4. '	m' → logprob: -14.578890800476074
    5. ' ' → logprob: -15.453890800476074
    6. ' ' → logprob: -16.20389175415039
    7. '    ' → logprob: -16.45389175415039
    8. '  ' → logprob: -16.70389175415039
    9. '&m' → logprob: -18.82889175415039
    10. '<m' → logprob: -19.14139175415039

Token 66: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2015390545129776
    2. '==' → logprob: -1.7015390396118164
    3. '<|end|>' → logprob: -10.076539039611816
    4. ' ' → logprob: -10.576539039611816
    5. '0' → logprob: -11.451539039611816
    6. ' ' → logprob: -11.576539039611816
    7. ')==' → logprob: -11.576539039611816
    8. '<|end|>' → logprob: -12.076539039611816
    9. '=' → logprob: -12.201539039611816
    10. '   ' → logprob: -12.326539039611816

Token 67: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005929393693804741
    2. ' ' → logprob: -5.130929470062256
    3. '   ' → logprob: -14.880928993225098
    4. '  ' → logprob: -16.130929946899414
    5. ' ' → logprob: -16.130929946899414
    6. '<|end|>' → logprob: -16.380929946899414
    7. '۰' → logprob: -17.505929946899414
    8. '```' → logprob: -18.005929946899414
    9. '<|end|>' → logprob: -18.943429946899414
    10. '    ' → logprob: -19.443429946899414

Token 68: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002613358374219388
    2. ' ' → logprob: -8.250261306762695
    3. '  ' → logprob: -17.937761306762695
    4. '۰' → logprob: -17.937761306762695
    5. '   ' → logprob: -17.937761306762695
    6. '1' → logprob: -18.687761306762695
    7. ' ' → logprob: -18.750261306762695
    8. '<|end|>' → logprob: -18.875261306762695
    9. '```' → logprob: -19.125261306762695
    10. '０' → logprob: -19.437761306762695

Token 69: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00477993069216609
    2. '   ' → logprob: -5.629779815673828
    3. '       ' → logprob: -7.254779815673828
    4. ':
' → logprob: -7.754779815673828
    5. ' :' → logprob: -10.629779815673828
    6. '.' → logprob: -11.754779815673828
    7. '    ' → logprob: -12.629779815673828
    8. '	break' → logprob: -12.754779815673828
    9. ' break' → logprob: -13.754779815673828
    10. ':return' → logprob: -14.254779815673828

Token 70: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004919093102216721
    2. '   ' → logprob: -5.754919052124023
    3. ':' → logprob: -6.379919052124023
    4. '	break' → logprob: -11.754919052124023
    5. ' break' → logprob: -11.879919052124023
    6. '    ' → logprob: -12.004919052124023
    7. '      ' → logprob: -12.254919052124023
    8. '     ' → logprob: -12.379919052124023
    9. '	' → logprob: -12.879919052124023
    10. ':
' → logprob: -13.129919052124023

Token 71: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.06006114184856415
    2. 'break' (adapté à ' break') → logprob: -3.31006121635437
    3. '   ' → logprob: -3.93506121635437
    4. '       ' → logprob: -6.310060977935791
    5. '	break' → logprob: -7.810060977935791
    6. '           ' → logprob: -12.56006145477295
    7. '_break' → logprob: -13.18506145477295
    8. '```' → logprob: -13.56006145477295
    9. '
' → logprob: -13.81006145477295
    10. '    
' → logprob: -14.06006145477295

Token 72: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6019572615623474
    2. '<|end|>' → logprob: -1.4769573211669922
    3. 'visited' → logprob: -1.8519573211669922
    4. '    
' → logprob: -3.726957321166992
    5. ' visited' → logprob: -3.851957321166992
    6. '```' → logprob: -4.226957321166992
    7. '
' → logprob: -5.726957321166992
    8. '  
' → logprob: -7.226957321166992
    9. '<|end|>' → logprob: -7.476957321166992
    10. 'n' → logprob: -7.601957321166992

Token 73: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8366995453834534
    2. 'visited' → logprob: -1.0866994857788086
    3. '```' → logprob: -2.5866994857788086
    4. '<|end|>' → logprob: -3.0866994857788086
    5. '    
' → logprob: -3.2116994857788086
    6. 'graph' → logprob: -3.4616994857788086
    7. '
' → logprob: -3.7116994857788086
    8. ' visited' → logprob: -4.836699485778809
    9. ' graph' → logprob: -6.711699485778809
    10. '  ' → logprob: -7.211699485778809

Token 74: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.12131960690021515
    2. ' graph' → logprob: -2.996319532394409
    3. 'visited' → logprob: -3.246319532394409
    4. '   ' → logprob: -3.746319532394409
    5. ' visited' → logprob: -7.121319770812988
    6. '```' → logprob: -7.246319770812988
    7. '	graph' → logprob: -9.246319770812988
    8. '
' → logprob: -9.496319770812988
    9. '    
' → logprob: -9.871319770812988
    10. '``' → logprob: -12.871319770812988

Token 75: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029755927622318268
    2. '=' → logprob: -3.5297558307647705
    3. '[' → logprob: -13.029755592346191
    4. '[:]' → logprob: -13.779755592346191
    5. '＝' → logprob: -14.654755592346191
    6. ')' → logprob: -15.029755592346191
    7. '=[]' → logprob: -15.029755592346191
    8. ']' → logprob: -15.529755592346191
    9. ' =[' → logprob: -16.029756546020508
    10. '=[' → logprob: -16.029756546020508

Token 76: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.011057606898248196
    2. ' [[]' → logprob: -4.511057376861572
    3. ' [' → logprob: -12.13605785369873
    4. '{' → logprob: -13.01105785369873
    5. '[]' → logprob: -13.26105785369873
    6. '[n' → logprob: -16.011056900024414
    7. '[[' → logprob: -16.136056900024414
    8. '   ' → logprob: -16.261056900024414
    9. '[node' → logprob: -16.886056900024414
    10. '{}' → logprob: -17.011056900024414

Token 77: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.17977748811244965
    2. 'for' → logprob: -1.8047775030136108
    3. ')' → logprob: -11.429777145385742
    4. ' ' → logprob: -11.929777145385742
    5. '	for' → logprob: -11.929777145385742
    6. ',' → logprob: -12.804777145385742
    7. '   ' → logprob: -13.179777145385742
    8. ']' → logprob: -13.554777145385742
    9. 'f' → logprob: -14.554777145385742
    10. '```' → logprob: -14.929777145385742

Token 78: ' _' (ID: 1175)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.19979259371757507
    2. ' range' → logprob: -2.4497926235198975
    3. 'in' → logprob: -2.8247926235198975
    4. '_' → logprob: -3.6997926235198975
    5. ' in' → logprob: -4.699792385101318
    6. '(range' → logprob: -6.699792385101318
    7. ' _' → logprob: -8.824792861938477
    8. '_range' → logprob: -9.324792861938477
    9. 'i' → logprob: -9.699792861938477
    10. ' ' → logprob: -10.074792861938477

Token 79: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.11900623142719269
    2. ' in' → logprob: -2.2440061569213867
    3. 'range' → logprob: -5.119006156921387
    4. 'n' → logprob: -8.869006156921387
    5. ' range' → logprob: -10.994006156921387
    6. ' ' → logprob: -12.494006156921387
    7. '0' → logprob: -12.994006156921387
    8. '(range' → logprob: -13.119006156921387
    9. 'ange' → logprob: -13.369006156921387
    10. ')' → logprob: -13.869006156921387

Token 80: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06201070174574852
    2. ' range' → logprob: -2.8120107650756836
    3. '(range' → logprob: -10.062010765075684
    4. '	range' → logprob: -15.437010765075684
    5. 'r' → logprob: -17.312009811401367
    6. ']' → logprob: -17.937009811401367
    7. 'n' → logprob: -18.187009811401367
    8. ')' → logprob: -18.312009811401367
    9. ' ' → logprob: -18.437009811401367
    10. 'rang' → logprob: -18.937009811401367

Token 81: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -8.494741632603109e-05
    2. '(' → logprob: -9.37508487701416
    3. ' (' → logprob: -17.125085830688477
    4. '((' → logprob: -19.000085830688477
    5. 'n' → logprob: -19.250085830688477
    6. ')n' → logprob: -19.750085830688477
    7. '(nx' → logprob: -20.375085830688477
    8. ')' → logprob: -20.625085830688477
    9. '(
' → logprob: -20.750085830688477
    10. '(N' → logprob: -21.000085830688477

Token 82: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -7.941850526549388e-06
    2. ')]
' → logprob: -12.500007629394531
    3. ' )' → logprob: -13.125007629394531
    4. ')' → logprob: -13.250007629394531
    5. ']' → logprob: -15.625007629394531
    6. ')]
' → logprob: -15.875007629394531
    7. ')]

' → logprob: -17.25000762939453
    8. ')],' → logprob: -17.75000762939453
    9. '))' → logprob: -17.87500762939453
    10. '+' → logprob: -18.12500762939453

Token 83: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17212654650211334
    2. '<|end|>' → logprob: -2.547126531600952
    3. ' ' → logprob: -3.672126531600952
    4. '    
' → logprob: -3.797126531600952
    5. '    ' → logprob: -4.547126770019531
    6. ' 
' → logprob: -4.797126770019531
    7. '  ' → logprob: -5.047126770019531
    8. '  
' → logprob: -6.172126770019531
    9. '
' → logprob: -6.547126770019531
    10. '```' → logprob: -7.297126770019531

Token 84: ' red' (ID: 3592)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.03914075717329979
    2. ' visited' → logprob: -3.6641407012939453
    3. '   ' → logprob: -4.414140701293945
    4. ' for' → logprob: -8.289140701293945
    5. 'for' → logprob: -8.289140701293945
    6. '```' → logprob: -9.039140701293945
    7. '  ' → logprob: -11.664140701293945
    8. ' ' → logprob: -11.789140701293945
    9. '    
' → logprob: -12.289140701293945
    10. '    ' → logprob: -12.289140701293945

Token 85: 'ges' (ID: 4431)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.2674057185649872
    2. 'ges' → logprob: -1.6424057483673096
    3. 's' → logprob: -4.0174055099487305
    4. '_' → logprob: -4.6424055099487305
    5. 'ge' → logprob: -5.3924055099487305
    6. 'es' → logprob: -5.8924055099487305
    7. 'Edges' → logprob: -6.1424055099487305
    8. 'edges' → logprob: -6.3924055099487305
    9. '_nodes' → logprob: -7.1424055099487305
    10. '_edge' → logprob: -8.01740550994873

Token 86: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.043049659579992294
    2. ' =' → logprob: -3.1680495738983154
    3. '=[]' → logprob: -11.043049812316895
    4. '[' → logprob: -11.168049812316895
    5. '＝' → logprob: -11.418049812316895
    6. '[:]' → logprob: -13.668049812316895
    7. ' ' → logprob: -14.168049812316895
    8. 'd' → logprob: -14.293049812316895
    9. 'raph' → logprob: -14.293049812316895
    10. '[]' → logprob: -14.668049812316895

Token 87: ' [[]' (ID: 182908)
  Prédit: ' [[]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [[]' → logprob: -0.19742506742477417
    2. '[' → logprob: -1.947425127029419
    3. ' [' → logprob: -3.572425127029419
    4. '[]' → logprob: -5.07242488861084
    5. ' []' → logprob: -6.19742488861084
    6. ' defaultdict' → logprob: -10.07242488861084
    7. ' ' → logprob: -11.19742488861084
    8. '[s' → logprob: -11.44742488861084
    9. '[:]' → logprob: -11.69742488861084
    10. ' [{}' → logprob: -11.82242488861084

Token 88: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8278772830963135
    2. '(n' → logprob: -0.8278772830963135
    3. 'for' → logprob: -2.2028772830963135
    4. '(' → logprob: -4.577877044677734
    5. ' (' → logprob: -5.327877044677734
    6. ')' → logprob: -8.577877044677734
    7. '(for' → logprob: -9.577877044677734
    8. ']' → logprob: -9.702877044677734
    9. ',' → logprob: -9.827877044677734
    10. 'n' → logprob: -11.077877044677734

Token 89: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3790286779403687
    2. ' (' → logprob: -1.3790286779403687
    3. '(' → logprob: -1.7540286779403687
    4. ' in' → logprob: -2.004028797149658
    5. ' range' → logprob: -3.004028797149658
    6. 'range' → logprob: -3.254028797149658
    7. '(range' → logprob: -3.379028797149658
    8. ' _' → logprob: -3.754028797149658
    9. '_range' → logprob: -4.504028797149658
    10. '(int' → logprob: -4.754028797149658

Token 90: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.034031420946121216
    2. ' in' → logprob: -3.659031391143799
    3. 'range' → logprob: -4.909031391143799
    4. 'n' → logprob: -9.284031867980957
    5. '(int' → logprob: -10.034031867980957
    6. ' range' → logprob: -10.159031867980957
    7. '(range' → logprob: -10.159031867980957
    8. 'int' → logprob: -10.284031867980957
    9. '(' → logprob: -10.909031867980957
    10. 'ange' → logprob: -11.159031867980957

Token 91: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.03804459050297737
    2. 'range' → logprob: -3.2880446910858154
    3. '(range' → logprob: -12.913044929504395
    4. '	range' → logprob: -15.288044929504395
    5. '_range' → logprob: -15.413044929504395
    6. 'n' → logprob: -16.538043975830078
    7. ' ' → logprob: -17.538043975830078
    8. '_' → logprob: -17.663043975830078
    9. ' xrange' → logprob: -17.788043975830078
    10. 'in' → logprob: -18.663043975830078

Token 92: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.5094070477061905e-05
    2. '(' → logprob: -11.625015258789062
    3. 'n' → logprob: -12.375015258789062
    4. ' (' → logprob: -14.000015258789062
    5. '(m' → logprob: -14.125015258789062
    6. 'm' → logprob: -17.125015258789062
    7. ')(' → logprob: -17.125015258789062
    8. ')n' → logprob: -17.125015258789062
    9. ')' → logprob: -17.375015258789062
    10. '(s' → logprob: -17.500015258789062

Token 93: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.000111768240458332
    2. ']' → logprob: -9.62511157989502
    3. ')' → logprob: -10.12511157989502
    4. ')]
' → logprob: -12.50011157989502
    5. ' )' → logprob: -13.87511157989502
    6. ')]
' → logprob: -15.87511157989502
    7. ' ]' → logprob: -15.87511157989502
    8. '])' → logprob: -15.87511157989502
    9. '   ' → logprob: -16.375112533569336
    10. ')],' → logprob: -16.375112533569336

Token 94: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5095320343971252
    2. '<|end|>' → logprob: -1.0095319747924805
    3. '
' → logprob: -4.1345319747924805
    4. '    
' → logprob: -5.0095319747924805
    5. ' ' → logprob: -5.6345319747924805
    6. '  ' → logprob: -5.7595319747924805
    7. '    ' → logprob: -6.8845319747924805
    8. '  
' → logprob: -7.0095319747924805
    9. ' 
' → logprob: -7.0095319747924805
    10. ' for' → logprob: -7.5095319747924805

Token 95: ' total' (ID: 3609)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6829695105552673
    2. '   ' → logprob: -1.432969570159912
    3. ' for' → logprob: -1.432969570159912
    4. ' ' → logprob: -4.682969570159912
    5. '<|end|>' → logprob: -5.932969570159912
    6. '  ' → logprob: -6.557969570159912
    7. '    
' → logprob: -6.682969570159912
    8. '	for' → logprob: -6.807969570159912
    9. '    ' → logprob: -7.057969570159912
    10. ' 
' → logprob: -8.432969093322754

Token 96: ' =' (ID: 314)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.0984753742814064
    2. ' =' → logprob: -3.223475456237793
    3. '_' → logprob: -3.473475456237793
    4. '_nodes' → logprob: -4.723475456237793
    5. '=' → logprob: -5.223475456237793
    6. '_vertices' → logprob: -6.723475456237793
    7. '_degree' → logprob: -6.973475456237793
    8. '_spaces' → logprob: -7.348475456237793
    9. '_de' → logprob: -7.473475456237793
    10. '_edge' → logprob: -7.598475456237793

Token 97: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20839697122573853
    2. ' ' → logprob: -2.0833969116210938
    3. ' m' → logprob: -3.3333969116210938
    4. 'm' → logprob: -3.5833969116210938
    5. ' []' → logprob: -9.958396911621094
    6. '[]' → logprob: -10.708396911621094
    7. ' n' → logprob: -10.958396911621094
    8. 'n' → logprob: -11.083396911621094
    9. ' ' → logprob: -11.583396911621094
    10. '   ' → logprob: -12.208396911621094

Token 98: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.35035595297813416
    2. 'm' → logprob: -1.2253559827804565
    3. '[]' → logprob: -7.350356101989746
    4. 'n' → logprob: -7.600356101989746
    5. ' m' → logprob: -7.975356101989746
    6. ' ' → logprob: -8.350356101989746
    7. 'int' → logprob: -9.725356101989746
    8. '[' → logprob: -10.100356101989746
    9. '[m' → logprob: -10.600356101989746
    10. '1' → logprob: -11.475356101989746

Token 99: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3036026060581207
    2. '
' → logprob: -1.8036025762557983
    3. '<|end|>' → logprob: -3.178602695465088
    4. ' for' → logprob: -4.178602695465088
    5. 'for' → logprob: -4.178602695465088
    6. '    
' → logprob: -4.303602695465088
    7. ' ' → logprob: -6.178602695465088
    8. ' 
' → logprob: -6.303602695465088
    9. '  
' → logprob: -6.678602695465088
    10. '    ' → logprob: -7.053602695465088

Token 100: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08461307734251022
    2. '
' → logprob: -3.084613084793091
    3. '<|end|>' → logprob: -3.959613084793091
    4. ' for' → logprob: -5.334612846374512
    5. '    
' → logprob: -5.584612846374512
    6. 'for' → logprob: -6.209612846374512
    7. ' ' → logprob: -6.209612846374512
    8. ' 
' → logprob: -6.959612846374512
    9. '  
' → logprob: -7.334612846374512
    10. '  ' → logprob: -7.459612846374512

Token 101: ' edges' (ID: 22569)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08178716152906418
    2. ' for' → logprob: -2.956787109375
    3. '   ' → logprob: -4.081787109375
    4. 'edges' (adapté à ' edges') → logprob: -4.706787109375
    5. 'visited' → logprob: -8.331787109375
    6. ' edges' → logprob: -8.456787109375
    7. '	for' → logprob: -10.206787109375
    8. 'red' → logprob: -11.081787109375
    9. ' ' → logprob: -11.206787109375
    10. 'graph' → logprob: -11.331787109375

Token 102: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006478995084762573
    2. '=' → logprob: -5.131478786468506
    3. ' ' → logprob: -8.631479263305664
    4. '[]' → logprob: -9.881479263305664
    5. ' +=' → logprob: -10.006479263305664
    6. '=[]' → logprob: -10.256479263305664
    7. '    ' → logprob: -10.381479263305664
    8. '.append' → logprob: -10.381479263305664
    9. '<|end|>' → logprob: -10.381479263305664
    10. '   ' → logprob: -10.506479263305664

Token 103: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.20164889097213745
    2. ' []' → logprob: -1.7016489505767822
    3. '[' → logprob: -8.701648712158203
    4. ' [' → logprob: -9.701648712158203
    5. '[int' → logprob: -12.826648712158203
    6. '[]
' → logprob: -13.201648712158203
    7. '[]}' → logprob: -14.076648712158203
    8. '[list' → logprob: -14.951648712158203
    9. '[],' → logprob: -15.201648712158203
    10. '[][]' → logprob: -15.201648712158203

Token 104: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25901952385902405
    2. ' for' → logprob: -2.509019613265991
    3. 'for' → logprob: -2.634019613265991
    4. '<|end|>' → logprob: -2.759019613265991
    5. '    
' → logprob: -5.634019374847412
    6. ' ' → logprob: -6.009019374847412
    7. '
' → logprob: -6.509019374847412
    8. '  
' → logprob: -6.884019374847412
    9. '  ' → logprob: -7.134019374847412
    10. ' 
' → logprob: -7.384019374847412

Token 105: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.020724527537822723
    2. '   ' → logprob: -4.520724296569824
    3. ' for' → logprob: -4.645724296569824
    4. '	for' → logprob: -11.020724296569824
    5. '    
' → logprob: -11.895724296569824
    6. ' 
' → logprob: -14.020724296569824
    7. '  ' → logprob: -14.145724296569824
    8. '
' → logprob: -14.145724296569824
    9. ' ' → logprob: -14.270724296569824
    10. '    ' → logprob: -14.770724296569824

Token 106: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.004188448190689087
    2. '_' → logprob: -5.504188537597656
    3. ' i' → logprob: -9.254188537597656
    4. ' ' → logprob: -11.504188537597656
    5. '_i' → logprob: -12.629188537597656
    6. ' ' → logprob: -14.754188537597656
    7. ' ‌' → logprob: -15.504188537597656
    8. 'i' → logprob: -15.629188537597656
    9. ' __' → logprob: -16.879188537597656
    10. ' ▁' → logprob: -17.504188537597656

Token 107: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6335602402687073
    2. 'in' → logprob: -0.7585602402687073
    3. ' ' → logprob: -7.1335601806640625
    4. ' _' → logprob: -9.758560180664062
    5. '_' → logprob: -10.258560180664062
    6. 'range' → logprob: -11.258560180664062
    7. 'i' → logprob: -11.508560180664062
    8. ',' → logprob: -11.633560180664062
    9. '```' → logprob: -12.258560180664062
    10. 'm' → logprob: -12.383560180664062

Token 108: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004621661268174648
    2. ' range' → logprob: -5.379621505737305
    3. '(range' → logprob: -14.379621505737305
    4. '	range' → logprob: -14.754621505737305
    5. 'rang' → logprob: -16.129621505737305
    6. ' ' → logprob: -16.629621505737305
    7. 'r' → logprob: -17.004621505737305
    8. 'ange' → logprob: -17.254621505737305
    9. ')' → logprob: -17.379621505737305
    10. '0' → logprob: -17.504621505737305

Token 109: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.00029494395130313933
    2. ' (' → logprob: -8.50029468536377
    3. ' m' → logprob: -10.25029468536377
    4. '(' → logprob: -10.37529468536377
    5. 'm' → logprob: -10.62529468536377
    6. '	m' → logprob: -15.00029468536377
    7. '   ' → logprob: -15.25029468536377
    8. '(M' → logprob: -17.250295639038086
    9. ' ' → logprob: -18.000295639038086
    10. ',m' → logprob: -18.250295639038086

Token 110: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09379971027374268
    2. ' ):' → logprob: -2.468799591064453
    3. '):
' → logprob: -5.468799591064453
    4. ' ):
' → logprob: -7.968799591064453
    5. ')' → logprob: -8.843799591064453
    6. ',' → logprob: -9.468799591064453
    7. ' )' → logprob: -10.468799591064453
    8. ':' → logprob: -11.218799591064453
    9. '):
' → logprob: -11.593799591064453
    10. ' ,' → logprob: -12.343799591064453

Token 111: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06265854090452194
    2. '       ' → logprob: -3.1876585483551025
    3. ',' → logprob: -5.562658309936523
    4. '<|end|>' → logprob: -5.812658309936523
    5. '    ' → logprob: -5.937658309936523
    6. ' ,' → logprob: -6.687658309936523
    7. ' 
' → logprob: -6.687658309936523
    8. '    
' → logprob: -6.812658309936523
    9. ' ' → logprob: -6.937658309936523
    10. '  ' → logprob: -6.937658309936523

Token 112: ' x' (ID: 1215)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4871639907360077
    2. 'u' → logprob: -1.48716402053833
    3. ' u' → logprob: -2.36216402053833
    4. ' a' → logprob: -2.73716402053833
    5. '   ' → logprob: -8.112163543701172
    6. 'x' (adapté à ' x') → logprob: -8.862163543701172
    7. 's' → logprob: -9.362163543701172
    8. '```' → logprob: -10.737163543701172
    9. ' s' → logprob: -10.862163543701172
    10. ' x' → logprob: -10.987163543701172

Token 113: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000573167169932276
    2. ' ,' → logprob: -7.50057315826416
    3. ',y' → logprob: -11.12557315826416
    4. ',x' → logprob: -13.87557315826416
    5. ',v' → logprob: -14.12557315826416
    6. '<|end|>' → logprob: -14.62557315826416
    7. ',n' → logprob: -14.87557315826416
    8. '_,' → logprob: -15.00057315826416
    9. '‌,' → logprob: -15.00057315826416
    10. ',int' → logprob: -15.12557315826416

Token 114: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.5231362581253052
    2. 'y' → logprob: -0.8981362581253052
    3. ' ' → logprob: -11.648136138916016
    4. 'space' → logprob: -13.773136138916016
    5. '<|end|>' → logprob: -13.898136138916016
    6. '	y' → logprob: -14.273136138916016
    7. ',y' → logprob: -14.898136138916016
    8. ' ' → logprob: -15.648136138916016
    9. '    ' → logprob: -15.648136138916016
    10. ',' → logprob: -15.773136138916016

Token 115: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14277561008930206
    2. ' =' → logprob: -2.017775535583496
    3. ',' → logprob: -9.267775535583496
    4. ' ' → logprob: -12.517775535583496
    5. '<|end|>' → logprob: -14.517775535583496
    6. ')' → logprob: -15.017775535583496
    7. '=int' → logprob: -15.267775535583496
    8. '=input' → logprob: -15.892775535583496
    9. ' ,' → logprob: -15.892775535583496
    10. '   ' → logprob: -15.892775535583496

Token 116: ' c' (ID: 274)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.03843789920210838
    2. 'w' → logprob: -4.288437843322754
    3. 'c' → logprob: -4.538437843322754
    4. 'd' → logprob: -4.913437843322754
    5. ' z' → logprob: -6.163437843322754
    6. 't' → logprob: -6.913437843322754
    7. 'cost' → logprob: -7.163437843322754
    8. 'p' → logprob: -7.163437843322754
    9. 'r' → logprob: -7.913437843322754
    10. 'b' → logprob: -8.538437843322754

Token 117: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3487950563430786
    2. ' =' → logprob: -1.2237950563430786
    3. ',' → logprob: -7.973794937133789
    4. '=sys' → logprob: -13.098794937133789
    5. ')' → logprob: -13.473794937133789
    6. ')=' → logprob: -14.598794937133789
    7. '=int' → logprob: -14.598794937133789
    8. ' ' → logprob: -14.723794937133789
    9. '=input' → logprob: -15.473794937133789
    10. '=line' → logprob: -15.598794937133789

Token 118: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.07889959216117859
    2. 'map' → logprob: -2.578899621963501
    3. '    ' → logprob: -12.578899383544922
    4. '	map' → logprob: -13.078899383544922
    5. '   ' → logprob: -13.328899383544922
    6. ' ' → logprob: -14.078899383544922
    7. 'm' → logprob: -14.078899383544922
    8. ' sys' → logprob: -15.078899383544922
    9. '  ' → logprob: -15.953899383544922
    10. ' m' → logprob: -15.953899383544922

Token 119: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -3.583550642360933e-05
    2. '(' → logprob: -10.500036239624023
    3. '<int' → logprob: -12.750036239624023
    4. 'int' → logprob: -13.250036239624023
    5. '=int' → logprob: -13.625036239624023
    6. '(str' → logprob: -14.125036239624023
    7. '[int' → logprob: -14.375036239624023
    8. ',int' → logprob: -15.125036239624023
    9. '(in' → logprob: -15.750036239624023
    10. ']int' → logprob: -15.750036239624023

Token 120: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003980923909693956
    2. '(sys' → logprob: -5.753981113433838
    3. '(' → logprob: -8.37898063659668
    4. ',int' → logprob: -8.50398063659668
    5. ',input' → logprob: -9.37898063659668
    6. 'sys' → logprob: -9.50398063659668
    7. ',System' → logprob: -9.87898063659668
    8. '=sys' → logprob: -10.25398063659668
    9. ' ,' → logprob: -11.00398063659668
    10. ')' → logprob: -11.12898063659668

Token 121: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.07889606058597565
    2. ' sys' → logprob: -2.5788960456848145
    3. ')' → logprob: -13.078896522521973
    4. '=sys' → logprob: -13.203896522521973
    5. '	sys' → logprob: -13.578896522521973
    6. '(sys' → logprob: -13.828896522521973
    7. '```' → logprob: -16.953895568847656
    8. ' ' → logprob: -17.953895568847656
    9. '_sys' → logprob: -17.953895568847656
    10. ' )' → logprob: -18.203895568847656

Token 122: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0017449157312512398
    2. '.readline' → logprob: -6.501744747161865
    3. 'stdin' → logprob: -8.501745223999023
    4. '=sys' → logprob: -10.876745223999023
    5. '.stdout' → logprob: -11.751745223999023
    6. '.' → logprob: -12.751745223999023
    7. 'sys' → logprob: -12.876745223999023
    8. '(stdin' → logprob: -13.126745223999023
    9. '.std' → logprob: -13.251745223999023
    10. '.argv' → logprob: -13.751745223999023

Token 123: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -5.1093578804284334e-05
    2. 'sys' → logprob: -10.250051498413086
    3. 'read' → logprob: -12.125051498413086
    4. '.readlines' → logprob: -12.625051498413086
    5. '().' → logprob: -13.750051498413086
    6. ')' → logprob: -13.875051498413086
    7. '=sys' → logprob: -13.875051498413086
    8. '```' → logprob: -14.375051498413086
    9. '.' → logprob: -14.500051498413086
    10. 'stdin' → logprob: -14.500051498413086

Token 124: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0004961982485838234
    2. '()' → logprob: -7.6254963874816895
    3. '())' → logprob: -11.875495910644531
    4. ' ().' → logprob: -14.750495910644531
    5. '()
' → logprob: -14.875495910644531
    6. ')' → logprob: -15.375495910644531
    7. '(' → logprob: -15.625495910644531
    8. '   ' → logprob: -17.37549591064453
    9. '()

' → logprob: -17.87549591064453
    10. '().
' → logprob: -18.00049591064453

Token 125: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.935296834039036e-06
    2. 'strip' → logprob: -13.25000286102295
    3. ' split' → logprob: -14.00000286102295
    4. 'rstrip' → logprob: -16.250003814697266
    5. '(split' → logprob: -16.250003814697266
    6. 'spl' → logprob: -18.250003814697266
    7. ')' → logprob: -19.625003814697266
    8. '.split' → logprob: -20.000003814697266
    9. ' ' → logprob: -20.375003814697266
    10. 'plit' → logprob: -20.875003814697266

Token 126: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006386925233528018
    2. '):' → logprob: -7.375638484954834
    3. ')
' → logprob: -12.125638961791992
    4. '())' → logprob: -12.750638961791992
    5. '):
' → logprob: -13.250638961791992
    6. '()' → logprob: -13.875638961791992
    7. '),' → logprob: -15.375638961791992
    8. ' )' → logprob: -15.500638961791992
    9. '))' → logprob: -15.750638961791992
    10. ')`' → logprob: -15.750638961791992

Token 127: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6913986206054688
    2. '<|end|>' → logprob: -0.8163986206054688
    3. 'edges' → logprob: -3.8163986206054688
    4. ' edges' → logprob: -4.066398620605469
    5. ')' → logprob: -5.066398620605469
    6. '<|end|>' → logprob: -5.566398620605469
    7. ' ' → logprob: -6.441398620605469
    8. '
' → logprob: -6.566398620605469
    9. ' 
' → logprob: -6.816398620605469
    10. '(edges' → logprob: -6.941398620605469

Token 128: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.7000213861465454
    2. 'edges' (adapté à ' edges') → logprob: -1.0750213861465454
    3. '<|end|>' → logprob: -2.700021266937256
    4. '   ' → logprob: -2.950021266937256
    5. '       ' → logprob: -3.450021266937256
    6. '(edges' → logprob: -5.825021266937256
    7. '_edges' → logprob: -6.575021266937256
    8. '.edges' → logprob: -6.825021266937256
    9. 'graph' → logprob: -7.075021266937256
    10. ')' → logprob: -7.200021266937256

Token 129: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0007206532754935324
    2. '.' → logprob: -7.250720500946045
    3. '.app' → logprob: -12.000720977783203
    4. '.ap' → logprob: -13.500720977783203
    5. '.extend' → logprob: -13.625720977783203
    6. '.setdefault' → logprob: -14.250720977783203
    7. 'append' → logprob: -14.875720977783203
    8. '.push' → logprob: -15.250720977783203
    9. '.Append' → logprob: -15.375720977783203
    10. ').' → logprob: -15.750720977783203

Token 130: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0007142199319787323
    2. '(' → logprob: -7.250714302062988
    3. '(x' → logprob: -12.375714302062988
    4. '([' → logprob: -16.750713348388672
    5. ' ((' → logprob: -17.250713348388672
    6. '(
' → logprob: -17.750713348388672
    7. '(((' → logprob: -18.125713348388672
    8. '(('' → logprob: -18.750713348388672
    9. ' (' → logprob: -19.375713348388672
    10. '(("' → logprob: -19.875713348388672

Token 131: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.000627014203928411
    2. ' x' → logprob: -7.375627040863037
    3. '(x' → logprob: -15.750626564025879
    4. ')x' → logprob: -16.125627517700195
    5. '   ' → logprob: -16.750627517700195
    6. ')' → logprob: -16.750627517700195
    7. ',' → logprob: -17.250627517700195
    8. ',x' → logprob: -17.500627517700195
    9. '	x' → logprob: -17.875627517700195
    10. ' ' → logprob: -18.000627517700195

Token 132: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1818552315235138
    2. ',' → logprob: -2.0568552017211914
    3. ' -' → logprob: -3.3068552017211914
    4. ' ,' → logprob: -7.056855201721191
    5. ',y' → logprob: -7.181855201721191
    6. '-,' → logprob: -9.431855201721191
    7. ',c' → logprob: -11.056855201721191
    8. ' ' → logprob: -11.306855201721191
    9. ',x' → logprob: -11.556855201721191
    10. '1' → logprob: -11.681855201721191

Token 133: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3132927417755127
    2. ' y' → logprob: -1.3132927417755127
    3. '1' → logprob: -11.188292503356934
    4. '<|end|>' → logprob: -11.938292503356934
    5. ' ' → logprob: -13.188292503356934
    6. ',y' → logprob: -13.438292503356934
    7. '	y' → logprob: -13.563292503356934
    8. ',' → logprob: -13.688292503356934
    9. ')y' → logprob: -13.813292503356934
    10. 'x' → logprob: -14.188292503356934

Token 134: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.9424725148128346e-05
    2. ' ,' → logprob: -10.500049591064453
    3. ')' → logprob: -11.250049591064453
    4. ',c' → logprob: -11.875049591064453
    5. ',
' → logprob: -14.250049591064453
    6. ',)' → logprob: -14.375049591064453
    7. '),' → logprob: -15.375049591064453
    8. 'c' → logprob: -16.000049591064453
    9. '‌,' → logprob: -16.875049591064453
    10. '))' → logprob: -16.875049591064453

Token 135: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.693181574344635
    2. ' c' → logprob: -0.693181574344635
    3. ' ' → logprob: -11.568181991577148
    4. ')c' → logprob: -11.568181991577148
    5. ' ' → logprob: -12.943181991577148
    6. '
' → logprob: -12.943181991577148
    7. ' 
' → logprob: -13.068181991577148
    8. '	c' → logprob: -13.318181991577148
    9. ')' → logprob: -13.318181991577148
    10. '1' → logprob: -13.943181991577148

Token 136: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.12713147699832916
    2. ')' → logprob: -2.127131462097168
    3. ',' → logprob: -9.002131462097168
    4. '))
' → logprob: -9.877131462097168
    5. '),' → logprob: -11.627131462097168
    6. ')
' → logprob: -11.877131462097168
    7. ' ))' → logprob: -12.002131462097168
    8. ')))' → logprob: -12.752131462097168
    9. ' )' → logprob: -13.752131462097168
    10. '));' → logprob: -14.252131462097168

Token 137: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 138: ' total' (ID: 3609)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.24023479223251343
    2. ' graph' → logprob: -2.115234851837158
    3. '   ' → logprob: -2.490234851837158
    4. 'total' (adapté à ' total') → logprob: -5.740234851837158
    5. 'if' → logprob: -6.365234851837158
    6. '	graph' → logprob: -6.490234851837158
    7. '       ' → logprob: -6.740234851837158
    8. ' if' → logprob: -6.740234851837158
    9. ' total' → logprob: -7.240234851837158
    10. '
' → logprob: -8.990234375

Token 139: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5794849991798401
    2. '+=' → logprob: -0.8294849991798401
    3. '+' → logprob: -5.829484939575195
    4. ' -=' → logprob: -7.829484939575195
    5. '-=' → logprob: -9.829484939575195
    6. ']+=' → logprob: -9.829484939575195
    7. ' +' → logprob: -10.704484939575195
    8. '[' → logprob: -10.704484939575195
    9. '+=(' → logprob: -10.829484939575195
    10. '=' → logprob: -11.579484939575195

Token 140: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.06996044516563416
    2. ' c' → logprob: -2.694960355758667
    3. '1' → logprob: -10.944960594177246
    4. ' ' → logprob: -12.819960594177246
    5. '-' → logprob: -14.319960594177246
    6. '	c' → logprob: -14.569960594177246
    7. '10' → logprob: -14.944960594177246
    8. ' ' → logprob: -15.007460594177246
    9. '_c' → logprob: -15.194960594177246
    10. ' -' → logprob: -15.194960594177246

Token 141: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3132099211215973
    2. '<|end|>' → logprob: -1.688209891319275
    3. '   ' → logprob: -2.5632100105285645
    4. '    
' → logprob: -6.4382100105285645
    5. '<|end|>' → logprob: -6.6882100105285645
    6. ' graph' → logprob: -7.3132100105285645
    7. '  
' → logprob: -7.4382100105285645
    8. 'graph' → logprob: -7.6882100105285645
    9. ' 
' → logprob: -7.6882100105285645
    10. '
' → logprob: -8.188209533691406

Token 142: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3777795732021332
    2. '
' → logprob: -2.377779483795166
    3. '<|end|>' → logprob: -2.627779483795166
    4. 'graph' → logprob: -2.752779483795166
    5. ' graph' → logprob: -3.002779483795166
    6. ' for' → logprob: -4.377779483795166
    7. 'for' → logprob: -4.377779483795166
    8. '	graph' → logprob: -5.252779483795166
    9. '    
' → logprob: -6.877779483795166
    10. '<|end|>' → logprob: -7.252779483795166

Token 143: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.22825531661510468
    2. ' graph' → logprob: -1.853255271911621
    3. '   ' → logprob: -3.103255271911621
    4. '	graph' → logprob: -6.103255271911621
    5. ' if' → logprob: -9.728255271911621
    6. 'if' → logprob: -9.978255271911621
    7. '       ' → logprob: -10.103255271911621
    8. '   ' → logprob: -11.478255271911621
    9. '<|end|>' → logprob: -11.478255271911621
    10. '    ' → logprob: -11.853255271911621

Token 144: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -1.8312570318812504e-05
    2. '[' → logprob: -11.000018119812012
    3. '[y' → logprob: -14.375018119812012
    4. ' [' → logprob: -15.375018119812012
    5. '[u' → logprob: -15.375018119812012
    6. '[s' → logprob: -15.875018119812012
    7. '[v' → logprob: -16.000019073486328
    8. '[c' → logprob: -16.500019073486328
    9. 'x' → logprob: -16.750019073486328
    10. '```' → logprob: -17.375019073486328

Token 145: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -5.574251918005757e-05
    2. ']' → logprob: -9.875055313110352
    3. ' ].' → logprob: -13.000055313110352
    4. '][' → logprob: -13.500055313110352
    5. '[' → logprob: -15.375055313110352
    6. '.append' → logprob: -16.50005531311035
    7. ').' → logprob: -16.62505531311035
    8. '[x' → logprob: -16.75005531311035
    9. ']
' → logprob: -17.37505531311035
    10. '.' → logprob: -17.50005531311035

Token 146: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.3856492842023727e-06
    2. 'appen' → logprob: -14.500000953674316
    3. '.append' → logprob: -14.750000953674316
    4. ' append' → logprob: -15.000000953674316
    5. '	append' → logprob: -16.500001907348633
    6. ' ' → logprob: -18.250001907348633
    7. '```' → logprob: -18.375001907348633
    8. 'app' → logprob: -18.500001907348633
    9. 'push' → logprob: -19.250001907348633
    10. '_append' → logprob: -19.250001907348633

Token 147: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.006852835416793823
    2. '((' → logprob: -5.006852626800537
    3. 'y' → logprob: -9.381853103637695
    4. '(' → logprob: -9.881853103637695
    5. '(v' → logprob: -14.006853103637695
    6. ' (' → logprob: -14.631853103637695
    7. '(
' → logprob: -15.131853103637695
    8. ' y' → logprob: -15.881853103637695
    9. '(x' → logprob: -16.256853103637695
    10. ',y' → logprob: -17.506853103637695

Token 148: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.599403423024341e-05
    2. ')
' → logprob: -9.875065803527832
    3. ' )' → logprob: -11.375065803527832
    4. '<|end|>' → logprob: -13.250065803527832
    5. '   ' → logprob: -14.750065803527832
    6. '[' → logprob: -15.500065803527832
    7. '),' → logprob: -15.625065803527832
    8. ')

' → logprob: -16.12506675720215
    9. ')#' → logprob: -16.75006675720215
    10. ',' → logprob: -16.87506675720215

Token 149: '       ' (ID: 309)
  Prédit: ' red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' red' → logprob: -0.9508703947067261
    2. '   ' → logprob: -1.200870394706726
    3. 'red' → logprob: -1.450870394706726
    4. '       ' → logprob: -2.5758705139160156
    5. '<|end|>' → logprob: -6.700870513916016
    6. '
' → logprob: -8.575870513916016
    7. '(red' → logprob: -8.700870513916016
    8. '           ' → logprob: -9.450870513916016
    9. ' ' → logprob: -9.450870513916016
    10. '.red' → logprob: -9.700870513916016

Token 150: ' red' (ID: 3592)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' (adapté à ' red') → logprob: -0.0004996551433578134
    2. ' red' → logprob: -8.000499725341797
    3. 'graph' → logprob: -8.875499725341797
    4. '   ' → logprob: -11.500499725341797
    5. 'r' → logprob: -12.250499725341797
    6. '       ' → logprob: -14.250499725341797
    7. '(red' → logprob: -14.250499725341797
    8. 'if' → logprob: -14.437999725341797
    9. '#' → logprob: -14.500499725341797
    10. ' ' → logprob: -14.875499725341797

Token 151: 'ges' (ID: 4431)
  Prédit: 'ges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ges' → logprob: -0.14569300413131714
    2. 'edges' → logprob: -2.145693063735962
    3. 'd' → logprob: -4.145692825317383
    4. 'graph' → logprob: -6.270692825317383
    5. ' edges' → logprob: -8.020692825317383
    6. 'g' → logprob: -9.020692825317383
    7. 'dge' → logprob: -9.020692825317383
    8. 's' → logprob: -9.645692825317383
    9. '_edges' → logprob: -9.645692825317383
    10. 'graphs' → logprob: -10.020692825317383

Token 152: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -4.334533878136426e-05
    2. '[' → logprob: -10.500042915344238
    3. '[x' → logprob: -11.625042915344238
    4. '[c' → logprob: -12.500042915344238
    5. 'y' → logprob: -13.625042915344238
    6. ' [' → logprob: -14.375042915344238
    7. '[v' → logprob: -14.875042915344238
    8. '[u' → logprob: -15.125042915344238
    9. '(y' → logprob: -16.125043869018555
    10. '[s' → logprob: -16.250043869018555

Token 153: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0046866838820278645
    2. '.append' → logprob: -5.5046868324279785
    3. ').' → logprob: -7.5046868324279785
    4. '.' → logprob: -10.37968635559082
    5. ']' → logprob: -10.87968635559082
    6. ' ].' → logprob: -12.62968635559082
    7. ' .' → logprob: -13.62968635559082
    8. '}.' → logprob: -14.25468635559082
    9. ')' → logprob: -14.25468635559082
    10. ''].' → logprob: -14.75468635559082

Token 154: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -2.339278580620885e-06
    2. '.append' → logprob: -13.500001907348633
    3. ' append' → logprob: -14.750001907348633
    4. 'appen' → logprob: -14.875001907348633
    5. '	append' → logprob: -15.750001907348633
    6. 'app' → logprob: -16.875001907348633
    7. '_append' → logprob: -17.750001907348633
    8. 'Append' → logprob: -17.875001907348633
    9. 'pp' → logprob: -19.125001907348633
    10. 'add' → logprob: -19.250001907348633

Token 155: '(x' (ID: 4061)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00034595211036503315
    2. '(x' → logprob: -8.000346183776855
    3. ' x' → logprob: -11.500346183776855
    4. '(' → logprob: -14.875346183776855
    5. '	x' → logprob: -17.75034523010254
    6. ')x' → logprob: -18.12534523010254
    7. '<|end|>' → logprob: -18.87534523010254
    8. ' (' → logprob: -19.62534523010254
    9. '{x' → logprob: -19.75034523010254
    10. '[x' → logprob: -20.75034523010254

Token 156: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3306015716807451e-05
    2. ' )' → logprob: -11.62501335144043
    3. ')
' → logprob: -13.12501335144043
    4. '<|end|>' → logprob: -13.25001335144043
    5. '#' → logprob: -15.62501335144043
    6. '   ' → logprob: -16.50001335144043
    7. '       ' → logprob: -16.62501335144043
    8. '))' → logprob: -17.50001335144043
    9. '```' → logprob: -17.62501335144043
    10. ')

' → logprob: -17.62501335144043

Token 157: '   ' (ID: 271)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.027658861130475998
    2. '   ' → logprob: -3.6526589393615723
    3. '
' → logprob: -7.277658939361572
    4. ' visited' → logprob: -7.902658939361572
    5. '    
' → logprob: -9.027658462524414
    6. '```' → logprob: -9.527658462524414
    7. '<|end|>' → logprob: -9.902658462524414
    8. ' 
' → logprob: -10.902658462524414
    9. '  
' → logprob: -11.152658462524414
    10. '   
' → logprob: -12.402658462524414

Token 158: ' #' (ID: 1069)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.056734923273324966
    2. 'dist' → logprob: -4.306735038757324
    3. '   ' → logprob: -4.806735038757324
    4. 'parent' → logprob: -4.806735038757324
    5. 'low' → logprob: -5.431735038757324
    6. 'cut' → logprob: -5.556735038757324
    7. 'def' → logprob: -6.056735038757324
    8. 'dp' → logprob: -6.306735038757324
    9. 'used' → logprob: -6.806735038757324
    10. '#' (adapté à ' #') → logprob: -7.306735038757324

Token 159: ' Build' (ID: 10885)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -1.1781107187271118
    2. 'visited' → logprob: -1.1781107187271118
    3. ' stack' → logprob: -2.4281105995178223
    4. 'import' → logprob: -2.9281105995178223
    5. ' visited' → logprob: -3.0531105995178223
    6. 'def' → logprob: -3.1781105995178223
    7. 'dist' → logprob: -3.5531105995178223
    8. 'from' → logprob: -4.053110599517822
    9. '#' → logprob: -4.053110599517822
    10. 'order' → logprob: -4.803110599517822

Token 160: ' residual' (ID: 54782)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.4942454099655151
    2. 'adj' → logprob: -1.4942454099655151
    3. 'graph' → logprob: -2.1192455291748047
    4. 'stack' → logprob: -2.1192455291748047
    5. 'dist' → logprob: -2.7442455291748047
    6. 'parent' → logprob: -3.3692455291748047
    7. 'order' → logprob: -3.6192455291748047
    8. 'dp' → logprob: -3.8692455291748047
    9. ' visited' → logprob: -4.244245529174805
    10. ' graph' → logprob: -4.494245529174805

Token 161: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.23799456655979156
    2. 'graph' → logprob: -1.9879945516586304
    3. '_graph' → logprob: -2.86299467086792
    4. ' network' → logprob: -4.86299467086792
    5. '_network' → logprob: -5.36299467086792
    6. 'network' → logprob: -6.86299467086792
    7. '_' → logprob: -6.98799467086792
    8. ' ' → logprob: -7.23799467086792
    9. '	graph' → logprob: -7.61299467086792
    10. '<|end|>' → logprob: -7.61299467086792

Token 162: ' for' (ID: 395)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 163: ' min' (ID: 1349)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.0135270357131958
    2. 'max' → logprob: -1.0135270357131958
    3. 'min' → logprob: -3.0135269165039062
    4. 'din' → logprob: -3.2635269165039062
    5. 'flow' → logprob: -3.5135269165039062
    6. 'maximum' → logprob: -3.6385269165039062
    7. ' flow' → logprob: -3.7635269165039062
    8. 'minimum' → logprob: -3.8885269165039062
    9. 'Din' → logprob: -4.013526916503906
    10. 'the' → logprob: -4.263526916503906

Token 164: ' cut' (ID: 6092)
  Prédit: 'cut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cut' → logprob: -1.2643914222717285
    2. 'cost' → logprob: -1.2643914222717285
    3. ' cut' → logprob: -1.3893914222717285
    4. ' cost' → logprob: -2.2643914222717285
    5. 'imum' → logprob: -3.7643914222717285
    6. '_cut' → logprob: -4.2643914222717285
    7. ' ' → logprob: -4.3893914222717285
    8. '-cost' → logprob: -4.6393914222717285
    9. '-cut' → logprob: -5.0143914222717285
    10. '_cost' → logprob: -5.7643914222717285

Token 165: '
' (ID: 198)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.5335036516189575
    2. 'cut' → logprob: -1.5335036516189575
    3. 'capacity' → logprob: -2.033503532409668
    4. '   ' → logprob: -2.658503532409668
    5. 'visited' → logprob: -2.658503532409668
    6. 'graph' → logprob: -3.033503532409668
    7. 'capac' → logprob: -3.283503532409668
    8. '<|end|>' → logprob: -3.783503532409668
    9. ')' → logprob: -3.908503532409668
    10. '#' → logprob: -3.908503532409668

Token 166: '   ' (ID: 271)
  Prédit: 'capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'capacity' → logprob: -0.9643930792808533
    2. 'visited' → logprob: -1.089393138885498
    3. 'capac' → logprob: -2.214393138885498
    4. 'from' → logprob: -2.339393138885498
    5. '
' → logprob: -4.214393138885498
    6. '#' → logprob: -4.214393138885498
    7. 'import' → logprob: -4.214393138885498
    8. '   ' → logprob: -5.214393138885498
    9. '<|end|>' → logprob: -5.214393138885498
    10. ' visited' → logprob: -5.714393138885498

Token 167: ' #' (ID: 1069)
  Prédit: 'capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'capacity' → logprob: -0.24262692034244537
    2. 'visited' → logprob: -2.367626905441284
    3. 'from' → logprob: -2.992626905441284
    4. 'capac' → logprob: -3.367626905441284
    5. 'cap' → logprob: -4.242627143859863
    6. 'graph' → logprob: -4.992627143859863
    7. 'import' → logprob: -5.367627143859863
    8. 'parent' → logprob: -5.492627143859863
    9. '#' (adapté à ' #') → logprob: -6.242627143859863
    10. '   ' → logprob: -7.367627143859863

Token 168: ' We'll' (ID: 46830)
  Prédit: 'capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'capacity' → logprob: -0.43245038390159607
    2. 'from' → logprob: -1.9324504137039185
    3. 'visited' → logprob: -2.182450294494629
    4. 'capac' → logprob: -2.932450294494629
    5. 'cap' → logprob: -4.432450294494629
    6. ' capacity' → logprob: -5.307450294494629
    7. ' visited' → logprob: -5.432450294494629
    8. 'import' → logprob: -5.432450294494629
    9. '#' → logprob: -5.807450294494629
    10. 'graph' → logprob: -5.932450294494629

Token 169: ' find' (ID: 1646)
  Prédit: 'implement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'implement' → logprob: -0.6684263348579407
    2. 'use' → logprob: -1.668426275253296
    3. ' implement' → logprob: -2.418426275253296
    4. ' use' → logprob: -2.918426275253296
    5. 'build' → logprob: -3.293426275253296
    6. 'continue' → logprob: -3.668426275253296
    7. 'add' → logprob: -4.543426513671875
    8. 'need' → logprob: -4.668426513671875
    9. 'define' → logprob: -4.793426513671875
    10. 'apply' → logprob: -5.043426513671875

Token 170: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.1362441778182983
    2. 'the' → logprob: -1.2612441778182983
    3. 's' → logprob: -2.511244297027588
    4. 'min' → logprob: -2.886244297027588
    5. 'max' → logprob: -2.886244297027588
    6. 'minimum' → logprob: -3.386244297027588
    7. ' min' → logprob: -3.511244297027588
    8. 'cut' → logprob: -4.011244297027588
    9. 'strong' → logprob: -4.011244297027588
    10. 'a' → logprob: -4.261244297027588

Token 171: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.1815589666366577
    2. 'minimum' → logprob: -1.3065589666366577
    3. ' min' → logprob: -1.8065589666366577
    4. ' minimum' → logprob: -2.5565590858459473
    5. 'reachable' → logprob: -3.1815590858459473
    6. 'max' → logprob: -3.6815590858459473
    7. ' minimal' → logprob: -3.8065590858459473
    8. 's' → logprob: -3.9315590858459473
    9. 'cut' → logprob: -4.056559085845947
    10. ' max' → logprob: -4.556559085845947

Token 172: ' cut' (ID: 6092)
  Prédit: 'cut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cut' → logprob: -0.25298672914505005
    2. ' cut' → logprob: -2.1279866695404053
    3. '_cut' → logprob: -2.3779866695404053
    4. '-cut' → logprob: -4.752986907958984
    5. '-' → logprob: -6.752986907958984
    6. '_' → logprob: -7.377986907958984
    7. 'st' → logprob: -8.002986907958984
    8. ' s' → logprob: -8.377986907958984
    9. 'c' → logprob: -9.252986907958984
    10. 'cuts' → logprob: -9.252986907958984

Token 173: ' after' (ID: 1934)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.065230131149292
    2. 'def' → logprob: -1.440230131149292
    3. ' from' → logprob: -2.440230131149292
    4. '#' → logprob: -2.565230131149292
    5. 'graph' → logprob: -3.065230131149292
    6. 'capacity' → logprob: -3.315230131149292
    7. ' and' → logprob: -3.690230131149292
    8. ' graph' → logprob: -4.065230369567871
    9. '   ' → logprob: -4.440230369567871
    10. 'import' → logprob: -4.440230369567871

Token 174: ' partition' (ID: 31512)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.7923104763031006
    2. 'max' → logprob: -1.7923104763031006
    3. 'finding' → logprob: -1.9173104763031006
    4. 'def' → logprob: -2.5423104763031006
    5. 'building' → logprob: -2.6673104763031006
    6. ' building' → logprob: -2.7923104763031006
    7. 'running' → logprob: -3.4173104763031006
    8. ' finding' → logprob: -3.5423104763031006
    9. '<|end|>' → logprob: -3.9173104763031006
    10. ' computing' → logprob: -3.9173104763031006

Token 175: 'ing' (ID: 289)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 176: ' rooms' (ID: 11348)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.27465301752090454
    2. '   ' → logprob: -3.5246529579162598
    3. 'dist' → logprob: -3.5246529579162598
    4. 'def' → logprob: -3.5246529579162598
    5. '#' → logprob: -3.6496529579162598
    6. 'import' → logprob: -4.14965295791626
    7. 'from' → logprob: -4.27465295791626
    8. ' visited' → logprob: -4.39965295791626
    9. '<|end|>' → logprob: -4.39965295791626
    10. 'color' → logprob: -4.52465295791626

Token 177: ' from' (ID: 591)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 178: ' ' (ID: 220)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.0947816371917725
    2. 'source' → logprob: -1.9697816371917725
    3. ' source' → logprob: -2.0947816371917725
    4. ' the' → logprob: -2.2197816371917725
    5. 's' → logprob: -3.0947816371917725
    6. 'edges' → logprob: -3.9697816371917725
    7. 'entr' → logprob: -4.344781875610352
    8. ' ' → logprob: -4.594781875610352
    9. 'red' → logprob: -4.594781875610352
    10. '0' → logprob: -4.594781875610352

Token 179: '0' (ID: 15)
  Prédit: 'entr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entr' → logprob: -1.3297947645187378
    2. 'the' → logprob: -1.4547947645187378
    3. 'source' → logprob: -1.5797947645187378
    4. '0' → logprob: -2.4547948837280273
    5. 's' → logprob: -3.5797948837280273
    6. 'room' → logprob: -3.9547948837280273
    7. 'safe' → logprob: -4.079794883728027
    8. 'outside' → logprob: -4.079794883728027
    9. 'S' → logprob: -4.329794883728027
    10. 'server' → logprob: -4.829794883728027

Token 180: ' side' (ID: 4307)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.18179184198379517
    2. 'to' → logprob: -2.0567917823791504
    3. '<|end|>' → logprob: -4.05679178237915
    4. ',' → logprob: -5.30679178237915
    5. ' and' → logprob: -5.30679178237915
    6. 'and' → logprob: -5.93179178237915
    7. ')' → logprob: -5.93179178237915
    8. '.' → logprob: -6.18179178237915
    9. '0' → logprob: -6.80679178237915
    10. ' through' → logprob: -7.18179178237915

Token 181: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6248942613601685
    2. '<|end|>' → logprob: -0.8748942613601685
    3. '
' → logprob: -4.874894142150879
    4. '#' → logprob: -4.874894142150879
    5. 'visited' → logprob: -4.874894142150879
    6. '.' → logprob: -6.124894142150879
    7. 'from' → logprob: -6.124894142150879
    8. 'def' → logprob: -6.249894142150879
    9. ',' → logprob: -6.374894142150879
    10. '<|end|>' → logprob: -6.499894142150879

Token 182: '   ' (ID: 271)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.06620357930660248
    2. ' visited' → logprob: -3.6912035942077637
    3. '   ' → logprob: -3.8162035942077637
    4. '<|end|>' → logprob: -4.816203594207764
    5. '
' → logprob: -4.941203594207764
    6. ' 
' → logprob: -7.316203594207764
    7. '    
' → logprob: -7.941203594207764
    8. ' ' → logprob: -8.191203117370605
    9. '  
' → logprob: -8.816203117370605
    10. '    ' → logprob: -9.316203117370605

Token 183: ' #' (ID: 1069)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.008952532894909382
    2. '<|end|>' → logprob: -6.133952617645264
    3. 'from' → logprob: -6.508952617645264
    4. ' visited' → logprob: -6.758952617645264
    5. 'graph' → logprob: -6.883952617645264
    6. '   ' → logprob: -7.133952617645264
    7. 'cut' → logprob: -7.633952617645264
    8. 'import' → logprob: -7.883952617645264
    9. 'capac' → logprob: -8.008952140808105
    10. '#' (adapté à ' #') → logprob: -8.633952140808105

Token 184: ' Use' (ID: 7649)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.011030375026166439
    2. 'from' → logprob: -5.761030197143555
    3. 'graph' → logprob: -6.511030197143555
    4. 'parent' → logprob: -6.511030197143555
    5. '#' → logprob: -6.761030197143555
    6. ' visited' → logprob: -6.761030197143555
    7. 'import' → logprob: -6.761030197143555
    8. 'def' → logprob: -7.761030197143555
    9. 'capacity' → logprob: -8.011030197143555
    10. '   ' → logprob: -9.011030197143555

Token 185: ' Din' (ID: 40542)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.4030078649520874
    2. ' visited' → logprob: -1.6530078649520874
    3. ' max' → logprob: -2.403007984161377
    4. 'tar' → logprob: -2.403007984161377
    5. 'Tar' → logprob: -2.403007984161377
    6. 'max' → logprob: -3.028007984161377
    7. ' Tar' → logprob: -3.278007984161377
    8. 'Din' → logprob: -3.278007984161377
    9. ' Din' → logprob: -3.403007984161377
    10. 'din' → logprob: -4.028007984161377

Token 186: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.1502278596162796
    2. '```' → logprob: -3.2752277851104736
    3. 'amic' → logprob: -3.4002277851104736
    4. 'a' → logprob: -3.6502277851104736
    5. 'am' → logprob: -3.9002277851104736
    6. 'amics' → logprob: -5.275228023529053
    7. 'j' → logprob: -6.025228023529053
    8. '#' → logprob: -6.150228023529053
    9. 'i' → logprob: -6.525228023529053
    10. ' a' → logprob: -7.150228023529053

Token 187: ' or' (ID: 503)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7226594686508179
    2. '(' → logprob: -1.0976594686508179
    3. '<|end|>' → logprob: -2.5976595878601074
    4. 'def' → logprob: -3.4726595878601074
    5. '(
' → logprob: -3.8476595878601074
    6. '   ' → logprob: -4.722659587860107
    7. ')' → logprob: -4.847659587860107
    8. '<|end|>' → logprob: -4.972659587860107
    9. ':' → logprob: -5.097659587860107
    10. ',' → logprob: -5.597659587860107

Token 188: ' BFS' (ID: 190016)
  Prédit: 'Ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ed' → logprob: -0.39404523372650146
    2. 'B' → logprob: -2.269045352935791
    3. ' Edmond' → logprob: -2.394045352935791
    4. 'Ford' → logprob: -3.519045352935791
    5. 'K' → logprob: -3.769045352935791
    6. ' bfs' → logprob: -4.269045352935791
    7. ' BFS' → logprob: -4.394045352935791
    8. 'ed' → logprob: -4.394045352935791
    9. 'push' → logprob: -4.644045352935791
    10. 'import' → logprob: -4.769045352935791

Token 189: ' for' (ID: 395)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 190: ' min' (ID: 1349)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.09716098010540009
    2. 'max' → logprob: -3.097161054611206
    3. ' level' → logprob: -4.222160816192627
    4. ' flow' → logprob: -4.222160816192627
    5. ' finding' → logprob: -4.847160816192627
    6. 'level' → logprob: -5.722160816192627
    7. ' maximum' → logprob: -6.097160816192627
    8. 'flow' → logprob: -6.597160816192627
    9. 'b' → logprob: -8.222161293029785
    10. ' the' → logprob: -8.222161293029785

Token 191: ' cut' (ID: 6092)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.369702935218811
    2. 'def' → logprob: -1.619702935218811
    3. ' ' → logprob: -1.744702935218811
    4. '<|end|>' → logprob: -1.994702935218811
    5. '    ' → logprob: -2.2447028160095215
    6. 'from' → logprob: -3.4947028160095215
    7. 'import' → logprob: -3.6197028160095215
    8. '  ' → logprob: -3.9947028160095215
    9. ')' → logprob: -4.8697028160095215
    10. ',' → logprob: -4.9947028160095215

Token 192: ';' (ID: 26)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0347703695297241
    2. 'from' → logprob: -1.2847703695297241
    3. '<|end|>' → logprob: -1.6597703695297241
    4. 'def' → logprob: -2.5347704887390137
    5. 'level' → logprob: -3.2847704887390137
    6. ' from' → logprob: -4.784770488739014
    7. '   ' → logprob: -4.909770488739014
    8. 'graph' → logprob: -5.284770488739014
    9. '#' → logprob: -5.409770488739014
    10. 'import' → logprob: -5.659770488739014

Token 193: ' here' (ID: 2105)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.442549228668213
    2. 'from' → logprob: -1.442549228668213
    3. ' from' → logprob: -1.942549228668213
    4. 'import' → logprob: -2.942549228668213
    5. ' visited' → logprob: -3.067549228668213
    6. '<|end|>' → logprob: -3.067549228668213
    7. 'def' → logprob: -3.192549228668213
    8. 'level' → logprob: -3.567549228668213
    9. ' level' → logprob: -3.567549228668213
    10. 'visited' → logprob: -3.942549228668213

Token 194: ' n' (ID: 297)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6935428977012634
    2. ',' → logprob: -1.5685429573059082
    3. 'visited' → logprob: -2.193542957305908
    4. '   ' → logprob: -3.318542957305908
    5. 'import' → logprob: -3.693542957305908
    6. ' visited' → logprob: -3.818542957305908
    7. '<|end|>' → logprob: -4.193542957305908
    8. 'def' → logprob: -4.568542957305908
    9. ':
' → logprob: -5.193542957305908
    10. ' :' → logprob: -5.193542957305908

Token 195: '<=' (ID: 16672)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0751851350069046
    2. ' =' → logprob: -3.4501850605010986
    3. '-' → logprob: -4.700185298919678
    4. ',' → logprob: -5.075185298919678
    5. '   ' → logprob: -5.075185298919678
    6. '>' → logprob: -6.075185298919678
    7. ' is' → logprob: -6.200185298919678
    8. '#' → logprob: -6.325185298919678
    9. ')' → logprob: -6.325185298919678
    10. 'ot' → logprob: -6.700185298919678

Token 196: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.7436795234680176
    2. '20' → logprob: -1.2436795234680176
    3. '10' → logprob: -2.2436795234680176
    4. '200' → logprob: -2.4936795234680176
    5. '500' → logprob: -3.2436795234680176
    6. '400' → logprob: -6.243679523468018
    7. '1' → logprob: -6.493679523468018
    8. '50' → logprob: -6.743679523468018
    9. '0' → logprob: -6.868679523468018
    10. '2' → logprob: -7.368679523468018

Token 197: ' so' (ID: 813)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 198: ' BFS' (ID: 190016)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.10553909093141556
    2. ' dfs' → logprob: -3.730539083480835
    3. 'B' → logprob: -3.980539083480835
    4. 'def' → logprob: -4.230539321899414
    5. 'DFS' → logprob: -4.855539321899414
    6. 'import' → logprob: -4.855539321899414
    7. '   ' → logprob: -5.105539321899414
    8. 'b' → logprob: -5.105539321899414
    9. ' we' → logprob: -5.605539321899414
    10. 'sys' → logprob: -6.355539321899414

Token 199: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 200: ' DFS' (ID: 115767)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.17783240973949432
    2. ' dfs' → logprob: -2.5528323650360107
    3. 'DFS' → logprob: -3.1778323650360107
    4. ' DFS' → logprob: -3.1778323650360107
    5. 'sys' → logprob: -7.05283260345459
    6. ' sys' → logprob: -8.67783260345459
    7. ' flow' → logprob: -8.80283260345459
    8. 'flow' → logprob: -9.55283260345459
    9. ' Edmond' → logprob: -9.67783260345459
    10. '```' → logprob: -10.42783260345459

Token 201: ' is' (ID: 382)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 202: ' OK' (ID: 11339)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3313341438770294
    2. ' sufficient' → logprob: -2.456334114074707
    3. ' feasible' → logprob: -2.706334114074707
    4. 'en' → logprob: -3.456334114074707
    5. ' enough' → logprob: -3.456334114074707
    6. 'fe' → logprob: -3.706334114074707
    7. ' fine' → logprob: -4.456334114074707
    8. ' acceptable' → logprob: -4.956334114074707
    9. 'acceptable' → logprob: -5.081334114074707
    10. 'fine' → logprob: -5.331334114074707

Token 203: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11614769697189331
    2. 'capacity' → logprob: -3.491147756576538
    3. 'from' → logprob: -3.616147756576538
    4. 'graph' → logprob: -4.741147518157959
    5. '<|end|>' → logprob: -4.741147518157959
    6. 'def' → logprob: -4.866147518157959
    7. 'level' → logprob: -4.866147518157959
    8. '    
' → logprob: -4.866147518157959
    9. '
' → logprob: -6.241147518157959
    10. '  
' → logprob: -6.741147518157959

Token 204: '   ' (ID: 271)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6135516166687012
    2. '   ' → logprob: -1.2385516166687012
    3. 'capacity' → logprob: -2.488551616668701
    4. 'level' → logprob: -3.738551616668701
    5. 'def' → logprob: -4.113551616668701
    6. ' from' → logprob: -4.488551616668701
    7. '
' → logprob: -4.488551616668701
    8. '    
' → logprob: -4.988551616668701
    9. 'import' → logprob: -5.238551616668701
    10. 'flow' → logprob: -6.113551616668701

Token 205: ' #' (ID: 1069)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6367345452308655
    2. 'level' → logprob: -0.8867345452308655
    3. 'def' → logprob: -4.136734485626221
    4. 'capacity' → logprob: -4.261734485626221
    5. 'graph' → logprob: -4.511734485626221
    6. '   ' → logprob: -4.761734485626221
    7. ' from' → logprob: -6.261734485626221
    8. 'import' → logprob: -6.636734485626221
    9. 'flow' → logprob: -6.761734485626221
    10. 'dist' → logprob: -7.011734485626221

Token 206: ' But' (ID: 3072)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.2731622457504272
    2. 'visited' → logprob: -1.3981622457504272
    3. 'graph' → logprob: -1.7731622457504272
    4. 'capacity' → logprob: -1.8981622457504272
    5. 'level' → logprob: -2.523162364959717
    6. '   ' → logprob: -3.523162364959717
    7. 'def' → logprob: -3.773162364959717
    8. 'inf' → logprob: -5.523162364959717
    9. 'import' → logprob: -5.648162364959717
    10. ' from' → logprob: -6.273162364959717

Token 207: ' we' (ID: 581)
  Prédit: ' visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.6182489395141602
    2. 'visited' → logprob: -0.9932489395141602
    3. 'import' → logprob: -4.36824893951416
    4. ' graph' → logprob: -4.49324893951416
    5. '    ' → logprob: -4.86824893951416
    6. '<|end|>' → logprob: -5.11824893951416
    7. '#' → logprob: -5.24324893951416
    8. ' #' → logprob: -5.36824893951416
    9. ' the' → logprob: -5.49324893951416
    10. ' import' → logprob: -5.49324893951416

Token 208: ' only' (ID: 1606)
  Prédit: ' need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' need' → logprob: -0.13943225145339966
    2. 'need' → logprob: -2.389432191848755
    3. ' can' → logprob: -4.389432430267334
    4. 'import' → logprob: -6.014432430267334
    5. '   ' → logprob: -6.139432430267334
    6. '    ' → logprob: -6.264432430267334
    7. ''ll' → logprob: -6.264432430267334
    8. ' will' → logprob: -6.389432430267334
    9. ' should' → logprob: -6.389432430267334
    10. ' have' → logprob: -6.389432430267334

Token 209: ' need' (ID: 1309)
  Prédit: 'need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'need' → logprob: -0.07168462127447128
    2. ' need' → logprob: -3.4466845989227295
    3. 'have' → logprob: -3.4466845989227295
    4. 'use' → logprob: -6.446684837341309
    5. 'import' → logprob: -7.196684837341309
    6. ' have' → logprob: -7.196684837341309
    7. 'can' → logprob: -7.946684837341309
    8. 'needed' → logprob: -8.071684837341309
    9. 'def' → logprob: -8.321684837341309
    10. 'used' → logprob: -8.446684837341309

Token 210: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.4524752199649811
    2. 'to' → logprob: -1.2024751901626587
    3. 'the' → logprob: -3.4524753093719482
    4. ' the' → logprob: -3.7024753093719482
    5. ' edges' → logprob: -6.202475070953369
    6. 'max' → logprob: -6.827475070953369
    7. 'edges' → logprob: -7.077475070953369
    8. 'one' → logprob: -7.327475070953369
    9. 'a' → logprob: -7.702475070953369
    10. ' one' → logprob: -8.202475547790527

Token 211: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.4057038724422455
    2. 'print' → logprob: -2.1557037830352783
    3. ' find' → logprob: -2.2807037830352783
    4. 'check' → logprob: -3.5307037830352783
    5. 'import' → logprob: -4.155704021453857
    6. 'dfs' → logprob: -4.155704021453857
    7. 'implement' → logprob: -4.905704021453857
    8. 'build' → logprob: -4.905704021453857
    9. 'det' → logprob: -5.280704021453857
    10. 'calculate' → logprob: -5.655704021453857

Token 212: ' vertices' (ID: 38360)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.7958377599716187
    2. ' the' → logprob: -2.045837879180908
    3. 'which' → logprob: -2.545837879180908
    4. ' edges' → logprob: -2.670837879180908
    5. 'edges' → logprob: -2.795837879180908
    6. 'a' → logprob: -3.420837879180908
    7. 'cut' → logprob: -3.420837879180908
    8. ' which' → logprob: -3.670837879180908
    9. 'min' → logprob: -3.670837879180908
    10. 'max' → logprob: -3.795837879180908

Token 213: ' reachable' (ID: 143580)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.14854097366333
    2. '<|end|>' → logprob: -1.39854097366333
    3. ' that' → logprob: -1.64854097366333
    4. ' s' → logprob: -3.39854097366333
    5. 'visited' → logprob: -3.52354097366333
    6. 's' → logprob: -3.64854097366333
    7. ' visited' → logprob: -4.14854097366333
    8. ' after' → logprob: -4.27354097366333
    9. '   ' → logprob: -4.52354097366333
    10. ',' → logprob: -4.52354097366333

Token 214: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.18482927978038788
    2. ' from' → logprob: -1.8098292350769043
    3. '   ' → logprob: -5.809829235076904
    4. 'in' → logprob: -7.809829235076904
    5. '<|end|>' → logprob: -7.934829235076904
    6. ' in' → logprob: -8.684829711914062
    7. ' ' → logprob: -8.684829711914062
    8. '    ' → logprob: -8.684829711914062
    9. '_from' → logprob: -8.934829711914062
    10. ')' → logprob: -9.059829711914062

Token 215: ' node' (ID: 4596)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.027930617332458496
    2. ' ' → logprob: -3.902930736541748
    3. ' the' → logprob: -5.527930736541748
    4. 'the' → logprob: -6.402930736541748
    5. 'source' → logprob: -7.152930736541748
    6. ' source' → logprob: -7.402930736541748
    7. 's' → logprob: -9.40293025970459
    8. ' s' → logprob: -9.77793025970459
    9. ' zero' → logprob: -10.02793025970459
    10. ' node' → logprob: -10.27793025970459

Token 216: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.026419654488563538
    2. ' ' → logprob: -3.6514196395874023
    3. '   ' → logprob: -10.651419639587402
    4. 's' → logprob: -11.151419639587402
    5. 'u' → logprob: -11.151419639587402
    6. 'from' → logprob: -11.526419639587402
    7. ' u' → logprob: -11.776419639587402
    8. '```' → logprob: -12.026419639587402
    9. ' s' → logprob: -12.151419639587402
    10. ' zero' → logprob: -12.276419639587402

Token 217: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017072015907615423
    2. ' ' → logprob: -6.376707077026367
    3. 'u' → logprob: -14.126707077026367
    4. 's' → logprob: -14.376707077026367
    5. '```' → logprob: -14.376707077026367
    6. '   ' → logprob: -14.751707077026367
    7. '(' → logprob: -14.751707077026367
    8. '[' → logprob: -14.876707077026367
    9. 'from' → logprob: -14.876707077026367
    10. ' 
' → logprob: -15.251707077026367

Token 218: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2747340202331543
    2. 'visited' → logprob: -1.6497340202331543
    3. '
' → logprob: -3.3997340202331543
    4. ' visited' → logprob: -4.774734020233154
    5. '<|end|>' → logprob: -5.774734020233154
    6. '    
' → logprob: -6.274734020233154
    7. ',' → logprob: -7.649734020233154
    8. '  
' → logprob: -8.274734497070312
    9. '  ' → logprob: -9.774734497070312
    10. '.' → logprob: -10.024734497070312

Token 219: ' original' (ID: 4756)
  Prédit: ' residual'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' residual' → logprob: -0.3187592327594757
    2. ' graph' → logprob: -1.8187592029571533
    3. ' the' → logprob: -3.1937592029571533
    4. 'graph' → logprob: -3.6937592029571533
    5. 'res' → logprob: -3.9437592029571533
    6. 'the' → logprob: -3.9437592029571533
    7. 'visited' → logprob: -6.318759441375732
    8. ' visited' → logprob: -7.443759441375732
    9. ' original' → logprob: -7.443759441375732
    10. '   ' → logprob: -8.068758964538574

Token 220: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.44010239839553833
    2. 'graph' → logprob: -1.0651023387908936
    3. '(graph' → logprob: -6.190102577209473
    4. '_graph' → logprob: -6.190102577209473
    5. '   ' → logprob: -6.315102577209473
    6. ' and' → logprob: -6.940102577209473
    7. 'from' → logprob: -7.315102577209473
    8. ' from' → logprob: -7.815102577209473
    9. '	graph' → logprob: -7.815102577209473
    10. 'and' → logprob: -8.065102577209473

Token 221: ' and' (ID: 326)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6799829602241516
    2. '   ' → logprob: -0.9299829602241516
    3. 'visited' → logprob: -2.679982900619507
    4. '<|end|>' → logprob: -4.429983139038086
    5. ' visited' → logprob: -4.804983139038086
    6. '    
' → logprob: -5.304983139038086
    7. '  
' → logprob: -6.554983139038086
    8. ',' → logprob: -6.679983139038086
    9. ',
' → logprob: -7.804983139038086
    10. '   
' → logprob: -8.429983139038086

Token 222: ' reverse' (ID: 18199)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.42924419045448303
    2. ' residual' → logprob: -1.4292441606521606
    3. ' not' → logprob: -3.80424427986145
    4. 'not' → logprob: -3.92924427986145
    5. '   ' → logprob: -4.054244041442871
    6. 'their' → logprob: -5.054244041442871
    7. ' its' → logprob: -5.179244041442871
    8. 'the' → logprob: -5.304244041442871
    9. ' their' → logprob: -5.429244041442871
    10. 'reverse' → logprob: -5.554244041442871

Token 223: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -1.1911382675170898
    2. '
' → logprob: -2.06613826751709
    3. '_graph' → logprob: -2.06613826751709
    4. ' graph' → logprob: -2.19113826751709
    5. '<|end|>' → logprob: -2.56613826751709
    6. 'edges' → logprob: -2.69113826751709
    7. '_edges' → logprob: -2.81613826751709
    8. '   ' → logprob: -4.06613826751709
    9. ' edges' → logprob: -4.06613826751709
    10. '_' → logprob: -4.69113826751709

Token 224: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6365201473236084
    2. '
' → logprob: -1.5115201473236084
    3. 'visited' → logprob: -1.7615201473236084
    4. '<|end|>' → logprob: -3.1365201473236084
    5. ' visited' → logprob: -3.5115201473236084
    6. '    
' → logprob: -6.2615203857421875
    7. ',' → logprob: -6.3865203857421875
    8. ',
' → logprob: -7.8865203857421875
    9. '  
' → logprob: -8.136520385742188
    10. '<|end|>' → logprob: -8.386520385742188

Token 225: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 226: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.08554733544588089
    2. '   ' → logprob: -2.71054744720459
    3. ' visited' → logprob: -4.71054744720459
    4. 'reachable' → logprob: -5.33554744720459
    5. '    
' → logprob: -7.21054744720459
    6. 'from' → logprob: -8.46054744720459
    7. '
' → logprob: -8.58554744720459
    8. '<|end|>' → logprob: -9.21054744720459
    9. ' reachable' → logprob: -9.71054744720459
    10. '  
' → logprob: -9.96054744720459

Token 227: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.054109908640384674
    2. '=' → logprob: -3.054109811782837
    3. '[' → logprob: -5.304110050201416
    4. '[u' → logprob: -8.429109573364258
    5. '=[' → logprob: -9.304109573364258
    6. ' =[' → logprob: -9.304109573364258
    7. '[:]' → logprob: -10.554109573364258
    8. '1' → logprob: -10.929109573364258
    9. '```' → logprob: -11.179109573364258
    10. '_' → logprob: -11.304109573364258

Token 228: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0033317103516310453
    2. '[u' → logprob: -5.753331661224365
    3. '[n' → logprob: -9.128332138061523
    4. '[node' → logprob: -10.753332138061523
    5. '[start' → logprob: -12.128332138061523
    6. '[len' → logprob: -12.253332138061523
    7. ' [' → logprob: -13.003332138061523
    8. '[user' → logprob: -13.128332138061523
    9. '[new' → logprob: -13.378332138061523
    10. '[int' → logprob: -14.128332138061523

Token 229: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -9.877503907773644e-05
    2. ' False' → logprob: -9.250099182128906
    3. '(False' → logprob: -13.500099182128906
    4. '[' → logprob: -14.250099182128906
    5. ']' → logprob: -14.875099182128906
    6. 'True' → logprob: -16.250099182128906
    7. '0' → logprob: -16.750099182128906
    8. 'n' → logprob: -17.125099182128906
    9. ' [' → logprob: -17.750099182128906
    10. '   ' → logprob: -18.625099182128906

Token 230: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005945033393800259
    2. ' for' → logprob: -5.630945205688477
    3. ' ]' → logprob: -6.380945205688477
    4. ']*' → logprob: -8.130945205688477
    5. 'for' → logprob: -8.380945205688477
    6. '(' → logprob: -10.255945205688477
    7. ']
' → logprob: -10.505945205688477
    8. '   ' → logprob: -11.505945205688477
    9. ',' → logprob: -11.505945205688477
    10. ' ' → logprob: -11.630945205688477

Token 231: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.56102097814437e-05
    2. ' n' → logprob: -10.000045776367188
    3. '(n' → logprob: -15.750045776367188
    4. '	n' → logprob: -18.875045776367188
    5. '   ' → logprob: -19.000045776367188
    6. '(' → logprob: -19.125045776367188
    7. ' (' → logprob: -20.625045776367188
    8. ')n' → logprob: -20.750045776367188
    9. '
' → logprob: -21.625045776367188
    10. '_n' → logprob: -21.625045776367188

Token 232: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07356784492731094
    2. '
' → logprob: -3.0735678672790527
    3. 'dfs' → logprob: -4.448567867279053
    4. '<|end|>' → logprob: -4.698567867279053
    5. '    
' → logprob: -6.198567867279053
    6. '  
' → logprob: -7.948567867279053
    7. ' dfs' → logprob: -8.323567390441895
    8. 'for' → logprob: -8.823567390441895
    9. 'd' → logprob: -8.823567390441895
    10. '[' → logprob: -8.948567390441895

Token 233: '   ' (ID: 271)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.03592443838715553
    2. '   ' → logprob: -3.4109244346618652
    3. ' dfs' → logprob: -6.785924434661865
    4. 'def' → logprob: -8.410924911499023
    5. 'queue' → logprob: -8.410924911499023
    6. 'from' → logprob: -8.785924911499023
    7. ' bfs' → logprob: -9.160924911499023
    8. 'b' → logprob: -9.535924911499023
    9. 'visited' → logprob: -9.535924911499023
    10. '
' → logprob: -9.785924911499023

Token 234: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' (adapté à ' dfs') → logprob: -0.000595447258092463
    2. 'from' → logprob: -7.625595569610596
    3. 'def' → logprob: -9.625595092773438
    4. '   ' → logprob: -10.500595092773438
    5. ' dfs' → logprob: -12.000595092773438
    6. 'queue' → logprob: -12.875595092773438
    7. 'df' → logprob: -13.875595092773438
    8. 'b' → logprob: -14.125595092773438
    9. 'stack' → logprob: -14.125595092773438
    10. 'deque' → logprob: -14.375595092773438

Token 235: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.5776860184123507e-06
    2. ' (' → logprob: -13.50000286102295
    3. '0' → logprob: -13.75000286102295
    4. '(
' → logprob: -18.000001907348633
    5. ')(' → logprob: -19.500001907348633
    6. '```' → logprob: -19.750001907348633
    7. '<|end|>' → logprob: -19.875001907348633
    8. '(int' → logprob: -20.000001907348633
    9. '((' → logprob: -20.250001907348633
    10. '[' → logprob: -20.250001907348633

Token 236: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.650518920039758e-06
    2. '(' → logprob: -12.875003814697266
    3. ')' → logprob: -14.625003814697266
    4. ' ' → logprob: -14.750003814697266
    5. '[' → logprob: -16.375003814697266
    6. '   ' → logprob: -18.750003814697266
    7. '
' → logprob: -19.375003814697266
    8. '۰' → logprob: -19.875003814697266
    9. '０' → logprob: -20.125003814697266
    10. '  ' → logprob: -20.562503814697266

Token 237: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0024774393532425165
    2. ')
' → logprob: -6.002477645874023
    3. '   ' → logprob: -13.877477645874023
    4. ')

' → logprob: -15.002477645874023
    5. ' )' → logprob: -15.377477645874023
    6. ')
' → logprob: -16.502477645874023
    7. '),' → logprob: -17.502477645874023
    8. '
' → logprob: -17.627477645874023
    9. '<|end|>' → logprob: -17.877477645874023
    10. '))' → logprob: -18.127477645874023

Token 238: '   ' (ID: 271)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.2601023316383362
    2. '   ' → logprob: -1.5101022720336914
    3. '
' → logprob: -5.135102272033691
    4. ' visited' → logprob: -6.385102272033691
    5. '    
' → logprob: -8.010102272033691
    6. '<|end|>' → logprob: -9.135102272033691
    7. '  
' → logprob: -9.885102272033691
    8. '```' → logprob: -10.260102272033691
    9. '   
' → logprob: -11.760102272033691
    10. '  ' → logprob: -11.885102272033691

Token 239: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.0808502659201622
    2. '   ' → logprob: -2.58085036277771
    3. ' visited' → logprob: -7.205850124359131
    4. 'reachable' → logprob: -7.705850124359131
    5. 'reverse' → logprob: -9.205850601196289
    6. 'v' → logprob: -9.205850601196289
    7. '    
' → logprob: -9.455850601196289
    8. '
' → logprob: -9.830850601196289
    9. 'r' → logprob: -9.955850601196289
    10. '  
' → logprob: -10.080850601196289

Token 240: '_r' (ID: 3442)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 241: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3873355984687805
    2. '=' → logprob: -1.1373355388641357
    3. '[' → logprob: -8.387335777282715
    4. '=[' → logprob: -8.887335777282715
    5. '[:]' → logprob: -10.262335777282715
    6. ' =[' → logprob: -10.637335777282715
    7. 'ed' → logprob: -11.637335777282715
    8. ']' → logprob: -11.762335777282715
    9. '=[]' → logprob: -12.637335777282715
    10. ' ' → logprob: -12.762335777282715

Token 242: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.029751762747764587
    2. ' [' → logprob: -3.529751777648926
    3. 'False' → logprob: -14.154751777648926
    4. '   ' → logprob: -14.779751777648926
    5. ' ' → logprob: -16.15475082397461
    6. ' False' → logprob: -16.90475082397461
    7. ' ' → logprob: -19.40475082397461
    8. '=False' → logprob: -20.15475082397461
    9. '    ' → logprob: -20.27975082397461
    10. '  ' → logprob: -20.40475082397461

Token 243: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -9.088346359931165e-07
    2. ' False' → logprob: -14.000000953674316
    3. '(False' → logprob: -18.75
    4. '=False' → logprob: -20.125
    5. ']' → logprob: -20.375
    6. '.False' → logprob: -20.5
    7. 'True' → logprob: -20.875
    8. '
' → logprob: -21.25
    9. '[' → logprob: -22.25
    10. '_false' → logprob: -22.375

Token 244: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.00019150081789121032
    2. ']' → logprob: -8.625191688537598
    3. '*n' → logprob: -11.500191688537598
    4. ' ]' → logprob: -13.625191688537598
    5. ']*(' → logprob: -15.125191688537598
    6. '*' → logprob: -16.50019073486328
    7. '   ' → logprob: -17.12519073486328
    8. ')*' → logprob: -17.12519073486328
    9. '*r' → logprob: -17.25019073486328
    10. ']
' → logprob: -17.50019073486328

Token 245: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -7.822646693966817e-06
    2. '<|end|>' → logprob: -13.125007629394531
    3. ' n' → logprob: -13.375007629394531
    4. 'm' → logprob: -13.750007629394531
    5. 'import' → logprob: -14.000007629394531
    6. 'len' → logprob: -14.500007629394531
    7. '_n' → logprob: -15.125007629394531
    8. ')n' → logprob: -15.250007629394531
    9. '[n' → logprob: -15.500007629394531
    10. '-n' → logprob: -15.750007629394531

Token 246: '
' (ID: 198)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.44437816739082336
    2. 'def' → logprob: -1.319378137588501
    3. '   ' → logprob: -2.444378137588501
    4. '
' → logprob: -5.94437837600708
    5. '    
' → logprob: -7.19437837600708
    6. ' dfs' → logprob: -7.56937837600708
    7. '(' → logprob: -8.569377899169922
    8. 'd' → logprob: -9.194377899169922
    9. '<|end|>' → logprob: -9.819377899169922
    10. '  
' → logprob: -10.069377899169922

Token 247: '   ' (ID: 271)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.3200934827327728
    2. 'def' → logprob: -1.6950935125350952
    3. '   ' → logprob: -2.4450933933258057
    4. ' dfs' → logprob: -6.570093631744385
    5. '    
' → logprob: -6.945093631744385
    6. '
' → logprob: -7.070093631744385
    7. 'd' → logprob: -9.820093154907227
    8. '```' → logprob: -10.445093154907227
    9. 'df' → logprob: -10.570093154907227
    10. 'DFS' → logprob: -10.570093154907227

Token 248: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.038339585065841675
    2. 'dfs' → logprob: -3.288339614868164
    3. 'from' → logprob: -8.413339614868164
    4. 'import' → logprob: -11.038339614868164
    5. '   ' → logprob: -11.038339614868164
    6. 'sys' → logprob: -11.538339614868164
    7. '
' → logprob: -11.538339614868164
    8. 'df' → logprob: -12.288339614868164
    9. 'for' → logprob: -12.413339614868164
    10. '    
' → logprob: -12.538339614868164

Token 249: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.036361128091812134
    2. ' dfs' → logprob: -3.4113612174987793
    3. 'r' → logprob: -6.786361217498779
    4. 'rev' → logprob: -6.911361217498779
    5. 'reverse' → logprob: -8.286360740661621
    6. 'df' → logprob: -9.036360740661621
    7. 'def' → logprob: -9.161360740661621
    8. 'red' → logprob: -10.911360740661621
    9. ' reverse' → logprob: -11.036360740661621
    10. ' rev' → logprob: -11.411360740661621

Token 250: '_r' (ID: 3442)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.5342131853103638
    2. '(' → logprob: -1.7842131853103638
    3. '(u' → logprob: -1.7842131853103638
    4. '_r' → logprob: -3.409213066101074
    5. 'dfs' → logprob: -3.909213066101074
    6. 'def' → logprob: -4.409213066101074
    7. 'r' → logprob: -5.159213066101074
    8. '(r' → logprob: -6.034213066101074
    9. '   ' → logprob: -6.784213066101074
    10. ' (' → logprob: -7.409213066101074

Token 251: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.05132588371634483
    2. '(v' → logprob: -3.051325798034668
    3. '(r' → logprob: -6.301325798034668
    4. '(y' → logprob: -7.551325798034668
    5. '(' → logprob: -9.051325798034668
    6. '(x' → logprob: -9.051325798034668
    7. ' (' → logprob: -9.301325798034668
    8. '(node' → logprob: -11.551325798034668
    9. '(red' → logprob: -11.551325798034668
    10. '(s' → logprob: -12.051325798034668

Token 252: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.31337323784828186
    2. '):' → logprob: -1.3133732080459595
    3. '   ' → logprob: -9.813373565673828
    4. '):
' → logprob: -10.063373565673828
    5. ')' → logprob: -11.438373565673828
    6. '):

' → logprob: -13.438373565673828
    7. ':' → logprob: -14.063373565673828
    8. ' ):
' → logprob: -15.063373565673828
    9. ' ' → logprob: -15.313373565673828
    10. ' ):' → logprob: -15.813373565673828

Token 253: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013357169227674603
    2. '       ' → logprob: -6.751335620880127
    3. 'visited' → logprob: -8.876336097717285
    4. ' visited' → logprob: -10.626336097717285
    5. '    ' → logprob: -14.751336097717285
    6. '   ' → logprob: -15.251336097717285
    7. '           ' → logprob: -15.376336097717285
    8. '	' → logprob: -15.501336097717285
    9. '  ' → logprob: -15.876336097717285
    10. '     ' → logprob: -16.00133514404297

Token 254: ' visited' (ID: 18416)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3935438394546509
    2. 'visited' (adapté à ' visited') → logprob: -1.1435438394546509
    3. ' visited' → logprob: -5.143543720245361
    4. '       ' → logprob: -7.143543720245361
    5. '    ' → logprob: -11.51854419708252
    6. '  ' → logprob: -11.76854419708252
    7. ' ' → logprob: -13.26854419708252
    8. '           ' → logprob: -13.64354419708252
    9. '     ' → logprob: -13.89354419708252
    10. '      ' → logprob: -14.39354419708252

Token 255: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -8.637786231702194e-05
    2. '[u' → logprob: -9.500086784362793
    3. 'r' → logprob: -12.375086784362793
    4. '[_' → logprob: -12.875086784362793
    5. '[r' → logprob: -13.375086784362793
    6. ')' → logprob: -14.125086784362793
    7. '   ' → logprob: -15.000086784362793
    8. '_u' → logprob: -15.000086784362793
    9. '[' → logprob: -15.375086784362793
    10. '```' → logprob: -15.375086784362793

Token 256: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.0002470350591465831
    2. '=' → logprob: -9.12524700164795
    3. '[r' → logprob: -9.75024700164795
    4. '[' → logprob: -10.62524700164795
    5. ' =' → logprob: -10.75024700164795
    6. '[v' → logprob: -11.00024700164795
    7. '=True' → logprob: -12.25024700164795
    8. ' [' → logprob: -12.37524700164795
    9. 'r' → logprob: -13.00024700164795
    10. '(u' → logprob: -13.00024700164795

Token 257: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04268226400017738
    2. '=' → logprob: -3.29268217086792
    3. ']=' → logprob: -5.41768217086792
    4. '   ' → logprob: -9.042682647705078
    5. ')' → logprob: -9.792682647705078
    6. ' =' → logprob: -11.292682647705078
    7. '=True' → logprob: -12.917682647705078
    8. ' ]' → logprob: -13.417682647705078
    9. ')=' → logprob: -14.042682647705078
    10. '       ' → logprob: -14.167682647705078

Token 258: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011173728853464127
    2. ' =' → logprob: -4.511173725128174
    3. '=True' → logprob: -9.011174201965332
    4. '   ' → logprob: -12.886174201965332
    5. ')' → logprob: -14.261174201965332
    6. '=False' → logprob: -15.261174201965332
    7. ']' → logprob: -15.261174201965332
    8. ']=' → logprob: -16.761173248291016
    9. 'True' → logprob: -16.886173248291016
    10. ')=' → logprob: -17.011173248291016

Token 259: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.005233763717114925
    2. ' True' → logprob: -5.2552337646484375
    3. '(True' → logprob: -17.255233764648438
    4. '=True' → logprob: -19.505233764648438
    5. '.True' → logprob: -20.880233764648438
    6. 'False' → logprob: -21.380233764648438
    7. ' ' → logprob: -21.505233764648438
    8. '   ' → logprob: -21.880233764648438
    9. '
' → logprob: -22.130233764648438
    10. ' ' → logprob: -22.380233764648438

Token 260: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017618445679545403
    2. '   ' → logprob: -4.267618656158447
    3. ' for' → logprob: -6.767618656158447
    4. '	for' → logprob: -6.892618656158447
    5. '<|end|>' → logprob: -7.392618656158447
    6. 'for' → logprob: -7.892618656158447
    7. '
' → logprob: -9.142618179321289
    8. '        
' → logprob: -10.017618179321289
    9. '    
' → logprob: -10.267618179321289
    10. '	   ' → logprob: -10.517618179321289

Token 261: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1049107238650322
    2. '       ' → logprob: -2.7299106121063232
    3. ' for' → logprob: -3.6049106121063232
    4. 'for' → logprob: -4.979910850524902
    5. '<|end|>' → logprob: -8.729910850524902
    6. '	for' → logprob: -9.479910850524902
    7. 'r' → logprob: -11.479910850524902
    8. '
' → logprob: -11.729910850524902
    9. '_r' → logprob: -11.979910850524902
    10. '    
' → logprob: -11.979910850524902

Token 262: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -6.015305552864447e-05
    2. '   ' → logprob: -9.750060081481934
    3. ' for' → logprob: -13.250060081481934
    4. '	for' → logprob: -17.25006103515625
    5. '       ' → logprob: -18.00006103515625
    6. '  ' → logprob: -22.37506103515625
    7. ' ' → logprob: -23.25006103515625
    8. '   ' → logprob: -23.75006103515625
    9. '```' → logprob: -24.00006103515625
    10. '           ' → logprob: -24.37506103515625

Token 263: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.7145534753799438
    2. 'w' → logprob: -0.7145534753799438
    3. ' w' → logprob: -4.339553356170654
    4. ' v' → logprob: -4.839553356170654
    5. 'x' → logprob: -8.464553833007812
    6. 'vv' → logprob: -12.214553833007812
    7. ' x' → logprob: -12.214553833007812
    8. 'p' → logprob: -13.589553833007812
    9. 'nv' → logprob: -13.839553833007812
    10. 'rev' → logprob: -14.714553833007812

Token 264: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2519386410713196
    2. ' in' → logprob: -1.5019385814666748
    3. ' ' → logprob: -12.251938819885254
    4. '   ' → logprob: -13.626938819885254
    5. '  ' → logprob: -13.876938819885254
    6. '	in' → logprob: -13.876938819885254
    7. '    ' → logprob: -15.001938819885254
    8. 'import' → logprob: -15.376938819885254
    9. ' ' → logprob: -15.501938819885254
    10. '       ' → logprob: -15.626938819885254

Token 265: ' red' (ID: 3592)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.08894415944814682
    2. ' red' → logprob: -2.46394419670105
    3. ' ' → logprob: -14.088944435119629
    4. '
' → logprob: -14.838944435119629
    5. 'reds' → logprob: -14.838944435119629
    6. '(red' → logprob: -15.026444435119629
    7. '_red' → logprob: -15.088944435119629
    8. '   ' → logprob: -15.088944435119629
    9. '.red' → logprob: -15.338944435119629
    10. 'redd' → logprob: -15.526444435119629

Token 266: 'ges' (ID: 4431)
  Prédit: 'ges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ges' → logprob: -0.0019639628008008003
    2. 'edges' → logprob: -6.251964092254639
    3. 'es' → logprob: -11.50196361541748
    4. ' edges' → logprob: -12.00196361541748
    5. 'd' → logprob: -12.12696361541748
    6. 's' → logprob: -12.25196361541748
    7. 'des' → logprob: -12.87696361541748
    8. 'ages' → logprob: -13.12696361541748
    9. '[u' → logprob: -14.12696361541748
    10. 'g' → logprob: -14.25196361541748

Token 267: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -7.107425062713446e-06
    2. 'u' → logprob: -11.875006675720215
    3. '[' → logprob: -17.12500762939453
    4. '   ' → logprob: -18.25000762939453
    5. ' [' → logprob: -18.75000762939453
    6. '[v' → logprob: -19.12500762939453
    7. ' u' → logprob: -19.62500762939453
    8. '(u' → logprob: -19.87500762939453
    9. '<u' → logprob: -20.00000762939453
    10. '[
' → logprob: -20.25000762939453

Token 268: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.001711709308438003
    2. ']:
' → logprob: -6.376711845397949
    3. ']:
' → logprob: -12.37671184539795
    4. ']' → logprob: -13.37671184539795
    5. ':' → logprob: -13.50171184539795
    6. ']:

' → logprob: -14.12671184539795
    7. '       ' → logprob: -14.62671184539795
    8. ']>' → logprob: -15.00171184539795
    9. ' ]' → logprob: -15.00171184539795
    10. '):' → logprob: -15.62671184539795

Token 269: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00010735770774772391
    2. ' if' → logprob: -9.750107765197754
    3. 'if' → logprob: -11.000107765197754
    4. '               ' → logprob: -11.625107765197754
    5. '       ' → logprob: -11.750107765197754
    6. 'dfs' → logprob: -12.000107765197754
    7. '          ' → logprob: -12.750107765197754
    8. ':' → logprob: -13.500107765197754
    9. ' dfs' → logprob: -13.625107765197754
    10. ':
' → logprob: -13.750107765197754

Token 270: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.36941900849342346
    2. '           ' → logprob: -1.869418978691101
    3. ' if' → logprob: -1.869418978691101
    4. '               ' → logprob: -8.86941909790039
    5. '       ' → logprob: -8.86941909790039
    6. 'not' → logprob: -9.86941909790039
    7. ' not' → logprob: -9.86941909790039
    8. 'visited' → logprob: -10.49441909790039
    9. '   ' → logprob: -11.86941909790039
    10. '```' → logprob: -12.74441909790039

Token 271: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.6931484341621399
    2. 'not' → logprob: -0.6931484341621399
    3. '(not' → logprob: -14.818148612976074
    4. '   ' → logprob: -15.443148612976074
    5. '       ' → logprob: -15.693148612976074
    6. '           ' → logprob: -15.818148612976074
    7. '	not' → logprob: -16.193147659301758
    8. '
' → logprob: -16.693147659301758
    9. ':not' → logprob: -17.193147659301758
    10. '!' → logprob: -17.818147659301758

Token 272: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.0619683600962162
    2. ' visited' → logprob: -2.8119683265686035
    3. ' ' → logprob: -14.686968803405762
    4. '   ' → logprob: -15.811968803405762
    5. '
' → logprob: -17.936967849731445
    6. 'visible' → logprob: -17.936967849731445
    7. 'Visited' → logprob: -17.936967849731445
    8. '       ' → logprob: -18.311967849731445
    9. ' ' → logprob: -18.561967849731445
    10. '    ' → logprob: -18.561967849731445

Token 273: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.27569180727005005
    2. '[v' → logprob: -1.6506917476654053
    3. 'r' → logprob: -3.0256917476654053
    4. 'v' → logprob: -8.025691986083984
    5. '[r' → logprob: -8.650691986083984
    6. '[' → logprob: -13.025691986083984
    7. '[u' → logprob: -13.775691986083984
    8. '<v' → logprob: -14.275691986083984
    9. 'visited' → logprob: -14.400691986083984
    10. '_v' → logprob: -14.525691986083984

Token 274: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.0002614550176076591
    2. 'v' → logprob: -8.250261306762695
    3. '(v' → logprob: -16.125261306762695
    4. '<v' → logprob: -17.500261306762695
    5. '	v' → logprob: -18.000261306762695
    6. ' v' → logprob: -18.250261306762695
    7. '[
' → logprob: -18.375261306762695
    8. '[u' → logprob: -18.375261306762695
    9. '[' → logprob: -18.375261306762695
    10. '   ' → logprob: -19.875261306762695

Token 275: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.12727433443069458
    2. ']:' → logprob: -2.12727427482605
    3. ':' → logprob: -8.502274513244629
    4. ':
' → logprob: -9.627274513244629
    5. ']:
' → logprob: -10.377274513244629
    6. '():
' → logprob: -11.002274513244629
    7. ']:

' → logprob: -11.252274513244629
    8. ']' → logprob: -11.877274513244629
    9. '           ' → logprob: -12.127274513244629
    10. '               ' → logprob: -13.752274513244629

Token 276: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.13160119950771332
    2. ' dfs' → logprob: -2.506601095199585
    3. '           ' → logprob: -3.756601095199585
    4. 'dfs' → logprob: -4.006601333618164
    5. '              ' → logprob: -9.381601333618164
    6. '       ' → logprob: -10.131601333618164
    7. '                   ' → logprob: -11.006601333618164
    8. '             ' → logprob: -11.256601333618164
    9. '```' → logprob: -11.381601333618164
    10. '          ' → logprob: -11.881601333618164

Token 277: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' (adapté à ' dfs') → logprob: -0.0041028582490980625
    2. ' dfs' → logprob: -5.50410270690918
    3. '               ' → logprob: -10.87910270690918
    4. '                   ' → logprob: -12.62910270690918
    5. '           ' → logprob: -13.12910270690918
    6. 'df' → logprob: -15.75410270690918
    7. '   ' → logprob: -15.87910270690918
    8. '                ' → logprob: -17.12910270690918
    9. 'def' → logprob: -17.50410270690918
    10. '       ' → logprob: -17.75410270690918

Token 278: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -9.253090865968261e-06
    2. '(v' → logprob: -12.500009536743164
    3. 'r' → logprob: -12.750009536743164
    4. '_v' → logprob: -13.375009536743164
    5. '_' → logprob: -14.375009536743164
    6. 'v' → logprob: -15.375009536743164
    7. '(_' → logprob: -16.750009536743164
    8. ' _' → logprob: -16.750009536743164
    9. '(' → logprob: -17.250009536743164
    10. '\' → logprob: -18.375009536743164

Token 279: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.015840206295251846
    2. '_r' → logprob: -4.39084005355835
    3. 'r' → logprob: -5.76584005355835
    4. 'v' → logprob: -8.765840530395508
    5. '(' → logprob: -10.515840530395508
    6. '[v' → logprob: -12.265840530395508
    7. ' (' → logprob: -13.515840530395508
    8. ' v' → logprob: -14.265840530395508
    9. '(r' → logprob: -14.515840530395508
    10. '_' → logprob: -14.765840530395508

Token 280: ')
' (ID: 446)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.263287752866745
    2. ')' → logprob: -1.5132877826690674
    3. ')v' → logprob: -5.013287544250488
    4. '(v' → logprob: -5.513287544250488
    5. ')(' → logprob: -7.638287544250488
    6. ')
' → logprob: -10.263287544250488
    7. '[v' → logprob: -10.263287544250488
    8. ' v' → logprob: -10.513287544250488
    9. 'u' → logprob: -10.888287544250488
    10. '(u' → logprob: -12.763287544250488

Token 281: '   ' (ID: 271)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.08759919553995132
    2. '(' → logprob: -2.712599277496338
    3. '(r' → logprob: -4.712599277496338
    4. '   ' → logprob: -5.962599277496338
    5. '_r' → logprob: -6.212599277496338
    6. '(u' → logprob: -6.712599277496338
    7. '               ' → logprob: -6.837599277496338
    8. '       ' → logprob: -7.587599277496338
    9. '()' → logprob: -7.712599277496338
    10. 'r' → logprob: -8.08759880065918

Token 282: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' (adapté à ' dfs') → logprob: -0.0008134396048262715
    2. '   ' → logprob: -7.3758134841918945
    3. ' dfs' → logprob: -9.500813484191895
    4. '    
' → logprob: -9.500813484191895
    5. '
' → logprob: -11.375813484191895
    6. '0' → logprob: -11.375813484191895
    7. 'df' → logprob: -12.125813484191895
    8. '```' → logprob: -12.375813484191895
    9. 'def' → logprob: -14.000813484191895
    10. '  
' → logprob: -14.500813484191895

Token 283: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -1.688212614681106e-05
    2. '(' → logprob: -11.375017166137695
    3. '_' → logprob: -12.375017166137695
    4. 'r' → logprob: -13.750017166137695
    5. '(_' → logprob: -18.250017166137695
    6. '(r' → logprob: -18.250017166137695
    7. '```' → logprob: -18.500017166137695
    8. ' _' → logprob: -19.375017166137695
    9. ')' → logprob: -19.625017166137695
    10. '0' → logprob: -19.875017166137695

Token 284: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.128163257315464e-07
    2. ' (' → logprob: -15.75
    3. '0' → logprob: -16.5
    4. '(x' → logprob: -20.5
    5. '((' → logprob: -20.5
    6. '(u' → logprob: -20.625
    7. ')(' → logprob: -21.125
    8. '```' → logprob: -21.125
    9. '(v' → logprob: -21.375
    10. ')' → logprob: -21.5

Token 285: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. ')' → logprob: -16.5
    4. '(' → logprob: -17.5
    5. '   ' → logprob: -19.375
    6. '۰' → logprob: -19.375
    7. 'n' → logprob: -20.5625
    8. '
' → logprob: -20.5625
    9. 's' → logprob: -20.8125
    10. '０' → logprob: -20.875

Token 286: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.2729995988775045e-06
    2. ')
' → logprob: -12.000006675720215
    3. ')

' → logprob: -18.0000057220459
    4. ' )' → logprob: -18.2500057220459
    5. '))' → logprob: -19.7500057220459
    6. '),' → logprob: -19.8750057220459
    7. ')return' → logprob: -20.0000057220459
    8. ')`' → logprob: -20.1250057220459
    9. ')
' → logprob: -20.2500057220459
    10. '   ' → logprob: -20.5000057220459

Token 287: '   ' (ID: 271)
  Prédit: 'cut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cut' → logprob: -0.45487841963768005
    2. '<|end|>' → logprob: -1.5798784494400024
    3. '   ' → logprob: -2.579878330230713
    4. ' cut' → logprob: -4.079878330230713
    5. 'reachable' → logprob: -4.204878330230713
    6. 'min' → logprob: -4.829878330230713
    7. '_cut' → logprob: -5.204878330230713
    8. 'edges' → logprob: -5.329878330230713
    9. 'visited' → logprob: -5.329878330230713
    10. 'print' → logprob: -5.954878330230713

Token 288: ' res' (ID: 694)
  Prédit: 'cut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cut' → logprob: -0.23422972857952118
    2. 'min' → logprob: -2.859229803085327
    3. 'answer' → logprob: -2.984229803085327
    4. 'ans' → logprob: -2.984229803085327
    5. 'partition' → logprob: -4.984229564666748
    6. '   ' → logprob: -5.109229564666748
    7. 'res' (adapté à ' res') → logprob: -5.109229564666748
    8. 'result' → logprob: -5.109229564666748
    9. 's' → logprob: -5.484229564666748
    10. 'print' → logprob: -5.984229564666748

Token 289: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10448022186756134
    2. '=' → logprob: -2.479480266571045
    3. 'ult' → logprob: -4.354480266571045
    4. 'ults' → logprob: -6.104480266571045
    5. 'ault' → logprob: -9.229479789733887
    6. 't' → logprob: -9.229479789733887
    7. 'ultat' → logprob: -10.479479789733887
    8. 'ULT' → logprob: -10.854479789733887
    9. 'ulti' → logprob: -11.229479789733887
    10. 'ual' → logprob: -11.354479789733887

Token 290: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2557239830493927
    2. 'total' → logprob: -1.5057239532470703
    3. 'float' → logprob: -6.00572395324707
    4. 'sum' → logprob: -7.50572395324707
    5. 'sys' → logprob: -8.38072395324707
    6. '10' → logprob: -8.50572395324707
    7. '[]' → logprob: -9.63072395324707
    8. ' total' → logprob: -9.63072395324707
    9. '[' → logprob: -9.88072395324707
    10. ' ' → logprob: -10.13072395324707

Token 291: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2970716655254364
    2. 'total' → logprob: -1.4220716953277588
    3. 'float' → logprob: -5.04707145690918
    4. 'sum' → logprob: -5.17207145690918
    5. '[]' → logprob: -6.67207145690918
    6. '[' → logprob: -7.04707145690918
    7. 'sys' → logprob: -7.29707145690918
    8. '[]
' → logprob: -8.04707145690918
    9. '10' → logprob: -8.79707145690918
    10. 'min' → logprob: -9.04707145690918

Token 292: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10552096366882324
    2. ' for' → logprob: -2.8555209636688232
    3. 'for' → logprob: -3.6055209636688232
    4. '<|end|>' → logprob: -4.730521202087402
    5. '
' → logprob: -5.105521202087402
    6. '    
' → logprob: -8.480521202087402
    7. ')' → logprob: -9.230521202087402
    8. '	for' → logprob: -9.730521202087402
    9. '  ' → logprob: -10.230521202087402
    10. '\n' → logprob: -10.605521202087402

Token 293: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0555400624871254
    2. '<|end|>' → logprob: -3.555540084838867
    3. '
' → logprob: -4.180540084838867
    4. ' for' → logprob: -4.805540084838867
    5. 'for' → logprob: -6.555540084838867
    6. '    
' → logprob: -8.430540084838867
    7. '<|end|>' → logprob: -9.430540084838867
    8. '	for' → logprob: -9.680540084838867
    9. ')' → logprob: -9.680540084838867
    10. '  
' → logprob: -10.555540084838867

Token 294: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.004676711279898882
    2. '   ' → logprob: -5.754676818847656
    3. ' for' → logprob: -6.504676818847656
    4. '	for' → logprob: -13.879676818847656
    5. '```' → logprob: -15.754676818847656
    6. '  ' → logprob: -16.129676818847656
    7. '    
' → logprob: -16.379676818847656
    8. '<|end|>' → logprob: -17.629676818847656
    9. ' ' → logprob: -17.754676818847656
    10. '
' → logprob: -18.254676818847656

Token 295: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.17888042330741882
    2. 'i' → logprob: -2.178880453109741
    3. 'u' → logprob: -3.428880453109741
    4. '(x' → logprob: -4.303880214691162
    5. '(u' → logprob: -5.553880214691162
    6. '(i' → logprob: -7.803880214691162
    7. ' x' → logprob: -9.30388069152832
    8. 'idx' → logprob: -9.55388069152832
    9. ' i' → logprob: -9.80388069152832
    10. ' (' → logprob: -9.92888069152832

Token 296: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002182499971240759
    2. ',y' → logprob: -6.252182483673096
    3. ' ,' → logprob: -8.752182960510254
    4. ' in' → logprob: -10.127182960510254
    5. ',v' → logprob: -10.127182960510254
    6. ',x' → logprob: -12.627182960510254
    7. ',(' → logprob: -13.627182960510254
    8. ',m' → logprob: -13.627182960510254
    9. ',
' → logprob: -13.627182960510254
    10. 'y' → logprob: -13.752182960510254

Token 297: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.0790499597787857
    2. ',' → logprob: -2.579050064086914
    3. ',_' → logprob: -10.079050064086914
    4. ' ,' → logprob: -10.579050064086914
    5. ',C' → logprob: -10.704050064086914
    6. ',in' → logprob: -11.204050064086914
    7. ',y' → logprob: -11.954050064086914
    8. ',(' → logprob: -11.954050064086914
    9. 'c' → logprob: -12.204050064086914
    10. ',z' → logprob: -12.454050064086914

Token 298: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.28207090497016907
    2. ' in' → logprob: -1.4070708751678467
    3. ',' → logprob: -7.032071113586426
    4. ',in' → logprob: -11.157071113586426
    5. ' ,' → logprob: -12.157071113586426
    6. 's' → logprob: -12.157071113586426
    7. 'n' → logprob: -13.157071113586426
    8. '   ' → logprob: -13.657071113586426
    9. 'In' → logprob: -13.907071113586426
    10. '	in' → logprob: -14.032071113586426

Token 299: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.003177952254191041
    2. ' edges' → logprob: -5.753178119659424
    3. '(edges' → logprob: -15.753177642822266
    4. '.edges' → logprob: -17.253177642822266
    5. '_edges' → logprob: -17.503177642822266
    6. 'edge' → logprob: -18.753177642822266
    7. '   ' → logprob: -18.878177642822266
    8. 'ed' → logprob: -19.003177642822266
    9. 'Edges' → logprob: -19.378177642822266
    10. ' ' → logprob: -20.253177642822266

Token 300: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.043655455112457275
    2. ':
' → logprob: -3.1686553955078125
    3. '       ' → logprob: -7.9186553955078125
    4. '   ' → logprob: -8.668655395507812
    5. ' if' → logprob: -10.418655395507812
    6. '):' → logprob: -10.668655395507812
    7. '):
' → logprob: -10.668655395507812
    8. ',' → logprob: -11.293655395507812
    9. '<|end|>' → logprob: -11.543655395507812
    10. ':
' → logprob: -12.168655395507812

Token 301: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44775280356407166
    2. '       ' → logprob: -1.072752833366394
    3. '<|end|>' → logprob: -4.197752952575684
    4. ' if' → logprob: -6.572752952575684
    5. '```' → logprob: -6.572752952575684
    6. '    
' → logprob: -8.322752952575684
    7. '
' → logprob: -8.572752952575684
    8. '<|end|>' → logprob: -8.947752952575684
    9. '    ' → logprob: -9.072752952575684
    10. 'if' → logprob: -9.197752952575684

Token 302: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31255266070365906
    2. ' if' → logprob: -1.4375526905059814
    3. 'if' → logprob: -3.5625526905059814
    4. '```' → logprob: -6.562552452087402
    5. '   ' → logprob: -6.937552452087402
    6. '<|end|>' → logprob: -10.062552452087402
    7. '           ' → logprob: -10.437552452087402
    8. '[' → logprob: -10.812552452087402
    9. ' ' → logprob: -11.187552452087402
    10. 'If' → logprob: -11.812552452087402

Token 303: ' Ed' (ID: 6117)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4110249876976013
    2. ' if' → logprob: -1.161025047302246
    3. '       ' → logprob: -3.786025047302246
    4. '   ' → logprob: -6.786025047302246
    5. '	if' → logprob: -10.786025047302246
    6. '```' → logprob: -11.161025047302246
    7. '    ' → logprob: -12.161025047302246
    8. ' ' → logprob: -12.286025047302246
    9. '           ' → logprob: -13.411025047302246
    10. '  ' → logprob: -14.536025047302246

Token 304: 'ges' (ID: 4431)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.14835821092128754
    2. 'f' → logprob: -2.773358106613159
    3. '       ' → logprob: -3.273358106613159
    4. '   ' → logprob: -4.023358345031738
    5. ' if' → logprob: -4.648358345031738
    6. '           ' → logprob: -6.398358345031738
    7. 'g' → logprob: -6.523358345031738
    8. 'ge' → logprob: -6.773358345031738
    9. 'ges' → logprob: -6.773358345031738
    10. '        ' → logprob: -7.023358345031738

Token 305: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2729296386241913
    2. ' if' → logprob: -2.1479296684265137
    3. '   ' → logprob: -2.3979296684265137
    4. '<|end|>' → logprob: -4.397929668426514
    5. ' that' → logprob: -5.397929668426514
    6. ' not' → logprob: -5.647929668426514
    7. '           ' → logprob: -5.772929668426514
    8. ' =' → logprob: -6.397929668426514
    9. '[' → logprob: -6.522929668426514
    10. '    ' → logprob: -7.022929668426514

Token 306: ' reachable' (ID: 143580)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6183266043663025
    2. 'visited' → logprob: -1.1183266639709473
    3. '0' → logprob: -2.6183266639709473
    4. ' x' → logprob: -3.3683266639709473
    5. ' visited' → logprob: -4.618326663970947
    6. 'not' → logprob: -4.743326663970947
    7. ' not' → logprob: -6.118326663970947
    8. '   ' → logprob: -6.368326663970947
    9. ' ' → logprob: -6.743326663970947
    10. '```' → logprob: -7.118326663970947

Token 307: '(set' (ID: 25904)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[x' → logprob: -1.1544922590255737
    2. 'to' → logprob: -1.6544922590255737
    3. '[u' → logprob: -1.9044922590255737
    4. ' to' → logprob: -2.1544923782348633
    5. ' if' → logprob: -2.6544923782348633
    6. 'if' → logprob: -2.7794923782348633
    7. '[' → logprob: -3.2794923782348633
    8. ' in' → logprob: -4.529492378234863
    9. 'in' → logprob: -4.654492378234863
    10. ' and' → logprob: -5.029492378234863

Token 308: ' S' (ID: 336)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.8685072660446167
    2. ')' → logprob: -1.9935072660446167
    3. '0' → logprob: -1.9935072660446167
    4. '[u' → logprob: -2.3685073852539062
    5. 'visited' → logprob: -2.4935073852539062
    6. ' and' → logprob: -2.6185073852539062
    7. 'if' → logprob: -2.8685073852539062
    8. '([' → logprob: -3.7435073852539062
    9. 'and' → logprob: -3.7435073852539062
    10. 'ed' → logprob: -3.7435073852539062

Token 309: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013561106286942959
    2. ' )' → logprob: -4.763561248779297
    3. ' to' → logprob: -6.013561248779297
    4. 'to' → logprob: -6.138561248779297
    5. ',' → logprob: -9.763561248779297
    6. ' if' → logprob: -10.263561248779297
    7. '   ' → logprob: -10.513561248779297
    8. ' and' → logprob: -10.513561248779297
    9. ' ,' → logprob: -11.013561248779297
    10. ' in' → logprob: -11.013561248779297

Token 310: ' to' (ID: 316)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9760336875915527
    2. ' to' → logprob: -1.4760336875915527
    3. ' and' → logprob: -1.4760336875915527
    4. '       ' → logprob: -2.7260336875915527
    5. 'to' → logprob: -3.4760336875915527
    6. 'and' → logprob: -3.7260336875915527
    7. '   ' → logprob: -4.101033687591553
    8. 'if' → logprob: -4.476033687591553
    9. '[u' → logprob: -5.476033687591553
    10. ' in' → logprob: -6.351033687591553

Token 311: ' unreachable' (ID: 171303)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.38635969161987305
    2. ' not' → logprob: -1.761359691619873
    3. 'visited' → logprob: -2.636359691619873
    4. 'un' → logprob: -2.886359691619873
    5. 'non' → logprob: -4.636359691619873
    6. ' visited' → logprob: -5.636359691619873
    7. 'reachable' → logprob: -6.011359691619873
    8. ' unreachable' → logprob: -6.136359691619873
    9. ' non' → logprob: -7.011359691619873
    10. ' y' → logprob: -7.261359691619873

Token 312: '(set' (ID: 25904)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5900474786758423
    2. ' (' → logprob: -2.4650473594665527
    3. '       ' → logprob: -2.9650473594665527
    4. ' ' → logprob: -3.0900473594665527
    5. '[' → logprob: -3.2150473594665527
    6. '[u' → logprob: -3.2150473594665527
    7. ' from' → logprob: -3.9650473594665527
    8. 'from' → logprob: -4.215047359466553
    9. 'in' → logprob: -4.215047359466553
    10. ' [' → logprob: -4.465047359466553

Token 313: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.0545029416680336
    2. '(' → logprob: -3.6795029640197754
    3. ' T' → logprob: -4.054502964019775
    4. '(not' → logprob: -5.929502964019775
    5. '(T' → logprob: -6.304502964019775
    6. ')' → logprob: -6.679502964019775
    7. 'visited' → logprob: -7.179502964019775
    8. 'S' → logprob: -7.554502964019775
    9. '{' → logprob: -7.929502964019775
    10. '(s' → logprob: -8.179502487182617

Token 314: ')' (ID: 8)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40987691283226013
    2. ' if' → logprob: -1.6598769426345825
    3. ')' → logprob: -2.659876823425293
    4. ':' → logprob: -3.534876823425293
    5. '):' → logprob: -4.284876823425293
    6. '           ' → logprob: -4.534876823425293
    7. '):
' → logprob: -5.534876823425293
    8. ' and' → logprob: -5.534876823425293
    9. ' )' → logprob: -6.034876823425293
    10. ',' → logprob: -6.284876823425293

Token 315: ' nodes' (ID: 15749)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011153455823659897
    2. ' if' → logprob: -4.886153221130371
    3. '<|end|>' → logprob: -6.511153221130371
    4. '   ' → logprob: -7.386153221130371
    5. ':' → logprob: -7.636153221130371
    6. ',' → logprob: -7.886153221130371
    7. '[' → logprob: -9.261153221130371
    8. 'if' → logprob: -9.511153221130371
    9. ':
' → logprob: -9.636153221130371
    10. '           ' → logprob: -10.011153221130371

Token 316: ' are' (ID: 553)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016139237210154533
    2. ' if' → logprob: -4.766139030456543
    3. ':' → logprob: -5.516139030456543
    4. '<|end|>' → logprob: -6.391139030456543
    5. '   ' → logprob: -7.516139030456543
    6. ',' → logprob: -7.891139030456543
    7. ':
' → logprob: -8.766139030456543
    8. 'if' → logprob: -9.266139030456543
    9. '[' → logprob: -9.266139030456543
    10. '           ' → logprob: -9.516139030456543

Token 317: ' crossing' (ID: 50946)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2034393846988678
    2. ' not' → logprob: -2.578439474105835
    3. ' if' → logprob: -3.328439474105835
    4. ' visited' → logprob: -3.953439474105835
    5. '           ' → logprob: -4.828439235687256
    6. '        ' → logprob: -5.203439235687256
    7. ' c' → logprob: -5.328439235687256
    8. '   ' → logprob: -5.453439235687256
    9. ' ' → logprob: -5.578439235687256
    10. '    ' → logprob: -5.828439235687256

Token 318: ' the' (ID: 290)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7632860541343689
    2. '   ' → logprob: -1.0132861137390137
    3. ':' → logprob: -3.0132861137390137
    4. '       ' → logprob: -3.0132861137390137
    5. 'if' → logprob: -4.013286113739014
    6. ' (' → logprob: -4.138286113739014
    7. '(' → logprob: -4.638286113739014
    8. '  ' → logprob: -5.263286113739014
    9. 's' → logprob: -5.638286113739014
    10. ',' → logprob: -5.888286113739014

Token 319: ' cut' (ID: 6092)
  Prédit: 'cut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cut' → logprob: -0.09472521394491196
    2. ' cut' → logprob: -2.4697251319885254
    3. ''' → logprob: -5.844725131988525
    4. 'if' → logprob: -6.719725131988525
    5. '_cut' → logprob: -7.969725131988525
    6. ' '' → logprob: -8.844725608825684
    7. ' if' → logprob: -8.844725608825684
    8. '`' → logprob: -8.969725608825684
    9. 'min' → logprob: -8.969725608825684
    10. 'res' → logprob: -9.094725608825684

Token 320: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04494171217083931
    2. '   ' → logprob: -3.2949416637420654
    3. ' if' → logprob: -5.4199419021606445
    4. '<|end|>' → logprob: -7.1699419021606445
    5. ':' → logprob: -8.419941902160645
    6. ',' → logprob: -8.794941902160645
    7. '        
' → logprob: -8.794941902160645
    8. ':
' → logprob: -9.044941902160645
    9. '           ' → logprob: -9.044941902160645
    10. 'if' → logprob: -9.044941902160645

Token 321: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013316339813172817
    2. '   ' → logprob: -4.5133161544799805
    3. '<|end|>' → logprob: -7.1383161544799805
    4. ' if' → logprob: -7.2633161544799805
    5. ' ' → logprob: -7.7633161544799805
    6. '    ' → logprob: -10.13831615447998
    7. '        
' → logprob: -10.13831615447998
    8. ',' → logprob: -10.26331615447998
    9. '      ' → logprob: -10.38831615447998
    10. '[' → logprob: -10.51331615447998

Token 322: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3031708002090454
    2. 'if' (adapté à ' if') → logprob: -1.5531708002090454
    3. '   ' → logprob: -3.178170680999756
    4. '       ' → logprob: -4.803170680999756
    5. ' ' → logprob: -11.303171157836914
    6. '    ' → logprob: -11.303171157836914
    7. '```' → logprob: -11.553171157836914
    8. '  ' → logprob: -11.678171157836914
    9. ' 
' → logprob: -12.053171157836914
    10. '[' → logprob: -12.053171157836914

Token 323: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.001171056181192398
    2. ' visited' → logprob: -6.751171112060547
    3. '   ' → logprob: -14.001171112060547
    4. ' ' → logprob: -19.126171112060547
    5. '(' → logprob: -19.376171112060547
    6. '  ' → logprob: -19.626171112060547
    7. 'visible' → logprob: -19.751171112060547
    8. '    ' → logprob: -20.126171112060547
    9. '       ' → logprob: -20.376171112060547
    10. '
' → logprob: -21.251171112060547

Token 324: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0004002832865808159
    2. '[' → logprob: -8.00040054321289
    3. '[u' → logprob: -9.75040054321289
    4. ' [' → logprob: -12.62540054321289
    5. '[v' → logprob: -13.12540054321289
    6. '[s' → logprob: -14.12540054321289
    7. '[y' → logprob: -15.50040054321289
    8. '[S' → logprob: -15.87540054321289
    9. 'x' → logprob: -16.62540054321289
    10. '[i' → logprob: -17.50040054321289

Token 325: ']' (ID: 60)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5772019028663635
    2. 'and' → logprob: -0.8272019028663635
    3. ']' → logprob: -6.702201843261719
    4. ')' → logprob: -11.202201843261719
    5. ' ]' → logprob: -11.952201843261719
    6. '==' → logprob: -12.077201843261719
    7. '>' → logprob: -12.952201843261719
    8. ' ' → logprob: -13.452201843261719
    9. '```' → logprob: -14.577201843261719
    10. '[' → logprob: -14.577201843261719

Token 326: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.47407791018486023
    2. 'and' → logprob: -0.9740779399871826
    3. ' ' → logprob: -14.474078178405762
    4. '==' → logprob: -16.974077224731445
    5. '   ' → logprob: -17.099077224731445
    6. '	and' → logprob: -17.224077224731445
    7. '>' → logprob: -17.599077224731445
    8. '[' → logprob: -17.724077224731445
    9. '    ' → logprob: -17.974077224731445
    10. '           ' → logprob: -18.099077224731445

Token 327: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.0591953843832016
    2. '(not' → logprob: -3.0591952800750732
    3. ' not' → logprob: -4.559195518493652
    4. ' (' → logprob: -9.684195518493652
    5. '   ' → logprob: -11.059195518493652
    6. '(' → logprob: -13.059195518493652
    7. '
' → logprob: -14.309195518493652
    8. '```' → logprob: -15.309195518493652
    9. '	not' → logprob: -15.559195518493652
    10. ':not' → logprob: -15.684195518493652

Token 328: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.018150178715586662
    2. ' visited' → logprob: -4.018150329589844
    3. '   ' → logprob: -16.268150329589844
    4. 'visible' → logprob: -16.768150329589844
    5. '
' → logprob: -17.518150329589844
    6. ' ' → logprob: -17.643150329589844
    7. 'Visited' → logprob: -18.268150329589844
    8. 'visit' → logprob: -18.393150329589844
    9. '```' → logprob: -18.518150329589844
    10. 'vis' → logprob: -19.018150329589844

Token 329: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -1.9623810658231378e-05
    2. 'y' → logprob: -11.125020027160645
    3. '[v' → logprob: -13.250020027160645
    4. '[' → logprob: -13.250020027160645
    5. '```' → logprob: -14.750020027160645
    6. ' [' → logprob: -15.000020027160645
    7. '[
' → logprob: -15.125020027160645
    8. '[x' → logprob: -16.500019073486328
    9. '[z' → logprob: -17.125019073486328
    10. '(y' → logprob: -17.125019073486328

Token 330: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.022422967478632927
    2. ':' → logprob: -4.397422790527344
    3. '):
' → logprob: -4.647422790527344
    4. ':
' → logprob: -9.147422790527344
    5. ']:' → logprob: -9.522422790527344
    6. ' and' → logprob: -10.522422790527344
    7. ' ):' → logprob: -11.147422790527344
    8. '       ' → logprob: -11.522422790527344
    9. ')' → logprob: -11.772422790527344
    10. '}:' → logprob: -12.022422790527344

Token 331: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8151716589927673
    2. '           ' → logprob: -1.315171718597412
    3. ':' → logprob: -1.690171718597412
    4. ':
' → logprob: -2.315171718597412
    5. ' and' → logprob: -5.940171718597412
    6. '               ' → logprob: -6.565171718597412
    7. '):
' → logprob: -7.565171718597412
    8. ',' → logprob: -8.815171241760254
    9. '):' → logprob: -8.815171241760254
    10. '   ' → logprob: -8.940171241760254

Token 332: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.0026994242798537016
    2. '       ' → logprob: -6.252699375152588
    3. ' res' → logprob: -7.502699375152588
    4. '           ' → logprob: -9.002699851989746
    5. '   ' → logprob: -9.377699851989746
    6. '
' → logprob: -11.877699851989746
    7. '```' → logprob: -13.002699851989746
    8. '	res' → logprob: -13.502699851989746
    9. '               ' → logprob: -15.127699851989746
    10. '``' → logprob: -16.37769889831543

Token 333: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5760930180549622
    2. '+=' → logprob: -0.8260930180549622
    3. '+' → logprob: -8.951092720031738
    4. '=' → logprob: -12.076092720031738
    5. ']+=' → logprob: -12.326092720031738
    6. '           ' → logprob: -12.326092720031738
    7. '   ' → logprob: -12.951092720031738
    8. '       ' → logprob: -13.326092720031738
    9. '        ' → logprob: -13.451092720031738
    10. '    ' → logprob: -13.951092720031738

Token 334: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0001234428636962548
    2. ' c' → logprob: -9.000123023986816
    3. '	c' → logprob: -18.500123977661133
    4. '   ' → logprob: -19.375123977661133
    5. '_c' → logprob: -20.875123977661133
    6. ')c' → logprob: -21.000123977661133
    7. '           ' → logprob: -22.125123977661133
    8. '$c' → logprob: -22.125123977661133
    9. '(c' → logprob: -22.375123977661133
    10. '
' → logprob: -22.750123977661133

Token 335: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2539483606815338
    2. 'print' → logprob: -1.8789483308792114
    3. '
' → logprob: -3.003948450088501
    4. '<|end|>' → logprob: -3.878948450088501
    5. ' print' → logprob: -7.128948211669922
    6. '    
' → logprob: -8.628948211669922
    7. '```' → logprob: -9.628948211669922
    8. '  
' → logprob: -9.878948211669922
    9. '\n' → logprob: -10.128948211669922
    10. ')' → logprob: -10.253948211669922

Token 336: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 337: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.006726264487951994
    2. '   ' → logprob: -5.006726264953613
    3. ' print' → logprob: -11.756726264953613
    4. '```' → logprob: -12.756726264953613
    5. '
' → logprob: -16.756725311279297
    6. '    
' → logprob: -17.506725311279297
    7. '	print' → logprob: -17.506725311279297
    8. '``' → logprob: -18.881725311279297
    9. '#print' → logprob: -19.256725311279297
    10. '`' → logprob: -19.506725311279297

Token 338: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.0005268189124763012
    2. '(' → logprob: -8.250526428222656
    3. '(total' → logprob: -8.250526428222656
    4. '(f' → logprob: -13.000526428222656
    5. ' (' → logprob: -13.750526428222656
    6. 'res' → logprob: -15.125526428222656
    7. '((' → logprob: -16.250526428222656
    8. '(rest' → logprob: -16.500526428222656
    9. '("("' → logprob: -16.625526428222656
    10. '(result' → logprob: -16.750526428222656

Token 339: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ' )' → logprob: -15.250000953674316
    3. ')`' → logprob: -15.250000953674316
    4. '())' → logprob: -16.75
    5. '()' → logprob: -17.25
    6. '))' → logprob: -17.375
    7. ')
' → logprob: -17.5
    8. '`)' → logprob: -18.0
    9. ')}' → logprob: -18.875
    10. '),' → logprob: -19.25


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 337
Tokens correctement prédits (1ère position, stricte): 129
Tokens correctement prédits (1ère position, avec adaptation): 145
Tokens correctement prédits (top 10): 267
Précision stricte (1ère position): 38.28%
Précision adaptée (1ère position): 43.03%
Précision (top 10): 79.23%
================================================================================
