================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:10:27
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from sys import stdin
from collections import deque

def can_collect_and_return(grid, N, M):
    # positions: entrance and treasures
    corners = [(0,0),(N-1,0),(N-1,M-1),(0,M-1)]

    # Since floors collapse after stepping once (except entrance),
    # Taro can visit each cell only once in his path except entrance which can be revisited any number of times.
    # We need to find if there's a path start->treasure1->treasure2->treasure3->start with that constraint.

    # We'll represent states as (r, c, collected_mask)
    # collected_mask is a 3-bit integer marking which of the 3 treasure chests are collected.
    # Index treasures as: (N-1,0)->0, (N-1,M-1)->1, (0,M-1)->2

    treasure_pos = corners[1:]
    treasure_indices = {pos: idx for idx,pos in enumerate(treasure_pos)}

    # BFS over states with visited tracking
    # visited[r][c][collected_mask]: whether state visited.
    visited = [[[False]*8 for _ in range(M)] for __ in range(N)]
    q = deque()
    start_state = (0,0,0) # start at entrance, no treasure collected
    q.append(start_state)
    visited[0][0][0] = True

    # For entrance cell, can re-enter, so it doesn't collapse.
    # For other cells, visited only once per path, handled by visited array and condition.

    while q:
        r,c,collected = q.popleft()
        # If at entrance and all treasures collected
        if (r,c) == (0,0) and collected == 7:
            return True
        for dr,dc in [(-1,0),(1,0),(0,-1),(0,1)]:
            nr,nc = r+dr,c+dc
            if 0<=nr<N and 0<=nc<M and grid[nr][nc]=='.':
                ncollected = collected
                # Check if stepping onto treasure
                if (nr,nc) in treasure_indices:
                    ncollected |= 1<<treasure_indices[(nr,nc)]
                # If it's entrance cell, can always visit.
                # Otherwise, if visited in this mask, skip.
                if (nr,nc) == (0,0):
                    if not visited[nr][nc][ncollected]:
                        visited[nr][nc][ncollected] = True
                        q.append((nr,nc,ncollected))
                else:
                    # fragile cell: can only be passed once per path, so only unvisited for that state
                    if not visited[nr][nc][ncollected]:
                        visited[nr][nc][ncollected] = True
                        q.append((nr,nc,ncollected))
    return False

def main():
    input_lines = stdin.read().splitlines()
    idx = 0
    while True:
        if idx>=len(input_lines): break
        line = input_lines[idx].strip()
        if not line:
            idx+=1
            continue
        N,M = map(int,line.split())
        if N==0 and M==0:
            break
        idx+=1
        grid = []
        for _ in range(N):
            grid.append(list(input_lines[idx]))
            idx+=1
        # Ensure four corner rooms are enterable per problem statement
        # run logic:
        print("YES" if can_collect_and_return(grid,N,M) else "NO")

if __name__=="__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' stdin' (ID: 75143)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.050936125218868256
    2. ' argv' → logprob: -3.550936222076416
    3. 'exit' → logprob: -4.050936222076416
    4. ' exit' → logprob: -6.675936222076416
    5. 'stdout' → logprob: -6.800936222076416
    6. 'path' → logprob: -7.550936222076416
    7. 'stdin' → logprob: -8.175935745239258
    8. 'import' → logprob: -8.550935745239258
    9. 'version' → logprob: -9.300935745239258
    10. 'stderr' → logprob: -10.175935745239258

Token 4: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0006422612932510674
    2. '.readline' → logprob: -8.250641822814941
    3. '\n' → logprob: -8.500641822814941
    4. '.
' → logprob: -10.125641822814941
    5. 'import' → logprob: -10.250641822814941
    6. '\' → logprob: -10.500641822814941
    7. '```' → logprob: -10.875641822814941
    8. '.read' → logprob: -10.875641822814941
    9. '' → logprob: -12.000641822814941
    10. ',' → logprob: -12.125641822814941

Token 5: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.06321117281913757
    2. '.readline' → logprob: -3.56321120262146
    3. 'for' → logprob: -4.563210964202881
    4. '\n' → logprob: -4.688210964202881
    5. '
' → logprob: -5.938210964202881
    6. 'import' → logprob: -5.938210964202881
    7. 'print' → logprob: -6.188210964202881
    8. '.read' → logprob: -6.688210964202881
    9. '```' → logprob: -7.313210964202881
    10. ',' → logprob: -7.313210964202881

Token 6: ' collections' (ID: 22690)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.020723707973957062
    2. ' sys' → logprob: -4.145723819732666
    3. ' io' → logprob: -5.770723819732666
    4. 'os' → logprob: -6.895723819732666
    5. ' typing' → logprob: -8.270723342895508
    6. ' math' → logprob: -9.770723342895508
    7. ' space' → logprob: -9.895723342895508
    8. 'sys' → logprob: -10.270723342895508
    9. ' stdout' → logprob: -10.520723342895508
    10. ' string' → logprob: -10.770723342895508

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.47563016414642334
    2. 'import' → logprob: -0.9756301641464233
    3. '```' → logprob: -7.350630283355713
    4. ' defaultdict' → logprob: -7.725630283355713
    5. ' ' → logprob: -8.600629806518555
    6. '<|end|>' → logprob: -9.475629806518555
    7. '.' → logprob: -10.100629806518555
    8. 'abc' → logprob: -10.975629806518555
    9. '.Counter' → logprob: -10.975629806518555
    10. ' ' → logprob: -11.100629806518555

Token 8: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.6046075820922852
    2. 'deque' → logprob: -1.1046075820922852
    3. ' defaultdict' → logprob: -2.104607582092285
    4. 'default' → logprob: -8.104607582092285
    5. ' abc' → logprob: -10.229607582092285
    6. 'abc' → logprob: -10.479607582092285
    7. ' Counter' → logprob: -10.604607582092285
    8. 'Counter' → logprob: -10.979607582092285
    9. 'named' → logprob: -10.979607582092285
    10. ' named' → logprob: -11.479607582092285

Token 9: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7345498204231262
    2. '\' → logprob: -1.1095497608184814
    3. '
' → logprob: -2.4845497608184814
    4. 'd' → logprob: -3.2345497608184814
    5. '' → logprob: -3.9845497608184814
    6. 'for' → logprob: -4.4845499992370605
    7. 'newline' → logprob: -4.7345499992370605
    8. '```' → logprob: -4.8595499992370605
    9. 'def' → logprob: -5.1095499992370605
    10. 'import' → logprob: -5.3595499992370605

Token 10: 'def' (ID: 1314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.027819562703371048
    2. 'def' → logprob: -4.402819633483887
    3. '\' → logprob: -5.277819633483887
    4. 'n' → logprob: -5.902819633483887
    5. '`' → logprob: -6.152819633483887
    6. 'b' → logprob: -6.277819633483887
    7. '```' → logprob: -7.027819633483887
    8. 'a' → logprob: -7.777819633483887
    9. 'q' → logprob: -8.402819633483887
    10. 'import' → logprob: -8.527819633483887

Token 11: ' can' (ID: 665)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0063972617499530315
    2. ' bfs' → logprob: -5.256397247314453
    3. ' read' → logprob: -8.631397247314453
    4. ' process' → logprob: -8.881397247314453
    5. ' queue' → logprob: -9.006397247314453
    6. ' breadth' → logprob: -9.256397247314453
    7. ' a' → logprob: -9.756397247314453
    8. ' dfs' → logprob: -9.881397247314453
    9. ' BFS' → logprob: -10.006397247314453
    10. ' deque' → logprob: -10.256397247314453

Token 12: '_collect' (ID: 169999)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06487853825092316
    2. '_accept' → logprob: -3.189878463745117
    3. ' _' → logprob: -5.314878463745117
    4. '_access' → logprob: -5.814878463745117
    5. '_append' → logprob: -6.814878463745117
    6. '_jump' → logprob: -6.814878463745117
    7. '_visit' → logprob: -6.939878463745117
    8. '_enqueue' → logprob: -7.064878463745117
    9. '_continue' → logprob: -7.064878463745117
    10. '_execute' → logprob: -7.439878463745117

Token 13: '_and' (ID: 18645)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7955235242843628
    2. '_tokens' → logprob: -0.9205235242843628
    3. '_items' → logprob: -3.1705236434936523
    4. '_token' → logprob: -3.1705236434936523
    5. '_all' → logprob: -3.6705236434936523
    6. ' _' → logprob: -4.545523643493652
    7. '_coin' → logprob: -5.045523643493652
    8. '_co' → logprob: -5.670523643493652
    9. '_water' → logprob: -5.670523643493652
    10. ' ' → logprob: -6.670523643493652

Token 14: '_return' (ID: 29287)
  Prédit: 'deliver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deliver' → logprob: -0.3932560384273529
    2. '_del' → logprob: -2.5182559490203857
    3. '_push' → logprob: -3.5182559490203857
    4. 'del' → logprob: -3.8932559490203857
    5. '_move' → logprob: -4.018256187438965
    6. ' deliver' → logprob: -4.143256187438965
    7. '_de' → logprob: -4.643256187438965
    8. '_store' → logprob: -4.768256187438965
    9. '_transport' → logprob: -4.768256187438965
    10. 'def' → logprob: -4.768256187438965

Token 15: '(grid' (ID: 51818)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.061907172203064
    2. '_' → logprob: -1.186907172203064
    3. ' (' → logprob: -1.311907172203064
    4. ' _' → logprob: -3.4369072914123535
    5. '_to' → logprob: -3.6869072914123535
    6. '(_' → logprob: -5.4369072914123535
    7. ' (_' → logprob: -5.6869072914123535
    8. '```' → logprob: -5.6869072914123535
    9. ' ' → logprob: -5.9369072914123535
    10. '_space' → logprob: -6.6869072914123535

Token 16: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2416382133960724
    2. '):' → logprob: -1.74163818359375
    3. '[' → logprob: -3.49163818359375
    4. ')' → logprob: -5.11663818359375
    5. '[row' → logprob: -7.49163818359375
    6. ':' → logprob: -7.86663818359375
    7. ' ,' → logprob: -8.24163818359375
    8. ',row' → logprob: -8.24163818359375
    9. '(grid' → logprob: -8.36663818359375
    10. '(' → logprob: -9.11663818359375

Token 17: ' N' (ID: 478)
  Prédit: ' start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.949895977973938
    2. ' r' → logprob: -1.074895977973938
    3. ' row' → logprob: -2.5748958587646484
    4. ' x' → logprob: -3.8248958587646484
    5. ' player' → logprob: -3.8248958587646484
    6. ' n' → logprob: -3.9498958587646484
    7. ' rows' → logprob: -3.9498958587646484
    8. ' robot' → logprob: -4.324895858764648
    9. ' m' → logprob: -4.574895858764648
    10. 'r' → logprob: -4.574895858764648

Token 18: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.31423476338386536
    2. '):' → logprob: -1.314234733581543
    3. ')' → logprob: -7.064234733581543
    4. ' ,' → logprob: -9.814234733581543
    5. '[' → logprob: -11.314234733581543
    6. ' ):' → logprob: -11.314234733581543
    7. '):
' → logprob: -11.689234733581543
    8. '   ' → logprob: -12.564234733581543
    9. ']:' → logprob: -12.814234733581543
    10. '),' → logprob: -12.939234733581543

Token 19: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.2723967730998993
    2. ' start' → logprob: -2.7723968029022217
    3. 'M' → logprob: -3.1473968029022217
    4. ' x' → logprob: -3.3973968029022217
    5. ' r' → logprob: -3.3973968029022217
    6. ' K' → logprob: -4.522396564483643
    7. 'x' → logprob: -4.522396564483643
    8. 'start' → logprob: -4.897396564483643
    9. 'r' → logprob: -5.022396564483643
    10. ' y' → logprob: -5.397396564483643

Token 20: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01735769957304001
    2. ',' → logprob: -4.14235782623291
    3. ')' → logprob: -6.64235782623291
    4. ' ):' → logprob: -11.89235782623291
    5. '):
' → logprob: -12.39235782623291
    6. ''):' → logprob: -13.64235782623291
    7. ')):' → logprob: -13.76735782623291
    8. '),' → logprob: -13.76735782623291
    9. ':' → logprob: -14.51735782623291
    10. '   ' → logprob: -14.64235782623291

Token 21: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4325733780860901
    2. '   ' → logprob: -1.3075733184814453
    3. '```' → logprob: -3.4325733184814453
    4. '    
' → logprob: -4.182573318481445
    5. ':
' → logprob: -4.432573318481445
    6. '    ' → logprob: -5.307573318481445
    7. '\' → logprob: -5.682573318481445
    8. '   
' → logprob: -5.932573318481445
    9. '
' → logprob: -5.932573318481445
    10. '  
' → logprob: -6.307573318481445

Token 22: ' #' (ID: 1069)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.35094791650772095
    2. ' visited' → logprob: -2.475947856903076
    3. ' ' → logprob: -2.600947856903076
    4. '     
' → logprob: -3.600947856903076
    5. '    ' → logprob: -3.975947856903076
    6. '   ' → logprob: -4.100947856903076
    7. '    
' → logprob: -4.475947856903076
    8. '
' → logprob: -4.600947856903076
    9. 'd' → logprob: -4.600947856903076
    10. 'r' → logprob: -5.225947856903076

Token 23: ' positions' (ID: 15897)
  Prédit: ' visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.22407419979572296
    2. 'visited' → logprob: -2.349074125289917
    3. '   ' → logprob: -3.849074125289917
    4. ' directions' → logprob: -4.349074363708496
    5. ' rows' → logprob: -4.599074363708496
    6. ' q' → logprob: -4.849074363708496
    7. ' dp' → logprob: -4.849074363708496
    8. ' reachable' → logprob: -4.974074363708496
    9. ' from' → logprob: -5.099074363708496
    10. ' queue' → logprob: -5.099074363708496

Token 24: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008290675468742847
    2. '=' → logprob: -5.633290767669678
    3. '_' → logprob: -6.383290767669678
    4. ' ' → logprob: -6.633290767669678
    5. '_positions' → logprob: -7.758290767669678
    6. ':' → logprob: -8.13329029083252
    7. '_to' → logprob: -8.13329029083252
    8. ',' → logprob: -9.25829029083252
    9. '   ' → logprob: -9.38329029083252
    10. '=[]' → logprob: -9.63329029083252

Token 25: ' entrance' (ID: 27326)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9987204670906067
    2. ' []' → logprob: -1.623720407485962
    3. ' start' → logprob: -1.873720407485962
    4. '[]' → logprob: -2.748720407485962
    5. ' positions' → logprob: -3.748720407485962
    6. ' player' → logprob: -3.748720407485962
    7. ' collectibles' → logprob: -3.748720407485962
    8. '    ' → logprob: -4.248720645904541
    9. ' deque' → logprob: -4.248720645904541
    10. 'deque' → logprob: -4.373720645904541

Token 26: ' and' (ID: 326)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18537257611751556
    2. 's' → logprob: -2.1853725910186768
    3. ',' → logprob: -3.1853725910186768
    4. '_positions' → logprob: -4.935372352600098
    5. '=' → logprob: -5.685372352600098
    6. ' ' → logprob: -6.935372352600098
    7. '_' → logprob: -6.935372352600098
    8. 'es' → logprob: -7.185372352600098
    9. ' ,' → logprob: -7.435372352600098
    10. '_pos' → logprob: -8.060372352600098

Token 27: ' treasures' (ID: 82685)
  Prédit: ' exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exit' → logprob: -0.33949553966522217
    2. ' exits' → logprob: -2.7144956588745117
    3. ' treasure' → logprob: -3.0894956588745117
    4. ' treasures' → logprob: -3.4644956588745117
    5. ' keys' → logprob: -3.5894956588745117
    6. 'exit' → logprob: -3.9644956588745117
    7. ' collectibles' → logprob: -4.776995658874512
    8. ' all' → logprob: -4.839495658874512
    9. ' items' → logprob: -5.026995658874512
    10. ' coins' → logprob: -5.026995658874512

Token 28: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5277125835418701
    2. ' =' → logprob: -1.5277125835418701
    3. 'positions' → logprob: -1.9027125835418701
    4. '_positions' → logprob: -2.15271258354187
    5. ' positions' → logprob: -2.15271258354187
    6. ',' → logprob: -2.77771258354187
    7. ':' → logprob: -3.27771258354187
    8. '<|end|>' → logprob: -3.77771258354187
    9. '```' → logprob: -3.77771258354187
    10. 's' → logprob: -4.027712821960449

Token 29: '   ' (ID: 271)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.8583962917327881
    2. ' positions' → logprob: -1.483396291732788
    3. '   ' → logprob: -1.858396291732788
    4. '_positions' → logprob: -2.358396291732788
    5. '```' → logprob: -3.733396291732788
    6. ',' → logprob: -4.108396530151367
    7. '<|end|>' → logprob: -4.483396530151367
    8. ' =' → logprob: -4.483396530151367
    9. ':' → logprob: -4.733396530151367
    10. 's' → logprob: -4.858396530151367

Token 30: ' corners' (ID: 39479)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.8986096978187561
    2. 'positions' → logprob: -1.6486096382141113
    3. ' positions' → logprob: -1.8986096382141113
    4. '_positions' → logprob: -2.7736096382141113
    5. '```' → logprob: -3.3986096382141113
    6. ' ' → logprob: -3.3986096382141113
    7. '_' → logprob: -3.8986096382141113
    8. '    
' → logprob: -3.8986096382141113
    9. '  
' → logprob: -4.148609638214111
    10. '   ' → logprob: -4.273609638214111

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018207302317023277
    2. '=' → logprob: -4.01820707321167
    3. ',' → logprob: -10.893207550048828
    4. '_positions' → logprob: -11.143207550048828
    5. '=[]' → logprob: -11.643207550048828
    6. '_' → logprob: -11.893207550048828
    7. ':' → logprob: -12.768207550048828
    8. ')' → logprob: -13.518207550048828
    9. '   ' → logprob: -14.518207550048828
    10. ' =[' → logprob: -14.643207550048828

Token 32: ' [(' (ID: 43900)
  Prédit: ' [('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [(' → logprob: -0.21386268734931946
    2. ' [' → logprob: -2.088862657546997
    3. ' []' → logprob: -3.088862657546997
    4. ' [
' → logprob: -4.338862895965576
    5. '[(' → logprob: -5.088862895965576
    6. '[' → logprob: -6.213862895965576
    7. '[]' → logprob: -6.963862895965576
    8. ' deque' → logprob: -8.213862419128418
    9. ' ' → logprob: -8.713862419128418
    10. '[
' → logprob: -9.088862419128418

Token 33: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00043448375072330236
    2. ' ' → logprob: -8.375434875488281
    3. '(' → logprob: -8.625434875488281
    4. 'N' → logprob: -11.625434875488281
    5. ' (' → logprob: -12.125434875488281
    6. ')' → logprob: -12.750434875488281
    7. '1' → logprob: -13.250434875488281
    8. '   ' → logprob: -13.250434875488281
    9. '(N' → logprob: -13.500434875488281
    10. ',' → logprob: -14.437934875488281

Token 34: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.317247167928144e-05
    2. ' ,' → logprob: -9.625093460083008
    3. '0' → logprob: -10.625093460083008
    4. ',
' → logprob: -13.375093460083008
    5. '<|end|>' → logprob: -14.250093460083008
    6. '‌,' → logprob: -16.250093460083008
    7. ',

' → logprob: -16.250093460083008
    8. ' ' → logprob: -16.375093460083008
    9. '<|end|>' → logprob: -16.625093460083008
    10. '),' → logprob: -16.625093460083008

Token 35: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14267659187316895
    2. ' ' → logprob: -2.017676591873169
    3. ')' → logprob: -15.33017635345459
    4. '  ' → logprob: -15.45517635345459
    5. '   ' → logprob: -15.58017635345459
    6. ',' → logprob: -15.64267635345459
    7. '    ' → logprob: -16.080177307128906
    8. ' )' → logprob: -16.205177307128906
    9. '<|end|>' → logprob: -16.642677307128906
    10. '1' → logprob: -16.767677307128906

Token 36: '),(' (ID: 54876)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.013722670264542103
    2. ')]' → logprob: -4.888722896575928
    3. '),(' → logprob: -5.263722896575928
    4. ')' → logprob: -7.638722896575928
    5. ' ),' → logprob: -8.51372241973877
    6. '),
' → logprob: -8.51372241973877
    7. ',' → logprob: -10.63872241973877
    8. ')])' → logprob: -12.51372241973877
    9. ')],' → logprob: -13.01372241973877
    10. '),

' → logprob: -13.26372241973877

Token 37: 'N' (ID: 45)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22711056470870972
    2. 'N' → logprob: -1.6021106243133545
    3. ' N' → logprob: -6.977110385894775
    4. ' ' → logprob: -7.352110385894775
    5. 'M' → logprob: -9.352110862731934
    6. '1' → logprob: -11.977110862731934
    7. ')' → logprob: -12.227110862731934
    8. '	N' → logprob: -12.227110862731934
    9. '   ' → logprob: -12.477110862731934
    10. '-' → logprob: -12.477110862731934

Token 38: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0028430335223674774
    2. ' -' → logprob: -5.877842903137207
    3. '1' → logprob: -10.252842903137207
    4. ',' → logprob: -13.502842903137207
    5. ' ' → logprob: -13.627842903137207
    6. '−' → logprob: -16.252843856811523
    7. '   ' → logprob: -17.502843856811523
    8. ' ,' → logprob: -17.752843856811523
    9. '```' → logprob: -17.752843856811523
    10. '),' → logprob: -17.815343856811523

Token 39: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.090760431718081e-05
    2. ' ' → logprob: -10.000090599060059
    3. '-' → logprob: -10.375090599060059
    4. '0' → logprob: -11.250090599060059
    5. '```' → logprob: -15.125090599060059
    6. '2' → logprob: -15.500090599060059
    7. ',' → logprob: -15.875090599060059
    8. '   ' → logprob: -15.937590599060059
    9. ')' → logprob: -16.062591552734375
    10. ' -' → logprob: -16.812591552734375

Token 40: ',' (ID: 11)
  Prédit: '),('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.08551887422800064
    2. ')' → logprob: -3.2105188369750977
    3. ',' → logprob: -3.5855188369750977
    4. ')]' → logprob: -4.460518836975098
    5. '),' → logprob: -6.335518836975098
    6. ')])' → logprob: -8.335518836975098
    7. ')],' → logprob: -8.960518836975098
    8. ' )' → logprob: -9.710518836975098
    9. ' ,' → logprob: -9.960518836975098
    10. ',(' → logprob: -10.710518836975098

Token 41: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08269881457090378
    2. 'M' → logprob: -2.5826988220214844
    3. ' M' → logprob: -6.207698822021484
    4. ' ' → logprob: -6.332698822021484
    5. ',M' → logprob: -13.395198822021484
    6. '	M' → logprob: -13.457698822021484
    7. '  ' → logprob: -13.770198822021484
    8. '   ' → logprob: -13.895198822021484
    9. ')' → logprob: -13.957698822021484
    10. '<M' → logprob: -14.145198822021484

Token 42: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.02002638205885887
    2. '),' → logprob: -4.020026206970215
    3. ')]' → logprob: -6.395026206970215
    4. ')' → logprob: -8.770026206970215
    5. ' ),' → logprob: -10.645026206970215
    6. ')],' → logprob: -11.645026206970215
    7. '),
' → logprob: -11.770026206970215
    8. ')])' → logprob: -12.895026206970215
    9. ',' → logprob: -13.395026206970215
    10. '],[' → logprob: -13.520026206970215

Token 43: 'N' (ID: 45)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029857974499464035
    2. 'N' → logprob: -3.529857873916626
    3. ' ' → logprob: -9.779857635498047
    4. 'M' → logprob: -10.529857635498047
    5. ' N' → logprob: -11.029857635498047
    6. ',N' → logprob: -13.779857635498047
    7. '	N' → logprob: -13.967357635498047
    8. '```' → logprob: -14.154857635498047
    9. '(' → logprob: -14.217357635498047
    10. ')' → logprob: -14.342357635498047

Token 44: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.2007883671903983e-05
    2. ' -' → logprob: -11.375021934509277
    3. '1' → logprob: -11.500021934509277
    4. ',' → logprob: -14.750021934509277
    5. '−' → logprob: -17.875022888183594
    6. ' ' → logprob: -17.875022888183594
    7. '```' → logprob: -18.625022888183594
    8. '–' → logprob: -18.937522888183594
    9. '2' → logprob: -19.875022888183594
    10. '-,' → logprob: -20.875022888183594

Token 45: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.60414821645827e-06
    2. '-' → logprob: -12.750004768371582
    3. ' ' → logprob: -13.750004768371582
    4. '```' → logprob: -15.250004768371582
    5. '2' → logprob: -15.937504768371582
    6. '<|end|>' → logprob: -17.562503814697266
    7. '<|end|>' → logprob: -17.875003814697266
    8. 'M' → logprob: -18.375003814697266
    9. '0' → logprob: -18.500003814697266
    10. '১' → logprob: -18.687503814697266

Token 46: ',M' (ID: 54127)
  Prédit: ',M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',M' → logprob: -0.26066380739212036
    2. ',' → logprob: -1.5106637477874756
    3. ',N' → logprob: -4.885663986206055
    4. ',(' → logprob: -7.760663986206055
    5. '),(' → logprob: -7.760663986206055
    6. ' ,' → logprob: -8.260663986206055
    7. ',m' → logprob: -11.510663986206055
    8. '```' → logprob: -12.260663986206055
    9. 'M' → logprob: -13.010663986206055
    10. ',n' → logprob: -13.135663986206055

Token 47: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -7.93448489275761e-05
    2. '1' → logprob: -9.625079154968262
    3. ' -' → logprob: -11.250079154968262
    4. ')' → logprob: -16.500080108642578
    5. '[' → logprob: -17.437580108642578
    6. '```' → logprob: -17.562580108642578
    7. 's' → logprob: -18.000080108642578
    8. ')-' → logprob: -18.062580108642578
    9. '−' → logprob: -18.312580108642578
    10. ' ' → logprob: -18.750080108642578

Token 48: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014334988372866064
    2. '-' → logprob: -8.875143051147461
    3. ' ' → logprob: -13.000143051147461
    4. '```' → logprob: -14.500143051147461
    5. '2' → logprob: -15.250143051147461
    6. ')' → logprob: -15.875143051147461
    7. '   ' → logprob: -16.75014305114746
    8. '<|end|>' → logprob: -16.81264305114746
    9. '<|end|>' → logprob: -17.18764305114746
    10. '۱' → logprob: -17.50014305114746

Token 49: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.07766664028167725
    2. ')]' → logprob: -3.077666759490967
    3. '),' → logprob: -3.577666759490967
    4. ')' → logprob: -7.327666759490967
    5. ' ),' → logprob: -10.452666282653809
    6. ',' → logprob: -11.577666282653809
    7. ' )' → logprob: -12.077666282653809
    8. ')])' → logprob: -12.077666282653809
    9. '))' → logprob: -12.952666282653809
    10. ')],' → logprob: -13.077666282653809

Token 50: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9266199160483666e-05
    2. '(' → logprob: -11.500019073486328
    3. ' ' → logprob: -11.625019073486328
    4. '   ' → logprob: -16.875019073486328
    5. '```' → logprob: -17.375019073486328
    6. ')' → logprob: -17.500019073486328
    7. ',' → logprob: -17.875019073486328
    8. '00' → logprob: -18.000019073486328
    9. '۰' → logprob: -18.125019073486328
    10. ' (' → logprob: -18.250019073486328

Token 51: ',M' (ID: 54127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017553119687363505
    2. ')' → logprob: -9.375175476074219
    3. ',M' → logprob: -9.750175476074219
    4. '0' → logprob: -11.125175476074219
    5. ')]' → logprob: -12.000175476074219
    6. ' ,' → logprob: -12.000175476074219
    7. '-' → logprob: -13.000175476074219
    8. '<|end|>' → logprob: -13.875175476074219
    9. '```' → logprob: -14.750175476074219
    10. ',N' → logprob: -15.125175476074219

Token 52: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00016718693950679153
    2. ')]' → logprob: -8.875166893005371
    3. ')' → logprob: -11.625166893005371
    4. ')])' → logprob: -11.875166893005371
    5. ' -' → logprob: -12.250166893005371
    6. '1' → logprob: -12.375166893005371
    7. '[' → logprob: -13.875166893005371
    8. ')],' → logprob: -14.250166893005371
    9. ')][' → logprob: -15.250166893005371
    10. '−' → logprob: -15.875166893005371

Token 53: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.537868779967539e-06
    2. '-' → logprob: -11.875008583068848
    3. ' ' → logprob: -14.375008583068848
    4. '0' → logprob: -14.500008583068848
    5. '```' → logprob: -14.875008583068848
    6. ')' → logprob: -17.50000762939453
    7. '   ' → logprob: -17.81250762939453
    8. '１' → logprob: -17.81250762939453
    9. '<|end|>' → logprob: -17.93750762939453
    10. '১' → logprob: -18.06250762939453

Token 54: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.001224989420734346
    2. ')' → logprob: -6.751224994659424
    3. ']' → logprob: -10.626224517822266
    4. ')])' → logprob: -10.751224517822266
    5. ' )' → logprob: -12.876224517822266
    6. '),' → logprob: -13.001224517822266
    7. '))' → logprob: -13.751224517822266
    8. '])]' → logprob: -14.001224517822266
    9. '   ' → logprob: -14.251224517822266
    10. '')]' → logprob: -14.376224517822266

Token 55: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6817846894264221
    2. '   ' → logprob: -1.5567846298217773
    3. ':' → logprob: -1.6817846298217773
    4. ',' → logprob: -3.1817846298217773
    5. ':
' → logprob: -3.6817846298217773
    6. ')' → logprob: -4.681784629821777
    7. '```' → logprob: -5.306784629821777
    8. '    
' → logprob: -5.681784629821777
    9. 'def' → logprob: -5.681784629821777
    10. '):' → logprob: -6.181784629821777

Token 56: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9030461311340332
    2. 'def' → logprob: -2.153046131134033
    3. 'visited' → logprob: -2.528046131134033
    4. '
' → logprob: -2.653046131134033
    5. ',' → logprob: -2.778046131134033
    6. ' for' → logprob: -3.403046131134033
    7. '#' (adapté à ' #') → logprob: -3.403046131134033
    8. ':' → logprob: -3.903046131134033
    9. '```' → logprob: -3.903046131134033
    10. '    
' → logprob: -3.903046131134033

Token 57: ' Since' (ID: 12265)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8848459124565125
    2. ' visited' → logprob: -2.5098459720611572
    3. ' positions' → logprob: -2.7598459720611572
    4. ' distances' → logprob: -2.8848459720611572
    5. 'visited' → logprob: -3.0098459720611572
    6. ' queue' → logprob: -3.0098459720611572
    7. ' def' → logprob: -3.1348459720611572
    8. ' return' → logprob: -3.6348459720611572
    9. 'for' → logprob: -3.6348459720611572
    10. ' start' → logprob: -3.8848459720611572

Token 58: ' floors' (ID: 30181)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.3100379705429077
    2. ' not' → logprob: -1.9350379705429077
    3. ' all' → logprob: -1.9350379705429077
    4. ' len' → logprob: -2.3100380897521973
    5. ' N' → logprob: -2.6850380897521973
    6. ' you' → logprob: -2.8100380897521973
    7. ' grid' → logprob: -3.1850380897521973
    8. 'the' → logprob: -3.8100380897521973
    9. 'corn' → logprob: -3.9350380897521973
    10. 'len' → logprob: -4.060038089752197

Token 59: ' collapse' (ID: 38335)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.021745001897215843
    2. 'are' → logprob: -4.771745204925537
    3. ' can' → logprob: -5.271745204925537
    4. ' and' → logprob: -6.021745204925537
    5. ' ' → logprob: -7.021745204925537
    6. ' may' → logprob: -7.021745204925537
    7. ' in' → logprob: -7.146745204925537
    8. ' is' → logprob: -7.396745204925537
    9. ' might' → logprob: -7.646745204925537
    10. '   ' → logprob: -8.271744728088379

Token 60: ' after' (ID: 1934)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02361323870718479
    2. ' ,' → logprob: -3.773613214492798
    3. '   ' → logprob: -8.648612976074219
    4. ' at' → logprob: -10.273612976074219
    5. ' after' → logprob: -10.398612976074219
    6. ',
' → logprob: -10.523612976074219
    7. ' when' → logprob: -10.898612976074219
    8. ' in' → logprob: -11.273612976074219
    9. ' during' → logprob: -11.523612976074219
    10. ' we' → logprob: -11.773612976074219

Token 61: ' stepping' (ID: 63083)
  Prédit: ' one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' one' → logprob: -1.287928581237793
    2. ' stepping' → logprob: -2.037928581237793
    3. ' being' → logprob: -2.162928581237793
    4. ' first' → logprob: -2.162928581237793
    5. 'first' → logprob: -2.537928581237793
    6. 'one' → logprob: -2.537928581237793
    7. ' visiting' → logprob: -3.162928581237793
    8. ' the' → logprob: -3.537928581237793
    9. 'the' → logprob: -3.662928581237793
    10. '```' → logprob: -3.912928581237793

Token 62: ' once' (ID: 4730)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.1279016137123108
    2. ',' → logprob: -2.502901554107666
    3. ' ,' → logprob: -3.627901554107666
    4. ' onto' → logprob: -5.002901554107666
    5. ' into' → logprob: -5.877901554107666
    6. ' in' → logprob: -7.252901554107666
    7. 'on' → logprob: -7.252901554107666
    8. ' ' → logprob: -8.252902030944824
    9. ' off' → logprob: -8.502902030944824
    10. ' through' → logprob: -10.127902030944824

Token 63: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005259014666080475
    2. ' ,' → logprob: -5.630259037017822
    3. '   ' → logprob: -6.630259037017822
    4. ',
' → logprob: -8.130258560180664
    5. 'def' → logprob: -12.130258560180664
    6. ' we' → logprob: -12.130258560180664
    7. ' and' → logprob: -12.380258560180664
    8. ',\' → logprob: -12.630258560180664
    9. ' ' → logprob: -12.880258560180664
    10. ' for' → logprob: -12.880258560180664

Token 64: 'except' (ID: 25035)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.28439342975616455
    2. ' ),' → logprob: -1.7843934297561646
    3. ')' → logprob: -3.409393310546875
    4. ',' → logprob: -4.034393310546875
    5. ' the' → logprob: -4.784393310546875
    6. ' )' → logprob: -4.909393310546875
    7. ' you' → logprob: -5.409393310546875
    8. ' we' → logprob: -5.909393310546875
    9. 'the' → logprob: -6.534393310546875
    10. ' each' → logprob: -6.909393310546875

Token 65: ' entrance' (ID: 27326)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.23383086919784546
    2. ' on' → logprob: -2.3588309288024902
    3. ' the' → logprob: -2.8588309288024902
    4. ' at' → logprob: -3.6088309288024902
    5. ' when' → logprob: -5.23383092880249
    6. ' in' → logprob: -5.23383092880249
    7. ' starting' → logprob: -5.35883092880249
    8. ' if' → logprob: -5.60883092880249
    9. 'the' → logprob: -6.23383092880249
    10. '<|end|>' → logprob: -6.35883092880249

Token 66: '),
' (ID: 2313)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.05056741461157799
    2. ')' → logprob: -3.425567388534546
    3. ' ),' → logprob: -4.925567626953125
    4. ' and' → logprob: -5.050567626953125
    5. ',' → logprob: -6.175567626953125
    6. 'and' → logprob: -7.925567626953125
    7. '):' → logprob: -8.925567626953125
    8. ' )' → logprob: -8.925567626953125
    9. ' at' → logprob: -9.175567626953125
    10. ').' → logprob: -9.300567626953125

Token 67: '   ' (ID: 271)
  Prédit: ' we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' we' → logprob: -0.8682993650436401
    2. ' )' → logprob: -1.1182993650436401
    3. '    ' → logprob: -2.8682994842529297
    4. ' you' → logprob: -2.9932994842529297
    5. ' ),' → logprob: -3.3682994842529297
    6. ')' → logprob: -3.4932994842529297
    7. ' continue' → logprob: -4.11829948425293
    8. '   ' → logprob: -4.11829948425293
    9. ' ,' → logprob: -4.74329948425293
    10. ',' → logprob: -4.74329948425293

Token 68: ' #' (ID: 1069)
  Prédit: ' we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' we' → logprob: -0.3789132833480835
    2. ' you' → logprob: -2.253913402557373
    3. '   ' → logprob: -2.378913402557373
    4. '    ' → logprob: -3.503913402557373
    5. ' there' → logprob: -4.253913402557373
    6. ' the' → logprob: -4.253913402557373
    7. ')' → logprob: -4.753913402557373
    8. ' )' → logprob: -4.878913402557373
    9. ' use' → logprob: -5.628913402557373
    10. ' #' → logprob: -5.628913402557373

Token 69: ' T' (ID: 353)
  Prédit: ' we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' we' → logprob: -1.0769500732421875
    2. ' the' → logprob: -1.9519500732421875
    3. ' all' → logprob: -2.7019500732421875
    4. ' you' → logprob: -2.8269500732421875
    5. ' visited' → logprob: -2.8269500732421875
    6. ' def' → logprob: -3.0769500732421875
    7. ' return' → logprob: -3.2019500732421875
    8. ' entrances' → logprob: -3.5769500732421875
    9. ' no' → logprob: -3.7019500732421875
    10. ' each' → logprob: -3.9519500732421875

Token 70: 'aro' (ID: 8421)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -0.9134345650672913
    2. 'he' → logprob: -1.1634345054626465
    3. 'r' → logprob: -1.7884345054626465
    4. 'here' → logprob: -3.5384345054626465
    5. 'o' → logprob: -4.0384345054626465
    6. '#' → logprob: -4.0384345054626465
    7. 'reas' → logprob: -4.6634345054626465
    8. 'h' → logprob: -5.1634345054626465
    9. 'ries' → logprob: -5.6634345054626465
    10. 'def' → logprob: -5.7884345054626465

Token 71: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.380216509103775
    2. 'can' → logprob: -2.255216598510742
    3. '<|end|>' → logprob: -3.255216598510742
    4. ')' → logprob: -3.505216598510742
    5. ' must' → logprob: -3.880216598510742
    6. '<|end|>' → logprob: -4.005216598510742
    7. 'def' → logprob: -4.505216598510742
    8. ''s' → logprob: -4.505216598510742
    9. ' has' → logprob: -4.880216598510742
    10. ',' → logprob: -5.005216598510742

Token 72: ' visit' (ID: 4030)
  Prédit: ' only'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' only' → logprob: -0.4312560260295868
    2. 'only' → logprob: -2.306256055831909
    3. 'step' → logprob: -3.306256055831909
    4. ' step' → logprob: -3.556256055831909
    5. ' visit' → logprob: -3.556256055831909
    6. ' stand' → logprob: -3.681256055831909
    7. 'visit' → logprob: -3.681256055831909
    8. ' move' → logprob: -4.05625581741333
    9. 'stand' → logprob: -4.30625581741333
    10. 'move' → logprob: -4.80625581741333

Token 73: ' each' (ID: 2454)
  Prédit: ' each'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.3165372312068939
    2. 'each' → logprob: -1.6915372610092163
    3. ' only' → logprob: -3.8165371417999268
    4. ' a' → logprob: -4.441537380218506
    5. ' at' → logprob: -4.441537380218506
    6. ' any' → logprob: -4.441537380218506
    7. ' the' → logprob: -4.941537380218506
    8. ' them' → logprob: -5.816537380218506
    9. 'only' → logprob: -5.941537380218506
    10. ' cells' → logprob: -6.066537380218506

Token 74: ' cell' (ID: 4206)
  Prédit: ' cell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cell' → logprob: -0.7202783823013306
    2. ' floor' → logprob: -1.7202783823013306
    3. 'cell' → logprob: -2.220278263092041
    4. 'floor' → logprob: -2.845278263092041
    5. ' position' → logprob: -3.595278263092041
    6. ' tile' → logprob: -3.845278263092041
    7. ' corner' → logprob: -3.970278263092041
    8. 'corner' → logprob: -4.470278263092041
    9. ' non' → logprob: -4.845278263092041
    10. 'position' → logprob: -4.907778263092041

Token 75: ' only' (ID: 1606)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.5697950720787048
    2. ' only' → logprob: -0.9447950720787048
    3. ' once' → logprob: -3.5697951316833496
    4. 'only' → logprob: -4.81979513168335
    5. 'at' → logprob: -5.31979513168335
    6. 'once' → logprob: -5.56979513168335
    7. ' ' → logprob: -8.194794654846191
    8. ' exactly' → logprob: -9.194794654846191
    9. ',' → logprob: -9.694794654846191
    10. ')' → logprob: -9.694794654846191

Token 76: ' once' (ID: 4730)
  Prédit: ' once'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' once' → logprob: -0.2813567817211151
    2. 'once' → logprob: -1.4063568115234375
    3. '_once' → logprob: -8.781356811523438
    4. ' one' → logprob: -10.531356811523438
    5. 'Once' → logprob: -11.406356811523438
    6. ' exactly' → logprob: -12.656356811523438
    7. 'one' → logprob: -12.906356811523438
    8. ' ' → logprob: -13.156356811523438
    9. ' at' → logprob: -13.531356811523438
    10. '```' → logprob: -13.781356811523438

Token 77: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07244962453842163
    2. ',' → logprob: -3.0724496841430664
    3. ':' → logprob: -4.697449684143066
    4. '.' → logprob: -5.322449684143066
    5. '    
' → logprob: -5.572449684143066
    6. '
' → logprob: -6.572449684143066
    7. '\' → logprob: -6.822449684143066
    8. ')' → logprob: -7.322449684143066
    9. 'def' → logprob: -7.572449684143066
    10. ' ' → logprob: -8.072449684143066

Token 78: ' his' (ID: 1232)
  Prédit: ' his'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' his' → logprob: -1.4731125831604004
    2. 'the' → logprob: -1.7231125831604004
    3. 'a' → logprob: -1.9731125831604004
    4. ' a' → logprob: -2.3481125831604004
    5. ' the' → logprob: -2.7231125831604004
    6. 'his' → logprob: -3.2231125831604004
    7. ' one' → logprob: -3.3481125831604004
    8. ' any' → logprob: -3.3481125831604004
    9. 'each' → logprob: -3.4731125831604004
    10. 'this' → logprob: -3.4731125831604004

Token 79: ' path' (ID: 3104)
  Prédit: ' journey'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' journey' → logprob: -1.2376840114593506
    2. ' life' → logprob: -1.6126840114593506
    3. ' path' → logprob: -1.6126840114593506
    4. 'path' → logprob: -2.1126840114593506
    5. 'life' → logprob: -2.3626840114593506
    6. 'jour' → logprob: -2.9876840114593506
    7. ' lifetime' → logprob: -4.11268424987793
    8. 'l' → logprob: -5.36268424987793
    9. 'return' → logprob: -6.23768424987793
    10. 'lif' → logprob: -6.23768424987793

Token 80: ' except' (ID: 6384)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.053426094353199005
    2. ',' → logprob: -3.3034260272979736
    3. ':' → logprob: -5.178426265716553
    4. '.' → logprob: -6.053426265716553
    5. '    
' → logprob: -6.178426265716553
    6. ' ' → logprob: -6.928426265716553
    7. ')' → logprob: -7.053426265716553
    8. '<|end|>' → logprob: -7.303426265716553
    9. 'def' → logprob: -7.428426265716553
    10. '    ' → logprob: -8.053425788879395

Token 81: ' entrance' (ID: 27326)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.2460152953863144
    2. ' for' → logprob: -1.9960153102874756
    3. 'the' → logprob: -2.8710153102874756
    4. ' (' → logprob: -4.2460150718688965
    5. '(' → logprob: -5.6210150718688965
    6. '<|end|>' → logprob: -5.6210150718688965
    7. 'for' → logprob: -5.9960150718688965
    8. ' possibly' → logprob: -8.121015548706055
    9. ' entrance' → logprob: -8.121015548706055
    10. '<|end|>' → logprob: -8.621015548706055

Token 82: ' which' (ID: 1118)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4168483018875122
    2. ':' → logprob: -1.7918483018875122
    3. ',' → logprob: -2.1668481826782227
    4. '.' → logprob: -4.041848182678223
    5. '\' → logprob: -4.416848182678223
    6. 'def' → logprob: -5.041848182678223
    7. '
' → logprob: -5.291848182678223
    8. '    
' → logprob: -5.291848182678223
    9. ')' → logprob: -5.541848182678223
    10. '\n' → logprob: -6.291848182678223

Token 83: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.08368837088346481
    2. 'can' → logprob: -3.083688259124756
    3. ' is' → logprob: -3.583688259124756
    4. '	can' → logprob: -5.833688259124756
    5. ' he' → logprob: -7.208688259124756
    6. 'is' → logprob: -7.458688259124756
    7. ' may' → logprob: -7.583688259124756
    8. '_can' → logprob: -7.708688259124756
    9. ' has' → logprob: -8.083688735961914
    10. '   ' → logprob: -8.583688735961914

Token 84: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.14306855201721191
    2. 'be' → logprob: -2.018068552017212
    3. '	be' → logprob: -8.143068313598633
    4. 'appear' → logprob: -10.393068313598633
    5. ' also' → logprob: -11.393068313598633
    6. '<|end|>' → logprob: -11.518068313598633
    7. 'also' → logprob: -11.643068313598633
    8. ' appear' → logprob: -11.893068313598633
    9. '```' → logprob: -12.393068313598633
    10. '<|end|>' → logprob: -12.643068313598633

Token 85: ' revis' (ID: 19497)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.06809162348508835
    2. 're' → logprob: -3.193091630935669
    3. 'used' → logprob: -4.31809139251709
    4. 'ste' → logprob: -4.81809139251709
    5. ' revis' → logprob: -6.81809139251709
    6. ' visited' → logprob: -6.94309139251709
    7. 'entered' → logprob: -7.81809139251709
    8. 'cycled' → logprob: -9.06809139251709
    9. '```' → logprob: -9.06809139251709
    10. ' used' → logprob: -9.31809139251709

Token 86: 'ited' (ID: 2106)
  Prédit: 'ted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ted' → logprob: -0.016672568395733833
    2. 't' → logprob: -4.141672611236572
    3. 's' → logprob: -8.141672134399414
    4. 'te' → logprob: -9.016672134399414
    5. 'table' → logprob: -9.016672134399414
    6. 'sed' → logprob: -10.641672134399414
    7. 'tered' → logprob: -11.266672134399414
    8. 'sted' → logprob: -11.516672134399414
    9. 'sible' → logprob: -11.766672134399414
    10. 'tted' → logprob: -12.141672134399414

Token 87: ' any' (ID: 1062)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36747339367866516
    2. ',' → logprob: -2.1174733638763428
    3. ':' → logprob: -2.2424733638763428
    4. ')' → logprob: -3.2424733638763428
    5. '.' → logprob: -4.117473602294922
    6. '
' → logprob: -5.367473602294922
    7. '):' → logprob: -5.492473602294922
    8. '    
' → logprob: -5.742473602294922
    9. 'def' → logprob: -5.867473602294922
    10. ' ' → logprob: -6.242473602294922

Token 88: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.8104789853096008
    2. 'time' → logprob: -1.560478925704956
    3. 'times' → logprob: -1.935478925704956
    4. 'number' → logprob: -2.060478925704956
    5. ' times' → logprob: -2.935478925704956
    6. ' time' → logprob: -4.060479164123535
    7. 'token' → logprob: -7.435479164123535
    8. 'way' → logprob: -7.685479164123535
    9. 'where' → logprob: -7.810479164123535
    10. 'def' → logprob: -8.560479164123535

Token 89: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.24189741909503937
    2. '_' → logprob: -1.866897463798523
    3. '    ' → logprob: -4.1168975830078125
    4. ')' → logprob: -4.2418975830078125
    5. ' ' → logprob: -4.3668975830078125
    6. 'of' → logprob: -5.3668975830078125
    7. ' o' → logprob: -5.9918975830078125
    8. '  ' → logprob: -6.6168975830078125
    9. ' )' → logprob: -6.6168975830078125
    10. ' space' → logprob: -6.7418975830078125

Token 90: ' times' (ID: 4238)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.006717267446219921
    2. ' times' → logprob: -5.006717205047607
    3. 'time' → logprob: -13.631717681884766
    4. '-times' → logprob: -15.131717681884766
    5. '0' → logprob: -15.631717681884766
    6. '1' → logprob: -16.381717681884766
    7. '```' → logprob: -16.506717681884766
    8. ' ' → logprob: -16.631717681884766
    9. 'tim' → logprob: -17.506717681884766
    10. 't' → logprob: -17.506717681884766

Token 91: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5791658163070679
    2. ':' → logprob: -1.2041658163070679
    3. '
' → logprob: -3.5791659355163574
    4. ',' → logprob: -3.5791659355163574
    5. '\' → logprob: -3.8291659355163574
    6. '    
' → logprob: -4.079165935516357
    7. ')' → logprob: -4.454165935516357
    8. 'def' → logprob: -4.704165935516357
    9. ' 
' → logprob: -5.204165935516357
    10. '):' → logprob: -5.829165935516357

Token 92: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07052383571863174
    2. 'def' → logprob: -3.695523738861084
    3. '    
' → logprob: -3.945523738861084
    4. ' 
' → logprob: -4.820523738861084
    5. '\' → logprob: -5.445523738861084
    6. ' ' → logprob: -5.820523738861084
    7. '
' → logprob: -5.945523738861084
    8. '   
' → logprob: -6.945523738861084
    9. '\n' → logprob: -7.195523738861084
    10. '    ' → logprob: -7.195523738861084

Token 93: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6087594628334045
    2. ' 
' → logprob: -1.4837594032287598
    3. '    
' → logprob: -2.2337594032287598
    4. '\' → logprob: -3.1087594032287598
    5. '
' → logprob: -3.6087594032287598
    6. 'def' → logprob: -4.60875940322876
    7. '    ' → logprob: -4.73375940322876
    8. ' ' → logprob: -4.85875940322876
    9. '\n' → logprob: -5.35875940322876
    10. '   
' → logprob: -5.48375940322876

Token 94: ' We' (ID: 1416)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24481558799743652
    2. 'def' → logprob: -2.2448155879974365
    3. ' 
' → logprob: -3.8698155879974365
    4. '    
' → logprob: -3.9948155879974365
    5. ' def' → logprob: -3.9948155879974365
    6. ' ' → logprob: -4.619815826416016
    7. '    ' → logprob: -4.869815826416016
    8. '
' → logprob: -5.244815826416016
    9. ' \' → logprob: -5.619815826416016
    10. '\' → logprob: -5.744815826416016

Token 95: ' need' (ID: 1309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.023238953202962875
    2. ''' → logprob: -4.3982391357421875
    3. ' need' → logprob: -6.0232391357421875
    4. ''ll' → logprob: -6.1482391357421875
    5. ' want' → logprob: -6.6482391357421875
    6. ' can' → logprob: -7.1482391357421875
    7. '_' → logprob: -7.3982391357421875
    8. ' space' → logprob: -7.7732391357421875
    9. ' ,' → logprob: -8.023239135742188
    10. 'n' → logprob: -8.148239135742188

Token 96: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.014270694926381111
    2. 'to' → logprob: -4.264270782470703
    3. ' a' → logprob: -9.639270782470703
    4. 'def' → logprob: -11.389270782470703
    5. '    ' → logprob: -12.014270782470703
    6. '   ' → logprob: -12.514270782470703
    7. ' the' → logprob: -12.764270782470703
    8. '<|end|>' → logprob: -12.764270782470703
    9. '<|end|>' → logprob: -13.014270782470703
    10. ' an' → logprob: -13.389270782470703

Token 97: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.6723635792732239
    2. ' check' → logprob: -1.047363519668579
    3. 'find' → logprob: -2.672363519668579
    4. 'check' → logprob: -3.922363519668579
    5. ' explore' → logprob: -4.297363758087158
    6. ' implement' → logprob: -4.422363758087158
    7. 'expl' → logprob: -5.672363758087158
    8. ' determine' → logprob: -5.922363758087158
    9. 'simulate' → logprob: -6.047363758087158
    10. 'def' → logprob: -6.172363758087158

Token 98: ' if' (ID: 538)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.17126578092575073
    2. ' paths' → logprob: -2.5462658405303955
    3. ' if' → logprob: -3.7962658405303955
    4. ' the' → logprob: -3.7962658405303955
    5. ' whether' → logprob: -3.9212658405303955
    6. ' all' → logprob: -4.921265602111816
    7. ' an' → logprob: -6.046265602111816
    8. 'a' → logprob: -6.421265602111816
    9. ' out' → logprob: -6.921265602111816
    10. 'paths' → logprob: -7.671265602111816

Token 99: ' there's' (ID: 15333)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.46626758575439453
    2. ' there' → logprob: -1.0912675857543945
    3. ' T' → logprob: -4.5912675857543945
    4. ' there's' → logprob: -5.2162675857543945
    5. ' any' → logprob: -5.3412675857543945
    6. ' all' → logprob: -5.4662675857543945
    7. ' the' → logprob: -5.7162675857543945
    8. 'a' → logprob: -5.9662675857543945
    9. ' paths' → logprob: -6.3412675857543945
    10. ' he' → logprob: -6.7162675857543945

Token 100: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.0017171852523460984
    2. ' any' → logprob: -7.0017170906066895
    3. 'a' → logprob: -7.2517170906066895
    4. ' an' → logprob: -10.126717567443848
    5. ' at' → logprob: -10.876717567443848
    6. ' ' → logprob: -11.001717567443848
    7. ' some' → logprob: -11.751717567443848
    8. ' enough' → logprob: -12.626717567443848
    9. ' space' → logprob: -13.001717567443848
    10. 'any' → logprob: -13.376717567443848

Token 101: ' path' (ID: 3104)
  Prédit: ' path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' path' → logprob: -0.01516494806855917
    2. 'path' → logprob: -4.765164852142334
    3. ' way' → logprob: -5.765164852142334
    4. ' space' → logprob: -6.390164852142334
    5. ' valid' → logprob: -7.515164852142334
    6. ' feasible' → logprob: -8.390165328979492
    7. 'space' → logprob: -8.890165328979492
    8. ' sequence' → logprob: -9.265165328979492
    9. ' route' → logprob: -9.265165328979492
    10. ' possible' → logprob: -9.265165328979492

Token 102: ' start' (ID: 1604)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.6658436059951782
    2. ' ' → logprob: -1.1658436059951782
    3. '<|end|>' → logprob: -2.7908434867858887
    4. ' to' → logprob: -3.4158434867858887
    5. '    ' → logprob: -3.5408434867858887
    6. ',' → logprob: -4.040843486785889
    7. '   ' → logprob: -4.415843486785889
    8. ' ,' → logprob: -5.165843486785889
    9. ')' → logprob: -5.540843486785889
    10. '  ' → logprob: -5.790843486785889

Token 103: '->' (ID: 609)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.002091615227982402
    2. ' ' → logprob: -8.002091407775879
    3. ' ing' → logprob: -8.002091407775879
    4. '   ' → logprob: -8.377091407775879
    5. '<|end|>' → logprob: -8.377091407775879
    6. ',' → logprob: -8.752091407775879
    7. 's' → logprob: -9.252091407775879
    8. ' to' → logprob: -9.502091407775879
    9. '[' → logprob: -9.877091407775879
    10. '=' → logprob: -10.002091407775879

Token 104: 'tre' (ID: 4086)
  Prédit: 'corn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'corn' → logprob: -0.6948493719100952
    2. 'entr' → logprob: -2.1948494911193848
    3. 'end' → logprob: -2.5698494911193848
    4. ' entrance' → logprob: -2.6948494911193848
    5. 'corner' → logprob: -2.8198494911193848
    6. '(' → logprob: -2.9448494911193848
    7. ' corners' → logprob: -3.5698494911193848
    8. ' (' → logprob: -3.8198494911193848
    9. ' treasure' → logprob: -4.569849491119385
    10. 'tre' → logprob: -4.694849491119385

Token 105: 'asure' (ID: 5450)
  Prédit: 'asure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'asure' → logprob: -0.01990298181772232
    2. 'asures' → logprob: -4.269903182983398
    3. 'as' → logprob: -5.894903182983398
    4. 'a' → logprob: -6.769903182983398
    5. 'asury' → logprob: -7.894903182983398
    6. 'asuring' → logprob: -8.269903182983398
    7. 'sure' → logprob: -8.644903182983398
    8. 'asurer' → logprob: -8.894903182983398
    9. 'ASURE' → logprob: -9.144903182983398
    10. '```' → logprob: -9.269903182983398

Token 106: '1' (ID: 16)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2516040802001953
    2. ',' → logprob: -1.6266040802001953
    3. ' ,' → logprob: -1.6266040802001953
    4. ' ' → logprob: -2.0016040802001953
    5. '   ' → logprob: -2.7516040802001953
    6. 's' → logprob: -3.3766040802001953
    7. ' )' → logprob: -3.7516040802001953
    8. '  ' → logprob: -4.751604080200195
    9. 'def' → logprob: -4.751604080200195
    10. ':' → logprob: -5.126604080200195

Token 107: '->' (ID: 609)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11923130601644516
    2. ' ,' → logprob: -3.3692312240600586
    3. ' and' → logprob: -3.7442312240600586
    4. '   ' → logprob: -4.244231224060059
    5. ' ' → logprob: -4.619231224060059
    6. ')' → logprob: -5.244231224060059
    7. ' or' → logprob: -5.744231224060059
    8. '<|end|>' → logprob: -5.994231224060059
    9. '    ' → logprob: -6.369231224060059
    10. ' to' → logprob: -6.494231224060059

Token 108: 'tre' (ID: 4086)
  Prédit: 'tre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tre' → logprob: -0.2027508169412613
    2. ' treasure' → logprob: -1.7027508020401
    3. ' tre' → logprob: -7.5777506828308105
    4. ' ' → logprob: -8.952751159667969
    5. ' ' → logprob: -9.015251159667969
    6. '...' → logprob: -9.202751159667969
    7. ' treasures' → logprob: -10.015251159667969
    8. ''t' → logprob: -10.077751159667969
    9. ''' → logprob: -10.077751159667969
    10. '```' → logprob: -10.515251159667969

Token 109: 'asure' (ID: 5450)
  Prédit: 'asure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'asure' → logprob: -0.006081187631934881
    2. 'as' → logprob: -5.8810811042785645
    3. 'asures' → logprob: -6.3810811042785645
    4. 'a' → logprob: -6.6310811042785645
    5. 'asu' → logprob: -9.881081581115723
    6. 'asurer' → logprob: -10.381081581115723
    7. 'sure' → logprob: -10.881081581115723
    8. ' as' → logprob: -10.881081581115723
    9. '```' → logprob: -10.881081581115723
    10. 'asury' → logprob: -11.006081581115723

Token 110: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2033909559249878
    2. 's' → logprob: -1.7033909559249878
    3. '_' → logprob: -7.203391075134277
    4. ',' → logprob: -8.578391075134277
    5. ' ' → logprob: -8.828391075134277
    6. '1' → logprob: -8.828391075134277
    7. '(s' → logprob: -9.203391075134277
    8. ')' → logprob: -9.328391075134277
    9. '<|end|>' → logprob: -9.328391075134277
    10. '>' → logprob: -9.453391075134277

Token 111: '->' (ID: 609)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8045591115951538
    2. ')' → logprob: -2.1795592308044434
    3. '_' → logprob: -2.1795592308044434
    4. '<|end|>' → logprob: -2.1795592308044434
    5. ' ' → logprob: -3.4295592308044434
    6. '   ' → logprob: -3.4295592308044434
    7. ' _' → logprob: -3.6795592308044434
    8. '[' → logprob: -4.179559230804443
    9. '<|end|>' → logprob: -4.304559230804443
    10. '#' → logprob: -4.304559230804443

Token 112: 'tre' (ID: 4086)
  Prédit: 'tre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tre' → logprob: -0.39414605498313904
    2. ' treasure' → logprob: -1.7691460847854614
    3. '...' → logprob: -2.019145965576172
    4. '"' → logprob: -5.269145965576172
    5. ' ...' → logprob: -5.269145965576172
    6. ''' → logprob: -6.269145965576172
    7. 'corner' → logprob: -6.519145965576172
    8. ' tre' → logprob: -6.769145965576172
    9. ' ' → logprob: -6.894145965576172
    10. 'entr' → logprob: -7.019145965576172

Token 113: 'asure' (ID: 5450)
  Prédit: 'asure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'asure' → logprob: -0.006175740156322718
    2. 'as' → logprob: -5.756175518035889
    3. 'a' → logprob: -6.506175518035889
    4. 'asures' → logprob: -6.631175518035889
    5. 'asu' → logprob: -10.131175994873047
    6. 'sure' → logprob: -10.631175994873047
    7. ' as' → logprob: -11.006175994873047
    8. 'ASURE' → logprob: -11.381175994873047
    9. 's' → logprob: -11.881175994873047
    10. 'asurer' → logprob: -11.881175994873047

Token 114: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.2364247590303421
    2. '1' → logprob: -1.8614248037338257
    3. 's' → logprob: -2.986424684524536
    4. ')' → logprob: -6.861424922943115
    5. '2' → logprob: -7.111424922943115
    6. ',' → logprob: -7.611424922943115
    7. 'r' → logprob: -7.611424922943115
    8. '...' → logprob: -7.736424922943115
    9. ' ' → logprob: -7.736424922943115
    10. ']' → logprob: -8.611424446105957

Token 115: '->' (ID: 609)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1122329235076904
    2. ')' → logprob: -1.3622329235076904
    3. '<|end|>' → logprob: -1.7372329235076904
    4. '   ' → logprob: -2.3622329235076904
    5. '<|end|>' → logprob: -3.3622329235076904
    6. '#' → logprob: -3.6122329235076904
    7. '...' → logprob: -4.1122331619262695
    8. ' and' → logprob: -4.6122331619262695
    9. '):' → logprob: -4.6122331619262695
    10. 'def' → logprob: -4.7372331619262695

Token 116: 'start' (ID: 5236)
  Prédit: 'tre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tre' → logprob: -0.19578856229782104
    2. ' treasure' → logprob: -2.195788621902466
    3. '...' → logprob: -2.945788621902466
    4. 'corner' → logprob: -5.695788383483887
    5. ' ...' → logprob: -6.820788383483887
    6. ' ' → logprob: -6.945788383483887
    7. ' (' → logprob: -7.008288383483887
    8. 'corn' → logprob: -7.070788383483887
    9. ' corner' → logprob: -7.070788383483887
    10. ' treasures' → logprob: -7.383288383483887

Token 117: ' with' (ID: 483)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5092713236808777
    2. '   ' → logprob: -1.3842713832855225
    3. ' ' → logprob: -3.2592713832855225
    4. ',' → logprob: -3.2592713832855225
    5. ' :' → logprob: -3.3842713832855225
    6. '
' → logprob: -5.259271144866943
    7. ':
' → logprob: -5.384271144866943
    8. ' 
' → logprob: -5.509271144866943
    9. 'def' → logprob: -5.634271144866943
    10. ' :
' → logprob: -5.759271144866943

Token 118: ' that' (ID: 484)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.7312290072441101
    2. ' all' → logprob: -0.8562290072441101
    3. ' spaces' → logprob: -3.856229066848755
    4. ' BFS' → logprob: -4.106228828430176
    5. ' the' → logprob: -4.606228828430176
    6. ' no' → logprob: -4.856228828430176
    7. ' space' → logprob: -5.356228828430176
    8. ' a' → logprob: -5.481228828430176
    9. ' only' → logprob: -5.481228828430176
    10. ' each' → logprob: -5.481228828430176

Token 119: ' constraint' (ID: 44762)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9975863099098206
    2. '_' → logprob: -1.2475862503051758
    3. ' ' → logprob: -2.122586250305176
    4. ' :' → logprob: -2.497586250305176
    5. ')' → logprob: -2.622586250305176
    6. ',' → logprob: -3.622586250305176
    7. ' ,' → logprob: -4.372586250305176
    8. ' _' → logprob: -4.497586250305176
    9. ' )' → logprob: -5.997586250305176
    10. 'def' → logprob: -6.372586250305176

Token 120: '.

' (ID: 364)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6893964409828186
    2. '   ' → logprob: -1.4393963813781738
    3. ' :' → logprob: -2.189396381378174
    4. ' ' → logprob: -3.064396381378174
    5. ' 
' → logprob: -3.439396381378174
    6. ',' → logprob: -4.064396381378174
    7. 'def' → logprob: -4.189396381378174
    8. ' :
' → logprob: -4.314396381378174
    9. ':
' → logprob: -4.939396381378174
    10. '\' → logprob: -6.064396381378174

Token 121: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13396109640598297
    2. ':' → logprob: -2.7589612007141113
    3. ' 
' → logprob: -4.008961200714111
    4. ' :' → logprob: -4.633961200714111
    5. 'def' → logprob: -5.008961200714111
    6. ',' → logprob: -5.258961200714111
    7. '    ' → logprob: -5.508961200714111
    8. '    
' → logprob: -5.633961200714111
    9. ' ' → logprob: -5.883961200714111
    10. '\' → logprob: -6.133961200714111

Token 122: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.37579864263534546
    2. ' 
' → logprob: -2.0007987022399902
    3. '   ' → logprob: -2.3757987022399902
    4. 'def' → logprob: -3.5007987022399902
    5. '    ' → logprob: -3.7507987022399902
    6. '#' (adapté à ' #') → logprob: -4.37579870223999
    7. ' #' → logprob: -5.50079870223999
    8. ' \' → logprob: -5.87579870223999
    9. '    
' → logprob: -6.37579870223999
    10. '  ' → logprob: -6.50079870223999

Token 123: ' We'll' (ID: 46830)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3730103373527527
    2. ' #' → logprob: -2.4980103969573975
    3. ' pass' → logprob: -2.9980103969573975
    4. '   ' → logprob: -3.3730103969573975
    5. 'def' → logprob: -3.3730103969573975
    6. 'return' → logprob: -3.3730103969573975
    7. 'pass' → logprob: -3.4980103969573975
    8. 'visited' → logprob: -3.8730103969573975
    9. ' return' → logprob: -4.748010158538818
    10. ' visited' → logprob: -5.248010158538818

Token 124: ' represent' (ID: 5188)
  Prédit: 'implement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'implement' → logprob: -1.1028860807418823
    2. ' implement' → logprob: -1.3528860807418823
    3. ' use' → logprob: -1.7278860807418823
    4. 'continue' → logprob: -2.352886199951172
    5. 'use' → logprob: -2.352886199951172
    6. ' continue' → logprob: -4.477886199951172
    7. 'simulate' → logprob: -5.102886199951172
    8. 'import' → logprob: -5.852886199951172
    9. 'need' → logprob: -5.977886199951172
    10. ' need' → logprob: -6.102886199951172

Token 125: ' states' (ID: 9407)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.678562581539154
    2. ' states' → logprob: -1.8035626411437988
    3. 'the' → logprob: -2.428562641143799
    4. 'visited' → logprob: -2.803562641143799
    5. ' each' → logprob: -3.178562641143799
    6. 'state' → logprob: -3.553562641143799
    7. 'states' → logprob: -3.678562641143799
    8. ' visited' → logprob: -3.803562641143799
    9. ' grid' → logprob: -4.053562641143799
    10. ' state' → logprob: -4.303562641143799

Token 126: ' as' (ID: 472)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 127: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.00044008632539771497
    2. '(' → logprob: -9.500439643859863
    3. '(node' → logprob: -9.500439643859863
    4. '(state' → logprob: -9.750439643859863
    5. '(x' → logprob: -9.875439643859863
    6. '(queue' → logprob: -10.000439643859863
    7. '(position' → logprob: -10.125439643859863
    8. ' tuples' → logprob: -10.625439643859863
    9. '(row' → logprob: -11.125439643859863
    10. '(current' → logprob: -11.250439643859863

Token 128: 'r' (ID: 81)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.10191921889781952
    2. ' x' → logprob: -2.351919174194336
    3. 'r' → logprob: -7.101919174194336
    4. 'row' → logprob: -7.601919174194336
    5. ' r' → logprob: -8.601919174194336
    6. ' row' → logprob: -9.476919174194336
    7. 'i' → logprob: -10.601919174194336
    8. ')' → logprob: -10.851919174194336
    9. 'y' → logprob: -11.476919174194336
    10. ' i' → logprob: -11.601919174194336

Token 129: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023750975378789008
    2. ',c' → logprob: -9.000237464904785
    3. ' ,' → logprob: -9.125237464904785
    4. ',w' → logprob: -14.375237464904785
    5. ',b' → logprob: -14.500237464904785
    6. ',r' → logprob: -14.500237464904785
    7. ',m' → logprob: -14.625237464904785
    8. ',int' → logprob: -14.875237464904785
    9. ',column' → logprob: -14.875237464904785
    10. ',col' → logprob: -15.000237464904785

Token 130: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2519313097000122
    2. ' c' → logprob: -1.5019313097000122
    3. ')c' → logprob: -13.251931190490723
    4. '	c' → logprob: -16.00193214416504
    5. ' ' → logprob: -16.50193214416504
    6. ',c' → logprob: -16.87693214416504
    7. ' ' → logprob: -17.12693214416504
    8. '   ' → logprob: -17.87693214416504
    9. ',' → logprob: -18.25193214416504
    10. ')' → logprob: -18.37693214416504

Token 131: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020342117932159454
    2. ')' → logprob: -8.875203132629395
    3. ' ,' → logprob: -10.250203132629395
    4. '),' → logprob: -11.125203132629395
    5. ',state' → logprob: -12.000203132629395
    6. ',r' → logprob: -13.125203132629395
    7. ',
' → logprob: -14.250203132629395
    8. '   ' → logprob: -14.625203132629395
    9. ',n' → logprob: -15.000203132629395
    10. ',)' → logprob: -15.125203132629395

Token 132: ' collected' (ID: 20480)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.9701152443885803
    2. 'mask' → logprob: -1.0951151847839355
    3. 'visited' → logprob: -1.9701151847839355
    4. 'fro' → logprob: -2.8451151847839355
    5. 'tre' → logprob: -3.8451151847839355
    6. ' mask' → logprob: -4.0951151847839355
    7. ' collected' → logprob: -4.0951151847839355
    8. 'bit' → logprob: -5.0951151847839355
    9. ' visited' → logprob: -5.2201151847839355
    10. ')' → logprob: -5.4701151847839355

Token 133: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.1602872759103775
    2. ',' → logprob: -2.410287380218506
    3. '_t' → logprob: -3.785287380218506
    4. ')' → logprob: -4.035287380218506
    5. '_bits' → logprob: -5.035287380218506
    6. '_masks' → logprob: -5.410287380218506
    7. '_items' → logprob: -5.910287380218506
    8. '_bit' → logprob: -6.160287380218506
    9. 'mask' → logprob: -6.910287380218506
    10. ' ,' → logprob: -8.035286903381348

Token 134: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6937061548233032
    2. ',' → logprob: -0.6937061548233032
    3. ' )' → logprob: -8.318706512451172
    4. '   ' → logprob: -8.818706512451172
    5. ' ,' → logprob: -9.068706512451172
    6. ',)' → logprob: -10.943706512451172
    7. '),' → logprob: -11.693706512451172
    8. '):' → logprob: -12.318706512451172
    9. ',
' → logprob: -13.318706512451172
    10. ' ' → logprob: -13.318706512451172

Token 135: '   ' (ID: 271)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8702164888381958
    2. ':' → logprob: -1.1202164888381958
    3. '):' → logprob: -1.7452164888381958
    4. ')' → logprob: -2.6202163696289062
    5. '   ' → logprob: -5.745216369628906
    6. ' :' → logprob: -6.870216369628906
    7. ' ,' → logprob: -7.120216369628906
    8. ' ):' → logprob: -7.370216369628906
    9. '=' → logprob: -7.620216369628906
    10. ' ' → logprob: -7.620216369628906

Token 136: ' #' (ID: 1069)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3293454945087433
    2. '):' → logprob: -2.454345464706421
    3. '   ' → logprob: -2.579345464706421
    4. ',' → logprob: -3.079345464706421
    5. ' :' → logprob: -3.329345464706421
    6. ')' → logprob: -4.079345703125
    7. ' ' → logprob: -4.704345703125
    8. ' ):' → logprob: -5.454345703125
    9. '    ' → logprob: -6.579345703125
    10. ' =' → logprob: -7.079345703125

Token 137: ' collected' (ID: 20480)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09509880840778351
    2. ')' → logprob: -3.5950987339019775
    3. ':' → logprob: -3.5950987339019775
    4. 'def' → logprob: -4.720098972320557
    5. ' visited' → logprob: -5.220098972320557
    6. ' ' → logprob: -5.595098972320557
    7. ',' → logprob: -6.095098972320557
    8. ' :' → logprob: -6.095098972320557
    9. '    ' → logprob: -6.345098972320557
    10. '    
' → logprob: -6.595098972320557

Token 138: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.001052103703841567
    2. '_masks' → logprob: -7.251051902770996
    3. '_bits' → logprob: -8.876051902770996
    4. '_states' → logprob: -9.876051902770996
    5. '_' → logprob: -10.251051902770996
    6. '_tokens' → logprob: -10.501051902770996
    7. 'mask' → logprob: -10.751051902770996
    8. '_positions' → logprob: -11.251051902770996
    9. '_MASK' → logprob: -11.501051902770996
    10. '_points' → logprob: -12.251051902770996

Token 139: ' is' (ID: 382)
  Prédit: ' |='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' |=' → logprob: -0.3564506471157074
    2. '|' → logprob: -2.2314505577087402
    3. ' =' → logprob: -2.3564505577087402
    4. ')' → logprob: -3.4814505577087402
    5. ' |' → logprob: -3.4814505577087402
    6. '=' → logprob: -4.10645055770874
    7. ' <<=' → logprob: -4.60645055770874
    8. '<|end|>' → logprob: -5.48145055770874
    9. ',' → logprob: -5.85645055770874
    10. ' ' → logprob: -7.85645055770874

Token 140: ' a' (ID: 261)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2131594717502594
    2. ' ' → logprob: -2.2131595611572266
    3. ' an' → logprob: -2.5881595611572266
    4. ' a' → logprob: -5.213159561157227
    5. ' the' → logprob: -7.588159561157227
    6. '4' → logprob: -7.838159561157227
    7. 'int' → logprob: -8.338159561157227
    8. '   ' → logprob: -8.588159561157227
    9. ' int' → logprob: -8.713159561157227
    10. ' (' → logprob: -8.838159561157227

Token 141: ' ' (ID: 220)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.1839870810508728
    2. '4' → logprob: -2.4339871406555176
    3. '3' → logprob: -3.4339871406555176
    4. ' ' → logprob: -3.5589871406555176
    5. ' bit' → logprob: -3.9339871406555176
    6. 'bitmap' → logprob: -10.68398666381836
    7. '0' → logprob: -11.05898666381836
    8. 'int' → logprob: -11.43398666381836
    9. 'integer' → logprob: -11.55898666381836
    10. 'bits' → logprob: -12.18398666381836

Token 142: '3' (ID: 18)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.0020903039257973433
    2. '4' → logprob: -6.5020904541015625
    3. '3' → logprob: -7.5020904541015625
    4. 'bitmap' → logprob: -11.252090454101562
    5. 'int' → logprob: -11.377090454101562
    6. ' bit' → logprob: -12.002090454101562
    7. 'bits' → logprob: -12.752090454101562
    8. '0' → logprob: -13.877090454101562
    9. 'integer' → logprob: -14.002090454101562
    10. 'binary' → logprob: -15.627090454101562

Token 143: '-bit' (ID: 33736)
  Prédit: '-bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-bit' → logprob: -0.9839497804641724
    2. ')' → logprob: -1.6089497804641724
    3. '-' → logprob: -1.9839497804641724
    4. '>' → logprob: -2.108949661254883
    5. 'bit' → logprob: -3.483949661254883
    6. ' bit' → logprob: -3.733949661254883
    7. '0' → logprob: -3.983949661254883
    8. '^' → logprob: -4.358949661254883
    9. '<|end|>' → logprob: -4.483949661254883
    10. '|' → logprob: -4.733949661254883

Token 144: ' integer' (ID: 16336)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 145: ' marking' (ID: 62550)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4273056387901306
    2. ')' → logprob: -1.3023056983947754
    3. ':' → logprob: -3.4273056983947754
    4. '   ' → logprob: -3.9273056983947754
    5. ' )' → logprob: -5.427305698394775
    6. ' ' → logprob: -5.552305698394775
    7. '<|end|>' → logprob: -5.552305698394775
    8. ' ,' → logprob: -5.927305698394775
    9. '):' → logprob: -6.052305698394775
    10. '[' → logprob: -6.677305698394775

Token 146: ' which' (ID: 1118)
  Prédit: ' which'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' which' → logprob: -0.009447099640965462
    2. 'which' → logprob: -4.88444709777832
    3. ' the' → logprob: -6.88444709777832
    4. ' collected' → logprob: -7.88444709777832
    5. ' treasures' → logprob: -8.75944709777832
    6. 'col' → logprob: -9.00944709777832
    7. 'the' → logprob: -9.50944709777832
    8. 'tre' → logprob: -10.63444709777832
    9. 'visited' → logprob: -11.50944709777832
    10. ' whether' → logprob: -11.50944709777832

Token 147: ' of' (ID: 328)
  Prédit: 'tre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tre' → logprob: -0.714149534702301
    2. ' treasures' → logprob: -0.714149534702301
    3. ' treasure' → logprob: -4.089149475097656
    4. 't' → logprob: -6.714149475097656
    5. ' of' → logprob: -7.839149475097656
    6. 'tokens' → logprob: -8.026649475097656
    7. ' tre' → logprob: -8.651649475097656
    8. 'Treas' → logprob: -8.839149475097656
    9. 'items' → logprob: -8.901649475097656
    10. 'corn' → logprob: -8.901649475097656

Token 148: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.3789743483066559
    2. ' the' → logprob: -1.3789743185043335
    3. 'tre' → logprob: -3.378974437713623
    4. ' treasures' → logprob: -3.878974437713623
    5. 'three' → logprob: -5.878974437713623
    6. ' three' → logprob: -6.878974437713623
    7. '[' → logprob: -6.878974437713623
    8. ' ' → logprob: -7.003974437713623
    9. '3' → logprob: -7.003974437713623
    10. 'corn' → logprob: -7.378974437713623

Token 149: ' ' (ID: 220)
  Prédit: 'tre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tre' → logprob: -0.924746572971344
    2. ' three' → logprob: -1.5497465133666992
    3. ' treasures' → logprob: -1.5497465133666992
    4. 'three' → logprob: -2.424746513366699
    5. '3' → logprob: -2.924746513366699
    6. ' ' → logprob: -3.924746513366699
    7. ' tres' → logprob: -4.799746513366699
    8. 'corn' → logprob: -5.549746513366699
    9. ' treasure' → logprob: -7.174746513366699
    10. 't' → logprob: -7.674746513366699

Token 150: '3' (ID: 18)
  Prédit: 'tre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tre' → logprob: -0.6338370442390442
    2. 'three' → logprob: -1.5088369846343994
    3. '3' → logprob: -2.2588369846343994
    4. 'corn' → logprob: -2.8838369846343994
    5. '4' → logprob: -3.7588369846343994
    6. ' three' → logprob: -3.8838369846343994
    7. ' treasures' → logprob: -4.3838372230529785
    8. ' ' → logprob: -4.3838372230529785
    9. 'four' → logprob: -4.7588372230529785
    10. 't' → logprob: -5.5088372230529785

Token 151: ' treasure' (ID: 47849)
  Prédit: ' treasures'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' treasures' → logprob: -0.2688503563404083
    2. 'tre' → logprob: -1.518850326538086
    3. ' treasure' → logprob: -4.643850326538086
    4. 'corn' → logprob: -6.268850326538086
    5. 't' → logprob: -6.893850326538086
    6. ' corners' → logprob: -7.393850326538086
    7. ' tre' → logprob: -7.706350326538086
    8. '_t' → logprob: -7.831350326538086
    9. 'Treas' → logprob: -7.956350326538086
    10. ' bits' → logprob: -8.081350326538086

Token 152: ' ch' (ID: 549)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02597152441740036
    2. ' bits' → logprob: -4.275971412658691
    3. 'bits' → logprob: -4.900971412658691
    4. '<|end|>' → logprob: -6.650971412658691
    5. '(s' → logprob: -7.025971412658691
    6. '_bits' → logprob: -7.775971412658691
    7. 'cells' → logprob: -7.775971412658691
    8. ' cells' → logprob: -7.900971412658691
    9. ')' → logprob: -8.900971412658691
    10. ' have' → logprob: -8.900971412658691

Token 153: 'ests' (ID: 7558)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.9796096682548523
    2. 'unks' → logprob: -1.104609727859497
    3. 'ck' → logprob: -2.479609727859497
    4. 'rs' → logprob: -3.479609727859497
    5. 's' → logprob: -3.604609727859497
    6. '```' → logprob: -3.729609727859497
    7. 'd' → logprob: -3.854609727859497
    8. 'ars' → logprob: -4.104609489440918
    9. 'cks' → logprob: -4.604609489440918
    10. '_' → logprob: -4.604609489440918

Token 154: ' are' (ID: 553)
  Prédit: ' have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' have' → logprob: -1.0300781726837158
    2. ' are' → logprob: -1.5300781726837158
    3. ')' → logprob: -1.9050781726837158
    4. ' has' → logprob: -2.030078172683716
    5. ' is' → logprob: -2.405078172683716
    6. '<|end|>' → logprob: -4.030077934265137
    7. ' were' → logprob: -4.905077934265137
    8. ' we' → logprob: -5.405077934265137
    9. ' was' → logprob: -5.405077934265137
    10. ' )' → logprob: -5.655077934265137

Token 155: ' collected' (ID: 20480)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.21231822669506073
    2. ' collected' → logprob: -1.7123181819915771
    3. 'visited' → logprob: -5.087318420410156
    4. 'found' → logprob: -5.712318420410156
    5. 'picked' → logprob: -7.712318420410156
    6. ' found' → logprob: -7.962318420410156
    7. ' visited' → logprob: -8.212318420410156
    8. '```' → logprob: -9.712318420410156
    9. '_col' → logprob: -9.962318420410156
    10. 'have' → logprob: -10.087318420410156

Token 156: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.79068922996521
    2. ',' → logprob: -0.79068922996521
    3. '):' → logprob: -2.91568922996521
    4. '   ' → logprob: -3.79068922996521
    5. ':' → logprob: -4.540689468383789
    6. ' )' → logprob: -6.040689468383789
    7. ',
' → logprob: -6.790689468383789
    8. ' ,' → logprob: -7.040689468383789
    9. ' ):' → logprob: -8.290689468383789
    10. ' ' → logprob: -8.415689468383789

Token 157: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7012251615524292
    2. '   ' → logprob: -0.8262251615524292
    3. '):' → logprob: -3.8262252807617188
    4. ')' → logprob: -4.201225280761719
    5. ',' → logprob: -4.451225280761719
    6. ' :' → logprob: -4.701225280761719
    7. ' ' → logprob: -5.951225280761719
    8. ' 
' → logprob: -6.951225280761719
    9. '    
' → logprob: -6.951225280761719
    10. 'def' → logprob: -7.076225280761719

Token 158: ' #' (ID: 1069)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04137361794710159
    2. '   ' → logprob: -3.5413737297058105
    3. ' :' → logprob: -5.7913737297058105
    4. '):' → logprob: -6.4163737297058105
    5. 'def' → logprob: -6.7913737297058105
    6. ')' → logprob: -6.7913737297058105
    7. ' ' → logprob: -6.9163737297058105
    8. '\' → logprob: -7.1663737297058105
    9. ':
' → logprob: -7.2913737297058105
    10. ',' → logprob: -7.4163737297058105

Token 159: ' Index' (ID: 14580)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6784764528274536
    2. ' 
' → logprob: -0.9284764528274536
    3. 'def' → logprob: -3.928476333618164
    4. ' ' → logprob: -4.053476333618164
    5. ':' → logprob: -4.178476333618164
    6. '    
' → logprob: -4.303476333618164
    7. '\' → logprob: -4.928476333618164
    8. ' def' → logprob: -5.303476333618164
    9. ' \' → logprob: -5.928476333618164
    10. '
' → logprob: -5.928476333618164

Token 160: ' treasures' (ID: 82685)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2853691577911377
    2. 'es' → logprob: -1.5353691577911377
    3. 's' → logprob: -4.910368919372559
    4. ')' → logprob: -5.285368919372559
    5. '=' → logprob: -5.285368919372559
    6. '0' → logprob: -5.410368919372559
    7. 'ing' → logprob: -6.410368919372559
    8. '_positions' → logprob: -6.410368919372559
    9. '_r' → logprob: -6.535368919372559
    10. '_' → logprob: -7.035368919372559

Token 161: ' as' (ID: 472)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5239481329917908
    2. 's' → logprob: -1.3989481925964355
    3. '=' → logprob: -3.0239481925964355
    4. ',' → logprob: -3.8989481925964355
    5. ':' → logprob: -3.8989481925964355
    6. 'ed' → logprob: -4.2739481925964355
    7. 'es' → logprob: -4.3989481925964355
    8. '   ' → logprob: -4.6489481925964355
    9. ' ' → logprob: -5.0239481925964355
    10. 'ing' → logprob: -5.2739481925964355

Token 162: ':' (ID: 25)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.7127600312232971
    2. '[(' → logprob: -1.7127599716186523
    3. '{}' → logprob: -2.2127599716186523
    4. '{' → logprob: -2.2127599716186523
    5. '0' → logprob: -2.7127599716186523
    6. '[' → logprob: -3.7127599716186523
    7. ' []' → logprob: -4.462759971618652
    8. ' [(' → logprob: -6.337759971618652
    9. '[]}' → logprob: -6.462759971618652
    10. '[]
' → logprob: -7.087759971618652

Token 163: ' (' (ID: 350)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1447780281305313
    2. ' ' → logprob: -3.14477801322937
    3. '[(' → logprob: -3.39477801322937
    4. '[' → logprob: -3.64477801322937
    5. '[]' → logprob: -4.769778251647949
    6. ' [(' → logprob: -5.144778251647949
    7. '[]
' → logprob: -5.894778251647949
    8. 'corn' → logprob: -5.894778251647949
    9. '(' → logprob: -6.394778251647949
    10. 'tre' → logprob: -6.769778251647949

Token 164: 'N' (ID: 45)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029831135645508766
    2. 'corn' → logprob: -4.4048309326171875
    3. 'r' → logprob: -4.6548309326171875
    4. ')' → logprob: -5.9048309326171875
    5. '1' → logprob: -6.9048309326171875
    6. '[' → logprob: -7.2798309326171875
    7. '(' → logprob: -8.154830932617188
    8. '#' → logprob: -8.279830932617188
    9. '2' → logprob: -8.279830932617188
    10. ' ' → logprob: -8.404830932617188

Token 165: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -9.901345038088039e-05
    2. ' -' → logprob: -9.375099182128906
    3. ',' → logprob: -12.000099182128906
    4. '-
' → logprob: -13.375099182128906
    5. '<|end|>' → logprob: -13.375099182128906
    6. '1' → logprob: -13.625099182128906
    7. '```' → logprob: -13.625099182128906
    8. ')' → logprob: -14.750099182128906
    9. '<|end|>' → logprob: -14.875099182128906
    10. ' ' → logprob: -15.250099182128906

Token 166: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006596576422452927
    2. '3' → logprob: -8.000659942626953
    3. '2' → logprob: -8.375659942626953
    4. '4' → logprob: -9.875659942626953
    5. '-' → logprob: -11.125659942626953
    6. ' ' → logprob: -11.250659942626953
    7. '```' → logprob: -12.500659942626953
    8. '0' → logprob: -13.125659942626953
    9. '>' → logprob: -13.375659942626953
    10. ')' → logprob: -13.875659942626953

Token 167: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012259430950507522
    2. ' ,' → logprob: -7.00122594833374
    3. '0' → logprob: -8.626225471496582
    4. '-' → logprob: -9.251225471496582
    5. '```' → logprob: -11.501225471496582
    6. ' ' → logprob: -12.001225471496582
    7. ' -' → logprob: -12.438725471496582
    8. ')' → logprob: -12.501225471496582
    9. ',
' → logprob: -12.813725471496582
    10. '1' → logprob: -13.376225471496582

Token 168: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0027331935707479715
    2. 'M' → logprob: -6.62773323059082
    3. ' ' → logprob: -6.62773323059082
    4. '1' → logprob: -10.25273323059082
    5. ' M' → logprob: -10.37773323059082
    6. 'N' → logprob: -12.25273323059082
    7. '```' → logprob: -13.19023323059082
    8. '   ' → logprob: -13.25273323059082
    9. ')' → logprob: -13.62773323059082
    10. ',' → logprob: -14.06523323059082

Token 169: ')->' (ID: 9079)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.1836910992860794
    2. '),(' → logprob: -1.933691143989563
    3. ')' → logprob: -3.9336910247802734
    4. ',' → logprob: -6.558691024780273
    5. '),
' → logprob: -6.683691024780273
    6. '+' → logprob: -7.808691024780273
    7. ' ),' → logprob: -8.808691024780273
    8. ')
' → logprob: -9.433691024780273
    9. '0' → logprob: -9.808691024780273
    10. ' ' → logprob: -10.308691024780273

Token 170: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14541803300380707
    2. '0' → logprob: -2.0204179286956787
    3. ' ' → logprob: -6.145418167114258
    4. '2' → logprob: -8.395418167114258
    5. '(' → logprob: -8.520418167114258
    6. '3' → logprob: -10.020418167114258
    7. ' (' → logprob: -10.895418167114258
    8. 'corn' → logprob: -11.020418167114258
    9. ',' → logprob: -11.145418167114258
    10. '```' → logprob: -11.395418167114258

Token 171: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.854388415813446
    2. '
' → logprob: -1.3543884754180908
    3. ',
' → logprob: -2.354388475418091
    4. ')' → logprob: -2.479388475418091
    5. '<|end|>' → logprob: -2.604388475418091
    6. '   ' → logprob: -4.229388236999512
    7. '<|end|>' → logprob: -4.854388236999512
    8. ' (' → logprob: -5.354388236999512
    9. '    
' → logprob: -5.604388236999512
    10. '  
' → logprob: -5.604388236999512

Token 172: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.2846919894218445
    2. '(' → logprob: -1.7846920490264893
    3. '(N' → logprob: -2.5346920490264893
    4. '0' → logprob: -7.53469181060791
    5. ' ' → logprob: -10.28469181060791
    6. '   ' → logprob: -11.03469181060791
    7. 'N' → logprob: -11.90969181060791
    8. ' 
' → logprob: -12.28469181060791
    9. '((' → logprob: -12.78469181060791
    10. ' N' → logprob: -12.90969181060791

Token 173: 'N' (ID: 45)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.38708215951919556
    2. 'N' → logprob: -1.1370820999145508
    3. ' N' → logprob: -9.13708209991455
    4. ' ' → logprob: -9.38708209991455
    5. 'n' → logprob: -11.76208209991455
    6. '(N' → logprob: -13.19958209991455
    7. '```' → logprob: -13.57458209991455
    8. '1' → logprob: -13.63708209991455
    9. '(' → logprob: -13.63708209991455
    10. '   ' → logprob: -14.13708209991455

Token 174: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -6.392202976712724e-06
    2. ' -' → logprob: -12.000006675720215
    3. '<|end|>' → logprob: -16.5000057220459
    4. ',' → logprob: -17.7500057220459
    5. '−' → logprob: -18.0000057220459
    6. '1' → logprob: -18.1250057220459
    7. '<|end|>' → logprob: -18.5000057220459
    8. '–' → logprob: -19.0000057220459
    9. '-
' → logprob: -19.0000057220459
    10. '```' → logprob: -19.8750057220459

Token 175: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6166903151315637e-05
    2. ' ' → logprob: -11.625016212463379
    3. '-' → logprob: -12.375016212463379
    4. 'M' → logprob: -13.750016212463379
    5. '```' → logprob: -13.875016212463379
    6. '
' → logprob: -14.875016212463379
    7. '2' → logprob: -15.250016212463379
    8. '   ' → logprob: -16.750015258789062
    9. '

' → logprob: -16.812515258789062
    10. '3' → logprob: -16.937515258789062

Token 176: ',M' (ID: 54127)
  Prédit: ',M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',M' → logprob: -0.5233006477355957
    2. ',' → logprob: -0.8983006477355957
    3. ' ,' → logprob: -9.148300170898438
    4. ',N' → logprob: -10.023300170898438
    5. ',m' → logprob: -11.273300170898438
    6. '-' → logprob: -13.273300170898438
    7. ',None' → logprob: -13.273300170898438
    8. ' ' → logprob: -13.898300170898438
    9. ',(' → logprob: -14.023300170898438
    10. ',-' → logprob: -14.148300170898438

Token 177: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -6.289473822107539e-05
    2. '1' → logprob: -9.750062942504883
    3. ' -' → logprob: -13.000062942504883
    4. '<|end|>' → logprob: -14.500062942504883
    5. '<|end|>' → logprob: -14.625062942504883
    6. '```' → logprob: -14.750062942504883
    7. '−' → logprob: -16.250062942504883
    8. ' ' → logprob: -16.812562942504883
    9. '[' → logprob: -16.875062942504883
    10. '...' → logprob: -16.875062942504883

Token 178: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003987336531281471
    2. '-' → logprob: -7.875398635864258
    3. ' ' → logprob: -11.500398635864258
    4. '```' → logprob: -12.625398635864258
    5. '2' → logprob: -12.875398635864258
    6. '<|end|>' → logprob: -14.312898635864258
    7. '<|end|>' → logprob: -14.875398635864258
    8. '0' → logprob: -15.125398635864258
    9. ')' → logprob: -15.500398635864258
    10. '(' → logprob: -15.875398635864258

Token 179: ')->' (ID: 9079)
  Prédit: ')->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')->' → logprob: -0.004767714999616146
    2. ')' → logprob: -5.379767894744873
    3. ')>' → logprob: -9.504767417907715
    4. '0' → logprob: -10.879767417907715
    5. ' )->' → logprob: -10.879767417907715
    6. ')>>' → logprob: -11.754767417907715
    7. ')<<' → logprob: -12.004767417907715
    8. ',' → logprob: -12.629767417907715
    9. ')=>' → logprob: -13.004767417907715
    10. '),' → logprob: -13.379767417907715

Token 180: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.64708495605737e-05
    2. ' ' → logprob: -9.625066757202148
    3. '0' → logprob: -15.500066757202148
    4. '
' → logprob: -16.68756675720215
    5. '   ' → logprob: -17.12506675720215
    6. '```' → logprob: -17.56256675720215
    7. '  ' → logprob: -17.93756675720215
    8. '(' → logprob: -18.25006675720215
    9. '2' → logprob: -18.81256675720215
    10. ',' → logprob: -19.12506675720215

Token 181: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16546329855918884
    2. ',(' → logprob: -2.2904632091522217
    3. '(' → logprob: -3.4154632091522217
    4. ' ,' → logprob: -5.415463447570801
    5. ' (' → logprob: -5.540463447570801
    6. '   ' → logprob: -5.665463447570801
    7. '0' → logprob: -6.665463447570801
    8. ')' → logprob: -6.790463447570801
    9. '),(' → logprob: -6.790463447570801
    10. '#' → logprob: -7.040463447570801

Token 182: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6326894760131836
    2. ' (' → logprob: -0.7576894760131836
    3. '0' → logprob: -9.757689476013184
    4. '   ' → logprob: -11.257689476013184
    5. ' ' → logprob: -11.507689476013184
    6. '#' → logprob: -12.257689476013184
    7. '((' → logprob: -14.132689476013184
    8. '[' → logprob: -14.132689476013184
    9. ',' → logprob: -15.007689476013184
    10. ' #' → logprob: -15.007689476013184

Token 183: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00026419671485200524
    2. ' ' → logprob: -8.250264167785645
    3. '(' → logprob: -13.750264167785645
    4. '   ' → logprob: -13.875264167785645
    5. 'N' → logprob: -14.750264167785645
    6. '  ' → logprob: -15.937764167785645
    7. '1' → logprob: -16.62526512145996
    8. '    ' → logprob: -16.81276512145996
    9. '
' → logprob: -17.00026512145996
    10. '```' → logprob: -17.00026512145996

Token 184: ',M' (ID: 54127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012892624363303185
    2. ' ,' → logprob: -9.000128746032715
    3. '   ' → logprob: -13.250128746032715
    4. '0' → logprob: -13.750128746032715
    5. ')' → logprob: -14.750128746032715
    6. '<|end|>' → logprob: -14.750128746032715
    7. '```' → logprob: -14.750128746032715
    8. '‌,' → logprob: -15.375128746032715
    9. '1' → logprob: -15.500128746032715
    10. ',
' → logprob: -15.500128746032715

Token 185: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.935296834039036e-06
    2. '1' → logprob: -13.37500286102295
    3. ' -' → logprob: -14.37500286102295
    4. '0' → logprob: -14.75000286102295
    5. ',' → logprob: -15.75000286102295
    6. '<|end|>' → logprob: -16.875003814697266
    7. '```' → logprob: -17.125003814697266
    8. '−' → logprob: -18.375003814697266
    9. '2' → logprob: -18.500003814697266
    10. '(' → logprob: -18.875003814697266

Token 186: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020947527140378952
    2. '-' → logprob: -3.8959474563598633
    3. '2' → logprob: -8.145947456359863
    4. '0' → logprob: -9.895947456359863
    5. '```' → logprob: -10.770947456359863
    6. 'M' → logprob: -11.395947456359863
    7. ' ' → logprob: -12.020947456359863
    8. ')' → logprob: -12.270947456359863
    9. '<|end|>' → logprob: -12.395947456359863
    10. '(' → logprob: -12.520947456359863

Token 187: ')->' (ID: 9079)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14668872952461243
    2. ')->' → logprob: -2.27168869972229
    3. ')>' → logprob: -3.64668869972229
    4. ')#' → logprob: -5.771688938140869
    5. ')>>' → logprob: -6.271688938140869
    6. ')=>' → logprob: -8.146688461303711
    7. ')
' → logprob: -8.271688461303711
    8. '0' → logprob: -8.396688461303711
    9. '   ' → logprob: -8.396688461303711
    10. ')==' → logprob: -8.646688461303711

Token 188: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.2524021157296374e-05
    2. ' ' → logprob: -9.875052452087402
    3. '3' → logprob: -15.000052452087402
    4. '```' → logprob: -15.375052452087402
    5. '۲' → logprob: -15.750052452087402
    6. '1' → logprob: -16.43755340576172
    7. '0' → logprob: -16.81255340576172
    8. '２' → logprob: -17.25005340576172
    9. '२' → logprob: -17.37505340576172
    10. '২' → logprob: -17.68755340576172

Token 189: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18546664714813232
    2. ')' → logprob: -3.060466766357422
    3. ',' → logprob: -3.185466766357422
    4. ':' → logprob: -3.560466766357422
    5. '<|end|>' → logprob: -4.185466766357422
    6. '    
' → logprob: -4.435466766357422
    7. ' 
' → logprob: -5.060466766357422
    8. ' ' → logprob: -5.560466766357422
    9. '    ' → logprob: -5.810466766357422
    10. 'def' → logprob: -6.560466766357422

Token 190: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12225712090730667
    2. ' 
' → logprob: -3.3722572326660156
    3. ':' → logprob: -3.4972572326660156
    4. ' ' → logprob: -4.622257232666016
    5. '\' → logprob: -4.872257232666016
    6. '    
' → logprob: -4.872257232666016
    7. 'def' → logprob: -5.497257232666016
    8. ',' → logprob: -5.497257232666016
    9. '    ' → logprob: -5.872257232666016
    10. ' :' → logprob: -5.997257232666016

Token 191: ' treasure' (ID: 47849)
  Prédit: ' visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.8223267197608948
    2. 'visited' → logprob: -1.44732666015625
    3. '   ' → logprob: -2.07232666015625
    4. 'def' → logprob: -2.19732666015625
    5. ' def' → logprob: -2.57232666015625
    6. ' queue' → logprob: -5.44732666015625
    7. 'queue' → logprob: -6.07232666015625
    8. 'dp' → logprob: -7.19732666015625
    9. ' 
' → logprob: -7.32232666015625
    10. ' dp' → logprob: -8.07232666015625

Token 192: '_pos' (ID: 14692)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.07823441922664642
    2. 's' → logprob: -3.0782344341278076
    3. '_indices' → logprob: -3.9532344341278076
    4. '_pos' → logprob: -5.4532341957092285
    5. '_locations' → logprob: -5.7032341957092285
    6. '_l' → logprob: -6.5782341957092285
    7. '_idx' → logprob: -8.453234672546387
    8. '_indexes' → logprob: -8.703234672546387
    9. '_coords' → logprob: -8.828234672546387
    10. '_' → logprob: -8.953234672546387

Token 193: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0220714807510376
    2. ' =' → logprob: -1.0220714807510376
    3. 's' → logprob: -1.2720714807510376
    4. '=[' → logprob: -10.772071838378906
    5. '=[]' → logprob: -11.522071838378906
    6. '=s' → logprob: -12.397071838378906
    7. 'es' → logprob: -12.647071838378906
    8. ')' → logprob: -13.647071838378906
    9. 'indices' → logprob: -13.647071838378906
    10. ']' → logprob: -13.772071838378906

Token 194: ' corners' (ID: 39479)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.038113780319690704
    2. ' [(' → logprob: -3.288113832473755
    3. ' {(' → logprob: -10.413113594055176
    4. '[N' → logprob: -10.788113594055176
    5. '{' → logprob: -11.663113594055176
    6. '[((' → logprob: -12.288113594055176
    7. '((' → logprob: -12.788113594055176
    8. '[
' → logprob: -13.038113594055176
    9. '   ' → logprob: -14.038113594055176
    10. ' ' → logprob: -14.413113594055176

Token 195: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005430357996374369
    2. '[:' → logprob: -5.380430221557617
    3. '[:]' → logprob: -8.130430221557617
    4. '[:-' → logprob: -8.630430221557617
    5. '<|end|>' → logprob: -8.755430221557617
    6. ' +' → logprob: -9.880430221557617
    7. '+' → logprob: -10.380430221557617
    8. '+[' → logprob: -11.005430221557617
    9. '[::-' → logprob: -11.130430221557617
    10. '```' → logprob: -11.505430221557617

Token 196: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -14.250001907348633
    3. '
' → logprob: -14.750001907348633
    4. ':' → logprob: -15.375001907348633
    5. '[' → logprob: -16.000001907348633
    6. '   ' → logprob: -16.375001907348633
    7. '```' → logprob: -16.500001907348633
    8. '2' → logprob: -16.875001907348633
    9. '::-' → logprob: -17.625001907348633
    10. ']' → logprob: -17.625001907348633

Token 197: ':]
' (ID: 61598)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7917760014533997
    2. ':]' → logprob: -0.7917760014533997
    3. ':' → logprob: -2.541775941848755
    4. '],' → logprob: -5.166776180267334
    5. '1' → logprob: -5.791776180267334
    6. ':],' → logprob: -5.916776180267334
    7. ' :]' → logprob: -6.666776180267334
    8. ' ]' → logprob: -7.166776180267334
    9. '0' → logprob: -7.541776180267334
    10. ',' → logprob: -9.041775703430176

Token 198: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5099785923957825
    2. '<|end|>' → logprob: -1.6349785327911377
    3. ',' → logprob: -2.5099785327911377
    4. 'visited' → logprob: -2.8849785327911377
    5. '#' → logprob: -4.009978771209717
    6. '[' → logprob: -4.759978771209717
    7. '  
' → logprob: -5.384978771209717
    8. ',
' → logprob: -5.509978771209717
    9. ' visited' → logprob: -5.634978771209717
    10. '<|end|>' → logprob: -5.759978771209717

Token 199: ' treasure' (ID: 47849)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.3450165390968323
    2. ' visited' → logprob: -1.8450164794921875
    3. '
' → logprob: -2.9700164794921875
    4. ' 
' → logprob: -3.8450164794921875
    5. 'def' → logprob: -4.3450164794921875
    6. '#' → logprob: -4.9700164794921875
    7. '   ' → logprob: -4.9700164794921875
    8. '<|end|>' → logprob: -5.3450164794921875
    9. '  
' → logprob: -5.4700164794921875
    10. ',' → logprob: -5.7200164794921875

Token 200: '_indices' (ID: 43508)
  Prédit: '_pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.1678890436887741
    2. '_positions' → logprob: -2.29288911819458
    3. '_indices' → logprob: -3.16788911819458
    4. 's' → logprob: -5.41788911819458
    5. '_mask' → logprob: -6.04288911819458
    6. '_idx' → logprob: -6.54288911819458
    7. '_indexes' → logprob: -7.41788911819458
    8. 'pos' → logprob: -7.54288911819458
    9. '_masks' → logprob: -7.66788911819458
    10. '_index' → logprob: -7.79288911819458

Token 201: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06994055211544037
    2. '=' → logprob: -2.6949405670166016
    3. ')' → logprob: -13.194940567016602
    4. ' =[' → logprob: -14.194940567016602
    5. ',' → logprob: -15.069940567016602
    6. '[' → logprob: -15.319940567016602
    7. 's' → logprob: -15.569940567016602
    8. ' ' → logprob: -15.819940567016602
    9. ' =)' → logprob: -16.0699405670166
    10. ']' → logprob: -16.0699405670166

Token 202: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.004639334045350552
    2. ' {' → logprob: -5.879639148712158
    3. ' {(' → logprob: -6.379639148712158
    4. '{
' → logprob: -9.129639625549316
    5. '{'' → logprob: -11.004639625549316
    6. '{}' → logprob: -12.629639625549316
    7. '{"' → logprob: -12.754639625549316
    8. '{-' → logprob: -13.504639625549316
    9. ' {
' → logprob: -14.129639625549316
    10. '[' → logprob: -14.254639625549316

Token 203: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.2934727966785431
    2. 'tre' → logprob: -1.9184727668762207
    3. 'corn' → logprob: -3.1684727668762207
    4. '(' → logprob: -3.9184727668762207
    5. '(pos' → logprob: -4.293472766876221
    6. ' (' → logprob: -4.918472766876221
    7. 'corner' → logprob: -4.918472766876221
    8. '(t' → logprob: -5.293472766876221
    9. ' pos' → logprob: -5.293472766876221
    10. ' treasure' → logprob: -6.293472766876221

Token 204: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00019388488726690412
    2. ':t' → logprob: -9.25019359588623
    3. ' :' → logprob: -9.62519359588623
    4. ':i' → logprob: -10.75019359588623
    5. ':c' → logprob: -12.37519359588623
    6. ':index' → logprob: -14.00019359588623
    7. ':k' → logprob: -14.12519359588623
    8. ':x' → logprob: -14.12519359588623
    9. ':value' → logprob: -14.50019359588623
    10. ':return' → logprob: -14.50019359588623

Token 205: ' idx' (ID: 14016)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09591502696275711
    2. ' i' → logprob: -2.8459150791168213
    3. ' idx' → logprob: -4.095914840698242
    4. 'idx' → logprob: -4.095914840698242
    5. 'index' → logprob: -9.845914840698242
    6. '0' → logprob: -10.470914840698242
    7. ' index' → logprob: -11.720914840698242
    8. ' ' → logprob: -12.220914840698242
    9. 'v' → logprob: -13.970914840698242
    10. '1' → logprob: -14.845914840698242

Token 206: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.04585300013422966
    2. 'for' → logprob: -3.4208528995513916
    3. ':' → logprob: -4.420853137969971
    4. '   ' → logprob: -9.795852661132812
    5. ' ' → logprob: -10.920852661132812
    6. ')' → logprob: -11.545852661132812
    7. ' :' → logprob: -11.920852661132812
    8. '    ' → logprob: -12.045852661132812
    9. '	for' → logprob: -12.795852661132812
    10. '}' → logprob: -12.795852661132812

Token 207: ' idx' (ID: 14016)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.20080392062664032
    2. 'idx' → logprob: -2.0758039951324463
    3. ' pos' → logprob: -3.4508039951324463
    4. ' idx' → logprob: -3.7008039951324463
    5. '	idx' → logprob: -11.825803756713867
    6. '	pos' → logprob: -11.950803756713867
    7. ',pos' → logprob: -12.325803756713867
    8. '(pos' → logprob: -12.763303756713867
    9. '(idx' → logprob: -13.013303756713867
    10. ' (' → logprob: -13.138303756713867

Token 208: ',pos' (ID: 128292)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.023900073021650314
    2. ' pos' → logprob: -4.398900032043457
    3. 'in' → logprob: -4.898900032043457
    4. ' in' → logprob: -5.648900032043457
    5. 'enumer' → logprob: -8.773900032043457
    6. ',pos' → logprob: -9.273900032043457
    7. '[pos' → logprob: -10.898900032043457
    8. ',' → logprob: -11.273900032043457
    9. 'idx' → logprob: -11.273900032043457
    10. '[' → logprob: -11.648900032043457

Token 209: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.251953661441803
    2. 'in' → logprob: -1.5019536018371582
    3. '<|end|>' → logprob: -12.001954078674316
    4. ' ' → logprob: -12.376954078674316
    5. ')' → logprob: -12.876954078674316
    6. 'import' → logprob: -13.376954078674316
    7. 'inthe' → logprob: -13.501954078674316
    8. '```' → logprob: -13.751954078674316
    9. 'enumer' → logprob: -13.751954078674316
    10. '	in' → logprob: -13.876954078674316

Token 210: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.006721298210322857
    2. ' enumerate' → logprob: -5.006721496582031
    3. 'en' → logprob: -13.006721496582031
    4. '```' → logprob: -13.131721496582031
    5. 'corn' → logprob: -14.006721496582031
    6. '(en' → logprob: -15.381721496582031
    7. '[' → logprob: -16.00672149658203
    8. 'tre' → logprob: -16.13172149658203
    9. '
' → logprob: -16.13172149658203
    10. 'zip' → logprob: -16.38172149658203

Token 211: '(t' (ID: 2025)
  Prédit: 'tre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tre' → logprob: -0.003984246868640184
    2. ' treasure' → logprob: -5.628984451293945
    3. 'corn' → logprob: -8.503984451293945
    4. '(t' → logprob: -9.003984451293945
    5. '(' → logprob: -10.753984451293945
    6. 't' → logprob: -12.003984451293945
    7. 'corner' → logprob: -12.128984451293945
    8. '(c' → logprob: -12.378984451293945
    9. ')' → logprob: -12.628984451293945
    10. '}' → logprob: -12.878984451293945

Token 212: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.11340741068124771
    2. 'reas' → logprob: -2.8634073734283447
    3. 'corn' → logprob: -4.363407611846924
    4. 'asure' → logprob: -4.363407611846924
    5. 'corner' → logprob: -4.738407611846924
    6. 'tre' → logprob: -4.863407611846924
    7. 'e' → logprob: -5.988407611846924
    8. 'as' → logprob: -6.863407611846924
    9. 'rea' → logprob: -7.363407611846924
    10. ' treasure' → logprob: -7.363407611846924

Token 213: 'asure' (ID: 5450)
  Prédit: 'asure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'asure' → logprob: -0.0005628037615679204
    2. 'as' → logprob: -8.25056266784668
    3. 'asures' → logprob: -9.00056266784668
    4. 'sure' → logprob: -9.62556266784668
    5. 'a' → logprob: -10.25056266784668
    6. 'asurer' → logprob: -10.50056266784668
    7. 'ASURE' → logprob: -11.37556266784668
    8. 'asury' → logprob: -11.37556266784668
    9. 'asured' → logprob: -12.75056266784668
    10. 'azure' → logprob: -13.12556266784668

Token 214: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0036429534666240215
    2. 'pos' → logprob: -5.628643035888672
    3. 'positions' → logprob: -10.628643035888672
    4. ')' → logprob: -12.128643035888672
    5. '_positions' → logprob: -12.128643035888672
    6. '_' → logprob: -13.253643035888672
    7. 'in' → logprob: -13.503643035888672
    8. 'Pos' → logprob: -14.003643035888672
    9. 'indices' → logprob: -14.753643035888672
    10. '_)' → logprob: -14.878643035888672

Token 215: ')}

' (ID: 184554)
  Prédit: ')}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')}' → logprob: -0.2526569664478302
    2. '}' → logprob: -1.5026569366455078
    3. '})' → logprob: -7.877656936645508
    4. ')' → logprob: -8.252656936645508
    5. ' }' → logprob: -10.252656936645508
    6. ' )' → logprob: -11.252656936645508
    7. ');}' → logprob: -11.252656936645508
    8. ')}
' → logprob: -11.752656936645508
    9. '")}' → logprob: -12.377656936645508
    10. '()}' → logprob: -12.627656936645508

Token 216: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4540087878704071
    2. ' 
' → logprob: -1.8290088176727295
    3. '    
' → logprob: -2.8290088176727295
    4. 'def' → logprob: -2.9540088176727295
    5. ' ' → logprob: -3.4540088176727295
    6. '\' → logprob: -4.32900857925415
    7. '  
' → logprob: -4.32900857925415
    8. '
' → logprob: -5.20400857925415
    9. '    ' → logprob: -5.32900857925415
    10. ')' → logprob: -5.57900857925415

Token 217: ' #' (ID: 1069)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.24116477370262146
    2. ' visited' → logprob: -2.7411646842956543
    3. 'def' → logprob: -2.8661646842956543
    4. 'queue' → logprob: -3.4911646842956543
    5. '   ' → logprob: -3.4911646842956543
    6. 'return' → logprob: -4.991164684295654
    7. ' queue' → logprob: -5.116164684295654
    8. 'from' → logprob: -5.116164684295654
    9. ' def' → logprob: -5.366164684295654
    10. ' from' → logprob: -6.116164684295654

Token 218: ' BFS' (ID: 190016)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.09931883960962296
    2. 'def' → logprob: -3.599318742752075
    3. 'from' → logprob: -3.724318742752075
    4. ' visited' → logprob: -3.849318742752075
    5. 'start' → logprob: -4.474318981170654
    6. 'queue' → logprob: -6.099318981170654
    7. 'dist' → logprob: -6.349318981170654
    8. ' from' → logprob: -6.599318981170654
    9. '   ' → logprob: -6.974318981170654
    10. ' def' → logprob: -6.974318981170654

Token 219: ' over' (ID: 1072)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9677407145500183
    2. '   ' → logprob: -1.342740774154663
    3. ' queue' → logprob: -1.717740774154663
    4. '(queue' → logprob: -2.967740774154663
    5. 'queue' → logprob: -3.092740774154663
    6. ':' → logprob: -3.842740774154663
    7. '
' → logprob: -3.967740774154663
    8. 'from' → logprob: -4.842740535736084
    9. ' def' → logprob: -5.217740535736084
    10. 'visited' → logprob: -5.467740535736084

Token 220: ' states' (ID: 9407)
  Prédit: ' deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.8763610124588013
    2. 'deque' → logprob: -1.0013610124588013
    3. 'visited' → logprob: -2.7513608932495117
    4. ' visited' → logprob: -3.2513608932495117
    5. 'from' → logprob: -3.6263608932495117
    6. ' queue' → logprob: -3.7513608932495117
    7. ' grid' → logprob: -4.501360893249512
    8. 'queue' → logprob: -4.501360893249512
    9. ' states' → logprob: -4.876360893249512
    10. ' (' → logprob: -5.251360893249512

Token 221: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1549825221300125
    2. '
' → logprob: -2.904982566833496
    3. ':' → logprob: -3.029982566833496
    4. ' queue' → logprob: -5.029982566833496
    5. '    
' → logprob: -5.154982566833496
    6. ' 
' → logprob: -5.279982566833496
    7. 'def' → logprob: -5.654982566833496
    8. '  
' → logprob: -5.779982566833496
    9. 'queue' → logprob: -6.029982566833496
    10. ',' → logprob: -6.029982566833496

Token 222: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.1829725056886673
    2. ' visited' → logprob: -2.5579724311828613
    3. 'queue' → logprob: -3.5579724311828613
    4. 'deque' → logprob: -3.5579724311828613
    5. ' queue' → logprob: -3.9329724311828613
    6. ' deque' → logprob: -4.557972431182861
    7. 'from' → logprob: -7.682972431182861
    8. 'state' → logprob: -8.18297290802002
    9. ' a' → logprob: -8.30797290802002
    10. 'seen' → logprob: -8.43297290802002

Token 223: ' tracking' (ID: 20254)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.45863908529281616
    2. '_states' → logprob: -1.083639144897461
    3. '=' → logprob: -4.458639144897461
    4. ')' → logprob: -5.458639144897461
    5. '=set' → logprob: -5.583639144897461
    6. 'states' → logprob: -6.083639144897461
    7. ',' → logprob: -6.708639144897461
    8. ' states' → logprob: -7.208639144897461
    9. '):' → logprob: -7.333639144897461
    10. '):
' → logprob: -7.333639144897461

Token 224: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6561146378517151
    2. 'visited' → logprob: -1.6561145782470703
    3. '
' → logprob: -1.9061145782470703
    4. ' visited' → logprob: -3.1561145782470703
    5. ':' → logprob: -3.4061145782470703
    6. '    
' → logprob: -4.53111457824707
    7. ',' → logprob: -4.78111457824707
    8. ' states' → logprob: -4.90611457824707
    9. '<|end|>' → logprob: -4.90611457824707
    10. 'states' → logprob: -5.03111457824707

Token 225: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10879454761743546
    2. ' 
' → logprob: -3.7337944507598877
    3. 'visited' → logprob: -4.108794689178467
    4. ' visited' → logprob: -4.483794689178467
    5. '    
' → logprob: -4.608794689178467
    6. '  
' → logprob: -4.608794689178467
    7. 'def' → logprob: -4.858794689178467
    8. ':' → logprob: -5.108794689178467
    9. '
' → logprob: -5.858794689178467
    10. ' ' → logprob: -5.858794689178467

Token 226: ' #' (ID: 1069)
  Prédit: ' visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.4576248228549957
    2. 'visited' → logprob: -1.2076247930526733
    3. '   ' → logprob: -3.082624912261963
    4. ' queue' → logprob: -4.207624912261963
    5. 'queue' → logprob: -6.207624912261963
    6. ' from' → logprob: -6.332624912261963
    7. 'from' → logprob: -7.207624912261963
    8. ' deque' → logprob: -7.332624912261963
    9. 'deque' → logprob: -7.332624912261963
    10. 'def' → logprob: -7.832624912261963

Token 227: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.3223828375339508
    2. ' visited' → logprob: -1.6973828077316284
    3. '   ' → logprob: -2.697382926940918
    4. 'def' → logprob: -4.697382926940918
    5. 'from' → logprob: -5.322382926940918
    6. 'queue' → logprob: -5.697382926940918
    7. ' from' → logprob: -5.947382926940918
    8. ' queue' → logprob: -5.947382926940918
    9. ' def' → logprob: -6.447382926940918
    10. 'import' → logprob: -8.322382926940918

Token 228: '[r' (ID: 33265)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0380832701921463
    2. '=' → logprob: -3.28808331489563
    3. ' ' → logprob: -11.78808307647705
    4. '_states' → logprob: -11.91308307647705
    5. '[' → logprob: -12.03808307647705
    6. ',' → logprob: -12.03808307647705
    7. '=set' → logprob: -12.41308307647705
    8. ')' → logprob: -12.66308307647705
    9. '   ' → logprob: -13.53808307647705
    10. ']' → logprob: -13.66308307647705

Token 229: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0020677067805081606
    2. ',' → logprob: -6.877067565917969
    3. ']' → logprob: -7.127067565917969
    4. ' ][' → logprob: -8.877067565917969
    5. ',c' → logprob: -9.877067565917969
    6. '   ' → logprob: -10.877067565917969
    7. '][]' → logprob: -12.252067565917969
    8. ' ,' → logprob: -13.002067565917969
    9. 'c' → logprob: -13.377067565917969
    10. '()][' → logprob: -13.502067565917969

Token 230: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -9.782141569303349e-05
    2. ' c' → logprob: -9.25009822845459
    3. ')c' → logprob: -14.25009822845459
    4. '   ' → logprob: -15.00009822845459
    5. '
' → logprob: -15.00009822845459
    6. 'с' → logprob: -16.500097274780273
    7. '	c' → logprob: -16.625097274780273
    8. '][' → logprob: -16.875097274780273
    9. '```' → logprob: -17.000097274780273
    10. ',c' → logprob: -17.500097274780273

Token 231: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.1004694476723671
    2. ']' → logprob: -2.3504693508148193
    3. ']=' → logprob: -9.225469589233398
    4. ' ][' → logprob: -9.725469589233398
    5. '][]' → logprob: -9.725469589233398
    6. ']={' → logprob: -10.600469589233398
    7. ' ]' → logprob: -12.100469589233398
    8. '],' → logprob: -12.600469589233398
    9. '].' → logprob: -13.225469589233398
    10. '=' → logprob: -13.600469589233398

Token 232: 'col' (ID: 1798)
  Prédit: 'col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.019846413284540176
    2. '(' → logprob: -5.019846439361572
    3. '8' → logprob: -5.894846439361572
    4. ']' → logprob: -6.269846439361572
    5. '4' → logprob: -6.394846439361572
    6. '1' → logprob: -6.519846439361572
    7. 'mask' → logprob: -7.144846439361572
    8. 'visited' → logprob: -7.394846439361572
    9. ' collected' → logprob: -7.519846439361572
    10. ')' → logprob: -7.644846439361572

Token 233: 'lected' (ID: 2576)
  Prédit: 'lected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lected' → logprob: -0.0012666594702750444
    2. 'lect' → logprob: -6.7512664794921875
    3. 'ected' → logprob: -10.251266479492188
    4. ']' → logprob: -10.751266479492188
    5. '[' → logprob: -11.251266479492188
    6. '```' → logprob: -12.376266479492188
    7. '
' → logprob: -12.501266479492188
    8. 'lection' → logprob: -12.876266479492188
    9. '#' → logprob: -12.876266479492188
    10. 'l' → logprob: -13.001266479492188

Token 234: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.00019591135787777603
    2. '_masks' → logprob: -9.375195503234863
    3. ']_' → logprob: -10.000195503234863
    4. '_bits' → logprob: -10.125195503234863
    5. 'mask' → logprob: -11.750195503234863
    6. '_bit' → logprob: -11.875195503234863
    7. ']' → logprob: -12.500195503234863
    8. '_MASK' → logprob: -12.875195503234863
    9. '_' → logprob: -13.750195503234863
    10. '_m' → logprob: -14.000195503234863

Token 235: ']:' (ID: 12433)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003436134662479162
    2. ' ]' → logprob: -6.503436088562012
    3. ']=' → logprob: -6.753436088562012
    4. '][' → logprob: -7.628436088562012
    5. '=' → logprob: -8.628436088562012
    6. ' =' → logprob: -9.753436088562012
    7. ']={' → logprob: -11.128436088562012
    8. ')' → logprob: -12.128436088562012
    9. ' ][' → logprob: -12.628436088562012
    10. ']:' → logprob: -12.753436088562012

Token 236: ' whether' (ID: 5588)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.6482803821563721
    2. 'set' → logprob: -1.273280382156372
    3. ' set' → logprob: -1.898280382156372
    4. ' False' → logprob: -3.273280382156372
    5. '[[' → logprob: -5.023280143737793
    6. '[' → logprob: -7.023280143737793
    7. ' [[' → logprob: -7.148280143737793
    8. ' [' → logprob: -7.773280143737793
    9. ' =' → logprob: -7.898280143737793
    10. 'True' → logprob: -9.148280143737793

Token 237: ' state' (ID: 2608)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.2826361656188965
    2. 'True' → logprob: -2.5326361656188965
    3. ' visited' → logprob: -2.5326361656188965
    4. ' (' → logprob: -3.1576361656188965
    5. ' True' → logprob: -3.2826361656188965
    6. '(True' → logprob: -6.9076361656188965
    7. '(' → logprob: -7.0326361656188965
    8. 'False' → logprob: -7.4076361656188965
    9. 'r' → logprob: -7.4076361656188965
    10. '(r' → logprob: -7.4076361656188965

Token 238: ' visited' (ID: 18416)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -1.106031060218811
    2. ' has' → logprob: -1.356031060218811
    3. ' visited' → logprob: -1.981031060218811
    4. 'visited' → logprob: -2.2310309410095215
    5. ']' → logprob: -3.1060309410095215
    6. ' =' → logprob: -3.1060309410095215
    7. ' is' → logprob: -3.6060309410095215
    8. '[' → logprob: -3.9810309410095215
    9. '][' → logprob: -5.4810309410095215
    10. '=' → logprob: -5.7310309410095215

Token 239: '.
' (ID: 558)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.46605002880096436
    2. '[r' → logprob: -1.3410500288009644
    3. '   ' → logprob: -3.091050148010254
    4. ']' → logprob: -3.591050148010254
    5. '=' → logprob: -3.841050148010254
    6. '[' → logprob: -4.716050148010254
    7. ')' → logprob: -6.591050148010254
    8. ' ]' → logprob: -7.216050148010254
    9. ',' → logprob: -7.341050148010254
    10. '][' → logprob: -7.466050148010254

Token 240: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008545071817934513
    2. 'visited' → logprob: -5.633544921875
    3. ' visited' → logprob: -6.133544921875
    4. ')' → logprob: -7.258544921875
    5. '[' → logprob: -7.758544921875
    6. ' ' → logprob: -8.258544921875
    7. ']' → logprob: -8.383544921875
    8. '    
' → logprob: -8.883544921875
    9. '```' → logprob: -8.883544921875
    10. ' 
' → logprob: -9.008544921875

Token 241: ' visited' (ID: 18416)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7066023945808411
    2. 'visited' (adapté à ' visited') → logprob: -1.0816023349761963
    3. ' visited' → logprob: -1.9566023349761963
    4. 'v' → logprob: -4.331602573394775
    5. ' 
' → logprob: -5.081602573394775
    6. '[' → logprob: -6.831602573394775
    7. '    
' → logprob: -7.081602573394775
    8. ' ' → logprob: -7.206602573394775
    9. ' v' → logprob: -7.581602573394775
    10. '```' → logprob: -8.206602096557617

Token 242: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3134634494781494
    2. '=' → logprob: -1.3134634494781494
    3. '=[' → logprob: -8.93846321105957
    4. '[' → logprob: -10.06346321105957
    5. '=[[' → logprob: -11.93846321105957
    6. ']' → logprob: -12.18846321105957
    7. ')' → logprob: -12.31346321105957
    8. '[r' → logprob: -12.81346321105957
    9. ' =[' → logprob: -12.93846321105957
    10. ',' → logprob: -13.18846321105957

Token 243: ' [[[' (ID: 121934)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.12712517380714417
    2. ' [[[' → logprob: -2.1271252632141113
    3. '[' → logprob: -8.627124786376953
    4. ' [[' → logprob: -11.377124786376953
    5. ' [' → logprob: -12.002124786376953
    6. '   ' → logprob: -15.752124786376953
    7. '[
' → logprob: -16.127124786376953
    8. ' ' → logprob: -17.752124786376953
    9. '```' → logprob: -17.752124786376953
    10. '[['' → logprob: -18.502124786376953

Token 244: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.5048530030981055e-06
    2. ' False' → logprob: -13.500001907348633
    3. '0' → logprob: -19.125001907348633
    4. '(False' → logprob: -20.125001907348633
    5. '   ' → logprob: -22.875001907348633
    6. 'false' → logprob: -23.125001907348633
    7. '=False' → logprob: -23.500001907348633
    8. '[' → logprob: -23.875001907348633
    9. 'FALSE' → logprob: -24.750001907348633
    10. '
' → logprob: -25.000001907348633

Token 245: ']*' (ID: 18579)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16063077747821808
    2. 'for' → logprob: -1.9106308221817017
    3. ']' → logprob: -8.03563117980957
    4. '   ' → logprob: -10.16063117980957
    5. ']*' → logprob: -11.41063117980957
    6. ']*(' → logprob: -11.53563117980957
    7. '	for' → logprob: -11.91063117980957
    8. ')' → logprob: -12.41063117980957
    9. ' ' → logprob: -12.53563117980957
    10. '           ' → logprob: -12.91063117980957

Token 246: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -8.542423165636137e-05
    2. '(' → logprob: -9.375085830688477
    3. ' (' → logprob: -15.375085830688477
    4. ' ' → logprob: -15.625085830688477
    5. '   ' → logprob: -16.125085830688477
    6. '
' → logprob: -18.750085830688477
    7. '16' → logprob: -18.750085830688477
    8. '```' → logprob: -18.875085830688477
    9. '８' → logprob: -20.125085830688477
    10. 'eight' → logprob: -20.250085830688477

Token 247: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1002255454659462
    2. 'for' → logprob: -2.3502254486083984
    3. '	for' → logprob: -12.100225448608398
    4. '   ' → logprob: -12.225225448608398
    5. ' ' → logprob: -12.850225448608398
    6. ')' → logprob: -12.850225448608398
    7. ']' → logprob: -13.225225448608398
    8. '    ' → logprob: -14.850225448608398
    9. '  ' → logprob: -15.350225448608398
    10. '       ' → logprob: -15.975225448608398

Token 248: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3253991901874542
    2. '_c' → logprob: -1.8253991603851318
    3. '_j' → logprob: -2.450399160385132
    4. ' _' → logprob: -3.575399160385132
    5. '_col' → logprob: -6.825399398803711
    6. '_range' → logprob: -8.200399398803711
    7. '_i' → logprob: -8.325399398803711
    8. '_r' → logprob: -8.450399398803711
    9. '_m' → logprob: -9.325399398803711
    10. '_in' → logprob: -9.450399398803711

Token 249: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10027039051055908
    2. 'in' → logprob: -2.3502702713012695
    3. 'range' → logprob: -10.10027027130127
    4. ' ' → logprob: -11.10027027130127
    5. ' range' → logprob: -13.35027027130127
    6. '  ' → logprob: -13.60027027130127
    7. '_' → logprob: -13.85027027130127
    8. ' _' → logprob: -14.10027027130127
    9. 'c' → logprob: -14.47527027130127
    10. 'In' → logprob: -14.60027027130127

Token 250: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00861456897109747
    2. ' range' → logprob: -4.758614540100098
    3. '   ' → logprob: -17.008615493774414
    4. '_range' → logprob: -17.758615493774414
    5. '(range' → logprob: -18.633615493774414
    6. 'M' → logprob: -18.883615493774414
    7. 'm' → logprob: -19.008615493774414
    8. 'Range' → logprob: -19.133615493774414
    9. '
' → logprob: -19.133615493774414
    10. '	range' → logprob: -19.258615493774414

Token 251: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.023265745490789413
    2. 'M' → logprob: -3.773265838623047
    3. '(' → logprob: -11.898265838623047
    4. '   ' → logprob: -12.148265838623047
    5. ' (' → logprob: -12.273265838623047
    6. ' M' → logprob: -12.898265838623047
    7. '	M' → logprob: -14.898265838623047
    8. '(N' → logprob: -15.523265838623047
    9. '  ' → logprob: -16.148265838623047
    10. '    ' → logprob: -16.523265838623047

Token 252: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0008513207430951297
    2. ']' → logprob: -7.250851154327393
    3. ')' → logprob: -9.62585163116455
    4. ' )' → logprob: -10.12585163116455
    5. ' ]' → logprob: -10.37585163116455
    6. '   ' → logprob: -13.12585163116455
    7. ']]' → logprob: -14.50085163116455
    8. '])' → logprob: -14.50085163116455
    9. ' ' → logprob: -14.75085163116455
    10. '}]' → logprob: -15.50085163116455

Token 253: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3971937894821167
    2. ']' → logprob: -1.2721937894821167
    3. 'for' → logprob: -3.2721939086914062
    4. '   ' → logprob: -4.772193908691406
    5. ' ]' → logprob: -7.397193908691406
    6. '       ' → logprob: -8.397193908691406
    7. '    ' → logprob: -9.147193908691406
    8. ' ' → logprob: -9.272193908691406
    9. ')' → logprob: -10.022193908691406
    10. '	for' → logprob: -10.647193908691406

Token 254: ' __' (ID: 2516)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.16445723176002502
    2. 'range' → logprob: -1.9144572019577026
    3. ' in' → logprob: -5.539457321166992
    4. 'in' → logprob: -8.289457321166992
    5. '(range' → logprob: -10.539457321166992
    6. '_' → logprob: -11.039457321166992
    7. '_range' → logprob: -13.539457321166992
    8. '	range' → logprob: -15.414457321166992
    9. ' _' → logprob: -15.914457321166992
    10. 'Range' → logprob: -17.164457321166992

Token 255: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04320939630270004
    2. 'in' → logprob: -3.1682093143463135
    3. '_' → logprob: -8.793209075927734
    4. 'range' → logprob: -9.918209075927734
    5. ' range' → logprob: -12.293209075927734
    6. ' ' → logprob: -13.668209075927734
    7. 'n' → logprob: -13.793209075927734
    8. '_in' → logprob: -14.293209075927734
    9. 'In' → logprob: -14.918209075927734
    10. 'i' → logprob: -15.418209075927734

Token 256: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007099286303855479
    2. ' range' → logprob: -7.2507100105285645
    3. '(range' → logprob: -18.125709533691406
    4. 'in' → logprob: -21.000709533691406
    5. '	range' → logprob: -21.875709533691406
    6. '
' → logprob: -22.125709533691406
    7. 'N' → logprob: -23.000709533691406
    8. '.range' → logprob: -23.375709533691406
    9. ' in' → logprob: -24.750709533691406
    10. '_range' → logprob: -24.750709533691406

Token 257: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.3869000971317291
    2. '(N' → logprob: -1.1369000673294067
    3. '(' → logprob: -11.636899948120117
    4. ' N' → logprob: -11.886899948120117
    5. '	N' → logprob: -12.511899948120117
    6. '
' → logprob: -13.136899948120117
    7. '   ' → logprob: -13.511899948120117
    8. '2' → logprob: -14.011899948120117
    9. '[N' → logprob: -14.011899948120117
    10. '1' → logprob: -14.636899948120117

Token 258: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.020624225959181786
    2. ']' → logprob: -3.8956241607666016
    3. ' ]' → logprob: -9.895624160766602
    4. '   ' → logprob: -11.270624160766602
    5. ']]' → logprob: -11.645624160766602
    6. ')' → logprob: -13.145624160766602
    7. '])]' → logprob: -13.270624160766602
    8. ')],' → logprob: -13.645624160766602
    9. '>]' → logprob: -13.770624160766602
    10. '}]' → logprob: -13.770624160766602

Token 259: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03338240087032318
    2. '
' → logprob: -4.158382415771484
    3. '    
' → logprob: -5.158382415771484
    4. 'visited' → logprob: -5.908382415771484
    5. ' visited' → logprob: -6.033382415771484
    6. ' queue' → logprob: -6.033382415771484
    7. 'queue' → logprob: -6.908382415771484
    8. ' 
' → logprob: -7.408382415771484
    9. '  
' → logprob: -7.783382415771484
    10. 'def' → logprob: -7.908382415771484

Token 260: ' q' (ID: 2335)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25136294960975647
    2. ' queue' → logprob: -1.751362919807434
    3. 'queue' → logprob: -3.1263630390167236
    4. ' from' → logprob: -7.3763628005981445
    5. ' q' → logprob: -7.3763628005981445
    6. 'from' → logprob: -7.5013628005981445
    7. 'visited' → logprob: -7.7513628005981445
    8. '
' → logprob: -7.8763628005981445
    9. 'q' (adapté à ' q') → logprob: -8.126362800598145
    10. ' visited' → logprob: -8.251362800598145

Token 261: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014186978340149
    2. '=' → logprob: -1.7014186382293701
    3. 'ue' → logprob: -13.07641887664795
    4. ' ' → logprob: -13.57641887664795
    5. 'u' → logprob: -14.32641887664795
    6. '.' → logprob: -15.07641887664795
    7. '   ' → logprob: -15.57641887664795
    8. '	' → logprob: -15.70141887664795
    9. '=u' → logprob: -15.95141887664795
    10. ' =
' → logprob: -16.076417922973633

Token 262: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.1002068892121315
    2. ' deque' → logprob: -2.3502068519592285
    3. 'Deque' → logprob: -15.225207328796387
    4. 'de' → logprob: -16.97520637512207
    5. '(de' → logprob: -19.60020637512207
    6. '	de' → logprob: -21.10020637512207
    7. '   ' → logprob: -21.35020637512207
    8. 'collections' → logprob: -21.47520637512207
    9. '```' → logprob: -21.47520637512207
    10. ' ' → logprob: -21.97520637512207

Token 263: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3195672631263733
    2. '([(' → logprob: -1.3195672035217285
    3. '(' → logprob: -5.9445672035217285
    4. '([' → logprob: -6.1945672035217285
    5. '()
' → logprob: -6.6945672035217285
    6. '([]' → logprob: -8.694567680358887
    7. '((' → logprob: -9.444567680358887
    8. '(((' → logprob: -9.944567680358887
    9. '([
' → logprob: -10.069567680358887
    10. '[(' → logprob: -11.194567680358887

Token 264: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05374269559979439
    2. ' q' → logprob: -3.8037426471710205
    3. '    
' → logprob: -4.3037428855896
    4. 'q' → logprob: -5.1787428855896
    5. ' 
' → logprob: -5.4287428855896
    6. '(q' → logprob: -6.1787428855896
    7. '    ' → logprob: -7.3037428855896
    8. '(' → logprob: -7.3037428855896
    9. '[q' → logprob: -7.3037428855896
    10. ' (' → logprob: -7.4287428855896

Token 265: ' start' (ID: 1604)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.1483485698699951
    2. ' q' → logprob: -1.1483485698699951
    3. '   ' → logprob: -1.7733485698699951
    4. ' 
' → logprob: -1.8983485698699951
    5. ' (' → logprob: -4.273348808288574
    6. '    
' → logprob: -4.898348808288574
    7. '
' → logprob: -4.898348808288574
    8. 'r' → logprob: -5.023348808288574
    9. '(q' → logprob: -6.023348808288574
    10. '(' → logprob: -6.398348808288574

Token 266: '_state' (ID: 9479)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13509555160999298
    2. '=' → logprob: -2.2600955963134766
    3. '.append' → logprob: -4.135095596313477
    4. '.' → logprob: -6.385095596313477
    5. '_pos' → logprob: -6.760095596313477
    6. '_r' → logprob: -7.135095596313477
    7. ')' → logprob: -7.510095596313477
    8. '(' → logprob: -8.010095596313477
    9. '_state' → logprob: -8.385095596313477
    10. '_' → logprob: -8.510095596313477

Token 267: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10022478550672531
    2. '=' → logprob: -2.350224733352661
    3. ' =(' → logprob: -11.725224494934082
    4. '=(' → logprob: -11.975224494934082
    5. ')' → logprob: -13.225224494934082
    6. ' =
' → logprob: -14.600224494934082
    7. '=
' → logprob: -15.225224494934082
    8. '(' → logprob: -15.350224494934082
    9. '=('' → logprob: -15.475224494934082
    10. '=((' → logprob: -15.600224494934082

Token 268: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001929228543303907
    2. ' (' → logprob: -6.25192928314209
    3. '((' → logprob: -14.25192928314209
    4. '[(' → logprob: -18.126928329467773
    5. '   ' → logprob: -18.876928329467773
    6. '0' → logprob: -20.626928329467773
    7. ' ((' → logprob: -21.251928329467773
    8. ' ' → logprob: -21.376928329467773
    9. '(None' → logprob: -21.376928329467773
    10. '```' → logprob: -22.001928329467773

Token 269: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.008129963040119e-06
    2. ' ' → logprob: -12.625003814697266
    3. '(' → logprob: -15.250003814697266
    4. ')' → logprob: -15.500003814697266
    5. '   ' → logprob: -16.625003814697266
    6. '۰' → logprob: -17.000003814697266
    7. ',' → logprob: -17.312503814697266
    8. '```' → logprob: -18.000003814697266
    9. '０' → logprob: -18.500003814697266
    10. '{' → logprob: -18.937503814697266

Token 270: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00988794956356287
    2. ' ,' → logprob: -4.634888172149658
    3. '0' → logprob: -9.7598876953125
    4. ' ' → logprob: -9.8848876953125
    5. '<|end|>' → logprob: -11.5098876953125
    6. ',
' → logprob: -12.3848876953125
    7. '```' → logprob: -13.3848876953125
    8. ')' → logprob: -13.5098876953125
    9. '	' → logprob: -14.0098876953125
    10. '   ' → logprob: -14.1348876953125

Token 271: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003802680876106024
    2. ' ' → logprob: -7.875380039215088
    3. ',' → logprob: -16.25037956237793
    4. ')' → logprob: -17.12537956237793
    5. '<|end|>' → logprob: -17.37537956237793
    6. '   ' → logprob: -18.87537956237793
    7. '  ' → logprob: -19.50037956237793
    8. '۰' → logprob: -20.31287956237793
    9. '```' → logprob: -20.43787956237793
    10. '    ' → logprob: -20.50037956237793

Token 272: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00408397801220417
    2. ' ,' → logprob: -5.50408411026001
    3. ',
' → logprob: -13.379083633422852
    4. ')' → logprob: -13.629083633422852
    5. ',None' → logprob: -13.629083633422852
    6. '0' → logprob: -15.379083633422852
    7. '   ' → logprob: -15.504083633422852
    8. ' ' → logprob: -15.629083633422852
    9. ',int' → logprob: -15.879083633422852
    10. ',,' → logprob: -16.12908363342285

Token 273: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.127333340875339e-06
    2. ' ' → logprob: -12.625003814697266
    3. '000' → logprob: -14.500003814697266
    4. '   ' → logprob: -16.250003814697266
    5. '```' → logprob: -17.000003814697266
    6. '7' → logprob: -17.375003814697266
    7. 'False' → logprob: -17.437503814697266
    8. '۰' → logprob: -17.812503814697266
    9. ')' → logprob: -17.937503814697266
    10. '
' → logprob: -18.062503814697266

Token 274: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.050162963569164276
    2. ',' → logprob: -3.0501630306243896
    3. ')
' → logprob: -6.5501627922058105
    4. ' )' → logprob: -9.550163269042969
    5. ',q' → logprob: -10.675163269042969
    6. ' ,' → logprob: -11.925163269042969
    7. ',None' → logprob: -12.050163269042969
    8. '   ' → logprob: -12.050163269042969
    9. ',)' → logprob: -12.300163269042969
    10. '))' → logprob: -12.800163269042969

Token 275: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0069141685962677
    2. 'q' → logprob: -6.006914138793945
    3. '   ' → logprob: -6.631914138793945
    4. ',' → logprob: -7.256914138793945
    5. '<|end|>' → logprob: -7.631914138793945
    6. ' 
' → logprob: -8.006914138793945
    7. '    
' → logprob: -8.006914138793945
    8. ')' → logprob: -8.131914138793945
    9. ' q' → logprob: -8.131914138793945
    10. ',q' → logprob: -8.881914138793945

Token 276: ' start' (ID: 1604)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.5090465545654297
    2. ' q' → logprob: -1.2590465545654297
    3. 'r' → logprob: -3.0090465545654297
    4. 'visited' → logprob: -3.2590465545654297
    5. '0' → logprob: -4.75904655456543
    6. ' r' → logprob: -5.00904655456543
    7. ' visited' → logprob: -5.25904655456543
    8. ')' → logprob: -5.88404655456543
    9. '
' → logprob: -7.50904655456543
    10. ',' → logprob: -7.50904655456543

Token 277: ' at' (ID: 540)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24040842056274414
    2. ',' → logprob: -2.115408420562744
    3. '    
' → logprob: -3.490408420562744
    4. '   ' → logprob: -3.865408420562744
    5. ')' → logprob: -4.240408420562744
    6. ',q' → logprob: -4.865408420562744
    7. '  
' → logprob: -5.490408420562744
    8. ')
' → logprob: -5.490408420562744
    9. '_state' → logprob: -5.865408420562744
    10. 'state' → logprob: -6.365408420562744

Token 278: ' entrance' (ID: 27326)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0207687858492136
    2. ' ' → logprob: -3.895768880844116
    3. '(' → logprob: -8.645769119262695
    4. ' (' → logprob: -10.145769119262695
    5. ',' → logprob: -11.770769119262695
    6. '
' → logprob: -13.770769119262695
    7. ')' → logprob: -14.145769119262695
    8. '  ' → logprob: -14.770769119262695
    9. ' ,' → logprob: -15.020769119262695
    10. '    ' → logprob: -15.145769119262695

Token 279: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.181245818734169
    2. ',' → logprob: -2.931245803833008
    3. '   ' → logprob: -3.306245803833008
    4. '<|end|>' → logprob: -3.931245803833008
    5. ',q' → logprob: -4.181245803833008
    6. 'q' → logprob: -4.181245803833008
    7. ')' → logprob: -4.556245803833008
    8. '<|end|>' → logprob: -5.431245803833008
    9. ',
' → logprob: -5.556245803833008
    10. ' q' → logprob: -6.056245803833008

Token 280: ' no' (ID: 860)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.7638327479362488
    2. 'visited' → logprob: -1.0138328075408936
    3. '0' → logprob: -2.0138328075408936
    4. ' visited' → logprob: -4.2638325691223145
    5. ' False' → logprob: -4.3888325691223145
    6. 'True' → logprob: -5.1388325691223145
    7. ' q' → logprob: -6.5138325691223145
    8. 'q' → logprob: -6.8888325691223145
    9. ' ' → logprob: -7.1388325691223145
    10. ')' → logprob: -7.7638325691223145

Token 281: ' treasure' (ID: 47849)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.44185611605644226
    2. '_col' → logprob: -1.6918561458587646
    3. 'col' → logprob: -2.4418561458587646
    4. ' collected' → logprob: -2.9418561458587646
    5. ' _' → logprob: -4.9418559074401855
    6. 'tokens' → logprob: -5.5668559074401855
    7. '_t' → logprob: -5.5668559074401855
    8. '_token' → logprob: -5.6918559074401855
    9. '_tokens' → logprob: -5.9418559074401855
    10. '_mask' → logprob: -6.1918559074401855

Token 282: ' collected' (ID: 20480)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.5144571661949158
    2. '_col' → logprob: -1.1394572257995605
    3. ' collected' → logprob: -3.0144572257995605
    4. ',' → logprob: -3.5144572257995605
    5. '_mask' → logprob: -7.1394572257995605
    6. '_' → logprob: -7.2644572257995605
    7. ')' → logprob: -7.6394572257995605
    8. '_,' → logprob: -7.7644572257995605
    9. '   ' → logprob: -8.389456748962402
    10. ' ,' → logprob: -9.014456748962402

Token 283: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6126691699028015
    2. ',' → logprob: -1.6126692295074463
    3. ')' → logprob: -1.7376692295074463
    4. '   ' → logprob: -3.6126692295074463
    5. ')
' → logprob: -3.9876692295074463
    6. ',
' → logprob: -4.112668991088867
    7. ',q' → logprob: -4.487668991088867
    8. 'q' → logprob: -5.487668991088867
    9. '    
' → logprob: -6.362668991088867
    10. '  
' → logprob: -7.612668991088867

Token 284: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.727308988571167
    2. '   ' → logprob: -1.227308988571167
    3. 'q' → logprob: -1.852308988571167
    4. ' q' → logprob: -3.352308988571167
    5. ' 
' → logprob: -4.602309226989746
    6. '    
' → logprob: -5.102309226989746
    7. '  
' → logprob: -5.352309226989746
    8. '	q' → logprob: -5.477309226989746
    9. ',q' → logprob: -6.477309226989746
    10. '<|end|>' → logprob: -6.727309226989746

Token 285: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.1548241525888443
    2. '   ' → logprob: -2.4048242568969727
    3. ' q' → logprob: -3.0298242568969727
    4. '
' → logprob: -5.654824256896973
    5. 'visited' → logprob: -7.154824256896973
    6. '    
' → logprob: -8.279824256896973
    7. '	q' → logprob: -9.529824256896973
    8. ' visited' → logprob: -9.529824256896973
    9. ' 
' → logprob: -9.779824256896973
    10. '```' → logprob: -10.779824256896973

Token 286: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00021450345229823142
    2. '.enqueue' → logprob: -9.375214576721191
    3. '.' → logprob: -9.625214576721191
    4. '.put' → logprob: -10.000214576721191
    5. '.extend' → logprob: -11.625214576721191
    6. '.push' → logprob: -13.000214576721191
    7. '.p' → logprob: -13.375214576721191
    8. '.add' → logprob: -13.375214576721191
    9. '.app' → logprob: -13.500214576721191
    10. '.offer' → logprob: -13.625214576721191

Token 287: '(start' (ID: 20008)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.11573006212711334
    2. '(start' → logprob: -2.240730047225952
    3. '(' → logprob: -5.990730285644531
    4. '(((' → logprob: -8.990730285644531
    5. 'start' → logprob: -9.115730285644531
    6. ' ((' → logprob: -9.240730285644531
    7. ' (' → logprob: -10.365730285644531
    8. '((*' → logprob: -10.615730285644531
    9. '(*' → logprob: -11.865730285644531
    10. '```' → logprob: -13.365730285644531

Token 288: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -2.8087270038668066e-05
    2. ')' → logprob: -11.625027656555176
    3. 'state' → logprob: -11.875027656555176
    4. '_states' → logprob: -12.750027656555176
    5. ')_' → logprob: -13.375027656555176
    6. ',' → logprob: -13.500027656555176
    7. '   ' → logprob: -13.500027656555176
    8. '_STATE' → logprob: -14.125027656555176
    9. '(' → logprob: -14.250027656555176
    10. '_State' → logprob: -14.500027656555176

Token 289: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.038633592426776886
    2. ')
' → logprob: -3.2886335849761963
    3. '   ' → logprob: -7.538633823394775
    4. ' )' → logprob: -10.913633346557617
    5. ',' → logprob: -11.413633346557617
    6. '
' → logprob: -11.788633346557617
    7. '<|end|>' → logprob: -11.913633346557617
    8. ')
' → logprob: -12.413633346557617
    9. ' )
' → logprob: -12.913633346557617
    10. '```' → logprob: -13.163633346557617

Token 290: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.525825560092926
    2. 'visited' → logprob: -0.900825560092926
    3. ' visited' → logprob: -6.275825500488281
    4. '
' → logprob: -7.525825500488281
    5. '```' → logprob: -9.025825500488281
    6. '    
' → logprob: -9.275825500488281
    7. ',' → logprob: -11.525825500488281
    8. '<|end|>' → logprob: -11.525825500488281
    9. 'while' → logprob: -11.650825500488281
    10. '  
' → logprob: -11.775825500488281

Token 291: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.023964326828718185
    2. '   ' → logprob: -3.7739644050598145
    3. ' visited' → logprob: -7.2739644050598145
    4. 'while' → logprob: -11.398963928222656
    5. '
' → logprob: -12.148963928222656
    6. '    
' → logprob: -12.648963928222656
    7. '  ' → logprob: -13.523963928222656
    8. ' ' → logprob: -13.648963928222656
    9. '```' → logprob: -14.523963928222656
    10. '    ' → logprob: -14.773963928222656

Token 292: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.512236498361744e-07
    2. '```' → logprob: -15.875000953674316
    3. '][' → logprob: -16.0
    4. ' [' → logprob: -16.375
    5. ')[' → logprob: -17.0
    6. '
' → logprob: -17.5
    7. '\[' → logprob: -17.5
    8. '   ' → logprob: -17.625
    9. '[[' → logprob: -17.875
    10. '[
' → logprob: -18.25

Token 293: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.125000953674316
    3. '[' → logprob: -16.250001907348633
    4. '
' → logprob: -16.875001907348633
    5. '   ' → logprob: -16.875001907348633
    6. '```' → logprob: -18.750001907348633
    7. '(' → logprob: -18.875001907348633
    8. '

' → logprob: -19.500001907348633
    9. '  ' → logprob: -19.625001907348633
    10. '۰' → logprob: -20.000001907348633

Token 294: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -8.506661833962426e-05
    2. '[' → logprob: -9.50008487701416
    3. ' ][' → logprob: -11.75008487701416
    4. ']' → logprob: -13.25008487701416
    5. '0' → logprob: -15.87508487701416
    6. '   ' → logprob: -15.87508487701416
    7. ',' → logprob: -17.125085830688477
    8. ' ' → logprob: -17.375085830688477
    9. ']
' → logprob: -17.625085830688477
    10. '"][' → logprob: -17.750085830688477

Token 295: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '
' → logprob: -17.625001907348633
    4. '   ' → logprob: -18.125001907348633
    5. '[' → logprob: -18.250001907348633
    6. '```' → logprob: -18.437501907348633
    7. '۰' → logprob: -19.312501907348633
    8. '][' → logprob: -19.687501907348633
    9. '  ' → logprob: -19.750001907348633
    10. ',' → logprob: -19.812501907348633

Token 296: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -4.5252596464706585e-05
    2. '[' → logprob: -10.375044822692871
    3. ']' → logprob: -11.625044822692871
    4. ' ][' → logprob: -12.250044822692871
    5. '0' → logprob: -15.750044822692871
    6. ''][' → logprob: -17.625045776367188
    7. '"][' → logprob: -17.750045776367188
    8. ']
' → logprob: -18.500045776367188
    9. '()][' → logprob: -18.625045776367188
    10. ' ' → logprob: -18.750045776367188

Token 297: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '۰' → logprob: -17.25
    4. '000' → logprob: -17.75
    5. '০' → logprob: -19.6875
    6. '```' → logprob: -19.6875
    7. '   ' → logprob: -20.375
    8. '０' → logprob: -20.875
    9. '०' → logprob: -21.0625
    10. '٠' → logprob: -21.3125

Token 298: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006484562181867659
    2. ']=' → logprob: -7.375648498535156
    3. ' ]' → logprob: -10.750648498535156
    4. 'True' → logprob: -14.875648498535156
    5. '=' → logprob: -16.500648498535156
    6. '=True' → logprob: -17.125648498535156
    7. ']
' → logprob: -18.000648498535156
    8. ']==' → logprob: -18.500648498535156
    9. ')' → logprob: -18.625648498535156
    10. ' =' → logprob: -18.750648498535156

Token 299: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.127410888671875
    2. ' =' → logprob: -2.127410888671875
    3. '=True' → logprob: -7.752410888671875
    4. ']' → logprob: -10.127410888671875
    5. ']=' → logprob: -11.377410888671875
    6. 'True' → logprob: -13.877410888671875
    7. '[' → logprob: -15.127410888671875
    8. '=true' → logprob: -16.377410888671875
    9. '=False' → logprob: -16.502410888671875
    10. ')' → logprob: -16.752410888671875

Token 300: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -2.935296834039036e-06
    2. ' True' → logprob: -12.75000286102295
    3. '1' → logprob: -19.625003814697266
    4. '(True' → logprob: -21.250003814697266
    5. '=True' → logprob: -21.750003814697266
    6. 'False' → logprob: -22.125003814697266
    7. 'true' → logprob: -23.250003814697266
    8. '
' → logprob: -24.250003814697266
    9. '   ' → logprob: -24.625003814697266
    10. '[' → logprob: -25.250003814697266

Token 301: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14225582778453827
    2. '
' → logprob: -2.3922557830810547
    3. '    
' → logprob: -3.8922557830810547
    4. '  
' → logprob: -5.142255783081055
    5. '<|end|>' → logprob: -5.642255783081055
    6. ',' → logprob: -5.767255783081055
    7. ' while' → logprob: -5.892255783081055
    8. 'while' → logprob: -6.267255783081055
    9. ' 
' → logprob: -7.017255783081055
    10. ',
' → logprob: -7.267255783081055

Token 302: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.046997811645269394
    2. 'while' → logprob: -3.5469977855682373
    3. ' while' → logprob: -4.171998023986816
    4. '    
' → logprob: -7.171998023986816
    5. '	while' → logprob: -7.921998023986816
    6. ')' → logprob: -8.796998023986816
    7. '    ' → logprob: -9.421998023986816
    8. '
' → logprob: -9.796998023986816
    9. ' ' → logprob: -10.046998023986816
    10. '  ' → logprob: -10.171998023986816

Token 303: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.1905980408191681
    2. ' while' → logprob: -1.9405980110168457
    3. '   ' → logprob: -3.6905980110168457
    4. 'dire' → logprob: -6.065598011016846
    5. 'steps' → logprob: -7.315598011016846
    6. 'visited' → logprob: -7.315598011016846
    7. ' directions' → logprob: -7.440598011016846
    8. 'moves' → logprob: -9.065598487854004
    9. ' steps' → logprob: -9.440598487854004
    10. 'dirs' → logprob: -9.690598487854004

Token 304: ' For' (ID: 2214)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.1449510008096695
    2. ' while' → logprob: -2.394951105117798
    3. '   ' → logprob: -3.769951105117798
    4. 'dire' → logprob: -4.019950866699219
    5. ' directions' → logprob: -6.019950866699219
    6. 'direction' → logprob: -9.394950866699219
    7. 'dirs' → logprob: -9.894950866699219
    8. 'd' → logprob: -10.144950866699219
    9. 'moves' → logprob: -10.394950866699219
    10. 'dr' → logprob: -10.769950866699219

Token 305: ' entrance' (ID: 27326)
  Prédit: ' dr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dr' → logprob: -0.11741244792938232
    2. ' r' → logprob: -2.617412567138672
    3. 'r' → logprob: -3.867412567138672
    4. 'dr' → logprob: -5.117412567138672
    5. ' directions' → logprob: -5.367412567138672
    6. ' _' → logprob: -6.367412567138672
    7. ' (' → logprob: -6.867412567138672
    8. ' dir' → logprob: -6.867412567138672
    9. ' ' → logprob: -7.992412567138672
    10. ' row' → logprob: -8.617412567138672

Token 306: ' cell' (ID: 4206)
  Prédit: '_moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_moves' → logprob: -0.9714610576629639
    2. '_neighbors' → logprob: -1.8464610576629639
    3. ' directions' → logprob: -2.846461057662964
    4. 'moves' → logprob: -2.971461057662964
    5. '   ' → logprob: -3.096461057662964
    6. ',' → logprob: -3.221461057662964
    7. ' in' → logprob: -3.221461057662964
    8. 'neighbors' → logprob: -3.596461057662964
    9. 'r' → logprob: -3.846461057662964
    10. ' moves' → logprob: -4.096461296081543

Token 307: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.9297242164611816
    2. ',' → logprob: -1.4297242164611816
    3. 'r' → logprob: -2.4297242164611816
    4. 'dr' → logprob: -3.1797242164611816
    5. ' (' → logprob: -3.3047242164611816
    6. '   ' → logprob: -3.5547242164611816
    7. 'moves' → logprob: -3.5547242164611816
    8. ' ,' → logprob: -4.054724216461182
    9. 'in' → logprob: -4.179724216461182
    10. '_moves' → logprob: -4.304724216461182

Token 308: ' can' (ID: 665)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.21977174282073975
    2. 'dr' → logprob: -2.2197718620300293
    3. ' directions' → logprob: -3.2197718620300293
    4. 'dirs' → logprob: -3.9697718620300293
    5. 'moves' → logprob: -4.719771862030029
    6. '   ' → logprob: -5.219771862030029
    7. ' dr' → logprob: -5.469771862030029
    8. '#' → logprob: -5.969771862030029
    9. ' moves' → logprob: -6.344771862030029
    10. 'entr' → logprob: -6.719771862030029

Token 309: ' re' (ID: 322)
  Prédit: 'visit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visit' → logprob: -1.5525662899017334
    2. ' revisit' → logprob: -1.6775662899017334
    3. ' move' → logprob: -2.0525662899017334
    4. 'move' → logprob: -2.3025662899017334
    5. 'pass' → logprob: -2.6775662899017334
    6. ' visit' → logprob: -3.1775662899017334
    7. '_move' → logprob: -3.5525662899017334
    8. '   ' → logprob: -3.6775662899017334
    9. '_re' → logprob: -3.6775662899017334
    10. ' pass' → logprob: -4.0525665283203125

Token 310: '-enter' (ID: 124448)
  Prédit: 'visit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visit' → logprob: -0.016699770465493202
    2. 'enter' → logprob: -4.14169979095459
    3. 'move' → logprob: -7.76669979095459
    4. 'turn' → logprob: -10.01669979095459
    5. 'vis' → logprob: -10.01669979095459
    6. '-' → logprob: -10.14169979095459
    7. '_visit' → logprob: -10.39169979095459
    8. ' visit' → logprob: -10.64169979095459
    9. '-enter' → logprob: -11.26669979095459
    10. 'use' → logprob: -11.76669979095459

Token 311: ',' (ID: 11)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.8466102480888367
    2. 'while' → logprob: -1.5966103076934814
    3. '
' → logprob: -1.9716103076934814
    4. '   ' → logprob: -2.0966103076934814
    5. ',' → logprob: -3.2216103076934814
    6. '    
' → logprob: -3.7216103076934814
    7. ',
' → logprob: -4.346610069274902
    8. 'neighbors' → logprob: -5.096610069274902
    9. '_neighbors' → logprob: -5.846610069274902
    10. '_moves' → logprob: -6.221610069274902

Token 312: ' so' (ID: 813)
  Prédit: ' but'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' but' → logprob: -0.4849289357662201
    2. ' so' → logprob: -1.9849289655685425
    3. '#' → logprob: -2.734928846359253
    4. 'but' → logprob: -2.859928846359253
    5. ' directions' → logprob: -3.359928846359253
    6. '   ' → logprob: -4.109929084777832
    7. 'dire' → logprob: -4.234929084777832
    8. 'so' → logprob: -4.359929084777832
    9. 'moves' → logprob: -5.109929084777832
    10. ' we' → logprob: -5.359929084777832

Token 313: ' it' (ID: 480)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5549027919769287
    2. 'visited' → logprob: -1.5549027919769287
    3. 'dire' → logprob: -1.8049027919769287
    4. 'entr' → logprob: -2.0549027919769287
    5. '#' → logprob: -2.8049027919769287
    6. 'while' → logprob: -2.9299027919769287
    7. 'steps' → logprob: -3.4299027919769287
    8. 'allowed' → logprob: -4.179903030395508
    9. ' directions' → logprob: -4.429903030395508
    10. ' while' → logprob: -4.429903030395508

Token 314: ' doesn't' (ID: 8740)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.5632482767105103
    2. ' is' → logprob: -1.6882482767105103
    3. 'can' → logprob: -3.3132481575012207
    4. 's' → logprob: -3.6882481575012207
    5. ')' → logprob: -4.188248157501221
    6. '_can' → logprob: -4.188248157501221
    7. ' will' → logprob: -4.313248157501221
    8. ' has' → logprob: -4.438248157501221
    9. '_moves' → logprob: -4.688248157501221
    10. 'moves' → logprob: -4.813248157501221

Token 315: ' collapse' (ID: 38335)
  Prédit: 'collapse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collapse' → logprob: -1.1039502620697021
    2. 'need' → logprob: -1.7289502620697021
    3. 'count' → logprob: -2.478950262069702
    4. ' collapse' → logprob: -2.603950262069702
    5. ' need' → logprob: -2.728950262069702
    6. 'break' → logprob: -2.853950262069702
    7. 'consume' → logprob: -3.353950262069702
    8. 'require' → logprob: -3.478950262069702
    9. 'have' → logprob: -4.103950500488281
    10. 'block' → logprob: -4.103950500488281

Token 316: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6491021513938904
    2. '   ' → logprob: -0.7741021513938904
    3. '    
' → logprob: -5.149102210998535
    4. ',
' → logprob: -5.899102210998535
    5. ',' → logprob: -6.024102210998535
    6. 'dire' → logprob: -6.399102210998535
    7. ' directions' → logprob: -6.649102210998535
    8. 'moves' → logprob: -6.649102210998535
    9. ' moves' → logprob: -8.024102210998535
    10. 'neighbors' → logprob: -9.149102210998535

Token 317: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13712048530578613
    2. 'dire' → logprob: -2.387120485305786
    3. ' directions' → logprob: -4.012120246887207
    4. 'moves' → logprob: -4.262120246887207
    5. ' moves' → logprob: -6.387120246887207
    6. 'd' → logprob: -7.262120246887207
    7. 'dirs' → logprob: -7.762120246887207
    8. '
' → logprob: -7.887120246887207
    9. '    
' → logprob: -7.887120246887207
    10. 'dx' → logprob: -9.012120246887207

Token 318: ' #' (ID: 1069)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.8328006863594055
    2. ' directions' → logprob: -1.2078006267547607
    3. '   ' → logprob: -1.5828006267547607
    4. 'moves' → logprob: -3.3328006267547607
    5. 'dirs' → logprob: -4.58280086517334
    6. ' moves' → logprob: -4.70780086517334
    7. 'dr' → logprob: -6.20780086517334
    8. ' dr' → logprob: -6.20780086517334
    9. 'd' → logprob: -7.08280086517334
    10. ' dirs' → logprob: -8.33280086517334

Token 319: ' For' (ID: 2214)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.06807057559490204
    2. 'dirs' → logprob: -3.443070650100708
    3. ' directions' → logprob: -4.193070411682129
    4. 'moves' → logprob: -4.943070411682129
    5. '   ' → logprob: -5.318070411682129
    6. 'dr' → logprob: -5.568070411682129
    7. 'while' → logprob: -6.193070411682129
    8. 'd' → logprob: -8.068070411682129
    9. ' dr' → logprob: -8.443070411682129
    10. ' moves' → logprob: -9.318070411682129

Token 320: ' other' (ID: 1273)
  Prédit: ' dr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dr' → logprob: -0.17900881171226501
    2. ' directions' → logprob: -2.429008722305298
    3. 'dr' → logprob: -3.179008722305298
    4. 'r' → logprob: -4.554008960723877
    5. 'dire' → logprob: -5.054008960723877
    6. ' r' → logprob: -5.179008960723877
    7. ' dir' → logprob: -6.554008960723877
    8. ' moves' → logprob: -6.929008960723877
    9. ' (' → logprob: -7.054008960723877
    10. 'moves' → logprob: -7.054008960723877

Token 321: ' cells' (ID: 11242)
  Prédit: ' cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cells' → logprob: -0.5007085800170898
    2. '   ' → logprob: -1.6257085800170898
    3. 'cells' → logprob: -2.25070858001709
    4. ' directions' → logprob: -3.37570858001709
    5. '_cells' → logprob: -3.75070858001709
    6. ' positions' → logprob: -5.00070858001709
    7. ' moves' → logprob: -5.37570858001709
    8. 'moves' → logprob: -5.62570858001709
    9. ' ' → logprob: -5.75070858001709
    10. ',' → logprob: -5.87570858001709

Token 322: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018608972430229187
    2. '   ' → logprob: -4.518609046936035
    3. ' ,' → logprob: -5.143609046936035
    4. ':' → logprob: -6.643609046936035
    5. ',
' → logprob: -8.768609046936035
    6. '    ' → logprob: -10.143609046936035
    7. '<|end|>' → logprob: -10.268609046936035
    8. ')' → logprob: -10.893609046936035
    9. '):' → logprob: -11.143609046936035
    10. '<|end|>' → logprob: -11.143609046936035

Token 323: ' visited' (ID: 18416)
  Prédit: ' directions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' directions' → logprob: -0.657899022102356
    2. 'dire' → logprob: -1.657899022102356
    3. '   ' → logprob: -2.4078989028930664
    4. 'visited' → logprob: -2.9078989028930664
    5. ' visited' → logprob: -3.5328989028930664
    6. ' we' → logprob: -3.9078989028930664
    7. ' moves' → logprob: -4.157898902893066
    8. 'moves' → logprob: -4.907898902893066
    9. ' dr' → logprob: -5.157898902893066
    10. ' dx' → logprob: -5.157898902893066

Token 324: ' only' (ID: 1606)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cells' → logprob: -0.8097702264785767
    2. ' =' → logprob: -2.184770107269287
    3. '_cells' → logprob: -2.309770107269287
    4. ' cells' → logprob: -2.559770107269287
    5. '=' → logprob: -3.309770107269287
    6. '.add' → logprob: -3.684770107269287
    7. '[' → logprob: -3.934770107269287
    8. '_once' → logprob: -4.184770107269287
    9. '_states' → logprob: -4.309770107269287
    10. '[r' → logprob: -4.434770107269287

Token 325: ' once' (ID: 4730)
  Prédit: 'once'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'once' → logprob: -0.11305303871631622
    2. ' once' → logprob: -2.2380530834198
    3. '_once' → logprob: -8.988053321838379
    4. 'Once' → logprob: -9.863053321838379
    5. 'True' → logprob: -11.488053321838379
    6. '[' → logprob: -11.988053321838379
    7. ' ' → logprob: -12.113053321838379
    8. '   ' → logprob: -12.113053321838379
    9. '=True' → logprob: -12.238053321838379
    10. 'when' → logprob: -12.863053321838379

Token 326: ' per' (ID: 777)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06315028667449951
    2. '
' → logprob: -2.938150405883789
    3. '    
' → logprob: -4.938150405883789
    4. 'while' → logprob: -8.313150405883789
    5. ')' → logprob: -8.938150405883789
    6. '	
' → logprob: -9.188150405883789
    7. '  
' → logprob: -9.313150405883789
    8. ',' → logprob: -9.438150405883789
    9. ' while' → logprob: -9.563150405883789
    10. ' 
' → logprob: -9.938150405883789

Token 327: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.36479878425598145
    2. ' path' → logprob: -1.4897987842559814
    3. 'state' → logprob: -2.6147987842559814
    4. 'cell' → logprob: -5.864798545837402
    5. ' state' → logprob: -6.989798545837402
    6. 'step' → logprob: -7.114798545837402
    7. 'col' → logprob: -7.739798545837402
    8. 'position' → logprob: -7.989798545837402
    9. 'move' → logprob: -8.364798545837402
    10. '```' → logprob: -8.489798545837402

Token 328: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.055518634617328644
    2. '
' → logprob: -3.180518627166748
    3. '    
' → logprob: -4.680518627166748
    4. 'while' → logprob: -6.680518627166748
    5. ' while' → logprob: -7.680518627166748
    6. ',' → logprob: -8.055519104003906
    7. ')' → logprob: -8.305519104003906
    8. '  
' → logprob: -8.805519104003906
    9. '<|end|>' → logprob: -8.805519104003906
    10. ' 
' → logprob: -9.305519104003906

Token 329: ' handled' (ID: 29594)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18660135567188263
    2. ' but' → logprob: -2.811601400375366
    3. ' so' → logprob: -4.061601161956787
    4. ' while' → logprob: -4.186601161956787
    5. ' directions' → logprob: -4.186601161956787
    6. '    
' → logprob: -4.436601161956787
    7. '    ' → logprob: -4.811601161956787
    8. '
' → logprob: -4.936601161956787
    9. ' and' → logprob: -4.936601161956787
    10. ' 
' → logprob: -5.311601161956787

Token 330: ' by' (ID: 656)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8704108595848083
    2. ' by' → logprob: -1.1204109191894531
    3. 'while' → logprob: -2.370410919189453
    4. ' while' → logprob: -3.495410919189453
    5. 'by' → logprob: -3.620410919189453
    6. '    ' → logprob: -4.245410919189453
    7. ' in' → logprob: -4.495410919189453
    8. 'for' → logprob: -4.620410919189453
    9. '```' → logprob: -4.620410919189453
    10. 'inside' → logprob: -4.620410919189453

Token 331: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.37560442090034485
    2. 'the' → logprob: -1.3756043910980225
    3. 'col' → logprob: -4.375604629516602
    4. ' visited' → logprob: -4.500604629516602
    5. 'state' → logprob: -4.750604629516602
    6. 'tracking' → logprob: -4.750604629516602
    7. ' the' → logprob: -4.875604629516602
    8. 'mark' → logprob: -6.125604629516602
    9. 'states' → logprob: -6.500604629516602
    10. 'maint' → logprob: -6.625604629516602

Token 332: ' array' (ID: 2644)
  Prédit: '_states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_states' → logprob: -1.245367169380188
    2. '
' → logprob: -1.495367169380188
    3. ')' → logprob: -1.870367169380188
    4. '_neighbors' → logprob: -2.7453670501708984
    5. '   ' → logprob: -3.2453670501708984
    6. ',' → logprob: -3.3703670501708984
    7. '_moves' → logprob: -3.3703670501708984
    8. '_cells' → logprob: -3.4953670501708984
    9. '_positions' → logprob: -3.6203670501708984
    10. 'def' → logprob: -4.745367050170898

Token 333: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019186366349458694
    2. '
' → logprob: -4.894186496734619
    3. '    
' → logprob: -5.019186496734619
    4. ')' → logprob: -6.519186496734619
    5. 'while' → logprob: -6.769186496734619
    6. ' while' → logprob: -6.894186496734619
    7. ',' → logprob: -7.269186496734619
    8. '  
' → logprob: -9.019186019897461
    9. '<|end|>' → logprob: -9.769186019897461
    10. ' 
' → logprob: -10.144186019897461

Token 334: ' condition' (ID: 7060)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.6030937433242798
    2. '   ' → logprob: -1.8530937433242798
    3. ' q' → logprob: -1.9780937433242798
    4. 'the' → logprob: -2.2280936241149902
    5. 'while' → logprob: -2.6030936241149902
    6. ' the' → logprob: -2.6030936241149902
    7. 'col' → logprob: -2.8530936241149902
    8. 'state' → logprob: -2.9780936241149902
    9. 'mask' → logprob: -3.9780936241149902
    10. ' while' → logprob: -4.10309362411499

Token 335: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005843823775649071
    2. ' while' → logprob: -6.255843639373779
    3. 'while' → logprob: -6.630843639373779
    4. '    
' → logprob: -6.880843639373779
    5. ',' → logprob: -7.755843639373779
    6. ')' → logprob: -8.255844116210938
    7. '.' → logprob: -8.630844116210938
    8. '
' → logprob: -8.880844116210938
    9. ' directions' → logprob: -9.005844116210938
    10. '<|end|>' → logprob: -9.880844116210938

Token 336: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009176511666737497
    2. '    
' → logprob: -7.750917434692383
    3. '```' → logprob: -9.000917434692383
    4. ' while' → logprob: -9.875917434692383
    5. '    ' → logprob: -10.250917434692383
    6. ',' → logprob: -10.250917434692383
    7. 'for' → logprob: -10.375917434692383
    8. '  
' → logprob: -10.500917434692383
    9. '\n' → logprob: -10.625917434692383
    10. ' for' → logprob: -10.750917434692383

Token 337: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -1.0204405784606934
    2. 'dire' → logprob: -1.2704405784606934
    3. '   ' → logprob: -1.6454405784606934
    4. 'dr' → logprob: -1.8954405784606934
    5. ' while' → logprob: -4.895440578460693
    6. ' dr' → logprob: -6.145440578460693
    7. 'dirs' → logprob: -6.145440578460693
    8. ' directions' → logprob: -6.145440578460693
    9. 'moves' → logprob: -7.270440578460693
    10. 'd' → logprob: -7.395440578460693

Token 338: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.03951209411025047
    2. 'q' → logprob: -3.2895121574401855
    3. ' len' → logprob: -7.0395121574401855
    4. ' True' → logprob: -7.9145121574401855
    5. 'True' → logprob: -10.164511680603027
    6. 'len' → logprob: -10.164511680603027
    7. ' not' → logprob: -10.289511680603027
    8. ' ' → logprob: -10.414511680603027
    9. '   ' → logprob: -10.664511680603027
    10. '	q' → logprob: -11.039511680603027

Token 339: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7767086029052734
    2. '.p' → logprob: -0.9017086029052734
    3. ':
' → logprob: -2.7767086029052734
    4. '.append' → logprob: -3.1517086029052734
    5. '.' → logprob: -4.026708602905273
    6. '   ' → logprob: -5.401708602905273
    7. '.pop' → logprob: -5.776708602905273
    8. ' .' → logprob: -7.026708602905273
    9. '):
' → logprob: -7.401708602905273
    10. '):' → logprob: -7.901708602905273

Token 340: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0031134262681007385
    2. ',' → logprob: -6.628113269805908
    3. '   ' → logprob: -7.628113269805908
    4. '        
' → logprob: -7.628113269805908
    5. '    ' → logprob: -8.003113746643066
    6. '     ' → logprob: -9.128113746643066
    7. '      ' → logprob: -10.253113746643066
    8. '    
' → logprob: -10.253113746643066
    9. 'r' → logprob: -10.253113746643066
    10. '	' → logprob: -10.378113746643066

Token 341: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.3134286403656006
    2. ' r' → logprob: -1.3134286403656006
    3. '       ' → logprob: -8.81342887878418
    4. '(r' → logprob: -11.68842887878418
    5. ' (' → logprob: -12.18842887878418
    6. '_r' → logprob: -13.06342887878418
    7. '   ' → logprob: -14.06342887878418
    8. '        ' → logprob: -14.56342887878418
    9. '           ' → logprob: -14.56342887878418
    10. '	r' → logprob: -14.68842887878418

Token 342: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004460743162781
    2. ' ,' → logprob: -6.50446081161499
    3. ',c' → logprob: -6.75446081161499
    4. ',q' → logprob: -7.12946081161499
    5. '       ' → logprob: -7.75446081161499
    6. ',n' → logprob: -8.754460334777832
    7. '+' → logprob: -8.754460334777832
    8. ',r' → logprob: -10.254460334777832
    9. ',next' → logprob: -10.379460334777832
    10. ' +' → logprob: -10.504460334777832

Token 343: ',col' (ID: 117560)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3601206839084625
    2. ',c' → logprob: -1.4851206541061401
    3. ',q' → logprob: -2.8601207733154297
    4. ',d' → logprob: -4.73512077331543
    5. ',n' → logprob: -5.36012077331543
    6. ',next' → logprob: -6.48512077331543
    7. ',col' → logprob: -6.48512077331543
    8. ',k' → logprob: -7.36012077331543
    9. ' ,' → logprob: -8.11012077331543
    10. ',w' → logprob: -8.48512077331543

Token 344: 'lected' (ID: 2576)
  Prédit: 'lected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lected' → logprob: -0.000215457082958892
    2. 'lect' → logprob: -9.250215530395508
    3. 'ected' → logprob: -9.875215530395508
    4. '```' → logprob: -11.000215530395508
    5. ',' → logprob: -11.625215530395508
    6. '_' → logprob: -12.000215530395508
    7. '
' → logprob: -12.000215530395508
    8. '``' → logprob: -12.250215530395508
    9. '   ' → logprob: -12.375215530395508
    10. ']' → logprob: -12.875215530395508

Token 345: ' =' (ID: 314)
  Prédit: '_mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.000948141620028764
    2. 'mask' → logprob: -7.875947952270508
    3. ',_' → logprob: -8.750947952270508
    4. '_' → logprob: -9.125947952270508
    5. ',' → logprob: -9.250947952270508
    6. ')' → logprob: -9.750947952270508
    7. '=' → logprob: -10.125947952270508
    8. '_masks' → logprob: -10.125947952270508
    9. '_MASK' → logprob: -10.500947952270508
    10. ' =' → logprob: -11.125947952270508

Token 346: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.2254335582256317
    2. ' q' → logprob: -1.600433588027954
    3. '   ' → logprob: -11.350433349609375
    4. '	q' → logprob: -13.350433349609375
    5. ' ' → logprob: -13.725433349609375
    6. '
' → logprob: -13.975433349609375
    7. ' =' → logprob: -14.100433349609375
    8. '*q' → logprob: -14.225433349609375
    9. '=q' → logprob: -14.350433349609375
    10. '    ' → logprob: -14.475433349609375

Token 347: '.p' (ID: 1201)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6705586910247803
    2. '=' → logprob: -1.2955586910247803
    3. ' =' → logprob: -2.0455586910247803
    4. ')' → logprob: -2.6705586910247803
    5. ',
' → logprob: -5.545558929443359
    6. '       ' → logprob: -5.795558929443359
    7. ' ,' → logprob: -6.295558929443359
    8. '        ' → logprob: -6.545558929443359
    9. '   ' → logprob: -6.920558929443359
    10. '    ' → logprob: -7.170558929443359

Token 348: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.01815907657146454
    2. 'op' → logprob: -4.018158912658691
    3. 'ople' → logprob: -12.768158912658691
    4. 'p' → logprob: -13.268158912658691
    5. 'opl' → logprob: -13.518158912658691
    6. 'opt' → logprob: -14.143158912658691
    7. 'append' → logprob: -14.643158912658691
    8. 'opup' → logprob: -14.643158912658691
    9. '```' → logprob: -14.643158912658691
    10. '   ' → logprob: -15.268158912658691

Token 349: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0384345054626465
    2. ')' → logprob: -1.4134345054626465
    3. ',' → logprob: -1.6634345054626465
    4. '<|end|>' → logprob: -1.9134345054626465
    5. '   ' → logprob: -3.4134345054626465
    6. ':' → logprob: -3.9134345054626465
    7. '<|end|>' → logprob: -5.4134345054626465
    8. '        
' → logprob: -6.2884345054626465
    9. '):
' → logprob: -7.0384345054626465
    10. ':
' → logprob: -7.1634345054626465

Token 350: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1270950436592102
    2. '   ' → logprob: -2.3770949840545654
    3. '        
' → logprob: -4.5020952224731445
    4. '<|end|>' → logprob: -5.5020952224731445
    5. ' 
' → logprob: -5.8770952224731445
    6. '    
' → logprob: -6.1270952224731445
    7. ',' → logprob: -6.5020952224731445
    8. ' for' → logprob: -6.6270952224731445
    9. '
' → logprob: -7.6270952224731445
    10. '\' → logprob: -7.7520952224731445

Token 351: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07713783532381058
    2. 'for' → logprob: -2.9521379470825195
    3. ' if' → logprob: -4.4521379470825195
    4. ' directions' → logprob: -5.3271379470825195
    5. 'dire' → logprob: -6.4521379470825195
    6. '       ' → logprob: -6.7021379470825195
    7. 'd' → logprob: -7.2021379470825195
    8. 'if' → logprob: -7.7021379470825195
    9. '   ' → logprob: -7.8271379470825195
    10. 'dirs' → logprob: -7.8271379470825195

Token 352: ' If' (ID: 1843)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25790730118751526
    2. ' for' → logprob: -1.5079072713851929
    3. 'dire' → logprob: -5.632907390594482
    4. 'if' → logprob: -7.632907390594482
    5. 'dirs' → logprob: -7.632907390594482
    6. ' directions' → logprob: -7.757907390594482
    7. ' if' → logprob: -8.007906913757324
    8. 'd' → logprob: -8.007906913757324
    9. 'dr' → logprob: -9.132906913757324
    10. '   ' → logprob: -9.882906913757324

Token 353: ' at' (ID: 540)
  Prédit: ' collected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collected' → logprob: -0.4803503155708313
    2. 'col' → logprob: -0.9803503155708313
    3. ' r' → logprob: -5.605350494384766
    4. 'r' → logprob: -6.355350494384766
    5. ' (' → logprob: -7.855350494384766
    6. '(col' → logprob: -8.730350494384766
    7. ' col' → logprob: -9.105350494384766
    8. '(r' → logprob: -9.230350494384766
    9. '(' → logprob: -10.105350494384766
    10. 'c' → logprob: -11.480350494384766

Token 354: ' entrance' (ID: 27326)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.3890587389469147
    2. ' (' → logprob: -1.5140587091445923
    3. 'r' → logprob: -2.389058828353882
    4. '(' → logprob: -4.889058589935303
    5. '(r' → logprob: -6.389058589935303
    6. '0' → logprob: -7.264058589935303
    7. ' ' → logprob: -7.514058589935303
    8. 'c' → logprob: -10.514059066772461
    9. 'corn' → logprob: -11.014059066772461
    10. ' c' → logprob: -11.389059066772461

Token 355: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.02063216269016266
    2. 'and' → logprob: -3.895632266998291
    3. ' r' → logprob: -10.020631790161133
    4. '        ' → logprob: -11.395631790161133
    5. 'r' → logprob: -11.895631790161133
    6. ' (' → logprob: -12.145631790161133
    7. ' ' → logprob: -12.145631790161133
    8. '       ' → logprob: -12.395631790161133
    9. '(r' → logprob: -12.395631790161133
    10. '           ' → logprob: -13.020631790161133

Token 356: ' all' (ID: 722)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.16023702919483185
    2. ' collected' → logprob: -1.9102370738983154
    3. ' col' → logprob: -12.035237312316895
    4. '_col' → logprob: -12.410237312316895
    5. ' ' → logprob: -14.285237312316895
    6. '   ' → logprob: -14.285237312316895
    7. '	col' → logprob: -14.785237312316895
    8. '(col' → logprob: -15.160237312316895
    9. '
' → logprob: -16.285236358642578
    10. 'completed' → logprob: -16.285236358642578

Token 357: ' treasures' (ID: 82685)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.4321783483028412
    2. 'tre' → logprob: -1.4321783781051636
    3. ' treasures' → logprob: -2.682178258895874
    4. ' collected' → logprob: -3.182178258895874
    5. '(col' → logprob: -7.682178497314453
    6. ' col' → logprob: -7.807178497314453
    7. '3' → logprob: -8.057178497314453
    8. ' ' → logprob: -8.307178497314453
    9. '   ' → logprob: -8.682178497314453
    10. '_col' → logprob: -9.057178497314453

Token 358: ' collected' (ID: 20480)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.074562206864357
    2. ' collected' → logprob: -2.8245623111724854
    3. '_col' → logprob: -4.449562072753906
    4. '==' → logprob: -8.449562072753906
    5. ' ==' → logprob: -8.574562072753906
    6. ' are' → logprob: -8.574562072753906
    7. ' col' → logprob: -9.324562072753906
    8. 'are' → logprob: -9.824562072753906
    9. '(col' → logprob: -9.824562072753906
    10. '```' → logprob: -11.574562072753906

Token 359: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.003219303209334612
    2. 'and' → logprob: -5.753219127655029
    3. '           ' → logprob: -10.628219604492188
    4. '       ' → logprob: -12.378219604492188
    5. ',' → logprob: -12.628219604492188
    6. ':' → logprob: -12.753219604492188
    7. ' if' → logprob: -12.878219604492188
    8. '        ' → logprob: -13.503219604492188
    9. ' ' → logprob: -14.003219604492188
    10. '          ' → logprob: -14.878219604492188

Token 360: '       ' (ID: 309)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0060770451091229916
    2. 'and' → logprob: -5.506076812744141
    3. '       ' → logprob: -6.881076812744141
    4. '           ' → logprob: -7.006076812744141
    5. ' if' → logprob: -10.75607681274414
    6. ',' → logprob: -10.88107681274414
    7. ':' → logprob: -11.88107681274414
    8. '        ' → logprob: -12.50607681274414
    9. '   ' → logprob: -12.88107681274414
    10. ':
' → logprob: -13.25607681274414

Token 361: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6399946808815002
    2. ' if' → logprob: -0.7649946808815002
    3. 'if' (adapté à ' if') → logprob: -5.0149946212768555
    4. ' and' → logprob: -7.5149946212768555
    5. '           ' → logprob: -9.764994621276855
    6. ',' → logprob: -10.514994621276855
    7. '   ' → logprob: -10.639994621276855
    8. 'and' → logprob: -11.139994621276855
    9. '<|end|>' → logprob: -11.389994621276855
    10. ' ' → logprob: -11.514994621276855

Token 362: ' (' (ID: 350)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.06471385061740875
    2. 'r' → logprob: -3.689713954925537
    3. ' (' → logprob: -4.064713954925537
    4. ' collected' → logprob: -4.314713954925537
    5. ' c' → logprob: -5.564713954925537
    6. '(r' → logprob: -6.189713954925537
    7. 'col' → logprob: -7.314713954925537
    8. 'c' → logprob: -8.314713478088379
    9. ' col' → logprob: -8.439713478088379
    10. '(' → logprob: -9.439713478088379

Token 363: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00038229089113883674
    2. ' r' → logprob: -7.875382423400879
    3. '(r' → logprob: -14.000382423400879
    4. '   ' → logprob: -14.375382423400879
    5. 'c' → logprob: -15.250382423400879
    6. ')' → logprob: -16.000381469726562
    7. ' ' → logprob: -16.500381469726562
    8. '  ' → logprob: -16.875381469726562
    9. ' (' → logprob: -17.000381469726562
    10. '    ' → logprob: -17.125381469726562

Token 364: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22789716720581055
    2. ',c' → logprob: -1.8528971672058105
    3. '==' → logprob: -3.8528971672058105
    4. ' ==' → logprob: -4.1028971672058105
    5. ' ,' → logprob: -5.2278971672058105
    6. ',r' → logprob: -5.8528971672058105
    7. ')==' → logprob: -7.7278971672058105
    8. ')' → logprob: -8.102897644042969
    9. ',y' → logprob: -10.852897644042969
    10. ',d' → logprob: -10.977897644042969

Token 365: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12716169655323029
    2. ')==' → logprob: -2.127161741256714
    3. '==' → logprob: -8.877161979675293
    4. ' )' → logprob: -9.752161979675293
    5. ' ==' → logprob: -11.127161979675293
    6. '==(' → logprob: -11.127161979675293
    7. ']==' → logprob: -12.502161979675293
    8. ')=='' → logprob: -14.127161979675293
    9. ',)' → logprob: -14.877161979675293
    10. ',' → logprob: -15.002161979675293

Token 366: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4834989905357361
    2. ' ==' → logprob: -0.9834989905357361
    3. '==(' → logprob: -4.983499050140381
    4. ')==' → logprob: -6.108499050140381
    5. ')' → logprob: -8.483498573303223
    6. ']==' → logprob: -9.608498573303223
    7. '()==' → logprob: -11.733498573303223
    8. '=' → logprob: -12.108498573303223
    9. '==
' → logprob: -12.608498573303223
    10. ',' → logprob: -12.733498573303223

Token 367: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02785549871623516
    2. ' (' → logprob: -3.777855396270752
    3. 'corn' → logprob: -5.402855396270752
    4. ' corners' → logprob: -9.27785587310791
    5. '(c' → logprob: -13.77785587310791
    6. '   ' → logprob: -14.40285587310791
    7. ' ' → logprob: -14.65285587310791
    8. 'corner' → logprob: -17.027854919433594
    9. 'Corners' → logprob: -17.527854919433594
    10. '0' → logprob: -17.527854919433594

Token 368: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -16.750001907348633
    4. '(' → logprob: -18.125001907348633
    5. ')' → logprob: -18.625001907348633
    6. '
' → logprob: -19.125001907348633
    7. '```' → logprob: -19.500001907348633
    8. '  ' → logprob: -19.875001907348633
    9. '`' → logprob: -20.687501907348633
    10. '           ' → logprob: -20.750001907348633

Token 369: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.955703818472102e-05
    2. ' ,' → logprob: -10.125059127807617
    3. '0' → logprob: -11.125059127807617
    4. ',
' → logprob: -12.375059127807617
    5. '   ' → logprob: -15.875059127807617
    6. ')' → logprob: -17.125059127807617
    7. ' ' → logprob: -17.250059127807617
    8. '‌,' → logprob: -17.375059127807617
    9. '<|end|>' → logprob: -17.375059127807617
    10. ',

' → logprob: -18.375059127807617

Token 370: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -19.125003814697266
    4. '```' → logprob: -19.125003814697266
    5. ',' → logprob: -19.250003814697266
    6. ')' → logprob: -19.375003814697266
    7. '۰' → logprob: -19.937503814697266
    8. '  ' → logprob: -20.437503814697266
    9. '
' → logprob: -20.937503814697266
    10. '０' → logprob: -21.500003814697266

Token 371: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007551893359050155
    2. ' and' → logprob: -7.375755310058594
    3. 'and' → logprob: -9.125755310058594
    4. ' )' → logprob: -11.000755310058594
    5. ',' → logprob: -13.750755310058594
    6. '       ' → logprob: -14.375755310058594
    7. ')&&' → logprob: -14.875755310058594
    8. ',)' → logprob: -15.000755310058594
    9. '           ' → logprob: -15.125755310058594
    10. '        ' → logprob: -16.000755310058594

Token 372: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.038049984723329544
    2. 'and' → logprob: -3.2880499362945557
    3. '           ' → logprob: -12.038049697875977
    4. '       ' → logprob: -13.788049697875977
    5. '	and' → logprob: -14.413049697875977
    6. '        ' → logprob: -14.788049697875977
    7. ' ' → logprob: -15.288049697875977
    8. '               ' → logprob: -16.538049697875977
    9. '   ' → logprob: -16.538049697875977
    10. '          ' → logprob: -16.788049697875977

Token 373: ' collected' (ID: 20480)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.0789315402507782
    2. ' collected' → logprob: -2.5789315700531006
    3. ' col' → logprob: -10.57893180847168
    4. '_col' → logprob: -12.20393180847168
    5. '(col' → logprob: -12.70393180847168
    6. 'collect' → logprob: -13.20393180847168
    7. '   ' → logprob: -13.57893180847168
    8. '	col' → logprob: -13.70393180847168
    9. ' colle' → logprob: -13.95393180847168
    10. ' ' → logprob: -14.57893180847168

Token 374: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6931724548339844
    2. ' ==' → logprob: -0.6931724548339844
    3. ')==' → logprob: -10.943172454833984
    4. '=' → logprob: -12.693172454833984
    5. ')' → logprob: -13.818172454833984
    6. ']==' → logprob: -13.943172454833984
    7. '()==' → logprob: -14.068172454833984
    8. '==(' → logprob: -14.443172454833984
    9. '==
' → logprob: -14.818172454833984
    10. '===' → logprob: -14.943172454833984

Token 375: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -9.794061770662665e-05
    2. ' ' → logprob: -9.25009822845459
    3. '0' → logprob: -13.25009822845459
    4. '   ' → logprob: -17.500097274780273
    5. '```' → logprob: -18.125097274780273
    6. '(' → logprob: -18.375097274780273
    7. '
' → logprob: -19.500097274780273
    8. '７' → logprob: -19.625097274780273
    9. '  ' → logprob: -20.000097274780273
    10. ' (' → logprob: -20.375097274780273

Token 376: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.6240566083070007e-06
    2. '0' → logprob: -13.625001907348633
    3. ' ' → logprob: -14.750001907348633
    4. '(' → logprob: -19.375001907348633
    5. '07' → logprob: -20.125001907348633
    6. '```' → logprob: -20.125001907348633
    7. '
' → logprob: -20.500001907348633
    8. 'b' → logprob: -21.125001907348633
    9. '７' → logprob: -21.625001907348633
    10. '   ' → logprob: -21.750001907348633

Token 377: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0021029175259172916
    2. ':
' → logprob: -6.252102851867676
    3. '):' → logprob: -9.127102851867676
    4. ' and' → logprob: -10.627102851867676
    5. ':return' → logprob: -10.752102851867676
    6. '       ' → logprob: -11.377102851867676
    7. ')' → logprob: -12.752102851867676
    8. '):
' → logprob: -13.002102851867676
    9. '           ' → logprob: -14.127102851867676
    10. 'and' → logprob: -14.252102851867676

Token 378: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001285471604205668
    2. '       ' → logprob: -7.251285552978516
    3. ':' → logprob: -8.626285552978516
    4. '               ' → logprob: -8.626285552978516
    5. '\n' → logprob: -10.126285552978516
    6. '            
' → logprob: -10.126285552978516
    7. '
' → logprob: -10.501285552978516
    8. '\' → logprob: -10.501285552978516
    9. ' return' → logprob: -11.001285552978516
    10. ' 
' → logprob: -11.626285552978516

Token 379: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.09584905952215195
    2. '           ' → logprob: -2.59584903717041
    3. ' return' → logprob: -4.09584903717041
    4. '               ' → logprob: -8.84584903717041
    5. '       ' → logprob: -11.22084903717041
    6. '   ' → logprob: -11.59584903717041
    7. '	return' → logprob: -12.22084903717041
    8. '
' → logprob: -13.22084903717041
    9. ':return' → logprob: -14.59584903717041
    10. 'break' → logprob: -15.34584903717041

Token 380: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.048617683351039886
    2. ' True' → logprob: -3.0486176013946533
    3. '"' → logprob: -10.423617362976074
    4. '   ' → logprob: -14.798617362976074
    5. ''' → logprob: -15.923617362976074
    6. '(True' → logprob: -16.92361831665039
    7. ' "' → logprob: -17.42361831665039
    8. '           ' → logprob: -18.67361831665039
    9. 'true' → logprob: -18.92361831665039
    10. ' ' → logprob: -18.92361831665039

Token 381: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0028675198554992676
    2. '        
' → logprob: -6.627867698669434
    3. '
' → logprob: -7.377867698669434
    4. '<|end|>' → logprob: -7.502867698669434
    5. '    
' → logprob: -9.252867698669434
    6. '   ' → logprob: -9.252867698669434
    7. '  
' → logprob: -10.252867698669434
    8. '\n' → logprob: -10.627867698669434
    9. ',' → logprob: -10.752867698669434
    10. '       
' → logprob: -11.377867698669434

Token 382: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4623510539531708
    2. '   ' → logprob: -1.5873510837554932
    3. '    
' → logprob: -2.712351083755493
    4. '
' → logprob: -3.087351083755493
    5. '        
' → logprob: -3.212351083755493
    6. '\n' → logprob: -5.837350845336914
    7. ' 
' → logprob: -5.837350845336914
    8. '  
' → logprob: -6.087350845336914
    9. '   
' → logprob: -6.962350845336914
    10. '<|end|>' → logprob: -7.212350845336914

Token 383: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23584848642349243
    2. '        
' → logprob: -2.3608484268188477
    3. 'for' (adapté à ' for') → logprob: -2.6108484268188477
    4. '
' → logprob: -3.8608484268188477
    5. 'dire' → logprob: -4.360848426818848
    6. ' for' → logprob: -4.985848426818848
    7. ' directions' → logprob: -7.860848426818848
    8. 'next' → logprob: -8.110848426818848
    9. 'dirs' → logprob: -8.485848426818848
    10. '            
' → logprob: -8.735848426818848

Token 384: ' dr' (ID: 1498)
  Prédit: ' dr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dr' → logprob: -0.004353217780590057
    2. ' nr' → logprob: -5.504353046417236
    3. 'dr' → logprob: -8.504353523254395
    4. ' (' → logprob: -10.754353523254395
    5. 'nr' → logprob: -11.004353523254395
    6. ' ' → logprob: -12.004353523254395
    7. '(dr' → logprob: -12.129353523254395
    8. '   ' → logprob: -12.254353523254395
    9. ' r' → logprob: -12.504353523254395
    10. ' _' → logprob: -12.629353523254395

Token 385: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5751583576202393
    2. ' in' → logprob: -1.2001583576202393
    3. ',d' → logprob: -2.3251583576202393
    4. ' ,' → logprob: -3.7001583576202393
    5. ',r' → logprob: -4.82515811920166
    6. '<|end|>' → logprob: -6.20015811920166
    7. ',c' → logprob: -6.95015811920166
    8. ',n' → logprob: -7.20015811920166
    9. 'd' → logprob: -7.82515811920166
    10. ',next' → logprob: -8.20015811920166

Token 386: 'dc' (ID: 13964)
  Prédit: 'dc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dc' → logprob: -0.02975917048752308
    2. ' dc' → logprob: -3.529759168624878
    3. '0' → logprob: -12.029759407043457
    4. '_dc' → logprob: -13.029759407043457
    5. '(dc' → logprob: -15.904759407043457
    6. ' ' → logprob: -15.904759407043457
    7. '.dc' → logprob: -16.02975845336914
    8. '-' → logprob: -16.27975845336914
    9. 'dcc' → logprob: -17.02975845336914
    10. '-d' → logprob: -17.40475845336914

Token 387: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014192421920597553
    2. 'in' → logprob: -4.264192581176758
    3. ',' → logprob: -11.514192581176758
    4. '	in' → logprob: -12.264192581176758
    5. ' ' → logprob: -12.514192581176758
    6. ' ,' → logprob: -12.764192581176758
    7. '   ' → logprob: -13.639192581176758
    8. '    ' → logprob: -13.639192581176758
    9. ')' → logprob: -14.264192581176758
    10. '<|end|>' → logprob: -14.389192581176758

Token 388: ' [' (ID: 723)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.48049047589302063
    2. '[' → logprob: -0.9804904460906982
    3. ' [(' → logprob: -5.480490684509277
    4. ' [' → logprob: -6.230490684509277
    5. '[-' → logprob: -8.605490684509277
    6. '((' → logprob: -10.230490684509277
    7. ' ((' → logprob: -11.230490684509277
    8. '(-' → logprob: -11.355490684509277
    9. '[((' → logprob: -12.105490684509277
    10. '(' → logprob: -12.105490684509277

Token 389: '(-' (ID: 8087)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04860655218362808
    2. '(-' → logprob: -3.0486066341400146
    3. ' (' → logprob: -10.923606872558594
    4. '0' → logprob: -14.673606872558594
    5. ' (-' → logprob: -14.798606872558594
    6. '-' → logprob: -15.048606872558594
    7. '1' → logprob: -18.173606872558594
    8. ' ' → logprob: -18.423606872558594
    9. '   ' → logprob: -20.423606872558594
    10. '(+' → logprob: -20.923606872558594

Token 390: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -13.000003814697266
    3. '0' → logprob: -14.375003814697266
    4. ')' → logprob: -14.875003814697266
    5. ',' → logprob: -16.000003814697266
    6. '-' → logprob: -17.625003814697266
    7. '<|end|>' → logprob: -17.750003814697266
    8. '```' → logprob: -18.312503814697266
    9. '=' → logprob: -18.812503814697266
    10. '),' → logprob: -19.125003814697266

Token 391: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.38907745480537415
    2. '),(' → logprob: -1.1390774250030518
    3. '),' → logprob: -6.264077663421631
    4. ' ,' → logprob: -8.264077186584473
    5. ' ),' → logprob: -10.764077186584473
    6. ',),' → logprob: -11.264077186584473
    7. '0' → logprob: -13.014077186584473
    8. '],[' → logprob: -13.389077186584473
    9. ',(' → logprob: -13.639077186584473
    10. ')' → logprob: -13.889077186584473

Token 392: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00038014890742488205
    2. ' ' → logprob: -7.875380039215088
    3. ')' → logprob: -17.87537956237793
    4. '1' → logprob: -18.25037956237793
    5. '  ' → logprob: -19.75037956237793
    6. '   ' → logprob: -19.87537956237793
    7. '۰' → logprob: -20.00037956237793
    8. '```' → logprob: -20.12537956237793
    9. ',' → logprob: -20.37537956237793
    10. '-' → logprob: -20.50037956237793

Token 393: '),(' (ID: 54876)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.10122309625148773
    2. '),(' → logprob: -2.3512229919433594
    3. ' ),' → logprob: -6.976222991943359
    4. '),
' → logprob: -9.47622299194336
    5. ')' → logprob: -13.10122299194336
    6. ',' → logprob: -14.47622299194336
    7. '),

' → logprob: -14.72622299194336
    8. ' ),
' → logprob: -14.72622299194336
    9. '   ' → logprob: -14.85122299194336
    10. ',),' → logprob: -15.10122299194336

Token 394: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1602482944726944
    2. '0' → logprob: -1.9102482795715332
    3. ' ' → logprob: -10.660248756408691
    4. '+' → logprob: -14.660248756408691
    5. '```' → logprob: -15.910248756408691
    6. ',' → logprob: -16.285247802734375
    7. ')' → logprob: -17.160247802734375
    8. '
' → logprob: -17.410247802734375
    9. '01' → logprob: -18.410247802734375
    10. '   ' → logprob: -18.535247802734375

Token 395: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022143693640828133
    2. '0' → logprob: -6.127214431762695
    3. ' ,' → logprob: -10.502214431762695
    4. '),(' → logprob: -13.377214431762695
    5. ' ' → logprob: -15.877214431762695
    6. '),' → logprob: -16.627214431762695
    7. '```' → logprob: -17.377214431762695
    8. ')' → logprob: -18.002214431762695
    9. ',
' → logprob: -18.502214431762695
    10. '   ' → logprob: -19.002214431762695

Token 396: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '۰' → logprob: -18.875
    4. ')' → logprob: -20.0
    5. '```' → logprob: -20.375
    6. '<|end|>' → logprob: -20.5
    7. ',' → logprob: -20.75
    8. '   ' → logprob: -21.625
    9. '  ' → logprob: -21.9375
    10. '00' → logprob: -22.0625

Token 397: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.0013300024438649416
    2. '),' → logprob: -6.6263298988342285
    3. ' ),' → logprob: -13.251330375671387
    4. ',' → logprob: -13.751330375671387
    5. '),
' → logprob: -14.626330375671387
    6. ')]' → logprob: -14.876330375671387
    7. ')' → logprob: -15.751330375671387
    8. '],[' → logprob: -16.37632942199707
    9. '0' → logprob: -16.87632942199707
    10. '(' → logprob: -17.12632942199707

Token 398: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '۰' → logprob: -17.750003814697266
    4. ',' → logprob: -18.875003814697266
    5. '-' → logprob: -19.625003814697266
    6. '```' → logprob: -19.875003814697266
    7. '
' → logprob: -20.125003814697266
    8. '   ' → logprob: -20.250003814697266
    9. ')' → logprob: -20.500003814697266
    10. '00' → logprob: -20.562503814697266

Token 399: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.16025276482105255
    2. ',' → logprob: -1.9102528095245361
    3. ',+' → logprob: -10.785252571105957
    4. ',-
' → logprob: -13.285252571105957
    5. ',--' → logprob: -13.535252571105957
    6. ',
' → logprob: -13.535252571105957
    7. ' ,' → logprob: -14.160252571105957
    8. ',-

' → logprob: -14.160252571105957
    9. '-' → logprob: -14.285252571105957
    10. '1' → logprob: -14.410252571105957

Token 400: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.375
    3. '+' → logprob: -17.0
    4. ',' → logprob: -17.375
    5. '```' → logprob: -17.625
    6. ')' → logprob: -18.75
    7. '-' → logprob: -19.625
    8. '۱' → logprob: -20.1875
    9. '0' → logprob: -20.1875
    10. '=' → logprob: -20.375

Token 401: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -3.9054008084349334e-05
    2. '),' → logprob: -10.250039100646973
    3. ')]' → logprob: -13.375039100646973
    4. ',' → logprob: -14.375039100646973
    5. '),
' → logprob: -14.750039100646973
    6. ')],' → logprob: -15.125039100646973
    7. '0' → logprob: -15.250039100646973
    8. ')' → logprob: -15.375039100646973
    9. ' ),' → logprob: -16.000038146972656
    10. '(' → logprob: -16.250038146972656

Token 402: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.625003814697266
    3. '+' → logprob: -14.000003814697266
    4. ')' → logprob: -17.000003814697266
    5. '```' → logprob: -17.125003814697266
    6. '۱' → logprob: -18.687503814697266
    7. '0' → logprob: -18.750003814697266
    8. '   ' → logprob: -19.062503814697266
    9. '
' → logprob: -19.250003814697266
    10. ',' → logprob: -19.687503814697266

Token 403: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.47408029437065125
    2. '1' → logprob: -0.9740803241729736
    3. ' ' → logprob: -13.724080085754395
    4. ' ,' → logprob: -14.099080085754395
    5. '```' → logprob: -14.474080085754395
    6. ')' → logprob: -14.724080085754395
    7. ',+' → logprob: -15.349080085754395
    8. '+' → logprob: -16.22408103942871
    9. ')]' → logprob: -16.72408103942871
    10. ',
' → logprob: -16.84908103942871

Token 404: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.080963092041202e-06
    2. '+' → logprob: -12.625004768371582
    3. ' ' → logprob: -13.375004768371582
    4. '```' → logprob: -16.5000057220459
    5. '
' → logprob: -18.7500057220459
    6. '-' → logprob: -19.1250057220459
    7. '0' → logprob: -19.5000057220459
    8. ')' → logprob: -20.1250057220459
    9. '   ' → logprob: -20.5625057220459
    10. '``' → logprob: -20.6250057220459

Token 405: ')]' (ID: 15710)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4770420789718628
    2. ')]' → logprob: -0.9770420789718628
    3. '):' → logprob: -5.852042198181152
    4. ' )' → logprob: -10.352042198181152
    5. ']' → logprob: -11.102042198181152
    6. '):
' → logprob: -11.602042198181152
    7. '       ' → logprob: -11.602042198181152
    8. '   ' → logprob: -11.852042198181152
    9. ')])' → logprob: -12.852042198181152
    10. ']):' → logprob: -13.352042198181152

Token 406: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02908433973789215
    2. ':
' → logprob: -4.154084205627441
    3. ',' → logprob: -5.279084205627441
    4. '       ' → logprob: -5.529084205627441
    5. '<|end|>' → logprob: -5.654084205627441
    6. '):' → logprob: -9.279084205627441
    7. '<|end|>' → logprob: -9.404084205627441
    8. '   ' → logprob: -10.029084205627441
    9. '):
' → logprob: -10.279084205627441
    10. ' :' → logprob: -10.404084205627441

Token 407: '           ' (ID: 352)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.7374738454818726
    2. ' new' → logprob: -1.7374738454818726
    3. '        ' → logprob: -1.8624738454818726
    4. 'r' → logprob: -1.8624738454818726
    5. '       ' → logprob: -2.362473964691162
    6. ' r' → logprob: -2.487473964691162
    7. ' nr' → logprob: -2.987473964691162
    8. ' nxt' → logprob: -3.612473964691162
    9. 'nr' → logprob: -3.737473964691162
    10. ' next' → logprob: -4.237473964691162

Token 408: ' nr' (ID: 24055)
  Prédit: ' nr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nr' → logprob: -0.1002127155661583
    2. 'nr' (adapté à ' nr') → logprob: -2.350212812423706
    3. ' new' → logprob: -12.975213050842285
    4. 'r' → logprob: -13.600213050842285
    5. 'n' → logprob: -13.975213050842285
    6. '_nr' → logprob: -14.600213050842285
    7. ' r' → logprob: -15.100213050842285
    8. ' n' → logprob: -15.475213050842285
    9. ' rr' → logprob: -15.600213050842285
    10. ' rn' → logprob: -15.600213050842285

Token 409: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.6222057342529297
    2. '=' → logprob: -1.3722057342529297
    3. ',' → logprob: -2.2472057342529297
    4. ' =' → logprob: -2.3722057342529297
    5. '=n' → logprob: -4.62220573425293
    6. ' ,' → logprob: -7.62220573425293
    7. ',c' → logprob: -8.74720573425293
    8. '=int' → logprob: -9.37220573425293
    9. ',r' → logprob: -9.62220573425293
    10. ',num' → logprob: -11.37220573425293

Token 410: 'c' (ID: 66)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4503549337387085
    2. 'r' → logprob: -1.7003549337387085
    3. ' =' → logprob: -2.200355052947998
    4. ',r' → logprob: -3.325355052947998
    5. ',n' → logprob: -4.200355052947998
    6. ',' → logprob: -4.575355052947998
    7. '=r' → logprob: -5.325355052947998
    8. '=n' → logprob: -5.950355052947998
    9. 'nr' → logprob: -8.32535457611084
    10. ' r' → logprob: -9.45035457611084

Token 411: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.041075628250837326
    2. ' =' → logprob: -3.7910757064819336
    3. '=r' → logprob: -4.041075706481934
    4. '=n' → logprob: -9.291075706481934
    5. '=c' → logprob: -14.541075706481934
    6. ',' → logprob: -15.166075706481934
    7. '=
' → logprob: -15.416075706481934
    8. ',r' → logprob: -15.916075706481934
    9. ' ' → logprob: -17.166074752807617
    10. '=row' → logprob: -17.416074752807617

Token 412: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.008614808320999146
    2. ' r' → logprob: -4.758615016937256
    3. '   ' → logprob: -15.758614540100098
    4. ' ' → logprob: -15.883614540100098
    5. '(r' → logprob: -17.258615493774414
    6. '	r' → logprob: -17.508615493774414
    7. '_r' → logprob: -18.383615493774414
    8. '```' → logprob: -18.508615493774414
    9. '  ' → logprob: -18.758615493774414
    10. '
' → logprob: -19.133615493774414

Token 413: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.15926769375801086
    2. ' +' → logprob: -2.0342676639556885
    3. '+r' → logprob: -4.159267902374268
    4. '+c' → logprob: -7.284267902374268
    5. '+d' → logprob: -9.53426742553711
    6. '+n' → logprob: -9.65926742553711
    7. '+k' → logprob: -13.28426742553711
    8. '+s' → logprob: -13.40926742553711
    9. '+b' → logprob: -13.65926742553711
    10. ' ' → logprob: -13.78426742553711

Token 414: 'dr' (ID: 4541)
  Prédit: 'dr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dr' → logprob: -0.00010032468708232045
    2. '1' → logprob: -9.500100135803223
    3. ' dr' → logprob: -10.750100135803223
    4. 'dc' → logprob: -13.500100135803223
    5. '0' → logprob: -13.625100135803223
    6. '-dr' → logprob: -15.125100135803223
    7. 'd' → logprob: -15.125100135803223
    8. '-' → logprob: -15.375100135803223
    9. ' ' → logprob: -15.375100135803223
    10. '(dr' → logprob: -16.00010108947754

Token 415: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.21602170169353485
    2. ',n' → logprob: -2.216021776199341
    3. ',' → logprob: -2.466021776199341
    4. ' ,' → logprob: -8.091021537780762
    5. ',int' → logprob: -12.841021537780762
    6. ',r' → logprob: -13.466021537780762
    7. ',num' → logprob: -13.841021537780762
    8. ',new' → logprob: -13.966021537780762
    9. ',y' → logprob: -14.091021537780762
    10. ',
' → logprob: -14.091021537780762

Token 416: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00428163493052125
    2. '+c' → logprob: -5.504281520843506
    3. '+r' → logprob: -8.879281997680664
    4. ' +' → logprob: -10.629281997680664
    5. '+d' → logprob: -10.629281997680664
    6. '<|end|>' → logprob: -12.004281997680664
    7. 'c' → logprob: -12.254281997680664
    8. '+
' → logprob: -13.129281997680664
    9. '+n' → logprob: -13.879281997680664
    10. '+h' → logprob: -14.129281997680664

Token 417: 'dc' (ID: 13964)
  Prédit: 'dc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dc' → logprob: -0.0005582740413956344
    2. ' dc' → logprob: -8.125557899475098
    3. 'c' → logprob: -8.500557899475098
    4. '1' → logprob: -9.750557899475098
    5. 'cc' → logprob: -15.875557899475098
    6. '
' → logprob: -16.000558853149414
    7. '(dc' → logprob: -16.375558853149414
    8. ' ' → logprob: -16.500558853149414
    9. '0' → logprob: -16.750558853149414
    10. '   ' → logprob: -17.375558853149414

Token 418: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 419: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 420: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.28568336367607117
    2. 'if' (adapté à ' if') → logprob: -1.4106833934783936
    3. '```' → logprob: -6.7856831550598145
    4. ' 
' → logprob: -6.9106831550598145
    5. '            
' → logprob: -7.2856831550598145
    6. '           ' → logprob: -7.4106831550598145
    7. '<|end|>' → logprob: -7.6606831550598145
    8. ' ' → logprob: -8.285683631896973
    9. '[' → logprob: -9.410683631896973
    10. ' ' → logprob: -9.910683631896973

Token 421: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08899377286434174
    2. ' ' → logprob: -2.463993787765503
    3. ' not' → logprob: -10.588994026184082
    4. 'nr' → logprob: -11.088994026184082
    5. ' nr' → logprob: -11.588994026184082
    6. 'not' → logprob: -13.213994026184082
    7. '   ' → logprob: -14.213994026184082
    8. ' ' → logprob: -14.338994026184082
    9. ' (' → logprob: -15.526494026184082
    10. '(' → logprob: -15.713994026184082

Token 422: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.939851037808694e-05
    2. ' ' → logprob: -11.000029563903809
    3. 'nr' → logprob: -11.375029563903809
    4. '(' → logprob: -14.750029563903809
    5. 'not' → logprob: -16.000028610229492
    6. '
' → logprob: -16.000028610229492
    7. '-' → logprob: -16.312528610229492
    8. '`' → logprob: -16.562528610229492
    9. '```' → logprob: -17.062528610229492
    10. ' nr' → logprob: -17.187528610229492

Token 423: '<=' (ID: 16672)
  Prédit: '<='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.1838463395833969
    2. ' <=' → logprob: -1.933846354484558
    3. '<' → logprob: -4.308846473693848
    4. '<n' → logprob: -5.308846473693848
    5. ' <' → logprob: -5.558846473693848
    6. '>=' → logprob: -7.933846473693848
    7. '<N' → logprob: -8.183846473693848
    8. '<len' → logprob: -8.683846473693848
    9. '0' → logprob: -9.308846473693848
    10. 'and' → logprob: -9.933846473693848

Token 424: 'nr' (ID: 33357)
  Prédit: 'nr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nr' → logprob: -0.00014013137842994183
    2. ' nr' → logprob: -8.875140190124512
    3. '_nr' → logprob: -16.625139236450195
    4. 'n' → logprob: -16.750139236450195
    5. 'Nr' → logprob: -17.125139236450195
    6. '.nr' → logprob: -17.875139236450195
    7. '
' → logprob: -18.375139236450195
    8. 'nm' → logprob: -19.625139236450195
    9. 'nt' → logprob: -19.875139236450195
    10. 'nl' → logprob: -20.000139236450195

Token 425: '<N' (ID: 60262)
  Prédit: '<n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<n' → logprob: -0.778466522693634
    2. '<' → logprob: -0.903466522693634
    3. '<N' → logprob: -2.0284664630889893
    4. 'nr' → logprob: -6.528466701507568
    5. ' <' → logprob: -6.903466701507568
    6. '<len' → logprob: -7.153466701507568
    7. 'and' → logprob: -8.15346622467041
    8. '<num' → logprob: -8.40346622467041
    9. '<size' → logprob: -9.02846622467041
    10. '<M' → logprob: -9.52846622467041

Token 426: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2014184147119522
    2. 'and' → logprob: -1.701418399810791
    3. '	and' → logprob: -12.82641887664795
    4. ' ' → logprob: -14.07641887664795
    5. '           ' → logprob: -14.45141887664795
    6. '<|end|>' → logprob: -14.95141887664795
    7. '               ' → logprob: -15.32641887664795
    8. '0' → logprob: -16.201417922973633
    9. ',' → logprob: -16.576417922973633
    10. '            ' → logprob: -16.701417922973633

Token 427: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001410850090906024
    2. ' ' → logprob: -8.875141143798828
    3. 'nc' → logprob: -15.000141143798828
    4. '   ' → logprob: -15.500141143798828
    5. '```' → logprob: -16.625141143798828
    6. '
' → logprob: -16.687641143798828
    7. ' ' → logprob: -16.812641143798828
    8. '           ' → logprob: -17.312641143798828
    9. 'nr' → logprob: -17.312641143798828
    10. '  ' → logprob: -17.375141143798828

Token 428: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07149496674537659
    2. 'nc' → logprob: -2.6964950561523438
    3. 'mc' → logprob: -6.571495056152344
    4. 'M' → logprob: -9.321495056152344
    5. ' ' → logprob: -10.571495056152344
    6. 'Mc' → logprob: -11.196495056152344
    7. ' nc' → logprob: -11.446495056152344
    8. 'MC' → logprob: -12.321495056152344
    9. 'Nc' → logprob: -12.696495056152344
    10. '
' → logprob: -13.196495056152344

Token 429: '<=' (ID: 16672)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.04414990171790123
    2. 'and' → logprob: -4.419149875640869
    3. '<M' → logprob: -4.544149875640869
    4. '0' → logprob: -4.919149875640869
    5. '<n' → logprob: -5.669149875640869
    6. ' <' → logprob: -6.044149875640869
    7. ' and' → logprob: -6.294149875640869
    8. ' ' → logprob: -6.419149875640869
    9. '<|end|>' → logprob: -6.544149875640869
    10. '<m' → logprob: -7.169149875640869

Token 430: 'nc' (ID: 24825)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.05640203505754471
    2. 'nc' → logprob: -3.3064019680023193
    3. 'mc' → logprob: -4.056402206420898
    4. 'Mc' → logprob: -7.431402206420898
    5. ' M' → logprob: -8.306402206420898
    6. 'MC' → logprob: -11.181402206420898
    7. ' ' → logprob: -12.681402206420898
    8. '0' → logprob: -12.806402206420898
    9. ' nc' → logprob: -12.931402206420898
    10. '   ' → logprob: -12.931402206420898

Token 431: '<M' (ID: 59431)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.008186519145965576
    2. ' <' → logprob: -5.258186340332031
    3. '<M' → logprob: -6.633186340332031
    4. '<N' → logprob: -7.883186340332031
    5. '<|end|>' → logprob: -8.133186340332031
    6. '<n' → logprob: -8.258186340332031
    7. '0' → logprob: -8.508186340332031
    8. 'and' → logprob: -8.758186340332031
    9. '<=' → logprob: -9.508186340332031
    10. '<m' → logprob: -10.133186340332031

Token 432: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.009408252313733101
    2. 'and' → logprob: -4.759408473968506
    3. ':' → logprob: -7.509408473968506
    4. ':
' → logprob: -8.759407997131348
    5. '<|end|>' → logprob: -10.384407997131348
    6. '           ' → logprob: -10.759407997131348
    7. ',' → logprob: -11.134407997131348
    8. '               ' → logprob: -12.509407997131348
    9. '	and' → logprob: -12.884407997131348
    10. '            ' → logprob: -13.134407997131348

Token 433: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.23094189167022705
    2. '(grid' → logprob: -1.605941891670227
    3. '((' → logprob: -6.2309417724609375
    4. '(not' → logprob: -6.7309417724609375
    5. '(n' → logprob: -7.2309417724609375
    6. 'True' → logprob: -7.4809417724609375
    7. '(True' → logprob: -7.8559417724609375
    8. 'not' → logprob: -8.105941772460938
    9. ' grid' → logprob: -9.230941772460938
    10. '(' → logprob: -9.230941772460938

Token 434: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -3.130576806142926e-05
    2. '
' → logprob: -11.875031471252441
    3. '```' → logprob: -12.250031471252441
    4. '[
' → logprob: -12.875031471252441
    5. '\[' → logprob: -12.875031471252441
    6. '[' → logprob: -12.875031471252441
    7. '][' → logprob: -13.000031471252441
    8. ')[' → logprob: -13.125031471252441
    9. 'nr' → logprob: -13.625031471252441
    10. '   ' → logprob: -14.000031471252441

Token 435: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00048536903341300786
    2. '[n' → logprob: -7.875485420227051
    3. '][' → logprob: -9.62548542022705
    4. '[r' → logprob: -10.37548542022705
    5. '[' → logprob: -12.25048542022705
    6. '```' → logprob: -13.50048542022705
    7. ']' → logprob: -14.00048542022705
    8. 'nr' → logprob: -16.000484466552734
    9. 'c' → logprob: -16.125484466552734
    10. '   ' → logprob: -16.250484466552734

Token 436: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0032404589001089334
    2. '[n' → logprob: -5.753240585327148
    3. ']' → logprob: -10.003240585327148
    4. '[' → logprob: -12.628240585327148
    5. '"][' → logprob: -13.003240585327148
    6. ']!=' → logprob: -13.128240585327148
    7. ']][' → logprob: -13.753240585327148
    8. ''][' → logprob: -13.878240585327148
    9. '[r' → logprob: -13.878240585327148
    10. ']==' → logprob: -13.878240585327148

Token 437: 'nc' (ID: 24825)
  Prédit: 'nc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -8.061054359131958e-06
    2. ' nc' → logprob: -12.500007629394531
    3. 'c' → logprob: -12.625007629394531
    4. '   ' → logprob: -15.500007629394531
    5. '0' → logprob: -15.625007629394531
    6. '
' → logprob: -15.750007629394531
    7. 'n' → logprob: -15.750007629394531
    8. ']' → logprob: -16.25000762939453
    9. '```' → logprob: -16.62500762939453
    10. '_nc' → logprob: -16.62500762939453

Token 438: ']==' (ID: 34128)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03538262099027634
    2. ']!=' → logprob: -4.4103827476501465
    3. ']==' → logprob: -4.4103827476501465
    4. ']!='' → logprob: -4.7853827476501465
    5. ']=='' → logprob: -6.2853827476501465
    6. ' ]' → logprob: -8.785382270812988
    7. '[' → logprob: -10.160382270812988
    8. '!='' → logprob: -11.535382270812988
    9. ']!' → logprob: -11.660382270812988
    10. ']=="' → logprob: -11.785382270812988

Token 439: ''.' (ID: 6120)
  Prédit: ''.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.009525509551167488
    2. ''' → logprob: -5.759525299072266
    3. '0' → logprob: -5.884525299072266
    4. '1' → logprob: -6.259525299072266
    5. '.' → logprob: -7.759525299072266
    6. ''#' → logprob: -8.134525299072266
    7. '"."' → logprob: -8.259525299072266
    8. ' '.'' → logprob: -8.884525299072266
    9. ''o' → logprob: -9.259525299072266
    10. 'True' → logprob: -9.759525299072266

Token 440: '':
' (ID: 7669)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.057489387691020966
    2. 'and' → logprob: -3.8074893951416016
    3. ':' → logprob: -4.557489395141602
    4. '):' → logprob: -4.557489395141602
    5. ')' → logprob: -4.932489395141602
    6. '):
' → logprob: -6.057489395141602
    7. ''' → logprob: -7.557489395141602
    8. ':
' → logprob: -7.682489395141602
    9. '':' → logprob: -7.807489395141602
    10. '           ' → logprob: -7.807489395141602

Token 441: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05186988413333893
    2. '               ' → logprob: -3.3018698692321777
    3. ' and' → logprob: -4.926869869232178
    4. ' ' → logprob: -6.301869869232178
    5. ' if' → logprob: -6.551869869232178
    6. '<|end|>' → logprob: -7.176869869232178
    7. '            
' → logprob: -7.301869869232178
    8. '            ' → logprob: -7.926869869232178
    9. 'and' → logprob: -8.801870346069336
    10. '                
' → logprob: -8.801870346069336

Token 442: ' n' (ID: 297)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6361904740333557
    2. 'if' → logprob: -1.636190414428711
    3. ' next' → logprob: -2.136190414428711
    4. ' new' → logprob: -2.636190414428711
    5. 'next' → logprob: -3.136190414428711
    6. 'new' → logprob: -4.011190414428711
    7. '                   ' → logprob: -4.636190414428711
    8. 'state' → logprob: -5.136190414428711
    9. ' state' → logprob: -5.386190414428711
    10. ' #' → logprob: -6.761190414428711

Token 443: 'col' (ID: 1798)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.14168965816497803
    2. '_col' → logprob: -3.0166897773742676
    3. '_r' → logprob: -3.0166897773742676
    4. 'col' → logprob: -4.391689777374268
    5. 'ew' → logprob: -4.391689777374268
    6. 'visited' → logprob: -5.516689777374268
    7. 'w' → logprob: -6.766689777374268
    8. 'ext' → logprob: -7.016689777374268
    9. '_' → logprob: -7.141689777374268
    10. 'e' → logprob: -7.516689777374268

Token 444: 'lected' (ID: 2576)
  Prédit: 'lected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lected' → logprob: -0.0006192696164362133
    2. 'ected' → logprob: -7.875619411468506
    3. 'lect' → logprob: -8.875618934631348
    4. '_col' → logprob: -10.125618934631348
    5. '=' → logprob: -10.250618934631348
    6. 'col' → logprob: -11.125618934631348
    7. ' =' → logprob: -12.750618934631348
    8. 'le' → logprob: -13.750618934631348
    9. '```' → logprob: -14.125618934631348
    10. 'l' → logprob: -14.750618934631348

Token 445: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22558797895908356
    2. ' =' → logprob: -1.6005879640579224
    3. '|' → logprob: -9.225587844848633
    4. ' |=' → logprob: -9.850587844848633
    5. '_new' → logprob: -11.725587844848633
    6. 'new' → logprob: -11.975587844848633
    7. ' |' → logprob: -12.600587844848633
    8. '=new' → logprob: -13.475587844848633
    9. ')' → logprob: -14.225587844848633
    10. ',' → logprob: -14.850587844848633

Token 446: ' collected' (ID: 20480)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -1.0280383548888494e-06
    2. ' collected' → logprob: -13.875000953674316
    3. '```' → logprob: -18.750001907348633
    4. '   ' → logprob: -18.875001907348633
    5. '
' → logprob: -19.250001907348633
    6. '           ' → logprob: -19.500001907348633
    7. 'collect' → logprob: -19.500001907348633
    8. '_col' → logprob: -19.625001907348633
    9. '               ' → logprob: -19.875001907348633
    10. 'cal' → logprob: -20.000001907348633

Token 447: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 448: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.030205490067601204
    2. '                ' → logprob: -4.280205726623535
    3. '                
' → logprob: -4.780205726623535
    4. ' if' → logprob: -5.530205726623535
    5. '<|end|>' → logprob: -6.905205726623535
    6. '                   ' → logprob: -7.155205726623535
    7. 'if' → logprob: -7.530205726623535
    8. '                               ' → logprob: -8.405205726623535
    9. ' 
' → logprob: -9.030205726623535
    10. '              ' → logprob: -9.155205726623535

Token 449: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.014367170631885529
    2. ' if' → logprob: -4.26436710357666
    3. '               ' → logprob: -8.51436710357666
    4. '+' → logprob: -13.76436710357666
    5. '                
' → logprob: -14.26436710357666
    6. '#' (adapté à ' #') → logprob: -14.38936710357666
    7. '                   ' → logprob: -14.76436710357666
    8. '
' → logprob: -15.63936710357666
    9. '                ' → logprob: -15.88936710357666
    10. 'If' → logprob: -17.139368057250977

Token 450: ' Check' (ID: 6208)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00037073178100399673
    2. ' if' → logprob: -8.375370979309082
    3. 'pos' → logprob: -9.000370979309082
    4. '               ' → logprob: -11.125370979309082
    5. '                   ' → logprob: -13.875370979309082
    6. 'If' → logprob: -15.250370979309082
    7. '#' → logprob: -15.625370979309082
    8. 'next' → logprob: -15.625370979309082
    9. '```' → logprob: -15.750370979309082
    10. 'new' → logprob: -16.000370025634766

Token 451: ' if' (ID: 538)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.620266854763031
    2. ' if' → logprob: -1.4952669143676758
    3. ' (' → logprob: -1.6202669143676758
    4. 'if' → logprob: -3.245266914367676
    5. '               ' → logprob: -7.120266914367676
    6. '                   ' → logprob: -8.495266914367676
    7. '(r' → logprob: -9.745266914367676
    8. 'for' → logprob: -10.870266914367676
    9. '   ' → logprob: -10.995266914367676
    10. '(pos' → logprob: -11.245266914367676

Token 452: ' stepping' (ID: 63083)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.11287948489189148
    2. ' (' → logprob: -2.237879514694214
    3. '(r' → logprob: -11.237879753112793
    4. '(' → logprob: -11.487879753112793
    5. '(nb' → logprob: -11.612879753112793
    6. '(nx' → logprob: -12.362879753112793
    7. '(nt' → logprob: -12.487879753112793
    8. '(t' → logprob: -12.487879753112793
    9. '(next' → logprob: -12.737879753112793
    10. '
' → logprob: -13.362879753112793

Token 453: ' onto' (ID: 13291)
  Prédit: ' into'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' into' → logprob: -1.1489012241363525
    2. 'on' → logprob: -1.2739012241363525
    3. ' on' → logprob: -2.1489012241363525
    4. '(n' → logprob: -2.3989012241363525
    5. 'into' → logprob: -2.3989012241363525
    6. ' onto' → logprob: -2.5239012241363525
    7. 'onto' → logprob: -3.8989012241363525
    8. 'in' → logprob: -6.523900985717773
    9. ' (' → logprob: -7.023900985717773
    10. ' in' → logprob: -7.273900985717773

Token 454: ' treasure' (ID: 47849)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.2568729519844055
    2. ' (' → logprob: -1.5068728923797607
    3. 'tre' → logprob: -5.63187313079834
    4. 'corn' → logprob: -6.75687313079834
    5. '(t' → logprob: -9.13187313079834
    6. ' corners' → logprob: -10.50687313079834
    7. '(' → logprob: -10.63187313079834
    8. '(r' → logprob: -12.75687313079834
    9. 'corner' → logprob: -12.88187313079834
    10. '(nx' → logprob: -13.00687313079834

Token 455: '
' (ID: 198)
  Prédit: '_pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.7884083390235901
    2. ' and' → logprob: -1.7884082794189453
    3. '_positions' → logprob: -2.2884082794189453
    4. 'pos' → logprob: -2.4134082794189453
    5. ' (' → logprob: -3.2884082794189453
    6. '                   ' → logprob: -3.4134082794189453
    7. ' if' → logprob: -3.5384082794189453
    8. '(n' → logprob: -3.7884082794189453
    9. 'and' → logprob: -4.288408279418945
    10. '               ' → logprob: -4.288408279418945

Token 456: '               ' (ID: 506)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3319767713546753
    2. ' if' → logprob: -1.7069767713546753
    3. 'if' → logprob: -3.081976890563965
    4. 'and' → logprob: -3.956976890563965
    5. '               ' → logprob: -4.581976890563965
    6. '(n' → logprob: -4.581976890563965
    7. '                   ' → logprob: -5.206976890563965
    8. '_positions' → logprob: -6.206976890563965
    9. 'token' → logprob: -6.331976890563965
    10. 'pos' → logprob: -6.581976890563965

Token 457: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5775293707847595
    2. ' if' → logprob: -0.8275293707847595
    3. 'pos' → logprob: -7.202529430389404
    4. '               ' → logprob: -7.327529430389404
    5. ' (' → logprob: -9.452528953552246
    6. '                   ' → logprob: -10.077528953552246
    7. '(pos' → logprob: -10.577528953552246
    8. ' pos' → logprob: -10.702528953552246
    9. '(' → logprob: -11.952528953552246
    10. '                
' → logprob: -12.702528953552246

Token 458: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.28122684359550476
    2. ' (' → logprob: -1.4062268733978271
    3. '(r' → logprob: -10.281227111816406
    4. '(t' → logprob: -11.281227111816406
    5. '(' → logprob: -11.406227111816406
    6. '   ' → logprob: -12.031227111816406
    7. '(nb' → logprob: -13.031227111816406
    8. '(nx' → logprob: -13.156227111816406
    9. ' ' → logprob: -13.906227111816406
    10. '(nt' → logprob: -14.031227111816406

Token 459: 'nr' (ID: 33357)
  Prédit: 'nr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nr' → logprob: -0.00010223194840364158
    2. '(n' → logprob: -9.250102043151855
    3. ' nr' → logprob: -12.500102043151855
    4. 'n' → logprob: -14.250102043151855
    5. '
' → logprob: -15.125102043151855
    6. ' (' → logprob: -15.375102043151855
    7. '   ' → logprob: -15.625102043151855
    8. ')' → logprob: -15.750102043151855
    9. '[n' → logprob: -16.125102996826172
    10. 'nc' → logprob: -16.500102996826172

Token 460: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.04884953051805496
    2. ',' → logprob: -3.048849582672119
    3. ' ,' → logprob: -8.923849105834961
    4. ',c' → logprob: -9.548849105834961
    5. 'in' → logprob: -11.423849105834961
    6. ',num' → logprob: -11.548849105834961
    7. ',(' → logprob: -11.798849105834961
    8. ',
' → logprob: -12.298849105834961
    9. ',in' → logprob: -12.423849105834961
    10. ',np' → logprob: -12.548849105834961

Token 461: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.30307695269584656
    2. ',' → logprob: -1.553076982498169
    3. ',c' → logprob: -3.178076982498169
    4. ')' → logprob: -5.80307674407959
    5. ',n' → logprob: -5.92807674407959
    6. ',[' → logprob: -7.67807674407959
    7. ']' → logprob: -8.17807674407959
    8. '[' → logprob: -8.30307674407959
    9. ',(' → logprob: -8.30307674407959
    10. '0' → logprob: -8.42807674407959

Token 462: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010401944164186716
    2. ' in' → logprob: -7.376039981842041
    3. 'in' → logprob: -8.5010404586792
    4. ' )' → logprob: -8.5010404586792
    5. ')==' → logprob: -12.3760404586792
    6. '<|end|>' → logprob: -14.6260404586792
    7. '[' → logprob: -15.2510404586792
    8. '）' → logprob: -15.2510404586792
    9. ' ' → logprob: -15.3760404586792
    10. ')
' → logprob: -15.3760404586792

Token 463: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.28117942810058594
    2. 'in' → logprob: -1.406179428100586
    3. ')' → logprob: -10.656179428100586
    4. ' ' → logprob: -12.781179428100586
    5. '<|end|>' → logprob: -14.031179428100586
    6. '	in' → logprob: -14.656179428100586
    7. 'In' → logprob: -15.531179428100586
    8. ']' → logprob: -15.656179428100586
    9. '==' → logprob: -15.781179428100586
    10. '[' → logprob: -16.156179428100586

Token 464: ' treasure' (ID: 47849)
  Prédit: 'tre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tre' → logprob: -0.0013348824577406049
    2. ' treasure' → logprob: -6.6263346672058105
    3. '```' → logprob: -13.126335144042969
    4. ' tre' → logprob: -13.501335144042969
    5. '   ' → logprob: -13.751335144042969
    6. '
' → logprob: -14.001335144042969
    7. 'te' → logprob: -14.126335144042969
    8. ' ' → logprob: -14.501335144042969
    9. 't' → logprob: -15.126335144042969
    10. '  ' → logprob: -15.501335144042969

Token 465: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -6.492120155598968e-05
    2. 'indices' → logprob: -10.250064849853516
    3. '_positions' → logprob: -10.500064849853516
    4. 'Indices' → logprob: -14.375064849853516
    5. '"indices' → logprob: -14.875064849853516
    6. '_' → logprob: -15.000064849853516
    7. '_pos' → logprob: -15.625064849853516
    8. 's' → logprob: -15.625064849853516
    9. '
' → logprob: -16.250064849853516
    10. 'pos' → logprob: -16.375064849853516

Token 466: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05504262447357178
    2. ':
' → logprob: -2.9300427436828613
    3. ' and' → logprob: -9.430042266845703
    4. '):' → logprob: -10.805042266845703
    5. '):
' → logprob: -10.805042266845703
    6. 'and' → logprob: -11.055042266845703
    7. ':

' → logprob: -11.680042266845703
    8. ' :' → logprob: -11.805042266845703
    9. ':
' → logprob: -13.430042266845703
    10. '<|end|>' → logprob: -13.680042266845703

Token 467: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1272263526916504
    2. 'n' → logprob: -2.2522263526916504
    3. ':
' → logprob: -5.62722635269165
    4. ' n' → logprob: -5.87722635269165
    5. '                       ' → logprob: -6.25222635269165
    6. ':' → logprob: -6.50222635269165
    7. '               ' → logprob: -6.75222635269165
    8. '
' → logprob: -7.12722635269165
    9. '                    
' → logprob: -7.50222635269165
    10. '```' → logprob: -8.752225875854492

Token 468: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.22572894394397736
    2. 'n' (adapté à ' n') → logprob: -1.600728988647461
    3. '                   ' → logprob: -8.350728988647461
    4. '                       ' → logprob: -10.600728988647461
    5. '
' → logprob: -11.100728988647461
    6. '```' → logprob: -11.725728988647461
    7. '               ' → logprob: -12.100728988647461
    8. ' ' → logprob: -12.100728988647461
    9. '_n' → logprob: -12.475728988647461
    10. '                               ' → logprob: -12.975728988647461

Token 469: 'col' (ID: 1798)
  Prédit: 'col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -2.7729658540920354e-05
    2. '_col' → logprob: -10.500027656555176
    3. 'co' → logprob: -16.875028610229492
    4. 'c' → logprob: -17.625028610229492
    5. '	col' → logprob: -17.875028610229492
    6. '_' → logprob: -18.000028610229492
    7. ' col' → logprob: -18.250028610229492
    8. '[col' → logprob: -18.375028610229492
    9. '```' → logprob: -19.000028610229492
    10. '(col' → logprob: -19.000028610229492

Token 470: 'lected' (ID: 2576)
  Prédit: 'ected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ected' → logprob: -0.003043428063392639
    2. 'lected' → logprob: -5.8780436515808105
    3. 'ect' → logprob: -8.878043174743652
    4. 'col' → logprob: -10.253043174743652
    5. 'ct' → logprob: -10.878043174743652
    6. '=' → logprob: -10.878043174743652
    7. 'tected' → logprob: -12.378043174743652
    8. ' =' → logprob: -12.503043174743652
    9. 'icted' → logprob: -12.878043174743652
    10. '   ' → logprob: -13.128043174743652

Token 471: ' |=' (ID: 19917)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.06839705258607864
    2. ' |=' → logprob: -2.818397045135498
    3. '=' → logprob: -5.068397045135498
    4. ' =' → logprob: -9.068397521972656
    5. '|=
' → logprob: -14.193397521972656
    6. ' |' → logprob: -15.818397521972656
    7. ' ^=' → logprob: -16.568397521972656
    8. ' ' → logprob: -16.693397521972656
    9. '│' → logprob: -17.068397521972656
    10. ')' → logprob: -17.818397521972656

Token 472: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12917496263980865
    2. '1' → logprob: -2.1291749477386475
    3. ' (' → logprob: -6.129175186157227
    4. ' ' → logprob: -9.629175186157227
    5. '   ' → logprob: -16.504175186157227
    6. '
' → logprob: -16.504175186157227
    7. '[' → logprob: -17.629175186157227
    8. '```' → logprob: -17.879175186157227
    9. '`' → logprob: -18.004175186157227
    10. '{' → logprob: -18.004175186157227

Token 473: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20141948759555817
    2. '(' → logprob: -1.701419472694397
    3. ' (' → logprob: -12.076419830322266
    4. ' ' → logprob: -14.826419830322266
    5. '{' → logprob: -16.701419830322266
    6. '
' → logprob: -17.826419830322266
    7. '```' → logprob: -18.076419830322266
    8. '[' → logprob: -18.326419830322266
    9. '   ' → logprob: -19.201419830322266
    10. '`' → logprob: -19.576419830322266

Token 474: '<<' (ID: 5354)
  Prédit: '<<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.033667825162410736
    2. ' <<' → logprob: -3.408667802810669
    3. '<<<' → logprob: -11.03366756439209
    4. '<<(' → logprob: -12.28366756439209
    5. '<' → logprob: -15.40866756439209
    6. ' <<=' → logprob: -15.53366756439209
    7. '()<<' → logprob: -15.53366756439209
    8. '<<"' → logprob: -16.158668518066406
    9. '```' → logprob: -16.158668518066406
    10. '<<<<' → logprob: -16.533668518066406

Token 475: 'tre' (ID: 4086)
  Prédit: 'tre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tre' → logprob: -4.842555426876061e-06
    2. ' treasure' → logprob: -12.250004768371582
    3. 'tro' → logprob: -16.8750057220459
    4. '(' → logprob: -18.3750057220459
    5. '```' → logprob: -19.0000057220459
    6. '(t' → logprob: -19.1250057220459
    7. '{' → logprob: -19.3750057220459
    8. 'terror' → logprob: -19.6250057220459
    9. '{
' → logprob: -19.7500057220459
    10. 'terr' → logprob: -20.1250057220459

Token 476: 'asure' (ID: 5450)
  Prédit: 'asure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'asure' → logprob: -0.0018302272073924541
    2. 'as' → logprob: -6.751830101013184
    3. 'sure' → logprob: -7.626830101013184
    4. 'a' → logprob: -9.501830101013184
    5. 'ASURE' → logprob: -10.501830101013184
    6. 'asu' → logprob: -11.001830101013184
    7. 'asured' → logprob: -11.251830101013184
    8. 'asures' → logprob: -11.626830101013184
    9. 'asurer' → logprob: -12.251830101013184
    10. 'ature' → logprob: -12.376830101013184

Token 477: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.00023500648967456073
    2. 'indices' → logprob: -9.250234603881836
    3. 'Indices' → logprob: -10.250234603881836
    4. 's' → logprob: -10.500234603881836
    5. '_' → logprob: -11.000234603881836
    6. '_positions' → logprob: -11.000234603881836
    7. '"indices' → logprob: -11.875234603881836
    8. '\' → logprob: -11.875234603881836
    9. 'n' → logprob: -12.750234603881836
    10. '```' → logprob: -12.750234603881836

Token 478: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.3141505718231201
    2. '(n' → logprob: -1.3141505718231201
    3. '((' → logprob: -7.564150810241699
    4. '[n' → logprob: -7.939150810241699
    5. ' (' → logprob: -12.0641508102417
    6. '(' → logprob: -12.6891508102417
    7. '[' → logprob: -13.3141508102417
    8. '  
' → logprob: -14.8141508102417
    9. '   ' → logprob: -14.9391508102417
    10. '`' → logprob: -15.0641508102417

Token 479: 'nr' (ID: 33357)
  Prédit: 'nr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nr' → logprob: -2.1008713702030946e-06
    2. ' nr' → logprob: -13.125001907348633
    3. '_nr' → logprob: -16.750001907348633
    4. '
' → logprob: -17.875001907348633
    5. '.nr' → logprob: -19.000001907348633
    6. 'Nr' → logprob: -19.375001907348633
    7. 'n' → logprob: -19.375001907348633
    8. '(n' → logprob: -19.750001907348633
    9. 'NR' → logprob: -20.375001907348633
    10. '   ' → logprob: -21.125001907348633

Token 480: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.6434466242790222
    2. 'n' → logprob: -1.143446683883667
    3. 'nr' → logprob: -2.018446683883667
    4. 'nc' → logprob: -4.143446445465088
    5. ',' → logprob: -5.393446445465088
    6. '_n' → logprob: -7.643446445465088
    7. 'r' → logprob: -7.643446445465088
    8. '_nr' → logprob: -7.768446445465088
    9. '(n' → logprob: -8.143446922302246
    10. '[n' → logprob: -8.893446922302246

Token 481: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0018034613458439708
    2. ',c' → logprob: -6.501803398132324
    3. ',' → logprob: -8.876803398132324
    4. ',n' → logprob: -9.001803398132324
    5. 'nc' → logprob: -11.626803398132324
    6. 'r' → logprob: -11.751803398132324
    7. 'cn' → logprob: -12.251803398132324
    8. 'n' → logprob: -13.001803398132324
    9. ')' → logprob: -13.126803398132324
    10. ')c' → logprob: -13.501803398132324

Token 482: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -7.76759916334413e-05
    2. ')]
' → logprob: -10.125077247619629
    3. ')])' → logprob: -10.750077247619629
    4. '])]' → logprob: -12.250077247619629
    5. ')' → logprob: -12.625077247619629
    6. ']' → logprob: -12.750077247619629
    7. ']]' → logprob: -14.000077247619629
    8. '')]' → logprob: -14.000077247619629
    9. ')]
' → logprob: -14.250077247619629
    10. ')]

' → logprob: -14.375077247619629

Token 483: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3570270538330078
    2. '                
' → logprob: -1.7320270538330078
    3. '
' → logprob: -2.982027053833008
    4. ' 
' → logprob: -3.107027053833008
    5. '  
' → logprob: -4.357027053833008
    6. '<|end|>' → logprob: -5.607027053833008
    7. '                    
' → logprob: -5.732027053833008
    8. '                ' → logprob: -6.357027053833008
    9. ' ' → logprob: -7.107027053833008
    10. '                 
' → logprob: -7.482027053833008

Token 484: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.35193681716918945
    2. ' 
' → logprob: -1.7269368171691895
    3. '                
' → logprob: -2.6019368171691895
    4. ' if' → logprob: -3.9769368171691895
    5. '  
' → logprob: -4.7269368171691895
    6. 'if' → logprob: -5.6019368171691895
    7. '
' → logprob: -6.1019368171691895
    8. '                ' → logprob: -6.3519368171691895
    9. '                 
' → logprob: -6.4769368171691895
    10. '                   ' → logprob: -6.7269368171691895

Token 485: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0016845858190208673
    2. ' if' → logprob: -6.876684665679932
    3. 'If' → logprob: -8.501684188842773
    4. 'next' → logprob: -8.501684188842773
    5. '#' → logprob: -8.626684188842773
    6. 'state' → logprob: -10.001684188842773
    7. '               ' → logprob: -12.251684188842773
    8. 'Next' → logprob: -12.501684188842773
    9. 'not' → logprob: -12.751684188842773
    10. 'new' → logprob: -13.001684188842773

Token 486: ' it's' (ID: 4275)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.052961863577365875
    2. '((' → logprob: -4.177961826324463
    3. '(not' → logprob: -4.677961826324463
    4. 'visited' → logprob: -4.677961826324463
    5. '(grid' → logprob: -5.177961826324463
    6. '(' → logprob: -5.177961826324463
    7. 'not' → logprob: -5.552961826324463
    8. 'nr' → logprob: -6.802961826324463
    9. 'grid' → logprob: -7.177961826324463
    10. ' (' → logprob: -8.552962303161621

Token 487: ' entrance' (ID: 27326)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5641881227493286
    2. '(' → logprob: -1.0641881227493286
    3. ' (' → logprob: -3.314188003540039
    4. ' not' → logprob: -3.439188003540039
    5. '(r' → logprob: -4.814188003540039
    6. 'nr' → logprob: -5.689188003540039
    7. 'not' → logprob: -6.064188003540039
    8. ' nr' → logprob: -6.314188003540039
    9. '0' → logprob: -6.564188003540039
    10. '(not' → logprob: -8.064188003540039

Token 488: ' cell' (ID: 4206)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.6480042338371277
    2. ' and' → logprob: -1.1480042934417725
    3. 'and' → logprob: -3.1480042934417725
    4. '(n' → logprob: -3.3980042934417725
    5. ' not' → logprob: -4.148004055023193
    6. ' (' → logprob: -4.273004055023193
    7. ' ==' → logprob: -4.398004055023193
    8. '==' → logprob: -4.398004055023193
    9. 'or' → logprob: -4.523004055023193
    10. ' !=' → logprob: -4.648004055023193

Token 489: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.846521258354187
    2. ' or' → logprob: -1.346521258354187
    3. 'and' → logprob: -2.2215213775634766
    4. '(n' → logprob: -2.5965213775634766
    5. '==' → logprob: -3.2215213775634766
    6. ' (' → logprob: -3.4715213775634766
    7. ' ==' → logprob: -3.5965213775634766
    8. 'or' → logprob: -3.8465213775634766
    9. ':' → logprob: -5.971521377563477
    10. '               ' → logprob: -6.971521377563477

Token 490: ' can' (ID: 665)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -1.462872862815857
    2. 'visited' → logprob: -1.962872862815857
    3. ' not' → logprob: -2.0878729820251465
    4. ' or' → logprob: -2.2128729820251465
    5. ' (' → logprob: -2.3378729820251465
    6. 'True' → logprob: -2.5878729820251465
    7. 'not' → logprob: -2.8378729820251465
    8. '(n' → logprob: -3.5878729820251465
    9. '#' → logprob: -3.9628729820251465
    10. ' continue' → logprob: -4.3378729820251465

Token 491: ' always' (ID: 3324)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.4628756046295166
    2. ' re' → logprob: -1.9628756046295166
    3. 'enter' → logprob: -2.3378756046295166
    4. ' revisit' → logprob: -3.3378756046295166
    5. ' enter' → logprob: -3.7128756046295166
    6. 'always' → logprob: -4.3378753662109375
    7. 'continue' → logprob: -4.4628753662109375
    8. ' always' → logprob: -4.4628753662109375
    9. ' continue' → logprob: -4.7128753662109375
    10. 'visit' → logprob: -5.2128753662109375

Token 492: ' visit' (ID: 4030)
  Prédit: 'enter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enter' → logprob: -0.17114916443824768
    2. 're' → logprob: -2.421149253845215
    3. ' enter' → logprob: -3.671149253845215
    4. 'visit' → logprob: -4.171149253845215
    5. ' revisit' → logprob: -4.796149253845215
    6. 'step' → logprob: -4.921149253845215
    7. ' re' → logprob: -5.046149253845215
    8. 'go' → logprob: -6.296149253845215
    9. ' visit' → logprob: -7.046149253845215
    10. ' step' → logprob: -7.296149253845215

Token 493: '.
' (ID: 558)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -1.2519629001617432
    2. ' and' → logprob: -1.3769629001617432
    3. ' (' → logprob: -1.7519629001617432
    4. '               ' → logprob: -2.501962900161743
    5. ':' → logprob: -2.751962900161743
    6. '                   ' → logprob: -3.126962900161743
    7. ',' → logprob: -3.126962900161743
    8. '.' → logprob: -4.626962661743164
    9. ':
' → logprob: -4.626962661743164
    10. '                       ' → logprob: -4.876962661743164

Token 494: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02875637821853161
    2. ' if' → logprob: -3.7787563800811768
    3. '                   ' → logprob: -5.778756141662598
    4. '                
' → logprob: -7.403756141662598
    5. 'if' → logprob: -7.778756141662598
    6. ' and' → logprob: -7.903756141662598
    7. '                ' → logprob: -8.278756141662598
    8. '                    
' → logprob: -8.778756141662598
    9. '```' → logprob: -9.278756141662598
    10. '                               ' → logprob: -9.403756141662598

Token 495: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6009181141853333
    2. ' if' → logprob: -0.8509181141853333
    3. 'if' → logprob: -3.9759180545806885
    4. '                   ' → logprob: -5.725918292999268
    5. ' and' → logprob: -6.850918292999268
    6. '                ' → logprob: -7.850918292999268
    7. ' or' → logprob: -8.22591781616211
    8. ' elif' → logprob: -8.47591781616211
    9. '                       ' → logprob: -8.72591781616211
    10. '                
' → logprob: -9.22591781616211

Token 496: ' Otherwise' (ID: 33987)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16171513497829437
    2. ' if' → logprob: -1.9117151498794556
    3. 'elif' → logprob: -7.286715030670166
    4. '                   ' → logprob: -7.786715030670166
    5. '               ' → logprob: -8.536715507507324
    6. 'visited' → logprob: -9.911715507507324
    7. ' (' → logprob: -10.286715507507324
    8. ' elif' → logprob: -10.411715507507324
    9. 'not' → logprob: -11.161715507507324
    10. ' not' → logprob: -11.286715507507324

Token 497: ',' (ID: 11)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6593825817108154
    2. ' if' → logprob: -0.7843825817108154
    3. ' not' → logprob: -3.7843825817108154
    4. 'not' → logprob: -5.9093828201293945
    5. '                   ' → logprob: -7.5343828201293945
    6. 'visited' → logprob: -8.909382820129395
    7. '               ' → logprob: -9.534382820129395
    8. ',' → logprob: -9.909382820129395
    9. ' visited' → logprob: -10.034382820129395
    10. ' and' → logprob: -10.159382820129395

Token 498: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6380071043968201
    2. ' if' → logprob: -1.1380071640014648
    3. ' not' → logprob: -2.138007164001465
    4. 'not' → logprob: -3.638007164001465
    5. 'visited' → logprob: -6.013007164001465
    6. '(not' → logprob: -6.388007164001465
    7. '                   ' → logprob: -6.888007164001465
    8. ' visited' → logprob: -7.013007164001465
    9. ' (' → logprob: -8.388007164001465
    10. ' grid' → logprob: -8.638007164001465

Token 499: ' visited' (ID: 18416)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.6247873306274414
    2. ' not' → logprob: -0.8747873306274414
    3. 'visited' → logprob: -3.2497873306274414
    4. '(not' → logprob: -5.374787330627441
    5. ' visited' → logprob: -5.499787330627441
    6. '(' → logprob: -9.874787330627441
    7. ' (' → logprob: -10.374787330627441
    8. '	not' → logprob: -10.374787330627441
    9. '(n' → logprob: -10.749787330627441
    10. ' ' → logprob: -11.874787330627441

Token 500: ' in' (ID: 306)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.981667537620524e-06
    2. '[r' → logprob: -14.250001907348633
    3. '[' → logprob: -14.500001907348633
    4. '[next' → logprob: -15.750001907348633
    5. ' [' → logprob: -16.250001907348633
    6. '   ' → logprob: -16.625001907348633
    7. 'nr' → logprob: -16.875001907348633
    8. ' and' → logprob: -17.250001907348633
    9. '```' → logprob: -17.375001907348633
    10. '

' → logprob: -17.500001907348633

Token 501: ' this' (ID: 495)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.6698890328407288
    2. 'visited' → logprob: -0.7948890328407288
    3. 'nr' → logprob: -3.669888973236084
    4. '[r' → logprob: -5.544888973236084
    5. ' visited' → logprob: -5.794888973236084
    6. 'n' → logprob: -6.794888973236084
    7. '[' → logprob: -7.669888973236084
    8. 'the' → logprob: -7.794888973236084
    9. ' nr' → logprob: -8.169889450073242
    10. '```' → logprob: -8.294889450073242

Token 502: ' mask' (ID: 10910)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.48502954840660095
    2. 'state' → logprob: -1.8600295782089233
    3. '[r' → logprob: -3.610029458999634
    4. 'and' → logprob: -3.735029458999634
    5. ' state' → logprob: -3.985029458999634
    6. ' or' → logprob: -3.985029458999634
    7. 'or' → logprob: -4.235029697418213
    8. 'path' → logprob: -4.360029697418213
    9. 'row' → logprob: -4.360029697418213
    10. ' visited' → logprob: -4.860029697418213

Token 503: ',' (ID: 11)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.16672851145267487
    2. '[r' → logprob: -1.9167284965515137
    3. ' and' → logprob: -5.416728496551514
    4. 'and' → logprob: -7.291728496551514
    5. '[' → logprob: -7.791728496551514
    6. 'visited' → logprob: -8.416728973388672
    7. ' [' → logprob: -8.791728973388672
    8. ' state' → logprob: -9.541728973388672
    9. '
' → logprob: -9.666728973388672
    10. ',' → logprob: -9.791728973388672

Token 504: ' skip' (ID: 16677)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.1800496578216553
    2. ' continue' → logprob: -1.4300496578216553
    3. ' not' → logprob: -1.4300496578216553
    4. 'if' → logprob: -2.4300496578216553
    5. '                   ' → logprob: -3.1800496578216553
    6. 'continue' → logprob: -3.5550496578216553
    7. 'visited' → logprob: -3.8050496578216553
    8. ' visited' → logprob: -4.055049896240234
    9. ' and' → logprob: -5.055049896240234
    10. 'not' → logprob: -5.180049896240234

Token 505: '.
' (ID: 558)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.24392564594745636
    2. '                   ' → logprob: -1.61892569065094
    3. ':
' → logprob: -5.36892557144165
    4. '                       ' → logprob: -5.74392557144165
    5. ' and' → logprob: -5.86892557144165
    6. ':' → logprob: -5.99392557144165
    7. '           ' → logprob: -6.86892557144165
    8. ' or' → logprob: -7.11892557144165
    9. ' if' → logprob: -7.36892557144165
    10. ',' → logprob: -7.61892557144165

Token 506: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.028210539370775223
    2. '                   ' → logprob: -4.278210639953613
    3. ' if' → logprob: -5.403210639953613
    4. '                
' → logprob: -6.028210639953613
    5. '                               ' → logprob: -6.778210639953613
    6. '  
' → logprob: -7.028210639953613
    7. ' 
' → logprob: -7.028210639953613
    8. '                    
' → logprob: -7.278210639953613
    9. '                ' → logprob: -7.403210639953613
    10. '<|end|>' → logprob: -7.653210639953613

Token 507: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0046152533032000065
    2. ' if' → logprob: -5.629615306854248
    3. '                
' → logprob: -7.379615306854248
    4. 'if' (adapté à ' if') → logprob: -8.75461483001709
    5. '                ' → logprob: -9.25461483001709
    6. '                   ' → logprob: -10.25461483001709
    7. ' 
' → logprob: -10.87961483001709
    8. '```' → logprob: -10.87961483001709
    9. '			' → logprob: -11.50461483001709
    10. ' ' → logprob: -11.75461483001709

Token 508: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0198513250797987
    2. 'nr' → logprob: -4.144851207733154
    3. '((' → logprob: -7.144851207733154
    4. 'not' → logprob: -7.269851207733154
    5. 'visited' → logprob: -7.519851207733154
    6. ' (' → logprob: -7.894851207733154
    7. '(not' → logprob: -7.894851207733154
    8. '(' → logprob: -7.894851207733154
    9. '(r' → logprob: -8.019851684570312
    10. 'grid' → logprob: -9.394851684570312

Token 509: 'nr' (ID: 33357)
  Prédit: 'nr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nr' → logprob: -0.019187772646546364
    2. '(n' → logprob: -4.769187927246094
    3. 'visited' → logprob: -5.144187927246094
    4. 'not' → logprob: -5.644187927246094
    5. ' nr' → logprob: -8.144187927246094
    6. '(not' → logprob: -8.769187927246094
    7. ' not' → logprob: -8.894187927246094
    8. ' (' → logprob: -9.019187927246094
    9. 'grid' → logprob: -9.519187927246094
    10. 'n' → logprob: -9.519187927246094

Token 510: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.02506057359278202
    2. ',c' → logprob: -4.275060653686523
    3. '==' → logprob: -4.775060653686523
    4. ',' → logprob: -6.525060653686523
    5. '!=' → logprob: -7.400060653686523
    6. 'nc' → logprob: -8.900060653686523
    7. 'n' → logprob: -9.275060653686523
    8. ' ==' → logprob: -10.275060653686523
    9. ',num' → logprob: -11.400060653686523
    10. ' !=' → logprob: -12.025060653686523

Token 511: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.026798656210303307
    2. ',c' → logprob: -3.776798725128174
    3. ',' → logprob: -5.776798725128174
    4. '<c' → logprob: -9.276798248291016
    5. '!=' → logprob: -9.651798248291016
    6. 'visited' → logprob: -10.026798248291016
    7. '<' → logprob: -10.026798248291016
    8. '==' → logprob: -10.151798248291016
    9. ',n' → logprob: -10.526798248291016
    10. ',
' → logprob: -10.651798248291016

Token 512: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7450169920921326
    2. ')==' → logprob: -1.1200170516967773
    3. '==' → logprob: -2.3700170516967773
    4. ')!=' → logprob: -3.3700170516967773
    5. '==(' → logprob: -3.8700170516967773
    6. ' ==' → logprob: -3.9950170516967773
    7. '!=' → logprob: -4.745017051696777
    8. ']==' → logprob: -5.120017051696777
    9. '!=(' → logprob: -5.370017051696777
    10. ' !=' → logprob: -5.620017051696777

Token 513: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.019663386046886444
    2. '==(' → logprob: -4.519663333892822
    3. ' ==' → logprob: -5.519663333892822
    4. '!=' → logprob: -5.519663333892822
    5. '[' → logprob: -8.51966381072998
    6. '!=(' → logprob: -8.64466381072998
    7. ']==' → logprob: -9.14466381072998
    8. '==
' → logprob: -10.39466381072998
    9. ' !=' → logprob: -10.76966381072998
    10. ')==' → logprob: -11.64466381072998

Token 514: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00020354038861114532
    2. ' (' → logprob: -8.500203132629395
    3. '   ' → logprob: -16.62520408630371
    4. ' ' → logprob: -17.75020408630371
    5. '0' → logprob: -20.25020408630371
    6. '  ' → logprob: -20.87520408630371
    7. '           ' → logprob: -20.87520408630371
    8. 'corn' → logprob: -21.25020408630371
    9. '
' → logprob: -21.62520408630371
    10. '       ' → logprob: -21.87520408630371

Token 515: '0' (ID: 15)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20143720507621765
    2. '0' → logprob: -1.70143723487854
    3. ' (' → logprob: -10.701436996459961
    4. ' ' → logprob: -13.826436996459961
    5. '   ' → logprob: -15.326436996459961
    6. ')' → logprob: -15.951436996459961
    7. '```' → logprob: -16.82643699645996
    8. '`' → logprob: -17.20143699645996
    9. '(
' → logprob: -17.57643699645996
    10. '[' → logprob: -17.70143699645996

Token 516: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1279553291387856e-05
    2. '0' → logprob: -11.875011444091797
    3. ' ,' → logprob: -12.375011444091797
    4. ',
' → logprob: -16.875011444091797
    5. '```' → logprob: -17.625011444091797
    6. '   ' → logprob: -18.375011444091797
    7. ')' → logprob: -18.625011444091797
    8. ' ' → logprob: -18.750011444091797
    9. '           ' → logprob: -19.250011444091797
    10. '  ' → logprob: -20.375011444091797

Token 517: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -19.625001907348633
    4. ')' → logprob: -20.125001907348633
    5. ',' → logprob: -20.375001907348633
    6. '<|end|>' → logprob: -20.812501907348633
    7. '۰' → logprob: -21.000001907348633
    8. '  ' → logprob: -21.437501907348633
    9. '    ' → logprob: -21.812501907348633
    10. '０' → logprob: -21.937501907348633

Token 518: '):
' (ID: 1883)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.585968554019928
    2. ')' → logprob: -0.960968554019928
    3. 'or' → logprob: -2.835968494415283
    4. ' )' → logprob: -6.460968494415283
    5. '):' → logprob: -8.460968971252441
    6. '   ' → logprob: -9.210968971252441
    7. '               ' → logprob: -9.210968971252441
    8. '                   ' → logprob: -9.335968971252441
    9. ' ' → logprob: -10.210968971252441
    10. '):
' → logprob: -10.835968971252441

Token 519: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.028742361813783646
    2. ' and' → logprob: -4.65374231338501
    3. '               ' → logprob: -5.02874231338501
    4. '                       ' → logprob: -5.77874231338501
    5. ':
' → logprob: -5.90374231338501
    6. '                    
' → logprob: -6.15374231338501
    7. ':' → logprob: -6.27874231338501
    8. ' or' → logprob: -6.40374231338501
    9. ' continue' → logprob: -9.028742790222168
    10. '                        
' → logprob: -9.403742790222168

Token 520: ' if' (ID: 538)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.11740777641534805
    2. 'visited' → logprob: -2.99240779876709
    3. ' q' → logprob: -3.49240779876709
    4. '                   ' → logprob: -4.49240779876709
    5. 'if' (adapté à ' if') → logprob: -4.49240779876709
    6. 'next' → logprob: -6.36740779876709
    7. 'pass' → logprob: -6.49240779876709
    8. '#' → logprob: -6.74240779876709
    9. '   ' → logprob: -7.24240779876709
    10. ' if' → logprob: -7.24240779876709

Token 521: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.39179399609565735
    2. 'visited' → logprob: -1.516793966293335
    3. 'True' → logprob: -2.266793966293335
    4. '(not' → logprob: -7.766794204711914
    5. ' not' → logprob: -8.141794204711914
    6. '(True' → logprob: -8.891794204711914
    7. 'False' → logprob: -9.766794204711914
    8. '(' → logprob: -10.141794204711914
    9. ' True' → logprob: -10.266794204711914
    10. 'len' → logprob: -10.516794204711914

Token 522: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -7.100059156073257e-05
    2. ' visited' → logprob: -9.625070571899414
    3. 'any' → logprob: -12.500070571899414
    4. 'False' → logprob: -14.375070571899414
    5. '(' → logprob: -15.375070571899414
    6. 'True' → logprob: -16.250070571899414
    7. 'all' → logprob: -16.500070571899414
    8. 'q' → logprob: -16.750070571899414
    9. '
' → logprob: -17.625070571899414
    10. '```' → logprob: -17.875070571899414

Token 523: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.00011439072113716975
    2. '[' → logprob: -9.625114440917969
    3. '[r' → logprob: -10.625114440917969
    4. 'nr' → logprob: -11.500114440917969
    5. ' [' → logprob: -13.125114440917969
    6. '0' → logprob: -13.375114440917969
    7. '   ' → logprob: -13.500114440917969
    8. '

' → logprob: -13.500114440917969
    9. '```' → logprob: -13.625114440917969
    10. '
' → logprob: -13.750114440917969

Token 524: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0005031120381318033
    2. 'nr' → logprob: -8.000503540039062
    3. '[' → logprob: -9.000503540039062
    4. '[r' → logprob: -10.375503540039062
    5. '[n' → logprob: -12.750503540039062
    6. '```' → logprob: -13.000503540039062
    7. '0' → logprob: -13.250503540039062
    8. '][' → logprob: -13.375503540039062
    9. '_nr' → logprob: -13.750503540039062
    10. 'р' → logprob: -14.375503540039062

Token 525: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0005643534241244197
    2. '[' → logprob: -8.000564575195312
    3. ']' → logprob: -8.750564575195312
    4. '0' → logprob: -9.750564575195312
    5. ' ][' → logprob: -11.750564575195312
    6. '[c' → logprob: -13.250564575195312
    7. '[n' → logprob: -13.750564575195312
    8. '"][' → logprob: -15.250564575195312
    9. ' ' → logprob: -15.500564575195312
    10. ''][' → logprob: -15.875564575195312

Token 526: 'nc' (ID: 24825)
  Prédit: 'nc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -0.2116679549217224
    2. '0' → logprob: -1.7116680145263672
    3. 'col' → logprob: -5.586668014526367
    4. 'nr' → logprob: -5.711668014526367
    5. 'c' → logprob: -6.086668014526367
    6. 'n' → logprob: -7.461668014526367
    7. '
' → logprob: -8.586668014526367
    8. '   ' → logprob: -10.461668014526367
    9. ' nc' → logprob: -10.836668014526367
    10. '    ' → logprob: -11.461668014526367

Token 527: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.000297685619443655
    2. 'n' → logprob: -8.875297546386719
    3. '[n' → logprob: -9.250297546386719
    4. ']' → logprob: -9.875297546386719
    5. ' ][' → logprob: -12.250297546386719
    6. '[' → logprob: -13.625297546386719
    7. '   ' → logprob: -13.750297546386719
    8. '```' → logprob: -14.750297546386719
    9. '(n' → logprob: -14.875297546386719
    10. ' ' → logprob: -15.375297546386719

Token 528: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -7.231182826217264e-05
    2. 'col' → logprob: -10.125072479248047
    3. '7' → logprob: -11.125072479248047
    4. '
' → logprob: -12.500072479248047
    5. '0' → logprob: -12.500072479248047
    6. ' n' → logprob: -12.750072479248047
    7. '   ' → logprob: -12.875072479248047
    8. '```' → logprob: -13.875072479248047
    9. '(n' → logprob: -14.000072479248047
    10. '8' → logprob: -15.125072479248047

Token 529: 'col' (ID: 1798)
  Prédit: 'col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -2.935296834039036e-06
    2. 'n' → logprob: -14.00000286102295
    3. '_col' → logprob: -14.62500286102295
    4. '(col' → logprob: -14.87500286102295
    5. 'c' → logprob: -15.12500286102295
    6. '.col' → logprob: -15.25000286102295
    7. ' col' → logprob: -15.87500286102295
    8. '
' → logprob: -16.250003814697266
    9. '[col' → logprob: -16.625003814697266
    10. 'ocol' → logprob: -16.625003814697266

Token 530: 'lected' (ID: 2576)
  Prédit: 'ected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ected' → logprob: -0.12694302201271057
    2. 'lected' → logprob: -2.1269431114196777
    3. 'ect' → logprob: -11.87694263458252
    4. 'col' → logprob: -13.12694263458252
    5. 'tected' → logprob: -13.25194263458252
    6. 'icted' → logprob: -13.87694263458252
    7. 'lect' → logprob: -14.37694263458252
    8. 'ct' → logprob: -14.37694263458252
    9. 'pected' → logprob: -15.12694263458252
    10. 'etected' → logprob: -15.50194263458252

Token 531: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.00036216014996171
    2. ']:
' → logprob: -8.250362396240234
    3. ']' → logprob: -9.625362396240234
    4. ' ]' → logprob: -11.000362396240234
    5. ']:
' → logprob: -11.375362396240234
    6. ']):' → logprob: -13.250362396240234
    7. ':' → logprob: -13.375362396240234
    8. ']:

' → logprob: -13.875362396240234
    9. '']:' → logprob: -14.625362396240234
    10. '"]:' → logprob: -14.750362396240234

Token 532: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0021962907630950212
    2. '                           ' → logprob: -7.127196311950684
    3. '                   ' → logprob: -7.752196311950684
    4. '                        
' → logprob: -8.252196311950684
    5. '                               ' → logprob: -8.377196311950684
    6. '```' → logprob: -9.002196311950684
    7. '<|end|>' → logprob: -9.752196311950684
    8. ' visited' → logprob: -9.877196311950684
    9. '               ' → logprob: -10.002196311950684
    10. '                        ' → logprob: -10.502196311950684

Token 533: ' visited' (ID: 18416)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.10066261887550354
    2. 'visited' (adapté à ' visited') → logprob: -3.2256627082824707
    3. '                       ' → logprob: -3.8506627082824707
    4. ' visited' → logprob: -4.100662708282471
    5. '                               ' → logprob: -4.350662708282471
    6. ' q' → logprob: -5.475662708282471
    7. 'q' → logprob: -8.100662231445312
    8. '                   ' → logprob: -8.475662231445312
    9. '                        ' → logprob: -9.100662231445312
    10. '                            ' → logprob: -9.100662231445312

Token 534: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -3.173704271830502e-06
    2. '[' → logprob: -13.00000286102295
    3. '```' → logprob: -15.12500286102295
    4. ' [' → logprob: -15.25000286102295
    5. '(n' → logprob: -16.000003814697266
    6. '\[' → logprob: -17.250003814697266
    7. '   ' → logprob: -17.625003814697266
    8. '[N' → logprob: -17.750003814697266
    9. '[
' → logprob: -17.875003814697266
    10. '][' → logprob: -18.000003814697266

Token 535: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.04255980625748634
    2. '[n' → logprob: -3.917559862136841
    3. 'col' → logprob: -4.417559623718262
    4. 'c' → logprob: -4.917559623718262
    5. '[col' → logprob: -7.292559623718262
    6. '[' → logprob: -7.417559623718262
    7. 'nr' → logprob: -7.667559623718262
    8. '[r' → logprob: -8.292559623718262
    9. '][' → logprob: -8.917559623718262
    10. '```' → logprob: -9.542559623718262

Token 536: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00048179292934946716
    2. '[n' → logprob: -7.750481605529785
    3. '[' → logprob: -10.375481605529785
    4. ' ][' → logprob: -11.375481605529785
    5. 'n' → logprob: -12.500481605529785
    6. ']' → logprob: -13.875481605529785
    7. '   ' → logprob: -14.000481605529785
    8. '(n' → logprob: -14.250481605529785
    9. ',n' → logprob: -14.500481605529785
    10. '       ' → logprob: -14.750481605529785

Token 537: 'nc' (ID: 24825)
  Prédit: 'nc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -1.1517960956552997e-05
    2. 'c' → logprob: -11.750011444091797
    3. ' nc' → logprob: -13.375011444091797
    4. '0' → logprob: -14.125011444091797
    5. 'nr' → logprob: -15.250011444091797
    6. '_nc' → logprob: -15.250011444091797
    7. 'col' → logprob: -15.375011444091797
    8. 'n' → logprob: -16.125011444091797
    9. '[n' → logprob: -16.375011444091797
    10. '.nc' → logprob: -16.625011444091797

Token 538: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.03368189558386803
    2. '[n' → logprob: -3.408681869506836
    3. '[' → logprob: -11.658681869506836
    4. ']' → logprob: -11.783681869506836
    5. ' ][' → logprob: -12.408681869506836
    6. 'n' → logprob: -13.033681869506836
    7. '"][' → logprob: -13.283681869506836
    8. ']][' → logprob: -13.283681869506836
    9. '```' → logprob: -13.408681869506836
    10. '(n' → logprob: -13.533681869506836

Token 539: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.320199877838604e-07
    2. ' n' → logprob: -15.25
    3. '
' → logprob: -16.625
    4. '   ' → logprob: -18.75
    5. ']' → logprob: -18.875
    6. '	n' → logprob: -19.125
    7. '```' → logprob: -19.375
    8. '(n' → logprob: -19.5
    9. 'nc' → logprob: -19.5
    10. ' ' → logprob: -19.875

Token 540: 'col' (ID: 1798)
  Prédit: 'col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -3.128163257315464e-07
    2. 'ol' → logprob: -15.75
    3. '_col' → logprob: -17.625
    4. '```' → logprob: -18.25
    5. 'lected' → logprob: -18.375
    6. ' col' → logprob: -18.375
    7. 'Collected' → logprob: -18.625
    8. 'n' → logprob: -18.875
    9. 'cl' → logprob: -19.625
    10. ' collected' → logprob: -19.875

Token 541: 'lected' (ID: 2576)
  Prédit: 'lected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lected' → logprob: -0.0022294751834124327
    2. 'ected' → logprob: -6.127229690551758
    3. 'col' → logprob: -10.377229690551758
    4. 'n' → logprob: -12.627229690551758
    5. '[' → logprob: -13.127229690551758
    6. 'leted' → logprob: -13.252229690551758
    7. 'lect' → logprob: -13.377229690551758
    8. ']' → logprob: -13.502229690551758
    9. 'e' → logprob: -14.627229690551758
    10. 'Collected' → logprob: -14.877229690551758

Token 542: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02991374582052231
    2. ']=' → logprob: -3.5299136638641357
    3. '=' → logprob: -8.779913902282715
    4. ' =' → logprob: -12.279913902282715
    5. ' ]' → logprob: -12.654913902282715
    6. ')' → logprob: -14.404913902282715
    7. '=True' → logprob: -14.904913902282715
    8. '           ' → logprob: -15.279913902282715
    9. '   ' → logprob: -16.2799129486084
    10. '                       ' → logprob: -16.2799129486084

Token 543: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07913663983345032
    2. ' =' → logprob: -2.579136610031128
    3. '=True' → logprob: -8.329136848449707
    4. ']=' → logprob: -13.079136848449707
    5. ']' → logprob: -13.704136848449707
    6. '=False' → logprob: -14.079136848449707
    7. ',' → logprob: -14.704136848449707
    8. '           ' → logprob: -15.079136848449707
    9. '   ' → logprob: -15.829136848449707
    10. '=true' → logprob: -16.07913589477539

Token 544: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -2.935296834039036e-06
    2. ' True' → logprob: -12.75000286102295
    3. '   ' → logprob: -21.500003814697266
    4. '1' → logprob: -21.875003814697266
    5. 'False' → logprob: -22.375003814697266
    6. '(True' → logprob: -22.500003814697266
    7. '=True' → logprob: -22.875003814697266
    8. 'true' → logprob: -23.875003814697266
    9. '    ' → logprob: -24.625003814697266
    10. '
' → logprob: -24.750003814697266

Token 545: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0017581217689439654
    2. '
' → logprob: -6.876758098602295
    3. '                           ' → logprob: -8.376758575439453
    4. '                        
' → logprob: -8.501758575439453
    5. '<|end|>' → logprob: -9.501758575439453
    6. '                   ' → logprob: -9.626758575439453
    7. '               ' → logprob: -10.126758575439453
    8. ',' → logprob: -10.751758575439453
    9. '                        ' → logprob: -11.126758575439453
    10. '```' → logprob: -11.126758575439453

Token 546: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.004201867152005434
    2. '                           ' → logprob: -6.379201889038086
    3. '```' → logprob: -7.254201889038086
    4. '
' → logprob: -7.754201889038086
    5. '                   ' → logprob: -8.004201889038086
    6. '<|end|>' → logprob: -8.254201889038086
    7. '                        
' → logprob: -8.504201889038086
    8. '               ' → logprob: -9.004201889038086
    9. ',' → logprob: -9.004201889038086
    10. '                        ' → logprob: -10.004201889038086

Token 547: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.004109507892280817
    2. ' q' → logprob: -5.5041093826293945
    3. '                           ' → logprob: -10.629109382629395
    4. '
' → logprob: -13.004109382629395
    5. '                       ' → logprob: -13.129109382629395
    6. '                               ' → logprob: -13.379109382629395
    7. '```' → logprob: -14.004109382629395
    8. '	q' → logprob: -15.629109382629395
    9. '                   ' → logprob: -17.12911033630371
    10. '   ' → logprob: -17.25411033630371

Token 548: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0002599053841549903
    2. '.' → logprob: -8.375260353088379
    3. '.app' → logprob: -11.250260353088379
    4. '.extend' → logprob: -11.375260353088379
    5. '.enqueue' → logprob: -13.125260353088379
    6. 'app' → logprob: -14.250260353088379
    7. '.put' → logprob: -14.625260353088379
    8. '.Append' → logprob: -14.750260353088379
    9. '```' → logprob: -15.500260353088379
    10. 'appen' → logprob: -15.625260353088379

Token 549: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.002413469133898616
    2. '(' → logprob: -6.502413272857666
    3. '(((' → logprob: -7.002413272857666
    4. ' ((' → logprob: -14.002413749694824
    5. '(('' → logprob: -17.127412796020508
    6. '((((' → logprob: -17.252412796020508
    7. '(
' → logprob: -17.252412796020508
    8. '(("' → logprob: -18.002412796020508
    9. ' (' → logprob: -18.377412796020508
    10. '((-' → logprob: -18.377412796020508

Token 550: 'nr' (ID: 33357)
  Prédit: 'nr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nr' → logprob: -1.8624639324116288e-06
    2. ' nr' → logprob: -13.250001907348633
    3. '_nr' → logprob: -17.750001907348633
    4. '0' → logprob: -18.125001907348633
    5. '   ' → logprob: -18.625001907348633
    6. 'n' → logprob: -18.875001907348633
    7. '
' → logprob: -19.125001907348633
    8. '.nr' → logprob: -19.875001907348633
    9. 'Nr' → logprob: -20.000001907348633
    10. '```' → logprob: -20.375001907348633

Token 551: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.07908795773983002
    2. ',' → logprob: -2.579087972640991
    3. '0' → logprob: -9.95408821105957
    4. ' ,' → logprob: -10.20408821105957
    5. 'nc' → logprob: -10.57908821105957
    6. ',c' → logprob: -11.07908821105957
    7. '+' → logprob: -11.07908821105957
    8. 'n' → logprob: -11.20408821105957
    9. ',
' → logprob: -11.70408821105957
    10. '(n' → logprob: -12.07908821105957

Token 552: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0031603723764419556
    2. ',c' → logprob: -6.50316047668457
    3. 'col' → logprob: -7.37816047668457
    4. ',' → logprob: -7.50316047668457
    5. '0' → logprob: -8.37816047668457
    6. 'nc' → logprob: -8.62816047668457
    7. ',n' → logprob: -11.12816047668457
    8. 'с' → logprob: -11.50316047668457
    9. 'cc' → logprob: -11.75316047668457
    10. '```' → logprob: -11.75316047668457

Token 553: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.018155913800001144
    2. ',' → logprob: -4.018156051635742
    3. ' ,' → logprob: -12.893156051635742
    4. 'n' → logprob: -13.643156051635742
    5. ',num' → logprob: -14.518156051635742
    6. ',new' → logprob: -14.893156051635742
    7. ',col' → logprob: -15.143156051635742
    8. ',
' → logprob: -15.518156051635742
    9. ',c' → logprob: -16.018156051635742
    10. ',user' → logprob: -16.018156051635742

Token 554: 'col' (ID: 1798)
  Prédit: 'col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -1.9361264946837764e-07
    2. 'n' → logprob: -16.625
    3. 'ocol' → logprob: -17.5
    4. '```' → logprob: -17.5
    5. '_col' → logprob: -17.625
    6. '	col' → logprob: -18.25
    7. '(col' → logprob: -18.5
    8. ' col' → logprob: -18.5
    9. 'ol' → logprob: -19.0
    10. '[col' → logprob: -19.625

Token 555: 'lected' (ID: 2576)
  Prédit: 'ected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ected' → logprob: -0.011070695705711842
    2. 'lected' → logprob: -4.511070728302002
    3. 'ect' → logprob: -11.011070251464844
    4. 'ct' → logprob: -13.636070251464844
    5. 'col' → logprob: -13.761070251464844
    6. 'tected' → logprob: -13.886070251464844
    7. '   ' → logprob: -14.511070251464844
    8. 'icted' → logprob: -14.636070251464844
    9. 'e' → logprob: -14.636070251464844
    10. ']' → logprob: -14.886070251464844

Token 556: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00012308525037951767
    2. '))
' → logprob: -9.125123023986816
    3. ')' → logprob: -11.625123023986816
    4. ')))' → logprob: -13.000123023986816
    5. '                       ' → logprob: -13.750123023986816
    6. ' ))' → logprob: -13.875123023986816
    7. '                   ' → logprob: -14.750123023986816
    8. '               ' → logprob: -16.250123977661133
    9. '       ' → logprob: -16.250123977661133
    10. '           ' → logprob: -17.000123977661133

Token 557: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0036700330674648285
    2. 'else' → logprob: -5.6286702156066895
    3. '                   ' → logprob: -10.253669738769531
    4. ' else' → logprob: -10.503669738769531
    5. 'elif' → logprob: -12.253669738769531
    6. '```' → logprob: -13.628669738769531
    7. '			' → logprob: -15.503669738769531
    8. '	           ' → logprob: -15.503669738769531
    9. '		       ' → logprob: -15.503669738769531
    10. '              ' → logprob: -15.628669738769531

Token 558: ' else' (ID: 1203)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5843865871429443
    2. 'else' (adapté à ' else') → logprob: -0.8343865871429443
    3. ' else' → logprob: -4.834386825561523
    4. 'elif' → logprob: -7.709386825561523
    5. ' elif' → logprob: -11.834386825561523
    6. '	else' → logprob: -13.459386825561523
    7. '           ' → logprob: -13.834386825561523
    8. '                   ' → logprob: -14.834386825561523
    9. '              ' → logprob: -14.959386825561523
    10. '			' → logprob: -15.209386825561523

Token 559: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.06199648603796959
    2. ':
' → logprob: -3.9369964599609375
    3. ' if' → logprob: -4.0619964599609375
    4. ':' → logprob: -4.3119964599609375
    5. '                       ' → logprob: -5.3119964599609375
    6. ' and' → logprob: -6.5619964599609375
    7. '               ' → logprob: -6.6869964599609375
    8. 'if' → logprob: -7.0619964599609375
    9. '   ' → logprob: -7.8119964599609375
    10. ',' → logprob: -8.811996459960938

Token 560: '                   ' (ID: 699)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.30055469274520874
    2. 'if' → logprob: -2.0505547523498535
    3. '                   ' → logprob: -2.1755547523498535
    4. '   ' → logprob: -4.5505547523498535
    5. '                       ' → logprob: -5.3005547523498535
    6. ' not' → logprob: -7.1755547523498535
    7. '               ' → logprob: -7.8005547523498535
    8. '                    ' → logprob: -9.050554275512695
    9. '                           ' → logprob: -9.175554275512695
    10. ' ' → logprob: -9.175554275512695

Token 561: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1314588487148285
    2. ' if' → logprob: -2.1314587593078613
    3. 'not' → logprob: -5.881458759307861
    4. ' not' → logprob: -6.381458759307861
    5. '                   ' → logprob: -10.75645923614502
    6. '                       ' → logprob: -11.75645923614502
    7. '                           ' → logprob: -13.25645923614502
    8. '
' → logprob: -13.63145923614502
    9. '   ' → logprob: -13.63145923614502
    10. ' and' → logprob: -14.50645923614502

Token 562: ' fragile' (ID: 68256)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.009240890853106976
    2. ' if' → logprob: -4.759241104125977
    3. '                   ' → logprob: -7.509241104125977
    4. '                       ' → logprob: -10.259241104125977
    5. '#' → logprob: -11.259241104125977
    6. 'for' → logprob: -11.634241104125977
    7. '   ' → logprob: -11.884241104125977
    8. '```' → logprob: -12.884241104125977
    9. '                           ' → logprob: -13.009241104125977
    10. ' ' → logprob: -13.134241104125977

Token 563: ' cell' (ID: 4206)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.10590597242116928
    2. 'if' → logprob: -2.7309060096740723
    3. '                   ' → logprob: -3.4809060096740723
    4. ' and' → logprob: -6.605906009674072
    5. ' cell' → logprob: -7.105906009674072
    6. ' cells' → logprob: -7.105906009674072
    7. 'and' → logprob: -8.105905532836914
    8. '               ' → logprob: -8.605905532836914
    9. '                    ' → logprob: -8.855905532836914
    10. 'cell' → logprob: -8.980905532836914

Token 564: ':' (ID: 25)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5400539636611938
    2. ' and' → logprob: -1.6650539636611938
    3. ' if' → logprob: -1.7900539636611938
    4. 'and' → logprob: -3.5400538444519043
    5. 'if' → logprob: -4.540053844451904
    6. ':' → logprob: -5.040053844451904
    7. '                       ' → logprob: -5.540053844451904
    8. '               ' → logprob: -5.540053844451904
    9. '                           ' → logprob: -7.040053844451904
    10. ':
' → logprob: -7.165053844451904

Token 565: ' can' (ID: 665)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4293484091758728
    2. ' if' → logprob: -1.0543484687805176
    3. '                   ' → logprob: -8.17934799194336
    4. 'visited' → logprob: -9.17934799194336
    5. '                       ' → logprob: -9.80434799194336
    6. ' not' → logprob: -9.92934799194336
    7. '#' → logprob: -10.30434799194336
    8. 'not' → logprob: -10.42934799194336
    9. ' visited' → logprob: -10.55434799194336
    10. '```' → logprob: -11.30434799194336

Token 566: ' only' (ID: 1606)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.069127656519413
    2. 'only' → logprob: -3.3191275596618652
    3. ' not' → logprob: -4.069127559661865
    4. ' only' → logprob: -5.069127559661865
    5. 'if' → logprob: -5.694127559661865
    6. '                   ' → logprob: -6.444127559661865
    7. 'be' → logprob: -6.944127559661865
    8. 'n't' → logprob: -7.319127559661865
    9. '                       ' → logprob: -9.069128036499023
    10. 'visit' → logprob: -9.444128036499023

Token 567: ' be' (ID: 413)
  Prédit: 'visit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visit' → logprob: -0.3108598589897156
    2. 'step' → logprob: -1.6858599185943604
    3. ' visit' → logprob: -3.8108599185943604
    4. 'be' → logprob: -3.9358599185943604
    5. ' step' → logprob: -4.310859680175781
    6. 'go' → logprob: -4.685859680175781
    7. 'enter' → logprob: -4.935859680175781
    8. 'move' → logprob: -5.185859680175781
    9. ' be' → logprob: -6.185859680175781
    10. 'if' → logprob: -7.185859680175781

Token 568: ' passed' (ID: 10292)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.006801814306527376
    2. ' visited' → logprob: -5.756801605224609
    3. 'ste' → logprob: -6.006801605224609
    4. 'entered' → logprob: -7.631801605224609
    5. ' stepped' → logprob: -8.38180160522461
    6. 'used' → logprob: -8.50680160522461
    7. '```' → logprob: -9.25680160522461
    8. '   ' → logprob: -10.63180160522461
    9. 'passed' → logprob: -10.88180160522461
    10. 'if' → logprob: -11.00680160522461

Token 569: ' once' (ID: 4730)
  Prédit: 'once'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'once' → logprob: -0.10614454001188278
    2. 'if' → logprob: -2.356144428253174
    3. ' once' → logprob: -5.356144428253174
    4. 'through' → logprob: -7.356144428253174
    5. ' if' → logprob: -7.606144428253174
    6. '_once' → logprob: -10.981144905090332
    7. '               ' → logprob: -11.481144905090332
    8. '                   ' → logprob: -11.606144905090332
    9. '   ' → logprob: -11.981144905090332
    10. 'visited' → logprob: -12.481144905090332

Token 570: ' per' (ID: 777)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.002776823937892914
    2. ' if' → logprob: -6.627776622772217
    3. ' and' → logprob: -7.377776622772217
    4. '               ' → logprob: -7.752776622772217
    5. '                       ' → logprob: -8.877777099609375
    6. ',' → logprob: -9.502777099609375
    7. '                    ' → logprob: -10.502777099609375
    8. 'if' → logprob: -10.627777099609375
    9. '           ' → logprob: -10.877777099609375
    10. '   ' → logprob: -11.002777099609375

Token 571: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.05489063635468483
    2. 'state' → logprob: -3.8048906326293945
    3. ' path' → logprob: -3.9298906326293945
    4. 'col' → logprob: -4.6798906326293945
    5. 'visited' → logprob: -6.4298906326293945
    6. 'mask' → logprob: -9.429890632629395
    7. ' state' → logprob: -9.554890632629395
    8. 'cell' → logprob: -9.679890632629395
    9. 'token' → logprob: -9.679890632629395
    10. 'visit' → logprob: -10.179890632629395

Token 572: ',' (ID: 11)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04673676937818527
    2. ' if' → logprob: -3.671736717224121
    3. ' and' → logprob: -4.671736717224121
    4. '               ' → logprob: -5.421736717224121
    5. '                       ' → logprob: -6.296736717224121
    6. ',' → logprob: -7.046736717224121
    7. 'if' → logprob: -7.171736717224121
    8. '
' → logprob: -7.671736717224121
    9. '                    
' → logprob: -7.671736717224121
    10. 'and' → logprob: -7.796736717224121

Token 573: ' so' (ID: 813)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.39055711030960083
    2. 'if' → logprob: -1.390557050704956
    3. '                   ' → logprob: -2.765557050704956
    4. '                       ' → logprob: -4.515557289123535
    5. '                    ' → logprob: -8.890557289123535
    6. '                           ' → logprob: -9.265557289123535
    7. ' and' → logprob: -10.265557289123535
    8. '#' → logprob: -10.390557289123535
    9. '                     ' → logprob: -10.515557289123535
    10. 'and' → logprob: -11.015557289123535

Token 574: ' only' (ID: 1606)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12744195759296417
    2. ' if' → logprob: -2.127441883087158
    3. '                       ' → logprob: -8.127442359924316
    4. 'not' → logprob: -9.377442359924316
    5. '                   ' → logprob: -10.252442359924316
    6. ' not' → logprob: -10.252442359924316
    7. '                           ' → logprob: -10.627442359924316
    8. 'continue' → logprob: -11.502442359924316
    9. 'visited' → logprob: -12.377442359924316
    10. '                        
' → logprob: -12.752442359924316

Token 575: ' un' (ID: 537)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.014736185781657696
    2. ' if' → logprob: -4.264736175537109
    3. '                       ' → logprob: -8.26473617553711
    4. 'visited' → logprob: -9.38973617553711
    5. '                   ' → logprob: -9.63973617553711
    6. '                           ' → logprob: -9.88973617553711
    7. 'continue' → logprob: -10.76473617553711
    8. 'visit' → logprob: -10.88973617553711
    9. 'allow' → logprob: -11.01473617553711
    10. 'pass' → logprob: -11.26473617553711

Token 576: 'visited' (ID: 52453)
  Prédit: 'visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.0007868755492381752
    2. ' visited' → logprob: -7.375786781311035
    3. 'if' → logprob: -9.625786781311035
    4. '                   ' → logprob: -10.125786781311035
    5. '               ' → logprob: -11.000786781311035
    6. '           ' → logprob: -11.750786781311035
    7. '       ' → logprob: -12.125786781311035
    8. '[' → logprob: -12.375786781311035
    9. 'occupied' → logprob: -12.375786781311035
    10. 'used' → logprob: -12.500786781311035

Token 577: ' for' (ID: 395)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.002871803706511855
    2. '                   ' → logprob: -6.377871990203857
    3. '                       ' → logprob: -7.627871990203857
    4. 'if' → logprob: -8.2528715133667
    5. ' if' → logprob: -9.5028715133667
    6. ' [' → logprob: -9.7528715133667
    7. '```' → logprob: -10.0028715133667
    8. '[' → logprob: -10.1278715133667
    9. '[r' → logprob: -10.3778715133667
    10. '               ' → logprob: -10.6278715133667

Token 578: ' that' (ID: 484)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6427115201950073
    2. 'that' → logprob: -1.6427115201950073
    3. 'this' → logprob: -2.267711639404297
    4. '[n' → logprob: -2.642711639404297
    5. 'visited' → logprob: -3.017711639404297
    6. 'the' → logprob: -4.267711639404297
    7. 'each' → logprob: -4.392711639404297
    8. 'nr' → logprob: -5.017711639404297
    9. 'col' → logprob: -5.392711639404297
    10. '(n' → logprob: -5.517711639404297

Token 579: ' state' (ID: 2608)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.03078816831111908
    2. 'n' → logprob: -4.155787944793701
    3. 'mask' → logprob: -5.530787944793701
    4. '[col' → logprob: -5.530787944793701
    5. 'state' → logprob: -6.030787944793701
    6. 'token' → logprob: -6.530787944793701
    7. '[n' → logprob: -7.030787944793701
    8. 'visited' → logprob: -7.405787944793701
    9. 'cell' → logprob: -7.905787944793701
    10. '```' → logprob: -8.15578842163086

Token 580: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.20268958806991577
    2. ' and' → logprob: -2.0776896476745605
    3. '               ' → logprob: -4.0776896476745605
    4. '                       ' → logprob: -4.3276896476745605
    5. ' if' → logprob: -4.3276896476745605
    6. 'and' → logprob: -4.5776896476745605
    7. 'if' → logprob: -6.5776896476745605
    8. '                    ' → logprob: -7.5776896476745605
    9. ':' → logprob: -7.9526896476745605
    10. ')' → logprob: -8.077689170837402

Token 581: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.09782785177230835
    2. '                       ' → logprob: -2.472827911376953
    3. '               ' → logprob: -5.597827911376953
    4. ' if' → logprob: -5.972827911376953
    5. ' and' → logprob: -6.597827911376953
    6. 'if' → logprob: -7.847827911376953
    7. '                    ' → logprob: -8.847827911376953
    8. ':' → logprob: -9.472827911376953
    9. '<|end|>' → logprob: -9.597827911376953
    10. '   ' → logprob: -9.847827911376953

Token 582: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.07896734029054642
    2. ' if' → logprob: -2.578967332839966
    3. '                   ' → logprob: -9.703967094421387
    4. '                       ' → logprob: -11.203967094421387
    5. '               ' → logprob: -14.328967094421387
    6. '   ' → logprob: -14.828967094421387
    7. '                           ' → logprob: -14.953967094421387
    8. '                               ' → logprob: -15.203967094421387
    9. 'If' → logprob: -15.328967094421387
    10. ' ' → logprob: -15.328967094421387

Token 583: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.20142367482185364
    2. ' not' → logprob: -1.7014236450195312
    3. '(not' → logprob: -11.826423645019531
    4. 'visited' → logprob: -13.201423645019531
    5. '
' → logprob: -14.701423645019531
    6. '	not' → logprob: -14.951423645019531
    7. '!' → logprob: -15.576423645019531
    8. 'n' → logprob: -16.70142364501953
    9. '   ' → logprob: -16.82642364501953
    10. 'grid' → logprob: -16.82642364501953

Token 584: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.0003360582049936056
    2. ' visited' → logprob: -8.000335693359375
    3. '   ' → logprob: -15.250335693359375
    4. ' ' → logprob: -17.250335693359375
    5. 'occupied' → logprob: -17.375335693359375
    6. '           ' → logprob: -17.500335693359375
    7. '	' → logprob: -17.500335693359375
    8. '       ' → logprob: -17.625335693359375
    9. '                   ' → logprob: -17.875335693359375
    10. 'visible' → logprob: -18.000335693359375

Token 585: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -2.0100624169572257e-05
    2. 'nr' → logprob: -10.875020027160645
    3. '   ' → logprob: -15.000020027160645
    4. 'n' → logprob: -15.250020027160645
    5. ' [' → logprob: -15.875020027160645
    6. '[' → logprob: -16.25002098083496
    7. '
' → logprob: -16.37502098083496
    8. '(n' → logprob: -16.62502098083496
    9. '	n' → logprob: -17.37502098083496
    10. '  ' → logprob: -17.62502098083496

Token 586: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0001205893131555058
    2. 'nr' → logprob: -9.250120162963867
    3. '[r' → logprob: -11.125120162963867
    4. '[n' → logprob: -12.625120162963867
    5. '[' → logprob: -13.000120162963867
    6. '
' → logprob: -14.250120162963867
    7. ' nr' → logprob: -14.375120162963867
    8. '_nr' → logprob: -14.875120162963867
    9. '```' → logprob: -15.125120162963867
    10. 'р' → logprob: -15.375120162963867

Token 587: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00448246207088232
    2. '[n' → logprob: -5.504482269287109
    3. '[' → logprob: -8.37948226928711
    4. 'r' → logprob: -9.12948226928711
    5. '[r' → logprob: -10.25448226928711
    6. ']' → logprob: -11.50448226928711
    7. ' ][' → logprob: -12.37948226928711
    8. '"][' → logprob: -12.62948226928711
    9. ']][' → logprob: -13.12948226928711
    10. '
' → logprob: -13.25448226928711

Token 588: 'nc' (ID: 24825)
  Prédit: 'nc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -0.0008947860915213823
    2. 'c' → logprob: -7.125895023345947
    3. 'nr' → logprob: -9.750894546508789
    4. '
' → logprob: -11.125894546508789
    5. ' nc' → logprob: -11.625894546508789
    6. '.nc' → logprob: -12.875894546508789
    7. '   ' → logprob: -13.375894546508789
    8. '_nc' → logprob: -14.000894546508789
    9. '```' → logprob: -14.375894546508789
    10. '  ' → logprob: -14.625894546508789

Token 589: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.07040618360042572
    2. '[n' → logprob: -2.820406198501587
    3. '[col' → logprob: -4.945405960083008
    4. '[' → logprob: -7.695405960083008
    5. '[c' → logprob: -8.695405960083008
    6. '[r' → logprob: -9.070405960083008
    7. ']' → logprob: -9.320405960083008
    8. '```' → logprob: -9.570405960083008
    9. '[next' → logprob: -10.070405960083008
    10. ' ' → logprob: -10.070405960083008

Token 590: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.2664456789934775e-06
    2. ' n' → logprob: -13.875000953674316
    3. '   ' → logprob: -16.375001907348633
    4. '
' → logprob: -16.750001907348633
    5. '(n' → logprob: -17.750001907348633
    6. '	n' → logprob: -18.000001907348633
    7. '```' → logprob: -18.500001907348633
    8. ' ' → logprob: -18.625001907348633
    9. '    ' → logprob: -19.125001907348633
    10. '           ' → logprob: -19.375001907348633

Token 591: 'col' (ID: 1798)
  Prédit: 'col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.00012737659562844783
    2. 'n' → logprob: -9.000127792358398
    3. '```' → logprob: -13.625127792358398
    4. '[col' → logprob: -14.750127792358398
    5. 'c' → logprob: -14.875127792358398
    6. '
' → logprob: -15.125127792358398
    7. ' col' → logprob: -15.125127792358398
    8. '_col' → logprob: -15.250127792358398
    9. 'ol' → logprob: -16.3751277923584
    10. '(col' → logprob: -16.3751277923584

Token 592: 'lected' (ID: 2576)
  Prédit: 'lected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lected' → logprob: -0.003181994194164872
    2. 'ected' → logprob: -5.7531819343566895
    3. 'lect' → logprob: -13.378182411193848
    4. 'leted' → logprob: -13.753182411193848
    5. 'icted' → logprob: -14.878182411193848
    6. 'col' → logprob: -15.128182411193848
    7. 'tected' → logprob: -15.253182411193848
    8. 'l' → logprob: -15.753182411193848
    9. 'n' → logprob: -16.00318145751953
    10. '   ' → logprob: -16.12818145751953

Token 593: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.5766260623931885
    2. ']:' → logprob: -0.8266260623931885
    3. ']:
' → logprob: -8.07662582397461
    4. ']' → logprob: -8.45162582397461
    5. ']:

' → logprob: -9.20162582397461
    6. '                   ' → logprob: -10.82662582397461
    7. '                       ' → logprob: -11.32662582397461
    8. ']]:
' → logprob: -12.07662582397461
    9. ']:


' → logprob: -12.57662582397461
    10. ':' → logprob: -12.70162582397461

Token 594: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0014897463843226433
    2. '                           ' → logprob: -7.751489639282227
    3. '                   ' → logprob: -8.126489639282227
    4. '<|end|>' → logprob: -8.251489639282227
    5. '                        
' → logprob: -8.626489639282227
    6. '                               ' → logprob: -8.751489639282227
    7. '               ' → logprob: -10.251489639282227
    8. '```' → logprob: -10.501489639282227
    9. '       ' → logprob: -10.876489639282227
    10. '                        ' → logprob: -11.001489639282227

Token 595: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.5054776668548584
    2. '                           ' → logprob: -1.0054776668548584
    3. '                       ' → logprob: -3.8804776668548584
    4. '                               ' → logprob: -4.7554779052734375
    5. ' visited' → logprob: -6.6304779052734375
    6. '                   ' → logprob: -9.130477905273438
    7. '```' → logprob: -9.505477905273438
    8. '   ' → logprob: -10.255477905273438
    9. '           ' → logprob: -10.255477905273438
    10. '                            ' → logprob: -10.630477905273438

Token 596: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.0280383548888494e-06
    2. ' [' → logprob: -14.250000953674316
    3. '][' → logprob: -16.250001907348633
    4. '[' → logprob: -16.500001907348633
    5. '       ' → logprob: -17.125001907348633
    6. '```' → logprob: -17.125001907348633
    7. '   ' → logprob: -17.500001907348633
    8. '[N' → logprob: -18.000001907348633
    9. '           ' → logprob: -18.125001907348633
    10. '\[' → logprob: -18.125001907348633

Token 597: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0033997902646660805
    2. '[n' → logprob: -6.003399848937988
    3. '[r' → logprob: -7.253399848937988
    4. 'nr' → logprob: -9.128399848937988
    5. '[' → logprob: -9.378399848937988
    6. '][' → logprob: -11.253399848937988
    7. '[c' → logprob: -12.628399848937988
    8. 'n' → logprob: -13.253399848937988
    9. '```' → logprob: -13.753399848937988
    10. 'rc' → logprob: -14.253399848937988

Token 598: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.07908575236797333
    2. '[n' → logprob: -2.5790858268737793
    3. '[' → logprob: -8.704085350036621
    4. ''][' → logprob: -11.579085350036621
    5. '   ' → logprob: -12.204085350036621
    6. '"][' → logprob: -12.954085350036621
    7. ' ][' → logprob: -12.954085350036621
    8. '       ' → logprob: -13.079085350036621
    9. '[][' → logprob: -13.329085350036621
    10. '                   ' → logprob: -13.704085350036621

Token 599: 'nc' (ID: 24825)
  Prédit: 'nc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -1.4259644558478612e-05
    2. 'c' → logprob: -11.875014305114746
    3. ' nc' → logprob: -13.000014305114746
    4. 'nr' → logprob: -13.250014305114746
    5. '[n' → logprob: -14.375014305114746
    6. '_nc' → logprob: -14.625014305114746
    7. '.nc' → logprob: -14.875014305114746
    8. '   ' → logprob: -15.625014305114746
    9. '```' → logprob: -15.625014305114746
    10. 'n' → logprob: -15.625014305114746

Token 600: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.6931929588317871
    2. '[n' → logprob: -0.6931929588317871
    3. '[' → logprob: -11.193193435668945
    4. '"][' → logprob: -11.943193435668945
    5. ']' → logprob: -12.318193435668945
    6. ''][' → logprob: -12.568193435668945
    7. ' ][' → logprob: -12.818193435668945
    8. ')[' → logprob: -13.068193435668945
    9. '```' → logprob: -13.068193435668945
    10. '>[' → logprob: -13.318193435668945

Token 601: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.004400086589157581
    2. 'col' → logprob: -5.504400253295898
    3. 'True' → logprob: -8.879400253295898
    4. '(n' → logprob: -8.879400253295898
    5. '[n' → logprob: -11.254400253295898
    6. 'true' → logprob: -12.129400253295898
    7. 'nc' → logprob: -12.129400253295898
    8. 'nr' → logprob: -12.379400253295898
    9. ' n' → logprob: -12.754400253295898
    10. '[col' → logprob: -13.254400253295898

Token 602: 'col' (ID: 1798)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.010137568227946758
    2. '[n' → logprob: -4.885137557983398
    3. '[c' → logprob: -6.135137557983398
    4. 'col' → logprob: -8.885137557983398
    5. 'r' → logprob: -9.260137557983398
    6. '[' → logprob: -10.260137557983398
    7. '[col' → logprob: -10.635137557983398
    8. '][' → logprob: -11.010137557983398
    9. '[r' → logprob: -11.385137557983398
    10. 'nc' → logprob: -11.885137557983398

Token 603: 'lected' (ID: 2576)
  Prédit: 'lected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lected' → logprob: -0.8099732398986816
    2. 'culated' → logprob: -1.5599732398986816
    3. '[n' → logprob: -2.5599732398986816
    4. 'ated' → logprob: -2.6849732398986816
    5. 'col' → logprob: -3.1849732398986816
    6. 'ected' → logprob: -3.3099732398986816
    7. 'ounted' → logprob: -3.6849732398986816
    8. 'puted' → logprob: -4.059973239898682
    9. 'reated' → logprob: -4.184973239898682
    10. 'uted' → logprob: -4.809973239898682

Token 604: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.023586567491292953
    2. ']=' → logprob: -3.7735865116119385
    3. '=' → logprob: -8.02358627319336
    4. ' =' → logprob: -12.52358627319336
    5. '[n' → logprob: -12.77358627319336
    6. ' ]' → logprob: -13.27358627319336
    7. '                   ' → logprob: -13.39858627319336
    8. '[' → logprob: -13.64858627319336
    9. '                       ' → logprob: -13.77358627319336
    10. '                           ' → logprob: -14.64858627319336

Token 605: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07904213666915894
    2. ' =' → logprob: -2.5790421962738037
    3. '=True' → logprob: -8.829042434692383
    4. '                           ' → logprob: -13.454042434692383
    5. ']=' → logprob: -13.579042434692383
    6. '                       ' → logprob: -13.579042434692383
    7. ']' → logprob: -13.829042434692383
    8. '[n' → logprob: -15.204042434692383
    9. '[' → logprob: -15.579042434692383
    10. 'True' → logprob: -16.454042434692383

Token 606: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -3.547789674485102e-05
    2. ' True' → logprob: -10.250035285949707
    3. 'False' → logprob: -18.125036239624023
    4. '=True' → logprob: -18.375036239624023
    5. '(True' → logprob: -18.500036239624023
    6. '.True' → logprob: -21.125036239624023
    7. 'true' → logprob: -21.500036239624023
    8. '1' → logprob: -21.625036239624023
    9. '[' → logprob: -22.000036239624023
    10. '   ' → logprob: -22.625036239624023

Token 607: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.000981243560090661
    2. '
' → logprob: -8.250981330871582
    3. '                        
' → logprob: -8.375981330871582
    4. '                           ' → logprob: -8.750981330871582
    5. '					' → logprob: -9.000981330871582
    6. '               ' → logprob: -9.750981330871582
    7. '                   ' → logprob: -10.500981330871582
    8. '<|end|>' → logprob: -10.500981330871582
    9. '                        ' → logprob: -11.125981330871582
    10. '           ' → logprob: -11.375981330871582

Token 608: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0015878198901191354
    2. '					' → logprob: -6.751587867736816
    3. '```' → logprob: -8.876587867736816
    4. '                           ' → logprob: -10.001587867736816
    5. '	q' → logprob: -10.126587867736816
    6. 'q' → logprob: -10.251587867736816
    7. '               ' → logprob: -10.626587867736816
    8. ' q' → logprob: -10.876587867736816
    9. '                        
' → logprob: -11.001587867736816
    10. '                        ' → logprob: -11.126587867736816

Token 609: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.00037371189682744443
    2. ' q' → logprob: -8.000373840332031
    3. '                           ' → logprob: -10.875373840332031
    4. '                       ' → logprob: -11.125373840332031
    5. '                               ' → logprob: -12.750373840332031
    6. '	q' → logprob: -14.750373840332031
    7. '```' → logprob: -15.000373840332031
    8. '                   ' → logprob: -15.125373840332031
    9. '
' → logprob: -15.500373840332031
    10. '   ' → logprob: -16.37537384033203

Token 610: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.36574100604048e-06
    2. '.' → logprob: -12.625004768371582
    3. '.extend' → logprob: -14.375004768371582
    4. '                           ' → logprob: -16.250003814697266
    5. '                       ' → logprob: -16.500003814697266
    6. 'append' → logprob: -16.750003814697266
    7. '                               ' → logprob: -16.750003814697266
    8. ' .' → logprob: -16.875003814697266
    9. 'q' → logprob: -17.250003814697266
    10. '.Append' → logprob: -18.000003814697266

Token 611: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0002353640884393826
    2. '(' → logprob: -8.375235557556152
    3. '(n' → logprob: -12.625235557556152
    4. '(((' → logprob: -14.250235557556152
    5. ' ((' → logprob: -14.375235557556152
    6. '(
' → logprob: -15.250235557556152
    7. ' (' → logprob: -17.250234603881836
    8. '(('' → logprob: -18.125234603881836
    9. ')((' → logprob: -18.500234603881836
    10. '```' → logprob: -18.750234603881836

Token 612: 'nr' (ID: 33357)
  Prédit: 'nr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nr' → logprob: -1.6240566083070007e-06
    2. ' nr' → logprob: -13.750001907348633
    3. '(n' → logprob: -14.750001907348633
    4. '_nr' → logprob: -17.750001907348633
    5. '.nr' → logprob: -18.125001907348633
    6. 'n' → logprob: -18.750001907348633
    7. 'Nr' → logprob: -19.250001907348633
    8. '   ' → logprob: -19.625001907348633
    9. '(' → logprob: -20.125001907348633
    10. 'nbr' → logprob: -20.625001907348633

Token 613: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.8398006558418274
    2. 'nr' → logprob: -1.0898005962371826
    3. 'nc' → logprob: -1.7148005962371826
    4. 'n' → logprob: -3.0898005962371826
    5. ',' → logprob: -5.839800834655762
    6. '(n' → logprob: -5.964800834655762
    7. '[n' → logprob: -7.589800834655762
    8. '
' → logprob: -9.589800834655762
    9. '_nr' → logprob: -9.589800834655762
    10. '```' → logprob: -9.714800834655762

Token 614: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0005868718726560473
    2. ',c' → logprob: -7.625586986541748
    3. ',n' → logprob: -9.50058650970459
    4. ',' → logprob: -11.00058650970459
    5. 'r' → logprob: -12.75058650970459
    6. 'nc' → logprob: -13.25058650970459
    7. '(n' → logprob: -14.25058650970459
    8. ')c' → logprob: -14.75058650970459
    9. ')' → logprob: -15.25058650970459
    10. '_c' → logprob: -15.62558650970459

Token 615: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.006641956511884928
    2. '[n' → logprob: -5.381641864776611
    3. ',' → logprob: -6.506641864776611
    4. '(n' → logprob: -8.00664234161377
    5. ',(' → logprob: -8.88164234161377
    6. ',[' → logprob: -10.13164234161377
    7. ' ,' → logprob: -12.75664234161377
    8. ',num' → logprob: -13.25664234161377
    9. '),(' → logprob: -13.50664234161377
    10. '[' → logprob: -14.00664234161377

Token 616: 'col' (ID: 1798)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0002210596576333046
    2. ',n' → logprob: -9.250221252441406
    3. ',c' → logprob: -10.000221252441406
    4. 'col' → logprob: -10.500221252441406
    5. 'r' → logprob: -11.000221252441406
    6. 'nc' → logprob: -11.250221252441406
    7. ',' → logprob: -11.500221252441406
    8. '[n' → logprob: -13.250221252441406
    9. '```' → logprob: -13.500221252441406
    10. '.nc' → logprob: -13.750221252441406

Token 617: 'lected' (ID: 2576)
  Prédit: 'lected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lected' → logprob: -0.010467462241649628
    2. 'ected' → logprob: -4.885467529296875
    3. 'col' → logprob: -6.010467529296875
    4. 'c' → logprob: -9.260467529296875
    5. 'leted' → logprob: -9.385467529296875
    6. '_col' → logprob: -9.885467529296875
    7. 'culated' → logprob: -10.635467529296875
    8. 'l' → logprob: -11.010467529296875
    9. 'icted' → logprob: -11.010467529296875
    10. 'lect' → logprob: -11.260467529296875

Token 618: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0012072573881596327
    2. ')' → logprob: -6.75120735168457
    3. '))
' → logprob: -10.25120735168457
    4. ')))' → logprob: -13.50120735168457
    5. ')
' → logprob: -16.12620735168457
    6. '                   ' → logprob: -16.37620735168457
    7. '               ' → logprob: -16.87620735168457
    8. '                       ' → logprob: -17.00120735168457
    9. '           ' → logprob: -17.25120735168457
    10. ' ))' → logprob: -17.37620735168457

Token 619: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 620: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03685794770717621
    2. 'return' (adapté à ' return') → logprob: -3.411857843399048
    3. '
' → logprob: -6.536858081817627
    4. '    
' → logprob: -7.411858081817627
    5. ' return' → logprob: -7.661858081817627
    6. '	return' → logprob: -7.911858081817627
    7. '```' → logprob: -8.911857604980469
    8. '<|end|>' → logprob: -8.911857604980469
    9. '  
' → logprob: -11.786857604980469
    10. '{return' → logprob: -11.911857604980469

Token 621: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -5.836499985889532e-05
    2. ' False' → logprob: -9.7500581741333
    3. '(False' → logprob: -19.250059127807617
    4. 'false' → logprob: -22.000059127807617
    5. '_false' → logprob: -22.000059127807617
    6. '=False' → logprob: -23.500059127807617
    7. 'True' → logprob: -24.875059127807617
    8. 'FALSE' → logprob: -25.000059127807617
    9. '.False' → logprob: -25.500059127807617
    10. '_FALSE' → logprob: -26.125059127807617

Token 622: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 623: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 624: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.014444597065448761
    2. 'main' → logprob: -4.264444828033447
    3. ' solve' → logprob: -8.389444351196289
    4. 'solve' → logprob: -9.889444351196289
    5. ' solution' → logprob: -14.139444351196289
    6. ' process' → logprob: -14.139444351196289
    7. ' parse' → logprob: -14.639444351196289
    8. ' input' → logprob: -15.264444351196289
    9. 'process' → logprob: -15.764444351196289
    10. '_main' → logprob: -16.01444435119629

Token 625: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0002238013403257355
    2. '():
' → logprob: -8.750224113464355
    3. ' ():' → logprob: -10.625224113464355
    4. '()' → logprob: -10.750224113464355
    5. '(' → logprob: -11.250224113464355
    6. ':' → logprob: -12.250224113464355
    7. '()>' → logprob: -14.625224113464355
    8. '():
' → logprob: -15.000224113464355
    9. '(":' → logprob: -15.875224113464355
    10. 'def' → logprob: -16.12522315979004

Token 626: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0021603757049888372
    2. 'import' → logprob: -6.252160549163818
    3. '```' → logprob: -9.25216007232666
    4. ' import' → logprob: -9.62716007232666
    5. '	import' → logprob: -11.00216007232666
    6. ' readline' → logprob: -11.50216007232666
    7. ' lines' → logprob: -11.87716007232666
    8. 'n' → logprob: -12.00216007232666
    9. '    
' → logprob: -12.00216007232666
    10. '	n' → logprob: -12.62716007232666

Token 627: ' input' (ID: 3422)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.21335116028785706
    2. ' T' → logprob: -2.463351249694824
    3. '   ' → logprob: -2.963351249694824
    4. 't' → logprob: -2.963351249694824
    5. 'import' → logprob: -6.213351249694824
    6. ' t' → logprob: -6.588351249694824
    7. ' import' → logprob: -8.463351249694824
    8. 'n' → logprob: -10.088351249694824
    9. 'input' (adapté à ' input') → logprob: -10.713351249694824
    10. ' ' → logprob: -11.213351249694824

Token 628: '_lines' (ID: 42980)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8248817920684814
    2. '_line' → logprob: -0.8248817920684814
    3. '_data' → logprob: -2.3248817920684814
    4. '_lines' → logprob: -3.8248817920684814
    5. ' =' → logprob: -6.574881553649902
    6. '=' → logprob: -7.199881553649902
    7. '_str' → logprob: -7.574881553649902
    8. '_' → logprob: -7.949881553649902
    9. 'line' → logprob: -8.324881553649902
    10. 'data' → logprob: -8.449881553649902

Token 629: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20398938655853271
    2. '()' → logprob: -2.0789895057678223
    3. ' =' → logprob: -2.8289895057678223
    4. '=[]' → logprob: -8.828989028930664
    5. '   ' → logprob: -9.078989028930664
    6. '()[' → logprob: -10.203989028930664
    7. '[]' → logprob: -10.328989028930664
    8. '().' → logprob: -11.328989028930664
    9. '[' → logprob: -11.828989028930664
    10. '(' → logprob: -11.828989028930664

Token 630: ' stdin' (ID: 75143)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.0031773564405739307
    2. ' stdin' → logprob: -6.503177165985107
    3. '[' → logprob: -7.003177165985107
    4. 'list' → logprob: -7.878177165985107
    5. '(stdin' → logprob: -8.503177642822266
    6. ' [' → logprob: -9.503177642822266
    7. '[]' → logprob: -10.503177642822266
    8. 'sys' → logprob: -11.128177642822266
    9. '.stdin' → logprob: -11.128177642822266
    10. '[int' → logprob: -11.128177642822266

Token 631: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0023344974033534527
    2. '.readlines' → logprob: -6.6273345947265625
    3. '.read' → logprob: -7.1273345947265625
    4. 'read' → logprob: -8.627334594726562
    5. '.' → logprob: -10.627334594726562
    6. ' readline' → logprob: -13.752334594726562
    7. '_read' → logprob: -14.377334594726562
    8. '=' → logprob: -17.002334594726562
    9. 'import' → logprob: -17.252334594726562
    10. '().' → logprob: -17.377334594726562

Token 632: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.005979750771075487
    2. '()' → logprob: -5.130979537963867
    3. 'lines' → logprob: -10.880979537963867
    4. '_lines' → logprob: -11.255979537963867
    5. 'line' → logprob: -11.755979537963867
    6. '_line' → logprob: -11.755979537963867
    7. '(' → logprob: -14.380979537963867
    8. ' ().' → logprob: -14.505979537963867
    9. '())' → logprob: -14.755979537963867
    10. '()
' → logprob: -14.880979537963867

Token 633: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.5832475423812866
    2. 'split' → logprob: -0.8332475423812866
    3. 'decode' → logprob: -5.083247661590576
    4. 'read' → logprob: -6.833247661590576
    5. 'rstrip' → logprob: -12.458247184753418
    6. '(split' → logprob: -15.583247184753418
    7. ' split' → logprob: -16.333248138427734
    8. 'replace' → logprob: -17.333248138427734
    9. 'str' → logprob: -17.333248138427734
    10. '```' → logprob: -17.333248138427734

Token 634: 'lines' (ID: 10105)
  Prédit: 'lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.0013477344764396548
    2. '('\' → logprob: -7.001347541809082
    3. '()' → logprob: -7.751347541809082
    4. '()\' → logprob: -12.251347541809082
    5. '()
' → logprob: -14.126347541809082
    6. '()[' → logprob: -14.876347541809082
    7. 'line' → logprob: -16.0013484954834
    8. '("\' → logprob: -16.8763484954834
    9. '()]' → logprob: -18.0013484954834
    10. '()

' → logprob: -18.0013484954834

Token 635: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.020113656297326088
    2. '()
' → logprob: -4.145113468170166
    3. '   ' → logprob: -5.520113468170166
    4. '()\' → logprob: -11.270113945007324
    5. '()[' → logprob: -11.395113945007324
    6. '())' → logprob: -12.020113945007324
    7. '```' → logprob: -12.145113945007324
    8. 'def' → logprob: -12.145113945007324
    9. '()]' → logprob: -12.645113945007324
    10. ')' → logprob: -12.770113945007324

Token 636: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20821809768676758
    2. 't' → logprob: -1.8332180976867676
    3. 'T' → logprob: -4.208218097686768
    4. ' t' → logprob: -4.583218097686768
    5. ' T' → logprob: -6.333218097686768
    6. 'n' → logprob: -7.583218097686768
    7. 'i' → logprob: -8.33321762084961
    8. 'idx' → logprob: -8.70821762084961
    9. '```' → logprob: -9.33321762084961
    10. 'num' → logprob: -9.33321762084961

Token 637: ' idx' (ID: 14016)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.12912550568580627
    2. 'T' → logprob: -2.1291255950927734
    3. ' t' → logprob: -6.879125595092773
    4. '   ' → logprob: -7.254125595092773
    5. ' T' → logprob: -8.129125595092773
    6. 'idx' (adapté à ' idx') → logprob: -9.004125595092773
    7. 'i' → logprob: -10.879125595092773
    8. 'num' → logprob: -11.879125595092773
    9. '```' → logprob: -12.254125595092773
    10. 'test' → logprob: -12.754125595092773

Token 638: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38714441657066345
    2. ' =' → logprob: -1.1371444463729858
    3. '   ' → logprob: -8.887144088745117
    4. '<|end|>' → logprob: -9.762144088745117
    5. '<|end|>' → logprob: -11.137144088745117
    6. '```' → logprob: -11.637144088745117
    7. '[' → logprob: -11.762144088745117
    8. ' ' → logprob: -12.137144088745117
    9. ' +=' → logprob: -12.387144088745117
    10. '  ' → logprob: -12.512144088745117

Token 639: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011072111316025257
    2. '1' → logprob: -4.511072158813477
    3. ' ' → logprob: -10.636072158813477
    4. '2' → logprob: -16.761072158813477
    5. '   ' → logprob: -16.761072158813477
    6. '=' → logprob: -17.386072158813477
    7. '```' → logprob: -17.886072158813477
    8. 'int' → logprob: -19.761072158813477
    9. '(' → logprob: -20.011072158813477
    10. '`' → logprob: -20.011072158813477

Token 640: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002967320033349097
    2. '1' → logprob: -8.125296592712402
    3. ' ' → logprob: -14.250296592712402
    4. '2' → logprob: -19.00029754638672
    5. '   ' → logprob: -20.12529754638672
    6. '```' → logprob: -20.75029754638672
    7. 'int' → logprob: -21.25029754638672
    8. '[' → logprob: -21.87529754638672
    9. '=' → logprob: -22.00029754638672
    10. '۰' → logprob: -22.43779754638672

Token 641: '
' (ID: 198)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.341020792722702
    2. '   ' → logprob: -1.3410208225250244
    3. ' T' → logprob: -4.216020584106445
    4. 't' → logprob: -4.591020584106445
    5. 'n' → logprob: -6.841020584106445
    6. 'while' → logprob: -7.091020584106445
    7. 'num' → logprob: -9.216020584106445
    8. 'Q' → logprob: -9.341020584106445
    9. '
' → logprob: -9.341020584106445
    10. 'N' → logprob: -9.341020584106445

Token 642: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2772648334503174
    2. 'T' → logprob: -1.5272648334503174
    3. ' T' → logprob: -3.7772648334503174
    4. 't' → logprob: -6.527264595031738
    5. 'Q' → logprob: -8.777264595031738
    6. 'num' → logprob: -8.902264595031738
    7. '```' → logprob: -9.027264595031738
    8. 'while' → logprob: -9.152264595031738
    9. '
' → logprob: -9.902264595031738
    10. ' t' → logprob: -10.152264595031738

Token 643: ' while' (ID: 2049)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.16119395196437836
    2. 't' → logprob: -1.9111939668655396
    3. 'while' (adapté à ' while') → logprob: -7.41119384765625
    4. '   ' → logprob: -8.16119384765625
    5. ' T' → logprob: -10.41119384765625
    6. '
' → logprob: -10.53619384765625
    7. '```' → logprob: -11.78619384765625
    8. ' t' → logprob: -12.03619384765625
    9. 'num' → logprob: -12.03619384765625
    10. ' while' → logprob: -13.41119384765625

Token 644: ' True' (ID: 6432)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.006724129430949688
    2. ' idx' → logprob: -5.0067243576049805
    3. 'True' → logprob: -12.25672435760498
    4. ' True' → logprob: -12.75672435760498
    5. '	idx' → logprob: -15.00672435760498
    6. '   ' → logprob: -15.13172435760498
    7. '(idx' → logprob: -15.38172435760498
    8. ' ' → logprob: -15.88172435760498
    9. '
' → logprob: -16.381723403930664
    10. 'input' → logprob: -16.631723403930664

Token 645: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.180185928940773
    2. '   ' → logprob: -2.8051860332489014
    3. ':
' → logprob: -2.9301860332489014
    4. '       ' → logprob: -3.1801860332489014
    5. ',' → logprob: -5.305185794830322
    6. '<|end|>' → logprob: -6.055185794830322
    7. ' and' → logprob: -7.805185794830322
    8. '<|end|>' → logprob: -8.30518627166748
    9. '=' → logprob: -8.93018627166748
    10. '():
' → logprob: -9.05518627166748

Token 646: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08383341133594513
    2. 'if' → logprob: -2.5838334560394287
    3. ' if' → logprob: -5.33383321762085
    4. '```' → logprob: -9.583833694458008
    5. 'line' → logprob: -10.958833694458008
    6. 'n' → logprob: -11.958833694458008
    7. ' line' → logprob: -12.083833694458008
    8. '	if' → logprob: -12.833833694458008
    9. '       ' → logprob: -12.958833694458008
    10. '   ' → logprob: -14.833833694458008

Token 647: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.04809816554188728
    2. 'line' → logprob: -3.298098087310791
    3. ' if' → logprob: -5.048098087310791
    4. '   ' → logprob: -6.673098087310791
    5. 'N' → logprob: -6.798098087310791
    6. ' line' → logprob: -7.298098087310791
    7. 'n' → logprob: -7.673098087310791
    8. 'L' → logprob: -10.04809856414795
    9. 'l' → logprob: -11.29809856414795
    10. ' ' → logprob: -14.04809856414795

Token 648: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.011062316596508026
    2. ' idx' → logprob: -4.511062145233154
    3. '	idx' → logprob: -12.386062622070312
    4. ' not' → logprob: -12.511062622070312
    5. '_idx' → logprob: -13.136062622070312
    6. 'not' → logprob: -13.761062622070312
    7. ' ' → logprob: -13.886062622070312
    8. '   ' → logprob: -14.136062622070312
    9. '(idx' → logprob: -14.136062622070312
    10. '[idx' → logprob: -14.761062622070312

Token 649: '>=' (ID: 20974)
  Prédit: '>='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.225832998752594
    2. ' >=' → logprob: -1.6008329391479492
    3. ']>=' → logprob: -8.47583293914795
    4. ')>=' → logprob: -8.72583293914795
    5. '==' → logprob: -10.22583293914795
    6. ' ==' → logprob: -12.35083293914795
    7. ')' → logprob: -13.35083293914795
    8. '=' → logprob: -13.60083293914795
    9. '≥' → logprob: -13.72583293914795
    10. ' ' → logprob: -13.85083293914795

Token 650: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -4.320199877838604e-07
    2. ' len' → logprob: -14.875
    3. '(len' → logprob: -17.5
    4. '=len' → logprob: -18.625
    5. '<len' → logprob: -19.625
    6. ',len' → logprob: -20.375
    7. 'length' → logprob: -20.375
    8. '	len' → logprob: -20.875
    9. '
' → logprob: -21.0
    10. '[len' → logprob: -21.625

Token 651: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.3150820732116699
    2. 'input' → logprob: -1.31508207321167
    3. ' input' → logprob: -6.31508207321167
    4. '(' → logprob: -12.065082550048828
    5. '=input' → logprob: -13.440082550048828
    6. ' (' → logprob: -13.940082550048828
    7. ',input' → logprob: -14.065082550048828
    8. '_input' → logprob: -14.440082550048828
    9. '```' → logprob: -15.690082550048828
    10. '<input' → logprob: -16.065082550048828

Token 652: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -3.128163257315464e-07
    2. 'lines' → logprob: -16.125
    3. ')' → logprob: -17.25
    4. '_line' → logprob: -17.625
    5. '_LINES' → logprob: -17.625
    6. 'Lines' → logprob: -18.25
    7. '_' → logprob: -18.375
    8. '(lines' → logprob: -18.75
    9. '_tokens' → logprob: -19.0
    10. ')_' → logprob: -19.5

Token 653: '):' (ID: 3127)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.05587932467460632
    2. ':' → logprob: -3.5558793544769287
    3. ':
' → logprob: -4.80587911605835
    4. ')' → logprob: -5.18087911605835
    5. 'or' → logprob: -5.18087911605835
    6. '):' → logprob: -6.05587911605835
    7. '):
' → logprob: -6.18087911605835
    8. ' and' → logprob: -6.93087911605835
    9. '   ' → logprob: -7.93087911605835
    10. 'and' → logprob: -8.430879592895508

Token 654: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4389106333255768
    2. '   ' → logprob: -1.4389106035232544
    3. '           ' → logprob: -3.188910722732544
    4. 'break' → logprob: -3.188910722732544
    5. ' break' → logprob: -3.563910722732544
    6. ' ' → logprob: -5.688910484313965
    7. '	break' → logprob: -6.563910484313965
    8. 'return' → logprob: -7.313910484313965
    9. '
' → logprob: -8.188910484313965
    10. ' return' → logprob: -8.688910484313965

Token 655: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006176444701850414
    2. '   ' → logprob: -6.006176471710205
    3. '        
' → logprob: -6.881176471710205
    4. '
' → logprob: -7.506176471710205
    5. '  
' → logprob: -7.631176471710205
    6. '```' → logprob: -7.631176471710205
    7. 'line' → logprob: -8.631175994873047
    8. ' line' → logprob: -8.756175994873047
    9. ',' → logprob: -8.756175994873047
    10. '    
' → logprob: -9.131175994873047

Token 656: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0025588995777070522
    2. '   ' → logprob: -6.377558708190918
    3. '        
' → logprob: -7.627558708190918
    4. '```' → logprob: -8.752558708190918
    5. '  
' → logprob: -9.627558708190918
    6. ' ' → logprob: -10.127558708190918
    7. '<|end|>' → logprob: -10.877558708190918
    8. ',' → logprob: -11.002558708190918
    9. '    
' → logprob: -11.002558708190918
    10. '           ' → logprob: -11.627558708190918

Token 657: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.26630595326423645
    2. '   ' → logprob: -2.016305923461914
    3. 'N' → logprob: -3.391305923461914
    4. 'n' → logprob: -3.891305923461914
    5. ' line' → logprob: -4.141305923461914
    6. 'L' → logprob: -4.141305923461914
    7. 'R' → logprob: -5.266305923461914
    8. 'l' → logprob: -6.016305923461914
    9. 'H' → logprob: -6.516305923461914
    10. '       ' → logprob: -6.641305923461914

Token 658: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16209188103675842
    2. ' =' → logprob: -1.912091851234436
    3. '=line' → logprob: -6.2870917320251465
    4. '=
' → logprob: -13.287092208862305
    5. '=index' → logprob: -13.787092208862305
    6. ',' → logprob: -14.662092208862305
    7. 'tokens' → logprob: -14.912092208862305
    8. '   ' → logprob: -15.162092208862305
    9. '```' → logprob: -15.162092208862305
    10. '=input' → logprob: -15.287092208862305

Token 659: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0015023599844425917
    2. ' input' → logprob: -6.501502513885498
    3. '(input' → logprob: -17.626502990722656
    4. '=input' → logprob: -18.876502990722656
    5. 'line' → logprob: -19.751502990722656
    6. ' ' → logprob: -20.126502990722656
    7. '<input' → logprob: -20.751502990722656
    8. '	input' → logprob: -21.501502990722656
    9. 'code' → logprob: -21.876502990722656
    10. 'output' → logprob: -22.251502990722656

Token 660: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.00030566859641112387
    2. '[idx' → logprob: -8.375306129455566
    3. 'lines' → logprob: -10.625306129455566
    4. '_line' → logprob: -11.500306129455566
    5. '[line' → logprob: -11.750306129455566
    6. '```' → logprob: -11.750306129455566
    7. '_tokens' → logprob: -12.000306129455566
    8. 'Lines' → logprob: -12.125306129455566
    9. '[' → logprob: -12.750306129455566
    10. '_LINES' → logprob: -13.250306129455566

Token 661: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -1.3663626305060461e-05
    2. '```' → logprob: -11.50001335144043
    3. 'idx' → logprob: -13.62501335144043
    4. '[' → logprob: -13.87501335144043
    5. '[id' → logprob: -14.62501335144043
    6. '[
' → logprob: -15.37501335144043
    7. '[token' → logprob: -15.62501335144043
    8. '   ' → logprob: -15.75001335144043
    9. '(idx' → logprob: -17.00001335144043
    10. '_idx' → logprob: -17.25001335144043

Token 662: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.03901568427681923
    2. ']' → logprob: -3.789015769958496
    3. ']
' → logprob: -4.164015769958496
    4. '.strip' → logprob: -9.789015769958496
    5. '];' → logprob: -11.289015769958496
    6. '"].' → logprob: -12.039015769958496
    7. ').' → logprob: -12.039015769958496
    8. ''].' → logprob: -12.539015769958496
    9. ']
' → logprob: -12.664015769958496
    10. '       ' → logprob: -13.414015769958496

Token 663: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -1.318681188422488e-05
    2. 'split' → logprob: -11.25001335144043
    3. 'rstrip' → logprob: -16.50001335144043
    4. ' strip' → logprob: -20.87501335144043
    5. '.strip' → logprob: -22.00001335144043
    6. '(strip' → logprob: -23.00001335144043
    7. '_strip' → logprob: -23.25001335144043
    8. '-strip' → logprob: -24.00001335144043
    9. 'str' → logprob: -24.37501335144043
    10. 'stripe' → logprob: -24.62501335144043

Token 664: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.36241596937179565
    2. '()
' → logprob: -1.2374160289764404
    3. 'if' → logprob: -5.737415790557861
    4. '       ' → logprob: -5.987415790557861
    5. '<|end|>' → logprob: -6.612415790557861
    6. '():
' → logprob: -6.862415790557861
    7. '=' → logprob: -6.862415790557861
    8. ' =' → logprob: -7.362415790557861
    9. '()==' → logprob: -7.362415790557861
    10. '```' → logprob: -7.612415790557861

Token 665: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.375630646944046
    2. '       ' → logprob: -1.5006306171417236
    3. ' if' → logprob: -2.7506306171417236
    4. '<|end|>' → logprob: -4.750630855560303
    5. '```' → logprob: -4.875630855560303
    6. '   ' → logprob: -5.000630855560303
    7. '        
' → logprob: -7.250630855560303
    8. '<|end|>' → logprob: -7.375630855560303
    9. '[' → logprob: -7.875630855560303
    10. '           ' → logprob: -8.250630378723145

Token 666: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.20273660123348236
    2. 'idx' → logprob: -1.7027366161346436
    3. ' if' → logprob: -7.3277363777160645
    4. '       ' → logprob: -7.4527363777160645
    5. '   ' → logprob: -10.077736854553223
    6. ' idx' → logprob: -10.952736854553223
    7. '[idx' → logprob: -11.452736854553223
    8. '```' → logprob: -12.327736854553223
    9. '	idx' → logprob: -12.702736854553223
    10. 'token' → logprob: -13.702736854553223

Token 667: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.16596701741218567
    2. 'line' → logprob: -1.9159669876098633
    3. ' not' → logprob: -5.165966987609863
    4. ' line' → logprob: -10.915966987609863
    5. 'len' → logprob: -15.040966987609863
    6. '(line' → logprob: -16.16596794128418
    7. '#line' → logprob: -16.41596794128418
    8. '!' → logprob: -16.66596794128418
    9. '[line' → logprob: -17.29096794128418
    10. '```' → logprob: -17.41596794128418

Token 668: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -2.339278580620885e-06
    2. ' line' → logprob: -13.000001907348633
    3. '(line' → logprob: -21.875001907348633
    4. 'len' → logprob: -22.000001907348633
    5. '	line' → logprob: -22.625001907348633
    6. '
' → logprob: -23.125001907348633
    7. '```' → logprob: -24.125001907348633
    8. '#line' → logprob: -24.625001907348633
    9. 'lines' → logprob: -24.875001907348633
    10. '[line' → logprob: -25.125001907348633

Token 669: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13017316162586212
    2. ':
' → logprob: -2.1301732063293457
    3. ' or' → logprob: -5.880173206329346
    4. 'or' → logprob: -8.005172729492188
    5. ':return' → logprob: -9.630172729492188
    6. '):' → logprob: -11.630172729492188
    7. '):
' → logprob: -12.130172729492188
    8. '.split' → logprob: -12.505172729492188
    9. '<|end|>' → logprob: -12.505172729492188
    10. '():
' → logprob: -12.505172729492188

Token 670: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010954559780657291
    2. ':' → logprob: -5.3859543800354
    3. ':
' → logprob: -6.1359543800354
    4. 'break' → logprob: -6.6359543800354
    5. '```' → logprob: -6.8859543800354
    6. '       ' → logprob: -7.7609543800354
    7. '   ' → logprob: -8.010954856872559
    8. 'idx' → logprob: -8.010954856872559
    9. ' break' → logprob: -9.010954856872559
    10. ' or' → logprob: -9.510954856872559

Token 671: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.13030700385570526
    2. 'break' → logprob: -2.1303069591522217
    3. '           ' → logprob: -6.255307197570801
    4. '       ' → logprob: -7.005307197570801
    5. ' break' → logprob: -8.1303071975708
    6. ' idx' → logprob: -8.3803071975708
    7. '   ' → logprob: -11.5053071975708
    8. '	idx' → logprob: -12.5053071975708
    9. '```' → logprob: -12.6303071975708
    10. '               ' → logprob: -13.3803071975708

Token 672: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -9.317247167928144e-05
    2. ' +=' → logprob: -10.375093460083008
    3. '>=' → logprob: -10.875093460083008
    4. ']+=' → logprob: -11.000093460083008
    5. '==' → logprob: -11.375093460083008
    6. '+' → logprob: -11.625093460083008
    7. '=' → logprob: -12.375093460083008
    8. '++' → logprob: -14.750093460083008
    9. '```' → logprob: -15.000093460083008
    10. '   ' → logprob: -15.875093460083008

Token 673: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '+' → logprob: -19.000001907348633
    4. '```' → logprob: -20.125001907348633
    5. '
' → logprob: -21.375001907348633
    6. '=' → logprob: -22.125001907348633
    7. '<|end|>' → logprob: -22.500001907348633
    8. '۱' → logprob: -23.125001907348633
    9. '１' → logprob: -23.250001907348633
    10. '>' → logprob: -23.250001907348633

Token 674: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00939076766371727
    2. 'continue' → logprob: -4.759390830993652
    3. ' continue' → logprob: -8.634390830993652
    4. '
' → logprob: -8.759390830993652
    5. '```' → logprob: -8.884390830993652
    6. ';' → logprob: -9.259390830993652
    7. '               ' → logprob: -10.134390830993652
    8. '		' → logprob: -10.509390830993652
    9. '	       ' → logprob: -10.759390830993652
    10. '       ' → logprob: -11.009390830993652

Token 675: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0023534069769084454
    2. '```' → logprob: -6.627353191375732
    3. '       ' → logprob: -7.252353191375732
    4. 'continue' → logprob: -8.37735366821289
    5. 'if' → logprob: -10.75235366821289
    6. '               ' → logprob: -11.12735366821289
    7. '   ' → logprob: -11.37735366821289
    8. ' continue' → logprob: -11.87735366821289
    9. '	       ' → logprob: -12.00235366821289
    10. ',' → logprob: -12.25235366821289

Token 676: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.0005059692775830626
    2. ' continue' → logprob: -7.7505059242248535
    3. '           ' → logprob: -9.500506401062012
    4. '	continue' → logprob: -15.625506401062012
    5. 'break' → logprob: -15.875506401062012
    6. 'contin' → logprob: -17.000505447387695
    7. '```' → logprob: -17.000505447387695
    8. 'continu' → logprob: -17.375505447387695
    9. '_continue' → logprob: -17.500505447387695
    10. '       ' → logprob: -18.125505447387695

Token 677: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002641056664288044
    2. 'n' → logprob: -6.752641201019287
    3. 'N' → logprob: -7.627641201019287
    4. '```' → logprob: -8.252640724182129
    5. 'if' → logprob: -8.502640724182129
    6. '
' → logprob: -8.752640724182129
    7. '        
' → logprob: -9.502640724182129
    8. 'token' → logprob: -9.627640724182129
    9. '   ' → logprob: -9.752640724182129
    10. 'r' → logprob: -11.002640724182129

Token 678: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14019164443016052
    2. 'if' → logprob: -2.7651915550231934
    3. ' if' → logprob: -3.7651915550231934
    4. '```' → logprob: -3.8901915550231934
    5. 'n' → logprob: -4.015191555023193
    6. 'idx' → logprob: -5.890191555023193
    7. 'tokens' → logprob: -7.015191555023193
    8. 'N' → logprob: -7.265191555023193
    9. '   ' → logprob: -7.390191555023193
    10. 'token' → logprob: -7.890191555023193

Token 679: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.049058858305215836
    2. 'n' → logprob: -3.0490589141845703
    3. 'if' → logprob: -8.79905891418457
    4. 'parts' → logprob: -9.04905891418457
    5. 'NM' → logprob: -9.29905891418457
    6. '       ' → logprob: -9.92405891418457
    7. '```' → logprob: -10.67405891418457
    8. 'R' → logprob: -11.67405891418457
    9. 'tokens' → logprob: -11.92405891418457
    10. 'r' → logprob: -12.17405891418457

Token 680: ',M' (ID: 54127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0033530937507748604
    2. ',N' → logprob: -6.003353118896484
    3. '=' → logprob: -7.503353118896484
    4. ',M' → logprob: -8.753353118896484
    5. ',n' → logprob: -10.128353118896484
    6. ',num' → logprob: -10.128353118896484
    7. ',line' → logprob: -10.753353118896484
    8. ',int' → logprob: -11.253353118896484
    9. ',C' → logprob: -11.503353118896484
    10. ' ,' → logprob: -12.253353118896484

Token 681: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005264118313789368
    2. ' =' → logprob: -5.2552642822265625
    3. '=int' → logprob: -11.255264282226562
    4. ',' → logprob: -11.380264282226562
    5. '=line' → logprob: -12.380264282226562
    6. '=input' → logprob: -14.630264282226562
    7. '=N' → logprob: -15.005264282226562
    8. '=n' → logprob: -15.880264282226562
    9. '=len' → logprob: -16.255264282226562
    10. ')' → logprob: -16.505264282226562

Token 682: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.029750604182481766
    2. ' map' → logprob: -3.5297505855560303
    3. 'list' → logprob: -16.90475082397461
    4. '(map' → logprob: -17.40475082397461
    5. '[' → logprob: -17.52975082397461
    6. '	map' → logprob: -19.15475082397461
    7. 'tuple' → logprob: -19.65475082397461
    8. '.map' → logprob: -20.02975082397461
    9. 'line' → logprob: -20.15475082397461
    10. '_map' → logprob: -20.65475082397461

Token 683: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.004344071727246046
    2. 'int' → logprob: -5.5043439865112305
    3. '[int' → logprob: -9.37934398651123
    4. '(str' → logprob: -9.87934398651123
    5. '(lambda' → logprob: -9.87934398651123
    6. '(input' → logprob: -10.37934398651123
    7. 'input' → logprob: -10.50434398651123
    8. '(' → logprob: -11.37934398651123
    9. '<int' → logprob: -12.87934398651123
    10. 'lambda' → logprob: -13.25434398651123

Token 684: ',line' (ID: 171132)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.33653390407562256
    2. ',input' → logprob: -2.086534023284912
    3. '(input' → logprob: -2.836534023284912
    4. ',' → logprob: -2.836534023284912
    5. 'line' → logprob: -3.336534023284912
    6. '(line' → logprob: -5.461534023284912
    7. ')' → logprob: -5.961534023284912
    8. ',line' → logprob: -6.461534023284912
    9. ' input' → logprob: -7.961534023284912
    10. ' line' → logprob: -10.211533546447754

Token 685: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.003177475417032838
    2. '.strip' → logprob: -6.628177642822266
    3. ')' → logprob: -7.003177642822266
    4. '().' → logprob: -7.378177642822266
    5. '.readline' → logprob: -8.378177642822266
    6. '.' → logprob: -10.503177642822266
    7. '[idx' → logprob: -10.753177642822266
    8. '   ' → logprob: -11.253177642822266
    9. ' .' → logprob: -12.128177642822266
    10. '.rstrip' → logprob: -12.378177642822266

Token 686: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020401719666551799
    2. '())' → logprob: -9.125204086303711
    3. ')
' → logprob: -9.375204086303711
    4. '))' → logprob: -12.125204086303711
    5. '()' → logprob: -12.750204086303711
    6. ' )' → logprob: -14.500204086303711
    7. ')`' → logprob: -14.625204086303711
    8. '[' → logprob: -15.625204086303711
    9. '')' → logprob: -15.625204086303711
    10. '())
' → logprob: -15.750204086303711

Token 687: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020982667803764343
    2. '```' → logprob: -4.77098274230957
    3. '<|end|>' → logprob: -5.14598274230957
    4. '   ' → logprob: -5.89598274230957
    5. 'if' → logprob: -6.77098274230957
    6. ' if' → logprob: -7.27098274230957
    7. 'idx' → logprob: -7.89598274230957
    8. '[idx' → logprob: -8.14598274230957
    9. '
' → logprob: -8.39598274230957
    10. '<|end|>' → logprob: -8.39598274230957

Token 688: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3159469962120056
    2. '       ' → logprob: -1.4409470558166504
    3. 'idx' → logprob: -3.5659470558166504
    4. ' if' → logprob: -5.19094705581665
    5. '   ' → logprob: -9.190946578979492
    6. '```' → logprob: -9.565946578979492
    7. 'index' → logprob: -9.940946578979492
    8. ' idx' → logprob: -10.440946578979492
    9. '[idx' → logprob: -10.690946578979492
    10. '<|end|>' → logprob: -10.815946578979492

Token 689: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.676292231422849e-05
    2. ' N' → logprob: -11.000017166137695
    3. '(N' → logprob: -17.875017166137695
    4. '(' → logprob: -18.375017166137695
    5. '   ' → logprob: -19.125017166137695
    6. '[N' → logprob: -20.750017166137695
    7. ' ' → logprob: -21.000017166137695
    8. '	N' → logprob: -21.125017166137695
    9. '[' → logprob: -21.375017166137695
    10. 'n' → logprob: -21.625017166137695

Token 690: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.027409056201577187
    2. ' ==' → logprob: -3.652409076690674
    3. '=' → logprob: -7.402409076690674
    4. '<=' → logprob: -7.652409076690674
    5. ' <=' → logprob: -11.777408599853516
    6. '```' → logprob: -12.527408599853516
    7. '===' → logprob: -12.777408599853516
    8. '0' → logprob: -12.902408599853516
    9. '<' → logprob: -13.152408599853516
    10. ']==' → logprob: -13.652408599853516

Token 691: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. 'M' → logprob: -20.625001907348633
    4. '```' → logprob: -20.875001907348633
    5. '
' → logprob: -21.125001907348633
    6. '۰' → logprob: -21.375001907348633
    7. 'Q' → logprob: -21.500001907348633
    8. 'H' → logprob: -22.125001907348633
    9. 'O' → logprob: -22.375001907348633
    10. '=' → logprob: -23.000001907348633

Token 692: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3868793249130249
    2. 'and' → logprob: -1.136879324913025
    3. ' ' → logprob: -12.011878967285156
    4. '	and' → logprob: -13.386878967285156
    5. ' or' → logprob: -15.511878967285156
    6. '   ' → logprob: -15.761878967285156
    7. '0' → logprob: -16.511878967285156
    8. ':' → logprob: -16.886878967285156
    9. '<|end|>' → logprob: -17.011878967285156
    10. ' и' → logprob: -17.136878967285156

Token 693: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.00033546582562848926
    2. ' M' → logprob: -8.000335693359375
    3. '   ' → logprob: -18.625335693359375
    4. '  ' → logprob: -19.000335693359375
    5. ' ' → logprob: -20.000335693359375
    6. '    ' → logprob: -20.750335693359375
    7. '	M' → logprob: -21.125335693359375
    8. '       ' → logprob: -22.500335693359375
    9. ' ' → logprob: -23.375335693359375
    10. '
' → logprob: -23.500335693359375

Token 694: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.004440682008862495
    2. ' ==' → logprob: -5.504440784454346
    3. '=' → logprob: -8.504440307617188
    4. '0' → logprob: -9.254440307617188
    5. ']==' → logprob: -10.629440307617188
    6. ')==' → logprob: -10.629440307617188
    7. '()==' → logprob: -12.504440307617188
    8. '```' → logprob: -12.504440307617188
    9. '===' → logprob: -12.629440307617188
    10. '==
' → logprob: -13.379440307617188

Token 695: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. '۰' → logprob: -20.875030517578125
    4. '<|end|>' → logprob: -21.500030517578125
    5. '```' → logprob: -21.500030517578125
    6. '  ' → logprob: -22.375030517578125
    7. ' ' → logprob: -22.875030517578125
    8. '=' → logprob: -22.875030517578125
    9. '
' → logprob: -23.000030517578125
    10. '   ' → logprob: -23.250030517578125

Token 696: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02098243124783039
    2. ':
' → logprob: -3.895982503890991
    3. ':return' → logprob: -8.27098274230957
    4. '           ' → logprob: -8.77098274230957
    5. '       ' → logprob: -10.89598274230957
    6. '   ' → logprob: -11.77098274230957
    7. ':
' → logprob: -14.02098274230957
    8. ',' → logprob: -14.52098274230957
    9. '<|end|>' → logprob: -15.27098274230957
    10. ' break' → logprob: -15.64598274230957

Token 697: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0034291273914277554
    2. '       ' → logprob: -5.753428936004639
    3. '   ' → logprob: -9.128429412841797
    4. '		' → logprob: -10.628429412841797
    5. '	       ' → logprob: -10.628429412841797
    6. ' break' → logprob: -10.753429412841797
    7. '<|end|>' → logprob: -11.128429412841797
    8. 'break' → logprob: -11.253429412841797
    9. ':' → logprob: -11.378429412841797
    10. ',' → logprob: -11.878429412841797

Token 698: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.00997516792267561
    2. 'return' → logprob: -5.009974956512451
    3. ' break' → logprob: -5.759974956512451
    4. '       ' → logprob: -10.00997543334961
    5. '           ' → logprob: -10.00997543334961
    6. '	break' → logprob: -11.50997543334961
    7. ' return' → logprob: -12.75997543334961
    8. '_break' → logprob: -14.75997543334961
    9. '   ' → logprob: -16.25997543334961
    10. '               ' → logprob: -16.50997543334961

Token 699: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00021843716967850924
    2. '   ' → logprob: -9.250218391418457
    3. '<|end|>' → logprob: -9.250218391418457
    4. '```' → logprob: -11.500218391418457
    5. '        
' → logprob: -12.500218391418457
    6. '<|end|>' → logprob: -12.875218391418457
    7. '
' → logprob: -13.000218391418457
    8. ',' → logprob: -13.125218391418457
    9. '           ' → logprob: -13.250218391418457
    10. 'idx' → logprob: -13.625218391418457

Token 700: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003606104583013803
    2. '   ' → logprob: -8.375360488891602
    3. '<|end|>' → logprob: -9.375360488891602
    4. 'idx' → logprob: -10.750360488891602
    5. '```' → logprob: -11.375360488891602
    6. '        
' → logprob: -12.500360488891602
    7. '           ' → logprob: -13.250360488891602
    8. '<|end|>' → logprob: -13.625360488891602
    9. 'index' → logprob: -14.125360488891602
    10. '
' → logprob: -14.375360488891602

Token 701: ' idx' (ID: 14016)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.09628709405660629
    2. '       ' → logprob: -2.4712870121002197
    3. 'idx' (adapté à ' idx') → logprob: -4.971287250518799
    4. '   ' → logprob: -8.22128677368164
    5. ' grid' → logprob: -10.47128677368164
    6. '```' → logprob: -10.47128677368164
    7. 'index' → logprob: -10.72128677368164
    8. '	grid' → logprob: -11.47128677368164
    9. '_grid' → logprob: -12.47128677368164
    10. 'rows' → logprob: -12.84628677368164

Token 702: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0011741555063053966
    2. ' +=' → logprob: -6.751173973083496
    3. ']+=' → logprob: -13.126173973083496
    4. '+' → logprob: -13.376173973083496
    5. '```' → logprob: -15.251173973083496
    6. '   ' → logprob: -16.501174926757812
    7. '+="' → logprob: -17.126174926757812
    8. '=' → logprob: -17.501174926757812
    9. '+=(' → logprob: -17.501174926757812
    10. '+='' → logprob: -17.626174926757812

Token 703: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.875000953674316
    3. '```' → logprob: -16.75
    4. 'N' → logprob: -17.5
    5. '0' → logprob: -18.0
    6. 'line' → logprob: -18.5
    7. '+' → logprob: -18.75
    8. '
' → logprob: -18.875
    9. '-' → logprob: -19.3125
    10. '<|end|>' → logprob: -19.5625

Token 704: '
' (ID: 198)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.13009224832057953
    2. '       ' → logprob: -2.130092144012451
    3. ' grid' → logprob: -6.755092144012451
    4. '	grid' → logprob: -6.755092144012451
    5. '   ' → logprob: -8.25509262084961
    6. 'rows' → logprob: -8.38009262084961
    7. 'lines' → logprob: -9.50509262084961
    8. '```' → logprob: -9.50509262084961
    9. '<|end|>' → logprob: -9.88009262084961
    10. 'cells' → logprob: -10.38009262084961

Token 705: '       ' (ID: 309)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.10725466907024384
    2. '       ' → logprob: -2.60725474357605
    3. '   ' → logprob: -3.60725474357605
    4. ' grid' → logprob: -7.732254505157471
    5. '```' → logprob: -8.357254981994629
    6. '	grid' → logprob: -9.357254981994629
    7. 'rows' → logprob: -9.732254981994629
    8. '``' → logprob: -12.357254981994629
    9. 'lines' → logprob: -12.482254981994629
    10. '_grid' → logprob: -12.982254981994629

Token 706: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' (adapté à ' grid') → logprob: -3.4121114822482923e-06
    2. ' grid' → logprob: -13.625003814697266
    3. '       ' → logprob: -13.750003814697266
    4. '```' → logprob: -14.375003814697266
    5. '   ' → logprob: -14.500003814697266
    6. 'rows' → logprob: -17.625003814697266
    7. 'graph' → logprob: -17.750003814697266
    8. '	grid' → logprob: -18.375003814697266
    9. '``' → logprob: -19.250003814697266
    10. '           ' → logprob: -20.125003814697266

Token 707: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005262930411845446
    2. ' =' → logprob: -5.255262851715088
    3. '=[]' → logprob: -10.630263328552246
    4. '   ' → logprob: -13.130263328552246
    5. '=line' → logprob: -14.130263328552246
    6. '=[' → logprob: -14.255263328552246
    7. '=[]
' → logprob: -14.630263328552246
    8. '=
' → logprob: -14.755263328552246
    9. '=

' → logprob: -14.880263328552246
    10. '=list' → logprob: -17.63026237487793

Token 708: ' []
' (ID: 8911)
  Prédit: '[input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[input' → logprob: -0.004144288133829832
    2. 'input' → logprob: -5.504144191741943
    3. '[' → logprob: -10.004144668579102
    4. '[]
' → logprob: -11.004144668579102
    5. ' input' → logprob: -13.254144668579102
    6. '[]' → logprob: -13.754144668579102
    7. ' [' → logprob: -14.004144668579102
    8. '(input' → logprob: -17.1291446685791
    9. '[
' → logprob: -17.1291446685791
    10. '[]

' → logprob: -17.5041446685791

Token 709: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22675922513008118
    2. ' for' → logprob: -2.226759195327759
    3. '       ' → logprob: -2.476759195327759
    4. '	for' → logprob: -5.226759433746338
    5. 'while' → logprob: -5.851759433746338
    6. '   ' → logprob: -6.226759433746338
    7. '<|end|>' → logprob: -7.851759433746338
    8. '```' → logprob: -8.85175895690918
    9. '	while' → logprob: -9.35175895690918
    10. ' while' → logprob: -10.35175895690918

Token 710: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0054475548677146435
    2. ' for' → logprob: -5.7554473876953125
    3. 'while' → logprob: -6.6304473876953125
    4. '       ' → logprob: -7.5054473876953125
    5. '   ' → logprob: -8.380447387695312
    6. '	for' → logprob: -9.255447387695312
    7. '```' → logprob: -9.630447387695312
    8. '
' → logprob: -12.755447387695312
    9. ' while' → logprob: -14.130447387695312
    10. '	while' → logprob: -14.380447387695312

Token 711: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00044425477972254157
    2. '_i' → logprob: -7.750444412231445
    3. '_in' → logprob: -11.875444412231445
    4. 'i' → logprob: -13.125444412231445
    5. '_range' → logprob: -13.250444412231445
    6. ' _' → logprob: -14.000444412231445
    7. '_row' → logprob: -14.375444412231445
    8. '_line' → logprob: -15.375444412231445
    9. '_next' → logprob: -15.625444412231445
    10. '_rows' → logprob: -16.000444412231445

Token 712: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1294596642255783
    2. 'in' → logprob: -2.1294596195220947
    3. 'range' → logprob: -6.379459857940674
    4. '_' → logprob: -7.129459857940674
    5. ' range' → logprob: -10.754459381103516
    6. ' ' → logprob: -12.254459381103516
    7. '0' → logprob: -13.504459381103516
    8. 'i' → logprob: -13.629459381103516
    9. '  ' → logprob: -14.254459381103516
    10. '_in' → logprob: -14.879459381103516

Token 713: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00020354038861114532
    2. ' range' → logprob: -8.500203132629395
    3. '_' → logprob: -17.87520408630371
    4. '_range' → logprob: -19.12520408630371
    5. 'in' → logprob: -19.25020408630371
    6. '	range' → logprob: -20.75020408630371
    7. '(range' → logprob: -20.87520408630371
    8. '
' → logprob: -21.87520408630371
    9. ' in' → logprob: -21.87520408630371
    10. '0' → logprob: -22.62520408630371

Token 714: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.011055718176066875
    2. '(N' → logprob: -4.511055946350098
    3. ' N' → logprob: -11.886055946350098
    4. '_N' → logprob: -14.761055946350098
    5. '0' → logprob: -15.011055946350098
    6. 'range' → logprob: -15.761055946350098
    7. 'idx' → logprob: -15.761055946350098
    8. '(' → logprob: -16.51105499267578
    9. ' ' → logprob: -16.76105499267578
    10. '	N' → logprob: -17.38605499267578

Token 715: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.41655856370925903
    2. '):' → logprob: -1.1665585041046143
    3. '       ' → logprob: -4.416558742523193
    4. '   ' → logprob: -4.791558742523193
    5. '           ' → logprob: -5.791558742523193
    6. ':' → logprob: -5.916558742523193
    7. ':
' → logprob: -6.291558742523193
    8. '():
' → logprob: -7.791558742523193
    9. '):
' → logprob: -8.041558265686035
    10. '```' → logprob: -9.166558265686035

Token 716: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14106807112693787
    2. '       ' → logprob: -2.3910679817199707
    3. '   ' → logprob: -4.016067981719971
    4. 'grid' → logprob: -5.266067981719971
    5. 'line' → logprob: -5.391067981719971
    6. '```' → logprob: -5.641067981719971
    7. ' line' → logprob: -5.766067981719971
    8. '	       ' → logprob: -6.016067981719971
    9. ' lines' → logprob: -7.266067981719971
    10. '<|end|>' → logprob: -7.766067981719971

Token 717: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' (adapté à ' grid') → logprob: -0.0032239374704658985
    2. ' grid' → logprob: -5.753223896026611
    3. 'line' → logprob: -10.25322437286377
    4. '	grid' → logprob: -12.37822437286377
    5. '           ' → logprob: -12.62822437286377
    6. 'row' → logprob: -13.00322437286377
    7. ' line' → logprob: -15.25322437286377
    8. '.grid' → logprob: -15.25322437286377
    9. '   ' → logprob: -15.37822437286377
    10. '(grid' → logprob: -15.75322437286377

Token 718: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.0325924449716695e-05
    2. '.' → logprob: -12.00001049041748
    3. 'append' → logprob: -13.00001049041748
    4. '=' → logprob: -14.50001049041748
    5. '.readline' → logprob: -15.12501049041748
    6. ' .' → logprob: -15.37501049041748
    7. '+=' → logprob: -15.62501049041748
    8. '_line' → logprob: -15.87501049041748
    9. '.extend' → logprob: -16.000009536743164
    10. '.app' → logprob: -16.125009536743164

Token 719: '(list' (ID: 13116)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.009681366384029388
    2. 'input' → logprob: -4.759681224822998
    3. '(list' → logprob: -7.009681224822998
    4. 'list' → logprob: -8.759681701660156
    5. '(stdin' → logprob: -12.759681701660156
    6. '(' → logprob: -13.134681701660156
    7. ' input' → logprob: -14.009681701660156
    8. '=input' → logprob: -15.009681701660156
    9. ',input' → logprob: -16.509681701660156
    10. '[input' → logprob: -17.509681701660156

Token 720: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.10030943155288696
    2. '(stdin' → logprob: -2.350309371948242
    3. 'input' → logprob: -9.600309371948242
    4. 'stdin' → logprob: -10.350309371948242
    5. '(st' → logprob: -13.100309371948242
    6. '(' → logprob: -14.725309371948242
    7. '.stdin' → logprob: -15.100309371948242
    8. ',input' → logprob: -16.475309371948242
    9. '=input' → logprob: -16.600309371948242
    10. '((' → logprob: -17.350309371948242

Token 721: '_lines' (ID: 42980)
  Prédit: '()['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()[' → logprob: -0.30282801389694214
    2. '_lines' → logprob: -1.552828073501587
    3. '().' → logprob: -3.552828073501587
    4. '()))' → logprob: -4.927827835083008
    5. '())' → logprob: -5.177827835083008
    6. '()' → logprob: -5.427827835083008
    7. '[idx' → logprob: -5.927827835083008
    8. '()))
' → logprob: -8.677827835083008
    9. '())[' → logprob: -8.677827835083008
    10. '()]' → logprob: -9.177827835083008

Token 722: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0001593195047462359
    2. 'idx' → logprob: -8.75015926361084
    3. '(idx' → logprob: -14.37515926361084
    4. '   ' → logprob: -16.625160217285156
    5. ' idx' → logprob: -17.000160217285156
    6. '[id' → logprob: -17.875160217285156
    7. '[index' → logprob: -18.000160217285156
    8. '	idx' → logprob: -18.125160217285156
    9. '[ind' → logprob: -18.625160217285156
    10. '```' → logprob: -18.750160217285156

Token 723: ']))
' (ID: 24801)
  Prédit: '].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.4344208240509033
    2. ']))' → logprob: -1.0594208240509033
    3. ']))
' → logprob: -5.809420585632324
    4. '[idx' → logprob: -6.809420585632324
    5. '.strip' → logprob: -6.934420585632324
    6. ']' → logprob: -8.684420585632324
    7. 'idx' → logprob: -8.684420585632324
    8. '])' → logprob: -9.184420585632324
    9. ']))
' → logprob: -9.809420585632324
    10. '(idx' → logprob: -10.434420585632324

Token 724: '           ' (ID: 352)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.4410146474838257
    2. '       ' → logprob: -1.0660146474838257
    3. '           ' → logprob: -4.566014766693115
    4. '[idx' → logprob: -7.691014766693115
    5. '	idx' → logprob: -7.691014766693115
    6. ' idx' → logprob: -7.816014766693115
    7. '```' → logprob: -8.441014289855957
    8. '   ' → logprob: -9.441014289855957
    9. '_idx' → logprob: -9.566014289855957
    10. '(idx' → logprob: -10.691014289855957

Token 725: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -8.566264295950532e-05
    2. ' idx' → logprob: -10.500085830688477
    3. '       ' → logprob: -10.750085830688477
    4. '           ' → logprob: -11.250085830688477
    5. '	idx' → logprob: -11.375085830688477
    6. '```' → logprob: -12.375085830688477
    7. '_idx' → logprob: -12.625085830688477
    8. 'index' → logprob: -13.250085830688477
    9. '[idx' → logprob: -14.125085830688477
    10. '
' → logprob: -14.625085830688477

Token 726: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -1.5451681974809617e-05
    2. '+' → logprob: -12.250015258789062
    3. '```' → logprob: -12.250015258789062
    4. ' +=' → logprob: -12.500015258789062
    5. ']+=' → logprob: -13.750015258789062
    6. '++' → logprob: -14.125015258789062
    7. '=' → logprob: -15.250015258789062
    8. '+="' → logprob: -16.875015258789062
    9. '+++' → logprob: -17.625015258789062
    10. '+='' → logprob: -17.625015258789062

Token 727: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.25
    3. '```' → logprob: -20.0
    4. '+' → logprob: -20.5
    5. '=' → logprob: -22.875
    6. '>' → logprob: -22.875
    7. '
' → logprob: -23.125
    8. '(' → logprob: -23.125
    9. '１' → logprob: -23.375
    10. '0' → logprob: -23.625

Token 728: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031791120767593384
    2. '```' → logprob: -4.5317912101745605
    3. ' result' → logprob: -4.9067912101745605
    4. 'result' → logprob: -4.9067912101745605
    5. ' if' → logprob: -6.5317912101745605
    6. '   ' → logprob: -6.6567912101745605
    7. '<|end|>' → logprob: -7.0317912101745605
    8. '
' → logprob: -7.2817912101745605
    9. '        
' → logprob: -8.031790733337402
    10. 'if' → logprob: -8.281790733337402

Token 729: '       ' (ID: 309)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.31821155548095703
    2. '       ' → logprob: -1.693211555480957
    3. 'if' → logprob: -2.568211555480957
    4. 'res' → logprob: -5.568211555480957
    5. ' result' → logprob: -5.818211555480957
    6. ' if' → logprob: -5.943211555480957
    7. '```' → logprob: -6.818211555480957
    8. 'rest' → logprob: -8.318211555480957
    9. 'found' → logprob: -8.443211555480957
    10. 'r' → logprob: -8.443211555480957

Token 730: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2048795521259308
    2. 'result' → logprob: -1.9548795223236084
    3. 'print' → logprob: -3.4548795223236084
    4. 'res' → logprob: -4.4548797607421875
    5. '```' → logprob: -8.079879760742188
    6. 'answer' → logprob: -9.579879760742188
    7. 'found' → logprob: -10.704879760742188
    8. ' if' → logprob: -11.079879760742188
    9. 'ans' → logprob: -11.204879760742188
    10. '       ' → logprob: -11.829879760742188

Token 731: ' Ensure' (ID: 43810)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.12633457779884338
    2. 'if' → logprob: -2.3763346672058105
    3. 'print' → logprob: -4.3763346672058105
    4. 'res' → logprob: -4.3763346672058105
    5. '       ' → logprob: -8.501334190368652
    6. 'answer' → logprob: -8.876334190368652
    7. ' if' → logprob: -9.126334190368652
    8. ' result' → logprob: -9.376334190368652
    9. 'ans' → logprob: -9.751334190368652
    10. '```' → logprob: -11.126334190368652

Token 732: ' four' (ID: 4242)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2684677243232727
    2. 'result' → logprob: -1.518467664718628
    3. ' result' → logprob: -5.393467903137207
    4. 'all' → logprob: -5.768467903137207
    5. ' print' → logprob: -5.893467903137207
    6. '       ' → logprob: -6.893467903137207
    7. '   ' → logprob: -7.018467903137207
    8. 'tre' → logprob: -7.143467903137207
    9. '```' → logprob: -7.643467903137207
    10. ' all' → logprob: -8.018467903137207

Token 733: ' corner' (ID: 14194)
  Prédit: 'corn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'corn' → logprob: -0.2586134970188141
    2. ' corners' → logprob: -1.5086134672164917
    3. 'corner' → logprob: -5.758613586425781
    4. 'tre' → logprob: -6.383613586425781
    5. 'entr' → logprob: -7.258613586425781
    6. '#' → logprob: -7.758613586425781
    7. 's' → logprob: -8.758613586425781
    8. ' entrance' → logprob: -9.508613586425781
    9. 'for' → logprob: -9.758613586425781
    10. ' entrances' → logprob: -9.758613586425781

Token 734: ' rooms' (ID: 11348)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08199793845415115
    2. 'if' → logprob: -2.706997871398926
    3. 'cells' → logprob: -4.831997871398926
    4. ' if' → logprob: -6.206997871398926
    5. ' cells' → logprob: -7.456997871398926
    6. '#' → logprob: -8.081997871398926
    7. '   ' → logprob: -8.206997871398926
    8. 'positions' → logprob: -8.206997871398926
    9. '<|end|>' → logprob: -8.956997871398926
    10. 'assert' → logprob: -9.206997871398926

Token 735: ' are' (ID: 553)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03377640247344971
    2. '   ' → logprob: -4.40877628326416
    3. '<|end|>' → logprob: -4.90877628326416
    4. 'if' → logprob: -5.15877628326416
    5. 'valid' → logprob: -5.78377628326416
    6. ' if' → logprob: -6.15877628326416
    7. '```' → logprob: -7.65877628326416
    8. 'for' → logprob: -7.90877628326416
    9. ' is' → logprob: -8.15877628326416
    10. ' for' → logprob: -8.15877628326416

Token 736: ' enter' (ID: 5747)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.03949581831693649
    2. '.' → logprob: -4.414495944976807
    3. 'flo' → logprob: -4.539495944976807
    4. 'open' → logprob: -5.539495944976807
    5. 'empty' → logprob: -6.039495944976807
    6. 'pass' → logprob: -6.289495944976807
    7. 'floor' → logprob: -6.414495944976807
    8. 'walls' → logprob: -6.414495944976807
    9. 'accessible' → logprob: -7.289495944976807
    10. ' '.'' → logprob: -7.289495944976807

Token 737: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -0.0006023610476404428
    2. '```' → logprob: -8.125602722167969
    3. 'ables' → logprob: -9.375602722167969
    4. 'ing' → logprob: -10.000602722167969
    5. 'y' → logprob: -10.125602722167969
    6. 'ble' → logprob: -10.375602722167969
    7. '()' → logprob: -11.125602722167969
    8. 'ance' → logprob: -11.125602722167969
    9. '.' → logprob: -11.500602722167969
    10. 't' → logprob: -11.750602722167969

Token 738: ' per' (ID: 777)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011592724360525608
    2. 'if' → logprob: -4.886592864990234
    3. 'for' → logprob: -6.261592864990234
    4. ' if' → logprob: -6.886592864990234
    5. ' for' → logprob: -7.761592864990234
    6. 'valid' → logprob: -8.011592864990234
    7. '<|end|>' → logprob: -9.136592864990234
    8. ',' → logprob: -9.386592864990234
    9. '   ' → logprob: -10.386592864990234
    10. ' valid' → logprob: -11.511592864990234

Token 739: ' problem' (ID: 4792)
  Prédit: 'spec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spec' → logprob: -0.8087232708930969
    2. 'problem' → logprob: -0.8087232708930969
    3. 'code' → logprob: -3.183723211288452
    4. 'the' → logprob: -3.433723211288452
    5. 'condition' → logprob: -4.933723449707031
    6. ' code' → logprob: -5.558723449707031
    7. ' problem' → logprob: -5.933723449707031
    8. ' specification' → logprob: -5.933723449707031
    9. 'contract' → logprob: -6.183723449707031
    10. 'conditions' → logprob: -6.183723449707031

Token 740: ' statement' (ID: 9710)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03438635542988777
    2. 'if' → logprob: -4.409386157989502
    3. 'for' → logprob: -4.784386157989502
    4. ' for' → logprob: -5.284386157989502
    5. ' if' → logprob: -5.284386157989502
    6. 'valid' → logprob: -6.659386157989502
    7. '<|end|>' → logprob: -7.034386157989502
    8. ',' → logprob: -7.784386157989502
    9. ' valid' → logprob: -8.78438663482666
    10. '   ' → logprob: -9.40938663482666

Token 741: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7083243131637573
    2. 'for' → logprob: -1.3333243131637573
    3. '       ' → logprob: -2.083324432373047
    4. 'valid' → logprob: -2.583324432373047
    5. 'assert' → logprob: -3.583324432373047
    6. ' for' → logprob: -4.958324432373047
    7. ' if' → logprob: -5.458324432373047
    8. '
' → logprob: -6.958324432373047
    9. '```' → logprob: -7.083324432373047
    10. 'all' → logprob: -7.458324432373047

Token 742: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0024297633208334446
    2. 'if' → logprob: -6.877429962158203
    3. 'for' → logprob: -7.502429962158203
    4. ' if' → logprob: -7.877429962158203
    5. ' for' → logprob: -8.127429962158203
    6. '<|end|>' → logprob: -9.627429962158203
    7. '   ' → logprob: -10.502429962158203
    8. '```' → logprob: -10.752429962158203
    9. 'assert' → logprob: -11.002429962158203
    10. ',' → logprob: -11.377429962158203

Token 743: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20240452885627747
    2. 'for' → logprob: -1.827404499053955
    3. 'assert' → logprob: -4.702404499053955
    4. 'valid' → logprob: -4.702404499053955
    5. 'result' → logprob: -6.577404499053955
    6. '       ' → logprob: -7.202404499053955
    7. 'can' → logprob: -7.452404499053955
    8. 'all' → logprob: -7.452404499053955
    9. 'possible' → logprob: -8.327404975891113
    10. '   ' → logprob: -8.577404975891113

Token 744: ' run' (ID: 2461)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5096356868743896
    2. 'for' → logprob: -1.5096356868743896
    3. 'result' → logprob: -2.3846356868743896
    4. 'assert' → logprob: -2.6346356868743896
    5. 'print' → logprob: -5.009635925292969
    6. 'valid' → logprob: -6.259635925292969
    7. ' for' → logprob: -6.634635925292969
    8. 'answer' → logprob: -7.009635925292969
    9. ' if' → logprob: -7.134635925292969
    10. '       ' → logprob: -7.134635925292969

Token 745: ' logic' (ID: 18485)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.07836129516363144
    2. ' result' → logprob: -4.078361511230469
    3. 'res' → logprob: -4.203361511230469
    4. 'print' → logprob: -4.828361511230469
    5. '```' → logprob: -4.953361511230469
    6. 'can' → logprob: -5.078361511230469
    7. 'if' → logprob: -5.078361511230469
    8. '       ' → logprob: -5.078361511230469
    9. '
' → logprob: -5.203361511230469
    10. '   ' → logprob: -6.203361511230469

Token 746: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0036661101039499044
    2. 'result' → logprob: -6.378665924072266
    3. ' result' → logprob: -7.003665924072266
    4. '```' → logprob: -7.753665924072266
    5. '   ' → logprob: -8.378665924072266
    6. 'if' → logprob: -9.128665924072266
    7. ' if' → logprob: -9.378665924072266
    8. 'print' → logprob: -9.503665924072266
    9. '<|end|>' → logprob: -10.378665924072266
    10. ',' → logprob: -10.503665924072266

Token 747: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5978938937187195
    2. 'result' → logprob: -1.0978939533233643
    3. 'if' → logprob: -2.5978939533233643
    4. 'print' → logprob: -3.4728939533233643
    5. ' result' → logprob: -5.597893714904785
    6. '```' → logprob: -5.597893714904785
    7. '   ' → logprob: -6.722893714904785
    8. ' if' → logprob: -6.847893714904785
    9. 'res' → logprob: -6.972893714904785
    10. ' print' → logprob: -8.972893714904785

Token 748: ' print' (ID: 2123)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6482041478157043
    2. 'print' (adapté à ' print') → logprob: -1.1482040882110596
    3. 'if' → logprob: -1.8982040882110596
    4. 'res' → logprob: -5.523204326629639
    5. '       ' → logprob: -5.648204326629639
    6. ' result' → logprob: -7.023204326629639
    7. ' if' → logprob: -7.523204326629639
    8. 'answer' → logprob: -7.773204326629639
    9. ' print' → logprob: -8.14820384979248
    10. 'ans' → logprob: -9.27320384979248

Token 749: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.12968795001506805
    2. '(can' → logprob: -2.254688024520874
    3. '('' → logprob: -4.254687786102295
    4. '(' → logprob: -7.004687786102295
    5. 'can' → logprob: -7.254687786102295
    6. '"' → logprob: -7.254687786102295
    7. '(True' → logprob: -9.004688262939453
    8. '(int' → logprob: -10.129688262939453
    9. '(
' → logprob: -11.379688262939453
    10. ''' → logprob: -12.004688262939453

Token 750: 'YES' (ID: 31958)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.574808657169342
    2. 'YES' → logprob: -1.3248085975646973
    3. 'Yes' → logprob: -1.8248085975646973
    4. 'yes' → logprob: -5.324808597564697
    5. 'possible' → logprob: -6.574808597564697
    6. ''' → logprob: -6.824808597564697
    7. 'Possible' → logprob: -7.199808597564697
    8. '1' → logprob: -7.324808597564697
    9. '("' → logprob: -7.699808597564697
    10. 'can' → logprob: -8.074809074401855

Token 751: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00017874970217235386
    2. 'if' → logprob: -9.000178337097168
    3. ' if' → logprob: -10.125178337097168
    4. '")' → logprob: -11.250178337097168
    5. '```' → logprob: -13.375178337097168
    6. ''' → logprob: -14.875178337097168
    7. ' "' → logprob: -16.125179290771484
    8. '\n' → logprob: -17.375179290771484
    9. '""' → logprob: -17.375179290771484
    10. '`' → logprob: -17.500179290771484

Token 752: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4830658733844757
    2. ' if' → logprob: -0.9830658435821533
    3. 'if' → logprob: -4.733066082000732
    4. '()' → logprob: -9.358065605163574
    5. '   ' → logprob: -10.608065605163574
    6. '")' → logprob: -11.108065605163574
    7. ' )' → logprob: -12.108065605163574
    8. '"' → logprob: -12.233065605163574
    9. '```' → logprob: -12.483065605163574
    10. ',' → logprob: -13.108065605163574

Token 753: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.048587825149297714
    2. ' can' → logprob: -3.0485877990722656
    3. '(can' → logprob: -14.673587799072266
    4. '	can' → logprob: -16.548587799072266
    5. '_can' → logprob: -17.548587799072266
    6. '.can' → logprob: -18.548587799072266
    7. ')' → logprob: -20.923587799072266
    8. 'Can' → logprob: -22.298587799072266
    9. '-can' → logprob: -22.798587799072266
    10. '   ' → logprob: -23.298587799072266

Token 754: '_collect' (ID: 169999)
  Prédit: '_collect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_collect' → logprob: -4.036524842376821e-05
    2. 'collect' → logprob: -10.250040054321289
    3. '_can' → logprob: -13.000040054321289
    4. '_col' → logprob: -14.000040054321289
    5. 'Collect' → logprob: -14.125040054321289
    6. 'can' → logprob: -14.500040054321289
    7. '_collection' → logprob: -15.625040054321289
    8. '_continue' → logprob: -16.37504005432129
    9. '_cons' → logprob: -16.62504005432129
    10. ')' → logprob: -17.00004005432129

Token 755: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -0.00014013137842994183
    2. 'and' → logprob: -8.875140190124512
    3. '```' → logprob: -16.625139236450195
    4. '(grid' → logprob: -17.125139236450195
    5. '_AND' → logprob: -17.125139236450195
    6. 'return' → logprob: -17.250139236450195
    7. '   ' → logprob: -17.375139236450195
    8. 'ands' → logprob: -17.375139236450195
    9. 'andr' → logprob: -17.500139236450195
    10. ' and' → logprob: -17.625139236450195

Token 756: '_return' (ID: 29287)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.009894796647131443
    2. '_return' → logprob: -4.634894847869873
    3. 'eturn' → logprob: -10.509894371032715
    4. 'and' → logprob: -10.509894371032715
    5. 'can' → logprob: -10.759894371032715
    6. 'collect' → logprob: -10.884894371032715
    7. ' return' → logprob: -10.884894371032715
    8. 'turn' → logprob: -11.384894371032715
    9. '_and' → logprob: -12.634894371032715
    10. '(return' → logprob: -12.884894371032715

Token 757: '(grid' (ID: 51818)
  Prédit: '(grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(grid' → logprob: -1.6240566083070007e-06
    2. ' (' → logprob: -14.000001907348633
    3. '(' → logprob: -14.750001907348633
    4. 'grid' → logprob: -15.125001907348633
    5. ')' → logprob: -16.875001907348633
    6. '(
' → logprob: -18.875001907348633
    7. ')(' → logprob: -19.000001907348633
    8. ' grid' → logprob: -19.000001907348633
    9. '```' → logprob: -19.000001907348633
    10. '(Grid' → logprob: -19.250001907348633

Token 758: ',N' (ID: 49539)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16048762202262878
    2. ',N' → logprob: -1.9104876518249512
    3. ' ,' → logprob: -8.910487174987793
    4. '(N' → logprob: -9.660487174987793
    5. ',n' → logprob: -9.785487174987793
    6. ',M' → logprob: -12.910487174987793
    7. '(grid' → logprob: -13.660487174987793
    8. ',(' → logprob: -14.035487174987793
    9. '(' → logprob: -14.410487174987793
    10. '   ' → logprob: -14.785487174987793

Token 759: ',M' (ID: 54127)
  Prédit: ',M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',M' → logprob: -0.01417174469679594
    2. ',' → logprob: -4.264171600341797
    3. ' ,' → logprob: -12.014171600341797
    4. 'M' → logprob: -13.389171600341797
    5. ',
' → logprob: -15.639171600341797
    6. ',m' → logprob: -15.764171600341797
    7. '   ' → logprob: -15.764171600341797
    8. ',S' → logprob: -16.889171600341797
    9. ',N' → logprob: -17.139171600341797
    10. '       ' → logprob: -17.264171600341797

Token 760: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011129142512800172
    2. ' else' → logprob: -9.75011157989502
    3. 'else' → logprob: -10.12511157989502
    4. ' )' → logprob: -12.37511157989502
    5. ',' → logprob: -12.50011157989502
    6. '")' → logprob: -13.12511157989502
    7. '   ' → logprob: -13.62511157989502
    8. '))' → logprob: -14.37511157989502
    9. ')==' → logprob: -14.50011157989502
    10. ')
' → logprob: -15.62511157989502

Token 761: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.16855955123901367
    2. 'else' → logprob: -1.9185595512390137
    3. ')' → logprob: -4.793559551239014
    4. '```' → logprob: -12.168560028076172
    5. ' )' → logprob: -12.543560028076172
    6. '==' → logprob: -13.043560028076172
    7. '	else' → logprob: -13.668560028076172
    8. '       ' → logprob: -14.293560028076172
    9. '           ' → logprob: -14.418560028076172
    10. '        ' → logprob: -14.668560028076172

Token 762: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00026205103495158255
    2. ' "' → logprob: -8.250262260437012
    3. ')' → logprob: -15.250262260437012
    4. '   ' → logprob: -15.500262260437012
    5. ''' → logprob: -16.250261306762695
    6. '"No' → logprob: -16.875261306762695
    7. '       ' → logprob: -17.125261306762695
    8. '("' → logprob: -17.375261306762695
    9. '     ' → logprob: -17.375261306762695
    10. '
' → logprob: -17.750261306762695

Token 763: 'NO' (ID: 14695)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3869144320487976
    2. 'NO' → logprob: -1.1369144916534424
    3. '"No' → logprob: -10.136914253234863
    4. ''' → logprob: -13.261914253234863
    5. '   ' → logprob: -14.261914253234863
    6. ' NO' → logprob: -15.261914253234863
    7. '```' → logprob: -15.261914253234863
    8. '
' → logprob: -15.511914253234863
    9. 'print' → logprob: -15.636914253234863
    10. '_NO' → logprob: -15.886914253234863

Token 764: '")

' (ID: 10822)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.156432643532753
    2. '")' → logprob: -2.406432628631592
    3. ')")' → logprob: -2.906432628631592
    4. '}")' → logprob: -13.78143310546875
    5. ')"' → logprob: -14.28143310546875
    6. '())' → logprob: -14.28143310546875
    7. ')">' → logprob: -14.90643310546875
    8. ')")
' → logprob: -14.90643310546875
    9. '))' → logprob: -15.03143310546875
    10. '`)' → logprob: -15.53143310546875

Token 765: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0024087082128971815
    2. '```' → logprob: -6.252408504486084
    3. '<|end|>' → logprob: -8.502408981323242
    4. ' if' → logprob: -8.877408981323242
    5. 'main' → logprob: -9.127408981323242
    6. '#' → logprob: -11.252408981323242
    7. '
' → logprob: -11.877408981323242
    8. 'for' → logprob: -12.252408981323242
    9. '\' → logprob: -14.127408981323242
    10. '``' → logprob: -14.627408981323242

Token 766: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.1269284337759018
    2. '__' → logprob: -2.1269283294677734
    3. '_name' → logprob: -15.501928329467773
    4. 'name' → logprob: -16.626928329467773
    5. '___' → logprob: -16.876928329467773
    6. '_' → logprob: -17.251928329467773
    7. '/__' → logprob: -17.751928329467773
    8. ' _' → logprob: -18.251928329467773
    9. ' ' → logprob: -18.626928329467773
    10. ' name' → logprob: -18.876928329467773

Token 767: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.07786638289690018
    2. '==' → logprob: -3.077866315841675
    3. '=="' → logprob: -4.452866554260254
    4. ' ==' → logprob: -4.577866554260254
    5. 'if' → logprob: -5.577866554260254
    6. 'name' → logprob: -6.952866554260254
    7. '=='' → logprob: -7.202866554260254
    8. '```' → logprob: -7.452866554260254
    9. '[' → logprob: -8.077866554260254
    10. ' __' → logprob: -8.827866554260254

Token 768: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0038370173424482346
    2. '==' → logprob: -5.7538371086120605
    3. '=="' → logprob: -8.253836631774902
    4. ' ==' → logprob: -8.378836631774902
    5. '__.__' → logprob: -9.253836631774902
    6. '=='' → logprob: -10.878836631774902
    7. '__["' → logprob: -11.503836631774902
    8. '__[' → logprob: -11.753836631774902
    9. '__":
' → logprob: -12.253836631774902
    10. '___' → logprob: -12.253836631774902

Token 769: '=="' (ID: 24027)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.23183244466781616
    2. '==' → logprob: -1.856832504272461
    3. '=="' → logprob: -3.231832504272461
    4. ' ==' → logprob: -4.981832504272461
    5. '=='' → logprob: -5.481832504272461
    6. '__.__' → logprob: -9.731832504272461
    7. '```' → logprob: -9.981832504272461
    8. '"' → logprob: -10.606832504272461
    9. '__":
' → logprob: -11.481832504272461
    10. '===' → logprob: -11.606832504272461

Token 770: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.005575117189437151
    2. '"' → logprob: -5.505575180053711
    3. ''' → logprob: -6.505575180053711
    4. ' "__' → logprob: -15.380575180053711
    5. ' __' → logprob: -15.630575180053711
    6. 'main' → logprob: -17.13057518005371
    7. '___' → logprob: -17.13057518005371
    8. '/__' → logprob: -18.88057518005371
    9. ' '__' → logprob: -19.00557518005371
    10. '```' → logprob: -19.25557518005371

Token 771: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -4.56102097814437e-05
    2. 'name' → logprob: -10.000045776367188
    3. '_main' → logprob: -16.000045776367188
    4. ' main' → logprob: -17.250045776367188
    5. 'built' → logprob: -18.750045776367188
    6. '__' → logprob: -18.875045776367188
    7. '_MAIN' → logprob: -19.500045776367188
    8. '-main' → logprob: -19.750045776367188
    9. 'builtin' → logprob: -20.125045776367188
    10. 'MAIN' → logprob: -20.875045776367188

Token 772: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3872566819190979
    2. '__":
' → logprob: -1.1372566223144531
    3. '__':
' → logprob: -8.137256622314453
    4. '```' → logprob: -10.887256622314453
    5. '__["' → logprob: -10.887256622314453
    6. '__:' → logprob: -11.012256622314453
    7. '__.' → logprob: -11.262256622314453
    8. '__.__' → logprob: -12.137256622314453
    9. '__
' → logprob: -12.262256622314453
    10. '__
' → logprob: -12.762256622314453

Token 773: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.005349855404347181
    2. '   ' → logprob: -5.255349636077881
    3. ' main' → logprob: -9.505350112915039
    4. '	main' → logprob: -10.255350112915039
    5. '```' → logprob: -12.630350112915039
    6. '_main' → logprob: -13.005350112915039
    7. '(main' → logprob: -15.380350112915039
    8. '    
' → logprob: -15.505350112915039
    9. 'run' → logprob: -16.63035011291504
    10. '__' → logprob: -17.00535011291504

Token 774: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -16.5
    3. '   ' → logprob: -19.0
    4. '	main' → logprob: -19.25
    5. 'import' → logprob: -20.0
    6. '(main' → logprob: -24.375
    7. '.main' → logprob: -24.5
    8. '_main' → logprob: -24.75
    9. '    
' → logprob: -26.5
    10. '
' → logprob: -26.5

Token 775: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 773
Tokens correctement prédits (1ère position, stricte): 318
Tokens correctement prédits (1ère position, avec adaptation): 341
Tokens correctement prédits (top 10): 592
Précision stricte (1ère position): 41.14%
Précision adaptée (1ère position): 44.11%
Précision (top 10): 76.58%
================================================================================
