================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:05:30
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import heapq

def solve(n, balloons):
    # balloons: list of (p, t), sorted by t
    # States in priority queue: (distance_sum, time, idx, pos, carrying)
    # carrying: tuple sorted balloon indices currently carried
    house = 0
    max_carry = 3
    INF = 10**15
    # dp: (idx, pos, carrying) -> (time, distance)
    # idx: next balloon to catch
    # carrying: a tuple of balloons currently carried (sorted)
    from collections import defaultdict
    dp = {}

    # initial state: idx=0, pos=0, carrying=()
    # distance = 0, time = 0
    hq = []
    heapq.heappush(hq, (0, 0, 0, 0, ()))  # distance_sum, time, idx, pos, carrying

    def move_time(dist, k):
        return dist*(k+1)

    while hq:
        dist_sum, time, idx, pos, carrying = heapq.heappop(hq)
        key = (idx, pos, carrying)
        if key in dp:
            # If found with better or equal distance, skip
            if dp[key][0] <= time and dp[key][1] <= dist_sum:
                continue
        dp[key] = (time, dist_sum)

        if idx == n and len(carrying) == 0:
            # caught all and emptied carrying
            return "OK", dist_sum

        # Option 1: if carrying > 0, try to go to house and drop all (no cost, no time)
        if len(carrying) > 0:
            if (idx, house, ()) not in dp or dp[(idx, house, ())][0] > time or dp[(idx, house, ())][1] > dist_sum + abs(pos - house):
                new_dist = dist_sum + abs(pos - house)
                new_time = time + move_time(abs(pos - house), len(carrying))
                heapq.heappush(hq, (new_dist, new_time, idx, house, ()))

        # Option 2: try to catch next balloon if any
        if idx < n:
            p, t = balloons[idx]
            # Try to move from pos to p with current carrying
            travel_dist = abs(p - pos)
            travel_time = move_time(travel_dist, len(carrying))
            arrive_time = time + travel_time
            # We must arrive <= t else balloon bursts
            if arrive_time <= t:
                # catch balloon (adding idx to carrying)
                # check not exceed max carrying
                if len(carrying) < max_carry:
                    new_carry = tuple(sorted(carrying + (idx,)))
                    new_dist = dist_sum + travel_dist
                    new_time = arrive_time
                    key2 = (idx + 1, p, new_carry)
                    if key2 not in dp or dp[key2][0] > new_time or dp[key2][1] > new_dist:
                        heapq.heappush(hq, (new_dist, new_time, idx + 1, p, new_carry))
                else:
                    # cannot catch balloon now, must drop first (already covered with option 1)
                    pass
            else:
                # cannot reach balloon in time -> NG idx+1
                return "NG", idx + 1

    # If queue exhausted without returning OK or NG during iteration, means NG earliest balloon not caught
    return "NG", 1

def main():
    input=sys.stdin.readline
    while True:
        line = input()
        if not line:
            break
        n = int(line)
        if n == 0:
            break
        balloons = []
        for _ in range(n):
            p,t = map(int,input().split())
            balloons.append((p,t))
        res = solve(n, balloons)
        print(res[0], res[1])

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.43662330508232117
    2. '.' → logprob: -1.1866233348846436
    3. 'import' → logprob: -4.0616230964660645
    4. '\' → logprob: -4.4366230964660645
    5. 'newline' → logprob: -5.1866230964660645
    6. '<|end|>' → logprob: -5.4366230964660645
    7. '
' → logprob: -5.9366230964660645
    8. '```' → logprob: -6.4366230964660645
    9. '' → logprob: -7.0616230964660645
    10. '<|end|>' → logprob: -7.1866230964660645

Token 4: ' heap' (ID: 37237)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.0001617035741219297
    2. 'os' → logprob: -8.750162124633789
    3. ' math' → logprob: -13.625162124633789
    4. ' re' → logprob: -14.000162124633789
    5. '"os' → logprob: -14.500162124633789
    6. ' json' → logprob: -15.000162124633789
    7. '_os' → logprob: -16.62516212463379
    8. ' ' → logprob: -16.75016212463379
    9. ' io' → logprob: -16.87516212463379
    10. '	os' → logprob: -17.12516212463379

Token 5: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -3.666993507067673e-05
    2. '.' → logprob: -10.375036239624023
    3. '#' → logprob: -13.625036239624023
    4. '_' → logprob: -14.375036239624023
    5. 'ify' → logprob: -14.750036239624023
    6. ')' → logprob: -15.250036239624023
    7. 's' → logprob: -15.250036239624023
    8. ',' → logprob: -15.250036239624023
    9. 'u' → logprob: -15.375036239624023
    10. '

' → logprob: -15.375036239624023

Token 6: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.849431037902832
    2. '
' → logprob: -1.724431037902832
    3. '\n' → logprob: -1.724431037902832
    4. '

' → logprob: -2.724431037902832
    5. '\' → logprob: -2.974431037902832
    6. '<|end|>' → logprob: -3.599431037902832
    7. 'import' → logprob: -3.724431037902832
    8. '' → logprob: -4.224431037902832
    9. '```' → logprob: -4.224431037902832
    10. '<|end|>' → logprob: -5.224431037902832

Token 7: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.17665749788284302
    2. '\' → logprob: -3.3016574382781982
    3. '
' → logprob: -3.5516574382781982
    4. '\n' → logprob: -3.8016574382781982
    5. 'def' → logprob: -4.051657676696777
    6. '```' → logprob: -4.301657676696777
    7. '' → logprob: -4.426657676696777
    8. 'import' → logprob: -4.551657676696777
    9. 'from' → logprob: -4.926657676696777
    10. ',' → logprob: -5.801657676696777

Token 8: ' solve' (ID: 17722)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0006970656104385853
    2. ' find' → logprob: -8.750697135925293
    3. ' a' → logprob: -8.875697135925293
    4. ' space' → logprob: -9.875697135925293
    5. ' shortest' → logprob: -10.000697135925293
    6. ' heap' → logprob: -10.125697135925293
    7. ' merge' → logprob: -10.500697135925293
    8. '_' → logprob: -10.875697135925293
    9. ' process' → logprob: -10.875697135925293
    10. ' dfs' → logprob: -11.000697135925293

Token 9: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002760176081210375
    2. '_' → logprob: -6.252760410308838
    3. '```' → logprob: -7.627760410308838
    4. '():' → logprob: -9.50275993347168
    5. ' (' → logprob: -10.12775993347168
    6. '(
' → logprob: -10.37775993347168
    7. '(:' → logprob: -10.62775993347168
    8. '("("' → logprob: -10.75275993347168
    9. ':' → logprob: -11.25275993347168
    10. '(_' → logprob: -11.50275993347168

Token 10: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004668880254030228
    2. '):' → logprob: -5.504668712615967
    3. ')' → logprob: -7.504668712615967
    4. ' ,' → logprob: -10.504669189453125
    5. ':' → logprob: -12.379669189453125
    6. ' ):' → logprob: -13.379669189453125
    7. ',int' → logprob: -13.879669189453125
    8. ',
' → logprob: -13.879669189453125
    9. ',n' → logprob: -14.004669189453125
    10. ',a' → logprob: -15.129669189453125

Token 11: ' balloons' (ID: 114791)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -1.465575098991394
    2. ' edges' → logprob: -1.590575098991394
    3. ' arr' → logprob: -1.840575098991394
    4. 'k' → logprob: -3.0905752182006836
    5. 'edges' → logprob: -3.2155752182006836
    6. ' k' → logprob: -3.5905752182006836
    7. 'm' → logprob: -3.5905752182006836
    8. ' data' → logprob: -3.7155752182006836
    9. ' m' → logprob: -3.8405752182006836
    10. 'a' → logprob: -3.9655752182006836

Token 12: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009580777026712894
    2. ',' → logprob: -4.884580612182617
    3. ')' → logprob: -6.509580612182617
    4. '[' → logprob: -8.009580612182617
    5. ':' → logprob: -9.634580612182617
    6. ' ):' → logprob: -10.634580612182617
    7. '):
' → logprob: -11.134580612182617
    8. '```' → logprob: -11.384580612182617
    9. '[]):' → logprob: -11.634580612182617
    10. 's' → logprob: -12.759580612182617

Token 13: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3949054479598999
    2. '   ' → logprob: -1.1449054479599
    3. '```' → logprob: -5.8949055671691895
    4. '):' → logprob: -6.0199055671691895
    5. ':
' → logprob: -6.5199055671691895
    6. ' :' → logprob: -7.7699055671691895
    7. '    ' → logprob: -8.144905090332031
    8. ' ' → logprob: -8.644905090332031
    9. '`:' → logprob: -9.644905090332031
    10. '    
' → logprob: -9.644905090332031

Token 14: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16846607625484467
    2. ' 
' → logprob: -2.793466091156006
    3. '    ' → logprob: -3.043466091156006
    4. '    
' → logprob: -3.918466091156006
    5. ' ' → logprob: -4.918466091156006
    6. '     
' → logprob: -5.293466091156006
    7. '```' → logprob: -6.043466091156006
    8. ' heap' → logprob: -6.418466091156006
    9. 'heap' → logprob: -6.793466091156006
    10. ' max' → logprob: -7.293466091156006

Token 15: ' balloons' (ID: 114791)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0772230625152588
    2. ' heap' → logprob: -1.8272230625152588
    3. ' dp' → logprob: -2.702223062515259
    4. ' pq' → logprob: -2.952223062515259
    5. ' pass' → logprob: -3.077223062515259
    6. ' #' → logprob: -3.202223062515259
    7. ' space' → logprob: -3.577223062515259
    8. ' max' → logprob: -3.577223062515259
    9. ' count' → logprob: -3.702223062515259
    10. ' freq' → logprob: -4.20222282409668

Token 16: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4549177587032318
    2. '.sort' → logprob: -1.3299177885055542
    3. '=' → logprob: -2.8299176692962646
    4. '_heap' → logprob: -4.704917907714844
    5. '_sorted' → logprob: -4.954917907714844
    6. ')' → logprob: -4.954917907714844
    7. '.' → logprob: -5.079917907714844
    8. '   ' → logprob: -5.579917907714844
    9. ',' → logprob: -6.579917907714844
    10. '.pop' → logprob: -7.079917907714844

Token 17: ' list' (ID: 1562)
  Prédit: ' List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.07249165326356888
    2. ' list' → logprob: -3.0724916458129883
    3. 'List' → logprob: -3.9474916458129883
    4. 'list' → logprob: -6.322491645812988
    5. ' [(' → logprob: -6.447491645812988
    6. ' a' → logprob: -8.197491645812988
    7. '[List' → logprob: -8.197491645812988
    8. ' [' → logprob: -8.447491645812988
    9. '[(' → logprob: -9.947491645812988
    10. '[' → logprob: -10.072491645812988

Token 18: ' of' (ID: 328)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.9833391308784485
    2. '[' → logprob: -1.6083390712738037
    3. '<|end|>' → logprob: -1.6083390712738037
    4. ' of' → logprob: -1.7333390712738037
    5. ')' → logprob: -3.4833390712738037
    6. '<|end|>' → logprob: -5.108339309692383
    7. ',' → logprob: -5.858339309692383
    8. '<int' → logprob: -6.233339309692383
    9. '   ' → logprob: -6.358339309692383
    10. ' ' → logprob: -6.733339309692383

Token 19: ' (' (ID: 350)
  Prédit: ' tuples'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tuples' → logprob: -0.0881197527050972
    2. ' (' → logprob: -3.2131197452545166
    3. '(int' → logprob: -3.3381197452545166
    4. ' integers' → logprob: -5.838119983673096
    5. ' int' → logprob: -5.963119983673096
    6. 'int' → logprob: -6.713119983673096
    7. 'tu' → logprob: -6.838119983673096
    8. ' tuple' → logprob: -8.338119506835938
    9. ' pairs' → logprob: -8.588119506835938
    10. 'tuple' → logprob: -9.713119506835938

Token 20: 'p' (ID: 79)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.1693029403686523
    2. 'height' → logprob: -1.7943029403686523
    3. ' int' → logprob: -2.5443029403686523
    4. ' height' → logprob: -2.6693029403686523
    5. 'color' → logprob: -3.0443029403686523
    6. 'distance' → logprob: -3.4193029403686523
    7. 'cost' → logprob: -3.4193029403686523
    8. ' )' → logprob: -3.9193029403686523
    9. 'x' → logprob: -4.169302940368652
    10. '   ' → logprob: -4.294302940368652

Token 21: ',' (ID: 11)
  Prédit: 'riority'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'riority' → logprob: -0.5504593849182129
    2. ',' → logprob: -1.050459384918213
    3. 'rice' → logprob: -3.175459384918213
    4. ')' → logprob: -4.050459384918213
    5. 'r' → logprob: -4.800459384918213
    6. ',)' → logprob: -6.925459384918213
    7. 'ower' → logprob: -7.425459384918213
    8. 'oint' → logprob: -7.675459384918213
    9. 'rices' → logprob: -7.675459384918213
    10. ',r' → logprob: -7.800459384918213

Token 22: ' t' (ID: 260)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.2182132005691528
    2. 'd' → logprob: -1.9682132005691528
    3. 't' → logprob: -1.9682132005691528
    4. 'b' → logprob: -2.5932130813598633
    5. 'a' → logprob: -2.7182130813598633
    6. 'q' → logprob: -3.0932130813598633
    7. 's' → logprob: -3.3432130813598633
    8. 'h' → logprob: -3.7182130813598633
    9. 'r' → logprob: -3.7182130813598633
    10. 'l' → logprob: -3.7182130813598633

Token 23: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007580502424389124
    2. ',' → logprob: -7.250758171081543
    3. ' )' → logprob: -10.875758171081543
    4. 'ime' → logprob: -12.750758171081543
    5. '),' → logprob: -13.000758171081543
    6. ')p' → logprob: -13.000758171081543
    7. 'p' → logprob: -13.250758171081543
    8. 'a' → logprob: -13.500758171081543
    9. ',)' → logprob: -13.625758171081543
    10. 'imes' → logprob: -13.750758171081543

Token 24: ' sorted' (ID: 20099)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.791803002357483
    2. ' ' → logprob: -1.916803002357483
    3. ' p' → logprob: -2.2918028831481934
    4. '<|end|>' → logprob: -2.2918028831481934
    5. ' key' → logprob: -2.5418028831481934
    6. ',' → logprob: -2.6668028831481934
    7. '    ' → logprob: -3.1668028831481934
    8. 'p' → logprob: -3.6668028831481934
    9. ' ,' → logprob: -3.9168028831481934
    10. ' tokens' → logprob: -3.9168028831481934

Token 25: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.3631055951118469
    2. ',' → logprob: -2.113105535507202
    3. 'by' → logprob: -2.988105535507202
    4. '   ' → logprob: -3.113105535507202
    5. '```' → logprob: -3.738105535507202
    6. ')' → logprob: -4.113105773925781
    7. '(' → logprob: -4.613105773925781
    8. 'def' → logprob: -4.988105773925781
    9. ' ' → logprob: -5.363105773925781
    10. '=' → logprob: -5.613105773925781

Token 26: ' t' (ID: 260)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.22129277884960175
    2. ' t' → logprob: -2.221292734146118
    3. 'p' → logprob: -2.596292734146118
    4. 't' → logprob: -4.346292972564697
    5. ' ' → logprob: -6.971292972564697
    6. ')' → logprob: -7.846292972564697
    7. ' the' → logprob: -8.471292495727539
    8. 'time' → logprob: -8.471292495727539
    9. ' time' → logprob: -8.596292495727539
    10. ' )' → logprob: -9.596292495727539

Token 27: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07000601291656494
    2. '
' → logprob: -2.9450058937072754
    3. ':' → logprob: -5.945005893707275
    4. ',' → logprob: -6.070005893707275
    5. '\n' → logprob: -6.070005893707275
    6. '    
' → logprob: -6.195005893707275
    7. '```' → logprob: -6.820005893707275
    8. 'def' → logprob: -7.570005893707275
    9. '\' → logprob: -7.570005893707275
    10. ' if' → logprob: -7.820005893707275

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23483090102672577
    2. ':' → logprob: -2.109830856323242
    3. '
' → logprob: -3.109830856323242
    4. '    
' → logprob: -3.484830856323242
    5. '```' → logprob: -5.609830856323242
    6. ',' → logprob: -6.234830856323242
    7. ':
' → logprob: -6.609830856323242
    8. '\n' → logprob: -7.109830856323242
    9. ' 
' → logprob: -7.734830856323242
    10. ' :' → logprob: -7.859830856323242

Token 29: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42092761397361755
    2. ' dp' → logprob: -3.1709275245666504
    3. 'dp' → logprob: -3.1709275245666504
    4. 'heap' → logprob: -3.7959275245666504
    5. 'events' → logprob: -3.9209275245666504
    6. '
' → logprob: -4.04592752456665
    7. ' heap' → logprob: -4.04592752456665
    8. ' current' → logprob: -4.29592752456665
    9. '```' → logprob: -4.29592752456665
    10. '    
' → logprob: -4.42092752456665

Token 30: ' States' (ID: 6737)
  Prédit: ' heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' heap' → logprob: -1.7172605991363525
    2. 'dp' → logprob: -1.8422605991363525
    3. ' dp' → logprob: -1.9672605991363525
    4. '   ' → logprob: -2.2172605991363525
    5. ' pq' → logprob: -2.4672605991363525
    6. 'heap' → logprob: -2.8422605991363525
    7. '```' → logprob: -3.7172605991363525
    8. 'events' → logprob: -3.9672605991363525
    9. 'pq' → logprob: -3.9672605991363525
    10. ' last' → logprob: -4.092260360717773

Token 31: ' in' (ID: 306)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35747721791267395
    2. ':' → logprob: -1.9824771881103516
    3. ' :' → logprob: -1.9824771881103516
    4. '   ' → logprob: -4.107477188110352
    5. ' ' → logprob: -5.857477188110352
    6. ',' → logprob: -6.357477188110352
    7. '=' → logprob: -7.232477188110352
    8. ')' → logprob: -7.857477188110352
    9. '  ' → logprob: -7.982477188110352
    10. '    ' → logprob: -8.232477188110352

Token 32: ' priority' (ID: 17621)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.9841964840888977
    2. ' the' → logprob: -1.109196424484253
    3. ' a' → logprob: -2.359196424484253
    4. 'heap' → logprob: -2.859196424484253
    5. ' heap' → logprob: -2.984196424484253
    6. 'a' → logprob: -3.234196424484253
    7. ' which' → logprob: -4.234196662902832
    8. ' each' → logprob: -4.859196662902832
    9. 'priority' → logprob: -5.609196662902832
    10. 'each' → logprob: -5.734196662902832

Token 33: ' queue' (ID: 13661)
  Prédit: ' queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.4765200614929199
    2. 'queue' → logprob: -1.10152006149292
    3. '_queue' → logprob: -3.72652006149292
    4. '_' → logprob: -3.97652006149292
    5. 'q' → logprob: -5.85152006149292
    6. ' ' → logprob: -7.60152006149292
    7. 'que' → logprob: -8.726520538330078
    8. '```' → logprob: -9.351520538330078
    9. ' _' → logprob: -10.226520538330078
    10. ' que' → logprob: -10.351520538330078

Token 34: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9080209732055664
    2. ':' → logprob: -1.1580209732055664
    3. ' :' → logprob: -1.6580209732055664
    4. '   ' → logprob: -2.7830209732055664
    5. ',' → logprob: -4.783020973205566
    6. '=' → logprob: -5.158020973205566
    7. ' heap' → logprob: -6.033020973205566
    8. ' (' → logprob: -6.033020973205566
    9. 'heap' → logprob: -6.283020973205566
    10. ' ,' → logprob: -6.408020973205566

Token 35: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.8119838237762451
    2. ' heap' → logprob: -1.8119838237762451
    3. 'heap' → logprob: -2.436983823776245
    4. ' [(' → logprob: -2.561983823776245
    5. ' []' → logprob: -2.686983823776245
    6. '[]' → logprob: -3.061983823776245
    7. '   ' → logprob: -3.561983823776245
    8. '[(' → logprob: -3.561983823776245
    9. '(heap' → logprob: -3.811983823776245
    10. ' pq' → logprob: -4.811984062194824

Token 36: 'distance' (ID: 40614)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.2962783575057983
    2. 'time' → logprob: -1.2962783575057983
    3. ' time' → logprob: -2.046278476715088
    4. ' p' → logprob: -3.171278476715088
    5. ' cost' → logprob: -3.171278476715088
    6. 'cost' → logprob: -3.171278476715088
    7. ' -' → logprob: -3.546278476715088
    8. 't' → logprob: -3.921278476715088
    9. '-p' → logprob: -4.171278476715088
    10. ' total' → logprob: -4.296278476715088

Token 37: '_sum' (ID: 29859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005406403914093971
    2. ')' → logprob: -5.380406379699707
    3. ' ,' → logprob: -7.755406379699707
    4. ',)' → logprob: -9.755406379699707
    5. '_,' → logprob: -10.505406379699707
    6. ' +' → logprob: -10.505406379699707
    7. '_so' → logprob: -10.505406379699707
    8. '+' → logprob: -10.630406379699707
    9. ' ' → logprob: -10.630406379699707
    10. ' )' → logprob: -10.755406379699707

Token 38: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0034779550042003393
    2. ' ,' → logprob: -6.253478050231934
    3. ' +' → logprob: -6.628478050231934
    4. '+' → logprob: -8.753478050231934
    5. ')' → logprob: -10.878478050231934
    6. '_,' → logprob: -11.503478050231934
    7. 's' → logprob: -11.628478050231934
    8. '_sum' → logprob: -12.003478050231934
    9. '=' → logprob: -12.253478050231934
    10. '),' → logprob: -12.253478050231934

Token 39: ' time' (ID: 1058)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -1.2170175313949585
    2. ' index' → logprob: -1.5920175313949585
    3. ' idx' → logprob: -1.7170175313949585
    4. ' current' → logprob: -1.8420175313949585
    5. ' ' → logprob: -3.342017650604248
    6. ' i' → logprob: -3.592017650604248
    7. ' time' → logprob: -3.717017650604248
    8. ' t' → logprob: -4.092017650604248
    9. ' balloon' → logprob: -4.467017650604248
    10. 'index' → logprob: -4.717017650604248

Token 40: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4240576922893524
    2. ',' → logprob: -1.1740577220916748
    3. '_sum' → logprob: -5.174057483673096
    4. '_used' → logprob: -5.299057483673096
    5. '_diff' → logprob: -5.299057483673096
    6. '_,' → logprob: -5.674057483673096
    7. '_taken' → logprob: -5.674057483673096
    8. '_remaining' → logprob: -6.174057483673096
    9. '_' → logprob: -6.799057483673096
    10. '_cost' → logprob: -6.924057483673096

Token 41: ' idx' (ID: 14016)
  Prédit: ' index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.7667334675788879
    2. ' idx' → logprob: -1.2667334079742432
    3. ' p' → logprob: -2.141733407974243
    4. 'index' → logprob: -2.641733407974243
    5. 'p' → logprob: -4.141733646392822
    6. ' position' → logprob: -4.391733646392822
    7. 'idx' → logprob: -4.641733646392822
    8. ' pos' → logprob: -5.391733646392822
    9. ' i' → logprob: -5.516733646392822
    10. ' current' → logprob: -5.641733646392822

Token 42: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009203928639180958
    2. ',' → logprob: -7.375920295715332
    3. ' )' → logprob: -8.250920295715332
    4. '),' → logprob: -11.125920295715332
    5. '_' → logprob: -12.000920295715332
    6. '_)' → logprob: -12.625920295715332
    7. '))' → logprob: -13.500920295715332
    8. ' ,' → logprob: -13.500920295715332
    9. 's' → logprob: -13.750920295715332
    10. '}' → logprob: -14.875920295715332

Token 43: ' pos' (ID: 1253)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.9223068356513977
    2. ' mask' → logprob: -2.047306776046753
    3. ' last' → logprob: -2.172306776046753
    4. ' count' → logprob: -3.047306776046753
    5. 'p' → logprob: -3.297306776046753
    6. ' used' → logprob: -3.547306776046753
    7. ' prev' → logprob: -3.922306776046753
    8. ' ' → logprob: -4.172307014465332
    9. ')' → logprob: -4.172307014465332
    10. ' popped' → logprob: -4.172307014465332

Token 44: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006215345347300172
    2. ',' → logprob: -7.625621318817139
    3. ' )' → logprob: -9.000621795654297
    4. ' ,' → logprob: -13.250621795654297
    5. 's' → logprob: -13.500621795654297
    6. 'e' → logprob: -14.625621795654297
    7. '}' → logprob: -14.625621795654297
    8. 'ection' → logprob: -14.750621795654297
    9. '_)' → logprob: -14.875621795654297
    10. ')`' → logprob: -14.875621795654297

Token 45: ' carrying' (ID: 25328)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7600845098495483
    2. ' last' → logprob: -2.760084629058838
    3. 'used' → logprob: -2.885084629058838
    4. 'p' → logprob: -3.135084629058838
    5. 'last' → logprob: -3.135084629058838
    6. ' direction' → logprob: -3.260084629058838
    7. 'ball' → logprob: -3.385084629058838
    8. ' used' → logprob: -3.635084629058838
    9. 'count' → logprob: -3.760084629058838
    10. 'pos' → logprob: -3.822584629058838

Token 46: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004652149509638548
    2. ',' → logprob: -6.12965202331543
    3. '_)' → logprob: -7.00465202331543
    4. ')_' → logprob: -7.62965202331543
    5. ' )' → logprob: -7.75465202331543
    6. '_' → logprob: -7.87965202331543
    7. 's' → logprob: -9.37965202331543
    8. '_count' → logprob: -10.37965202331543
    9. ')`' → logprob: -11.00465202331543
    10. ',)' → logprob: -11.12965202331543

Token 47: '   ' (ID: 271)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18933290243148804
    2. ':' → logprob: -2.439332962036133
    3. ',' → logprob: -3.314332962036133
    4. ')' → logprob: -4.064332962036133
    5. '=' → logprob: -4.814332962036133
    6. ' :' → logprob: -5.314332962036133
    7. '):
' → logprob: -5.439332962036133
    8. '   ' → logprob: -5.439332962036133
    9. ' =' → logprob: -5.439332962036133
    10. ' ):' → logprob: -5.564332962036133

Token 48: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37669074535369873
    2. ':' → logprob: -2.1266908645629883
    3. ')' → logprob: -2.5016908645629883
    4. '
' → logprob: -4.376690864562988
    5. ' 
' → logprob: -4.626690864562988
    6. '    ' → logprob: -4.626690864562988
    7. 'heap' → logprob: -4.626690864562988
    8. ' ' → logprob: -4.876690864562988
    9. ' heap' → logprob: -4.876690864562988
    10. '    
' → logprob: -5.126690864562988

Token 49: ' carrying' (ID: 25328)
  Prédit: ' pq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pq' → logprob: -1.2890545129776
    2. '   ' → logprob: -1.5390545129776
    3. ' heap' → logprob: -1.9140545129776
    4. ' ' → logprob: -2.6640543937683105
    5. 'q' → logprob: -3.0390543937683105
    6. '    ' → logprob: -3.1640543937683105
    7. 'pq' → logprob: -3.4140543937683105
    8. ' q' → logprob: -3.5390543937683105
    9. ' )' → logprob: -3.9140543937683105
    10. 'p' → logprob: -3.9140543937683105

Token 50: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.334445059299469
    2. ')' → logprob: -1.5844449996948242
    3. ',' → logprob: -3.459444999694824
    4. '=' → logprob: -3.834444999694824
    5. ' )' → logprob: -4.209444999694824
    6. ' ==' → logprob: -5.834444999694824
    7. ' ,' → logprob: -6.084444999694824
    8. '),' → logprob: -6.209444999694824
    9. ' is' → logprob: -6.834444999694824
    10. ' ' → logprob: -7.584444999694824

Token 51: ' tuple' (ID: 31311)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.420208603143692
    2. ' ' → logprob: -2.045208692550659
    3. ' True' → logprob: -2.295208692550659
    4. 'True' → logprob: -3.045208692550659
    5. ' None' → logprob: -3.545208692550659
    6. 'None' → logprob: -4.29520845413208
    7. '1' → logprob: -5.04520845413208
    8. ' (' → logprob: -5.17020845413208
    9. ' either' → logprob: -5.54520845413208
    10. ' bool' → logprob: -6.29520845413208

Token 52: ' sorted' (ID: 20099)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.47828102111816406
    2. '):' → logprob: -1.478281021118164
    3. ',' → logprob: -2.978281021118164
    4. ' :' → logprob: -3.478281021118164
    5. ' =' → logprob: -3.853281021118164
    6. ')' → logprob: -4.103281021118164
    7. '=' → logprob: -4.478281021118164
    8. '[' → logprob: -5.353281021118164
    9. '(' → logprob: -5.478281021118164
    10. '   ' → logprob: -5.978281021118164

Token 53: ' balloon' (ID: 63124)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5893470048904419
    2. '):' → logprob: -1.964347004890442
    3. ')' → logprob: -2.0893468856811523
    4. ':' → logprob: -2.2143468856811523
    5. ' =' → logprob: -3.9643468856811523
    6. '=' → logprob: -4.214346885681152
    7. '[' → logprob: -4.339346885681152
    8. ' ,' → logprob: -4.839346885681152
    9. ' :' → logprob: -5.464346885681152
    10. ' ' → logprob: -5.839346885681152

Token 54: ' indices' (ID: 30378)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3723554313182831
    2. ')' → logprob: -2.2473554611206055
    3. ':' → logprob: -2.2473554611206055
    4. ',' → logprob: -3.4973554611206055
    5. ' :' → logprob: -4.2473554611206055
    6. ' =' → logprob: -4.6223554611206055
    7. '   ' → logprob: -4.6223554611206055
    8. '[' → logprob: -4.7473554611206055
    9. ' ' → logprob: -5.3723554611206055
    10. '=' → logprob: -5.7473554611206055

Token 55: ' currently' (ID: 6821)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5806354284286499
    2. '):' → logprob: -1.08063542842865
    3. ' :' → logprob: -2.8306355476379395
    4. '   ' → logprob: -3.9556355476379395
    5. ')' → logprob: -4.8306355476379395
    6. ',' → logprob: -4.9556355476379395
    7. ' ):' → logprob: -6.3306355476379395
    8. '):
' → logprob: -6.7056355476379395
    9. ' ' → logprob: -6.9556355476379395
    10. '    ' → logprob: -7.3306355476379395

Token 56: ' carried' (ID: 18685)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.21522733569145203
    2. ':' → logprob: -2.3402273654937744
    3. ')' → logprob: -3.2152273654937744
    4. ',' → logprob: -3.5902273654937744
    5. '   ' → logprob: -4.715227127075195
    6. ' :' → logprob: -4.965227127075195
    7. ' ):' → logprob: -5.840227127075195
    8. ' =' → logprob: -5.965227127075195
    9. '[' → logprob: -6.215227127075195
    10. '=' → logprob: -6.590227127075195

Token 57: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.791198194026947
    2. '):' → logprob: -0.791198194026947
    3. '   ' → logprob: -3.541198253631592
    4. ')' → logprob: -3.666198253631592
    5. ',' → logprob: -3.916198253631592
    6. ' :' → logprob: -4.916198253631592
    7. '):
' → logprob: -5.666198253631592
    8. '\' → logprob: -6.916198253631592
    9. ' ):' → logprob: -6.916198253631592
    10. '[' → logprob: -7.166198253631592

Token 58: '   ' (ID: 271)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.53608638048172
    2. '   ' → logprob: -1.1610863208770752
    3. ':' → logprob: -2.911086320877075
    4. ',' → logprob: -4.036086559295654
    5. ')' → logprob: -4.286086559295654
    6. '):
' → logprob: -5.411086559295654
    7. ' :' → logprob: -5.661086559295654
    8. ' ):' → logprob: -6.411086559295654
    9. '    
' → logprob: -6.536086559295654
    10. '    ' → logprob: -7.036086559295654

Token 59: ' house' (ID: 4276)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09926584362983704
    2. ':' → logprob: -2.9742658138275146
    3. '):' → logprob: -4.349266052246094
    4. ',' → logprob: -4.599266052246094
    5. '```' → logprob: -5.099266052246094
    6. ')' → logprob: -5.349266052246094
    7. ' ' → logprob: -6.099266052246094
    8. ' :' → logprob: -6.599266052246094
    9. '``' → logprob: -6.974266052246094
    10. ':
' → logprob: -7.099266052246094

Token 60: ' =' (ID: 314)
  Prédit: '_pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.29140937328338623
    2. 's' → logprob: -2.166409492492676
    3. ' =' → logprob: -2.666409492492676
    4. '_positions' → logprob: -3.291409492492676
    5. '_' → logprob: -4.541409492492676
    6. '_position' → logprob: -4.916409492492676
    7. '=' → logprob: -5.041409492492676
    8. '_idx' → logprob: -6.166409492492676
    9. 'pos' → logprob: -6.291409492492676
    10. '_dist' → logprob: -7.666409492492676

Token 61: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2472303807735443
    2. '(' → logprob: -1.8722304105758667
    3. ' ' → logprob: -3.372230291366577
    4. ' (' → logprob: -3.622230291366577
    5. '{' → logprob: -6.997230529785156
    6. '()' → logprob: -7.122230529785156
    7. '{}' → logprob: -7.372230529785156
    8. '[' → logprob: -7.622230529785156
    9. '1' → logprob: -8.372230529785156
    10. '[]' → logprob: -8.497230529785156

Token 62: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04964549094438553
    2. '(' → logprob: -3.04964542388916
    3. '[' → logprob: -8.42464542388916
    4. '-' → logprob: -8.79964542388916
    5. '{}' → logprob: -8.92464542388916
    6. ' ' → logprob: -9.04964542388916
    7. '{' → logprob: -9.04964542388916
    8. 'n' → logprob: -9.92464542388916
    9. '()' → logprob: -9.92464542388916
    10. ' (' → logprob: -10.17464542388916

Token 63: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.29512184858322144
    2. ',' → logprob: -1.9201219081878662
    3. ' 
' → logprob: -3.545121908187866
    4. ' ' → logprob: -4.170121669769287
    5. '<|end|>' → logprob: -4.545121669769287
    6. '  
' → logprob: -4.920121669769287
    7. ',
' → logprob: -5.045121669769287
    8. '    
' → logprob: -5.295121669769287
    9. '   
' → logprob: -5.420121669769287
    10. '' → logprob: -5.420121669769287

Token 64: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.42596736550331116
    2. '   ' → logprob: -1.3009673357009888
    3. ',' → logprob: -3.9259674549102783
    4. '    
' → logprob: -4.300967216491699
    5. 'distance' → logprob: -4.675967216491699
    6. ' 
' → logprob: -5.300967216491699
    7. '```' → logprob: -5.800967216491699
    8. '   
' → logprob: -5.800967216491699
    9. '  
' → logprob: -5.925967216491699
    10. ' ' → logprob: -5.925967216491699

Token 65: ' max' (ID: 2999)
  Prédit: 'pq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pq' → logprob: -0.8726093173027039
    2. 'dist' → logprob: -1.7476093769073486
    3. 'pos' → logprob: -1.9976093769073486
    4. 'ans' → logprob: -3.1226093769073486
    5. 'heap' → logprob: -3.3726093769073486
    6. '   ' → logprob: -3.6226093769073486
    7. 'inf' → logprob: -3.8726093769073486
    8. 'dp' → logprob: -4.2476091384887695
    9. 'res' → logprob: -4.2476091384887695
    10. 'result' → logprob: -4.3726091384887695

Token 66: '_c' (ID: 1303)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.471810907125473
    2. '_pos' → logprob: -2.221810817718506
    3. '_dist' → logprob: -2.471810817718506
    4. '_' → logprob: -2.721810817718506
    5. '_t' → logprob: -2.846810817718506
    6. '_distance' → logprob: -3.471810817718506
    7. '_height' → logprob: -5.346810817718506
    8. '_len' → logprob: -6.346810817718506
    9. '_cost' → logprob: -6.471810817718506
    10. '_position' → logprob: -6.471810817718506

Token 67: 'arry' (ID: 20052)
  Prédit: 'arry'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arry' → logprob: -0.35545775294303894
    2. 'ap' → logprob: -1.9804577827453613
    3. 'ar' → logprob: -2.2304577827453613
    4. 'ount' → logprob: -3.3554577827453613
    5. 'urrent' → logprob: -5.605457782745361
    6. 'arr' → logprob: -5.730457782745361
    7. 'ost' → logprob: -5.855457782745361
    8. 'array' → logprob: -6.355457782745361
    9. 'ont' → logprob: -6.355457782745361
    10. 'har' → logprob: -6.730457782745361

Token 68: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25542575120925903
    2. ' =' → logprob: -1.5054256916046143
    3. 'ing' → logprob: -6.130425930023193
    4. ' ' → logprob: -7.380425930023193
    5. '_capacity' → logprob: -8.505425453186035
    6. 'y' → logprob: -9.130425453186035
    7. '   ' → logprob: -9.380425453186035
    8. '_count' → logprob: -9.880425453186035
    9. '_cap' → logprob: -10.005425453186035
    10. '_' → logprob: -10.005425453186035

Token 69: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5562372803688049
    2. '3' → logprob: -1.1812372207641602
    3. '2' → logprob: -2.18123722076416
    4. '4' → logprob: -5.55623722076416
    5. '1' → logprob: -6.30623722076416
    6. '5' → logprob: -7.18123722076416
    7. '6' → logprob: -9.68123722076416
    8. '7' → logprob: -9.68123722076416
    9. ' len' → logprob: -9.80623722076416
    10. 'len' → logprob: -9.93123722076416

Token 70: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.3926968574523926
    2. '2' → logprob: -1.1426968574523926
    3. '5' → logprob: -6.517696857452393
    4. '4' → logprob: -6.642696857452393
    5. ' ' → logprob: -6.767696857452393
    6. '1' → logprob: -7.142696857452393
    7. 'len' → logprob: -7.517696857452393
    8. '7' → logprob: -8.267696380615234
    9. 'k' → logprob: -9.142696380615234
    10. '10' → logprob: -9.767696380615234

Token 71: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5703145861625671
    2. '   ' → logprob: -0.9453145861625671
    3. '    
' → logprob: -4.320314407348633
    4. ' 
' → logprob: -5.320314407348633
    5. '   
' → logprob: -5.695314407348633
    6. ',' → logprob: -5.820314407348633
    7. 'n' → logprob: -5.945314407348633
    8. 'newline' → logprob: -6.070314407348633
    9. '<|end|>' → logprob: -6.195314407348633
    10. '    ' → logprob: -6.320314407348633

Token 72: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028081431984901428
    2. '
' → logprob: -4.52808141708374
    3. '    
' → logprob: -4.90308141708374
    4. '   
' → logprob: -6.02808141708374
    5. ' 
' → logprob: -6.40308141708374
    6. 'n' → logprob: -6.90308141708374
    7. '    ' → logprob: -7.15308141708374
    8. ' ' → logprob: -7.27808141708374
    9. '```' → logprob: -7.27808141708374
    10. ',' → logprob: -7.40308141708374

Token 73: ' INF' (ID: 69196)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7401669025421143
    2. 'pq' → logprob: -1.2401669025421143
    3. 'dp' → logprob: -2.3651669025421143
    4. 'dist' → logprob: -2.6151669025421143
    5. 'import' → logprob: -3.3651669025421143
    6. 'heap' → logprob: -4.365166664123535
    7. 'q' → logprob: -5.615166664123535
    8. ' pq' → logprob: -5.865166664123535
    9. ' dist' → logprob: -6.365166664123535
    10. 'ans' → logprob: -6.365166664123535

Token 74: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0010337610729038715
    2. '=' → logprob: -6.876033782958984
    3. '   ' → logprob: -14.751033782958984
    4. ',' → logprob: -15.751033782958984
    5. ' =
' → logprob: -15.876033782958984
    6. '  ' → logprob: -16.126033782958984
    7. ')' → logprob: -16.626033782958984
    8. ' =)' → logprob: -16.751033782958984
    9. '_' → logprob: -17.376033782958984
    10. '=int' → logprob: -17.626033782958984

Token 75: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13966938853263855
    2. ' float' → logprob: -2.264669418334961
    3. '10' → logprob: -3.889669418334961
    4. 'float' → logprob: -5.139669418334961
    5. ' int' → logprob: -8.889669418334961
    6. 'int' → logprob: -10.389669418334961
    7. '1' → logprob: -12.014669418334961
    8. '100' → logprob: -13.389669418334961
    9. '	float' → logprob: -15.014669418334961
    10. '  ' → logprob: -15.264669418334961

Token 76: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.06209002807736397
    2. 'float' → logprob: -2.8120899200439453
    3. 'int' → logprob: -9.062089920043945
    4. ' float' → logprob: -12.312089920043945
    5. '1' → logprob: -13.562089920043945
    6. ' ' → logprob: -15.187089920043945
    7. '100' → logprob: -15.562089920043945
    8. 'sys' → logprob: -17.187089920043945
    9. '999' → logprob: -18.062089920043945
    10. '(float' → logprob: -18.437089920043945

Token 77: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.027408238500356674
    2. '**' → logprob: -3.9024081230163574
    3. '6' → logprob: -5.777408123016357
    4. '7' → logprob: -5.902408123016357
    5. '10' → logprob: -7.902408123016357
    6. '8' → logprob: -8.027408599853516
    7. '000' → logprob: -8.902408599853516
    8. '12' → logprob: -9.777408599853516
    9. '09' → logprob: -9.777408599853516
    10. '00' → logprob: -10.652408599853516

Token 78: '15' (ID: 1055)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.31806716322898865
    2. '15' → logprob: -1.318067193031311
    3. '18' → logprob: -5.8180670738220215
    4. '10' → logprob: -6.6930670738220215
    5. '12' → logprob: -7.9430670738220215
    6. '14' → logprob: -9.06806755065918
    7. '16' → logprob: -9.31806755065918
    8. '13' → logprob: -11.31806755065918
    9. '17' → logprob: -12.44306755065918
    10. '11' → logprob: -12.69306755065918

Token 79: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03716731071472168
    2. '
' → logprob: -3.7871673107147217
    3. ',' → logprob: -5.537167549133301
    4. '    
' → logprob: -5.787167549133301
    5. '    ' → logprob: -6.537167549133301
    6. '   
' → logprob: -7.162167549133301
    7. '' → logprob: -7.287167549133301
    8. ' ' → logprob: -7.287167549133301
    9. '  ' → logprob: -7.412167549133301
    10. ' 
' → logprob: -7.537167549133301

Token 80: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007271044887602329
    2. ' dp' → logprob: -6.007270812988281
    3. 'dp' → logprob: -6.632270812988281
    4. '
' → logprob: -7.132270812988281
    5. '    
' → logprob: -7.257270812988281
    6. ':' → logprob: -8.132270812988281
    7. 'dist' → logprob: -8.382270812988281
    8. ' dist' → logprob: -8.507270812988281
    9. '   
' → logprob: -8.757270812988281
    10. ' 
' → logprob: -8.757270812988281

Token 81: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8762945532798767
    2. 'dist' → logprob: -1.5012946128845215
    3. ' dp' → logprob: -1.8762946128845215
    4. ' dist' → logprob: -2.2512946128845215
    5. '   ' → logprob: -2.3762946128845215
    6. 'distance' → logprob: -6.1262946128845215
    7. 'pq' → logprob: -6.5012946128845215
    8. '
' → logprob: -6.6262946128845215
    9. '    
' → logprob: -7.0012946128845215
    10. ' pq' → logprob: -7.1262946128845215

Token 82: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.12244276702404022
    2. ' dp' → logprob: -3.1224427223205566
    3. 'dist' → logprob: -3.7474427223205566
    4. '   ' → logprob: -4.122442722320557
    5. ' dist' → logprob: -4.372442722320557
    6. 'pq' → logprob: -4.622442722320557
    7. ' pq' → logprob: -6.122442722320557
    8. 'heap' → logprob: -6.372442722320557
    9. 'q' → logprob: -6.497442722320557
    10. 'import' → logprob: -7.247442722320557

Token 83: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0006974232383072376
    2. '=' → logprob: -7.375697612762451
    3. ' ' → logprob: -10.250697135925293
    4. '[' → logprob: -11.750697135925293
    5. '   ' → logprob: -12.625697135925293
    6. '_states' → logprob: -12.625697135925293
    7. '_table' → logprob: -13.000697135925293
    8. ',' → logprob: -13.000697135925293
    9. '_dp' → logprob: -13.000697135925293
    10. '_' → logprob: -13.000697135925293

Token 84: ' (' (ID: 350)
  Prédit: ' {}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' {}' → logprob: -0.4773007035255432
    2. '{}' → logprob: -0.9773007035255432
    3. ' dict' → logprob: -6.727300643920898
    4. ' []' → logprob: -7.727300643920898
    5. 'dict' → logprob: -7.727300643920898
    6. ' [' → logprob: -7.977300643920898
    7. ' defaultdict' → logprob: -7.977300643920898
    8. '{' → logprob: -8.852300643920898
    9. ' [{}' → logprob: -9.602300643920898
    10. ' {' → logprob: -9.727300643920898

Token 85: 'idx' (ID: 13196)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -1.3668655157089233
    2. ' time' → logprob: -2.116865634918213
    3. 'distance' → logprob: -2.116865634918213
    4. ' idx' → logprob: -2.366865634918213
    5. 'idx' → logprob: -2.491865634918213
    6. ')' → logprob: -2.616865634918213
    7. ' distance' → logprob: -2.741865634918213
    8. ' int' → logprob: -3.616865634918213
    9. 'int' → logprob: -3.741865634918213
    10. ' n' → logprob: -3.866865634918213

Token 86: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5411738157272339
    2. '+' → logprob: -1.5411738157272339
    3. ' +' → logprob: -1.6661738157272339
    4. ' ,' → logprob: -4.416173934936523
    5. ')' → logprob: -6.166173934936523
    6. ' )' → logprob: -8.666173934936523
    7. ',)' → logprob: -9.791173934936523
    8. '+,' → logprob: -10.478673934936523
    9. ' ' → logprob: -10.666173934936523
    10. '+)' → logprob: -10.916173934936523

Token 87: ' pos' (ID: 1253)
  Prédit: ' carrying'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' carrying' → logprob: -0.052221376448869705
    2. 'car' → logprob: -3.0522212982177734
    3. 'pos' → logprob: -6.677221298217773
    4. ' pos' → logprob: -7.552221298217773
    5. 'carry' → logprob: -7.677221298217773
    6. ' tuple' → logprob: -8.552221298217773
    7. ' time' → logprob: -8.677221298217773
    8. 'time' → logprob: -8.677221298217773
    9. ' carried' → logprob: -8.927221298217773
    10. ' carry' → logprob: -9.052221298217773

Token 88: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006061278749257326
    2. ')' → logprob: -5.13106107711792
    3. ' ,' → logprob: -9.006061553955078
    4. ' )' → logprob: -12.506061553955078
    5. ')=' → logprob: -13.381061553955078
    6. '),' → logprob: -13.506061553955078
    7. 's' → logprob: -14.256061553955078
    8. '):' → logprob: -15.318561553955078
    9. ',)' → logprob: -15.443561553955078
    10. ' ' → logprob: -15.568561553955078

Token 89: ' carrying' (ID: 25328)
  Prédit: ' carrying'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' carrying' → logprob: -0.20349474251270294
    2. 'car' → logprob: -1.7034947872161865
    3. 'carry' → logprob: -6.703494548797607
    4. ' carried' → logprob: -8.328495025634766
    5. 'fro' → logprob: -8.953495025634766
    6. ' ' → logprob: -9.515995025634766
    7. ' carry' → logprob: -9.828495025634766
    8. ' tuple' → logprob: -10.078495025634766
    9. 'tuple' → logprob: -10.328495025634766
    10. 'time' → logprob: -10.390995025634766

Token 90: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006163174286484718
    2. '):' → logprob: -5.256163120269775
    3. ',' → logprob: -7.631163120269775
    4. ' )' → logprob: -8.631163597106934
    5. ')=' → logprob: -8.631163597106934
    6. ')=>' → logprob: -10.631163597106934
    7. ')->' → logprob: -11.381163597106934
    8. '),' → logprob: -11.881163597106934
    9. '_states' → logprob: -11.881163597106934
    10. '   ' → logprob: -12.631163597106934

Token 91: ' ->' (ID: 2747)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07473877817392349
    2. '=' → logprob: -2.9497387409210205
    3. ')' → logprob: -4.0747389793396
    4. ':' → logprob: -6.6997389793396
    5. ',' → logprob: -7.8247389793396
    6. ')=' → logprob: -8.699738502502441
    7. ' ' → logprob: -8.824738502502441
    8. ' ->' → logprob: -9.074738502502441
    9. '_to' → logprob: -9.449738502502441
    10. ' )' → logprob: -9.824738502502441

Token 92: ' (' (ID: 350)
  Prédit: ' distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' distance' → logprob: -0.5960010886192322
    2. 'distance' → logprob: -0.9710010886192322
    3. ' cost' → logprob: -4.096001148223877
    4. ' dist' → logprob: -4.471001148223877
    5. 'dist' → logprob: -4.971001148223877
    6. ' minimal' → logprob: -5.221001148223877
    7. ' min' → logprob: -5.346001148223877
    8. ' int' → logprob: -5.471001148223877
    9. ' float' → logprob: -5.596001148223877
    10. 'INF' → logprob: -5.721001148223877

Token 93: 'time' (ID: 4580)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.33366745710372925
    2. ' distance' → logprob: -1.333667516708374
    3. 'dist' → logprob: -5.208667278289795
    4. ' dist' → logprob: -5.333667278289795
    5. ')' → logprob: -5.583667278289795
    6. ' cost' → logprob: -6.208667278289795
    7. 'cost' → logprob: -6.958667278289795
    8. ' min' → logprob: -7.208667278289795
    9. 'min' → logprob: -7.958667278289795
    10. 'd' → logprob: -8.583667755126953

Token 94: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04961882531642914
    2. ' ,' → logprob: -3.299618721008301
    3. ')' → logprob: -5.049618721008301
    4. '_cost' → logprob: -6.049618721008301
    5. '_sum' → logprob: -6.549618721008301
    6. ' )' → logprob: -7.924618721008301
    7. 'cost' → logprob: -8.5496187210083
    8. ',)' → logprob: -8.6746187210083
    9. '_,' → logprob: -9.1746187210083
    10. 'sum' → logprob: -9.6746187210083

Token 95: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.6464873552322388
    2. ' distance' → logprob: -0.7714873552322388
    3. ' dist' → logprob: -4.896487236022949
    4. 'dist' → logprob: -5.271487236022949
    5. ')' → logprob: -8.39648723602295
    6. ' dp' → logprob: -8.77148723602295
    7. ' cost' → logprob: -8.89648723602295
    8. 'dp' → logprob: -8.89648723602295
    9. ' ' → logprob: -9.02148723602295
    10. 'd' → logprob: -9.95898723602295

Token 96: ')
' (ID: 446)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.2844493091106415
    2. ')' → logprob: -1.4094493389129639
    3. '_)' → logprob: -6.659449100494385
    4. 'sum' → logprob: -7.409449100494385
    5. ',' → logprob: -7.409449100494385
    6. ' )' → logprob: -7.909449100494385
    7. ')_' → logprob: -8.409449577331543
    8. '_' → logprob: -10.159449577331543
    9. '_,' → logprob: -10.659449577331543
    10. ',)' → logprob: -10.784449577331543

Token 97: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030890576541423798
    2. '
' → logprob: -3.780890464782715
    3. 'dp' → logprob: -5.405890464782715
    4. 'def' → logprob: -7.280890464782715
    5. '    
' → logprob: -7.405890464782715
    6. ' dp' → logprob: -7.905890464782715
    7. 'import' → logprob: -8.280890464782715
    8. ')' → logprob: -8.655890464782715
    9. '```' → logprob: -8.655890464782715
    10. '<|end|>' → logprob: -8.655890464782715

Token 98: ' #' (ID: 1069)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.5835816860198975
    2. 'dp' → logprob: -1.2085816860198975
    3. '   ' → logprob: -1.9585816860198975
    4. '_dp' → logprob: -8.083581924438477
    5. 'import' → logprob: -8.333581924438477
    6. '
' → logprob: -8.458581924438477
    7. '	dp' → logprob: -8.458581924438477
    8. 'from' → logprob: -8.583581924438477
    9. 'distance' → logprob: -8.833581924438477
    10. ')' → logprob: -8.958581924438477

Token 99: ' idx' (ID: 14016)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6422606110572815
    2. ' dp' → logprob: -0.7672606110572815
    3. 'from' → logprob: -5.392260551452637
    4. ' from' → logprob: -6.892260551452637
    5. ' import' → logprob: -7.017260551452637
    6. 'import' → logprob: -7.642260551452637
    7. ' =' → logprob: -7.767260551452637
    8. ')' → logprob: -7.892260551452637
    9. '   ' → logprob: -8.142260551452637
    10. ' dist' → logprob: -8.642260551452637

Token 100: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3985453248023987
    2. ' ,' → logprob: -1.773545265197754
    3. ' =' → logprob: -1.898545265197754
    4. ')' → logprob: -5.648545265197754
    5. '=' → logprob: -5.898545265197754
    6. ' is' → logprob: -6.398545265197754
    7. ' ' → logprob: -8.523545265197754
    8. '<|end|>' → logprob: -8.523545265197754
    9. '  ' → logprob: -8.898545265197754
    10. '_states' → logprob: -9.648545265197754

Token 101: ' next' (ID: 2613)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.32254940271377563
    2. ' ' → logprob: -2.322549343109131
    3. 'current' → logprob: -3.322549343109131
    4. ' int' → logprob: -3.447549343109131
    5. '0' → logprob: -3.572549343109131
    6. ' the' → logprob: -3.822549343109131
    7. ' next' → logprob: -3.947549343109131
    8. ' balloon' → logprob: -4.947549343109131
    9. ' position' → logprob: -5.072549343109131
    10. 'the' → logprob: -5.572549343109131

Token 102: ' balloon' (ID: 63124)
  Prédit: ' balloon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' balloon' → logprob: -0.12921561300754547
    2. ' token' → logprob: -2.629215717315674
    3. 'ball' → logprob: -4.379215717315674
    4. 'token' → logprob: -4.504215717315674
    5. '_ball' → logprob: -4.879215717315674
    6. ' ballon' → logprob: -5.379215717315674
    7. '<|end|>' → logprob: -5.379215717315674
    8. ' index' → logprob: -6.129215717315674
    9. '_token' → logprob: -6.254215717315674
    10. ' code' → logprob: -7.004215717315674

Token 103: ' to' (ID: 316)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.44363632798194885
    2. ',' → logprob: -2.318636417388916
    3. '<|end|>' → logprob: -2.568636417388916
    4. '<|end|>' → logprob: -3.443636417388916
    5. ' ,' → logprob: -3.818636417388916
    6. '_index' → logprob: -3.818636417388916
    7. '   ' → logprob: -3.818636417388916
    8. 'import' → logprob: -3.943636417388916
    9. '_idx' → logprob: -4.068636417388916
    10. ' )' → logprob: -4.943636417388916

Token 104: ' catch' (ID: 3494)
  Prédit: ' pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pop' → logprob: -0.764482319355011
    2. 'pop' → logprob: -1.2644822597503662
    3. 'deliver' → logprob: -2.264482259750366
    4. 'process' → logprob: -3.139482259750366
    5. ' process' → logprob: -3.514482259750366
    6. 'collect' → logprob: -3.639482259750366
    7. ' deliver' → logprob: -4.014482498168945
    8. ' collect' → logprob: -4.889482498168945
    9. 'visit' → logprob: -5.139482498168945
    10. 'pick' → logprob: -5.264482498168945

Token 105: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4188674986362457
    2. ')' → logprob: -1.1688674688339233
    3. ',' → logprob: -4.168867588043213
    4. ' )' → logprob: -5.543867588043213
    5. '  ' → logprob: -6.543867588043213
    6. ' ' → logprob: -6.543867588043213
    7. ' ,' → logprob: -6.543867588043213
    8. '
' → logprob: -6.668867588043213
    9. 'import' → logprob: -6.668867588043213
    10. 'def' → logprob: -6.793867588043213

Token 106: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0027315248735249043
    2. ',' → logprob: -7.1277313232421875
    3. 'dp' → logprob: -7.5027313232421875
    4. ')' → logprob: -8.127731323242188
    5. 'def' → logprob: -8.502731323242188
    6. '    
' → logprob: -8.627731323242188
    7. '
' → logprob: -8.627731323242188
    8. 'import' → logprob: -9.002731323242188
    9. '<|end|>' → logprob: -9.127731323242188
    10. ' dp' → logprob: -9.752731323242188

Token 107: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7032038569450378
    2. '   ' → logprob: -1.3282039165496826
    3. ' dp' → logprob: -1.4532039165496826
    4. 'import' → logprob: -5.5782036781311035
    5. 'from' → logprob: -7.3282036781311035
    6. ' import' → logprob: -8.203204154968262
    7. ' from' → logprob: -8.203204154968262
    8. 'distance' → logprob: -8.328204154968262
    9. 'DP' → logprob: -8.828204154968262
    10. ' dist' → logprob: -9.078204154968262

Token 108: ' carrying' (ID: 25328)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.45697399973869324
    2. 'dp' → logprob: -1.2069740295410156
    3. 'from' → logprob: -4.456974029541016
    4. ' distance' → logprob: -4.831974029541016
    5. 'import' → logprob: -5.081974029541016
    6. 'distance' → logprob: -5.081974029541016
    7. ' from' → logprob: -5.206974029541016
    8. 'pos' → logprob: -5.581974029541016
    9. ' pos' → logprob: -5.581974029541016
    10. ' dist' → logprob: -5.706974029541016

Token 109: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11375207453966141
    2. ')' → logprob: -2.9887521266937256
    3. '=' → logprob: -3.6137521266937256
    4. '_states' → logprob: -4.8637518882751465
    5. ',' → logprob: -5.3637518882751465
    6. '   ' → logprob: -5.6137518882751465
    7. ':' → logprob: -5.9887518882751465
    8. ' is' → logprob: -6.1137518882751465
    9. ' ,' → logprob: -6.3637518882751465
    10. ' )' → logprob: -6.3637518882751465

Token 110: ' a' (ID: 261)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7291930317878723
    2. ' tuple' → logprob: -1.2291929721832275
    3. 'tuple' → logprob: -1.7291929721832275
    4. ' ()' → logprob: -3.3541929721832275
    5. '(' → logprob: -5.479193210601807
    6. '(tuple' → logprob: -6.104193210601807
    7. 'fro' → logprob: -6.229193210601807
    8. ' (' → logprob: -6.854193210601807
    9. ')' → logprob: -6.979193210601807
    10. '...' → logprob: -7.979193210601807

Token 111: ' tuple' (ID: 31311)
  Prédit: ' tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tuple' → logprob: -0.11901384592056274
    2. ' ' → logprob: -2.994013786315918
    3. ' s' → logprob: -4.494013786315918
    4. 'ss' → logprob: -4.494013786315918
    5. 's' → logprob: -4.994013786315918
    6. ' sorted' → logprob: -5.119013786315918
    7. 'tuple' → logprob: -5.744013786315918
    8. '   ' → logprob: -6.244013786315918
    9. 't' → logprob: -6.244013786315918
    10. ' frozen' → logprob: -6.369013786315918

Token 112: ' of' (ID: 328)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1098045110702515
    2. '   ' → logprob: -1.2348045110702515
    3. ' =' → logprob: -1.3598045110702515
    4. ' of' → logprob: -2.859804630279541
    5. '):' → logprob: -4.234804630279541
    6. ',' → logprob: -4.609804630279541
    7. 'import' → logprob: -4.984804630279541
    8. '
' → logprob: -5.359804630279541
    9. '=' → logprob: -5.359804630279541
    10. '):
' → logprob: -5.609804630279541

Token 113: ' balloons' (ID: 114791)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indices' → logprob: -1.2705717086791992
    2. 'ball' → logprob: -1.3955717086791992
    3. 'sorted' → logprob: -1.8955717086791992
    4. ' balloon' → logprob: -2.145571708679199
    5. ' indices' → logprob: -2.895571708679199
    6. ' integers' → logprob: -3.520571708679199
    7. 'inte' → logprob: -3.520571708679199
    8. 'currently' → logprob: -4.145571708679199
    9. 'current' → logprob: -4.270571708679199
    10. ' current' → logprob: -4.770571708679199

Token 114: ' currently' (ID: 6821)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6849683523178101
    2. ')' → logprob: -1.55996835231781
    3. '   ' → logprob: -1.80996835231781
    4. ',' → logprob: -2.8099684715270996
    5. '):' → logprob: -3.8099684715270996
    6. 'import' → logprob: -4.9349684715271
    7. '_states' → logprob: -5.4349684715271
    8. ' ,' → logprob: -5.4349684715271
    9. '):
' → logprob: -5.6849684715271
    10. '=' → logprob: -6.0599684715271

Token 115: ' carried' (ID: 18685)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.11699556559324265
    2. ' carried' → logprob: -3.1169955730438232
    3. 'caught' → logprob: -3.3669955730438232
    4. 'in' → logprob: -4.616995334625244
    5. 'picked' → logprob: -4.741995334625244
    6. ')' → logprob: -5.366995334625244
    7. ' in' → logprob: -6.241995334625244
    8. 'being' → logprob: -6.491995334625244
    9. ' being' → logprob: -6.616995334625244
    10. ' caught' → logprob: -7.116995334625244

Token 116: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.056700121611356735
    2. ')' → logprob: -3.4317002296447754
    3. ',' → logprob: -4.931700229644775
    4. 'dp' → logprob: -5.431700229644775
    5. '
' → logprob: -5.806700229644775
    6. '    
' → logprob: -5.931700229644775
    7. 'import' → logprob: -6.181700229644775
    8. 'def' → logprob: -7.556700229644775
    9. ')
' → logprob: -8.306699752807617
    10. ' ' → logprob: -8.431699752807617

Token 117: 'sorted' (ID: 64288)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015226584859192371
    2. ')
' → logprob: -4.265226364135742
    3. ',' → logprob: -7.640226364135742
    4. '   ' → logprob: -8.515226364135742
    5. ')

' → logprob: -8.890226364135742
    6. '),' → logprob: -9.640226364135742
    7. 'def' → logprob: -10.390226364135742
    8. ' )' → logprob: -10.515226364135742
    9. ')
' → logprob: -10.890226364135742
    10. '):
' → logprob: -11.265226364135742

Token 118: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.954393079970032e-05
    2. ')
' → logprob: -10.750049591064453
    3. ',' → logprob: -11.000049591064453
    4. '),' → logprob: -13.125049591064453
    5. '   ' → logprob: -13.250049591064453
    6. 'def' → logprob: -13.750049591064453
    7. ' )' → logprob: -13.875049591064453
    8. 'to' → logprob: -14.625049591064453
    9. ')

' → logprob: -14.750049591064453
    10. ',)' → logprob: -14.750049591064453

Token 119: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0031825865153223276
    2. '    
' → logprob: -6.878182411193848
    3. 'dp' → logprob: -7.003182411193848
    4. 'def' → logprob: -7.878182411193848
    5. '
' → logprob: -8.378182411193848
    6. '```' → logprob: -8.753182411193848
    7. ')' → logprob: -9.128182411193848
    8. ',' → logprob: -10.128182411193848
    9. ' dp' → logprob: -10.128182411193848
    10. '    ' → logprob: -10.503182411193848

Token 120: ' from' (ID: 591)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.03709552809596062
    2. '   ' → logprob: -3.537095546722412
    3. ' dp' → logprob: -5.162095546722412
    4. 'import' → logprob: -7.287095546722412
    5. 'dist' → logprob: -8.162095069885254
    6. 'from' (adapté à ' from') → logprob: -8.412095069885254
    7. '
' → logprob: -8.912095069885254
    8. 'if' → logprob: -10.287095069885254
    9. 'distance' → logprob: -10.412095069885254
    10. 'heap' → logprob: -10.662095069885254

Token 121: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.18491360545158386
    2. 'collections' → logprob: -1.9349136352539062
    3. ' heap' → logprob: -3.8099136352539062
    4. 'heap' → logprob: -6.934913635253906
    5. 'bis' → logprob: -7.559913635253906
    6. ' bis' → logprob: -7.934913635253906
    7. ' itertools' → logprob: -8.809913635253906
    8. ' copy' → logprob: -9.184913635253906
    9. ' functools' → logprob: -9.809913635253906
    10. ' math' → logprob: -10.059913635253906

Token 122: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.007707654032856226
    2. ' import' → logprob: -4.882707595825195
    3. '<|end|>' → logprob: -10.507707595825195
    4. '	import' → logprob: -11.382707595825195
    5. '```' → logprob: -11.507707595825195
    6. 'abc' → logprob: -11.507707595825195
    7. ' defaultdict' → logprob: -11.757707595825195
    8. '.Counter' → logprob: -12.382707595825195
    9. '_import' → logprob: -12.507707595825195
    10. '.' → logprob: -12.632707595825195

Token 123: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.2166323959827423
    2. 'deque' → logprob: -1.96663236618042
    3. ' deque' → logprob: -3.21663236618042
    4. 'default' → logprob: -4.21663236618042
    5. 'named' → logprob: -12.091632843017578
    6. ' named' → logprob: -13.716632843017578
    7. '```' → logprob: -14.466632843017578
    8. 'de' → logprob: -14.466632843017578
    9. 'collections' → logprob: -14.591632843017578
    10. ' default' → logprob: -15.466632843017578

Token 124: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6796989440917969
    2. '
' → logprob: -1.0546989440917969
    3. ' dp' → logprob: -2.179698944091797
    4. '   ' → logprob: -4.679698944091797
    5. '    
' → logprob: -5.929698944091797
    6. 'dist' → logprob: -5.929698944091797
    7. '(dp' → logprob: -6.054698944091797
    8. '	dp' → logprob: -6.179698944091797
    9. '_dp' → logprob: -6.429698944091797
    10. 'def' → logprob: -6.429698944091797

Token 125: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.008161211386322975
    2. ' dp' → logprob: -5.3831610679626465
    3. '```' → logprob: -7.1331610679626465
    4. '
' → logprob: -7.2581610679626465
    5. '   ' → logprob: -7.2581610679626465
    6. 'dist' → logprob: -7.3831610679626465
    7. 'DP' → logprob: -8.258161544799805
    8. '_dp' → logprob: -8.883161544799805
    9. 'visited' → logprob: -9.633161544799805
    10. 'def' → logprob: -10.008161544799805

Token 126: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.000829759519547224
    2. ' dp' → logprob: -7.250829696655273
    3. '   ' → logprob: -9.250829696655273
    4. 'def' → logprob: -11.625829696655273
    5. '```' → logprob: -11.875829696655273
    6. 'dist' → logprob: -12.875829696655273
    7. 'import' → logprob: -13.250829696655273
    8. '
' → logprob: -13.875829696655273
    9. 'DP' → logprob: -14.500829696655273
    10. '_dp' → logprob: -14.750829696655273

Token 127: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00863217655569315
    2. '=' → logprob: -4.758632183074951
    3. '   ' → logprob: -11.883631706237793
    4. '<|end|>' → logprob: -12.633631706237793
    5. '={}' → logprob: -13.508631706237793
    6. ' ' → logprob: -13.633631706237793
    7. '<|end|>' → logprob: -13.883631706237793
    8. ')' → logprob: -14.383631706237793
    9. 'import' → logprob: -14.508631706237793
    10. '```' → logprob: -14.633631706237793

Token 128: ' {}

' (ID: 21724)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.014175030402839184
    2. ' defaultdict' → logprob: -4.264174938201904
    3. ' default' → logprob: -12.014175415039062
    4. '{}' → logprob: -13.014175415039062
    5. '   ' → logprob: -13.764175415039062
    6. '.default' → logprob: -14.139175415039062
    7. '"default' → logprob: -14.514175415039062
    8. '(default' → logprob: -14.889175415039062
    9. '{' → logprob: -15.764175415039062
    10. ''default' → logprob: -16.014175415039062

Token 129: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024469442665576935
    2. 'def' → logprob: -4.899469375610352
    3. 'heap' → logprob: -5.024469375610352
    4. 'import' → logprob: -5.899469375610352
    5. ')' → logprob: -6.524469375610352
    6. ' heap' → logprob: -7.399469375610352
    7. 'stack' → logprob: -7.524469375610352
    8. '    
' → logprob: -7.524469375610352
    9. 'for' → logprob: -7.649469375610352
    10. ' for' → logprob: -7.649469375610352

Token 130: ' #' (ID: 1069)
  Prédit: 'pq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pq' → logprob: -0.245835542678833
    2. 'heap' → logprob: -1.995835542678833
    3. '   ' → logprob: -3.495835542678833
    4. 'queue' → logprob: -3.995835542678833
    5. 'import' → logprob: -4.120835304260254
    6. 'for' → logprob: -4.495835304260254
    7. 'q' → logprob: -5.995835304260254
    8. 'hq' → logprob: -6.245835304260254
    9. 'def' → logprob: -6.995835304260254
    10. 'start' → logprob: -8.495835304260254

Token 131: ' initial' (ID: 4871)
  Prédit: 'pq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pq' → logprob: -0.5927581787109375
    2. 'heap' → logprob: -1.5927581787109375
    3. 'start' → logprob: -1.9677581787109375
    4. 'initial' → logprob: -3.3427581787109375
    5. 'q' → logprob: -4.5927581787109375
    6. 'hq' → logprob: -4.5927581787109375
    7. ' heap' → logprob: -4.5927581787109375
    8. ' start' → logprob: -4.9677581787109375
    9. ' pq' → logprob: -4.9677581787109375
    10. 'import' → logprob: -5.0927581787109375

Token 132: ' state' (ID: 2608)
  Prédit: '_state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.2130647748708725
    2. ' =' → logprob: -1.7130647897720337
    3. 'state' → logprob: -5.713064670562744
    4. '=' → logprob: -5.963064670562744
    5. '_queue' → logprob: -6.338064670562744
    6. '_entry' → logprob: -7.088064670562744
    7. '_pos' → logprob: -7.088064670562744
    8. '_states' → logprob: -7.463064670562744
    9. '   ' → logprob: -7.713064670562744
    10. '_p' → logprob: -8.338065147399902

Token 133: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3059447407722473
    2. '   ' → logprob: -1.8059446811676025
    3. 'dp' → logprob: -2.8059446811676025
    4. 'heap' → logprob: -4.055944919586182
    5. ' dp' → logprob: -5.055944919586182
    6. 'pq' → logprob: -5.180944919586182
    7. '=' → logprob: -5.930944919586182
    8. ' heap' → logprob: -6.430944919586182
    9. '[(' → logprob: -6.430944919586182
    10. 'state' → logprob: -7.180944919586182

Token 134: ' idx' (ID: 14016)
  Prédit: ' heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.8848816752433777
    2. ' dp' → logprob: -1.0098817348480225
    3. 'dp' → logprob: -2.2598817348480225
    4. 'heap' → logprob: -2.7598817348480225
    5. '   ' → logprob: -3.0098817348480225
    6. 'pq' → logprob: -6.384881496429443
    7. '0' → logprob: -6.884881496429443
    8. ' (' → logprob: -7.384881496429443
    9. ' pq' → logprob: -7.759881496429443
    10. '[(' → logprob: -8.134881973266602

Token 135: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7086665034294128
    2. ' =' → logprob: -0.7086665034294128
    3. ',' → logprob: -4.2086663246154785
    4. ' ,' → logprob: -7.7086663246154785
    5. ')' → logprob: -10.583666801452637
    6. '0' → logprob: -11.208666801452637
    7. '   ' → logprob: -11.333666801452637
    8. ',
' → logprob: -11.458666801452637
    9. ' ' → logprob: -11.708666801452637
    10. '  ' → logprob: -12.833666801452637

Token 136: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0028114095330238342
    2. ' ' → logprob: -5.877811431884766
    3. '(' → logprob: -12.627811431884766
    4. '```' → logprob: -14.127811431884766
    5. '   ' → logprob: -14.502811431884766
    6. ',' → logprob: -14.502811431884766
    7. '-' → logprob: -14.627811431884766
    8. '=' → logprob: -15.815311431884766
    9. ' (' → logprob: -15.815311431884766
    10. '  ' → logprob: -16.127811431884766

Token 137: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.048181552439928055
    2. ' =' → logprob: -3.7981815338134766
    3. '   ' → logprob: -4.298181533813477
    4. ' ,' → logprob: -5.298181533813477
    5. ',(' → logprob: -7.048181533813477
    6. ',state' → logprob: -7.048181533813477
    7. ' (' → logprob: -7.173181533813477
    8. '(' → logprob: -7.298181533813477
    9. 'distance' → logprob: -7.298181533813477
    10. '=' → logprob: -7.548181533813477

Token 138: ' pos' (ID: 1253)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.9827986359596252
    2. 'pos' → logprob: -1.1077985763549805
    3. ' time' → logprob: -1.8577985763549805
    4. ' pos' → logprob: -1.9827985763549805
    5. '0' → logprob: -6.8577985763549805
    6. ' ' → logprob: -8.60779857635498
    7. 'distance' → logprob: -8.85779857635498
    8. '   ' → logprob: -9.10779857635498
    9. ' distance' → logprob: -10.10779857635498
    10. ',' → logprob: -10.10779857635498

Token 139: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014372100122272968
    2. ' =' → logprob: -4.264371871948242
    3. ',' → logprob: -8.639371871948242
    4. '=h' → logprob: -12.139371871948242
    5. ')' → logprob: -12.389371871948242
    6. '0' → logprob: -12.389371871948242
    7. 'house' → logprob: -12.514371871948242
    8. '=head' → logprob: -13.514371871948242
    9. '=int' → logprob: -13.889371871948242
    10. '=(' → logprob: -14.014371871948242

Token 140: '0' (ID: 15)
  Prédit: 'house'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'house' → logprob: -0.5791056156158447
    2. '0' → logprob: -0.8291056156158447
    3. ' house' → logprob: -6.329105377197266
    4. ' ' → logprob: -6.829105377197266
    5. 'home' → logprob: -8.954105377197266
    6. 'houses' → logprob: -10.579105377197266
    7. 'hou' → logprob: -10.829105377197266
    8. '   ' → logprob: -11.204105377197266
    9. 'ho' → logprob: -11.329105377197266
    10. '```' → logprob: -11.329105377197266

Token 141: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33191752433776855
    2. ',' → logprob: -1.3319175243377686
    3. ' =' → logprob: -4.956917762756348
    4. 'state' → logprob: -4.956917762756348
    5. ' ,' → logprob: -6.706917762756348
    6. 'dist' → logprob: -7.706917762756348
    7. 'distance' → logprob: -7.706917762756348
    8. ',state' → logprob: -8.081917762756348
    9. ' state' → logprob: -8.206917762756348
    10. ' (' → logprob: -8.331917762756348

Token 142: ' carrying' (ID: 25328)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.18139079213142395
    2. ' time' → logprob: -2.1813907623291016
    3. 'distance' → logprob: -4.181390762329102
    4. 'car' → logprob: -4.681390762329102
    5. '0' → logprob: -4.806390762329102
    6. ' carrying' → logprob: -5.056390762329102
    7. 'dist' → logprob: -5.431390762329102
    8. ' dist' → logprob: -5.431390762329102
    9. ' distance' → logprob: -5.931390762329102
    10. '   ' → logprob: -6.556390762329102

Token 143: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4805501103401184
    2. ' =' → logprob: -0.9805501103401184
    3. ')' → logprob: -5.730550289154053
    4. ',' → logprob: -6.230550289154053
    5. '   ' → logprob: -7.355550289154053
    6. '=(' → logprob: -7.730550289154053
    7. ')=' → logprob: -9.730549812316895
    8. '(' → logprob: -10.730549812316895
    9. '),' → logprob: -11.105549812316895
    10. ' =(' → logprob: -11.355549812316895

Token 144: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -1.318681188422488e-05
    2. '(),' → logprob: -12.37501335144043
    3. '()]' → logprob: -12.50001335144043
    4. '()}' → logprob: -13.00001335144043
    5. '())' → logprob: -14.62501335144043
    6. 'tuple' → logprob: -14.62501335144043
    7. ' ()' → logprob: -14.75001335144043
    8. '()>' → logprob: -15.25001335144043
    9. '(' → logprob: -15.37501335144043
    10. '()</' → logprob: -15.37501335144043

Token 145: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0032188263721764088
    2. ',' → logprob: -6.253218650817871
    3. '
' → logprob: -7.378218650817871
    4. 'heap' → logprob: -8.753218650817871
    5. 'import' → logprob: -8.878218650817871
    6. ' heap' → logprob: -9.253218650817871
    7. '    
' → logprob: -9.503218650817871
    8. 'pq' → logprob: -10.253218650817871
    9. 'state' → logprob: -10.503218650817871
    10. 'queue' → logprob: -10.878218650817871

Token 146: ' #' (ID: 1069)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.6728067994117737
    2. '   ' → logprob: -1.422806739807129
    3. 'pq' → logprob: -1.422806739807129
    4. 'import' → logprob: -5.922806739807129
    5. 'hq' → logprob: -6.297806739807129
    6. ' heap' → logprob: -6.922806739807129
    7. 'start' → logprob: -7.297806739807129
    8. 'queue' → logprob: -7.297806739807129
    9. 'initial' → logprob: -7.922806739807129
    10. 'q' → logprob: -8.422806739807129

Token 147: ' distance' (ID: 9324)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.11035418510437012
    2. 'pq' → logprob: -3.23535418510437
    3. ' heap' → logprob: -4.110354423522949
    4. 'initial' → logprob: -4.235354423522949
    5. '   ' → logprob: -4.485354423522949
    6. 'import' → logprob: -4.735354423522949
    7. 'start' → logprob: -5.485354423522949
    8. 'dp' → logprob: -5.485354423522949
    9. 'hq' → logprob: -5.610354423522949
    10. 'queue' → logprob: -7.235354423522949

Token 148: ' =' (ID: 314)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.010461326688528061
    2. ',' → logprob: -5.510461330413818
    3. ' =' → logprob: -5.635461330413818
    4. '=' → logprob: -6.635461330413818
    5. 'sum' → logprob: -7.010461330413818
    6. '_' → logprob: -9.13546085357666
    7. '_cost' → logprob: -9.88546085357666
    8. ' ,' → logprob: -10.01046085357666
    9. ')' → logprob: -10.13546085357666
    10. '_heap' → logprob: -10.13546085357666

Token 149: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010962257510982454
    2. ' ' → logprob: -9.125109672546387
    3. '   ' → logprob: -14.875109672546387
    4. '(' → logprob: -15.875109672546387
    5. '  ' → logprob: -17.12510871887207
    6. '[' → logprob: -17.87510871887207
    7. '{' → logprob: -18.00010871887207
    8. ' ' → logprob: -18.25010871887207
    9. '000' → logprob: -18.50010871887207
    10. '1' → logprob: -18.87510871887207

Token 150: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.703443770878948e-06
    2. ' ' → logprob: -12.000007629394531
    3. '(' → logprob: -13.750007629394531
    4. '[' → logprob: -15.875007629394531
    5. '{' → logprob: -16.50000762939453
    6. '   ' → logprob: -17.25000762939453
    7. '1' → logprob: -18.12500762939453
    8. '  ' → logprob: -18.93750762939453
    9. ' (' → logprob: -19.06250762939453
    10. 'INF' → logprob: -19.06250762939453

Token 151: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04234626516699791
    2. ',' → logprob: -3.417346239089966
    3. ' =' → logprob: -5.167346477508545
    4. 'heap' → logprob: -7.292346477508545
    5. 'pq' → logprob: -7.417346477508545
    6. 'import' → logprob: -7.417346477508545
    7. 'state' → logprob: -8.167346000671387
    8. ' heap' → logprob: -8.917346000671387
    9. '
' → logprob: -9.167346000671387
    10. ' ,' → logprob: -9.167346000671387

Token 152: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.584604799747467
    2. ' time' → logprob: -0.834604799747467
    3. '   ' → logprob: -5.084604740142822
    4. 'heap' → logprob: -7.584604740142822
    5. 'distance' → logprob: -7.709604740142822
    6. ' heap' → logprob: -7.709604740142822
    7. '0' → logprob: -8.83460521697998
    8. ' pq' → logprob: -8.95960521697998
    9. 'pq' → logprob: -9.08460521697998
    10. ' distance' → logprob: -9.20960521697998

Token 153: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06922978162765503
    2. '=' → logprob: -2.9442298412323
    3. ',' → logprob: -4.944229602813721
    4. ')' → logprob: -5.444229602813721
    5. '   ' → logprob: -5.944229602813721
    6. ' ,' → logprob: -10.069230079650879
    7. ')=' → logprob: -10.694230079650879
    8. ' )' → logprob: -11.319230079650879
    9. 'import' → logprob: -11.319230079650879
    10. '),' → logprob: -11.444230079650879

Token 154: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002036595979006961
    2. ' ' → logprob: -8.500204086303711
    3. '   ' → logprob: -16.87520408630371
    4. '000' → logprob: -17.25020408630371
    5. '00' → logprob: -17.87520408630371
    6. '  ' → logprob: -18.50020408630371
    7. '[' → logprob: -18.87520408630371
    8. '۰' → logprob: -19.12520408630371
    9. '
' → logprob: -19.87520408630371
    10. '    ' → logprob: -20.25020408630371

Token 155: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '(' → logprob: -17.625003814697266
    4. '[' → logprob: -19.375003814697266
    5. '000' → logprob: -19.625003814697266
    6. '1' → logprob: -19.625003814697266
    7. '00' → logprob: -20.000003814697266
    8. '-' → logprob: -20.125003814697266
    9. '{' → logprob: -20.500003814697266
    10. 'import' → logprob: -20.687503814697266

Token 156: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013871398754417896
    2. '
' → logprob: -4.763871192932129
    3. 'pq' → logprob: -5.763871192932129
    4. '    
' → logprob: -7.513871192932129
    5. 'heap' → logprob: -7.513871192932129
    6. 'import' → logprob: -8.013871192932129
    7. ',' → logprob: -8.513871192932129
    8. ' heap' → logprob: -9.013871192932129
    9. ' pq' → logprob: -9.513871192932129
    10. 'state' → logprob: -10.138871192932129

Token 157: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03809657692909241
    2. 'pq' → logprob: -3.4130966663360596
    3. 'heap' → logprob: -6.2880964279174805
    4. '
' → logprob: -7.1630964279174805
    5. ' pq' → logprob: -7.6630964279174805
    6. 'import' → logprob: -7.9130964279174805
    7. '    
' → logprob: -8.41309642791748
    8. ' heap' → logprob: -8.66309642791748
    9. 'q' → logprob: -9.16309642791748
    10. 'queue' → logprob: -9.41309642791748

Token 158: ' h' (ID: 312)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2387046366930008
    2. 'heap' → logprob: -1.7387046813964844
    3. 'pq' → logprob: -3.4887046813964844
    4. ' heap' → logprob: -5.738704681396484
    5. 'dp' → logprob: -7.238704681396484
    6. 'queue' → logprob: -7.738704681396484
    7. 'initial' → logprob: -7.738704681396484
    8. 'import' → logprob: -7.738704681396484
    9. 'hq' → logprob: -8.238704681396484
    10. 'start' → logprob: -8.488704681396484

Token 159: 'q' (ID: 80)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09670308232307434
    2. 'e' → logprob: -2.971703052520752
    3. 'q' → logprob: -3.346703052520752
    4. '=' → logprob: -5.346703052520752
    5. '=[]' → logprob: -7.721703052520752
    6. 'p' → logprob: -8.59670352935791
    7. '   ' → logprob: -9.09670352935791
    8. 'heap' → logprob: -10.22170352935791
    9. 'pq' → logprob: -10.22170352935791
    10. ' ' → logprob: -10.34670352935791

Token 160: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1614534556865692
    2. '=' → logprob: -1.9114534854888916
    3. '=[]' → logprob: -6.7864532470703125
    4. '.append' → logprob: -10.411453247070312
    5. ' ' → logprob: -10.536453247070312
    6. '.push' → logprob: -11.911453247070312
    7. '.' → logprob: -11.911453247070312
    8. ' =[' → logprob: -12.036453247070312
    9. '=[' → logprob: -12.411453247070312
    10. 'q' → logprob: -13.036453247070312

Token 161: ' []
' (ID: 8911)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.024905584752559662
    2. ' [(' → logprob: -4.024905681610107
    3. '[]' → logprob: -5.024905681610107
    4. ' []' → logprob: -8.77490520477295
    5. '[]
' → logprob: -12.27490520477295
    6. '[' → logprob: -14.39990520477295
    7. '[((' → logprob: -14.52490520477295
    8. ' []
' → logprob: -15.64990520477295
    9. '[]

' → logprob: -17.274906158447266
    10. ' [' → logprob: -17.524906158447266

Token 162: '   ' (ID: 271)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.07852198928594589
    2. ' heap' → logprob: -3.453521966934204
    3. '   ' → logprob: -3.703521966934204
    4. 'import' → logprob: -4.578522205352783
    5. '(heap' → logprob: -5.203522205352783
    6. 'hq' → logprob: -7.078522205352783
    7. 'he' → logprob: -7.328522205352783
    8. ',' → logprob: -8.078521728515625
    9. 'h' → logprob: -8.453521728515625
    10. '
' → logprob: -8.453521728515625

Token 163: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.008504890836775303
    2. ' heap' → logprob: -4.883504867553711
    3. 'import' → logprob: -7.133504867553711
    4. '   ' → logprob: -9.383504867553711
    5. 'he' → logprob: -12.008504867553711
    6. '```' → logprob: -12.758504867553711
    7. '
' → logprob: -12.883504867553711
    8. '    
' → logprob: -13.883504867553711
    9. '(heap' → logprob: -14.133504867553711
    10. ' import' → logprob: -14.133504867553711

Token 164: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.057743949990254e-05
    2. '.he' → logprob: -12.000020980834961
    3. ' .' → logprob: -12.375020980834961
    4. '.push' → logprob: -13.000020980834961
    5. '```' → logprob: -13.625020980834961
    6. '.' → logprob: -13.750020980834961
    7. '.append' → logprob: -14.000020980834961
    8. 'h' → logprob: -14.125020980834961
    9. '   ' → logprob: -14.250020980834961
    10. 'push' → logprob: -14.750020980834961

Token 165: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -9.901345038088039e-05
    2. '.heap' → logprob: -9.375099182128906
    3. '.' → logprob: -11.625099182128906
    4. '.push' → logprob: -12.875099182128906
    5. ' .' → logprob: -13.875099182128906
    6. 'he' → logprob: -14.375099182128906
    7. ').' → logprob: -14.625099182128906
    8. '```' → logprob: -15.875099182128906
    9. '.put' → logprob: -15.875099182128906
    10. ' he' → logprob: -16.500099182128906

Token 166: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -6.253713218029588e-05
    2. 'pp' → logprob: -10.125062942504883
    3. 'ap' → logprob: -11.000062942504883
    4. 'push' → logprob: -12.250062942504883
    5. 'q' → logprob: -15.000062942504883
    6. 'p' → logprob: -15.375062942504883
    7. '```' → logprob: -15.500062942504883
    8. 'appen' → logprob: -17.000062942504883
    9. '[' → logprob: -17.375062942504883
    10. '   ' → logprob: -17.750062942504883

Token 167: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.0010760379955172539
    2. 'sh' → logprob: -7.6260762214660645
    3. 'push' → logprob: -7.8760762214660645
    4. 'nd' → logprob: -9.376075744628906
    5. 'ng' → logprob: -10.376075744628906
    6. 'm' → logprob: -11.126075744628906
    7. 't' → logprob: -11.251075744628906
    8. 'Push' → logprob: -11.376075744628906
    9. 'n' → logprob: -11.751075744628906
    10. 'pp' → logprob: -12.001075744628906

Token 168: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -6.153795766294934e-06
    2. '(' → logprob: -12.250005722045898
    3. ' (' → logprob: -13.875005722045898
    4. '((' → logprob: -15.375005722045898
    5. '(heap' → logprob: -16.3750057220459
    6. ' ' → logprob: -19.8750057220459
    7. '(s' → logprob: -20.0000057220459
    8. '(q' → logprob: -20.0000057220459
    9. '(d' → logprob: -20.7500057220459
    10. '```' → logprob: -21.1250057220459

Token 169: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -4.320199877838604e-07
    2. 'p' → logprob: -16.375
    3. 'Q' → logprob: -16.875
    4. '```' → logprob: -16.875
    5. '(q' → logprob: -17.0
    6. ' q' → logprob: -17.5
    7. '(h' → logprob: -17.875
    8. '	q' → logprob: -18.125
    9. '[' → logprob: -18.125
    10. '_q' → logprob: -18.1875

Token 170: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04478932544589043
    2. '((' → logprob: -3.1697893142700195
    3. ' (' → logprob: -6.5447893142700195
    4. ',' → logprob: -8.16978931427002
    5. ')' → logprob: -9.91978931427002
    6. ',(' → logprob: -11.79478931427002
    7. ' ' → logprob: -12.16978931427002
    8. '   ' → logprob: -13.54478931427002
    9. ' ,' → logprob: -13.79478931427002
    10. '([' → logprob: -13.79478931427002

Token 171: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011048408225178719
    2. ' (' → logprob: -4.511048316955566
    3. '   ' → logprob: -14.261048316955566
    4. ')' → logprob: -17.386049270629883
    5. ' ' → logprob: -17.386049270629883
    6. '0' → logprob: -19.511049270629883
    7. '  ' → logprob: -19.886049270629883
    8. '(
' → logprob: -20.011049270629883
    9. '((' → logprob: -20.136049270629883
    10. '```' → logprob: -21.261049270629883

Token 172: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.8206473871250637e-05
    2. '(' → logprob: -10.500028610229492
    3. ' ' → logprob: -14.250028610229492
    4. '   ' → logprob: -19.125028610229492
    5. ' (' → logprob: -19.750028610229492
    6. '[' → logprob: -19.875028610229492
    7. ')' → logprob: -20.250028610229492
    8. '۰' → logprob: -20.500028610229492
    9. '
' → logprob: -21.250028610229492
    10. '```' → logprob: -21.375028610229492

Token 173: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.084206375409849e-05
    2. ' ,' → logprob: -10.500041007995605
    3. '0' → logprob: -11.500041007995605
    4. ')' → logprob: -13.000041007995605
    5. ',
' → logprob: -14.750041007995605
    6. '```' → logprob: -16.12504005432129
    7. ' ' → logprob: -16.37504005432129
    8. ',

' → logprob: -16.87504005432129
    9. '),' → logprob: -17.12504005432129
    10. '

' → logprob: -17.37504005432129

Token 174: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010328111238777637
    2. ' ' → logprob: -6.876032829284668
    3. ')' → logprob: -18.25103187561035
    4. '   ' → logprob: -18.25103187561035
    5. '
' → logprob: -18.50103187561035
    6. '<|end|>' → logprob: -18.62603187561035
    7. '  ' → logprob: -19.87603187561035
    8. ',' → logprob: -19.93853187561035
    9. '۰' → logprob: -20.00103187561035
    10. ' 
' → logprob: -20.37603187561035

Token 175: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. ')' → logprob: -18.0000057220459
    4. '   ' → logprob: -18.8750057220459
    5. '  ' → logprob: -19.7500057220459
    6. '
' → logprob: -19.9375057220459
    7. '۰' → logprob: -20.0000057220459
    8. '(' → logprob: -20.5000057220459
    9. '00' → logprob: -20.5625057220459
    10. '<|end|>' → logprob: -21.1250057220459

Token 176: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001114106344175525
    2. '0' → logprob: -9.50011157989502
    3. ' ,' → logprob: -10.37511157989502
    4. ',
' → logprob: -13.12511157989502
    5. ')' → logprob: -14.00011157989502
    6. '<|end|>' → logprob: -14.00011157989502
    7. '))' → logprob: -14.75011157989502
    8. '   ' → logprob: -14.87511157989502
    9. '```' → logprob: -14.87511157989502
    10. ' ' → logprob: -15.87511157989502

Token 177: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017958412354346365
    2. ' ' → logprob: -8.625179290771484
    3. ')' → logprob: -17.875179290771484
    4. '   ' → logprob: -18.250179290771484
    5. '```' → logprob: -18.500179290771484
    6. '  ' → logprob: -19.000179290771484
    7. '<|end|>' → logprob: -19.375179290771484
    8. ',' → logprob: -19.625179290771484
    9. '1' → logprob: -19.750179290771484
    10. '  
' → logprob: -20.000179290771484

Token 178: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. ')' → logprob: -17.750015258789062
    4. '   ' → logprob: -17.750015258789062
    5. '```' → logprob: -18.875015258789062
    6. '  ' → logprob: -19.000015258789062
    7. ',' → logprob: -19.437515258789062
    8. '۰' → logprob: -20.187515258789062
    9. '1' → logprob: -20.187515258789062
    10. '    ' → logprob: -20.250015258789062

Token 179: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.6100132496794686e-05
    2. '0' → logprob: -10.250056266784668
    3. ' ,' → logprob: -10.875056266784668
    4. '))' → logprob: -14.250056266784668
    5. ',
' → logprob: -14.750056266784668
    6. '```' → logprob: -15.250056266784668
    7. ')' → logprob: -15.375056266784668
    8. '<|end|>' → logprob: -16.37505531311035
    9. ' ' → logprob: -16.50005531311035
    10. ',

' → logprob: -17.12505531311035

Token 180: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6376947164535522
    2. 'house' → logprob: -0.7626947164535522
    3. ' house' → logprob: -5.637694835662842
    4. ' ' → logprob: -6.512694835662842
    5. 'home' → logprob: -11.637694358825684
    6. '```' → logprob: -12.450194358825684
    7. '   ' → logprob: -12.637694358825684
    8. 'ho' → logprob: -13.012694358825684
    9. 'hou' → logprob: -13.325194358825684
    10. 'horse' → logprob: -13.575194358825684

Token 181: '0' (ID: 15)
  Prédit: 'house'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'house' → logprob: -0.2258807271718979
    2. '0' → logprob: -1.600880742073059
    3. ' house' → logprob: -7.8508806228637695
    4. ' ' → logprob: -9.97588062286377
    5. 'home' → logprob: -11.22588062286377
    6. '```' → logprob: -13.10088062286377
    7. '   ' → logprob: -13.41338062286377
    8. 'horse' → logprob: -13.78838062286377
    9. ')' → logprob: -14.03838062286377
    10. 'pos' → logprob: -14.22588062286377

Token 182: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.513339445111342e-05
    2. '))' → logprob: -10.375044822692871
    3. '(),' → logprob: -12.000044822692871
    4. ' ,' → logprob: -12.500044822692871
    5. ')' → logprob: -13.250044822692871
    6. ',
' → logprob: -14.375044822692871
    7. ')))' → logprob: -14.750044822692871
    8. ',)' → logprob: -15.125044822692871
    9. '```' → logprob: -15.500044822692871
    10. '()' → logprob: -15.750044822692871

Token 183: ' (' (ID: 350)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.011974084191024303
    2. '()' → logprob: -4.636973857879639
    3. '())' → logprob: -6.261973857879639
    4. '())))' → logprob: -9.386974334716797
    5. '()))
' → logprob: -9.761974334716797
    6. '()))

' → logprob: -9.761974334716797
    7. 'tuple' → logprob: -10.136974334716797
    8. '())).' → logprob: -11.011974334716797
    9. ' ())' → logprob: -11.136974334716797
    10. '(),' → logprob: -11.511974334716797

Token 184: ')))' (ID: 15975)
  Prédit: ')))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.20252768695354462
    2. ')' → logprob: -1.702527642250061
    3. '))' → logprob: -6.8275275230407715
    4. ')))
' → logprob: -11.82752799987793
    5. ')));' → logprob: -12.07752799987793
    6. '))))' → logprob: -12.82752799987793
    7. '0' → logprob: -12.95252799987793
    8. ' ' → logprob: -12.95252799987793
    9. '')))' → logprob: -13.07752799987793
    10. ')))

' → logprob: -13.07752799987793

Token 185: ' ' (ID: 220)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.2630590796470642
    2. '   ' → logprob: -1.638059139251709
    3. ' while' → logprob: -3.513059139251709
    4. ')' → logprob: -5.763059139251709
    5. '
' → logprob: -5.888059139251709
    6. '    
' → logprob: -7.513059139251709
    7. '	while' → logprob: -7.763059139251709
    8. ',' → logprob: -9.38805866241455
    9. '<|end|>' → logprob: -9.63805866241455
    10. ')
' → logprob: -10.38805866241455

Token 186: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.41161462664604187
    2. '   ' → logprob: -1.1616146564483643
    3. ' while' → logprob: -4.286614418029785
    4. '
' → logprob: -5.286614418029785
    5. ')' → logprob: -5.661614418029785
    6. '    
' → logprob: -6.536614418029785
    7. '	while' → logprob: -8.161614418029785
    8. '<|end|>' → logprob: -8.661614418029785
    9. '```' → logprob: -9.661614418029785
    10. ')
' → logprob: -9.661614418029785

Token 187: ' distance' (ID: 9324)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.278540015220642
    2. '0' → logprob: -1.403540015220642
    3. '<|end|>' → logprob: -1.903540015220642
    4. 'distance' → logprob: -2.1535401344299316
    5. '(' → logprob: -2.7785401344299316
    6. ' ' → logprob: -3.2785401344299316
    7. 'Next' → logprob: -4.153540134429932
    8. '#' → logprob: -4.278540134429932
    9. '
' → logprob: -4.403540134429932
    10. 'def' → logprob: -4.528540134429932

Token 188: '_sum' (ID: 29859)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 189: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 190: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.41115179657936096
    2. '0' → logprob: -1.1611517667770386
    3. ' time' → logprob: -3.911151885986328
    4. ' ' → logprob: -5.661151885986328
    5. '<|end|>' → logprob: -7.911151885986328
    6. '"time' → logprob: -10.411151885986328
    7. '_time' → logprob: -11.411151885986328
    8. 'import' → logprob: -11.786151885986328
    9. ')' → logprob: -11.911151885986328
    10. '<|end|>' → logprob: -12.036151885986328

Token 191: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007167232106439769
    2. ' ,' → logprob: -7.375716686248779
    3. '<|end|>' → logprob: -10.125717163085938
    4. ',
' → logprob: -11.500717163085938
    5. '0' → logprob: -11.500717163085938
    6. ' ' → logprob: -12.375717163085938
    7. '   ' → logprob: -12.375717163085938
    8. ')' → logprob: -12.875717163085938
    9. '<|end|>' → logprob: -13.000717163085938
    10. '	' → logprob: -13.375717163085938

Token 192: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.02732972241938114
    2. '0' → logprob: -3.777329683303833
    3. ' idx' → logprob: -5.527329921722412
    4. ' ' → logprob: -10.027329444885254
    5. '<|end|>' → logprob: -10.652329444885254
    6. 'index' → logprob: -11.277329444885254
    7. '_idx' → logprob: -12.402329444885254
    8. 'n' → logprob: -12.527329444885254
    9. '	idx' → logprob: -12.777329444885254
    10. 'next' → logprob: -13.527329444885254

Token 193: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013491649879142642
    2. ' ,' → logprob: -6.626348972320557
    3. '<|end|>' → logprob: -11.001349449157715
    4. ',
' → logprob: -13.376349449157715
    5. ')' → logprob: -13.626349449157715
    6. '0' → logprob: -13.626349449157715
    7. ' ' → logprob: -13.876349449157715
    8. '```' → logprob: -15.376349449157715
    9. '[' → logprob: -15.751349449157715
    10. ',pos' → logprob: -16.0013484954834

Token 194: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.25224778056144714
    2. '0' → logprob: -1.5022478103637695
    3. ' pos' → logprob: -8.37724781036377
    4. ' ' → logprob: -9.62724781036377
    5. 'position' → logprob: -10.87724781036377
    6. '```' → logprob: -13.37724781036377
    7. 'Pos' → logprob: -14.62724781036377
    8. '_pos' → logprob: -14.62724781036377
    9. '<|end|>' → logprob: -15.25224781036377
    10. 'house' → logprob: -15.50224781036377

Token 195: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011689399980241433
    2. ' ,' → logprob: -10.125117301940918
    3. ')' → logprob: -10.500117301940918
    4. '<|end|>' → logprob: -10.500117301940918
    5. ',)' → logprob: -11.750117301940918
    6. ',
' → logprob: -12.875117301940918
    7. ',None' → logprob: -13.500117301940918
    8. ',

' → logprob: -13.625117301940918
    9. '   ' → logprob: -13.750117301940918
    10. '<|end|>' → logprob: -14.000117301940918

Token 196: ' carrying' (ID: 25328)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.0017925129504874349
    2. ' carrying' → logprob: -6.8767924308776855
    3. '()' → logprob: -7.8767924308776855
    4. '())' → logprob: -8.001792907714844
    5. 'c' → logprob: -11.376792907714844
    6. ' ())' → logprob: -11.376792907714844
    7. ')' → logprob: -12.126792907714844
    8. ' ()' → logprob: -12.876792907714844
    9. '(c' → logprob: -12.876792907714844
    10. '(' → logprob: -13.251792907714844

Token 197: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31304076313972473
    2. 'while' → logprob: -1.6880407333374023
    3. '<|end|>' → logprob: -2.9380407333374023
    4. '   ' → logprob: -4.188040733337402
    5. ' while' → logprob: -4.813040733337402
    6. '
' → logprob: -6.188040733337402
    7. ',' → logprob: -6.188040733337402
    8. '<|end|>' → logprob: -6.563040733337402
    9. '```' → logprob: -7.813040733337402
    10. ')
' → logprob: -8.188040733337402

Token 198: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6415642499923706
    2. ')' → logprob: -1.1415642499923706
    3. '   ' → logprob: -2.14156436920166
    4. ' while' → logprob: -3.76656436920166
    5. ',' → logprob: -5.14156436920166
    6. '```' → logprob: -5.76656436920166
    7. 'While' → logprob: -6.76656436920166
    8. ':' → logprob: -7.14156436920166
    9. '	while' → logprob: -7.89156436920166
    10. '<|end|>' → logprob: -8.14156436920166

Token 199: ' def' (ID: 1056)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.00013524403038900346
    2. ' while' → logprob: -9.50013542175293
    3. '   ' → logprob: -9.75013542175293
    4. '```' → logprob: -13.62513542175293
    5. 'While' → logprob: -14.50013542175293
    6. '	while' → logprob: -16.00013542175293
    7. '    
' → logprob: -16.25013542175293
    8. '
' → logprob: -17.12513542175293
    9. '``' → logprob: -17.25013542175293
    10. ')' → logprob: -17.37513542175293

Token 200: ' move' (ID: 5275)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -1.443323016166687
    2. ' add' → logprob: -1.568323016166687
    3. ' pop' → logprob: -1.818323016166687
    4. ' is' → logprob: -2.5683231353759766
    5. ' try' → logprob: -2.9433231353759766
    6. ' push' → logprob: -3.0683231353759766
    7. ' possible' → logprob: -3.1933231353759766
    8. ' valid' → logprob: -3.1933231353759766
    9. ' neighbors' → logprob: -3.4433231353759766
    10. ' get' → logprob: -3.6933231353759766

Token 201: '_time' (ID: 6425)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.666289746761322
    2. '(distance' → logprob: -1.7912898063659668
    3. '(' → logprob: -1.9162898063659668
    4. '(pos' → logprob: -2.666289806365967
    5. '_distance' → logprob: -3.291289806365967
    6. '(from' → logprob: -4.416289806365967
    7. ' (' → logprob: -4.541289806365967
    8. '_pos' → logprob: -4.541289806365967
    9. '_dist' → logprob: -5.666289806365967
    10. '(to' → logprob: -5.666289806365967

Token 202: '(dist' (ID: 78981)
  Prédit: '(pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.095026396214962
    2. '(from' → logprob: -2.9700264930725098
    3. '(start' → logprob: -4.09502649307251
    4. '(' → logprob: -4.47002649307251
    5. '(p' → logprob: -5.84502649307251
    6. '(distance' → logprob: -5.97002649307251
    7. '(curr' → logprob: -6.34502649307251
    8. '(current' → logprob: -6.84502649307251
    9. '(prev' → logprob: -7.22002649307251
    10. '(cur' → logprob: -7.72002649307251

Token 203: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023945463821291924
    2. '):
' → logprob: -3.7739455699920654
    3. ')' → logprob: -7.523945331573486
    4. ',' → logprob: -9.273945808410645
    5. '):

' → logprob: -10.523945808410645
    6. ' ):' → logprob: -10.648945808410645
    7. '):
' → logprob: -12.273945808410645
    8. '=' → logprob: -12.773945808410645
    9. ':' → logprob: -13.273945808410645
    10. '   ' → logprob: -13.773945808410645

Token 204: ' k' (ID: 372)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'speed' → logprob: -0.15444493293762207
    2. ' speed' → logprob: -2.779444932937622
    3. 'p' → logprob: -3.654444932937622
    4. 't' → logprob: -3.904444932937622
    5. 'v' → logprob: -4.779444694519043
    6. 'pos' → logprob: -5.404444694519043
    7. 'vel' → logprob: -5.779444694519043
    8. ' t' → logprob: -6.154444694519043
    9. 'spd' → logprob: -6.154444694519043
    10. 'carry' → logprob: -6.154444694519043

Token 205: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6336891055107117
    2. '):
' → logprob: -0.7586891055107117
    3. 'eep' → logprob: -7.758688926696777
    4. '):

' → logprob: -8.508688926696777
    5. '=' → logprob: -8.633688926696777
    6. ')' → logprob: -9.883688926696777
    7. 'ey' → logprob: -10.133688926696777
    8. ')=' → logprob: -10.508688926696777
    9. 'e' → logprob: -10.508688926696777
    10. '):
' → logprob: -10.633688926696777

Token 206: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7598415613174438
    2. '   ' → logprob: -1.2598415613174438
    3. '       ' → logprob: -1.5098415613174438
    4. '):' → logprob: -4.509841442108154
    5. ':return' → logprob: -5.759841442108154
    6. '<|end|>' → logprob: -6.134841442108154
    7. ' return' → logprob: -6.509841442108154
    8. '    ' → logprob: -6.509841442108154
    9. ':
' → logprob: -6.634841442108154
    10. ',' → logprob: -6.759841442108154

Token 207: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3949003219604492
    2. ' return' → logprob: -1.6449003219604492
    3. 'return' (adapté à ' return') → logprob: -2.019900321960449
    4. ' if' → logprob: -8.01990032196045
    5. '       ' → logprob: -9.89490032196045
    6. ' ' → logprob: -10.26990032196045
    7. 'if' → logprob: -10.26990032196045
    8. '	return' → logprob: -10.64490032196045
    9. 'import' → logprob: -10.89490032196045
    10. '  ' → logprob: -11.01990032196045

Token 208: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.04295043274760246
    2. ' dist' → logprob: -3.417950391769409
    3. '(dist' → logprob: -5.042950630187988
    4. '(' → logprob: -6.917950630187988
    5. 'max' → logprob: -7.292950630187988
    6. ' (' → logprob: -7.667950630187988
    7. '2' → logprob: -8.167950630187988
    8. '1' → logprob: -9.042950630187988
    9. ' max' → logprob: -9.292950630187988
    10. ' ' → logprob: -10.417950630187988

Token 209: '*(' (ID: 14793)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.8794232606887817
    2. '*' → logprob: -1.1294232606887817
    3. ' +' → logprob: -2.004423141479492
    4. '+' → logprob: -2.754423141479492
    5. '**' → logprob: -3.504423141479492
    6. ' /' → logprob: -4.629423141479492
    7. '*(' → logprob: -5.004423141479492
    8. '*k' → logprob: -5.254423141479492
    9. ' **' → logprob: -6.254423141479492
    10. '/k' → logprob: -6.379423141479492

Token 210: 'k' (ID: 74)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7231355905532837
    2. 'k' → logprob: -1.0981355905532837
    3. '1' → logprob: -1.8481355905532837
    4. '10' → logprob: -5.098135471343994
    5. '(' → logprob: -5.348135471343994
    6. '11' → logprob: -5.473135471343994
    7. '(k' → logprob: -6.598135471343994
    8. '100' → logprob: -6.848135471343994
    9. '101' → logprob: -6.848135471343994
    10. '5' → logprob: -7.348135471343994

Token 211: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.010524090379476547
    2. ' +' → logprob: -4.885524272918701
    3. '**' → logprob: -6.385524272918701
    4. ')' → logprob: -7.385524272918701
    5. '+k' → logprob: -7.885524272918701
    6. '*' → logprob: -9.510523796081543
    7. ')**' → logprob: -10.010523796081543
    8. '*k' → logprob: -10.385523796081543
    9. '-' → logprob: -11.010523796081543
    10. '2' → logprob: -11.385523796081543

Token 212: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.013081294484436512
    2. '2' → logprob: -5.138081073760986
    3. 'k' → logprob: -5.388081073760986
    4. 'dist' → logprob: -6.763081073760986
    5. '5' → logprob: -8.263081550598145
    6. '10' → logprob: -8.513081550598145
    7. '(' → logprob: -8.763081550598145
    8. '(k' → logprob: -8.763081550598145
    9. '0' → logprob: -8.888081550598145
    10. '3' → logprob: -9.013081550598145

Token 213: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00022129806166049093
    2. '//' → logprob: -9.875221252441406
    3. ')
' → logprob: -10.250221252441406
    4. ' )' → logprob: -10.375221252441406
    5. '+' → logprob: -10.875221252441406
    6. ')**' → logprob: -11.000221252441406
    7. ')//' → logprob: -11.000221252441406
    8. '))' → logprob: -11.125221252441406
    9. '<|end|>' → logprob: -12.375221252441406
    10. '**' → logprob: -12.500221252441406

Token 214: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1042592525482178
    2. '   ' → logprob: -1.7292592525482178
    3. ':' → logprob: -1.8542592525482178
    4. '
' → logprob: -1.9792592525482178
    5. '<|end|>' → logprob: -2.2292592525482178
    6. '\n' → logprob: -2.9792592525482178
    7. '):' → logprob: -4.979259490966797
    8. '<|end|>' → logprob: -5.229259490966797
    9. '    
' → logprob: -5.604259490966797
    10. ' ' → logprob: -5.729259490966797

Token 215: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.267278790473938
    2. '   ' → logprob: -1.767278790473938
    3. ' while' → logprob: -2.7672786712646484
    4. ')' → logprob: -8.017278671264648
    5. '```' → logprob: -8.767278671264648
    6. '	while' → logprob: -8.892278671264648
    7. '    
' → logprob: -9.392278671264648
    8. 'While' → logprob: -9.392278671264648
    9. '<|end|>' → logprob: -9.642278671264648
    10. '
' → logprob: -10.767278671264648

Token 216: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.0021029175259172916
    2. 'h' → logprob: -6.377102851867676
    3. 'hq' → logprob: -8.127102851867676
    4. ' len' → logprob: -9.752102851867676
    5. '(h' → logprob: -10.377102851867676
    6. 'len' → logprob: -11.252102851867676
    7. '	h' → logprob: -13.877102851867676
    8. ' ' → logprob: -14.752102851867676
    9. '```' → logprob: -15.002102851867676
    10. '[h' → logprob: -15.627102851867676

Token 217: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.2233183042553719e-05
    2. '(len' → logprob: -12.500012397766113
    3. 'len' → logprob: -12.625012397766113
    4. 'c' → logprob: -13.500012397766113
    5. 'Q' → logprob: -13.750012397766113
    6. '(q' → logprob: -14.250012397766113
    7. '[' → logprob: -15.000012397766113
    8. 'p' → logprob: -15.375012397766113
    9. ' len' → logprob: -15.375012397766113
    10. '[len' → logprob: -15.625012397766113

Token 218: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003062088042497635
    2. ':
' → logprob: -6.2530622482299805
    3. '[' → logprob: -6.8780622482299805
    4. ' and' → logprob: -10.62806224822998
    5. '.pop' → logprob: -10.87806224822998
    6. ',' → logprob: -11.50306224822998
    7. 'and' → logprob: -11.75306224822998
    8. '.' → logprob: -11.87806224822998
    9. '):' → logprob: -11.87806224822998
    10. '=' → logprob: -12.00306224822998

Token 219: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014551864005625248
    2. ',' → logprob: -4.389551639556885
    3. '   ' → logprob: -7.639551639556885
    4. '(distance' → logprob: -8.514552116394043
    5. ' ,' → logprob: -8.639552116394043
    6. '(' → logprob: -8.639552116394043
    7. '0' → logprob: -8.889552116394043
    8. 'dist' → logprob: -8.889552116394043
    9. 'distance' → logprob: -9.014552116394043
    10. '```' → logprob: -9.264552116394043

Token 220: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.09418103098869324
    2. ' dist' → logprob: -3.2191810607910156
    3. 'distance' → logprob: -3.2191810607910156
    4. 'd' → logprob: -4.844181060791016
    5. ' distance' → logprob: -6.594181060791016
    6. ' d' → logprob: -8.344181060791016
    7. '   ' → logprob: -8.969181060791016
    8. '(distance' → logprob: -9.219181060791016
    9. '0' → logprob: -9.719181060791016
    10. '(dist' → logprob: -9.969181060791016

Token 221: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.019521357491612434
    2. ',' → logprob: -4.019521236419678
    3. '_,' → logprob: -7.144521236419678
    4. ',_' → logprob: -7.894521236419678
    5. '_s' → logprob: -9.394521713256836
    6. '_sq' → logprob: -10.769521713256836
    7. '_so' → logprob: -10.894521713256836
    8. 'sum' → logprob: -11.019521713256836
    9. ' ,' → logprob: -11.394521713256836
    10. '_val' → logprob: -11.769521713256836

Token 222: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1160349458805285e-05
    2. ' ,' → logprob: -11.500011444091797
    3. ',
' → logprob: -14.625011444091797
    4. ',next' → logprob: -16.000011444091797
    5. '_,' → logprob: -16.375011444091797
    6. ',n' → logprob: -16.750011444091797
    7. ',current' → logprob: -17.125011444091797
    8. ',

' → logprob: -17.125011444091797
    9. ',user' → logprob: -17.250011444091797
    10. '=' → logprob: -17.750011444091797

Token 223: ' time' (ID: 1058)
  Prédit: ' time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.5783892273902893
    2. 'time' → logprob: -0.8283892273902893
    3. ' t' → logprob: -6.2033891677856445
    4. 't' → logprob: -7.9533891677856445
    5. ' current' → logprob: -9.828389167785645
    6. ' curr' → logprob: -12.328389167785645
    7. 'current' → logprob: -12.453389167785645
    8. '_time' → logprob: -12.703389167785645
    9. 'curr' → logprob: -13.578389167785645
    10. 'cur' → logprob: -13.953389167785645

Token 224: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.440506407059729e-05
    2. ' ,' → logprob: -10.37503433227539
    3. '_,' → logprob: -13.75003433227539
    4. '=' → logprob: -14.50003433227539
    5. ',next' → logprob: -14.87503433227539
    6. '<|end|>' → logprob: -15.00003433227539
    7. ',user' → logprob: -15.37503433227539
    8. '_next' → logprob: -15.75003433227539
    9. ',
' → logprob: -16.50003433227539
    10. ',current' → logprob: -17.00003433227539

Token 225: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.06197172403335571
    2. ' idx' → logprob: -2.811971664428711
    3. 'index' → logprob: -13.436971664428711
    4. '_idx' → logprob: -13.686971664428711
    5. '	idx' → logprob: -13.936971664428711
    6. '(idx' → logprob: -16.31197166442871
    7. 'i' → logprob: -16.31197166442871
    8. '[idx' → logprob: -16.68697166442871
    9. ' ' → logprob: -16.81197166442871
    10. '```' → logprob: -17.18697166442871

Token 226: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.125210297293961e-05
    2. ' ,' → logprob: -9.750081062316895
    3. '=' → logprob: -11.750081062316895
    4. '<|end|>' → logprob: -12.125081062316895
    5. '       ' → logprob: -12.625081062316895
    6. ',
' → logprob: -13.750081062316895
    7. ')' → logprob: -13.750081062316895
    8. ',next' → logprob: -14.125081062316895
    9. ',user' → logprob: -14.250081062316895
    10. ' =' → logprob: -14.875081062316895

Token 227: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.2519303858280182
    2. ' pos' → logprob: -1.5019303560256958
    3. '_pos' → logprob: -15.001930236816406
    4. '```' → logprob: -15.376930236816406
    5. '	pos' → logprob: -15.376930236816406
    6. ',pos' → logprob: -15.751930236816406
    7. ' ' → logprob: -16.501930236816406
    8. 'position' → logprob: -17.001930236816406
    9. ',' → logprob: -17.126930236816406
    10. 'Pos' → logprob: -17.126930236816406

Token 228: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001249925117008388
    2. ' ,' → logprob: -9.50012493133545
    3. '=' → logprob: -10.00012493133545
    4. ' =' → logprob: -13.12512493133545
    5. ')' → logprob: -14.50012493133545
    6. ',
' → logprob: -14.62512493133545
    7. '<|end|>' → logprob: -14.75012493133545
    8. '_,' → logprob: -15.12512493133545
    9. ',next' → logprob: -15.62512493133545
    10. '‌,' → logprob: -16.125125885009766

Token 229: ' carrying' (ID: 25328)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.011069757863879204
    2. ' carrying' → logprob: -4.5110697746276855
    3. 'carry' → logprob: -11.136069297790527
    4. 'c' → logprob: -12.636069297790527
    5. ' car' → logprob: -13.886069297790527
    6. 'Car' → logprob: -14.511069297790527
    7. ' ' → logprob: -15.011069297790527
    8. '```' → logprob: -15.511069297790527
    9. '_car' → logprob: -15.573569297790527
    10. 'care' → logprob: -15.761069297790527

Token 230: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12695446610450745
    2. ' =' → logprob: -2.1269545555114746
    3. ')' → logprob: -11.001954078674316
    4. ',' → logprob: -12.126954078674316
    5. ')=' → logprob: -13.251954078674316
    6. '   ' → logprob: -13.626954078674316
    7. '       ' → logprob: -14.626954078674316
    8. ' ' → logprob: -15.251954078674316
    9. '    ' → logprob: -15.751954078674316
    10. '=
' → logprob: -15.751954078674316

Token 231: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.06197093799710274
    2. ' heap' → logprob: -2.8119709491729736
    3. ' ' → logprob: -13.811970710754395
    4. 'he' → logprob: -13.811970710754395
    5. 'hq' → logprob: -14.311970710754395
    6. '   ' → logprob: -15.686970710754395
    7. '(heap' → logprob: -15.686970710754395
    8. '.heap' → logprob: -15.811970710754395
    9. '
' → logprob: -15.936970710754395
    10. 'h' → logprob: -16.68697166442871

Token 232: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.1994775377388578e-05
    2. 'app' → logprob: -11.375012397766113
    3. 'p' → logprob: -15.500012397766113
    4. 'op' → logprob: -15.750012397766113
    5. 'pop' → logprob: -16.875011444091797
    6. '[' → logprob: -17.500011444091797
    7. 'qq' → logprob: -17.875011444091797
    8. 'g' → logprob: -18.125011444091797
    9. 'replace' → logprob: -18.250011444091797
    10. '```' → logprob: -18.250011444091797

Token 233: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.006676647812128067
    2. 'he' → logprob: -5.25667667388916
    3. 'op' → logprob: -7.25667667388916
    4. 'q' → logprob: -7.63167667388916
    5. '[' → logprob: -9.63167667388916
    6. 'app' → logprob: -9.75667667388916
    7. '```' → logprob: -10.13167667388916
    8. '.pop' → logprob: -10.50667667388916
    9. ' he' → logprob: -10.50667667388916
    10. '.heap' → logprob: -11.38167667388916

Token 234: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -4.274932143744081e-05
    2. 'pp' → logprob: -10.125042915344238
    3. 'ap' → logprob: -13.125042915344238
    4. 'appe' → logprob: -15.625042915344238
    5. '[' → logprob: -15.875042915344238
    6. 'appen' → logprob: -16.250041961669922
    7. '```' → logprob: -16.625041961669922
    8. ' app' → logprob: -17.000041961669922
    9. 'append' → logprob: -17.750041961669922
    10. '_app' → logprob: -18.000041961669922

Token 235: 'op' (ID: 467)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.4876401424407959
    2. 'ush' → logprob: -1.362640142440796
    3. 'op' → logprob: -2.112640142440796
    4. 'pp' → logprob: -5.237640380859375
    5. 'ap' → logprob: -6.862640380859375
    6. 'he' → logprob: -7.112640380859375
    7. 'pop' → logprob: -7.487640380859375
    8. 'e' → logprob: -7.737640380859375
    9. 'p' → logprob: -7.862640380859375
    10. 'ep' → logprob: -9.487640380859375

Token 236: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -1.259079363080673e-05
    2. '(' → logprob: -11.375012397766113
    3. '(
' → logprob: -14.125012397766113
    4. 'h' → logprob: -15.750012397766113
    5. ' (' → logprob: -16.25001335144043
    6. '[h' → logprob: -17.50001335144043
    7. ',h' → logprob: -17.75001335144043
    8. '```' → logprob: -18.25001335144043
    9. '(hr' → logprob: -18.37501335144043
    10. '(q' → logprob: -18.50001335144043

Token 237: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -6.704273118884885e-07
    2. '_q' → logprob: -15.125000953674316
    3. ')' → logprob: -15.375000953674316
    4. '	q' → logprob: -17.875
    5. '_' → logprob: -18.0
    6. 'Q' → logprob: -18.625
    7. ' q' → logprob: -19.0
    8. 'qs' → logprob: -19.1875
    9. 'qh' → logprob: -19.25
    10. '(q' → logprob: -19.375

Token 238: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.763666947837919e-05
    2. ')
' → logprob: -10.00004768371582
    3. ' )' → logprob: -14.00004768371582
    4. '   ' → logprob: -14.75004768371582
    5. '       ' → logprob: -15.12504768371582
    6. ')

' → logprob: -15.50004768371582
    7. '):
' → logprob: -15.87504768371582
    8. ')`' → logprob: -16.50004768371582
    9. ')#' → logprob: -16.75004768371582
    10. '):' → logprob: -17.00004768371582

Token 239: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008783798664808273
    2. ' if' → logprob: -5.13378381729126
    3. '<|end|>' → logprob: -6.00878381729126
    4. 'if' → logprob: -8.508783340454102
    5. '        
' → logprob: -9.383783340454102
    6. '```' → logprob: -10.383783340454102
    7. ')' → logprob: -10.758783340454102
    8. '<|end|>' → logprob: -10.883783340454102
    9. '#' → logprob: -11.883783340454102
    10. '   ' → logprob: -12.133783340454102

Token 240: ' key' (ID: 2140)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.30278441309928894
    2. '       ' → logprob: -1.4277844429016113
    3. ' if' → logprob: -4.552784442901611
    4. 'key' (adapté à ' key') → logprob: -4.677784442901611
    5. 'state' → logprob: -7.177784442901611
    6. ' key' → logprob: -7.552784442901611
    7. '        
' → logprob: -8.927783966064453
    8. '#' → logprob: -9.427783966064453
    9. '_key' → logprob: -11.302783966064453
    10. 'next' → logprob: -11.302783966064453

Token 241: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740898013114929
    2. ' =' → logprob: -0.9740898013114929
    3. '<|end|>' → logprob: -12.349089622497559
    4. ')' → logprob: -12.849089622497559
    5. '=(' → logprob: -13.099089622497559
    6. '=
' → logprob: -13.474089622497559
    7. ')=' → logprob: -14.474089622497559
    8. ' =(' → logprob: -14.599089622497559
    9. ' =
' → logprob: -15.349089622497559
    10. '```' → logprob: -15.974089622497559

Token 242: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.3132742643356323
    2. '(idx' → logprob: -1.3132742643356323
    3. '   ' → logprob: -12.188274383544922
    4. '(' → logprob: -12.938274383544922
    5. '       ' → logprob: -13.313274383544922
    6. '[idx' → logprob: -13.813274383544922
    7. '(index' → logprob: -13.938274383544922
    8. ' ' → logprob: -14.938274383544922
    9. '(id' → logprob: -15.313274383544922
    10. '(n' → logprob: -15.563274383544922

Token 243: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -3.5597102396423e-05
    2. ' idx' → logprob: -10.250035285949707
    3. '   ' → logprob: -16.375036239624023
    4. '(idx' → logprob: -17.500036239624023
    5. 'index' → logprob: -17.625036239624023
    6. '	idx' → logprob: -17.625036239624023
    7. '[idx' → logprob: -19.500036239624023
    8. ')' → logprob: -19.625036239624023
    9. '
' → logprob: -20.125036239624023
    10. '_idx' → logprob: -20.250036239624023

Token 244: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.1080467781284824e-05
    2. ' ,' → logprob: -10.875041007995605
    3. ',pos' → logprob: -10.875041007995605
    4. ',
' → logprob: -12.750041007995605
    5. ')' → logprob: -16.250041961669922
    6. '<|end|>' → logprob: -16.750041961669922
    7. ',p' → logprob: -17.125041961669922
    8. '‌,' → logprob: -17.375041961669922
    9. '```' → logprob: -17.625041961669922
    10. '
' → logprob: -17.750041961669922

Token 245: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.009756204672157764
    2. ' pos' → logprob: -4.634756088256836
    3. '_pos' → logprob: -16.509756088256836
    4. '	pos' → logprob: -16.634756088256836
    5. 'position' → logprob: -18.009756088256836
    6. ')' → logprob: -18.134756088256836
    7. ' ' → logprob: -18.259756088256836
    8. ',pos' → logprob: -18.384756088256836
    9. '(pos' → logprob: -18.509756088256836
    10. 'Pos' → logprob: -19.009756088256836

Token 246: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.491498531133402e-06
    2. ' ,' → logprob: -11.750009536743164
    3. ',c' → logprob: -13.625009536743164
    4. ',
' → logprob: -15.500009536743164
    5. ')' → logprob: -16.500009536743164
    6. ',pos' → logprob: -17.375009536743164
    7. '),' → logprob: -17.500009536743164
    8. 'car' → logprob: -18.875009536743164
    9. '<|end|>' → logprob: -19.250009536743164
    10. '```' → logprob: -19.500009536743164

Token 247: ' carrying' (ID: 25328)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.009763998910784721
    2. ' carrying' → logprob: -4.634764194488525
    3. 'carry' → logprob: -11.884763717651367
    4. 'Car' → logprob: -15.509763717651367
    5. ')' → logprob: -15.634763717651367
    6. ' ' → logprob: -15.759763717651367
    7. 'c' → logprob: -16.259763717651367
    8. 'care' → logprob: -16.634763717651367
    9. 'carrier' → logprob: -16.634763717651367
    10. ' car' → logprob: -16.634763717651367

Token 248: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001706367009319365
    2. ')
' → logprob: -6.376706600189209
    3. ')

' → logprob: -13.12670612335205
    4. '<|end|>' → logprob: -13.87670612335205
    5. ' )' → logprob: -14.62670612335205
    6. ')
' → logprob: -15.25170612335205
    7. ')#' → logprob: -15.87670612335205
    8. ',' → logprob: -16.626707077026367
    9. ')`' → logprob: -17.251707077026367
    10. '),' → logprob: -17.251707077026367

Token 249: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013751594349741936
    2. '<|end|>' → logprob: -4.38875150680542
    3. '        
' → logprob: -7.76375150680542
    4. '<|end|>' → logprob: -8.388751983642578
    5. ')' → logprob: -9.013751983642578
    6. '```' → logprob: -9.138751983642578
    7. ' if' → logprob: -9.138751983642578
    8. ',' → logprob: -9.263751983642578
    9. '
' → logprob: -9.513751983642578
    10. ':' → logprob: -11.263751983642578

Token 250: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3907472491264343
    2. ' if' → logprob: -1.515747308731079
    3. 'if' (adapté à ' if') → logprob: -2.265747308731079
    4. '        
' → logprob: -10.2657470703125
    5. '<|end|>' → logprob: -12.5157470703125
    6. '	if' → logprob: -12.7657470703125
    7. ',' → logprob: -12.8907470703125
    8. '   ' → logprob: -13.2657470703125
    9. 'If' → logprob: -13.6407470703125
    10. ')' → logprob: -13.8907470703125

Token 251: ' key' (ID: 2140)
  Prédit: ' key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.029820039868354797
    2. 'key' → logprob: -3.529819965362549
    3. ' dp' → logprob: -10.529820442199707
    4. ' ' → logprob: -11.529820442199707
    5. 'dp' → logprob: -11.779820442199707
    6. '(key' → logprob: -11.904820442199707
    7. ' dist' → logprob: -12.529820442199707
    8. ' time' → logprob: -12.904820442199707
    9. '	key' → logprob: -13.029820442199707
    10. '_key' → logprob: -13.154820442199707

Token 252: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.31351491808891296
    2. 'in' → logprob: -1.3135149478912354
    3. ')' → logprob: -8.563514709472656
    4. '<|end|>' → logprob: -10.313514709472656
    5. ' not' → logprob: -11.813514709472656
    6. ']' → logprob: -12.188514709472656
    7. 'not' → logprob: -12.313514709472656
    8. ' ' → logprob: -12.563514709472656
    9. '[' → logprob: -12.813514709472656
    10. '<|end|>' → logprob: -13.688514709472656

Token 253: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0009115827269852161
    2. ' dp' → logprob: -7.000911712646484
    3. '	dp' → logprob: -17.250911712646484
    4. '(dp' → logprob: -18.875911712646484
    5. '_dp' → logprob: -19.375911712646484
    6. '   ' → logprob: -20.375911712646484
    7. 'dt' → logprob: -20.375911712646484
    8. '.dp' → logprob: -20.625911712646484
    9. ' ' → logprob: -21.375911712646484
    10. '```' → logprob: -21.500911712646484

Token 254: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.09407870471477509
    2. ':' → logprob: -2.969078779220581
    3. ':
' → logprob: -3.594078779220581
    4. 'and' → logprob: -4.844078540802002
    5. '<|end|>' → logprob: -5.969078540802002
    6. ':return' → logprob: -8.46907901763916
    7. '   ' → logprob: -9.59407901763916
    8. '       ' → logprob: -9.96907901763916
    9. '	and' → logprob: -10.21907901763916
    10. '<|end|>' → logprob: -10.21907901763916

Token 255: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08224029093980789
    2. ' continue' → logprob: -2.582240343093872
    3. 'continue' → logprob: -5.832240104675293
    4. '<|end|>' → logprob: -8.957240104675293
    5. ' continues' → logprob: -9.082240104675293
    6. '       ' → logprob: -9.707240104675293
    7. '_continue' → logprob: -10.707240104675293
    8. '	continue' → logprob: -10.832240104675293
    9. ' continued' → logprob: -11.332240104675293
    10. '```' → logprob: -11.582240104675293

Token 256: ' #' (ID: 1069)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.48318761587142944
    2. '           ' → logprob: -1.4831876754760742
    3. 'continue' → logprob: -1.8581876754760742
    4. ' if' → logprob: -9.108187675476074
    5. '       ' → logprob: -9.358187675476074
    6. '```' → logprob: -10.483187675476074
    7. '               ' → logprob: -10.608187675476074
    8. '	continue' → logprob: -10.608187675476074
    9. '_continue' → logprob: -10.858187675476074
    10. ' continues' → logprob: -11.608187675476074

Token 257: ' If' (ID: 1843)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.5778540968894958
    2. 'if' → logprob: -0.9528540968894958
    3. '           ' → logprob: -3.5778541564941406
    4. 'prev' → logprob: -4.577854156494141
    5. 'existing' → logprob: -5.452854156494141
    6. ' if' → logprob: -5.702854156494141
    7. ' continue' → logprob: -5.702854156494141
    8. '       ' → logprob: -6.077854156494141
    9. 'current' → logprob: -7.077854156494141
    10. 'old' → logprob: -7.327854156494141

Token 258: ' found' (ID: 2491)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.17064785957336426
    2. 'dp' → logprob: -2.0456478595733643
    3. ' dist' → logprob: -4.295647621154785
    4. ' time' → logprob: -4.545647621154785
    5. 'time' → logprob: -6.295647621154785
    6. 'dist' → logprob: -6.920647621154785
    7. '	dp' → logprob: -9.045647621154785
    8. '(dp' → logprob: -9.170647621154785
    9. ' ' → logprob: -9.545647621154785
    10. '   ' → logprob: -9.670647621154785

Token 259: ' with' (ID: 483)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.4774581491947174
    2. ' if' → logprob: -2.2274582386016846
    3. ' and' → logprob: -2.6024582386016846
    4. '           ' → logprob: -2.6024582386016846
    5. 'continue' → logprob: -2.7274582386016846
    6. '       ' → logprob: -3.3524582386016846
    7. ' True' → logprob: -4.2274580001831055
    8. '
' → logprob: -5.8524580001831055
    9. 'if' → logprob: -6.6024580001831055
    10. 'True' → logprob: -6.9774580001831055

Token 260: ' better' (ID: 3432)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.47622379660606384
    2. ' dp' → logprob: -0.9762238264083862
    3. 'time' → logprob: -6.976223945617676
    4. ' time' → logprob: -7.476223945617676
    5. ' dist' → logprob: -8.101223945617676
    6. 'dist' → logprob: -8.351223945617676
    7. '	dp' → logprob: -10.851223945617676
    8. '0' → logprob: -11.101223945617676
    9. 'False' → logprob: -11.476223945617676
    10. 'distance' → logprob: -11.601223945617676

Token 261: ' or' (ID: 503)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.8180397152900696
    2. 'distance' → logprob: -1.6930396556854248
    3. ' or' → logprob: -1.8180396556854248
    4. 'or' → logprob: -2.193039655685425
    5. ' time' → logprob: -2.818039655685425
    6. ' distance' → logprob: -3.943039655685425
    7. 'dist' → logprob: -4.193039894104004
    8. '=' → logprob: -5.818039894104004
    9. 'dp' → logprob: -6.318039894104004
    10. ' dist' → logprob: -6.943039894104004

Token 262: ' equal' (ID: 12629)
  Prédit: 'equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'equal' → logprob: -0.3936893939971924
    2. ' equal' → logprob: -1.1436893939971924
    3. '=' → logprob: -5.018689155578613
    4. 'same' → logprob: -9.143689155578613
    5. ' same' → logprob: -10.393689155578613
    6. '=
' → logprob: -11.018689155578613
    7. '_equal' → logprob: -11.768689155578613
    8. 'Equal' → logprob: -12.393689155578613
    9. '<=' → logprob: -13.018689155578613
    10. ' =' → logprob: -13.143689155578613

Token 263: ' distance' (ID: 9324)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.0286778211593628
    2. 'distance' → logprob: -1.0286778211593628
    3. ' distance' → logprob: -1.7786778211593628
    4. ' dist' → logprob: -2.5286779403686523
    5. 'time' → logprob: -4.028677940368652
    6. ' time' → logprob: -4.028677940368652
    7. 'cost' → logprob: -8.278677940368652
    8. '_dist' → logprob: -9.153677940368652
    9. ' cost' → logprob: -9.403677940368652
    10. ' distances' → logprob: -9.528677940368652

Token 264: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06525742262601852
    2. 'and' → logprob: -3.4402573108673096
    3. '           ' → logprob: -3.6902573108673096
    4. ':' → logprob: -5.940257549285889
    5. ',' → logprob: -6.315257549285889
    6. '               ' → logprob: -7.690257549285889
    7. ' continue' → logprob: -8.31525707244873
    8. ':
' → logprob: -8.56525707244873
    9. '       ' → logprob: -8.81525707244873
    10. ' <=' → logprob: -9.06525707244873

Token 265: ' skip' (ID: 16677)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.44450950622558594
    2. ' continue' → logprob: -1.444509506225586
    3. '           ' → logprob: -2.444509506225586
    4. ' if' → logprob: -3.819509506225586
    5. 'if' → logprob: -4.319509506225586
    6. '               ' → logprob: -7.069509506225586
    7. '       ' → logprob: -9.819509506225586
    8. '	continue' → logprob: -10.444509506225586
    9. '   ' → logprob: -10.569509506225586
    10. '_continue' → logprob: -11.069509506225586

Token 266: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04503926262259483
    2. ' continue' → logprob: -3.545039176940918
    3. 'continue' → logprob: -4.670039176940918
    4. '       ' → logprob: -5.420039176940918
    5. '               ' → logprob: -6.795039176940918
    6. ' if' → logprob: -9.045039176940918
    7. ',' → logprob: -9.670039176940918
    8. '_continue' → logprob: -11.045039176940918
    9. ' continues' → logprob: -11.670039176940918
    10. '	continue' → logprob: -11.920039176940918

Token 267: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08207734674215317
    2. ' continue' → logprob: -2.7070772647857666
    3. 'continue' → logprob: -5.082077503204346
    4. '       ' → logprob: -5.582077503204346
    5. '               ' → logprob: -6.332077503204346
    6. ' continues' → logprob: -9.707077026367188
    7. ',' → logprob: -9.957077026367188
    8. ' continued' → logprob: -10.082077026367188
    9. '_continue' → logprob: -10.582077026367188
    10. '	continue' → logprob: -10.707077026367188

Token 268: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.27553048729896545
    2. 'continue' → logprob: -2.2755305767059326
    3. ' if' → logprob: -2.7755305767059326
    4. '           ' → logprob: -2.7755305767059326
    5. ' continue' → logprob: -4.9005303382873535
    6. '       ' → logprob: -5.1505303382873535
    7. '   ' → logprob: -8.650530815124512
    8. '               ' → logprob: -10.900530815124512
    9. '```' → logprob: -11.275530815124512
    10. ' ' → logprob: -12.650530815124512

Token 269: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.01418572012335062
    2. ' dp' → logprob: -4.264185905456543
    3. 'dist' → logprob: -10.889185905456543
    4. '	dp' → logprob: -13.139185905456543
    5. '(dp' → logprob: -14.639185905456543
    6. '   ' → logprob: -14.764185905456543
    7. ' dist' → logprob: -15.014185905456543
    8. '
' → logprob: -16.139184951782227
    9. '_dp' → logprob: -16.389184951782227
    10. 'distance' → logprob: -17.514184951782227

Token 270: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -1.9361264946837764e-07
    2. ' [' → logprob: -16.75
    3. 'key' → logprob: -16.875
    4. '(key' → logprob: -18.75
    5. '[' → logprob: -19.25
    6. ',key' → logprob: -19.625
    7. '[
' → logprob: -19.625
    8. ' key' → logprob: -20.25
    9. '][' → logprob: -20.75
    10. '.get' → logprob: -21.125

Token 271: '][' (ID: 2696)
  Prédit: ']<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']<=' → logprob: -0.5002785921096802
    2. ']' → logprob: -1.1252785921096802
    3. '<=' → logprob: -2.7502784729003906
    4. ' <=' → logprob: -6.000278472900391
    5. '][' → logprob: -6.875278472900391
    6. ')<=' → logprob: -7.000278472900391
    7. '[' → logprob: -7.625278472900391
    8. ' ]' → logprob: -9.50027847290039
    9. ']<' → logprob: -9.87527847290039
    10. ']>=' → logprob: -10.37527847290039

Token 272: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010397175792604685
    2. '1' → logprob: -7.001039505004883
    3. ' ' → logprob: -9.001039505004883
    4. '<=' → logprob: -13.501039505004883
    5. '   ' → logprob: -13.626039505004883
    6. ' <=' → logprob: -14.376039505004883
    7. ')' → logprob: -14.563539505004883
    8. ']<=' → logprob: -15.126039505004883
    9. '
' → logprob: -15.876039505004883
    10. 'distance' → logprob: -15.938539505004883

Token 273: ']' (ID: 60)
  Prédit: ']<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']<=' → logprob: -0.586922287940979
    2. ']' → logprob: -0.836922287940979
    3. '<=' → logprob: -5.0869221687316895
    4. ' ]' → logprob: -5.9619221687316895
    5. ' <=' → logprob: -6.3369221687316895
    6. ')<=' → logprob: -8.211922645568848
    7. ']<' → logprob: -9.961922645568848
    8. ']>=' → logprob: -9.961922645568848
    9. '']' → logprob: -11.961922645568848
    10. 'le' → logprob: -11.961922645568848

Token 274: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.16039757430553436
    2. ' <=' → logprob: -1.9103975296020508
    3. ']<=' → logprob: -9.16039752960205
    4. ')<=' → logprob: -9.66039752960205
    5. '>=' → logprob: -14.28539752960205
    6. '```' → logprob: -14.41039752960205
    7. '<' → logprob: -14.41039752960205
    8. '≤' → logprob: -14.53539752960205
    9. ' ' → logprob: -14.78539752960205
    10. '<|end|>' → logprob: -15.03539752960205

Token 275: ' time' (ID: 1058)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.00023107275774236768
    2. ' dist' → logprob: -8.37523078918457
    3. 'distance' → logprob: -14.87523078918457
    4. '	dist' → logprob: -15.87523078918457
    5. 'time' → logprob: -18.25023078918457
    6. '_dist' → logprob: -18.50023078918457
    7. 'd' → logprob: -18.75023078918457
    8. '   ' → logprob: -18.87523078918457
    9. 'Dist' → logprob: -19.25023078918457
    10. ' ' → logprob: -19.50023078918457

Token 276: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6147761344909668
    2. ':
' → logprob: -1.1147761344909668
    3. '           ' → logprob: -2.114776134490967
    4. ':return' → logprob: -5.614776134490967
    5. ' and' → logprob: -5.864776134490967
    6. '       ' → logprob: -6.364776134490967
    7. '               ' → logprob: -6.989776134490967
    8. ' continue' → logprob: -7.864776134490967
    9. ' or' → logprob: -8.239776611328125
    10. ',' → logprob: -8.489776611328125

Token 277: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00247981958091259
    2. ' dp' → logprob: -6.0024800300598145
    3. '	dp' → logprob: -13.252479553222656
    4. '(dp' → logprob: -13.627479553222656
    5. '   ' → logprob: -14.752479553222656
    6. '
' → logprob: -15.002479553222656
    7. 'dist' → logprob: -15.377479553222656
    8. ' ' → logprob: -16.252479553222656
    9. '  ' → logprob: -16.502479553222656
    10. '_dp' → logprob: -17.627479553222656

Token 278: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -1.9623810658231378e-05
    2. '[' → logprob: -11.375020027160645
    3. 'key' → logprob: -12.125020027160645
    4. ' [' → logprob: -13.625020027160645
    5. ' key' → logprob: -14.000020027160645
    6. '
' → logprob: -16.125019073486328
    7. '(key' → logprob: -16.125019073486328
    8. '[
' → logprob: -16.250019073486328
    9. '[user' → logprob: -16.500019073486328
    10. '[token' → logprob: -16.750019073486328

Token 279: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3521353006362915
    2. '][' → logprob: -1.2271353006362915
    3. ')[' → logprob: -5.727135181427002
    4. ']' → logprob: -9.35213565826416
    5. ' ][' → logprob: -9.47713565826416
    6. '
' → logprob: -10.35213565826416
    7. ')][' → logprob: -10.35213565826416
    8. ' [' → logprob: -10.85213565826416
    9. ' )[' → logprob: -10.85213565826416
    10. ')' → logprob: -10.97713565826416

Token 280: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2814244329929352
    2. '0' → logprob: -1.4064244031906128
    3. ' ' → logprob: -8.656424522399902
    4. '[' → logprob: -10.281424522399902
    5. '
' → logprob: -11.093924522399902
    6. '   ' → logprob: -11.343924522399902
    7. 'dist' → logprob: -11.531424522399902
    8. ']' → logprob: -12.281424522399902
    9. '2' → logprob: -12.718924522399902
    10. '```' → logprob: -13.156424522399902

Token 281: ']' (ID: 60)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.5556303858757019
    2. ' <=' → logprob: -1.0556304454803467
    3. ']' → logprob: -2.8056304454803467
    4. ']<=' → logprob: -4.055630207061768
    5. ' ]' → logprob: -8.305630683898926
    6. '[' → logprob: -9.180630683898926
    7. '   ' → logprob: -9.805630683898926
    8. '0' → logprob: -10.305630683898926
    9. ')<=' → logprob: -10.555630683898926
    10. ' ' → logprob: -11.180630683898926

Token 282: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.10022111982107162
    2. ' <=' → logprob: -2.3502211570739746
    3. '[' → logprob: -12.475220680236816
    4. ']<=' → logprob: -12.725220680236816
    5. ')<=' → logprob: -12.975220680236816
    6. '0' → logprob: -13.350220680236816
    7. '>=' → logprob: -13.600220680236816
    8. '   ' → logprob: -14.100220680236816
    9. ' ' → logprob: -14.225220680236816
    10. '```' → logprob: -15.850220680236816

Token 283: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0013261953135952353
    2. ' dist' → logprob: -6.626326084136963
    3. '	dist' → logprob: -15.626326560974121
    4. '_dist' → logprob: -17.126325607299805
    5. '(dist' → logprob: -17.876325607299805
    6. 'distance' → logprob: -17.876325607299805
    7. 'Dist' → logprob: -18.001325607299805
    8. '
' → logprob: -18.376325607299805
    9. ' ' → logprob: -18.751325607299805
    10. '   ' → logprob: -19.001325607299805

Token 284: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.318681188422488e-05
    2. ' _' → logprob: -11.75001335144043
    3. '_' → logprob: -12.62501335144043
    4. 'sum' → logprob: -13.37501335144043
    5. ' sum' → logprob: -15.87501335144043
    6. ',_' → logprob: -16.62501335144043
    7. ',' → logprob: -17.12501335144043
    8. 'ance' → logprob: -17.25001335144043
    9. 'um' → logprob: -17.25001335144043
    10. '_s' → logprob: -17.75001335144043

Token 285: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3519819974899292
    2. ':' → logprob: -1.3519819974899292
    3. '           ' → logprob: -3.3519821166992188
    4. '               ' → logprob: -6.101982116699219
    5. '):
' → logprob: -8.101982116699219
    6. '       ' → logprob: -8.726982116699219
    7. ',' → logprob: -9.226982116699219
    8. ':return' → logprob: -9.601982116699219
    9. 'continue' → logprob: -10.976982116699219
    10. ':

' → logprob: -11.226982116699219

Token 286: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0018347532022744417
    2. 'continue' → logprob: -6.751834869384766
    3. '           ' → logprob: -7.751834869384766
    4. ' continue' → logprob: -8.376834869384766
    5. '                   ' → logprob: -13.376834869384766
    6. '
' → logprob: -14.376834869384766
    7. 'Continue' → logprob: -14.751834869384766
    8. '```' → logprob: -14.876834869384766
    9. '_continue' → logprob: -15.001834869384766
    10. '	continue' → logprob: -15.626834869384766

Token 287: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4446489214897156
    2. 'continue' (adapté à ' continue') → logprob: -1.4446489810943604
    3. '               ' → logprob: -2.5696489810943604
    4. ' continue' → logprob: -3.3196489810943604
    5. '                   ' → logprob: -4.569648742675781
    6. '   ' → logprob: -11.069648742675781
    7. '       ' → logprob: -11.944648742675781
    8. '	continue' → logprob: -12.819648742675781
    9. '                       ' → logprob: -13.569648742675781
    10. '```' → logprob: -13.569648742675781

Token 288: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00036514020757749677
    2. 'dp' → logprob: -8.375365257263184
    3. '<|end|>' → logprob: -9.750365257263184
    4. '           ' → logprob: -9.875365257263184
    5. ',' → logprob: -12.125365257263184
    6. ')' → logprob: -12.125365257263184
    7. '```' → logprob: -12.625365257263184
    8. ' dp' → logprob: -13.000365257263184
    9. '<|end|>' → logprob: -13.375365257263184
    10. '
' → logprob: -13.500365257263184

Token 289: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006274910410866141
    2. 'dp' → logprob: -7.500627517700195
    3. '<|end|>' → logprob: -10.125627517700195
    4. '```' → logprob: -10.875627517700195
    5. ')' → logprob: -12.625627517700195
    6. ' dp' → logprob: -12.750627517700195
    7. '           ' → logprob: -12.750627517700195
    8. ',' → logprob: -13.625627517700195
    9. '<|end|>' → logprob: -13.625627517700195
    10. '   ' → logprob: -14.375627517700195

Token 290: ' dp' (ID: 21546)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12424702942371368
    2. 'dp' (adapté à ' dp') → logprob: -2.3742470741271973
    3. ' dp' → logprob: -3.7492470741271973
    4. '   ' → logprob: -8.624246597290039
    5. '	dp' → logprob: -10.874246597290039
    6. '        
' → logprob: -12.499246597290039
    7. '           ' → logprob: -12.749246597290039
    8. '(dp' → logprob: -13.124246597290039
    9. ' ' → logprob: -13.374246597290039
    10. '_dp' → logprob: -13.499246597290039

Token 291: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.625
    3. 'key' → logprob: -17.0
    4. ' [' → logprob: -17.875
    5. '\[' → logprob: -18.25
    6. '```' → logprob: -19.125
    7. ')[' → logprob: -19.375
    8. '[(' → logprob: -19.375
    9. '][' → logprob: -19.5
    10. '
' → logprob: -20.0

Token 292: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002587550552561879
    2. ']=' → logprob: -6.37758731842041
    3. '=' → logprob: -7.50258731842041
    4. ')' → logprob: -8.62758731842041
    5. ' =' → logprob: -9.00258731842041
    6. ' ]' → logprob: -10.87758731842041
    7. ']=(' → logprob: -11.50258731842041
    8. '   ' → logprob: -13.75258731842041
    9. ')=' → logprob: -14.50258731842041
    10. '[' → logprob: -15.25258731842041

Token 293: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023245712742209435
    2. ' =' → logprob: -3.7732458114624023
    3. ']' → logprob: -16.273244857788086
    4. ']=' → logprob: -16.523244857788086
    5. ')' → logprob: -17.148244857788086
    6. '＝' → logprob: -17.398244857788086
    7. '=
' → logprob: -17.898244857788086
    8. ')=' → logprob: -18.023244857788086
    9. '[' → logprob: -18.148244857788086
    10. '=(' → logprob: -18.398244857788086

Token 294: ' (' (ID: 350)
  Prédit: '(time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(time' → logprob: -0.026357894763350487
    2. ' (' → logprob: -3.776357889175415
    3. '(' → logprob: -5.776358127593994
    4. '   ' → logprob: -13.151357650756836
    5. '(timestamp' → logprob: -13.401357650756836
    6. '(t' → logprob: -13.901357650756836
    7. '(times' → logprob: -13.901357650756836
    8. '       ' → logprob: -14.526357650756836
    9. '(Time' → logprob: -14.776357650756836
    10. 'time' → logprob: -15.276357650756836

Token 295: 'time' (ID: 4580)
  Prédit: 'time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -1.676292231422849e-05
    2. ' time' → logprob: -11.000017166137695
    3. '   ' → logprob: -20.500017166137695
    4. ' ' → logprob: -22.500017166137695
    5. '	time' → logprob: -22.875017166137695
    6. '
' → logprob: -23.750017166137695
    7. '"time' → logprob: -23.750017166137695
    8. '(time' → logprob: -23.875017166137695
    9. '    ' → logprob: -24.125017166137695
    10. 'Time' → logprob: -24.875017166137695

Token 296: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001329791557509452
    2. ' ,' → logprob: -9.00013256072998
    3. ',
' → logprob: -11.62513256072998
    4. ',d' → logprob: -15.00013256072998
    5. 'dist' → logprob: -17.000133514404297
    6. '<|end|>' → logprob: -17.375133514404297
    7. ',

' → logprob: -17.500133514404297
    8. '),' → logprob: -17.750133514404297
    9. ')' → logprob: -17.875133514404297
    10. ',)' → logprob: -18.000133514404297

Token 297: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.2519298195838928
    2. ' dist' → logprob: -1.501929759979248
    3. '	dist' → logprob: -14.626930236816406
    4. ' ' → logprob: -16.251930236816406
    5. '   ' → logprob: -16.376930236816406
    6. '(dist' → logprob: -16.626930236816406
    7. 'Dist' → logprob: -17.001930236816406
    8. '_dist' → logprob: -17.501930236816406
    9. '  ' → logprob: -18.876930236816406
    10. '    ' → logprob: -19.001930236816406

Token 298: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -5.512236498361744e-07
    2. 'sum' → logprob: -14.750000953674316
    3. ' _' → logprob: -17.75
    4. '_' → logprob: -18.0
    5. ' sum' → logprob: -18.625
    6. '_s' → logprob: -18.625
    7. ')' → logprob: -20.125
    8. '_SUM' → logprob: -20.125
    9. '_sym' → logprob: -20.375
    10. '_sup' → logprob: -20.5

Token 299: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005809116992168128
    2. ')
' → logprob: -7.500580787658691
    3. '       ' → logprob: -10.625580787658691
    4. ' )' → logprob: -13.000580787658691
    5. ')

' → logprob: -14.375580787658691
    6. ')
' → logprob: -15.000580787658691
    7. '   ' → logprob: -15.625580787658691
    8. ')`' → logprob: -16.875581741333008
    9. '),' → logprob: -17.250581741333008
    10. ')}' → logprob: -17.375581741333008

Token 300: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16165447235107422
    2. '   ' → logprob: -2.161654472351074
    3. '        
' → logprob: -4.036654472351074
    4. '<|end|>' → logprob: -4.911654472351074
    5. '    
' → logprob: -5.911654472351074
    6. ')' → logprob: -6.911654472351074
    7. '```' → logprob: -6.911654472351074
    8. ' 
' → logprob: -6.911654472351074
    9. ' if' → logprob: -7.286654472351074
    10. '  
' → logprob: -7.786654472351074

Token 301: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0033774571493268013
    2. '#' → logprob: -5.878377437591553
    3. '       ' → logprob: -7.628377437591553
    4. ' if' → logprob: -9.878377914428711
    5. '```' → logprob: -11.003377914428711
    6. 'If' → logprob: -11.753377914428711
    7. '   ' → logprob: -12.128377914428711
    8. 'for' → logprob: -13.128377914428711
    9. '        
' → logprob: -13.378377914428711
    10. 'next' → logprob: -14.878377914428711

Token 302: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.0013276183744892478
    2. 'idx' → logprob: -6.6263275146484375
    3. '	idx' → logprob: -13.751327514648438
    4. '(idx' → logprob: -14.501327514648438
    5. '_idx' → logprob: -17.251327514648438
    6. '   ' → logprob: -18.626327514648438
    7. '[idx' → logprob: -18.751327514648438
    8. ' index' → logprob: -18.876327514648438
    9. ' ' → logprob: -19.126327514648438
    10. '.idx' → logprob: -19.626327514648438

Token 303: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10237675160169601
    2. '==' → logprob: -2.352376699447632
    3. ' >=' → logprob: -6.227376937866211
    4. '>=' → logprob: -8.727376937866211
    5. ')==' → logprob: -11.977376937866211
    6. ' ' → logprob: -12.102376937866211
    7. ' ===' → logprob: -12.602376937866211
    8. '=' → logprob: -12.602376937866211
    9. '<|end|>' → logprob: -12.852376937866211
    10. ']==' → logprob: -13.102376937866211

Token 304: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07509700953960419
    2. ' n' → logprob: -2.70009708404541
    3. 'len' → logprob: -5.32509708404541
    4. ' len' → logprob: -8.32509708404541
    5. '   ' → logprob: -10.82509708404541
    6. ' ' → logprob: -12.07509708404541
    7. '```' → logprob: -13.20009708404541
    8. '
' → logprob: -13.32509708404541
    9. '(n' → logprob: -13.57509708404541
    10. '  ' → logprob: -13.82509708404541

Token 305: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.020600982010364532
    2. ':
' → logprob: -3.8956010341644287
    3. ' and' → logprob: -11.270601272583008
    4. ' or' → logprob: -11.770601272583008
    5. ' :' → logprob: -11.895601272583008
    6. '):' → logprob: -12.020601272583008
    7. '):
' → logprob: -12.020601272583008
    8. ':return' → logprob: -12.270601272583008
    9. '<|end|>' → logprob: -12.770601272583008
    10. '   ' → logprob: -12.895601272583008

Token 306: ' len' (ID: 4631)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.6642981767654419
    2. 'not' → logprob: -2.1642980575561523
    3. 'car' → logprob: -2.1642980575561523
    4. ' not' → logprob: -2.2892980575561523
    5. ' carrying' → logprob: -2.4142980575561523
    6. 'len' → logprob: -3.5392980575561523
    7. ' pos' → logprob: -3.5392980575561523
    8. ' len' → logprob: -5.289298057556152
    9. '(pos' → logprob: -7.664298057556152
    10. 'carry' → logprob: -7.789298057556152

Token 307: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.00025645215646363795
    2. '(car' → logprob: -8.875256538391113
    3. '(' → logprob: -9.375256538391113
    4. ' (' → logprob: -10.750256538391113
    5. '(pos' → logprob: -12.500256538391113
    6. '(
' → logprob: -13.625256538391113
    7. '(h' → logprob: -14.250256538391113
    8. '(b' → logprob: -14.250256538391113
    9. 'car' → logprob: -14.375256538391113
    10. ')' → logprob: -14.500256538391113

Token 308: 'arry' (ID: 20052)
  Prédit: 'arry'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arry' → logprob: -0.04805976152420044
    2. 'car' → logprob: -3.1730597019195557
    3. 'ar' → logprob: -6.048059940338135
    4. ')' → logprob: -7.173059940338135
    5. 'arring' → logprob: -7.298059940338135
    6. 'arr' → logprob: -7.673059940338135
    7. ' carrying' → logprob: -8.548059463500977
    8. '(c' → logprob: -9.048059463500977
    9. 'c' → logprob: -9.673059463500977
    10. '(' → logprob: -9.798059463500977

Token 309: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.012998453341424465
    2. ')' → logprob: -4.512998580932617
    3. ')==' → logprob: -6.762998580932617
    4. 'ed' → logprob: -8.762998580932617
    5. '()' → logprob: -8.762998580932617
    6. '   ' → logprob: -9.012998580932617
    7. ')>' → logprob: -9.012998580932617
    8. ' ' → logprob: -9.762998580932617
    9. '==' → logprob: -10.387998580932617
    10. '=' → logprob: -10.637998580932617

Token 310: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06638921052217484
    2. ')==' → logprob: -3.691389322280884
    3. ' ==' → logprob: -3.816389322280884
    4. '==' → logprob: -4.066389083862305
    5. ' )' → logprob: -8.941389083862305
    6. '()==' → logprob: -12.316389083862305
    7. '0' → logprob: -12.691389083862305
    8. '()' → logprob: -12.941389083862305
    9. ')<' → logprob: -13.191389083862305
    10. '<|end|>' → logprob: -13.691389083862305

Token 311: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6327142715454102
    2. '==' → logprob: -0.7577142715454102
    3. ')' → logprob: -10.50771427154541
    4. ')==' → logprob: -10.50771427154541
    5. ' <' → logprob: -11.13271427154541
    6. '<' → logprob: -11.25771427154541
    7. '>' → logprob: -11.75771427154541
    8. '()==' → logprob: -11.88271427154541
    9. '=' → logprob: -12.50771427154541
    10. '0' → logprob: -12.75771427154541

Token 312: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003802680876106024
    2. ' ' → logprob: -7.875380039215088
    3. '<|end|>' → logprob: -16.12537956237793
    4. '   ' → logprob: -17.37537956237793
    5. ')' → logprob: -17.37537956237793
    6. '```' → logprob: -17.62537956237793
    7. '  ' → logprob: -19.12537956237793
    8. '3' → logprob: -19.31287956237793
    9. '=' → logprob: -19.37537956237793
    10. '۰' → logprob: -19.68787956237793

Token 313: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '<|end|>' → logprob: -17.375009536743164
    4. '```' → logprob: -18.875009536743164
    5. ')' → logprob: -19.250009536743164
    6. '=' → logprob: -19.625009536743164
    7. '۰' → logprob: -19.625009536743164
    8. '   ' → logprob: -19.750009536743164
    9. '(' → logprob: -20.125009536743164
    10. '...' → logprob: -20.625009536743164

Token 314: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22688144445419312
    2. ':
' → logprob: -1.601881504058838
    3. '       ' → logprob: -6.976881504058838
    4. '           ' → logprob: -8.22688102722168
    5. ':return' → logprob: -8.47688102722168
    6. '):
' → logprob: -10.60188102722168
    7. ' and' → logprob: -11.85188102722168
    8. ',' → logprob: -11.97688102722168
    9. '   ' → logprob: -12.22688102722168
    10. ':
' → logprob: -12.35188102722168

Token 315: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00022988072305452079
    2. '       ' → logprob: -9.250229835510254
    3. ' return' → logprob: -9.250229835510254
    4. ',' → logprob: -11.125229835510254
    5. '
' → logprob: -12.125229835510254
    6. 'return' → logprob: -12.500229835510254
    7. '	       ' → logprob: -13.000229835510254
    8. '<|end|>' → logprob: -13.250229835510254
    9. '   ' → logprob: -13.625229835510254
    10. ':' → logprob: -13.625229835510254

Token 316: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6005593538284302
    2. 'return' → logprob: -0.8505593538284302
    3. ' return' → logprob: -3.7255592346191406
    4. '       ' → logprob: -9.35055923461914
    5. 'break' → logprob: -9.97555923461914
    6. '
' → logprob: -10.10055923461914
    7. '               ' → logprob: -10.72555923461914
    8. '   ' → logprob: -11.72555923461914
    9. ' break' → logprob: -12.22555923461914
    10. '	return' → logprob: -12.72555923461914

Token 317: ' caught' (ID: 18341)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6811085343360901
    2. 'return' → logprob: -1.1811084747314453
    3. '           ' → logprob: -1.6811084747314453
    4. ' break' → logprob: -7.806108474731445
    5. 'break' → logprob: -7.931108474731445
    6. '       ' → logprob: -9.931108474731445
    7. '   ' → logprob: -11.681108474731445
    8. ' ' → logprob: -12.806108474731445
    9. '#' → logprob: -12.931108474731445
    10. '               ' → logprob: -12.931108474731445

Token 318: ' all' (ID: 722)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.0546669960021973
    2. ' and' → logprob: -1.4296669960021973
    3. ' ' → logprob: -1.9296669960021973
    4. '           ' → logprob: -2.4296669960021973
    5. 'ball' → logprob: -3.0546669960021973
    6. 'and' → logprob: -3.0546669960021973
    7. ' return' → logprob: -3.3046669960021973
    8. 'break' → logprob: -4.054666996002197
    9. '       ' → logprob: -4.679666996002197
    10. '   ' → logprob: -4.804666996002197

Token 319: ' and' (ID: 326)
  Prédit: 'ball'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ball' → logprob: -0.4533179700374603
    2. ' balloons' → logprob: -1.0783179998397827
    3. '!' → logprob: -4.078318119049072
    4. ',' → logprob: -6.703318119049072
    5. ' and' → logprob: -6.953318119049072
    6. 'b' → logprob: -7.078318119049072
    7. '```' → logprob: -7.453318119049072
    8. ')' → logprob: -7.578318119049072
    9. ' balloon' → logprob: -7.578318119049072
    10. ' bal' → logprob: -7.953318119049072

Token 320: ' emptied' (ID: 183452)
  Prédit: 'returned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'returned' → logprob: -0.13045954704284668
    2. 'del' → logprob: -2.8804595470428467
    3. ' returned' → logprob: -2.8804595470428467
    4. ' delivered' → logprob: -4.755459785461426
    5. 'return' → logprob: -7.130459785461426
    6. '   ' → logprob: -9.005459785461426
    7. 'released' → logprob: -9.005459785461426
    8. 'b' → logprob: -9.255459785461426
    9. '#' → logprob: -9.880459785461426
    10. ' ' → logprob: -10.255459785461426

Token 321: ' carrying' (ID: 25328)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.33990371227264404
    2. 'the' → logprob: -2.0899038314819336
    3. 'return' → logprob: -2.4649038314819336
    4. ' return' → logprob: -3.0899038314819336
    5. '   ' → logprob: -3.9649038314819336
    6. ' ' → logprob: -5.214903831481934
    7. ' at' → logprob: -5.964903831481934
    8. 'hq' → logprob: -6.464903831481934
    9. 'ball' → logprob: -6.714903831481934
    10. '       ' → logprob: -7.214903831481934

Token 322: '
' (ID: 198)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8909240365028381
    2. ' return' → logprob: -1.1409239768981934
    3. '           ' → logprob: -1.7659239768981934
    4. '       ' → logprob: -3.1409239768981934
    5. '   ' → logprob: -4.015923976898193
    6. ':
' → logprob: -4.390923976898193
    7. ',' → logprob: -4.390923976898193
    8. '
' → logprob: -5.640923976898193
    9. '               ' → logprob: -5.640923976898193
    10. ':return' → logprob: -6.515923976898193

Token 323: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.020971812307834625
    2. ' return' → logprob: -4.020971775054932
    3. 'return' → logprob: -6.770971775054932
    4. '
' → logprob: -6.895971775054932
    5. '               ' → logprob: -8.14597225189209
    6. '       ' → logprob: -9.14597225189209
    7. ',' → logprob: -9.64597225189209
    8. '   ' → logprob: -10.02097225189209
    9. '\n' → logprob: -10.14597225189209
    10. '\' → logprob: -10.52097225189209

Token 324: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.059416476637125015
    2. '           ' → logprob: -3.0594165325164795
    3. ' return' → logprob: -4.5594162940979
    4. 'print' → logprob: -8.309416770935059
    5. 'break' → logprob: -9.934416770935059
    6. '       ' → logprob: -12.559416770935059
    7. '               ' → logprob: -13.559416770935059
    8. '   ' → logprob: -13.809416770935059
    9. ' break' → logprob: -14.184416770935059
    10. ' print' → logprob: -14.434416770935059

Token 325: ' "' (ID: 392)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.22567729651927948
    2. 'dist' → logprob: -1.600677251815796
    3. '(dist' → logprob: -8.725677490234375
    4. ' time' → logprob: -10.225677490234375
    5. 'distance' → logprob: -11.350677490234375
    6. 'time' → logprob: -11.475677490234375
    7. ' distance' → logprob: -11.725677490234375
    8. ' (' → logprob: -11.975677490234375
    9. '	dist' → logprob: -12.225677490234375
    10. '   ' → logprob: -12.475677490234375

Token 326: 'OK' (ID: 5175)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0013369088992476463
    2. '0' → logprob: -7.751337051391602
    3. '"' → logprob: -7.876337051391602
    4. '{}' → logprob: -8.876337051391602
    5. '{' → logprob: -9.126337051391602
    6. ' dist' → logprob: -9.501337051391602
    7. '{}".' → logprob: -9.876337051391602
    8. '{}\' → logprob: -10.251337051391602
    9. '"{' → logprob: -10.501337051391602
    10. '(dist' → logprob: -10.876337051391602

Token 327: '",' (ID: 672)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0011398615315556526
    2. '"
' → logprob: -6.8761396408081055
    3. '")' → logprob: -9.626139640808105
    4. '\n' → logprob: -10.501139640808105
    5. '"

' → logprob: -11.626139640808105
    6. '"
' → logprob: -13.251139640808105
    7. ')"' → logprob: -14.126139640808105
    8. '"\' → logprob: -15.001139640808105
    9. '",' → logprob: -15.126139640808105
    10. ')' → logprob: -15.251139640808105

Token 328: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.19572661817073822
    2. ' dist' → logprob: -1.9457266330718994
    3. '
' → logprob: -4.82072639465332
    4. '0' → logprob: -4.94572639465332
    5. 'None' → logprob: -5.32072639465332
    6. 'time' → logprob: -5.57072639465332
    7. ' 
' → logprob: -5.94572639465332
    8. ' None' → logprob: -6.19572639465332
    9. ' time' → logprob: -7.32072639465332
    10. ')' → logprob: -7.57072639465332

Token 329: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.00014966767048463225
    2. 'sum' → logprob: -9.000149726867676
    3. '_' → logprob: -11.875149726867676
    4. 'psum' → logprob: -13.000149726867676
    5. '   ' → logprob: -13.250149726867676
    6. '
' → logprob: -13.625149726867676
    7. '_s' → logprob: -13.750149726867676
    8. 'ance' → logprob: -13.750149726867676
    9. '```' → logprob: -13.750149726867676
    10. '_SUM' → logprob: -13.750149726867676

Token 330: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07263720035552979
    2. '        
' → logprob: -2.9476370811462402
    3. '
' → logprob: -4.19763708114624
    4. '<|end|>' → logprob: -6.32263708114624
    5. ',' → logprob: -8.447637557983398
    6. '            
' → logprob: -9.447637557983398
    7. '    
' → logprob: -9.697637557983398
    8. '       
' → logprob: -9.697637557983398
    9. '<|end|>' → logprob: -9.697637557983398
    10. '  
' → logprob: -10.197637557983398

Token 331: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024683229625225067
    2. '        
' → logprob: -3.8996832370758057
    3. '
' → logprob: -6.149682998657227
    4. '    
' → logprob: -6.899682998657227
    5. ' 
' → logprob: -8.774682998657227
    6. '   ' → logprob: -8.774682998657227
    7. '  
' → logprob: -8.774682998657227
    8. '<|end|>' → logprob: -9.024682998657227
    9. '       
' → logprob: -9.274682998657227
    10. '            
' → logprob: -9.774682998657227

Token 332: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.17063970863819122
    2. '#' (adapté à ' #') → logprob: -1.9206397533416748
    3. 'next' → logprob: -5.545639514923096
    4. '   ' → logprob: -5.670639514923096
    5. 'for' → logprob: -6.295639514923096
    6. '       ' → logprob: -7.045639514923096
    7. ' if' → logprob: -9.045639991760254
    8. '        
' → logprob: -9.420639991760254
    9. '    
' → logprob: -10.045639991760254
    10. '```' → logprob: -10.920639991760254

Token 333: ' Option' (ID: 17796)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.21624989807605743
    2. 'if' → logprob: -1.716249942779541
    3. 'next' → logprob: -4.341249942779541
    4. 'for' → logprob: -7.591249942779541
    5. 'Next' → logprob: -8.091249465942383
    6. 'If' → logprob: -8.216249465942383
    7. ' #' → logprob: -9.216249465942383
    8. '   ' → logprob: -9.341249465942383
    9. ' if' → logprob: -9.591249465942383
    10. 'def' → logprob: -9.716249465942383

Token 334: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.789496898651123
    2. ' =' → logprob: -1.164496898651123
    3. ':' → logprob: -2.414496898651123
    4. ' to' → logprob: -3.164496898651123
    5. '=' → logprob: -3.539496898651123
    6. 's' → logprob: -3.664496898651123
    7. '       ' → logprob: -4.039496898651123
    8. ' for' → logprob: -4.414496898651123
    9. '1' → logprob: -4.664496898651123
    10. ' ' → logprob: -6.164496898651123

Token 335: '1' (ID: 16)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1984719038009644
    2. '1' → logprob: -1.5734719038009644
    3. ':' → logprob: -1.6984719038009644
    4. ' to' → logprob: -2.198472023010254
    5. '   ' → logprob: -2.948472023010254
    6. '=' → logprob: -3.573472023010254
    7. 'to' → logprob: -3.573472023010254
    8. '       ' → logprob: -3.573472023010254
    9. ' ' → logprob: -3.698472023010254
    10. ' for' → logprob: -4.073472023010254

Token 336: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08124733716249466
    2. ' =' → logprob: -3.081247329711914
    3. '       ' → logprob: -3.831247329711914
    4. '=' → logprob: -4.831247329711914
    5. ' :' → logprob: -7.206247329711914
    6. ':
' → logprob: -7.331247329711914
    7. ',' → logprob: -7.456247329711914
    8. '   ' → logprob: -8.206247329711914
    9. '        
' → logprob: -10.331247329711914
    10. ' if' → logprob: -10.456247329711914

Token 337: ' if' (ID: 538)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.18015387654304504
    2. 'if' → logprob: -2.4301538467407227
    3. ' if' → logprob: -3.3051538467407227
    4. ' #' → logprob: -3.3051538467407227
    5. '       ' → logprob: -6.180153846740723
    6. 'Deliver' → logprob: -8.180153846740723
    7. 'If' → logprob: -8.180153846740723
    8. '   ' → logprob: -9.055153846740723
    9. '
' → logprob: -9.055153846740723
    10. ' deliver' → logprob: -9.305153846740723

Token 338: ' carrying' (ID: 25328)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.31312626600265503
    2. 'idx' → logprob: -1.4381263256072998
    3. ' carrying' → logprob: -4.188126087188721
    4. ' len' → logprob: -4.438126087188721
    5. 'len' → logprob: -5.688126087188721
    6. 'car' → logprob: -7.063126087188721
    7. 'carry' → logprob: -9.563126564025879
    8. '(idx' → logprob: -9.938126564025879
    9. ' carry' → logprob: -10.313126564025879
    10. 'pos' → logprob: -11.188126564025879

Token 339: ' >' (ID: 1424)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10888403654098511
    2. 'and' → logprob: -2.48388409614563
    3. ':' → logprob: -4.858883857727051
    4. ',' → logprob: -5.608883857727051
    5. '>' → logprob: -5.608883857727051
    6. '<|end|>' → logprob: -6.108883857727051
    7. ')' → logprob: -7.608883857727051
    8. ' ,' → logprob: -8.23388385772705
    9. '<|end|>' → logprob: -8.35888385772705
    10. ':
' → logprob: -8.48388385772705

Token 340: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0380525141954422
    2. ' ' → logprob: -3.288052558898926
    3. '<|end|>' → logprob: -12.788052558898926
    4. '>' → logprob: -13.038052558898926
    5. ')' → logprob: -13.038052558898926
    6. '  ' → logprob: -13.788052558898926
    7. '=' → logprob: -14.288052558898926
    8. '3' → logprob: -15.288052558898926
    9. ')>' → logprob: -15.413052558898926
    10. '()>' → logprob: -15.538052558898926

Token 341: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06196948140859604
    2. ' ' → logprob: -2.811969518661499
    3. '  ' → logprob: -14.561969757080078
    4. '=' → logprob: -14.936969757080078
    5. '(' → logprob: -15.311969757080078
    6. '()' → logprob: -15.436969757080078
    7. '3' → logprob: -15.686969757080078
    8. ' (' → logprob: -16.561969757080078
    9. ' ()' → logprob: -16.811969757080078
    10. '1' → logprob: -17.061969757080078

Token 342: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3839929699897766
    2. ':
' → logprob: -1.5089929103851318
    3. ' and' → logprob: -2.508992910385132
    4. ',' → logprob: -4.633993148803711
    5. '   ' → logprob: -5.633993148803711
    6. '       ' → logprob: -6.508993148803711
    7. 'and' → logprob: -7.383993148803711
    8. ',
' → logprob: -8.008993148803711
    9. '           ' → logprob: -9.008993148803711
    10. '<|end|>' → logprob: -9.758993148803711

Token 343: ' try' (ID: 2075)
  Prédit: ' #'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' #' → logprob: -0.7702875733375549
    2. '#' → logprob: -1.8952875137329102
    3. ' go' → logprob: -1.8952875137329102
    4. ' drop' → logprob: -2.52028751373291
    5. '       ' → logprob: -3.27028751373291
    6. ' deliver' → logprob: -3.77028751373291
    7. ' return' → logprob: -3.77028751373291
    8. ' new' → logprob: -4.27028751373291
    9. '           ' → logprob: -4.64528751373291
    10. ' for' → logprob: -4.77028751373291

Token 344: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1276564598083496
    2. ':' → logprob: -1.7526564598083496
    3. ' returning' → logprob: -1.8776564598083496
    4. ' to' → logprob: -2.2526564598083496
    5. 'return' → logprob: -2.3776564598083496
    6. ' delivering' → logprob: -3.2526564598083496
    7. 'to' → logprob: -3.5026564598083496
    8. ' return' → logprob: -3.7526564598083496
    9. ':
' → logprob: -4.00265645980835
    10. ' going' → logprob: -4.00265645980835

Token 345: ' go' (ID: 810)
  Prédit: ' go'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' go' → logprob: -0.5017745494842529
    2. 'return' → logprob: -2.126774549484253
    3. ' return' → logprob: -2.126774549484253
    4. 'go' → logprob: -2.626774549484253
    5. ' deliver' → logprob: -3.251774549484253
    6. 'deliver' → logprob: -3.251774549484253
    7. '```' → logprob: -6.751774787902832
    8. '#' → logprob: -6.751774787902832
    9. 'head' → logprob: -7.501774787902832
    10. 'visit' → logprob: -7.626774787902832

Token 346: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.28465747833251953
    2. ' house' → logprob: -2.0346574783325195
    3. ' home' → logprob: -2.6596574783325195
    4. 'to' → logprob: -3.1596574783325195
    5. 'house' → logprob: -6.4096574783325195
    6. 'home' → logprob: -6.5346574783325195
    7. ' back' → logprob: -7.2846574783325195
    8. ' ' → logprob: -7.6596574783325195
    9. ' for' → logprob: -10.15965747833252
    10. '    ' → logprob: -10.40965747833252

Token 347: ' house' (ID: 4276)
  Prédit: ' house'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' house' → logprob: -0.632798433303833
    2. 'house' → logprob: -0.757798433303833
    3. '0' → logprob: -8.882798194885254
    4. ' ' → logprob: -10.132798194885254
    5. 'home' → logprob: -12.382798194885254
    6. '   ' → logprob: -12.757798194885254
    7. '```' → logprob: -13.007798194885254
    8. '
' → logprob: -13.132798194885254
    9. 'houses' → logprob: -13.632798194885254
    10. '  ' → logprob: -13.882798194885254

Token 348: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23535993695259094
    2. '           ' → logprob: -1.9853599071502686
    3. ' and' → logprob: -3.6103599071502686
    4. ',' → logprob: -3.8603599071502686
    5. ':' → logprob: -5.360360145568848
    6. '
' → logprob: -5.610360145568848
    7. ' to' → logprob: -5.610360145568848
    8. '        
' → logprob: -5.985360145568848
    9. ' if' → logprob: -5.985360145568848
    10. '   ' → logprob: -6.360360145568848

Token 349: ' drop' (ID: 9440)
  Prédit: 'drop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'drop' → logprob: -0.5053380131721497
    2. ' drop' → logprob: -2.005337953567505
    3. 'deliver' → logprob: -2.130337953567505
    4. ' deliver' → logprob: -3.505337953567505
    5. 'if' → logprob: -3.630337953567505
    6. 'return' → logprob: -4.005338191986084
    7. '       ' → logprob: -4.005338191986084
    8. '   ' → logprob: -4.505338191986084
    9. '           ' → logprob: -4.630338191986084
    10. ' if' → logprob: -4.755338191986084

Token 350: ' all' (ID: 722)
  Prédit: 'off'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'off' → logprob: -0.43615466356277466
    2. ' off' → logprob: -1.0611546039581299
    3. '   ' → logprob: -6.061154842376709
    4. 'if' → logprob: -6.311154842376709
    5. '```' → logprob: -7.061154842376709
    6. '       ' → logprob: -7.186154842376709
    7. 'offs' → logprob: -7.936154842376709
    8. ' if' → logprob: -8.31115436553955
    9. ',' → logprob: -8.43615436553955
    10. '_off' → logprob: -8.43615436553955

Token 351: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29564252495765686
    2. ' if' → logprob: -2.170642614364624
    3. '   ' → logprob: -2.545642614364624
    4. 'if' → logprob: -3.670642614364624
    5. '           ' → logprob: -5.045642375946045
    6. ':
' → logprob: -5.295642375946045
    7. ',' → logprob: -5.295642375946045
    8. ':' → logprob: -5.295642375946045
    9. '    
' → logprob: -5.420642375946045
    10. '        
' → logprob: -5.545642375946045

Token 352: 'no' (ID: 1750)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.43340298533439636
    2. ')' → logprob: -1.4334030151367188
    3. 'if' → logprob: -2.4334030151367188
    4. ' if' → logprob: -3.9334030151367188
    5. '       ' → logprob: -5.933403015136719
    6. '   ' → logprob: -6.808403015136719
    7. '):
' → logprob: -7.308403015136719
    8. ' )
' → logprob: -7.558403015136719
    9. '           ' → logprob: -8.433403015136719
    10. ' )' → logprob: -9.058403015136719

Token 353: ' cost' (ID: 3097)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2793899774551392
    2. 'carry' → logprob: -2.2793898582458496
    3. 'distance' → logprob: -2.4043898582458496
    4. 'cost' → logprob: -2.6543898582458496
    5. ' )' → logprob: -3.2793898582458496
    6. ' cost' → logprob: -3.2793898582458496
    7. 'dist' → logprob: -3.4043898582458496
    8. ' carry' → logprob: -3.4043898582458496
    9. ',' → logprob: -3.4043898582458496
    10. ' distance' → logprob: -3.5293898582458496

Token 354: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08871641755104065
    2. ')
' → logprob: -2.963716506958008
    3. ' for' → logprob: -3.588716506958008
    4. ' )' → logprob: -6.713716506958008
    5. ' to' → logprob: -6.963716506958008
    6. '),' → logprob: -6.963716506958008
    7. ' penalty' → logprob: -7.463716506958008
    8. 'for' → logprob: -7.963716506958008
    9. ' )
' → logprob: -7.963716506958008
    10. ',' → logprob: -8.338716506958008

Token 355: ' no' (ID: 860)
  Prédit: ' but'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' but' → logprob: -1.1795766353607178
    2. ')' → logprob: -1.4295766353607178
    3. ')
' → logprob: -2.8045766353607178
    4. 'time' → logprob: -2.9295766353607178
    5. ' time' → logprob: -3.0545766353607178
    6. 'but' → logprob: -3.3045766353607178
    7. 'heap' → logprob: -3.5545766353607178
    8. 'except' → logprob: -3.6795766353607178
    9. 'distance' → logprob: -3.8045766353607178
    10. ' heap' → logprob: -3.9295766353607178

Token 356: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.27950558066368103
    2. ' time' → logprob: -2.404505491256714
    3. 'distance' → logprob: -2.654505491256714
    4. 'dist' → logprob: -3.279505491256714
    5. 'change' → logprob: -4.279505729675293
    6. ')' → logprob: -4.404505729675293
    7. ' distance' → logprob: -5.904505729675293
    8. 'tokens' → logprob: -5.904505729675293
    9. 'increase' → logprob: -6.904505729675293
    10. 'additional' → logprob: -6.904505729675293

Token 357: ')
' (ID: 446)
  Prédit: ' penalty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' penalty' → logprob: -0.7399322390556335
    2. ')' → logprob: -1.1149322986602783
    3. ')
' → logprob: -2.2399322986602783
    4. ' cost' → logprob: -3.4899322986602783
    5. ' added' → logprob: -3.8649322986602783
    6. 'cost' → logprob: -4.364932060241699
    7. ' increase' → logprob: -4.739932060241699
    8. ' penalties' → logprob: -5.489932060241699
    9. 'pen' → logprob: -5.739932060241699
    10. 'increase' → logprob: -6.114932060241699

Token 358: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8718151450157166
    2. '       ' → logprob: -0.8718151450157166
    3. ':
' → logprob: -2.2468152046203613
    4. '):
' → logprob: -4.246815204620361
    5. '   ' → logprob: -4.371815204620361
    6. ')' → logprob: -4.621815204620361
    7. '):' → logprob: -4.746815204620361
    8. ',' → logprob: -5.621815204620361
    9. '        
' → logprob: -6.246815204620361
    10. '    
' → logprob: -6.746815204620361

Token 359: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029683955013751984
    2. ' if' → logprob: -4.154684066772461
    3. '
' → logprob: -5.029684066772461
    4. '        
' → logprob: -5.654684066772461
    5. 'if' (adapté à ' if') → logprob: -6.154684066772461
    6. ' 
' → logprob: -7.154684066772461
    7. '  
' → logprob: -8.779684066772461
    8. '   ' → logprob: -8.779684066772461
    9. '    
' → logprob: -8.779684066772461
    10. '\n' → logprob: -10.029684066772461

Token 360: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.20146216452121735
    2. 'len' → logprob: -1.7014621496200562
    3. '(len' → logprob: -10.201461791992188
    4. '	len' → logprob: -12.201461791992188
    5. ' carrying' → logprob: -12.576461791992188
    6. '   ' → logprob: -13.201461791992188
    7. 'carry' → logprob: -15.326461791992188
    8. '=len' → logprob: -15.576461791992188
    9. 'car' → logprob: -15.701461791992188
    10. ' ' → logprob: -15.701461791992188

Token 361: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -1.306760805164231e-05
    2. ' (' → logprob: -11.37501335144043
    3. 'car' → logprob: -14.75001335144043
    4. '(' → logprob: -14.87501335144043
    5. '(car' → logprob: -15.25001335144043
    6. 'carry' → logprob: -15.25001335144043
    7. 'c' → logprob: -15.75001335144043
    8. '>' → logprob: -16.00001335144043
    9. '	c' → logprob: -17.00001335144043
    10. ' carrying' → logprob: -17.75001335144043

Token 362: 'arry' (ID: 20052)
  Prédit: 'arry'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arry' → logprob: -0.00013405199570115656
    2. 'arring' → logprob: -9.250134468078613
    3. ' carrying' → logprob: -11.625134468078613
    4. 'ar' → logprob: -11.875134468078613
    5. 'arr' → logprob: -11.875134468078613
    6. 'car' → logprob: -12.000134468078613
    7. 'ary' → logprob: -12.500134468078613
    8. 'array' → logprob: -13.000134468078613
    9. 'arri' → logprob: -14.500134468078613
    10. 'ARRY' → logprob: -14.750134468078613

Token 363: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.04003014788031578
    2. 'g' → logprob: -4.040030002593994
    3. 'car' → logprob: -5.290030002593994
    4. '   ' → logprob: -5.790030002593994
    5. 'ying' → logprob: -5.790030002593994
    6. 'arry' → logprob: -6.165030002593994
    7. 'carry' → logprob: -6.290030002593994
    8. 'ar' → logprob: -6.915030002593994
    9. 'arr' → logprob: -7.040030002593994
    10. 'rying' → logprob: -7.290030002593994

Token 364: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016360903158783913
    2. ')>' → logprob: -4.141360759735107
    3. ' )' → logprob: -8.266361236572266
    4. '>' → logprob: -10.266361236572266
    5. '):
' → logprob: -11.016361236572266
    6. ' >' → logprob: -12.016361236572266
    7. '   ' → logprob: -12.141361236572266
    8. ')
' → logprob: -13.766361236572266
    9. ')>
' → logprob: -14.266361236572266
    10. '):' → logprob: -14.266361236572266

Token 365: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.1616799384355545
    2. ' >' → logprob: -1.911679983139038
    3. ')>' → logprob: -6.786679744720459
    4. ')' → logprob: -8.161680221557617
    5. '()>' → logprob: -11.661680221557617
    6. '   ' → logprob: -12.036680221557617
    7. ' ' → logprob: -12.286680221557617
    8. ':' → logprob: -12.661680221557617
    9. ']>' → logprob: -13.161680221557617
    10. '```' → logprob: -13.161680221557617

Token 366: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04301003739237785
    2. ' ' → logprob: -3.1680099964141846
    3. '=' → logprob: -12.168009757995605
    4. ')' → logprob: -13.230509757995605
    5. '  ' → logprob: -14.480509757995605
    6. '>' → logprob: -14.668009757995605
    7. ',' → logprob: -14.980509757995605
    8. '1' → logprob: -15.105509757995605
    9. '<|end|>' → logprob: -15.293009757995605
    10. '   ' → logprob: -15.418009757995605

Token 367: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0031797364354133606
    2. ' ' → logprob: -5.753179550170898
    3. '=' → logprob: -14.878179550170898
    4. ')' → logprob: -14.940679550170898
    5. '
' → logprob: -15.128179550170898
    6. '>' → logprob: -16.0656795501709
    7. '```' → logprob: -16.0656795501709
    8. '  ' → logprob: -16.1281795501709
    9. '   ' → logprob: -16.4406795501709
    10. ',' → logprob: -16.7531795501709

Token 368: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.47729063034057617
    2. ':' → logprob: -0.9772906303405762
    3. ' and' → logprob: -5.852290630340576
    4. '):
' → logprob: -8.852291107177734
    5. '       ' → logprob: -9.977291107177734
    6. 'and' → logprob: -9.977291107177734
    7. '   ' → logprob: -10.352291107177734
    8. ',' → logprob: -11.227291107177734
    9. ':

' → logprob: -11.352291107177734
    10. '):' → logprob: -11.727291107177734

Token 369: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002787526696920395
    2. '       ' → logprob: -6.8777875900268555
    3. '            
' → logprob: -7.6277875900268555
    4. ':
' → logprob: -7.7527875900268555
    5. ',' → logprob: -8.752787590026855
    6. '
' → logprob: -8.877787590026855
    7. ' new' → logprob: -9.502787590026855
    8. '        
' → logprob: -9.877787590026855
    9. '```' → logprob: -10.252787590026855
    10. 'new' → logprob: -10.377787590026855

Token 370: ' if' (ID: 538)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.8043720722198486
    2. '           ' → logprob: -2.1793720722198486
    3. ' heap' → logprob: -2.4293720722198486
    4. 'new' → logprob: -2.4293720722198486
    5. 'dist' → logprob: -2.8043720722198486
    6. 'if' (adapté à ' if') → logprob: -2.9293720722198486
    7. ' new' → logprob: -3.1793720722198486
    8. ' if' → logprob: -3.3043720722198486
    9. ' dist' → logprob: -3.9293720722198486
    10. '#' → logprob: -4.6793718338012695

Token 371: ' (' (ID: 350)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.6881159543991089
    2. ' pos' → logprob: -1.5631159543991089
    3. '(pos' → logprob: -1.6881159543991089
    4. ' (' → logprob: -2.9381160736083984
    5. ' carrying' → logprob: -4.438116073608398
    6. '(' → logprob: -5.188116073608398
    7. 'time' → logprob: -5.438116073608398
    8. ' time' → logprob: -5.563116073608398
    9. '(h' → logprob: -5.688116073608398
    10. '(time' → logprob: -6.188116073608398

Token 372: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.005508599802851677
    2. ' idx' → logprob: -6.2555084228515625
    3. '0' → logprob: -6.8805084228515625
    4. '(idx' → logprob: -7.1305084228515625
    5. 'key' → logprob: -7.3805084228515625
    6. '(' → logprob: -7.5055084228515625
    7. 'time' → logprob: -9.005508422851562
    8. 'pos' → logprob: -9.255508422851562
    9. 'n' → logprob: -9.630508422851562
    10. ')' → logprob: -10.255508422851562

Token 373: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.022848233580589294
    2. ' ,' → logprob: -4.022848129272461
    3. ' !=' → logprob: -5.897848129272461
    4. '!=' → logprob: -7.647848129272461
    5. ' ==' → logprob: -7.897848129272461
    6. '==' → logprob: -8.147848129272461
    7. ')' → logprob: -8.272848129272461
    8. ',key' → logprob: -8.772848129272461
    9. '   ' → logprob: -9.897848129272461
    10. '+' → logprob: -10.022848129272461

Token 374: ' house' (ID: 4276)
  Prédit: 'house'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'house' → logprob: -0.03153449669480324
    2. '0' → logprob: -3.531534433364868
    3. ' house' → logprob: -6.406534671783447
    4. ' ' → logprob: -9.531534194946289
    5. 'home' → logprob: -10.281534194946289
    6. '   ' → logprob: -12.281534194946289
    7. '```' → logprob: -12.531534194946289
    8. 'ho' → logprob: -13.031534194946289
    9. ')' → logprob: -13.156534194946289
    10. 'houses' → logprob: -13.594034194946289

Token 375: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003088940167799592
    2. ' ,' → logprob: -5.87808895111084
    3. ')' → logprob: -8.25308895111084
    4. ',)' → logprob: -12.50308895111084
    5. ',
' → logprob: -12.62808895111084
    6. ')!=' → logprob: -12.62808895111084
    7. ' )' → logprob: -12.87808895111084
    8. '!=' → logprob: -13.25308895111084
    9. ' !=' → logprob: -13.50308895111084
    10. '0' → logprob: -13.62808895111084

Token 376: ' ())' (ID: 135375)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.000784495088737458
    2. '()' → logprob: -7.750784397125244
    3. ' ())' → logprob: -8.625784873962402
    4. 'tuple' → logprob: -9.500784873962402
    5. '()):
' → logprob: -9.500784873962402
    6. ')' → logprob: -11.250784873962402
    7. '   ' → logprob: -13.000784873962402
    8. '(),' → logprob: -13.375784873962402
    9. '()]' → logprob: -13.375784873962402
    10. '();)' → logprob: -13.625784873962402

Token 377: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.31461623311042786
    2. 'not' → logprob: -1.3146162033081055
    3. ')' → logprob: -6.8146162033081055
    4. ']' → logprob: -8.439616203308105
    5. '>' → logprob: -10.939616203308105
    6. '[' → logprob: -12.064616203308105
    7. ',' → logprob: -12.564616203308105
    8. ' in' → logprob: -12.814616203308105
    9. ' )' → logprob: -13.189616203308105
    10. '	not' → logprob: -13.189616203308105

Token 378: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5231971740722656
    2. ' in' → logprob: -0.8981971740722656
    3. ')' → logprob: -10.148197174072266
    4. '           ' → logprob: -11.648197174072266
    5. '<|end|>' → logprob: -12.023197174072266
    6. ',' → logprob: -13.023197174072266
    7. '       ' → logprob: -13.023197174072266
    8. '   ' → logprob: -13.148197174072266
    9. ' ' → logprob: -13.398197174072266
    10. ' not' → logprob: -13.523197174072266

Token 379: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0001238004770129919
    2. ' dp' → logprob: -9.000123977661133
    3. '
' → logprob: -16.500123977661133
    4. 'dq' → logprob: -16.500123977661133
    5. '	dp' → logprob: -16.750123977661133
    6. '   ' → logprob: -17.250123977661133
    7. '```' → logprob: -17.375123977661133
    8. '(dp' → logprob: -18.000123977661133
    9. 'dt' → logprob: -18.125123977661133
    10. ' ' → logprob: -18.250123977661133

Token 380: ' or' (ID: 503)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.38097918033599854
    2. ':
' → logprob: -1.8809791803359985
    3. ' or' → logprob: -2.630979061126709
    4. ':' → logprob: -3.505979061126709
    5. 'and' → logprob: -3.505979061126709
    6. '               ' → logprob: -4.255979061126709
    7. '           ' → logprob: -4.255979061126709
    8. ',' → logprob: -6.505979061126709
    9. 'or' → logprob: -7.130979061126709
    10. '):
' → logprob: -8.255979537963867

Token 381: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.07140983641147614
    2. ' dp' → logprob: -2.6964099407196045
    3. 'time' → logprob: -6.946409702301025
    4. '               ' → logprob: -8.071410179138184
    5. '(dp' → logprob: -9.071410179138184
    6. '           ' → logprob: -10.196410179138184
    7. ' time' → logprob: -10.446410179138184
    8. '	dp' → logprob: -12.321410179138184
    9. 'not' → logprob: -12.571410179138184
    10. '(time' → logprob: -13.196410179138184

Token 382: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.40744680166244507
    2. '.get' → logprob: -1.1574468612670898
    3. '[key' → logprob: -3.90744686126709
    4. '.setdefault' → logprob: -9.28244686126709
    5. 'get' → logprob: -9.90744686126709
    6. '[' → logprob: -10.03244686126709
    7. '```' → logprob: -10.53244686126709
    8. 'key' → logprob: -11.40744686126709
    9. '[get' → logprob: -11.53244686126709
    10. '(key' → logprob: -12.15744686126709

Token 383: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.026366138830780983
    2. '(idx' → logprob: -3.6513662338256836
    3. ' idx' → logprob: -10.026366233825684
    4. ' (' → logprob: -11.776366233825684
    5. '[idx' → logprob: -11.901366233825684
    6. '	idx' → logprob: -13.276366233825684
    7. '   ' → logprob: -13.401366233825684
    8. '0' → logprob: -13.901366233825684
    9. '_idx' → logprob: -14.026366233825684
    10. '(' → logprob: -14.151366233825684

Token 384: ',' (ID: 11)
  Prédit: ')]['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')][' → logprob: -0.014847532846033573
    2. '][' → logprob: -4.389847755432129
    3. ')[' → logprob: -6.264847755432129
    4. '   ' → logprob: -9.264847755432129
    5. 'house' → logprob: -9.764847755432129
    6. '[(' → logprob: -9.889847755432129
    7. '[' → logprob: -10.014847755432129
    8. ']][' → logprob: -10.139847755432129
    9. ')]' → logprob: -10.264847755432129
    10. ' ' → logprob: -10.639847755432129

Token 385: ' house' (ID: 4276)
  Prédit: 'house'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'house' → logprob: -3.166338137816638e-05
    2. ' house' → logprob: -10.375031471252441
    3. '0' → logprob: -15.375031471252441
    4. ')' → logprob: -16.750032424926758
    5. 'home' → logprob: -16.875032424926758
    6. '   ' → logprob: -17.875032424926758
    7. '
' → logprob: -18.625032424926758
    8. '.house' → logprob: -18.750032424926758
    9. ' ' → logprob: -19.000032424926758
    10. '```' → logprob: -19.125032424926758

Token 386: ',' (ID: 11)
  Prédit: ')]['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')][' → logprob: -0.013411503285169601
    2. ')[' → logprob: -4.763411521911621
    3. '][' → logprob: -5.388411521911621
    4. '   ' → logprob: -9.638411521911621
    5. ' )[' → logprob: -10.388411521911621
    6. ')' → logprob: -10.388411521911621
    7. '])[' → logprob: -10.888411521911621
    8. ')]' → logprob: -11.013411521911621
    9. ' ' → logprob: -11.388411521911621
    10. '[' → logprob: -11.388411521911621

Token 387: ' ())' (ID: 135375)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.6557392477989197
    2. ')][' → logprob: -0.7807392477989197
    3. '())[' → logprob: -4.5307393074035645
    4. '()' → logprob: -5.5307393074035645
    5. '0' → logprob: -6.0307393074035645
    6. ')' → logprob: -6.2807393074035645
    7. '()][' → logprob: -6.5307393074035645
    8. '(' → logprob: -7.0307393074035645
    9. ' ())' → logprob: -7.2807393074035645
    10. ')]' → logprob: -7.9057393074035645

Token 388: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.5100047588348389
    2. '>' → logprob: -1.7600047588348389
    3. '>[' → logprob: -2.135004758834839
    4. ']' → logprob: -3.260004758834839
    5. '[' → logprob: -3.385004758834839
    6. ']>' → logprob: -3.510004758834839
    7. ' >' → logprob: -5.510004997253418
    8. '   ' → logprob: -6.760004997253418
    9. ' ][' → logprob: -7.760004997253418
    10. '>]' → logprob: -8.385004997253418

Token 389: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007194612408056855
    2. '1' → logprob: -7.2507195472717285
    3. ' ' → logprob: -12.50071907043457
    4. '[' → logprob: -13.62571907043457
    5. '
' → logprob: -13.87571907043457
    6. '   ' → logprob: -14.25071907043457
    7. '(' → logprob: -14.50071907043457
    8. '][' → logprob: -14.50071907043457
    9. '>' → logprob: -15.00071907043457
    10. ']' → logprob: -15.18821907043457

Token 390: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.23276297748088837
    2. ' >' → logprob: -2.2327630519866943
    3. ']' → logprob: -2.7327630519866943
    4. ']>' → logprob: -3.3577630519866943
    5. ' ]' → logprob: -8.482763290405273
    6. '```' → logprob: -9.607763290405273
    7. ')>' → logprob: -9.607763290405273
    8. ')' → logprob: -9.857763290405273
    9. ']>=' → logprob: -10.607763290405273
    10. '>]' → logprob: -10.732763290405273

Token 391: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.061972059309482574
    2. ' >' → logprob: -2.811972141265869
    3. '>
' → logprob: -13.561971664428711
    4. ' ' → logprob: -14.686971664428711
    5. '>=' → logprob: -14.686971664428711
    6. '```' → logprob: -15.061971664428711
    7. '   ' → logprob: -15.311971664428711
    8. '>

' → logprob: -15.686971664428711
    9. '">' → logprob: -15.936971664428711
    10. ' >
' → logprob: -16.06197166442871

Token 392: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.0031923281494528055
    2. ' time' → logprob: -5.75319242477417
    3. '   ' → logprob: -11.253191947937012
    4. '  ' → logprob: -15.003191947937012
    5. 'times' → logprob: -15.503191947937012
    6. ' ' → logprob: -15.628191947937012
    7. '    ' → logprob: -15.753191947937012
    8. 't' → logprob: -15.878191947937012
    9. '	time' → logprob: -15.878191947937012
    10. '```' → logprob: -16.378192901611328

Token 393: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.1438044309616089
    2. 'or' → logprob: -2.0188045501708984
    3. ':' → logprob: -7.893804550170898
    4. '           ' → logprob: -8.018804550170898
    5. '               ' → logprob: -8.643804550170898
    6. '            ' → logprob: -9.393804550170898
    7. ':
' → logprob: -10.018804550170898
    8. ' ' → logprob: -10.893804550170898
    9. '          ' → logprob: -10.893804550170898
    10. '              ' → logprob: -11.268804550170898

Token 394: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.011138128116726875
    2. ' dp' → logprob: -4.511137962341309
    3. '           ' → logprob: -10.511137962341309
    4. '   ' → logprob: -10.886137962341309
    5. ' ' → logprob: -11.761137962341309
    6. '  ' → logprob: -11.761137962341309
    7. '(dp' → logprob: -12.261137962341309
    8. '    ' → logprob: -12.511137962341309
    9. '               ' → logprob: -12.636137962341309
    10. '          ' → logprob: -12.761137962341309

Token 395: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -9.088346359931165e-07
    2. '.get' → logprob: -15.000000953674316
    3. '```' → logprob: -15.625000953674316
    4. '[' → logprob: -15.875000953674316
    5. ' [(' → logprob: -16.0
    6. '``' → logprob: -16.625
    7. '   ' → logprob: -18.25
    8. '#' → logprob: -18.25
    9. '[
' → logprob: -18.375
    10. '[((' → logprob: -18.5

Token 396: 'idx' (ID: 13196)
  Prédit: '(idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.0118183558806777
    2. '[(' → logprob: -5.1368184089660645
    3. '[idx' → logprob: -5.6368184089660645
    4. '(h' → logprob: -6.7618184089660645
    5. '(' → logprob: -7.3868184089660645
    6. 'idx' → logprob: -8.761817932128906
    7. '
' → logprob: -9.511817932128906
    8. ' (' → logprob: -9.511817932128906
    9. '(dist' → logprob: -9.761817932128906
    10. 'dist' → logprob: -10.761817932128906

Token 397: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5671152472496033
    2. '1' → logprob: -1.442115306854248
    3. '[' → logprob: -3.192115306854248
    4. '][' → logprob: -3.192115306854248
    5. ')][' → logprob: -3.317115306854248
    6. '[(' → logprob: -3.942115306854248
    7. ' (' → logprob: -4.067115306854248
    8. 'house' → logprob: -4.817115306854248
    9. ',' → logprob: -4.817115306854248
    10. '   ' → logprob: -5.067115306854248

Token 398: ' house' (ID: 4276)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2970145046710968
    2. '(' → logprob: -1.6720144748687744
    3. 'house' → logprob: -3.5470144748687744
    4. ' (' → logprob: -3.6720144748687744
    5. ' ' → logprob: -4.9220147132873535
    6. '[(' → logprob: -5.4220147132873535
    7. '```' → logprob: -7.2970147132873535
    8. ' house' → logprob: -7.5470147132873535
    9. '(h' → logprob: -8.297014236450195
    10. '   ' → logprob: -8.297014236450195

Token 399: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12936906516551971
    2. ')][' → logprob: -2.254369020462036
    3. '][' → logprob: -4.504369258880615
    4. ')[' → logprob: -5.504369258880615
    5. '[' → logprob: -7.754369258880615
    6. ']][' → logprob: -8.879368782043457
    7. ')' → logprob: -9.129368782043457
    8. '])[' → logprob: -9.129368782043457
    9. '   ' → logprob: -9.504368782043457
    10. ',)' → logprob: -9.879368782043457

Token 400: ' ())' (ID: 135375)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.17305141687393188
    2. '()[' → logprob: -2.923051357269287
    3. '(' → logprob: -3.048051357269287
    4. '())[' → logprob: -3.673051357269287
    5. '())' → logprob: -4.423051357269287
    6. '[' → logprob: -5.048051357269287
    7. '()][' → logprob: -5.048051357269287
    8. ')[' → logprob: -5.673051357269287
    9. '])[' → logprob: -6.548051357269287
    10. '][' → logprob: -7.048051357269287

Token 401: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.15419729053974152
    2. '[' → logprob: -2.4041972160339355
    3. ' ][' → logprob: -3.1541972160339355
    4. ']' → logprob: -6.2791972160339355
    5. ')[' → logprob: -6.4041972160339355
    6. '           ' → logprob: -6.6541972160339355
    7. '       ' → logprob: -7.0291972160339355
    8. ')][' → logprob: -7.2791972160339355
    9. ' [' → logprob: -7.4041972160339355
    10. '   ' → logprob: -8.154197692871094

Token 402: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019694350194185972
    2. '[' → logprob: -6.251969337463379
    3. '
' → logprob: -11.001969337463379
    4. '][' → logprob: -11.626969337463379
    5. ' ' → logprob: -12.376969337463379
    6. '   ' → logprob: -12.501969337463379
    7. 'dp' → logprob: -13.251969337463379
    8. ')[' → logprob: -14.439469337463379
    9. ']' → logprob: -14.814469337463379
    10. '(' → logprob: -14.876969337463379

Token 403: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.15516982972621918
    2. ']>' → logprob: -2.280169725418091
    3. '>' → logprob: -3.905169725418091
    4. ' >' → logprob: -4.40516996383667
    5. ' ]' → logprob: -4.90516996383667
    6. ']<' → logprob: -7.78016996383667
    7. '<' → logprob: -7.90516996383667
    8. '>]' → logprob: -8.155169486999512
    9. ' <' → logprob: -8.780169486999512
    10. ')' → logprob: -9.530169486999512

Token 404: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.28127020597457886
    2. ' >' → logprob: -1.4062702655792236
    3. ' ' → logprob: -10.781270027160645
    4. ']>' → logprob: -10.781270027160645
    5. ']' → logprob: -10.906270027160645
    6. '<' → logprob: -11.406270027160645
    7. '```' → logprob: -11.406270027160645
    8. '   ' → logprob: -11.531270027160645
    9. '[' → logprob: -12.281270027160645
    10. ' <' → logprob: -12.656270027160645

Token 405: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.04860088601708412
    2. ' dist' → logprob: -3.048600912094116
    3. '   ' → logprob: -11.423601150512695
    4. '	dist' → logprob: -13.298601150512695
    5. ' ' → logprob: -15.548601150512695
    6. '       ' → logprob: -15.798601150512695
    7. '    ' → logprob: -16.048601150512695
    8. '```' → logprob: -16.173601150512695
    9. '(dist' → logprob: -16.298601150512695
    10. '  ' → logprob: -16.548601150512695

Token 406: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -2.236549335066229e-05
    2. 'sum' → logprob: -10.750021934509277
    3. ' _' → logprob: -14.625021934509277
    4. '   ' → logprob: -16.125022888183594
    5. '_s' → logprob: -16.625022888183594
    6. ' sum' → logprob: -17.375022888183594
    7. '_' → logprob: -17.625022888183594
    8. '       ' → logprob: -17.875022888183594
    9. '```' → logprob: -18.000022888183594
    10. '    ' → logprob: -18.250022888183594

Token 407: ' +' (ID: 659)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1026725247502327
    2. ':' → logprob: -2.602672576904297
    3. '):
' → logprob: -4.227672576904297
    4. '           ' → logprob: -5.227672576904297
    5. '               ' → logprob: -5.852672576904297
    6. '):' → logprob: -8.477672576904297
    7. '():
' → logprob: -8.977672576904297
    8. '       ' → logprob: -9.102672576904297
    9. ']:
' → logprob: -10.102672576904297
    10. '                       ' → logprob: -10.227672576904297

Token 408: ' abs' (ID: 8443)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.046160951256752014
    2. ' ' → logprob: -4.29616117477417
    3. 'pos' → logprob: -4.54616117477417
    4. 'abs' → logprob: -5.17116117477417
    5. '1' → logprob: -5.29616117477417
    6. ' abs' → logprob: -5.67116117477417
    7. ' pos' → logprob: -5.92116117477417
    8. ' (' → logprob: -6.54616117477417
    9. '(pos' → logprob: -6.92116117477417
    10. 'move' → logprob: -7.92116117477417

Token 409: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.0010387639049440622
    2. '(h' → logprob: -7.501038551330566
    3. '(' → logprob: -8.251038551330566
    4. 'pos' → logprob: -8.501038551330566
    5. '(position' → logprob: -11.376038551330566
    6. '(
' → logprob: -13.001038551330566
    7. '(home' → logprob: -13.376038551330566
    8. '[pos' → logprob: -13.626038551330566
    9. '(c' → logprob: -14.001038551330566
    10. '(p' → logprob: -14.251038551330566

Token 410: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.21421962976455688
    2. '-' → logprob: -1.714219570159912
    3. '-house' → logprob: -4.714219570159912
    4. '-h' → logprob: -5.964219570159912
    5. '(h' → logprob: -6.964219570159912
    6. '(' → logprob: -8.83922004699707
    7. '   ' → logprob: -10.71422004699707
    8. ' ' → logprob: -11.33922004699707
    9. '-pos' → logprob: -11.58922004699707
    10. ')' → logprob: -11.58922004699707

Token 411: ' house' (ID: 4276)
  Prédit: 'house'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'house' → logprob: -0.07892107218503952
    2. ' house' → logprob: -2.57892107963562
    3. '0' → logprob: -10.8289213180542
    4. '```' → logprob: -12.7039213180542
    5. 'home' → logprob: -12.9539213180542
    6. ' ' → logprob: -13.2039213180542
    7. '   ' → logprob: -13.8289213180542
    8. '  ' → logprob: -14.3289213180542
    9. 'ho' → logprob: -15.0789213180542
    10. 'hou' → logprob: -15.0789213180542

Token 412: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6422781944274902
    2. '):' → logprob: -0.7672781944274902
    3. ')' → logprob: -4.89227819442749
    4. ')):
' → logprob: -8.017278671264648
    5. '):
' → logprob: -8.267278671264648
    6. ' ):
' → logprob: -8.267278671264648
    7. ')):' → logprob: -8.517278671264648
    8. '           ' → logprob: -8.642278671264648
    9. '       ' → logprob: -8.767278671264648
    10. ' ):' → logprob: -8.767278671264648

Token 413: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5556506514549255
    2. ':
' → logprob: -1.3056507110595703
    3. '):
' → logprob: -2.4306507110595703
    4. '           ' → logprob: -3.0556507110595703
    5. ':' → logprob: -4.93065071105957
    6. ')' → logprob: -5.80565071105957
    7. '):' → logprob: -6.05565071105957
    8. '                       ' → logprob: -6.43065071105957
    9. '```' → logprob: -6.55565071105957
    10. ' heap' → logprob: -7.30565071105957

Token 414: ' new' (ID: 620)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.4821368157863617
    2. ' heap' → logprob: -1.357136845588684
    3. '               ' → logprob: -2.2321367263793945
    4. '                   ' → logprob: -4.7321367263793945
    5. '           ' → logprob: -4.9821367263793945
    6. '   ' → logprob: -7.1071367263793945
    7. 'distance' → logprob: -7.8571367263793945
    8. 'dist' → logprob: -8.607136726379395
    9. '
' → logprob: -8.982136726379395
    10. ' dist' → logprob: -8.982136726379395

Token 415: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.21061331033706665
    2. 'dist' → logprob: -2.085613250732422
    3. '_time' → logprob: -3.835613250732422
    4. '_pos' → logprob: -4.335613250732422
    5. '_key' → logprob: -4.835613250732422
    6. '_state' → logprob: -4.960613250732422
    7. 'key' → logprob: -5.585613250732422
    8. 'pos' → logprob: -5.835613250732422
    9. '_cost' → logprob: -5.960613250732422
    10. 'time' → logprob: -6.335613250732422

Token 416: ' =' (ID: 314)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.01079088356345892
    2. ',_' → logprob: -5.635790824890137
    3. '=_' → logprob: -6.135790824890137
    4. ')_' → logprob: -7.010790824890137
    5. '               ' → logprob: -7.135790824890137
    6. '=' → logprob: -7.385790824890137
    7. ' =' → logprob: -7.760790824890137
    8. ',' → logprob: -8.010790824890137
    9. '_s' → logprob: -8.135790824890137
    10. '```' → logprob: -8.260790824890137

Token 417: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0024763736873865128
    2. ' dist' → logprob: -6.002476215362549
    3. '	dist' → logprob: -15.002476692199707
    4. '   ' → logprob: -15.127476692199707
    5. '               ' → logprob: -16.50247573852539
    6. '           ' → logprob: -17.00247573852539
    7. '(dist' → logprob: -17.50247573852539
    8. '       ' → logprob: -17.75247573852539
    9. '_dist' → logprob: -18.00247573852539
    10. '                   ' → logprob: -18.50247573852539

Token 418: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -6.670925358776003e-05
    2. '+' → logprob: -10.375066757202148
    3. ' +' → logprob: -11.375066757202148
    4. '_dist' → logprob: -11.500066757202148
    5. ' _' → logprob: -12.250066757202148
    6. 'sum' → logprob: -12.500066757202148
    7. 's' → logprob: -13.125066757202148
    8. '_' → logprob: -13.250066757202148
    9. '_s' → logprob: -14.375066757202148
    10. 'd' → logprob: -15.375066757202148

Token 419: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.04858794063329697
    2. '+' → logprob: -3.0485880374908447
    3. ' ' → logprob: -15.923587799072266
    4. '                ' → logprob: -16.048587799072266
    5. ' ' → logprob: -16.548587799072266
    6. ' +
' → logprob: -17.048587799072266
    7. '                    ' → logprob: -17.548587799072266
    8. '               ' → logprob: -17.548587799072266
    9. '                   ' → logprob: -17.673587799072266
    10. '            ' → logprob: -17.798587799072266

Token 420: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.04859020933508873
    2. ' abs' → logprob: -3.0485901832580566
    3. '(abs' → logprob: -12.798590660095215
    4. '.abs' → logprob: -16.7985897064209
    5. '_abs' → logprob: -17.2985897064209
    6. '   ' → logprob: -18.4235897064209
    7. '```' → logprob: -18.6735897064209
    8. ' ' → logprob: -19.1735897064209
    9. 'Abs' → logprob: -20.0485897064209
    10. '
' → logprob: -20.1735897064209

Token 421: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.0008076059748418629
    2. '(' → logprob: -7.250807762145996
    3. 'pos' → logprob: -9.250807762145996
    4. ' (' → logprob: -14.000807762145996
    5. ' pos' → logprob: -14.625807762145996
    6. '(position' → logprob: -16.00080680847168
    7. ',pos' → logprob: -16.37580680847168
    8. '[pos' → logprob: -17.50080680847168
    9. '(
' → logprob: -17.87580680847168
    10. '	pos' → logprob: -18.12580680847168

Token 422: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5806441307067871
    2. '-' → logprob: -0.8306441307067871
    3. '(pos' → logprob: -5.705644130706787
    4. '(' → logprob: -6.705644130706787
    5. '-pos' → logprob: -9.580644607543945
    6. '(-' → logprob: -11.080644607543945
    7. ' ' → logprob: -11.205644607543945
    8. '()-' → logprob: -11.830644607543945
    9. '   ' → logprob: -11.955644607543945
    10. ')' → logprob: -12.330644607543945

Token 423: ' house' (ID: 4276)
  Prédit: 'house'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'house' → logprob: -0.005234002135694027
    2. ' house' → logprob: -5.2552337646484375
    3. '_house' → logprob: -16.505233764648438
    4. 'pos' → logprob: -17.130233764648438
    5. '```' → logprob: -17.380233764648438
    6. '-house' → logprob: -18.255233764648438
    7. 'horse' → logprob: -18.505233764648438
    8. '.house' → logprob: -18.630233764648438
    9. ' ' → logprob: -18.755233764648438
    10. '   ' → logprob: -19.005233764648438

Token 424: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5776833891868591
    2. ')
' → logprob: -0.8276833891868591
    3. '               ' → logprob: -6.452683448791504
    4. ' )
' → logprob: -9.702683448791504
    5. ')
' → logprob: -10.452683448791504
    6. ' )' → logprob: -10.827683448791504
    7. '                   ' → logprob: -11.327683448791504
    8. '           ' → logprob: -11.327683448791504
    9. ')

' → logprob: -11.577683448791504
    10. '),' → logprob: -12.452683448791504

Token 425: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003602798329666257
    2. 'heap' → logprob: -6.253602981567383
    3. '
' → logprob: -7.128602981567383
    4. ',' → logprob: -8.253602981567383
    5. 'time' → logprob: -8.628602981567383
    6. ' heap' → logprob: -8.878602981567383
    7. '                
' → logprob: -9.003602981567383
    8. 'new' → logprob: -10.253602981567383
    9. ',
' → logprob: -10.253602981567383
    10. '(heap' → logprob: -11.003602981567383

Token 426: ' new' (ID: 620)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.48628896474838257
    2. 'new' (adapté à ' new') → logprob: -0.9862889647483826
    3. ' heap' → logprob: -5.611289024353027
    4. '               ' → logprob: -5.611289024353027
    5. ' new' → logprob: -5.861289024353027
    6. '           ' → logprob: -6.611289024353027
    7. 'time' → logprob: -8.361289024353027
    8. '   ' → logprob: -9.111289024353027
    9. 'move' → logprob: -9.611289024353027
    10. '
' → logprob: -9.611289024353027

Token 427: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.18121828138828278
    2. '_dist' → logprob: -2.306218385696411
    3. 'time' → logprob: -2.806218385696411
    4. 'dist' → logprob: -5.681218147277832
    5. 'heap' → logprob: -6.556218147277832
    6. '_heap' → logprob: -8.931218147277832
    7. '_t' → logprob: -9.306218147277832
    8. '_' → logprob: -9.556218147277832
    9. '=' → logprob: -9.556218147277832
    10. ' =' → logprob: -9.681218147277832

Token 428: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9850373268127441
    2. ' =' → logprob: -1.1100373268127441
    3. '=' → logprob: -1.2350373268127441
    4. ' ,' → logprob: -5.360037326812744
    5. '+' → logprob: -7.110037326812744
    6. ' +' → logprob: -7.735037326812744
    7. ' +=' → logprob: -9.360036849975586
    8. ',new' → logprob: -10.485036849975586
    9. '+=' → logprob: -10.735036849975586
    10. '```' → logprob: -10.985036849975586

Token 429: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.014165511354804039
    2. ' time' → logprob: -4.26416540145874
    3. '               ' → logprob: -13.639165878295898
    4. 'max' → logprob: -15.014165878295898
    5. 'dist' → logprob: -16.0141658782959
    6. ' max' → logprob: -16.2641658782959
    7. ' dist' → logprob: -16.6391658782959
    8. '                   ' → logprob: -16.6391658782959
    9. '           ' → logprob: -17.0141658782959
    10. '   ' → logprob: -17.0141658782959

Token 430: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.20142541825771332
    2. '+' → logprob: -1.7014254331588745
    3. ',' → logprob: -12.076425552368164
    4. '+
' → logprob: -13.201425552368164
    5. ' +
' → logprob: -13.201425552368164
    6. '<|end|>' → logprob: -13.951425552368164
    7. '+,' → logprob: -15.076425552368164
    8. '=' → logprob: -15.451425552368164
    9. ')' → logprob: -15.701425552368164
    10. '           ' → logprob: -15.826425552368164

Token 431: ' move' (ID: 5275)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0468166209757328
    2. ' abs' → logprob: -3.54681658744812
    3. 'move' → logprob: -4.796816825866699
    4. '(abs' → logprob: -4.921816825866699
    5. ' move' → logprob: -6.921816825866699
    6. '(move' → logprob: -8.6718168258667
    7. '(' → logprob: -9.0468168258667
    8. ' (' → logprob: -9.4218168258667
    9. 'new' → logprob: -12.0468168258667
    10. ' ' → logprob: -12.2968168258667

Token 432: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -1.0280383548888494e-06
    2. '_' → logprob: -14.375000953674316
    3. '_token' → logprob: -16.125001907348633
    4. ' _' → logprob: -16.625001907348633
    5. '_new' → logprob: -17.125001907348633
    6. '_t' → logprob: -17.250001907348633
    7. '_tokens' → logprob: -17.500001907348633
    8. '_to' → logprob: -17.750001907348633
    9. '_type' → logprob: -17.750001907348633
    10. 'Time' → logprob: -18.000001907348633

Token 433: '(abs' (ID: 71957)
  Prédit: '(abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(abs' → logprob: -0.00025001514586620033
    2. '(' → logprob: -8.375249862670898
    3. 'abs' → logprob: -11.500249862670898
    4. '(new' → logprob: -12.375249862670898
    5. ' (' → logprob: -12.750249862670898
    6. ' abs' → logprob: -13.625249862670898
    7. '(
' → logprob: -15.250249862670898
    8. '((' → logprob: -15.250249862670898
    9. '```' → logprob: -15.250249862670898
    10. 'new' → logprob: -16.6252498626709

Token 434: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.0013908311957493424
    2. '(' → logprob: -6.6263909339904785
    3. ' (' → logprob: -9.75139045715332
    4. 'pos' → logprob: -12.75139045715332
    5. '(abs' → logprob: -13.37639045715332
    6. ' pos' → logprob: -14.00139045715332
    7. ',pos' → logprob: -14.75139045715332
    8. ')' → logprob: -14.75139045715332
    9. '(
' → logprob: -16.12639045715332
    10. '_pos' → logprob: -16.12639045715332

Token 435: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6064103841781616
    2. '(pos' → logprob: -0.9814103841781616
    3. '-' → logprob: -2.606410503387451
    4. '-pos' → logprob: -5.606410503387451
    5. '(' → logprob: -6.231410503387451
    6. ' (' → logprob: -7.856410503387451
    7. ' ' → logprob: -10.856410026550293
    8. ')' → logprob: -11.231410026550293
    9. '-(' → logprob: -11.856410026550293
    10. ',' → logprob: -11.856410026550293

Token 436: ' house' (ID: 4276)
  Prédit: 'house'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'house' → logprob: -0.5341607332229614
    2. 'pos' → logprob: -0.9091607332229614
    3. '(pos' → logprob: -4.909160614013672
    4. ' pos' → logprob: -5.909160614013672
    5. ' house' → logprob: -7.409160614013672
    6. '(' → logprob: -9.284160614013672
    7. 'home' → logprob: -10.034160614013672
    8. ' (' → logprob: -10.659160614013672
    9. 'horse' → logprob: -10.909160614013672
    10. '(h' → logprob: -11.034160614013672

Token 437: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.28577807545661926
    2. ',' → logprob: -1.4107780456542969
    3. ' ,' → logprob: -6.535778045654297
    4. '(),' → logprob: -6.785778045654297
    5. ')' → logprob: -7.035778045654297
    6. '(' → logprob: -8.785778045654297
    7. ' ),' → logprob: -8.785778045654297
    8. ',new' → logprob: -8.785778045654297
    9. '))' → logprob: -9.285778045654297
    10. '(new' → logprob: -9.410778045654297

Token 438: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0009346862207166851
    2. '0' → logprob: -7.625934600830078
    3. ' len' → logprob: -7.750934600830078
    4. '(len' → logprob: -12.125934600830078
    5. 'new' → logprob: -12.875934600830078
    6. '
' → logprob: -13.125934600830078
    7. ' ' → logprob: -13.500934600830078
    8. '3' → logprob: -13.750934600830078
    9. '   ' → logprob: -14.500934600830078
    10. 'max' → logprob: -14.500934600830078

Token 439: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.00010235115041723475
    2. 'car' → logprob: -9.625102043151855
    3. ')' → logprob: -11.875102043151855
    4. '(car' → logprob: -11.875102043151855
    5. '(' → logprob: -12.000102043151855
    6. 'c' → logprob: -12.250102043151855
    7. '(
' → logprob: -12.875102043151855
    8. ' (' → logprob: -13.500102043151855
    9. 'carry' → logprob: -13.625102043151855
    10. '	c' → logprob: -13.625102043151855

Token 440: 'arry' (ID: 20052)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.1916942298412323
    2. 'arry' → logprob: -1.8166942596435547
    3. ' carrying' → logprob: -5.066694259643555
    4. ')' → logprob: -6.441694259643555
    5. 'carry' → logprob: -7.066694259643555
    6. 'arring' → logprob: -7.316694259643555
    7. '(c' → logprob: -7.316694259643555
    8. 'arr' → logprob: -7.441694259643555
    9. 'ar' → logprob: -8.316694259643555
    10. 'c' → logprob: -8.941694259643555

Token 441: 'ing' (ID: 289)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.4684751629829407
    2. 'ing' → logprob: -1.468475103378296
    3. 'car' → logprob: -2.093475103378296
    4. 'carry' → logprob: -4.843475341796875
    5. '(' → logprob: -5.343475341796875
    6. 'c' → logprob: -5.968475341796875
    7. ')' → logprob: -6.093475341796875
    8. '(car' → logprob: -6.968475341796875
    9. '())' → logprob: -7.718475341796875
    10. '(
' → logprob: -8.468475341796875

Token 442: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.19343023002147675
    2. ')' → logprob: -1.8184301853179932
    3. '))
' → logprob: -5.318430423736572
    4. ')))' → logprob: -5.443430423736572
    5. '+' → logprob: -5.943430423736572
    6. ')
' → logprob: -7.318430423736572
    7. ')+' → logprob: -7.443430423736572
    8. ')),' → logprob: -8.943429946899414
    9. ' ))' → logprob: -9.318429946899414
    10. ' +' → logprob: -9.693429946899414

Token 443: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00697749899700284
    2. '
' → logprob: -5.756977558135986
    3. '                
' → logprob: -6.006977558135986
    4. ')' → logprob: -7.756977558135986
    5. ',
' → logprob: -8.256977081298828
    6. ',' → logprob: -9.006977081298828
    7. '           ' → logprob: -9.006977081298828
    8. ')
' → logprob: -9.381977081298828
    9. '                   ' → logprob: -10.006977081298828
    10. '):
' → logprob: -10.256977081298828

Token 444: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.16494901478290558
    2. '               ' → logprob: -2.0399489402770996
    3. ' heap' → logprob: -3.9149489402770996
    4. 'if' → logprob: -6.4149489402771
    5. ' if' → logprob: -8.164949417114258
    6. '           ' → logprob: -9.039949417114258
    7. '```' → logprob: -11.289949417114258
    8. '   ' → logprob: -11.664949417114258
    9. 'new' → logprob: -12.289949417114258
    10. '
' → logprob: -12.414949417114258

Token 445: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -6.432518421206623e-05
    2. '.he' → logprob: -10.6250638961792
    3. 'push' → logprob: -10.8750638961792
    4. 'he' → logprob: -11.1250638961792
    5. 'replace' → logprob: -13.1250638961792
    6. '[' → logprob: -14.0000638961792
    7. 'ify' → logprob: -14.1250638961792
    8. '```' → logprob: -14.6250638961792
    9. '.push' → logprob: -14.7500638961792
    10. '_push' → logprob: -15.2500638961792

Token 446: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.000510856625624001
    2. 'he' → logprob: -7.6255106925964355
    3. 'push' → logprob: -11.625511169433594
    4. '.push' → logprob: -12.125511169433594
    5. '.heap' → logprob: -12.500511169433594
    6. '.' → logprob: -13.000511169433594
    7. ' he' → logprob: -14.250511169433594
    8. 'ush' → logprob: -14.625511169433594
    9. 'q' → logprob: -14.625511169433594
    10. 'heap' → logprob: -14.875511169433594

Token 447: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.31915584206581116
    2. 'pp' → logprob: -1.3191558122634888
    3. 'push' → logprob: -5.194155693054199
    4. 'ush' → logprob: -8.1941556930542
    5. 'p' → logprob: -10.3191556930542
    6. '```' → logprob: -11.8191556930542
    7. 'op' → logprob: -13.0691556930542
    8. 'appen' → logprob: -13.1941556930542
    9. 'ppy' → logprob: -13.1941556930542
    10. 'ap' → logprob: -14.1941556930542

Token 448: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -2.618001053633634e-05
    2. 'push' → logprob: -11.000025749206543
    3. 'op' → logprob: -12.500025749206543
    4. 'sh' → logprob: -12.500025749206543
    5. 'app' → logprob: -13.875025749206543
    6. 'pp' → logprob: -14.250025749206543
    7. 'p' → logprob: -15.625025749206543
    8. '```' → logprob: -16.25002670288086
    9. 'u' → logprob: -17.25002670288086
    10. 'USH' → logprob: -17.37502670288086

Token 449: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -2.45848218582978e-06
    2. '(' → logprob: -13.25000286102295
    3. '(
' → logprob: -14.50000286102295
    4. ' (' → logprob: -16.875001907348633
    5. 'h' → logprob: -17.750001907348633
    6. '   ' → logprob: -18.000001907348633
    7. '```' → logprob: -18.250001907348633
    8. ',h' → logprob: -19.000001907348633
    9. '	h' → logprob: -20.125001907348633
    10. 'hq' → logprob: -21.000001907348633

Token 450: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.00021760274830739945
    2. '(h' → logprob: -8.62521743774414
    3. '(q' → logprob: -11.00021743774414
    4. 'hq' → logprob: -11.00021743774414
    5. 'qh' → logprob: -13.00021743774414
    6. '(
' → logprob: -13.75021743774414
    7. ' (' → logprob: -15.50021743774414
    8. 'Q' → logprob: -15.50021743774414
    9. ')' → logprob: -16.25021743774414
    10. '(' → logprob: -16.37521743774414

Token 451: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06657639145851135
    2. ',' → logprob: -2.8165764808654785
    3. ' (' → logprob: -6.3165764808654785
    4. '(h' → logprob: -6.8165764808654785
    5. '(
' → logprob: -7.3165764808654785
    6. ',(' → logprob: -7.5665764808654785
    7. '((' → logprob: -8.06657600402832
    8. ')' → logprob: -9.94157600402832
    9. '```' → logprob: -10.19157600402832
    10. '   ' → logprob: -10.69157600402832

Token 452: ' (' (ID: 350)
  Prédit: '(new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -0.012976928614079952
    2. ' (' → logprob: -4.762977123260498
    3. '(' → logprob: -5.512977123260498
    4. '(dist' → logprob: -8.13797664642334
    5. '   ' → logprob: -10.63797664642334
    6. ' ' → logprob: -14.01297664642334
    7. '((' → logprob: -14.63797664642334
    8. '(
' → logprob: -15.26297664642334
    9. '  ' → logprob: -15.51297664642334
    10. '(dis' → logprob: -15.88797664642334

Token 453: 'new' (ID: 1389)
  Prédit: 'new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -3.5716304410016164e-05
    2. ' new' → logprob: -10.250035285949707
    3. '   ' → logprob: -15.125035285949707
    4. '
' → logprob: -17.625036239624023
    5. '               ' → logprob: -18.125036239624023
    6. '(new' → logprob: -18.125036239624023
    7. '	new' → logprob: -18.625036239624023
    8. '                   ' → logprob: -19.250036239624023
    9. '```' → logprob: -20.000036239624023
    10. '  ' → logprob: -20.000036239624023

Token 454: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -7.624555291840807e-05
    2. 'dist' → logprob: -9.500076293945312
    3. 'Dist' → logprob: -14.000076293945312
    4. '_' → logprob: -15.750076293945312
    5. 'new' → logprob: -16.000076293945312
    6. '_distance' → logprob: -16.125076293945312
    7. '-dist' → logprob: -16.500076293945312
    8. ' _' → logprob: -17.000076293945312
    9. '_DIST' → logprob: -17.500076293945312
    10. '	dist' → logprob: -17.500076293945312

Token 455: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00033534664544276893
    2. ',new' → logprob: -8.250335693359375
    3. ' ,' → logprob: -9.875335693359375
    4. 'new' → logprob: -11.500335693359375
    5. ',
' → logprob: -11.625335693359375
    6. ' new' → logprob: -13.375335693359375
    7. '+' → logprob: -13.875335693359375
    8. '   ' → logprob: -16.125335693359375
    9. '           ' → logprob: -16.125335693359375
    10. '```' → logprob: -16.375335693359375

Token 456: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.03804194927215576
    2. ' new' → logprob: -3.2880420684814453
    3. '               ' → logprob: -15.788042068481445
    4. '_new' → logprob: -16.038042068481445
    5. '                   ' → logprob: -16.538042068481445
    6. '	new' → logprob: -17.288042068481445
    7. ')new' → logprob: -17.788042068481445
    8. '           ' → logprob: -17.913042068481445
    9. '
' → logprob: -17.913042068481445
    10. '   ' → logprob: -18.038042068481445

Token 457: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.00977616012096405
    2. 'time' → logprob: -4.6347761154174805
    3. 'new' → logprob: -11.13477611541748
    4. ' time' → logprob: -14.00977611541748
    5. ' _' → logprob: -14.13477611541748
    6. '_t' → logprob: -14.50977611541748
    7. '_dist' → logprob: -14.63477611541748
    8. '_new' → logprob: -14.75977611541748
    9. 'dist' → logprob: -14.88477611541748
    10. '_' → logprob: -14.88477611541748

Token 458: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.232493564719334e-05
    2. ' ,' → logprob: -9.500082015991211
    3. '       ' → logprob: -13.000082015991211
    4. ',
' → logprob: -13.250082015991211
    5. '           ' → logprob: -13.750082015991211
    6. '   ' → logprob: -13.875082015991211
    7. '+' → logprob: -15.250082015991211
    8. '```' → logprob: -15.500082015991211
    9. '          ' → logprob: -15.875082015991211
    10. '               ' → logprob: -16.12508201599121

Token 459: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.005234475247561932
    2. ' idx' → logprob: -5.255234241485596
    3. '	idx' → logprob: -14.505234718322754
    4. '(idx' → logprob: -15.880234718322754
    5. '   ' → logprob: -17.755233764648438
    6. '[idx' → logprob: -18.005233764648438
    7. 'index' → logprob: -18.880233764648438
    8. '_idx' → logprob: -19.255233764648438
    9. ' ' → logprob: -19.255233764648438
    10. '
' → logprob: -19.380233764648438

Token 460: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016265720478259027
    2. ' ,' → logprob: -8.750163078308105
    3. ',
' → logprob: -12.500163078308105
    4. '<|end|>' → logprob: -16.25016212463379
    5. '```' → logprob: -16.62516212463379
    6. ',h' → logprob: -17.00016212463379
    7. ',

' → logprob: -17.00016212463379
    8. '‌,' → logprob: -17.37516212463379
    9. '	' → logprob: -18.00016212463379
    10. '),' → logprob: -18.12516212463379

Token 461: ' house' (ID: 4276)
  Prédit: 'house'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'house' → logprob: -0.02055228315293789
    2. ' house' → logprob: -3.895552396774292
    3. '0' → logprob: -11.895552635192871
    4. 'home' → logprob: -13.645552635192871
    5. ' ' → logprob: -13.895552635192871
    6. '```' → logprob: -15.145552635192871
    7. '
' → logprob: -15.395552635192871
    8. '.house' → logprob: -15.645552635192871
    9. '   ' → logprob: -15.645552635192871
    10. 'hou' → logprob: -16.020551681518555

Token 462: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.349075556499884e-05
    2. ' ,' → logprob: -9.8750638961792
    3. ',
' → logprob: -12.3750638961792
    4. '))' → logprob: -12.7500638961792
    5. '(),' → logprob: -13.2500638961792
    6. '<|end|>' → logprob: -13.7500638961792
    7. '           ' → logprob: -14.6250638961792
    8. '       ' → logprob: -15.3750638961792
    9. ')' → logprob: -15.6250638961792
    10. '   ' → logprob: -16.125062942504883

Token 463: ' (' (ID: 350)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.002554615493863821
    2. '())' → logprob: -6.502554416656494
    3. '())))' → logprob: -7.752554416656494
    4. '()' → logprob: -8.002554893493652
    5. '()))
' → logprob: -8.627554893493652
    6. '()))

' → logprob: -10.377554893493652
    7. ' ())' → logprob: -10.377554893493652
    8. ' (' → logprob: -10.877554893493652
    9. '()));' → logprob: -11.627554893493652
    10. '())).' → logprob: -11.752554893493652

Token 464: ')))

' (ID: 46526)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.01149456761777401
    2. ')' → logprob: -4.5114946365356445
    3. '))' → logprob: -7.7614946365356445
    4. ')))
' → logprob: -11.511494636535645
    5. ')))

' → logprob: -12.261494636535645
    6. ')));' → logprob: -12.761494636535645
    7. '())))' → logprob: -13.636494636535645
    8. '))))' → logprob: -14.511494636535645
    9. ' ' → logprob: -14.636494636535645
    10. '')))' → logprob: -15.136494636535645

Token 465: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011578826233744621
    2. '
' → logprob: -5.0115790367126465
    3. ')' → logprob: -5.8865790367126465
    4. '        
' → logprob: -7.0115790367126465
    5. '   ' → logprob: -7.6365790367126465
    6. '           ' → logprob: -8.136578559875488
    7. '<|end|>' → logprob: -8.636578559875488
    8. '```' → logprob: -9.886578559875488
    9. '    
' → logprob: -10.011578559875488
    10. '            
' → logprob: -10.636578559875488

Token 466: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4853392243385315
    2. '#' (adapté à ' #') → logprob: -0.9853392243385315
    3. 'if' → logprob: -4.860339164733887
    4. '        
' → logprob: -6.735339164733887
    5. '   ' → logprob: -7.110339164733887
    6. ' #' → logprob: -7.735339164733887
    7. ' if' → logprob: -8.485339164733887
    8. 'for' → logprob: -8.610339164733887
    9. '```' → logprob: -8.610339164733887
    10. '
' → logprob: -9.485339164733887

Token 467: ' Option' (ID: 17796)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.48483210802078247
    2. '#' → logprob: -0.9848321080207825
    3. '       ' → logprob: -5.484832286834717
    4. 'Option' → logprob: -5.609832286834717
    5. '   ' → logprob: -6.859832286834717
    6. ' if' → logprob: -6.984832286834717
    7. 'for' → logprob: -7.609832286834717
    8. ' #' → logprob: -8.234831809997559
    9. 'next' → logprob: -9.734831809997559
    10. '        
' → logprob: -10.734831809997559

Token 468: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3449575901031494
    2. '1' → logprob: -2.0949575901031494
    3. ':' → logprob: -2.3449575901031494
    4. '       ' → logprob: -2.9699575901031494
    5. ' :' → logprob: -5.21995735168457
    6. '=' → logprob: -5.21995735168457
    7. '   ' → logprob: -6.09495735168457
    8. '           ' → logprob: -6.21995735168457
    9. ' =' → logprob: -6.46995735168457
    10. '[' → logprob: -7.09495735168457

Token 469: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011055245995521545
    2. '2' → logprob: -5.0110554695129395
    3. ' ' → logprob: -5.7610554695129395
    4. '0' → logprob: -7.5110554695129395
    5. ':' → logprob: -7.8860554695129395
    6. '       ' → logprob: -9.511054992675781
    7. 'if' → logprob: -9.636054992675781
    8. '   ' → logprob: -9.886054992675781
    9. ' if' → logprob: -11.011054992675781
    10. '=' → logprob: -11.261054992675781

Token 470: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00691629946231842
    2. ' :' → logprob: -5.256916522979736
    3. '       ' → logprob: -6.631916522979736
    4. ' if' → logprob: -8.881916046142578
    5. ' =' → logprob: -9.631916046142578
    6. ':
' → logprob: -9.881916046142578
    7. '=' → logprob: -10.131916046142578
    8. ',' → logprob: -10.881916046142578
    9. 'if' → logprob: -11.131916046142578
    10. '   ' → logprob: -11.381916046142578

Token 471: ' try' (ID: 2075)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4289555251598358
    2. ' if' → logprob: -1.0539555549621582
    3. '       ' → logprob: -8.803955078125
    4. '   ' → logprob: -10.678955078125
    5. '
' → logprob: -11.053955078125
    6. ' next' → logprob: -11.553955078125
    7. 'If' → logprob: -11.678955078125
    8. '        
' → logprob: -11.803955078125
    9. 'for' → logprob: -11.928955078125
    10. 'idx' → logprob: -12.178955078125

Token 472: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.19517746567726135
    2. 'to' → logprob: -1.820177435874939
    3. '       ' → logprob: -5.3201775550842285
    4. '   ' → logprob: -5.4451775550842285
    5. ':
' → logprob: -5.6951775550842285
    6. ':' → logprob: -6.1951775550842285
    7. ' next' → logprob: -7.8201775550842285
    8. 'next' → logprob: -9.07017707824707
    9. '           ' → logprob: -9.82017707824707
    10. ' ' → logprob: -10.19517707824707

Token 473: ' catch' (ID: 3494)
  Prédit: 'catch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'catch' → logprob: -0.8554550409317017
    2. 'if' → logprob: -1.2304550409317017
    3. 'pick' → logprob: -1.8554550409317017
    4. ' pick' → logprob: -2.855454921722412
    5. ' catch' → logprob: -3.730454921722412
    6. ' if' → logprob: -3.855454921722412
    7. 'go' → logprob: -4.980454921722412
    8. 'idx' → logprob: -5.730454921722412
    9. 'move' → logprob: -6.105454921722412
    10. ' move' → logprob: -6.480454921722412

Token 474: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.04129858687520027
    2. 'next' → logprob: -3.4162986278533936
    3. ' the' → logprob: -5.5412983894348145
    4. ' (' → logprob: -7.2912983894348145
    5. 'the' → logprob: -7.4162983894348145
    6. ' idx' → logprob: -7.4162983894348145
    7. '(' → logprob: -7.6662983894348145
    8. '(next' → logprob: -7.7912983894348145
    9. '(idx' → logprob: -8.041298866271973
    10. 'idx' → logprob: -8.291298866271973

Token 475: ' balloon' (ID: 63124)
  Prédit: 'ball'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ball' → logprob: -0.2846152186393738
    2. 'if' → logprob: -2.5346152782440186
    3. ' balloon' → logprob: -2.6596152782440186
    4. ' if' → logprob: -2.6596152782440186
    5. '_ball' → logprob: -4.9096150398254395
    6. ' (' → logprob: -5.1596150398254395
    7. '(' → logprob: -5.4096150398254395
    8. 'idx' → logprob: -5.7846150398254395
    9. '(ball' → logprob: -6.2846150398254395
    10. 'bal' → logprob: -6.6596150398254395

Token 476: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005097018554806709
    2. ' if' → logprob: -5.630096912384033
    3. 'if' → logprob: -6.630096912384033
    4. ',' → logprob: -9.630097389221191
    5. '   ' → logprob: -10.130097389221191
    6. ':' → logprob: -11.255097389221191
    7. '        
' → logprob: -11.255097389221191
    8. ' =' → logprob: -11.505097389221191
    9. '=' → logprob: -11.880097389221191
    10. ' ' → logprob: -11.880097389221191

Token 477: ' any' (ID: 1062)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.1623569279909134
    2. 'idx' → logprob: -1.912356972694397
    3. ' len' → logprob: -6.662356853485107
    4. 'len' → logprob: -7.287356853485107
    5. '(idx' → logprob: -9.037357330322266
    6. '	idx' → logprob: -10.662357330322266
    7. ' n' → logprob: -11.787357330322266
    8. '_idx' → logprob: -12.162357330322266
    9. ' (' → logprob: -12.912357330322266
    10. 'n' → logprob: -13.037357330322266

Token 478: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15099139511585236
    2. ' if' → logprob: -2.025991439819336
    3. 'if' → logprob: -5.400991439819336
    4. '   ' → logprob: -6.275991439819336
    5. ':' → logprob: -6.900991439819336
    6. ' and' → logprob: -7.900991439819336
    7. ',' → logprob: -8.650991439819336
    8. '           ' → logprob: -9.275991439819336
    9. ':
' → logprob: -9.900991439819336
    10. '        
' → logprob: -10.150991439819336

Token 479: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008138987235724926
    2. ' if' → logprob: -6.133139133453369
    3. ':' → logprob: -6.383139133453369
    4. ',' → logprob: -6.633139133453369
    5. '        
' → logprob: -7.258139133453369
    6. '           ' → logprob: -7.383139133453369
    7. '   ' → logprob: -7.883139133453369
    8. ':
' → logprob: -7.883139133453369
    9. '        ' → logprob: -9.133138656616211
    10. ' 
' → logprob: -9.758138656616211

Token 480: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5103877186775208
    2. ' if' → logprob: -1.010387659072876
    3. 'if' (adapté à ' if') → logprob: -3.635387659072876
    4. '   ' → logprob: -5.010387897491455
    5. '        
' → logprob: -7.135387897491455
    6. '           ' → logprob: -8.135387420654297
    7. ' 
' → logprob: -8.385387420654297
    8. '        ' → logprob: -9.135387420654297
    9. '
' → logprob: -9.135387420654297
    10. ' (' → logprob: -9.260387420654297

Token 481: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.014164687134325504
    2. 'idx' → logprob: -4.264164924621582
    3. '(idx' → logprob: -14.264164924621582
    4. '	idx' → logprob: -15.014164924621582
    5. '   ' → logprob: -16.139163970947266
    6. ' ' → logprob: -17.889163970947266
    7. '[idx' → logprob: -17.889163970947266
    8. '_idx' → logprob: -18.764163970947266
    9. ' index' → logprob: -18.764163970947266
    10. 'index' → logprob: -19.764163970947266

Token 482: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.06307967007160187
    2. '<n' → logprob: -2.938079595565796
    3. '<' → logprob: -4.813079833984375
    4. '<len' → logprob: -10.563079833984375
    5. '<num' → logprob: -11.813079833984375
    6. '<size' → logprob: -13.688079833984375
    7. '<N' → logprob: -13.813079833984375
    8. ' ' → logprob: -13.938079833984375
    9. 'n' → logprob: -14.063079833984375
    10. ' <
' → logprob: -14.813079833984375

Token 483: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3132643401622772
    2. ' n' → logprob: -1.3132643699645996
    3. '	n' → logprob: -14.313263893127441
    4. '(n' → logprob: -14.563263893127441
    5. ')n' → logprob: -15.063263893127441
    6. 'len' → logprob: -15.313263893127441
    7. ' ' → logprob: -15.563263893127441
    8. '=n' → logprob: -16.188264846801758
    9. '<n' → logprob: -16.188264846801758
    10. ',' → logprob: -16.313264846801758

Token 484: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.27918750047683716
    2. ' and' → logprob: -1.5291874408721924
    3. ':' → logprob: -3.6541874408721924
    4. 'and' → logprob: -7.9041876792907715
    5. '       ' → logprob: -8.029187202453613
    6. '   ' → logprob: -8.904187202453613
    7. ',' → logprob: -9.904187202453613
    8. ' :
' → logprob: -10.154187202453613
    9. '):
' → logprob: -10.404187202453613
    10. ':

' → logprob: -10.904187202453613

Token 485: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.077899694442749
    2. ' dist' → logprob: -1.327899694442749
    3. '           ' → logprob: -2.202899694442749
    4. 'dist' → logprob: -2.202899694442749
    5. ' next' → logprob: -3.452899694442749
    6. ' p' → logprob: -3.577899694442749
    7. ' new' → logprob: -3.577899694442749
    8. 'p' → logprob: -3.702899694442749
    9. 'new' → logprob: -4.577899932861328
    10. 'next' → logprob: -4.827899932861328

Token 486: ' p' (ID: 275)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -1.0642192363739014
    2. 'dist' → logprob: -1.1892192363739014
    3. ' next' → logprob: -2.3142192363739014
    4. 'new' → logprob: -2.8142192363739014
    5. ' dist' → logprob: -2.9392192363739014
    6. 'p' (adapté à ' p') → logprob: -3.1892192363739014
    7. 'ball' → logprob: -3.8142192363739014
    8. ' p' → logprob: -3.9392192363739014
    9. '           ' → logprob: -4.3142194747924805
    10. ' new' → logprob: -4.4392194747924805

Token 487: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6499525308609009
    2. ' =' → logprob: -1.2749525308609009
    3. 'os' → logprob: -2.8999524116516113
    4. '=' → logprob: -3.0249524116516113
    5. 'pos' → logprob: -3.7749524116516113
    6. 'p' → logprob: -3.8999524116516113
    7. '_pos' → logprob: -4.899952411651611
    8. 't' → logprob: -5.024952411651611
    9. 'dist' → logprob: -5.149952411651611
    10. 'r' → logprob: -5.274952411651611

Token 488: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.4348794221878052
    2. 'ball' → logprob: -1.0598794221878052
    3. 'b' → logprob: -6.434879302978516
    4. ' balloons' → logprob: -6.559879302978516
    5. 'time' → logprob: -6.809879302978516
    6. '=' → logprob: -7.059879302978516
    7. ' t' → logprob: -7.184879302978516
    8. 'ti' → logprob: -9.434879302978516
    9. ' =' → logprob: -10.059879302978516
    10. ',' → logprob: -10.184879302978516

Token 489: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868993818759918
    2. ' =' → logprob: -1.1368993520736694
    3. ',' → logprob: -11.3868989944458
    4. ')' → logprob: -12.2618989944458
    5. '   ' → logprob: -13.3868989944458
    6. ')=' → logprob: -13.6368989944458
    7. '       ' → logprob: -14.0118989944458
    8. 't' → logprob: -14.1368989944458
    9. '=user' → logprob: -14.1368989944458
    10. '=p' → logprob: -14.1368989944458

Token 490: ' balloons' (ID: 114791)
  Prédit: 'ball'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ball' → logprob: -0.07895192503929138
    2. ' balloons' → logprob: -2.578951835632324
    3. '   ' → logprob: -10.828951835632324
    4. 'bal' → logprob: -11.078951835632324
    5. 'b' → logprob: -11.203951835632324
    6. 'balls' → logprob: -12.328951835632324
    7. ' ' → logprob: -12.578951835632324
    8. '```' → logprob: -14.203951835632324
    9. ' balloon' → logprob: -14.328951835632324
    10. '  ' → logprob: -14.328951835632324

Token 491: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0038209797348827124
    2. ' =' → logprob: -6.003820896148682
    3. '=' → logprob: -6.628820896148682
    4. 'idx' → logprob: -11.00382137298584
    5. '
' → logprob: -13.50382137298584
    6. '[token' → logprob: -13.50382137298584
    7. '[next' → logprob: -14.37882137298584
    8. '(idx' → logprob: -14.37882137298584
    9. '_idx' → logprob: -14.62882137298584
    10. ' idx' → logprob: -14.62882137298584

Token 492: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2303728461265564
    2. ')
' → logprob: -1.6053729057312012
    3. ']' → logprob: -6.230372905731201
    4. ']
' → logprob: -6.855372905731201
    5. '           ' → logprob: -7.230372905731201
    6. '])' → logprob: -7.980372905731201
    7. '[' → logprob: -8.230372428894043
    8. '       ' → logprob: -8.230372428894043
    9. ')]' → logprob: -9.355372428894043
    10. '])
' → logprob: -9.980372428894043

Token 493: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016709372401237488
    2. 'dist' → logprob: -5.266709327697754
    3. ' dist' → logprob: -6.141709327697754
    4. 'distance' → logprob: -6.266709327697754
    5. ' new' → logprob: -6.641709327697754
    6. '
' → logprob: -6.641709327697754
    7. ' next' → logprob: -6.766709327697754
    8. 'new' → logprob: -7.141709327697754
    9. 'next' → logprob: -7.391709327697754
    10. '```' → logprob: -7.391709327697754

Token 494: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.22609783709049225
    2. 'new' → logprob: -1.726097822189331
    3. 'd' → logprob: -4.60109806060791
    4. 'if' → logprob: -4.72609806060791
    5. 'distance' → logprob: -6.72609806060791
    6. 'move' → logprob: -7.35109806060791
    7. 'nd' → logprob: -7.47609806060791
    8. 'next' → logprob: -7.47609806060791
    9. '           ' → logprob: -7.60109806060791
    10. '#' (adapté à ' #') → logprob: -7.60109806060791

Token 495: ' Try' (ID: 14720)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.06822279840707779
    2. 'new' → logprob: -3.693222761154175
    3. 'if' → logprob: -3.818222761154175
    4. 'd' → logprob: -5.068222999572754
    5. 'move' → logprob: -5.943222999572754
    6. 'distance' → logprob: -6.068222999572754
    7. '#' → logprob: -6.193222999572754
    8. 'next' → logprob: -6.693222999572754
    9. ' dist' → logprob: -7.068222999572754
    10. 'cost' → logprob: -7.693222999572754

Token 496: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.3365373909473419
    2. 'to' → logprob: -1.9615373611450195
    3. ':
' → logprob: -3.0865373611450195
    4. '   ' → logprob: -3.4615373611450195
    5. '               ' → logprob: -4.2115373611450195
    6. ' move' → logprob: -4.7115373611450195
    7. '{
' → logprob: -5.0865373611450195
    8. 'dist' → logprob: -5.0865373611450195
    9. 'distance' → logprob: -5.2115373611450195
    10. ':' → logprob: -5.4615373611450195

Token 497: ' move' (ID: 5275)
  Prédit: 'go'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'go' → logprob: -1.5612578392028809
    2. ' move' → logprob: -1.6862578392028809
    3. 'move' → logprob: -1.6862578392028809
    4. ' go' → logprob: -1.9362578392028809
    5. 'dist' → logprob: -2.186257839202881
    6. 'if' → logprob: -2.311257839202881
    7. ' if' → logprob: -3.436257839202881
    8. 'distance' → logprob: -4.686257839202881
    9. 'new' → logprob: -4.936257839202881
    10. ' dist' → logprob: -5.936257839202881

Token 498: ' from' (ID: 591)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -1.2259352207183838
    2. 'dist' → logprob: -1.4759352207183838
    3. 'to' → logprob: -1.6009352207183838
    4. ' dist' → logprob: -2.225935220718384
    5. '           ' → logprob: -2.350935220718384
    6. 'distance' → logprob: -3.975935220718384
    7. 'abs' → logprob: -4.850934982299805
    8. 'from' → logprob: -5.350934982299805
    9. 'tow' → logprob: -5.350934982299805
    10. ' towards' → logprob: -5.600934982299805

Token 499: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.03804929554462433
    2. ' pos' → logprob: -3.2880492210388184
    3. '(pos' → logprob: -12.413049697875977
    4. 'position' → logprob: -14.163049697875977
    5. '_pos' → logprob: -14.538049697875977
    6. 'current' → logprob: -14.538049697875977
    7. ' current' → logprob: -14.538049697875977
    8. '	pos' → logprob: -14.788049697875977
    9. 'p' → logprob: -15.413049697875977
    10. ',pos' → logprob: -15.538049697875977

Token 500: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.004182633012533188
    2. 'to' → logprob: -5.629182815551758
    3. ',' → logprob: -7.879182815551758
    4. ' ' → logprob: -9.879182815551758
    5. ' ,' → logprob: -10.004182815551758
    6. '_to' → logprob: -10.004182815551758
    7. ' t' → logprob: -10.379182815551758
    8. ')' → logprob: -11.504182815551758
    9. '=' → logprob: -12.254182815551758
    10. ' p' → logprob: -13.254182815551758

Token 501: ' p' (ID: 275)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.2829233705997467
    2. ' t' → logprob: -1.4079233407974243
    3. 'p' → logprob: -6.657923221588135
    4. ' p' → logprob: -7.782923221588135
    5. ' ' → logprob: -10.782923698425293
    6. '`t' → logprob: -11.157923698425293
    7. 'pos' → logprob: -11.407923698425293
    8. '(t' → logprob: -12.532923698425293
    9. 'ball' → logprob: -12.907923698425293
    10. '   ' → logprob: -13.032923698425293

Token 502: ' with' (ID: 483)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012656208127737045
    2. ',' → logprob: -4.512656211853027
    3. 'distance' → logprob: -7.762656211853027
    4. '            
' → logprob: -8.637656211853027
    5. ' and' → logprob: -8.887656211853027
    6. 'token' → logprob: -9.137656211853027
    7. '               ' → logprob: -9.137656211853027
    8. '       ' → logprob: -9.387656211853027
    9. '		' → logprob: -9.637656211853027
    10. ' +' → logprob: -9.762656211853027

Token 503: ' current' (ID: 2208)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.8076208233833313
    2. 'distance' → logprob: -1.5576207637786865
    3. 'dist' → logprob: -2.0576207637786865
    4. 'new' → logprob: -3.3076207637786865
    5. 'pos' → logprob: -3.4326207637786865
    6. 'the' → logprob: -3.5576207637786865
    7. ' new' → logprob: -3.9326207637786865
    8. ' distance' → logprob: -3.9326207637786865
    9. 'next' → logprob: -4.057621002197266
    10. 'p' → logprob: -4.307621002197266

Token 504: ' carrying' (ID: 25328)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6968294978141785
    2. 'car' → logprob: -1.6968295574188232
    3. 'ball' → logprob: -2.9468295574188232
    4. 'pos' → logprob: -2.9468295574188232
    5. ' (' → logprob: -3.6968295574188232
    6. ' carrying' → logprob: -3.8218295574188232
    7. 'dist' → logprob: -4.071829319000244
    8. ' if' → logprob: -4.071829319000244
    9. ' )' → logprob: -4.071829319000244
    10. 'len' → logprob: -4.196829319000244

Token 505: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.038299787789583206
    2. ')' → logprob: -3.913299798965454
    3. ',' → logprob: -4.413299560546875
    4. '            
' → logprob: -6.538299560546875
    5. '               ' → logprob: -7.163299560546875
    6. ')
' → logprob: -7.413299560546875
    7. ' and' → logprob: -7.413299560546875
    8. '       ' → logprob: -8.163299560546875
    9. ' ,' → logprob: -8.413299560546875
    10. '            ' → logprob: -8.538299560546875

Token 506: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1207229495048523
    2. 'dist' → logprob: -3.495723009109497
    3. 'new' → logprob: -3.620723009109497
    4. ' new' → logprob: -4.495722770690918
    5. ',' → logprob: -4.620722770690918
    6. '```' → logprob: -4.870722770690918
    7. '
' → logprob: -5.370722770690918
    8. '               ' → logprob: -5.620722770690918
    9. 'distance' → logprob: -5.620722770690918
    10. '            
' → logprob: -5.745722770690918

Token 507: ' travel' (ID: 6410)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5575125813484192
    2. ' new' → logprob: -1.8075125217437744
    3. 'new' → logprob: -1.9325125217437744
    4. ' dist' → logprob: -2.4325125217437744
    5. 'distance' → logprob: -4.5575127601623535
    6. '           ' → logprob: -5.1825127601623535
    7. ' if' → logprob: -5.5575127601623535
    8. 'd' → logprob: -5.8075127601623535
    9. 'if' → logprob: -6.1825127601623535
    10. ' distance' → logprob: -6.6825127601623535

Token 508: '_dist' (ID: 37968)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.4776235818862915
    2. '_dist' → logprob: -1.1026235818862915
    3. '_distance' → logprob: -3.352623462677002
    4. '_cost' → logprob: -4.477623462677002
    5. '_' → logprob: -7.102623462677002
    6. ' =' → logprob: -8.47762393951416
    7. '=' → logprob: -9.47762393951416
    8. '_t' → logprob: -9.60262393951416
    9. '_d' → logprob: -10.22762393951416
    10. 'dist' → logprob: -10.35262393951416

Token 509: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04861791059374809
    2. '=' → logprob: -3.0486178398132324
    3. ',' → logprob: -11.42361831665039
    4. ' +' → logprob: -11.92361831665039
    5. ')' → logprob: -12.17361831665039
    6. ' ' → logprob: -12.92361831665039
    7. '+' → logprob: -13.04861831665039
    8. ' ' → logprob: -14.17361831665039
    9. '   ' → logprob: -14.42361831665039
    10. ' +=' → logprob: -14.67361831665039

Token 510: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.5761092901229858
    2. ' abs' → logprob: -0.8261092901229858
    3. ' p' → logprob: -9.201108932495117
    4. 'p' → logprob: -9.826108932495117
    5. 'pos' → logprob: -11.826108932495117
    6. '(abs' → logprob: -12.201108932495117
    7. ' pos' → logprob: -13.076108932495117
    8. 't' → logprob: -16.076108932495117
    9. '_abs' → logprob: -16.326108932495117
    10. '.abs' → logprob: -16.826108932495117

Token 511: '(p' (ID: 2407)
  Prédit: '(pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.001011730288155377
    2. '(p' → logprob: -7.001011848449707
    3. 'pos' → logprob: -9.251011848449707
    4. '(' → logprob: -12.626011848449707
    5. ' pos' → logprob: -14.501011848449707
    6. '(position' → logprob: -15.501011848449707
    7. 'p' → logprob: -16.12601089477539
    8. '(po' → logprob: -16.62601089477539
    9. '_pos' → logprob: -17.50101089477539
    10. '	pos' → logprob: -17.62601089477539

Token 512: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.06273870170116425
    2. '-' → logprob: -2.8127386569976807
    3. '-pos' → logprob: -7.18773889541626
    4. 'pos' → logprob: -11.937738418579102
    5. ' ' → logprob: -12.062738418579102
    6. '-position' → logprob: -13.812738418579102
    7. ')' → logprob: -14.312738418579102
    8. ' pos' → logprob: -14.687738418579102
    9. '[pos' → logprob: -16.3127384185791
    10. '_pos' → logprob: -16.3127384185791

Token 513: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0019293478690087795
    2. ' pos' → logprob: -6.25192928314209
    3. '(pos' → logprob: -14.12692928314209
    4. 'p' → logprob: -17.876930236816406
    5. '(' → logprob: -18.126930236816406
    6. '	pos' → logprob: -18.251930236816406
    7. ' ' → logprob: -18.876930236816406
    8. '_pos' → logprob: -18.876930236816406
    9. '[pos' → logprob: -19.001930236816406
    10. 'position' → logprob: -19.126930236816406

Token 514: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18044446408748627
    2. ')
' → logprob: -1.8054444789886475
    3. '           ' → logprob: -7.680444240570068
    4. ' )' → logprob: -8.930444717407227
    5. ' )
' → logprob: -9.430444717407227
    6. ')
' → logprob: -11.305444717407227
    7. ')

' → logprob: -11.930444717407227
    8. '       ' → logprob: -13.305444717407227
    9. '               ' → logprob: -13.430444717407227
    10. '            ' → logprob: -14.805444717407227

Token 515: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11133041232824326
    2. ' new' → logprob: -2.736330509185791
    3. 'new' → logprob: -3.611330509185791
    4. '
' → logprob: -4.611330509185791
    5. '            
' → logprob: -6.486330509185791
    6. ',' → logprob: -7.486330509185791
    7. '               ' → logprob: -8.486330032348633
    8. ',new' → logprob: -8.486330032348633
    9. '```' → logprob: -8.861330032348633
    10. '\n' → logprob: -9.236330032348633

Token 516: ' travel' (ID: 6410)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.027384696528315544
    2. ' new' → logprob: -4.1523847579956055
    3. 'travel' (adapté à ' travel') → logprob: -4.7773847579956055
    4. '           ' → logprob: -6.1523847579956055
    5. ' travel' → logprob: -8.402384757995605
    6. 'if' → logprob: -8.902384757995605
    7. '
' → logprob: -9.777384757995605
    8. 'next' → logprob: -9.777384757995605
    9. 'time' → logprob: -10.152384757995605
    10. 'cost' → logprob: -10.527384757995605

Token 517: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.01805136911571026
    2. '_dist' → logprob: -4.1430511474609375
    3. '_cost' → logprob: -6.2680511474609375
    4. '_token' → logprob: -10.643051147460938
    5. '_times' → logprob: -10.768051147460938
    6. '_tokens' → logprob: -10.768051147460938
    7. '_' → logprob: -11.143051147460938
    8. 'time' → logprob: -11.643051147460938
    9. ' _' → logprob: -12.018051147460938
    10. '_t' → logprob: -12.268051147460938

Token 518: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10047052055597305
    2. '=' → logprob: -2.350470542907715
    3. ' +=' → logprob: -9.100470542907715
    4. '+' → logprob: -9.350470542907715
    5. ' +' → logprob: -10.100470542907715
    6. '+=' → logprob: -10.975470542907715
    7. ' ' → logprob: -12.600470542907715
    8. 'new' → logprob: -13.600470542907715
    9. ',' → logprob: -14.350470542907715
    10. '   ' → logprob: -15.225470542907715

Token 519: ' move' (ID: 5275)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.0962902382016182
    2. 'move' → logprob: -3.221290349960327
    3. 'travel' → logprob: -3.221290349960327
    4. ' time' → logprob: -4.971290111541748
    5. ' travel' → logprob: -5.846290111541748
    6. ' move' → logprob: -6.221290111541748
    7. '   ' → logprob: -9.846290588378906
    8. 'dist' → logprob: -10.471290588378906
    9. 'trav' → logprob: -10.846290588378906
    10. ' ' → logprob: -11.346290588378906

Token 520: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -3.054500666621607e-06
    2. '_' → logprob: -13.75000286102295
    3. '_token' → logprob: -14.37500286102295
    4. 'time' → logprob: -14.50000286102295
    5. 'travel' → logprob: -15.12500286102295
    6. 'Time' → logprob: -16.125003814697266
    7. '_code' → logprob: -16.375003814697266
    8. '_tr' → logprob: -16.500003814697266
    9. '_TIME' → logprob: -17.000003814697266
    10. '_cost' → logprob: -17.375003814697266

Token 521: '(tr' (ID: 14363)
  Prédit: '(tr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tr' → logprob: -2.117345684382599e-05
    2. ' (' → logprob: -10.875020980834961
    3. '(' → logprob: -13.250020980834961
    4. '(abs' → logprob: -15.375020980834961
    5. 'travel' → logprob: -16.37502098083496
    6. ')' → logprob: -16.62502098083496
    7. 'tr' → logprob: -17.25002098083496
    8. '	tr' → logprob: -17.62502098083496
    9. '<tr' → logprob: -18.12502098083496
    10. ' travel' → logprob: -18.25002098083496

Token 522: 'avel' (ID: 8345)
  Prédit: 'avel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avel' → logprob: -3.011373155459296e-05
    2. 'vel' → logprob: -10.500030517578125
    3. 'av' → logprob: -13.875030517578125
    4. 'travel' → logprob: -14.000030517578125
    5. 'ave' → logprob: -15.375030517578125
    6. 'AVEL' → logprob: -16.500030517578125
    7. 'aval' → logprob: -16.625030517578125
    8. 'el' → logprob: -16.875030517578125
    9. '```' → logprob: -17.125030517578125
    10. '#' → logprob: -17.250030517578125

Token 523: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.19907179474830627
    2. 'travel' → logprob: -2.0740718841552734
    3. 'dist' → logprob: -2.9490718841552734
    4. ')' → logprob: -7.574071884155273
    5. 'e' → logprob: -7.824071884155273
    6. 'Dist' → logprob: -8.324071884155273
    7. '(tr' → logprob: -8.324071884155273
    8. ' travel' → logprob: -8.324071884155273
    9. 'distance' → logprob: -8.699071884155273
    10. 'ist' → logprob: -8.949071884155273

Token 524: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002882721892092377
    2. ' ,' → logprob: -8.250288009643555
    3. ',len' → logprob: -11.625288009643555
    4. ')' → logprob: -11.875288009643555
    5. ',
' → logprob: -12.875288009643555
    6. '<|end|>' → logprob: -13.000288009643555
    7. '<|end|>' → logprob: -14.250288009643555
    8. ',k' → logprob: -14.375288009643555
    9. '(),' → logprob: -14.500288009643555
    10. ',tr' → logprob: -14.500288009643555

Token 525: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0007102862582542002
    2. ' len' → logprob: -7.250710487365723
    3. '(len' → logprob: -14.875710487365723
    4. '[len' → logprob: -19.000709533691406
    5. '	len' → logprob: -19.500709533691406
    6. ')' → logprob: -19.625709533691406
    7. '           ' → logprob: -19.625709533691406
    8. '
' → logprob: -20.250709533691406
    9. ' ' → logprob: -20.375709533691406
    10. '   ' → logprob: -20.625709533691406

Token 526: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -1.6240566083070007e-06
    2. ')' → logprob: -14.250001907348633
    3. '(
' → logprob: -15.375001907348633
    4. '(' → logprob: -16.125001907348633
    5. '©' → logprob: -16.125001907348633
    6. '(car' → logprob: -16.375001907348633
    7. '
' → logprob: -16.375001907348633
    8. '	c' → logprob: -16.750001907348633
    9. ' (' → logprob: -17.250001907348633
    10. '```' → logprob: -17.250001907348633

Token 527: 'arry' (ID: 20052)
  Prédit: 'arry'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arry' → logprob: -0.0016955342143774033
    2. 'arring' → logprob: -7.62669563293457
    3. 'car' → logprob: -7.75169563293457
    4. '(c' → logprob: -7.87669563293457
    5. 'carry' → logprob: -8.87669563293457
    6. 'arr' → logprob: -9.50169563293457
    7. ' carrying' → logprob: -10.00169563293457
    8. ')' → logprob: -10.12669563293457
    9. 'rying' → logprob: -10.37669563293457
    10. 'array' → logprob: -10.87669563293457

Token 528: 'ing' (ID: 289)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.7274319529533386
    2. 'ing' → logprob: -0.7274319529533386
    3. '(c' → logprob: -4.352431774139404
    4. 'car' → logprob: -4.977431774139404
    5. 'rying' → logprob: -4.977431774139404
    6. 'carry' → logprob: -6.227431774139404
    7. ' carrying' → logprob: -6.602431774139404
    8. ')' → logprob: -6.852431774139404
    9. 'ying' → logprob: -7.102431774139404
    10. 'c' → logprob: -7.102431774139404

Token 529: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003538059536367655
    2. ')
' → logprob: -6.378538131713867
    3. '))' → logprob: -7.003538131713867
    4. '+' → logprob: -7.128538131713867
    5. ' )' → logprob: -10.128538131713867
    6. ' +' → logprob: -10.503538131713867
    7. ')+' → logprob: -10.753538131713867
    8. ')

' → logprob: -11.503538131713867
    9. ')))' → logprob: -12.253538131713867
    10. '           ' → logprob: -12.503538131713867

Token 530: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4758118689060211
    2. ' 
' → logprob: -1.8508118391036987
    3. '            
' → logprob: -3.3508119583129883
    4. ',' → logprob: -3.4758119583129883
    5. ')' → logprob: -3.6008119583129883
    6. '```' → logprob: -3.7258119583129883
    7. '               ' → logprob: -4.225811958312988
    8. '  
' → logprob: -4.350811958312988
    9. '    
' → logprob: -4.475811958312988
    10. '
' → logprob: -4.725811958312988

Token 531: ' arrive' (ID: 18338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.685938835144043
    2. 'new' → logprob: -1.810938835144043
    3. ' new' → logprob: -2.060938835144043
    4. ' if' → logprob: -2.060938835144043
    5. 'if' → logprob: -2.810938835144043
    6. 'heap' → logprob: -5.185938835144043
    7. '
' → logprob: -5.310938835144043
    8. 'next' → logprob: -5.935938835144043
    9. ' next' → logprob: -6.435938835144043
    10. '            
' → logprob: -6.685938835144043

Token 532: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.01528211310505867
    2. '_' → logprob: -4.265282154083252
    3. ' =' → logprob: -7.765282154083252
    4. '=' → logprob: -7.890282154083252
    5. '_at' → logprob: -9.015281677246094
    6. ' _' → logprob: -9.765281677246094
    7. '=_' → logprob: -9.890281677246094
    8. '_t' → logprob: -10.015281677246094
    9. '_pos' → logprob: -12.140281677246094
    10. '_token' → logprob: -12.265281677246094

Token 533: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5320583581924438
    2. ' =' → logprob: -0.9070583581924438
    3. '+' → logprob: -5.532058238983154
    4. ' +' → logprob: -5.532058238983154
    5. ' <=' → logprob: -8.157058715820312
    6. ' +=' → logprob: -8.657058715820312
    7. '<=' → logprob: -8.782058715820312
    8. '>' → logprob: -9.157058715820312
    9. '+=' → logprob: -9.407058715820312
    10. '>=' → logprob: -9.657058715820312

Token 534: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.3726109564304352
    2. ' time' → logprob: -1.2476109266281128
    3. ' max' → logprob: -4.247611045837402
    4. 'max' → logprob: -4.747611045837402
    5. ' t' → logprob: -8.122611045837402
    6. 't' → logprob: -8.247611045837402
    7. ' travel' → logprob: -8.497611045837402
    8. 'travel' → logprob: -9.247611045837402
    9. '   ' → logprob: -11.372611045837402
    10. ' ' → logprob: -12.122611045837402

Token 535: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3868960440158844
    2. '+' → logprob: -1.136896014213562
    3. '           ' → logprob: -11.886896133422852
    4. '+
' → logprob: -13.011896133422852
    5. '=' → logprob: -13.261896133422852
    6. '<|end|>' → logprob: -13.386896133422852
    7. ' +
' → logprob: -13.511896133422852
    8. '+t' → logprob: -13.511896133422852
    9. ')' → logprob: -13.636896133422852
    10. '<=' → logprob: -14.011896133422852

Token 536: ' travel' (ID: 6410)
  Prédit: 'travel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'travel' → logprob: -0.023246407508850098
    2. ' travel' → logprob: -3.7732462882995605
    3. '           ' → logprob: -15.148246765136719
    4. 'trav' → logprob: -15.398246765136719
    5. '
' → logprob: -15.898246765136719
    6. '.travel' → logprob: -16.27324676513672
    7. 'tr' → logprob: -17.27324676513672
    8. 'arrival' → logprob: -17.52324676513672
    9. ' ' → logprob: -17.89824676513672
    10. '```' → logprob: -18.14824676513672

Token 537: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.00034058792516589165
    2. '_dist' → logprob: -8.000340461730957
    3. ' _' → logprob: -12.750340461730957
    4. '_distance' → logprob: -13.375340461730957
    5. '_' → logprob: -15.750340461730957
    6. '_t' → logprob: -15.875340461730957
    7. 'time' → logprob: -16.125341415405273
    8. '\' → logprob: -16.875341415405273
    9. '_tr' → logprob: -17.000341415405273
    10. '_type' → logprob: -17.125341415405273

Token 538: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21730506420135498
    2. '
' → logprob: -2.5923051834106445
    3. '            
' → logprob: -3.2173051834106445
    4. '<|end|>' → logprob: -3.5923051834106445
    5. '<|end|>' → logprob: -4.2173051834106445
    6. ' 
' → logprob: -4.2173051834106445
    7. ' if' → logprob: -4.7173051834106445
    8. '  
' → logprob: -5.0923051834106445
    9. ',' → logprob: -5.7173051834106445
    10. '            ' → logprob: -7.3423051834106445

Token 539: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1570417881011963
    2. '<|end|>' → logprob: -2.6570417881011963
    3. ' 
' → logprob: -4.032041549682617
    4. '
' → logprob: -4.032041549682617
    5. '<|end|>' → logprob: -4.282041549682617
    6. '            
' → logprob: -4.282041549682617
    7. ' if' → logprob: -5.907041549682617
    8. '  
' → logprob: -6.407041549682617
    9. '            ' → logprob: -6.407041549682617
    10. ',' → logprob: -7.282041549682617

Token 540: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2592427730560303
    2. ' if' → logprob: -2.0092427730560303
    3. '           ' → logprob: -2.3842427730560303
    4. '
' → logprob: -7.009243011474609
    5. '            
' → logprob: -7.634243011474609
    6. '```' → logprob: -8.38424301147461
    7. '#' (adapté à ' #') → logprob: -8.63424301147461
    8. '+' → logprob: -9.13424301147461
    9. 'next' → logprob: -10.00924301147461
    10. '``' → logprob: -10.75924301147461

Token 541: ' We' (ID: 1416)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.029226290062069893
    2. ' if' → logprob: -3.654226303100586
    3. '           ' → logprob: -5.904226303100586
    4. '#' → logprob: -9.654226303100586
    5. 'If' → logprob: -9.904226303100586
    6. '```' → logprob: -10.279226303100586
    7. 'import' → logprob: -11.529226303100586
    8. '
' → logprob: -11.654226303100586
    9. '            
' → logprob: -12.654226303100586
    10. 'next' → logprob: -12.654226303100586

Token 542: ' must' (ID: 2804)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.287149429321289
    2. ' if' → logprob: -1.412149429321289
    3. ' need' → logprob: -1.787149429321289
    4. '           ' → logprob: -2.162149429321289
    5. 'need' → logprob: -2.912149429321289
    6. ' can' → logprob: -3.287149429321289
    7. ' want' → logprob: -3.662149429321289
    8. ' should' → logprob: -3.912149429321289
    9. ' must' → logprob: -4.162149429321289
    10. 'must' → logprob: -4.287149429321289

Token 543: ' arrive' (ID: 18338)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.05620269477367401
    2. 'wait' → logprob: -3.9312026500701904
    3. 'ensure' → logprob: -4.8062028884887695
    4. 'check' → logprob: -5.3062028884887695
    5. 'have' → logprob: -5.3062028884887695
    6. ' arrive' → logprob: -6.0562028884887695
    7. 'if' → logprob: -6.1812028884887695
    8. 'n't' → logprob: -6.5562028884887695
    9. 'be' → logprob: -6.5562028884887695
    10. 'reach' → logprob: -6.6812028884887695

Token 544: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.4121497869491577
    2. ' <=' → logprob: -1.9121497869491577
    3. ' at' → logprob: -2.2871499061584473
    4. 'at' → logprob: -3.0371499061584473
    5. '_' → logprob: -3.7871499061584473
    6. '_at' → logprob: -5.912149906158447
    7. 'before' → logprob: -5.912149906158447
    8. '=' → logprob: -6.287149906158447
    9. ' before' → logprob: -6.412149906158447
    10. '_before' → logprob: -6.412149906158447

Token 545: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.023260852321982384
    2. ' t' → logprob: -3.7732608318328857
    3. '`t' → logprob: -11.398261070251465
    4. 'time' → logprob: -13.773261070251465
    5. '```' → logprob: -14.273261070251465
    6. '(t' → logprob: -14.898261070251465
    7. '
' → logprob: -15.148261070251465
    8. ' ' → logprob: -15.398261070251465
    9. '	t' → logprob: -15.773261070251465
    10. ' ' → logprob: -15.898261070251465

Token 546: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05699855834245682
    2. ' if' → logprob: -3.6819984912872314
    3. ' and' → logprob: -4.3069987297058105
    4. ',' → logprob: -4.8069987297058105
    5. '
' → logprob: -5.4319987297058105
    6. '            
' → logprob: -6.4319987297058105
    7. ' or' → logprob: -7.0569987297058105
    8. ',
' → logprob: -8.056998252868652
    9. ' (' → logprob: -8.556998252868652
    10. '.' → logprob: -8.931998252868652

Token 547: ' balloon' (ID: 63124)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.25746867060661316
    2. ' continue' → logprob: -1.5074687004089355
    3. 'return' → logprob: -5.8824687004089355
    4. ' return' → logprob: -7.1324687004089355
    5. ' skip' → logprob: -7.5074687004089355
    6. ' we' → logprob: -7.7574687004089355
    7. 'skip' → logprob: -7.7574687004089355
    8. ' if' → logprob: -9.382468223571777
    9. 'arr' → logprob: -9.632468223571777
    10. 'cannot' → logprob: -10.257468223571777

Token 548: ' bursts' (ID: 131489)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.9933692216873169
    2. ' cannot' → logprob: -1.493369221687317
    3. ' can't' → logprob: -2.1183691024780273
    4. ' will' → logprob: -2.9933691024780273
    5. 'caught' → logprob: -3.1183691024780273
    6. ' won't' → logprob: -3.2433691024780273
    7. 'cannot' → logprob: -3.3683691024780273
    8. ' caught' → logprob: -3.3683691024780273
    9. 'is' → logprob: -4.618369102478027
    10. ' not' → logprob: -4.743369102478027

Token 549: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.052589818835258484
    2. ' if' → logprob: -3.6775898933410645
    3. ',' → logprob: -5.0525898933410645
    4. '            
' → logprob: -5.1775898933410645
    5. ' and' → logprob: -5.4275898933410645
    6. '
' → logprob: -5.8025898933410645
    7. ',
' → logprob: -6.6775898933410645
    8. '               ' → logprob: -6.9275898933410645
    9. ' or' → logprob: -7.3025898933410645
    10. 'if' → logprob: -7.5525898933410645

Token 550: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.029387306421995163
    2. ' if' → logprob: -4.404387474060059
    3. ' and' → logprob: -4.654387474060059
    4. '            
' → logprob: -5.654387474060059
    5. ',' → logprob: -6.904387474060059
    6. '            ' → logprob: -7.029387474060059
    7. '
' → logprob: -8.404387474060059
    8. '```' → logprob: -8.529387474060059
    9. ' 
' → logprob: -8.654387474060059
    10. 'and' → logprob: -8.654387474060059

Token 551: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.714873731136322
    2. ' if' → logprob: -0.714873731136322
    3. 'if' (adapté à ' if') → logprob: -4.089873790740967
    4. '            
' → logprob: -6.339873790740967
    5. ' 
' → logprob: -6.464873790740967
    6. '            ' → logprob: -7.714873790740967
    7. '
' → logprob: -8.214873313903809
    8. '               ' → logprob: -8.964873313903809
    9. '<|end|>' → logprob: -9.589873313903809
    10. 'If' → logprob: -9.589873313903809

Token 552: ' arrive' (ID: 18338)
  Prédit: ' arrive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arrive' → logprob: -0.4287961423397064
    2. 'arr' → logprob: -1.0537961721420288
    3. ' arrival' → logprob: -10.80379581451416
    4. ' travel' → logprob: -11.17879581451416
    5. 'arrival' → logprob: -11.17879581451416
    6. '           ' → logprob: -11.30379581451416
    7. '(arr' → logprob: -12.05379581451416
    8. 'travel' → logprob: -12.17879581451416
    9. ' ' → logprob: -12.30379581451416
    10. ' arr' → logprob: -12.55379581451416

Token 553: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -2.4391956685576588e-05
    2. '<=' → logprob: -11.625024795532227
    3. ' _' → logprob: -12.375024795532227
    4. '_token' → logprob: -12.625024795532227
    5. '_' → logprob: -12.875024795532227
    6. ' <=' → logprob: -14.500024795532227
    7. '_tokens' → logprob: -14.500024795532227
    8. '_arr' → logprob: -14.750024795532227
    9. 'e' → logprob: -14.875024795532227
    10. '__' → logprob: -14.875024795532227

Token 554: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.029767150059342384
    2. '<=' → logprob: -3.5297670364379883
    3. ' ' → logprob: -12.154767036437988
    4. '<|end|>' → logprob: -12.404767036437988
    5. ')<=' → logprob: -12.779767036437988
    6. ')' → logprob: -13.654767036437988
    7. ' ≤' → logprob: -14.279767036437988
    8. 'le' → logprob: -14.529767036437988
    9. ' ==' → logprob: -14.779767036437988
    10. '[' → logprob: -15.279767036437988

Token 555: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.03804321587085724
    2. ' t' → logprob: -3.288043260574341
    3. '
' → logprob: -14.288043022155762
    4. '	t' → logprob: -14.913043022155762
    5. '   ' → logprob: -15.163043022155762
    6. '`t' → logprob: -15.538043022155762
    7. ' ' → logprob: -15.788043022155762
    8. '(t' → logprob: -17.288043975830078
    9. 'time' → logprob: -17.538043975830078
    10. 'ball' → logprob: -17.663043975830078

Token 556: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6690114736557007
    2. ':
' → logprob: -0.7940114736557007
    3. ' and' → logprob: -3.4190115928649902
    4. ',' → logprob: -7.16901159286499
    5. '               ' → logprob: -7.16901159286499
    6. '           ' → logprob: -7.41901159286499
    7. '):
' → logprob: -8.294011116027832
    8. ' :
' → logprob: -8.544011116027832
    9. ' :' → logprob: -9.294011116027832
    10. 'and' → logprob: -9.419011116027832

Token 557: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0026334458962082863
    2. ',' → logprob: -7.002633571624756
    3. ' new' → logprob: -7.627633571624756
    4. '                
' → logprob: -8.002633094787598
    5. ' if' → logprob: -8.252633094787598
    6. '           ' → logprob: -8.377633094787598
    7. '                   ' → logprob: -9.627633094787598
    8. 'new' → logprob: -9.877633094787598
    9. '                ' → logprob: -10.502633094787598
    10. '              ' → logprob: -10.627633094787598

Token 558: ' #' (ID: 1069)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.33314424753189087
    2. 'new' → logprob: -1.958144187927246
    3. '                   ' → logprob: -2.708144187927246
    4. '               ' → logprob: -2.833144187927246
    5. ' if' → logprob: -4.833144187927246
    6. ' heap' → logprob: -5.583144187927246
    7. 'heap' → logprob: -6.333144187927246
    8. '   ' → logprob: -7.208144187927246
    9. 'if' → logprob: -7.208144187927246
    10. '                ' → logprob: -8.208144187927246

Token 559: ' catch' (ID: 3494)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.07819604873657227
    2. ' new' → logprob: -2.8281960487365723
    3. 'if' → logprob: -4.828196048736572
    4. '#' → logprob: -5.203196048736572
    5. ' if' → logprob: -6.828196048736572
    6. ' #' → logprob: -7.203196048736572
    7. 'heap' → logprob: -8.328195571899414
    8. '               ' → logprob: -8.953195571899414
    9. '   ' → logprob: -9.328195571899414
    10. 'n' → logprob: -9.328195571899414

Token 560: ' balloon' (ID: 63124)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.5343071222305298
    2. 'new' → logprob: -1.7843071222305298
    3. ' next' → logprob: -1.9093071222305298
    4. ' new' → logprob: -2.0343070030212402
    5. 'next' → logprob: -2.6593070030212402
    6. '(next' → logprob: -2.6593070030212402
    7. 'ball' → logprob: -2.7843070030212402
    8. '(' → logprob: -2.9093070030212402
    9. 'ing' → logprob: -4.40930700302124
    10. '_next' → logprob: -4.65930700302124

Token 561: ' (' (ID: 350)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.2472126483917236
    2. ' new' → logprob: -1.3722126483917236
    3. ',' → logprob: -1.6222126483917236
    4. 'new' → logprob: -1.7472126483917236
    5. '                   ' → logprob: -3.6222126483917236
    6. ' if' → logprob: -3.7472126483917236
    7. ' ,' → logprob: -5.1222124099731445
    8. ' =' → logprob: -5.2472124099731445
    9. '           ' → logprob: -5.4972124099731445
    10. ',
' → logprob: -5.4972124099731445

Token 562: 'adding' (ID: 5399)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.5194690227508545
    2. ' new' → logprob: -1.8944690227508545
    3. '),' → logprob: -2.5194690227508545
    4. ')' → logprob: -2.6444690227508545
    5. 'car' → logprob: -3.6444690227508545
    6. ' carrying' → logprob: -3.6444690227508545
    7. 'carry' → logprob: -4.394469261169434
    8. '(' → logprob: -5.644469261169434
    9. ' (' → logprob: -5.644469261169434
    10. '               ' → logprob: -5.894469261169434

Token 563: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -1.0578621625900269
    2. ' idx' → logprob: -1.0578621625900269
    3. '(idx' → logprob: -1.5578621625900269
    4. '(' → logprob: -2.8078622817993164
    5. ' (' → logprob: -3.5578622817993164
    6. '1' → logprob: -7.057862281799316
    7. '(p' → logprob: -7.182862281799316
    8. 'ball' → logprob: -7.182862281799316
    9. 'to' → logprob: -7.432862281799316
    10. ' to' → logprob: -7.682862281799316

Token 564: ' to' (ID: 316)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.43047231435775757
    2. ')' → logprob: -2.3054723739624023
    3. '),' → logprob: -2.6804723739624023
    4. ',)' → logprob: -2.9304723739624023
    5. '+' → logprob: -3.0554723739624023
    6. ' +' → logprob: -3.1804723739624023
    7. ' ,' → logprob: -4.180472373962402
    8. ',),' → logprob: -4.805472373962402
    9. ',
' → logprob: -5.055472373962402
    10. '),
' → logprob: -6.555472373962402

Token 565: ' carrying' (ID: 25328)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.1926521360874176
    2. ' carrying' → logprob: -1.8176521062850952
    3. ' tuple' → logprob: -4.942652225494385
    4. 'tuple' → logprob: -5.317652225494385
    5. 'carry' → logprob: -8.317651748657227
    6. '(' → logprob: -9.192651748657227
    7. ' carried' → logprob: -9.567651748657227
    8. ')' → logprob: -10.005151748657227
    9. ' car' → logprob: -10.442651748657227
    10. ' ' → logprob: -10.442651748657227

Token 566: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6152775287628174
    2. ',' → logprob: -1.2402775287628174
    3. ' +' → logprob: -2.8652775287628174
    4. ')
' → logprob: -3.2402775287628174
    5. '+' → logprob: -3.3652775287628174
    6. '),' → logprob: -3.6152775287628174
    7. ' carrying' → logprob: -5.990277290344238
    8. ',)' → logprob: -6.115277290344238
    9. '=' → logprob: -6.240277290344238
    10. ' ,' → logprob: -6.990277290344238

Token 567: '               ' (ID: 506)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12083429843187332
    2. ',
' → logprob: -3.2458343505859375
    3. '               ' → logprob: -3.6208343505859375
    4. ' ,' → logprob: -3.9958343505859375
    5. ' (' → logprob: -5.2458343505859375
    6. ')' → logprob: -5.2458343505859375
    7. '                   ' → logprob: -5.8708343505859375
    8. ' new' → logprob: -5.9958343505859375
    9. 'new' → logprob: -6.3708343505859375
    10. '(
' → logprob: -6.4958343505859375

Token 568: ' #' (ID: 1069)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.10518739372491837
    2. 'new' → logprob: -2.35518741607666
    3. ' if' → logprob: -5.98018741607666
    4. 'if' → logprob: -7.73018741607666
    5. ',' → logprob: -8.23018741607666
    6. ' carrying' → logprob: -8.23018741607666
    7. 'car' → logprob: -8.35518741607666
    8. '               ' → logprob: -8.60518741607666
    9. '   ' → logprob: -8.73018741607666
    10. ' heap' → logprob: -8.73018741607666

Token 569: ' check' (ID: 2371)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.47814786434173584
    2. 'new' → logprob: -1.1031478643417358
    3. ' if' → logprob: -3.6031479835510254
    4. 'if' → logprob: -3.9781479835510254
    5. '               ' → logprob: -6.603147983551025
    6. '   ' → logprob: -8.603147506713867
    7. '                   ' → logprob: -8.853147506713867
    8. 'heap' → logprob: -9.103147506713867
    9. 'carry' → logprob: -9.353147506713867
    10. '           ' → logprob: -9.353147506713867

Token 570: ' not' (ID: 625)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.4949755370616913
    2. ' if' → logprob: -0.9949755668640137
    3. 'len' → logprob: -4.369975566864014
    4. 'if' → logprob: -5.119975566864014
    5. '(len' → logprob: -6.369975566864014
    6. ' max' → logprob: -8.244975090026855
    7. ' (' → logprob: -10.494975090026855
    8. ' new' → logprob: -11.494975090026855
    9. 'max' → logprob: -11.869975090026855
    10. ' idx' → logprob: -11.994975090026855

Token 571: ' exceed' (ID: 23275)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.7463688254356384
    2. '(len' → logprob: -1.6213688850402832
    3. ' exceeding' → logprob: -1.9963688850402832
    4. ' len' → logprob: -3.121368885040283
    5. 'ex' → logprob: -3.371368885040283
    6. ' (' → logprob: -3.621368885040283
    7. 'too' → logprob: -3.871368885040283
    8. ' too' → logprob: -3.996368885040283
    9. ' in' → logprob: -4.371368885040283
    10. 'in' → logprob: -4.496368885040283

Token 572: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.6976853609085083
    2. 'max' → logprob: -0.8226853609085083
    3. 'ing' → logprob: -2.9476852416992188
    4. 'len' → logprob: -5.447685241699219
    5. '(max' → logprob: -6.197685241699219
    6. ' ' → logprob: -7.072685241699219
    7. ' len' → logprob: -7.197685241699219
    8. '_max' → logprob: -7.197685241699219
    9. '   ' → logprob: -7.947685241699219
    10. 's' → logprob: -8.697685241699219

Token 573: ' carrying' (ID: 25328)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0013460656628012657
    2. 'carry' → logprob: -6.751346111297607
    3. 'car' → logprob: -9.87634563446045
    4. '_car' → logprob: -10.75134563446045
    5. 'len' → logprob: -10.87634563446045
    6. ' _' → logprob: -10.87634563446045
    7. '(_' → logprob: -11.62634563446045
    8. ' carrying' → logprob: -11.62634563446045
    9. '```' → logprob: -11.75134563446045
    10. ' carry' → logprob: -12.12634563446045

Token 574: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.08992095291614532
    2. 'and' → logprob: -4.089920997619629
    3. 'len' → logprob: -4.214920997619629
    4. ')' → logprob: -4.464920997619629
    5. ' ' → logprob: -4.964920997619629
    6. ' if' → logprob: -4.964920997619629
    7. ',' → logprob: -5.339920997619629
    8. '_' → logprob: -5.714920997619629
    9. '   ' → logprob: -5.964920997619629
    10. ' +' → logprob: -6.214920997619629

Token 575: '               ' (ID: 506)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6644816398620605
    2. ' and' → logprob: -0.7894816398620605
    3. 'if' → logprob: -4.7894816398620605
    4. 'and' → logprob: -5.1644816398620605
    5. '               ' → logprob: -5.4144816398620605
    6. '           ' → logprob: -5.9144816398620605
    7. ',' → logprob: -6.1644816398620605
    8. ')' → logprob: -6.2894816398620605
    9. '   ' → logprob: -6.4144816398620605
    10. '```' → logprob: -7.0394816398620605

Token 576: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5476507544517517
    2. ' if' → logprob: -0.9226507544517517
    3. 'if' (adapté à ' if') → logprob: -3.7976508140563965
    4. '                   ' → logprob: -7.4226508140563965
    5. '                
' → logprob: -7.9226508140563965
    6. '                ' → logprob: -8.422650337219238
    7. '   ' → logprob: -9.047650337219238
    8. ' new' → logprob: -9.297650337219238
    9. ' and' → logprob: -9.547650337219238
    10. ' ' → logprob: -9.797650337219238

Token 577: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.3132953345775604
    2. ' len' → logprob: -1.3132953643798828
    3. '(len' → logprob: -10.313295364379883
    4. '	len' → logprob: -15.688295364379883
    5. '   ' → logprob: -16.313295364379883
    6. ' ' → logprob: -16.688295364379883
    7. '[len' → logprob: -17.563295364379883
    8. '               ' → logprob: -18.188295364379883
    9. ' ' → logprob: -18.313295364379883
    10. ' (' → logprob: -18.313295364379883

Token 578: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -4.36574100604048e-06
    2. ' (' → logprob: -12.750004768371582
    3. '(' → logprob: -14.375004768371582
    4. 'c' → logprob: -15.625004768371582
    5. 'car' → logprob: -15.625004768371582
    6. '	c' → logprob: -15.875004768371582
    7. '(car' → logprob: -15.875004768371582
    8. '(
' → logprob: -16.250003814697266
    9. '```' → logprob: -16.750003814697266
    10. ' ' → logprob: -17.625003814697266

Token 579: 'arry' (ID: 20052)
  Prédit: 'arry'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arry' → logprob: -0.0003143704670947045
    2. 'arring' → logprob: -8.625314712524414
    3. 'car' → logprob: -9.500314712524414
    4. 'arr' → logprob: -10.625314712524414
    5. 'ar' → logprob: -11.250314712524414
    6. 'array' → logprob: -12.125314712524414
    7. ' carrying' → logprob: -12.250314712524414
    8. 'ary' → logprob: -12.750314712524414
    9. 'arri' → logprob: -13.125314712524414
    10. 'carry' → logprob: -13.125314712524414

Token 580: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.01906743273139
    2. 'g' → logprob: -4.144067287445068
    3. 'ying' → logprob: -6.769067287445068
    4. 'rying' → logprob: -7.394067287445068
    5. 'car' → logprob: -7.519067287445068
    6. 'carry' → logprob: -7.769067287445068
    7. 'y' → logprob: -9.769067764282227
    8. 'ng' → logprob: -10.019067764282227
    9. ' carrying' → logprob: -10.144067764282227
    10. 'ging' → logprob: -10.269067764282227

Token 581: ')' (ID: 8)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.6987711787223816
    2. ')' → logprob: -0.8237711787223816
    3. ' +' → logprob: -3.6987712383270264
    4. '+' → logprob: -4.073770999908447
    5. '<' → logprob: -4.448770999908447
    6. ')<' → logprob: -4.823770999908447
    7. ' )' → logprob: -6.698770999908447
    8. ')+' → logprob: -6.823770999908447
    9. '()<' → logprob: -9.823771476745605
    10. ' ' → logprob: -10.198771476745605

Token 582: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.6258231401443481
    2. '+' → logprob: -1.6258231401443481
    3. '<' → logprob: -1.7508231401443481
    4. ' +' → logprob: -2.3758230209350586
    5. ')' → logprob: -7.375823020935059
    6. '<p' → logprob: -8.250823020935059
    7. '<len' → logprob: -8.375823020935059
    8. ')<' → logprob: -8.750823020935059
    9. '()<' → logprob: -9.125823020935059
    10. '<size' → logprob: -9.500823020935059

Token 583: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.01904742605984211
    2. ' max' → logprob: -4.019047260284424
    3. '3' → logprob: -7.019047260284424
    4. ' ' → logprob: -13.144047737121582
    5. '	max' → logprob: -16.144046783447266
    6. '
' → logprob: -16.144046783447266
    7. '=max' → logprob: -16.644046783447266
    8. '   ' → logprob: -16.769046783447266
    9. '(max' → logprob: -17.144046783447266
    10. '```' → logprob: -17.269046783447266

Token 584: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.00030197695014066994
    2. ' _' → logprob: -8.8753023147583
    3. 'carry' → logprob: -8.8753023147583
    4. '_car' → logprob: -11.8753023147583
    5. '_' → logprob: -12.2503023147583
    6. 'car' → logprob: -12.3753023147583
    7. ')' → logprob: -13.5003023147583
    8. ' carrying' → logprob: -13.5003023147583
    9. '\' → logprob: -13.8753023147583
    10. ' carry' → logprob: -14.2503023147583

Token 585: 'arry' (ID: 20052)
  Prédit: 'arry'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arry' → logprob: -0.0016536405310034752
    2. 'carry' → logprob: -6.626653671264648
    3. 'array' → logprob: -9.251653671264648
    4. 'arr' → logprob: -9.251653671264648
    5. 'ary' → logprob: -9.876653671264648
    6. 'arring' → logprob: -10.626653671264648
    7. 'ar' → logprob: -11.376653671264648
    8. '_c' → logprob: -11.751653671264648
    9. '_' → logprob: -11.876653671264648
    10. 'ARRY' → logprob: -12.251653671264648

Token 586: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.43954744935035706
    2. ' and' → logprob: -1.6895474195480347
    3. ':' → logprob: -1.9395474195480347
    4. '):
' → logprob: -4.064547538757324
    5. ')' → logprob: -5.814547538757324
    6. ',' → logprob: -5.939547538757324
    7. 'and' → logprob: -6.064547538757324
    8. '):' → logprob: -6.689547538757324
    9. '():
' → logprob: -8.439547538757324
    10. '           ' → logprob: -9.189547538757324

Token 587: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.35642650723457336
    2. ',' → logprob: -2.356426477432251
    3. '               ' → logprob: -2.856426477432251
    4. '                       ' → logprob: -2.981426477432251
    5. ' new' → logprob: -3.856426477432251
    6. '                ' → logprob: -4.85642671585083
    7. '                           ' → logprob: -4.98142671585083
    8. 'new' → logprob: -5.10642671585083
    9. ' ,' → logprob: -5.23142671585083
    10. ' (' → logprob: -5.35642671585083

Token 588: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.20388661324977875
    2. 'new' (adapté à ' new') → logprob: -2.0788865089416504
    3. ' heap' → logprob: -3.7038865089416504
    4. '                       ' → logprob: -3.8288865089416504
    5. '                   ' → logprob: -5.20388650894165
    6. 'heap' → logprob: -5.70388650894165
    7. 'carry' → logprob: -7.07888650894165
    8. ' carry' → logprob: -7.57888650894165
    9. ',' → logprob: -7.57888650894165
    10. '               ' → logprob: -7.70388650894165

Token 589: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.05021987855434418
    2. '_dist' → logprob: -3.050219774246216
    3. '_pos' → logprob: -6.925220012664795
    4. 'carry' → logprob: -8.175219535827637
    5. 'dist' → logprob: -9.425219535827637
    6. '_' → logprob: -9.550219535827637
    7. '_car' → logprob: -9.550219535827637
    8. 'car' → logprob: -9.925219535827637
    9. '_key' → logprob: -10.425219535827637
    10. '_idx' → logprob: -10.675219535827637

Token 590: 'arry' (ID: 20052)
  Prédit: 'arry'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arry' → logprob: -0.0015384310390800238
    2. '_' → logprob: -6.751538276672363
    3. 'ar' → logprob: -8.876538276672363
    4. '_c' → logprob: -9.251538276672363
    5. 'arr' → logprob: -9.876538276672363
    6. 'arring' → logprob: -10.876538276672363
    7. 'array' → logprob: -11.376538276672363
    8. 'ary' → logprob: -11.876538276672363
    9. '_arr' → logprob: -12.126538276672363
    10. '=' → logprob: -12.251538276672363

Token 591: ' =' (ID: 314)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.9026591181755066
    2. '=' → logprob: -1.1526591777801514
    3. ' =' → logprob: -1.2776591777801514
    4. '   ' → logprob: -11.90265941619873
    5. '=(' → logprob: -12.52765941619873
    6. 'ng' → logprob: -12.77765941619873
    7. ' ' → logprob: -12.90265941619873
    8. 'ings' → logprob: -13.65265941619873
    9. ',' → logprob: -13.77765941619873
    10. 'ying' → logprob: -13.90265941619873

Token 592: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.16194802522659302
    2. 'car' → logprob: -2.1619479656219482
    3. ' tuple' → logprob: -3.4119479656219482
    4. ' carrying' → logprob: -6.911948204040527
    5. '(tuple' → logprob: -8.411948204040527
    6. 'carry' → logprob: -8.911948204040527
    7. '(*' → logprob: -10.161948204040527
    8. '   ' → logprob: -11.161948204040527
    9. ' ' → logprob: -12.411948204040527
    10. '(' → logprob: -12.536948204040527

Token 593: '(sorted' (ID: 92488)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.13156817853450775
    2. '(sorted' → logprob: -2.131568193435669
    3. 'list' → logprob: -5.38156795501709
    4. '(list' → logprob: -10.50656795501709
    5. ' sorted' → logprob: -13.88156795501709
    6. '(' → logprob: -14.75656795501709
    7. '   ' → logprob: -17.006568908691406
    8. 'heap' → logprob: -18.006568908691406
    9. '(*' → logprob: -18.256568908691406
    10. ' list' → logprob: -18.631568908691406

Token 594: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.017149487510323524
    2. '(list' → logprob: -4.267149448394775
    3. 'list' → logprob: -5.892149448394775
    4. 'c' → logprob: -8.642149925231934
    5. '(*' → logprob: -11.017149925231934
    6. 'car' → logprob: -11.517149925231934
    7. 'carry' → logprob: -11.517149925231934
    8. '((*' → logprob: -12.267149925231934
    9. '(set' → logprob: -13.642149925231934
    10. '(' → logprob: -14.517149925231934

Token 595: 'arry' (ID: 20052)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.0774017721414566
    2. '(c' → logprob: -2.827401876449585
    3. 'c' → logprob: -4.952401638031006
    4. 'list' → logprob: -5.202401638031006
    5. 'carry' → logprob: -7.202401638031006
    6. '(list' → logprob: -7.577401638031006
    7. '[c' → logprob: -7.702401638031006
    8. '_c' → logprob: -8.077402114868164
    9. 'arry' → logprob: -8.577402114868164
    10. ' carrying' → logprob: -9.077402114868164

Token 596: 'ing' (ID: 289)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.09446720033884048
    2. '(c' → logprob: -2.9694671630859375
    3. 'ing' → logprob: -3.5944671630859375
    4. 'carry' → logprob: -6.7194671630859375
    5. '   ' → logprob: -6.8444671630859375
    6. '(' → logprob: -6.9694671630859375
    7. '(car' → logprob: -6.9694671630859375
    8. 'c' → logprob: -7.4694671630859375
    9. ' carrying' → logprob: -7.4694671630859375
    10. 'inging' → logprob: -7.5944671630859375

Token 597: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16046549379825592
    2. ' +' → logprob: -1.9104654788970947
    3. '+(' → logprob: -8.410465240478516
    4. '+c' → logprob: -11.035465240478516
    5. '(' → logprob: -13.785465240478516
    6. ' +(' → logprob: -14.660465240478516
    7. '+[' → logprob: -15.160465240478516
    8. '+
' → logprob: -15.535465240478516
    9. '()+' → logprob: -15.535465240478516
    10. '(c' → logprob: -15.785465240478516

Token 598: ' (' (ID: 350)
  Prédit: '(idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.0274837426841259
    2. '(' → logprob: -3.7774837017059326
    3. '(p' → logprob: -6.527483940124512
    4. '(pos' → logprob: -6.652483940124512
    5. '(ip' → logprob: -7.652483940124512
    6. '(id' → logprob: -8.152483940124512
    7. '(ix' → logprob: -8.402483940124512
    8. '(i' → logprob: -8.777483940124512
    9. '(index' → logprob: -9.402483940124512
    10. '(pid' → logprob: -10.027483940124512

Token 599: 'idx' (ID: 13196)
  Prédit: '(idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.5761018991470337
    2. 'idx' → logprob: -0.8261018991470337
    3. ' idx' → logprob: -8.951102256774902
    4. ' (' → logprob: -11.076102256774902
    5. '[idx' → logprob: -11.951102256774902
    6. '(' → logprob: -12.326102256774902
    7. '	idx' → logprob: -12.951102256774902
    8. '(index' → logprob: -13.701102256774902
    9. '_idx' → logprob: -14.326102256774902
    10. '.idx' → logprob: -14.701102256774902

Token 600: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4742824137210846
    2. ')))' → logprob: -0.9742823839187622
    3. ',)' → logprob: -8.724282264709473
    4. '))' → logprob: -11.099282264709473
    5. ')))
' → logprob: -11.849282264709473
    6. ')' → logprob: -12.224282264709473
    7. '')))' → logprob: -12.599282264709473
    8. '))))' → logprob: -13.224282264709473
    9. '())))' → logprob: -13.224282264709473
    10. ' ,' → logprob: -13.224282264709473

Token 601: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.0001882823125924915
    2. ')))
' → logprob: -8.625187873840332
    3. ' ' → logprob: -12.250187873840332
    4. ')))

' → logprob: -13.500187873840332
    5. ')' → logprob: -13.625187873840332
    6. '))' → logprob: -14.125187873840332
    7. '))))' → logprob: -15.625187873840332
    8. 'idx' → logprob: -15.750187873840332
    9. ')));' → logprob: -16.00018882751465
    10. ')))
' → logprob: -16.75018882751465

Token 602: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.35872191190719604
    2. ')' → logprob: -1.9837219715118408
    3. '
' → logprob: -2.233721971511841
    4. '               ' → logprob: -4.483721733093262
    5. '                    
' → logprob: -4.733721733093262
    6. '<|end|>' → logprob: -4.733721733093262
    7. ')
' → logprob: -4.858721733093262
    8. ',
' → logprob: -5.108721733093262
    9. ',' → logprob: -5.483721733093262
    10. '           ' → logprob: -7.108721733093262

Token 603: ' new' (ID: 620)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.01493021659553051
    2. 'new' (adapté à ' new') → logprob: -4.389930248260498
    3. ' heap' → logprob: -6.764930248260498
    4. '                   ' → logprob: -7.014930248260498
    5. 'if' → logprob: -8.51492977142334
    6. ' new' → logprob: -9.51492977142334
    7. '               ' → logprob: -10.38992977142334
    8. '                       ' → logprob: -10.76492977142334
    9. 'travel' → logprob: -11.76492977142334
    10. '   ' → logprob: -12.13992977142334

Token 604: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.011056899093091488
    2. 'dist' → logprob: -5.011056900024414
    3. 'key' → logprob: -6.886056900024414
    4. '_key' → logprob: -7.136056900024414
    5. '_time' → logprob: -7.136056900024414
    6. 'time' → logprob: -8.136056900024414
    7. 'heap' → logprob: -8.386056900024414
    8. '_state' → logprob: -8.761056900024414
    9. '_idx' → logprob: -9.261056900024414
    10. 'state' → logprob: -9.261056900024414

Token 605: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.032576050609350204
    2. '=' → logprob: -3.782576084136963
    3. ' ,' → logprob: -5.282576084136963
    4. ' =' → logprob: -5.657576084136963
    5. '+' → logprob: -8.657575607299805
    6. ')' → logprob: -8.782575607299805
    7. '),' → logprob: -9.532575607299805
    8. ' +' → logprob: -9.532575607299805
    9. '<|end|>' → logprob: -9.657575607299805
    10. ',
' → logprob: -9.907575607299805

Token 606: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.005933297798037529
    2. ' dist' → logprob: -5.1309332847595215
    3. '   ' → logprob: -13.13093376159668
    4. '	dist' → logprob: -14.13093376159668
    5. '(dist' → logprob: -14.25593376159668
    6. 'travel' → logprob: -14.25593376159668
    7. 'distance' → logprob: -15.63093376159668
    8. '       ' → logprob: -16.13093376159668
    9. '           ' → logprob: -16.50593376159668
    10. '_dist' → logprob: -16.75593376159668

Token 607: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.001953018014319241
    2. '_dist' → logprob: -6.251953125
    3. 'sum' → logprob: -11.501953125
    4. '+' → logprob: -12.126953125
    5. 'dist' → logprob: -12.501953125
    6. ' _' → logprob: -13.376953125
    7. ' +' → logprob: -14.001953125
    8. '```' → logprob: -14.501953125
    9. '_s' → logprob: -14.626953125
    10. ',' → logprob: -14.626953125

Token 608: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6743825078010559
    2. ' +' → logprob: -1.0493824481964111
    3. '+' → logprob: -2.049382448196411
    4. '                   ' → logprob: -5.29938268661499
    5. ' ,' → logprob: -5.42438268661499
    6. '<|end|>' → logprob: -7.29938268661499
    7. ',new' → logprob: -8.049382209777832
    8. '                    ' → logprob: -8.549382209777832
    9. '               ' → logprob: -8.799382209777832
    10. ',
' → logprob: -8.799382209777832

Token 609: ' travel' (ID: 6410)
  Prédit: 'travel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'travel' → logprob: -0.0027548300568014383
    2. 'abs' → logprob: -6.3777546882629395
    3. ' travel' → logprob: -6.8777546882629395
    4. 'trav' → logprob: -11.252755165100098
    5. 'tr' → logprob: -12.502755165100098
    6. ' abs' → logprob: -13.002755165100098
    7. '   ' → logprob: -14.252755165100098
    8. ' ' → logprob: -14.252755165100098
    9. '.travel' → logprob: -15.127755165100098
    10. '(abs' → logprob: -15.877755165100098

Token 610: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.000182921823579818
    2. '_time' → logprob: -9.62518310546875
    3. 'dist' → logprob: -9.87518310546875
    4. 'Dist' → logprob: -10.62518310546875
    5. '_distance' → logprob: -10.75018310546875
    6. '_' → logprob: -12.00018310546875
    7. '_tr' → logprob: -12.00018310546875
    8. 'travel' → logprob: -12.87518310546875
    9. '_cost' → logprob: -14.00018310546875
    10. ' _' → logprob: -14.12518310546875

Token 611: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23294289410114288
    2. ',
' → logprob: -2.857942819595337
    3. 'new' → logprob: -2.982942819595337
    4. '                   ' → logprob: -3.107942819595337
    5. ',new' → logprob: -3.357942819595337
    6. '
' → logprob: -4.357943058013916
    7. ' new' → logprob: -5.982943058013916
    8. '               ' → logprob: -6.107943058013916
    9. '                    
' → logprob: -6.982943058013916
    10. '```' → logprob: -7.357943058013916

Token 612: '                   ' (ID: 699)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17935143411159515
    2. ',
' → logprob: -2.054351329803467
    3. '                   ' → logprob: -4.054351329803467
    4. '
' → logprob: -4.679351329803467
    5. '                    
' → logprob: -6.054351329803467
    6. 'new' → logprob: -6.179351329803467
    7. '               ' → logprob: -6.554351329803467
    8. ',new' → logprob: -6.929351329803467
    9. '```' → logprob: -7.429351329803467
    10. ' ,' → logprob: -8.179351806640625

Token 613: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.00031294001382775605
    2. ' new' → logprob: -8.125312805175781
    3. 'heap' → logprob: -11.125312805175781
    4. '```' → logprob: -14.625312805175781
    5. '                   ' → logprob: -14.750312805175781
    6. '
' → logprob: -14.875312805175781
    7. 'arrival' → logprob: -15.500312805175781
    8. '   ' → logprob: -15.875312805175781
    9. 'if' → logprob: -16.25031280517578
    10. '	new' → logprob: -16.37531280517578

Token 614: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -8.363617962459102e-05
    2. 'time' → logprob: -9.875083923339844
    3. '_dist' → logprob: -10.750083923339844
    4. '_c' → logprob: -13.125083923339844
    5. '_heap' → logprob: -13.125083923339844
    6. 'heap' → logprob: -13.375083923339844
    7. '_h' → logprob: -13.875083923339844
    8. '_pos' → logprob: -14.000083923339844
    9. '_' → logprob: -14.250083923339844
    10. '_t' → logprob: -14.750083923339844

Token 615: ' =' (ID: 314)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.14321474730968475
    2. '+' → logprob: -2.018214702606201
    3. ' +=' → logprob: -7.893214702606201
    4. '=' → logprob: -9.51821517944336
    5. ' =' → logprob: -9.89321517944336
    6. '+=' → logprob: -11.01821517944336
    7. ',' → logprob: -11.51821517944336
    8. '<|end|>' → logprob: -11.76821517944336
    9. ' ' → logprob: -12.89321517944336
    10. '<|end|>' → logprob: -13.51821517944336

Token 616: ' arrive' (ID: 18338)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.0015471219085156918
    2. ' arrive' → logprob: -6.501547336578369
    3. 'arrival' → logprob: -11.251546859741211
    4. 'time' → logprob: -11.501546859741211
    5. ' arr' → logprob: -11.751546859741211
    6. '          ' → logprob: -13.251546859741211
    7. '   ' → logprob: -13.376546859741211
    8. ' time' → logprob: -13.501546859741211
    9. '	arr' → logprob: -13.501546859741211
    10. '           ' → logprob: -13.501546859741211

Token 617: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -4.320199877838604e-07
    2. 'ime' → logprob: -15.875
    3. 'Time' → logprob: -15.875
    4. '+' → logprob: -16.75
    5. '_arr' → logprob: -17.625
    6. 'time' → logprob: -17.75
    7. '_' → logprob: -18.125
    8. '   ' → logprob: -18.375
    9. '_t' → logprob: -19.25
    10. '_TIME' → logprob: -19.375

Token 618: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.013734430074691772
    2. ',' → logprob: -4.513734340667725
    3. '
' → logprob: -6.888734340667725
    4. ',
' → logprob: -7.263734340667725
    5. '<|end|>' → logprob: -8.138734817504883
    6. '               ' → logprob: -8.513734817504883
    7. ')' → logprob: -9.263734817504883
    8. '   ' → logprob: -9.388734817504883
    9. '                    
' → logprob: -10.013734817504883
    10. '				' → logprob: -10.138734817504883

Token 619: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.010471359826624393
    2. '
' → logprob: -5.135471343994141
    3. '               ' → logprob: -6.635471343994141
    4. ')' → logprob: -6.760471343994141
    5. ',' → logprob: -7.760471343994141
    6. '   ' → logprob: -8.26047134399414
    7. ',
' → logprob: -8.26047134399414
    8. '           ' → logprob: -8.38547134399414
    9. '       ' → logprob: -8.63547134399414
    10. '                    
' → logprob: -8.63547134399414

Token 620: ' key' (ID: 2140)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.0016639928799122572
    2. '                   ' → logprob: -6.501664161682129
    3. ' heap' → logprob: -8.751664161682129
    4. 'if' → logprob: -13.751664161682129
    5. '               ' → logprob: -14.376664161682129
    6. '```' → logprob: -14.501664161682129
    7. '                       ' → logprob: -14.751664161682129
    8. '           ' → logprob: -14.876664161682129
    9. '
' → logprob: -15.126664161682129
    10. '(heap' → logprob: -16.876663208007812

Token 621: '2' (ID: 17)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31405654549598694
    2. '=' → logprob: -1.3140565156936646
    3. ',' → logprob: -7.814056396484375
    4. ')' → logprob: -8.314056396484375
    5. ' ==' → logprob: -9.939056396484375
    6. '==' → logprob: -10.939056396484375
    7. 'new' → logprob: -10.939056396484375
    8. '=(' → logprob: -11.939056396484375
    9. ' =(' → logprob: -12.064056396484375
    10. ' (' → logprob: -12.314056396484375

Token 622: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25220203399658203
    2. '=' → logprob: -1.502202033996582
    3. '<|end|>' → logprob: -9.002202033996582
    4. ')' → logprob: -9.127202033996582
    5. ',' → logprob: -11.627202033996582
    6. ' ==' → logprob: -12.252202033996582
    7. ')=' → logprob: -12.377202033996582
    8. ' =
' → logprob: -12.502202033996582
    9. '  ' → logprob: -12.752202033996582
    10. ' ' → logprob: -12.877202033996582

Token 623: ' (' (ID: 350)
  Prédit: '(idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.018210463225841522
    2. ' (' → logprob: -4.018210411071777
    3. '(index' → logprob: -9.893210411071777
    4. '   ' → logprob: -12.393210411071777
    5. '                   ' → logprob: -13.393210411071777
    6. '(' → logprob: -13.768210411071777
    7. '(ix' → logprob: -13.893210411071777
    8. '(n' → logprob: -14.768210411071777
    9. '(indent' → logprob: -15.143210411071777
    10. '(ii' → logprob: -15.268210411071777

Token 624: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.008632530458271503
    2. '(idx' → logprob: -4.758632659912109
    3. ' idx' → logprob: -11.25863265991211
    4. '   ' → logprob: -13.00863265991211
    5. 'index' → logprob: -14.38363265991211
    6. '	idx' → logprob: -14.50863265991211
    7. '[idx' → logprob: -14.63363265991211
    8. '(' → logprob: -14.75863265991211
    9. ' (' → logprob: -15.25863265991211
    10. '                   ' → logprob: -15.88363265991211

Token 625: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.21182316541671753
    2. ' +' → logprob: -1.7118232250213623
    3. ',' → logprob: -4.586822986602783
    4. '+,' → logprob: -9.336823463439941
    5. ' ,' → logprob: -9.586823463439941
    6. '+
' → logprob: -12.086823463439941
    7. ',
' → logprob: -13.086823463439941
    8. ' +
' → logprob: -13.461823463439941
    9. '＋' → logprob: -14.086823463439941
    10. '<|end|>' → logprob: -14.461823463439941

Token 626: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003396343090571463
    2. ' ' → logprob: -8.00033950805664
    3. ',' → logprob: -12.50033950805664
    4. '+' → logprob: -15.75033950805664
    5. ')' → logprob: -16.12533950805664
    6. ' ,' → logprob: -16.62533950805664
    7. '   ' → logprob: -17.37533950805664
    8. '
' → logprob: -17.62533950805664
    9. '2' → logprob: -17.62533950805664
    10. ' +' → logprob: -17.75033950805664

Token 627: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00013977376511320472
    2. ' ' → logprob: -9.000140190124512
    3. ',' → logprob: -12.125140190124512
    4. '2' → logprob: -12.625140190124512
    5. '+' → logprob: -12.875140190124512
    6. 'pos' → logprob: -13.500140190124512
    7. 'new' → logprob: -14.125140190124512
    8. ')' → logprob: -14.250140190124512
    9. '0' → logprob: -14.250140190124512
    10. '```' → logprob: -14.625140190124512

Token 628: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.957014556974173e-05
    2. ' ,' → logprob: -9.625069618225098
    3. ',
' → logprob: -13.625069618225098
    4. '<|end|>' → logprob: -14.250069618225098
    5. ',pos' → logprob: -14.750069618225098
    6. ',p' → logprob: -14.750069618225098
    7. ')' → logprob: -15.500069618225098
    8. '‌,' → logprob: -15.750069618225098
    9. ',new' → logprob: -16.12506866455078
    10. '```' → logprob: -17.37506866455078

Token 629: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0022187726572155952
    2. ' p' → logprob: -6.127218723297119
    3. 'new' → logprob: -10.502219200134277
    4. ' new' → logprob: -12.752219200134277
    5. '   ' → logprob: -14.127219200134277
    6. ' ' → logprob: -14.377219200134277
    7. ',' → logprob: -15.252219200134277
    8. ')' → logprob: -15.314719200134277
    9. '
' → logprob: -15.502219200134277
    10. '                   ' → logprob: -15.564719200134277

Token 630: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002900686115026474
    2. ',new' → logprob: -5.87790060043335
    3. ' ,' → logprob: -9.627901077270508
    4. ',
' → logprob: -11.502901077270508
    5. 'new' → logprob: -11.502901077270508
    6. '<|end|>' → logprob: -12.752901077270508
    7. ' new' → logprob: -13.002901077270508
    8. ')' → logprob: -13.377901077270508
    9. '‌,' → logprob: -14.252901077270508
    10. '),' → logprob: -14.877901077270508

Token 631: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.004623203072696924
    2. ' new' → logprob: -5.3796234130859375
    3. '   ' → logprob: -13.129623413085938
    4. ' ' → logprob: -15.004623413085938
    5. '(new' → logprob: -15.629623413085938
    6. '	new' → logprob: -16.004623413085938
    7. ')new' → logprob: -16.504623413085938
    8. '_new' → logprob: -16.754623413085938
    9. '    ' → logprob: -16.879623413085938
    10. '  ' → logprob: -16.879623413085938

Token 632: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.08907131105661392
    2. 'carry' → logprob: -2.464071273803711
    3. 'car' → logprob: -9.089071273803711
    4. 'c' → logprob: -11.214071273803711
    5. ' carry' → logprob: -12.964071273803711
    6. 'Carry' → logprob: -13.214071273803711
    7. '_car' → logprob: -15.714071273803711
    8. '_' → logprob: -15.839071273803711
    9. '\' → logprob: -15.964071273803711
    10. '(c' → logprob: -16.21407127380371

Token 633: 'arry' (ID: 20052)
  Prédit: 'arry'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arry' → logprob: -8.911954500945285e-05
    2. 'arring' → logprob: -10.625088691711426
    3. 'arr' → logprob: -10.875088691711426
    4. 'carry' → logprob: -10.875088691711426
    5. 'array' → logprob: -11.500088691711426
    6. 'ar' → logprob: -11.500088691711426
    7. 'ARRY' → logprob: -13.375088691711426
    8. 'ary' → logprob: -13.625088691711426
    9. 'urry' → logprob: -14.250088691711426
    10. '_' → logprob: -14.375088691711426

Token 634: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01251753605902195
    2. ')
' → logprob: -4.38751745223999
    3. ')

' → logprob: -13.137517929077148
    4. ')
' → logprob: -13.262517929077148
    5. '<|end|>' → logprob: -13.387517929077148
    6. ' )' → logprob: -14.012517929077148
    7. '):
' → logprob: -14.012517929077148
    8. '),' → logprob: -15.887517929077148
    9. ',' → logprob: -16.01251792907715
    10. ')}' → logprob: -16.51251792907715

Token 635: '                   ' (ID: 699)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5395804047584534
    2. '<|end|>' → logprob: -1.2895803451538086
    3. '
' → logprob: -3.0395803451538086
    4. '<|end|>' → logprob: -3.5395803451538086
    5. '[' → logprob: -4.414580345153809
    6. '                   ' → logprob: -4.664580345153809
    7. '):
' → logprob: -4.789580345153809
    8. ')
' → logprob: -5.289580345153809
    9. ',' → logprob: -5.664580345153809
    10. ':' → logprob: -5.789580345153809

Token 636: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.017350085079669952
    2. '                   ' → logprob: -4.267350196838379
    3. ' if' → logprob: -5.767350196838379
    4. '       ' → logprob: -10.392350196838379
    5. '           ' → logprob: -11.767350196838379
    6. '                    
' → logprob: -12.142350196838379
    7. '               ' → logprob: -12.267350196838379
    8. '```' → logprob: -13.267350196838379
    9. '
' → logprob: -13.642350196838379
    10. '   ' → logprob: -14.267350196838379

Token 637: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.05003880336880684
    2. ' key' → logprob: -3.0500388145446777
    3. '(key' → logprob: -6.550038814544678
    4. ' (' → logprob: -11.17503833770752
    5. '(' → logprob: -13.05003833770752
    6. '   ' → logprob: -13.17503833770752
    7. ' ' → logprob: -14.17503833770752
    8. '	key' → logprob: -14.92503833770752
    9. '_key' → logprob: -15.42503833770752
    10. 'not' → logprob: -15.42503833770752

Token 638: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002494802698493004
    2. ' not' → logprob: -6.502494812011719
    3. 'not' → logprob: -7.002494812011719
    4. '[' → logprob: -10.627494812011719
    5. '
' → logprob: -11.002494812011719
    6. ')' → logprob: -11.252494812011719
    7. ' in' → logprob: -12.002494812011719
    8. '```' → logprob: -12.502494812011719
    9. '   ' → logprob: -12.877494812011719
    10. ' ' → logprob: -12.877494812011719

Token 639: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.1799255907535553
    2. ' not' → logprob: -1.804925560951233
    3. ')' → logprob: -8.929925918579102
    4. '	not' → logprob: -11.054925918579102
    5. ']' → logprob: -12.054925918579102
    6. '=' → logprob: -12.054925918579102
    7. 'import' → logprob: -12.179925918579102
    8. 'in' → logprob: -12.429925918579102
    9. '[' → logprob: -12.679925918579102
    10. ' in' → logprob: -13.304925918579102

Token 640: ' in' (ID: 306)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.4498707354068756
    2. ' in' → logprob: -1.0748707056045532
    3. 'in' → logprob: -4.574870586395264
    4. 'or' → logprob: -4.574870586395264
    5. '<|end|>' → logprob: -8.699871063232422
    6. ')' → logprob: -9.574871063232422
    7. '(h' → logprob: -11.074871063232422
    8. ' not' → logprob: -11.324871063232422
    9. '<|end|>' → logprob: -11.324871063232422
    10. ' (' → logprob: -11.949871063232422

Token 641: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -9.615255839889869e-05
    2. ' dp' → logprob: -9.250096321105957
    3. '	dp' → logprob: -17.00009536743164
    4. '(dp' → logprob: -17.75009536743164
    5. '_dp' → logprob: -19.87509536743164
    6. 'dq' → logprob: -21.12509536743164
    7. '.dp' → logprob: -21.12509536743164
    8. 'dt' → logprob: -21.37509536743164
    9. 'DP' → logprob: -21.75009536743164
    10. 'd' → logprob: -22.00009536743164

Token 642: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.001946844975464046
    2. 'or' → logprob: -6.251946926116943
    3. '	or' → logprob: -11.376946449279785
    4. '<|end|>' → logprob: -13.126946449279785
    5. ' ' → logprob: -13.376946449279785
    6. '                       ' → logprob: -14.376946449279785
    7. '                   ' → logprob: -14.501946449279785
    8. ' and' → logprob: -14.751946449279785
    9. '                           ' → logprob: -14.876946449279785
    10. '<|end|>' → logprob: -15.626946449279785

Token 643: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.16103363037109375
    2. ' dp' → logprob: -1.9110336303710938
    3. '(dp' → logprob: -7.286033630371094
    4. '                   ' → logprob: -10.161033630371094
    5. 'key' → logprob: -10.161033630371094
    6. 'new' → logprob: -11.286033630371094
    7. ' key' → logprob: -11.411033630371094
    8. '                       ' → logprob: -11.911033630371094
    9. ' (' → logprob: -12.286033630371094
    10. ' new' → logprob: -12.911033630371094

Token 644: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -6.704273118884885e-07
    2. '.get' → logprob: -14.750000953674316
    3. '[(' → logprob: -16.125
    4. 'key' → logprob: -16.875
    5. '[
' → logprob: -18.375
    6. '(key' → logprob: -18.625
    7. '```' → logprob: -18.75
    8. '[' → logprob: -19.625
    9. '[[' → logprob: -20.75
    10. '[k' → logprob: -20.875

Token 645: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.749814019713085e-06
    2. '[key' → logprob: -12.125006675720215
    3. '[' → logprob: -14.500006675720215
    4. 'key' → logprob: -15.125006675720215
    5. '[(' → logprob: -16.25000762939453
    6. ' ' → logprob: -16.75000762939453
    7. '
' → logprob: -16.75000762939453
    8. '```' → logprob: -17.00000762939453
    9. '۲' → logprob: -17.62500762939453
    10. ' key' → logprob: -17.87500762939453

Token 646: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16405616700649261
    2. '][' → logprob: -1.9140561819076538
    3. ')[' → logprob: -6.039056301116943
    4. '>[' → logprob: -7.039056301116943
    5. '>' → logprob: -8.414055824279785
    6. ']' → logprob: -9.289055824279785
    7. '
' → logprob: -10.164055824279785
    8. ' ][' → logprob: -10.539055824279785
    9. ' [' → logprob: -10.914055824279785
    10. ')' → logprob: -10.914055824279785

Token 647: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001960393972694874
    2. '1' → logprob: -6.251960277557373
    3. '[' → logprob: -10.626960754394531
    4. '
' → logprob: -12.501960754394531
    5. ' ' → logprob: -14.064460754394531
    6. '(' → logprob: -14.376960754394531
    7. '   ' → logprob: -14.814460754394531
    8. ']' → logprob: -15.189460754394531
    9. '#' → logprob: -15.314460754394531
    10. '

' → logprob: -15.314460754394531

Token 648: ']' (ID: 60)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.20148058235645294
    2. '>' → logprob: -1.7014806270599365
    3. ' >=' → logprob: -11.326480865478516
    4. '[' → logprob: -11.451480865478516
    5. ']>' → logprob: -11.576480865478516
    6. ']' → logprob: -11.826480865478516
    7. ' <' → logprob: -11.826480865478516
    8. '```' → logprob: -12.076480865478516
    9. ' >
' → logprob: -12.701480865478516
    10. '>=' → logprob: -12.701480865478516

Token 649: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.029756855219602585
    2. ' >' → logprob: -3.529756784439087
    3. '>=' → logprob: -13.529756546020508
    4. ' ' → logprob: -13.654756546020508
    5. '   ' → logprob: -14.154756546020508
    6. 'new' → logprob: -14.529756546020508
    7. '[' → logprob: -15.029756546020508
    8. '()>' → logprob: -15.154756546020508
    9. '">' → logprob: -15.529756546020508
    10. ')>' → logprob: -15.529756546020508

Token 650: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0067542060278356075
    2. ' new' → logprob: -5.006754398345947
    3. '   ' → logprob: -10.381753921508789
    4. '    ' → logprob: -13.006753921508789
    5. '  ' → logprob: -13.881753921508789
    6. 'time' → logprob: -14.256753921508789
    7. '
' → logprob: -14.381753921508789
    8. 'arr' → logprob: -14.506753921508789
    9. '	new' → logprob: -14.881753921508789
    10. '       ' → logprob: -14.881753921508789

Token 651: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.00045498309191316366
    2. 'new' → logprob: -8.125454902648926
    3. 'time' → logprob: -9.625454902648926
    4. 'arr' → logprob: -9.625454902648926
    5. '_arr' → logprob: -10.875454902648926
    6. '_new' → logprob: -12.250454902648926
    7. ' new' → logprob: -13.625454902648926
    8. ' time' → logprob: -14.125454902648926
    9. 'Time' → logprob: -15.250454902648926
    10. 'arrival' → logprob: -15.750454902648926

Token 652: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0232771597802639
    2. 'or' → logprob: -3.7732770442962646
    3. '                   ' → logprob: -11.148277282714844
    4. '                       ' → logprob: -12.773277282714844
    5. ' and' → logprob: -12.898277282714844
    6. '                    ' → logprob: -13.398277282714844
    7. '               ' → logprob: -13.523277282714844
    8. ' ' → logprob: -13.648277282714844
    9. '```' → logprob: -13.648277282714844
    10. '	or' → logprob: -13.648277282714844

Token 653: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.011055956594645977
    2. ' dp' → logprob: -4.511055946350098
    3. '   ' → logprob: -12.886055946350098
    4. '(dp' → logprob: -13.011055946350098
    5. ' ' → logprob: -13.636055946350098
    6. '	dp' → logprob: -13.761055946350098
    7. '           ' → logprob: -15.011055946350098
    8. '
' → logprob: -15.886055946350098
    9. '  ' → logprob: -16.136056900024414
    10. '               ' → logprob: -16.261056900024414

Token 654: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -0.0028301996644586325
    2. 'key' → logprob: -5.8778300285339355
    3. '[' → logprob: -12.127830505371094
    4. 'KEY' → logprob: -12.502830505371094
    5. '
' → logprob: -12.627830505371094
    6. '2' → logprob: -12.627830505371094
    7. ' key' → logprob: -13.252830505371094
    8. 'new' → logprob: -13.252830505371094
    9. '[
' → logprob: -13.627830505371094
    10. 'keys' → logprob: -14.502830505371094

Token 655: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01119270734488964
    2. '[key' → logprob: -4.511192798614502
    3. 'key' → logprob: -8.886192321777344
    4. ' key' → logprob: -12.636192321777344
    5. '[' → logprob: -14.261192321777344
    6. '$key' → logprob: -14.386192321777344
    7. '[token' → logprob: -14.636192321777344
    8. '_key' → logprob: -14.636192321777344
    9. '
' → logprob: -15.261192321777344
    10. '(key' → logprob: -15.511192321777344

Token 656: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.317247167928144e-05
    2. '][' → logprob: -9.750093460083008
    3. '1' → logprob: -11.500093460083008
    4. ' [' → logprob: -11.625093460083008
    5. '[key' → logprob: -12.875093460083008
    6. ')[' → logprob: -13.000093460083008
    7. '[
' → logprob: -13.375093460083008
    8. '
' → logprob: -13.500093460083008
    9. '   ' → logprob: -13.500093460083008
    10. '```' → logprob: -13.500093460083008

Token 657: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018594805151224136
    2. 'key' → logprob: -4.143594741821289
    3. '[' → logprob: -6.143594741821289
    4. '[key' → logprob: -8.018594741821289
    5. '0' → logprob: -10.268594741821289
    6. 'new' → logprob: -11.268594741821289
    7. ' key' → logprob: -11.518594741821289
    8. '
' → logprob: -11.893594741821289
    9. ' ' → logprob: -12.518594741821289
    10. '(key' → logprob: -12.893594741821289

Token 658: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.32403963804244995
    2. '[' → logprob: -1.9490396976470947
    3. ' >' → logprob: -2.5740396976470947
    4. ']' → logprob: -3.1990396976470947
    5. '>' → logprob: -4.824039459228516
    6. '<' → logprob: -5.574039459228516
    7. '][' → logprob: -6.324039459228516
    8. '[key' → logprob: -6.324039459228516
    9. ']<' → logprob: -7.824039459228516
    10. '[
' → logprob: -8.199039459228516

Token 659: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.20147345960140228
    2. ' >' → logprob: -1.7014734745025635
    3. '[' → logprob: -10.076473236083984
    4. ' ' → logprob: -11.701473236083984
    5. '   ' → logprob: -12.826473236083984
    6. '  ' → logprob: -13.951473236083984
    7. '>
' → logprob: -14.326473236083984
    8. '>[' → logprob: -14.326473236083984
    9. '>#' → logprob: -14.451473236083984
    10. '```' → logprob: -14.576473236083984

Token 660: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.004620472434908152
    2. ' new' → logprob: -5.379620552062988
    3. '	new' → logprob: -16.004619598388672
    4. '[new' → logprob: -16.879619598388672
    5. 'dist' → logprob: -17.004619598388672
    6. '   ' → logprob: -17.254619598388672
    7. '_new' → logprob: -17.629619598388672
    8. '(new' → logprob: -17.754619598388672
    9. '```' → logprob: -18.004619598388672
    10. '
' → logprob: -18.004619598388672

Token 661: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.00024299313372466713
    2. 'dist' → logprob: -8.500243186950684
    3. '_c' → logprob: -10.625243186950684
    4. 'Dist' → logprob: -11.875243186950684
    5. '_time' → logprob: -12.500243186950684
    6. '_distance' → logprob: -13.625243186950684
    7. 'new' → logprob: -13.625243186950684
    8. 'time' → logprob: -14.625243186950684
    9. 'carry' → logprob: -14.875243186950684
    10. 'c' → logprob: -15.125243186950684

Token 662: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4897855222225189
    2. ':' → logprob: -0.9897855520248413
    3. '                   ' → logprob: -4.864785671234131
    4. '                       ' → logprob: -4.989785671234131
    5. '):
' → logprob: -7.739785671234131
    6. '               ' → logprob: -8.739785194396973
    7. '       ' → logprob: -10.114785194396973
    8. '=' → logprob: -10.364785194396973
    9. ' :
' → logprob: -10.364785194396973
    10. '():
' → logprob: -10.489785194396973

Token 663: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0004533142491709441
    2. '                   ' → logprob: -7.875453472137451
    3. ':
' → logprob: -11.000452995300293
    4. '                      ' → logprob: -11.250452995300293
    5. '               ' → logprob: -11.625452995300293
    6. '                           ' → logprob: -11.875452995300293
    7. 'heap' → logprob: -12.000452995300293
    8. ':' → logprob: -12.125452995300293
    9. '                        
' → logprob: -12.875452995300293
    10. ' heap' → logprob: -13.000452995300293

Token 664: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.10147590190172195
    2. ' heap' → logprob: -2.601475954055786
    3. '                       ' → logprob: -3.851475954055786
    4. '                           ' → logprob: -7.226475715637207
    5. '   ' → logprob: -8.476475715637207
    6. '                   ' → logprob: -9.351475715637207
    7. '           ' → logprob: -10.351475715637207
    8. '               ' → logprob: -11.101475715637207
    9. '```' → logprob: -12.476475715637207
    10. '       ' → logprob: -12.851475715637207

Token 665: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -5.512236498361744e-07
    2. 'h' → logprob: -15.875000953674316
    3. 'he' → logprob: -16.0
    4. 'app' → logprob: -16.25
    5. 'p' → logprob: -17.0
    6. 'push' → logprob: -17.0
    7. '[' → logprob: -17.5
    8. '.he' → logprob: -18.25
    9. 'qe' → logprob: -18.75
    10. '```' → logprob: -19.0

Token 666: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.004683476407080889
    2. 'he' → logprob: -5.504683494567871
    3. 'q' → logprob: -7.754683494567871
    4. 'push' → logprob: -9.754683494567871
    5. 'ush' → logprob: -9.879683494567871
    6. 'p' → logprob: -10.379683494567871
    7. '.push' → logprob: -11.629683494567871
    8. '.heap' → logprob: -11.629683494567871
    9. '```' → logprob: -12.629683494567871
    10. ' he' → logprob: -12.754683494567871

Token 667: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.08934006839990616
    2. 'pp' → logprob: -2.5893399715423584
    3. 'push' → logprob: -5.2143402099609375
    4. 'ush' → logprob: -5.3393402099609375
    5. 'p' → logprob: -9.339340209960938
    6. 'e' → logprob: -10.839340209960938
    7. 'he' → logprob: -11.089340209960938
    8. '```' → logprob: -11.714340209960938
    9. 'ap' → logprob: -12.589340209960938
    10. '[' → logprob: -12.589340209960938

Token 668: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.0007550701266154647
    2. 'push' → logprob: -7.5007548332214355
    3. 'app' → logprob: -8.625755310058594
    4. 'pp' → logprob: -11.875755310058594
    5. 'p' → logprob: -12.625755310058594
    6. 'op' → logprob: -12.750755310058594
    7. 'e' → logprob: -12.750755310058594
    8. 'he' → logprob: -13.625755310058594
    9. 'q' → logprob: -13.750755310058594
    10. '```' → logprob: -14.000755310058594

Token 669: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -8.73314929776825e-05
    2. '(' → logprob: -9.37508773803711
    3. '(
' → logprob: -14.12508773803711
    4. '(q' → logprob: -14.75008773803711
    5. ' (' → logprob: -15.00008773803711
    6. 'h' → logprob: -15.25008773803711
    7. '(heap' → logprob: -15.50008773803711
    8. '<|end|>' → logprob: -16.00008773803711
    9. '/h' → logprob: -16.25008773803711
    10. '```' → logprob: -16.62508773803711

Token 670: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -7.107425062713446e-06
    2. '(h' → logprob: -12.250006675720215
    3. 'hq' → logprob: -14.500006675720215
    4. 'qh' → logprob: -15.000006675720215
    5. '(q' → logprob: -15.125006675720215
    6. '(
' → logprob: -15.750006675720215
    7. '_q' → logprob: -16.12500762939453
    8. '```' → logprob: -16.12500762939453
    9. 'sq' → logprob: -16.25000762939453
    10. ')' → logprob: -16.75000762939453

Token 671: ',' (ID: 11)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.5832658410072327
    2. ',' → logprob: -0.8332658410072327
    3. ',h' → logprob: -5.583265781402588
    4. ',(' → logprob: -6.208265781402588
    5. '(' → logprob: -6.583265781402588
    6. '(
' → logprob: -9.708266258239746
    7. ',
' → logprob: -10.583266258239746
    8. '),' → logprob: -11.583266258239746
    9. ')' → logprob: -11.833266258239746
    10. '       ' → logprob: -12.083266258239746

Token 672: ' (' (ID: 350)
  Prédit: '(new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -0.0035738153383135796
    2. '(' → logprob: -5.753573894500732
    3. ' (' → logprob: -7.878573894500732
    4. '(h' → logprob: -11.753573417663574
    5. '((' → logprob: -12.378573417663574
    6. '   ' → logprob: -13.253573417663574
    7. '(New' → logprob: -13.878573417663574
    8. '(next' → logprob: -14.253573417663574
    9. ' ' → logprob: -15.378573417663574
    10. '[new' → logprob: -15.503573417663574

Token 673: 'new' (ID: 1389)
  Prédit: 'new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -4.842555426876061e-06
    2. ' new' → logprob: -12.250004768371582
    3. '   ' → logprob: -20.5000057220459
    4. '(new' → logprob: -20.6250057220459
    5. '	new' → logprob: -22.5000057220459
    6. '```' → logprob: -22.5000057220459
    7. '_new' → logprob: -23.1250057220459
    8. '
' → logprob: -23.2500057220459
    9. '[new' → logprob: -23.2500057220459
    10. ')new' → logprob: -23.7500057220459

Token 674: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -2.816093228830141e-06
    2. 'new' → logprob: -13.62500286102295
    3. 'dist' → logprob: -14.75000286102295
    4. '_c' → logprob: -15.00000286102295
    5. 'Dist' → logprob: -15.00000286102295
    6. '_new' → logprob: -16.000001907348633
    7. ' _' → logprob: -16.250001907348633
    8. ''_' → logprob: -16.375001907348633
    9. '_div' → logprob: -16.750001907348633
    10. '\' → logprob: -16.750001907348633

Token 675: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.6457742175552994e-05
    2. ',new' → logprob: -10.125056266784668
    3. ' ,' → logprob: -11.250056266784668
    4. '+' → logprob: -14.125056266784668
    5. 'new' → logprob: -14.250056266784668
    6. '   ' → logprob: -14.375056266784668
    7. ',
' → logprob: -15.000056266784668
    8. ',next' → logprob: -15.000056266784668
    9. '       ' → logprob: -15.500056266784668
    10. '           ' → logprob: -16.500057220458984

Token 676: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.029750604182481766
    2. ' new' → logprob: -3.5297505855560303
    3. '	new' → logprob: -17.02975082397461
    4. '_new' → logprob: -17.27975082397461
    5. ')new' → logprob: -18.40475082397461
    6. '$new' → logprob: -18.52975082397461
    7. 'New' → logprob: -18.65475082397461
    8. '   ' → logprob: -18.90475082397461
    9. '```' → logprob: -19.40475082397461
    10. '[new' → logprob: -19.52975082397461

Token 677: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -4.36574100604048e-06
    2. 'time' → logprob: -12.625004768371582
    3. '_dist' → logprob: -14.125004768371582
    4. '_t' → logprob: -17.000003814697266
    5. '"time' → logprob: -17.375003814697266
    6. '_' → logprob: -17.750003814697266
    7. 'Time' → logprob: -18.000003814697266
    8. 'dist' → logprob: -18.000003814697266
    9. '_times' → logprob: -18.500003814697266
    10. ' time' → logprob: -18.625003814697266

Token 678: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.676292231422849e-05
    2. ',key' → logprob: -11.500017166137695
    3. ' ,' → logprob: -12.000017166137695
    4. ',
' → logprob: -16.500017166137695
    5. ',new' → logprob: -16.750017166137695
    6. '           ' → logprob: -17.000017166137695
    7. ',next' → logprob: -17.000017166137695
    8. '```' → logprob: -17.250017166137695
    9. '   ' → logprob: -17.625017166137695
    10. ',index' → logprob: -17.750017166137695

Token 679: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.14575833082199097
    2. ' idx' → logprob: -2.5207583904266357
    3. 'key' → logprob: -3.2707583904266357
    4. ' key' → logprob: -4.395758152008057
    5. 'new' → logprob: -5.520758152008057
    6. ' new' → logprob: -7.145758152008057
    7. 'n' → logprob: -9.395758628845215
    8. '(idx' → logprob: -10.520758628845215
    9. ' ' → logprob: -12.270758628845215
    10. '   ' → logprob: -12.645758628845215

Token 680: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.38687339425086975
    2. ' +' → logprob: -1.1368733644485474
    3. '2' → logprob: -13.636873245239258
    4. '＋' → logprob: -14.636873245239258
    5. '1' → logprob: -15.011873245239258
    6. '+
' → logprob: -16.136873245239258
    7. ' ' → logprob: -16.386873245239258
    8. ')+' → logprob: -16.761873245239258
    9. '+,' → logprob: -17.261873245239258
    10. ',' → logprob: -17.511873245239258

Token 681: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9504606825648807e-05
    2. ' ' → logprob: -10.875019073486328
    3. '```' → logprob: -15.000019073486328
    4. '+' → logprob: -17.000019073486328
    5. '   ' → logprob: -17.250019073486328
    6. '2' → logprob: -17.500019073486328
    7. ',' → logprob: -17.750019073486328
    8. ')' → logprob: -18.375019073486328
    9. '``' → logprob: -18.562519073486328
    10. '`' → logprob: -18.750019073486328

Token 682: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.000000953674316
    3. '```' → logprob: -16.25
    4. '2' → logprob: -16.875
    5. '   ' → logprob: -18.3125
    6. 'new' → logprob: -18.9375
    7. '0' → logprob: -19.0
    8. '
' → logprob: -19.0625
    9. '``' → logprob: -19.25
    10. '+' → logprob: -19.625

Token 683: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017541198758408427
    2. ',p' → logprob: -8.750175476074219
    3. ' ,' → logprob: -11.125175476074219
    4. 'p' → logprob: -13.250175476074219
    5. '```' → logprob: -15.625175476074219
    6. ',
' → logprob: -15.875175476074219
    7. '),' → logprob: -17.12517547607422
    8. ')' → logprob: -18.00017547607422
    9. ' p' → logprob: -18.37517547607422
    10. '`,' → logprob: -18.50017547607422

Token 684: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0001234428636962548
    2. ' p' → logprob: -9.000123023986816
    3. '   ' → logprob: -19.250123977661133
    4. '<p' → logprob: -19.250123977661133
    5. ' ' → logprob: -19.625123977661133
    6. ')p' → logprob: -19.875123977661133
    7. '<|end|>' → logprob: -20.250123977661133
    8. '	p' → logprob: -20.375123977661133
    9. ')' → logprob: -21.000123977661133
    10. '_p' → logprob: -21.250123977661133

Token 685: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001265825005248189
    2. ',new' → logprob: -6.751266002655029
    3. ' ,' → logprob: -9.376265525817871
    4. 'new' → logprob: -11.501265525817871
    5. ' new' → logprob: -14.376265525817871
    6. ',
' → logprob: -17.251266479492188
    7. '(new' → logprob: -17.751266479492188
    8. '```' → logprob: -17.876266479492188
    9. ',n' → logprob: -18.001266479492188
    10. '),' → logprob: -18.001266479492188

Token 686: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0007100477814674377
    2. ' new' → logprob: -7.2507100105285645
    3. '	new' → logprob: -18.750709533691406
    4. '(new' → logprob: -19.125709533691406
    5. '   ' → logprob: -19.500709533691406
    6. ')new' → logprob: -19.500709533691406
    7. '```' → logprob: -19.625709533691406
    8. 'New' → logprob: -19.750709533691406
    9. '_new' → logprob: -19.750709533691406
    10. '$new' → logprob: -20.625709533691406

Token 687: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -2.935296834039036e-06
    2. 'carry' → logprob: -12.87500286102295
    3. '\' → logprob: -16.125003814697266
    4. 'new' → logprob: -17.625003814697266
    5. 'Carry' → logprob: -17.750003814697266
    6. '_' → logprob: -17.875003814697266
    7. '(c' → logprob: -18.000003814697266
    8. ')' → logprob: -18.250003814697266
    9. 'c' → logprob: -18.375003814697266
    10. '_dist' → logprob: -18.875003814697266

Token 688: 'arry' (ID: 20052)
  Prédit: 'arry'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arry' → logprob: -3.79811754100956e-05
    2. 'ar' → logprob: -11.375038146972656
    3. 'urry' → logprob: -12.125038146972656
    4. 'arr' → logprob: -12.125038146972656
    5. 'arring' → logprob: -12.375038146972656
    6. 'carry' → logprob: -12.375038146972656
    7. 'rr' → logprob: -12.750038146972656
    8. 'ary' → logprob: -13.250038146972656
    9. 'ARRY' → logprob: -14.500038146972656
    10. 'erry' → logprob: -15.125038146972656

Token 689: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -4.8351892473874614e-05
    2. '))
' → logprob: -10.750048637390137
    3. ')' → logprob: -10.875048637390137
    4. ')))' → logprob: -13.000048637390137
    5. '               ' → logprob: -13.125048637390137
    6. '                   ' → logprob: -13.375048637390137
    7. '           ' → logprob: -13.875048637390137
    8. ' ))' → logprob: -14.625048637390137
    9. '       ' → logprob: -15.125048637390137
    10. '   ' → logprob: -15.250048637390137

Token 690: '               ' (ID: 506)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1874072253704071
    2. '<|end|>' → logprob: -2.0624072551727295
    3. '       ' → logprob: -3.6874072551727295
    4. '```' → logprob: -5.06240701675415
    5. '   ' → logprob: -5.56240701675415
    6. '               ' → logprob: -6.18740701675415
    7. '           ' → logprob: -6.56240701675415
    8. 'else' → logprob: -7.18740701675415
    9. '<|end|>' → logprob: -7.18740701675415
    10. '                   ' → logprob: -7.31240701675415

Token 691: ' else' (ID: 1203)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 692: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.26303744316101074
    2. ':
' → logprob: -2.2630374431610107
    3. ':' → logprob: -2.8880374431610107
    4. '               ' → logprob: -2.8880374431610107
    5. '           ' → logprob: -4.76303768157959
    6. '#' → logprob: -5.76303768157959
    7. '   ' → logprob: -7.26303768157959
    8. '                       ' → logprob: -7.38803768157959
    9. ' if' → logprob: -7.63803768157959
    10. '```' → logprob: -7.88803768157959

Token 693: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.14100004732608795
    2. 'pass' → logprob: -2.7660000324249268
    3. '#' → logprob: -3.2660000324249268
    4. '               ' → logprob: -4.391000270843506
    5. ' pass' → logprob: -5.016000270843506
    6. '                       ' → logprob: -5.391000270843506
    7. ' #' → logprob: -6.141000270843506
    8. '   ' → logprob: -6.766000270843506
    9. 'continue' → logprob: -6.766000270843506
    10. '```' → logprob: -7.266000270843506

Token 694: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.14523053169250488
    2. 'pass' → logprob: -2.520230531692505
    3. 'new' → logprob: -3.895230531692505
    4. '                   ' → logprob: -4.395230293273926
    5. ' #' → logprob: -5.020230293273926
    6. 'if' → logprob: -5.270230293273926
    7. '               ' → logprob: -6.020230293273926
    8. 'for' → logprob: -6.020230293273926
    9. ' pass' → logprob: -6.520230293273926
    10. 'travel' → logprob: -6.520230293273926

Token 695: ' cannot' (ID: 6284)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.07708993554115295
    2. 'pass' → logprob: -2.95209002494812
    3. ' #' → logprob: -5.202089786529541
    4. 'new' → logprob: -5.202089786529541
    5. 'if' → logprob: -5.827089786529541
    6. 'for' → logprob: -6.327089786529541
    7. ' pass' → logprob: -6.702089786529541
    8. '                   ' → logprob: -6.827089786529541
    9. 'travel' → logprob: -6.952089786529541
    10. '               ' → logprob: -7.202089786529541

Token 696: ' catch' (ID: 3494)
  Prédit: 'carry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'carry' → logprob: -0.6902832984924316
    2. 'catch' → logprob: -1.0652832984924316
    3. 'pick' → logprob: -2.6902832984924316
    4. 'go' → logprob: -3.1902832984924316
    5. ' pick' → logprob: -4.065283298492432
    6. ' catch' → logprob: -5.190283298492432
    7. 'move' → logprob: -5.440283298492432
    8. ' carry' → logprob: -5.565283298492432
    9. ' go' → logprob: -5.940283298492432
    10. 'pass' → logprob: -6.190283298492432

Token 697: ' balloon' (ID: 63124)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.32798194885253906
    2. 'next' → logprob: -1.702981948852539
    3. ' (' → logprob: -3.452981948852539
    4. 'ball' → logprob: -4.577981948852539
    5. '(next' → logprob: -4.702981948852539
    6. '#' → logprob: -5.077981948852539
    7. 'pass' → logprob: -5.202981948852539
    8. ' #' → logprob: -5.577981948852539
    9. '(' → logprob: -5.702981948852539
    10. ' the' → logprob: -5.702981948852539

Token 698: ' now' (ID: 1954)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.40992775559425354
    2. ',' → logprob: -1.6599277257919312
    3. ':' → logprob: -3.2849278450012207
    4. '               ' → logprob: -3.4099278450012207
    5. '                       ' → logprob: -3.9099278450012207
    6. ' because' → logprob: -3.9099278450012207
    7. ' if' → logprob: -4.909927845001221
    8. ' and' → logprob: -5.159927845001221
    9. '           ' → logprob: -5.659927845001221
    10. ' (' → logprob: -6.034927845001221

Token 699: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1148185729980469
    2. ':' → logprob: -1.2398185729980469
    3. '                   ' → logprob: -1.2398185729980469
    4. ':
' → logprob: -2.864818572998047
    5. ' and' → logprob: -4.614818572998047
    6. '                       ' → logprob: -4.614818572998047
    7. ')' → logprob: -5.739818572998047
    8. '               ' → logprob: -5.989818572998047
    9. '                           ' → logprob: -6.614818572998047
    10. '   ' → logprob: -6.864818572998047

Token 700: ' must' (ID: 2804)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.27940359711647034
    2. '                   ' → logprob: -2.2794036865234375
    3. ' #' → logprob: -3.1544036865234375
    4. 'pass' → logprob: -3.1544036865234375
    5. ' pass' → logprob: -3.2794036865234375
    6. 'new' → logprob: -5.2794036865234375
    7. ' new' → logprob: -5.6544036865234375
    8. ' travel' → logprob: -5.7794036865234375
    9. '   ' → logprob: -6.1544036865234375
    10. '               ' → logprob: -6.6544036865234375

Token 701: ' drop' (ID: 9440)
  Prédit: 'go'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'go' → logprob: -0.45781925320625305
    2. 'drop' → logprob: -1.3328192234039307
    3. 'first' → logprob: -3.2078192234039307
    4. 'return' → logprob: -4.20781946182251
    5. 'move' → logprob: -4.33281946182251
    6. ' go' → logprob: -4.45781946182251
    7. ' first' → logprob: -4.95781946182251
    8. 'deliver' → logprob: -4.95781946182251
    9. ' drop' → logprob: -5.08281946182251
    10. ' return' → logprob: -7.45781946182251

Token 702: ' first' (ID: 1577)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.33901238441467285
    2. 'car' → logprob: -1.7140123844146729
    3. ' all' → logprob: -2.839012384414673
    4. 'off' → logprob: -3.464012384414673
    5. ' carrying' → logprob: -5.089012145996094
    6. ' off' → logprob: -5.589012145996094
    7. 'at' → logprob: -6.714012145996094
    8. ' at' → logprob: -6.839012145996094
    9. 'offs' → logprob: -7.089012145996094
    10. 'it' → logprob: -7.214012145996094

Token 703: ' (' (ID: 350)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.039156679064035416
    2. ')' → logprob: -4.789156913757324
    3. '               ' → logprob: -4.789156913757324
    4. '                       ' → logprob: -5.414156913757324
    5. ',' → logprob: -5.664156913757324
    6. '                    
' → logprob: -5.664156913757324
    7. '
' → logprob: -6.289156913757324
    8. ':
' → logprob: -7.039156913757324
    9. ':' → logprob: -7.164156913757324
    10. '.' → logprob: -7.414156913757324

Token 704: 'already' (ID: 89136)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05312410369515419
    2. ')
' → logprob: -3.428124189376831
    3. 'new' → logprob: -4.678123950958252
    4. 'if' → logprob: -6.303123950958252
    5. '                   ' → logprob: -6.678123950958252
    6. ' new' → logprob: -6.678123950958252
    7. '                       ' → logprob: -6.928123950958252
    8. '                           ' → logprob: -7.428123950958252
    9. ' ' → logprob: -7.553123950958252
    10. '")' → logprob: -7.803123950958252

Token 705: ' covered' (ID: 13083)
  Prédit: 'handled'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'handled' → logprob: -1.2845736742019653
    2. 'consider' → logprob: -1.4095736742019653
    3. 'covered' → logprob: -1.6595736742019653
    4. 'continue' → logprob: -2.784573554992676
    5. 'in' → logprob: -3.159573554992676
    6. 'done' → logprob: -3.284573554992676
    7. 'checked' → logprob: -3.409573554992676
    8. ')' → logprob: -3.409573554992676
    9. 'p' → logprob: -4.409573554992676
    10. 'expl' → logprob: -4.659573554992676

Token 706: ' with' (ID: 483)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.161692813038826
    2. ' by' → logprob: -2.6616928577423096
    3. 'in' → logprob: -3.4116928577423096
    4. 'by' → logprob: -3.5366928577423096
    5. ' in' → logprob: -4.7866926193237305
    6. ' above' → logprob: -5.7866926193237305
    7. 'above' → logprob: -6.1616926193237305
    8. ')
' → logprob: -6.2866926193237305
    9. 'else' → logprob: -6.6616926193237305
    10. '),' → logprob: -8.53669261932373

Token 707: ' option' (ID: 5317)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.2511399984359741
    2. 'Option' → logprob: -1.3761399984359741
    3. 'if' → logprob: -1.5011399984359741
    4. 'option' → logprob: -2.1261401176452637
    5. 'car' → logprob: -2.8761401176452637
    6. 'len' → logprob: -3.5011401176452637
    7. 'going' → logprob: -5.126140117645264
    8. 'house' → logprob: -5.126140117645264
    9. '#' → logprob: -5.876140117645264
    10. 'carry' → logprob: -5.876140117645264

Token 708: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5793556571006775
    2. ' ' → logprob: -0.8293556571006775
    3. '2' → logprob: -5.704355716705322
    4. ' #' → logprob: -10.954355239868164
    5. '0' → logprob: -11.079355239868164
    6. '=' → logprob: -11.454355239868164
    7. '   ' → logprob: -11.579355239868164
    8. '```' → logprob: -11.829355239868164
    9. ')' → logprob: -12.329355239868164
    10. '#' → logprob: -12.829355239868164

Token 709: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00022296691895462573
    2. '0' → logprob: -9.000223159790039
    3. ' ' → logprob: -9.250223159790039
    4. '2' → logprob: -13.500223159790039
    5. '#' → logprob: -14.250223159790039
    6. '```' → logprob: -14.250223159790039
    7. '
' → logprob: -15.750223159790039
    8. ' #' → logprob: -15.875223159790039
    9. ')' → logprob: -16.25022315979004
    10. '   ' → logprob: -16.50022315979004

Token 710: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.620622712536715e-05
    2. ')
' → logprob: -10.250045776367188
    3. ' )' → logprob: -12.250045776367188
    4. '))' → logprob: -13.000045776367188
    5. '")' → logprob: -14.125045776367188
    6. '           ' → logprob: -14.375045776367188
    7. '               ' → logprob: -14.500045776367188
    8. ')")' → logprob: -14.625045776367188
    9. '),' → logprob: -15.500045776367188
    10. '       ' → logprob: -15.625045776367188

Token 711: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.0958291292190552
    2. '                   ' → logprob: -1.0958291292190552
    3. ')' → logprob: -2.4708290100097656
    4. '           ' → logprob: -2.5958290100097656
    5. 'continue' → logprob: -2.8458290100097656
    6. ' continue' → logprob: -3.3458290100097656
    7. '\n' → logprob: -3.5958290100097656
    8. '<|end|>' → logprob: -4.345829010009766
    9. '       ' → logprob: -4.720829010009766
    10. '                       ' → logprob: -4.970829010009766

Token 712: ' pass' (ID: 1853)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' (adapté à ' pass') → logprob: -0.005177662707865238
    2. ' pass' → logprob: -5.7551774978637695
    3. 'continue' → logprob: -6.2551774978637695
    4. '                   ' → logprob: -9.75517749786377
    5. '   ' → logprob: -11.63017749786377
    6. '               ' → logprob: -12.13017749786377
    7. ' continue' → logprob: -12.38017749786377
    8. '                       ' → logprob: -14.75517749786377
    9. '           ' → logprob: -15.13017749786377
    10. '	pass' → logprob: -15.75517749786377

Token 713: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 714: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 715: ' else' (ID: 1203)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 716: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07803773134946823
    2. ':
' → logprob: -2.953037738800049
    3. ':' → logprob: -3.953037738800049
    4. '           ' → logprob: -6.328037738800049
    5. '                   ' → logprob: -7.203037738800049
    6. ' continue' → logprob: -7.578037738800049
    7. 'continue' → logprob: -8.45303726196289
    8. '                       ' → logprob: -9.82803726196289
    9. '                ' → logprob: -10.07803726196289
    10. ':return' → logprob: -10.07803726196289

Token 717: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12792426347732544
    2. '#' → logprob: -2.5029242038726807
    3. 'continue' → logprob: -3.8779242038726807
    4. '                   ' → logprob: -4.87792444229126
    5. ' continue' → logprob: -5.62792444229126
    6. ' #' → logprob: -6.12792444229126
    7. 'pass' → logprob: -6.12792444229126
    8. ' pass' → logprob: -7.25292444229126
    9. '           ' → logprob: -7.50292444229126
    10. '                       ' → logprob: -8.002923965454102

Token 718: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.5449381470680237
    2. 'pass' → logprob: -1.544938087463379
    3. 'continue' → logprob: -1.794938087463379
    4. '               ' → logprob: -3.419938087463379
    5. '                   ' → logprob: -5.544938087463379
    6. 'break' → logprob: -6.044938087463379
    7. '           ' → logprob: -7.794938087463379
    8. 'return' → logprob: -8.169938087463379
    9. ' pass' → logprob: -8.294938087463379
    10. '   ' → logprob: -8.419938087463379

Token 719: ' cannot' (ID: 6284)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3442499339580536
    2. 'continue' → logprob: -1.594249963760376
    3. 'pass' → logprob: -2.469249963760376
    4. '               ' → logprob: -6.344249725341797
    5. ' #' → logprob: -7.219249725341797
    6. ' continue' → logprob: -7.594249725341797
    7. ' pass' → logprob: -8.469249725341797
    8. '                   ' → logprob: -8.594249725341797
    9. 'break' → logprob: -9.969249725341797
    10. '   ' → logprob: -10.094249725341797

Token 720: ' reach' (ID: 7627)
  Prédit: 'catch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'catch' → logprob: -0.02701066993176937
    2. ' catch' → logprob: -3.777010679244995
    3. 'arr' → logprob: -5.777010440826416
    4. 'continue' → logprob: -7.527010440826416
    5. 'reach' → logprob: -10.777010917663574
    6. 'return' → logprob: -10.902010917663574
    7. 'wait' → logprob: -11.152010917663574
    8. 'move' → logprob: -11.277010917663574
    9. 'pass' → logprob: -11.527010917663574
    10. ' continue' → logprob: -11.527010917663574

Token 721: ' balloon' (ID: 63124)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5586882829666138
    2. ' balloon' → logprob: -2.058688163757324
    3. ' next' → logprob: -2.183688163757324
    4. 'in' → logprob: -2.558688163757324
    5. 'ball' → logprob: -3.058688163757324
    6. ' on' → logprob: -3.808688163757324
    7. ' the' → logprob: -4.183688163757324
    8. 'the' → logprob: -4.933688163757324
    9. 'next' → logprob: -5.933688163757324
    10. 'on' → logprob: -6.183688163757324

Token 722: ' in' (ID: 306)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.3589190244674683
    2. 'now' → logprob: -1.3589190244674683
    3. ',' → logprob: -1.9839190244674683
    4. ' now' → logprob: -2.108919143676758
    5. '           ' → logprob: -2.983919143676758
    6. 'before' → logprob: -3.108919143676758
    7. '                   ' → logprob: -3.233919143676758
    8. ' before' → logprob: -3.608919143676758
    9. ' or' → logprob: -5.108919143676758
    10. ' in' → logprob: -5.233919143676758

Token 723: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -4.4060561776859686e-05
    2. ' time' → logprob: -10.375043869018555
    3. 't' → logprob: -11.375043869018555
    4. 'Time' → logprob: -15.875043869018555
    5. 'tim' → logprob: -16.000043869018555
    6. 'required' → logprob: -16.000043869018555
    7. '-time' → logprob: -16.125043869018555
    8. '
' → logprob: -16.375043869018555
    9. 'current' → logprob: -16.500043869018555
    10. '```' → logprob: -16.500043869018555

Token 724: ' ->' (ID: 2747)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0039316448383033276
    2. '           ' → logprob: -6.378931522369385
    3. ' continue' → logprob: -6.628931522369385
    4. 'continue' → logprob: -7.878931522369385
    5. ',' → logprob: -8.128931999206543
    6. '                   ' → logprob: -8.503931999206543
    7. '       ' → logprob: -11.878931999206543
    8. '
' → logprob: -12.753931999206543
    9. '   ' → logprob: -13.128931999206543
    10. '                       ' → logprob: -13.253931999206543

Token 725: ' NG' (ID: 35152)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.13424870371818542
    2. 'pass' → logprob: -2.759248733520508
    3. ' continue' → logprob: -3.134248733520508
    4. '#' → logprob: -4.634248733520508
    5. ' pass' → logprob: -5.634248733520508
    6. '               ' → logprob: -5.634248733520508
    7. 'break' → logprob: -6.509248733520508
    8. ' #' → logprob: -8.384248733520508
    9. '                   ' → logprob: -9.384248733520508
    10. 'return' → logprob: -10.509248733520508

Token 726: ' idx' (ID: 14016)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02286209724843502
    2. '           ' → logprob: -4.147861957550049
    3. '<|end|>' → logprob: -6.022861957550049
    4. 'return' → logprob: -6.147861957550049
    5. ' return' → logprob: -7.397861957550049
    6. ',' → logprob: -7.522861957550049
    7. '                   ' → logprob: -8.022862434387207
    8. '
' → logprob: -8.272862434387207
    9. '       ' → logprob: -8.897862434387207
    10. '<|end|>' → logprob: -9.397862434387207

Token 727: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3859289884567261
    2. '               ' → logprob: -1.885928988456726
    3. '\n' → logprob: -3.1359291076660156
    4. 'return' → logprob: -3.6359291076660156
    5. ' return' → logprob: -4.010929107666016
    6. '           ' → logprob: -4.135929107666016
    7. ' ,' → logprob: -4.760929107666016
    8. '",' → logprob: -4.885929107666016
    9. '"\' → logprob: -5.010929107666016
    10. ',
' → logprob: -5.010929107666016

Token 728: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03588441386818886
    2. '+' → logprob: -3.410884380340576
    3. ' ' → logprob: -6.160884380340576
    4. ' +' → logprob: -9.285884857177734
    5. '```' → logprob: -11.660884857177734
    6. '<|end|>' → logprob: -12.410884857177734
    7. ',' → logprob: -12.660884857177734
    8. '2' → logprob: -13.160884857177734
    9. '++' → logprob: -13.285884857177734
    10. '   ' → logprob: -13.285884857177734

Token 729: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7043880224227905
    2. ',' → logprob: -0.8293880224227905
    3. '           ' → logprob: -3.07938814163208
    4. '                   ' → logprob: -4.82938814163208
    5. ')' → logprob: -5.95438814163208
    6. '                       ' → logprob: -5.95438814163208
    7. 'return' → logprob: -6.20438814163208
    8. '),' → logprob: -6.45438814163208
    9. '                           ' → logprob: -6.45438814163208
    10. ' ,' → logprob: -6.82938814163208

Token 730: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.24309490621089935
    2. '           ' → logprob: -1.7430949211120605
    3. ' return' → logprob: -4.1180949211120605
    4. 'return' → logprob: -4.3680949211120605
    5. ',' → logprob: -4.6180949211120605
    6. '       ' → logprob: -6.6180949211120605
    7. '                   ' → logprob: -8.243094444274902
    8. ' ,' → logprob: -8.743094444274902
    9. '   ' → logprob: -9.243094444274902
    10. '<|end|>' → logprob: -10.618094444274902

Token 731: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03373733162879944
    2. ' return' → logprob: -3.4087374210357666
    3. '               ' → logprob: -9.783737182617188
    4. '                   ' → logprob: -10.533737182617188
    5. '   ' → logprob: -13.283737182617188
    6. 'print' → logprob: -13.283737182617188
    7. '           ' → logprob: -13.283737182617188
    8. '       ' → logprob: -14.158737182617188
    9. 'if' → logprob: -14.658737182617188
    10. '                       ' → logprob: -14.783737182617188

Token 732: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.07369020581245422
    2. ' "' → logprob: -3.323690176010132
    3. '("' → logprob: -3.823690176010132
    4. ' f' → logprob: -5.198690414428711
    5. 'f' → logprob: -5.698690414428711
    6. ' ("' → logprob: -6.573690414428711
    7. ' idx' → logprob: -7.073690414428711
    8. '(idx' → logprob: -7.198690414428711
    9. 'idx' → logprob: -7.323690414428711
    10. ''' → logprob: -8.698690414428711

Token 733: 'NG' (ID: 19236)
  Prédit: 'NG'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NG' → logprob: -0.2613833248615265
    2. '"' → logprob: -1.511383295059204
    3. 'f' → logprob: -5.511383533477783
    4. ' NG' → logprob: -5.886383533477783
    5. ''' → logprob: -7.011383533477783
    6. ' f' → logprob: -7.636383533477783
    7. '"N' → logprob: -7.636383533477783
    8. ' "' → logprob: -8.011383056640625
    9. ' ' → logprob: -9.386383056640625
    10. 'NO' → logprob: -9.761383056640625

Token 734: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.0020293963607400656
    2. ' ",' → logprob: -6.6270294189453125
    3. '",(' → logprob: -7.6270294189453125
    4. '"' → logprob: -9.002029418945312
    5. ',",' → logprob: -10.752029418945312
    6. ',' → logprob: -10.877029418945312
    7. '',' → logprob: -11.252029418945312
    8. '",{' → logprob: -11.752029418945312
    9. '",&' → logprob: -12.002029418945312
    10. '","' → logprob: -12.127029418945312

Token 735: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.006726264487951994
    2. ' idx' → logprob: -5.006726264953613
    3. '(idx' → logprob: -12.381726264953613
    4. 't' → logprob: -12.506726264953613
    5. 'str' → logprob: -12.881726264953613
    6. 'index' → logprob: -15.881726264953613
    7. '	idx' → logprob: -16.006725311279297
    8. '[idx' → logprob: -16.631725311279297
    9. '.idx' → logprob: -16.756725311279297
    10. ' t' → logprob: -16.756725311279297

Token 736: ' +' (ID: 659)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22115226089954376
    2. '<|end|>' → logprob: -1.7211523056030273
    3. 'return' → logprob: -5.096152305603027
    4. '#' → logprob: -5.471152305603027
    5. 'import' → logprob: -6.096152305603027
    6. '...' → logprob: -6.471152305603027
    7. '```' → logprob: -6.846152305603027
    8. 'print' → logprob: -7.096152305603027
    9. '<|end|>' → logprob: -7.346152305603027
    10. '       ' → logprob: -7.596152305603027

Token 737: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '2' → logprob: -16.750009536743164
    4. '0' → logprob: -18.000009536743164
    5. '```' → logprob: -18.125009536743164
    6. '
' → logprob: -20.062509536743164
    7. '<|end|>' → logprob: -20.625009536743164
    8. '`' → logprob: -20.625009536743164
    9. '１' → logprob: -20.687509536743164
    10. '+' → logprob: -20.750009536743164

Token 738: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '```' → logprob: -18.125
    4. '0' → logprob: -18.875
    5. '2' → logprob: -19.0
    6. '`' → logprob: -20.875
    7. '   ' → logprob: -21.5
    8. '<|end|>' → logprob: -21.75
    9. '``' → logprob: -21.8125
    10. '１' → logprob: -21.875

Token 739: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 740: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 741: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -3.547789674485102e-05
    2. ' return' → logprob: -10.375035285949707
    3. '   ' → logprob: -13.375035285949707
    4. '"' → logprob: -14.125035285949707
    5. '#' (adapté à ' #') → logprob: -14.625035285949707
    6. 'raise' → logprob: -14.625035285949707
    7. '	return' → logprob: -15.000035285949707
    8. '("' → logprob: -15.250035285949707
    9. '```' → logprob: -15.250035285949707
    10. 'None' → logprob: -15.375035285949707

Token 742: ' If' (ID: 1843)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -2.8087270038668066e-05
    2. '   ' → logprob: -11.250027656555176
    3. ' return' → logprob: -11.375027656555176
    4. '"' → logprob: -12.875027656555176
    5. 'raise' → logprob: -14.000027656555176
    6. '	return' → logprob: -16.250028610229492
    7. '#' → logprob: -16.750028610229492
    8. '       ' → logprob: -17.625028610229492
    9. '```' → logprob: -18.375028610229492
    10. 'None' → logprob: -19.875028610229492

Token 743: ' queue' (ID: 13661)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.11403875797986984
    2. '"' → logprob: -3.1140387058258057
    3. 'return' → logprob: -3.1140387058258057
    4. '   ' → logprob: -4.739038944244385
    5. ' ("' → logprob: -4.864038944244385
    6. 'None' → logprob: -7.614038944244385
    7. '(' → logprob: -7.739038944244385
    8. 'def' → logprob: -7.864038944244385
    9. ' return' → logprob: -7.864038944244385
    10. '
' → logprob: -8.739038467407227

Token 744: ' exhausted' (ID: 66203)
  Prédit: 'empty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'empty' → logprob: -0.09130199998617172
    2. 'is' → logprob: -3.091301918029785
    3. '   ' → logprob: -4.341301918029785
    4. ':' → logprob: -5.216301918029785
    5. ':
' → logprob: -5.466301918029785
    6. ' exhausted' → logprob: -5.966301918029785
    7. 'empt' → logprob: -5.966301918029785
    8. '==' → logprob: -6.216301918029785
    9. '```' → logprob: -6.341301918029785
    10. 'ex' → logprob: -6.466301918029785

Token 745: ' without' (ID: 2935)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01681300811469555
    2. 'return' → logprob: -4.141812801361084
    3. ' return' → logprob: -7.266812801361084
    4. ',' → logprob: -10.266813278198242
    5. '	return' → logprob: -10.641813278198242
    6. '       ' → logprob: -11.516813278198242
    7. '
' → logprob: -12.266813278198242
    8. '(' → logprob: -13.766813278198242
    9. ' ' → logprob: -13.891813278198242
    10. '("' → logprob: -14.016813278198242

Token 746: ' returning' (ID: 22968)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -5.1928003813372925e-05
    2. ' return' → logprob: -10.125051498413086
    3. 'finding' → logprob: -11.875051498413086
    4. 'result' → logprob: -13.500051498413086
    5. 'success' → logprob: -13.875051498413086
    6. 'answer' → logprob: -14.000051498413086
    7. ' returning' → logprob: -14.000051498413086
    8. 're' → logprob: -15.250051498413086
    9. '{return' → logprob: -15.875051498413086
    10. 'completion' → logprob: -16.250051498413086

Token 747: ' OK' (ID: 11339)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2873364984989166
    2. 'return' → logprob: -1.9123364686965942
    3. '"' → logprob: -2.412336587905884
    4. ' return' → logprob: -4.787336349487305
    5. ',' → logprob: -5.912336349487305
    6. ' "' → logprob: -7.412336349487305
    7. '("' → logprob: -8.037336349487305
    8. '       ' → logprob: -8.162336349487305
    9. ' ("' → logprob: -10.162336349487305
    10. '  ' → logprob: -10.787336349487305

Token 748: ' or' (ID: 503)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007881415076553822
    2. 'return' → logprob: -5.2578816413879395
    3. ':
' → logprob: -6.8828816413879395
    4. ',' → logprob: -7.0078816413879395
    5. ' return' → logprob: -8.132881164550781
    6. ':' → logprob: -8.257881164550781
    7. ':return' → logprob: -9.132881164550781
    8. '       ' → logprob: -10.632881164550781
    9. '	return' → logprob: -11.382881164550781
    10. '):
' → logprob: -11.632881164550781

Token 749: ' NG' (ID: 35152)
  Prédit: 'NG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'NG' → logprob: -0.7875007390975952
    2. '("' → logprob: -0.9125007390975952
    3. '"' → logprob: -2.0375008583068848
    4. 'return' → logprob: -4.787500858306885
    5. ' ' → logprob: -6.662500858306885
    6. '   ' → logprob: -7.037500858306885
    7. '('' → logprob: -7.162500858306885
    8. ' ("' → logprob: -7.287500858306885
    9. '
' → logprob: -8.287500381469727
    10. '(N' → logprob: -8.787500381469727

Token 750: ' during' (ID: 3354)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.325792521238327
    2. '   ' → logprob: -2.2007925510406494
    3. 'return' → logprob: -2.8257925510406494
    4. ',' → logprob: -2.9507925510406494
    5. ':' → logprob: -2.9507925510406494
    6. ' return' → logprob: -6.07579231262207
    7. ':return' → logprob: -7.07579231262207
    8. '):
' → logprob: -9.70079231262207
    9. '       ' → logprob: -9.70079231262207
    10. '():
' → logprob: -10.20079231262207

Token 751: ' iteration' (ID: 43155)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.7237927317619324
    2. 'the' → logprob: -1.3487927913665771
    3. 'loop' → logprob: -2.348792791366577
    4. 'ball' → logprob: -2.723792791366577
    5. 'processing' → logprob: -2.973792791366577
    6. 'solve' → logprob: -4.348792552947998
    7. 'iteration' → logprob: -4.848792552947998
    8. 'expl' → logprob: -5.223792552947998
    9. 'search' → logprob: -5.223792552947998
    10. 'for' → logprob: -5.848792552947998

Token 752: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008626393973827362
    2. 'return' → logprob: -5.258626461029053
    3. ',' → logprob: -6.258626461029053
    4. ' return' → logprob: -7.008626461029053
    5. ':
' → logprob: -8.133625984191895
    6. ':' → logprob: -8.633625984191895
    7. ':return' → logprob: -9.508625984191895
    8. '	return' → logprob: -12.008625984191895
    9. ',
' → logprob: -12.383625984191895
    10. '       ' → logprob: -12.383625984191895

Token 753: ' means' (ID: 4748)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -9.29340603761375e-05
    2. '   ' → logprob: -9.500092506408691
    3. ' return' → logprob: -11.250092506408691
    4. '       ' → logprob: -12.250092506408691
    5. '```' → logprob: -15.750092506408691
    6. '	return' → logprob: -16.125093460083008
    7. '           ' → logprob: -17.500093460083008
    8. '
' → logprob: -19.125093460083008
    9. '``' → logprob: -19.625093460083008
    10. 'raise' → logprob: -19.750093460083008

Token 754: ' NG' (ID: 35152)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.10162785649299622
    2. '"' → logprob: -2.851627826690674
    3. '   ' → logprob: -3.351627826690674
    4. ' return' → logprob: -5.601627826690674
    5. '       ' → logprob: -9.976628303527832
    6. '("' → logprob: -9.976628303527832
    7. ' "' → logprob: -11.101628303527832
    8. 'None' → logprob: -11.226628303527832
    9. '"No' → logprob: -11.976628303527832
    10. ' ' → logprob: -12.351628303527832

Token 755: ' earliest' (ID: 48721)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005385180003941059
    2. ' ,' → logprob: -5.755385398864746
    3. '   ' → logprob: -6.880385398864746
    4. ' return' → logprob: -7.630385398864746
    5. 'return' → logprob: -8.630385398864746
    6. ',"' → logprob: -8.880385398864746
    7. '"' → logprob: -9.505385398864746
    8. '",' → logprob: -9.630385398864746
    9. ',
' → logprob: -10.130385398864746
    10. ' ' → logprob: -10.380385398864746

Token 756: ' balloon' (ID: 63124)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7435913681983948
    2. '   ' → logprob: -1.24359130859375
    3. ' return' → logprob: -1.86859130859375
    4. 'return' → logprob: -2.61859130859375
    5. ' ,' → logprob: -6.36859130859375
    6. '",' → logprob: -6.61859130859375
    7. ' ' → logprob: -6.61859130859375
    8. '       ' → logprob: -6.86859130859375
    9. ' ("' → logprob: -7.36859130859375
    10. '_,' → logprob: -7.49359130859375

Token 757: ' not' (ID: 625)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.84731125831604
    2. 'return' → logprob: -0.84731125831604
    3. '   ' → logprob: -1.97231125831604
    4. '	return' → logprob: -6.972311019897461
    5. '("' → logprob: -7.222311019897461
    6. ',' → logprob: -7.347311019897461
    7. '
' → logprob: -8.347311019897461
    8. '<|end|>' → logprob: -8.347311019897461
    9. ' ("' → logprob: -8.472311019897461
    10. '       ' → logprob: -8.722311019897461

Token 758: ' caught' (ID: 18341)
  Prédit: 'caught'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'caught' → logprob: -0.0029063932597637177
    2. 'reachable' → logprob: -7.002906322479248
    3. ' caught' → logprob: -7.127906322479248
    4. 'catch' → logprob: -7.752906322479248
    5. 'c' → logprob: -8.377906799316406
    6. 'found' → logprob: -8.627906799316406
    7. 're' → logprob: -9.502906799316406
    8. 'del' → logprob: -10.002906799316406
    9. '=' → logprob: -10.002906799316406
    10. '1' → logprob: -10.502906799316406

Token 759: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.785371720790863
    2. 'return' → logprob: -1.1603717803955078
    3. ',' → logprob: -2.160371780395508
    4. ' return' → logprob: -2.285371780395508
    5. '("' → logprob: -4.910371780395508
    6. ' ("' → logprob: -6.160371780395508
    7. '"' → logprob: -7.035371780395508
    8. '",' → logprob: -7.285371780395508
    9. '       ' → logprob: -7.535371780395508
    10. '("",' → logprob: -8.160371780395508

Token 760: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3369824290275574
    2. ' return' → logprob: -1.3369824886322021
    3. '   ' → logprob: -3.836982488632202
    4. '	return' → logprob: -7.711982250213623
    5. ',' → logprob: -7.836982250213623
    6. '("' → logprob: -7.961982250213623
    7. '<|end|>' → logprob: -8.586982727050781
    8. '       ' → logprob: -8.961982727050781
    9. '(None' → logprob: -9.586982727050781
    10. '...' → logprob: -9.586982727050781

Token 761: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.025096019729971886
    2. '   ' → logprob: -4.2750959396362305
    3. ' return' → logprob: -4.5250959396362305
    4. '```' → logprob: -11.15009593963623
    5. '	return' → logprob: -11.52509593963623
    6. '("' → logprob: -12.02509593963623
    7. '       ' → logprob: -12.40009593963623
    8. '(return' → logprob: -14.15009593963623
    9. ',' → logprob: -14.27509593963623
    10. '
' → logprob: -14.65009593963623

Token 762: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.10132640600204468
    2. ' "' → logprob: -2.3513264656066895
    3. '("' → logprob: -7.1013264656066895
    4. ' ("' → logprob: -8.726325988769531
    5. 'None' → logprob: -9.851325988769531
    6. ' None' → logprob: -9.976325988769531
    7. '"N' → logprob: -10.976325988769531
    8. ''' → logprob: -11.726325988769531
    9. '"No' → logprob: -12.351325988769531
    10. '"I' → logprob: -13.476325988769531

Token 763: 'NG' (ID: 19236)
  Prédit: 'NG'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NG' → logprob: -0.04306324943900108
    2. '"' → logprob: -3.168063163757324
    3. 'NO' → logprob: -10.668063163757324
    4. ' NG' → logprob: -10.793063163757324
    5. ''' → logprob: -12.043063163757324
    6. 'NA' → logprob: -12.293063163757324
    7. 'ng' → logprob: -13.043063163757324
    8. '"No' → logprob: -13.543063163757324
    9. 'OK' → logprob: -13.668063163757324
    10. '"N' → logprob: -14.043063163757324

Token 764: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.25326308608055115
    2. ',' → logprob: -1.5032631158828735
    3. ' ,' → logprob: -7.253262996673584
    4. ' ",' → logprob: -8.003263473510742
    5. '(n' → logprob: -10.003263473510742
    6. '0' → logprob: -10.128263473510742
    7. '",
' → logprob: -10.503263473510742
    8. '`,' → logprob: -10.878263473510742
    9. '1' → logprob: -11.003263473510742
    10. '","' → logprob: -11.003263473510742

Token 765: ' ' (ID: 220)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.010556764900684357
    2. '0' → logprob: -4.635556697845459
    3. '1' → logprob: -8.135557174682617
    4. 'idx' → logprob: -8.260557174682617
    5. ' n' → logprob: -8.385557174682617
    6. 'len' → logprob: -12.260557174682617
    7. '(n' → logprob: -12.385557174682617
    8. ' ' → logprob: -12.510557174682617
    9. '-' → logprob: -13.135557174682617
    10. 'None' → logprob: -13.760557174682617

Token 766: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.09613724797964096
    2. 'idx' → logprob: -3.096137285232544
    3. '1' → logprob: -3.346137285232544
    4. '0' → logprob: -4.596137046813965
    5. 'dp' → logprob: -8.221137046813965
    6. '(n' → logprob: -8.846137046813965
    7. '-' → logprob: -8.846137046813965
    8. 'len' → logprob: -8.971137046813965
    9. ' n' → logprob: -9.096137046813965
    10. 'None' → logprob: -9.471137046813965

Token 767: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 768: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 769: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.05681364983320236
    2. ' solve' → logprob: -3.0568137168884277
    3. ' __' → logprob: -5.431813716888428
    4. ' sys' → logprob: -6.556813716888428
    5. 'main' → logprob: -7.306813716888428
    6. '__' → logprob: -8.05681324005127
    7. ' run' → logprob: -8.30681324005127
    8. 'solve' → logprob: -8.30681324005127
    9. ' input' → logprob: -8.55681324005127
    10. ' process' → logprob: -8.93181324005127

Token 770: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0030959583818912506
    2. '():
' → logprob: -6.003096103668213
    3. '()' → logprob: -8.253095626831055
    4. '(' → logprob: -8.628095626831055
    5. 'def' → logprob: -9.628095626831055
    6. ' ():' → logprob: -10.253095626831055
    7. '(argv' → logprob: -11.378095626831055
    8. '():
' → logprob: -11.628095626831055
    9. '```' → logprob: -11.628095626831055
    10. '()>' → logprob: -11.628095626831055

Token 771: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02327948994934559
    2. '(n' → logprob: -4.398279666900635
    3. '```' → logprob: -5.398279666900635
    4. ' n' → logprob: -5.648279666900635
    5. 'import' → logprob: -6.898279666900635
    6. 'n' → logprob: -7.023279666900635
    7. 'def' → logprob: -9.148279190063477
    8. ' import' → logprob: -9.398279190063477
    9. ' input' → logprob: -9.398279190063477
    10. '<|end|>' → logprob: -9.648279190063477

Token 772: ' input' (ID: 3422)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.3805965781211853
    2. 'n' → logprob: -1.88059663772583
    3. ' import' → logprob: -2.63059663772583
    4. ' n' → logprob: -2.63059663772583
    5. ' input' → logprob: -4.63059663772583
    6. 'input' (adapté à ' input') → logprob: -5.13059663772583
    7. '   ' → logprob: -5.50559663772583
    8. 't' → logprob: -9.380596160888672
    9. 'N' → logprob: -9.755596160888672
    10. 'r' → logprob: -10.380596160888672

Token 773: '=sys' (ID: 149200)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2406492829322815
    2. '_line' → logprob: -1.6156492233276367
    3. '_data' → logprob: -4.365649223327637
    4. '_' → logprob: -6.990649223327637
    5. '().' → logprob: -7.990649223327637
    6. '_lines' → logprob: -8.240649223327637
    7. '_str' → logprob: -8.365649223327637
    8. 'line' → logprob: -8.865649223327637
    9. '=' → logprob: -9.115649223327637
    10. ' =' → logprob: -9.365649223327637

Token 774: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.2718428373336792
    2. '().' → logprob: -2.1468429565429688
    3. '.' → logprob: -2.3968429565429688
    4. '.readline' → logprob: -3.5218429565429688
    5. '.stdout' → logprob: -8.646842956542969
    6. '.read' → logprob: -9.271842956542969
    7. '(stdin' → logprob: -9.271842956542969
    8. '.std' → logprob: -9.771842956542969
    9. '.setdefault' → logprob: -9.896842956542969
    10. '.argv' → logprob: -10.146842956542969

Token 775: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.14928284287452698
    2. '=' → logprob: -2.399282932281494
    3. 'read' → logprob: -3.774282932281494
    4. '().' → logprob: -4.149282932281494
    5. ' =' → logprob: -5.399282932281494
    6. '()' → logprob: -5.899282932281494
    7. '_read' → logprob: -7.524282932281494
    8. '=input' → logprob: -8.024282455444336
    9. '.' → logprob: -8.274282455444336
    10. ' readline' → logprob: -8.399282455444336

Token 776: '
' (ID: 198)
  Prédit: '()
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.3585403859615326
    2. '()' → logprob: -1.233540415763855
    3. '
' → logprob: -5.6085405349731445
    4. '   ' → logprob: -5.6085405349731445
    5. '().' → logprob: -6.6085405349731445
    6. 'def' → logprob: -7.4835405349731445
    7. '()\' → logprob: -7.7335405349731445
    8. '():
' → logprob: -9.108540534973145
    9. '()
' → logprob: -9.733540534973145
    10. '()

' → logprob: -10.233540534973145

Token 777: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06892505288124084
    2. 'n' → logprob: -2.943925142288208
    3. 't' → logprob: -4.693924903869629
    4. '
' → logprob: -6.068924903869629
    5. ' n' → logprob: -6.818924903869629
    6. ' t' → logprob: -8.068924903869629
    7. '(n' → logprob: -8.193924903869629
    8. 'q' → logprob: -8.568924903869629
    9. 'def' → logprob: -8.818924903869629
    10. 'T' → logprob: -9.193924903869629

Token 778: ' while' (ID: 2049)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.004422993864864111
    2. 'q' → logprob: -6.254423141479492
    3. 't' → logprob: -6.254423141479492
    4. '   ' → logprob: -7.879423141479492
    5. 'Q' → logprob: -9.754423141479492
    6. 'T' → logprob: -10.004423141479492
    7. ' n' → logprob: -10.379423141479492
    8. '```' → logprob: -10.754423141479492
    9. 'N' → logprob: -10.879423141479492
    10. 'for' → logprob: -12.004423141479492

Token 779: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.006807856727391481
    2. ' True' → logprob: -5.006807804107666
    3. '(True' → logprob: -9.381808280944824
    4. 'line' → logprob: -12.506808280944824
    5. '1' → logprob: -12.631808280944824
    6. 'true' → logprob: -14.756808280944824
    7. '=True' → logprob: -15.006808280944824
    8. '   ' → logprob: -15.881808280944824
    9. '
' → logprob: -16.506807327270508
    10. '(' → logprob: -17.131807327270508

Token 780: ':
' (ID: 734)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.2326098382472992
    2. '():
' → logprob: -1.7326098680496216
    3. ' line' → logprob: -4.482609748840332
    4. '   ' → logprob: -4.857609748840332
    5. ':' → logprob: -5.357609748840332
    6. '(line' → logprob: -5.982609748840332
    7. '_line' → logprob: -6.732609748840332
    8. ':
' → logprob: -6.982609748840332
    9. '().' → logprob: -7.607609748840332
    10. '()' → logprob: -7.982609748840332

Token 781: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21597330272197723
    2. 'line' → logprob: -2.090973377227783
    3. ' line' → logprob: -2.840973377227783
    4. '```' → logprob: -4.590973377227783
    5. '	line' → logprob: -6.965973377227783
    6. '(line' → logprob: -7.965973377227783
    7. '       ' → logprob: -8.590972900390625
    8. 'n' → logprob: -8.590972900390625
    9. 's' → logprob: -8.590972900390625
    10. '#line' → logprob: -9.715972900390625

Token 782: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.09099043905735016
    2. ' line' → logprob: -2.5909905433654785
    3. 's' → logprob: -4.9659905433654785
    4. 'n' → logprob: -5.5909905433654785
    5. 'N' → logprob: -7.2159905433654785
    6. 'l' → logprob: -7.7159905433654785
    7. ' s' → logprob: -9.96599006652832
    8. '   ' → logprob: -10.46599006652832
    9. 'L' → logprob: -10.84099006652832
    10. ' n' → logprob: -11.34099006652832

Token 783: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08909682184457779
    2. ' =' → logprob: -2.464096784591675
    3. '=line' → logprob: -9.339097023010254
    4. '(' → logprob: -10.464097023010254
    5. '()' → logprob: -10.714097023010254
    6. '   ' → logprob: -11.464097023010254
    7. 's' → logprob: -13.464097023010254
    8. '(line' → logprob: -13.964097023010254
    9. '```' → logprob: -14.464097023010254
    10. '().' → logprob: -14.839097023010254

Token 784: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.003190905088558793
    2. ' input' → logprob: -5.753190994262695
    3. 'sys' → logprob: -11.253190994262695
    4. ' sys' → logprob: -15.253190994262695
    5. 'line' → logprob: -17.878190994262695
    6. '=input' → logprob: -18.753190994262695
    7. '(input' → logprob: -19.378190994262695
    8. '<input' → logprob: -21.003190994262695
    9. '_input' → logprob: -21.378190994262695
    10. 'import' → logprob: -21.628190994262695

Token 785: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3533400893211365
    2. '().' → logprob: -1.2283401489257812
    3. '()
' → logprob: -5.353340148925781
    4. '=' → logprob: -9.853340148925781
    5. '()

' → logprob: -11.728340148925781
    6. '())' → logprob: -11.853340148925781
    7. '(' → logprob: -11.978340148925781
    8. 'strip' → logprob: -11.978340148925781
    9. '()\' → logprob: -11.978340148925781
    10. ' =' → logprob: -12.103340148925781

Token 786: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6280881762504578
    2. '       ' → logprob: -1.3780882358551025
    3. '   ' → logprob: -2.2530882358551025
    4. 'if' → logprob: -3.0030882358551025
    5. ' =' → logprob: -3.8780882358551025
    6. '=' → logprob: -4.128087997436523
    7. '<|end|>' → logprob: -5.128087997436523
    8. '.strip' → logprob: -5.753087997436523
    9. 'If' → logprob: -6.003087997436523
    10. '
' → logprob: -6.128087997436523

Token 787: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.16022665798664093
    2. ' if' → logprob: -1.9102267026901245
    3. '   ' → logprob: -13.410226821899414
    4. '
' → logprob: -14.785226821899414
    5. '       ' → logprob: -15.035226821899414
    6. '	if' → logprob: -15.410226821899414
    7. ' line' → logprob: -17.035226821899414
    8. 'break' → logprob: -17.785226821899414
    9. 'line' → logprob: -17.910226821899414
    10. 'If' → logprob: -18.035226821899414

Token 788: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.04977797344326973
    2. 'not' → logprob: -3.0497779846191406
    3. ' line' → logprob: -7.049777984619141
    4. 'line' → logprob: -8.04977798461914
    5. '#line' → logprob: -12.92477798461914
    6. '=line' → logprob: -15.04977798461914
    7. '(line' → logprob: -15.42477798461914
    8. '[line' → logprob: -16.17477798461914
    9. '_line' → logprob: -17.17477798461914
    10. '	not' → logprob: -17.29977798461914

Token 789: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0031777136027812958
    2. ' line' → logprob: -5.753177642822266
    3. '	line' → logprob: -18.003177642822266
    4. '(line' → logprob: -19.128177642822266
    5. '#line' → logprob: -19.878177642822266
    6. '=line' → logprob: -21.003177642822266
    7. '_line' → logprob: -21.253177642822266
    8. '[line' → logprob: -21.503177642822266
    9. '.line' → logprob: -23.253177642822266
    10. 'Line' → logprob: -24.503177642822266

Token 790: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.417838454246521
    2. ':' → logprob: -1.792838454246521
    3. '.strip' → logprob: -1.792838454246521
    4. '.' → logprob: -5.5428385734558105
    5. ' or' → logprob: -6.0428385734558105
    6. '.rstrip' → logprob: -7.2928385734558105
    7. '   ' → logprob: -8.167838096618652
    8. '.startswith' → logprob: -8.167838096618652
    9. '.readline' → logprob: -8.417838096618652
    10. ')' → logprob: -9.042838096618652

Token 791: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8097116351127625
    2. '   ' → logprob: -1.0597116947174072
    3. ' break' → logprob: -1.8097116947174072
    4. '           ' → logprob: -3.6847116947174072
    5. 'break' → logprob: -4.059711456298828
    6. '	break' → logprob: -6.809711456298828
    7. ' ' → logprob: -7.809711456298828
    8. '_break' → logprob: -7.934711456298828
    9. ',' → logprob: -9.184711456298828
    10. '<|end|>' → logprob: -9.434711456298828

Token 792: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.11560593545436859
    2. ' break' → logprob: -2.6156058311462402
    3. '       ' → logprob: -3.3656058311462402
    4. '	break' → logprob: -7.49060583114624
    5. '   ' → logprob: -7.86560583114624
    6. 'return' → logprob: -8.115606307983398
    7. '           ' → logprob: -8.365606307983398
    8. '_break' → logprob: -10.865606307983398
    9. '```' → logprob: -12.615606307983398
    10. ' return' → logprob: -12.865606307983398

Token 793: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004866430535912514
    2. '<|end|>' → logprob: -5.879866600036621
    3. '   ' → logprob: -6.754866600036621
    4. '        
' → logprob: -7.629866600036621
    5. 'n' → logprob: -9.004866600036621
    6. ',' → logprob: -9.379866600036621
    7. ' n' → logprob: -10.379866600036621
    8. '<|end|>' → logprob: -10.504866600036621
    9. '    
' → logprob: -10.629866600036621
    10. '
' → logprob: -11.129866600036621

Token 794: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9136351346969604
    2. '       ' → logprob: -1.0386351346969604
    3. 'n' → logprob: -2.16363525390625
    4. '```' → logprob: -2.53863525390625
    5. ' n' → logprob: -3.28863525390625
    6. 'line' → logprob: -4.66363525390625
    7. ' line' → logprob: -6.53863525390625
    8. '``' → logprob: -7.16363525390625
    9. ',' → logprob: -7.91363525390625
    10. '(n' → logprob: -8.03863525390625

Token 795: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.023897388949990273
    2. ' n' → logprob: -3.773897409439087
    3. 'N' → logprob: -8.398897171020508
    4. '       ' → logprob: -8.523897171020508
    5. '   ' → logprob: -8.523897171020508
    6. 'l' → logprob: -12.273897171020508
    7. '	n' → logprob: -12.398897171020508
    8. '```' → logprob: -12.398897171020508
    9. ' parts' → logprob: -12.523897171020508
    10. '
' → logprob: -12.773897171020508

Token 796: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1278492659330368
    2. ' =' → logprob: -2.1278493404388428
    3. '=int' → logprob: -7.127849102020264
    4. ',' → logprob: -9.377849578857422
    5. '=line' → logprob: -11.252849578857422
    6. ')' → logprob: -11.877849578857422
    7. '=n' → logprob: -12.877849578857422
    8. '   ' → logprob: -13.127849578857422
    9. '=
' → logprob: -13.627849578857422
    10. ')=' → logprob: -13.627849578857422

Token 797: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00026181264547631145
    2. ' int' → logprob: -8.250262260437012
    3. '[int' → logprob: -15.500262260437012
    4. '(int' → logprob: -15.875262260437012
    5. '=int' → logprob: -15.875262260437012
    6. 'n' → logprob: -17.000261306762695
    7. '<int' → logprob: -18.125261306762695
    8. '```' → logprob: -18.125261306762695
    9. '	int' → logprob: -19.250261306762695
    10. ':int' → logprob: -19.875261306762695

Token 798: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.00407923199236393
    2. 'line' → logprob: -5.504079341888428
    3. ' line' → logprob: -15.00407886505127
    4. '(' → logprob: -15.37907886505127
    5. '=line' → logprob: -16.504079818725586
    6. '#line' → logprob: -17.129079818725586
    7. '[line' → logprob: -17.629079818725586
    8. '	line' → logprob: -17.879079818725586
    9. '```' → logprob: -18.004079818725586
    10. ' (' → logprob: -18.504079818725586

Token 799: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5306094884872437
    2. '.strip' → logprob: -1.2806094884872437
    3. '())' → logprob: -3.155609607696533
    4. '().' → logprob: -3.155609607696533
    5. ')
' → logprob: -3.530609607696533
    6. '())
' → logprob: -4.530609607696533
    7. '.rstrip' → logprob: -5.780609607696533
    8. '()
' → logprob: -6.405609607696533
    9. '.readline' → logprob: -6.405609607696533
    10. '()' → logprob: -6.530609607696533

Token 800: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027946732938289642
    2. 'if' → logprob: -3.777946710586548
    3. ' if' → logprob: -6.027946949005127
    4. '```' → logprob: -6.277946949005127
    5. 'line' → logprob: -8.652946472167969
    6. 'ball' → logprob: -8.902946472167969
    7. 'b' → logprob: -10.527946472167969
    8. '   ' → logprob: -10.652946472167969
    9. '<|end|>' → logprob: -11.277946472167969
    10. '	if' → logprob: -12.027946472167969

Token 801: ' if' (ID: 538)
  Prédit: 'ball'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ball' → logprob: -0.013215646147727966
    2. 'if' (adapté à ' if') → logprob: -4.3882155418396
    3. '```' → logprob: -7.8882155418396
    4. '   ' → logprob: -9.138216018676758
    5. 'balls' → logprob: -9.638216018676758
    6. '       ' → logprob: -9.638216018676758
    7. 'b' → logprob: -10.263216018676758
    8. ' if' → logprob: -11.013216018676758
    9. ' balloons' → logprob: -11.138216018676758
    10. 'bal' → logprob: -11.138216018676758

Token 802: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6931746006011963
    2. ' n' → logprob: -0.6931746006011963
    3. ' not' → logprob: -10.568174362182617
    4. '	n' → logprob: -14.443174362182617
    5. '   ' → logprob: -14.693174362182617
    6. 'not' → logprob: -15.193174362182617
    7. '=n' → logprob: -15.693174362182617
    8. '(n' → logprob: -16.068174362182617
    9. '_n' → logprob: -16.568174362182617
    10. 'n't' → logprob: -16.693174362182617

Token 803: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.12704633176326752
    2. '==' → logprob: -2.1270463466644287
    3. ' <=' → logprob: -9.502046585083008
    4. '<=' → logprob: -10.502046585083008
    5. '()==' → logprob: -12.627046585083008
    6. ')==' → logprob: -12.752046585083008
    7. '=' → logprob: -13.002046585083008
    8. '   ' → logprob: -13.127046585083008
    9. ' ' → logprob: -13.502046585083008
    10. ' ===' → logprob: -14.127046585083008

Token 804: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9146995327901095e-05
    2. ' ' → logprob: -10.875019073486328
    3. '=' → logprob: -15.750019073486328
    4. '   ' → logprob: -17.000019073486328
    5. '       ' → logprob: -19.750019073486328
    6. '  ' → logprob: -20.000019073486328
    7. '```' → logprob: -20.125019073486328
    8. '-' → logprob: -20.250019073486328
    9. '<|end|>' → logprob: -20.250019073486328
    10. '۰' → logprob: -20.875019073486328

Token 805: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '=' → logprob: -21.625
    4. '```' → logprob: -21.75
    5. '   ' → logprob: -21.875
    6. '۰' → logprob: -23.125
    7. '  ' → logprob: -23.25
    8. 's' → logprob: -23.25
    9. '０' → logprob: -23.375
    10. 'o' → logprob: -23.75

Token 806: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5185441970825195
    2. ':
' → logprob: -1.0185441970825195
    3. '           ' → logprob: -3.6435441970825195
    4. '   ' → logprob: -4.7685441970825195
    5. '       ' → logprob: -4.7685441970825195
    6. ':return' → logprob: -9.51854419708252
    7. ':
' → logprob: -10.51854419708252
    8. '():
' → logprob: -10.51854419708252
    9. ' break' → logprob: -10.64354419708252
    10. '	break' → logprob: -10.64354419708252

Token 807: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000583653396461159
    2. '   ' → logprob: -8.00058364868164
    3. '       ' → logprob: -8.87558364868164
    4. '```' → logprob: -10.12558364868164
    5. 'break' → logprob: -11.00058364868164
    6. '		' → logprob: -11.12558364868164
    7. ' break' → logprob: -11.62558364868164
    8. '	       ' → logprob: -11.75058364868164
    9. '<|end|>' → logprob: -12.37558364868164
    10. '	   ' → logprob: -12.62558364868164

Token 808: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.200319305062294
    2. 'return' → logprob: -1.9503192901611328
    3. '       ' → logprob: -3.950319290161133
    4. ' break' → logprob: -4.075319290161133
    5. '           ' → logprob: -6.575319290161133
    6. ' return' → logprob: -6.950319290161133
    7. '	break' → logprob: -7.575319290161133
    8. '   ' → logprob: -9.575319290161133
    9. '               ' → logprob: -9.700319290161133
    10. '```' → logprob: -10.450319290161133

Token 809: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027575360611081123
    2. '```' → logprob: -3.6525752544403076
    3. '   ' → logprob: -8.027575492858887
    4. '``' → logprob: -8.277575492858887
    5. 'b' → logprob: -8.527575492858887
    6. '        
' → logprob: -8.777575492858887
    7. '<|end|>' → logprob: -8.902575492858887
    8. 'ball' → logprob: -8.902575492858887
    9. ',b' → logprob: -11.527575492858887
    10. '
' → logprob: -11.527575492858887

Token 810: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3643316924571991
    2. '   ' → logprob: -1.4893317222595215
    3. '```' → logprob: -2.8643317222595215
    4. 'ball' → logprob: -4.1143317222595215
    5. 'b' → logprob: -5.2393317222595215
    6. '<|end|>' → logprob: -8.239331245422363
    7. '``' → logprob: -8.489331245422363
    8. 'balls' → logprob: -8.614331245422363
    9. '	b' → logprob: -8.739331245422363
    10. ' ' → logprob: -9.364331245422363

Token 811: ' balloons' (ID: 114791)
  Prédit: 'ball'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ball' → logprob: -0.0005650650127790868
    2. '       ' → logprob: -8.375565528869629
    3. 'balls' → logprob: -9.250565528869629
    4. '   ' → logprob: -9.250565528869629
    5. 'b' → logprob: -9.500565528869629
    6. ' balloons' → logprob: -10.000565528869629
    7. '```' → logprob: -11.375565528869629
    8. 'bal' → logprob: -12.000565528869629
    9. '        
' → logprob: -13.625565528869629
    10. '	b' → logprob: -14.625565528869629

Token 812: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3136003315448761
    2. ' =' → logprob: -1.3136003017425537
    3. '   ' → logprob: -8.563600540161133
    4. '=[]' → logprob: -9.438600540161133
    5. ',' → logprob: -10.688600540161133
    6. ')' → logprob: -11.313600540161133
    7. '=line' → logprob: -11.688600540161133
    8. '=[]
' → logprob: -12.188600540161133
    9. '[' → logprob: -13.188600540161133
    10. ')=' → logprob: -13.313600540161133

Token 813: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.023296138271689415
    2. '[]' → logprob: -4.023296356201172
    3. '[]
' → logprob: -5.523296356201172
    4. '[int' → logprob: -7.273296356201172
    5. '[n' → logprob: -9.773296356201172
    6. '[array' → logprob: -10.273296356201172
    7. '[s' → logprob: -10.398296356201172
    8. '[str' → logprob: -10.523296356201172
    9. '[class' → logprob: -10.773296356201172
    10. '[size' → logprob: -10.898296356201172

Token 814: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13163170218467712
    2. ' for' → logprob: -2.63163161277771
    3. 'for' → logprob: -3.13163161277771
    4. '<|end|>' → logprob: -6.006631851196289
    5. '```' → logprob: -6.256631851196289
    6. '   ' → logprob: -7.006631851196289
    7. ',' → logprob: -7.631631851196289
    8. '	for' → logprob: -8.506631851196289
    9. ' ' → logprob: -8.506631851196289
    10. '        
' → logprob: -8.631631851196289

Token 815: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.004110934678465128
    2. ' for' → logprob: -5.504110813140869
    3. '	for' → logprob: -11.254111289978027
    4. '       ' → logprob: -11.879111289978027
    5. '   ' → logprob: -12.254111289978027
    6. '```' → logprob: -12.504111289978027
    7. '
' → logprob: -12.754111289978027
    8. 'while' → logprob: -13.879111289978027
    9. '``' → logprob: -16.25411033630371
    10. '        
' → logprob: -17.50411033630371

Token 816: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -7.465036105713807e-06
    2. ' _' → logprob: -12.125007629394531
    3. '_range' → logprob: -13.250007629394531
    4. '_i' → logprob: -15.750007629394531
    5. '_=' → logprob: -17.50000762939453
    6. '_
' → logprob: -17.87500762939453
    7. '   ' → logprob: -18.37500762939453
    8. '_
' → logprob: -18.75000762939453
    9. '_in' → logprob: -19.37500762939453
    10. ' in' → logprob: -19.37500762939453

Token 817: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16937625408172607
    2. '_' → logprob: -2.9193763732910156
    3. 'range' → logprob: -2.9193763732910156
    4. 'in' → logprob: -3.2943763732910156
    5. ' range' → logprob: -4.544376373291016
    6. '_range' → logprob: -9.169376373291016
    7. ' _' → logprob: -10.669376373291016
    8. ' ' → logprob: -12.044376373291016
    9. 'n' → logprob: -12.169376373291016
    10. 'i' → logprob: -12.544376373291016

Token 818: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -6.2729995988775045e-06
    2. ' range' → logprob: -12.000006675720215
    3. '_range' → logprob: -17.8750057220459
    4. '	range' → logprob: -18.6250057220459
    5. '_' → logprob: -20.0000057220459
    6. '
' → logprob: -20.1250057220459
    7. 'rang' → logprob: -20.7500057220459
    8. '(range' → logprob: -20.8750057220459
    9. '```' → logprob: -21.6250057220459
    10. '   ' → logprob: -22.2500057220459

Token 819: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07904588431119919
    2. '(n' → logprob: -2.5790457725524902
    3. ' n' → logprob: -8.954046249389648
    4. 'range' → logprob: -11.204046249389648
    5. '	n' → logprob: -11.954046249389648
    6. 'int' → logprob: -12.829046249389648
    7. '   ' → logprob: -12.954046249389648
    8. ' range' → logprob: -14.704046249389648
    9. '(' → logprob: -14.704046249389648
    10. '_n' → logprob: -14.954046249389648

Token 820: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.06347557157278061
    2. '):' → logprob: -2.9384756088256836
    3. '():
' → logprob: -5.563475608825684
    4. '       ' → logprob: -6.063475608825684
    5. '   ' → logprob: -7.313475608825684
    6. '           ' → logprob: -7.813475608825684
    7. ':
' → logprob: -8.438475608825684
    8. ')' → logprob: -8.563475608825684
    9. '```' → logprob: -8.563475608825684
    10. ':' → logprob: -8.813475608825684

Token 821: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49874475598335266
    2. '           ' → logprob: -1.6237447261810303
    3. '   ' → logprob: -2.4987447261810303
    4. ' line' → logprob: -2.7487447261810303
    5. '	       ' → logprob: -4.498744964599609
    6. '```' → logprob: -4.748744964599609
    7. '<|end|>' → logprob: -5.123744964599609
    8. 'line' → logprob: -5.248744964599609
    9. '=line' → logprob: -5.748744964599609
    10. '	line' → logprob: -6.248744964599609

Token 822: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.19985125958919525
    2. 'x' → logprob: -1.9498512744903564
    3. ' p' → logprob: -3.3248512744903564
    4. ' x' → logprob: -6.574851036071777
    5. 't' → logprob: -6.949851036071777
    6. 'a' → logprob: -8.949851036071777
    7. 'l' → logprob: -9.074851036071777
    8. 's' → logprob: -9.324851036071777
    9. ' t' → logprob: -9.949851036071777
    10. '           ' → logprob: -10.324851036071777

Token 823: ',t' (ID: 26927)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004896077327430248
    2. '=' → logprob: -6.25489616394043
    3. ' ,' → logprob: -6.25489616394043
    4. ',line' → logprob: -7.62989616394043
    5. ',int' → logprob: -9.12989616394043
    6. ',t' → logprob: -9.12989616394043
    7. ' =' → logprob: -9.37989616394043
    8. ',p' → logprob: -9.75489616394043
    9. '_,' → logprob: -10.25489616394043
    10. ',q' → logprob: -10.62989616394043

Token 824: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04888426512479782
    2. ' =' → logprob: -3.048884153366089
    3. '=line' → logprob: -8.298884391784668
    4. '=int' → logprob: -10.298884391784668
    5. '=input' → logprob: -11.548884391784668
    6. ')=' → logprob: -13.548884391784668
    7. ')' → logprob: -14.173884391784668
    8. '=sys' → logprob: -14.298884391784668
    9. '=
' → logprob: -14.548884391784668
    10. '=list' → logprob: -14.673884391784668

Token 825: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.014163747429847717
    2. ' map' → logprob: -4.264163970947266
    3. 'input' → logprob: -16.014163970947266
    4. '   ' → logprob: -16.639163970947266
    5. '	map' → logprob: -16.764163970947266
    6. 'tuple' → logprob: -18.139163970947266
    7. 'list' → logprob: -18.389163970947266
    8. '    ' → logprob: -18.889163970947266
    9. '(map' → logprob: -19.014163970947266
    10. '           ' → logprob: -19.389163970947266

Token 826: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.31341254711151123
    2. 'int' → logprob: -1.3134125471115112
    3. '=int' → logprob: -9.9384126663208
    4. '<int' → logprob: -10.3134126663208
    5. ' int' → logprob: -10.4384126663208
    6. '[int' → logprob: -10.4384126663208
    7. '```' → logprob: -12.6884126663208
    8. ',int' → logprob: -12.8134126663208
    9. ':int' → logprob: -13.1884126663208
    10. '	int' → logprob: -13.6884126663208

Token 827: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.08183693140745163
    2. '(input' → logprob: -3.0818369388580322
    3. ',' → logprob: -3.7068369388580322
    4. 'input' → logprob: -4.831836700439453
    5. ',line' → logprob: -9.581836700439453
    6. '(' → logprob: -10.331836700439453
    7. ')' → logprob: -10.581836700439453
    8. '(),' → logprob: -11.331836700439453
    9. '=input' → logprob: -11.456836700439453
    10. ' input' → logprob: -11.581836700439453

Token 828: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.8193366486229934e-05
    2. '()' → logprob: -11.000018119812012
    3. '()
' → logprob: -14.375018119812012
    4. '.readline' → logprob: -14.500018119812012
    5. '.split' → logprob: -16.125019073486328
    6. '())' → logprob: -16.125019073486328
    7. '(' → logprob: -16.625019073486328
    8. '().
' → logprob: -17.625019073486328
    9. '()[' → logprob: -17.750019073486328
    10. 'split' → logprob: -17.750019073486328

Token 829: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0038425903767347336
    2. 'read' → logprob: -6.378842353820801
    3. 'strip' → logprob: -6.378842353820801
    4. 'rstrip' → logprob: -7.878842353820801
    5. '.readline' → logprob: -10.0038423538208
    6. '().' → logprob: -12.1288423538208
    7. 'sys' → logprob: -12.8788423538208
    8. '(split' → logprob: -13.0038423538208
    9. ' readline' → logprob: -13.0038423538208
    10. 'plit' → logprob: -13.2538423538208

Token 830: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.38480961322784424
    2. ')' → logprob: -1.3848096132278442
    3. '())
' → logprob: -2.7598094940185547
    4. ')
' → logprob: -5.259809494018555
    5. '()' → logprob: -7.634809494018555
    6. '(' → logprob: -10.009809494018555
    7. '())
' → logprob: -12.509809494018555
    8. '()
' → logprob: -12.634809494018555
    9. ')`
' → logprob: -13.134809494018555
    10. '))' → logprob: -13.384809494018555

Token 831: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009165416471660137
    2. 'ball' → logprob: -5.009165287017822
    3. '<|end|>' → logprob: -6.884165287017822
    4. 'b' → logprob: -7.634165287017822
    5. ' balloons' → logprob: -8.25916576385498
    6. '       ' → logprob: -8.50916576385498
    7. ',' → logprob: -9.13416576385498
    8. ',b' → logprob: -9.50916576385498
    9. '```' → logprob: -9.63416576385498
    10. '<|end|>' → logprob: -10.00916576385498

Token 832: ' balloons' (ID: 114791)
  Prédit: 'ball'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ball' → logprob: -0.002930276095867157
    2. '           ' → logprob: -5.877930164337158
    3. '   ' → logprob: -10.252930641174316
    4. '       ' → logprob: -10.627930641174316
    5. 'b' → logprob: -10.752930641174316
    6. 'balls' → logprob: -11.002930641174316
    7. ' balloons' → logprob: -11.502930641174316
    8. 'bal' → logprob: -11.752930641174316
    9. ' ' → logprob: -13.252930641174316
    10. '```' → logprob: -13.627930641174316

Token 833: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00010533124441280961
    2. '.' → logprob: -9.375104904174805
    3. ').' → logprob: -11.625104904174805
    4. 'append' → logprob: -12.125104904174805
    5. '.app' → logprob: -13.250104904174805
    6. ' .' → logprob: -13.500104904174805
    7. '].' → logprob: -14.500104904174805
    8. '_append' → logprob: -14.625104904174805
    9. '.Append' → logprob: -14.750104904174805
    10. '.extend' → logprob: -15.000104904174805

Token 834: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.011671900749206543
    2. '(p' → logprob: -4.511672019958496
    3. '(' → logprob: -7.386672019958496
    4. '   ' → logprob: -13.011672019958496
    5. ' (' → logprob: -13.386672019958496
    6. '  ' → logprob: -16.26167106628418
    7. '(P' → logprob: -16.38667106628418
    8. '(
' → logprob: -16.38667106628418
    9. '[(' → logprob: -16.51167106628418
    10. '```' → logprob: -17.13667106628418

Token 835: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -3.650518920039758e-06
    2. ' p' → logprob: -13.125003814697266
    3. '(p' → logprob: -13.375003814697266
    4. ')p' → logprob: -17.375003814697266
    5. ')' → logprob: -18.750003814697266
    6. '_p' → logprob: -19.375003814697266
    7. '(' → logprob: -20.250003814697266
    8. ' (' → logprob: -20.375003814697266
    9. '[p' → logprob: -21.125003814697266
    10. '<|end|>' → logprob: -21.125003814697266

Token 836: ',t' (ID: 26927)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023260269314050674
    2. ',t' → logprob: -3.7732603549957275
    3. ' ,' → logprob: -11.273260116577148
    4. ',
' → logprob: -14.148260116577148
    5. 't' → logprob: -14.273260116577148
    6. ',p' → logprob: -14.648260116577148
    7. '),' → logprob: -16.39826011657715
    8. '‌,' → logprob: -17.14826011657715
    9. ',tp' → logprob: -17.39826011657715
    10. ' t' → logprob: -17.52326011657715

Token 837: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.001340719754807651
    2. '))
' → logprob: -6.626340866088867
    3. ')' → logprob: -11.376340866088867
    4. ' ))' → logprob: -13.251340866088867
    5. ')))' → logprob: -14.126340866088867
    6. '       ' → logprob: -15.126340866088867
    7. '));' → logprob: -15.626340866088867
    8. '           ' → logprob: -15.876340866088867
    9. '))

' → logprob: -16.376340866088867
    10. '   ' → logprob: -16.501340866088867

Token 838: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026969606056809425
    2. '```' → logprob: -5.0269694328308105
    3. '<|end|>' → logprob: -5.1519694328308105
    4. ')' → logprob: -5.6519694328308105
    5. 'ball' → logprob: -5.6519694328308105
    6. 'solve' → logprob: -5.7769694328308105
    7. '   ' → logprob: -7.1519694328308105
    8. 'def' → logprob: -7.5269694328308105
    9. 'b' → logprob: -7.6519694328308105
    10. '<|end|>' → logprob: -8.151969909667969

Token 839: ' res' (ID: 694)
  Prédit: 'ball'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ball' → logprob: -0.004057978745549917
    2. 'result' → logprob: -6.254057884216309
    3. '   ' → logprob: -6.504057884216309
    4. 'b' → logprob: -8.629057884216309
    5. '```' → logprob: -9.004057884216309
    6. 'bal' → logprob: -9.504057884216309
    7. '       ' → logprob: -9.879057884216309
    8. 'status' → logprob: -10.129057884216309
    9. 'print' → logprob: -10.504057884216309
    10. 'solve' → logprob: -10.629057884216309

Token 840: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05494818836450577
    2. '=' → logprob: -2.929948091506958
    3. '=res' → logprob: -10.804947853088379
    4. ',' → logprob: -11.054947853088379
    5. '   ' → logprob: -11.679947853088379
    6. 'ult' → logprob: -12.304947853088379
    7. ')' → logprob: -13.054947853088379
    8. '＝' → logprob: -13.179947853088379
    9. '=result' → logprob: -13.304947853088379
    10. '```' → logprob: -13.554947853088379

Token 841: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.0007100477814674377
    2. ' solve' → logprob: -7.2507100105285645
    3. '.solve' → logprob: -17.750709533691406
    4. '   ' → logprob: -18.750709533691406
    5. '```' → logprob: -19.875709533691406
    6. 'resolve' → logprob: -20.000709533691406
    7. '(s' → logprob: -20.000709533691406
    8. 'sol' → logprob: -20.125709533691406
    9. 'solver' → logprob: -20.750709533691406
    10. 'save' → logprob: -20.750709533691406

Token 842: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -5.080963092041202e-06
    2. '(' → logprob: -12.750004768371582
    3. 'n' → logprob: -13.750004768371582
    4. ' (' → logprob: -14.375004768371582
    5. '(len' → logprob: -15.000004768371582
    6. '(
' → logprob: -16.3750057220459
    7. '(res' → logprob: -17.1250057220459
    8. '((' → logprob: -17.6250057220459
    9. ' n' → logprob: -17.7500057220459
    10. '```' → logprob: -17.8750057220459

Token 843: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0034981502685695887
    2. '(b' → logprob: -5.878498077392578
    3. ',b' → logprob: -7.503498077392578
    4. '(n' → logprob: -9.253498077392578
    5. '(' → logprob: -11.003498077392578
    6. ' ,' → logprob: -11.503498077392578
    7. '(ball' → logprob: -12.253498077392578
    8. ',(' → logprob: -12.378498077392578
    9. ',n' → logprob: -12.628498077392578
    10. '```' → logprob: -12.878498077392578

Token 844: ' balloons' (ID: 114791)
  Prédit: 'ball'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ball' → logprob: -0.0009419540292583406
    2. ' balloons' → logprob: -7.000941753387451
    3. 'b' → logprob: -11.12594223022461
    4. 'balls' → logprob: -11.62594223022461
    5. '```' → logprob: -12.50094223022461
    6. 'bal' → logprob: -13.50094223022461
    7. '(ball' → logprob: -15.00094223022461
    8. '   ' → logprob: -15.12594223022461
    9. ')' → logprob: -15.62594223022461
    10. '[' → logprob: -16.00094223022461

Token 845: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02885018289089203
    2. ')
' → logprob: -4.028850078582764
    3. '(res' → logprob: -5.528850078582764
    4. ',' → logprob: -6.153850078582764
    5. '       ' → logprob: -6.153850078582764
    6. '(' → logprob: -7.153850078582764
    7. '   ' → logprob: -7.653850078582764
    8. '[' → logprob: -8.153850555419922
    9. '```' → logprob: -8.528850555419922
    10. '[::-' → logprob: -9.278850555419922

Token 846: '       ' (ID: 309)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.4836932122707367
    2. '       ' → logprob: -1.233693242073059
    3. 'print' → logprob: -2.6086931228637695
    4. '<|end|>' → logprob: -4.9836931228637695
    5. '``' → logprob: -5.2336931228637695
    6. '   ' → logprob: -5.7336931228637695
    7. '
' → logprob: -6.6086931228637695
    8. '        
' → logprob: -6.8586931228637695
    9. ' print' → logprob: -8.60869312286377
    10. '`' → logprob: -8.85869312286377

Token 847: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0009131324477493763
    2. 'if' → logprob: -7.000913143157959
    3. '       ' → logprob: -13.7509126663208
    4. '```' → logprob: -15.1259126663208
    5. ' print' → logprob: -15.2509126663208
    6. '   ' → logprob: -17.375913619995117
    7. ' if' → logprob: -18.500913619995117
    8. '        
' → logprob: -18.750913619995117
    9. '``' → logprob: -19.250913619995117
    10. '#print' → logprob: -19.625913619995117

Token 848: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.2701219618320465
    2. '(*' → logprob: -1.5201219320297241
    3. 'res' → logprob: -4.020122051239014
    4. '*' → logprob: -9.895121574401855
    5. '(' → logprob: -10.770121574401855
    6. '(f' → logprob: -12.520121574401855
    7. ' res' → logprob: -14.520121574401855
    8. '_res' → logprob: -14.770121574401855
    9. '```' → logprob: -14.895121574401855
    10. '	res' → logprob: -15.020121574401855

Token 849: '[' (ID: 58)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023889832198619843
    2. '())' → logprob: -3.8988897800445557
    3. '()' → logprob: -5.773890018463135
    4. '   ' → logprob: -9.523889541625977
    5. '[' → logprob: -9.898889541625977
    6. '(' → logprob: -10.023889541625977
    7. '))' → logprob: -10.648889541625977
    8. ')`' → logprob: -11.023889541625977
    9. ')
' → logprob: -11.898889541625977
    10. '`)' → logprob: -12.273889541625977

Token 850: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004890497075393796
    2. '1' → logprob: -7.625489234924316
    3. ')' → logprob: -14.500489234924316
    4. '-' → logprob: -15.375489234924316
    5. ']' → logprob: -15.500489234924316
    6. '```' → logprob: -16.50048828125
    7. ' ' → logprob: -17.12548828125
    8. '])' → logprob: -17.25048828125
    9. '[' → logprob: -17.62548828125
    10. '()' → logprob: -18.50048828125

Token 851: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01691017858684063
    2. ',res' → logprob: -4.641910076141357
    3. ')' → logprob: -5.016910076141357
    4. ',end' → logprob: -8.141910552978516
    5. ',",' → logprob: -8.891910552978516
    6. ',)' → logprob: -10.516910552978516
    7. '[' → logprob: -10.641910552978516
    8. '```' → logprob: -12.391910552978516
    9. ',len' → logprob: -12.766910552978516
    10. '`,' → logprob: -13.266910552978516

Token 852: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -5.512236498361744e-07
    2. ' res' → logprob: -14.500000953674316
    3. '*' → logprob: -20.5
    4. '(res' → logprob: -21.625
    5. '$res' → logprob: -22.0
    6. '_res' → logprob: -24.125
    7. '	res' → logprob: -24.375
    8. ')' → logprob: -24.625
    9. '
' → logprob: -24.75
    10. 'end' → logprob: -24.75

Token 853: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.895480277715251e-06
    2. ')' → logprob: -12.000008583068848
    3. '[
' → logprob: -14.125008583068848
    4. '```' → logprob: -14.125008583068848
    5. 'res' → logprob: -15.125008583068848
    6. '<|end|>' → logprob: -15.500008583068848
    7. '[...,' → logprob: -16.125009536743164
    8. '[-' → logprob: -16.250009536743164
    9. '<|end|>' → logprob: -16.250009536743164
    10. '   ' → logprob: -16.750009536743164

Token 854: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9743012671824545e-05
    2. '-' → logprob: -10.875020027160645
    3. '0' → logprob: -15.500020027160645
    4. '   ' → logprob: -15.750020027160645
    5. '```' → logprob: -15.750020027160645
    6. '
' → logprob: -16.250019073486328
    7. 'res' → logprob: -16.750019073486328
    8. '``' → logprob: -17.125019073486328
    9. ' -' → logprob: -17.375019073486328
    10. ' ' → logprob: -17.562519073486328

Token 855: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ')
' → logprob: -15.5
    3. '))' → logprob: -15.875
    4. ' )' → logprob: -17.375
    5. '())' → logprob: -17.375
    6. ')}' → logprob: -17.75
    7. ')`' → logprob: -17.75
    8. '})' → logprob: -18.125
    9. ')#' → logprob: -18.375
    10. ')return' → logprob: -18.625

Token 856: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.033034034073352814
    2. '```' → logprob: -3.908034086227417
    3. '<|end|>' → logprob: -4.533033847808838
    4. ' if' → logprob: -7.283033847808838
    5. '
' → logprob: -7.533033847808838
    6. '\n' → logprob: -8.908034324645996
    7. '\' → logprob: -9.033034324645996
    8. '``' → logprob: -10.158034324645996
    9. '#' → logprob: -10.408034324645996
    10. 'main' → logprob: -10.783034324645996

Token 857: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3868989646434784
    2. ' __' → logprob: -1.1368989944458008
    3. 'name' → logprob: -11.2618989944458
    4. '```' → logprob: -12.3868989944458
    5. '_name' → logprob: -12.7618989944458
    6. '/__' → logprob: -12.8868989944458
    7. '___' → logprob: -13.3868989944458
    8. ' name' → logprob: -13.8868989944458
    9. 'True' → logprob: -14.0118989944458
    10. 'Name' → logprob: -14.1368989944458

Token 858: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.012259802781045437
    2. '==' → logprob: -4.6372599601745605
    3. ' ==' → logprob: -7.1372599601745605
    4. 'name' → logprob: -7.6372599601745605
    5. '=="' → logprob: -7.6372599601745605
    6. '```' → logprob: -7.7622599601745605
    7. '=='' → logprob: -9.762259483337402
    8. '__.__' → logprob: -9.887259483337402
    9. '[' → logprob: -10.137259483337402
    10. '_name' → logprob: -10.512259483337402

Token 859: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0003884894831571728
    2. '__.__' → logprob: -8.375388145446777
    3. '=="' → logprob: -9.500388145446777
    4. '==' → logprob: -9.875388145446777
    5. '```' → logprob: -10.875388145446777
    6. '__["' → logprob: -12.625388145446777
    7. '=='' → logprob: -13.125388145446777
    8. '__.' → logprob: -13.125388145446777
    9. '__":
' → logprob: -13.875388145446777
    10. '___' → logprob: -14.125388145446777

Token 860: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4687691032886505
    2. '__' → logprob: -1.0937690734863281
    3. '=="' → logprob: -3.343769073486328
    4. '=='' → logprob: -6.218769073486328
    5. ' ==' → logprob: -6.343769073486328
    6. '==
' → logprob: -9.593769073486328
    7. '===' → logprob: -10.468769073486328
    8. '=' → logprob: -10.593769073486328
    9. '__.__' → logprob: -10.968769073486328
    10. '==="' → logprob: -11.093769073486328

Token 861: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.12716296315193176
    2. ''' → logprob: -2.1271629333496094
    3. '__' → logprob: -8.37716293334961
    4. ' "__' → logprob: -12.75216293334961
    5. ' '__' → logprob: -15.25216293334961
    6. '"user' → logprob: -15.37716293334961
    7. '"name' → logprob: -15.62716293334961
    8. ''"' → logprob: -15.75216293334961
    9. ''m' → logprob: -16.12716293334961
    10. ''s' → logprob: -16.12716293334961

Token 862: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.4798343777656555
    2. 'main' → logprob: -0.9798343777656555
    3. '"' → logprob: -5.35483455657959
    4. ''' → logprob: -7.10483455657959
    5. 'name' → logprob: -8.85483455657959
    6. 'built' → logprob: -10.97983455657959
    7. '```' → logprob: -11.35483455657959
    8. '___' → logprob: -12.22983455657959
    9. '__":
' → logprob: -12.47983455657959
    10. '____' → logprob: -12.97983455657959

Token 863: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.030586278066039085
    2. '__' → logprob: -3.5305862426757812
    3. '__':
' → logprob: -7.155586242675781
    4. '__.' → logprob: -11.155586242675781
    5. '__.__' → logprob: -11.155586242675781
    6. '__["' → logprob: -11.280586242675781
    7. '__("' → logprob: -12.530586242675781
    8. '__()
' → logprob: -12.905586242675781
    9. '__
' → logprob: -13.030586242675781
    10. '__:' → logprob: -14.280586242675781

Token 864: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.10026188939809799
    2. 'solve' → logprob: -2.350261926651001
    3. ' main' → logprob: -11.100261688232422
    4. '   ' → logprob: -11.350261688232422
    5. ' solve' → logprob: -11.475261688232422
    6. '__' → logprob: -11.975261688232422
    7. '	main' → logprob: -12.100261688232422
    8. '```' → logprob: -12.725261688232422
    9. '_main' → logprob: -13.725261688232422
    10. '.solve' → logprob: -14.100261688232422

Token 865: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -16.0
    3. '	main' → logprob: -19.75
    4. 'import' → logprob: -19.875
    5. '   ' → logprob: -21.875
    6. '```' → logprob: -23.75
    7. '(main' → logprob: -23.875
    8. 'solve' → logprob: -24.75
    9. '.main' → logprob: -25.0
    10. '_main' → logprob: -26.125

Token 866: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 864
Tokens correctement prédits (1ère position, stricte): 312
Tokens correctement prédits (1ère position, avec adaptation): 337
Tokens correctement prédits (top 10): 685
Précision stricte (1ère position): 36.11%
Précision adaptée (1ère position): 39.00%
Précision (top 10): 79.28%
================================================================================
