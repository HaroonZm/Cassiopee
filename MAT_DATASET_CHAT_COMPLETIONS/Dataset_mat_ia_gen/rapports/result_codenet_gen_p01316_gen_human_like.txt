================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:13:51
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def clip(val):
    return max(0, min(255, val))

for line in sys.stdin:
    if not line.strip():
        continue
    N_M = line.strip().split()
    if len(N_M) != 2:
        continue
    N, M = map(int, N_M)
    if N == 0 and M == 0:
        break
    codebook = [int(sys.stdin.readline()) for _ in range(M)]
    x = [int(sys.stdin.readline()) for _ in range(N)]

    # DP: at step i, y_i can be 0..255, store minimal squared error sum
    # and for large N and state space 256, use a dict or list
    # But since states are 0-255, we can use array indexing

    prev_dp = [float('inf')] * 256
    prev_dp[128] = 0  # y_0 = 128

    for i in range(N):
        curr_dp = [float('inf')] * 256
        target = x[i]
        for y_prev in range(256):
            cost_so_far = prev_dp[y_prev]
            if cost_so_far == float('inf'):
                continue
            for c in codebook:
                y_curr = clip(y_prev + c)
                diff = target - y_curr
                new_cost = cost_so_far + diff * diff
                if new_cost < curr_dp[y_curr]:
                    curr_dp[y_curr] = new_cost
        prev_dp = curr_dp

    ans = min(prev_dp)
    print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.12063832581043243
    2. 'import' → logprob: -3.370638370513916
    3. '\n' → logprob: -3.495638370513916
    4. '' → logprob: -4.245638370513916
    5. '<|end|>' → logprob: -4.620638370513916
    6. '#' → logprob: -5.120638370513916
    7. 'print' → logprob: -5.120638370513916
    8. '\' → logprob: -6.495638370513916
    9. ',' → logprob: -6.495638370513916
    10. ';' → logprob: -6.620638370513916

Token 4: ' clip' (ID: 19925)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0201973095536232
    2. ' ' → logprob: -5.39519739151001
    3. '  ' → logprob: -6.39519739151001
    4. '<|end|>' → logprob: -6.39519739151001
    5. ' process' → logprob: -6.52019739151001
    6. ' space' → logprob: -6.77019739151001
    7. ' sys' → logprob: -6.89519739151001
    8. ' main' → logprob: -6.89519739151001
    9. ' a' → logprob: -7.02019739151001
    10. ')' → logprob: -7.27019739151001

Token 5: '(val' (ID: 17391)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0023549527395516634
    2. '_' → logprob: -6.752355098724365
    3. '(text' → logprob: -7.502355098724365
    4. '_clip' → logprob: -8.752354621887207
    5. '(value' → logprob: -8.877354621887207
    6. ' (' → logprob: -9.002354621887207
    7. '_text' → logprob: -10.377354621887207
    8. '(line' → logprob: -10.502354621887207
    9. '(x' → logprob: -10.627354621887207
    10. '(s' → logprob: -11.252354621887207

Token 6: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23676347732543945
    2. '):' → logprob: -1.6117634773254395
    3. ')' → logprob: -4.6117634773254395
    4. ' ,' → logprob: -7.1117634773254395
    5. ',val' → logprob: -8.236763000488281
    6. ' ' → logprob: -9.986763000488281
    7. '   ' → logprob: -10.361763000488281
    8. ',value' → logprob: -10.486763000488281
    9. 'ector' → logprob: -10.611763000488281
    10. 'er' → logprob: -11.236763000488281

Token 7: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02250269427895546
    2. ':' → logprob: -4.147502899169922
    3. '):' → logprob: -5.522502899169922
    4. ' return' → logprob: -7.647502899169922
    5. '(val' → logprob: -8.272502899169922
    6. ',' → logprob: -8.397502899169922
    7. ')' → logprob: -8.522502899169922
    8. '    ' → logprob: -8.772502899169922
    9. ' (' → logprob: -8.772502899169922
    10. ' val' → logprob: -8.897502899169922

Token 8: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8068383932113647
    2. ' if' → logprob: -1.5568383932113647
    3. ' return' → logprob: -1.8068383932113647
    4. '    ' → logprob: -2.3068385124206543
    5. ' max' → logprob: -2.8068385124206543
    6. ' val' → logprob: -5.056838512420654
    7. 'return' (adapté à ' return') → logprob: -5.181838512420654
    8. 'max' → logprob: -6.181838512420654
    9. ' ' → logprob: -6.306838512420654
    10. 'if' → logprob: -6.556838512420654

Token 9: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.010904799215495586
    2. ' min' → logprob: -4.885904788970947
    3. ' ' → logprob: -6.510904788970947
    4. ' val' → logprob: -6.635904788970947
    5. 'max' → logprob: -7.635904788970947
    6. 'min' → logprob: -12.635905265808105
    7. ' abs' → logprob: -12.885905265808105
    8. 'val' → logprob: -13.760905265808105
    9. ' ' → logprob: -14.010905265808105
    10. '  ' → logprob: -14.135905265808105

Token 10: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006706207641400397
    2. '(min' → logprob: -7.750670433044434
    3. '(val' → logprob: -8.375670433044434
    4. ' (' → logprob: -13.250670433044434
    5. '(-' → logprob: -13.375670433044434
    6. '0' → logprob: -13.500670433044434
    7. '(None' → logprob: -13.500670433044434
    8. '(abs' → logprob: -13.625670433044434
    9. '(value' → logprob: -14.625670433044434
    10. ')' → logprob: -14.750670433044434

Token 11: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005340605042874813
    2. 'val' → logprob: -6.005340576171875
    3. '-' → logprob: -6.755340576171875
    4. ' ' → logprob: -6.880340576171875
    5. 'min' → logprob: -7.630340576171875
    6. ' val' → logprob: -10.380340576171875
    7. ' -' → logprob: -10.505340576171875
    8. '1' → logprob: -11.005340576171875
    9. '   ' → logprob: -11.130340576171875
    10. 'abs' → logprob: -11.255340576171875

Token 12: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000883237924426794
    2. ',val' → logprob: -7.125883102416992
    3. ' ,' → logprob: -9.500883102416992
    4. ',value' → logprob: -13.500883102416992
    5. ',min' → logprob: -14.000883102416992
    6. ',int' → logprob: -14.500883102416992
    7. 'val' → logprob: -15.375883102416992
    8. '0' → logprob: -15.875883102416992
    9. '[val' → logprob: -16.000883102416992
    10. '‌,' → logprob: -16.125883102416992

Token 13: ' min' (ID: 1349)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.7547942996025085
    2. 'val' → logprob: -1.3797943592071533
    3. ' min' → logprob: -1.5047943592071533
    4. 'min' → logprob: -2.8797943592071533
    5. 'int' → logprob: -11.129794120788574
    6. ' int' → logprob: -11.629794120788574
    7. '  ' → logprob: -12.004794120788574
    8. '   ' → logprob: -12.254794120788574
    9. ' ' → logprob: -12.504794120788574
    10. '	val' → logprob: -12.754794120788574

Token 14: '(' (ID: 7)
  Prédit: '(val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.012790510430932045
    2. '(' → logprob: -4.387790679931641
    3. 'val' → logprob: -8.88779067993164
    4. ',val' → logprob: -9.76279067993164
    5. ' val' → logprob: -9.88779067993164
    6. '255' → logprob: -11.51279067993164
    7. '(int' → logprob: -12.01279067993164
    8. '(len' → logprob: -12.38779067993164
    9. ' (' → logprob: -12.76279067993164
    10. '[val' → logprob: -12.76279067993164

Token 15: '255' (ID: 6143)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.16201484203338623
    2. '255' → logprob: -1.9120148420333862
    3. ' val' → logprob: -6.412014961242676
    4. '(val' → logprob: -10.037014961242676
    5. ' ' → logprob: -10.537014961242676
    6. '```' → logprob: -11.037014961242676
    7. '0' → logprob: -11.662014961242676
    8. 'int' → logprob: -11.662014961242676
    9. '[val' → logprob: -11.912014961242676
    10. ',val' → logprob: -12.162014961242676

Token 16: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06734031438827515
    2. ',val' → logprob: -2.81734037399292
    3. '(val' → logprob: -5.56734037399292
    4. ' ,' → logprob: -6.81734037399292
    5. ' val' → logprob: -8.192339897155762
    6. 'val' → logprob: -8.942339897155762
    7. ')' → logprob: -11.067339897155762
    8. '))' → logprob: -11.817339897155762
    9. '   ' → logprob: -11.942339897155762
    10. '(' → logprob: -13.067339897155762

Token 17: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.20141859352588654
    2. 'val' → logprob: -1.7014186382293701
    3. 'int' → logprob: -12.70141887664795
    4. '	val' → logprob: -14.20141887664795
    5. '(val' → logprob: -14.20141887664795
    6. ' int' → logprob: -14.57641887664795
    7. '[val' → logprob: -15.95141887664795
    8. '   ' → logprob: -16.701417922973633
    9. ',val' → logprob: -16.701417922973633
    10. ' ' → logprob: -16.826417922973633

Token 18: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0006969464011490345
    2. ')' → logprob: -7.750697135925293
    3. ')))' → logprob: -8.250697135925293
    4. ' ))' → logprob: -12.625697135925293
    5. '))
' → logprob: -13.375697135925293
    6. '   ' → logprob: -16.375696182250977
    7. '()))' → logprob: -16.875696182250977
    8. ' ' → logprob: -17.250696182250977
    9. ' )' → logprob: -17.500696182250977
    10. '))))' → logprob: -17.750696182250977

Token 19: 'for' (ID: 1938)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1994733363389969
    2. '<|end|>' → logprob: -2.4494733810424805
    3. '
' → logprob: -3.0744733810424805
    4. '#' → logprob: -4.3244733810424805
    5. '

' → logprob: -4.9494733810424805
    6. ' def' → logprob: -5.3244733810424805
    7. '\n' → logprob: -5.4494733810424805
    8. ')' → logprob: -5.9494733810424805
    9. '*' → logprob: -5.9494733810424805
    10. '_' → logprob: -6.0744733810424805

Token 20: ' line' (ID: 2543)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0016801789170131087
    2. ' i' → logprob: -6.751680374145508
    3. ' val' → logprob: -8.376680374145508
    4. '  ' → logprob: -9.876680374145508
    5. ' space' → logprob: -10.126680374145508
    6. ' line' → logprob: -10.376680374145508
    7. ' item' → logprob: -10.376680374145508
    8. ' var' → logprob: -10.626680374145508
    9. ' color' → logprob: -11.126680374145508
    10. ' x' → logprob: -11.376680374145508

Token 21: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004132661037147045
    2. 'in' → logprob: -5.5041327476501465
    3. ' ' → logprob: -10.379132270812988
    4. '_in' → logprob: -12.629132270812988
    5. 'import' → logprob: -12.879132270812988
    6. 's' → logprob: -12.879132270812988
    7. '  ' → logprob: -13.004132270812988
    8. '<|end|>' → logprob: -13.129132270812988
    9. '	in' → logprob: -13.504132270812988
    10. ' =' → logprob: -13.879132270812988

Token 22: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.2014467716217041
    2. ' sys' → logprob: -1.701446771621704
    3. '=sys' → logprob: -10.701446533203125
    4. '	sys' → logprob: -12.451446533203125
    5. '(sys' → logprob: -12.826446533203125
    6. 's' → logprob: -13.576446533203125
    7. 'iter' → logprob: -13.826446533203125
    8. 'stdin' → logprob: -13.826446533203125
    9. ' ' → logprob: -15.701446533203125
    10. 'input' → logprob: -15.701446533203125

Token 23: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0007114782347343862
    2. '.' → logprob: -7.875711441040039
    3. '.argv' → logprob: -8.250711441040039
    4. '.stdout' → logprob: -10.375711441040039
    5. ' .' → logprob: -10.875711441040039
    6. '.readline' → logprob: -11.875711441040039
    7. '.std' → logprob: -12.000711441040039
    8. '.input' → logprob: -12.625711441040039
    9. 'stdin' → logprob: -13.375711441040039
    10. ' stdin' → logprob: -13.875711441040039

Token 24: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002826038980856538
    2. '.readline' → logprob: -6.12782621383667
    3. '.strip' → logprob: -8.627825736999512
    4. '.' → logprob: -9.002825736999512
    5. ':
' → logprob: -9.127825736999512
    6. '.readlines' → logprob: -9.877825736999512
    7. '.rstrip' → logprob: -10.002825736999512
    8. ' :' → logprob: -10.377825736999512
    9. ' in' → logprob: -10.627825736999512
    10. '>' → logprob: -11.627825736999512

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010811600368469954
    2. '    
' → logprob: -7.1260809898376465
    3. ':' → logprob: -8.876081466674805
    4. ' line' → logprob: -10.501081466674805
    5. '    ' → logprob: -11.001081466674805
    6. '.strip' → logprob: -11.376081466674805
    7. ' readline' → logprob: -11.751081466674805
    8. ' ' → logprob: -12.126081466674805
    9. '```' → logprob: -12.126081466674805
    10. ' if' → logprob: -12.376081466674805

Token 26: ' if' (ID: 538)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -1.2227874994277954
    2. 'line' → logprob: -1.9727874994277954
    3. ' values' → logprob: -2.097787380218506
    4. ' parts' → logprob: -2.097787380218506
    5. '   ' → logprob: -2.222787380218506
    6. ' r' → logprob: -2.722787380218506
    7. ' vals' → logprob: -3.472787380218506
    8. ' data' → logprob: -4.097787380218506
    9. ' val' → logprob: -4.347787380218506
    10. ' stripped' → logprob: -4.472787380218506

Token 27: ' not' (ID: 625)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.14852674305438995
    2. ' ' → logprob: -2.523526668548584
    3. ' not' → logprob: -3.398526668548584
    4. ' len' → logprob: -4.523526668548584
    5. ''' → logprob: -5.023526668548584
    6. 'line' → logprob: -5.523526668548584
    7. ' '' → logprob: -6.523526668548584
    8. '"' → logprob: -7.023526668548584
    9. '  ' → logprob: -8.773527145385742
    10. ' val' → logprob: -9.023527145385742

Token 28: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.0013269031187519431
    2. 'line' → logprob: -6.626327037811279
    3. ' ' → logprob: -14.251326560974121
    4. '	line' → logprob: -15.501326560974121
    5. '(line' → logprob: -16.126327514648438
    6. '=line' → logprob: -17.251327514648438
    7. '#line' → logprob: -17.626327514648438
    8. '[line' → logprob: -17.876327514648438
    9. ' linha' → logprob: -18.876327514648438
    10. ' ligne' → logprob: -18.876327514648438

Token 29: '.strip' (ID: 40613)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2258865386247635
    2. '.strip' → logprob: -1.600886583328247
    3. '.rstrip' → logprob: -7.975886344909668
    4. ' .' → logprob: -9.475886344909668
    5. '.startswith' → logprob: -10.100886344909668
    6. 'strip' → logprob: -12.725886344909668
    7. '.readline' → logprob: -12.850886344909668
    8. '<|end|>' → logprob: -13.100886344909668
    9. '.endswith' → logprob: -13.350886344909668
    10. '.chomp' → logprob: -14.100886344909668

Token 30: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.2526872456073761
    2. ':' → logprob: -1.5026872158050537
    3. '():
' → logprob: -7.502687454223633
    4. ' :' → logprob: -9.377687454223633
    5. ' ():' → logprob: -9.752687454223633
    6. '):' → logprob: -11.002687454223633
    7. ':return' → logprob: -11.377687454223633
    8. '()' → logprob: -11.502687454223633
    9. '():
' → logprob: -12.252687454223633
    10. ':
' → logprob: -12.377687454223633

Token 31: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008764470112510026
    2. ' continue' → logprob: -7.375876426696777
    3. '   ' → logprob: -8.500876426696777
    4. 'continue' → logprob: -11.625876426696777
    5. '    ' → logprob: -12.250876426696777
    6. ' ' → logprob: -12.375876426696777
    7. ' continues' → logprob: -12.750876426696777
    8. ',' → logprob: -13.000876426696777
    9. '	continue' → logprob: -13.000876426696777
    10. '```' → logprob: -13.000876426696777

Token 32: ' continue' (ID: 4901)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.06389804184436798
    2. '       ' → logprob: -3.6888980865478516
    3. ' continue' → logprob: -4.063898086547852
    4. '   ' → logprob: -4.563898086547852
    5. 'break' → logprob: -4.813898086547852
    6. 'continue' (adapté à ' continue') → logprob: -6.813898086547852
    7. '	break' → logprob: -9.938898086547852
    8. '    ' → logprob: -11.813898086547852
    9. '```' → logprob: -11.813898086547852
    10. ' ' → logprob: -12.188898086547852

Token 33: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00888766534626484
    2. '    
' → logprob: -4.758887767791748
    3. '
' → logprob: -8.63388729095459
    4. '<|end|>' → logprob: -10.88388729095459
    5. '        
' → logprob: -11.13388729095459
    6. '   
' → logprob: -11.25888729095459
    7. '    ' → logprob: -12.00888729095459
    8. '  
' → logprob: -12.00888729095459
    9. ',' → logprob: -12.38388729095459
    10. '     
' → logprob: -12.50888729095459

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004697834141552448
    2. '    
' → logprob: -5.379697799682617
    3. '
' → logprob: -10.879697799682617
    4. '    ' → logprob: -11.254697799682617
    5. '        
' → logprob: -11.629697799682617
    6. '   
' → logprob: -12.254697799682617
    7. ',' → logprob: -12.254697799682617
    8. '     
' → logprob: -12.942197799682617
    9. '<|end|>' → logprob: -13.067197799682617
    10. '    
' → logprob: -13.129697799682617

Token 35: ' N' (ID: 478)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6403439044952393
    2. ' parts' → logprob: -1.3903439044952393
    3. ' r' → logprob: -2.1403439044952393
    4. 'parts' → logprob: -3.1403439044952393
    5. '   ' → logprob: -4.14034366607666
    6. 'pixels' → logprob: -4.26534366607666
    7. ' values' → logprob: -5.39034366607666
    8. 'rgb' → logprob: -5.39034366607666
    9. 'values' → logprob: -5.64034366607666
    10. 'data' → logprob: -5.76534366607666

Token 36: '_M' (ID: 2372)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04781773313879967
    2. ',' → logprob: -3.5478177070617676
    3. '=' → logprob: -4.047817707061768
    4. ' ,' → logprob: -8.172818183898926
    5. '=int' → logprob: -9.172818183898926
    6. ' ' → logprob: -10.672818183898926
    7. '   ' → logprob: -10.797818183898926
    8. '  ' → logprob: -12.797818183898926
    9. ',int' → logprob: -12.797818183898926
    10. ')' → logprob: -12.922818183898926

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2257656753063202
    2. '=' → logprob: -1.6007657051086426
    3. ',' → logprob: -8.100765228271484
    4. 's' → logprob: -10.975765228271484
    5. '=line' → logprob: -11.725765228271484
    6. ' ' → logprob: -11.975765228271484
    7. ')' → logprob: -12.225765228271484
    8. '=int' → logprob: -12.975765228271484
    9. '_' → logprob: -13.100765228271484
    10. '  ' → logprob: -13.350765228271484

Token 38: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.46047669649124146
    2. 'line' → logprob: -1.0854766368865967
    3. ' list' → logprob: -3.8354766368865967
    4. 'list' → logprob: -4.710476875305176
    5. '[line' → logprob: -7.460476875305176
    6. ' [' → logprob: -10.460476875305176
    7. '=line' → logprob: -10.585476875305176
    8. '[' → logprob: -11.460476875305176
    9. '(line' → logprob: -11.585476875305176
    10. '	line' → logprob: -11.835476875305176

Token 39: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.10521519184112549
    2. '.split' → logprob: -2.355215072631836
    3. '.' → logprob: -5.355215072631836
    4. '.rstrip' → logprob: -8.230215072631836
    5. '.readline' → logprob: -12.730215072631836
    6. 'strip' → logprob: -13.605215072631836
    7. ' .' → logprob: -13.855215072631836
    8. 'split' → logprob: -13.980215072631836
    9. 'rstrip' → logprob: -16.980215072631836
    10. '.chomp' → logprob: -17.355215072631836

Token 40: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.004208275116980076
    2. '()' → logprob: -5.504208087921143
    3. '.split' → logprob: -9.0042085647583
    4. '(' → logprob: -13.2542085647583
    5. '.' → logprob: -13.5042085647583
    6. '())' → logprob: -13.7542085647583
    7. '().'' → logprob: -14.3792085647583
    8. 'split' → logprob: -14.5042085647583
    9. ' ().' → logprob: -14.8792085647583
    10. '   ' → logprob: -15.6292085647583

Token 41: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.128163257315464e-07
    2. ' split' → logprob: -16.0
    3. 'spl' → logprob: -16.125
    4. 'replace' → logprob: -17.875
    5. 'strip' → logprob: -17.875
    6. 'sp' → logprob: -18.125
    7. 'rstrip' → logprob: -18.125
    8. '.split' → logprob: -18.375
    9. 'startswith' → logprob: -18.75
    10. 'plit' → logprob: -18.75

Token 42: '()
' (ID: 1234)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.04369927942752838
    2. '()' → logprob: -3.293699264526367
    3. '("("' → logprob: -5.418699264526367
    4. '(' → logprob: -6.793699264526367
    5. ''' → logprob: -10.168699264526367
    6. '("' → logprob: -10.918699264526367
    7. '(None' → logprob: -12.043699264526367
    8. '(',' → logprob: -12.043699264526367
    9. '('.')' → logprob: -12.043699264526367
    10. '('(' → logprob: -12.793699264526367

Token 43: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 44: ' if' (ID: 538)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.4898248612880707
    2. '[' → logprob: -1.239824891090393
    3. 'n' → logprob: -2.7398247718811035
    4. ' N' → logprob: -4.3648247718811035
    5. '[N' → logprob: -5.2398247718811035
    6. 'if' (adapté à ' if') → logprob: -6.3648247718811035
    7. 'i' → logprob: -6.4898247718811035
    8. '   ' → logprob: -6.4898247718811035
    9. ' [' → logprob: -6.7398247718811035
    10. ')' → logprob: -6.7398247718811035

Token 45: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.04624336585402489
    2. ' int' → logprob: -3.92124342918396
    3. 'len' → logprob: -3.92124342918396
    4. ' N' → logprob: -5.421243190765381
    5. ' not' → logprob: -7.296243190765381
    6. 'int' → logprob: -7.796243190765381
    7. 'N' → logprob: -10.421243667602539
    8. '(len' → logprob: -12.046243667602539
    9. ' ' → logprob: -12.171243667602539
    10. ' float' → logprob: -13.296243667602539

Token 46: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.043007753789424896
    2. '(' → logprob: -3.1680078506469727
    3. '<|end|>' → logprob: -13.418007850646973
    4. ' (' → logprob: -13.793007850646973
    5. '<|end|>' → logprob: -13.793007850646973
    6. '(
' → logprob: -14.293007850646973
    7. '('' → logprob: -14.543007850646973
    8. 'N' → logprob: -14.668007850646973
    9. '()' → logprob: -14.793007850646973
    10. ')' → logprob: -14.918007850646973

Token 47: '_M' (ID: 2372)
  Prédit: '_M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_M' → logprob: -0.00048644188791513443
    2. '_' → logprob: -8.000486373901367
    3. ')' → logprob: -9.500486373901367
    4. ')_' → logprob: -10.250486373901367
    5. '_N' → logprob: -11.500486373901367
    6. '_)' → logprob: -11.875486373901367
    7. ' _' → logprob: -12.000486373901367
    8. '```' → logprob: -12.000486373901367
    9. '(M' → logprob: -12.500486373901367
    10. '<|end|>' → logprob: -14.125486373901367

Token 48: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07365056872367859
    2. ' !=' → logprob: -2.823650598526001
    3. ' <' → logprob: -5.073650360107422
    4. '!=' → logprob: -6.073650360107422
    5. ' )' → logprob: -6.198650360107422
    6. '<' → logprob: -7.823650360107422
    7. ' ==' → logprob: -8.073650360107422
    8. '==' → logprob: -8.948650360107422
    9. ')!=' → logprob: -8.948650360107422
    10. ' ' → logprob: -11.073650360107422

Token 49: ' !=' (ID: 1666)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.4484331011772156
    2. ' !=' → logprob: -1.0734331607818604
    3. '<' → logprob: -4.448432922363281
    4. ' ==' → logprob: -5.448432922363281
    5. '!=' → logprob: -5.823432922363281
    6. '==' → logprob: -8.073432922363281
    7. ' ' → logprob: -9.198432922363281
    8. '[' → logprob: -9.698432922363281
    9. '<len' → logprob: -10.823432922363281
    10. '<int' → logprob: -10.948432922363281

Token 50: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.003178901970386505
    2. ' ' → logprob: -5.75317907333374
    3. '1' → logprob: -15.128178596496582
    4. '   ' → logprob: -15.378178596496582
    5. '```' → logprob: -16.0031795501709
    6. '  ' → logprob: -16.2531795501709
    7. '3' → logprob: -16.6281795501709
    8. '>' → logprob: -16.8156795501709
    9. '`' → logprob: -16.9406795501709
    10. '=' → logprob: -17.0656795501709

Token 51: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001410850090906024
    2. ' ' → logprob: -8.875141143798828
    3. '1' → logprob: -14.250141143798828
    4. '```' → logprob: -16.000141143798828
    5. '   ' → logprob: -16.250141143798828
    6. '  ' → logprob: -16.750141143798828
    7. '3' → logprob: -16.875141143798828
    8. '<|end|>' → logprob: -17.375141143798828
    9. '۲' → logprob: -17.625141143798828
    10. ')' → logprob: -17.937641143798828

Token 52: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007326744962483644
    2. ' or' → logprob: -7.375732898712158
    3. ':
' → logprob: -9.500732421875
    4. ' :' → logprob: -10.750732421875
    5. ':return' → logprob: -12.125732421875
    6. '   ' → logprob: -13.375732421875
    7. '):' → logprob: -14.000732421875
    8. ' and' → logprob: -14.125732421875
    9. 'or' → logprob: -15.000732421875
    10. ')' → logprob: -15.625732421875

Token 53: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008107058703899384
    2. '   ' → logprob: -5.1331071853637695
    3. ':' → logprob: -6.2581071853637695
    4. ' continue' → logprob: -9.00810718536377
    5. '    ' → logprob: -10.38310718536377
    6. '	   ' → logprob: -10.75810718536377
    7. '	' → logprob: -10.88310718536377
    8. '```' → logprob: -11.25810718536377
    9. '	continue' → logprob: -11.50810718536377
    10. 'continue' → logprob: -11.75810718536377

Token 54: ' continue' (ID: 4901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5682939887046814
    2. ' continue' → logprob: -1.4432940483093262
    3. '   ' → logprob: -2.318294048309326
    4. ' break' → logprob: -3.068294048309326
    5. 'continue' (adapté à ' continue') → logprob: -3.068294048309326
    6. 'break' → logprob: -5.443294048309326
    7. '```' → logprob: -7.068294048309326
    8. '           ' → logprob: -8.193293571472168
    9. ' ' → logprob: -8.818293571472168
    10. '    ' → logprob: -9.193293571472168

Token 55: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5232154130935669
    2. '
' → logprob: -1.398215413093567
    3. '    
' → logprob: -1.898215413093567
    4. '```' → logprob: -6.273215293884277
    5. '<|end|>' → logprob: -6.398215293884277
    6. '        
' → logprob: -6.523215293884277
    7. '  
' → logprob: -6.773215293884277
    8. '\n' → logprob: -7.148215293884277
    9. '   
' → logprob: -7.398215293884277
    10. ',' → logprob: -7.523215293884277

Token 56: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07779061049222946
    2. '    
' → logprob: -2.7027904987335205
    3. '```' → logprob: -5.7027907371521
    4. '
' → logprob: -5.8277907371521
    5. '        
' → logprob: -7.8277907371521
    6. '       ' → logprob: -8.327790260314941
    7. '  
' → logprob: -8.327790260314941
    8. '\n' → logprob: -8.702790260314941
    9. '   
' → logprob: -9.202790260314941
    10. '`' → logprob: -9.452790260314941

Token 57: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.3908246159553528
    2. ' N' → logprob: -1.640824556350708
    3. '    
' → logprob: -3.140824556350708
    4. '   ' → logprob: -3.140824556350708
    5. 'n' → logprob: -3.515824556350708
    6. ' 
' → logprob: -5.390824794769287
    7. '
' → logprob: -5.640824794769287
    8. '```' → logprob: -6.890824794769287
    9. ' try' → logprob: -7.140824794769287
    10. ' n' → logprob: -7.140824794769287

Token 58: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02119043469429016
    2. '_,' → logprob: -4.771190643310547
    3. '_' → logprob: -5.021190643310547
    4. ' =' → logprob: -6.396190643310547
    5. ',_' → logprob: -6.396190643310547
    6. ' ,' → logprob: -7.771190643310547
    7. '_num' → logprob: -7.896190643310547
    8. '=' → logprob: -8.021190643310547
    9. '_val' → logprob: -8.396190643310547
    10. ',N' → logprob: -8.396190643310547

Token 59: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.5810245275497437
    2. 'M' → logprob: -0.8310245275497437
    3. '<|end|>' → logprob: -5.331024646759033
    4. ' ' → logprob: -8.956024169921875
    5. 'int' → logprob: -10.581024169921875
    6. '<|end|>' → logprob: -10.831024169921875
    7. 'space' → logprob: -11.331024169921875
    8. ' ' → logprob: -12.081024169921875
    9. '  ' → logprob: -12.206024169921875
    10. '```' → logprob: -12.331024169921875

Token 60: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02630401775240898
    2. '=' → logprob: -3.651304006576538
    3. ')' → logprob: -13.401304244995117
    4. '=int' → logprob: -13.776304244995117
    5. ',' → logprob: -14.401304244995117
    6. ' ' → logprob: -15.776304244995117
    7. ' =
' → logprob: -15.901304244995117
    8. '```' → logprob: -16.526304244995117
    9. ' =)' → logprob: -16.776304244995117
    10. '<|end|>' → logprob: -17.276304244995117

Token 61: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.08000504225492477
    2. ' int' → logprob: -2.580004930496216
    3. 'int' → logprob: -7.205005168914795
    4. 'map' → logprob: -7.955005168914795
    5. '[int' → logprob: -11.705004692077637
    6. ' N' → logprob: -11.830004692077637
    7. ' [' → logprob: -12.955004692077637
    8. ' ' → logprob: -13.830004692077637
    9. ' list' → logprob: -13.955004692077637
    10. '(map' → logprob: -14.955004692077637

Token 62: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00025514091248624027
    2. 'int' → logprob: -8.625255584716797
    3. '(' → logprob: -9.625255584716797
    4. '[int' → logprob: -12.125255584716797
    5. '(str' → logprob: -13.625255584716797
    6. '<int' → logprob: -13.625255584716797
    7. '```' → logprob: -14.375255584716797
    8. '=int' → logprob: -15.375255584716797
    9. ' int' → logprob: -15.375255584716797
    10. ']int' → logprob: -15.625255584716797

Token 63: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12622950971126556
    2. '(N' → logprob: -2.3762295246124268
    3. ',N' → logprob: -3.8762295246124268
    4. ')' → logprob: -5.626229286193848
    5. '(' → logprob: -7.251229286193848
    6. ' ,' → logprob: -7.876229286193848
    7. ',(' → logprob: -9.501229286193848
    8. ' (' → logprob: -9.751229286193848
    9. ',line' → logprob: -10.251229286193848
    10. ')(' → logprob: -10.501229286193848

Token 64: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.575939953327179
    2. 'N' → logprob: -0.825939953327179
    3. ' ' → logprob: -15.450940132141113
    4. ')' → logprob: -15.700940132141113
    5. '   ' → logprob: -16.950939178466797
    6. '	N' → logprob: -17.075939178466797
    7. '[N' → logprob: -18.325939178466797
    8. ' ' → logprob: -18.700939178466797
    9. '(N' → logprob: -19.450939178466797
    10. '  ' → logprob: -19.700939178466797

Token 65: '_M' (ID: 2372)
  Prédit: '_M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_M' → logprob: -4.320199877838604e-07
    2. ')' → logprob: -15.375
    3. ')_' → logprob: -16.25
    4. '```' → logprob: -16.875
    5. 'M' → logprob: -17.0
    6. '(M' → logprob: -17.375
    7. '_MC' → logprob: -18.125
    8. '[M' → logprob: -18.625
    9. ',M' → logprob: -18.875
    10. ',_' → logprob: -18.875

Token 66: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.961759259458631e-06
    2. ')`' → logprob: -13.125004768371582
    3. ' )' → logprob: -13.750004768371582
    4. '))' → logprob: -14.125004768371582
    5. '):' → logprob: -14.875004768371582
    6. ')
' → logprob: -15.625004768371582
    7. ')}' → logprob: -16.1250057220459
    8. '),' → logprob: -16.5000057220459
    9. ')**' → logprob: -16.6250057220459
    10. '[' → logprob: -16.8750057220459

Token 67: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5898228287696838
    2. 'for' → logprob: -2.089822769165039
    3. '    
' → logprob: -2.839822769165039
    4. '   ' → logprob: -2.839822769165039
    5. '<|end|>' → logprob: -3.214822769165039
    6. 'data' → logprob: -3.464822769165039
    7. '```' → logprob: -3.839822769165039
    8. ' for' → logprob: -3.964822769165039
    9. ':' → logprob: -4.339822769165039
    10. ',' → logprob: -4.589822769165039

Token 68: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19512449204921722
    2. 'data' → logprob: -2.445124387741089
    3. '    
' → logprob: -3.695124387741089
    4. '[' → logprob: -4.695124626159668
    5. '   ' → logprob: -4.695124626159668
    6. '[
' → logprob: -5.320124626159668
    7. 'for' → logprob: -5.320124626159668
    8. ' 
' → logprob: -5.695124626159668
    9. ':' → logprob: -5.695124626159668
    10. '   
' → logprob: -5.945124626159668

Token 69: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.00971560925245285
    2. 'N' → logprob: -4.759715557098389
    3. ' M' → logprob: -7.134715557098389
    4. ' not' → logprob: -8.384716033935547
    5. ' ' → logprob: -9.634716033935547
    6. 'M' → logprob: -12.259716033935547
    7. ' ' → logprob: -13.634716033935547
    8. ' n' → logprob: -13.759716033935547
    9. ' len' → logprob: -13.759716033935547
    10. 'not' → logprob: -14.634716033935547

Token 70: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -1.0231138467788696
    2. ' <=' → logprob: -1.1481138467788696
    3. ' <' → logprob: -1.5231138467788696
    4. ' ==' → logprob: -2.39811372756958
    5. '>' → logprob: -5.27311372756958
    6. '<' → logprob: -5.77311372756958
    7. '==' → logprob: -5.89811372756958
    8. '<=' → logprob: -6.27311372756958
    9. ' ' → logprob: -7.02311372756958
    10. ' >=' → logprob: -8.398114204406738

Token 71: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.061976201832294464
    2. ' ' → logprob: -2.811976194381714
    3. '1' → logprob: -13.374476432800293
    4. '-' → logprob: -13.936976432800293
    5. ' M' → logprob: -13.999476432800293
    6. '  ' → logprob: -14.186976432800293
    7. ' N' → logprob: -14.499476432800293
    8. '=' → logprob: -14.686976432800293
    9. ' -' → logprob: -14.811976432800293
    10. '<|end|>' → logprob: -14.936976432800293

Token 72: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017583600711077452
    2. ' ' → logprob: -6.376758575439453
    3. '-' → logprob: -9.876758575439453
    4. ' -' → logprob: -13.501758575439453
    5. '  ' → logprob: -14.814258575439453
    6. 'N' → logprob: -15.189258575439453
    7. '   ' → logprob: -15.314258575439453
    8. 'M' → logprob: -15.376758575439453
    9. ' M' → logprob: -15.439258575439453
    10. '1' → logprob: -15.564258575439453

Token 73: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07354380935430527
    2. 'and' → logprob: -2.6985437870025635
    3. ' or' → logprob: -5.823544025421143
    4. ':' → logprob: -7.448544025421143
    5. ' ' → logprob: -9.948543548583984
    6. '<|end|>' → logprob: -12.073543548583984
    7. '	and' → logprob: -12.448543548583984
    8. ' a' → logprob: -13.323543548583984
    9. 'or' → logprob: -13.698543548583984
    10. ' an' → logprob: -14.948543548583984

Token 74: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.1269412338733673
    2. 'M' → logprob: -2.126941204071045
    3. ' ' → logprob: -11.876941680908203
    4. '<|end|>' → logprob: -13.001941680908203
    5. '   ' → logprob: -13.251941680908203
    6. '  ' → logprob: -13.501941680908203
    7. '	M' → logprob: -15.001941680908203
    8. '    ' → logprob: -15.251941680908203
    9. ' ' → logprob: -15.251941680908203
    10. '<|end|>' → logprob: -16.126941680908203

Token 75: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.030172063037753105
    2. '==' → logprob: -3.530172109603882
    3. '<|end|>' → logprob: -8.030172348022461
    4. '<|end|>' → logprob: -10.280172348022461
    5. ' ' → logprob: -10.530172348022461
    6. '0' → logprob: -10.905172348022461
    7. ')==' → logprob: -12.780172348022461
    8. '  ' → logprob: -12.905172348022461
    9. ' ' → logprob: -13.030172348022461
    10. '=' → logprob: -13.405172348022461

Token 76: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07889066636562347
    2. ' ' → logprob: -2.578890562057495
    3. ' ' → logprob: -14.453890800476074
    4. '<|end|>' → logprob: -15.453890800476074
    5. '  ' → logprob: -16.078889846801758
    6. '۰' → logprob: -17.828889846801758
    7. '   ' → logprob: -17.953889846801758
    8. '	' → logprob: -18.203889846801758
    9. '<|end|>' → logprob: -18.203889846801758
    10. '=' → logprob: -19.203889846801758

Token 77: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017994173686020076
    2. ' ' → logprob: -8.6251802444458
    3. '<|end|>' → logprob: -15.0001802444458
    4. '  ' → logprob: -17.125179290771484
    5. '۰' → logprob: -17.562679290771484
    6. '<|end|>' → logprob: -18.312679290771484
    7. '   ' → logprob: -18.625179290771484
    8. '```' → logprob: -18.625179290771484
    9. ')' → logprob: -18.687679290771484
    10. '1' → logprob: -19.000179290771484

Token 78: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0019443416967988014
    2. ':
' → logprob: -6.251944541931152
    3. '   ' → logprob: -11.626944541931152
    4. '       ' → logprob: -12.501944541931152
    5. ':return' → logprob: -13.751944541931152
    6. ' :' → logprob: -14.626944541931152
    7. '<|end|>' → logprob: -14.751944541931152
    8. '.' → logprob: -15.251944541931152
    9. ':
' → logprob: -15.376944541931152
    10. '	break' → logprob: -15.876944541931152

Token 79: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08215202391147614
    2. ':' → logprob: -2.5821521282196045
    3. '   ' → logprob: -5.957151889801025
    4. ':
' → logprob: -7.582151889801025
    5. '<|end|>' → logprob: -9.582152366638184
    6. '      ' → logprob: -11.207152366638184
    7. '	break' → logprob: -11.207152366638184
    8. '.' → logprob: -11.457152366638184
    9. '     ' → logprob: -11.832152366638184
    10. '	' → logprob: -11.832152366638184

Token 80: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.003959547728300095
    2. 'break' (adapté à ' break') → logprob: -5.753959655761719
    3. '   ' → logprob: -7.878959655761719
    4. '       ' → logprob: -8.003959655761719
    5. '	break' → logprob: -9.628959655761719
    6. ' bre' → logprob: -14.628959655761719
    7. ' brake' → logprob: -14.753959655761719
    8. '_break' → logprob: -14.753959655761719
    9. ' ' → logprob: -15.003959655761719
    10. ' ' → logprob: -15.128959655761719

Token 81: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4728555977344513
    2. '   ' → logprob: -1.222855567932129
    3. '    
' → logprob: -3.222855567932129
    4. '<|end|>' → logprob: -4.222855567932129
    5. '\n' → logprob: -4.847855567932129
    6. '#' → logprob: -5.097855567932129
    7. '```' → logprob: -5.097855567932129
    8. '  
' → logprob: -6.347855567932129
    9. ')' → logprob: -6.597855567932129
    10. '\' → logprob: -7.347855567932129

Token 82: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3379380702972412
    2. '    
' → logprob: -1.7129380702972412
    3. '
' → logprob: -2.337938070297241
    4. '```' → logprob: -4.96293830871582
    5. '  
' → logprob: -7.21293830871582
    6. '<|end|>' → logprob: -7.71293830871582
    7. '   
' → logprob: -7.83793830871582
    8. '\n' → logprob: -7.96293830871582
    9. 'newline' → logprob: -8.58793830871582
    10. '#' → logprob: -8.96293830871582

Token 83: ' code' (ID: 3490)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    
' → logprob: -1.0517704486846924
    2. '   ' → logprob: -1.3017704486846924
    3. '
' → logprob: -1.8017704486846924
    4. 'image' → logprob: -3.1767704486846924
    5. ' image' → logprob: -3.1767704486846924
    6. 'pixels' → logprob: -3.5517704486846924
    7. 'data' → logprob: -3.6767704486846924
    8. ' pixels' → logprob: -3.9267704486846924
    9. 'matrix' → logprob: -4.176770210266113
    10. ' matrix' → logprob: -4.551770210266113

Token 84: 'book' (ID: 3092)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 85: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0011572468793019652
    2. '=' → logprob: -7.751157283782959
    3. '_' → logprob: -7.751157283782959
    4. ' ' → logprob: -8.6261568069458
    5. 's' → logprob: -10.0011568069458
    6. ' =
' → logprob: -10.8761568069458
    7. '[' → logprob: -11.1261568069458
    8. '_colors' → logprob: -12.6261568069458
    9. '_lines' → logprob: -12.6261568069458
    10. ' =[' → logprob: -12.8761568069458

Token 86: ' [' (ID: 723)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.026773126795887947
    2. ' {}' → logprob: -3.77677321434021
    3. '[]' → logprob: -5.776772975921631
    4. ' [' → logprob: -8.651773452758789
    5. '{}' → logprob: -8.776773452758789
    6. ' ' → logprob: -10.026773452758789
    7. '[' → logprob: -10.776773452758789
    8. ' {}\' → logprob: -11.651773452758789
    9. ' {' → logprob: -12.276773452758789
    10. ' []
' → logprob: -12.651773452758789

Token 87: 'int' (ID: 491)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.873903214931488
    2. '[]' → logprob: -1.2489032745361328
    3. '[' → logprob: -2.248903274536133
    4. ' []' → logprob: -2.748903274536133
    5. ']' → logprob: -2.998903274536133
    6. ' list' → logprob: -3.623903274536133
    7. ' [' → logprob: -3.748903274536133
    8. '0' → logprob: -4.873903274536133
    9. '[list' → logprob: -5.373903274536133
    10. 'tuple' → logprob: -5.498903274536133

Token 88: '(sys' (ID: 41042)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.4662812650203705
    2. '(' → logprob: -1.4662812948226929
    3. '(sys' → logprob: -3.2162811756134033
    4. '()' → logprob: -3.2162811756134033
    5. '(x' → logprob: -3.5912811756134033
    6. '()]' → logprob: -3.9662811756134033
    7. '(line' → logprob: -4.716281414031982
    8. '(s' → logprob: -6.341281414031982
    9. '(i' → logprob: -6.341281414031982
    10. ']' → logprob: -6.841281414031982

Token 89: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.02409060299396515
    2. '.readline' → logprob: -4.149090766906738
    3. '.' → logprob: -5.024090766906738
    4. '(stdin' → logprob: -6.899090766906738
    5. 'stdin' → logprob: -8.024090766906738
    6. '().' → logprob: -9.899090766906738
    7. '.)' → logprob: -10.274090766906738
    8. ' stdin' → logprob: -12.149090766906738
    9. ')' → logprob: -12.149090766906738
    10. '.argv' → logprob: -12.774090766906738

Token 90: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0002222516923211515
    2. '.' → logprob: -8.500222206115723
    3. '().' → logprob: -11.000222206115723
    4. ')' → logprob: -14.000222206115723
    5. '()' → logprob: -14.625222206115723
    6. '())' → logprob: -14.875222206115723
    7. ' readline' → logprob: -15.750222206115723
    8. '()
' → logprob: -16.37522315979004
    9. '.)' → logprob: -16.87522315979004
    10. '.next' → logprob: -17.00022315979004

Token 91: '())' (ID: 3516)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.06359483301639557
    2. '())' → logprob: -2.8135948181152344
    3. '()' → logprob: -6.438594818115234
    4. '()
' → logprob: -11.313594818115234
    5. ' ())' → logprob: -12.063594818115234
    6. '()]' → logprob: -12.938594818115234
    7. '(' → logprob: -13.313594818115234
    8. ')' → logprob: -13.438594818115234
    9. '())
' → logprob: -14.063594818115234
    10. ' ().' → logprob: -14.438594818115234

Token 92: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03496035933494568
    2. '().' → logprob: -3.6599602699279785
    3. ' for' → logprob: -5.4099602699279785
    4. '()]' → logprob: -5.9099602699279785
    5. 'for' → logprob: -7.1599602699279785
    6. '(' → logprob: -8.784960746765137
    7. ')' → logprob: -9.034960746765137
    8. '())' → logprob: -9.159960746765137
    9. ' ()' → logprob: -9.534960746765137
    10. '.strip' → logprob: -9.659960746765137

Token 93: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.007960181683301926
    2. 'range' → logprob: -5.007960319519043
    3. ' _' → logprob: -7.382960319519043
    4. ' ' → logprob: -7.882960319519043
    5. '_' → logprob: -8.382960319519043
    6. ' in' → logprob: -12.257960319519043
    7. ' xrange' → logprob: -12.382960319519043
    8. '	range' → logprob: -12.632960319519043
    9. '_range' → logprob: -13.632960319519043
    10. '(range' → logprob: -13.882960319519043

Token 94: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011861939914524555
    2. ' range' → logprob: -4.761861801147461
    3. ' in' → logprob: -6.386861801147461
    4. 'in' → logprob: -6.511861801147461
    5. ' ' → logprob: -10.511861801147461
    6. '	range' → logprob: -11.011861801147461
    7. '  ' → logprob: -11.761861801147461
    8. 'ran' → logprob: -12.136861801147461
    9. ' xrange' → logprob: -13.136861801147461
    10. '(range' → logprob: -13.136861801147461

Token 95: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.28118833899497986
    2. ' range' → logprob: -1.4061883687973022
    3. ' ' → logprob: -11.031188011169434
    4. ' xrange' → logprob: -11.656188011169434
    5. '	range' → logprob: -12.531188011169434
    6. 'rang' → logprob: -13.031188011169434
    7. '(range' → logprob: -13.031188011169434
    8. ' ran' → logprob: -13.906188011169434
    9. '[' → logprob: -13.906188011169434
    10. 'r' → logprob: -14.406188011169434

Token 96: '(M' (ID: 6103)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.5767925977706909
    2. '(M' → logprob: -0.8267925977706909
    3. '(' → logprob: -7.0767927169799805
    4. ' (' → logprob: -11.82679271697998
    5. '(
' → logprob: -14.70179271697998
    6. '(A' → logprob: -16.201791763305664
    7. '(n' → logprob: -16.201791763305664
    8. '(int' → logprob: -16.576791763305664
    9. '(S' → logprob: -16.576791763305664
    10. 'M' → logprob: -16.701791763305664

Token 97: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.01047289464622736
    2. ')' → logprob: -4.635472774505615
    3. ']' → logprob: -7.260472774505615
    4. ' )' → logprob: -12.260473251342773
    5. ')
' → logprob: -12.885473251342773
    6. ')])' → logprob: -14.010473251342773
    7. ')]
' → logprob: -14.135473251342773
    8. '   ' → logprob: -14.260473251342773
    9. ' ]' → logprob: -14.385473251342773
    10. '))' → logprob: -14.510473251342773

Token 98: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.292111873626709
    2. '<|end|>' → logprob: -1.667111873626709
    3. ' for' → logprob: -2.167111873626709
    4. 'pixels' → logprob: -2.542111873626709
    5. 'data' → logprob: -2.667111873626709
    6. '   ' → logprob: -2.667111873626709
    7. '
' → logprob: -2.792111873626709
    8. ' ' → logprob: -3.917111873626709
    9. 'indices' → logprob: -4.417111873626709
    10. 'image' → logprob: -4.542111873626709

Token 99: ' x' (ID: 1215)
  Prédit: 'image'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'image' → logprob: -1.161637306213379
    2. ' image' → logprob: -1.911637306213379
    3. 'result' → logprob: -2.161637306213379
    4. 'output' → logprob: -2.661637306213379
    5. 'pixels' → logprob: -2.786637306213379
    6. '   ' → logprob: -3.286637306213379
    7. ' for' → logprob: -3.411637306213379
    8. ' result' → logprob: -3.536637306213379
    9. ' output' → logprob: -3.661637306213379
    10. 'data' → logprob: -3.661637306213379

Token 100: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23095278441905975
    2. 's' → logprob: -1.9809527397155762
    3. '=' → logprob: -3.605952739715576
    4. '_' → logprob: -3.980952739715576
    5. ',' → logprob: -4.855952739715576
    6. '=[]' → logprob: -5.980952739715576
    7. '_values' → logprob: -6.105952739715576
    8. 'for' → logprob: -6.605952739715576
    9. 'or' → logprob: -6.730952739715576
    10. '_list' → logprob: -7.105952739715576

Token 101: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1211496591567993
    2. ' ' → logprob: -1.4961496591567993
    3. ' [' → logprob: -1.6211496591567993
    4. ' int' → logprob: -2.8711495399475098
    5. ' list' → logprob: -2.9961495399475098
    6. '[' → logprob: -3.4961495399475098
    7. ' []' → logprob: -3.4961495399475098
    8. '[]' → logprob: -3.4961495399475098
    9. 'int' → logprob: -4.12114953994751
    10. '[int' → logprob: -4.24614953994751

Token 102: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.02534257248044014
    2. '0' → logprob: -3.9003424644470215
    3. 'float' → logprob: -6.6503424644470215
    4. 'list' → logprob: -7.0253424644470215
    5. ']' → logprob: -7.2753424644470215
    6. '[]' → logprob: -7.5253424644470215
    7. '[int' → logprob: -7.7753424644470215
    8. '[' → logprob: -8.65034294128418
    9. ']int' → logprob: -8.77534294128418
    10. ' int' → logprob: -8.77534294128418

Token 103: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.020040402188897133
    2. '(' → logprob: -4.020040512084961
    3. '(s' → logprob: -6.395040512084961
    4. '(x' → logprob: -9.520040512084961
    5. '(line' → logprob: -10.645040512084961
    6. '(i' → logprob: -10.770040512084961
    7. '(system' → logprob: -11.020040512084961
    8. '(
' → logprob: -11.395040512084961
    9. '=sys' → logprob: -11.645040512084961
    10. ' (' → logprob: -11.770040512084961

Token 104: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00014001218369230628
    2. '.readline' → logprob: -10.125140190124512
    3. '.' → logprob: -10.500140190124512
    4. '.stdout' → logprob: -10.750140190124512
    5. '.std' → logprob: -10.750140190124512
    6. 'stdin' → logprob: -10.750140190124512
    7. '(stdin' → logprob: -12.375140190124512
    8. '.argv' → logprob: -13.375140190124512
    9. '().' → logprob: -15.125140190124512
    10. '.in' → logprob: -15.375140190124512

Token 105: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -2.5776860184123507e-06
    2. '.' → logprob: -13.50000286102295
    3. '.stdin' → logprob: -14.75000286102295
    4. 'stdin' → logprob: -15.25000286102295
    5. '.readlines' → logprob: -16.000001907348633
    6. ' readline' → logprob: -16.375001907348633
    7. ')' → logprob: -16.750001907348633
    8. '=sys' → logprob: -17.000001907348633
    9. '.read' → logprob: -17.125001907348633
    10. '(stdin' → logprob: -17.375001907348633

Token 106: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0003210422000847757
    2. '()' → logprob: -8.375321388244629
    3. '().' → logprob: -9.500321388244629
    4. '()]' → logprob: -12.125321388244629
    5. '())
' → logprob: -12.375321388244629
    6. ' ())' → logprob: -12.875321388244629
    7. ')' → logprob: -13.750321388244629
    8. '()))' → logprob: -14.125321388244629
    9. '()
' → logprob: -14.500321388244629
    10. '(' → logprob: -15.750321388244629

Token 107: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0004384174826554954
    2. ')' → logprob: -8.000438690185547
    3. ' for' → logprob: -9.750438690185547
    4. 'for' → logprob: -11.125438690185547
    5. ' ()' → logprob: -11.250438690185547
    6. '())' → logprob: -11.500438690185547
    7. '()]' → logprob: -12.375438690185547
    8. '   ' → logprob: -13.875438690185547
    9. '()
' → logprob: -14.375438690185547
    10. ']' → logprob: -14.875438690185547

Token 108: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.11300480365753174
    2. '_' → logprob: -2.613004684448242
    3. 'range' → logprob: -3.488004684448242
    4. ' _' → logprob: -6.113004684448242
    5. ' in' → logprob: -7.738004684448242
    6. '_range' → logprob: -8.363004684448242
    7. '(range' → logprob: -9.488004684448242
    8. ' xrange' → logprob: -11.363004684448242
    9. '	range' → logprob: -12.363004684448242
    10. ' ' → logprob: -13.613004684448242

Token 109: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12568067014217377
    2. ' range' → logprob: -2.250680685043335
    3. '_' → logprob: -4.500680446624756
    4. ' in' → logprob: -7.125680446624756
    5. '_range' → logprob: -7.375680446624756
    6. '(range' → logprob: -9.375680923461914
    7. 'in' → logprob: -9.750680923461914
    8. ' _' → logprob: -9.750680923461914
    9. ' xrange' → logprob: -11.875680923461914
    10. ' ' → logprob: -11.875680923461914

Token 110: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.16025622189044952
    2. 'range' → logprob: -1.910256266593933
    3. '(range' → logprob: -10.660256385803223
    4. ' xrange' → logprob: -12.035256385803223
    5. ' ' → logprob: -13.910256385803223
    6. '	range' → logprob: -14.535256385803223
    7. '_range' → logprob: -14.785256385803223
    8. 'x' → logprob: -15.535256385803223
    9. ' ran' → logprob: -15.910256385803223
    10. 'N' → logprob: -16.285255432128906

Token 111: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0004969134461134672
    2. '(M' → logprob: -8.250496864318848
    3. ' (' → logprob: -8.750496864318848
    4. '(' → logprob: -9.500496864318848
    5. 'N' → logprob: -14.125496864318848
    6. '(n' → logprob: -14.125496864318848
    7. ' N' → logprob: -14.875496864318848
    8. '((' → logprob: -15.375496864318848
    9. ' ' → logprob: -16.125497817993164
    10. '(I' → logprob: -17.000497817993164

Token 112: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.008094288408756256
    2. ']' → logprob: -4.883094310760498
    3. ')' → logprob: -7.758094310760498
    4. '])' → logprob: -10.63309383392334
    5. '])]' → logprob: -11.38309383392334
    6. ' ]' → logprob: -12.00809383392334
    7. '   ' → logprob: -12.38309383392334
    8. ')])' → logprob: -12.50809383392334
    9. ')]
' → logprob: -12.88309383392334
    10. ' )' → logprob: -12.88309383392334

Token 113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3473365306854248
    2. 'result' → logprob: -1.5973365306854248
    3. '
' → logprob: -1.8473365306854248
    4. 'for' → logprob: -1.9723365306854248
    5. 'y' → logprob: -2.097336530685425
    6. 'output' → logprob: -3.347336530685425
    7. 'res' → logprob: -4.347336769104004
    8. 'r' → logprob: -4.347336769104004
    9. '    
' → logprob: -4.722336769104004
    10. 'decoded' → logprob: -4.972336769104004

Token 114: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.7703479528427124
    2. 'dp' → logprob: -1.7703479528427124
    3. 'y' → logprob: -1.8953479528427124
    4. 'output' → logprob: -1.8953479528427124
    5. 'for' → logprob: -2.020348072052002
    6. 'res' → logprob: -2.145348072052002
    7. 'decoded' → logprob: -3.770348072052002
    8. 'out' → logprob: -4.395348072052002
    9. 'd' → logprob: -4.895348072052002
    10. 'ans' → logprob: -5.145348072052002

Token 115: ' DP' (ID: 51992)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.757453978061676
    2. 'for' → logprob: -1.6324539184570312
    3. ' result' → logprob: -2.7574539184570312
    4. '#' → logprob: -3.1324539184570312
    5. 'result' → logprob: -3.7574539184570312
    6. ' diff' → logprob: -3.8824539184570312
    7. ' output' → logprob: -4.007453918457031
    8. ' #' → logprob: -4.132453918457031
    9. ' total' → logprob: -4.257453918457031
    10. ' res' → logprob: -4.507453918457031

Token 116: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11935404688119888
    2. 'dp' → logprob: -2.744354009628296
    3. '=' → logprob: -3.244354009628296
    4. '_' → logprob: -5.994354248046875
    5. '_dp' → logprob: -6.119354248046875
    6. ' dp' → logprob: -6.244354248046875
    7. '   ' → logprob: -7.369354248046875
    8. '    ' → logprob: -8.369354248046875
    9. 'dist' → logprob: -8.744354248046875
    10. '_table' → logprob: -8.744354248046875

Token 117: ' at' (ID: 540)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.43624329566955566
    2. 'dp' → logprob: -1.0612432956695557
    3. ' prev' → logprob: -6.686243057250977
    4. ' cost' → logprob: -7.186243057250977
    5. ' dist' → logprob: -7.436243057250977
    6. 'cost' → logprob: -7.686243057250977
    7. 'INF' → logprob: -7.686243057250977
    8. 'prev' → logprob: -7.811243057250977
    9. ' for' → logprob: -8.186243057250977
    10. '   ' → logprob: -8.186243057250977

Token 118: ' step' (ID: 5983)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7697489261627197
    2. 'tempt' → logprob: -1.8947489261627197
    3. ' each' → logprob: -2.7697489261627197
    4. ' least' → logprob: -3.0197489261627197
    5. ' i' → logprob: -3.2697489261627197
    6. ' most' → logprob: -3.8947489261627197
    7. '  ' → logprob: -3.8947489261627197
    8. 'i' → logprob: -3.8947489261627197
    9. '[' → logprob: -4.019748687744141
    10. '0' → logprob: -4.269748687744141

Token 119: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07231822609901428
    2. ' =' → logprob: -3.5723183155059814
    3. ' ' → logprob: -4.197318077087402
    4. ' s' → logprob: -5.197318077087402
    5. 'i' → logprob: -5.447318077087402
    6. ',' → logprob: -5.447318077087402
    7. 's' → logprob: -5.947318077087402
    8. '=' → logprob: -6.697318077087402
    9. '   ' → logprob: -6.822318077087402
    10. '<|end|>' → logprob: -6.947318077087402

Token 120: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005111610982567072
    2. '   ' → logprob: -6.2551116943359375
    3. '=' → logprob: -7.6301116943359375
    4. ' ,' → logprob: -7.7551116943359375
    5. ':' → logprob: -8.005111694335938
    6. '[' → logprob: -8.130111694335938
    7. ',
' → logprob: -8.505111694335938
    8. ')' → logprob: -8.630111694335938
    9. ' =' → logprob: -8.880111694335938
    10. ' (' → logprob: -9.130111694335938

Token 121: ' y' (ID: 342)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.4929262399673462
    2. ' for' → logprob: -1.6179262399673462
    3. ' #' → logprob: -2.1179261207580566
    4. ' at' → logprob: -2.2429261207580566
    5. ' the' → logprob: -2.6179261207580566
    6. ' we' → logprob: -2.6179261207580566
    7. 'dp' → logprob: -2.9929261207580566
    8. ' dp' → logprob: -3.3679261207580566
    9. 'for' → logprob: -3.4929261207580566
    10. ' i' → logprob: -4.367926120758057

Token 122: '_i' (ID: 10853)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0984264388680458
    2. ',' → logprob: -3.223426342010498
    3. 'ields' → logprob: -4.223426342010498
    4. '_prev' → logprob: -4.973426342010498
    5. '[i' → logprob: -5.223426342010498
    6. ')' → logprob: -5.473426342010498
    7. '=' → logprob: -5.848426342010498
    8. '[' → logprob: -6.473426342010498
    9. '[]' → logprob: -6.598426342010498
    10. ']' → logprob: -6.598426342010498

Token 123: ' can' (ID: 665)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08272131532430649
    2. ',' → logprob: -3.20772123336792
    3. '=' → logprob: -4.45772123336792
    4. ')' → logprob: -5.70772123336792
    5. ' can' → logprob: -6.08272123336792
    6. ' in' → logprob: -6.20772123336792
    7. ']' → logprob: -6.20772123336792
    8. ':' → logprob: -6.58272123336792
    9. '   ' → logprob: -6.70772123336792
    10. '_prev' → logprob: -6.70772123336792

Token 124: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.08589199185371399
    2. ' range' → logprob: -2.9608919620513916
    3. 'range' → logprob: -3.7108919620513916
    4. ' take' → logprob: -5.835892200469971
    5. 'be' → logprob: -7.085892200469971
    6. ' only' → logprob: -7.210892200469971
    7. '<|end|>' → logprob: -7.960892200469971
    8. 'take' → logprob: -8.085891723632812
    9. 'choose' → logprob: -9.460891723632812
    10. ' vary' → logprob: -9.585891723632812

Token 125: ' ' (ID: 220)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.5827958583831787
    2. '0' → logprob: -2.5827958583831787
    3. 'range' → logprob: -2.8327958583831787
    4. 'one' → logprob: -2.8327958583831787
    5. 'in' → logprob: -2.9577958583831787
    6. 'clip' → logprob: -3.0827958583831787
    7. ' any' → logprob: -3.4577958583831787
    8. 'code' → logprob: -3.5827958583831787
    9. 'from' → logprob: -3.9577958583831787
    10. 'chosen' → logprob: -4.457796096801758

Token 126: '0' (ID: 15)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'any' → logprob: -1.0362427234649658
    2. 'in' → logprob: -1.9112427234649658
    3. '0' → logprob: -2.286242723464966
    4. 'one' → logprob: -2.536242723464966
    5. 'range' → logprob: -2.661242723464966
    6. 'code' → logprob: -2.661242723464966
    7. 'from' → logprob: -3.411242723464966
    8. 'chosen' → logprob: -3.411242723464966
    9. 'either' → logprob: -3.786242723464966
    10. 'clip' → logprob: -4.036242485046387

Token 127: '..' (ID: 485)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.5423155426979065
    2. ',' → logprob: -1.0423154830932617
    3. ' to' → logprob: -3.2923154830932617
    4. 'or' → logprob: -4.667315483093262
    5. 'to' → logprob: -5.292315483093262
    6. '<|end|>' → logprob: -5.542315483093262
    7. ' ' → logprob: -5.792315483093262
    8. ')' → logprob: -6.167315483093262
    9. ' ,' → logprob: -6.792315483093262
    10. ' through' → logprob: -7.167315483093262

Token 128: '255' (ID: 6143)
  Prédit: '255'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '255' → logprob: -0.0031859094742685556
    2. '15' → logprob: -6.878185749053955
    3. ' ' → logprob: -7.003185749053955
    4. '9' → logprob: -8.253186225891113
    5. '254' → logprob: -8.503186225891113
    6. '1' → logprob: -9.128186225891113
    7. '3' → logprob: -9.378186225891113
    8. '7' → logprob: -9.503186225891113
    9. '2' → logprob: -9.628186225891113
    10. '25' → logprob: -9.753186225891113

Token 129: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31582018733024597
    2. '
' → logprob: -1.5658202171325684
    3. ',' → logprob: -3.1908202171325684
    4. '<|end|>' → logprob: -4.690820217132568
    5. ' ' → logprob: -5.815820217132568
    6. ' for' → logprob: -6.690820217132568
    7. '    
' → logprob: -6.690820217132568
    8. '    ' → logprob: -6.940820217132568
    9. ')' → logprob: -7.190820217132568
    10. 'for' → logprob: -7.315820217132568

Token 130: ' store' (ID: 4897)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019236890599131584
    2. ' ' → logprob: -5.394237041473389
    3. '    ' → logprob: -5.394237041473389
    4. ' dp' → logprob: -5.519237041473389
    5. '<|end|>' → logprob: -5.769237041473389
    6. '       ' → logprob: -7.394237041473389
    7. 'dp' → logprob: -7.769237041473389
    8. '  ' → logprob: -8.51923656463623
    9. ' and' → logprob: -8.51923656463623
    10. ',' → logprob: -8.76923656463623

Token 131: ' minimal' (ID: 19957)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3885349929332733
    2. ' dp' → logprob: -2.2635350227355957
    3. ' None' → logprob: -2.7635350227355957
    4. ' the' → logprob: -2.8885350227355957
    5. 'None' → logprob: -3.0135350227355957
    6. 'the' → logprob: -4.513535022735596
    7. 'prev' → logprob: -4.763535022735596
    8. 'cost' → logprob: -4.888535022735596
    9. ' a' → logprob: -5.638535022735596
    10. ' previous' → logprob: -6.138535022735596

Token 132: ' squared' (ID: 117867)
  Prédit: ' cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.6947422027587891
    2. 'cost' → logprob: -0.6947422027587891
    3. ' costs' → logprob: -7.444742202758789
    4. ' cumulative' → logprob: -9.194742202758789
    5. '_cost' → logprob: -9.319742202758789
    6. ' error' → logprob: -9.319742202758789
    7. ' ' → logprob: -9.444742202758789
    8. ' energy' → logprob: -9.444742202758789
    9. 'error' → logprob: -9.444742202758789
    10. 'dist' → logprob: -9.569742202758789

Token 133: ' error' (ID: 2915)
  Prédit: 'error'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'error' → logprob: -0.277923583984375
    2. ' error' → logprob: -2.027923583984375
    3. '_error' → logprob: -2.527923583984375
    4. 'distance' → logprob: -4.277923583984375
    5. 'cost' → logprob: -5.152923583984375
    6. 'errors' → logprob: -5.902923583984375
    7. '_distance' → logprob: -6.527923583984375
    8. ' cost' → logprob: -6.652923583984375
    9. ' ' → logprob: -6.902923583984375
    10. '_cost' → logprob: -7.152923583984375

Token 134: ' sum' (ID: 4215)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7764633297920227
    2. ' dp' → logprob: -1.151463270187378
    3. '
' → logprob: -2.526463270187378
    4. 'DP' → logprob: -3.776463270187378
    5. ',' → logprob: -4.026463508605957
    6. '_dp' → logprob: -4.151463508605957
    7. '   ' → logprob: -4.276463508605957
    8. ' DP' → logprob: -4.651463508605957
    9. '_' → logprob: -4.776463508605957
    10. 's' → logprob: -4.776463508605957

Token 135: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1851189136505127
    2. ' dp' → logprob: -2.8101189136505127
    3. 'DP' → logprob: -2.8101189136505127
    4. ' DP' → logprob: -4.185118675231934
    5. '
' → logprob: -4.310118675231934
    6. '   ' → logprob: -4.310118675231934
    7. '_dp' → logprob: -6.435118675231934
    8. 'y' → logprob: -7.560118675231934
    9. '    
' → logprob: -7.560118675231934
    10. 'import' → logprob: -7.935118675231934

Token 136: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4555679261684418
    2. 'dp' → logprob: -1.3305679559707642
    3. ' dp' → logprob: -2.5805678367614746
    4. '
' → logprob: -5.455567836761475
    5. 'import' → logprob: -5.455567836761475
    6. 'DP' → logprob: -6.080567836761475
    7. '_dp' → logprob: -6.080567836761475
    8. ',' → logprob: -6.205567836761475
    9. ' DP' → logprob: -6.580567836761475
    10. '    ' → logprob: -6.705567836761475

Token 137: ' #' (ID: 1069)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.6642441153526306
    2. 'dp' → logprob: -0.7892441153526306
    3. '   ' → logprob: -4.039244174957275
    4. ' DP' → logprob: -5.539244174957275
    5. 'DP' → logprob: -5.789244174957275
    6. 'import' → logprob: -5.789244174957275
    7. 'INF' → logprob: -7.539244174957275
    8. ' import' → logprob: -7.914244174957275
    9. '	dp' → logprob: -7.914244174957275
    10. '_dp' → logprob: -8.039243698120117

Token 138: ' and' (ID: 326)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.6698466539382935
    2. 'dp' → logprob: -0.7948466539382935
    3. 'import' → logprob: -4.419846534729004
    4. ' import' → logprob: -4.794846534729004
    5. ' DP' → logprob: -5.294846534729004
    6. '   ' → logprob: -6.044846534729004
    7. ' from' → logprob: -6.169846534729004
    8. 'DP' → logprob: -6.419846534729004
    9. ' prev' → logprob: -6.669846534729004
    10. 'from' → logprob: -6.919846534729004

Token 139: ' for' (ID: 395)
  Prédit: ' back'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' back' → logprob: -1.521259069442749
    2. ' path' → logprob: -1.646259069442749
    3. 'prev' → logprob: -1.646259069442749
    4. ' parent' → logprob: -2.146259069442749
    5. 'parent' → logprob: -2.271259069442749
    6. ' prev' → logprob: -2.396259069442749
    7. 'path' → logprob: -3.396259069442749
    8. 'back' → logprob: -4.021259307861328
    9. ' predecessor' → logprob: -5.146259307861328
    10. ' the' → logprob: -5.396259307861328

Token 140: ' large' (ID: 4410)
  Prédit: ' back'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' back' → logprob: -0.25325170159339905
    2. 'back' → logprob: -2.378251791000366
    3. ' traceback' → logprob: -3.128251791000366
    4. 'prev' → logprob: -3.628251791000366
    5. ' prev' → logprob: -4.628251552581787
    6. ' i' → logprob: -4.878251552581787
    7. ' each' → logprob: -4.878251552581787
    8. ' ' → logprob: -5.003251552581787
    9. ' path' → logprob: -5.253251552581787
    10. ' reconstruct' → logprob: -5.753251552581787

Token 141: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.8961641192436218
    2. 'N' → logprob: -2.2711641788482666
    3. ' arrays' → logprob: -2.2711641788482666
    4. '-scale' → logprob: -2.6461641788482666
    5. ' code' → logprob: -2.8961641788482666
    6. 'i' → logprob: -3.2711641788482666
    7. '<|end|>' → logprob: -3.6461641788482666
    8. ' i' → logprob: -3.6461641788482666
    9. ' ' → logprob: -3.7711641788482666
    10. ' memory' → logprob: -3.8961641788482666

Token 142: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09769206494092941
    2. '<|end|>' → logprob: -3.0976920127868652
    3. ' ,' → logprob: -4.472692012786865
    4. ' ' → logprob: -4.972692012786865
    5. '_' → logprob: -4.972692012786865
    6. '
' → logprob: -5.222692012786865
    7. '[' → logprob: -5.347692012786865
    8. ',
' → logprob: -5.722692012786865
    9. 'import' → logprob: -6.472692012786865
    10. ':' → logprob: -6.722692012786865

Token 143: ' state' (ID: 2608)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.46519041061401367
    2. ' M' → logprob: -1.3401904106140137
    3. ' large' → logprob: -3.0901904106140137
    4. 'large' → logprob: -3.3401904106140137
    5. ' code' → logprob: -5.090190410614014
    6. 'small' → logprob: -5.215190410614014
    7. ' memory' → logprob: -5.465190410614014
    8. '256' → logprob: -5.590190410614014
    9. ' small' → logprob: -5.965190410614014
    10. 'memory' → logprob: -6.465190410614014

Token 144: ' space' (ID: 4918)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.975540041923523
    2. 'space' → logprob: -1.225540041923523
    3. ' space' → logprob: -1.225540041923523
    4. '<|end|>' → logprob: -4.9755401611328125
    5. '-space' → logprob: -5.6005401611328125
    6. 'size' → logprob: -5.7255401611328125
    7. ',' → logprob: -5.7255401611328125
    8. ' spaces' → logprob: -5.8505401611328125
    9. '_space' → logprob: -5.8505401611328125
    10. ' s' → logprob: -5.8505401611328125

Token 145: ' ' (ID: 220)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018287137150764465
    2. '<|end|>' → logprob: -4.643287181854248
    3. ' ' → logprob: -5.768287181854248
    4. ' ,' → logprob: -5.893287181854248
    5. ',
' → logprob: -7.143287181854248
    6. ' we' → logprob: -7.643287181854248
    7. ':' → logprob: -8.14328670501709
    8. '   ' → logprob: -8.76828670501709
    9. '<|end|>' → logprob: -8.76828670501709
    10. ' the' → logprob: -8.89328670501709

Token 146: '256' (ID: 5780)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.46180105209350586
    2. ',' → logprob: -1.8368010520935059
    3. 'sizes' → logprob: -1.9618010520935059
    4. 'pr' → logprob: -3.461801052093506
    5. 's' → logprob: -4.711801052093506
    6. '...' → logprob: -4.711801052093506
    7. ' size' → logprob: -5.336801052093506
    8. 'memory' → logprob: -5.711801052093506
    9. 'states' → logprob: -6.086801052093506
    10. 'constraints' → logprob: -6.211801052093506

Token 147: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0051226308569312096
    2. ',
' → logprob: -6.380122661590576
    3. 'import' → logprob: -6.505122661590576
    4. ':' → logprob: -6.755122661590576
    5. ' ,' → logprob: -9.130122184753418
    6. ')' → logprob: -9.255122184753418
    7. '.' → logprob: -9.505122184753418
    8. '
' → logprob: -9.755122184753418
    9. '' → logprob: -10.255122184753418
    10. '<|end|>' → logprob: -10.255122184753418

Token 148: ' use' (ID: 1199)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 149: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.4485505819320679
    2. 'a' → logprob: -1.6985505819320679
    3. 'memo' → logprob: -1.8235505819320679
    4. 'beam' → logprob: -2.5735507011413574
    5. ' beam' → logprob: -3.3235507011413574
    6. ' memo' → logprob: -3.3235507011413574
    7. ' dynamic' → logprob: -3.6985507011413574
    8. ' optimization' → logprob: -3.9485507011413574
    9. 'dynamic' → logprob: -4.198550701141357
    10. 'optimized' → logprob: -4.198550701141357

Token 150: ' dict' (ID: 11878)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -1.3827409744262695
    2. ' memory' → logprob: -1.7577409744262695
    3. ' sparse' → logprob: -2.1327409744262695
    4. ' two' → logprob: -2.1327409744262695
    5. ' rolling' → logprob: -2.8827409744262695
    6. ' space' → logprob: -3.5077409744262695
    7. ' dynamic' → logprob: -3.7577409744262695
    8. 'rolling' → logprob: -4.1327409744262695
    9. ' small' → logprob: -4.1327409744262695
    10. 'two' → logprob: -4.6327409744262695

Token 151: ' or' (ID: 503)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7089487910270691
    2. '
' → logprob: -0.8339487910270691
    3. '   ' → logprob: -3.708948850631714
    4. 'prev' → logprob: -3.833948850631714
    5. ' dp' → logprob: -4.958948612213135
    6. '    
' → logprob: -5.583948612213135
    7. 'DP' → logprob: -5.833948612213135
    8. 'import' → logprob: -6.083948612213135
    9. 'from' → logprob: -6.458948612213135
    10. '_dp' → logprob: -6.708948612213135

Token 152: ' list' (ID: 1562)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.07753879576921463
    2. ' defaultdict' → logprob: -3.7025387287139893
    3. 'collections' → logprob: -4.577538967132568
    4. 'two' → logprob: -4.577538967132568
    5. 'a' → logprob: -4.827538967132568
    6. 'array' → logprob: -4.952538967132568
    7. 's' → logprob: -5.202538967132568
    8. 'list' → logprob: -5.702538967132568
    9. '{}' → logprob: -6.577538967132568
    10. 'dynamic' → logprob: -7.577538967132568

Token 153: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.27364808320999146
    2. '
' → logprob: -1.7736480236053467
    3. ' dp' → logprob: -3.2736480236053467
    4. 'prev' → logprob: -4.398648262023926
    5. '   ' → logprob: -5.148648262023926
    6. 'DP' → logprob: -5.648648262023926
    7. ' DP' → logprob: -5.773648262023926
    8. ' prev' → logprob: -6.148648262023926
    9. '    
' → logprob: -6.773648262023926
    10. '_dp' → logprob: -7.523648262023926

Token 154: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.46388185024261475
    2. ' dp' → logprob: -1.4638818502426147
    3. '   ' → logprob: -2.7138819694519043
    4. '
' → logprob: -3.3388819694519043
    5. ' DP' → logprob: -4.338881969451904
    6. 'DP' → logprob: -4.838881969451904
    7. 'prev' → logprob: -5.463881969451904
    8. '_dp' → logprob: -5.463881969451904
    9. ' prev' → logprob: -5.963881969451904
    10. '    
' → logprob: -6.338881969451904

Token 155: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.03900272026658058
    2. ' dp' → logprob: -3.7890026569366455
    3. 'prev' → logprob: -4.539002895355225
    4. 'import' → logprob: -6.414002895355225
    5. 'DP' → logprob: -6.664002895355225
    6. '   ' → logprob: -6.789002895355225
    7. ' prev' → logprob: -8.164002418518066
    8. ' DP' → logprob: -8.414002418518066
    9. 'from' → logprob: -8.789002418518066
    10. 'INF' → logprob: -9.289002418518066

Token 156: ' But' (ID: 3072)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.04430180788040161
    2. 'prev' → logprob: -3.794301748275757
    3. ' dp' → logprob: -4.169301986694336
    4. '   ' → logprob: -6.294301986694336
    5. 'import' → logprob: -6.544301986694336
    6. 'DP' → logprob: -6.919301986694336
    7. ' prev' → logprob: -7.669301986694336
    8. '
' → logprob: -8.544301986694336
    9. ' DP' → logprob: -8.919301986694336
    10. 'from' → logprob: -9.044301986694336

Token 157: ' since' (ID: 3630)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0466400384902954
    2. 'for' → logprob: -1.5466400384902954
    3. '256' → logprob: -1.9216400384902954
    4. ' the' → logprob: -2.796639919281006
    5. ' N' → logprob: -3.046639919281006
    6. 'import' → logprob: -4.171639919281006
    7. ' we' → logprob: -4.296639919281006
    8. ' code' → logprob: -4.546639919281006
    9. ' a' → logprob: -4.546639919281006
    10. 'the' → logprob: -4.671639919281006

Token 158: ' states' (ID: 9407)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -1.1573079824447632
    2. 'N' → logprob: -1.1573079824447632
    3. ' M' → logprob: -2.1573081016540527
    4. '256' → logprob: -2.2823081016540527
    5. '255' → logprob: -2.2823081016540527
    6. ' N' → logprob: -4.032308101654053
    7. ' the' → logprob: -4.282308101654053
    8. 'the' → logprob: -4.532308101654053
    9. ' ' → logprob: -5.657308101654053
    10. 'x' → logprob: -7.157308101654053

Token 159: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.32549038529396057
    2. '=' → logprob: -1.5754903554916382
    3. ' =' → logprob: -3.8254904747009277
    4. ' is' → logprob: -4.075490474700928
    5. 'are' → logprob: -4.700490474700928
    6. '<|end|>' → logprob: -5.575490474700928
    7. ' can' → logprob: -5.825490474700928
    8. ':' → logprob: -6.200490474700928
    9. '   ' → logprob: -6.325490474700928
    10. ',' → logprob: -7.075490474700928

Token 160: ' ' (ID: 220)
  Prédit: '256'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '256' → logprob: -0.6502705812454224
    2. ' limited' → logprob: -2.650270462036133
    3. 'only' → logprob: -3.025270462036133
    4. 'limited' → logprob: -3.025270462036133
    5. 'small' → logprob: -3.150270462036133
    6. '255' → logprob: -3.150270462036133
    7. ' small' → logprob: -3.275270462036133
    8. ' ' → logprob: -3.525270462036133
    9. ' only' → logprob: -3.525270462036133
    10. 'con' → logprob: -3.775270462036133

Token 161: '0' (ID: 15)
  Prédit: '256'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '256' → logprob: -0.1898999661207199
    2. '255' → logprob: -2.8148999214172363
    3. 'limited' → logprob: -3.4398999214172363
    4. 'small' → logprob: -4.189899921417236
    5. 'con' → logprob: -4.689899921417236
    6. 'fixed' → logprob: -4.689899921417236
    7. 'bounded' → logprob: -4.814899921417236
    8. '0' → logprob: -4.939899921417236
    9. ' limited' → logprob: -5.189899921417236
    10. 'only' → logprob: -5.189899921417236

Token 162: '-' (ID: 12)
  Prédit: '..'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '..' → logprob: -0.1405905932188034
    2. 'to' → logprob: -2.2655906677246094
    3. ' to' → logprob: -4.140590667724609
    4. '...' → logprob: -5.015590667724609
    5. '<=' → logprob: -6.640590667724609
    6. '-' → logprob: -6.765590667724609
    7. '-based' → logprob: -7.765590667724609
    8. 'through' → logprob: -7.890590667724609
    9. ',' → logprob: -8.01559066772461
    10. 'based' → logprob: -8.26559066772461

Token 163: '255' (ID: 6143)
  Prédit: '255'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '255' → logprob: -0.00010151672904612496
    2. ' ' → logprob: -9.625101089477539
    3. '25' → logprob: -10.750101089477539
    4. '2' → logprob: -11.375101089477539
    5. '256' → logprob: -13.875101089477539
    6. '254' → logprob: -15.125101089477539
    7. '0' → logprob: -15.250101089477539
    8. ',' → logprob: -15.375101089477539
    9. '1' → logprob: -16.12510108947754
    10. '250' → logprob: -16.31260108947754

Token 164: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003162272274494171
    2. '   ' → logprob: -6.878162384033203
    3. ']' → logprob: -7.503162384033203
    4. ')' → logprob: -7.503162384033203
    5. ',
' → logprob: -7.753162384033203
    6. ':' → logprob: -8.503162384033203
    7. ' ,' → logprob: -8.628162384033203
    8. ' states' → logprob: -9.878162384033203
    9. 'states' → logprob: -10.128162384033203
    10. ' and' → logprob: -11.503162384033203

Token 165: ' we' (ID: 581)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.11637171357870102
    2. 'dp' → logprob: -2.4913716316223145
    3. ' prev' → logprob: -4.1163716316223145
    4. ' import' → logprob: -6.2413716316223145
    5. 'import' → logprob: -6.3663716316223145
    6. 'prev' → logprob: -6.3663716316223145
    7. '   ' → logprob: -6.3663716316223145
    8. ' use' → logprob: -6.9913716316223145
    9. ' DP' → logprob: -7.2413716316223145
    10. ' pass' → logprob: -7.6163716316223145

Token 166: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.04968927055597305
    2. 'can' → logprob: -3.049689292907715
    3. '<|end|>' → logprob: -8.299689292907715
    4. ' have' → logprob: -8.549689292907715
    5. ' will' → logprob: -9.299689292907715
    6. ''ll' → logprob: -9.424689292907715
    7. 'have' → logprob: -10.174689292907715
    8. ' may' → logprob: -10.299689292907715
    9. 'import' → logprob: -10.424689292907715
    10. '   ' → logprob: -10.549689292907715

Token 167: ' use' (ID: 1199)
  Prédit: ' use'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' use' → logprob: -0.2260141521692276
    2. 'use' → logprob: -1.6010141372680664
    3. 'initialize' → logprob: -8.351014137268066
    4. ' implement' → logprob: -9.351014137268066
    5. 'implement' → logprob: -9.726014137268066
    6. ' just' → logprob: -10.226014137268066
    7. 'store' → logprob: -10.726014137268066
    8. 'process' → logprob: -10.851014137268066
    9. 'opt' → logprob: -10.851014137268066
    10. ' initialize' → logprob: -11.351014137268066

Token 168: ' array' (ID: 2644)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.6941983103752136
    2. '[' → logprob: -1.0691983699798584
    3. 'a' → logprob: -2.5691983699798584
    4. ' [' → logprob: -2.8191983699798584
    5. '[a' → logprob: -5.069198131561279
    6. '[]' → logprob: -5.694198131561279
    7. 'list' → logprob: -5.819198131561279
    8. ' lists' → logprob: -6.819198131561279
    9. '256' → logprob: -6.819198131561279
    10. '[
' → logprob: -6.819198131561279

Token 169: ' indexing' (ID: 105989)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8067862391471863
    2. 'dp' → logprob: -1.056786298751831
    3. ' dp' → logprob: -2.431786298751831
    4. '   ' → logprob: -3.181786298751831
    5. 's' → logprob: -4.681786060333252
    6. 'prev' → logprob: -4.806786060333252
    7. ':' → logprob: -4.931786060333252
    8. ',' → logprob: -4.931786060333252
    9. '    
' → logprob: -4.931786060333252
    10. '_dp' → logprob: -5.431786060333252

Token 170: '

' (ID: 279)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6904593110084534
    2. '
' → logprob: -1.0654592514038086
    3. '   ' → logprob: -2.3154592514038086
    4. ' dp' → logprob: -3.6904592514038086
    5. '    
' → logprob: -4.440459251403809
    6. 'prev' → logprob: -5.690459251403809
    7. 'import' → logprob: -6.315459251403809
    8. '_dp' → logprob: -6.315459251403809
    9. '	dp' → logprob: -6.815459251403809
    10. 'DP' → logprob: -6.815459251403809

Token 171: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.37323951721191406
    2. '   ' → logprob: -1.623239517211914
    3. ' dp' → logprob: -2.498239517211914
    4. 'prev' → logprob: -4.248239517211914
    5. 'DP' → logprob: -5.123239517211914
    6. ' DP' → logprob: -5.623239517211914
    7. ' prev' → logprob: -6.123239517211914
    8. 'import' → logprob: -6.373239517211914
    9. '    
' → logprob: -6.498239517211914
    10. '_dp' → logprob: -7.248239517211914

Token 172: ' prev' (ID: 10258)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.010609260760247707
    2. 'prev' (adapté à ' prev') → logprob: -5.510609149932861
    3. 'import' → logprob: -5.760609149932861
    4. '   ' → logprob: -6.510609149932861
    5. 'DP' → logprob: -6.635609149932861
    6. ' dp' → logprob: -8.26060962677002
    7. 'INF' → logprob: -8.38560962677002
    8. 'from' → logprob: -11.13560962677002
    9. 'inf' → logprob: -11.26060962677002
    10. '    
' → logprob: -11.63560962677002

Token 173: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.08510971814393997
    2. ' =' → logprob: -2.5851097106933594
    3. '_' → logprob: -5.585109710693359
    4. '=' → logprob: -6.335109710693359
    5. 'dp' → logprob: -8.08510971069336
    6. '_dist' → logprob: -9.33510971069336
    7. '_DP' → logprob: -9.46010971069336
    8. '_cost' → logprob: -9.58510971069336
    9. ' dp' → logprob: -11.33510971069336
    10. 'DP' → logprob: -11.58510971069336

Token 174: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0699886754155159
    2. '=' → logprob: -2.69498872756958
    3. '[' → logprob: -10.319988250732422
    4. ',' → logprob: -12.319988250732422
    5. ')' → logprob: -12.444988250732422
    6. '=[' → logprob: -12.569988250732422
    7. ' =[' → logprob: -12.944988250732422
    8. ']' → logprob: -13.069988250732422
    9. '<|end|>' → logprob: -14.819988250732422
    10. 's' → logprob: -14.819988250732422

Token 175: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0067167943343520164
    2. ' [' → logprob: -5.006716728210449
    3. '   ' → logprob: -15.88171672821045
    4. '[-' → logprob: -16.006717681884766
    5. '[int' → logprob: -16.006717681884766
    6. '[np' → logprob: -16.006717681884766
    7. '[value' → logprob: -16.256717681884766
    8. '[array' → logprob: -16.256717681884766
    9. '[len' → logprob: -16.381717681884766
    10. '{' → logprob: -16.631717681884766

Token 176: 'float' (ID: 7829)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5770046710968018
    2. 'float' → logprob: -0.8270046710968018
    3. '(' → logprob: -7.827004432678223
    4. '(float' → logprob: -7.952004432678223
    5. ' float' → logprob: -8.952004432678223
    6. 'i' → logprob: -9.827004432678223
    7. 'x' → logprob: -9.952004432678223
    8. 'None' → logprob: -10.577004432678223
    9. ' ' → logprob: -11.702004432678223
    10. '(i' → logprob: -11.952004432678223

Token 177: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -7.584239938296378e-06
    2. '("' → logprob: -11.875007629394531
    3. '(' → logprob: -15.500007629394531
    4. 'inf' → logprob: -15.500007629394531
    5. '('-' → logprob: -15.750007629394531
    6. '('+' → logprob: -17.37500762939453
    7. '(
' → logprob: -18.25000762939453
    8. '.inf' → logprob: -18.75000762939453
    9. ''in' → logprob: -19.00000762939453
    10. '_inf' → logprob: -19.37500762939453

Token 178: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -4.127333340875339e-06
    2. '-inf' → logprob: -13.625003814697266
    3. ''in' → logprob: -14.000003814697266
    4. 'in' → logprob: -14.500003814697266
    5. ''' → logprob: -14.625003814697266
    6. '64' → logprob: -14.875003814697266
    7. 'info' → logprob: -15.000003814697266
    8. '_inf' → logprob: -15.750003814697266
    9. '.inf' → logprob: -16.500003814697266
    10. 'Inf' → logprob: -16.875003814697266

Token 179: '')]' (ID: 94377)
  Prédit: '')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')]' → logprob: -0.6766876578330994
    2. ')]' → logprob: -0.9266876578330994
    3. ')' → logprob: -2.426687717437744
    4. ']' → logprob: -5.551687717437744
    5. '')' → logprob: -5.676687717437744
    6. '']' → logprob: -9.051687240600586
    7. '")]' → logprob: -10.801687240600586
    8. '),' → logprob: -10.926687240600586
    9. ' )' → logprob: -11.426687240600586
    10. ')'' → logprob: -12.051687240600586

Token 180: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.33607691526412964
    2. ' for' → logprob: -1.4610769748687744
    3. ']*' → logprob: -3.8360769748687744
    4. ' ]' → logprob: -4.461076736450195
    5. 'for' → logprob: -5.086076736450195
    6. ' *' → logprob: -5.086076736450195
    7. ']+' → logprob: -5.336076736450195
    8. '*' → logprob: -6.586076736450195
    9. ' +' → logprob: -7.711076736450195
    10. ',' → logprob: -8.336076736450195

Token 181: ' ' (ID: 220)
  Prédit: '256'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '256' → logprob: -4.286852345103398e-05
    2. '(' → logprob: -10.125042915344238
    3. '257' → logprob: -13.625042915344238
    4. '   ' → logprob: -14.250042915344238
    5. ' ' → logprob: -14.500042915344238
    6. '266' → logprob: -16.125041961669922
    7. '258' → logprob: -16.500041961669922
    8. '```' → logprob: -17.500041961669922
    9. '255' → logprob: -17.625041961669922
    10. '[' → logprob: -18.062541961669922

Token 182: '256' (ID: 5780)
  Prédit: '256'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '256' → logprob: -2.816093228830141e-06
    2. '(' → logprob: -12.87500286102295
    3. ' ' → logprob: -16.000001907348633
    4. '257' → logprob: -16.125001907348633
    5. '   ' → logprob: -18.750001907348633
    6. '258' → logprob: -19.125001907348633
    7. '266' → logprob: -19.500001907348633
    8. '255' → logprob: -20.375001907348633
    9. '2' → logprob: -21.125001907348633
    10. '```' → logprob: -21.625001907348633

Token 183: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.38240814208984375
    2. 'prev' → logprob: -1.2574081420898438
    3. 'current' → logprob: -4.507408142089844
    4. '   ' → logprob: -4.507408142089844
    5. '    
' → logprob: -5.382408142089844
    6. 'for' → logprob: -6.007408142089844
    7. 'curr' → logprob: -6.132408142089844
    8. '
' → logprob: -7.507408142089844
    9. 'dp' → logprob: -8.007408142089844
    10. '  
' → logprob: -8.257408142089844

Token 184: '   ' (ID: 271)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.2585645318031311
    2. 'for' → logprob: -1.5085644721984863
    3. '0' → logprob: -5.883564472198486
    4. ' for' → logprob: -6.508564472198486
    5. 'x' → logprob: -7.508564472198486
    6. '   ' → logprob: -7.758564472198486
    7. '256' → logprob: -8.383564949035645
    8. '```' → logprob: -8.383564949035645
    9. ' prev' → logprob: -8.508564949035645
    10. '[' → logprob: -9.008564949035645

Token 185: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' (adapté à ' prev') → logprob: -0.5332067012786865
    2. 'for' → logprob: -1.0332067012786865
    3. '0' → logprob: -3.0332067012786865
    4. 'x' → logprob: -5.533206939697266
    5. 'code' → logprob: -6.408206939697266
    6. ' for' → logprob: -6.783206939697266
    7. 'clip' → logprob: -7.158206939697266
    8. '255' → logprob: -8.408206939697266
    9. '```' → logprob: -8.533206939697266
    10. '    
' → logprob: -8.533206939697266

Token 186: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -6.0033853515051305e-05
    2. 'dp' → logprob: -10.750060081481934
    3. '_' → logprob: -11.000060081481934
    4. '_d' → logprob: -12.625060081481934
    5. '_code' → logprob: -12.625060081481934
    6. '_val' → logprob: -13.375060081481934
    7. '_x' → logprob: -13.375060081481934
    8. '_idx' → logprob: -13.625060081481934
    9. '_dt' → logprob: -13.750060081481934
    10. '[' → logprob: -13.875060081481934

Token 187: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.009396672248840332
    2. '[x' → logprob: -5.384396553039551
    3. '[int' → logprob: -7.134396553039551
    4. ' =' → logprob: -7.259396553039551
    5. '[:]' → logprob: -7.259396553039551
    6. '[c' → logprob: -7.759396553039551
    7. '=' → logprob: -8.00939655303955
    8. 'code' → logprob: -8.38439655303955
    9. 'x' → logprob: -8.63439655303955
    10. '[val' → logprob: -8.88439655303955

Token 188: '128' (ID: 8076)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.604910671710968
    2. 'clip' → logprob: -1.4799106121063232
    3. '0' → logprob: -1.6049106121063232
    4. 'code' → logprob: -4.104910850524902
    5. ' x' → logprob: -5.729910850524902
    6. ' clip' → logprob: -6.104910850524902
    7. ' ' → logprob: -7.104910850524902
    8. '128' → logprob: -7.354910850524902
    9. '255' → logprob: -7.604910850524902
    10. '   ' → logprob: -8.354910850524902

Token 189: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00014859484508633614
    2. ' ]' → logprob: -9.25014877319336
    3. ']=' → logprob: -9.87514877319336
    4. ')' → logprob: -15.25014877319336
    5. ']
' → logprob: -15.87514877319336
    6. ']+=' → logprob: -16.25014877319336
    7. '   ' → logprob: -16.37514877319336
    8. '()]' → logprob: -16.50014877319336
    9. '']' → logprob: -16.62514877319336
    10. '`]' → logprob: -16.62514877319336

Token 190: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868754208087921
    2. ' =' → logprob: -1.1368753910064697
    3. ']' → logprob: -13.26187515258789
    4. ']=' → logprob: -13.63687515258789
    5. '[' → logprob: -14.51187515258789
    6. ' ' → logprob: -15.38687515258789
    7. ' ' → logprob: -15.51187515258789
    8. ',' → logprob: -15.88687515258789
    9. ')' → logprob: -16.01187515258789
    10. ')=' → logprob: -16.26187515258789

Token 191: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -18.375001907348633
    4. '۰' → logprob: -19.625001907348633
    5. ' ' → logprob: -21.125001907348633
    6. '  ' → logprob: -21.187501907348633
    7. '00' → logprob: -21.312501907348633
    8. '000' → logprob: -22.000001907348633
    9. '1' → logprob: -22.000001907348633
    10. '```' → logprob: -22.062501907348633

Token 192: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -17.12500762939453
    4. ' ' → logprob: -17.25000762939453
    5. '۰' → logprob: -17.62500762939453
    6. '1' → logprob: -18.06250762939453
    7. '  ' → logprob: -18.06250762939453
    8. '(' → logprob: -18.12500762939453
    9. '00' → logprob: -18.31250762939453
    10. '000' → logprob: -18.93750762939453

Token 193: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016238819807767868
    2. 'for' → logprob: -5.141238689422607
    3. ' for' → logprob: -5.516238689422607
    4. '    
' → logprob: -5.766238689422607
    5. '
' → logprob: -6.266238689422607
    6. '<|end|>' → logprob: -6.891238689422607
    7. '	for' → logprob: -9.266239166259766
    8. '<|end|>' → logprob: -10.266239166259766
    9. '	
' → logprob: -11.266239166259766
    10. '  
' → logprob: -11.266239166259766

Token 194: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.018127236515283585
    2. 'for' → logprob: -4.39312744140625
    3. ' for' → logprob: -5.89312744140625
    4. '   ' → logprob: -6.76812744140625
    5. '\n' → logprob: -7.51812744140625
    6. '    
' → logprob: -7.64312744140625
    7. '  
' → logprob: -8.01812744140625
    8. '<|end|>' → logprob: -9.39312744140625
    9. '
' → logprob: -9.51812744140625
    10. '' → logprob: -9.89312744140625

Token 195: ' y' (ID: 342)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.11368078738451004
    2. '<|end|>' → logprob: -2.738680839538574
    3. '   ' → logprob: -4.238680839538574
    4. 'initial' → logprob: -5.113680839538574
    5. 'start' → logprob: -5.363680839538574
    6. 'Starting' → logprob: -5.363680839538574
    7. '<|end|>' → logprob: -6.238680839538574
    8. '
' → logprob: -6.488680839538574
    9. ' ' → logprob: -6.613680839538574
    10. 'starting' → logprob: -6.738680839538574

Token 196: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.01518725324422121
    2. ' _' → logprob: -4.8901872634887695
    3. '_i' → logprob: -6.5151872634887695
    4. '_{' → logprob: -6.6401872634887695
    5. ' at' → logprob: -6.7651872634887695
    6. '[' → logprob: -6.8901872634887695
    7. '0' → logprob: -7.1401872634887695
    8. '_[' → logprob: -8.01518726348877
    9. '_initial' → logprob: -8.39018726348877
    10. '_prev' → logprob: -8.89018726348877

Token 197: '0' (ID: 15)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6908767819404602
    2. '128' → logprob: -1.3158767223358154
    3. '_i' → logprob: -2.4408767223358154
    4. '127' → logprob: -2.5658767223358154
    5. '_' → logprob: -3.3158767223358154
    6. '0' → logprob: -3.9408767223358154
    7. ' ' → logprob: -4.8158769607543945
    8. ' i' → logprob: -7.3158769607543945
    9. '_prev' → logprob: -7.6908769607543945
    10. '[' → logprob: -8.190876960754395

Token 198: ' =' (ID: 314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6488565802574158
    2. '
' → logprob: -0.8988565802574158
    3. ' for' → logprob: -3.3988566398620605
    4. 'for' → logprob: -4.3988566398620605
    5. '<|end|>' → logprob: -4.3988566398620605
    6. '    
' → logprob: -4.7738566398620605
    7. '  
' → logprob: -6.2738566398620605
    8. '<|end|>' → logprob: -7.1488566398620605
    9. '\n' → logprob: -8.398856163024902
    10. '  ' → logprob: -8.648856163024902

Token 199: ' ' (ID: 220)
  Prédit: '128'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '128' → logprob: -0.004636961035430431
    2. ' ' → logprob: -5.379636764526367
    3. '0' → logprob: -11.379636764526367
    4. '127' → logprob: -13.442136764526367
    5. '  ' → logprob: -14.379636764526367
    6. '   ' → logprob: -14.692136764526367
    7. '```' → logprob: -14.942136764526367
    8. ' ' → logprob: -15.567136764526367
    9. 'initial' → logprob: -15.942136764526367
    10. '129' → logprob: -16.004636764526367

Token 200: '128' (ID: 8076)
  Prédit: '128'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '128' → logprob: -5.931863051955588e-05
    2. ' ' → logprob: -10.250059127807617
    3. '0' → logprob: -10.875059127807617
    4. '127' → logprob: -13.250059127807617
    5. '1' → logprob: -14.062559127807617
    6. 'prev' → logprob: -15.500059127807617
    7. '12' → logprob: -15.812559127807617
    8. '  ' → logprob: -15.937559127807617
    9. '```' → logprob: -15.937559127807617
    10. '   ' → logprob: -16.000059127807617

Token 201: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03721245750784874
    2. '<|end|>' → logprob: -3.662212371826172
    3. '    
' → logprob: -5.412212371826172
    4. ' for' → logprob: -6.287212371826172
    5. '<|end|>' → logprob: -6.287212371826172
    6. 'for' → logprob: -6.287212371826172
    7. '
' → logprob: -7.662212371826172
    8. ',' → logprob: -9.662212371826172
    9. '  
' → logprob: -10.287212371826172
    10. '.' → logprob: -10.287212371826172

Token 202: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2367134541273117
    2. ' for' → logprob: -1.9867134094238281
    3. '   ' → logprob: -2.611713409423828
    4. '	for' → logprob: -8.611713409423828
    5. '    
' → logprob: -10.361713409423828
    6. '
' → logprob: -12.486713409423828
    7. '<|end|>' → logprob: -12.611713409423828
    8. '  ' → logprob: -13.236713409423828
    9. 'from' → logprob: -13.736713409423828
    10. ' ' → logprob: -13.736713409423828

Token 203: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -8.53050296427682e-05
    2. ' for' → logprob: -9.50008487701416
    3. '   ' → logprob: -11.50008487701416
    4. 'from' → logprob: -15.37508487701416
    5. '	for' → logprob: -19.500085830688477
    6. '
' → logprob: -20.375085830688477
    7. ' ' → logprob: -20.375085830688477
    8. ')' → logprob: -20.750085830688477
    9. '    
' → logprob: -21.375085830688477
    10. '```' → logprob: -21.375085830688477

Token 204: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07890994846820831
    2. 'i' → logprob: -2.5789098739624023
    3. '	i' → logprob: -11.328909873962402
    4. '_i' → logprob: -12.328909873962402
    5. '   ' → logprob: -13.828909873962402
    6. ' ' → logprob: -14.078909873962402
    7. ' ' → logprob: -14.453909873962402
    8. '```' → logprob: -15.578909873962402
    9. ')i' → logprob: -15.703909873962402
    10. ')' → logprob: -15.703909873962402

Token 205: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.048595547676086426
    2. 'in' → logprob: -3.048595428466797
    3. ' ' → logprob: -12.548595428466797
    4. '	in' → logprob: -13.423595428466797
    5. 'import' → logprob: -14.548595428466797
    6. '_in' → logprob: -14.548595428466797
    7. ',' → logprob: -14.798595428466797
    8. 'In' → logprob: -15.048595428466797
    9. '1' → logprob: -15.173595428466797
    10. ' i' → logprob: -15.423595428466797

Token 206: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014163863845169544
    2. ' range' → logprob: -4.264163970947266
    3. ' ' → logprob: -15.514163970947266
    4. '   ' → logprob: -15.764163970947266
    5. '(range' → logprob: -17.139163970947266
    6. '	range' → logprob: -17.139163970947266
    7. '  ' → logprob: -17.514163970947266
    8. ')' → logprob: -18.264163970947266
    9. 'r' → logprob: -18.264163970947266
    10. 'rang' → logprob: -19.139163970947266

Token 207: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.2519439160823822
    2. '(' → logprob: -1.5019439458847046
    3. '(n' → logprob: -12.376943588256836
    4. '(i' → logprob: -12.501943588256836
    5. '(len' → logprob: -12.751943588256836
    6. '1' → logprob: -13.751943588256836
    7. ' (' → logprob: -14.001943588256836
    8. 'N' → logprob: -14.001943588256836
    9. '(
' → logprob: -14.501943588256836
    10. ' N' → logprob: -15.626943588256836

Token 208: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0041222115978598595
    2. '):
' → logprob: -5.504122257232666
    3. ' ):' → logprob: -10.754121780395508
    4. ')' → logprob: -12.004121780395508
    5. '):
' → logprob: -12.129121780395508
    6. '   ' → logprob: -12.129121780395508
    7. ',' → logprob: -13.004121780395508
    8. ':' → logprob: -13.254121780395508
    9. '):

' → logprob: -15.004121780395508
    10. '+' → logprob: -15.254121780395508

Token 209: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0739905908703804
    2. ' next' → logprob: -3.8239905834198
    3. '   ' → logprob: -4.198990821838379
    4. ' current' → logprob: -4.323990821838379
    5. 'current' → logprob: -4.823990821838379
    6. 'next' → logprob: -5.073990821838379
    7. 'curr' → logprob: -5.948990821838379
    8. ' new' → logprob: -6.448990821838379
    9. ' curr' → logprob: -6.573990821838379
    10. '    ' → logprob: -8.073990821838379

Token 210: ' curr' (ID: 10495)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' (adapté à ' curr') → logprob: -0.18281039595603943
    2. 'cur' → logprob: -2.6828103065490723
    3. 'next' → logprob: -2.9328103065490723
    4. 'current' → logprob: -3.6828103065490723
    5. ' curr' → logprob: -4.432810306549072
    6. '   ' → logprob: -4.932810306549072
    7. '       ' → logprob: -8.05781078338623
    8. 'new' → logprob: -8.30781078338623
    9. ' next' → logprob: -8.43281078338623
    10. ' current' → logprob: -8.93281078338623

Token 211: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -1.9743012671824545e-05
    2. '_' → logprob: -12.500020027160645
    3. '_dt' → logprob: -12.875020027160645
    4. '   ' → logprob: -13.000020027160645
    5. '_d' → logprob: -13.000020027160645
    6. ' _' → logprob: -13.375020027160645
    7. '_dl' → logprob: -13.625020027160645
    8. '_DP' → logprob: -14.000020027160645
    9. '_dc' → logprob: -14.125020027160645
    10. '_ds' → logprob: -14.500020027160645

Token 212: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029762526974081993
    2. '=' → logprob: -3.5297625064849854
    3. ' =[' → logprob: -12.029762268066406
    4. ' ' → logprob: -13.154762268066406
    5. '[' → logprob: -13.154762268066406
    6. '=[' → logprob: -13.404762268066406
    7. ' [' → logprob: -15.779762268066406
    8. '   ' → logprob: -15.779762268066406
    9. ')' → logprob: -16.279762268066406
    10. ',' → logprob: -16.404762268066406

Token 213: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004079708829522133
    2. ' [' → logprob: -5.504079818725586
    3. '[f' → logprob: -14.379079818725586
    4. '   ' → logprob: -14.754079818725586
    5. ' ' → logprob: -16.004079818725586
    6. '[val' → logprob: -16.754079818725586
    7. '[max' → logprob: -17.254079818725586
    8. '[len' → logprob: -17.379079818725586
    9. '[int' → logprob: -17.629079818725586
    10. '[min' → logprob: -17.754079818725586

Token 214: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -4.320199877838604e-07
    2. ' float' → logprob: -15.0
    3. '   ' → logprob: -19.125
    4. 'flo' → logprob: -19.5
    5. '(float' → logprob: -19.625
    6. '	float' → logprob: -19.875
    7. ',float' → logprob: -20.25
    8. '[' → logprob: -20.375
    9. '<float' → logprob: -21.125
    10. '=float' → logprob: -21.375

Token 215: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -5.512236498361744e-07
    2. ''in' → logprob: -15.125000953674316
    3. ''s' → logprob: -15.375000953674316
    4. '(' → logprob: -17.25
    5. '(in' → logprob: -18.5
    6. '("' → logprob: -19.375
    7. 'inf' → logprob: -20.0
    8. ''' → logprob: -20.125
    9. '['' → logprob: -20.5
    10. '(
' → logprob: -20.5

Token 216: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -9.088346359931165e-07
    2. ''' → logprob: -14.625000953674316
    3. ')' → logprob: -15.625000953674316
    4. '')' → logprob: -16.375
    5. '-' → logprob: -17.75
    6. '-inf' → logprob: -17.875
    7. 'max' → logprob: -18.125
    8. '2' → logprob: -18.25
    9. '+' → logprob: -18.75
    10. ' inf' → logprob: -18.875

Token 217: '')]' (ID: 94377)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.012225771322846413
    2. '')]' → logprob: -4.88722562789917
    3. ')' → logprob: -5.38722562789917
    4. ']' → logprob: -10.512226104736328
    5. '']' → logprob: -13.012226104736328
    6. '")]' → logprob: -13.512226104736328
    7. '')' → logprob: -13.637226104736328
    8. ' )' → logprob: -14.012226104736328
    9. '   ' → logprob: -15.262226104736328
    10. ')'' → logprob: -15.512226104736328

Token 218: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.26896294951438904
    2. ']' → logprob: -2.143962860107422
    3. ' for' → logprob: -3.018962860107422
    4. '*' → logprob: -3.518962860107422
    5. ' ]' → logprob: -4.393962860107422
    6. ']*' → logprob: -4.518962860107422
    7. '   ' → logprob: -4.893962860107422
    8. ' ' → logprob: -5.268962860107422
    9. ')' → logprob: -6.643962860107422
    10. 'for' → logprob: -7.018962860107422

Token 219: ' ' (ID: 220)
  Prédit: '256'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '256' → logprob: -5.319370302458992e-06
    2. ' ' → logprob: -12.875005722045898
    3. '255' → logprob: -12.875005722045898
    4. '   ' → logprob: -17.2500057220459
    5. '257' → logprob: -19.0000057220459
    6. '(' → logprob: -19.3750057220459
    7. '258' → logprob: -19.3750057220459
    8. '265' → logprob: -20.3750057220459
    9. '266' → logprob: -21.6250057220459
    10. '254' → logprob: -22.0000057220459

Token 220: '256' (ID: 5780)
  Prédit: '256'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '256' → logprob: -1.9361264946837764e-07
    2. '255' → logprob: -16.125
    3. ' ' → logprob: -16.75
    4. '   ' → logprob: -19.125
    5. '(' → logprob: -21.25
    6. '257' → logprob: -21.375
    7. '2' → logprob: -21.875
    8. '```' → logprob: -22.25
    9. '258' → logprob: -22.625
    10. '	' → logprob: -23.5

Token 221: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024351706728339195
    2. '   ' → logprob: -4.524351596832275
    3. '
' → logprob: -4.649351596832275
    4. ' for' → logprob: -6.149351596832275
    5. 'for' → logprob: -7.024351596832275
    6. '<|end|>' → logprob: -8.024352073669434
    7. '	for' → logprob: -9.274352073669434
    8. '	' → logprob: -9.774352073669434
    9. '	   ' → logprob: -10.524352073669434
    10. ' ' → logprob: -10.524352073669434

Token 222: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02542172744870186
    2. 'for' → logprob: -4.275421619415283
    3. '   ' → logprob: -4.775421619415283
    4. ' for' → logprob: -5.900421619415283
    5. '	for' → logprob: -11.275422096252441
    6. '	   ' → logprob: -12.650422096252441
    7. '           ' → logprob: -13.525422096252441
    8. '	' → logprob: -13.900422096252441
    9. '```' → logprob: -14.400422096252441
    10. '<|end|>' → logprob: -14.650422096252441

Token 223: ' target' (ID: 3783)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.022303594276309013
    2. '   ' → logprob: -3.897303581237793
    3. 'prev' → logprob: -7.272303581237793
    4. 'code' → logprob: -7.772303581237793
    5. '       ' → logprob: -8.522303581237793
    6. ' for' → logprob: -9.147303581237793
    7. 'from' → logprob: -9.522303581237793
    8. 'best' → logprob: -9.647303581237793
    9. 'x' → logprob: -10.522303581237793
    10. '    
' → logprob: -10.897303581237793

Token 224: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.041285887360572815
    2. '=' → logprob: -3.791285991668701
    3. '_val' → logprob: -4.041285991668701
    4. '_value' → logprob: -8.541285514831543
    5. '_i' → logprob: -10.541285514831543
    6. 's' → logprob: -10.791285514831543
    7. 'val' → logprob: -11.166285514831543
    8. 'Val' → logprob: -11.416285514831543
    9. '_x' → logprob: -11.916285514831543
    10. '=i' → logprob: -12.166285514831543

Token 225: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.029855774715542793
    2. ' x' → logprob: -3.529855728149414
    3. '   ' → logprob: -9.654855728149414
    4. 'clip' → logprob: -10.404855728149414
    5. ' ' → logprob: -12.904855728149414
    6. '	x' → logprob: -13.029855728149414
    7. ' clip' → logprob: -13.279855728149414
    8. 'code' → logprob: -13.904855728149414
    9. '  ' → logprob: -14.154855728149414
    10. '
' → logprob: -14.404855728149414

Token 226: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.546478935983032e-05
    2. '[' → logprob: -10.875025749206543
    3. '   ' → logprob: -13.125025749206543
    4. ' [' → logprob: -13.250025749206543
    5. 'i' → logprob: -13.625025749206543
    6. '       ' → logprob: -15.000025749206543
    7. '[I' → logprob: -15.000025749206543
    8. '[
' → logprob: -15.250025749206543
    9. ' i' → logprob: -16.625024795532227
    10. '```' → logprob: -16.750024795532227

Token 227: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.1454268991947174
    2. ']' → logprob: -2.0204269886016846
    3. ')
' → logprob: -6.2704267501831055
    4. ')' → logprob: -7.5204267501831055
    5. ']
' → logprob: -9.270426750183105
    6. '       ' → logprob: -9.395426750183105
    7. '   ' → logprob: -9.520426750183105
    8. ']

' → logprob: -10.520426750183105
    9. '])' → logprob: -11.395426750183105
    10. '])
' → logprob: -11.520426750183105

Token 228: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06727053970098495
    2. 'for' → logprob: -3.442270517349243
    3. '   ' → logprob: -3.692270517349243
    4. ' for' → logprob: -4.817270755767822
    5. '	for' → logprob: -10.317270278930664
    6. '	' → logprob: -11.942270278930664
    7. '	   ' → logprob: -12.192270278930664
    8. '        
' → logprob: -12.692270278930664
    9. '```' → logprob: -12.692270278930664
    10. '           ' → logprob: -13.192270278930664

Token 229: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.02257787436246872
    2. '   ' → logprob: -4.39757776260376
    3. '       ' → logprob: -4.77257776260376
    4. ' for' → logprob: -6.52257776260376
    5. 'code' → logprob: -9.772578239440918
    6. '	for' → logprob: -12.022578239440918
    7. 'from' → logprob: -12.522578239440918
    8. 'codes' → logprob: -12.772578239440918
    9. ' ' → logprob: -12.897578239440918
    10. '  ' → logprob: -13.022578239440918

Token 230: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.07599630951881409
    2. ' y' → logprob: -3.5759963989257812
    3. 'prev' → logprob: -3.5759963989257812
    4. 'j' → logprob: -5.950996398925781
    5. 'yi' → logprob: -5.950996398925781
    6. 'yj' → logprob: -6.200996398925781
    7. 'v' → logprob: -6.325996398925781
    8. ' prev' → logprob: -6.575996398925781
    9. 'curr' → logprob: -7.325996398925781
    10. 'code' → logprob: -7.325996398925781

Token 231: '_prev' (ID: 60491)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04183514788746834
    2. '_val' → logprob: -3.916835069656372
    3. '_' → logprob: -5.041835308074951
    4. '_curr' → logprob: -5.041835308074951
    5. '_prev' → logprob: -5.541835308074951
    6. '0' → logprob: -6.541835308074951
    7. '_i' → logprob: -7.791835308074951
    8. '_candidate' → logprob: -8.166834831237793
    9. 'v' → logprob: -8.291834831237793
    10. '_current' → logprob: -8.291834831237793

Token 232: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04312947392463684
    2. 'in' → logprob: -3.1681294441223145
    3. 'y' → logprob: -10.418129920959473
    4. '0' → logprob: -11.168129920959473
    5. ' ' → logprob: -11.293129920959473
    6. '_in' → logprob: -11.418129920959473
    7. '_' → logprob: -11.543129920959473
    8. ')' → logprob: -11.793129920959473
    9. '   ' → logprob: -11.793129920959473
    10. ',' → logprob: -11.918129920959473

Token 233: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019289902411401272
    2. ' range' → logprob: -6.251928806304932
    3. '	range' → logprob: -16.251928329467773
    4. '   ' → logprob: -16.376928329467773
    5. '(range' → logprob: -16.501928329467773
    6. ' ' → logprob: -17.251928329467773
    7. '  ' → logprob: -18.251928329467773
    8. 'r' → logprob: -18.251928329467773
    9. '

' → logprob: -18.376928329467773
    10. '
' → logprob: -18.501928329467773

Token 234: '(' (ID: 7)
  Prédit: '256'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '256' → logprob: -1.306760805164231e-05
    2. '(' → logprob: -11.25001335144043
    3. ' ' → logprob: -17.87501335144043
    4. '   ' → logprob: -19.50001335144043
    5. '255' → logprob: -19.62501335144043
    6. '
' → logprob: -19.75001335144043
    7. '0' → logprob: -21.37501335144043
    8. '[' → logprob: -21.50001335144043
    9. '	' → logprob: -21.62501335144043
    10. '2' → logprob: -21.75001335144043

Token 235: '256' (ID: 5780)
  Prédit: '256'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '256' → logprob: 0.0
    2. ' ' → logprob: -18.75
    3. '0' → logprob: -20.0
    4. '   ' → logprob: -21.0
    5. ')' → logprob: -21.125
    6. '255' → logprob: -21.625
    7. '
' → logprob: -22.5
    8. '1' → logprob: -22.75
    9. '2' → logprob: -23.0
    10. 'len' → logprob: -23.25

Token 236: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3138635456562042
    2. '):' → logprob: -1.3138635158538818
    3. '):
' → logprob: -7.438863754272461
    4. '):

' → logprob: -12.313863754272461
    5. ':' → logprob: -12.438863754272461
    6. '       ' → logprob: -12.813863754272461
    7. '   ' → logprob: -13.688863754272461
    8. ')' → logprob: -14.813863754272461
    9. ' ):
' → logprob: -15.188863754272461
    10. ':
' → logprob: -15.563863754272461

Token 237: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014816515613347292
    2. ' for' → logprob: -6.751481533050537
    3. '<|end|>' → logprob: -9.626482009887695
    4. ',' → logprob: -9.751482009887695
    5. '        
' → logprob: -10.001482009887695
    6. '   ' → logprob: -10.626482009887695
    7. '        ' → logprob: -10.626482009887695
    8. ' if' → logprob: -10.751482009887695
    9. ' ' → logprob: -10.876482009887695
    10. '           ' → logprob: -11.251482009887695

Token 238: ' cost' (ID: 3097)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4862194359302521
    2. 'prev' → logprob: -1.4862194061279297
    3. 'dp' → logprob: -3.2362194061279297
    4. 'for' → logprob: -3.2362194061279297
    5. 'error' → logprob: -3.4862194061279297
    6. ' if' → logprob: -4.23621940612793
    7. 'cost' (adapté à ' cost') → logprob: -4.36121940612793
    8. 'err' → logprob: -4.48621940612793
    9. 'e' → logprob: -5.36121940612793
    10. '   ' → logprob: -5.86121940612793

Token 239: '_so' (ID: 98189)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08943840861320496
    2. '=' → logprob: -2.4644384384155273
    3. '_prev' → logprob: -8.339438438415527
    4. '   ' → logprob: -9.589438438415527
    5. 's' → logprob: -10.589438438415527
    6. ' ' → logprob: -10.839438438415527
    7. '_' → logprob: -11.214438438415527
    8. '+' → logprob: -11.339438438415527
    9. '_diff' → logprob: -11.339438438415527
    10. '       ' → logprob: -11.339438438415527

Token 240: '_far' (ID: 170374)
  Prédit: 'far'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'far' → logprob: -0.0013111939188092947
    2. '_far' → logprob: -7.001311302185059
    3. '   ' → logprob: -8.501311302185059
    4. 'f' → logprob: -9.876311302185059
    5. '       ' → logprob: -10.251311302185059
    6. '=' → logprob: -10.251311302185059
    7. '    ' → logprob: -11.376311302185059
    8. '        ' → logprob: -11.626311302185059
    9. '  ' → logprob: -11.626311302185059
    10. ' =' → logprob: -12.001311302185059

Token 241: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018150413408875465
    2. '=' → logprob: -4.018150329589844
    3. '   ' → logprob: -16.018150329589844
    4. ',' → logprob: -16.143150329589844
    5. ' ' → logprob: -16.268150329589844
    6. '    ' → logprob: -16.268150329589844
    7. 'if' → logprob: -17.893150329589844
    8. ' if' → logprob: -18.393150329589844
    9. '        ' → logprob: -18.643150329589844
    10. ' +=' → logprob: -18.643150329589844

Token 242: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.008614926598966122
    2. ' prev' → logprob: -4.758615016937256
    3. '	prev' → logprob: -15.383614540100098
    4. '           ' → logprob: -16.383615493774414
    5. '   ' → logprob: -16.758615493774414
    6. '(prev' → logprob: -17.633615493774414
    7. '       ' → logprob: -18.508615493774414
    8. '_prev' → logprob: -18.633615493774414
    9. '    ' → logprob: -19.508615493774414
    10. '.prev' → logprob: -19.508615493774414

Token 243: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -5.438573680294212e-06
    2. 'dp' → logprob: -12.375005722045898
    3. '_' → logprob: -15.000005722045898
    4. '_dt' → logprob: -15.250005722045898
    5. '	dp' → logprob: -16.0000057220459
    6. '_d' → logprob: -16.7500057220459
    7. '_ds' → logprob: -16.8750057220459
    8. '_dx' → logprob: -16.8750057220459
    9. '_dl' → logprob: -16.8750057220459
    10. '
' → logprob: -17.1250057220459

Token 244: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -3.5954712075181305e-05
    2. '[' → logprob: -10.625036239624023
    3. ' [' → logprob: -11.500036239624023
    4. 'y' → logprob: -13.875036239624023
    5. ' y' → logprob: -15.750036239624023
    6. '   ' → logprob: -15.750036239624023
    7. '       ' → logprob: -17.000036239624023
    8. '           ' → logprob: -17.250036239624023
    9. '[
' → logprob: -17.375036239624023
    10. '(y' → logprob: -17.875036239624023

Token 245: '_prev' (ID: 60491)
  Prédit: '_prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prev' → logprob: -0.00014716439181938767
    2. 'prev' → logprob: -8.875146865844727
    3. '_' → logprob: -12.500146865844727
    4. ' _' → logprob: -14.375146865844727
    5. '_pre' → logprob: -14.750146865844727
    6. '_
' → logprob: -15.125146865844727
    7. '_p' → logprob: -15.250146865844727
    8. 'Prev' → logprob: -15.250146865844727
    9. '	prev' → logprob: -15.625146865844727
    10. '   ' → logprob: -15.625146865844727

Token 246: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.6547361016273499
    2. ')
' → logprob: -0.9047361016273499
    3. ')' → logprob: -3.404736042022705
    4. ']' → logprob: -3.529736042022705
    5. '           ' → logprob: -4.529736042022705
    6. '       ' → logprob: -6.154736042022705
    7. '   ' → logprob: -9.529736518859863
    8. ']
' → logprob: -9.904736518859863
    9. '])
' → logprob: -10.279736518859863
    10. '
' → logprob: -10.279736518859863

Token 247: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003765727742575109
    2. '<|end|>' → logprob: -8.00037670135498
    3. '<|end|>' → logprob: -11.00037670135498
    4. ' if' → logprob: -11.62537670135498
    5. '
' → logprob: -12.62537670135498
    6. '            
' → logprob: -12.62537670135498
    7. '               ' → logprob: -13.12537670135498
    8. '       ' → logprob: -13.50037670135498
    9. '		' → logprob: -13.87537670135498
    10. '          ' → logprob: -14.25037670135498

Token 248: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03537893667817116
    2. ' if' → logprob: -3.410378932952881
    3. '           ' → logprob: -6.660378932952881
    4. 'for' → logprob: -8.035379409790039
    5. '       ' → logprob: -9.160379409790039
    6. '   ' → logprob: -11.785379409790039
    7. ' for' → logprob: -11.910379409790039
    8. '
' → logprob: -13.035379409790039
    9. '               ' → logprob: -13.660379409790039
    10. 'i' → logprob: -14.535379409790039

Token 249: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.3868817985057831
    2. ' cost' → logprob: -1.1368818283081055
    3. '   ' → logprob: -11.886881828308105
    4. ' ' → logprob: -13.261881828308105
    5. '(cost' → logprob: -14.261881828308105
    6. '    ' → logprob: -14.761881828308105
    7. '  ' → logprob: -15.011881828308105
    8. 'cos' → logprob: -15.261881828308105
    9. 'co' → logprob: -15.761881828308105
    10. ' ' → logprob: -16.51188087463379

Token 250: '_so' (ID: 98189)
  Prédit: '_so'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_so' → logprob: -4.320199877838604e-07
    2. '_' → logprob: -15.25
    3. '_s' → logprob: -15.875
    4. ' _' → logprob: -18.625
    5. '_far' → logprob: -18.75
    6. '_sm' → logprob: -19.125
    7. '_soft' → logprob: -19.5
    8. '   ' → logprob: -19.875
    9. 'so' → logprob: -20.25
    10. '_sol' → logprob: -20.25

Token 251: '_far' (ID: 170374)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.047726698219776154
    2. 'rf' → logprob: -3.297726631164551
    3. 'r' → logprob: -5.797726631164551
    4. 'far' → logprob: -6.547726631164551
    5. '           ' → logprob: -6.797726631164551
    6. 'inf' → logprob: -7.172726631164551
    7. '   ' → logprob: -7.172726631164551
    8. '       ' → logprob: -7.547726631164551
    9. '            ' → logprob: -7.922726631164551
    10. '        ' → logprob: -8.54772663116455

Token 252: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4287654757499695
    2. '==' → logprob: -1.0537655353546143
    3. ' <' → logprob: -10.428765296936035
    4. '<' → logprob: -11.553765296936035
    5. ' ' → logprob: -11.678765296936035
    6. ' ' → logprob: -11.928765296936035
    7. '===' → logprob: -13.428765296936035
    8. '=' → logprob: -13.678765296936035
    9. 'is' → logprob: -13.678765296936035
    10. ' is' → logprob: -13.803765296936035

Token 253: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -1.318681188422488e-05
    2. ' float' → logprob: -11.25001335144043
    3. '	float' → logprob: -17.00001335144043
    4. '   ' → logprob: -17.25001335144043
    5. '=float' → logprob: -18.50001335144043
    6. '
' → logprob: -18.75001335144043
    7. 'flo' → logprob: -19.25001335144043
    8. '(float' → logprob: -20.00001335144043
    9. 'inf' → logprob: -20.62501335144043
    10. ',float' → logprob: -20.62501335144043

Token 254: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: 0.0
    2. ''in' → logprob: -17.375
    3. '("' → logprob: -18.75
    4. '(' → logprob: -19.125
    5. '(
' → logprob: -19.625
    6. ''' → logprob: -20.5
    7. ' ('' → logprob: -21.0
    8. '   ' → logprob: -21.125
    9. '
' → logprob: -21.25
    10. ''s' → logprob: -21.875

Token 255: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: 0.0
    2. '')' → logprob: -17.875
    3. ')' → logprob: -18.375
    4. ' inf' → logprob: -18.625
    5. 'in' → logprob: -18.75
    6. ''' → logprob: -18.75
    7. ''in' → logprob: -18.875
    8. '
' → logprob: -19.375
    9. '

' → logprob: -20.125
    10. 'info' → logprob: -21.5

Token 256: ''):
' (ID: 26539)
  Prédit: ''):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''):
' → logprob: -0.34354865550994873
    2. '):
' → logprob: -1.3435486555099487
    3. '):' → logprob: -4.343548774719238
    4. ''):' → logprob: -4.343548774719238
    5. ')' → logprob: -5.968548774719238
    6. '')' → logprob: -7.343548774719238
    7. '               ' → logprob: -8.093548774719238
    8. '           ' → logprob: -9.218548774719238
    9. '       ' → logprob: -9.843548774719238
    10. ':
' → logprob: -10.218548774719238

Token 257: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0010245933663100004
    2. ':' → logprob: -7.1260247230529785
    3. ' continue' → logprob: -9.12602424621582
    4. '           ' → logprob: -9.50102424621582
    5. ':
' → logprob: -11.62602424621582
    6. 'continue' → logprob: -11.87602424621582
    7. '	           ' → logprob: -12.25102424621582
    8. '                
' → logprob: -12.62602424621582
    9. '                   ' → logprob: -13.37602424621582
    10. '       ' → logprob: -13.37602424621582

Token 258: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.35832351446151733
    2. 'continue' (adapté à ' continue') → logprob: -1.733323574066162
    3. ' continue' → logprob: -2.108323574066162
    4. '                   ' → logprob: -5.858323574066162
    5. '           ' → logprob: -9.483323097229004
    6. '	continue' → logprob: -9.983323097229004
    7. '                       ' → logprob: -11.483323097229004
    8. '_continue' → logprob: -11.983323097229004
    9. '   ' → logprob: -12.108323097229004
    10. '	           ' → logprob: -12.483323097229004

Token 259: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0035878336057066917
    2. '
' → logprob: -5.87858772277832
    3. '            
' → logprob: -7.50358772277832
    4. '    
' → logprob: -10.12858772277832
    5. '<|end|>' → logprob: -10.50358772277832
    6. '	       ' → logprob: -10.62858772277832
    7. '        
' → logprob: -10.75358772277832
    8. '       ' → logprob: -10.75358772277832
    9. '		' → logprob: -10.87858772277832
    10. ' 
' → logprob: -11.00358772277832

Token 260: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07989345490932465
    2. '       ' → logprob: -2.7048933506011963
    3. '        
' → logprob: -5.829893589019775
    4. '
' → logprob: -6.204893589019775
    5. '    
' → logprob: -6.579893589019775
    6. '            
' → logprob: -6.829893589019775
    7. ' 
' → logprob: -7.454893589019775
    8. '<|end|>' → logprob: -7.954893589019775
    9. '   ' → logprob: -8.079893112182617
    10. ' for' → logprob: -8.329893112182617

Token 261: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.02579006366431713
    2. '           ' → logprob: -4.025790214538574
    3. ' for' → logprob: -5.275790214538574
    4. '       ' → logprob: -6.025790214538574
    5. '   ' → logprob: -9.525790214538574
    6. '               ' → logprob: -13.275790214538574
    7. ' ' → logprob: -13.400790214538574
    8. '	for' → logprob: -14.275790214538574
    9. '
' → logprob: -14.400790214538574
    10. '            
' → logprob: -15.150790214538574

Token 262: ' c' (ID: 274)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.317038357257843
    2. 'code' → logprob: -2.0670382976531982
    3. 'c' → logprob: -2.3170382976531982
    4. ' y' → logprob: -4.317038536071777
    5. 'delta' → logprob: -4.567038536071777
    6. 'cb' → logprob: -4.817038536071777
    7. 'd' → logprob: -5.942038536071777
    8. ' code' → logprob: -5.942038536071777
    9. 'z' → logprob: -6.692038536071777
    10. 'candidate' → logprob: -6.692038536071777

Token 263: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023280303925275803
    2. 'in' → logprob: -3.773280382156372
    3. 'code' → logprob: -11.523280143737793
    4. ' ' → logprob: -12.273280143737793
    5. 'c' → logprob: -12.523280143737793
    6. 'i' → logprob: -12.898280143737793
    7. '_code' → logprob: -13.023280143737793
    8. 'n' → logprob: -13.148280143737793
    9. '_in' → logprob: -13.398280143737793
    10. ')' → logprob: -13.773280143737793

Token 264: ' code' (ID: 3490)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.0021946365013718605
    2. ' code' → logprob: -6.127194404602051
    3. 'range' → logprob: -11.75219440460205
    4. ' range' → logprob: -15.00219440460205
    5. '(code' → logprob: -15.00219440460205
    6. 'c' → logprob: -15.25219440460205
    7. ' ' → logprob: -15.25219440460205
    8. '   ' → logprob: -15.25219440460205
    9. '	code' → logprob: -15.87719440460205
    10. '_code' → logprob: -16.752195358276367

Token 265: 'book' (ID: 3092)
  Prédit: 'book'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'book' → logprob: -0.00020520923135336488
    2. 'code' → logprob: -9.875205039978027
    3. 'c' → logprob: -10.000205039978027
    4. ' in' → logprob: -10.125205039978027
    5. '_book' → logprob: -11.000205039978027
    6. 'in' → logprob: -11.375205039978027
    7. 'for' → logprob: -12.000205039978027
    8. 'b' → logprob: -12.375205039978027
    9. ')' → logprob: -12.500205039978027
    10. 's' → logprob: -12.750205039978027

Token 266: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07177471369504929
    2. ':
' → logprob: -2.82177472114563
    3. '):' → logprob: -5.321774482727051
    4. '):
' → logprob: -5.571774482727051
    5. ']:' → logprob: -7.821774482727051
    6. '<|end|>' → logprob: -8.44677448272705
    7. ']:
' → logprob: -9.32177448272705
    8. ' in' → logprob: -9.44677448272705
    9. ' :' → logprob: -9.57177448272705
    10. ':

' → logprob: -9.94677448272705

Token 267: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002215084619820118
    2. ' for' → logprob: -6.7522149085998535
    3. '<|end|>' → logprob: -7.7522149085998535
    4. ',' → logprob: -8.502215385437012
    5. '                
' → logprob: -8.627215385437012
    6. '           ' → logprob: -10.002215385437012
    7. ' ' → logprob: -10.252215385437012
    8. '                   ' → logprob: -10.752215385437012
    9. ' s' → logprob: -10.877215385437012
    10. '                ' → logprob: -10.877215385437012

Token 268: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.49144601821899414
    2. ' for' → logprob: -1.6164460182189941
    3. 'for' → logprob: -2.741446018218994
    4. 'y' (adapté à ' y') → logprob: -2.741446018218994
    5. '               ' → logprob: -3.616446018218994
    6. '                   ' → logprob: -3.991446018218994
    7. ' cost' → logprob: -6.491446018218994
    8. ' new' → logprob: -6.616446018218994
    9. '   ' → logprob: -6.991446018218994
    10. ' val' → logprob: -6.991446018218994

Token 269: '_curr' (ID: 92432)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.21400956809520721
    2. '_new' → logprob: -2.7140095233917236
    3. '_candidate' → logprob: -2.7140095233917236
    4. '_c' → logprob: -3.9640095233917236
    5. '_' → logprob: -4.089009761810303
    6. ' =' → logprob: -4.464009761810303
    7. '_curr' → logprob: -5.464009761810303
    8. '_next' → logprob: -5.589009761810303
    9. '=' → logprob: -5.964009761810303
    10. '_cur' → logprob: -7.339009761810303

Token 270: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08895298838615417
    2. '=' → logprob: -2.4639530181884766
    3. ' ' → logprob: -12.338953018188477
    4. '_val' → logprob: -12.463953018188477
    5. '_candidate' → logprob: -13.963953018188477
    6. ')' → logprob: -14.338953018188477
    7. '_candidates' → logprob: -14.588953018188477
    8. ',' → logprob: -14.588953018188477
    9. '=c' → logprob: -14.713953018188477
    10. '=int' → logprob: -14.838953018188477

Token 271: ' clip' (ID: 19925)
  Prédit: 'clip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clip' → logprob: -0.3488946855068207
    2. ' clip' → logprob: -1.223894715309143
    3. 'c' → logprob: -8.598895072937012
    4. ' c' → logprob: -9.348895072937012
    5. ' ' → logprob: -10.223895072937012
    6. 'code' → logprob: -10.473895072937012
    7. ' y' → logprob: -10.723895072937012
    8. 'int' → logprob: -11.223895072937012
    9. 'y' → logprob: -11.286395072937012
    10. '   ' → logprob: -11.536395072937012

Token 272: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.2073897421360016
    2. '(c' → logprob: -1.7073897123336792
    3. '(' → logprob: -5.332389831542969
    4. '(code' → logprob: -7.707389831542969
    5. '((' → logprob: -8.457389831542969
    6. 'y' → logprob: -8.457389831542969
    7. '(abs' → logprob: -9.207389831542969
    8. ' y' → logprob: -10.332389831542969
    9. ' (' → logprob: -10.457389831542969
    10. 'c' → logprob: -10.582389831542969

Token 273: '_prev' (ID: 60491)
  Prédit: '_prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prev' → logprob: -0.08875339478254318
    2. 'prev' → logprob: -2.8387534618377686
    3. '[c' → logprob: -4.7137532234191895
    4. 'c' → logprob: -4.8387532234191895
    5. '_c' → logprob: -5.7137532234191895
    6. ')' → logprob: -6.2137532234191895
    7. '_curr' → logprob: -6.4637532234191895
    8. '(c' → logprob: -7.8387532234191895
    9. '[' → logprob: -8.213753700256348
    10. 'y' → logprob: -8.338753700256348

Token 274: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1668420284986496
    2. '+' → logprob: -1.916841983795166
    3. '+c' → logprob: -5.041841983795166
    4. ' -' → logprob: -9.541842460632324
    5. ' ' → logprob: -11.291842460632324
    6. ' +
' → logprob: -11.541842460632324
    7. '-' → logprob: -11.666842460632324
    8. ' c' → logprob: -11.666842460632324
    9. '+
' → logprob: -12.041842460632324
    10. ' plus' → logprob: -12.291842460632324

Token 275: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.1427055299282074
    2. ' c' → logprob: -2.0177054405212402
    3. '	c' → logprob: -11.517705917358398
    4. '   ' → logprob: -11.517705917358398
    5. ' ' → logprob: -12.642705917358398
    6. '_c' → logprob: -13.517705917358398
    7. ')c' → logprob: -13.517705917358398
    8. '  ' → logprob: -13.892705917358398
    9. '(c' → logprob: -14.017705917358398
    10. '    ' → logprob: -14.767705917358398

Token 276: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.16046540439128876
    2. ')' → logprob: -1.9104653596878052
    3. ')
' → logprob: -8.410465240478516
    4. '               ' → logprob: -11.410465240478516
    5. ' )
' → logprob: -12.785465240478516
    6. ')

' → logprob: -12.785465240478516
    7. '           ' → logprob: -14.160465240478516
    8. ')`
' → logprob: -14.910465240478516
    9. ' )' → logprob: -15.285465240478516
    10. '```' → logprob: -15.660465240478516

Token 277: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006396461394615471
    2. '                
' → logprob: -7.75063943862915
    3. '
' → logprob: -9.500639915466309
    4. ')' → logprob: -10.625639915466309
    5. '```' → logprob: -10.625639915466309
    6. '                   ' → logprob: -11.000639915466309
    7. '              ' → logprob: -11.375639915466309
    8. '           ' → logprob: -11.375639915466309
    9. '<|end|>' → logprob: -11.500639915466309
    10. ',' → logprob: -12.125639915466309

Token 278: ' diff' (ID: 8868)
  Prédit: ' cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.17838896811008453
    2. 'cost' → logprob: -2.053389072418213
    3. '               ' → logprob: -4.178389072418213
    4. ' error' → logprob: -5.428389072418213
    5. ' new' → logprob: -5.428389072418213
    6. ' diff' → logprob: -5.678389072418213
    7. 'diff' (adapté à ' diff') → logprob: -6.178389072418213
    8. ' curr' → logprob: -6.428389072418213
    9. 'error' → logprob: -6.553389072418213
    10. 'new' → logprob: -7.678389072418213

Token 279: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193724036216736
    2. '=' → logprob: -1.5019372701644897
    3. '           ' → logprob: -12.626936912536621
    4. '               ' → logprob: -13.251936912536621
    5. '                   ' → logprob: -14.751936912536621
    6. ')' → logprob: -14.751936912536621
    7. ' ' → logprob: -14.751936912536621
    8. '   ' → logprob: -15.001936912536621
    9. '            ' → logprob: -15.501936912536621
    10. '    ' → logprob: -16.001937866210938

Token 280: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.18751494586467743
    2. 'y' → logprob: -1.8125149011611938
    3. '(target' → logprob: -5.812514781951904
    4. ' target' → logprob: -5.812514781951904
    5. ' y' → logprob: -6.562514781951904
    6. '(y' → logprob: -8.312515258789062
    7. ' (' → logprob: -10.562515258789062
    8. '(' → logprob: -11.187515258789062
    9. '   ' → logprob: -11.562515258789062
    10. 'x' → logprob: -12.125015258789062

Token 281: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0024775585625320673
    2. '-' → logprob: -6.002477645874023
    3. ' ' → logprob: -14.377477645874023
    4. ' ' → logprob: -14.877477645874023
    5. '=' → logprob: -15.752477645874023
    6. ' =' → logprob: -16.127477645874023
    7. ',' → logprob: -16.127477645874023
    8. ')' → logprob: -16.127477645874023
    9. ' -
' → logprob: -16.377477645874023
    10. '   ' → logprob: -16.377477645874023

Token 282: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.014164329506456852
    2. ' y' → logprob: -4.264164447784424
    3. '               ' → logprob: -15.389163970947266
    4. '                   ' → logprob: -15.639163970947266
    5. '
' → logprob: -15.764163970947266
    6. '	y' → logprob: -16.389163970947266
    7. '           ' → logprob: -16.764163970947266
    8. ')y' → logprob: -17.389163970947266
    9. '   ' → logprob: -17.639163970947266
    10. '                       ' → logprob: -17.639163970947266

Token 283: '_curr' (ID: 92432)
  Prédit: '_curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_curr' → logprob: -0.00027218335890211165
    2. 'curr' → logprob: -8.250271797180176
    3. '[curr' → logprob: -12.250271797180176
    4. '_cur' → logprob: -12.375271797180176
    5. '	curr' → logprob: -14.000271797180176
    6. '_prev' → logprob: -15.000271797180176
    7. ' curr' → logprob: -15.250271797180176
    8. 'Curr' → logprob: -15.750271797180176
    9. '_c' → logprob: -15.875271797180176
    10. '(curr' → logprob: -16.250272750854492

Token 284: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2364039570093155
    2. ')' → logprob: -2.1114039421081543
    3. '<|end|>' → logprob: -2.8614039421081543
    4. '
' → logprob: -4.486403942108154
    5. '<|end|>' → logprob: -5.236403942108154
    6. '                
' → logprob: -5.861403942108154
    7. '  
' → logprob: -6.111403942108154
    8. '           ' → logprob: -6.736403942108154
    9. ')
' → logprob: -6.736403942108154
    10. '       ' → logprob: -6.736403942108154

Token 285: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011245639994740486
    2. '                   ' → logprob: -6.3862457275390625
    3. '
' → logprob: -6.5112457275390625
    4. '                
' → logprob: -6.5112457275390625
    5. '<|end|>' → logprob: -7.1362457275390625
    6. '```' → logprob: -7.2612457275390625
    7. '                               ' → logprob: -7.5112457275390625
    8. ' cost' → logprob: -7.6362457275390625
    9. ')' → logprob: -7.7612457275390625
    10. 'cost' → logprob: -7.8862457275390625

Token 286: ' new' (ID: 620)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.21254175901412964
    2. ' cost' → logprob: -1.7125418186187744
    3. 'curr' → logprob: -5.337541580200195
    4. ' curr' → logprob: -5.837541580200195
    5. '               ' → logprob: -6.462541580200195
    6. ' new' → logprob: -6.962541580200195
    7. 'new' (adapté à ' new') → logprob: -7.212541580200195
    8. '                   ' → logprob: -10.337541580200195
    9. 'cur' → logprob: -11.837541580200195
    10. '                
' → logprob: -11.962541580200195

Token 287: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -3.082895273109898e-05
    2. 'cost' → logprob: -10.625030517578125
    3. '_' → logprob: -12.500030517578125
    4. ' cost' → logprob: -13.250030517578125
    5. '_COST' → logprob: -14.875030517578125
    6. '_dp' → logprob: -16.000030517578125
    7. ' _' → logprob: -16.125030517578125
    8. '_score' → logprob: -16.375030517578125
    9. '_c' → logprob: -16.625030517578125
    10. '_val' → logprob: -16.750030517578125

Token 288: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01603648066520691
    2. '=' → logprob: -4.141036510467529
    3. ' ' → logprob: -14.016036033630371
    4. '   ' → logprob: -15.016036033630371
    5. '    ' → logprob: -15.266036033630371
    6. '           ' → logprob: -15.766036033630371
    7. ' ' → logprob: -16.641036987304688
    8. ' =
' → logprob: -16.641036987304688
    9. '            ' → logprob: -16.766036987304688
    10. 's' → logprob: -16.891036987304688

Token 289: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.16022463142871857
    2. ' cost' → logprob: -1.9102246761322021
    3. '(cost' → logprob: -15.660224914550781
    4. '   ' → logprob: -16.28522491455078
    5. '               ' → logprob: -16.91022491455078
    6. '_cost' → logprob: -17.16022491455078
    7. '           ' → logprob: -17.91022491455078
    8. 'Cost' → logprob: -18.03522491455078
    9. 'code' → logprob: -18.53522491455078
    10. '                   ' → logprob: -18.91022491455078

Token 290: '_so' (ID: 98189)
  Prédit: '_so'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_so' → logprob: -1.7432603272027336e-06
    2. '_cost' → logprob: -14.500001907348633
    3. 'cost' → logprob: -15.375001907348633
    4. '_' → logprob: -16.125001907348633
    5. '_s' → logprob: -16.125001907348633
    6. '_to' → logprob: -16.250001907348633
    7. '_SO' → logprob: -16.250001907348633
    8. '_far' → logprob: -16.500001907348633
    9. '[' → logprob: -16.750001907348633
    10. ' =' → logprob: -16.875001907348633

Token 291: '_far' (ID: 170374)
  Prédit: '_far'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_far' → logprob: -0.20147804915905
    2. 'far' → logprob: -1.7014780044555664
    3. 'Far' → logprob: -10.451478004455566
    4. 'f' → logprob: -10.451478004455566
    5. ' far' → logprob: -12.826478004455566
    6. 'r' → logprob: -12.826478004455566
    7. 'ar' → logprob: -13.826478004455566
    8. 'ofar' → logprob: -14.826478004455566
    9. '_f' → logprob: -16.701478958129883
    10. '	f' → logprob: -17.201478958129883

Token 292: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.006716674659401178
    2. '+' → logprob: -5.006716728210449
    3. ' ' → logprob: -14.25671672821045
    4. ' ' → logprob: -15.38171672821045
    5. ' plus' → logprob: -15.75671672821045
    6. ' +
' → logprob: -16.381715774536133
    7. '    ' → logprob: -17.506715774536133
    8. ' +(' → logprob: -17.756715774536133
    9. ' +=' → logprob: -17.881715774536133
    10. '
' → logprob: -17.881715774536133

Token 293: ' diff' (ID: 8868)
  Prédit: ' diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.2015075832605362
    2. 'diff' → logprob: -1.701507568359375
    3. '(diff' → logprob: -9.326507568359375
    4. '	diff' → logprob: -12.326507568359375
    5. ' ' → logprob: -15.451507568359375
    6. '
' → logprob: -15.451507568359375
    7. '   ' → logprob: -15.826507568359375
    8. ' (' → logprob: -16.451507568359375
    9. '```' → logprob: -17.326507568359375
    10. ' dif' → logprob: -17.326507568359375

Token 294: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5810496807098389
    2. ' *' → logprob: -0.8310496807098389
    3. '**' → logprob: -5.331049919128418
    4. ' **' → logprob: -8.331049919128418
    5. '*d' → logprob: -11.581049919128418
    6. '*object' → logprob: -12.581049919128418
    7. ' ' → logprob: -12.956049919128418
    8. 'diff' → logprob: -14.081049919128418
    9. '```' → logprob: -15.456049919128418
    10. '*out' → logprob: -15.456049919128418

Token 295: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.0036142051685601473
    2. ' diff' → logprob: -5.62861442565918
    3. '	diff' → logprob: -11.62861442565918
    4. '
' → logprob: -13.50361442565918
    5. '(diff' → logprob: -13.87861442565918
    6. 'dif' → logprob: -14.12861442565918
    7. 'd' → logprob: -14.12861442565918
    8. '<|end|>' → logprob: -14.50361442565918
    9. 'difference' → logprob: -14.87861442565918
    10. '_diff' → logprob: -15.00361442565918

Token 296: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06016654148697853
    2. '
' → logprob: -3.310166597366333
    3. '<|end|>' → logprob: -4.310166358947754
    4. '       ' → logprob: -5.685166358947754
    5. ')' → logprob: -6.060166358947754
    6. ' if' → logprob: -7.060166358947754
    7. '  
' → logprob: -7.560166358947754
    8. '                
' → logprob: -7.685166358947754
    9. '<|end|>' → logprob: -7.935166358947754
    10. '           ' → logprob: -9.435166358947754

Token 297: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005693776533007622
    2. '<|end|>' → logprob: -5.7556939125061035
    3. ' if' → logprob: -6.8806939125061035
    4. '
' → logprob: -7.3806939125061035
    5. ')' → logprob: -8.380693435668945
    6. '                
' → logprob: -8.505693435668945
    7. '       ' → logprob: -8.505693435668945
    8. '<|end|>' → logprob: -9.755693435668945
    9. '  
' → logprob: -10.005693435668945
    10. '           ' → logprob: -10.755693435668945

Token 298: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2531053125858307
    2. 'if' (adapté à ' if') → logprob: -1.5031052827835083
    3. '               ' → logprob: -6.753105163574219
    4. '           ' → logprob: -12.128105163574219
    5. '                   ' → logprob: -13.503105163574219
    6. '       ' → logprob: -14.253105163574219
    7. '
' → logprob: -14.878105163574219
    8. '	if' → logprob: -15.378105163574219
    9. '   ' → logprob: -17.00310516357422
    10. '```' → logprob: -17.12810516357422

Token 299: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.3870822489261627
    2. ' new' → logprob: -1.1370822191238403
    3. '   ' → logprob: -9.26208209991455
    4. 'curr' → logprob: -9.76208209991455
    5. ' curr' → logprob: -10.38708209991455
    6. '	new' → logprob: -11.13708209991455
    7. '           ' → logprob: -13.51208209991455
    8. '    ' → logprob: -13.63708209991455
    9. '       ' → logprob: -13.76208209991455
    10. '                   ' → logprob: -13.76208209991455

Token 300: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.0004941754741594195
    2. '_curr' → logprob: -8.250494003295898
    3. 'cost' → logprob: -8.500494003295898
    4. ' cost' → logprob: -11.875494003295898
    5. '[curr' → logprob: -12.125494003295898
    6. 'curr' → logprob: -12.375494003295898
    7. '_' → logprob: -12.625494003295898
    8. '_COST' → logprob: -12.750494003295898
    9. 'Cost' → logprob: -13.750494003295898
    10. '_cos' → logprob: -14.000494003295898

Token 301: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.06198505312204361
    2. '<' → logprob: -2.8119850158691406
    3. '[' → logprob: -12.56198501586914
    4. '<int' → logprob: -12.68698501586914
    5. '<|end|>' → logprob: -12.81198501586914
    6. ' ' → logprob: -13.31198501586914
    7. '<th' → logprob: -14.31198501586914
    8. '<class' → logprob: -14.68698501586914
    9. '<size' → logprob: -14.81198501586914
    10. ',' → logprob: -14.93698501586914

Token 302: ' curr' (ID: 10495)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.0019286326132714748
    2. ' curr' → logprob: -6.251928806304932
    3. '	curr' → logprob: -17.876928329467773
    4. '(curr' → logprob: -18.126928329467773
    5. '[curr' → logprob: -19.001928329467773
    6. 'cur' → logprob: -19.376928329467773
    7. '
' → logprob: -20.126928329467773
    8. 'Curr' → logprob: -20.126928329467773
    9. '.curr' → logprob: -20.626928329467773
    10. '_curr' → logprob: -21.001928329467773

Token 303: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -7.896309739408025e-07
    2. '_dt' → logprob: -14.750000953674316
    3. '_' → logprob: -16.125
    4. '_d' → logprob: -16.625
    5. '_dl' → logprob: -17.125
    6. '_dc' → logprob: -17.375
    7. '_dx' → logprob: -17.875
    8. '_curr' → logprob: -18.0
    9. '_cost' → logprob: -18.5
    10. '_df' → logprob: -18.5

Token 304: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -4.961759259458631e-06
    2. 'y' → logprob: -12.625004768371582
    3. '[' → logprob: -13.375004768371582
    4. '[
' → logprob: -17.0000057220459
    5. '[c' → logprob: -18.1250057220459
    6. ' y' → logprob: -18.5000057220459
    7. '(y' → logprob: -18.7500057220459
    8. '```' → logprob: -19.0000057220459
    9. ' [' → logprob: -19.5000057220459
    10. '   ' → logprob: -20.1250057220459

Token 305: '_curr' (ID: 92432)
  Prédit: '_curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_curr' → logprob: -2.856408536899835e-05
    2. 'curr' → logprob: -10.875028610229492
    3. '[curr' → logprob: -11.875028610229492
    4. '_cur' → logprob: -13.875028610229492
    5. 'Curr' → logprob: -14.375028610229492
    6. '	curr' → logprob: -15.000028610229492
    7. '_prev' → logprob: -15.250028610229492
    8. '_c' → logprob: -15.625028610229492
    9. '.curr' → logprob: -16.375028610229492
    10. ' curr' → logprob: -16.500028610229492

Token 306: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.5289726257324219
    2. ']:' → logprob: -1.0289726257324219
    3. ']' → logprob: -3.153972625732422
    4. ':
' → logprob: -5.278972625732422
    5. '[y' → logprob: -6.028972625732422
    6. ':' → logprob: -6.028972625732422
    7. '[' → logprob: -7.778972625732422
    8. '):
' → logprob: -9.778972625732422
    9. ']:

' → logprob: -9.778972625732422
    10. 'y' → logprob: -10.153972625732422

Token 307: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.016032136976718903
    2. '               ' → logprob: -4.3910322189331055
    3. '                       ' → logprob: -6.1410322189331055
    4. '                           ' → logprob: -7.1410322189331055
    5. '           ' → logprob: -8.391032218933105
    6. '                    
' → logprob: -9.266032218933105
    7. '                               ' → logprob: -9.516032218933105
    8. '<|end|>' → logprob: -9.641032218933105
    9. '                        
' → logprob: -11.016032218933105
    10. '                    ' → logprob: -11.266032218933105

Token 308: ' curr' (ID: 10495)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' (adapté à ' curr') → logprob: -0.16346119344234467
    2. '                   ' → logprob: -2.288461208343506
    3. ' curr' → logprob: -3.288461208343506
    4. '                       ' → logprob: -4.538461208343506
    5. '               ' → logprob: -6.663461208343506
    6. '                           ' → logprob: -11.038460731506348
    7. '           ' → logprob: -11.288460731506348
    8. '	curr' → logprob: -11.413460731506348
    9. '   ' → logprob: -11.538460731506348
    10. '       ' → logprob: -11.663460731506348

Token 309: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -1.1472419600977446e-06
    2. '_dt' → logprob: -14.375000953674316
    3. '_dc' → logprob: -15.875000953674316
    4. '_dx' → logprob: -16.500001907348633
    5. '	dp' → logprob: -17.000001907348633
    6. '_' → logprob: -17.125001907348633
    7. '_df' → logprob: -17.375001907348633
    8. 'dp' → logprob: -17.500001907348633
    9. '_ds' → logprob: -17.625001907348633
    10. '_dl' → logprob: -17.750001907348633

Token 310: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -1.2233183042553719e-05
    2. '[' → logprob: -12.125012397766113
    3. '[c' → logprob: -12.375012397766113
    4. '[curr' → logprob: -13.250012397766113
    5. 'y' → logprob: -14.250012397766113
    6. '[
' → logprob: -17.875011444091797
    7. '[new' → logprob: -18.125011444091797
    8. '[cur' → logprob: -18.250011444091797
    9. '	y' → logprob: -18.625011444091797
    10. '\[' → logprob: -18.750011444091797

Token 311: '_curr' (ID: 92432)
  Prédit: '_curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_curr' → logprob: -0.02123536728322506
    2. 'curr' → logprob: -3.896235466003418
    3. '[curr' → logprob: -7.896235466003418
    4. 'Curr' → logprob: -9.271235466003418
    5. '_prev' → logprob: -9.896235466003418
    6. 'urr' → logprob: -10.021235466003418
    7. ' curr' → logprob: -10.271235466003418
    8. '	curr' → logprob: -10.396235466003418
    9. '_cur' → logprob: -10.896235466003418
    10. 'y' → logprob: -12.146235466003418

Token 312: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4759235382080078
    2. ' =' → logprob: -0.9759235382080078
    3. ']' → logprob: -6.475923538208008
    4. ']=' → logprob: -8.100923538208008
    5. ' ]' → logprob: -13.850923538208008
    6. ')' → logprob: -15.725923538208008
    7. ')=' → logprob: -16.350923538208008
    8. ' =
' → logprob: -16.600923538208008
    9. ' ' → logprob: -17.100923538208008
    10. ',' → logprob: -17.225923538208008

Token 313: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022422909736633
    2. ' =' → logprob: -1.910224199295044
    3. '＝' → logprob: -18.16022491455078
    4. '.=' → logprob: -18.28522491455078
    5. '[' → logprob: -18.41022491455078
    6. '=

' → logprob: -18.41022491455078
    7. ']=' → logprob: -18.53522491455078
    8. '=
' → logprob: -19.03522491455078
    9. ']' → logprob: -19.28522491455078
    10. ',' → logprob: -19.28522491455078

Token 314: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.06196768581867218
    2. ' new' → logprob: -2.811967611312866
    3. '[new' → logprob: -20.561967849731445
    4. '_new' → logprob: -20.811967849731445
    5. '	new' → logprob: -21.186967849731445
    6. '新' → logprob: -21.686967849731445
    7. 'New' → logprob: -21.936967849731445
    8. '$new' → logprob: -22.186967849731445
    9. '                   ' → logprob: -22.311967849731445
    10. '
' → logprob: -22.311967849731445

Token 315: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -3.5597102396423e-05
    2. 'cost' → logprob: -10.250035285949707
    3. ' cost' → logprob: -16.625036239624023
    4. 'w' → logprob: -16.875036239624023
    5. '_c' → logprob: -17.500036239624023
    6. '-cost' → logprob: -17.625036239624023
    7. '_COST' → logprob: -17.625036239624023
    8. 'Cost' → logprob: -18.000036239624023
    9. '_code' → logprob: -18.250036239624023
    10. '_' → logprob: -18.750036239624023

Token 316: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00594479450955987
    2. '
' → logprob: -5.755944728851318
    3. '    
' → logprob: -7.255944728851318
    4. '<|end|>' → logprob: -7.380944728851318
    5. '        
' → logprob: -7.630944728851318
    6. '   ' → logprob: -7.755944728851318
    7. '                    
' → logprob: -8.880945205688477
    8. 'print' → logprob: -9.630945205688477
    9. '                   ' → logprob: -9.755945205688477
    10. '		
' → logprob: -10.755945205688477

Token 317: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022149110212922096
    2. '<|end|>' → logprob: -4.022149085998535
    3. '   ' → logprob: -6.772149085998535
    4. '    
' → logprob: -7.522149085998535
    5. '        
' → logprob: -7.522149085998535
    6. 'print' → logprob: -7.897149085998535
    7. '<|end|>' → logprob: -9.022149085998535
    8. '	' → logprob: -9.022149085998535
    9. '                    
' → logprob: -9.147149085998535
    10. ')' → logprob: -9.272149085998535

Token 318: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' (adapté à ' prev') → logprob: -0.07225380837917328
    2. '   ' → logprob: -2.697253704071045
    3. ' prev' → logprob: -6.197253704071045
    4. '	prev' → logprob: -8.697254180908203
    5. '       ' → logprob: -9.822254180908203
    6. '<|end|>' → logprob: -11.322254180908203
    7. '_prev' → logprob: -11.447254180908203
    8. '  ' → logprob: -11.572254180908203
    9. '(prev' → logprob: -11.822254180908203
    10. '    ' → logprob: -12.572254180908203

Token 319: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -8.2994620242971e-06
    2. '_dt' → logprob: -13.000008583068848
    3. '_dc' → logprob: -13.500008583068848
    4. '_ds' → logprob: -14.000008583068848
    5. '_dx' → logprob: -14.125008583068848
    6. '_' → logprob: -14.250008583068848
    7. '_df' → logprob: -14.750008583068848
    8. '_dl' → logprob: -14.875008583068848
    9. 'dp' → logprob: -15.125008583068848
    10. '_d' → logprob: -15.250008583068848

Token 320: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47480690479278564
    2. '=' → logprob: -0.9748069047927856
    3. ',' → logprob: -7.224806785583496
    4. '[:]' → logprob: -14.474806785583496
    5. ')' → logprob: -15.599806785583496
    6. '＝' → logprob: -16.224807739257812
    7. '[' → logprob: -16.349807739257812
    8. '<|end|>' → logprob: -16.474807739257812
    9. '.=' → logprob: -17.099807739257812
    10. '    ' → logprob: -17.224807739257812

Token 321: ' curr' (ID: 10495)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.0011703446507453918
    2. ' curr' → logprob: -6.7511701583862305
    3. 'cur' → logprob: -16.376171112060547
    4. '	curr' → logprob: -18.501171112060547
    5. '[curr' → logprob: -18.626171112060547
    6. '(curr' → logprob: -19.001171112060547
    7. 'current' → logprob: -19.876171112060547
    8. 'c' → logprob: -20.001171112060547
    9. 'Curr' → logprob: -20.251171112060547
    10. '_curr' → logprob: -20.876171112060547

Token 322: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -1.7432603272027336e-06
    2. 'p' → logprob: -13.875001907348633
    3. 'dp' → logprob: -14.500001907348633
    4. '_dt' → logprob: -16.500001907348633
    5. 'r' → logprob: -16.875001907348633
    6. 't' → logprob: -17.125001907348633
    7. '	dp' → logprob: -17.625001907348633
    8. '_py' → logprob: -17.875001907348633
    9. '_DP' → logprob: -18.750001907348633
    10. 'y' → logprob: -19.000001907348633

Token 323: '

' (ID: 279)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 324: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0027447198517620564
    2. 'min' → logprob: -6.252744674682617
    3. 'result' → logprob: -7.502744674682617
    4. '   ' → logprob: -8.627744674682617
    5. ' print' → logprob: -10.877744674682617
    6. 'answer' → logprob: -11.127744674682617
    7. 'minimum' → logprob: -11.127744674682617
    8. '#' → logprob: -11.252744674682617
    9. 'best' → logprob: -11.627744674682617
    10. '    
' → logprob: -12.627744674682617

Token 325: ' ans' (ID: 3345)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.010243531316518784
    2. 'result' → logprob: -5.1352434158325195
    3. 'min' → logprob: -5.6352434158325195
    4. 'answer' → logprob: -7.7602434158325195
    5. 'ans' (adapté à ' ans') → logprob: -8.88524341583252
    6. 'best' → logprob: -9.38524341583252
    7. '   ' → logprob: -10.26024341583252
    8. '#' → logprob: -11.13524341583252
    9. ' print' → logprob: -11.26024341583252
    10. 'res' → logprob: -12.01024341583252

Token 326: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12698426842689514
    2. '=' → logprob: -2.1269843578338623
    3. '_' → logprob: -9.876984596252441
    4. '_=' → logprob: -13.876984596252441
    5. ',' → logprob: -14.001984596252441
    6. ' =
' → logprob: -14.751984596252441
    7. '=min' → logprob: -15.001984596252441
    8. '_min' → logprob: -15.126984596252441
    9. ' ' → logprob: -15.126984596252441
    10. ')' → logprob: -15.376984596252441

Token 327: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.00017112065688706934
    2. 'int' → logprob: -9.250170707702637
    3. ' min' → logprob: -9.500170707702637
    4. 'str' → logprob: -16.625171661376953
    5. '(min' → logprob: -17.125171661376953
    6. 'max' → logprob: -18.250171661376953
    7. ' int' → logprob: -18.875171661376953
    8. '[min' → logprob: -18.875171661376953
    9. 'round' → logprob: -19.000171661376953
    10. '   ' → logprob: -19.250171661376953

Token 328: '(prev' (ID: 59594)
  Prédit: '(prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prev' → logprob: -6.2729995988775045e-06
    2. 'prev' → logprob: -12.000006675720215
    3. '(' → logprob: -17.0000057220459
    4. '	prev' → logprob: -20.1250057220459
    5. ' prev' → logprob: -20.2500057220459
    6. '(previous' → logprob: -20.5000057220459
    7. '(p' → logprob: -20.6250057220459
    8. '([' → logprob: -20.7500057220459
    9. '(curr' → logprob: -21.1250057220459
    10. '(ans' → logprob: -21.5000057220459

Token 329: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -1.9027791495318525e-05
    2. 'dp' → logprob: -10.875019073486328
    3. '	dp' → logprob: -17.375019073486328
    4. 'DP' → logprob: -18.250019073486328
    5. '_dt' → logprob: -18.625019073486328
    6. 'p' → logprob: -18.625019073486328
    7. '_' → logprob: -19.250019073486328
    8. 'Dp' → logprob: -19.625019073486328
    9. '_dc' → logprob: -19.625019073486328
    10. '.dp' → logprob: -19.875019073486328

Token 330: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.190178904333152e-05
    2. ')
' → logprob: -10.750031471252441
    3. ' )' → logprob: -11.750031471252441
    4. '())' → logprob: -13.375031471252441
    5. '})' → logprob: -15.750031471252441
    6. '<|end|>' → logprob: -15.750031471252441
    7. ' ' → logprob: -16.500032424926758
    8. '))' → logprob: -16.625032424926758
    9. '[' → logprob: -16.625032424926758
    10. '
' → logprob: -16.750032424926758

Token 331: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03883737698197365
    2. '
' → logprob: -3.663837432861328
    3. '   ' → logprob: -4.538837432861328
    4. ' print' → logprob: -7.163837432861328
    5. '<|end|>' → logprob: -7.163837432861328
    6. '```' → logprob: -9.163837432861328
    7. '    
' → logprob: -10.038837432861328
    8. '
' → logprob: -10.538837432861328
    9. '	print' → logprob: -11.163837432861328
    10. '  
' → logprob: -11.913837432861328

Token 332: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.04124722629785538
    2. '
' → logprob: -3.7912471294403076
    3. '   ' → logprob: -4.041247367858887
    4. '```' → logprob: -8.666247367858887
    5. ' print' → logprob: -9.666247367858887
    6. '
' → logprob: -11.041247367858887
    7. '    
' → logprob: -12.291247367858887
    8. '\n' → logprob: -12.541247367858887
    9. '``' → logprob: -12.791247367858887
    10. '\' → logprob: -14.541247367858887

Token 333: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.00020616286201402545
    2. '(int' → logprob: -8.500205993652344
    3. '(f' → logprob: -13.125205993652344
    4. '(' → logprob: -14.625205993652344
    5. 'ans' → logprob: -15.875205993652344
    6. '(round' → logprob: -16.625205993652344
    7. '()' → logprob: -17.500205993652344
    8. '(abs' → logprob: -17.875205993652344
    9. '(answer' → logprob: -17.875205993652344
    10. ' (' → logprob: -18.875205993652344

Token 334: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.246537173457909e-06
    2. '()' → logprob: -13.500003814697266
    3. '())' → logprob: -13.500003814697266
    4. ' )' → logprob: -14.250003814697266
    5. ')`' → logprob: -15.250003814697266
    6. '))' → logprob: -15.375003814697266
    7. ')}' → logprob: -16.750003814697266
    8. '`)' → logprob: -17.000003814697266
    9. ')
' → logprob: -17.375003814697266
    10. '})' → logprob: -17.625003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 332
Tokens correctement prédits (1ère position, stricte): 155
Tokens correctement prédits (1ère position, avec adaptation): 165
Tokens correctement prédits (top 10): 273
Précision stricte (1ère position): 46.69%
Précision adaptée (1ère position): 49.70%
Précision (top 10): 82.23%
================================================================================
